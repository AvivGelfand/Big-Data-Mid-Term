70555689	javascript|python|django	How to convert javascript object to python readable	"<p>I'm trying to parse below object from javascript post data into python using ast.literal_eval(obj) but ending up into below error</p> <p>Error:</p> <pre><code>malformed node or string: &lt;_ast.Name object at 0x7fb484eb8070&gt; </code></pre> <p>Object Value:</p> <pre><code>'[{&quot;dose&quot;:&quot;1&quot;,&quot;duration&quot;:&quot;2&quot;,&quot;name&quot;:&quot;Item1&quot;,&quot;code&quot;:&quot;pharma2&quot;,&quot;usage&quot;:{&quot;morning&quot;:true,&quot;afternoon&quot;:false,&quot;evening&quot;:false,&quot;night&quot;:false,&quot;sos&quot;:false}},{&quot;dose&quot;:&quot;1&quot;,&quot;duration&quot;:&quot;4&quot;,&quot;name&quot;:&quot;Item2&quot;,&quot;code&quot;:&quot;pharma1&quot;,&quot;usage&quot;:{&quot;morning&quot;:false,&quot;afternoon&quot;:false,&quot;evening&quot;:false,&quot;night&quot;:true,&quot;sos&quot;:false}}]' </code></pre>"	2022-01-02 11:49:13.033 UTC	70555749	"<p><a href=""https://github.com/dmeranda/demjson"" rel=""nofollow noreferrer"">demjson.decode()</a></p> <pre><code>import demjson  jsObject = '{&quot;dose&quot;:&quot;1&quot;,&quot;duration&quot;:&quot;2&quot;,&quot;name&quot;:&quot;Item1&quot;,&quot;code&quot;:&quot;pharma2&quot;,&quot;usage&quot;:{&quot;morning&quot;:true,&quot;afternoon&quot;:false,&quot;evening&quot;:false,&quot;night&quot;:false,&quot;sos&quot;:false}},{&quot;dose&quot;:&quot;1&quot;,&quot;duration&quot;:&quot;4&quot;,&quot;name&quot;:&quot;Item2&quot;,&quot;code&quot;:&quot;pharma1&quot;,&quot;usage&quot;:{&quot;morning&quot;:false,&quot;afternoon&quot;:false,&quot;evening&quot;:false,&quot;night&quot;:true,&quot;sos&quot;:false}}'  pythonObject = demjson.decode(jsObject) </code></pre>"			2022-01-02 11:57:23.26 UTC
70572234	javascript|python	Equivalent to JavaScript mapping for python?	"<p>Could someone help me find a way to do the function below in python?</p> <p>I do think I could use a for loop with indexes and do it that way but there might be an easier method with pythons list comprehension</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-js lang-js prettyprint-override""><code>let rows = [['10kg', '12.5', '1.25', '8'],    ['25kg', '28.75', '1.15', '6'],    ['50kg', '50', '1.0', '5'],    ['100kg', '100', '1.0', '3'],    ['250kg', '250', '1.0', '5'],    ['500kg', '500', '1.0', '5'],    ['1liter', '1000', '1.0', '5']];  let labels = [""Weight"",""Price"",""Price Per"",""Amount""];  let values = rows.map((row, idx) =&gt; {   let d = {id: idx};   row.forEach((c, i) =&gt; d[labels[i]] = c);   return d; });  console.log(values)  let columns = labels.map(l =&gt; ({field: l, width: 150}));  console.log(columns);</code></pre> </div> </div> </p>"	2022-01-03 22:44:36.7 UTC	70572400	"<p>maybe this is the best i can do for you</p> <pre class=""lang-py prettyprint-override""><code>rows = [['10kg', '12.5', '1.25', '8'],    ['25kg', '28.75', '1.15', '6'],    ['50kg', '50', '1.0', '5'],    ['100kg', '100', '1.0', '3'],    ['250kg', '250', '1.0', '5'],    ['500kg', '500', '1.0', '5'],    ['1liter', '1000', '1.0', '5']]  labels = [&quot;Weight&quot;,&quot;Price&quot;,&quot;Price Per&quot;,&quot;Amount&quot;]  values = [] for y,i in enumerate(rows):     a = {}     a[&quot;id&quot;] = y     for index,x in enumerate(i):         a[labels[index]] = x     values.append(a)      print(values)  columns = [{&quot;fields&quot;: i, &quot;width&quot;:150} for i in labels] print(columns) </code></pre>"			2022-01-03 23:07:04.42 UTC
70572234	javascript|python	Equivalent to JavaScript mapping for python?	"<p>Could someone help me find a way to do the function below in python?</p> <p>I do think I could use a for loop with indexes and do it that way but there might be an easier method with pythons list comprehension</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-js lang-js prettyprint-override""><code>let rows = [['10kg', '12.5', '1.25', '8'],    ['25kg', '28.75', '1.15', '6'],    ['50kg', '50', '1.0', '5'],    ['100kg', '100', '1.0', '3'],    ['250kg', '250', '1.0', '5'],    ['500kg', '500', '1.0', '5'],    ['1liter', '1000', '1.0', '5']];  let labels = [""Weight"",""Price"",""Price Per"",""Amount""];  let values = rows.map((row, idx) =&gt; {   let d = {id: idx};   row.forEach((c, i) =&gt; d[labels[i]] = c);   return d; });  console.log(values)  let columns = labels.map(l =&gt; ({field: l, width: 150}));  console.log(columns);</code></pre> </div> </div> </p>"	2022-01-03 22:44:36.7 UTC	70572278	"<p>In Python, you can create a dict from the corresponding elements of two lists with <code>dict(zip(keys, values))</code>.</p> <pre><code>values = [dict(zip(labels, row), id=idx) for idx, row in enumerate(rows)] columns = [{'field': l, 'width': 150} for l in labels] </code></pre>"			2022-01-03 22:50:37.043 UTC
70594280	solana|pynacl|solana-web3js|solana-program-library	How to verify with Python (PyNaCl) a message signed by Solana wallet adapter (javascript)	"<p>I have signed a message using <a href=""https://github.com/solana-labs/wallet-adapter/blob/master/FAQ.md#how-can-i-sign-and-verify-messages"" rel=""nofollow noreferrer"">Solana's wallet adapter example</a>:</p> <pre><code>import { useWallet } from '@solana/wallet-adapter-react'; import bs58 from 'bs58'; import React, { FC, useCallback } from 'react'; import { sign } from 'tweetnacl';  export const SignMessageButton: FC = () =&gt; {     const { publicKey, signMessage } = useWallet();      const onClick = useCallback(async () =&gt; {         try {             // `publicKey` will be null if the wallet isn't connected             if (!publicKey) throw new Error('Wallet not connected!');             // `signMessage` will be undefined if the wallet doesn't support it             if (!signMessage) throw new Error('Wallet does not support message signing!');              // Encode anything as bytes             const message = new TextEncoder().encode(&quot;hello&quot;);             // Sign the bytes using the wallet             const signature = await signMessage(message);             // Verify that the bytes were signed using the private key that matches the known public key             if (!sign.detached.verify(message, signature, publicKey.toBytes())) throw new Error('Invalid signature!');              alert(`Message signature: ${bs58.encode(signature)}`);         } catch (error: any) {             alert(`Signing failed: ${error?.message}`);         }     }, [publicKey, signMessage]);      return signMessage ? (&lt;button onClick={onClick} disabled={!publicKey}&gt;Sign Message&lt;/button&gt;) : null; };  </code></pre> <ul> <li>Pubkey used: <code>DKpHyR1WjWE23E3xizPUhefZKmpMrMXNBVfoxQ7WXCRR</code></li> <li>Message signed: <code>hello</code></li> <li>Signature received: <code>3EWDdtU1w8pWkr6fg8faJvKn1wBZmNjgf5kUx4Pn5gw4HeBPYVDm7cTHNqpRVMami6yX36jdaeZacv9GXR19Jzye</code></li> </ul> <p>But I am not being able to verify the signed message using Python 3.9 with <a href=""https://pypi.org/project/PyNaCl/"" rel=""nofollow noreferrer"">PyNaCl</a> and <a href=""https://michaelhly.github.io/solana-py/"" rel=""nofollow noreferrer"">Solana-py</a>. I have tried the following:</p> <pre><code>from nacl.signing import VerifyKey from solana.publickey import PublicKey import base58  pubkey = bytes(PublicKey(&quot;DKpHyR1WjWE23E3xizPUhefZKmpMrMXNBVfoxQ7WXCRR&quot;)) msg = bytes(&quot;hello&quot;, 'utf8') signed = bytes(&quot;3EWDdtU1w8pWkr6fg8faJvKn1wBZmNjgf5kUx4Pn5gw4HeBPYVDm7cTHNqpRVMami6yX36jdaeZacv9GXR19Jzye&quot;, 'utf8')  result = VerifyKey(     pubkey ).verify(     smessage=base58.b58decode(msg),     signature=base58.b58decode(signed) )  </code></pre> <p>But verification returns: <code>nacl.exceptions.BadSignatureError: Signature was forged or corrupt.</code></p> <p>Somebody knows what is wrong? Could it be an encoding problem? Seems like JS uses the following byte types:</p> <pre><code>pubkey:  Uint8Array(32) [144, 188, 240, 167, 187, 75, 30, 17, 232, 175, 91, 222, 73, 68, 183, 218, 108, 56, 249, 64, 250, 61, 111, 168, 194, 233, 159, 2, 247, 5, 175, 124, buffer: ArrayBuffer(32), byteLength: 32, byteOffset: 0, length: 32] message: Uint8Array(44) [57, 85, 65, 81, 76, 53, 81, 68, 67, 89, 122, 70, 112, 107, 119, 70, 88, 52, 88, 75, 53, 70, 119, 107, 66, 54, 67, 57, 116, 57, 116, 120, 65, 89, 52, 102, 102, 122, 69, 52, 114, 97, 113, 84, buffer: ArrayBuffer(44), byteLength: 44, byteOffset: 0, length: 44] signed:  Uint8Array(64) [111, 173, 219, 10, 169, 113, 163, 35, 30, 162, 250, 243, 191, 106, 195, 99, 238, 34, 49, 192, 19, 92, 111, 142, 57, 31, 158, 235, 65, 219, 146, 176, 174, 48, 30, 255, 160, 90, 174, 179, 219, 197, 252, 189, 150, 225, 160, 133, 163, 109, 159, 80, 56, 191, 11, 1, 91, 111, 196, 214, 231, 84, 11, 1, buffer: ArrayBuffer(64), byteLength: 64, byteOffset: 0, length: 64] </code></pre> <p>And in python:</p> <pre><code>pubkey: b'\xb7\x1e+\xef\xe19#y}\xa4L\xf2K\rK\xc3\xbby\x93\x1c\x00L\xe1&lt;\x19g`-\x9d\xd5\xee\x94' msg:    b'Cn8eVZg' signed: b'3EWDdtU1w8pWkr6fg8faJvKn1wBZmNjgf5kUx4Pn5gw4HeBPYVDm7cTHNqpRVMami6yX36jdaeZacv9GXR19Jzye' </code></pre> <p>Do I need to use some different encoding on Python?</p>"	2022-01-05 14:08:39.353 UTC	70612251	"<p>Thanks for providing a concrete example on this, you're very close!  The encoding is absolutely the issue here -- the pubkey is correctly encoded in Python as bytes.  That first byte of <code>\x90</code>, encoded as two hex values, is <code>144</code> in JS, and you can check that in Python with: <code>int('90', 16) = 144</code>.</p> <p>So to verify your key, you can instead use the <code>base58</code> package <a href=""https://github.com/keis/base58"" rel=""nofollow noreferrer"">https://github.com/keis/base58</a> and do:</p> <pre><code>from nacl.signing import VerifyKey from solana.publickey import PublicKey import base58  pubkey = bytes(PublicKey(&quot;DKpHyR1WjWE23E3xizPUhefZKmpMrMXNBVfoxQ7WXCRR&quot;)) msg = bytes(&quot;hello&quot;, 'utf8') signed = bytes(&quot;3EWDdtU1w8pWkr6fg8faJvKn1wBZmNjgf5kUx4Pn5gw4HeBPYVDm7cTHNqpRVMami6yX36jdaeZacv9GXR19Jzye&quot;, 'utf8')  result = VerifyKey(     pubkey ).verify(     smessage=msg,       signature=base58.b58decode(signed) ) </code></pre> <p>Note.- on <strong>smessage</strong> you don't need to use b58, because it was encoded with <code>new TextEncoder().encode(&quot;hello&quot;)</code>.</p> <p>Second option: if you already have the UInt8Array from JS, you can do:</p> <pre><code>result = VerifyKey(bytes(PublicKey(&quot;HERE_THE_PUB_KEY&quot;))   ).verify(     smessage=bytes([byte1, byte2, byte3, ...])     signature=bytes([byte1, byte2, byte3, ...]) ) </code></pre>"			2022-01-06 18:57:19.36 UTC
70618151	python	Javascript like Math.random() in python (17 decimal point precision)	"<p>Python <code>ramdon.random()</code> gives random number with 15 precision point. Is there a way to get 17 point just like javasctip <code>Math.random()</code>.</p> <p>I tried this and it works. Any other way?</p> <pre><code>import random print(format(random.random(), '.17g')) </code></pre> <p>P.S.: I am not from Math background (I'm from biology).</p> <p>My actual need to mimic JavaScript random as one of the website uses that to dynamically create some validation which I want to do with python to scrape that site.</p>"	2022-01-07 07:55:08.393 UTC	70618353	<p>You can print your random float with 17 digits after the decimal point like this:</p> <pre><code>import random print(f'{random.random():.17f}') </code></pre> <p>The internal precision of a Python float is accurate enough for many if not most needs. If you need greater precision you should consider looking into the <em>decimal</em> module</p>			2022-01-07 08:13:33.907 UTC
70618151	python	Javascript like Math.random() in python (17 decimal point precision)	"<p>Python <code>ramdon.random()</code> gives random number with 15 precision point. Is there a way to get 17 point just like javasctip <code>Math.random()</code>.</p> <p>I tried this and it works. Any other way?</p> <pre><code>import random print(format(random.random(), '.17g')) </code></pre> <p>P.S.: I am not from Math background (I'm from biology).</p> <p>My actual need to mimic JavaScript random as one of the website uses that to dynamically create some validation which I want to do with python to scrape that site.</p>"	2022-01-07 07:55:08.393 UTC	70618357	"<p>Both <code>Math.random()</code> and <code>random.random()</code> return IEEE 754 doubles.</p> <p>The difference you're seeing is because of the way they're converted to strings. Their length is not constant, see this code for example:</p> <pre class=""lang-js prettyprint-override""><code>for (let i = 0; i &lt; 10000000; i++) {   const s = Math.random().toString()   if (!counter[s.length]) {     counter[s.length] = 1   } else {     counter[s.length]++   } } </code></pre> <pre><code>{   &quot;12&quot;: 5,   &quot;13&quot;: 47,   &quot;14&quot;: 700,   &quot;15&quot;: 6722,   &quot;16&quot;: 66634,   &quot;17&quot;: 665327,   &quot;18&quot;: 6112214,   &quot;19&quot;: 2813254,   &quot;20&quot;: 302418,   &quot;21&quot;: 29547,   &quot;22&quot;: 2824,   &quot;23&quot;: 281,   &quot;24&quot;: 27 } </code></pre> <p>And for Python:</p> <pre class=""lang-py prettyprint-override""><code>&gt;&gt;&gt; Counter(len(str(random.random())) for _ in range(10000000)) Counter({  11: 1,  12: 8,  13: 66,  14: 676,  15: 6678,  16: 66628,  17: 665271,  18: 6109863,  19: 2815051,  20: 302708,  21: 30569,  22: 2481 }) </code></pre>"			2022-01-07 08:14:23.933 UTC
70627905	python	Python equivalent of JavaScript FindIndex?	"<p>I am trying to create a search function in Python that does the same as my JavaScript function. It should just check if the id of one array of objects exists in the other array of objects, if it does not exist I need to add that product to DB. However I can't seem to figure it out in Python (still learning), this is the JS version (works fine)</p> <pre><code>for (let i = 0, length = NewProducts.length; i &lt; length; ++i) {   if (Products.findIndex((o) =&gt; o.id === NewProducts[i].id) == -1){     --- add NewProducts[i] to DB --   } } </code></pre> <p>and this is what I have for the Python equivalent:</p> <pre><code>i = 0 while i &lt; len(NewProducts):     exists = [x for x['id'] in Products if x.attr == NewProducts][i]['id']     if exists:          do nothing with NewProducts[i]     else:         add NewProducts[i] to DB </code></pre>"	2022-01-07 22:35:07.043 UTC	70628009	"<p>Python has short-hand that you can use in this case:</p> <pre><code>new_products = [1, 2, 3, 6] existing_products = [1, 3, 4, 5]  for to_add_to_db in set(new_products) - set(existing_products):     function_to_add_to_db(to_add_to_db) </code></pre> <p>Essentially what this does is to create two sets and the subtraction means that only those from set <code>new_products</code> remain in the iterator that are not in <code>existing_products</code>. Mathematically speaking this is the left difference.</p>"			2022-01-07 22:47:09.217 UTC
70627905	python	Python equivalent of JavaScript FindIndex?	"<p>I am trying to create a search function in Python that does the same as my JavaScript function. It should just check if the id of one array of objects exists in the other array of objects, if it does not exist I need to add that product to DB. However I can't seem to figure it out in Python (still learning), this is the JS version (works fine)</p> <pre><code>for (let i = 0, length = NewProducts.length; i &lt; length; ++i) {   if (Products.findIndex((o) =&gt; o.id === NewProducts[i].id) == -1){     --- add NewProducts[i] to DB --   } } </code></pre> <p>and this is what I have for the Python equivalent:</p> <pre><code>i = 0 while i &lt; len(NewProducts):     exists = [x for x['id'] in Products if x.attr == NewProducts][i]['id']     if exists:          do nothing with NewProducts[i]     else:         add NewProducts[i] to DB </code></pre>"	2022-01-07 22:35:07.043 UTC	70628023	"<p>I don't think that you need <code>index</code> function here.</p> <pre class=""lang-py prettyprint-override""><code>for product in NewProducts:   if product in Products:     do nothing with NewProducts[i]   else:     add NewProducts[i] to DB </code></pre>"			2022-01-07 22:49:29.983 UTC
70627905	python	Python equivalent of JavaScript FindIndex?	"<p>I am trying to create a search function in Python that does the same as my JavaScript function. It should just check if the id of one array of objects exists in the other array of objects, if it does not exist I need to add that product to DB. However I can't seem to figure it out in Python (still learning), this is the JS version (works fine)</p> <pre><code>for (let i = 0, length = NewProducts.length; i &lt; length; ++i) {   if (Products.findIndex((o) =&gt; o.id === NewProducts[i].id) == -1){     --- add NewProducts[i] to DB --   } } </code></pre> <p>and this is what I have for the Python equivalent:</p> <pre><code>i = 0 while i &lt; len(NewProducts):     exists = [x for x['id'] in Products if x.attr == NewProducts][i]['id']     if exists:          do nothing with NewProducts[i]     else:         add NewProducts[i] to DB </code></pre>"	2022-01-07 22:35:07.043 UTC	70627997	"<p>In JavaScript, although <code>.findIndex</code> works for your purpose, you would actually use <code>.some</code> for this -- it doesn't require a comparison with -1 and just returns a boolean.</p> <p>In JavaScript this would be better written as:</p> <pre class=""lang-js prettyprint-override""><code>for (let product of NewProducts) {     if (!Products.some((o) =&gt; o.id === product.id)) {         // add product to DB     } } </code></pre> <p>In Python this would be:</p> <pre class=""lang-py prettyprint-override""><code>for product in NewProducts:     if not any(x['id'] == product['id'] for x in Products):         # add product to DB </code></pre>"			2022-01-07 22:46:12.017 UTC
70644965	python|beautifulsoup	Scraping JavaScript var from website using Beautiful Soup in Python	"<p>I'm scraping a website's HTML after a &quot;GET&quot; request. There is product1218181 parameter on the site I want to extract data from, so there is product{1218181}. I'm using Beautiful soup since it's what I usually use but I can't seem to figure out how to get a javascript variable from the html. HTML like so:</p> <pre><code>&lt;script&gt;var product1218181 = {&quot;name&quot;:&quot;XIAOMI Poco X3 Pro 256 GB Akıllı Telefon Bronz&quot;,&quot;id&quot;:&quot;1218181&quot;,&quot;price&quot;:&quot;5799.00&quot;,&quot;brand&quot;:&quot;XIAOMI&quot;,&quot;ean&quot;:&quot;6934177738371&quot;,&quot;dimension25&quot;:&quot;InStock&quot;,&quot;dimension26&quot;:11.90,&quot;dimension24&quot;:18.00,&quot;category&quot;:&quot;Telefon&quot;,&quot;dimension9&quot;:&quot;Cep Telefonları&quot;,&quot;dimension10&quot;:&quot;Android Telefonlar&quot;};&lt;/script&gt; </code></pre> <p>I would like to scrape like this:</p> <pre><code>name: XIAOMI Poco X3 Pro 256 GB Akıllı Telefon id: 1218181 price: 5799.00 brand: XIAOMI </code></pre> <p>Update</p> <p>Full code like this, I would like to scrape this website products infos</p> <pre><code>import requests import re, json from bs4 import BeautifulSoup  URL = &quot;https://www.mediamarkt.com.tr/tr/category/_cep-telefonlar%C4%B1-504171.html&quot; page = requests.get(URL)  soup = BeautifulSoup(page.content, &quot;html.parser&quot;)  results = soup.find(id=&quot;category&quot;)  test = '&lt;script&gt;var product1218181 = {&quot;name&quot;:&quot;XIAOMI Poco X3 Pro 256 GB Akıllı Telefon Bronz&quot;,&quot;id&quot;:&quot;1218181&quot;,&quot;price&quot;:&quot;5799.00&quot;,&quot;brand&quot;:&quot;XIAOMI&quot;,&quot;ean&quot;:&quot;6934177738371&quot;,&quot;dimension25&quot;:&quot;InStock&quot;,&quot;dimension26&quot;:11.90,&quot;dimension24&quot;:18.00,&quot;category&quot;:&quot;Telefon&quot;,&quot;dimension9&quot;:&quot;Cep Telefonları&quot;,&quot;dimension10&quot;:&quot;Android Telefonlar&quot;};&lt;/script&gt;'  pattern = re.compile('.*?var product1218181 = (.*?);.*?') match = pattern.match(test) if match is not None:     data = json.loads(match.groups()[0])     for key, value in data.items():         print(key, &quot;:&quot;, value) </code></pre>"	2022-01-09 19:54:09.837 UTC	70645147	"<p>I wrote this script to parse the JSON inside that script tag. I used <code>json</code> library along with BeautifulSoup.</p> <p>First I looped through all scripts in the websites (in case there are multiple scripts and we don't have an <code>id</code> or <code>class</code> for each script) and selected the script that we need, the one that contains &quot;name&quot; (You can make it more accurate).</p> <p>Then with simple string modifications I was able to extract the dictionary / json data.</p> <pre><code>from bs4 import BeautifulSoup import json html = '''&lt;script&gt;var product1218181 = {&quot;name&quot;:&quot;XIAOMI Poco X3 Pro 256 GB Akıllı Telefon Bronz&quot;,&quot;id&quot;:&quot;1218181&quot;,&quot;price&quot;:&quot;5799.00&quot;,&quot;brand&quot;:&quot;XIAOMI&quot;,&quot;ean&quot;:&quot;6934177738371&quot;,&quot;dimension25&quot;:&quot;InStock&quot;,&quot;dimension26&quot;:11.90,&quot;dimension24&quot;:18.00,&quot;category&quot;:&quot;Telefon&quot;,&quot;dimension9&quot;:&quot;Cep Telefonları&quot;,&quot;dimension10&quot;:&quot;Android Telefonlar&quot;};&lt;/script&gt;'''  soup = BeautifulSoup(html, 'html.parser') for item in soup.find_all('script'):     if '= {&quot;name&quot;:' in item.text:         dictionary = item.text.split(' = ', 1)[-1][:-1]         jsonResponse = json.loads(dictionary)         print(jsonResponse) </code></pre>"			2022-01-09 20:16:51.98 UTC
70644965	python|beautifulsoup	Scraping JavaScript var from website using Beautiful Soup in Python	"<p>I'm scraping a website's HTML after a &quot;GET&quot; request. There is product1218181 parameter on the site I want to extract data from, so there is product{1218181}. I'm using Beautiful soup since it's what I usually use but I can't seem to figure out how to get a javascript variable from the html. HTML like so:</p> <pre><code>&lt;script&gt;var product1218181 = {&quot;name&quot;:&quot;XIAOMI Poco X3 Pro 256 GB Akıllı Telefon Bronz&quot;,&quot;id&quot;:&quot;1218181&quot;,&quot;price&quot;:&quot;5799.00&quot;,&quot;brand&quot;:&quot;XIAOMI&quot;,&quot;ean&quot;:&quot;6934177738371&quot;,&quot;dimension25&quot;:&quot;InStock&quot;,&quot;dimension26&quot;:11.90,&quot;dimension24&quot;:18.00,&quot;category&quot;:&quot;Telefon&quot;,&quot;dimension9&quot;:&quot;Cep Telefonları&quot;,&quot;dimension10&quot;:&quot;Android Telefonlar&quot;};&lt;/script&gt; </code></pre> <p>I would like to scrape like this:</p> <pre><code>name: XIAOMI Poco X3 Pro 256 GB Akıllı Telefon id: 1218181 price: 5799.00 brand: XIAOMI </code></pre> <p>Update</p> <p>Full code like this, I would like to scrape this website products infos</p> <pre><code>import requests import re, json from bs4 import BeautifulSoup  URL = &quot;https://www.mediamarkt.com.tr/tr/category/_cep-telefonlar%C4%B1-504171.html&quot; page = requests.get(URL)  soup = BeautifulSoup(page.content, &quot;html.parser&quot;)  results = soup.find(id=&quot;category&quot;)  test = '&lt;script&gt;var product1218181 = {&quot;name&quot;:&quot;XIAOMI Poco X3 Pro 256 GB Akıllı Telefon Bronz&quot;,&quot;id&quot;:&quot;1218181&quot;,&quot;price&quot;:&quot;5799.00&quot;,&quot;brand&quot;:&quot;XIAOMI&quot;,&quot;ean&quot;:&quot;6934177738371&quot;,&quot;dimension25&quot;:&quot;InStock&quot;,&quot;dimension26&quot;:11.90,&quot;dimension24&quot;:18.00,&quot;category&quot;:&quot;Telefon&quot;,&quot;dimension9&quot;:&quot;Cep Telefonları&quot;,&quot;dimension10&quot;:&quot;Android Telefonlar&quot;};&lt;/script&gt;'  pattern = re.compile('.*?var product1218181 = (.*?);.*?') match = pattern.match(test) if match is not None:     data = json.loads(match.groups()[0])     for key, value in data.items():         print(key, &quot;:&quot;, value) </code></pre>"	2022-01-09 19:54:09.837 UTC	70645486	"<p>Try this:</p> <pre><code>import requests import re, json from bs4 import BeautifulSoup  URL = &quot;https://www.mediamarkt.com.tr/tr/category/_cep-telefonlar%C4%B1-504171.html&quot;  page = requests.get(URL)  soup = BeautifulSoup(page.content, &quot;html.parser&quot;)  results = soup.find(id=&quot;category&quot;).find(&quot;script&quot;).text  data = json.loads(re.findall(&quot;(?:{).*(?:})&quot;, results)[0])  print(data)  </code></pre>"			2022-01-09 21:02:12.967 UTC
70644965	python|beautifulsoup	Scraping JavaScript var from website using Beautiful Soup in Python	"<p>I'm scraping a website's HTML after a &quot;GET&quot; request. There is product1218181 parameter on the site I want to extract data from, so there is product{1218181}. I'm using Beautiful soup since it's what I usually use but I can't seem to figure out how to get a javascript variable from the html. HTML like so:</p> <pre><code>&lt;script&gt;var product1218181 = {&quot;name&quot;:&quot;XIAOMI Poco X3 Pro 256 GB Akıllı Telefon Bronz&quot;,&quot;id&quot;:&quot;1218181&quot;,&quot;price&quot;:&quot;5799.00&quot;,&quot;brand&quot;:&quot;XIAOMI&quot;,&quot;ean&quot;:&quot;6934177738371&quot;,&quot;dimension25&quot;:&quot;InStock&quot;,&quot;dimension26&quot;:11.90,&quot;dimension24&quot;:18.00,&quot;category&quot;:&quot;Telefon&quot;,&quot;dimension9&quot;:&quot;Cep Telefonları&quot;,&quot;dimension10&quot;:&quot;Android Telefonlar&quot;};&lt;/script&gt; </code></pre> <p>I would like to scrape like this:</p> <pre><code>name: XIAOMI Poco X3 Pro 256 GB Akıllı Telefon id: 1218181 price: 5799.00 brand: XIAOMI </code></pre> <p>Update</p> <p>Full code like this, I would like to scrape this website products infos</p> <pre><code>import requests import re, json from bs4 import BeautifulSoup  URL = &quot;https://www.mediamarkt.com.tr/tr/category/_cep-telefonlar%C4%B1-504171.html&quot; page = requests.get(URL)  soup = BeautifulSoup(page.content, &quot;html.parser&quot;)  results = soup.find(id=&quot;category&quot;)  test = '&lt;script&gt;var product1218181 = {&quot;name&quot;:&quot;XIAOMI Poco X3 Pro 256 GB Akıllı Telefon Bronz&quot;,&quot;id&quot;:&quot;1218181&quot;,&quot;price&quot;:&quot;5799.00&quot;,&quot;brand&quot;:&quot;XIAOMI&quot;,&quot;ean&quot;:&quot;6934177738371&quot;,&quot;dimension25&quot;:&quot;InStock&quot;,&quot;dimension26&quot;:11.90,&quot;dimension24&quot;:18.00,&quot;category&quot;:&quot;Telefon&quot;,&quot;dimension9&quot;:&quot;Cep Telefonları&quot;,&quot;dimension10&quot;:&quot;Android Telefonlar&quot;};&lt;/script&gt;'  pattern = re.compile('.*?var product1218181 = (.*?);.*?') match = pattern.match(test) if match is not None:     data = json.loads(match.groups()[0])     for key, value in data.items():         print(key, &quot;:&quot;, value) </code></pre>"	2022-01-09 19:54:09.837 UTC	70645050	"<p>You can use <a href=""https://docs.python.org/3/library/re.html"" rel=""nofollow noreferrer"">regex</a> (<a href=""https://docs.python.org/3/library/re.html"" rel=""nofollow noreferrer""><code>re</code></a> module) to extract the the line and then treat it with <a href=""https://docs.python.org/3/library/json.html#json.loads"" rel=""nofollow noreferrer""><code>json.loads()</code></a> to parse the json value into a <code>dict</code></p> <p>Here is a sample snippet:</p> <pre><code>import re, json  test = '&lt;script&gt;var product1218181 = {&quot;name&quot;:&quot;XIAOMI Poco X3 Pro 256 GB Akıllı Telefon Bronz&quot;,&quot;id&quot;:&quot;1218181&quot;,&quot;price&quot;:&quot;5799.00&quot;,&quot;brand&quot;:&quot;XIAOMI&quot;,&quot;ean&quot;:&quot;6934177738371&quot;,&quot;dimension25&quot;:&quot;InStock&quot;,&quot;dimension26&quot;:11.90,&quot;dimension24&quot;:18.00,&quot;category&quot;:&quot;Telefon&quot;,&quot;dimension9&quot;:&quot;Cep Telefonları&quot;,&quot;dimension10&quot;:&quot;Android Telefonlar&quot;};&lt;/script&gt;'  pattern = re.compile('.*?var product.+ = (.*?);.*?') match = pattern.match(test) if match is not None:     data = json.loads(match.groups()[0])     for key, value in data.items():         print(key, &quot;:&quot;, value) </code></pre> <p><strong>output:</strong></p> <pre><code>name : XIAOMI Poco X3 Pro 256 GB Akıllı Telefon Bronz id : 1218181 price : 5799.00 brand : XIAOMI ean : 6934177738371 dimension25 : InStock dimension26 : 11.9 dimension24 : 18.0 category : Telefon dimension9 : Cep Telefonları dimension10 : Android Telefonlar </code></pre>"			2022-01-09 20:04:56.8 UTC
70644965	python|beautifulsoup	Scraping JavaScript var from website using Beautiful Soup in Python	"<p>I'm scraping a website's HTML after a &quot;GET&quot; request. There is product1218181 parameter on the site I want to extract data from, so there is product{1218181}. I'm using Beautiful soup since it's what I usually use but I can't seem to figure out how to get a javascript variable from the html. HTML like so:</p> <pre><code>&lt;script&gt;var product1218181 = {&quot;name&quot;:&quot;XIAOMI Poco X3 Pro 256 GB Akıllı Telefon Bronz&quot;,&quot;id&quot;:&quot;1218181&quot;,&quot;price&quot;:&quot;5799.00&quot;,&quot;brand&quot;:&quot;XIAOMI&quot;,&quot;ean&quot;:&quot;6934177738371&quot;,&quot;dimension25&quot;:&quot;InStock&quot;,&quot;dimension26&quot;:11.90,&quot;dimension24&quot;:18.00,&quot;category&quot;:&quot;Telefon&quot;,&quot;dimension9&quot;:&quot;Cep Telefonları&quot;,&quot;dimension10&quot;:&quot;Android Telefonlar&quot;};&lt;/script&gt; </code></pre> <p>I would like to scrape like this:</p> <pre><code>name: XIAOMI Poco X3 Pro 256 GB Akıllı Telefon id: 1218181 price: 5799.00 brand: XIAOMI </code></pre> <p>Update</p> <p>Full code like this, I would like to scrape this website products infos</p> <pre><code>import requests import re, json from bs4 import BeautifulSoup  URL = &quot;https://www.mediamarkt.com.tr/tr/category/_cep-telefonlar%C4%B1-504171.html&quot; page = requests.get(URL)  soup = BeautifulSoup(page.content, &quot;html.parser&quot;)  results = soup.find(id=&quot;category&quot;)  test = '&lt;script&gt;var product1218181 = {&quot;name&quot;:&quot;XIAOMI Poco X3 Pro 256 GB Akıllı Telefon Bronz&quot;,&quot;id&quot;:&quot;1218181&quot;,&quot;price&quot;:&quot;5799.00&quot;,&quot;brand&quot;:&quot;XIAOMI&quot;,&quot;ean&quot;:&quot;6934177738371&quot;,&quot;dimension25&quot;:&quot;InStock&quot;,&quot;dimension26&quot;:11.90,&quot;dimension24&quot;:18.00,&quot;category&quot;:&quot;Telefon&quot;,&quot;dimension9&quot;:&quot;Cep Telefonları&quot;,&quot;dimension10&quot;:&quot;Android Telefonlar&quot;};&lt;/script&gt;'  pattern = re.compile('.*?var product1218181 = (.*?);.*?') match = pattern.match(test) if match is not None:     data = json.loads(match.groups()[0])     for key, value in data.items():         print(key, &quot;:&quot;, value) </code></pre>"	2022-01-09 19:54:09.837 UTC	70645046	"<p>You can select the variable in your <code>requests.get().text</code> with regex and load the string with <code>json.loads()</code>:</p> <pre><code>m = re.search(r'var product.+ = ({.*})', page.text) json.loads(m.group(1)) </code></pre> <h3>Example to get list of dicts:</h3> <pre><code>import requests import re, json from bs4 import BeautifulSoup  URL = &quot;https://www.mediamarkt.com.tr/tr/category/_cep-telefonlar%C4%B1-504171.html&quot; page = requests.get(URL)  soup = BeautifulSoup(page.content, &quot;html.parser&quot;) data = [json.loads(m.group(1)) for m in re.finditer(r'var product.+ = ({.*})', page.text)] </code></pre> <h3>Output</h3> <pre><code>[{'name': 'XIAOMI Poco X3 Pro 256 GB Akıllı Telefon Bronz', 'id': '1218181', 'price': '5799.00', 'brand': 'XIAOMI', 'ean': '6934177738371', 'dimension25': 'InStock', 'dimension26': 11.9, 'dimension24': 18.0, 'category': 'Telefon', 'dimension9': 'Cep Telefonları', 'dimension10': 'Android Telefonlar'}, {'name': 'APPLE iPhone 12 64GB Akıllı Telefon Yeşil', 'id': '1212811', 'price': '14749.00', 'brand': 'APPLE', 'ean': '0194252030943', 'dimension25': 'InStock', 'dimension26': 11.9, 'dimension24': 18.0, 'category': 'Telefon', 'dimension9': 'Cep Telefonları'}, {'name': 'SAMSUNG Galaxy A22 128 GB Akıllı Telefon Beyaz', 'id': '1217491', 'price': '3499.00', 'brand': 'SAMSUNG', 'ean': '8806092288300', 'dimension25': 'InStock', 'dimension26': 11.9, 'dimension24': 18.0, 'category': 'Telefon', 'dimension9': 'Cep Telefonları', 'dimension10': 'Android Telefonlar', 'dimension11': 'Samsung Telefon'}, {'name': 'XIAOMI Redmi 9T 128 GB Akıllı Telefon Yeşil', 'id': '1216309', 'price': '3399.00', 'brand': 'XIAOMI', 'ean': '6934177746031', 'dimension25': 'OutOfStock', 'dimension26': 11.9, 'dimension24': 18.0, 'category': 'Telefon', 'dimension9': 'Cep Telefonları', 'dimension10': 'Android Telefonlar'}, {'name': 'APPLE iPhone 12 128GB Akıllı Telefon Siyah', 'id': '1212812', 'price': '15699.00', 'brand': 'APPLE', 'ean': '0194252031285', 'dimension25': 'InStock', 'dimension26': 9.99, 'dimension24': 18.0, 'category': 'Telefon', 'dimension9': 'Cep Telefonları'}, {'name': 'APPLE iPhone 11 64GB Akıllı Telefon Sarı', 'id': '1212830', 'price': '10349.00', 'brand': 'APPLE', 'ean': '0194252098264', 'dimension25': 'InStock', 'dimension26': 9.99, 'dimension24': 18.0, 'category': 'Telefon', 'dimension9': 'Cep Telefonları'}, {'name': 'CASPER VIA F20 128 GB Akıllı Telefon Beyaz', 'id': '1216984', 'price': '2999.00', 'brand': 'CASPER', 'ean': '8699247212134', 'dimension25': 'InStock', 'dimension26': 11.9, 'dimension24': 18.0, 'category': 'Telefon', 'dimension9': 'Cep Telefonları', 'dimension10': 'Android Telefonlar'}, {'name': 'VIVO Y53S 128 GB Akıllı Telefon Derin Mavi', 'id': '1217949', 'price': '4499.00', 'brand': 'VIVO', 'ean': '6935117836812', 'dimension25': 'InStock', 'dimension26': 11.9, 'dimension24': 18.0, 'category': 'Telefon', 'dimension9': 'Cep Telefonları', 'dimension10': 'Android Telefonlar'}, {'name': 'OPPO A74 128 GB Akıllı Telefon Gece Mavisi', 'id': '1215862', 'price': '4499.00', 'brand': 'OPPO', 'ean': '8683040000227', 'dimension25': 'InStock', 'dimension26': 11.9, 'dimension24': 18.0, 'category': 'Telefon', 'dimension9': 'Cep Telefonları', 'dimension10': 'Android Telefonlar'}, {'name': 'XIAOMI Redmi 9T 128 GB Akıllı Telefon Gri', 'id': '1216310', 'price': '3399.00', 'brand': 'XIAOMI', 'ean': '6934177746086', 'dimension25': 'InStock', 'dimension26': 11.9, 'dimension24': 18.0, 'category': 'Telefon', 'dimension9': 'Cep Telefonları', 'dimension10': 'Android Telefonlar'}, {'name': 'VIVO Y53S 128 GB Akıllı Telefon Gökkuşağı', 'id': '1218011', 'price': '4499.00', 'brand': 'VIVO', 'ean': '6935117836829', 'dimension25': 'InStock', 'dimension26': 11.9, 'dimension24': 18.0, 'category': 'Telefon', 'dimension9': 'Cep Telefonları', 'dimension10': 'Android Telefonlar'}, {'name': 'OPPO A55 64GB Akıllı Telefon Yıldızlı Siyah', 'id': '1218661', 'price': '3499.00', 'brand': 'OPPO', 'ean': '8683040000418', 'dimension25': 'InStock', 'dimension26': 11.9, 'dimension24': 18.0, 'category': 'Telefon', 'dimension9': 'Cep Telefonları', 'dimension10': 'Android Telefonlar', 'dimension11': 'Oppo Telefon'}, {'name': 'OPPO A55 64GB Akıllı Telefon Gökkuşağı Mavisi', 'id': '1218660', 'price': '3499.00', 'brand': 'OPPO', 'ean': '8683040000425', 'dimension25': 'InStock', 'dimension26': 11.9, 'dimension24': 18.0, 'category': 'Telefon', 'dimension9': 'Cep Telefonları', 'dimension10': 'Android Telefonlar', 'dimension11': 'Oppo Telefon'}, {'name': 'TCL 20 E 32 GB Akıllı Telefon Mavi', 'id': '1217712', 'price': '2399.00', 'brand': 'TCL', 'ean': '4894461894812', 'dimension25': 'InStock', 'dimension26': 11.9, 'dimension24': 18.0, 'category': 'Telefon', 'dimension9': 'Cep Telefonları', 'dimension10': 'Android Telefonlar'}, {'name': 'OPPO A74 128 GB Akıllı Telefon Prizma Siyahı', 'id': '1215856', 'price': '4499.00', 'brand': 'OPPO', 'ean': '8683040000210', 'dimension25': 'InStock', 'dimension26': 11.9, 'dimension24': 18.0, 'category': 'Telefon', 'dimension9': 'Cep Telefonları', 'dimension10': 'Android Telefonlar'}, {'name': 'APPLE iPhone 11 128GB Akıllı Telefon Mor', 'id': '1212837', 'price': '10849.00', 'brand': 'APPLE', 'ean': '0194252100431', 'dimension25': 'InStock', 'dimension26': 9.99, 'dimension24': 18.0, 'category': 'Telefon', 'dimension9': 'Cep Telefonları'}, {'name': 'XIAOMI Redmi Note 10 S 128 GB Akıllı Telefon Beyaz', 'id': '1217380', 'price': '4999.00', 'brand': 'XIAOMI', 'ean': '6934177748431', 'dimension25': 'InStock', 'dimension26': 11.9, 'dimension24': 18.0, 'category': 'Telefon', 'dimension9': 'Cep Telefonları', 'dimension10': 'Android Telefonlar'}, {'name': 'CASPER VIA E4 32 GB Akıllı Telefon Siyah', 'id': '1216978', 'price': '2299.00', 'brand': 'CASPER', 'ean': '8699247209356', 'dimension25': 'InStock', 'dimension26': 11.9, 'dimension24': 18.0, 'category': 'Telefon', 'dimension9': 'Cep Telefonları', 'dimension10': 'Android Telefonlar'}, {'name': 'APPLE iPhone 13 Mini 128 GB Akıllı Telefon Starlight', 'id': '1217590', 'price': '14799.00', 'brand': 'APPLE', 'ean': '0194252689950', 'dimension25': 'InStock', 'dimension26': 11.9, 'dimension24': 18.0, 'category': 'Telefon', 'dimension9': 'Cep Telefonları'}, {'name': 'APPLE iPhone 13 Mini 256 GB Akıllı Telefon Starlight', 'id': '1217595', 'price': '16199.00', 'brand': 'APPLE', 'ean': '0194252691304', 'dimension25': 'InStock', 'dimension26': 11.9, 'dimension24': 18.0, 'category': 'Telefon', 'dimension9': 'Cep Telefonları'}] </code></pre>"			2022-01-09 20:04:37.92 UTC
70654358	javascript|python|html	Run a python script using requirements with browser JavaScript	"<p>My main goal here is to execute a python script I have written when I run a function triggered through HTML. Here is how I have things currently set up:</p> <p>I have a JavaScript File containing python run functions:</p> <pre><code>const PythonShell = require('python-shell').PythonShell; class AHK {    static async runScript() {      PythonShell.run('/ahk/script.py', null, function (err) {        if (err) throw err;        console.log('finished');    }); } module.exports = AHK; </code></pre> <p>I have my main.js file which would be the js code for the HTML to handle. I'd like for it to take in the module <code>AHK</code>. Something simple like this:</p> <pre><code>const AHK = require('./ahk');  function runFunction(x){  if(x = 1)     AHK.runScript()  } </code></pre> <p>And then I have some HTML with a javascript tag</p> <pre><code>&lt;script type=&quot;text/javascript&quot;&gt; let x =1; //this is just to show x is getting populated. In the actual code it's constantly changing values  async function predict() {   if(x &gt; 1)     runFunction(x) } &lt;/script&gt; </code></pre> <p><strong>Biggest issue I'm facing:</strong></p> <p>I've become aware that browser javascript doesn't like requirements/modules. For example, the <code>main.js</code> file doesn't like having a requirement at the top. I've tried using things like requirejs, but I can't seem to figure out how to make something like this work. I basically need it so that when the requirement is met and the function <code>runFunction</code> is run, the python script is executed on my machine.</p> <p>Important to note that this is all running for a personal project on my computer, so it will never not be local.</p>"	2022-01-10 14:55:15.643 UTC	70655221	<p>Make the application on your pc an API and use the web page to send a request to the API telling it which python script to run. I haven't used python too much but I believe you can make an API with it. Then you can just make buttons for each python program you want to run and have these buttons send a request to the API.</p>			2022-01-10 15:52:05.513 UTC
70655662	javascript	"Need a delay within a for loop, Python, Flask, HTML, JavaScript"	"<p>Hello and apologies if this has been asked and answered, but after couple hours each day for the past week searching, I have yet to find a good solution.</p> <p>Issue:  I have a Python/Flask served site where I have a specific button that will allow me to open up every instance of my customers sites, loaded from a database (<strong>custdata</strong>).  The below code in it's original form works fine to open up all of the pages in new tabs.  The issue I am having is to help reduce the initial load upon requesting the pages, I would like to have a half second delay between each iteration within the for loop.</p> <p>Notes:  As seen below, I have tried to use the <em>setTimeout</em> option with a delay of 500 milliseconds, but this seems to only delay the opening of the first iteration of the subsequent pages.  The loop then opens the rest of the pages without any delay.</p> <p>For example:  If the database has 5 customers for a given server, the page will load, delay for 500ms, then load the 5 customer pages without any delay between them.  The desired effect is to delay the opening of the customer pages between each customer page.</p> <pre><code>   &lt;head&gt; &lt;script&gt; function myFunction()  {     {% for mydata in custdata %}         window.setTimeout(function(){                 window.open(&quot;https://customer.mysite.com/launch/{{ custdata.customer_name }}&quot;, &quot;_blank&quot;);         }, 500);     {% endfor %} } &lt;/script&gt; &lt;/head&gt;  &lt;body onload=&quot;myFunction()&quot;&gt; Customer pages should have loaded.  If so, you can close this page.  If not, ensure popups are not blocked for this site. &lt;/body&gt;  &lt;/html&gt;``` </code></pre>"	2022-01-10 16:23:56.637 UTC	70668741	"<p>Thanks Paul M for the suggestion.  below is the updated code to raise the timeout by 250ms per iteration within the for loop.  This appears to have accomplished the end goal I was looking for:</p> <pre><code>&lt;script&gt; function myFunction()  {     let delayiteration=0;     {% for mydata in custdata %}         window.setTimeout(function(){                 window.open(&quot;https://customer.mysite.com/launch/{{ custdata.customer_name }}&quot;, &quot;_blank&quot;);         }, delayiteration);         delayiteration=delayiteration+250;     {% endfor %} } &lt;/script&gt; &lt;/head&gt;  &lt;body onload=&quot;myFunction()&quot;&gt; Customer pages should have loaded.  If so, you can close this page.  If not, ensure popups are not blocked for this site. &lt;/body&gt;  &lt;/html&gt; </code></pre>"			2022-01-11 14:48:30.703 UTC
70664190	javascript|python|function|zip|cycle	Rewriting Python code to remove zip and cycle functions for Javascript translation	"<p>I need some help rewriting some Python code, to exclude the zip and cycle functions I currently have in it if possible. I am still a coding novice, so I'm not sure if it's doable.</p> <p>I am using a program called PsychoPy to build experiments for students, wherein we can also upload them online. For online upload there is an autoJS option, however there doesn't appear to be a JS equivalent I can find for zip and cycle.</p> <p>My code is as such</p> <pre><code>for x in savedImages1:     for y in savedImages2:         if x == y:             choiceImages.append(x)              for z in choiceImages:     while choiceImages.count(z) &lt; 60:         choiceImages.append(z)  combinedList = list(zip(choiceImages, cycle(labelsWhole))) combinedList = [list (elem) for elem in combinedList] random.shuffle(combinedList) </code></pre> <p>Essentially what is happening here is there is a list (choiceImages) where images they have chosen previously populate this list (60 times). So if you picked image A, it would add image A to choiceImages 60 times. labelsWhole is a premade list, also consisting of 60 items, where their image choices are paired against each image in labelsWhole (e.g [A,A],[A,B],[A.,C] etc). This list is then shuffled up so the image pairs remain (e.g [A,B][B,E] etc). I zipped them as a list so the image pairs remain unaltered during the shuffling, as if I just shuffled choiceImages and labelsWhole separately I could end up with [A,B],[A,B] [B,A] [B,A] where I should only get [A,A] [A,B] [B,A] [B,B]. Hopefully this makes sense. I then later split the pairs into two separate lists, which then remain unaltered.</p> <p>So I need a way to, without zip or cycle functions:</p> <ul> <li><p>Pair the images with each other, so that each image is only paired against another once, so it can be shuffled and split plater.</p> </li> <li><p>Cycle through labelsWhole to add additional iterations (for example, if they selected 4 images to begin with, choiceImages would have each image * 60, so labelsWhole would need to be added to a list 4 times).</p> </li> </ul> <p>I hope I've explained this well enough. If not please let me know where it doesn't make sense, and  I will try to explain it better.</p> <p>Best wishes</p>"	2022-01-11 09:12:38.227 UTC	70669181	"<p>You may implement your homemade versions of <code>zip</code> and <code>cycle</code>.</p> <p>If you check the docs you will see &quot;roughly equivalent&quot; versions, but they're still using some typical Python construct which may be difficult to translate to JS.</p> <p>So if you cannot transfer to JS the concept of a generator you will need to have versions that return the full list, instead of yielding one element at a time.</p> <p>Following are two possible implementations, I tried to make them as non-Pythonic as possible:</p> <pre><code>def myzip(iterables):     minlen = 2**64-1     for it in iterables:         ln = len(it)         if ln &lt; minlen:             minlen = ln     out = []     for j in range(minlen):         t = []         for it in iterables:             t.append(it[j])         out.append(t)     return out  def mycycle(iterable, count):     ln = len(iterable)     out = []     for j in range(count):         out.append(iterable[j % ln])     return out  myzip(('ABCD', 'XY'))   [['A', 'X'], ['B', 'Y']]  mycycle('ABCD',13) ['A', 'B', 'C', 'D', 'A', 'B', 'C', 'D', 'A', 'B', 'C', 'D', 'A'] </code></pre> <p>Note that <code>cycle</code> repeats indefinitely, so I added a <code>count</code> parameter to say how many elements you want.</p>"			2022-01-11 15:16:18.977 UTC
70670161	javascript|python|list|flask|iteration	How to iterate over a list of items from Python/Flask using Javascript?	"<p>I'm working to create a graph using HTML/JS/Python/Flask and the labels for this line graph should come from a list in Python and then I would use it on a Javascript.</p> <p>So far I have not been able to successfully iterate over that list in Javascript, I'm getting 4 times the same string on my HTML.</p> <p>I'm using a code similar to this one:</p> <p>start.py</p> <pre><code>from flask import Flask, render_template  app = Flask(__name__)  @app.route('/', methods = ['GET','POST']) def home():     data = ['ABC','DEF','GHI','JKL']     return render_template('index.html', data = data, len = len(data))  if __name__ == '__main__':    app.run(debug=True) </code></pre> <p>index.html</p> <pre><code>&lt;body&gt;        &lt;p id='test'&gt;&lt;/p&gt;    &lt;script&gt;      let text = '';      for (i=0; i&lt;'{{len}}'; i++){         text += '{{data | tojson}}[i]' + '&lt;br&gt;'      }      console.log(text)      document.getElementById('test').innerHTML = text;    &lt;/script&gt; &lt;/body&gt; </code></pre> <p>I'm getting this as an output:</p> <pre><code>['ABC','DEF','GHI','JKL'][i] ['ABC','DEF','GHI','JKL'][i] ['ABC','DEF','GHI','JKL'][i] ['ABC','DEF','GHI','JKL'][i] </code></pre> <p>And I'm looking to get this instead:</p> <pre><code>ABC DEF GHI JKL </code></pre> <p>The data sent to the Javascript is sent as text and not as a list, if I change this:</p> <pre><code>text += '{{data | tojson}}[i]' + '&lt;br&gt;' </code></pre> <p>To this:</p> <pre><code>text += '{{data | tojson}}'[i] + '&lt;br&gt;' </code></pre> <p>The output becomes:</p> <pre><code>[ &quot; A B </code></pre> <p>And the console output is:</p> <pre><code>[&lt;br&gt;&quot;&lt;br&gt;A&lt;br&gt;B&lt;br&gt; </code></pre> <p>Do anybody know how to handle this properly so I get the correct results?</p>"	2022-01-11 16:27:46.397 UTC	70670429	"<p>Try this in HTML</p> <pre class=""lang-html prettyprint-override""><code>&lt;body&gt;        &lt;p id='test'&gt;&lt;/p&gt;    &lt;script&gt;      let text = '';      for (i=0; i&lt;'{{len}}'; i++){         text += '{{data[i]}}' + '&lt;br&gt;'      }      console.log(text)      document.getElementById('test').innerHTML = text;    &lt;/script&gt; &lt;/body&gt; </code></pre> <p>or you can also pass a string instead of an array.</p> <pre class=""lang-py prettyprint-override""><code>from flask import Flask, render_template  app = Flask(__name__)  @app.route('/', methods = ['GET','POST']) def home():     data = ['ABC','DEF','GHI','JKL']     return render_template('index.html', data = &quot;\n&quot;.join(data), len = len(data))  if __name__ == '__main__':    app.run(debug=True) </code></pre> <p>and then in HTML you can just  print this joined string</p> <pre><code>&lt;body&gt;        &lt;p id='test'&gt;&lt;/p&gt;    &lt;script&gt;      document.getElementById('test').innerHTML = {{data}};    &lt;/script&gt; &lt;/body&gt; </code></pre>"			2022-01-11 16:46:42.923 UTC
70670161	javascript|python|list|flask|iteration	How to iterate over a list of items from Python/Flask using Javascript?	"<p>I'm working to create a graph using HTML/JS/Python/Flask and the labels for this line graph should come from a list in Python and then I would use it on a Javascript.</p> <p>So far I have not been able to successfully iterate over that list in Javascript, I'm getting 4 times the same string on my HTML.</p> <p>I'm using a code similar to this one:</p> <p>start.py</p> <pre><code>from flask import Flask, render_template  app = Flask(__name__)  @app.route('/', methods = ['GET','POST']) def home():     data = ['ABC','DEF','GHI','JKL']     return render_template('index.html', data = data, len = len(data))  if __name__ == '__main__':    app.run(debug=True) </code></pre> <p>index.html</p> <pre><code>&lt;body&gt;        &lt;p id='test'&gt;&lt;/p&gt;    &lt;script&gt;      let text = '';      for (i=0; i&lt;'{{len}}'; i++){         text += '{{data | tojson}}[i]' + '&lt;br&gt;'      }      console.log(text)      document.getElementById('test').innerHTML = text;    &lt;/script&gt; &lt;/body&gt; </code></pre> <p>I'm getting this as an output:</p> <pre><code>['ABC','DEF','GHI','JKL'][i] ['ABC','DEF','GHI','JKL'][i] ['ABC','DEF','GHI','JKL'][i] ['ABC','DEF','GHI','JKL'][i] </code></pre> <p>And I'm looking to get this instead:</p> <pre><code>ABC DEF GHI JKL </code></pre> <p>The data sent to the Javascript is sent as text and not as a list, if I change this:</p> <pre><code>text += '{{data | tojson}}[i]' + '&lt;br&gt;' </code></pre> <p>To this:</p> <pre><code>text += '{{data | tojson}}'[i] + '&lt;br&gt;' </code></pre> <p>The output becomes:</p> <pre><code>[ &quot; A B </code></pre> <p>And the console output is:</p> <pre><code>[&lt;br&gt;&quot;&lt;br&gt;A&lt;br&gt;B&lt;br&gt; </code></pre> <p>Do anybody know how to handle this properly so I get the correct results?</p>"	2022-01-11 16:27:46.397 UTC	70678194	"<p>As you might have noticed, I'm a complete beginner when it comes to Javascript, doing some research, I found out I can slice and split in Javascript as well. So I solved my issue by using those two methods.</p> <p>Giving more detail about what I did, {{data}} is passed over to Javascript as a single string, as '['ABC','DEF','GHI','JKL']', and if you read this string as a console output it shows:</p> <pre><code>[&amp;#39;ABC&amp;#39;, &amp;#39;DEF&amp;#39;, &amp;#39;GHI&amp;#39;, &amp;#39;JKL&amp;#39;] </code></pre> <p>To solve this I first sliced the string with:</p> <pre><code>flask_data = '{{data}}'; temp_array = flask_data.slice(6,-6); </code></pre> <p>So I get this as a result:</p> <pre><code>ABC&amp;#39;, &amp;#39;DEF&amp;#39;, &amp;#39;GHI&amp;#39;, &amp;#39;JKL </code></pre> <p>Then I split the string using the following substring: '', '', as follows:</p> <pre><code>array = temp_array.split('&amp;#39;, &amp;#39;'); </code></pre> <p>And as a result I got the array I needed:</p> <pre><code>['ABC','DEF','GHI','JKL'] </code></pre>"			2022-01-12 08:11:19.383 UTC
70729830	javascript|python|jquery|sockets|websocket	How to communicate between Python3 and JavaScript via sockets	"<p>I just set up a small TCP-socket server in python3, which waits for a connection, sends a small encoded text and waits for data from the client.</p> <p>Python-Code:</p> <pre class=""lang-py prettyprint-override""><code>import socket  sock = socket.socket() sock.bind((&quot;0.0.0.0&quot;, 20000))  sock.listen(5)  while True:     Client, address = sock.accept()     Client.send(&quot;ping&quot;.encode())     print(Client.recv(1024).decode())  # Here I want to receive data from the client     Client.close() </code></pre> <p>At the end, there should be a browser interface which can communicate with the python backend with JQuery or just something that receive and send <strong>(With data!)</strong> sockets.</p> <p>Thank you :D</p> <p><strong>EDIT</strong>:</p> <p>Forgot to say that I can receive the text in a browser, I just need to know how to send data back.</p>"	2022-01-16 12:01:12.523 UTC	70729991	"<p>if you need to connect to a NodeJS javascript environment then you should take a look at this native package <a href=""https://nodejs.org/api/net.html#class-netsocket"" rel=""nofollow noreferrer"">https://nodejs.org/api/net.html#class-netsocket</a></p> <p>if you need to connect to a browser javascript environment then you should take a look at WebSockets</p> <ul> <li>Python: <a href=""https://websockets.readthedocs.io/en/stable/#:%7E:text=websockets%20is%20a%20library%20for,an%20elegant%20coroutine%2Dbased%20API"" rel=""nofollow noreferrer"">https://websockets.readthedocs.io/en/stable/#:~:text=websockets%20is%20a%20library%20for,an%20elegant%20coroutine%2Dbased%20API</a>.</li> <li>Javascript <a href=""https://developer.mozilla.org/es/docs/Web/API/WebSockets_API"" rel=""nofollow noreferrer"">https://developer.mozilla.org/es/docs/Web/API/WebSockets_API</a></li> </ul>"			2022-01-16 12:22:00.27 UTC
70778096	python|forms|python-requests|submit	Python request - Submit a form that has javascript onsubmit	"<p>I'm trying to use Python requests to get the results of this url <a href=""https://www.cmfchile.cl/institucional/mercados/entidad.php?mercado=V&amp;rut=61808000&amp;tipoentidad=RVEMI&amp;control=svs&amp;pestania=25"" rel=""nofollow noreferrer"">Target URL</a>. As you could see, it updates on javascript when you push button &quot;Consultar&quot; (leaving fields empty), so post method is not working.</p> <p>I'm trying this code right here:</p> <pre><code>import requests  URL = https://www.cmfchile.cl/institucional/mercados/entidad.php?mercado=V&amp;rut=61808000&amp;tipoentidad=RVEMI&amp;control=svs&amp;pestania=25  page = requests.post(URL, headers=headers)  print(page.text) </code></pre> <p>Does anyone know any other way or how I could solve this?</p>"	2022-01-19 21:39:42.137 UTC	70789658	"<p>This works:</p> <pre><code>import requests  url = &quot;https://www.cmfchile.cl/institucional/mercados/entidad.php?mercado=V&amp;rut=61808000&amp;tipoentidad=RVEMI&amp;control=svs&amp;pestania=25&quot;  payload='dd=%23%23%23&amp;mm=%23%23%23&amp;aa=%23%23%23&amp;dd2=%23%23%23&amp;mm2=%23%23%23&amp;aa2=%23%23%23&amp;dias=&amp;entidad=AGUAS%2BANDINAS%2BS.A.&amp;rut=61808000%2B&amp;formulario=1' headers = {   'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:96.0) Gecko/20100101 Firefox/96.0', }  response = requests.request(&quot;POST&quot;, url, headers=headers, data=payload)  print(response.text) </code></pre> <p>The process I followed was to:</p> <ol> <li>Copy the request as cURL in Firefox:</li> </ol> <p><a href=""https://i.stack.imgur.com/ePWyn.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/ePWyn.png"" alt=""Copy request as cURL"" /></a></p> <ol start=""2""> <li>Import it into Postman:</li> </ol> <p><a href=""https://i.stack.imgur.com/8SU5S.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/8SU5S.png"" alt=""Import button"" /></a></p> <p><a href=""https://i.stack.imgur.com/71Oe5.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/71Oe5.png"" alt=""Paste cURL into Postman"" /></a> 3. Export as Python code from Postman:</p> <p>[<img src=""https://i.stack.imgur.com/85FS6.png"" alt=""Export Python code"" />] <a href=""https://i.stack.imgur.com/2htBJ.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/2htBJ.png"" alt=""Export Python code"" /></a></p>"			2022-01-20 16:13:26.463 UTC
70787268	javascript|node.js	NodeJS - How do I make from python 'for _ in range(number)' in NodeJS/JavaScript	"<p>In python3x I'm using a simple code:</p> <pre><code>for i in range(1, 10):     print(i) </code></pre> <p>I tried using Array function on NodeJS/JavaScript:</p> <pre><code>const LIST = []; const Range = Array(10).fill(&quot;0, 10&quot;, 0, 10) LIST.push(Range);  console.log(LIST); </code></pre> <p>But it seems it just gonna give output:</p> <pre><code>[   [     '0, 10', '0, 10',     '0, 10', '0, 10',     '0, 10', '0, 10',     '0, 10', '0, 10',     '0, 10', '0, 10'   ] ] </code></pre> <p>How do I make it gives output from 1 to 10?</p>"	2022-01-20 13:41:30.393 UTC	70787289	"<p><code>Array()</code> fills the array with nothing but gives it a certain length, so filling it with null makes it <code>[null, null, ...]</code>. Mapping the array is similar to mapping in python, you loop through each item in the array and return the current index + 1. That creates an array <code>[1, 2, 3, 4 ..., 10]</code></p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-js lang-js prettyprint-override""><code>const Range = Array(10).fill(null).map((_, i) =&gt; i + 1);  console.log(Range);</code></pre> </div> </div> </p>"			2022-01-20 13:42:48.277 UTC
70787268	javascript|node.js	NodeJS - How do I make from python 'for _ in range(number)' in NodeJS/JavaScript	"<p>In python3x I'm using a simple code:</p> <pre><code>for i in range(1, 10):     print(i) </code></pre> <p>I tried using Array function on NodeJS/JavaScript:</p> <pre><code>const LIST = []; const Range = Array(10).fill(&quot;0, 10&quot;, 0, 10) LIST.push(Range);  console.log(LIST); </code></pre> <p>But it seems it just gonna give output:</p> <pre><code>[   [     '0, 10', '0, 10',     '0, 10', '0, 10',     '0, 10', '0, 10',     '0, 10', '0, 10',     '0, 10', '0, 10'   ] ] </code></pre> <p>How do I make it gives output from 1 to 10?</p>"	2022-01-20 13:41:30.393 UTC	70787306	"<p>The equivalent to <code>for i in range(x, y)</code> is <code>for (let i = x; i &lt; y; i++)</code>:</p> <pre class=""lang-js prettyprint-override""><code>for (let i = 1; i &lt; 10; i++) {   console.log(i) } </code></pre> <p>Output is 1, 2, 3, 4, 5, 6, 7, 8, 9 just as it was in your Python example.</p> <p>See <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/for"" rel=""nofollow noreferrer"">docs</a>.</p>"			2022-01-20 13:44:13.89 UTC
70787268	javascript|node.js	NodeJS - How do I make from python 'for _ in range(number)' in NodeJS/JavaScript	"<p>In python3x I'm using a simple code:</p> <pre><code>for i in range(1, 10):     print(i) </code></pre> <p>I tried using Array function on NodeJS/JavaScript:</p> <pre><code>const LIST = []; const Range = Array(10).fill(&quot;0, 10&quot;, 0, 10) LIST.push(Range);  console.log(LIST); </code></pre> <p>But it seems it just gonna give output:</p> <pre><code>[   [     '0, 10', '0, 10',     '0, 10', '0, 10',     '0, 10', '0, 10',     '0, 10', '0, 10',     '0, 10', '0, 10'   ] ] </code></pre> <p>How do I make it gives output from 1 to 10?</p>"	2022-01-20 13:41:30.393 UTC	70787355	"<p>In short, what you're describing is an array where the index is also the value. That can be achieved with this little line:</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-js lang-js prettyprint-override""><code>const array = Array(10).fill(0).map((zero, index) =&gt; index)  console.log(array) // [ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 ]</code></pre> </div> </div> </p> <p>In short, it does this:</p> <ol> <li><code>Array(10)</code>: Make an array of length 10, which is empty.</li> <li><code>.fill(0)</code>: Fill the array with zeros (could be anything).</li> <li><code>.map((z, i) =&gt; i)</code>: Replace each value (zero) with its index (0, 1, 2...)</li> </ol>"			2022-01-20 13:46:32.2 UTC
70787268	javascript|node.js	NodeJS - How do I make from python 'for _ in range(number)' in NodeJS/JavaScript	"<p>In python3x I'm using a simple code:</p> <pre><code>for i in range(1, 10):     print(i) </code></pre> <p>I tried using Array function on NodeJS/JavaScript:</p> <pre><code>const LIST = []; const Range = Array(10).fill(&quot;0, 10&quot;, 0, 10) LIST.push(Range);  console.log(LIST); </code></pre> <p>But it seems it just gonna give output:</p> <pre><code>[   [     '0, 10', '0, 10',     '0, 10', '0, 10',     '0, 10', '0, 10',     '0, 10', '0, 10',     '0, 10', '0, 10'   ] ] </code></pre> <p>How do I make it gives output from 1 to 10?</p>"	2022-01-20 13:41:30.393 UTC	70787495	"<p>How about:</p> <pre><code>[...Array(10).keys()].map(x =&gt; x + 1); </code></pre> <p>Explanation:</p> <ul> <li><code>Array(10)</code> gives an array of length 10.</li> <li><code>.keys()</code> gives the indices viz 0, 1, 2, ... 9.</li> <li><code>.map(...)</code> increments each index by 1, thus giving 1, 2, 3, ... 10</li> </ul> <p>Try it out:</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-js lang-js prettyprint-override""><code>console.log([...Array(10).keys()].map(x =&gt; x + 1))</code></pre> </div> </div> </p>"			2022-01-20 13:56:33.933 UTC
70787268	javascript|node.js	NodeJS - How do I make from python 'for _ in range(number)' in NodeJS/JavaScript	"<p>In python3x I'm using a simple code:</p> <pre><code>for i in range(1, 10):     print(i) </code></pre> <p>I tried using Array function on NodeJS/JavaScript:</p> <pre><code>const LIST = []; const Range = Array(10).fill(&quot;0, 10&quot;, 0, 10) LIST.push(Range);  console.log(LIST); </code></pre> <p>But it seems it just gonna give output:</p> <pre><code>[   [     '0, 10', '0, 10',     '0, 10', '0, 10',     '0, 10', '0, 10',     '0, 10', '0, 10',     '0, 10', '0, 10'   ] ] </code></pre> <p>How do I make it gives output from 1 to 10?</p>"	2022-01-20 13:41:30.393 UTC	70787304	"<p>Why... not just use <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/for"" rel=""nofollow noreferrer"">a plain <code>for</code> loop</a>?</p> <pre><code>for(let i = 1; i &lt; 10; i++) {   console.log(i); } </code></pre>"			2022-01-20 13:43:55.073 UTC
70809997	javascript|python|selenium|web-scraping	Accessing a javascript array of objects in a page header with python and selenium	"<p>I am building a bot to check stock of various Ubiquiti Unifi devices from their shop page (Hey, these things are disappearing FAST) and I need some help. I've been searching all day for something like this, but none of the things I've seen here have quite worked.</p> <p>I'm using the below code to access the UI.com shop (<a href=""https://store.ui.com/"" rel=""nofollow noreferrer"">https://store.ui.com/</a>). They, quite conveniently, have the in-stock product information in the header of every page, and I'm using selenium to get the home-page and need to access:</p> <pre><code>&lt;script data-ot-ignore type=&quot;text/javascript&quot;&gt;   window.APP_DATA = {     assets: {...},      cart: {&quot;note&quot;:null,&quot;attributes&quot;:{&quot;quantity-hdds&quot;:&quot;{\&quot;4446782390361\&quot;=\u003e{\&quot;0\&quot;=\u003e{\&quot;sku\&quot;=\u003e\&quot;HDD-1TB\&quot;, \&quot;ratio\&quot;=\u003e\&quot;1\&quot;}, \&quot;1\&quot;=\u003e{\&quot;sku\&quot;=\u003e\&quot;HDD-8TB\&quot;, \&quot;ratio\&quot;=\u003e\&quot;1\&quot;}}}&quot;},&quot;original_total_price&quot;:0,&quot;total_price&quot;:0,&quot;total_discount&quot;:0,&quot;total_weight&quot;:0.0,&quot;item_count&quot;:0,&quot;items&quot;:[],&quot;requires_shipping&quot;:false,&quot;currency&quot;:&quot;USD&quot;,&quot;items_subtotal_price&quot;:0,&quot;cart_level_discount_applications&quot;:[]},      cartAccessories: [{           &quot;id&quot;: 4446782390361,           &quot;title&quot;: &quot;Dream Machine Pro&quot;,           &quot;handle&quot;: &quot;udm-pro&quot;,           &quot;url&quot;: &quot;\/products\/udm-pro&quot;,           &quot;tags&quot;: [&quot;#HDD-1TB&quot;,&quot;#HDD-8TB&quot;,&quot;ALT&quot;,&quot;ALT::udm-pro&quot;,&quot;bestseller&quot;,&quot;enhanced-wizard&quot;,&quot;featured&quot;,&quot;mx29&quot;,&quot;recommended&quot;,&quot;redirect-wizard&quot;,&quot;related&quot;,&quot;UI::1U&quot;,&quot;UI::AI&quot;,&quot;UI::Cloud Key&quot;,&quot;UI::HDD&quot;,&quot;UI::Network&quot;,&quot;UI::SFP+&quot;,&quot;UI::UniFi&quot;,&quot;unifi&quot;],           &quot;featured_image&quot;: &quot;//cdn.shopify.com/s/files/1/1439/1668/products/UDM-Pro_front-top-angle_53e97c87-61d9-4f3e-acad-6ba113bbf5de_small.png?v=1629983008&quot;,           &quot;variants&quot;: [{                   &quot;id&quot;: 32264307703897,                   &quot;title&quot;: &quot;Default Title&quot;,                   &quot;price&quot;: 37900,                   &quot;sku&quot;: &quot;UDM-Pro&quot;,                   &quot;available&quot;: true,                   &quot;inventory_empty&quot;:false,                   &quot;inventory_policy&quot;: &quot;deny&quot;,                   &quot;image&quot;: &quot;//cdn.shopify.com/s/files/1/1439/1668/products/UDM-Pro_front-top-angle_53e97c87-61d9-4f3e-acad-6ba113bbf5de_small.png?v=1629983008&quot;                 },],           &quot;data&quot;:{&quot;for&quot;:{&quot;product-vendors&quot;:[],&quot;product-types&quot;:[&quot;VoIP&quot;,&quot;Access&quot;,&quot;Surveillance&quot;]},&quot;type&quot;:&quot;UDM-PRO&quot;,&quot;view&quot;:{&quot;default&quot;:[&quot;UAP-nanoHD-US&quot;,&quot;UAP-FlexHD-US&quot;,&quot;UWB-XG-US&quot;,&quot;UAP-IW-HD-US&quot;,&quot;UAP-AC-HD-US&quot;,&quot;UAP-AC-M-US&quot;,&quot;UAP-BeaconHD-US&quot;,&quot;UAP-AC-PRO-US&quot;,&quot;UAP-AC-LITE-US&quot;,&quot;UAP-AC-LR-US&quot;,&quot;UAP-AC-IW-US&quot;,&quot;UAP-AC-M-PRO-US&quot;,&quot;UAP-AC-SHD-US&quot;,&quot;UAP-XG-US&quot;,&quot;UAP-AC-EDU-US&quot;,&quot;USW-48-POE&quot;,&quot;USW-24&quot;,&quot;USW-Pro-24&quot;,&quot;USW-48-BETA&quot;,&quot;USW-Lite-16-PoE-BETA&quot;,&quot;USW-LEAF-BETA&quot;,&quot;USW-16-PoE&quot;,&quot;USW-24-PoE&quot;,&quot;USW-Pro-48-PoE&quot;,&quot;USW-Pro-24-PoE&quot;,&quot;USW-Pro-48o&quot;,&quot;USW-Industrial&quot;,&quot;UVC-G4-DoorBell&quot;,&quot;UVC-G3-FLEX&quot;,&quot;UP-Sense-BETA&quot;,&quot;UP-Sense&quot;,&quot;*&quot;,&quot;!UT-ATA-BETA&quot;,&quot;!UT-Conference-BETA&quot;],&quot;checkout&quot;:[&quot;!UDM-Pro&quot;,&quot;!UDM-US&quot;,&quot;UVC-G4-DoorBell&quot;,&quot;UWB-XG-US&quot;,&quot;UAP-AC-HD-US&quot;,&quot;UAP-FlexHD-US&quot;,&quot;UAP-IW-HD-US&quot;,&quot;UAP-nanoHD-US&quot;,&quot;UAP-BeaconHD-US&quot;,&quot;UAP-XG-US&quot;,&quot;UAP-AC-SHD-US&quot;,&quot;UAP-AC-EDU-US&quot;,&quot;UAP-AC-M-PRO-US&quot;,&quot;UAP-AC-PRO-US&quot;,&quot;UAP-AC-LR-US&quot;,&quot;UAP-AC-M-US&quot;,&quot;UAP-AC-IW-US&quot;,&quot;UAP-AC-LITE-US&quot;,&quot;U6-IW-US-BETA&quot;,&quot;U6-Extender-US-BETA&quot;,&quot;U6-Lite-US-BETA&quot;],&quot;bundle&quot;:[&quot;!UDM-Pro&quot;,&quot;!UDM-US&quot;,&quot;UVC-G4-DoorBell&quot;,&quot;UWB-XG-US&quot;,&quot;UAP-AC-HD-US&quot;,&quot;UAP-FlexHD-US&quot;,&quot;UAP-IW-HD-US&quot;,&quot;UAP-nanoHD-US&quot;,&quot;UAP-BeaconHD-US&quot;,&quot;UAP-XG-US&quot;,&quot;UAP-AC-SHD-US&quot;,&quot;UAP-AC-EDU-US&quot;,&quot;UAP-AC-M-PRO-US&quot;,&quot;UAP-AC-PRO-US&quot;,&quot;UAP-AC-LR-US&quot;,&quot;UAP-AC-M-US&quot;,&quot;UAP-AC-IW-US&quot;,&quot;UAP-AC-LITE-US&quot;]},&quot;priority&quot;:1,&quot;description&quot;:&quot;&quot;,&quot;countries&quot;:[]}},{ </code></pre> <p>Now, I don't have a lot of experience with javascript, but it looks like my data of interest is basically a javascript array of objects inside another object? (The [{}] structure of &quot;cartAccessories&quot; where everything is.) Element inspect of the source code gives me &quot;&quot;/html/head/script[33]&quot; as the XPATH for the script...I think. It seems to return different data almost each time.</p> <p>I'm using the following basic code to get the page:</p> <pre><code>from selenium import webdriver from selenium.webdriver.common.by import By  import time  urlpage = 'https://store.ui.com/' print(urlpage) driver = webdriver.Firefox()  # get web page driver.get(urlpage) time.sleep(1)  print(&quot;Getting Results.&quot;) results = driver.find_element(By.XPATH, &quot;/html/head/script[33]&quot;) html = results.get_attribute('innerHTML') print(f&quot;The results are: {html}&quot;) driver.quit() </code></pre> <p>But this doesn't seem to be right. I want to get that &quot;cartAccessories&quot; information into a python list so I can work on it. What's the best way to access this information? Am I going about this all wrong?</p>"	2022-01-22 04:30:46.117 UTC	70810828	"<p>You can use a regex to grab the overarching JavaScript object containing the array of interest within it, then pass that to hjson to deal with the unquoted keys. Finally, extract the <code>cartAccessories</code> item and do what you want with it.</p> <pre><code>import requests, re, hjson  r = requests.get('https://store.ui.com/') data =hjson.loads(re.search(r'window.APP_DATA = (.*?)&lt;', r.text, re.S).group(1)) print(data['cartAccessories']) </code></pre>"			2022-01-22 07:25:35.233 UTC
70821701	javascript|python|flask|parameter-passing	Python Flask Parameter is rounded up in Javascript	"<p>Python code:</p> <pre class=""lang-py prettyprint-override""><code>from flask import Flask, render_template app = Flask(__name__)  @app.route(&quot;/&quot;) def test():     id = &quot;2138291837273817238&quot; # Can Be some random number     return render_template(&quot;first.html&quot;, id=id)  if __name__ == &quot;__main__&quot;:     app.run(&quot;0.0.0.0&quot;, 8000) </code></pre> <p>Html:</p> <pre class=""lang-html prettyprint-override""><code>&lt;!DOCTYPE html&gt; &lt;html&gt; &lt;title&gt;Testing&lt;/title&gt; &lt;body style=&quot;background-color:#222736;&quot;&gt; &lt;h1 style=&quot;color:#f6f6f6&quot;&gt;Testing&lt;/h1&gt; &lt;/body&gt;  &lt;script&gt; console.log({{ id }}) &lt;/script&gt; &lt;/html&gt; </code></pre> <p>Javascript console:</p> <blockquote> <p>2138291837273817300</p> </blockquote> <p>As you can see, <code>2138291837273817238</code> and <code>2138291837273817300</code> are not the same number. The parameter is always rounded up at the 17th number. Is this just a JavaScript error? Am I doing something wrong? And can someone reproduce this?</p>"	2022-01-23 11:45:50.56 UTC	70821763	"<p>Solved: I had to put {{ id }} into &quot;´s, so its &quot;{{ id }}&quot;, then it isnt rounded up!</p>"			2022-01-23 11:54:04.037 UTC
70827921	javascript|python|node.js|zlib	"Python's zlib decompresses data, but Pako (JavaScript zlib) fails"	"<p>I'm trying to inflate some zlib compressed data (Ren'Py Archive 3 archive file structure for those wondering) with JavaScript, but I can't seem to reproduce the Python behavior in Node.js.</p> <p>This Python script works:</p> <pre class=""lang-py prettyprint-override""><code>import zlib  # Data written to a file from a different Python script, for demo purposes # This would be a value in memory in JS data = open(&quot;py&quot;, &quot;rb&quot;)  # Works print(     zlib.decompress(data.read(), 0) ) </code></pre> <p>While this Node.js script:</p> <pre class=""lang-js prettyprint-override""><code>const fs = require('fs'); const pako = require('pako');  const data = fs.readFileSync('py', 'binary');  // Doesn't work console.log(     pako.inflateRaw(data) ); </code></pre> <p>Throws this error:</p> <pre><code>C:\Users\gunne\Documents\Programming\node.js\rpa-extractor\node_modules\pako\lib\inflate.js:384   if (inflator.err) throw inflator.msg || msg[inflator.err];                     ^ invalid stored block lengths (Use `node --trace-uncaught ...` to show where the exception was thrown) </code></pre> <p>As per the Python zlib.decompress documentation, a wbits parameter (the second parameter) of <code>0</code> &quot;automatically [determines] the window size from the zlib header,&quot; something that the Pako implementation seemingly doesn't do.</p> <p>Am I doing something incorrectly? How would I achieve the same output as in Python using Node.js?</p> <p><strong>Edit</strong>:</p> <p>Here's the data (replace the readFileSync line with this):</p> <pre><code>const data = Buffer.from(     // Output of Buffer.from(data).toString('hex');     '789c6596596c545518c74bf9440a2d2d2d65ab802c022e33a52d2d2d8bcc9d61f3b05791cb52cae9f4f6cea577f699da2295cd04f97c1422122a8a24407880861009242ac6aa0891a8c428464d243184300f3e184c88e299f39de18cf8342fbffbfff6ff995d85bdf14133cd910505056d76b83a64f144aacde2296fd4b65be28508a7ff5e68b05fe27effba827df1c1dc1ca6c89a598400c28cc1c3fceccde3ad12798c9bc50249767457275d1e236808c29fa1f70df67184741ee766a9d2a96fb543d1a48a3714e1babf37c0beffd2945c11715931db7552c1500d71c31096941c31d8995ad21baef30a2ba418e146bf48fd5cf750899470b33c8744234e27f7589176424720dc74d1609e932b245aaa4bb07aac244165084b4fbf6bb09b5d147224374728289c0cf284455839c2de8b1f18ecdacf8455e8ccec5a424621a42be719acfc3c2195dc2cca359588d108a2e17e96ca389218a3890622c6221c9e7f2ec00eeedf2c89713a4c834a783cc2ce13537dacbbc096489516994dc413084d3f5ef4b31bc14e494cd0443d111311ba4f6d0db082f55b2431296fb829de46d0930813168ae19e9ce093d0e4bc92554153105ade9e6bb0c59f50c953b959f670fe49de134d38044e43f8f6adeb01f6d97c0af8143747a9804e2465253aac841509aa5e4f47283ad067b03fbca43a839b250a0e2678b093a899087dbf8bc1ad1f42d4d3ba4a359067107ab74df3b3998b68859fa5adb3d34e7556ab8d73e29e4378107cc760331c52f2e842e7d8847811cacedcf2b1d0aeb512a9a6fcb348b2b5d371dd5671606e0fc1b3104af0b0c1265551e36ab8393ad75d82ffb3f4b508638f9e30981ba5f0755c9e6d16ef49271c4ff68b2c199fdd12af47f869d97183d5849748b681b63f5752d272ada0bab939a2aa0151d5d942926de466456eb1e5a1c4a2e9dca53421ac1c74cc60b7ee05243b578f27e8469356ca237f089e8770a05f086faf22e1f9dc1cf7bf1c5489f4c502843d28be58aa1afcbc1ed51c2216227c650df8d8fd7d64103e3d82d96a0406c2d607c1005bec528e7ebdb31d9c3ad4120f20dc6d3d6ab075dd1469912e5a15128d591162178be52d150b94a9247689ceaa8e88a508f72fdc120b541794c4329d5593caea0581c4cff8d88e95cb24c23452a790e5085ddedd7eb67c804964051d4936a718b7ad0ed7516eba1261cacdf70c766c3225b44a27a4e6b41ae11bb7db60573e8d49628dbe8c64f8e165ac45d857290ef7aa4d3acd7926a2727a514c6468b38f9d9ade2e91977433ed88a3a2ad4318dc2eeef05286745ee60fdf13e9ed612b922672bd70dae2468315d61992341ff577d5d00d08bc5ff8fb6af5ee6cd4153611b10961fbed433e567b758d24363faaa46ebb05c1b74728352ba52ddab66dc7b65db5abad08de0fc53e0ca85ddd4a181954f6ba08e30856f9ed002bbad626b136fd8ed5ccf2682e88d028bc9b1dfa8e6cac9d9bc355d4445aad958550f19198e218974276e8eed7aaeedb087fb997fdecca025ae5906eac78bc3c5d512767850e4238e335589fbd4a92dbf4c0b34baf9ad1292eb25254f9c5af14d2a5b428a462c208a3ee7eee676523c80c23bac460c26a7752ea798922b041e77dacf15481e462f94f7ab6134a2f8e70f9c81b0136e437daa0848e59978b994428eedfef675bee442493d275d6b746782a99ee548d4d234cec6b08307e76a324bb88cc794a28da6525887c45bca1a5c24be6a90befd64eacde7ff182259407f6206cdc74d060ed196af476bd6f8d44bc2afe9964eef9d80f173a24b123ef5654c45e84d7c757f8d8b4af9b25f25a1e12256427c23f99948f5dba43f6b52bff1da4b408dc8d10bb5215609b466f90e01e9ef6fe0b4e4d2339'     , 'hex' ).toString('binary'); </code></pre> <p><strong>Edit #2</strong>:</p> <p>As per help of Mark Adler, the solution for me was to downgrade to pako version <code>1.0.11</code>, as that seems to handle it via <code>pako.inflate</code>.</p>"	2022-01-24 00:55:37.38 UTC	70828121	<p>Use <code>inflate</code> instead of <code>inflateRaw</code>.</p>			2022-01-24 01:38:38.757 UTC
70828217	python|python-3.x|web-scraping|beautifulsoup	How To Webscrape A Page With Javascript Using Python?	"<p>Having a bit of trouble and can't seem to figure this out...</p> <p>I am trying to scrape the following URL below to get the body text, but seems like I am running into issues due to Javascript. Anyone have suggestions/thoughts on how to pull the text? Is this even possible? What is the best library to use?</p> <p><code>https://www.solanalysis.com/</code></p>"	2022-01-24 01:57:29.51 UTC	70828312	"<p>You have two options:</p> <ol> <li>You can use <a href=""https://selenium-python.readthedocs.io/"" rel=""nofollow noreferrer"">Selenium</a> to scrape data, loaded by Javascript.</li> <li>You can explore XHR requests on the page and figure out how data is loaded on the page. Maybe you will have an option to send this XHR request by yourself using the simple <code>requests</code> library, for instance, and get desired data.</li> </ol>"			2022-01-24 02:14:35.003 UTC
70828217	python|python-3.x|web-scraping|beautifulsoup	How To Webscrape A Page With Javascript Using Python?	"<p>Having a bit of trouble and can't seem to figure this out...</p> <p>I am trying to scrape the following URL below to get the body text, but seems like I am running into issues due to Javascript. Anyone have suggestions/thoughts on how to pull the text? Is this even possible? What is the best library to use?</p> <p><code>https://www.solanalysis.com/</code></p>"	2022-01-24 01:57:29.51 UTC	70836616	"<p>I would use the XHR request that fetched the data directly:</p> <pre><code>import requests import pandas as pd  url = 'https://solanalysis-graphql-dot-feliz-finance.uc.r.appspot.com/' headers = {'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.110 Safari/537.36'} payload = {&quot;operationName&quot;:&quot;GetProjectStatsQuery&quot;,            &quot;variables&quot;:{&quot;pagination_info&quot;:{&quot;page_number&quot;:1,&quot;page_size&quot;:100},              &quot;conditions&quot;:{},              &quot;order_by&quot;:[{&quot;field_name&quot;:&quot;market_cap&quot;,&quot;sort_order&quot;:&quot;DESC&quot;}]},            &quot;query&quot;:&quot;query GetProjectStatsQuery($conditions: GetProjectStatsCondition, $order_by: [OrderConfig!], $pagination_info: PaginationConfig) {\n  getProjectStats(\n    conditions: $conditions\n    order_by: $order_by\n    pagination_info: $pagination_info\n  ) {\n    project_stats {\n      project_id\n      market_cap\n      volume_7day\n      volume_1day_change\n      floor_price\n      average_price\n      average_price_1day_change\n      max_price\n      twitter_followers\n      num_of_token_listed\n      project {\n        supply\n        website\n        img_url\n        display_name\n        __typename\n      }\n      __typename\n    }\n    pagination_info {\n      total_page_number\n      current_page_number\n      has_next_page\n      current_page_size\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}  jsonData = requests.post(url, headers=headers, json=payload).json()   df = pd.DataFrame(jsonData['data']['getProjectStats']['project_stats']) </code></pre> <p><strong>Output:</strong></p> <pre><code>print(df.head(5).to_string())              project_id  market_cap  volume_7day  volume_1day_change  floor_price  average_price  average_price_1day_change  max_price  twitter_followers  num_of_token_listed                                                                                                                                                                                                                                                     project   __typename 0  shadowysupercoderdao   117666155       788363             -0.0510        115.0     119.822968                    -0.0085     133.00              30267                   57                                {'supply': 10000, 'website': 'https://genesysgo.com/', 'img_url': 'https://storage.googleapis.com/feliz-crypto/project_photos/shadowysupercoderdao.png', 'display_name': 'Shadowy Super Coder DAO', '__typename': 'Project'}  ProjectStat 1                   smb    82297085      1119240             -0.0572        137.0     167.117647                     0.0259     555.00              76989                  654                                                  {'supply': 5000, 'website': 'https://market.solanamonkey.business', 'img_url': 'https://storage.googleapis.com/feliz-crypto/smb.jpg', 'display_name': 'Solana Monkey Business', '__typename': 'Project'}  ProjectStat 2              degenape    47488440       432058             -0.0175         36.0      48.349231                    -0.0283     130.00              95024                 1487  {'supply': 10000, 'website': 'https://www.degenape.academy/', 'img_url': 'https://storage.googleapis.com/feliz-crypto/degenape/small/127RACV8SfCbbVrLdRbukh63zCDcubW4xVGh6aV6pnZi.jpg', 'display_name': 'Degenerate Ape Academy', '__typename': 'Project'}  ProjectStat 3        boryokudragonz    30880912       921541              0.1739        280.0     221.028112                     0.0342     269.69              18831                   12                                           {'supply': 1111, 'website': 'https://boryokudragonz.io/', 'img_url': 'https://storage.googleapis.com/feliz-crypto/project_photos/boryokudragonz.png', 'display_name': 'Boryoku Dragonz', '__typename': 'Project'}  ProjectStat 4                aurory    26850233       257762             -0.0401         22.0      27.342396                    -0.0001      28.90             178981                 1073                                                                           {'supply': 10000, 'website': 'https://app.aurory.io', 'img_url': 'https://storage.googleapis.com/feliz-crypto/aurorylogo.png', 'display_name': 'Aurory', '__typename': 'Project'}  ProjectStat </code></pre>"			2022-01-24 15:52:02.59 UTC
70839991	javascript|python|function|syntax|syntax-error	How to convert this function from javascript to python?	"<p><strong>Does anybody know how to convert this javascript function to python ?</strong></p> <p>javascript:</p> <pre><code>function ding(t, a, e, n) {   return t &gt; a &amp;&amp; t &lt;= e &amp;&amp; (t += n % (e - a)) &gt; e &amp;&amp; (t = t - e + a), t } </code></pre> <p>This is my try on doing so:</p> <pre><code>def ding(t, a, e, n):     return t &gt; a and t &lt;= e and (t + n % (e - a)) &gt; e and (t = (t - e + a)), t </code></pre> <p>It returns a <strong>syntax error</strong> at the &quot;=&quot; in  <code>(t = (t - e + a)) </code> and idk how to solve this right.</p> <p>When giving it these values:  <code>ding(53, 47, 57, 97) </code> it should return 50 in the original javascript function.</p>"	2022-01-24 20:21:00.997 UTC	70840081	"<p>that is because python doesn't support evaluating value assignment as assigned value. <code>(t = (t - e + a))</code> causes SyntaxError instead of returning <code>(t - e + a)</code>.</p> <p>&amp;&amp; operators on the original code seems to be used to eliminate the usage of if operators. This should behave the same way as it did on JS.</p> <pre class=""lang-py prettyprint-override""><code>def ding(t, a, e, n):     if a &lt; t &lt;= e:         t += n % (e - a)         if t &gt; e:             t -= (e - a)     return t </code></pre>"			2022-01-24 20:29:06.667 UTC
70839991	javascript|python|function|syntax|syntax-error	How to convert this function from javascript to python?	"<p><strong>Does anybody know how to convert this javascript function to python ?</strong></p> <p>javascript:</p> <pre><code>function ding(t, a, e, n) {   return t &gt; a &amp;&amp; t &lt;= e &amp;&amp; (t += n % (e - a)) &gt; e &amp;&amp; (t = t - e + a), t } </code></pre> <p>This is my try on doing so:</p> <pre><code>def ding(t, a, e, n):     return t &gt; a and t &lt;= e and (t + n % (e - a)) &gt; e and (t = (t - e + a)), t </code></pre> <p>It returns a <strong>syntax error</strong> at the &quot;=&quot; in  <code>(t = (t - e + a)) </code> and idk how to solve this right.</p> <p>When giving it these values:  <code>ding(53, 47, 57, 97) </code> it should return 50 in the original javascript function.</p>"	2022-01-24 20:21:00.997 UTC	70840057	"<p>Does it have to be a one-liner? Why not just split it into a few lines:</p> <pre class=""lang-py prettyprint-override""><code>def ding(t, a, e, n):     if t &gt; a and t &lt;= e:         t += n % (e - a)          if t &gt; e:             t -= e - a          return t      print(ding(53, 47, 57, 97)) # 50 </code></pre>"			2022-01-24 20:27:04.957 UTC
70843527	python|web-scraping|beautifulsoup	How To Extract Data Within a Javascript Tag Using Python's BeautifulSoup	"<p>I am trying to pull the data that proceeds 'series: ', as shown below.</p> <pre><code> }         },         series: [{ name: '', showInLegend: false, animation: false, color: '#c84329', lineWidth: 2, data: [[1640926800000,164243],[1638248400000,224192],[1635566400000,143606],[1632974400000,208461],[1630382400000,85036],[1627704000000,25604],[1625025600000,44012],[1622433600000,111099],[1619755200000,53928],[1617163200000,12286],[1614488400000,12622],[1612069200000,4519],[1609390800000,12665],[1606712400000,314],[1604116800000,3032],[1601438400000,4164],[1598846400000,3302],[1596168000000,22133],[1593489600000,8098],[1590897600000,-1385],[1588219200000,43165],[1585627200000,427],[1582952400000,175],[1580446800000,174],[1577768400000,116],[1575090000000,196],[1572494400000,215],[1569816000000,418],[1567224000000,375],[1564545600000,375],[1561867200000,179],[1559275200000,132],[1556596800000,146],[1554004800000,163],[1551330000000,3],[1548910800000,49],[1546232400000,-29],[1543381200000,108],[1540958400000,35],[1538280000000,159],[1535688000000,287],[1533009600000,1152],[1530331200000,1306]] }],         navigation: { menuItemStyle: { fontSize: '9px' } }     });       </code></pre> <p>More specifically, I'm trying to pull <code>data</code>, which has a list of unix timestamps and ints. This is what I have so far...</p> <pre><code>url = &quot;https://socialblade.com/twitter/user/twitter&quot; headers = {'User-Agent': 'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:80.0) Gecko/20100101 Firefox/80.0'} req = urllib.request.Request(url, headers=headers) response = urllib.request.urlopen(req) soup = bs(response.read(), 'html.parser')  soup = soup.find_all('script', {&quot;type&quot;: &quot;text/javascript&quot;}) script = soup[6].text </code></pre> <p>Any thoughts?</p>"	2022-01-25 04:42:56.977 UTC	70843973	"<p>Complete script for your required data</p> <pre class=""lang-py prettyprint-override""><code>import requests from bs4 import BeautifulSoup  url = &quot;https://socialblade.com/twitter/user/twitter&quot;  s = requests.Session()  r = requests.get(     url,     headers={         &quot;User-Agent&quot;: &quot;Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.71 Safari/537.36&quot;,     }, )  soup = BeautifulSoup(r.text, &quot;html.parser&quot;) req = soup.find_all(&quot;script&quot;, {&quot;type&quot;: &quot;text/javascript&quot;}) script = req[6].contents[0] data = script[2447: 3873]  print(data) </code></pre>"			2022-01-25 05:52:13.873 UTC
70843527	python|web-scraping|beautifulsoup	How To Extract Data Within a Javascript Tag Using Python's BeautifulSoup	"<p>I am trying to pull the data that proceeds 'series: ', as shown below.</p> <pre><code> }         },         series: [{ name: '', showInLegend: false, animation: false, color: '#c84329', lineWidth: 2, data: [[1640926800000,164243],[1638248400000,224192],[1635566400000,143606],[1632974400000,208461],[1630382400000,85036],[1627704000000,25604],[1625025600000,44012],[1622433600000,111099],[1619755200000,53928],[1617163200000,12286],[1614488400000,12622],[1612069200000,4519],[1609390800000,12665],[1606712400000,314],[1604116800000,3032],[1601438400000,4164],[1598846400000,3302],[1596168000000,22133],[1593489600000,8098],[1590897600000,-1385],[1588219200000,43165],[1585627200000,427],[1582952400000,175],[1580446800000,174],[1577768400000,116],[1575090000000,196],[1572494400000,215],[1569816000000,418],[1567224000000,375],[1564545600000,375],[1561867200000,179],[1559275200000,132],[1556596800000,146],[1554004800000,163],[1551330000000,3],[1548910800000,49],[1546232400000,-29],[1543381200000,108],[1540958400000,35],[1538280000000,159],[1535688000000,287],[1533009600000,1152],[1530331200000,1306]] }],         navigation: { menuItemStyle: { fontSize: '9px' } }     });       </code></pre> <p>More specifically, I'm trying to pull <code>data</code>, which has a list of unix timestamps and ints. This is what I have so far...</p> <pre><code>url = &quot;https://socialblade.com/twitter/user/twitter&quot; headers = {'User-Agent': 'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:80.0) Gecko/20100101 Firefox/80.0'} req = urllib.request.Request(url, headers=headers) response = urllib.request.urlopen(req) soup = bs(response.read(), 'html.parser')  soup = soup.find_all('script', {&quot;type&quot;: &quot;text/javascript&quot;}) script = soup[6].text </code></pre> <p>Any thoughts?</p>"	2022-01-25 04:42:56.977 UTC	70843853	"<p>The datatype of the script is a string so we can use the &quot;re&quot; module to find all occurrences of &quot;data&quot; in the script and then we can observe that every data in the script ends with &quot;}&quot; so we can find out the first &quot;}&quot; after data now using the index of the start of &quot;data&quot; substring and index of first &quot;}&quot; after data we can use string slicing to find out the data. you can see the code and output given below.</p> <pre><code>import re sub = &quot;data&quot; res = re.finditer(sub, script) for i in res:   k = script.find(&quot;}&quot;,i.start())   print(script[i.start():k]) </code></pre> <p>Output is: <a href=""https://i.stack.imgur.com/yd5Kg.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/yd5Kg.png"" alt=""enter image description here"" /></a></p>"			2022-01-25 05:34:24.81 UTC
70887570	javascript|python|selenium|automation|popup	How to automate javascript pop that ask to open an associated app using selenium and python?	"<p>Actually, I am trying to Built a GUI app in Tkinter using python where users can come and app links of their Zoom meetings so next time when they have that meeting they just click open in the app that will execute Selenium script that will open the browser and go that meeting link then open the zoom meeting but there comes a js pop asking the user to 'open zoom meeting' I want to accept this alert using selenium I tried using driver.switch_to.alert.accept() but it is not working for my case</p> <p>Here is the image of pop : <a href=""https://i.stack.imgur.com/skGFk.png"" rel=""nofollow noreferrer"">enter image description here</a></p> <p>Here is my code :</p> <pre><code>from selenium import webdriver import time from selenium.webdriver.support.ui import Select chrome_options = webdriver.ChromeOptions() chrome_options.add_argument('--incognito') chrome_driver_path = r&quot;D:\chromedriver\chromedriver.exe&quot; driver = webdriver.Chrome(executable_path=chrome_driver_path, chrome_options=chrome_options) driver.maximize_window() driver.get(&quot;https://zoom.us/w/91991973876?tk=zLXe-KANiKGkp50x9m4j8vgo09LNUmYhhVevTmS8_vY.DQMAAAAVayYf9BZuQWppVUdISlNtZTdKcm1fRDhNbUxRAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&amp;pwd=Qm5TRW1yVUM4T1dpSWxWcHZxZzdxdz09&quot;)  # For maximizing window time.sleep(4) driver.switch_to.alert.accept() </code></pre>"	2022-01-28 00:34:31.847 UTC	70899299	"<p>This is considered a Chrome browser notification rather than an alert. You could disable browser notifications by setting notification preferences like this:</p> <pre><code>prefs = {&quot;profile.default_content_setting_values.notifications&quot; : 2} chrome_options.add_experimental_option(&quot;prefs&quot;, prefs) </code></pre>"			2022-01-28 19:30:52.97 UTC
70890905	javascript|python|session	get stored cookies by python or javascript	"<p><a href=""https://i.stack.imgur.com/g6gk5.jpg"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/g6gk5.jpg"" alt=""enter image description here"" /></a>I have a webpage. I log in with my username and password. Session stored in Chrome.</p> <p>In this format<br /> Name = <code>session</code><br /> Content = <code>.eJwlj0tuwzAMBe_CtRcSKZpiLmNI_KBBggawk1XRu1dA1w8zmPcDR55xfcHtfX5ig-PucAOOOkLYK3uhVnzOoqaqTDmyYqAhIjOatNplBpQhEFQ-Zo3nTR7pVaZjNnlbobM-E-PJXW1KMEW0EZpEIiFRM2sOvM4</code></p> <p>I can't get the stored session. I tried lots of ways on the internet but couldn't get it.</p> <p>I used document. session returns undefined. Used browser cookie library but still nothing. Used other npm packages.</p> <p>All cookies examples are made for Google but can't get them from my page.</p>"	2022-01-28 08:41:55.417 UTC	70893084	"<p>A session id like this is usually stored as a cookie so it can be passed back to the server easily with each request. So the question becomes <a href=""https://stackoverflow.com/questions/10730362/get-cookie-by-name"">how can I get a cookie by name?</a></p> <p>You could probably use a one-liner a little like this- test it in the Javascript console to see whether it needs any tweaking for your situation:</p> <pre><code>document.cookie.split(';').find( (x) =&gt; x.trim().startsWith('session=')).trim().substring('session='.length); </code></pre>"			2022-01-28 11:34:34.217 UTC
70892102	javascript|python|acrobat-sdk	How can one embed or call some Python code in an Acrobat JavaScript script?	"<p>I am writing an <a href=""https://evermap.com/javascript.asp"" rel=""nofollow noreferrer"">Acrobat Javascript script</a>. How can one embed or call some Python code in an Acrobat JavaScript script?</p>"	2022-01-28 10:20:00.733 UTC	70893623	"<p>According to an experienced Acrobat user on <a href=""https://community.adobe.com/t5/acrobat-sdk-discussions/how-can-one-embed-or-call-some-python-code-in-a-acrobat-javascript-script/m-p/12712912#M88574"" rel=""nofollow noreferrer"">https://community.adobe.com/t5/acrobat-sdk-discussions/how-can-one-embed-or-call-some-python-code-in-a-acrobat-javascript-script/m-p/12712912#M88574</a>, it's not possible to embed or call some Python code in an Acrobat JavaScript script. I'm guessing the only solution is attempting to convert the python code into some JavaScript that Acrobat understands.</p>"			2022-01-28 12:13:54.927 UTC
70905400	python|html	Repetitive execution of a Python code daily without Javascript	"<p>I intend to use Python to generate an HTML code that will be saved to an external file. The HTML code will display the current day. No Javascript nor PHP allowed. How can I make the Python code repeat every day after midnight, so that the corresponding HTML file will contain a valid day in a week info? Thank you. My code:</p> <pre><code>import datetime t=datetime.datetime.now()  s=&quot;&quot;&quot;&lt;!DOCTYPE html&gt; &lt;html lang=&quot;en&quot;&gt; &lt;head&gt; &lt;meta charset=&quot;utf-8&quot;/&gt; &lt;title&gt;Daily Portal&lt;/title&gt; &lt;/head&gt; &lt;body&gt;  &lt;div&gt;{maininfo:}&lt;/div&gt;   &lt;/body&gt; &lt;/html&gt;&quot;&quot;&quot;   s1=t.strftime(&quot;%A&quot;) s2=&quot;Good morning John. Today is &quot;+s1+&quot;.&quot;+&quot; Have a beautiful day.&quot;  s=s.format(maininfo=s2)  print(s) </code></pre>"	2022-01-29 12:32:37.993 UTC	70905542	"<p>You can set a job scheduler to execute the code everyday. Refer <a href=""https://stackoverflow.com/questions/11774925/how-to-run-a-python-file-using-cron-jobs"">here</a> and <a href=""https://phoenixnap.com/kb/set-up-cron-job-linux"" rel=""nofollow noreferrer"">here</a> (if you are running on a unix system).</p>"			2022-01-29 12:47:51.13 UTC
70920702	javascript|python|selenium|web-scraping	Can't Find Javascript href Link in Python Webscrape	"<p>I'm trying to webscrape this site: <a href=""https://www2.tse.or.jp/tseHpFront/JJK020010Action.do"" rel=""nofollow noreferrer"">https://www2.tse.or.jp/tseHpFront/JJK020010Action.do</a></p> <p>Using the Selenium package, with Google Chrome as my browser, I'm able to open it up, choose some settings, and then run a search. I'm encountering an error because there are 21 pages of information, and I need to gather all of it, however with my code I am unable to find the link that clicks to the next page. This is what that next button's code is:</p> <pre><code>&lt;div class=&quot;next_e&quot;&gt;    &lt;a href=&quot;javascript:setPage(2);submitPage(document.JJK020030Form, document.JJK020030Form.Transition);&quot;&gt;       &lt;img src=&quot;/common/images/spacer.gif&quot;  width=&quot;77&quot;  height=&quot;24&quot;  alt=&quot;Next&quot;&gt;    &lt;/a&gt; &lt;/div&gt; </code></pre> <p>Note -- the number in the brackets after 'setPage' corresponds to the next page number. So if I'm on page 1 the code would read setPage(2), etc.</p> <p>Here is my complete code for the webscrape:</p> <pre><code>driver.get(&quot;https://www2.tse.or.jp/tseHpFront/JJK020030Action.do&quot;) sleep(20) data = []  button = driver.find_element_by_name(&quot;dspSsuPd&quot;) #driver.find_elements_by_class_name button200 = Select(button) button200.select_by_value('200')  sleep(10)  checkboxes = ['001', '002', '004', '006', '008', '101', '102', '104', 'ETF', 'ETN', 'RET', 'PSC', '999'] for box in checkboxes:     driver.find_element_by_xpath(f&quot;//input[@value='{box}']&quot;).click()  search_button = &quot;//*[@class='activeButton' and @value='Start of search']&quot; driver.find_element(By.XPATH, search_button).click() sleep(20)  soup1 = BeautifulSoup(driver.page_source, 'lxml') tables1 = soup.find_all('table') df = pd.read_html(driver.page_source)[-1] data.append(df)  for i in range(2, 21):      ## right here is where I'm encountering my issue ##     next_href = f&quot;//*[@class='next_e' and @href ='javascript:setPage({i});submitPage(document.JJK020030Form, document.JJK020030Form.Transition);']&quot;     driver.find_element(By.XPATH, next_href).click()     sleep(10)      soup = BeautifulSoup(driver.page_source, 'lxml')     tables = soup.find_all('table')     df1 = pd.read_html(driver.page_source)[-1]     data.append(df1)  driver.quit() df_data = pd.DataFrame(pd.concat(data)).reset_index(drop=True) print(df_data) df_data.to_csv('companies_data_borse_frankfurt.csv', index=False) </code></pre> <p>The other options I have tried to click this href (all of which haven't worked), include:</p> <pre><code>driver.find_element(By.XPATH, &quot;//div[@class='next_e']/a[contains(., 'setPage')]&quot;).click() </code></pre> <pre><code>WebDriverWait(driver, 20).until(EC.element_to_be_clickable((By.XPATH, &quot;//div[@class='next_e']/a[contains(., 'setPage')]&quot;))).click() </code></pre> <pre><code>driver.find_element_by_xpath(f'//input[@href=&quot;javascript:setPage({i});submitPage(document.JJK020030Form, document.JJK020030Form.Transition);&quot;]').click() </code></pre> <pre><code>driver.find_element_by_partial_link_text(f'javascript:setPage({i})') </code></pre> <p>Please let me know if you have a solution or need further clarification on the issue. Thank you!</p>"	2022-01-31 02:31:04.66 UTC	70920997	"<pre><code>wait=WebDriverWait(driver,60)       wait.until(EC.element_to_be_clickable((By.CSS_SELECTOR,&quot;div.next_e&gt;a&quot;))).click() </code></pre> <p>Using this work just fine for going through the pages.</p> <p>Import:</p> <pre><code>from selenium.webdriver.common.by import By from selenium.webdriver.support.ui import WebDriverWait  from selenium.webdriver.support import expected_conditions as EC </code></pre>"			2022-01-31 03:31:05.433 UTC
70931826	javascript|python	javascript to python dictionary help needed	"<p>I need some help extracting javascript data to my python programme.</p> <pre><code>    soup = BeautifulSoup(wm, &quot;html.parser&quot;)     scripts = soup.findAll('script')     s = scripts[:50]     print(s) </code></pre> <p>Using the above i am getting the below output - again within a javascript </p> <p>I am looking to extract the data below from this - any help would be much appreciated!</p> <p>In essence i am looking to get the items.push&gt; saved as a python dictionary.</p> <pre>           var items = [];                 items.push({              'item_id': '196388',              'item_name': 'Rolex Submariner 116610 LN',              'item_brand': 'Rolex',              'item_collection': 'Submariner',              'item_variant': '116610 LN',              'item_category': 'watch',              'price': '12500',              'currency': 'GBP',              'quantity': '1',              'item_material_case': 'Steel',              'item_material_strap': 'Steel (Oyster)',              'item_dial': 'Black',              'item_size': '40',              'item_box': 'True',              'item_papers': 'True',              'item_special_edition': 'False',              'item_available': 'instock',              'item_sellable': 'sellable',              'item_year': '2013'                });                     items.push({              'item_id': '211954',              'item_name': 'Rolex Submariner 116610 LN',              'item_brand': 'Rolex',              'item_collection': 'Submariner',              'item_variant': '116610 LN',              'item_category': 'watch',              'price': '12400',              'currency': 'GBP',              'quantity': '1',              'item_material_case': 'Steel',              'item_material_strap': 'Steel (Oyster)',              'item_dial': 'Black',              'item_size': '40',              'item_box': 'True',              'item_papers': 'True',              'item_special_edition': 'False',              'item_available': 'preorder',              'item_sellable': 'sellable',              'item_year': '2012'                });           </pre>"	2022-01-31 19:34:01.357 UTC	70931951	"<p>Seeing your data I think you fetch them from an API, so given the endpoint you can get the dict using this:</p> <pre><code>import requests response = requests.get(endpoint) json = response.json() // your dict </code></pre>"			2022-01-31 19:44:47.723 UTC
70940171	python|selenium|selenium-webdriver	How to click on a javascript element using SELENIUM automation and python?	"<p>I am trying to develop a script that will tell you when there are available rendez vous at a certain service.</p> <p>For this i am trying to use SELENIUM automation to interact with the page to check the available rendez vous slots (when there are any)</p> <p>The problem i am having is that the web page contains javascript!</p> <p>full page: <a href=""https://pastel.diplomatie.gouv.fr/rdvinternet/html-4.02.00/frameset/frameset.html?lcid=1&amp;sgid=193&amp;suid=2"" rel=""nofollow noreferrer"">https://pastel.diplomatie.gouv.fr/rdvinternet/html-4.02.00/frameset/frameset.html?lcid=1&amp;sgid=193&amp;suid=2</a></p> <p>here is the basic code of the page:</p> <pre><code>&lt;html&gt;&lt;head&gt;     &lt;title&gt;Menu&lt;/title&gt;     &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;/rdvinternet/FrameworkERGO-2.12.1/css/menu.css&quot;&gt;     &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;/rdvinternet/FrameworkERGO-2.12.1/css/commun/globale.css&quot;&gt;     &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;/rdvinternet/FrameworkERGO-2.12.1/css/commun/cg_commun.css&quot;&gt;     &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;/rdvinternet/FrameworkERGO-2.12.1/css/couleur/cg_codeCouleur.css&quot;&gt; &lt;/head&gt; &lt;body marginwidth=&quot;0&quot; marginheight=&quot;0&quot;&gt; &lt;div id=&quot;divMenu&quot; style=&quot;&quot;&gt; &lt;table valign=&quot;top&quot; cellpadding=&quot;2&quot; cellspacing=&quot;0&quot; border=&quot;0&quot; width=&quot;100%&quot; height=&quot;100%&quot;&gt; &lt;tbody&gt; &lt;tr id=&quot;zoneDebutMenu&quot; style=&quot;display:none;&quot;&gt;&lt;td&gt;&lt;div id=&quot;DebutMenu&quot;&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt; &lt;tr&gt; &lt;td valign=&quot;top&quot;&gt; &lt;table cellpadding=&quot;0&quot; cellspacing=&quot;0&quot; border=&quot;0&quot; width=&quot;100%&quot;&gt; &lt;tbody&gt;&lt;tr&gt; &lt;td class=&quot;menu1Item1&quot; onclick=&quot;javascript:parent.parent.ComposantMenuFrameset.SelectItem1Menu1(0,false)&quot; onmouseover=&quot;javascript:parent.parent.ComposantMenuFrameset.Item1SetUnSelectedOverClass(0)&quot; onmouseout=&quot;javascript:parent.parent.ComposantMenuFrameset.Item1OnMouseOut(0)&quot; width=&quot;168&quot;&gt;&amp;nbsp;&amp;nbsp;&lt;span id=&quot;item1_0&quot; class=&quot;menuSelected11&quot;&gt;Rendez-vous&lt;/span&gt;&lt;/td&gt; &lt;td class=&quot;FlecheMenu2Item1&quot; width=&quot;16&quot; align=&quot;absmiddle&quot;&gt;&lt;img src=&quot;/rdvinternet/FrameworkERGO-2.12.1/images/bouton/divers/spacer.gif&quot; alt=&quot;&quot; height=&quot;16&quot; width=&quot;16&amp;quot;&quot; border=&quot;0&quot;&gt;&lt;/td&gt;  &lt;/tr&gt; &lt;tr&gt; &lt;td colspan=&quot;2&quot;&gt;&lt;div id=&quot;subItems1_0&quot; style=&quot;&quot;&gt; &lt;table cellpadding=&quot;0&quot; cellspacing=&quot;0&quot; border=&quot;0&quot;&gt; &lt;tbody&gt;&lt;tr&gt; &lt;td class=&quot;menu1Item2&quot; onclick=&quot;javascript:parent.parent.ComposantMenuFrameset.SelectItem2Menu1(0,0,false)&quot; onmouseover=&quot;javascript:parent.parent.ComposantMenuFrameset.Item2SetUnSelectedOverClass(0,0)&quot; onmouseout=&quot;javascript:parent.parent.ComposantMenuFrameset.Item2OnMouseOut(0,0)&quot;&gt;&lt;div id=&quot;item2_0_0&quot; class=&quot;menuUnselected12&quot;&gt; Prendre rendez-vous&lt;/div&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td class=&quot;menu1Item2&quot; onclick=&quot;javascript:parent.parent.ComposantMenuFrameset.SelectItem2Menu1(0,1,false)&quot; onmouseover=&quot;javascript:parent.parent.ComposantMenuFrameset.Item2SetUnSelectedOverClass(0,1)&quot; onmouseout=&quot;javascript:parent.parent.ComposantMenuFrameset.Item2OnMouseOut(0,1)&quot;&gt;&lt;div id=&quot;item2_0_1&quot; class=&quot;menuUnselected12&quot;&gt; Revoir son rendez-vous&lt;/div&gt;&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt;&lt;/table&gt; &lt;/div&gt; &lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td colspan=&quot;2&quot;&gt;&amp;nbsp;&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt;&lt;/table&gt; &lt;/td&gt; &lt;/tr&gt; &lt;tr id=&quot;zoneFinMenu&quot; style=&quot;display:none;&quot;&gt;&lt;td valign=&quot;bottom&quot;&gt;&lt;div id=&quot;FinMenu&quot;&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt; &lt;tr&gt;&lt;td valign=&quot;bottom&quot;&gt;&lt;div id=&quot;piedDePage&quot; class=&quot;piedDePage&quot;&gt;© Ministère de l'Europe et des Affaires étrangères&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;/div&gt;  &lt;/body&gt;&lt;/html&gt; </code></pre> <p>I am trying to click on an element using:</p> <pre><code>find_element_by_class_name('menu1Item2').click() </code></pre> <p>and:</p> <pre><code>find_element_by_id('item2_0_0').click() </code></pre> <p>and neither methods have worked to click on the element :( any ideas?</p>"	2022-02-01 11:55:57.84 UTC	70941810	"<p>I've looked the html from the top level to the element, and the element is inside two nested <code>&lt;iframe&gt;</code> tags (which is odd). In order to interact with elements inside iframes, you must change the browser context via the <code>driver.switch_to.frame()</code> method.</p> <p>This is the code</p> <pre><code>    driver.get('https://pastel.diplomatie.gouv.fr/rdvinternet/html-4.02.00/frameset/frameset.html?lcid=1&amp;sgid=193&amp;suid=2')          sleep(3) # Wait the iframes content to load.     driver.switch_to.frame('BODY_WIN')     driver.switch_to.frame('MENU_WIN')          driver.find_elements(By.ID, 'item2_0_0').click() </code></pre> <p>You can improve this code by changing the sleep() for one of the selenium wait methods.</p> <p>References:</p> <p><a href=""https://stackoverflow.com/questions/44834358/switch-to-an-iframe-through-selenium-and-python"">Switch to iframe</a></p> <p><a href=""https://selenium-python.readthedocs.io/api.html?highlight=switch_to#selenium.webdriver.remote.webdriver.WebDriver.switch_to"" rel=""nofollow noreferrer"">Selenium documentation</a></p> <p><a href=""https://selenium-python.readthedocs.io/waits.html"" rel=""nofollow noreferrer"">Selenium Waits</a></p>"			2022-02-01 13:58:09.537 UTC
70945745	python|python-3.x|selenium|selenium-chromedriver	Python Selenium - pressing javascript src button	"<p>I'm trying to click on a button that is generated using this javascript code</p> <pre><code>&lt;script type='text/javascript' value name =&quot;clickme&quot;  src='//examplecode.com/example.js&gt; </code></pre> <p>I'm using driver.findelement and it says &quot;selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable&quot;, heres my python code:</p> <pre><code>from webdriver_manager.chrome import ChromeDriverManager from selenium import webdriver from selenium.webdriver.chrome.options import Options from selenium.webdriver.support.ui import WebDriverWait from selenium.webdriver.common.by import By import time   options = webdriver.ChromeOptions()  # Initializing Chrome Options from the Webdriver options.add_experimental_option(&quot;useAutomationExtension&quot;, False)  # Adding Argument to Not Use Automation Extension options.add_experimental_option('excludeSwitches', ['enable-logging']) options.add_experimental_option(&quot;excludeSwitches&quot;, [&quot;enable-automation&quot;])  # Excluding enable-automation Switch  #options.add_argument(&quot;disable-popup-blocking&quot;) #options.add_argument(&quot;disable-notifications&quot;) options.add_argument(&quot;--enable-infobars&quot;) options.add_argument(&quot;--enable-extensions&quot;) options.add_argument(&quot;disable-gpu&quot;) options.add_argument(&quot;start-maximized&quot;) prefs = {&quot;profile.default_content_setting_values.notifications&quot; : 1} options.add_experimental_option(&quot;prefs&quot;,prefs)  driver = webdriver.Chrome(options=options,executable_path=ChromeDriverManager().install()) driver.get(&quot;http://examplesite.com/&quot;)  tabName = driver.find_element(By.NAME, &quot;clickme&quot;) tabName.click()   time.sleep(200) driver.quit() </code></pre>"	2022-02-01 18:33:44.147 UTC	71005177	"<p>maybe have some element layer upper than click() element</p> <p>try this code:</p> <pre><code>tabname=WebDriverWait(driver, 2).until(EC.element_to_be_clickable((By.CLASS_NAME, 'balabala'))) driver.execute_script(&quot;arguments[0].click();&quot;, tabname) </code></pre>"			2022-02-06 07:51:22.43 UTC
70948315	javascript|python|sockets|websocket|python-socketio	Python Socketio not connecting with JavaScript socket.io-client	"<p>I want to simply connect socket.io-client to python server, but for some reason it's keep failing. Initially I start my python server and then try to connect JavaScript as my client server after following that process what I see is JavaScript client server is keep trying to connect and failing with following error:</p> <blockquote> <p>websocket.js:88 WebSocket connection to 'ws://localhost:5100/socket.io/?EIO=4&amp;transport=websocket' failed:</p> </blockquote> <p>and python server also repeating following error:</p> <blockquote> <p>(10448) accepted ('127.0.0.1', 61471) 127.0.0.1 - - [01/Feb/2022 15:14:01] &quot;GET /socket.io/?EIO=4&amp;transport=websocket HTTP/1.1&quot; 400 136 0.000000</p> </blockquote> <p>I am using python3.10 with socketio following Document:</p> <p><a href=""https://python-socketio.readthedocs.io/en/latest/"" rel=""nofollow noreferrer"">https://python-socketio.readthedocs.io/en/latest/</a>.</p> <p>Also tried version compatibility:</p> <p><a href=""https://pypi.org/project/python-socketio/"" rel=""nofollow noreferrer"">https://pypi.org/project/python-socketio/</a></p> <p><strong>pip3 freeze</strong></p> <p>I have tried multiple version for python-engineio and python-socketio to match my socket.io-client but no improvements.</p> <pre><code>eventlet==0.33.0 python-engineio==3.13.0 python-socketio==4.6.1 </code></pre> <p><strong>server.py</strong></p> <pre><code>import eventlet import socketio  sio = socketio.Server() app = socketio.WSGIApp(sio)  @sio.event def connect(sid, environ):     print('[INFO] Connect to client', sid)  @sio.event def disconnect(sid):     print('disconnect ', sid)  #ESI.local 192.168.2.95 if __name__ == '__main__':     eventlet.wsgi.server(eventlet.listen(('0.0.0.0', 5100)), app)      </code></pre> <p><strong>HTML/JavaScript</strong></p> <pre><code>&lt;!DOCTYPE html&gt; &lt;html lang=&quot;en&quot;&gt; &lt;head&gt;     &lt;meta charset=&quot;UTF-8&quot;&gt;     &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;     &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;     &lt;title&gt;Document&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;h1&gt;Socket IO Demo&lt;/h1&gt;     &lt;script type=&quot;module&quot;&gt;         import { io } from &quot;https://cdn.socket.io/4.3.2/socket.io.esm.min.js&quot;;                  const sio = io(&quot;http://localhost:5100:&quot;, {             forceJSONP: true,             secure: true,             jsonp: true,             transports: [ &quot;websocket&quot;,&quot;polling&quot;]         });          sio.on(&quot;connect&quot;, () =&gt; {             console.log(&quot;connected&quot;);         });          sio.on(&quot;disconnect&quot;, () =&gt; {             console.log(&quot;Disconnected&quot;);         });     &lt;/script&gt; &lt;/body&gt; &lt;/html&gt; </code></pre>"	2022-02-01 22:22:32.907 UTC	70948664	"<p>If you want to perform websocket, i'll recommend using WebSocket package built-in and websocket from gevent.</p> <p>Here what I have done to achieve a thing similar as what you want to do :</p> <pre class=""lang-js prettyprint-override""><code>let socket = new WebSocket('ws://localhost:8080');  console.log('Created socket');  // Connection opened socket.addEventListener('open', function (event) {     socket.send('Hello Server!'); });  // Listen for messages socket.addEventListener('message', function (event) {     console.log('Message from server ', event.data); });  // For example : send array socket.send(JSON.stringify([1, 2, 3])); </code></pre> <p>Python server:</p> <pre class=""lang-py prettyprint-override""><code>from geventwebsocket import WebSocketServer, WebSocketApplication, Resource from collections import OrderedDict  class Application(WebSocketApplication):     def on_open(self):         print(&quot;Connection opened&quot;)      def on_message(self, message):         print(&quot;Got message: &quot;, message)         # self.ws.send(...) to make a response      def on_close(self, reason):         print(reason)  WebSocketServer(     ('localhost', 8080),     Resource(OrderedDict([('/', Application)])) ).serve_forever() </code></pre> <p>Gevent (python) : <a href=""https://pypi.org/project/gevent-websocket/"" rel=""nofollow noreferrer"">https://pypi.org/project/gevent-websocket/</a></p>"			2022-02-01 22:58:58.783 UTC
70948315	javascript|python|sockets|websocket|python-socketio	Python Socketio not connecting with JavaScript socket.io-client	"<p>I want to simply connect socket.io-client to python server, but for some reason it's keep failing. Initially I start my python server and then try to connect JavaScript as my client server after following that process what I see is JavaScript client server is keep trying to connect and failing with following error:</p> <blockquote> <p>websocket.js:88 WebSocket connection to 'ws://localhost:5100/socket.io/?EIO=4&amp;transport=websocket' failed:</p> </blockquote> <p>and python server also repeating following error:</p> <blockquote> <p>(10448) accepted ('127.0.0.1', 61471) 127.0.0.1 - - [01/Feb/2022 15:14:01] &quot;GET /socket.io/?EIO=4&amp;transport=websocket HTTP/1.1&quot; 400 136 0.000000</p> </blockquote> <p>I am using python3.10 with socketio following Document:</p> <p><a href=""https://python-socketio.readthedocs.io/en/latest/"" rel=""nofollow noreferrer"">https://python-socketio.readthedocs.io/en/latest/</a>.</p> <p>Also tried version compatibility:</p> <p><a href=""https://pypi.org/project/python-socketio/"" rel=""nofollow noreferrer"">https://pypi.org/project/python-socketio/</a></p> <p><strong>pip3 freeze</strong></p> <p>I have tried multiple version for python-engineio and python-socketio to match my socket.io-client but no improvements.</p> <pre><code>eventlet==0.33.0 python-engineio==3.13.0 python-socketio==4.6.1 </code></pre> <p><strong>server.py</strong></p> <pre><code>import eventlet import socketio  sio = socketio.Server() app = socketio.WSGIApp(sio)  @sio.event def connect(sid, environ):     print('[INFO] Connect to client', sid)  @sio.event def disconnect(sid):     print('disconnect ', sid)  #ESI.local 192.168.2.95 if __name__ == '__main__':     eventlet.wsgi.server(eventlet.listen(('0.0.0.0', 5100)), app)      </code></pre> <p><strong>HTML/JavaScript</strong></p> <pre><code>&lt;!DOCTYPE html&gt; &lt;html lang=&quot;en&quot;&gt; &lt;head&gt;     &lt;meta charset=&quot;UTF-8&quot;&gt;     &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;     &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;     &lt;title&gt;Document&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;h1&gt;Socket IO Demo&lt;/h1&gt;     &lt;script type=&quot;module&quot;&gt;         import { io } from &quot;https://cdn.socket.io/4.3.2/socket.io.esm.min.js&quot;;                  const sio = io(&quot;http://localhost:5100:&quot;, {             forceJSONP: true,             secure: true,             jsonp: true,             transports: [ &quot;websocket&quot;,&quot;polling&quot;]         });          sio.on(&quot;connect&quot;, () =&gt; {             console.log(&quot;connected&quot;);         });          sio.on(&quot;disconnect&quot;, () =&gt; {             console.log(&quot;Disconnected&quot;);         });     &lt;/script&gt; &lt;/body&gt; &lt;/html&gt; </code></pre>"	2022-02-01 22:22:32.907 UTC	70988894	"<p>After many trial and error. I have finally cracked it. This was happening due to CORS even though I used CORS google extension to handle this situation, but I guess this was supposed to be handled on backend. Simply passing (cors_allowed_origins=&quot;*&quot;) to socketio.Server() it fixed everything.</p> <pre><code>sio = socketio.Server(cors_allowed_origins=&quot;*&quot;) </code></pre>"			2022-02-04 15:29:20.47 UTC
70958234	javascript|python|django|timezone|gettime	Django python + javascript countdown – different times in Python and Javascript?	"<p><strong>EDIT #2</strong></p> <p>Again, I spend some time with the code and some more research:</p> <p><strong>In my views.py I do the following</strong></p> <pre><code>timestamp = datetime.combine(inst.date, inst.time).strftime('%s') </code></pre> <p><code>timestamp</code> get passed through the template to javascript. But the unexplainable (for me) happens in the views.py</p> <p><strong>Output views.py</strong></p> <blockquote> <p>Timestamp: 2022-02-03 20:10:00</p> </blockquote> <blockquote> <p>Timestamp.strftime('%s'): 1643919000</p> </blockquote> <p><strong>Output javscript</strong></p> <blockquote> <p>Date Thu Feb 03 2022 21:10:00 GMT+0100 (Central European Standard Time) 1643919000000</p> </blockquote> <p>The (milli-)seconds outputs are basically the same but the <code>datetime.datetime object</code> in Python and the <code>Date</code> object in Javascript is different.</p> <p>What magic is at play here?</p> <hr /> <p><strong>EDIT</strong></p> <p>After some re-tuning (thanks to Kyvex in the comments), I got the gap down to one hour. Which is now somehow explainable:</p> <p>This is the .js code now:</p> <pre><code>var countDownDate = JSON.parse(document.getElementById('timestamp').textContent); //new Date(&quot;Feb 2, 2022 22:59:00 GMT+0000&quot;).getTime();   var x = setInterval(function () {      var now = new Date().getTime();     console.log(countDownDate);     const GMT = 3600000;     console.log(now);     var difference = countDownDate * 1000 - now - GMT;      var days = Math.floor(difference / (1000 * 60 * 60 * 24));     var hours = Math.floor((difference % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));     var minutes = Math.floor((difference % (1000 * 60 * 60)) / (1000 * 60));     var seconds = Math.floor((difference % (1000 * 60)) / 1000);      document.getElementById(&quot;clock&quot;).innerHTML = days + &quot;d &quot; + hours + &quot;h &quot;         + minutes + &quot;m &quot; + seconds + &quot;s &quot;;      if (difference &lt; 0) {         clearInterval(x);         document.getElementById(&quot;clock&quot;).innerHTML = &quot;&lt;h1&gt;EXPIRED!&lt;/h1&gt;&quot;;     }  }, 1000); </code></pre> <p>I logged both <code>countDownDate</code> and <code>now</code>. It seems like they use different offsets. <code>countDownDate</code>, coming from python, seems to have an offset of GMT+0000, whereas <code>now</code> returns a GMT+0100. I now hard-coded this difference by subtracting <code>const GMT = 3600000</code>. But this cannot be the solution to the problem.</p> <p>How can I get them in sync?</p> <hr /> <p>I am relatively new and just a hobbyist programmer. At the moment I try to work on a small Django project where I want to set a date and time in the future via a form and after the user clicks &quot;Submit&quot;, the page shows a countdown from now until the set date and time.</p> <p>After experimenting a bit with the datetime module, I find myself with an awkward problem. I have two fields in the forms: 1. date, and 2. time With <code>timestamp = datetime.datetime.combine(date, time).strftime('%s')</code> I combine those two information and get a seconds output. I then, pass <code>timestamp</code> to my .js file with <code>{{ timestamp|json_script:'timestamp'}}</code>.</p> <p>Here is my .HTML code:</p> <pre><code>&lt;body&gt;   {% load static %}   &lt;html&gt;     &lt;form method=&quot;post&quot; enctype=&quot;multipart/form-data&quot;&gt;       {% csrf_token %} {{ form.as_p }}       &lt;button type=&quot;submit&quot;&gt;Submit&lt;/button&gt;     &lt;/form&gt;      {% if inst %}      &lt;center&gt;&lt;h3&gt;Success&lt;/h3&gt;     &lt;div id=&quot;clock&quot;&gt;&lt;/div&gt;&lt;/center&gt;      {{ timestamp | json_script:'timestamp'}}      &lt;script src=&quot;{% static 'js/timer.js' %}&quot;&gt;&lt;/script&gt;     {% endif %}   &lt;/html&gt; &lt;/body&gt; </code></pre> <p>If I now set <code>setTime</code> only 2 minutes in the future, my countdown shows 4 hours, and the <code>difference</code> is 3 hours.</p> <p>I get that there are timezone and DST differences at play but from where I am nothing would add up to 3 or 4 hours.</p> <p>Excuse me if this is all too unprofessional and just a lay description of my problem. I would appreciate the community's help since I am trying to get better and understand all those underlying processes here.</p> <p>Thanks a lot!</p>"	2022-02-02 15:21:59.873 UTC	70988137	"<p>I just solved it!!</p> <p>Here is my .js code</p> <pre><code>var countDownDate = JSON.parse(document.getElementById('timestamp').textContent);  var newDate = new Date(countDownDate * 1000);  // Get NOW var now = new Date();  // Get Timezone offset from imported date var tzDifference = newDate.getTimezoneOffset();  // calculate the new offset time var offsetNewTime = new Date(newDate.getTime() + tzDifference * 60 * 1000)  var x = setInterval(function () {      var now = new Date();          // console.log(now.getTime());     var difference = offsetNewTime - now;      var days = Math.floor(difference / (1000 * 60 * 60 * 24));     var hours = Math.floor((difference % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));     var minutes = Math.floor((difference % (1000 * 60 * 60)) / (1000 * 60));     var seconds = Math.floor((difference % (1000 * 60)) / 1000);      document.getElementById(&quot;clock&quot;).innerHTML = days + &quot;d &quot; + hours + &quot;h &quot;         + minutes + &quot;m &quot; + seconds + &quot;s &quot;;      if (difference &lt; 0) {         clearInterval(x);         document.getElementById(&quot;clock&quot;).innerHTML = &quot;&lt;h1&gt;EXPIRED!&lt;/h1&gt;&quot;;     }  }, 1000); </code></pre> <p>With the help from this post: <a href=""https://stackoverflow.com/questions/7403486/add-or-subtract-timezone-difference-to-javascript-date"">add or subtract timezone difference to javascript Date</a></p> <p>Somehow I got two different time offsets from python and javascript. So I used <code>getTimezoneOffset();</code> to account for that and add this offset to the imported datetime.</p> <p>This just works now and I hope it does independently of the timezone one finds themselves in.</p> <p>If you have any comments on that please feel free to add them, of course.</p>"			2022-02-04 14:36:21.34 UTC
70963534	python|web-scraping|async-await	Python webscraping Javascript with Await	"<p>I have a problem concerning webscraping with Python. I'm trying to get the data from the first table from <a href=""https://www.nyse.com/ipo-center/filings"" rel=""nofollow noreferrer"">https://www.nyse.com/ipo-center/filings</a> by using <code>from requests_html import AsyncHTMLSession</code>.</p> <p>My code is here:</p> <pre><code>from bs4 import BeautifulSoup from requests_html import AsyncHTMLSession  #first define the URL and start the session url = 'http://www.nyse.com/ipo-center/filings' session = AsyncHTMLSession()  #then get the URL content, and load the html content after parsing through the javascript r = await session.get(url) await r.html.arender()  #then we create a beautifulsoup object based on the rendered html soup = BeautifulSoup(r.html.html, &quot;lxml&quot;)  #then we find the first datatable, which is the one that contains upcoming IPO data table1 = soup.find('table', class_='table table-data table-condensed spacer-lg') </code></pre> <p>Now I have 2 problems with that:</p> <ol> <li>Oftentimes the website doesn't return any valid information from the <code>table1</code>, so I don't get the underlying information that's inside the table. So far I'm circumventing that by simply waiting a couple of seconds, and then run the loop again, until the dataframe is loaded. Probably not the best option though.</li> <li>The code does work within Jupyter Notebook, but once I upload it in .py format on my Server, I get the error message that <code>SyntaxError: 'await' outside async function</code>.</li> </ol> <p>Does anybody have a solution to the 2 problems mentioned above?</p>"	2022-02-02 22:11:27.217 UTC	70965771	"<p>Since you are using coroutines you need to wrap them inside an <code>async</code> function. See below example</p> <pre class=""lang-py prettyprint-override""><code>from bs4 import BeautifulSoup from requests_html import AsyncHTMLSession  #first define the URL and start the session url = 'http://www.nyse.com/ipo-center/filings' session = AsyncHTMLSession()  #then get the URL content, and load the html content after parsing through the javascript async def get_page():     r = await session.get(url)     await r.html.arender(timeout=20)     return r.text  data = session.run(get_page)  #then we create a beautifulsoup object based on the rendered html soup = BeautifulSoup(data[0], &quot;lxml&quot;)  #then we find the first datatable, which is the one that contains upcoming IPO data table1 = soup.find_all('table', class_='table table-data table-condensed spacer-lg') print(table1) </code></pre>"			2022-02-03 04:01:53.513 UTC
70990207	javascript|python|selenium|web-scraping	Python Scraping JavaScript page without the need of an installed browser	"<p>I'm trying to scrape an HTML element in a webpage. The content of this element are generated by Javascript and thus cannot be scraped by simply running a requests.GET: <code>response = requests.get(url)</code>.</p> <p>I read in other posts that Selenium can be used to solve this issue, but it requires an actual browser installed and the use of the corresponding driver. This code is meant to be ran on different machines that frequently change, and so I cannot write it so that it only works if a particular browser is installed.</p> <p>If there is a way to scrape the Javascript content without relying on a particular browser then that is what I'm looking for, no matter the module.</p>"	2022-02-04 17:05:59.377 UTC	70990553	"<p>Aside from automating a browser your other 2 options are as follows:</p> <ol> <li><p>try find the backend query that loads the data via javascript. It's not a guarantee that it will exist but open your browser's Developer Tools - Network tab - fetch/Xhr and then refresh the page, hopefully you'll see requests to a backend api that loads the data you want. If you do find a request click on it and explore the endpoint, headers and possibly the payload that is sent to get the response you are looking for, these can all be recreated in python using requests to that hidden endpoint.</p> </li> <li><p>the other possiblility is that the data hidden in the HTML within a script tag possibly in a json file... Open the Elements tab of your developer tools where you can see the HTML of the page, right click on the  tag and click &quot;expand recursively&quot; this will open every tag (it might take a second) and you'll be able to scroll down and search for the data you want. Ignore the regular HTML tags, we know it is loaded by javascript so look through any &quot;script&quot; tag. If you do find it then you can hopefully find it in your script with a combination of Beautiful Soup to get the script tag and string slicing to just get out the json.</p> </li> </ol> <p>If neither of those produce results then try requests_html package, and specifically the &quot;render&quot; method. It automatically installs a headless browser when you first run the render method in your script.</p> <p>What site is it, perhaps I can offer more help if I can see it?</p>"			2022-02-04 17:34:55.243 UTC
71004623	python|selenium|browser	How to execute Javascript in browser with Python Selenium and record output	"<p>I am inquiring about executing javascript in the browser with selenium. I've seen plenty of ways how to do this, however, saving the output to a variable seems to be something else.</p> <pre><code>r = driver.execute_script(&quot;`; ${document.cookie}`.split(`; bearer_token=`).pop().split(';').shift()&quot;) </code></pre> <p>This makes R = None, which is not the output of the code.</p>"	2022-02-06 06:09:16.55 UTC	71004890	"<p><code>execute_script()</code> function in the selenium works for executing something particularly in the specific browser tab only, I am sure that the outputs won't be stored in a python variable. Instead I recommend to save the cookies in your local dir and later perform your tasks.</p>"			2022-02-06 07:01:13.283 UTC
71004623	python|selenium|browser	How to execute Javascript in browser with Python Selenium and record output	"<p>I am inquiring about executing javascript in the browser with selenium. I've seen plenty of ways how to do this, however, saving the output to a variable seems to be something else.</p> <pre><code>r = driver.execute_script(&quot;`; ${document.cookie}`.split(`; bearer_token=`).pop().split(';').shift()&quot;) </code></pre> <p>This makes R = None, which is not the output of the code.</p>"	2022-02-06 06:09:16.55 UTC	71005014	<p>You have to add the return statement:</p> <pre><code>r = driver.execute_script(&quot;return 2+2&quot;) print(r) </code></pre> <p>will print <code>4</code>.</p> <p>And it will print <code>None</code> without return.</p>			2022-02-06 07:23:00.08 UTC
71044675	python	Is there an equivalent of $` in Javascript's `replace()` for Python's re.sub()?	"<p><a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/replace#specifying_a_string_as_a_parameter"" rel=""nofollow noreferrer"">In JS</a>, you can use</p> <ul> <li><p><code>$`</code>  Inserts the portion of the string that precedes the matched substring.</p> </li> <li><p><code>$'</code>  Inserts the portion of the string that follows the matched substring.</p> </li> </ul> <p>To get the substring before and after the match.</p> <p>Is there an equivalent of this in Python's <code>re.sub()</code>?</p>"	2022-02-09 06:00:20.007 UTC	71044724	"<p>Instead of a replacement string, you can pass a function to <code>re.sub</code>. The function will receive a match object, and should return the replacement for the match.</p> <p>Within the function, you can use <a href=""https://docs.python.org/3/library/re.html#re.Match.start"" rel=""nofollow noreferrer""><code>match.start()</code></a> and <a href=""https://docs.python.org/3/library/re.html#re.Match.end"" rel=""nofollow noreferrer""><code>match.end()</code></a> to get the start and end indices of the match in the original string, and <a href=""https://docs.python.org/3/library/re.html#re.Match.string"" rel=""nofollow noreferrer""><code>match.string</code></a> to get the original string passed to <code>re.sub</code>. Thus,</p> <pre><code>match.string[:match.start()] </code></pre> <p>gives the effect of <code>$`</code>, and</p> <pre><code>match.string[match.end():] </code></pre> <p>gives the effect of <code>$'</code>.</p>"			2022-02-09 06:07:39.177 UTC
71104838	javascript|python|selenium|mouseevent|mousehover	How do I use Python to do the mouse hover action in selenium using javascript?	<p>How can I go to an element and perform mouse hover action using only javascript and Python? for instance This is my code:</p> <pre><code>from selenium import webdriver import time driver = webdriver.Chrome(executable_path = &quot;chromedriver.exe&quot;) driver.get(url)  btns = driver.find_elements_by_css_selector('il[class=&quot;reactions&quot;]')  for btn in btns:     **(I Want to Hover all 'btn' Element Using only &quot;driver.execute_script&quot; Method)**     time.sleep(5)     btn.click() click() </code></pre>	2022-02-13 21:05:16.603 UTC	71105225	"<p>To perform mouse hover with Selenium you should use <code>ActionChains</code> library.<br /> Also you should use Expected Conditions explicit wait to load all <code>btns</code> the elements.<br /> With it your code will be as following:</p> <pre class=""lang-py prettyprint-override""><code>from selenium import webdriver from selenium.webdriver.common.by import By from selenium.webdriver.support.ui import WebDriverWait from selenium.webdriver.support import expected_conditions as EC from selenium.webdriver.common.action_chains import ActionChains import time driver = webdriver.Chrome(executable_path = &quot;chromedriver.exe&quot;) wait = WebDriverWait(driver, 20) actions = ActionChains(driver) driver.get(url) wait.until(EC.presence_of_element_located((By.CSS_SELECTOR, 'il[class=&quot;reactions&quot;]'))) time.sleep(1) btns = driver.find_elements_by_css_selector('il[class=&quot;reactions&quot;]')  for btn in btns:     actions.move_to_element(btn).perform()     time.sleep(0.5)     btn.click() </code></pre>"			2022-02-13 22:00:57.313 UTC
71173766	javascript|flask|pythonanywhere	Javascript doesn't run on Pythonanywhere	"<p>Here is my HTML code with some javascript :</p> <pre class=""lang-html prettyprint-override""><code>&lt;!DOCTYPE html&gt; &lt;html lang=&quot;en&quot;&gt; &lt;head&gt;     &lt;meta charset=&quot;UTF-8&quot;&gt;     &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;     &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;     &lt;link rel=&quot;stylesheet&quot; href=&quot;/static/css/styles.css&quot;&gt;     &lt;link rel=&quot;shortcut icon&quot; href=&quot;/static/img/logo_BDS.png&quot; type=&quot;image/png&quot;&gt;     &lt;!-- IMPORT JQUERY --&gt;     &lt;script src=&quot;http://code.jquery.com/jquery-2.2.1.min.js&quot;&gt;&lt;/script&gt;     &lt;!-- IMPORT SDK LYDIA --&gt;     &lt;script type=&quot;text/javascript&quot; src=&quot;/static/LYDIASDK.js&quot;&gt;&lt;/script&gt;     &lt;title&gt;Confirm Checkout | BDS&lt;/title&gt; &lt;/head&gt; &lt;body class=&quot;bg-gray-50&quot;&gt;     &lt;div class=&quot;flex justify-center items-center&quot;&gt;         &lt;div&gt;             &lt;div class=&quot;flex justify-center mt-8 md:mt-36&quot;&gt;                 &lt;img src=&quot;/static/img/logo_BDS.png&quot; class=&quot;h-56&quot; alt=&quot;&quot;&gt;               &lt;/div&gt;                  &lt;div class=&quot;bg-white rounded-lg shadow-lg text-gray-700 space-y-8 px-10 py-6&quot; style=&quot;font-family: Avenir;&quot;&gt;                 &lt;h2 class=&quot;text-center text-rouge-phelma text-3xl&quot;&gt;Vérification des informations&lt;/h2&gt;                 &lt;h4 class=&quot;text-center text-xl&quot;&gt;{{nb_tickets}} ticket(s) pour {{ total_price }}€&lt;/h4&gt;                 &lt;h4 class=&quot;text-center text-xl&quot;&gt;Ton numéro de téléphone est le suivant : {{tel_number}}&lt;/h4&gt;                 &lt;div class=&quot;flex justify-center&quot;&gt;                     &lt;button class=&quot;px-3 py-2 bg-rouge-phelma text-white text-xl font-bold rounded-lg focus:ring-2 focus:outline-none focus:ring-rouge-phelma&quot; type=&quot;submit&quot; id=&quot;paymentButton&quot;&gt;Payer via Lydia !&lt;/button&gt;                 &lt;/div&gt;                              &lt;/div&gt;         &lt;/div&gt;     &lt;/div&gt;     &lt;input type=&quot;hidden&quot; id=&quot;foo&quot; value=&quot;{{nb_tickets}}&quot;&gt;     &lt;div class=&quot;hidden&quot; id=&quot;tel_number&quot;&gt;{{tel_number}}&lt;/div&gt;                &lt;script type=&quot;text/javascript&quot;&gt;         $(document).ready(function() {             // Doit être la référence de la commande chez le marchand.             var orderRef = new Date();             // var nb_tickets = document.getElementById(&quot;nb-tickets&quot;).value;             // var tel_number = document.getElementById(&quot;tel_number&quot;).value;             // var total_price = 2*$('#nb-tickets').val();         $('#paymentButton').payWithLYDIA({             amount: $('input#foo').val()*2,             vendor_token: 'my vendor token',             recipient: $('div#tel_number').text(),             browser_success_url : &quot;https://www.ecosia.org/&quot;,             browser_cancel_url  : &quot;https://www.google.fr/&quot;,              message : &quot;blabla&quot;,             orderRef: orderRef.toString(),         });         });     &lt;/script&gt; &lt;/body&gt; &lt;/html&gt; </code></pre> <p>All is working properly on my local dev server but the javascript part doesn't want to run on Pythonanywhere. Does running an app on python anywhere with Flask change from running an app on the Flask local dev server ?</p> <p>Here's also the error that I have in my Browser console : <a href=""https://i.stack.imgur.com/k4zWv.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/k4zWv.png"" alt=""Error Browser Console"" /></a></p>"	2022-02-18 12:48:49.953 UTC	71192012	"<p>It's a <a href=""https://developer.mozilla.org/en-US/docs/Web/Security/Mixed_content#mixed_active_content"" rel=""nofollow noreferrer"">Mixed Active Content</a> issue. If you are viewing a site over HTTPS and it has some <em>active content</em> like <code>&lt;script&gt;</code> <code>&lt;iframe&gt;</code> or <code>fetch()</code> making a request to an HTTP endpoint, it will be blocked by default by the modern browsers. On the locahost you are using HTTP, so it's not an issue. So to fix the issue, change jQuery's <code>src</code> from <code>http://</code> to <code>https://</code>.</p>"			2022-02-20 06:59:17.47 UTC
71210740	python	How to run JavaScript function inside Python code	"<p>I have Excel files that I'm converting into HTML tables. As part of this conversion, there are columns that are grouped together like item C in the table below.</p> <pre><code>+---+---+ | A | B | +---+---+ |   | D | + C +---+ |   | E | +---+---+ | G | H | +---+---+ </code></pre> <p>In my final HTML, I'd like to apply a rowspan to those columns so that the table displays the same as the Excel file. As far as I can gather, there isn't a way to do this with Python. There is a way to do it with JavaScript and I've stumbled upon code that works perfectly as confirmed by JSFiddle.</p> <pre><code>function tableCheck() {     const table = document.querySelector(&quot;table&quot;);      let headerCell = null;      for (let row of table.rows) {         const firstCell = row.cells[0];          if (headerCell === null || firstCell.innerText !== headerCell.innerText) {             headerCell = firstCell;         } else {             headerCell.rowSpan++;             firstCell.remove();         }     } } tableCheck() </code></pre> <p>The problem is that I cannot figure out how to apply this using js2py. I imagine I'm not passing the HTML file contents correctly into the JS function, but so far my guesses and searches have been unsuccessful.</p> <p>My latest attempt is below. Any tips on how to get the JavaScript to work? Is there a way to do this with Python that I missed? Anything else I can provide to help describe expected output? Thank you!</p> <pre><code>import pandas as pd import js2py from js2py import eval_js  xlsx = pd.ExcelFile(filename) sheetNumbers = len(xlsx.sheet_names)  for i in range (sheetNumbers):     first_info = &quot;blah&quot;     last_info = &quot;blahblah&quot;      df = pd.read_excel(filename, sheet_name=i)     df = df.fillna(method = 'ffill') # fills merged cells (single column) with merged value     df.to_html(&quot;excelAsHTML.html&quot;, index=False)      with open(&quot;excelAsHTML.html&quot;) as file:         file = file.read()  js = &quot;&quot;&quot; function tableCheck() {     const table = document.querySelector(&quot;table&quot;);      let headerCell = null;      for (let row of table.rows) {         const firstCell = row.cells[0];          if (headerCell === null || firstCell.innerText !== headerCell.innerText) {             headerCell = firstCell;         } else {             headerCell.rowSpan++;             firstCell.remove();         }     } } tableCheck(file) &quot;&quot;&quot; file = js2py.eval_js(js)      with open(&quot;excelAsHTML.txt&quot;, &quot;a&quot;) as file_to_write:         file_to_write.write(first_info + file + last_info) </code></pre>"	2022-02-21 17:43:01.157 UTC	71244185	"<p>OK, here is Python code using BeautifulSoup that does what your Javascript does.  Basically, if the text in the first <code>&lt;td&gt;</code> tag in each row is the same as the previous row, then we delete this tag an bump the &quot;rowspan&quot; for the previous tag.</p> <pre><code>from bs4 import BeautifulSoup  dom = BeautifulSoup(open('x.html').read(), 'lxml') tbl = dom.find('table') last = None for row in tbl.find_all('tr'):     this = row.find('td')     if last and this.text == last.text:         this.decompose()         if 'rowspan' not in last:             last['rowspan'] = 1         last['rowspan'] += 1     else:         last = this print(dom) </code></pre> <p>Before text:</p> <pre><code>&lt;table&gt;     &lt;tr&gt;         &lt;td&gt;A&lt;/td&gt;         &lt;td&gt;B&lt;/td&gt;     &lt;/tr&gt;     &lt;tr&gt;         &lt;td&gt;C&lt;/td&gt;         &lt;td&gt;D&lt;/td&gt;     &lt;/tr&gt;     &lt;tr&gt;         &lt;td&gt;C&lt;/td&gt;         &lt;td&gt;E&lt;/td&gt;     &lt;/tr&gt;     &lt;tr&gt;         &lt;td&gt;G&lt;/td&gt;         &lt;td&gt;H&lt;/td&gt;     &lt;/tr&gt; &lt;/table&gt; </code></pre> <p>After:</p> <pre><code>&lt;html&gt;&lt;body&gt;&lt;table&gt; &lt;tr&gt; &lt;td&gt;A&lt;/td&gt; &lt;td&gt;B&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td rowspan=&quot;2&quot;&gt;C&lt;/td&gt; &lt;td&gt;D&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt;  &lt;td&gt;E&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;G&lt;/td&gt; &lt;td&gt;H&lt;/td&gt; &lt;/tr&gt; &lt;/table&gt; &lt;/body&gt;&lt;/html&gt; </code></pre>"			2022-02-23 21:21:17.97 UTC
71211282	javascript|python|json|fastapi	"How to use the JSON response from a Python App, To render it with Javascript on to an HTML page using Fast API?"	"<ol> <li><p>I have an HTML page being rendered with FastAPI:</p> <pre><code> @app.get(&quot;/index&quot;, response_class=HTMLResponse)  def write_home(request: Request):  return templates.TemplateResponse(&quot;index.html&quot;, {&quot;request&quot;: request}) </code></pre> </li> </ol> <p><a href=""https://i.stack.imgur.com/IzwxQ.png"" rel=""nofollow noreferrer"">Rendered HTML</a></p> <p>Above HTML has a Submit btn for a Form clicking which will result in a POST request the endpoint \SWP</p> <pre><code>&lt;form id=&quot;generate&quot; action=&quot;swp&quot; method=&quot;post&quot; enctype=&quot;multipart/form-data&quot;&gt; </code></pre> <ol start=""2""> <li>It works like I'd need it to - it posts the data to my Python calculator app which sends a JSON request back:</li> </ol> <p><a href=""https://i.stack.imgur.com/6JIJ6.png"" rel=""nofollow noreferrer"">Output from Py App</a></p> <ol start=""3""> <li><p>With a JSON file saved <em>locally on the hard drive</em>, I was able to code JavaScript which could read its data and create a Chart via Chart.js. I used FetchAPI and then used the object array:</p> <pre><code> const API_URL = &quot;./Example_Response.json&quot;;  async function createChartAndTable() {  let ResponseFromAPI = await fetch(API_URL);  let JSON_Res = await ResponseFromAPI.json();  let JSON_Data1 = JSON.parse(JSON_Res.output.data); </code></pre> </li> </ol> <p><a href=""https://i.stack.imgur.com/35beH.png"" rel=""nofollow noreferrer"">From locally saved JSON file</a></p> <ol start=""4""> <li>Now, Im completely puzzled as to how Im to use the Live JSON result from the Python app <a href=""http://127.0.0.1:8000/swp"" rel=""nofollow noreferrer"">http://127.0.0.1:8000/swp</a> (<strong>Step2</strong>) and then render it to the HTML generated in Step 1 to <a href=""http://127.0.0.1:8000/index"" rel=""nofollow noreferrer"">http://127.0.0.1:8000/index</a> like I was able to with the locally stored JSON file as in Step 3.</li> </ol> <p>Note: theres no database involved.</p> <p>Any guidance and help is much appreciated.</p>"	2022-02-21 18:26:01.067 UTC	71212811	"<p>Got it to work with the below code. The trick like @The Fool suggested in one of his/her comments</p> <pre><code>document.forms['myFormId'].addEventListener('submit', (event) =&gt; {     event.preventDefault();     // TODO do something here to show user that form is being submitted     fetch(event.target.action, {         method: 'POST',         body: new URLSearchParams(new FormData(event.target)) // event.target is the form     }).then((resp) =&gt; {         return resp.json(); // or resp.text() or whatever the server sends     }).then((body) =&gt; {         // TODO handle body     }).catch((error) =&gt; {         // TODO handle error     }); }); </code></pre> <p>What I did was place my already written JS code within &quot;Todo handle body&quot;. That worked!</p>"			2022-02-21 20:43:50.913 UTC
71211282	javascript|python|json|fastapi	"How to use the JSON response from a Python App, To render it with Javascript on to an HTML page using Fast API?"	"<ol> <li><p>I have an HTML page being rendered with FastAPI:</p> <pre><code> @app.get(&quot;/index&quot;, response_class=HTMLResponse)  def write_home(request: Request):  return templates.TemplateResponse(&quot;index.html&quot;, {&quot;request&quot;: request}) </code></pre> </li> </ol> <p><a href=""https://i.stack.imgur.com/IzwxQ.png"" rel=""nofollow noreferrer"">Rendered HTML</a></p> <p>Above HTML has a Submit btn for a Form clicking which will result in a POST request the endpoint \SWP</p> <pre><code>&lt;form id=&quot;generate&quot; action=&quot;swp&quot; method=&quot;post&quot; enctype=&quot;multipart/form-data&quot;&gt; </code></pre> <ol start=""2""> <li>It works like I'd need it to - it posts the data to my Python calculator app which sends a JSON request back:</li> </ol> <p><a href=""https://i.stack.imgur.com/6JIJ6.png"" rel=""nofollow noreferrer"">Output from Py App</a></p> <ol start=""3""> <li><p>With a JSON file saved <em>locally on the hard drive</em>, I was able to code JavaScript which could read its data and create a Chart via Chart.js. I used FetchAPI and then used the object array:</p> <pre><code> const API_URL = &quot;./Example_Response.json&quot;;  async function createChartAndTable() {  let ResponseFromAPI = await fetch(API_URL);  let JSON_Res = await ResponseFromAPI.json();  let JSON_Data1 = JSON.parse(JSON_Res.output.data); </code></pre> </li> </ol> <p><a href=""https://i.stack.imgur.com/35beH.png"" rel=""nofollow noreferrer"">From locally saved JSON file</a></p> <ol start=""4""> <li>Now, Im completely puzzled as to how Im to use the Live JSON result from the Python app <a href=""http://127.0.0.1:8000/swp"" rel=""nofollow noreferrer"">http://127.0.0.1:8000/swp</a> (<strong>Step2</strong>) and then render it to the HTML generated in Step 1 to <a href=""http://127.0.0.1:8000/index"" rel=""nofollow noreferrer"">http://127.0.0.1:8000/index</a> like I was able to with the locally stored JSON file as in Step 3.</li> </ol> <p>Note: theres no database involved.</p> <p>Any guidance and help is much appreciated.</p>"	2022-02-21 18:26:01.067 UTC	71213792	"<h3>Option 1</h3> <p>Post the request through <code>HTML</code> form and then have the API redirect you to a new page (<a href=""https://fastapi.tiangolo.com/advanced/templates/#using-jinja2templates"" rel=""nofollow noreferrer""><code>Jinja2Template</code></a>), where you can read the data and display the chart. As @tiangolo posted <a href=""https://github.com/tiangolo/fastapi/issues/1498#issuecomment-647040401"" rel=""nofollow noreferrer"">here</a>, when performing a <code>RedirectResponse</code> from a <code>POST</code> request route to <code>GET</code> request route, the <a href=""https://fastapi.tiangolo.com/advanced/response-change-status-code/"" rel=""nofollow noreferrer"">response status code has to change</a> to <code>status_code=status.HTTP_303_SEE_OTHER</code> (the example below does that).</p> <p><strong>Update:</strong> Redirection is not really necessary here. You can just render the template as usual:</p> <pre><code>@app.post(&quot;/submitUsingForm&quot;, response_class=HTMLResponse) def submitUsingForm(request: Request, input1: str = Form(...), input2: str = Form(...)):     return templates.TemplateResponse(&quot;chart.html&quot;, {&quot;request&quot;: request, &quot;json_data&quot;: json_data}) </code></pre> <h3>Option 2</h3> <p>Use <a href=""https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API"" rel=""nofollow noreferrer""><code>Fetch API</code></a> to post the request, receive the <code>JSON</code> data and display the chart on the same page.</p> <p>Both options are demonstrated in the example given below (the data used is sample data for the purposes of this demo; you can change/handle them as required).</p> <p><strong>app.py</strong></p> <pre><code>from fastapi import FastAPI, Request, status, Form from fastapi.responses import HTMLResponse from fastapi.templating import Jinja2Templates from fastapi.responses import RedirectResponse  app = FastAPI()  templates = Jinja2Templates(directory=&quot;templates&quot;) json_data = {&quot;jsonarray&quot;: [{&quot;name&quot;: &quot;Joe&quot;, &quot;age&quot;: 32}, {&quot;name&quot;: &quot;Tom&quot;, &quot;age&quot;: 34}]}   @app.get(&quot;/chart&quot;, response_class=HTMLResponse) def get_chart(request: Request):     return templates.TemplateResponse(&quot;chart.html&quot;, {&quot;request&quot;: request, &quot;json_data&quot;: json_data})  @app.post(&quot;/submitUsingFetch&quot;) def submitUsingFetch(request: Request, input1: str = Form(...), input2: str = Form(...)):     return json_data   @app.post(&quot;/submitUsingForm&quot;, response_class=HTMLResponse) def submitUsingForm(request: Request, input1: str = Form(...), input2: str = Form(...)):     #redirect_url = request.url_for('get_chart')     #return RedirectResponse(redirect_url, status_code=status.HTTP_303_SEE_OTHER)     return templates.TemplateResponse(&quot;chart.html&quot;, {&quot;request&quot;: request, &quot;json_data&quot;: json_data})   @app.get(&quot;/&quot;, response_class=HTMLResponse) def home(request: Request):     return templates.TemplateResponse(&quot;index.html&quot;, {&quot;request&quot;: request}) </code></pre> <p>templates/<strong>index.html</strong></p> <pre><code>&lt;!DOCTYPE html&gt; &lt;html&gt;    &lt;head&gt;       &lt;title&gt; Home&lt;/title&gt;       &lt;script type=&quot;text/javascript&quot; src=&quot;https://cdnjs.cloudflare.com/ajax/libs/Chart.js/3.7.1/chart.min.js&quot;&gt;&lt;/script&gt;       &lt;script&gt;          function send_request() {             const formElems = document.getElementById('my_form');             var formData = new FormData(formElems);             const url = &quot;http://127.0.0.1:8000/submitUsingFetch&quot;;             fetch(url, {                 method: 'POST',                 headers: {'Accept': 'application/json'},                 body: formData                 }).then(resp =&gt; {                     return resp.json();                 }).then(body =&gt; {                     display_chart(body)                 }).catch(error =&gt; {                     console.error(error);                 });          }                    function display_chart(json_data) {             var labels = json_data.jsonarray.map(function(e) {return e.name;});             var data = json_data.jsonarray.map(function(e) {return e.age;});             const ctx = document.getElementById('myChart');             var config = {                type: 'line',                data: {                   labels: labels,                   datasets: [{                      label: 'Graph Line',                      data: data,                      backgroundColor: 'rgba(0, 119, 204, 0.3)'                   }]                }             };                       var chart = new Chart(ctx, config);          }       &lt;/script&gt;    &lt;/head&gt;    &lt;body&gt;       &lt;form action=&quot;/submitUsingForm&quot;  method='post' id='my_form'&gt;          &lt;label&gt;Input 1:&lt;/label&gt;&lt;br&gt;          &lt;input type=&quot;text&quot; id=&quot;input1&quot; name=&quot;input1&quot; value=&quot;0&quot;&gt;&lt;br&gt;          &lt;label&gt;Input 2:&lt;/label&gt;&lt;br&gt;          &lt;input type=&quot;text&quot; id=&quot;input2&quot; name=&quot;input2&quot; value=&quot;0&quot;&gt;&lt;br&gt;          &lt;input type=&quot;submit&quot; value=&quot;Submit using Form&quot;&gt;          &lt;input type=&quot;button&quot; value=&quot;Submit using Fetch&quot; onclick=&quot;send_request()&quot;&gt;       &lt;/form&gt;     &lt;canvas id=&quot;myChart&quot;&gt;&lt;/canvas&gt;    &lt;/body&gt; &lt;/html&gt; </code></pre> <p>templates/<strong>chart.html</strong></p> <pre><code>&lt;html&gt;    &lt;head&gt;       &lt;head&gt;          &lt;title&gt; Chart&lt;/title&gt;          &lt;script type=&quot;text/javascript&quot; src=&quot;https://cdnjs.cloudflare.com/ajax/libs/Chart.js/3.7.1/chart.min.js&quot;&gt;&lt;/script&gt;          &lt;script&gt;             function display_chart(){                 var json_data = {{json_data|tojson}};                 var labels = json_data.jsonarray.map(function(e) {return e.name;});                 var data = json_data.jsonarray.map(function(e) {return e.age;});                 const ctx = document.getElementById('myChart');                 var config = {                    type: 'line',                    data: {                       labels: labels,                       datasets: [{                          label: 'Graph Line',                          data: data,                          backgroundColor: 'rgba(0, 119, 204, 0.3)'                       }]                    }                 };                                  var chart = new Chart(ctx, config);             }          &lt;/script&gt;    &lt;/head&gt;    &lt;body onload=&quot;display_chart()&quot;&gt;     &lt;canvas id=&quot;myChart&quot;&gt;&lt;/canvas&gt;    &lt;/body&gt; &lt;/html&gt; </code></pre>"			2022-02-21 22:32:08.233 UTC
71214224	python|html|beautifulsoup|python-requests	"Web scraping with python, javascript output"	"<p>I am trying to scrap the job information from this website and have been stuck for a few days. When I print the soup.text output I get a short javascript text which is not what I want as I want the html element. I have seen similar solutions to implement 'Header less browsing' but when I implemented that I just received several errors. I am new to web-scraping and have looked at various tutorials, videos and simply am not getting the output I want and have no idea what I am doing wrong.</p> <pre><code>import requests from bs4 import BeautifulSoup    def aSwiftScraper():      jobLinks = []     pages = []     URL = &quot;https://www.amiqus.com/jobs?options=,20993,20877,20876&amp;page=1&quot;     page = requests.get(URL)     soup = BeautifulSoup(page.content, &quot;html.parser&quot;)     print(soup.text)   aSwiftScraper() </code></pre>"	2022-02-21 23:30:10.007 UTC	71214823	"<p>Try to change <code>User-Agent</code> HTTP header when making request to the server:</p> <pre class=""lang-py prettyprint-override""><code>import requests from bs4 import BeautifulSoup  headers = {     &quot;User-Agent&quot;: &quot;Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)&quot; }  url = &quot;https://www.amiqus.com/jobs?options=,20993,20877,20876&amp;page=1&quot;  soup = BeautifulSoup(requests.get(url, headers=headers).content, &quot;html.parser&quot;) for title in soup.select(&quot;.attrax-vacancy-tile__title&quot;):     print(title.get_text(strip=True)) </code></pre> <p>Prints:</p> <pre class=""lang-none prettyprint-override""><code>Engine Programmer C++ AAA opportunity - Remote working Senior Programmer Gameplay Programmer  ... </code></pre>"			2022-02-22 01:15:12.773 UTC
71245488	python|selenium|web-scraping	Accessing javascript data with selenium and python	"<p>I have a website that I want to scrape data from. This specific data is under a script tag and I cannot figure out how to access it.</p> <pre><code>&lt;script type=&quot;text/javascript&quot;&gt;     window.gameData = {&quot;a dict of data I would like to get&quot;} &lt;/script&gt; </code></pre> <p>So far I have tried probably every combination of &quot;find_element_by...&quot; and I am beginning to wonder if this problem can even be solved. It doesn't allow me to use the &quot;get_attribute&quot;, &quot;.text&quot;, or any other helpful selenium function.</p> <p>I even tried this function</p> <pre><code>#script = wd.find_element_by_xpath('//*[@id=&quot;js-hook-pz-moment__game&quot;]/script/text()') </code></pre> <p>Which is the direct xpath to the javascript loaded data and it returned a quite scary error.</p> <pre><code>selenium.common.exceptions.InvalidSelectorException: Message: invalid selector: The result of the xpath expression &quot;//*[@id=&quot;js-hook-pz-moment__game&quot;]/script/text()&quot; is: [object Text]. It should be an element. </code></pre> <p>So thats my problem. Thank you for any and all help :)</p>"	2022-02-24 00:05:17.24 UTC	71246000	<p>You would just do:</p> <pre><code>game_data = driver.execute_script(&quot;return window.gameData&quot;) </code></pre>			2022-02-24 01:25:03.087 UTC
71268311	javascript|python|flask|blob|wav	how to convert blob to wav file in javascript and connect python flask	"<p>I want to create web app using STT model by python flask. when user record the voice and send it server, trans it to text on web.</p> <p>there is my javascript part:</p> <pre><code>&lt;html&gt;   &lt;head&gt;     &lt;title&gt;STT&lt;/title&gt;    &lt;/head&gt;   &lt;div style=&quot;text-align: center;&quot;&gt;     &lt;h2&gt;STT&lt;/h2&gt;     &lt;p&gt;       &lt;button type=&quot;button&quot; id=&quot;record&quot;&gt;record&lt;/button&gt;       &lt;button type=&quot;button&quot; id=&quot;stopRecord&quot; disabled&gt;stop&lt;/button&gt;       &lt;input type=&quot;button&quot; id=&quot;sendRecord&quot; value=&quot;trans to text&quot;&gt;     &lt;/p&gt;     &lt;p&gt;       &lt;audio id=recordedAudio&gt;&lt;/audio&gt;     &lt;/p&gt;   &lt;/div&gt; &lt;/html&gt; &lt;script src=&quot;https://code.jquery.com/jquery-1.12.4.min.js&quot;&gt;&lt;/script&gt; &lt;script&gt;     let recordBlob;        navigator.mediaDevices.getUserMedia({audio:true})                           .then(stream =&gt; {handlerFunction(stream)})        function handlerFunction(stream) {       rec = new MediaRecorder(stream);       rec.ondataavailable = e =&gt; {         audioChunks.push(e.data);         if (rec.state == &quot;inactive&quot;) {           recordBlob = new Blob(audioChunks, {type:'audio/wav; codecs=MS_PCM'});           recordedAudio.src = URL.createObjectURL(blob);           recordedAudio.controls=true;           recordedAudio.autoplay=true;         }       }     }        record.onclick = e =&gt; {         record.disabled = true;         record.style.backgroundColor = &quot;blue&quot;         stopRecord.disabled=false;         audioChunks = [];         rec.start();     }        stopRecord.onclick = e =&gt; {       record.disabled = false;       stop.disabled=true;       record.style.backgroundColor = &quot;red&quot;       rec.stop();     }      sendRecord.onclick = e =&gt; {       let formData = new FormData();              formData.append('data', recordBlob);          console.log('blob', recordBlob);          $.ajax({         type: 'POST',         url: '/result',         data: formData,         contentType: false,         processData: false,         success: function(result) {           console.log('success', result);              $(&quot;#chatbox&quot;).append(`&lt;p class =&quot;userText&quot;&gt;&lt;audio style=&quot;background-color:white;&quot; controls&gt; &lt;source src=&quot;${Url}&quot; type=&quot;audio/wav&quot;&gt;&lt;/audio&gt;&lt;/p&gt;`);           $(&quot;#chatbox&quot;).append(`&lt;p class =&quot;botText&quot;&gt;&lt;span&gt;${result.emotion}&lt;/span&gt;&lt;/p&gt;`);           $(&quot;#textInput&quot;).val(&quot;&quot;)         },         error: function(result) {           alert('sorry an error occured');         }       });     }   &lt;/script&gt; </code></pre> <p>and there is flask part:</p> <pre><code>from flask import Flask, render_template, request import requests, json import soundfile from werkzeug.utils import secure_filename import os  app = Flask(__name__) UPLOAD_FOLDER = &quot;./&quot; app.config[&quot;UPLOAD_FOLDER&quot;] = UPLOAD_FOLDER  @app.route('/') def index():     return render_template('index.html')  @app.route('/result', methods=['POST']) def result():     url = &quot;https://kakaoi-newtone-openapi.kakao.com/v1/recognize&quot;     key = 'REST API KEY'     headers = {         &quot;Content-Type&quot;: &quot;application/octet-stream&quot;,         &quot;Transfer-Encoding&quot;:&quot;chunked&quot;,         &quot;Authorization&quot;: &quot;KakaoAK &quot; + key,     }      blobData = request.files['data']     filename = secure_filename(blobData.filename)     filepath = os.path.join(app.config[&quot;UPLOAD_FOLDER&quot;], filename)     blobData.save(filepath)          app.logger.info('blob data : ', blobData)     data, samplerate = soundfile.read(blobData)      soundfile.write('new.wav', data, samplerate, subtype='PCM_16')      with open(&quot;new.wav&quot;, 'rb') as fp:         audio = fp.read()      res = requests.post(url, headers=headers, data=audio)          return res.text  if __name__=='__main__':     app.debug=True     app.run('0.0.0.0', port=5001) </code></pre> <p>it comes out error</p> <pre><code>[2022-02-25 19:27:51,895] ERROR in app: Exception on /result [POST] Traceback (most recent call last):   File &quot;C:\users\ljh\appdata\local\programs\python\python39\lib\site-packages\flask\app.py&quot;, line 2070, in wsgi_app     response = self.full_dispatch_request()   File &quot;C:\users\ljh\appdata\local\programs\python\python39\lib\site-packages\flask\app.py&quot;, line 1515, in full_dispatch_request     rv = self.handle_user_exception(e)   File &quot;C:\users\ljh\appdata\local\programs\python\python39\lib\site-packages\flask\app.py&quot;, line 1513, in full_dispatch_request     rv = self.dispatch_request()   File &quot;C:\users\ljh\appdata\local\programs\python\python39\lib\site-packages\flask\app.py&quot;, line 1499, in dispatch_request     return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)   File &quot;C:\Users\LJH\Documents\코드스테이츠\개인프로젝트\webapp\flaskapp2\app.py&quot;, line 31, in result     data, samplerate = soundfile.read(blobData)   File &quot;C:\users\ljh\appdata\local\programs\python\python39\lib\site-packages\soundfile.py&quot;, line 372, in read     with SoundFile(file, 'r', samplerate, channels,   File &quot;C:\users\ljh\appdata\local\programs\python\python39\lib\site-packages\soundfile.py&quot;, line 740, in __init__     self._file = self._open(file, mode_int, closefd)   File &quot;C:\users\ljh\appdata\local\programs\python\python39\lib\site-packages\soundfile.py&quot;, line 1264, in _open     _error_check(_snd.sf_error(file_ptr),   File &quot;C:\users\ljh\appdata\local\programs\python\python39\lib\site-packages\soundfile.py&quot;, line 1455, in _error_check     raise RuntimeError(prefix + _ffi.string(err_str).decode('utf-8', 'replace')) RuntimeError: Error opening &lt;FileStorage: 'blob' ('audio/wav; codecs=ms_pcm')&gt;: File contains data in an unknown format. 127.0.0.1 - - [25/Feb/2022 19:27:51] &quot;POST /result HTTP/1.1&quot; 500 - </code></pre> <p>I don't know why blob didn't convert to wav...how can I fix it? probably there are many no necessary parts on my javascript code.. I don't know about javascript. I'm sorry for that.</p>"	2022-02-25 15:44:54.963 UTC	71280620	"<p>You write the data in a file, the position within the file moves to the end of it. If you then re-read the file using soundfile, you must first jump back to the beginning of the file.</p> <pre><code>import io  @app.route('/result', methods=['POST']) def result():     if 'data' in request.files:         file = request.files['data']                  # Write the data to a file.         filename = secure_filename(file.filename)         filepath = os.path.join(app.config[&quot;UPLOAD_FOLDER&quot;], filename)         file.save(filepath)              # Jump back to the beginning of the file.         file.seek(0)                  # Read the audio data again.         data, samplerate = soundfile.read(file)         with io.BytesIO() as fio:             soundfile.write(                 fio,                  data,                  samplerate=samplerate,                  subtype='PCM_16',                  format='wav'             )             data = fio.getvalue()                  # ...     return '', 400 </code></pre>"			2022-02-26 22:04:59.927 UTC
71286500	javascript|python|arrays|json|flask	Pass a Python list to JavaScript	"<p>I'm having some issues passing a Python list to JavaScript as an array. My code is below, and outputs a blank screen, with error: 'Uncaught ReferenceError: array is not defined'.</p> <h2>main.py</h2> <pre><code>from flask import Flask, render_template import json  app = Flask(__name__)  @app.route('/') def my_view():     array = [1, 2, 3, 4, 5]     jsarray = json.dumps(array)     return render_template('index.html', array=jsarray)  app.run() </code></pre> <h2>index.html</h2> <pre><code>&lt;script&gt;     var data = JSON.parse(array)     document.write(data) &lt;/script&gt; </code></pre>"	2022-02-27 16:27:59.63 UTC	71286534	"<p>change your index.html to</p> <h1>index.html</h1> <pre class=""lang-js prettyprint-override""><code>&lt;script&gt;     var data = JSON.parse({{ array }})     document.write(data) &lt;/script&gt; </code></pre>"			2022-02-27 16:32:49.243 UTC
71286500	javascript|python|arrays|json|flask	Pass a Python list to JavaScript	"<p>I'm having some issues passing a Python list to JavaScript as an array. My code is below, and outputs a blank screen, with error: 'Uncaught ReferenceError: array is not defined'.</p> <h2>main.py</h2> <pre><code>from flask import Flask, render_template import json  app = Flask(__name__)  @app.route('/') def my_view():     array = [1, 2, 3, 4, 5]     jsarray = json.dumps(array)     return render_template('index.html', array=jsarray)  app.run() </code></pre> <h2>index.html</h2> <pre><code>&lt;script&gt;     var data = JSON.parse(array)     document.write(data) &lt;/script&gt; </code></pre>"	2022-02-27 16:27:59.63 UTC	71286594	"<p>You can use the Jinja2 filter <a href=""https://jinja.palletsprojects.com/en/3.0.x/templates/#jinja-filters.tojson"" rel=""nofollow noreferrer""><code>tojson</code></a>. A conversion of the data to JSON within the route is not necessary. You can simply pass the list to the template.</p> <pre><code>@app.route('/') def my_view():     array = [1, 2, 3, 4, 5]     return render_template('index.html', array=array) </code></pre> <pre><code>&lt;script&gt;    const data = {{ array | tojson }};    console.log(data); &lt;/script&gt; </code></pre>"			2022-02-27 16:41:10.973 UTC
71320038	javascript|python|tkinter	Enable Javascript in tkinterweb python	"<p>I am using python 3.9 and tried to view website in tkinter window with the help of tkinterweb but for some websites it asks for enabling javascript so please tell how to do that... Also it is not loading youtube videos.</p> <p>Below is my code:</p> <pre><code>import tkinterweb import tkinter as tk root = tk.Tk() frame = tkinterweb.HtmlFrame(root) frame.load_website('https://www.google.com/') frame.pack(fill=&quot;both&quot;, expand=True) root.mainloop() </code></pre>"	2022-03-02 09:08:41.997 UTC	72585569	"<p>Well, I have been testing tkinterweb using some websites, and it looks like the library does not support JS, unfortunately.</p>"			2022-06-11 15:21:12.347 UTC
71341466	javascript|python|html|python-3.x|flask	"Python, Flask, Javascript, HTML - Invalid literal for int()"	"<p>I'm trying to post a number from a HTML input to my Python function, where the number will be used to identify the limit parameter in bing_image_downloader.</p> <p>Python code looks like this:</p> <pre><code>@app.route('/indsamle_billede_bing', methods=['GET', 'POST' 'DELETE']) def indsamle_billede2():     Keyword = request.args.get('key_word', '')     Antal = request.args.get('antal_word', '')        downloader.download(str(Keyword), limit=Antal,  output_dir='hej', adult_filter_off=True, force_replace=False, timeout=60, verbose=True)   return 'something' </code></pre> <p>HTML code looks like this:</p> <pre><code>      &lt;input value=&quot;&quot; placeholder=&quot;Antal&quot; name=&quot;Antal&quot; type=&quot;number&quot; id=&quot;antal_in&quot;&gt;       &lt;input value=&quot;&quot;  placeholder=&quot;Keyword&quot; name=&quot;Keyword&quot; type=&quot;text&quot; id=&quot;keyword_in&quot;&gt;       &lt;input value=&quot;Bing&quot; name=&quot;check&quot; type=&quot;radio&quot; id=&quot;Bing_x&quot;&gt;       &lt;label for=&quot;Bing_x&quot;&gt;Bing&lt;/label&gt;       &lt;button id=&quot;submit&quot;&gt;Submit&lt;/button&gt; </code></pre> <p>Javascript code looks like this:</p> <pre><code>&lt;script&gt;  $(document).ready(function() { $('button').click(function() {       var radio = $(&quot;input[type=radio][name=check]&quot;).filter(&quot;:checked&quot;)[0];       var key = $(&quot;input[type=text][name=Keyword]&quot;);       const KEY = document.getElementById(&quot;keyword_in&quot;).value;       const ANTAL = document.getElementById(&quot;antal_in&quot;).value;              let myVar = '';       let myVar2 = '';              if (radio.value == &quot;Bing&quot;) {           myVar = KEY           myVar2 = ANTAL                   fetch('http://127.0.0.1:5000/indsamle_billede_bing?key_word='+myVar)           .then(res =&gt; res.json())           .then(data =&gt; {     })       fetch('http://127.0.0.1:5000/indsamle_billede_bing?antal_word='+myVar2)           .then(res =&gt; res.json())           .then(data =&gt; {     })})}); &lt;/script&gt; </code></pre> <p>Error code looks like this:</p> <pre><code>127.0.0.1 - - [03/Mar/2022 18:35:45] &quot;GET /indsamle_billede_bing?key_word=friends HTTP/1.1&quot; 500 - Traceback (most recent call last):   File &quot;/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/flask/app.py&quot;, line 2091, in __call__     return self.wsgi_app(environ, start_response)   File &quot;/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/flask/app.py&quot;, line 2076, in wsgi_app     response = self.handle_exception(e)   File &quot;/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/flask/app.py&quot;, line 2073, in wsgi_app     response = self.full_dispatch_request()   File &quot;/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/flask/app.py&quot;, line 1518, in full_dispatch_request     rv = self.handle_user_exception(e)   File &quot;/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/flask/app.py&quot;, line 1516, in full_dispatch_request     rv = self.dispatch_request()   File &quot;/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/flask/app.py&quot;, line 1502, in dispatch_request     return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)   File &quot;/Users/Jacob/Desktop/billede_indsamling-main/billede_indsamling-main/XCI_software/billede_indsamling.py&quot;, line 25, in indsamle_billede2     downloader.download(str(Keyword), limit=Antal,  output_dir='hej', adult_filter_off=True, force_replace=False, timeout=60, verbose=True).format(Antal)   File &quot;/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/bing_image_downloader/downloader.py&quot;, line 37, in download     bing = Bing(query, limit, image_dir, adult, timeout, filter, verbose)   File &quot;/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/bing_image_downloader/bing.py&quot;, line 24, in __init__     assert type(limit) == int, &quot;limit must be integer&quot; AssertionError: limit must be integer 127.0.0.1 - - [03/Mar/2022 18:35:45] &quot;GET /indsamle_billede_bing?antal_word=6 HTTP/1.1&quot; 500 - Traceback (most recent call last):   File &quot;/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/flask/app.py&quot;, line 2091, in __call__     return self.wsgi_app(environ, start_response)   File &quot;/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/flask/app.py&quot;, line 2076, in wsgi_app     response = self.handle_exception(e)   File &quot;/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/flask/app.py&quot;, line 2073, in wsgi_app     response = self.full_dispatch_request()   File &quot;/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/flask/app.py&quot;, line 1518, in full_dispatch_request     rv = self.handle_user_exception(e)   File &quot;/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/flask/app.py&quot;, line 1516, in full_dispatch_request     rv = self.dispatch_request()   File &quot;/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/flask/app.py&quot;, line 1502, in dispatch_request     return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)   File &quot;/Users/Jacob/Desktop/billede_indsamling-main/billede_indsamling-main/XCI_software/billede_indsamling.py&quot;, line 25, in indsamle_billede2     downloader.download(str(Keyword), limit=Antal,  output_dir='hej', adult_filter_off=True, force_replace=False, timeout=60, verbose=True).format(Antal)   File &quot;/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/bing_image_downloader/downloader.py&quot;, line 37, in download     bing = Bing(query, limit, image_dir, adult, timeout, filter, verbose)   File &quot;/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/bing_image_downloader/bing.py&quot;, line 24, in __init__     assert type(limit) == int, &quot;limit must be integer&quot; AssertionError: limit must be integer </code></pre> <p>The problem is that the 'Antal' variable is not recognized as an integer</p>"	2022-03-03 17:40:15.64 UTC	71385550	"<p>Try using <code>Antal = request.args.get('antal_word', 0)</code> instead. Because it seems you are expecting an integer for <code>Antal</code>but you are setting a default value of<code>''</code> an empty string.</p> <p>But really this depends on what you are using the value for. Setting a default value when using <code>request.get</code> simply means that if the value is not in the request then the variable would be set to the default value.</p> <p>If more information is given there might be a better approach than setting the default value to 0</p>"			2022-03-07 18:15:29.76 UTC
71356126	javascript|python|jquery|ajax|flask	"jQUERY, FLASK: Bad request (400) while trying to send a Javascript variable to a Python script"	"<h1>Hello and Welcome!</h1> <hr /> <h3>INTRODUCTION</h3> <p>Thank you for viewing my question; each and every single one of your answer matters a ton to my journey towards the mastery of web development! I certainly very much appreciate all the support that the StackOverFlow community is providing to all junior developers who have just gone deep into the world of programming.</p> <h3>WHAT THE PROGRAM DOES</h3> <pre><code>#----------------------------------------------------------------------------- # Name:        Lottery Simulator 2022 # Purpose:     To encourage young people not to gamble on lotteries, as the probablity of correctly guessing the number is infinitemisial! # # Author:      John Seong # Created:     25-Feb-2022 # Updated:     01-Mar-2022 #----------------------------------------------------------------------------- # I think this project deserves a level 4+ because... # # Features Added: #   Game being entirely web-based using the Flask micro web framework #   Utilization of both functional programming and object-oriented programming #   Calculate the chances of winning for the sake of learning why gambling is risky #   After a set of number is entered by the user, the combinations will reset and the program will give completely an arbitrary number set differing from the previous one #   The user can change the difficulty setting, which will determine the constraint of the possible number set  #   Not only does it allow user to guess one number at a time, but multiple numbers stored in a dictionary #   In-game currency system that syncronizes with the SQLAlchemy database, which also generates the player leaderboard #   Game hosted on a cloud platform Heroku #   Used AJAX for communication between JAVASCRIPT and PYTHON files (via JSON) #----------------------------------------------------------------------------- </code></pre> <h3>PROBLEM I AM DEALING WITH</h3> <p>I got this error message on the console when I clicked the 'next' button three times which led to the <code>ajax</code> method that aids the communication between the JAVASCRIPT and PYTHON files:</p> <pre><code>127.0.0.1 - - [04/Mar/2022 13:18:28] &quot;POST /game HTTP/1.1&quot; 400 - </code></pre> <hr /> <h3>HTML AND JAVASCRIPT</h3> <p>game.html</p> <pre class=""lang-html prettyprint-override""><code>{% extends &quot;index.html&quot; %} {% block content %}  &lt;head&gt;     &lt;script&gt;         // TO DO: MAKE THE BAREBONE APP FIRST AND THEN PRETTIFY IT!         var counter = 0; // Button counter          var dict = {             'name': 0,             'range': 1,             'draws': 2         };          function onClickEvent() {             // Define all the elements by their ID...             const input = document.getElementById(&quot;name&quot;);             const warning = document.getElementById(&quot;warning&quot;);             const guide_text = document.getElementById(&quot;guide-text&quot;);             const guide_text_2 = document.getElementById(&quot;guide-text-2&quot;);             const array_renderer = document.getElementById(&quot;array-renderer&quot;);             const numbers_list = document.getElementById(&quot;numbers-list&quot;);              const name_of_input = document.getElementById(&quot;name&quot;).innerHTML;              const answers = []; // List for storing all the answers              // When no value is entered in the input, throw an error message...             if (document.forms['frm'].name.value === &quot;&quot;) {                 warning.style.display = 'block';             } else {                 warning.style.display = 'none';                 answers.push(document.forms['frm'].name.value);                 counter++;                 document.forms['frm'].name.value = &quot;&quot;;             }              // Scene transition when the submit button is pressed once... twice... three times... etc.             if (counter == 1) {                 guide_text.innerHTML = &quot;SET THE&lt;br&gt;RANGE OF&lt;br&gt;POSSIBLE&lt;br&gt;NUMBERS&quot;;                 guide_text_2.innerHTML = &quot;DON'T GO TOO CRAZY!&quot;;                 input.placeholder = &quot;Enter min. and max. values seperated by a space...&quot;;             } else if (counter == 2) {                 guide_text.innerHTML = &quot;HOW MANY&lt;br&gt;DRAWS?&quot;;                 guide_text_2.innerHTML = &quot;IS MURPHY'S LAW REAL?&quot;;                 input.placeholder = &quot;Enter the number of draws...&quot;;                 answers.push(document.forms['frm'].name.value);             } else if (counter == 3) {                 $.ajax({                     url: '{{ url_for(&quot;main.game&quot;) }}',                     type: 'POST',                     data: {                         nickname: answers[dict['name']],                         range: answers[dict['range']],                         draws: answers[dict['draws']]                     },                     success: function(response) {                         console.log(&quot;Successful attempt at retrieving the data!&quot;);                         warning.style.display = 'none';                     },                     error: function(response) {                         warning.style.display = 'block';                         warning.innerHTML = &quot;ERROR WHILE RETRIEVING THE LIST!&quot;                     }                 });                 guide_text.innerHTML = &quot;GUESS THE&lt;br&gt;NUMBERS IN A&lt;br&gt;&quot; + answers[dict['draws']] + &quot; * 1 ARRAY!&quot;;                 array_renderer.style.display = 'block';                 // Parse the JSON file handed over by views.py (set that contains random numbers)                 numbers_list.innerHTML = JSON.parse(data.random_set_json);                 input.placeholder = &quot;Enter the values seperated by a space...&quot;;             }         }          // Execute a function when the user releases a key on the keyboard =&gt; NEEDS FIX! DOESN'T WORK!         input.addEventListener(&quot;keyup&quot;, function(event) {             // Number 13 is the &quot;Enter&quot; key on the keyboard             if (event.keyCode === 13) {                 // Cancel the default action, if needed                 event.preventDefault();                 // Trigger the button element with a click                 document.getElementById(&quot;button&quot;).click();             }         });     &lt;/script&gt;     &lt;link rel=&quot;stylesheet&quot; href=&quot;../static/bootstrap/css/style.css&quot;&gt; &lt;/head&gt; &lt;header class=&quot;masthead&quot; style=&quot;background: lightgray&quot;&gt;     &lt;div class=&quot;container h-100&quot;&gt;         &lt;div class=&quot;row h-100&quot;&gt;             &lt;div class=&quot;col-lg-7 my-auto&quot; style=&quot;border-style: none;&quot;&gt;                 &lt;div class=&quot;mx-auto header-content&quot; style=&quot;background: rgba(47,37,48, 1);padding: 30px;border-radius: 34px; ;border-color: white;margin: 6px; color: white&quot;&gt;                     &lt;h1 class=&quot;mb-5&quot; id=&quot;guide-text&quot; style=&quot;font-family: 'Roboto Mono', monospace;color: white;text-align: center;&quot;&gt;WHAT IS&lt;br&gt;YOUR NAME?&lt;/h1&gt;                     &lt;h3 id=&quot;guide-text-2&quot; style=&quot;font-family: 'Roboto Mono', monospace; text-transform: uppercase; color: white&quot;&gt;DON'T HESITATE! GO ON!&lt;/h3&gt;&lt;br&gt;                     &lt;form action=&quot;&quot; name=&quot;frm&quot; method=&quot;post&quot;&gt;                         &lt;input class=&quot;form-control&quot; type=&quot;text&quot; id=&quot;name&quot; name=&quot;name&quot; placeholder=&quot;Enter your nickname...&quot;&gt;                         &lt;br&gt;                         &lt;div id=&quot;array-renderer&quot;&gt;                             &lt;h3 id=&quot;numbers-list&quot; style=&quot;font-family: 'Roboto Mono', monospace; text-transform: uppercase; color: white&quot;&gt;NULL&lt;/h3&gt;&lt;br&gt;                         &lt;/div&gt;                         &lt;br&gt;&lt;a class=&quot;btn btn-outline-warning btn-xl&quot; role=&quot;button&quot; id=&quot;button&quot; onclick=&quot;onClickEvent()&quot; href=&quot;#download&quot; style=&quot;color: white;font-family: 'Roboto Mono', monospace;font-size: 20px; justify-self: center; align-self: center&quot;&gt;Next&lt;/a&gt;                         &lt;br&gt;&lt;br&gt;                         &lt;p id=&quot;warning&quot; style=&quot;display: none; font-family: 'Roboto Mono', monospace; text-transform: uppercase; color: lightcoral&quot;&gt;The value you entered is invalid. Please try it again.&lt;/p&gt;                     &lt;/form&gt;                 &lt;/div&gt;             &lt;/div&gt;         &lt;/div&gt;     &lt;/div&gt; &lt;/header&gt;  {% endblock content %} </code></pre> <hr /> <h3>PYTHON SCRIPT</h3> <p>views.py</p> <pre class=""lang-py prettyprint-override""><code>from email.policy import default from random import Random from flask import Blueprint, render_template, request, session, jsonify  # from flask import current_app as app  import configparser  import json  from website.extensions import db  from .models import PlayerCurrency, RandomSet  # Import the config.cfg file and read the default value (starting point) of the game currency config = configparser.ConfigParser()  # Get the absolute path of the CFG file by doing os.getcwd() and joining it to config.cfg cfg_path = 'website/config.cfg'  bp = Blueprint('main', __name__)  # Whether user cookies will be collected or not cookiesAvail = True  # Read the CFG file config.read(cfg_path)  # Fix the 'failed to load' error! try:     default_count = config.getint(&quot;default&quot;, &quot;NUM_OF_NUMS&quot;)     default_coins = config.getint(&quot;default&quot;,&quot;MONEY&quot;) except:     print('CFG file failed to load twice!')   @bp.route('/', methods=['GET', 'POST']) def index():     if request.method == &quot;POST&quot;:         allow_cookies = request.form.get(&quot;allow-cookies&quot;)         decline_cookies = request.form.get(&quot;decline-cookies&quot;)          session.clear()          if allow_cookies == 'allow' and decline_cookies != 'decline':             cookiesAvail = True                  if decline_cookies == 'decline' and allow_cookies != 'allow':             cookiesAvail = False      return render_template(&quot;home.html&quot;)  @bp.route('/about') def about():     session.clear()     return render_template(&quot;about.html&quot;)  @bp.route('/game', methods=['GET', 'POST']) def game():     if request.method == 'POST':         # Clear the session         session.clear()         # Get all the user input values from game.js         player_name = json.loads(request.form['nickname'])         player_range = json.loads(request.form['range']).split(' ') # player_range[0] =&gt; min value, player_range[1] =&gt; max value         player_draws = json.loads(request.form['draws'])         # Define a random list object (instantiating a class located in models.py)         random_set = RandomSet(player_range[0], player_range[1], player_draws)         # Create a random list by generating arbitrary values         random_set.generate()         # Convert the generated random list (Python) into JSON-compatible string, so we can hand it over to game.js         random_set_json = json.dumps(random_set.current_set)          # INTERACTION BETWEEN JAVASCRIPT AND PYTHON (FLASK) USING AJAX AND JSONIFY: https://ayumitanaka13.medium.com/how-to-use-ajax-with-python-flask-729c0a8e5346         # HOW PYTHON-JSON CONVERSION WORKS USING THE JSON MODULE: https://www.w3schools.com/python/python_json.asp               return render_template(&quot;game.html&quot;)  # AJAX METHOD: https://ayumitanaka13.medium.com/how-to-use-ajax-with-python-flask-729c0a8e5346  # WHAT IS CURRENT_APP? LINK: https://flask.palletsprojects.com/en/2.0.x/appcontext/ # cd .. // go to the upper directory  # requirements.txt =&gt; # pip3 install -r requirements.txt to install the files  # COOKIES =&gt; WILL BE USED TO SKIP ENTER THE NAME STAGE IN SETUP! # ADD DIFFICULY INDICATOR DEPENDING ON THE SCALE OF THE RANGE, AND SEPERATE THE LEADERBOARD BY DIFFICULTY LEVEL (EASY, MODERATE, HARD) </code></pre> <p>models.py</p> <pre class=""lang-py prettyprint-override""><code>class RandomSet():      def __init__(self, min_value, max_value, draws):         self.min_value = min_value  # Minimum value that the raodom number can be         self.max_value = max_value  # Maximum value that the random numbers can be         self.count = draws  # Number of draws         # A list that contains the set that computer generated, containing machine-picked arbitrary numbers         self.current_set = []         self.chances = 0  # Chances of winning, calculated by the computer      # Generate a set containing completely arbitrary numbers     def generate(self):         for i in range(self.count):             # Add a random value generated by a computer to the list using a for loop and a RANDINT built-in function             self.current_set.append(random.randint(                 self.min_value, self.max_value))          # Calculate the chances and store it in the instance's variable         self.chances = calculate_chances(self.current_set, self.count)   def calculate_chances(current_set, count):     &quot;&quot;&quot;     Calculate the chances of winning,     by using the permuation formula     and converting it to a percentage.     &quot;&quot;&quot;     return str(f'{(1 / len(permutations(current_set, count))) * 100} %') </code></pre> <hr /> <p>You can also check out the full code on my <a href=""https://github.com/wonmor/Lottery-Simulator-2022"" rel=""nofollow noreferrer"">GitHub repository</a>.</p>"	2022-03-04 19:02:50.637 UTC	71531952	"<p>It turns out I had to <strong>double-JSON stringify</strong> the data that I was handing over to the server side.</p> <p>So basically what it means is:</p> <p><strong>WHILE THE ORIGINAL CODE LOOKS LIKE THIS:</strong></p> <pre class=""lang-js prettyprint-override""><code>                $.ajax({                     url: '{{ url_for(&quot;main.game&quot;) }}',                     type: 'POST',                     data: {                         nickname: answers[dict['name']],                         range: answers[dict['range']],                         draws: answers[dict['draws']]                     },  </code></pre> <p><strong>THE CODE SHOULD LOOK LIKE THIS FOR IT TO WORK:</strong></p> <pre class=""lang-js prettyprint-override""><code>               $.ajax({                     url: '/game',                     type: 'POST',                     data: JSON.stringify({ // Make sure you surround the data variable(s) with JSON.stringify's MULTIPLE TIMES to avoid any potential error! Data HAS to be in JSON format.                         nickname: JSON.stringify(answers[dict['name']]),                         range: JSON.stringify(answers[dict['range']]),                         draws: JSON.stringify(answers[dict['draws']])                     }), </code></pre> <p>It was one simple mistake but took me an excruciatingly long time to catch.</p>"			2022-03-18 18:56:40.317 UTC
71383997	javascript|python|opencv	Add texture of img1 to img2 to get result img - Python / Javascript	"<p>I am trying to add texture and pattern of img1 to img2 to get result something like the result image img3 - Img2 is has transparent background and result Img3 must also have transparent background</p> <p><a href=""https://i.stack.imgur.com/KlKkh.jpg"" rel=""nofollow noreferrer"">Img1</a></p> <p><a href=""https://i.stack.imgur.com/DsQj1.png"" rel=""nofollow noreferrer"">Img2</a></p> <p><a href=""https://i.stack.imgur.com/dSs9G.png"" rel=""nofollow noreferrer"">Img3</a></p> <hr />"	2022-03-07 16:12:03.057 UTC	71388300	"<p>Here is how to do that in Imagemagick. It can be done in Python/OpenCV, but I do not have the time now to implement it. It is pretty easy in Imagemagick using one of my bash shell scripts to do the spherize of the texture.</p> <p><em>(I show how to do the spherical distortion in Python/OpenCV at <a href=""https://stackoverflow.com/questions/69953948/how-make-eye-and-nose-bigger-or-smaller-in-opencv-and-python/70042527#70042527"">How make eye and nose bigger or smaller in opencv and python</a> in a previous post. And an example showing how to do the hard light composite in Python/OpenCV is in <a href=""https://stackoverflow.com/questions/64278790/how-to-augment-scanned-document-image-with-creases-folds-and-wrinkles/64362188#64362188"">How to augment scanned document image with creases, folds and wrinkles?</a>)</em></p> <ul> <li>First, I have to trim the sphere image to its bounds and have it square dimensions.</li> <li>Then I have to resize the texture image and crop it to the same dimensions as the trimmed sphere image.</li> <li>Then I apply the spherize script to the cropped texture image</li> <li>Finally I save the alpha channel from the sphere image and do a hardlight composite of the sphere image with the spherized texture image. And save the result</li> </ul> <p>Sphere Image:</p> <p><a href=""https://i.stack.imgur.com/NMF0u.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/NMF0u.png"" alt=""enter image description here"" /></a></p> <p>Texture Image:</p> <p><a href=""https://i.stack.imgur.com/hXMQS.jpg"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/hXMQS.jpg"" alt=""enter image description here"" /></a></p> <pre><code>convert sphere.png -trim +repage sphere_trim.png  convert texture.jpg -resize 1375x1375^ -gravity center -crop 1375x1375+0+0 +repage texture_resize_crop.jpg  spherize -a 1 -b white texture_resize_crop.jpg texture_resize_crop_spherize_a1.jpg  convert texture_resize_crop_spherize_a1.jpg \ sphere_trim.png \ \( +clone -alpha extract +write mpr:alpha +delete \) -alpha off \ \( +clone \) \ -compose hardlight -composite \ mpr:alpha -alpha off -compose over -compose copy_opacity -composite \ sphere_texture.png </code></pre> <p>Trimmed Sphere Image:</p> <p><a href=""https://i.stack.imgur.com/dvRmb.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/dvRmb.png"" alt=""enter image description here"" /></a></p> <p>Resized and Cropped Texture Image:</p> <p><a href=""https://i.stack.imgur.com/Bk83z.jpg"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/Bk83z.jpg"" alt=""enter image description here"" /></a></p> <p>Spherized Texture Image:</p> <p><a href=""https://i.stack.imgur.com/WL9oX.jpg"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/WL9oX.jpg"" alt=""enter image description here"" /></a></p> <p>Result From Hardlight Composite:</p> <p><a href=""https://i.stack.imgur.com/yIiik.jpg"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/yIiik.jpg"" alt=""enter image description here"" /></a></p>"			2022-03-07 23:13:09.773 UTC
71393139	javascript|json|axios|http-status-code-500	https POST result in different response - python(w/ requests returns 200) works well whereas Javascript(w/ axios returns 500) doesn't	"<p>I've made a simple https POST code snippet using python and javascript.</p> <p>I expected that all results will be same but the results are not.</p> <p>Python result(w/ requests) returns 200 whereas javascript(w/ axios) returns 500.</p> <p>I think all conditions including headers are exactly equal but I wonder why this situation happens.</p> <p>Please let me know if I'm mistaken.</p> <hr /> <p><strong>[Python code] / python 3.9.6</strong></p> <pre><code>import requests import json s = requests.Session()  _url = 'https://graphql.bitquery.io/' _data = {         &quot;variables&quot;: json.dumps({         &quot;limit&quot;: 1,         &quot;offset&quot;: 0,         &quot;network&quot;: &quot;ethereum&quot;,         &quot;token&quot;: &quot;0xB8c77482e45F1F44dE1745F52C74426C631bDD52&quot;,         &quot;from&quot;: &quot;2021-06-01&quot;,         &quot;till&quot;: &quot;2022-01-02T23:59:59&quot;,         &quot;dateFormat&quot;: &quot;%Y-%m-%d&quot;         }) }  r = s.post(url=_url, data=_data) r.text </code></pre> <p>Its response returns 200 and the result is below.</p> <pre><code>'{&quot;data&quot;:{&quot;ethereum&quot;:{&quot;transfers&quot;:[{&quot;block&quot;:{&quot;timestamp&quot;:{&quot;time&quot;:&quot;2022-01-02 23:59:50&quot;},&quot;height&quot;:13929166},&quot;sender&quot;:{&quot;address&quot;:&quot;0xf60c2ea62edbfe808163751dd0d8693dcb30019c&quot;,&quot;annotation&quot;:null},&quot;receiver&quot;:{&quot;address&quot;:&quot;0x7b60d1c03cda03952bebc58d7a64c2e15f738356&quot;,&quot;annotation&quot;:null},&quot;transaction&quot;:{&quot;hash&quot;:&quot;0x09be49c24fc639572a6dcc4e338ce57c5f2d206c983935f6c21df522276dc875&quot;},&quot;amount&quot;:0.24,&quot;currency&quot;:{&quot;symbol&quot;:&quot;BNB&quot;},&quot;external&quot;:true}]}}}' </code></pre> <p>I also wrote another simple snippet using javascript w/ axios and I expected the same result but...</p> <p><strong>[Javascript code] / node.js v16.13.1</strong></p> <pre><code>const axios = require('axios')  const _url = 'https://graphql.bitquery.io/' const _data = {         &quot;variables&quot;: JSON.stringify({         &quot;limit&quot;: 1,         &quot;offset&quot;: 0,         &quot;network&quot;: &quot;ethereum&quot;,         &quot;token&quot;: &quot;0xB8c77482e45F1F44dE1745F52C74426C631bDD52&quot;,         &quot;from&quot;: &quot;2021-06-01&quot;,         &quot;till&quot;: &quot;2022-01-02T23:59:59&quot;,         &quot;dateFormat&quot;: &quot;%Y-%m-%d&quot;         }) }  const r = async () =&gt; {     const resp = await axios.post(_url, {         data: _data     })     console.log(resp) } r()  </code></pre> <p>Its response returns 500 and the result is below.</p> <pre><code>Uncaught Error: Request failed with status code 500 </code></pre>"	2022-03-08 10:05:27.153 UTC	71396241	"<p>@CBoe Thank you for your help. It was due to an axios syntax mistake.</p> <pre><code>const r = async () =&gt; {     const resp = await axios.post(_url, {         data: _data     })     console.log(resp) } r() </code></pre> <p>-&gt; it should be revised as below.</p> <pre><code>const r = async () =&gt; {     const resp = await axios.post(_url, _data)     console.log(resp) } r() </code></pre> <p>Its response returns 200.</p> <pre><code>{status: 200, statusText: 'OK', headers: {…}, config: {…}, request: ClientRequest, …} </code></pre>"			2022-03-08 13:57:00.2 UTC
71421162	javascript|python|reactjs|react-native	how to get a value from a python code to a Javascript variable in JS file	"<p>I'm trying to develop the frontend in Javascript for a voice bot, which was written in python</p> <pre><code>if hi == 0:     talk('hello iam kavi')     print('hello iam kavi Voice assistant')     talk('How are you buddy!!!')     print('How are you buddy!!!')     talk('doing good right?????')     print('doing good right?????') </code></pre> <p>In the code above, instead of printing it on the terminal, I want it to be sent to Javascript code, which looks like below</p> <pre><code>class MessageParser {   constructor(ActionProvider, state) {     this.actionProvider = ActionProvider;     this.state = state;   }    parse(message) {     const lowerCaseMessage = message.toLowerCase()          if (lowerCaseMessage.includes(&quot;hello&quot;)) {       this.actionProvider.greet();     }     else{       this.actionProvider.listening();     }   } }  export default MessageParser; </code></pre> <p>where the printed text in the python code should be sent as message variable into parse(message) function.</p> <p>I'm a beginner at Javascript and React, any help is appreciated.</p>"	2022-03-10 08:45:23.263 UTC	71421688	"<p>You need to build an API in Python, to send the data to React. The fastest way will probably be using flask, it could look like this:</p> <pre><code>from flask import Flask  app = Flask(__name__)  @app.route('/talk', methods=['GET']) def talk():     return talk(&quot;whatever&quot;) </code></pre> <p>Then from react you can get the message using <code>fetch</code>, <code>axios</code> or any other option in the <code>componentDidMount</code> or <code>componentDidUpdate</code> depending on your needs. Please, note that I don't know how your <code>talk</code> function works so you'll have to adapt the code to send the correct message to the frontend.</p>"			2022-03-10 09:24:57.02 UTC
71444292	python|selenium|beautifulsoup	"How to fix JavaScript is not available output, when web scraping dynamic sites with selenium and beautiful soup in Python"	"<p>I have looked everywhere to find a solution(Including old stackoverflow posts of related issues) to remove javascript not available as output, it gives this for dynamic sites so I decided to use selenium instead of requests library and I still get the same issue. Anybody know how to fix this issue so its possible to scrape dynamic sites. I simply want to retrieve the text from dynamic sites. I've exhausted all ways to find a solution below is my code feel free to add or recommend a solution.</p> <p>Console output: JavaScript is not available. We’ve detected that JavaScript is disabled in this browser. Please enable JavaScript or switch to a supported browser to continue using twitter.com. You can see a list of supported browsers in our Help Center. Help Center</p> <p>Below is my code:</p> <pre><code>import time  from selenium import webdriver  from bs4 import BeautifulSoup  browser = webdriver.Chrome('chromedriver')  options = webdriver.ChromeOptions()  options.headless = True  options.add_argument('--enable-javascript')  options.add_argument(&quot;--headless&quot;)  browser.get(&quot;https:/www.twitter.com/&quot;)  time.sleep(2)  html = browser.page_source  soup = BeautifulSoup(html, 'html.parser')  L = soup.getText()  time.sleep(2)  print(L) </code></pre>"	2022-03-11 20:27:24.427 UTC	71444635	"<p>Your URL is incorrect, it should be <a href=""https://twitter.com/"" rel=""nofollow noreferrer"">https://twitter.com/</a></p> <p>Twitter uses bot detection technology, and when you use selenium it searches for some data about the browser.</p> <p>Basically, all you need is to change the <em>cdc_</em> string in the driver.</p> <p>There is a link to the same question: <a href=""https://stackoverflow.com/questions/33225947/can-a-website-detect-when-you-are-using-selenium-with-chromedriver"">link</a></p>"			2022-03-11 21:05:03.307 UTC
71444292	python|selenium|beautifulsoup	"How to fix JavaScript is not available output, when web scraping dynamic sites with selenium and beautiful soup in Python"	"<p>I have looked everywhere to find a solution(Including old stackoverflow posts of related issues) to remove javascript not available as output, it gives this for dynamic sites so I decided to use selenium instead of requests library and I still get the same issue. Anybody know how to fix this issue so its possible to scrape dynamic sites. I simply want to retrieve the text from dynamic sites. I've exhausted all ways to find a solution below is my code feel free to add or recommend a solution.</p> <p>Console output: JavaScript is not available. We’ve detected that JavaScript is disabled in this browser. Please enable JavaScript or switch to a supported browser to continue using twitter.com. You can see a list of supported browsers in our Help Center. Help Center</p> <p>Below is my code:</p> <pre><code>import time  from selenium import webdriver  from bs4 import BeautifulSoup  browser = webdriver.Chrome('chromedriver')  options = webdriver.ChromeOptions()  options.headless = True  options.add_argument('--enable-javascript')  options.add_argument(&quot;--headless&quot;)  browser.get(&quot;https:/www.twitter.com/&quot;)  time.sleep(2)  html = browser.page_source  soup = BeautifulSoup(html, 'html.parser')  L = soup.getText()  time.sleep(2)  print(L) </code></pre>"	2022-03-11 20:27:24.427 UTC	71444574	"<p>Javascript is enabled in all browsers by default unless you have explicitly disabled it. In this usecase it seems <a href=""https://stackoverflow.com/a/54482491/7429447"">Selenium</a> driven <a href=""https://stackoverflow.com/a/48080871/7429447"">ChromeDriver</a> initiated <a href=""/questions/tagged/google-chrome"" class=""post-tag"" title=""show questions tagged &#39;google-chrome&#39;"" rel=""tag"">google-chrome</a> <em>Browsing Context</em> is getting <a href=""https://stackoverflow.com/a/62520191/7429447"">detected</a> as a <a href=""/questions/tagged/bot"" class=""post-tag"" title=""show questions tagged &#39;bot&#39;"" rel=""tag"">bot</a></p> <p>However, I was able to retrieve the <a href=""https://stackoverflow.com/a/60073315/7429447""><em>Page Source</em></a> using a few tweaks as follows:</p> <ul> <li><p>Code Block:</p> <pre><code>options = Options() options.headless = True options.add_argument(&quot;start-maximized&quot;) options.add_experimental_option(&quot;excludeSwitches&quot;, [&quot;enable-automation&quot;]) options.add_experimental_option('useAutomationExtension', False) options.add_argument('--disable-blink-features=AutomationControlled') options.add_argument(&quot;user-agent=Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/98.0.4758.102 Safari/537.36&quot;) s = Service('C:\\BrowserDrivers\\chromedriver.exe') driver = webdriver.Chrome(service=s, options=options) driver.get(&quot;https:/www.twitter.com/&quot;) print(driver.page_source) </code></pre> </li> <li><p>Console Output:</p> <pre><code>&lt;html dir=&quot;ltr&quot; lang=&quot;en-GB&quot; style=&quot;overflow-y: scroll; overscroll-behavior-y: none; font-size: 15px;&quot;&gt;&lt;head&gt;&lt;style&gt;input::placeholder { user-select: none; -webkit-user-select: none; }&lt;/style&gt;&lt;style&gt;@font-face {   font-family: TwitterChirpExtendedHeavy;   src: url(https://abs.twimg.com/fonts/v1/chirp-extended-heavy-web.woff2) format('woff2');   src: url(https://abs.twimg.com/fonts/v1/chirp-extended-heavy-web.woff) format('woff');   font-weight: 800;   font-style: 'normal';   font-display: 'swap'; } @font-face {   font-family: TwitterChirp;   src: url(https://abs.twimg.com/fonts/v2/chirp-regular-web.woff2) format('woff2');   src: url(https://abs.twimg.com/fonts/v2/chirp-regular-web.woff) format('woff');   font-weight: 400;   font-style: 'normal';   font-display: 'swap'; } @font-face {   font-family: TwitterChirp;   src: url(https://abs.twimg.com/fonts/v2/chirp-medium-web.woff2) format('woff2');   src: url(https://abs.twimg.com/fonts/v2/chirp-medium-web.woff) format('woff');   font-weight: 500;   font-style: 'normal';   font-display: 'swap'; } @font-face {   font-family: TwitterChirp;   src: url(https://abs.twimg.com/fonts/v2/chirp-bold-web.woff2) format('woff2');   src: url(https://abs.twimg.com/fonts/v2/chirp-bold-web.woff) format('woff');   font-weight: 700;   font-style: 'normal';   font-display: 'swap'; } @font-face {   font-family: TwitterChirp;   src: url(https://abs.twimg.com/fonts/v2/chirp-heavy-web.woff2) format('woff2');   src: url(https://abs.twimg.com/fonts/v2/chirp-heavy-web.woff) format('woff');   font-weight: 800;   font-style: 'normal';   font-display: 'swap'; }&lt;/style&gt;&lt;meta charset=&quot;utf-8&quot;&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width,initial-scale=1,maximum-scale=1,user-scalable=0,viewport-fit=cover&quot;&gt;&lt;link rel=&quot;preconnect&quot; href=&quot;//abs.twimg.com&quot;&gt;&lt;link rel=&quot;dns-prefetch&quot; href=&quot;//abs.twimg.com&quot;&gt;&lt;link rel=&quot;preconnect&quot; href=&quot;//api.twitter.com&quot;&gt;&lt;link rel=&quot;dns-prefetch&quot; href=&quot;//api.twitter.com&quot;&gt;&lt;link rel=&quot;preconnect&quot; href=&quot;//pbs.twimg.com&quot;&gt;&lt;link rel=&quot;dns-prefetch&quot; href=&quot;//pbs.twimg.com&quot;&gt;&lt;link rel=&quot;preconnect&quot; href=&quot;//t.co&quot;&gt;&lt;link rel=&quot;dns-prefetch&quot; href=&quot;//t.co&quot;&gt;&lt;link rel=&quot;preconnect&quot; href=&quot;//video.twimg.com&quot;&gt;&lt;link rel=&quot;dns-prefetch&quot; href=&quot;//video.twimg.com&quot;&gt;&lt;link rel=&quot;preload&quot; as=&quot;script&quot; crossorigin=&quot;anonymous&quot; href=&quot;https://abs.twimg.com/responsive-web/client-web/polyfills.86126f05.js&quot; nonce=&quot;&quot;&gt;&lt;link rel=&quot;preload&quot; as=&quot;script&quot; crossorigin=&quot;anonymous&quot; href=&quot;https://abs.twimg.com/responsive-web/client-web/vendors~main.943109f5.js&quot; nonce=&quot;&quot;&gt;&lt;link rel=&quot;preload&quot; as=&quot;script&quot; crossorigin=&quot;anonymous&quot; href=&quot;https://abs.twimg.com/responsive-web/client-web/i18n/en-GB.e698d8f5.js&quot; nonce=&quot;&quot;&gt;&lt;link rel=&quot;preload&quot; as=&quot;script&quot; crossorigin=&quot;anonymous&quot; href=&quot;https://abs.twimg.com/responsive-web/client-web/main.1ccd30a5.js&quot; nonce=&quot;&quot;&gt;&lt;meta property=&quot;fb:app_id&quot; content=&quot;2231777543&quot;&gt; . .   &lt;noscript&gt;     &lt;style&gt;     body {       -ms-overflow-style: scrollbar;       overflow-y: scroll;       overscroll-behavior-y: none;     }      .errorContainer {       background-color: #FFF;       color: #0F1419;       max-width: 600px;       margin: 0 auto;       padding: 10%;       font-family: Helvetica, sans-serif;       font-size: 16px;     }      .errorButton {       margin: 3em 0;     }      .errorButton a {       background: #1DA1F2;       border-radius: 2.5em;       color: white;       padding: 1em 2em;       text-decoration: none;     }      .errorButton a:hover,     .errorButton a:focus {       background: rgb(26, 145, 218);     }      .errorFooter {       color: #657786;       font-size: 80%;       line-height: 1.5;       padding: 1em 0;     }      .errorFooter a,     .errorFooter a:visited {       color: #657786;       text-decoration: none;       padding-right: 1em;     }      .errorFooter a:hover,     .errorFooter a:active {       text-decoration: underline;     }        #placeholder,       #react-root {         display: none !important;       }       body {         background-color: #FFF !important;       }     &lt;/style&gt;     &lt;div class=&quot;errorContainer&quot;&gt;       &lt;img width=&quot;46&quot; height=&quot;38&quot; srcset=&quot;https://abs.twimg.com/errors/logo46x38.png 1x, https://abs.twimg.com/errors/logo46x38@2x.png 2x&quot; src=&quot;https://abs.twimg.com/errors/logo46x38.png&quot; alt=&quot;Twitter&quot; /&gt;       &lt;h1&gt;JavaScript is not available.&lt;/h1&gt;       &lt;p&gt;We’ve detected that JavaScript is disabled in this browser. Please enable JavaScript or switch to a supported browser to continue using twitter.com. You can see a list of supported browsers in our Help Centre.&lt;/p&gt;       &lt;p class=&quot;errorButton&quot;&gt;&lt;a href=&quot;https://help.twitter.com/using-twitter/twitter-supported-browsers&quot;&gt;Help Center&lt;/a&gt;&lt;/p&gt;     &lt;p class=&quot;errorFooter&quot;&gt;       &lt;a href=&quot;https://twitter.com/tos&quot;&gt;Terms of Service&lt;/a&gt;       &lt;a href=&quot;https://twitter.com/privacy&quot;&gt;Privacy Policy&lt;/a&gt;       &lt;a href=&quot;https://support.twitter.com/articles/20170514&quot;&gt;Cookie Policy&lt;/a&gt;       &lt;a href=&quot;https://legal.twitter.com/imprint&quot;&gt;Imprint&lt;/a&gt;       &lt;a href=&quot;https://business.twitter.com/en/help/troubleshooting/how-twitter-ads-work.html?ref=web-twc-ao-gbl-adsinfo&amp;utm_source=twc&amp;utm_medium=web&amp;utm_campaign=ao&amp;utm_content=adsinfo&quot;&gt;Ads info&lt;/a&gt;       © 2022 Twitter, Inc.     &lt;/p&gt;      &lt;/div&gt;   &lt;/noscript&gt;   .   .   &lt;script type=&quot;text/javascript&quot; charset=&quot;utf-8&quot; nonce=&quot;&quot; crossorigin=&quot;anonymous&quot; src=&quot;https://abs.twimg.com/responsive-web/client-web/polyfills.86126f05.js&quot;&gt;&lt;/script&gt;&lt;script type=&quot;text/javascript&quot; charset=&quot;utf-8&quot; nonce=&quot;&quot; crossorigin=&quot;anonymous&quot; src=&quot;https://abs.twimg.com/responsive-web/client-web/vendors~main.943109f5.js&quot;&gt;&lt;/script&gt;&lt;script type=&quot;text/javascript&quot; charset=&quot;utf-8&quot; nonce=&quot;&quot; crossorigin=&quot;anonymous&quot; src=&quot;https://abs.twimg.com/responsive-web/client-web/i18n/en-GB.e698d8f5.js&quot;&gt;&lt;/script&gt;&lt;script type=&quot;text/javascript&quot; charset=&quot;utf-8&quot; nonce=&quot;&quot; crossorigin=&quot;anonymous&quot; src=&quot;https://abs.twimg.com/responsive-web/client-web/main.1ccd30a5.js&quot;&gt;&lt;/script&gt;&lt;script nonce=&quot;&quot;&gt;(function () {   if (!window.__SCRIPTS_LOADED__['main']) {     document.getElementById('ScriptLoadFailure').style.display = 'block';     var criticalScripts = [&quot;polyfills&quot;,&quot;vendors~main&quot;,&quot;i18n&quot;,&quot;main&quot;];     for (var i = 0; i &lt; criticalScripts.length; i++) {       var criticalScript = criticalScripts[i];       if (!window.__SCRIPTS_LOADED__[criticalScript]) {         document.getElementsByName('failedScript')[0].value = criticalScript;         break;       }     }   } })();&lt;/script&gt;&lt;script nonce=&quot;&quot;&gt;document.cookie = decodeURIComponent(&quot;gt=1502387523636527105; Max-Age=10800; Domain=.twitter.com; Path=/; Secure&quot;);&lt;/script&gt;&lt;script src=&quot;https://accounts.google.com/gsi/client&quot; id=&quot;googleGSILibrary&quot; async=&quot;&quot; defer=&quot;&quot;&gt;&lt;/script&gt;&lt;script src=&quot;https://appleid.cdn-apple.com/appleauth/static/jsapi/appleid/1/en_US/appleid.auth.js&quot; id=&quot;signInWithAppleJsLibrary&quot; async=&quot;&quot; defer=&quot;&quot;&gt;&lt;/script&gt;&lt;/body&gt;&lt;/html&gt; </code></pre> </li> </ul>"			2022-03-11 20:58:53.777 UTC
71459163	javascript|python|typescript	What is javascript/typescript equivalent of this python function?	"<p>I couldn't convert this syntax to js or ts:</p> <pre class=""lang-py prettyprint-override""><code>    def get_index(self):         path = self.get_request_path()         if &quot;/_async_search&quot; in path and &quot;/_search&quot;:             # no index we wildcard             return next((sub_part for sub_part in path.split(&quot;/&quot;) if sub_part != &quot;&quot;), &quot;*&quot;)         return None </code></pre>"	2022-03-13 17:29:19.507 UTC	71459611	"<p>I think the main complication to do the javascript translation of your python code is to lazy load the list returned by <code>path.split(&quot;/&quot;)</code> like it's done in your python code.</p> <p>For that, you can use a generator function like the following:</p> <pre><code>function* first_substring(path) {   for(substring of path.split(&quot;/&quot;)){     if(substring !== &quot;&quot;){         yield substring;     }     else{         yield &quot;*&quot;;     }   } } </code></pre> <p>Then your javascript translation would be something like:</p> <pre><code>function get_index(){     const path = this.get_request_path();      if(path.indexOf(&quot;/_async_search&quot;) !== -1 &amp;&amp; &quot;/_search&quot;){         return first_substring(path).next().value;     }      return None  } </code></pre>"			2022-03-13 18:23:31.04 UTC
71463124	javascript|python|ecmascript-6	"what is the equivalent of python open(filepath, 'rb') in JavaScript"	"<p>I can open the file in binary mode with Python and store it in a variable. I have been researching this for two days, and I can't seem to find a straightforward answer. I need this because I have been working on a project that we have completed in Python, but we need to convert it into JavaScript. The issue that I'm having is that I need to send a file through an API call. Still, every time I do, I get this error <strong>' HTTP 415 Unsupported Media TypeThe provided media type is not supported for the requested URI</strong>. What I have is a JSON file that I need to pass to a post-call in binary</p> <pre><code>files = {'file': open(JSON_File, 'rb')} response = requests.post(     URL,      auth=(USERNAME, PASSWORD),     files=files     #files=files, verify = False ) </code></pre> <p>response.text</p> <p>how can I do this in nodeJS? I completed the above already in Python.</p> <p>Here is what the the files variable prints from the python code.</p> <pre><code>files = {'file': open(JSON_File_path, 'rb')}  print(files) =&gt; {'file': &lt;_io.BufferedReader name='my_json_file.json'&gt;} </code></pre> <p>Here is and example of what my json file contains:</p> <pre><code>    [   {     &quot;resourceType&quot;: &quot;Domain&quot;,     &quot;identifier&quot;: {       &quot;name&quot;: &quot;ZZ_CRM&quot;,       &quot;community&quot;: {         &quot;name&quot;: &quot;Intermediate APIs&quot;       }     },     &quot;type&quot;: {       &quot;name&quot;: &quot;Data Asset Domain&quot;     }   },   {     &quot;resourceType&quot;: &quot;Domain&quot;,     &quot;identifier&quot;: {       &quot;name&quot;: &quot;ZZ_Source to Target Mappings&quot;,       &quot;community&quot;: {         &quot;name&quot;: &quot;Intermediate APIs&quot;       }     },     &quot;type&quot;: {       &quot;name&quot;: &quot;Mapping Domain&quot;     }   },   {     &quot;resourceType&quot;: &quot;Asset&quot;,     &quot;identifier&quot;: {       &quot;name&quot;: &quot;Client Name&quot;,       &quot;domain&quot;: {         &quot;name&quot;: &quot;ZZ_CRM&quot;,         &quot;community&quot;: {           &quot;name&quot;: &quot;Intermediate APIs&quot;         }       }     },     &quot;type&quot;: {       &quot;name&quot;: &quot;Data Element&quot;     }   },   {     &quot;resourceType&quot;: &quot;Asset&quot;,     &quot;identifier&quot;: {       &quot;name&quot;: &quot;Client ID&quot;,       &quot;domain&quot;: {         &quot;name&quot;: &quot;ZZ_CRM&quot;,         &quot;community&quot;: {           &quot;name&quot;: &quot;Intermediate APIs&quot;         }       }     },     &quot;type&quot;: {       &quot;name&quot;: &quot;Data Element&quot;     }   },   {     &quot;resourceType&quot;: &quot;Asset&quot;,     &quot;identifier&quot;: {       &quot;name&quot;: &quot;SQL Server Mapping&quot;,       &quot;domain&quot;: {         &quot;name&quot;: &quot;ZZ_Source to Target Mappings&quot;,         &quot;community&quot;: {           &quot;name&quot;: &quot;Intermediate APIs&quot;         }       }     },     &quot;type&quot;: {       &quot;name&quot;: &quot;Mapping Specification&quot;     }   },   {     &quot;resourceType&quot;: &quot;Complex Relation&quot;,     &quot;identifier&quot;: {       &quot;relations&quot;: {         &quot;00000000-0000-0000-0000-000000007088:TARGET&quot;: [           {             &quot;name&quot;: &quot;SQL Server Mapping1Name&quot;,             &quot;domain&quot;: {               &quot;name&quot;: &quot;ZZ_Source to Target Mappings1Name&quot;,               &quot;community&quot;: {                 &quot;name&quot;: &quot;Intermediate APIs1Name&quot;               }             }           }         ],         &quot;00000000-0000-0000-0000-000000007089:TARGET&quot;: [           {             &quot;name&quot;: &quot;Client ID&quot;,             &quot;domain&quot;: {               &quot;name&quot;: &quot;ZZ_CRM&quot;,               &quot;community&quot;: {                 &quot;name&quot;: &quot;Intermediate APIs&quot;               }             }           }         ],         &quot;00000000-0000-0000-0000-000000007090:TARGET&quot;: [           {             &quot;name&quot;: &quot;SQL Server Mapping&quot;,             &quot;domain&quot;: {               &quot;name&quot;: &quot;ZZ_Source to Target Mappings&quot;,               &quot;community&quot;: {                 &quot;name&quot;: &quot;Intermediate APIs&quot;               }             }           }         ]       }     },     &quot;complexRelationType&quot;: {       &quot;name&quot;: &quot;Field Mapping&quot;     },     &quot;attributes&quot;: {       &quot;Transformation Logic&quot;: [         {           &quot;value&quot;: &quot;`clientsWithType` AS select `client`.`client_id` AS `id`, concat( concat( `client`.`name`, ' ' ), `client`.`surname` ) AS `fullname`, `client_type`.`value` AS `client_type`, `client`.`email_address` AS `email_address` from ( `client` join `client_type` on (( `client`.`client_type` = `client_type`.`code` )));&quot;         }       ]     }   } ] </code></pre>"	2022-03-14 04:52:13.34 UTC	71463157	"<p>Please try this,</p> <p><a href=""https://nodejs.org/api/fs.html#fs_fs_readfile_file_options_callback"" rel=""nofollow noreferrer"">https://nodejs.org/api/fs.html#fs_fs_readfile_file_options_callback</a></p> <pre><code>import { open } from 'fs/promises'; let filehandle = null; try {   filehandle = await open(&lt;filepath&gt;, &lt;options&gt;); } </code></pre>"			2022-03-14 04:57:38.843 UTC
71484812	javascript|python|node.js|ecmascript-6	"in JavaScript what is the equivalent of python open(filepath, 'rb')"	"<p>I can open the file in binary mode with Python and store it in a variable. I have been researching this for two days, and I can't seem to find a straightforward answer. I need this because I have been working on a project that we have completed in Python, but we need to convert it into JavaScript. The issue that I'm having is that I need to send a file through an API call. Still, every time I do, I get this error <strong>' HTTP 415 Unsupported Media TypeThe provided media type is not supported for the requested URI</strong>. What I have is a JSON file that I need to pass to a post-call in binary</p> <pre><code>files = {'file': open(JSON_File, 'rb')} response = requests.post(     URL,      auth=(USERNAME, PASSWORD),     files=files     #files=files, verify = False ) </code></pre> <p>response.text</p> <p>how can I do this in nodeJS? I completed the above already in Python.</p> <p>Here is what the the files variable prints from the python code.</p> <pre><code>files = {'file': open(JSON_File_path, 'rb')}  print(files) =&gt; {'file': &lt;_io.BufferedReader name='my_json_file.json'&gt;} </code></pre> <p>Here is and example of what my json file contains:</p> <pre><code>    [   {     &quot;resourceType&quot;: &quot;Domain&quot;,     &quot;identifier&quot;: {       &quot;name&quot;: &quot;ZZ_CRM&quot;,       &quot;community&quot;: {         &quot;name&quot;: &quot;Intermediate APIs&quot;       }     },     &quot;type&quot;: {       &quot;name&quot;: &quot;Data Asset Domain&quot;     }   },   {     &quot;resourceType&quot;: &quot;Domain&quot;,     &quot;identifier&quot;: {       &quot;name&quot;: &quot;ZZ_Source to Target Mappings&quot;,       &quot;community&quot;: {         &quot;name&quot;: &quot;Intermediate APIs&quot;       }     },     &quot;type&quot;: {       &quot;name&quot;: &quot;Mapping Domain&quot;     }   },   {     &quot;resourceType&quot;: &quot;Asset&quot;,     &quot;identifier&quot;: {       &quot;name&quot;: &quot;Client Name&quot;,       &quot;domain&quot;: {         &quot;name&quot;: &quot;ZZ_CRM&quot;,         &quot;community&quot;: {           &quot;name&quot;: &quot;Intermediate APIs&quot;         }       }     },     &quot;type&quot;: {       &quot;name&quot;: &quot;Data Element&quot;     }   },   {     &quot;resourceType&quot;: &quot;Asset&quot;,     &quot;identifier&quot;: {       &quot;name&quot;: &quot;Client ID&quot;,       &quot;domain&quot;: {         &quot;name&quot;: &quot;ZZ_CRM&quot;,         &quot;community&quot;: {           &quot;name&quot;: &quot;Intermediate APIs&quot;         }       }     },     &quot;type&quot;: {       &quot;name&quot;: &quot;Data Element&quot;     }   },   {     &quot;resourceType&quot;: &quot;Asset&quot;,     &quot;identifier&quot;: {       &quot;name&quot;: &quot;SQL Server Mapping&quot;,       &quot;domain&quot;: {         &quot;name&quot;: &quot;ZZ_Source to Target Mappings&quot;,         &quot;community&quot;: {           &quot;name&quot;: &quot;Intermediate APIs&quot;         }       }     },     &quot;type&quot;: {       &quot;name&quot;: &quot;Mapping Specification&quot;     }   },   {     &quot;resourceType&quot;: &quot;Complex Relation&quot;,     &quot;identifier&quot;: {       &quot;relations&quot;: {         &quot;00000000-0000-0000-0000-000000007088:TARGET&quot;: [           {             &quot;name&quot;: &quot;SQL Server Mapping1Name&quot;,             &quot;domain&quot;: {               &quot;name&quot;: &quot;ZZ_Source to Target Mappings1Name&quot;,               &quot;community&quot;: {                 &quot;name&quot;: &quot;Intermediate APIs1Name&quot;               }             }           }         ],         &quot;00000000-0000-0000-0000-000000007089:TARGET&quot;: [           {             &quot;name&quot;: &quot;Client ID&quot;,             &quot;domain&quot;: {               &quot;name&quot;: &quot;ZZ_CRM&quot;,               &quot;community&quot;: {                 &quot;name&quot;: &quot;Intermediate APIs&quot;               }             }           }         ],         &quot;00000000-0000-0000-0000-000000007090:TARGET&quot;: [           {             &quot;name&quot;: &quot;SQL Server Mapping&quot;,             &quot;domain&quot;: {               &quot;name&quot;: &quot;ZZ_Source to Target Mappings&quot;,               &quot;community&quot;: {                 &quot;name&quot;: &quot;Intermediate APIs&quot;               }             }           }         ]       }     },     &quot;complexRelationType&quot;: {       &quot;name&quot;: &quot;Field Mapping&quot;     },     &quot;attributes&quot;: {       &quot;Transformation Logic&quot;: [         {           &quot;value&quot;: &quot;`clientsWithType` AS select `client`.`client_id` AS `id`, concat( concat( `client`.`name`, ' ' ), `client`.`surname` ) AS `fullname`, `client_type`.`value` AS `client_type`, `client`.`email_address` AS `email_address` from ( `client` join `client_type` on (( `client`.`client_type` = `client_type`.`code` )));&quot;         }       ]     }   } ] </code></pre>"	2022-03-15 15:27:35.093 UTC	71485052	<p>You could use <code>fs</code> module that's included in nodejs</p> <pre><code>fs.readFileSync(file_path); </code></pre>			2022-03-15 15:45:03.073 UTC
71499290	javascript|python|html|flask	Sending a Javascript Variable to Flask Python Code without Form-Event	"<p>I have a problem with Flask and Javascript. I want to use a website to control a minirobot with joysticks. I have found nippleJS (<a href=""https://github.com/yoannmoinet/nipplejs"" rel=""nofollow noreferrer"">https://github.com/yoannmoinet/nipplejs</a>) and included it to my website. I can print the joystick values to the web console, but i need those values at my pythonscript for the robot control. Can anybody help me please? Here is my code: HTML:</p> <pre><code>&lt;script src=&quot;{{url_for('static', filename='nippleJS.js')}}&quot;&gt;&lt;/script&gt;     &lt;script&gt;         var joystickL = nipplejs.create({             zone: document.getElementById('left'),             mode: 'static',             position: { left: '20%', top: '50%' },             color: 'green',             size: 200                      });                   var joystickR = nipplejs.create({             zone: document.getElementById('right'),             mode: 'static',             position: { left: '80%', top: '50%' },             color: 'red',             size: 200,             lockY: 1         });          joystickL.on('move', function (evt, nipple) {             var dis = nipple.distance;             var angle = nipple.angle.radian;             var pos = nipple.position;             console.log(dis);             console.log(angle); &lt;/script&gt; </code></pre> <p>And here is my Flask Code:</p> <pre><code>from flask import Flask, render_template, request, redirect, url_for, jsonify  app = Flask(__name__)  @app.route(&quot;/&quot;, methods=['GET', 'POST']) def home():  if request.method == 'POST':          if request.form['btn'] == 'Demo Programme':         return redirect(url_for('demo'))      elif request.form['btn'] == 'Manuelle Steuerung':         return redirect(url_for('steuerung'))      elif request.form['btn'] == 'Erweiterte Optionen':         return redirect(url_for('optionen'))    return render_template('home.html') </code></pre>"	2022-03-16 14:55:46.227 UTC	71499405	"<p>Theoretically you could use the <a href=""https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API"" rel=""nofollow noreferrer""><code>fetch()</code></a> API to send a request to your server which has a JSON body holding the values.</p> <p>Your <code>on(&quot;move&quot;)</code> could then look something like this.</p> <pre class=""lang-js prettyprint-override""><code>joystickL.on('move', function (evt, nipple) {     const data = {         &quot;distance&quot;: nipple.distance,         &quot;radian&quot;: nipple.angle.radian,         &quot;position&quot;: nipple.position,     }     try {         // call to your server with the correct host and username         const response = await fetch(&quot;localhost:5000/your-endpoint&quot;, {             method: &quot;POST&quot;,             data: JSON.parse(data)         })         if(!response.ok){             // your error handling here (if necessary)         }     } catch (error) {         console.log(&quot;Something went wrong&quot;)     } } </code></pre> <p>Depending on the frequency you need to send data e.g. you want more or less realtime data it would be better to use <a href=""https://developer.mozilla.org/en-US/docs/Web/API/WebSockets_API"" rel=""nofollow noreferrer"">WebSockets</a>. You might also wanna have a look at <a href=""https://socket.io/"" rel=""nofollow noreferrer"">socket.io</a>. I believe there also is a <code>socket.io</code> package specific for Flask as you need to adjust frontend and backend if you want to use WebSockets.</p>"			2022-03-16 15:02:12.737 UTC
71510457	javascript|ibm-cloud|ibm-watson|watson-assistant|watson-discovery	How to integrate IBM Watson Assistant services in Pure JavaScript local development Python backend	<p>I am going to use the IBM Watson assistant as my model to answer my questions. at the moment I created a voice recognition part using Javascript and I want to pass that identified values into IBM Watson's API using javascript.</p> <p>I didn't find any related resources at the moment but if someone suggests me a way to do that it will be really helpful for me.</p> <p>Flow: User talks -----&gt;&gt; Convert that speech into text Now I have the text -----&gt;&gt; Pass it into IBM APIs to get the response</p>	2022-03-17 10:06:26.403 UTC	71511042	"<p>Sorry, a bit confused by your question. “Pure JavaScript… Python back end”</p> <p>But here are the fundamentals. I recommend doing the Watson API calls from a lightweight HTTP Server (Python Flask or JavaScript Express) you create an API POST endpoint and pass in the text from your UI/client and then from within the server side code you make calls to the Watson API with your API Key, and then pass the Watson API response back up to the caller. Similar to how in the Watson examples they show curl being used; you would fetch these “curl” API calls from your running HTTP server (again JavaScript Express or Python Flask). Your running HTTP Server becomes the Watson Assistant “client application” as mentioned in the documentation.</p> <p><a href=""https://cloud.ibm.com/apidocs/assistant-v2"" rel=""nofollow noreferrer"">https://cloud.ibm.com/apidocs/assistant-v2</a></p> <p>Side note, my experience has been with using the JavaScript Watson Development SDK and Express and it was a really good experience. I personally would recommend that over Python in this scenario.</p>"			2022-03-17 10:49:34.643 UTC
71528085	javascript|python|html|selenium	How to auto click on <a> tag using selenium (python) which calls a javascript function?	"<p>How do I access and click on a button which hyperlinks to a javascript function?</p> <p>html element:</p> <pre><code>&lt;a href=&quot;javascript:Nav('-index=')&quot; id=&quot;ctl04_ctl25_ctl00_lnk2NextPg&quot; class=&quot;twPagerBtn right&quot; role=&quot;button&quot; onclick=&quot;mySpud.container.scrollIntoView();&quot; title=&quot;Next Page&quot; aria-label=&quot;Next Page&quot;&gt;►&lt;/a&gt; </code></pre> <p>My current code:</p> <pre><code>next_button='//*[@id=&quot;ctl04_ctl06_ctl00_lnk2NextPg&quot;]' try:     element=WebDriverWait(driver,15).until(         EC.presence_of_element_located((By.XPATH,next_button))              )      element.click() except:     driver.quit()  </code></pre> <p>Selenium is unable to find the element and I've also tried using the find_element() function using various methods (by id etc) to no avail.</p>"	2022-03-18 13:52:36.163 UTC	71528394	"<p>The locator <code>//*[@id=&quot;ctl04_ctl06_ctl00_lnk2NextPg&quot;]</code> doesn't seem to be static.</p> <p>Try this:</p> <pre><code>WebDriverWait(driver, 10).until(EC.element_to_be_clickable((By.XPATH, &quot;//*[@aria-label='Next Page']&quot;))).click() </code></pre> <p>If this doesn't work, then you can try this:</p> <pre><code>element = WebDriverWait(driver, 10).until(EC.element_to_be_clickable((By.XPATH, &quot;//a[@aria-label='Next Page']&quot;))) driver.execute_script(&quot;arguments[0].click();&quot;, element) </code></pre> <p>Alternate locator:</p> <p>You can use <code>//*[@title= 'Next Page']</code> instead of <code>@aria-label</code> locator Alternate locator:</p>"			2022-03-18 14:15:02.91 UTC
71528085	javascript|python|html|selenium	How to auto click on <a> tag using selenium (python) which calls a javascript function?	"<p>How do I access and click on a button which hyperlinks to a javascript function?</p> <p>html element:</p> <pre><code>&lt;a href=&quot;javascript:Nav('-index=')&quot; id=&quot;ctl04_ctl25_ctl00_lnk2NextPg&quot; class=&quot;twPagerBtn right&quot; role=&quot;button&quot; onclick=&quot;mySpud.container.scrollIntoView();&quot; title=&quot;Next Page&quot; aria-label=&quot;Next Page&quot;&gt;►&lt;/a&gt; </code></pre> <p>My current code:</p> <pre><code>next_button='//*[@id=&quot;ctl04_ctl06_ctl00_lnk2NextPg&quot;]' try:     element=WebDriverWait(driver,15).until(         EC.presence_of_element_located((By.XPATH,next_button))              )      element.click() except:     driver.quit()  </code></pre> <p>Selenium is unable to find the element and I've also tried using the find_element() function using various methods (by id etc) to no avail.</p>"	2022-03-18 13:52:36.163 UTC	71533873	"<p>You have to take care of a couple of things here:</p> <ul> <li><p>The initial part of the value of the <code>id</code> attribute is dynamic as in <em><code>ctl04_ctl25_ctl00_lnk2NextPg</code></em> and it would change everytime you access the page afresh. So you have to construct a <em><strong>dynamic</strong></em> <a href=""https://stackoverflow.com/questions/48369043/official-locator-strategies-for-the-webdriver"">locator strategy</a></p> </li> <li><p>Moving ahead as you are invoking <code>click()</code>, instead of <em><code>presence_of_element_located()</code></em> you have to induce <a href=""https://stackoverflow.com/a/59130336/7429447"">WebDriverWait</a> for the <a href=""https://stackoverflow.com/a/65141861/7429447""><em>element_to_be_clickable()</em></a> and you can use either of the following <em>locator strategies</em>:</p> </li> <li><p>Using <code>CSS_SELECTOR</code>:</p> <pre><code>WebDriverWait(driver, 20).until(EC.element_to_be_clickable((By.CSS_SELECTOR, &quot;a[id$='NextPg'][title='Next Page'][aria-label='Next Page']&quot;))).click() </code></pre> </li> <li><p>Using <code>XPATH</code>:</p> <pre><code>WebDriverWait(driver, 20).until(EC.element_to_be_clickable((By.XPATH, &quot;//a[contains(@id, 'NextPg')][@title='Next Page' and @aria-label='Next Page']&quot;))).click() </code></pre> </li> </ul>"			2022-03-18 22:38:44.993 UTC
71528085	javascript|python|html|selenium	How to auto click on <a> tag using selenium (python) which calls a javascript function?	"<p>How do I access and click on a button which hyperlinks to a javascript function?</p> <p>html element:</p> <pre><code>&lt;a href=&quot;javascript:Nav('-index=')&quot; id=&quot;ctl04_ctl25_ctl00_lnk2NextPg&quot; class=&quot;twPagerBtn right&quot; role=&quot;button&quot; onclick=&quot;mySpud.container.scrollIntoView();&quot; title=&quot;Next Page&quot; aria-label=&quot;Next Page&quot;&gt;►&lt;/a&gt; </code></pre> <p>My current code:</p> <pre><code>next_button='//*[@id=&quot;ctl04_ctl06_ctl00_lnk2NextPg&quot;]' try:     element=WebDriverWait(driver,15).until(         EC.presence_of_element_located((By.XPATH,next_button))              )      element.click() except:     driver.quit()  </code></pre> <p>Selenium is unable to find the element and I've also tried using the find_element() function using various methods (by id etc) to no avail.</p>"	2022-03-18 13:52:36.163 UTC	71535052	<p>Just call the function directly:</p> <pre><code>driver.execute_script(&quot;Nav('-index=')&quot;) </code></pre>			2022-03-19 03:07:52.043 UTC
71539862	python|selenium|browser	Can Selenium (Python) detect when the JavaScript on a page hangs?	"<p>When JavaScript code has been running without interruption for too long, browsers will bring up a modal dialog to ask the player if they want to halt the JavaScript execution. Is there a way for Selenium (specifically, I'm using the Python bindings) to detect when this happens?</p> <p>My use case is that I'd like to accept arbitrary JavaScript to run (yes, I am aware this can be a security issue) and I'd like to detect if an infinite loop has been introduced by the code.</p>"	2022-03-19 16:15:16.02 UTC	71543095	"<p>Theoretically this should check if the window becomes idle within 5 seconds:</p> <pre><code>driver.execute_async_script(&quot;&quot;&quot;   let [cb] = arguments   Promise.race([     new Promise((resolve) =&gt; window.requestIdleCallback(() =&gt; resolve(&quot;ok&quot;))),     new Promise((resolve) =&gt; setTimeout(() =&gt; resolve(&quot;not ok&quot;), 5000))   ]).then(cb) &quot;&quot;&quot;) </code></pre>"			2022-03-20 00:16:50.897 UTC
71540240	python|jupyter-notebook|ipython|ipython-magic|jupyter-extensions	Why does `IPython.display.Javascript(...)` work to run a Javascript command in a Jupyter cell but not in an IPython magic?	"<p>I'm trying to write a <a href=""https://github.com/bskinn/jupyter-tempvars"" rel=""nofollow noreferrer"">Jupyter nbextension</a> where the user can configure the notebook-wide extension behavior using IPython magics. I'm planning on siting the configuration data on the JS side, under an application-specific key in <code>Jupyter.notebook.metadata</code>, <code>&quot;tempvars&quot;</code>. In order to do this, I need the magics to be able to change the appropriate values within that <code>....metadata[&quot;tempvars&quot;]</code>.</p> <p><em><strong>If I load a Jupyter notebook</strong></em> and make metadata changes using <code>IPython.display.Javascript</code> directly from a notebook cell, they apply successfully.</p> <p>JS console:</p> <pre class=""lang-js prettyprint-override""><code>&gt;&gt; Jupyter.notebook.metadata[&quot;tempvars&quot;][&quot;universal&quot;] = false &lt;- false </code></pre> <p>Jupyter cell:</p> <pre class=""lang-py prettyprint-override""><code>[ ]: from IPython.display import Javascript [ ]: Javascript(&quot;Jupyter.notebook.metadata['tempvars']['universal'] = true&quot;)  </code></pre> <p>JS console:</p> <pre class=""lang-js prettyprint-override""><code>&gt;&gt; Jupyter.notebook.metadata[&quot;tempvars&quot;][&quot;universal&quot;] &lt;- true  // CHANGED AS EXPECTED </code></pre> <p><em><strong>However</strong></em>, if I try to do the same thing from inside a magic, it does <em>not</em> work:</p> <p>From my magics definition module, within the broader <code>jupyter_tempvars</code> package (please don't mind the very WIP implementation):</p> <pre class=""lang-py prettyprint-override""><code>from IPython.core.magic import register_line_magic  def load_ipython_extension(ipython):     @register_line_magic     def tempvars(line):         subcommand, arg = line.strip().split(&quot; &quot;)         if subcommand == &quot;universal&quot;:             Javascript(f&quot;Jupyter.notebook.metadata['tempvars']['universal'] = {arg.lower()};&quot;) </code></pre> <p>From a freshly loaded notebook, starting in the JS console:</p> <pre class=""lang-js prettyprint-override""><code>&gt;&gt; Jupyter.notebook.metadata[&quot;tempvars&quot;][&quot;universal&quot;] = false &lt;- false </code></pre> <p>Jupyter cells:</p> <pre class=""lang-py prettyprint-override""><code>[ ]: %load_ext jupyter_tempvars </code></pre> <pre class=""lang-py prettyprint-override""><code>[ ]: %tempvars universal true </code></pre> <p>JS console:</p> <pre><code>&gt;&gt; Jupyter.notebook.metadata[&quot;tempvars&quot;][&quot;universal&quot;] &lt;- false  // DID NOT CHANGE </code></pre> <p><strong>What is different about the IPython magic context that is making this <code>Javascript</code> call fail?</strong></p>"	2022-03-19 17:04:24.903 UTC	71540241	"<p>According to the IPython docs for the <a href=""https://ipython.readthedocs.io/en/stable/api/generated/IPython.display.html#IPython.display.Javascript"" rel=""nofollow noreferrer""><code>Javascript</code> object</a>:</p> <blockquote> <p>Create a Javascript display object given raw data.</p> <p>When this object is returned by an expression or passed to the display function, it will result in the data being displayed in the frontend.</p> </blockquote> <p>As it turns out, the rendering of the JS code upon simply being returned by an expression is <em><strong>not</strong></em> a universal behavior. In particular, inside an IPython magic, you <em>must</em> pass the <code>Javascript</code> instance to <code>IPython.display.display()</code> in order for it to be rendered.</p> <p>This is what IPython does in its own built-in (and deprecation-pending) <a href=""https://github.com/ipython/ipython/blob/96f8b20fb716570b869d05740e249b4fabef8e00/IPython/core/magics/display.py#L47-L56"" rel=""nofollow noreferrer""><code>%javascript</code> magic</a>.</p>"			2022-03-19 17:04:24.903 UTC
71553019	javascript|python|django|dictionary	How to access Python dictionary in Javascript Script in Django	"<p>I am working in Django, where I am sending a Python Dictionary into an HTML file.</p> <p>In that HTML File, I want to access the Python dictionary and append the keys and values of dictionary into the Javascript arrays. I am able to access Python dictionary in HTML, but can't do the same in Javascript.</p> <p>This is how I am able to access the values of Dictionary in HTML,</p> <pre><code>{% for key, image in predictedLabel.items %}       &lt;tr&gt;         &lt;th scope=&quot;row&quot;&gt;{{ key }}&lt;/th&gt;         &lt;td&gt;{{ image }}&lt;/td&gt;       &lt;/tr&gt;   {%endfor%} </code></pre> <p>The Javascript script that I have is of Pie Chart, which is as given below,</p> <pre><code>      &lt;script&gt;         var xArray = [];         var yArray = [];                   var xArray = [&quot;Italy&quot;, &quot;France&quot;, &quot;Spain&quot;, &quot;USA&quot;, &quot;Argentina&quot;];         var yArray = [55, 49, 44, 24, 15];          var layout = { title: &quot;Distribution of Labels&quot; };          var data = [{ labels: xArray, values: yArray, hole: .5, type: &quot;pie&quot; }];          Plotly.newPlot(&quot;myPlot&quot;, data, layout);       &lt;/script&gt; </code></pre> <p>I want to put the Python Dictionary Key into the xArray and the Values of Dictionary into the yArray. For that, I need to access the Python Dictionary in the Javascript script, but I do not know how to access the Python values in the Javascript script. Can anyone help me in this regard?</p>"	2022-03-21 05:01:43.35 UTC	71553084	"<p>You can pass the dictionary in JSON form to the client. This is commonly done like this:</p> <pre class=""lang-py prettyprint-override""><code>import json  # ... send to client json = json.dumps(dict_name) </code></pre> <p>Then in your template:</p> <pre class=""lang-html prettyprint-override""><code>&lt;script type=&quot;application/json&quot;&gt;{{ json }}&lt;/script&gt; </code></pre> <p>Then in your JavaScript you can simply do:</p> <pre class=""lang-js prettyprint-override""><code>const data = JSON.parse(document.querySelector('script[type=&quot;application/json&quot;]')); // do something with 'data' </code></pre>"			2022-03-21 05:14:36.997 UTC
71577205	javascript|python|html	Add Javascript into Python created html	"<p>Hi i have a python script that creates a single html file and i cannot figure out how to add javascript into it</p> <pre><code>import pathlib import os   html = &quot;&quot;   for file in pathlib.Path(&quot;.&quot;).iterdir():     if file.is_file():         if str(file).endswith(&quot;.png&quot;):             html += f&quot;&lt;center&gt;&lt;img src='{file}'/ height=100%&gt;&lt;/center&gt;&lt;br&gt;&quot;                with open(&quot;index2.html&quot;, &quot;w&quot;) as outputfile:     outputfile.write(html)   os.startfile(&quot;index2.html&quot;) </code></pre> <p>So far ive tried</p> <pre><code>import pathlib import os   html = &quot;&quot;   for file in pathlib.Path(&quot;.&quot;).iterdir():     if file.is_file():         if str(file).endswith(&quot;.png&quot;):             html += f&quot;&lt;center&gt;&lt;img src='{file}'/ height=50%&gt;&lt;/center&gt;&lt;br&gt;&lt;script&gt;var imagesrc = document.getElementById(&quot;image.png&quot;).src;&quot;    with open(&quot;index2.html&quot;, &quot;w&quot;) as outputfile:     outputfile.write(html)   os.startfile(&quot;index2.html&quot;) </code></pre> <p>but that doesnt seem to work at all</p> <p>Any help would be appreciated thanks</p>"	2022-03-22 18:27:37.033 UTC	71577354	"<p>That probably didn't worked because your &quot; (quotation mark) is interrupting your string at &quot;image.png&quot;, you could use a single apostrophe, or just escape it using backslash.</p> <pre><code>html += f&quot;&lt;center&gt;&lt;img src='{file}'/ height=50%&gt;&lt;/center&gt;&lt;br&gt;&lt;script&gt;var imagesrc = document.getElementById(\&quot;image.png\&quot;).src;&quot; </code></pre>"			2022-03-22 18:41:21.94 UTC
71577205	javascript|python|html	Add Javascript into Python created html	"<p>Hi i have a python script that creates a single html file and i cannot figure out how to add javascript into it</p> <pre><code>import pathlib import os   html = &quot;&quot;   for file in pathlib.Path(&quot;.&quot;).iterdir():     if file.is_file():         if str(file).endswith(&quot;.png&quot;):             html += f&quot;&lt;center&gt;&lt;img src='{file}'/ height=100%&gt;&lt;/center&gt;&lt;br&gt;&quot;                with open(&quot;index2.html&quot;, &quot;w&quot;) as outputfile:     outputfile.write(html)   os.startfile(&quot;index2.html&quot;) </code></pre> <p>So far ive tried</p> <pre><code>import pathlib import os   html = &quot;&quot;   for file in pathlib.Path(&quot;.&quot;).iterdir():     if file.is_file():         if str(file).endswith(&quot;.png&quot;):             html += f&quot;&lt;center&gt;&lt;img src='{file}'/ height=50%&gt;&lt;/center&gt;&lt;br&gt;&lt;script&gt;var imagesrc = document.getElementById(&quot;image.png&quot;).src;&quot;    with open(&quot;index2.html&quot;, &quot;w&quot;) as outputfile:     outputfile.write(html)   os.startfile(&quot;index2.html&quot;) </code></pre> <p>but that doesnt seem to work at all</p> <p>Any help would be appreciated thanks</p>"	2022-03-22 18:27:37.033 UTC	71577276	"<p>Lets say you have a <code>script.js</code> file in your directory:</p> <pre><code># File.py html += &quot;&lt;script type=\&quot;text/javascript\&quot; src=\&quot;script.js\&quot;&gt;&lt;/script&gt;&quot; </code></pre> <hr /> <p>If you want it directly in the <code>.html</code> file, you can do this:</p> <pre><code>html += f&quot;&lt;script type=\&quot;text/javascript\&quot;&gt;{javascript_content}&lt;/script&gt;&quot; </code></pre> <p> </p>"			2022-03-22 18:33:40.38 UTC
71604952	javascript|python|python-requests	JavaScript in requests package python	<p>I want to get text from a site using Python. But the site uses JavaScript and the requests package to receive only JavaScript code. Is there a way to get text without using Selenium?</p> <pre><code>import requests as r  a=r.get('https://aparat.com/').text </code></pre>	2022-03-24 15:09:25.677 UTC	71605038	"<p>If the site loads content using javascript then the javascript has to be run in order to get the content. I ran into this issue a while back when I did some web scraping, and ended up using Selenium. Yes its slower than BeautifulSoup but it's the easiest solution.</p> <p>If you know how the server works you could send a request and it should return with content of some kind (whether that be html, json, etc)</p> <p>Edit: Load the developer tools, go to network tab and refresh the page. Look for an XHR request and the URL it uses. You may be able to use this data for your needs.</p> <p>For example I found these URLs:</p> <p><a href=""https://www.aparat.com/api/fa/v1/etc/page/config/mode/full"" rel=""nofollow noreferrer"">https://www.aparat.com/api/fa/v1/etc/page/config/mode/full</a> <a href=""https://www.aparat.com/api/fa/v1/video/video/list/tagid/1?next=1"" rel=""nofollow noreferrer"">https://www.aparat.com/api/fa/v1/video/video/list/tagid/1?next=1</a></p> <p>If you navigate to these in your browser you will notice JSON content, you might be able to use this. I think some of the text is encoded in Unicode e.g \u062e\u0644\u0627\u0635\u0647 \u0628\u0627\u0632\u06cc -&gt; خلاصه بازی</p> <p>I don't know the specific python implementation you might use. Look for libs that support making http requests and recieving data. That way you can avoid selenium. But you must know the URL's beforehand. Like shown above.</p> <p>For example this is what I would do:</p> <ol> <li>Make a http request to the URL you find in developer tools</li> <li>With JSON content, use a JSON parser to get a table/array/dictionary natively. You can then traverse this in the native programming language.</li> <li>Use a unicode decoder to get the text in normal text format, there might be a lib to do this, but for example on <a href=""https://www.online-toolz.com/tools/text-unicode-entities-convertor.php"" rel=""nofollow noreferrer"">this website</a> using the &quot;Decode/Unescape Unicode Entities&quot; I was able to get the text.</li> </ol> <p>I hope this helps.</p> <p>Sample code:</p> <pre><code>import requests;  req = requests.get('https://www.aparat.com/api/fa/v1/video/video/show/videohash/IueKs?pr=1&amp;mf=1&amp;referer=direct') res = req.json()  #do stuff with res print(res) </code></pre>"			2022-03-24 15:15:52.67 UTC
71627613	javascript|python|base64|byte	"Base64 encoding bytes in python, decoding in javascript doesn't return the original bytes"	"<p>I base64 encoded bytes in python:</p> <pre class=""lang-py prettyprint-override""><code>import base64 base64.b64encode(b&quot;\xac\xd1%=\xdd\xe7\x18\x8f\xbcDrz\xa3\x8a\xac\x8dT\x88\t\xcf7\no\xfb\xa2\x97CI\x85\xe4:\xf2/\xd8a\xb5\xd2\x82\xa8\xce\x02Df\xd0?\x06re&gt;\xb0\x94];~\xff\x00cV\xb5\xe3\xe8\xd1\xa0n&quot;).decode(&quot;utf-8&quot;) # &quot;rNElPd3nGI+8RHJ6o4qsjVSICc83Cm/7opdDSYXkOvIv2GG10oKozgJEZtA/BnJlPrCUXTt+/wBjVrXj6NGgbg==&quot; </code></pre> <hr /> <p>But when I am trying to decode it back to bytes in javascript:</p> <pre class=""lang-js prettyprint-override""><code>atob(&quot;rNElPd3nGI+8RHJ6o4qsjVSICc83Cm/7opdDSYXkOvIv2GG10oKozgJEZtA/BnJlPrCUXTt+/wBjVrXj6NGgbg==&quot;) // &quot;¬Ñ%=Ýç\x18\x8F¼Drz£\x8A¬\x8DT\x88\tÏ7\noû¢\x97CI\x85ä:ò/ØaµÒ\x82¨Î\x02DfÐ?\x06re&gt;°\x94];~ÿ\x00cVµãèÑ n&quot; </code></pre> <p>I don't get the original bytes. How can I decode it with javascript and get the original bytes as a string?</p>"	2022-03-26 11:22:50.527 UTC	71627788	"<p><code>atob</code> will try decoding the bytes as text, instead of encoding the bytes into something like the <code>b'...'</code> in Python.</p> <p>You asked: <code>How can I decode it with javascript and get the original bytes as a string?</code> But I believe, you should just use the bytes rather than convert it to a string.</p> <p>So I tried <a href=""https://tools.nololiyt.top/tools/39f09c93-0d5b-ca7c-cdc8-185b00aec141.html"" rel=""nofollow noreferrer"">my base-64 decoding tool</a>. I think the byte array it returns meets your requirement (as <code>ac</code> does mean <code>172</code>): <code>[172, 209, 37, 61, 221, 231, 24, 143, 188, 68, 114, 122, 163, 138, 172, 141, 84, 136, 9, 207, 55, 10, 111, 251, 162, 151, 67, 73, 133, 228, 58, 242, 47, 216, 97, 181, 210, 130, 168, 206, 2, 68, 102, 208, 63, 6, 114, 101, 62, 176, 148, 93, 59, 126, 255, 0, 99, 86, 181, 227, 232, 209, 160, 110]</code>.</p> <p>In the tool I used the package <a href=""https://www.npmjs.com/package/js-base64"" rel=""nofollow noreferrer""><code>js-base64</code></a> to decode it. But it was developed years ago, I don't know whether there are better solutions now.</p>"			2022-03-26 11:46:10.033 UTC
71651996	javascript|node.js|encryption|aes|aes-gcm	"Javascript decrypt for aes-gcm not working, but in Python it works"	"<p>I want to port a small python library to JavaScript, running in Node.JS. I get an encrypted message, the initialization vector and the key.</p> <p>In python3 these are the imports:</p> <pre><code>from cryptography.hazmat.primitives.ciphers.aead import AESGCM from binascii import unhexlify import sys import string from Cryptodome.Cipher import AES </code></pre> <p>And the decrypt works like this:</p> <pre><code>frame = unhexlify(frame) encryption_key = unhexlify(str_key) init_vector = unhexlify(str_iv) cipher = AES.new(encryption_key, AES.MODE_GCM, nonce=init_vector) decrypted_msg = cipher.decrypt(frame).hex()     </code></pre> <p>The key is a hexstring like this (example): <code>36C66639E48A8CA4D6BC8B282A793BBB</code></p> <p>IV is this (example): <code>4B464D675000000900000023</code></p> <p>Message like this: <codecode></p> <p>It results in this: <code>0f8006870e0c07e5091b01092f0f00ff88800223090c07e5091b01092f0f00ff888009060100010800ff060000328902020f00161e09060100020800ff060000000002020f00161e09060100010700ff060000000002020f00161b09060100020700ff060000000002020f00161b09060100200700ff12092102020fff162309060100340700ff12000002020fff162309060100480700ff12000002020fff1623090601001f0700ff12000002020ffe162109060100330700ff12000002020ffe162109060100470700ff12000002020ffe1621090601000d0700ff1203e802020ffd16a98558d8881285f5e85e5949158f1dbf4b91e4561312ee738fb5</code></p> <p><strong>(which is the expected outcome)</strong></p> <p>I've now tried to establish the same in Javascript using the <a href=""https://nodejs.org/api/webcrypto.html"" rel=""nofollow noreferrer"">WebCrypto API</a>. But I can't manage it to work. Here's my simple code snippet:</p> <pre><code>const ba = require('binascii'); const crypto = require('crypto').webcrypto;  const myKey = &quot;36C66639E48A8CA4D6BC8B282A793BBB&quot;; const iv = &quot;4B464D675000000900000023&quot;; const cipherText = &quot;88D5AB4F97515AAFC6B88D2F85DAA7A0E3C0C40D004535C397C9D037AB7DBDA329107615444894A1A0DD7E85F02D496CECD3FF46AF5FB3C9229CFE8F3EE4606AB2E1F409F36AAD2E50900A4396FC6C2E083F373233A69616950758BFC7D63A9E9B6E99E21B2CBC2B934772CA51FD4D69830711CAB1F8CFF25F0A329337CBA51904F0CAED88D61968743C8454BA922EB00038182C22FE316D16F2A9F544D6F75D51A4E92A1C4EF8AB19A2B7FEAA32D0726C0ED80229AE6C0F7621A4209251ACE2B2BC66FF0327A653BB686C756BE033C7A281F1D2A7E1FA31C3983E15F8FD16CC5787E6F517166814146853FF110167419A3CFDA44BE438C96F0E38BF83D9&quot;;  function importKey(rawKey) {     console.log('e_key: ', rawKey);     console.log('e_key: ', ba.unhexlify(rawKey));     return crypto.subtle.importKey(         &quot;raw&quot;, //can be &quot;jwk&quot; or &quot;raw&quot;         rawKey,          {   //this is the algorithm options             name: &quot;AES-GCM&quot;,             length: 256         },         false, //whether the key is extractable (i.e. can be used in exportKey)         [&quot;encrypt&quot;, &quot;decrypt&quot;] //can &quot;encrypt&quot;, &quot;decrypt&quot;, &quot;wrapKey&quot;, or &quot;unwrapKey&quot;     ) }   function decrypt(data, key, iv) {     console.log(data);     return crypto.subtle.decrypt(         {             name: &quot;AES-GCM&quot;,             iv: iv, //The initialization vector you used to encrypt             //additionalData: ArrayBuffer, //The addtionalData you used to encrypt (if any)             //tagLength: 0, //The tagLength you used to encrypt (if any)         },         key, //from generateKey or importKey above         new ArrayBuffer(data) //ArrayBuffer of the data     ).then(function(decrypted){         //returns an ArrayBuffer containing the decrypted data         console.log(new Uint8Array(decrypted));     }).catch(function(err){         console.error(err);     }); }  const main = async function() {     var keys = await importKey(myKey)     var decryptedData = await decrypt(cipherText, keys, iv);     console.log(decryptedData);      };  main();  </code></pre> <p>When executed, it results in:</p> <pre><code>DOMException [OperationError]: The provided data is too small.     at asyncAesGcmCipher (node:internal/crypto/aes:202:30)     at Object.aesCipher (node:internal/crypto/aes:229:28)     at cipherOrWrap (node:internal/crypto/webcrypto:665:10)     at SubtleCrypto.decrypt (node:internal/crypto/webcrypto:680:10)     at decrypt (/Users/fritz/dev/test/simple.js:26:23) </code></pre> <p>I tried to keep things 1:1 as in python, but can't decrypt this string. I tried for all entities (myKey, iv and cipherText) with and with unhexlify, etc. No luck.</p> <p>Is this JavaScript AES-GCM not compatible with the python library? Thanks a lot,</p> <p>Cheers Fritz</p>"	2022-03-28 18:24:15.99 UTC	71661092	"<p>Found the answer here: <a href=""https://stackoverflow.com/a/49244840/13548905"">https://stackoverflow.com/a/49244840/13548905</a> the missing part was the authentication tag, which in fact is IV + &quot;00000002&quot;. When added, decrypt worked.</p>"			2022-03-29 11:20:21.973 UTC
71654387	javascript|python|jquery|python-3.x|flask	Python flask return javascript variable and redirect page	"<p>I'm using a login script to enable additional authentication on my web application. The authentication script is writing in JavaScript and embedded in python with flask.</p> <p>The login script, authenticates the user and, on success outputs and ID.</p> <p>I want to use the ID that is returned to the Javascript function in my python backend. Additionally, I want to redirect the user to the root page if the authentication was successful.</p> <p>I searched this forum and googled on how to do this with javascript or jQuery. So far I did manage to send the ID to the backend with a POST request. Don't know if this is best practice, feels kinda of hacky.</p> <p>Also when I redirect the request, I see the GET request in my python console but the page isn't redirecting in my browser. I think this is because of Javascript or jQuery.</p> <p><strong>main.py</strong></p> <pre class=""lang-py prettyprint-override""><code>from flask import Flask, request, render_template, redirect, url_for  app = Flask(__name__, template_folder='/templates', static_folder='/static')  @app.route(&quot;/login&quot;, methods=['GET', 'POST']) def login():     print(request.data)     if request.method == 'POST':         response = request.get_json()         print(response['userwid'])         return redirect('/')     else:         return render_template('login.html')  @app.route(&quot;/&quot;, methods=['GET', 'POST']) def loggedin():     print('User is logged in')     return render_template('index.html')  if __name__ == '__main__':     app.run(host='0.0.0.0', port=5000, debug = True)  </code></pre> <p><strong>login.html</strong></p> <pre class=""lang-html prettyprint-override""><code>&lt;!-- login.html --&gt;  &lt;!DOCTYPE html&gt; &lt;html&gt;   &lt;head&gt;     &lt;title&gt;Login&lt;/title&gt;     &lt;script src=&quot;https://cdn.jsdelivr.net/npm/web3@latest/dist/web3.min.js&quot;&gt;&lt;/script&gt;     &lt;script src=&quot;https://unpkg.com/moralis/dist/moralis.js&quot;&gt;&lt;/script&gt;     &lt;script src=&quot;https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js&quot;&gt;&lt;/script&gt;   &lt;/head&gt;    &lt;body&gt;           &lt;button id=&quot;btn-login&quot;&gt;Login&lt;/button&gt;     &lt;button id=&quot;btn-logout&quot;&gt;Logout&lt;/button&gt;     &lt;script type=&quot;text/javascript&quot; src=&quot;/static/main.js&quot;&gt;&lt;/script&gt;   &lt;/body&gt; &lt;/html&gt; </code></pre> <p><strong>main.js</strong></p> <pre class=""lang-js prettyprint-override""><code>// main.js  const serverUrl = &quot;REPLACED-THIS-PART&quot;; const appId = &quot;REPLACED-THIS-PART&quot;; Moralis.start({ serverUrl, appId });  /** Add from here down */ async function login() {   let user = Moralis.User.current();   if (!user) {    try {       user = await Moralis.authenticate({ signingMessage: &quot;Authenticating&quot; })       console.log(user)       console.log(user.get('useracc'))       userwid= {'useracc': user.get('useracc')}        $.ajax({         type: &quot;POST&quot;,         url: &quot;/login&quot;,         data: JSON.stringify(userwid),         contentType: &quot;application/json&quot;,         dataType: 'json',       });    } catch(error) {      console.log(error)    }   } }   async function logOut() {   await Moralis.User.logOut();   console.log(&quot;logged out&quot;); }  document.getElementById(&quot;btn-login&quot;).onclick = login; document.getElementById(&quot;btn-logout&quot;).onclick = logOut; </code></pre>"	2022-03-28 22:28:31.613 UTC	71659745	"<p>Technically, you could, after successful login, just navigate to a route like /login/userid?id=12345 with 12345 being the user id.</p> <p>On your flask backend, you take the id with <code>id = request.args.to_dict().get(&quot;id&quot;)</code> and return a redirect with <code>return redirect(&quot;/&quot;)</code>. (Info about redirecting with flask: <a href=""https://pythonbasics.org/flask-redirect-and-errors/"" rel=""nofollow noreferrer"">https://pythonbasics.org/flask-redirect-and-errors/</a>)</p> <p>I don't know, wether that's best practise, but that's what i'd do.</p>"			2022-03-29 09:42:44.787 UTC
71654682	javascript|python|dynamic-programming	Dynamic programming code works in javascript but not in python	"<p>I am learning Dynamic Programming from freecodecamp, the instructor is using JavaScript and i know python so i am converting the logic in python.</p> <p>Long story short, this problem's JavaScript implementation is working fine, but my python implementation is giving strange output.</p> <p>I have matched the syntax many times and verified the logic, i can't point out where i am going wrong. Any help would be appreciated.</p> <p>Problem Statement: Create a program to find the smallest sub-array of integers whose sum is equal to <code>targetsum</code>.</p> <p>JavaScript Implementation:</p> <pre><code>const bestsum = (targetsum, numbers, memo={}) =&gt; {     if (targetsum in memo) return memo[targetsum];     if (targetsum === 0) return [];     if (targetsum &lt;0) return null;          let shortestcomb = null;          for (let num of numbers){         const remainder = targetsum - num;         const remaindercomb = bestsum(remainder, numbers, memo);         if (remaindercomb !== null){             const combination = [...remaindercomb, num];             if (shortestcomb===null || combination.length &lt; shortestcomb.length){                 shortestcomb = combination;             }         }     }     memo[targetsum] = shortestcomb;     return shortestcomb; } console.log(bestsum(7, [2, 4, 3])); console.log(bestsum(100, [1, 2, 5, 25])); </code></pre> <p>Output:</p> <pre><code>[ 3, 4 ] [ 10, 10 ] </code></pre> <p>My Python Implementation:</p> <pre><code>def bestsum(targetsum, arr, memo=None):     if memo is None:         memo={}     if targetsum in memo: return memo[targetsum]     if targetsum==0: return []     elif targetsum &lt; 0: return None     shortest = None      for i in arr:         remainder = targetsum-i         seq = bestsum(remainder, arr, memo)         if seq!=None:             seq.append(i)             if (shortest==None or len(seq)&lt;len(shortest)):                 shortest = seq     memo[targetsum] = shortest     return shortest  print(bestsum(7, [2, 4, 3])) print(bestsum(20, [5, 10])) </code></pre> <p>Output:</p> <pre><code>[4, 3] [10, 5, 5, 10] </code></pre> <p>The obvious answer for the second case is <code>[10, 10]</code> as that would sum to 20 with the least number of elements, also for the first case the JavaScript output is <code>[3, 4]</code> whereas python output is <code>[4, 3]</code>, isn't it strange?</p> <p>EDIT: Someone marked this question as duplicate, i followed that guide and used a placeholder in place of the mutable default argument, but the output is still the same, what is wrong now?</p> <p><a href=""https://i.stack.imgur.com/rTskP.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/rTskP.png"" alt=""enter image description here"" /></a></p>"	2022-03-28 23:13:21.453 UTC	71658882	"<p>While an interactive debugger is the most general (and, often, most powerful) way of examining bugs, here a simple bit of scaffolding can reveal much. By adding a <code>print(f&quot;target = {targetsum}; memo = {memo}&quot;)</code> statement just before the end of <code>bestsum</code>, we get:</p> <blockquote><pre> target = 5; memo = {5: [5]} target = 10; memo = {5: [5, 5], 10: [10]} target = 15; memo = {5: [5, 5, 10], 10: [10, 5], 15: [10, 5]} target = 20; memo = {5: [5, 5, 10], 10: [10, 5, 5, 10], 15: [10, 5, 5, 10], 20: [10, 5, 5, 10]} </pre></blockquote> <p>Note how the entries for each target sum keep changing. This shouldn't happen, based on the algorithm. Looking at <code>bestsum</code>, the entries of <code>memo</code> come from <code>seq</code>. Looking for lines that alter <code>seq</code>, we find <code>seq.append(i)</code>. This mutates the list, which is why the entries of <code>memo</code> keep changing, and why the final result is incorrect. The JavaScript version of <code>bestsum</code> creates a new list for each iteration of the loop body, which is why it doesn't suffer this bug.</p> <p>Note you could translate the JavaScript directly and use the spread operator, or you could list concatenation: <code>seq = seq + [i]</code>.</p> <p>One approach that would have prevented this bug from arising would be to use an immutable type instead of a list. In Python, that would be <code>tuple</code>. The one wrinkle is than if using tuple concatenation, a single-element tuple must have a comma trailing the element: <code>seq = seq + (i,)</code>.</p>"			2022-03-29 08:34:29.02 UTC
71654682	javascript|python|dynamic-programming	Dynamic programming code works in javascript but not in python	"<p>I am learning Dynamic Programming from freecodecamp, the instructor is using JavaScript and i know python so i am converting the logic in python.</p> <p>Long story short, this problem's JavaScript implementation is working fine, but my python implementation is giving strange output.</p> <p>I have matched the syntax many times and verified the logic, i can't point out where i am going wrong. Any help would be appreciated.</p> <p>Problem Statement: Create a program to find the smallest sub-array of integers whose sum is equal to <code>targetsum</code>.</p> <p>JavaScript Implementation:</p> <pre><code>const bestsum = (targetsum, numbers, memo={}) =&gt; {     if (targetsum in memo) return memo[targetsum];     if (targetsum === 0) return [];     if (targetsum &lt;0) return null;          let shortestcomb = null;          for (let num of numbers){         const remainder = targetsum - num;         const remaindercomb = bestsum(remainder, numbers, memo);         if (remaindercomb !== null){             const combination = [...remaindercomb, num];             if (shortestcomb===null || combination.length &lt; shortestcomb.length){                 shortestcomb = combination;             }         }     }     memo[targetsum] = shortestcomb;     return shortestcomb; } console.log(bestsum(7, [2, 4, 3])); console.log(bestsum(100, [1, 2, 5, 25])); </code></pre> <p>Output:</p> <pre><code>[ 3, 4 ] [ 10, 10 ] </code></pre> <p>My Python Implementation:</p> <pre><code>def bestsum(targetsum, arr, memo=None):     if memo is None:         memo={}     if targetsum in memo: return memo[targetsum]     if targetsum==0: return []     elif targetsum &lt; 0: return None     shortest = None      for i in arr:         remainder = targetsum-i         seq = bestsum(remainder, arr, memo)         if seq!=None:             seq.append(i)             if (shortest==None or len(seq)&lt;len(shortest)):                 shortest = seq     memo[targetsum] = shortest     return shortest  print(bestsum(7, [2, 4, 3])) print(bestsum(20, [5, 10])) </code></pre> <p>Output:</p> <pre><code>[4, 3] [10, 5, 5, 10] </code></pre> <p>The obvious answer for the second case is <code>[10, 10]</code> as that would sum to 20 with the least number of elements, also for the first case the JavaScript output is <code>[3, 4]</code> whereas python output is <code>[4, 3]</code>, isn't it strange?</p> <p>EDIT: Someone marked this question as duplicate, i followed that guide and used a placeholder in place of the mutable default argument, but the output is still the same, what is wrong now?</p> <p><a href=""https://i.stack.imgur.com/rTskP.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/rTskP.png"" alt=""enter image description here"" /></a></p>"	2022-03-28 23:13:21.453 UTC	71660130	"<p>Expanding on @outis's answer, the entries of <code>memo</code> are changing with each iteration, this shouldn't happen. This is happening because when you assign a list to a new variable, instead of creating a new list, python refrences the old list's address to the new one.</p> <p>This creates a problem when the list is changed, as the changes start to show in all its copies.</p> <p>Here <code>seq</code> is the master list</p> <p><code>shortest</code> is copied from <code>seq</code></p> <p><code>memo[targetsum]</code> is copied from <code>shortest</code></p> <p>Ideally after all the children of a recursive tree node are traversed we select the shortest path and assign it to <code>memo[targetsum]</code> but the value inside <code>memo[target]</code> changes with the changes in <code>seq</code> that introduces the unexpected values in <code>memo</code>.</p> <p>It can be fixed by using an immutable data type as @outis suggested. But we can go a step further and just make a small change to this code itself.</p> <pre><code>import copy def bestsum(targetsum, arr, memo=None):     if memo is None:         memo = {}     if targetsum in memo: return copy.deepcopy(memo[targetsum])     if targetsum==0: return []     elif targetsum &lt; 0: return None     shortest = None      for i in arr:         remainder = targetsum-i         seq = bestsum(remainder, arr, memo)         if seq!=None:             seq.append(i)             if (shortest==None or len(seq)&lt;len(shortest)):                 shortest = seq     memo[targetsum] = copy.deepcopy(shortest)     return shortest  print(bestsum(7, [2, 4, 3])) print(bestsum(20, [5, 10])) </code></pre> <p>Output:</p> <pre><code>[3, 4] [10, 10] </code></pre> <p>Here we are using <code>deepcopy</code> from the <code>copy</code> module in python. <code>deepcopy</code> essentially creates a new list and populates it recursively with the elements of the original list, therefore the new lists are totally different from each other. Read more about it <a href=""https://betterprogramming.pub/shallow-copy-vs-deep-copy-in-python-357e5f502bf9"" rel=""nofollow noreferrer"">here</a></p> <p>PS- <code>deepcopy</code> is probably overkill here as it is generally used for nested lists, using shallowcopy will also work fine here.</p> <p>Shallowcopy syntax-</p> <pre><code>newlist = oldlist.copy() </code></pre>"			2022-03-29 10:09:23.203 UTC
71677088	javascript|python|django|dictionary|plot	"Using Django, send a Python Dictionary to a HTML Page and convert it to Javascript arrays in Javascript Script"	"<p>I have been trying to send a Python Dictionary to a HTML Page and use that dictionary in Javascript to add a Graph on my website, using Django</p> <p>The form takes a Image Upload, and the code is as follows,</p> <pre><code> &lt;div class=&quot; mx-5 font-weight-bold&quot;&gt;     Uplaod Image   &lt;/div&gt;   &lt;input class=&quot; &quot; type=&quot;file&quot; name=&quot;filePath&quot;&gt;   &lt;input type=&quot;submit&quot; class=&quot;btn btn-success&quot; value=&quot;Submit&quot;&gt; </code></pre> <p>This image is then sent to <code>views.py</code> where it is processed and a resultant image, as well as a dictionary is generated from that image. And then again, a HTML page is rendered where the dictionary as well as the resultant image is sent in context variable. The code is as follows,</p> <pre><code>def predictImage(request):     fileObj = request.FILES['filePath']     fs = FileSystemStorage()     filePathName = fs.save(fileObj.name, fileObj)     filePathName = fs.url(filePathName)     testimage = '.'+filePathName     img_result, resultant_array, total_objects = detect_image(testimage)     cv2.imwrite(&quot;media/results/&quot; + fileObj.name, img=img_result)      context = {'filePathName':&quot;media/results/&quot;+fileObj.name, 'predictedLabel': dict(resultant_array), 'total_objects': total_objects}     #context = {}     return render(request, 'index.html', context) </code></pre> <p>Now, I want to convert the Dictionary items and keys into two different Javascript arrays, which are then to be used to plot a Graph on the HTML page. The template code of the Javascript is as follows,</p> <pre><code>          &lt;script&gt;             // const value = JSON.parse(document.getElementById('data_values').textContent);             // alert(value);             var xArray = [];             var yArray = [];                           var xArray = [&quot;Italy&quot;, &quot;France&quot;, &quot;Spain&quot;, &quot;USA&quot;, &quot;Argentina&quot;]; // xArray needs to have Python Dictionary's keys             var yArray = [55, 49, 44, 24, 15]; // yArray needs to have Python Dictionary's values              var layout = { title: &quot;Distribution of Labels&quot; };              var data = [{ labels: xArray, values: yArray, hole: .5, type: &quot;pie&quot; }];              Plotly.newPlot(&quot;myPlot&quot;, data, layout);           &lt;/script&gt; </code></pre> <p>I have tried a lot of different things to access my Python Dictionary in the Javascript Script and then convert that to Javascript arrays, but I still have not managed to do it. I also tried different Stackoverflow posts etc but nothing could really properly guide me on this. I am quite new to Django as well so I am not much aware of the syntax as well.</p>"	2022-03-30 12:17:58.403 UTC	71678887	<p>html</p> <pre><code>&lt;input type=&quot;hidden&quot; id=&quot;dictionary&quot; value=&quot;{{ dictionary }}&quot; /&gt; </code></pre> <p>JS</p> <pre><code>var dictionary = JSON.parse($('#dictionary').val()); </code></pre>			2022-03-30 14:14:44.203 UTC
71677088	javascript|python|django|dictionary|plot	"Using Django, send a Python Dictionary to a HTML Page and convert it to Javascript arrays in Javascript Script"	"<p>I have been trying to send a Python Dictionary to a HTML Page and use that dictionary in Javascript to add a Graph on my website, using Django</p> <p>The form takes a Image Upload, and the code is as follows,</p> <pre><code> &lt;div class=&quot; mx-5 font-weight-bold&quot;&gt;     Uplaod Image   &lt;/div&gt;   &lt;input class=&quot; &quot; type=&quot;file&quot; name=&quot;filePath&quot;&gt;   &lt;input type=&quot;submit&quot; class=&quot;btn btn-success&quot; value=&quot;Submit&quot;&gt; </code></pre> <p>This image is then sent to <code>views.py</code> where it is processed and a resultant image, as well as a dictionary is generated from that image. And then again, a HTML page is rendered where the dictionary as well as the resultant image is sent in context variable. The code is as follows,</p> <pre><code>def predictImage(request):     fileObj = request.FILES['filePath']     fs = FileSystemStorage()     filePathName = fs.save(fileObj.name, fileObj)     filePathName = fs.url(filePathName)     testimage = '.'+filePathName     img_result, resultant_array, total_objects = detect_image(testimage)     cv2.imwrite(&quot;media/results/&quot; + fileObj.name, img=img_result)      context = {'filePathName':&quot;media/results/&quot;+fileObj.name, 'predictedLabel': dict(resultant_array), 'total_objects': total_objects}     #context = {}     return render(request, 'index.html', context) </code></pre> <p>Now, I want to convert the Dictionary items and keys into two different Javascript arrays, which are then to be used to plot a Graph on the HTML page. The template code of the Javascript is as follows,</p> <pre><code>          &lt;script&gt;             // const value = JSON.parse(document.getElementById('data_values').textContent);             // alert(value);             var xArray = [];             var yArray = [];                           var xArray = [&quot;Italy&quot;, &quot;France&quot;, &quot;Spain&quot;, &quot;USA&quot;, &quot;Argentina&quot;]; // xArray needs to have Python Dictionary's keys             var yArray = [55, 49, 44, 24, 15]; // yArray needs to have Python Dictionary's values              var layout = { title: &quot;Distribution of Labels&quot; };              var data = [{ labels: xArray, values: yArray, hole: .5, type: &quot;pie&quot; }];              Plotly.newPlot(&quot;myPlot&quot;, data, layout);           &lt;/script&gt; </code></pre> <p>I have tried a lot of different things to access my Python Dictionary in the Javascript Script and then convert that to Javascript arrays, but I still have not managed to do it. I also tried different Stackoverflow posts etc but nothing could really properly guide me on this. I am quite new to Django as well so I am not much aware of the syntax as well.</p>"	2022-03-30 12:17:58.403 UTC	71678589	"<p>From <strong><code>Django-doc</code></strong> <a href=""https://docs.djangoproject.com/en/4.0/ref/templates/builtins/#json-script"" rel=""nofollow noreferrer""><strong><code>json_script</code></strong></a></p> <pre><code>{{ value|json_script:&quot;hello-data&quot; }} </code></pre> <p>inside your Javascript</p> <pre><code>&lt;script&gt;       const data = JSON.parse(document.getElementById('hello-data').textContent);   var xArray = Object.keys(data) // return list of keys   var yArray = Object.values(data) // return list of values &lt;/script&gt; </code></pre>"			2022-03-30 13:57:15.917 UTC
71677088	javascript|python|django|dictionary|plot	"Using Django, send a Python Dictionary to a HTML Page and convert it to Javascript arrays in Javascript Script"	"<p>I have been trying to send a Python Dictionary to a HTML Page and use that dictionary in Javascript to add a Graph on my website, using Django</p> <p>The form takes a Image Upload, and the code is as follows,</p> <pre><code> &lt;div class=&quot; mx-5 font-weight-bold&quot;&gt;     Uplaod Image   &lt;/div&gt;   &lt;input class=&quot; &quot; type=&quot;file&quot; name=&quot;filePath&quot;&gt;   &lt;input type=&quot;submit&quot; class=&quot;btn btn-success&quot; value=&quot;Submit&quot;&gt; </code></pre> <p>This image is then sent to <code>views.py</code> where it is processed and a resultant image, as well as a dictionary is generated from that image. And then again, a HTML page is rendered where the dictionary as well as the resultant image is sent in context variable. The code is as follows,</p> <pre><code>def predictImage(request):     fileObj = request.FILES['filePath']     fs = FileSystemStorage()     filePathName = fs.save(fileObj.name, fileObj)     filePathName = fs.url(filePathName)     testimage = '.'+filePathName     img_result, resultant_array, total_objects = detect_image(testimage)     cv2.imwrite(&quot;media/results/&quot; + fileObj.name, img=img_result)      context = {'filePathName':&quot;media/results/&quot;+fileObj.name, 'predictedLabel': dict(resultant_array), 'total_objects': total_objects}     #context = {}     return render(request, 'index.html', context) </code></pre> <p>Now, I want to convert the Dictionary items and keys into two different Javascript arrays, which are then to be used to plot a Graph on the HTML page. The template code of the Javascript is as follows,</p> <pre><code>          &lt;script&gt;             // const value = JSON.parse(document.getElementById('data_values').textContent);             // alert(value);             var xArray = [];             var yArray = [];                           var xArray = [&quot;Italy&quot;, &quot;France&quot;, &quot;Spain&quot;, &quot;USA&quot;, &quot;Argentina&quot;]; // xArray needs to have Python Dictionary's keys             var yArray = [55, 49, 44, 24, 15]; // yArray needs to have Python Dictionary's values              var layout = { title: &quot;Distribution of Labels&quot; };              var data = [{ labels: xArray, values: yArray, hole: .5, type: &quot;pie&quot; }];              Plotly.newPlot(&quot;myPlot&quot;, data, layout);           &lt;/script&gt; </code></pre> <p>I have tried a lot of different things to access my Python Dictionary in the Javascript Script and then convert that to Javascript arrays, but I still have not managed to do it. I also tried different Stackoverflow posts etc but nothing could really properly guide me on this. I am quite new to Django as well so I am not much aware of the syntax as well.</p>"	2022-03-30 12:17:58.403 UTC	71686372	"<p>can you take a try this,</p> <h1>views.py</h1> <pre><code># context data context = {'filePathName':&quot;media/results/&quot;+fileObj.name, 'predictedLabel': dict(resultant_array), 'total_objects': total_objects,     &quot;data&quot;:  {&quot;Italy&quot;:11, &quot;France&quot;:22, &quot;Spain&quot;:22, &quot;USA&quot;:23, &quot;Argentina&quot;:12}} </code></pre> <h1>template.html</h1> <pre><code>  &lt;script&gt;     // const data = JSON.parse();     // alert(value);     var data = JSON.parse(&quot;{{data|safe}}&quot;.replaceAll(&quot;'&quot;, '&quot;'));     var xArray = [];     var yArray = [];           var xArray = Object.keys(data); // xArray needs to have Python Dictionary's keys     var yArray = Object.values(data) // yArray needs to have Python Dictionary's values      var layout = { title: &quot;Distribution of Labels&quot; };      var data = [{ labels: xArray, values: yArray, hole: .5, type: &quot;pie&quot; }];      Plotly.newPlot(&quot;myPlot&quot;, data, layout);   &lt;/script&gt; </code></pre>"			2022-03-31 02:52:43.113 UTC
71679094	javascript|python	Python vs Javascript execution time	"<p>I tried solving Maximum Subarray using both Javascript(Node.js) and Python, with brute force algorithm. Here's my code:</p> <p>Using python:</p> <pre class=""lang-py prettyprint-override""><code>from datetime import datetime from random import randint  arr = [randint(-1000,1000) for i in range(1000)]  def bruteForce(a):   l = len(a)   max = 0   for i in range(l):     sum = 0     for j in range(i, l):       sum += a[j]       if(sum &gt; max):         max = sum   return max  start = datetime.now() bruteForce(arr) end = datetime.now()  print(format(end-start)) </code></pre> <p>And Javascript:</p> <pre><code>function randInt(start, end) {     return Math.floor(Math.random() * (end - start + 1)) }  var arr = Array(1000).fill(randInt(-1000, 1000))  function bruteForce(arr) {     var max = 0     for (let i = 0; i &lt; arr.length; i++) {         var sum = 0         for (let j = i; j &lt; arr.length; j++) {             sum += arr[j]             max = Math.max(max, sum)         }     }     return max }  var start = performance.now() bruteForce(arr) var end = performance.now() console.log(end - start) </code></pre> <p>Javascript got a result of about 0.187 seconds, while python got 4.75s - about 25 times slower. Does my code not optimized or python is really that slower than javascript?</p>"	2022-03-30 14:26:17.24 UTC	71679143	"<p>Yes it is. All modern JS engines are quite fast, and significantly faster than Python. But that doesn’t always matter, the context is important when deciding between languages based on performance.</p>"			2022-03-30 14:29:13.423 UTC
71687455	javascript|python|django|forms	how to get a variable value from form to python function in django from javascript	"<p>I am trying to scan QR code using javascript as shown below. this part is working fine:</p> <pre><code>&lt;title&gt;Django Online Barcode Reader&lt;/title&gt; &lt;meta charset=&quot;utf-8&quot;&gt;   {% csrf_token %}  &lt;script src={% static &quot;html5-qrcode.min.js&quot;%}&gt;&lt;/script&gt; &lt;style&gt; .result{ background-color: green; color:#fff; padding:20px; } .row{ display:flex; } &lt;/style&gt;  &lt;!--&lt;form action=&quot;&quot; method=&quot;POST&quot;&gt;--&gt; {% csrf_token %} &lt;div class=&quot;row&quot;&gt; &lt;div class=&quot;col&quot;&gt; &lt;div style=&quot;width:500px;&quot; id=&quot;reader&quot;&gt;&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;col&quot; style=&quot;padding:30px;&quot;&gt; &lt;h4&gt;SCAN RESULT&lt;/h4&gt; &lt;!--&lt;div id=&quot;result&quot; name=&quot;result&quot;&gt;Result Here&lt;/div&gt;--&gt; &lt;output type=&quot;post&quot; id=&quot;result&quot; name=&quot;resutl&quot; placeholder=&quot;qrCodeMessage&quot;&gt;    &lt;/div&gt; &lt;/div&gt;  &lt;script type=&quot;text/javascript&quot;&gt; function onScanSuccess(qrCodeMessage) { document.getElementById('result').innerHTML = '&lt;span class=&quot;result&quot;&gt;'+qrCodeMessage+'&lt;/span&gt;';}  function onScanError(errorMessage) { //handle scan error }  var html5QrcodeScanner = new Html5QrcodeScanner( &quot;reader&quot;, { fps: 10, qrbox: 250 }); html5QrcodeScanner.render(onScanSuccess, onScanError); &lt;/script&gt; </code></pre> <p>But I need to pass the value of result variable to python function as following and print it but did not work. It does not print any!</p> <pre><code>def userspage(request):     if request.method == 'POST':         result = request.POST.get(&quot;result&quot;)         context = {}         print(result)         return render(request, 'users.html', context) </code></pre> <p>I need your usual help to fix this. Thanks,</p>"	2022-03-31 05:48:34.657 UTC	71692735	<p>You have a typo in line</p> <pre><code>&lt;output type=&quot;post&quot; id=&quot;result&quot; name=&quot;resutl&quot; placeholder=&quot;qrCodeMessage&quot;&gt; </code></pre> <p>change it to <code>name=&quot;result&quot;</code></p>			2022-03-31 12:46:45.3 UTC
71689998	javascript|python|selenium	Python Selenium find element javascript	"<p>in page</p> <p><a href=""https://www.virustotal.com/gui/home/upload"" rel=""nofollow noreferrer"">https://www.virustotal.com/gui/home/upload</a></p> <p>a need click &quot;Choose file&quot; but I have Message: javascript error: argument is not defined</p> <pre><code>var1 = sys.argv[1] path = os.path.abspath(var1)      driver.get(&quot;https://www.virustotal.com/gui/home/upload&quot;)  element = driver.execute_script('return document.querySelector(&quot;#view-container &gt; home-view&quot;).shadowRoot.querySelector(&quot;#uploadForm&quot;).shadowRoot.querySelector(&quot;#infoIcon&quot;).shadowRoot.querySelector(&quot;#wrapperLink&quot;)') driver.execute_script('argument[0].click();', element) </code></pre> <p>How to define this element. I would like to send a file to check using the script</p>"	2022-03-31 09:21:14.123 UTC	71691783	"<p>Here is something that works.</p> <pre><code>element = driver.execute_script('return document.querySelector(&quot;#view-container &gt; home-view&quot;).shadowRoot.querySelector(&quot;#uploadForm&quot;).shadowRoot') file_element = element.find_element(By.CSS_SELECTOR, &quot;#fileSelector&quot;) file_element.send_keys(r&quot;your_file_path/filename.extn&quot;) </code></pre> <p>It submits the file from the backend without clicking on the button and opening the file dialog.</p> <p>Alternate code:</p> <pre><code>def open_shadow_root(element):     shadow_root = driver.execute_script('return arguments[0].shadowRoot', element)     return shadow_root  driver.get(&quot;https://www.virustotal.com/gui/home/upload&quot;) time.sleep(5) root_1 = driver.find_element(By.CSS_SELECTOR, &quot;#view-container &gt; home-view&quot;) sroot_1 = open_shadow_root(root_1) print(sroot_1) time.sleep(4) root_2 = sroot_1.find_element(By.CSS_SELECTOR, &quot;#uploadForm&quot;) sroot_2 = open_shadow_root(root_2) time.sleep(4) file_element = sroot_2.find_element(By.CSS_SELECTOR, &quot;#fileSelector&quot;) file_element.send_keys(r&quot;your_file_path/filename.extn&quot;) time.sleep(4) driver.quit() </code></pre> <p>It does the same job as the previous code; it's just that I have written a shadow root function and utilizing it to open the shadow roots. This looks a little more readable in my opinion, but there is no stopping from using the former code. Also, I have used <code>time.sleep()</code> which can be replaced with <code>WebdriverWait</code> if possible.</p> <p>If you still want to click on the <code>Choose File</code> button and work through the file dialog, then you may try the below:</p> <pre><code>element = driver.execute_script('return document.querySelector(&quot;#view-container &gt; home-view&quot;).shadowRoot.querySelector(&quot;#uploadForm&quot;).shadowRoot')  choose_file = element.find_element(By.CSS_SELECTOR, &quot;#infoIcon&quot;) choose_file.click() </code></pre> <p>Alternate:</p> <pre><code>def open_shadow_root(element):     shadow_root = driver.execute_script('return arguments[0].shadowRoot', element)     return shadow_root   driver.get(&quot;https://www.virustotal.com/gui/home/upload&quot;) time.sleep(4) root_1 = driver.find_element(By.CSS_SELECTOR, &quot;#view-container &gt; home-view&quot;) sroot_1 = open_shadow_root(root_1) print(sroot_1) time.sleep(4) root_2 = sroot_1.find_element(By.CSS_SELECTOR, &quot;#uploadForm&quot;) sroot_2 = open_shadow_root(root_2) time.sleep(4) choose_file = sroot_2.find_element(By.CSS_SELECTOR, &quot;#infoIcon&quot;) choose_file.click() # ... choose the file ....  driver.quit() </code></pre>"			2022-03-31 11:36:49.63 UTC
71695137	javascript|python|ajax|flask	Data not sending from Python to JavaScript	"<p>Here is my Python file</p> <pre><code>import random from flask import Flask, render_template from captcha.image import ImageCaptcha from captcha.audio import AudioCaptcha  app = Flask(__name__)   @app.route('/') def generateCaptcha():     return render_template('main.html')  @app.route('/getCaptcha', methods=['POST']) def getCaptcha():     result_str_image = ''.join(         (random.choice('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789') for i in range(5)))     image = ImageCaptcha(width=280, height=90)     imageData = image.generate(result_str_image)     image.write(result_str_image, result_str_image + '.png')     return result_str_image  if __name__ == &quot;__main__&quot;:     app.run(debug=True) </code></pre> <p>And my HTML file</p> <pre><code>&lt;!DOCTYPE HTML&gt; &lt;html&gt;     &lt;head&gt;         &lt;title&gt; Example &lt;/title&gt;         &lt;script type=&quot;text/javascript&quot; src=&quot;https://ajax.googleapis.com/ajax/libs/jquery/1.5/jquery.min.js&quot;&gt;&lt;/script&gt;         &lt;link rel=&quot;shortcut icon&quot; href=&quot;#&quot;&gt;     &lt;/head&gt;     &lt;body&gt;         &lt;h1&gt; Captcha Example &lt;/h1&gt;         &lt;div id=&quot;Captcha&quot;&gt;&lt;/div&gt;         &lt;label&gt; Enter the text from Captcha above &lt;/label&gt;         &lt;input type=&quot;text&quot; id=&quot;CaptchaInput&quot;&gt;         &lt;br&gt; &lt;br&gt;         &lt;input type=&quot;button&quot; value=&quot;Enter&quot; id=&quot;CaptchaSubmit&quot;&gt;         &lt;input type=&quot;button&quot; value=&quot;Reset&quot; id=&quot;CaptchaReset&quot;&gt;         &lt;input type=&quot;button&quot; value=&quot;Audio&quot; id=&quot;CaptchaAudio&quot;&gt;         &lt;script&gt;             var captchaValue;             $.ajax({                 type: &quot;POST&quot;,                 url: &quot;/getCaptcha&quot;,                 data: captchaValue,                 contentType:&quot;application/text; charset=utf-8&quot;, // Declare the type of the data we're sending. Without this, Flask will misinterpret it as some other kind of data.                 success: function(data){                     console.log(captchaValue);                 }             });         &lt;/script&gt;     &lt;/body&gt; &lt;/html&gt; </code></pre> <p>However, the captchaValue is always undefined, where am I messing up? This is my first time trying this. I am using a piece of code from Github to help but since they're doing something else, I'm confused as to where I messed up.</p> <p>I am expecting</p> <pre><code>data: captchaValue </code></pre> <p>to update the value of captchaValue.</p>"	2022-03-31 15:19:48.403 UTC	71703718	"<p>First of all you are not capturing the value you enter in your inputs, so please take a look on <a href=""https://flask.palletsprojects.com/en/2.0.x/quickstart/"" rel=""nofollow noreferrer"">https://flask.palletsprojects.com/en/2.0.x/quickstart/</a> specially read The Request Object section. Basically all data you enter in your Flask app can be captured using the request.form object (which is a kind of read-only dict). However before you can do this work you must first enclose all your inputs inside a form tag, something like this:</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-html lang-html prettyprint-override""><code>&lt;label&gt; Enter the text from Captcha above &lt;/label&gt;´ &lt;form method=""POST""&gt; &lt;input type=""text"" id=""CaptchaInput""&gt; ... &lt;/form&gt;</code></pre> </div> </div> </p> <p>Note you should add the method parameter to make it work as it simplest way possible.</p> <p>Then you must add a name parameter in all your inputs, you can use the same name you used in your id as</p> <pre><code> &lt;input type=&quot;text&quot; id=&quot;CaptchaInput&quot; name=&quot;CaptchaInput&quot;&gt; </code></pre> <p>Then in your Python code you can now call request.form['CaptchaInput'] (don't forget to import request library at the top!) to capture the value in Flask.</p> <p>As per your Javascript code, you have never read the value from the input, so you must do something like: var captchaValue = document.getElementById(&quot;CaptchaInput&quot;).value;</p>"			2022-04-01 08:07:47.79 UTC
71698073	javascript|python|django|otree	How do you pass a variable from javascript to python (oTree) or django?	"<p>I have some created some variables in Javascript to tracker how long an individual holds a button. I would like to pass these variables within a class in python (oTree) to store the data.</p> <p>So, suppose the Javascript code is as follows:</p> <pre><code>let javascriptvariable = 0; </code></pre> <p>This javascriptvariable will be updated as the user clicks the button, so let's say the final value is javascriptvariable = 100. The python code is below.</p> <pre><code>class DisplayCharacteristics2(Page):     form_model = 'player'     pythonvariable = javascriptvariable       @staticmethod     def vars_for_template(player: Player):         return {             &quot;var1&quot;: player.var1,         } </code></pre> <p>I tried created an empty variable, but I get an error which says something like javascript can't &quot;add&quot; to a null variable. I also tried using django in combination with javascript (see below), but javascript cannot add to a null variable. I tried to let it equal to zero first, but then I only get data points of 0.</p> <pre><code>let javascriptvariable = `{{ pythonvariable|safe }}` </code></pre> <p>Any leads will be appreciated! Thanks in advance.</p>"	2022-03-31 19:22:25.317 UTC	71736464	"<p>Using live pages seems to solve the issue.</p> <p><a href=""https://otree.readthedocs.io/en/latest/live.html"" rel=""nofollow noreferrer"">https://otree.readthedocs.io/en/latest/live.html</a></p> <p>So in Javascript:</p> <pre><code> function sendTracker1() {           liveSend({'which_char': 'char_1', 'value': tracker1})       } </code></pre> <p>And in Python:</p> <pre><code>class MyPage(Page):     form_model = 'player'      @staticmethod     def live_method(player, data):         if data['which_char'] == 'char_1':             player.timer_char1 = int(data['value'])   </code></pre>"			2022-04-04 11:26:32.953 UTC
71707759	javascript|python|spotify	How to access an array from a javascript file in a python file	"<p>Im building a Spotify application with javascript and react, Ive managed to get a Spotify user's playlists and I have the user select two of those playlists which get put into two different arrays.</p> <pre><code>var playlist1 = []; var playlist2 = []; </code></pre> <p>Inside these arrays there contains all the Spotify playlist data like its id, uri, tracks, etc. What Im trying to do is access these arrays in my python file and apply a recommendation algrotihms to create a playlist based on those two playlists. How would I go about accessesing these arrays in python? Thanks for any help :)</p>"	2022-04-01 13:33:53.213 UTC	71708004	"<p>There are two main ways of doing something like this (fairly) easy.</p> <ol> <li>All local:</li> </ol> <p>If you want your app to stay local, just use text files to handle the data. A nice format that both languages can interpret is <a href=""https://www.json.org/json-en.html"" rel=""nofollow noreferrer"">JSON</a>. So, in your JS, write the data to a text file and then read that textfile in Python.</p> <p>Above does not really makes sense when using react, since it is really web based. so I would recommend step 2:</p> <ol start=""2""> <li>Client-server model:</li> </ol> <p>Since you are using React, it is logical to build a client-server model where you use a <a href=""https://www.redhat.com/en/topics/api/what-is-a-rest-api"" rel=""nofollow noreferrer"">REST-API</a> (or socket etc.) to send and receive the data to both programs. Then, you can just send the data in JSON format by calling a <code>POST</code> to the rest-api that is hosted by your Python application with the JSON array containing the spotify information.</p>"			2022-04-01 13:51:51.773 UTC
71714432	python|selenium|google-chrome|selenium-webdriver|selenium-chromedriver	How to overwrite JavaScript function using Selenium in Python	"<p>I am working on a site that has a form and the user is supposed to upload a photo on the site. The form checks the heigh weight and size of the image to make sure it is large. I have a bot that is running on the site and is getting stuck because some of the images it puts are too small. For my purposes, I want to be able to override the JavaScript on the source of the page from my selenium script written in Python, so that when I submit a small file it just goes through anyway.</p> <p>Here is a screenshot of the JavaScript source code:</p> <p><img src=""https://i.stack.imgur.com/3YDcq.png"" alt=""From website"" /></p> <p>I am not able to directly edit this but I was able to set a break point before the if statement in the developer tools and then write &quot;h=300;&quot;,&quot;w=300;&quot;, and &quot;size=300;: to get it to work, however I basically need to be able to do this from within selenium using the webdriver.</p> <p>I was able to get what I want working from within Chrome itself with a breakpoint and manually entering the variables to be different but I couldn't figure out how to do it from within my bot. This how I set up my driver:</p> <p><img src=""https://i.stack.imgur.com/Q2O7d.png"" alt=""This how I set up my driver"" /></p> <p>I have looked all over the internet and couldn't find anything on the topic. It seems like this would be something that would work well with a content script if I had a Chrome extension, however this project took me hours and it would be a shame if I had to rewrite everything in JavaScript and then make an extension just for this. If there is a simple way to do that though I would be all ears.</p>"	2022-04-02 02:33:07.623 UTC	71722171	<p>Unless that object is in global scope there's no way to do it with javascript but you might be able to intercept and rewrite the response with selenium or with a proxy.</p>			2022-04-03 00:45:51.227 UTC
71761238	javascript|python|flask|plaid	Can't get Plaid Link to Open using Javascript and python	"<p>When the plaid link handler is called it spins and then goes away. I can't get the link dialog box to show completely to get access token. Setup using flask for the python server on port 5000 and using the plaid api for calls in python. Using javascript on the client side.</p> <p>I can see the requests going through but nothing happens or seems to post to the client:</p> <pre><code>127.0.0.1 - - [05/Apr/2022 21:53:31] &quot;GET / HTTP/1.1&quot; 200 - 127.0.0.1 - - [05/Apr/2022 21:54:10] &quot;GET / HTTP/1.1&quot; 200 - 127.0.0.1 - - [05/Apr/2022 21:54:10] &quot;POST /create_link_token HTTP/1.1&quot; 200 - </code></pre> <p>Javascript:</p> <pre><code>     &lt;!DOCTYPE html&gt;     &lt;html&gt;       &lt;head&gt;           &lt;/head&gt;       &lt;body&gt;         &lt;button id=&quot;link-button&quot;&gt;Link Account&lt;/button&gt;     &lt;script src=&quot;https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js&quot;&gt;&lt;/script&gt;     &lt;script src=&quot;https://cdn.plaid.com/link/v2/stable/link-initialize.js&quot;&gt;&lt;/script&gt;     &lt;script type=&quot;text/javascript&quot;&gt;     (async function($) {       var handler = Plaid.create({         // Create a new link_token to initialize Link         token: (await $.post('/create_link_token')).link_token,         receivedRedirectUri: window.location.href,         onLoad: function() {           // Optional, called when Link loads         },         onSuccess: function(public_token, metadata) {           // Send the public_token to your app server.           // The metadata object contains info about the institution the           // user selected and the account ID or IDs, if the           // Account Select view is enabled.           $.post('/exchange_public_token', {             public_token: public_token,           });         },         onExit: function(err, metadata) {           // The user exited the Link flow.           if (err != null) {             // The user encountered a Plaid API error prior to exiting.           }           // metadata contains information about the institution           // that the user selected and the most recent API request IDs.           // Storing this information can be helpful for support.         },         onEvent: function(eventName, metadata) {           // Optionally capture Link flow events, streamed through           // this callback as your users connect an Item to Plaid.           // For example:           // eventName = &quot;TRANSITION_VIEW&quot;           // metadata  = {           //   link_session_id: &quot;123-abc&quot;,           //   mfa_type:        &quot;questions&quot;,           //   timestamp:       &quot;2017-09-14T14:42:19.350Z&quot;,           //   view_name:       &quot;MFA&quot;,           // }         }       });       $('#link-button').on('click', function(e) {         handler.open();       });     })(jQuery);     &lt;/script&gt;       &lt;/body&gt;     &lt;/html&gt;  </code></pre> <p>Python server.py:</p> <pre><code>     # source /Users/tnappy/node_projects/quickstart/python/bin/activate     # Read env vars from .env file     from plaid.exceptions import ApiException     from plaid.model.payment_amount import PaymentAmount     from plaid.model.payment_amount_currency import PaymentAmountCurrency     from plaid.model.products import Products     from plaid.model.country_code import CountryCode     from plaid.model.recipient_bacs_nullable import RecipientBACSNullable     from plaid.model.payment_initiation_address import PaymentInitiationAddress     from plaid.model.payment_initiation_recipient_create_request import PaymentInitiationRecipientCreateRequest     from plaid.model.payment_initiation_payment_create_request import PaymentInitiationPaymentCreateRequest     from plaid.model.payment_initiation_payment_get_request import PaymentInitiationPaymentGetRequest     from plaid.model.link_token_create_request_payment_initiation import LinkTokenCreateRequestPaymentInitiation     from plaid.model.item_public_token_exchange_request import ItemPublicTokenExchangeRequest     from plaid.model.link_token_create_request import LinkTokenCreateRequest     from plaid.model.link_token_create_request_user import LinkTokenCreateRequestUser     from plaid.model.asset_report_create_request import AssetReportCreateRequest     from plaid.model.asset_report_create_request_options import AssetReportCreateRequestOptions     from plaid.model.asset_report_user import AssetReportUser     from plaid.model.asset_report_get_request import AssetReportGetRequest     from plaid.model.asset_report_pdf_get_request import AssetReportPDFGetRequest     from plaid.model.auth_get_request import AuthGetRequest     from plaid.model.transactions_get_request import TransactionsGetRequest     from plaid.model.transactions_get_request_options import TransactionsGetRequestOptions     from plaid.model.identity_get_request import IdentityGetRequest     from plaid.model.investments_transactions_get_request_options import InvestmentsTransactionsGetRequestOptions     from plaid.model.investments_transactions_get_request import InvestmentsTransactionsGetRequest     from plaid.model.accounts_balance_get_request import AccountsBalanceGetRequest     from plaid.model.accounts_get_request import AccountsGetRequest     from plaid.model.investments_holdings_get_request import InvestmentsHoldingsGetRequest     from plaid.model.item_get_request import ItemGetRequest     from plaid.model.institutions_get_by_id_request import InstitutionsGetByIdRequest     from plaid.model.transfer_authorization_create_request import TransferAuthorizationCreateRequest     from plaid.model.transfer_create_request import TransferCreateRequest     from plaid.model.transfer_get_request import TransferGetRequest     from plaid.model.transfer_network import TransferNetwork     from plaid.model.transfer_type import TransferType     from plaid.model.transfer_user_in_request import TransferUserInRequest     from plaid.model.ach_class import ACHClass     from plaid.model.transfer_create_idempotency_key import TransferCreateIdempotencyKey     from plaid.model.transfer_user_address_in_request import TransferUserAddressInRequest     from plaid.api import plaid_api     from flask import Flask     from flask import render_template     from flask import request     from flask import jsonify     from datetime import datetime     from datetime import timedelta     import plaid     import base64     import os     import datetime     import json     import time     from dotenv import load_dotenv     from werkzeug.wrappers import response     import pyodbc           load_dotenv()               app = Flask(__name__)          cnxn = pyodbc.connect(&quot;Driver={SQL Server Native Client 11.0};&quot;                           &quot;Server=DESKTOP-DJCMSVC\MJBOURQUIN_SQL;&quot;                           &quot;Database=MyBudget;&quot;                           &quot;Trusted_Connection=yes;&quot;)          cursor = cnxn.cursor()     cursor.execute('SELECT * FROM Accounts')     for row in cursor:         print('row = %r' % (row,))     vals = (&quot;SOMETHING&quot;)     data = &quot;UPDATE Accounts Set API_ID = 'SOMETHING' WHERE Id = 1&quot;     cursor.execute(data)     cursor.commit();          access = &quot;THAT THING&quot;     cursor = cnxn.execute('UPDATE Accounts Set API_ID = ? WHERE Id = ?', [access,1])     cursor.commit();               # Fill in your Plaid API keys - https://dashboard.plaid.com/account/keys     PLAID_CLIENT_ID = os.getenv('PLAID_CLIENT_ID')     PLAID_SECRET = os.getenv('PLAID_SECRET')     # Use 'sandbox' to test with Plaid's Sandbox environment (username: user_good,     # password: pass_good)     # Use `development` to test with live users and credentials and `production`     # to go live     PLAID_ENV = os.getenv('PLAID_ENV', 'sandbox')     # PLAID_PRODUCTS is a comma-separated list of products to use when initializing     # Link. Note that this list must contain 'assets' in order for the app to be     # able to create and retrieve asset reports.     PLAID_PRODUCTS = os.getenv('PLAID_PRODUCTS', 'transactions').split(',')          # PLAID_COUNTRY_CODES is a comma-separated list of countries for which users     # will be able to select institutions from.     PLAID_COUNTRY_CODES = os.getenv('PLAID_COUNTRY_CODES', 'US').split(',')          products = []     for product in PLAID_PRODUCTS:         products.append(Products(product))          def empty_to_none(field):         value = os.getenv(field)         if value is None or len(value) == 0:             return None         return value          host = plaid.Environment.Sandbox          if PLAID_ENV == 'sandbox':         host = plaid.Environment.Sandbox          if PLAID_ENV == 'development':         host = plaid.Environment.Development          if PLAID_ENV == 'production':         host = plaid.Environment.Production          # Parameters used for the OAuth redirect Link flow.     #     # Set PLAID_REDIRECT_URI to 'http://localhost:3000/'     # The OAuth redirect flow requires an endpoint on the developer's website     # that the bank website should redirect to. You will need to configure     # this redirect URI for your client ID through the Plaid developer dashboard     # at https://dashboard.plaid.com/team/api.     PLAID_REDIRECT_URI = empty_to_none('PLAID_REDIRECT_URI')          configuration = plaid.Configuration(         host=host,         api_key={             'clientId': PLAID_CLIENT_ID,             'secret': PLAID_SECRET,             'plaidVersion': '2020-09-14'         }     )          api_client = plaid.ApiClient(configuration)     client = plaid_api.PlaidApi(api_client)          @app.route('/')     def index():       return render_template('index.html')          @app.route('/my-link/')     def my_link():       print ('I got clicked!')            return 'Click.'          @app.route(&quot;/create_link_token&quot;, methods=['POST'])     def create_link_token():         # Get the client_user_id by searching for the current user             request = LinkTokenCreateRequest(                 products=products,                 client_name=&quot;Budgetary&quot;,                 country_codes=list(map(lambda x: CountryCode(x), PLAID_COUNTRY_CODES)),                 language='en',                 user=LinkTokenCreateRequestUser(                     client_user_id=str(time.time())                 )             )             if PLAID_REDIRECT_URI!=None:                 request['redirect_uri']=PLAID_REDIRECT_URI         # create link token             response = client.link_token_create(request)             return jsonify(response.to_dict())          @app.route('/exchange_public_token', methods=['POST'])     def exchange_public_token():         global access_token         public_token = request.form['public_token']         request = ItemPublicTokenExchangeRequest(           public_token=public_token         )         response = client.item_public_token_exchange(request)         access_token = response['access_token']         item_id = response['item_id']              cursor = cnxn.execute('UPDATE Accounts Set API_ID = ? WHERE Id = ?', [access_token,1])         cursor.commit();              return jsonify(response.to_dict())          if __name__ == '__main__':       app.run(debug=True)  </code></pre>"	2022-04-06 04:58:17.403 UTC	71789268	"<p>Solved by breaking the code out into pieces. Clicking the button, then requesting and printing value in python. Then sending and making sure it's parsed correctly. Then with the parsed token value opening up link successfully.</p>"			2022-04-07 21:44:21.65 UTC
71765949	python|python-3.x|flask	Python Flask: How to include JavaScript file for each template per blueprint	"<p>I have read <a href=""https://stackoverflow.com/questions/3412275/loading-external-script-with-jinja2-template-directive"">Loading external script with jinja2 template directive</a> and <a href=""https://stackoverflow.com/questions/29335633/import-javascript-files-with-jinja-from-static-folder"">Import javascript files with jinja from static folder</a> but unfortunately no closer</p> <p>I have a Python Flask site which is based on <a href=""https://hackersandslackers.com/flask-blueprints/"" rel=""nofollow noreferrer"">https://hackersandslackers.com/flask-blueprints/</a> so each blueprint has its own static and templates folder</p> <p>My question is how would I include a JS file within a block that sits within a static/js folder of the blueprint?</p>"	2022-04-06 11:29:28.803 UTC	71769058	"<p>My suggestion is to set a separate <code>static_url_path</code> for each blueprint unless a <code>url_prefix</code> is defined. This adds a prefix to the URL where the static files will be loaded.</p> <pre><code>bp = Blueprint(     'home', __name__,     template_folder='templates',     static_folder='static',     static_url_path = '/home/static' )  # ... </code></pre> <pre><code>bp = Blueprint(     'products', __name__,     template_folder='templates',     static_folder='static',     url_prefix = '/products', )  # ... </code></pre> <p>With the help of the <code>request</code> object, the name of the current blueprint can be determined. This can then be used to load the static file. Thus, a different file is loaded for each blueprint.</p> <pre><code>{% block javascript %}   &lt;script src=&quot;{{ url_for(request.blueprint+'.static', filename='js/main.js') }}&quot;&gt;&lt;/script&gt; {% endblock %} </code></pre> <p>It is therefore necessary to adapt both the <code>template_url_path</code> or <code>url_prefix</code> and the identifier within <code>url_for</code> to the requirements.</p>"			2022-04-06 14:56:40.21 UTC
71769722	python|jquery|sql|ajax|http	Pass a string variable from javascript file to a python function	"<p>I have an ag-grid. Clicking on its context menu is opening a modal that has a drop-down menu that I want to populate dynamically by fetching the data from a SQLite database.</p> <p>I want to pass a string variable - network_num from my .js file to a python function. I will then use this variable to execute a query to fetch data from the database. I should then send the fetched data in JSON format to .js file to populate the drop down menu. I am using ajax to send the variable, but it is not working. Please help.</p> <p>Here is the code</p> <pre><code> $.ajax({                     url: &quot;/get_activity&quot;,                     type: &quot;POST&quot;,                     dataType: &quot;json&quot;,                     data: {                         network_num: network_num,                         csrfmiddlewaretoken: '{{ csrf_token }}'                         },                     success : function(json) {                         alert(&quot;Successfully sent the variable&quot;);                     },                     error : function(xhr,errmsg,err) {                         alert(&quot;Could not send URL to Django. Error: &quot; + xhr.status + &quot;: &quot; + xhr.responseText);                     }                 }); </code></pre> <pre><code>def get_activity(request):     print(&quot;Get activity function is running&quot;)     #I have my sql query here that I want to execute </code></pre>"	2022-04-06 15:39:14.04 UTC	71770093	"<p>Assuming you already have the infrastructure built, in python, request should be passed as a dictionary object, so unless the caller is doing something crazy, it should just be <code>request['network_num']</code></p>"			2022-04-06 16:03:16.977 UTC
71778311	javascript|python|html|cefpython	How to expose python functions in javascript with cefpython with an external HTML file	"<p>I’m trying to write an HTML GUI for a project with cefpython. I’ve been able to create a working GUI in HTML, but I’d like to be able to expose python functions in javascript. There’s a tutorial on how to do this in the cefpython GitHub repo, but it involves writing your HTML in a string in the python program and converting it into a data URI. Is there a way to interface python and javascript while keeping your HTML in a separate file? Right now, I’ve passed cefpython the address of my HTML file as the URL to open, but I don’t necessarily need to use that method. I just want to have HTML in an external file and call a python function from javascript run on that page (so that I can call a python function by pressing a button on the page.)</p> <p><strong>Edit:</strong> My question is: how do I call a python function from javascript contained in an external HTML file, using the cefpython library?</p> <pre><code>from cefpython3 import cefpython as cef import sys, os  sys.excepthook = cef.ExceptHook cef.Initialize() cef.CreateBrowserSync(url=&quot;file:///./main.html&quot;) cef.MessageLoop() cef.Shutdown() </code></pre>"	2022-04-07 07:54:29.733 UTC	73484548	"<p>Probably too late for an answer, but yeah..</p> <p>Define a function to bind the objects/functions/properties in python you want to be accessed in javascript.</p> <pre><code>from cefpython3 import cefpython as cef import sys, os  sys.excepthook = cef.ExceptHook cef.Initialize() browser = cef.CreateBrowserSync(url=&quot;file:///./main.html&quot;) set_javascript_bindings(browser) cef.MessageLoop() cef.Shutdown()  def set_javascript_bindings(browser):     bindings = cef.JavascriptBindings(         bindToFrames=False, bindToPopups=False)     bindings.SetObject(&quot;object_name_in_js&quot;, your-object-in-python)     bindings.SetProperty(&quot;property_name_in_js&quot;, your-property-in-python)     bindings.SetFunction(&quot;function_name_in_js&quot;, your-function-in-python)     browser.SetJavascriptBindings(bindings) </code></pre> <p>Here, &quot;object_name_in_js&quot; and the like will be how you call your objects and functions in javascript. your-object-in-python and the like are their names in the python file. Then, in your js file, (or in the script tag of your html file), refer them directly.</p> <pre><code>function_name_in_js() property_name_in_js = ... </code></pre> <p>and so on. Hope this helps someone!</p>"			2022-08-25 08:48:28.51 UTC
71797909	javascript|python|blob|pickle|arraybuffer	Is there an already published Javascript solution to traverse Python pickled objects without using Node.js	"<p>I'm looking at <a href=""https://github.com/jlaine/node-jpickle"" rel=""nofollow noreferrer"">https://github.com/jlaine/node-jpickle</a> to traverse through pickle objects in Javascript and that would be useful to assist sending binary objects from Python, through Ajax, to Javascript. Unfortunately, it uses Node.js to traverse something called Buffer() whereas I get an ArrayBuffer from the Ajax blob. No problem, a few places on the internet have the code below and it should be simple to modify jpickle to use this:</p> <pre><code>var ArrayBufferCursor = function() {   var ArrayBufferCursor = function(arrayBuffer) {     this.dataview = new DataView(arrayBuffer, 0);     this.size = arrayBuffer.byteLength;     this.index = 0;   }    ArrayBufferCursor.prototype.next = function(type) {     switch(type) {       case 'Uint8':         var result = this.dataview.getUint8(this.index);         this.index += 1;         return result;       case 'Int16':         var result = this.dataview.getInt16(this.index, true);         this.index += 2;         return result;       case 'Uint16':         var result = this.dataview.getUint16(this.index, true);         this.index += 2;         return result;       case 'Int32':         var result = this.dataview.getInt32(this.index, true);         this.index += 4;         return result;       case 'Uint32':         var result = this.dataview.getUint32(this.index, true);         this.index += 4;         return result;       case 'Float':       case 'Float32':         var result = this.dataview.getFloat32(this.index, true);         this.index += 4;         return result;       case 'Double':       case 'Float64':         var result = this.dataview.getFloat64(this.index, true);         this.index += 8;         return result;       default:         throw new Error(&quot;Unknown datatype&quot;);     }   };    ArrayBufferCursor.prototype.hasNext = function() {     return this.index &lt; this.size;   }    return ArrayBufferCursor; }); </code></pre> <p>Except this code has at least one typo. For example, maybe I should delete that very last parenthesis? If I do so, then Chrome browser happily compiles, which should allow me to do:</p> <pre><code>var cursor = new ArrayBufferCursor(arrayBuffer); firstfloat = cursor.next('Float') </code></pre> <p>Except Chrome complains that <code>cursor.next</code> is not a function. Grrr. I suspect a trivial typo in this code is stopping it from working, but I cant work it out. Any ideas? Thanks</p>"	2022-04-08 13:29:09.043 UTC	71802298	"<p>This looks to be good now. Apart from fixing the confusing brackets, to work with pickle you have to set floating point numbers to BigEndian, not Little, which fooled me for a while.</p> <p>These cursor functions now let you iterate through a Pickle object !!</p> <pre><code>let ArrayBufferCursor = function(arrayBuffer) {     this.dataview = new DataView(arrayBuffer, 0);     this.size = arrayBuffer.byteLength;     this.index = 0;   }  ArrayBufferCursor.prototype.next = function(type) {     switch(type) {       case 'Char8':         var result = String.fromCharCode(this.dataview.getUint8(this.index));         this.index += 1;         return result;       case 'Uint8':         var result = this.dataview.getUint8(this.index);         this.index += 1;         return result;       case 'Int16':         var result = this.dataview.getInt16(this.index, true);         this.index += 2;         return result;       case 'Uint16':         var result = this.dataview.getUint16(this.index, true);         this.index += 2;         return result;       case 'Int32':         var result = this.dataview.getInt32(this.index, true);         this.index += 4;         return result;       case 'Uint32':         var result = this.dataview.getUint32(this.index, true);         this.index += 4;         return result;       case 'Float':       case 'Float32':         var result = this.dataview.getFloat32(this.index, false);         this.index += 4;         return result;       case 'Double':       case 'Float64':         var result = this.dataview.getFloat64(this.index, false);         this.index += 8;         return result;       default:         throw new Error(&quot;Unknown datatype&quot;);     }   };  ArrayBufferCursor.prototype.toString = function(n) {     const slice = new Uint8Array(this.dataview.buffer).subarray(this.index,this.index+n); //from current pointer get the next n bytes                                  //convert to uint8     const bytesString = String.fromCharCode(...slice)                                           //and then string     this.index += n;     return bytesString;   }  ArrayBufferCursor.prototype.readLine = function() {     const slice = new Uint8Array(this.dataview.buffer).subarray(this.index)      // is this a data copy or just a pointer? The former could get expensive...     const n = this.size - this.index - 1                     // is it really &quot;-1&quot; hope so. Anyway, the very last byte wont be a '\n' will it??      let i = 0     for (i = 0; i&lt;n; i++) {        if (slice[i] == 10){                                 //i.e. ascii '\n'           break;}     }      if (i == n) {         throw &quot;Could not find end of a line in pickle?!&quot;;     }     const bytesArray = new Uint8Array(this.dataview.buffer).subarray(this.index, this.index+i);     const bytesString = String.fromCharCode(...bytesArray);     this.index += i+1;                                 // throw away the '\n'     return bytesString;   }  ArrayBufferCursor.prototype.hasNext = function() {     return this.index &lt; this.size;   } </code></pre>"			2022-04-08 19:30:53.473 UTC
71797909	javascript|python|blob|pickle|arraybuffer	Is there an already published Javascript solution to traverse Python pickled objects without using Node.js	"<p>I'm looking at <a href=""https://github.com/jlaine/node-jpickle"" rel=""nofollow noreferrer"">https://github.com/jlaine/node-jpickle</a> to traverse through pickle objects in Javascript and that would be useful to assist sending binary objects from Python, through Ajax, to Javascript. Unfortunately, it uses Node.js to traverse something called Buffer() whereas I get an ArrayBuffer from the Ajax blob. No problem, a few places on the internet have the code below and it should be simple to modify jpickle to use this:</p> <pre><code>var ArrayBufferCursor = function() {   var ArrayBufferCursor = function(arrayBuffer) {     this.dataview = new DataView(arrayBuffer, 0);     this.size = arrayBuffer.byteLength;     this.index = 0;   }    ArrayBufferCursor.prototype.next = function(type) {     switch(type) {       case 'Uint8':         var result = this.dataview.getUint8(this.index);         this.index += 1;         return result;       case 'Int16':         var result = this.dataview.getInt16(this.index, true);         this.index += 2;         return result;       case 'Uint16':         var result = this.dataview.getUint16(this.index, true);         this.index += 2;         return result;       case 'Int32':         var result = this.dataview.getInt32(this.index, true);         this.index += 4;         return result;       case 'Uint32':         var result = this.dataview.getUint32(this.index, true);         this.index += 4;         return result;       case 'Float':       case 'Float32':         var result = this.dataview.getFloat32(this.index, true);         this.index += 4;         return result;       case 'Double':       case 'Float64':         var result = this.dataview.getFloat64(this.index, true);         this.index += 8;         return result;       default:         throw new Error(&quot;Unknown datatype&quot;);     }   };    ArrayBufferCursor.prototype.hasNext = function() {     return this.index &lt; this.size;   }    return ArrayBufferCursor; }); </code></pre> <p>Except this code has at least one typo. For example, maybe I should delete that very last parenthesis? If I do so, then Chrome browser happily compiles, which should allow me to do:</p> <pre><code>var cursor = new ArrayBufferCursor(arrayBuffer); firstfloat = cursor.next('Float') </code></pre> <p>Except Chrome complains that <code>cursor.next</code> is not a function. Grrr. I suspect a trivial typo in this code is stopping it from working, but I cant work it out. Any ideas? Thanks</p>"	2022-04-08 13:29:09.043 UTC	71822115	"<p>And in case unclear the rest of the solution is basically copied from the previously published Node.js. But the result is very nice. Pickle-&gt;Zlib on the python side then Pako-&gt;Jpickle on the Javascript side gives a complete mechanism to transfer Python objects via Ajax without needing to go to Json and strings. Work to be done includes adding a 'fake' emulator for numpy arrays....</p> <pre><code>var Parser = function() {     this.mark = 'THIS-NEEDS-TO-BE-UNIQUE-TO-SERVE-AS-A-BOUNDARY';     this.memo = {};     this.stack = []; };  Parser.prototype.load = function(pickle) {                                // pickle is an ArrayBuffer     var MARK = '('              // push special markobject on stack       , STOP = '.'              // every pickle ends with STOP       , POP = '0'               // discard topmost stack item       , POP_MARK = '1'          // discard stack top through topmost markobject       , DUP = '2'               // duplicate top stack item       , FLOAT = 'F'             // push float object; decimal string argument       , INT = 'I'               // push integer or bool; decimal string argument       , BININT = 'J'            // push 4-byte signed int       , BININT1 = 'K'           // push 1-byte unsigned int       , LONG = 'L'              // push long; decimal string argument       , BININT2 = 'M'           // push 2-byte unsigned int       , NONE = 'N'              // push None       // missing PERSID       // missing BINPERSID       , REDUCE = 'R'            // apply callable to argtuple, both on stack       , STRING = 'S'            // push string; NL-terminated string argument       , BINSTRING = 'T'         // push string; counted binary string argument       , SHORT_BINSTRING = 'U'   //  &quot;     &quot;   ;    &quot;      &quot;       &quot;      &quot; &lt; 256 bytes       , UNICODE = 'V'           // push Unicode string; raw-unicode-escaped'd argument       , BINUNICODE = 'X'        //   &quot;     &quot;       &quot;  ; counted UTF-8 string argument       , APPEND = 'a'            // append stack top to list below it       , BUILD = 'b'             // build the entire value       , GLOBAL = 'c'            // push self.find_class(modname, name); 2 string args       , DICT = 'd'              // build a dict from stack items       , EMPTY_DICT = '}'        // push empty dict       , APPENDS = 'e'           // extend list on stack by topmost stack slice       , GET = 'g'               // push item from memo on stack; index is string arg       , BINGET = 'h'            //   &quot;    &quot;    &quot;    &quot;   &quot;   &quot;  ;   &quot;    &quot; 1-byte arg       // missing INST       , LONG_BINGET = 'j'       // push item from memo on stack; index is 4-byte arg       , LIST = 'l'              // build list from topmost stack items       , EMPTY_LIST = ']'        // push empty list       , OBJ = 'o'               // build a class instance using the objects between here and the mark       , PUT = 'p'               // store stack top in memo; index is string arg       , BINPUT = 'q'            //   &quot;     &quot;    &quot;   &quot;   &quot; ;   &quot;    &quot; 1-byte arg       , LONG_BINPUT = 'r'       //   &quot;     &quot;    &quot;   &quot;   &quot; ;   &quot;    &quot; 4-byte arg       , SETITEM = 's'           // add key+value pair to dict       , TUPLE = 't'             // build tuple from topmost stack items       , EMPTY_TUPLE = ')'       // push empty tuple       , SETITEMS = 'u'          // modify dict by adding topmost key+value pairs       , BINFLOAT = 'G'          // push float; arg is 8-byte float encoding       // protocol 2       , PROTO = '\x80'          // identify pickle protocol       , NEWOBJ = '\x81'         // build object by applying cls.__new__ to argtuple       , TUPLE1 = '\x85'         // build 1-tuple from stack top       , TUPLE2 = '\x86'         // build 2-tuple from two topmost stack items       , TUPLE3 = '\x87'         // build 3-tuple from three topmost stack items       , NEWTRUE = '\x88'        // push True       , NEWFALSE = '\x89'       // push False       , LONG1 = '\x8a'          // push long from &lt; 256 bytes       , LONG4 = '\x8b'          // push really big long       // protocol 3       , BINBYTES = 'B'          // push bytes; counted binary string argument       , SHORT_BINBYTES = 'C'    //  &quot;     &quot;   ;    &quot;      &quot;       &quot;      &quot; &lt; 256 bytes       ;      var cursor = new ArrayBufferCursor(pickle)      let i = 0;     let opcode = 0;     for (;cursor.hasNext();) {         opcode = cursor.next('Char8');         switch (opcode) {         // protocol 2         case PROTO:             var proto = cursor.next('Uint8');             if (proto !== 2 &amp;&amp; proto !== 3)                 throw 'Unhandled pickle protocol version: ' + proto;             break;         case TUPLE1:             var a = this.stack.pop();             this.stack.push([a]);             break;         case TUPLE2:             var b = this.stack.pop()               , a = this.stack.pop();             this.stack.push([a, b]);             break;         case TUPLE3:             var c = this.stack.pop()               , b = this.stack.pop()               , a = this.stack.pop();             this.stack.push([a, b, c]);             break;         case NEWTRUE:             this.stack.push(true);             break;         case NEWFALSE:             this.stack.push(false);             break;         case LONG1:             var length = cursor.next('Uint8');              this.stack.push(0);             break;         case LONG4:   // UNTESTED, might be broken             var length = cursor.next('Uint32');              this.stack.push(0);             break;          case POP:             this.stack.pop();             break;         case POP_MARK:             var mark = this.marker();             this.stack = this.stack.slice(0, mark);             break;         case DUP:             var value = this.stack[this.stack.length-1];             this.stack.push(value);             break;         case EMPTY_DICT:             this.stack.push({});             break;         case EMPTY_LIST:         case EMPTY_TUPLE:             this.stack.push([]);             break;         case GET:             var index = cursor.readLine();              this.stack.push(this.memo[index]);             break;         case BINGET:             var index = cursor.next('Uint8');             this.stack.push(this.memo[''+index]);             break;         case LONG_BINGET:             var index = cursor.next('Uint32');              this.stack.push(this.memo[''+index]);             break;         case PUT:             var index = cursor.readLine();              this.memo[index] = this.stack[this.stack.length-1];             break;         case BINPUT:             var index = cursor.next('Uint8');;             this.memo['' + index] = this.stack[this.stack.length-1];             break;         case LONG_BINPUT:             var index = cursor.next('Uint32');              this.memo['' + index] = this.stack[this.stack.length-1];             break;         case GLOBAL:             var module = cursor.readLine();              var name = cursor.readLine();              var func = emulated[module + '.' + name];           //if it is a class then emulated must be called first             if (func === undefined) {                 throw &quot;Cannot emulate global: &quot; + module + &quot; &quot; + name;             }             this.stack.push(func);             break;         case OBJ:             var obj = new (this.stack.pop())();             var mark = this.marker();             for (var pos = mark + 1; pos &lt; this.stack.length; pos += 2) {               obj[this.stack[pos]] = this.stack[pos + 1];             }             this.stack = this.stack.slice(0, mark);             this.stack.push(obj);             break;         case BUILD:             var dict = this.stack.pop();             var obj = this.stack.pop();             for ( var p in dict ) {               obj[p] = dict[p];             }             this.stack.push(obj);             break;         case REDUCE:             var args = this.stack.pop();             var func = this.stack[this.stack.length - 1];             this.stack[this.stack.length - 1] = func(args);             break;         case INT:             var value = cursor.readLine();              if (value == '01')                 this.stack.push(true);             else if (value == '00')                 this.stack.push(false);             else                 this.stack.push(parseInt(value));             break;         case BININT:             this.stack.push(cursor.next('Uint32'));             i += 4;             break;         case BININT1:             this.stack.push(cursor.next('Uint8'));             i += 1;             break;         case BININT2:             this.stack.push(cursor.next('Uint16'));             i += 2;             break;         case MARK:             this.stack.push(this.mark);             break;         case FLOAT:             var value = cursor.readLine();             i += value.length + 1;             this.stack.push(parseFloat(value));             break;         case LONG:             var value = cursor.readLine();             i += value.length + 1;             this.stack.push(parseInt(value));             break;         case BINFLOAT:             this.stack.push(cursor.next('Float64'));             i += 8;             break;         case STRING:             var value = cursor.readLine();             i += value.length + 1;             var quotes = &quot;\&quot;'&quot;;             if (value[0] == &quot;'&quot;) {                 if (value[value.length-1] != &quot;'&quot;)                     throw &quot;insecure string pickle&quot;;             } else if (value[0] = '&quot;') {                 if (value[value.length-1] != '&quot;')                     throw &quot;insecure string pickle&quot;;             } else {                 throw &quot;insecure string pickle&quot;;             }             this.stack.push(value.substr(1, value.length-2));             break;         case UNICODE:             var value = cursor.readLine();             i += value.length + 1;             this.stack.push(value);             break;         case BINSTRING:         case BINBYTES:             var length = cursor.next('Uint32');             i += 4;             this.stack.push(cursor.toString(length));             i += length;             break;         case SHORT_BINSTRING:         case SHORT_BINBYTES:             var length = cursor.next('Uint8');             this.stack.push(cursor.toString(length));             i += length;             break;         case BINUNICODE:             var length = cursor.next('Uint32');             i += 4;             this.stack.push(cursor.toString(length));             i += length;             break;         case APPEND:             var value = this.stack.pop();             this.stack[this.stack.length-1].push(value);             break;         case APPENDS:             var mark = this.marker(),                 list = this.stack[mark - 1];             list.push.apply(list, this.stack.slice(mark + 1));             this.stack = this.stack.slice(0, mark);             break;         case SETITEM:             var value = this.stack.pop()               , key = this.stack.pop();             this.stack[this.stack.length-1][key] = value;             break;         case SETITEMS:             var mark = this.marker()               , obj = this.stack[mark - 1];             for (var pos = mark + 1; pos &lt; this.stack.length; pos += 2) {                 obj[this.stack[pos]] = this.stack[pos + 1];             }             this.stack = this.stack.slice(0, mark);             break;         case LIST:         case TUPLE:             var mark = this.marker()               , list = this.stack.slice(mark + 1);             this.stack = this.stack.slice(0, mark);             this.stack.push(list);             break;         case DICT:             var mark = this.marker()                 obj = {};             for (var pos = mark + 1; pos &lt; this.stack.length; pos += 2) {                 obj[this.stack[pos]] = this.stack[pos + 1];             }             this.stack = this.stack.slice(0, mark);             this.stack.push(obj);             break;         case STOP:             return this.stack.pop();         case NONE:             this.stack.push(null);             break;         default:              throw &quot;Unhandled opcode &quot; + opcode + &quot; &quot; + String.fromCharCode(opcode) ;         }     } };  Parser.prototype.marker = function(parser) {     var k = this.stack.length - 1     while (k &gt; 0 &amp;&amp; this.stack[k] !== this.mark) {         --k;     }     return k; }; </code></pre> <p>T.</p>"			2022-04-11 02:27:29.93 UTC
71799197	javascript|python|jquery|ajax|flask	Javascript links with Python not working (using Ajax and Flask)	"<p>I've been trying to make a website that gets information from another website (top 10 best tetris players) and then log it into my console. I'm experimenting with pandas for Python and Javascript with ajax.</p> <p>The original Python code worked in nodejs, but I need it to work on a website, so I tried to adapt by using ajax.</p> <p>Now I'm getting this <a href=""https://i.stack.imgur.com/rWnZ2.png"" rel=""nofollow noreferrer"">error code1</a> and sometimes this <a href=""https://i.stack.imgur.com/Ty79a.png"" rel=""nofollow noreferrer"">error code2</a>. I'm not sure when which one happens. Always code 404 though.</p> <p>Does anyone know how to fix this? Thanks in advance!</p> <p>HTML/Javascript code:</p> <pre><code>&lt;html&gt;  &lt;head&gt;      &lt;title&gt;website test&lt;/title&gt;     &lt;script src=&quot;https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js&quot;&gt;&lt;/script&gt;          &lt;meta charset=&quot;utf-8&quot;&gt;     &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1, shrink-to-fit=no&quot;&gt;    &lt;/head&gt;  &lt;body&gt;     &lt;button&gt;click me for nothing to happen&lt;/button&gt;     &lt;script&gt;         function ajaxCall() {             $.ajax({                 url: &quot;/makeTop10&quot;,                 success: function (data) {                     console.log(data);                     console.log(&quot;call happened.&quot;) //extra test                 }             });         }         ajaxCall();      &lt;/script&gt; &lt;/body&gt;  &lt;/html&gt; </code></pre> <p>Python code:</p> <pre><code>from flask import Flask, render_template import pandas as pd   app = Flask(__name__)   @app.route(&quot;/makeTop10&quot;) def makeTop10():     list = pd.read_html(&quot;https://listfist.com/list-of-tetris-high-scores-nes-pal&quot;)      data = list[0]     output = &quot;&quot;     for i in range(10):         output += &quot;{: &lt;10}{: &lt;20}{: &lt;25}\n&quot;.format(             data.at[i, &quot;Rank&quot;],             data.at[i, &quot;Player Name&quot;],             data.at[i, &quot;Score(2 April, 2022)[source]&quot;],         )      return output   if __name__ == &quot;__main__&quot;:     app.run() </code></pre>"	2022-04-08 14:59:38.653 UTC	71807148	"<p>I just changed your code to this and it's working</p> <p>HTML/Javascript code:</p> <pre class=""lang-html prettyprint-override""><code>&lt;html&gt;  &lt;head&gt;      &lt;title&gt;website test&lt;/title&gt;     &lt;script src=&quot;https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js&quot;&gt;&lt;/script&gt;          &lt;meta charset=&quot;utf-8&quot;&gt;     &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1, shrink-to-fit=no&quot;&gt;    &lt;/head&gt;  &lt;body&gt;     &lt;button&gt;click me for nothing to happen&lt;/button&gt;     &lt;script&gt;         function ajaxCall() {             $.ajax({                 url: &quot;http://127.0.0.1:5000/makeTop10&quot;,                 success: function (data) {                     console.log(data);                     console.log(&quot;call happened.&quot;) //extra test                 }             });         }         ajaxCall();      &lt;/script&gt; &lt;/body&gt;  &lt;/html&gt; </code></pre> <p>Python code:</p> <pre class=""lang-py prettyprint-override""><code>from flask import Flask, render_template import pandas as pd from flask_cors import CORS # added  app = Flask(__name__) CORS(app) # added  @app.route(&quot;/makeTop10&quot;) def makeTop10():     list = pd.read_html(&quot;https://listfist.com/list-of-tetris-high-scores-nes-pal&quot;)      data = list[0]     output = &quot;&quot;     for i in range(10):         output += &quot;{: &lt;10}{: &lt;20}{: &lt;25}\n&quot;.format(             data.at[i, &quot;Rank&quot;],             data.at[i, &quot;Player Name&quot;],             data.at[i, &quot;Score(2 April, 2022)[source]&quot;],         )      return output  if __name__ == &quot;__main__&quot;:     app.run() </code></pre> <p>Result:<br /> <a href=""https://i.stack.imgur.com/bPtcw.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/bPtcw.png"" alt=""enter image description here"" /></a></p>"			2022-04-09 10:17:47.157 UTC
71811369	javascript|python|reactjs|child-process	How do I run a Python script within a JavaScript file	"<p>I am using React.JS to create a website, and I have a button that the user can press that will trigger some python file to be run. I've tried using child_process, but I get a ton of errors that I can't seem to find the answer to. Can anyone tell me where I'm going wrong?</p> <p>This is my code so far:</p> <pre><code>import React from 'react' import '../css/Home.css'   const Home = () =&gt; {      const runPyFile = () =&gt; {         const spawn = require('child_process');              const childPython = spawn('python', ['../python/test.py']);              childPython.stdout.on('data', (data) =&gt; {             console.log(`stdout: ${data}`);         });              childPython.stderr.on('data', (data) =&gt; {             console.log(`stderr: ${data}`);         });              childPython.on('close', (code) =&gt; {             console.log(`child process exited with code ${code}`);         });     };           return (          &lt;body className='home-body'&gt;                      {/* a button that will run the python script */}             &lt;button onClick={runPyFile}&gt;                 Run Python Script             &lt;/button&gt;          &lt;/body&gt;              ) }  export default Home </code></pre> <p>And here is the python file I am trying to run:</p> <pre><code>print('hello world!') </code></pre> <p>When I run all of this, and click this button in the browser, I receive this error: <a href=""https://i.stack.imgur.com/4wpdO.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/4wpdO.png"" alt=""enter image description here"" /></a></p>"	2022-04-09 19:44:29.083 UTC	71811430	<p>You can't do that in client side.</p>			2022-04-09 19:51:52.003 UTC
71811369	javascript|python|reactjs|child-process	How do I run a Python script within a JavaScript file	"<p>I am using React.JS to create a website, and I have a button that the user can press that will trigger some python file to be run. I've tried using child_process, but I get a ton of errors that I can't seem to find the answer to. Can anyone tell me where I'm going wrong?</p> <p>This is my code so far:</p> <pre><code>import React from 'react' import '../css/Home.css'   const Home = () =&gt; {      const runPyFile = () =&gt; {         const spawn = require('child_process');              const childPython = spawn('python', ['../python/test.py']);              childPython.stdout.on('data', (data) =&gt; {             console.log(`stdout: ${data}`);         });              childPython.stderr.on('data', (data) =&gt; {             console.log(`stderr: ${data}`);         });              childPython.on('close', (code) =&gt; {             console.log(`child process exited with code ${code}`);         });     };           return (          &lt;body className='home-body'&gt;                      {/* a button that will run the python script */}             &lt;button onClick={runPyFile}&gt;                 Run Python Script             &lt;/button&gt;          &lt;/body&gt;              ) }  export default Home </code></pre> <p>And here is the python file I am trying to run:</p> <pre><code>print('hello world!') </code></pre> <p>When I run all of this, and click this button in the browser, I receive this error: <a href=""https://i.stack.imgur.com/4wpdO.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/4wpdO.png"" alt=""enter image description here"" /></a></p>"	2022-04-09 19:44:29.083 UTC	71811460	"<p>What you are trying to do is run a python script from within javascript running in the browser on the client side inside a separate process. I'm afraid you cannot do this because it's a security issue to try to break out of the browser sandbox and reach into the user's computer. Browsers don't allow that. You can't even open a file in the user's space outside the browser.</p> <p>You are perhaps confused by the idea that if you are writing server side code, you can do things like this there, but that's only available on the server side.</p> <p>All that said, there are ways to run python code in the browser. Have a look at <a href=""https://brython.info"" rel=""nofollow noreferrer"">brython</a> and <a href=""https://pyodide.org/en/stable"" rel=""nofollow noreferrer"">pyodide</a></p>"			2022-04-09 19:56:52.243 UTC
71860779	javascript|python|encryption|aes|rsa	Javascript (crypto.subtle) vs Python (pycryptodomex) key wrapping	"<p>I have public key encryption working well in Javascript. I'm using AES-GCM wrapped with RSA-OAEP. Encryption/decryption work well in the Javascript version. Now I'm trying to encrypt something server-side (python) and use my existing decryption client-side (window.crypto.subtle). It's failing when I attempt to unwrap the key with this error:</p> <pre><code>OperationError: The operation failed for an operation-specific reason </code></pre> <p>Super helpful error messages! The relevant code in python is:</p> <pre><code>    from Cryptodome.Cipher import AES     from Cryptodome.Random import get_random_bytes     from Cryptodome.Cipher import PKCS1_OAEP     from Cryptodome.PublicKey import RSA      keyPub = RSA.import_key(base64.b64decode(public_key))     rsa_cipher = PKCS1_OAEP.new(keyPub)      aes = get_random_bytes(16)     aes_cipher = AES.new(aes, AES.MODE_GCM)      wrapped = str(base64.b64encode(rsa_cipher.encrypt(aes)), 'ascii') </code></pre> <p>The code to unwrap that is:</p> <pre><code>    window.crypto.subtle.unwrapKey(         'raw',         self.from64(wrapped),         self.keyPair.privateKey,         {             name: &quot;RSA-OAEP&quot;         },         {             name: &quot;AES-GCM&quot;         },         false,         [&quot;decrypt&quot;]     ).then((aesKey) =&gt; { </code></pre> <p>I'm confident in the base64 conversion, because the Python code happily takes my public key, which it wouldn't if the ASN.1 was messed up.</p> <p>Can you spot why the key wrap in Python is failing when I try to unwrap it in Javascript?</p>"	2022-04-13 16:22:41.363 UTC	71862516	"<p>Unfortunately, the error message is very unspecific (as is often the case with the WebCrypto API). However, the posted WebCrypto code works, as the following code snippet shows.</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-js lang-js prettyprint-override""><code>(async () =&gt; {  // For this test a 512 bits RSA key was used. In practice, apply RSA key sizes &gt;= 2048 bits for security reasons!!! var pkcs8DerB64 = ""MIIBVQIBADANBgkqhkiG9w0BAQEFAASCAT8wggE7AgEAAkEA2gdsVIRmg5IH0rG3u3w+gHCZq5o4OMQIeomC1NTeHgxbkrfznv7TgWVzrHpr3HHK8IpLlG04/aBo6U5W2umHQQIDAQABAkEAu7wulGvZFat1Xv+19BMcgl3yhCdsB70Mi+7CH98XTwjACk4T+IYv4N53j16gce7U5fJxmGkdq83+xAyeyw8U0QIhAPIMhbtXlRS7XpkB66l5DvN1XrKRWeB3RtvcUSf30RyFAiEA5ph7eWXbXWpIhdWMoe50yffF7pW+C5z07tzAIH6DKo0CIQCyveSTr917bdIxk2V/xNHxnx7LJuMEC5DcExorNanKMQIgUxHRQU1hNgjIsXXZoKgfaHaa1jUZbmOPlNDvYYVRyS0CIB9ZZee2zubyRla4qN8PQxCJb7DiICmH7nWP7CIvcQwB"" var wrappedKeyB64 = ""LVumLtkD20pvX188VR2QTcDRIOuQlw4vxGFvj9vuEOlAsIvOv/vMcC9C6qCVjI4FuzNWEZ7Xo48Pnu2LnB1vcA==""  var wrappedKey = b642ab(wrappedKeyB64); var wrappingKey = await importWrappingKey(pkcs8DerB64) var unwrappedKey = await window.crypto.subtle.unwrapKey(     'raw',     wrappedKey,     wrappingKey,     {name: ""RSA-OAEP""},     {name: ""AES-GCM""},     false,     [""decrypt""] ); console.log(unwrappedKey)   // Helper ---------------------------------------    async function importWrappingKey(pkcs8DerB64) {          return await window.crypto.subtle.importKey(         ""pkcs8"",         b642ab(pkcs8DerB64),         {name: ""RSA-OAEP"", hash: ""SHA-1""},         false,         [""unwrapKey""]     ); }    function b642ab(base64_string){     return Uint8Array.from(window.atob(base64_string), c =&gt; c.charCodeAt(0)); }  function ab2hex(ab) {      return Array.prototype.map.call(new Uint8Array(ab), x =&gt; ('00' + x.toString(16)).slice(-2)).join(''); }    })();</code></pre> </div> </div> </p> <p>The wrapped key was created using the posted Python code.</p> <hr /> <p>Inspect your code for differences. A possible bug could be the key import. Check in your code if SHA-1 is explicitly specified as digest in the 3rd parameter of the <a href=""https://developer.mozilla.org/en-US/docs/Web/API/SubtleCrypto/importKey"" rel=""nofollow noreferrer""><code>importKey()</code></a> call. The Python code uses SHA-1 by default for the OAEP and MGF1 digest (see <a href=""https://pycryptodome.readthedocs.io/en/latest/src/cipher/oaep.html#Crypto.Cipher.PKCS1_OAEP.new"" rel=""nofollow noreferrer""><code>PKCS1_OAEP.new()</code></a>).</p>"			2022-04-13 18:50:00.537 UTC
71872166	javascript|python|arrays|indexing|caesar-cipher	Alternative of Python's Array.index() function in JavaScript that treats negative indices the same as Python's Array.index()?	"<p><strong>TLDR:</strong> Is there any alternative of Python's <code>Array.index()</code> method in JavaScript that treats negative indices the same as Python's <code>Array.index()</code>?</p> <br> <p>For background, I'm writing a code for the <a href=""https://en.wikipedia.org/wiki/Caesar_cipher"" rel=""nofollow noreferrer"">Caesar cipher</a> (Wikipedia link).</p> <p>I have written the following code in Python:</p> <pre><code>alphabet = list('abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz')  # list('abc') == ['a', 'b', 'c']  def caesar(text, shift, direction):     endText = ''     if direction == 'encode':         shift = shift     else:         shift *= -1     for i in text:         oldIndex = alphabet.index(i)         newIndex = oldIndex + shift         newLetter = alphabet[newIndex]         endText += newLetter     print(endText)  caesar('zeus', 5, 'encode')  # 'ejzx' caesar('ejzx', 5, 'decode')  # 'zeus' </code></pre> <p>When I enter a word that has letters that are towards the end of the English alphabet (i.e. containing letters such as <em>v, w, x, y, z</em> etc), it <strong>encodes</strong> the word and when I <strong>decode</strong> the result, it gives the word I encoded previously without any errors.</p> <p>When I write the exact same code in JavaScript, and when I encode the same message I used in the Python code ('zeus'), it gives me <code>ejzx</code>; however, when I <strong>decode</strong> <code>ejzx</code>, it gives me <code>undefinedeus</code> instead of <code>zeus</code> i.e. it does decode the <code>eus</code>, but not the initial <code>z</code>.</p> <h3>JavaScript:</h3> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-js lang-js prettyprint-override""><code> let alphabet = 'abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz'.split('');   function caesar(text, shift, direction) {    let endText = '';    if (direction == 'encode') {      shift = shift;    } else if (direction == 'decode') {      shift *= -1;    }    for (let i of text) {      let oldIndex = alphabet.indexOf(i);      let newIndex = oldIndex + shift;      let newLetter = alphabet[newIndex];      endText += newLetter;    }    console.log(endText)  }    caesar('zeus', 5, 'encode') // 'ejzx'  caesar('ejzx', 5, 'decode') // 'undefinedeus'</code></pre> </div> </div> </p> <p>I tried replacing the <code>indexOf()</code> with <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/at"" rel=""nofollow noreferrer""><code>Array.at()</code></a> (MDN link), but it returns <code>undefinedundefinedundefinedundefined</code> both in encoding and decoding.</p> <p>How could I fix the code so that it works the same as Python?</p>"	2022-04-14 13:07:18.213 UTC	71872692	"<p>I don't know pyton, but in javascript the index ever starts from 0.<br> In this way, in your example, to encode the letter &quot;z&quot; (index: 25, position: 26), you add 5 to the index and it returns the letter &quot;e&quot; (index: 30, position: 31), so far so good. To decode the letter &quot;e&quot;, javascript finds it at index 4 (5th position) and by subtracting 5 it turns out that the index you are looking for for the new letter is -1 and since that index does not exist, it returns undefined. To avoid this, when you decode, add 26 to the &quot;shift&quot; (an alphabet) so that it uses the second set of characters from the alphabet variable, and since it will always go backwards (subtract), it will always find the corresponding character.</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-js lang-js prettyprint-override""><code>let alphabet = 'abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz'.split('');  function caesar(text, shift, direction) {    let endText = '';    if (direction == 'encode') {      shift = shift;    } else if (direction == 'decode') {      shift = (shift * -1) + 26;    }    for (let i of text) {       let oldIndex = alphabet.indexOf(i);      let newIndex = oldIndex + shift;      let newLetter = alphabet[newIndex];      endText += newLetter;    }    console.log(endText)  }    caesar('zeus', 5, 'encode') // 'ejzx'  caesar('ejzx', 5, 'decode') // 'zeus'</code></pre> </div> </div> </p>"			2022-04-14 13:45:04.487 UTC
71872166	javascript|python|arrays|indexing|caesar-cipher	Alternative of Python's Array.index() function in JavaScript that treats negative indices the same as Python's Array.index()?	"<p><strong>TLDR:</strong> Is there any alternative of Python's <code>Array.index()</code> method in JavaScript that treats negative indices the same as Python's <code>Array.index()</code>?</p> <br> <p>For background, I'm writing a code for the <a href=""https://en.wikipedia.org/wiki/Caesar_cipher"" rel=""nofollow noreferrer"">Caesar cipher</a> (Wikipedia link).</p> <p>I have written the following code in Python:</p> <pre><code>alphabet = list('abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz')  # list('abc') == ['a', 'b', 'c']  def caesar(text, shift, direction):     endText = ''     if direction == 'encode':         shift = shift     else:         shift *= -1     for i in text:         oldIndex = alphabet.index(i)         newIndex = oldIndex + shift         newLetter = alphabet[newIndex]         endText += newLetter     print(endText)  caesar('zeus', 5, 'encode')  # 'ejzx' caesar('ejzx', 5, 'decode')  # 'zeus' </code></pre> <p>When I enter a word that has letters that are towards the end of the English alphabet (i.e. containing letters such as <em>v, w, x, y, z</em> etc), it <strong>encodes</strong> the word and when I <strong>decode</strong> the result, it gives the word I encoded previously without any errors.</p> <p>When I write the exact same code in JavaScript, and when I encode the same message I used in the Python code ('zeus'), it gives me <code>ejzx</code>; however, when I <strong>decode</strong> <code>ejzx</code>, it gives me <code>undefinedeus</code> instead of <code>zeus</code> i.e. it does decode the <code>eus</code>, but not the initial <code>z</code>.</p> <h3>JavaScript:</h3> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-js lang-js prettyprint-override""><code> let alphabet = 'abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz'.split('');   function caesar(text, shift, direction) {    let endText = '';    if (direction == 'encode') {      shift = shift;    } else if (direction == 'decode') {      shift *= -1;    }    for (let i of text) {      let oldIndex = alphabet.indexOf(i);      let newIndex = oldIndex + shift;      let newLetter = alphabet[newIndex];      endText += newLetter;    }    console.log(endText)  }    caesar('zeus', 5, 'encode') // 'ejzx'  caesar('ejzx', 5, 'decode') // 'undefinedeus'</code></pre> </div> </div> </p> <p>I tried replacing the <code>indexOf()</code> with <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/at"" rel=""nofollow noreferrer""><code>Array.at()</code></a> (MDN link), but it returns <code>undefinedundefinedundefinedundefined</code> both in encoding and decoding.</p> <p>How could I fix the code so that it works the same as Python?</p>"	2022-04-14 13:07:18.213 UTC	71872520	"<p>You don't have to replace indexOf() with Array.prototype.at(), instead of that you have to replace alphabet[newIndex] to alphabet.at(newIndex);</p> <pre><code>let alphabet = 'abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz'.split('');   function caesar(text, shift, direction) {    let endText = '';    if (direction == 'encode') {      shift = shift;    } else if (direction == 'decode') {      shift *= -1;    }    for (let i of text) {      let oldIndex = alphabet.indexOf(i);      let newIndex = oldIndex + shift;      let newLetter = alphabet.at(newIndex);      endText += newLetter;    }    console.log(endText)  } </code></pre> <p>Hope this helps.</p>"			2022-04-14 13:34:03.497 UTC
71887946	javascript|python	Is there a javascript like operator for increment (++) in python?	<p>Is there any way to do this javascript code in python syntax:</p> <pre><code>var x = 1; x++; </code></pre> <p>without:</p> <pre><code>x=1 x=x+1 </code></pre>	2022-04-15 19:04:48.09 UTC	71887962	"<p>No, in Python you can only do this:</p> <pre><code>x += 1 </code></pre> <p>or in alternative</p> <pre><code>x = x+1 </code></pre>"			2022-04-15 19:06:19.86 UTC
71899309	javascript|python	Translating a specific Promise from Javascript to Python	"<p>I am trying to translate this piece of code from Javascript to Python but could not find an equivalent of a Promise and an async function in Python.</p> <pre><code>async function sendRequest(options) {     return new Promise(resolve =&gt; {         request(options, function(error, response, body) {             if (error) throw new Error(error)             resolve({                 response: response,                 body: body             })         })     }) }  </code></pre>"	2022-04-17 04:39:18.733 UTC	71899445	"<p>You are looking for python's <a href=""https://docs.python.org/3/library/asyncio.html"" rel=""nofollow noreferrer"">asyncio</a>. The high-level equivalent of a javascript <code>Promise</code> is an <a href=""https://docs.python.org/3/library/asyncio-task.html#awaitables"" rel=""nofollow noreferrer"">awaitable</a>. Since you want to return an awaitable from a function, you should use the <code>async</code> keyword to return a <a href=""https://docs.python.org/3/library/asyncio-task.html#coroutines"" rel=""nofollow noreferrer"">coroutine</a>, which is a type of awaitable.</p> <p>As for making an async http request, I would recommend <a href=""https://docs.aiohttp.org/en/stable/"" rel=""nofollow noreferrer"">aiohttp</a>.</p> <p>It sounds like this might be some sort of assignment, so I'm not going to fill in all the blanks for you, but the aiohttp link I provided has plenty of good examples and comprehensive docs that you can dig into. The below is a template for you to work from:</p> <pre class=""lang-py prettyprint-override""><code>import aiohttp import asyncio  # this function returns a coroutine, which must be awaited # elsewhere. you can use return statements normally within its # body, but be aware that those will be returned from the # coroutine once it has been awaited, not directly from # send_request async def send_request(options):     # do stuff with aiohttp...  # this is how to call from synchronous code loop = asyncio.get_event_loop() loop.run_until_complete(send_request())  # this is how to call from within another async function async def foo():     await send_request(options)  </code></pre>"			2022-04-17 05:13:17.233 UTC
71924271	javascript|python|html|flask	How would I pass a JavaScript parameter into my python code in flask?	"<pre><code>&lt;script type=&quot;text/javascript&quot;&gt;       function reply_click(clicked_id)       {         document.getElementById(&quot;viewFlashcardLabel&quot;).innerHTML = '{{ flashcards.query.filter_by(id = clicked_id).first().title }}';          } &lt;/script&gt; </code></pre> <p>The parameter clicked_id is not being recognised by the python code in the {{ }}. What would be an easy and secure way to fix the bug?</p> <p><strong>Edit:</strong></p> <p>HTML file:</p> <pre><code>    &lt;script&gt;       function getFlashcard(id)       {         $.ajax({           type: 'POST',           url: &quot;{{ url_for('views.get_flashcard') }}&quot;,           data: {&quot;id&quot; : 1},           success: function(){             alert(&quot;success&quot;)           },           error: function(){             alert(&quot;error&quot;)           }         });         e.preventDefault();       }            &lt;/script&gt; </code></pre> <p>Python file:</p> <pre><code>@views.route('/get_flashcard', methods=['GET', 'POST']) @login_required def get_flashcard():     if request.method == 'POST':         print(&quot;recieved request&quot;) </code></pre> <p>The problem is that my ajax call is not being received by my python code as my test message is not being printed.</p>"	2022-04-19 11:33:28.423 UTC	71924546	"<p>You are not able to do that with jinja template alone.</p> <p>Add a new API, its url is something like <code>/api/get_title_by_id</code>. It can query the title by id parameter.</p> <p>In you your javascript code, make an ajax call to the new API to get the title.</p>"			2022-04-19 11:55:56.967 UTC
71928158	javascript|python|node.js|tensorflow2.0|tensorflow.js	how can i implement or convert a python code to javascript to be used with tensorflow js	"<p>how could I use this code in python with tensorflow js? it is to occupy it with a model that was trained with the dataset tf.keras.applications.ResNet152(input_shape=(256,256,3),weights='imagenet', include_top=False, classes=numClasses)</p> <p>I can't find information</p> <p>#ONE IMAGE PREDICTION</p> <p>url = &quot;https://images.unsplash.com/photo-1577705998148-6da4f3963bc8?ixid=MnwxMjA3fDB8MHxzZWFyY2h8Nnx8Y2FyZGJvYXJkfGVufDB8fDB8fA%3D%3D&amp;ixlib=rb-1.2.1&amp;auto=format&amp;fit=crop&amp;w=500&amp;q=60&quot;</p> <pre><code> image = tf.keras.utils.get_file(&quot;Image1.jpg&quot;, origin=url)          img = tf.keras.preprocessing.image.load_img(image, target_size=(256,256))     img_array = tf.keras.preprocessing.image.img_to_array(img)     img_array = tf.expand_dims(img_array,0)          predictions = model.predict(img_array) </code></pre>"	2022-04-19 16:19:03.947 UTC	72000097	"<p>in case it helps someone, use these tensorflow js functions</p> <pre><code>var img=&quot;&quot;;           img=document.getElementById(&quot;myImage3&quot;); //&lt;img src='myImage'/&gt;           x = tf.browser.fromPixels(img);         var readyfied = tf.image         .resizeBilinear(x, [256, 256], true)         .div(255)         .reshape([1, 256, 256, 3]);          x=tf.expandDims(x,0);         x.print();          res= this.model.predict(readyfied); </code></pre>"			2022-04-25 13:09:23.577 UTC
71930309	javascript|python|selenium|google-chrome	"Selenium Python : Excuting javascript code, but it deosnt take effect"	"<p>I am trying to change the text of a div. I tried to change it by (send_keys) function, but it didn't work. So I tried to change it with java script, like so :</p> <pre><code>element = self.chrome.find_element_by_xpath('//div[@class=&quot;ace_line&quot;]') self.chrome.execute_script(&quot;arguments[0].textContent = 'hello world'&quot;, element) </code></pre> <p>Note: I am trying to change the text of the div because this div is the container of an email message</p> <p>It worked but then When I click on the button &quot;send&quot;, it send an empty email. Is there a way that I Confirm The text I changed ? or something in javascript that do that kind of stuff ?</p>"	2022-04-19 19:27:52.91 UTC	71930830	"<p>In all likelihood, you are successfully editing the text of the div, but your change is not being picked up by the JS event listener which sets the email body string when you click send.</p> <p>When filling out forms, <a href=""https://stackoverflow.com/a/18558014/5770841"">send keys is the correct approach</a>, which leads me to believe you are not selecting the proper element to type into. You would expect to see an <a href=""https://www.w3schools.com/html/html_forms.asp"" rel=""nofollow noreferrer"">input field</a> (<code>&lt;input type=&quot;text&quot; ...&gt;</code>) or maybe a <a href=""https://www.w3schools.com/html/html_forms.asp"" rel=""nofollow noreferrer"">textarea</a> (<code>&lt;textarea ...&gt;</code>) as the element which has focus when the user types.</p> <p>The first thing to do is to click on the input field you desire to type into, then right-click on it and inspect element, which should lead you to the innermost element you type into. It's probably not a div (although it may be contained in one).</p> <p>In the bizarre scenario they do have you type into a div, you appear to have done the right thing. Although typically the quotations are done differently, and its possible due to the subtleties between the <code>textContent</code> and <code>innerText</code> attributes that you might want to try:</p> <pre><code>element = self.chrome.find_element_by_xpath(&quot;//div[@class='ace_line']&quot;) self.chrome.execute_script(&quot;arguments[0].innerText = 'hello world'&quot;, element) </code></pre> <p>In this unlikely scenario you'd probably want to click on the div to give it focus and/or type by sending keys so that your typing is picked up the JS keypress listener the site would need to have configured.</p> <p><strong>Bottom line</strong>: You should first use the chrome/firefox inspector and document.getElementBy... in the console to figure out what is actually going on in the webpage. There should be some input element (<code>var input = document.getElementBy...;</code>) you can select in the console whose value property (<code>input.value</code>) will change as you type. Find/muck with this element programatically in the console, confirming that it sends the email with the desired body, then you can code it up in python.</p>"			2022-04-19 20:15:48.38 UTC
71993695	javascript|python|web-scraping|beautifulsoup	Extract data from text/javascript using python	"<p>How to extract <strong>'https://www.example.com/get_file/4/b315c8e0d6fad43d89445378b5292eed6981a999ba/174000/174469/174469.mp4/?br=707'</strong> &amp; using 'video_url'</p> <pre><code>[&lt;script src=&quot;https://www.example.com/player/kt_player.js?v=5.5.1&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;, &lt;script type=&quot;text/javascript&quot;&gt;                             /* &lt;![CDATA[ */                                                             function getEmbed(width, height) {                                     if (width &amp;&amp; height) {                                         return '&lt;iframe width=&quot;' + width + '&quot; height=&quot;' + height + '&quot; src=&quot;https://www.example.com/embed/174469&quot; frameborder=&quot;0&quot; allowfullscreen webkitallowfullscreen mozallowfullscreen oallowfullscreen msallowfullscreen&gt;&lt;/iframe&gt;';                                     }                                     return '&lt;iframe width=&quot;852&quot; height=&quot;480&quot; src=&quot;https://www.example.com/embed/174469&quot; frameborder=&quot;0&quot; allowfullscreen webkitallowfullscreen mozallowfullscreen oallowfullscreen msallowfullscreen&gt;&lt;/iframe&gt;';                                 }                                                          var flashvars = {                                                                     video_id: '174469',                                                                     video_categories: 'example_category1', 'example_category2',                                                                     video_tags: 'example_tag1', 'example_tag2',                                                                     license_code: '$603825119921245',                                                                   rnd: '1650848189',                                                                  video_url: 'https://www.example.com/get_file/4/b315c8e0d6fad43d89445378b5292eed6981a999ba/174000/174469/174469.mp4/?br=707',                                                                    postfix: '.mp4',                                                                    video_url_text: '480p',                                                                     video_alt_url: 'https://www.example.com/get_file/4/ffafbe6913656c2250c34bf20fd945a5f86898d749/174000/174469/174469_720p.mp4/?br=1290',                                                                  video_alt_url_text: '720p',                                                                     video_alt_url_hd: '1',                                                                  video_alt_url2: 'https://www.example.com/get_file/4/66c8876a9fd8cd3d823d06880c1797b1424f3200df/174000/174469/174469_1080p.mp4/?br=2559',                                                                    video_alt_url2_text: '1080p',                                                                   video_alt_url2_hd: '1',                                                                     preview_url: 'https://www.example.com/contents/videos_screenshots/174000/174469/preview.jpg',                                                                   preview_url1: 'https://www.example.com/contents/videos_screenshots/174000/174469/preview.mp4.jpg',                                                                  preview_height1: '480',                                                                     preview_url2: 'https://www.example.com/contents/videos_screenshots/174000/174469/preview_720p.mp4.jpg',                                                                     preview_height2: '720',                                                                     preview_url3: 'https://www.example.com/contents/videos_screenshots/174000/174469/preview_1080p.mp4.jpg',                                                                    preview_height3: '1080',                                                                    skin: 'youtube.css',                                                                    logo_position: '0,0',                                                                   logo_anchor: 'topleft',                                                                     hide_controlbar: '1',                                                                   hide_style: 'fade',                                                                     volume: '1',                                                                    related_src: 'https://www.example.com/related_videos_html/174469/',                                                                     adv_pre_vast: 'https://twinrdsrv.com/preroll.engine?id=613eb379-62dd-49ef-8299-db2b5b2af4d7&amp;zid=12861&amp;cvs={ClientVideoSupport}&amp;time={TimeOffset}&amp;stdtime={StdTimeOffset}&amp;abr={IsAdblockRequest}&amp;pageurl={PageUrl}&amp;tid={TrackingId}&amp;res={Resolution}&amp;bw={BrowserWidth}&amp;bh={BrowserHeight}&amp;kw={Keywords}&amp;referrerUrl={ReferrerUrl}&amp;pw={PlayerWidth}&amp;ph={PlayerHeight}',                                                                   adv_pre_skip_duration: '5',                                                                     adv_pre_skip_text_time: 'Skip ad in %time',                                                                     adv_pre_skip_text: 'Skip ad',                                                                   adv_post_vast: 'https://twinrdsrv.com/preroll.engine?id=613eb379-62dd-49ef-8299-db2b5b2af4d7&amp;zid=12861&amp;cvs={ClientVideoSupport}&amp;time={TimeOffset}&amp;stdtime={StdTimeOffset}&amp;abr={IsAdblockRequest}&amp;pageurl={PageUrl}&amp;tid={TrackingId}&amp;res={Resolution}&amp;bw={BrowserWidth}&amp;bh={BrowserHeight}&amp;kw={Keywords}&amp;referrerUrl={ReferrerUrl}&amp;pw={PlayerWidth}&amp;ph={PlayerHeight}',                                                                  adv_post_skip_duration: '5',                                                                    adv_post_skip_text_time: 'Skip ad in %time',                                                                    adv_post_skip_text: 'Skip ad',                                                                  lrcv: '1651572296480833989009946',                                                                  vast_timeout1: '10',                                                                    player_width: '882',                                                                    player_height: '496.9014084507',                                                                    embed: '1'                                                          };                                                         var player_obj = kt_player('kt_player', 'https://www.example.com/player/kt_player.swf?v=5.5.1', '100%', '100%', flashvars);                                                                 window.onload = function() {                                         $('.pop-adv .btn').click(function(e) {                                             player_obj.play();                                         });                                     }; /* ]]&gt; */                         &lt;/script&gt;] </code></pre> <p>I tried;</p> <pre><code>import json  script= &quot;&quot;&quot;[&lt;script src=&quot;https://www.example.com/player/kt_player.js?v=5.5.1&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;, &lt;script type=&quot;text/javascript&quot;&gt;                             /* &lt;![CDATA[ */                                                             function getEmbed(width, height) {                                     if (width &amp;&amp; height) {                                         return '&lt;iframe width=&quot;' + width + '&quot; height=&quot;' + height + '&quot; src=&quot;https://www.example.com/embed/174469&quot; frameborder=&quot;0&quot; allowfullscreen webkitallowfullscreen mozallowfullscreen oallowfullscreen msallowfullscreen&gt;&lt;/iframe&gt;';                                     }                                     return '&lt;iframe width=&quot;852&quot; height=&quot;480&quot; src=&quot;https://www.example.com/embed/174469&quot; frameborder=&quot;0&quot; allowfullscreen webkitallowfullscreen mozallowfullscreen oallowfullscreen msallowfullscreen&gt;&lt;/iframe&gt;';                                 }                                                          var flashvars = {                                                                     video_id: '174469',                                                                     video_categories: 'example_category1, example_category2',                                                                   video_tags: 'example_tag1, esample_tag2',                                                                   license_code: '$603825119921245',                                                                   rnd: '1650848189',                                                                  video_url: 'https://www.example.com/get_file/4/b315c8e0d6fad43d89445378b5292eed6981a999ba/174000/174469/174469.mp4/?br=707',                                                                    postfix: '.mp4',                                                                    video_url_text: '480p',                                                                     video_alt_url: 'https://www.example.com/get_file/4/ffafbe6913656c2250c34bf20fd945a5f86898d749/174000/174469/174469_720p.mp4/?br=1290',                                                                  video_alt_url_text: '720p',                                                                     video_alt_url_hd: '1',                                                                  video_alt_url2: 'https://www.example.com/get_file/4/66c8876a9fd8cd3d823d06880c1797b1424f3200df/174000/174469/174469_1080p.mp4/?br=2559',                                                                    video_alt_url2_text: '1080p',                                                                   video_alt_url2_hd: '1',                                                                     preview_url: 'https://www.example.com/contents/videos_screenshots/174000/174469/preview.jpg',                                                                   preview_url1: 'https://www.example.com/contents/videos_screenshots/174000/174469/preview.mp4.jpg',                                                                  preview_height1: '480',                                                                     preview_url2: 'https://www.example.com/contents/videos_screenshots/174000/174469/preview_720p.mp4.jpg',                                                                     preview_height2: '720',                                                                     preview_url3: 'https://www.example.com/contents/videos_screenshots/174000/174469/preview_1080p.mp4.jpg',                                                                    preview_height3: '1080',                                                                    skin: 'youtube.css',                                                                    logo_position: '0,0',                                                                   logo_anchor: 'topleft',                                                                     hide_controlbar: '1',                                                                   hide_style: 'fade',                                                                     volume: '1',                                                                    related_src: 'https://www.example.com/related_videos_html/174469/',                                                                     adv_pre_vast: 'https://twinrdsrv.com/preroll.engine?id=613eb379-62dd-49ef-8299-db2b5b2af4d7&amp;zid=12861&amp;cvs={ClientVideoSupport}&amp;time={TimeOffset}&amp;stdtime={StdTimeOffset}&amp;abr={IsAdblockRequest}&amp;pageurl={PageUrl}&amp;tid={TrackingId}&amp;res={Resolution}&amp;bw={BrowserWidth}&amp;bh={BrowserHeight}&amp;kw={Keywords}&amp;referrerUrl={ReferrerUrl}&amp;pw={PlayerWidth}&amp;ph={PlayerHeight}',                                                                   adv_pre_skip_duration: '5',                                                                     adv_pre_skip_text_time: 'Skip ad in %time',                                                                     adv_pre_skip_text: 'Skip ad',                                                                   adv_post_vast: 'https://twinrdsrv.com/preroll.engine?id=613eb379-62dd-49ef-8299-db2b5b2af4d7&amp;zid=12861&amp;cvs={ClientVideoSupport}&amp;time={TimeOffset}&amp;stdtime={StdTimeOffset}&amp;abr={IsAdblockRequest}&amp;pageurl={PageUrl}&amp;tid={TrackingId}&amp;res={Resolution}&amp;bw={BrowserWidth}&amp;bh={BrowserHeight}&amp;kw={Keywords}&amp;referrerUrl={ReferrerUrl}&amp;pw={PlayerWidth}&amp;ph={PlayerHeight}',                                                                  adv_post_skip_duration: '5',                                                                    adv_post_skip_text_time: 'Skip ad in %time',                                                                    adv_post_skip_text: 'Skip ad',                                                                  lrcv: '1651572296480833989009946',                                                                  vast_timeout1: '10',                                                                    player_width: '882',                                                                    player_height: '496.9014084507',                                                                    embed: '1'                                                          };                                                         var player_obj = kt_player('kt_player', 'https://www.example.com/player/kt_player.swf?v=5.5.1', '100%', '100%', flashvars);                                                                 window.onload = function() {                                         $('.pop-adv .btn').click(function(e) {                                             player_obj.play();                                         });                                     }; /* ]]&gt; */                         &lt;/script&gt;]&quot;&quot;&quot;  json_data= json.loads(script) print(json_data['video_url']) </code></pre> <p>and got this error,</p> <p><strong>json.decoder.JSONDecodeError: Expecting value: line 1 column 2 (char 1)</strong></p>"	2022-04-25 01:39:58.41 UTC	71993894	"<p>It's not an ideal solution because it relies on the source document having very consistent formatting, but you could try parsing it &quot;manually&quot; with a regular expression:</p> <p>The following assumes you've set <code>script</code> to contain the text downloaded above.</p> <pre class=""lang-py prettyprint-override""><code>import re  def extract(name, script):     return re.search(rf'\b{name}\s*:\s*(\'|&quot;)(.*?)\1', script)[2]  extract('video_url', script) 'https://www.example.com/get_file/4/b315c8e0d6fad43d89445378b5292eed6981a999ba/174000/174469/174469.mp4/?br=707'  extract('video_alt_url', script) 'https://www.example.com/get_file/4/ffafbe6913656c2250c34bf20fd945a5f86898d749/174000/174469/174469_720p.mp4/?br=1290'  extract('video_alt_url2', script) 'https://www.example.com/get_file/4/66c8876a9fd8cd3d823d06880c1797b1424f3200df/174000/174469/174469_1080p.mp4/?br=2559' </code></pre> <p>The regex works like so:</p> <ul> <li><code>\b{name}\s*:\s*</code> matches the <code>name: </code> part with variable spacing allowed</li> <li><code>('|&quot;)(.*?)\1</code> matches either a <code>'some_text'</code> or <code>&quot;some_text&quot;</code> style string</li> <li>The <code>[2]</code> at the end takes the second group, which is the <code>(.*?)</code> matching the text inside the quotes</li> </ul>"			2022-04-25 02:23:33.353 UTC
72006068	python|multithreading|timeout|brython	Python in javascript (Brython) execute function with timeout	"<p>I'm trying to execute a python function with a timeout, I've found some good ideas on stackoverflow but they don't seem to work for me as I'm executing the python function from javascript (using Brython) and multithreading/sleep don't work well (no sleep function in javascript). Any idea relatively easy to implement that would allow me to terminate a function if its execution takes more than 10s (see logic below):</p> <pre><code>def function_to_execute:     print(&quot;function executing&quot;)  time_out=10 exec(function_to_execute) time_function_started=time() if time()&gt;(time_function_startedtime_out) and function_to_execute not complete: (simplified for clarity)     function_to_execute.terminate() </code></pre> <p>Thanks,</p>"	2022-04-25 21:48:33.797 UTC	72021690	"<p>The solution that I know is by using 2 thread worker and kill it. one worker for running the function, another one for maintain the running time.</p> <p>I think you can use <code>python-worker</code> (<a href=""https://pypi.org/project/python-worker/"" rel=""nofollow noreferrer"">link</a>)</p> <pre><code>import time from worker import worker  @worker def run_with_limit(worker_object, timeout):     time.sleep(timeout)     worker_object.abort()  @worker def my_controlled_function(a, b, c):    ...  ## then you can run it  run_with_limit(my_controlled_function(1, 2, 3), timeout=10) </code></pre> <p>if you dont want to use <code>time.sleep</code> you have an alternative like this</p> <pre><code>@worker def run_with_limit(worker_object, timeout):     while 1:         if worker_object.work_time &gt;= 10:             worker_object.abort()             break </code></pre>"			2022-04-26 23:39:11.31 UTC
72022382	javascript|python|html|selenium|web-scraping	Python & Selenium: How to get values generated by JavaScript	"<p>I use Selenium in Python for scraping. I can't get values though these values are displayed on the browser.</p> <p>So I checked the HTML source code, then I found that there are no values in HTML as below.</p> <p><strong>HTML</strong></p> <pre><code>&lt;div id=&quot;pos-list-body&quot; class=&quot;list-body&quot;&gt;  &lt;/div&gt; </code></pre> <p>But there are values when I checked developer tool in chrome.</p> <p><strong>DevTools</strong></p> <pre><code>&lt;div id=&quot;pos-list-body&quot; class=&quot;list-body&quot;&gt;     &lt;div class=&quot;list-body-row&quot; id=&quot;pos-row-1&quot;&gt;         &lt;div class=&quot;pos-list-col-1&quot;&gt;             &lt;input class=&quot;list-checkbox&quot; type=&quot;checkbox&quot; value=&quot;1&quot;&gt;         &lt;/div&gt;         &lt;div class=&quot;detail-data pos-list-col-2&quot;&gt;             1         &lt;/div&gt;         &lt;div class=&quot;detail-data pos-list-col-3&quot;&gt;             a         &lt;/div&gt;         ...     &lt;/div&gt;     &lt;div class=&quot;list-body-row&quot; id=&quot;pos-row-2&quot;&gt;         &lt;div class=&quot;pos-list-col-1&quot;&gt;             &lt;input class=&quot;list-checkbox&quot; type=&quot;checkbox&quot; value=&quot;2&quot;&gt;         &lt;/div&gt;         &lt;div class=&quot;detail-data pos-list-col-2&quot;&gt;             2         &lt;/div&gt;         &lt;div class=&quot;detail-data pos-list-col-3&quot;&gt;             b         &lt;/div&gt;         ...     &lt;/div&gt;     ... &lt;/div&gt; </code></pre> <p>It seems that these values generated by JavaScript or something.</p> <p>There is no <code>iframe</code> in sorce code.</p> <p>How can I get these values with python?</p> <p>It would be appreciated if you could give me some hint.</p>"	2022-04-27 01:45:33.947 UTC	72028125	"<h2><a href=""https://developer.mozilla.org/en-US/docs/Web/API/Element/outerHTML"" rel=""nofollow noreferrer"">Element.outerHTML</a></h2> <p>The <em><code>outerHTML</code></em> attribute of the Element gets the serialized HTML fragment describing the element including its descendants. It can also be set to replace the element with nodes parsed from the given string. However to only obtain the HTML representation of the contents of an element ideally you need to use the <em><code>innerHTML</code></em> property instead. So reading the value of <em><code>outerHTML</code></em> returns a DOMString containing an HTML serialization of the element and its descendants. Setting the value of outerHTML replaces the element and all of its descendants with a new DOM tree constructed by parsing the specified htmlString.</p> <hr /> <h2>Solution</h2> <p>To get the <em>html</em> generated by JavaScript you can use the following solution:</p> <pre><code>print(driver.execute_script(&quot;return document.getElementById('pos-list-body').outerHTML&quot;)) </code></pre>"			2022-04-27 11:45:33.147 UTC
72022382	javascript|python|html|selenium|web-scraping	Python & Selenium: How to get values generated by JavaScript	"<p>I use Selenium in Python for scraping. I can't get values though these values are displayed on the browser.</p> <p>So I checked the HTML source code, then I found that there are no values in HTML as below.</p> <p><strong>HTML</strong></p> <pre><code>&lt;div id=&quot;pos-list-body&quot; class=&quot;list-body&quot;&gt;  &lt;/div&gt; </code></pre> <p>But there are values when I checked developer tool in chrome.</p> <p><strong>DevTools</strong></p> <pre><code>&lt;div id=&quot;pos-list-body&quot; class=&quot;list-body&quot;&gt;     &lt;div class=&quot;list-body-row&quot; id=&quot;pos-row-1&quot;&gt;         &lt;div class=&quot;pos-list-col-1&quot;&gt;             &lt;input class=&quot;list-checkbox&quot; type=&quot;checkbox&quot; value=&quot;1&quot;&gt;         &lt;/div&gt;         &lt;div class=&quot;detail-data pos-list-col-2&quot;&gt;             1         &lt;/div&gt;         &lt;div class=&quot;detail-data pos-list-col-3&quot;&gt;             a         &lt;/div&gt;         ...     &lt;/div&gt;     &lt;div class=&quot;list-body-row&quot; id=&quot;pos-row-2&quot;&gt;         &lt;div class=&quot;pos-list-col-1&quot;&gt;             &lt;input class=&quot;list-checkbox&quot; type=&quot;checkbox&quot; value=&quot;2&quot;&gt;         &lt;/div&gt;         &lt;div class=&quot;detail-data pos-list-col-2&quot;&gt;             2         &lt;/div&gt;         &lt;div class=&quot;detail-data pos-list-col-3&quot;&gt;             b         &lt;/div&gt;         ...     &lt;/div&gt;     ... &lt;/div&gt; </code></pre> <p>It seems that these values generated by JavaScript or something.</p> <p>There is no <code>iframe</code> in sorce code.</p> <p>How can I get these values with python?</p> <p>It would be appreciated if you could give me some hint.</p>"	2022-04-27 01:45:33.947 UTC	72023249	"<p>If ID <code>pos-list-body</code> is unique in <code>HTML-DOM</code>, then your best bet is to use <code>explicit wait</code> with <code>innerText</code></p> <p><strong>Code:</strong></p> <pre><code>wait = WebDriverWait(driver, 20) print(wait.until(EC.presence_of_element_located((By.ID, &quot;pos-list-body&quot;))).get_attribute('innerText')) </code></pre> <p><strong>Imports:</strong></p> <pre><code>from selenium.webdriver.support.ui import WebDriverWait from selenium.webdriver.common.by import By from selenium.webdriver.support import expected_conditions as EC </code></pre>"			2022-04-27 04:24:03.617 UTC
72022382	javascript|python|html|selenium|web-scraping	Python & Selenium: How to get values generated by JavaScript	"<p>I use Selenium in Python for scraping. I can't get values though these values are displayed on the browser.</p> <p>So I checked the HTML source code, then I found that there are no values in HTML as below.</p> <p><strong>HTML</strong></p> <pre><code>&lt;div id=&quot;pos-list-body&quot; class=&quot;list-body&quot;&gt;  &lt;/div&gt; </code></pre> <p>But there are values when I checked developer tool in chrome.</p> <p><strong>DevTools</strong></p> <pre><code>&lt;div id=&quot;pos-list-body&quot; class=&quot;list-body&quot;&gt;     &lt;div class=&quot;list-body-row&quot; id=&quot;pos-row-1&quot;&gt;         &lt;div class=&quot;pos-list-col-1&quot;&gt;             &lt;input class=&quot;list-checkbox&quot; type=&quot;checkbox&quot; value=&quot;1&quot;&gt;         &lt;/div&gt;         &lt;div class=&quot;detail-data pos-list-col-2&quot;&gt;             1         &lt;/div&gt;         &lt;div class=&quot;detail-data pos-list-col-3&quot;&gt;             a         &lt;/div&gt;         ...     &lt;/div&gt;     &lt;div class=&quot;list-body-row&quot; id=&quot;pos-row-2&quot;&gt;         &lt;div class=&quot;pos-list-col-1&quot;&gt;             &lt;input class=&quot;list-checkbox&quot; type=&quot;checkbox&quot; value=&quot;2&quot;&gt;         &lt;/div&gt;         &lt;div class=&quot;detail-data pos-list-col-2&quot;&gt;             2         &lt;/div&gt;         &lt;div class=&quot;detail-data pos-list-col-3&quot;&gt;             b         &lt;/div&gt;         ...     &lt;/div&gt;     ... &lt;/div&gt; </code></pre> <p>It seems that these values generated by JavaScript or something.</p> <p>There is no <code>iframe</code> in sorce code.</p> <p>How can I get these values with python?</p> <p>It would be appreciated if you could give me some hint.</p>"	2022-04-27 01:45:33.947 UTC	72094180	"<p>based on other answers that seems to be not working as a solution to your issue, one possibility left which is there are more then one HTML element in the DOM that has the ID : <code>pos-list-body</code>, and I guess the first retrieved element by this ID is really empty and it is not your targeted element. Solution : try to select the <code>&lt;div&gt;</code> using Xpath instead of id, OR get all the elements with this id in a list and print the <code>innerHTML</code> of each one of them to get your targeted element index.</p>"			2022-05-03 02:11:32.233 UTC
72034217	python|selenium|web-scraping	Python Selenium - Scraping javascript pagination	"<p>I've been building this scraper (with some massive help from users here) to get data on some companies' debt with the public sector and I've been able to get to the site, input the desired search parameters and scrape the first 50 results (out of 300). The problem I've encountered is that this page's pagination has the following characteristics:</p> <ol> <li>It does not possess a next page button</li> <li>The URL doesn't change with the pagination</li> <li>The pagination is done with a Javascript script</li> </ol> <p>Here's the code so far:</p> <pre><code>path_driver = &quot;C:/Users/CS330584/Documents/Documentos de Defesa da Concorrência/Automatização de Processos/chromedriver.exe&quot; website = &quot;https://sat.sef.sc.gov.br/tax.NET/Sat.Dva.Web/ConsultaPublicaDevedores.aspx&quot; value_search = &quot;300&quot; final_table = []   driver = webdriver.Chrome(path_driver) driver.get(website) search_max = driver.find_element_by_id(&quot;Body_Main_Main_ctl00_txtTotalDevedores&quot;) search_max.send_keys(value_search) btn_consult = driver.find_element_by_id(&quot;Body_Main_Main_ctl00_btnBuscar&quot;) btn_consult.click()  driver.implicitly_wait(10)  cnpjs = driver.find_elements_by_xpath(&quot;//*[@id='Body_Main_Main_grpDevedores_gridView']/tbody/tr/td[1]&quot;) empresas = driver.find_elements_by_xpath(&quot;//*[@id='Body_Main_Main_grpDevedores_gridView']/tbody/tr/td[2]&quot;) dividas = driver.find_elements_by_xpath(&quot;//*[@id='Body_Main_Main_grpDevedores_gridView']/tbody/tr/td[3]&quot;) for i in range(len(empresas)):     temp_data = {'CNPJ' : cnpjs[i].text,                'Empresas' : empresas[i].text,                 'Divida' : dividas[i].text                 }     final_table.append(temp_data) </code></pre> <p>How can I navigate through the pages in order to scrape their data ? Thank you all for the help!</p>"	2022-04-27 19:20:21.247 UTC	72034406	"<p>If you inspect the page and look at what happens when you click on the next page button, you'll see in the  tag they're actually executing some javascript. It looks like this:</p> <pre><code>&lt;a href=&quot;javascript:GridView_ScrollToTop(&amp;quot;Body_Main_Main_grpDevedores_gridView&amp;quot;);__doPostBack('ctl00$ctl00$ctl00$Body$Main$Main$grpDevedores$gridView','Page$5')&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;6&lt;/font&gt;&lt;/font&gt;&lt;/a&gt; </code></pre> <p>But if you take that javascript call out of that href tag (and fix the &quot; to be quotations) you'll see two function calls that look like this:</p> <pre><code>GridView_ScrollToTop(&quot;Body_Main_Main_grpDevedores_gridView&quot;); __doPostBack('ctl00$ctl00$ctl00$Body$Main$Main$grpDevedores$gridView','Page$5'); </code></pre> <p>Now I didn't take the time to analyze these functions in depth, but you don't really need to. You see the first call causes the browser to scroll to the top, and the second call actually causes the next page of data to load on the page. For your purposes, you only care about the second call.</p> <p>You can mess around with this in the browser; Just perform your search and then, in the JS console, paste in the JS call, exchanging the number for the page you want to look at.</p> <p>If you can do it via JS in the console on the webpage, you can do it with Selenium. You would do something like this to &quot;click&quot; each tab:</p> <pre><code>for(i in range(1, 7)):   js = &quot;__doPostBack('ctl00$ctl00$ctl00$Body$Main$Main$grpDevedores$gridView','Page$&quot; + str(i) + &quot;');&quot;   driver.execute_script(js)   #do scraping stuff </code></pre>"			2022-04-27 19:39:40.167 UTC
72066060	javascript|python|node.js|mql5	"MQL5, Python, Javascript integration. Two (or more) computers"	"<p>Any MetaTrader/MQL + python integration gurus here?</p> <p>It is my understanding (please correct me if I'm wrong) that I can follow the instructions <a href=""https://www.mql5.com/en/docs/integration/python_metatrader5"" rel=""nofollow noreferrer"">here</a> to build the equivalent of a MetaTrader 5 EA (Expert Advisor) in python instead of MQL5, calling the python functions on that documentation page to handle all the broker interaction, and all the other logic and calculations and whatever else can be in my python code.</p> <p>Assuming I've understood that correctly, I want to extend that in the following way.</p> <ol> <li>Set up all the python stuff as per that documentation page, on a Windows PC (of course, because it won't run on a Mac or anywhere else) -- this is computer #1.</li> <li>Build a platform-independent (ie. PC, Mac, Linux) node/javascript app that can run on any other computer(s) -- computer #2.</li> <li>Computer #2 needs to somehow call the python functions on computer #1 when the functionality they provide is needed (getting tick, order, deal, position, etc. info; sending orders; etc.), and do everything else an EA and indicators would do (all the math, decision making, etc), in the javascript code on computer #2.</li> </ol> <p>So, two questions:</p> <ul> <li>Question 1. I'm 99% certain this is possible.  I think it means setting up a web/API server on computer #1 (with node/python/both?) and then the JS app on computer #2 is a simple web client (browser, command line node app, etc.) that sends instructions to the computer #1 web/API server, just like any other kind of web based client-server app. However, that's just my best guess, so is that an ok approach?  1a. If it is, I don't know where to start, what to look up, how to even research it, let alone do it, or 1b. if that approach is significantly flawed, then what is the best/correct approach?</li> <li>Question 2. I could be reading it wrong, but that documentation page seems to be focussed on using those MT5 python functions to collect data for external analysis. The suggestion there might be that these functions are not intended for interactive live algo trading. Perhaps they're too slow for the high paced information exchange and manipulation required for live trading...?  Or... is the idea of using these python functions for live algo trading perfectly reasonable?</li> </ul> <p>Has anyone done any of this kind of thing?  Can anyone advise if it's reasonable and how I should approach this?</p> <p>Thanks!</p> <hr /> <h2>Update about a week later</h2> <p>In response to <strong>@PSavva</strong>'s question in comments: End goal primarily is build a (much less featured but enough for my needs) platform for my own automated trading - with a few specific requirements:</p> <ol> <li>Compatible with my preferred brokers who now only offer MT5.</li> <li>Able to both run &amp; be developed natively on my Mac (so no wine or virtualizing Windows).†</li> <li>JS preferably (I already know it), but I might consider python (if I can pick that up well enough without too high a learning curve for me). (A native Swift [for Mac] app is an option long term — I’m learning it but I don’t know it well enough yet. JS for an MVP to start with would be better.)</li> <li>Possibly other requirements that escape my mind at the moment. </li> </ol> <p>[† <em>I understand I can't do it ALL on Mac. Python works fine on Mac, but trying the required <code>pip install MetaTrader5</code> step gives a platform incompatibility error (of course). So I understand I need a Windows PC to run the bare minimum MT5 and its python integration functions, for broker connection and communication, but I want everything else (logic, decision making, UI, charting, etc.) developed and running on a Mac (on the same local network -- my network at home initially, then ultimately both in a data center physically close to the exchange -- to minimize latency).</em>]</p>"	2022-04-30 05:52:44.53 UTC	72133042	"<p>You can try MetaApi <a href=""https://metaapi.cloud"" rel=""nofollow noreferrer"">https://metaapi.cloud</a> cloud service which provides REST API and WebSocket API access to both MetaTrader 4 and MetaTrader 5 accounts.</p> <p>Official REST API documentation: <a href=""https://metaapi.cloud/docs/client"" rel=""nofollow noreferrer"">https://metaapi.cloud/docs/client</a></p> <p>SDKs: <a href=""https://metaapi.cloud/sdks"" rel=""nofollow noreferrer"">https://metaapi.cloud/sdks</a> (javascript, python and Java SDKs are provided as per May 2022)</p> <p>It supports reading account information, positions, orders, trade history, receiving quotes, and accessing market data.</p>"			2022-05-05 20:05:58.88 UTC
72103710	python|selenium|web|web-scraping|beautifulsoup	Python web scraping javascript table using selenium	"<p>Hello to all this is my first post hope you are good!</p> <p>I try to extract the content of the table located on this site: <a href=""https://pamestoixima.opap.gr/"" rel=""nofollow noreferrer"">https://pamestoixima.opap.gr/</a> . I want to extract the table as is. I have tried several ways such as beautifulSoup , pandas, and selenium but with no success! The latest code I have tried is this:</p> <pre><code>from bs4 import BeautifulSoup from selenium import webdriver  driver = webdriver.Chrome( executable_path=r'C:path to /chromedriver.exe') driver.get('https://pamestoixima.opap.gr/')  soup = BeautifulSoup(driver.page_source,'lxml') author_element = soup.find(&quot;table&quot;, class_=&quot;results-table&quot;)  print(author_element.text) driver.quit() </code></pre> <p>The error message I get is this:</p> <blockquote> <p>USB: usb_device_handle_win.cc:1049 Failed to read descriptor from node connection:</p> </blockquote> <p>Thank you in advance for any help!</p>"	2022-05-03 18:14:03.39 UTC	72103903	"<p>Do you specifically want to use Selenium? I haven't looked into detail but I think you can find all the data in this file: <a href=""https://api.opap.gr/sb/sport/soccer/coupon?locale=el&amp;onlyLive=false&amp;marketIds=1%2C2%2C31%2C21%2C18%2C18%2C18%2C14&amp;fromDate=2022-05-03&amp;toDate=2022-05-03"" rel=""nofollow noreferrer"">https://api.opap.gr/sb/sport/soccer/coupon?locale=el&amp;onlyLive=false&amp;marketIds=1%2C2%2C31%2C21%2C18%2C18%2C18%2C14&amp;fromDate=2022-05-03&amp;toDate=2022-05-03</a></p> <p>In many cases you can use the Developer Tools in your browser to find a direct link to the data instead of scraping the page, which is usually much more difficult.</p>"			2022-05-03 18:31:00.407 UTC
72158129	python|asp.net|web-scraping|python-requests	How can I Python web scrape a CSV download button that uses a JavaScript function?	"<p>I am trying to Python web scrape this webpage daily for a school project: <a href=""https://thereserve2.apx.com/myModule/rpt/myrpt.asp?r=206"" rel=""nofollow noreferrer"">https://thereserve2.apx.com/myModule/rpt/myrpt.asp?r=206</a></p> <p>I would like to have this Python script NOT open up a browser window to perform this action. I am trying to get better at Python and would like to learn ways of scraping without going the Selenium route.</p> <p>In the top right, there is a download as TXT button, which calls a JavaScript function to retrieve the full data from this report. I would like to be able to mimic that request from Python and retrieve the produced txt file and then save it to a specific path.</p> <p>So far, I've opened up the Network tab in the Chrome Developer Tools and recorded what the button click is doing. It appears to be sending a post request to the URL <a href=""https://thereserve2.apx.com/myModule/include/rptdownload.asp"" rel=""nofollow noreferrer"">https://thereserve2.apx.com/myModule/include/rptdownload.asp</a> with the data below. <a href=""https://i.stack.imgur.com/8e5IZ.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/8e5IZ.png"" alt=""DeveloperTools"" /></a></p> <p>I am trying to mimic that same post request in Python so that I can get the txt file that the request would generate.</p> <pre><code>from urllib import request, parse  data_dict = {         'Data':'Stamp_1',         'Title':'Retired Offset Credits',         'Exclude':',rhid,ftType,Other Attributes here,Make Public,ahid,',         'Columns':'all,Account Holder,Quantity of Offset Credits,FacilityName,Email,Status Effective',         'Masks':'|||||MM/DD/YYYY',         'ClassMasks':',,#.0,,,',         'Headings':',,,Project Name,,',         'FormatType':'txt'         }  data = parse.urlencode(data_dict).encode() req =  request.Request('https://thereserve2.apx.com/myModule/include/rptdownload.asp', data=data_dict) resp = request.urlretrieve(req, 'download.txt') </code></pre> <p>This isn't working - I'm getting a &quot;TypeError: expected string or bytes-like object.&quot; I feel like I'm getting close here, but I just can't seem to translate the post request into the file download or table pull that I desire. Any help would be super appreciated.</p>"	2022-05-08 04:44:53.863 UTC	72158352	"<p>Needed the cookie as well to make it work~</p> <pre><code>import requests from io import StringIO import pandas as pd  data = {     'myFilter': '',     'Data': 'Stamp_0',     'Title': 'Retired Offset Credits',     'Exclude': ',rhid,ftType,Other Attributes here,Make Public,ahid,',     'Columns': 'all,Account Holder,Quantity of Offset Credits,FacilityName,Email,Status Effective',     'Masks': '|||||MM/DD/YYYY',     'ClassMasks': ',,#.0,,,',     'Headings': ',,,Project Name,,',     'Parameters': '',     'ParametersOriginal': '',     'SortORder': '',     'FormatType': 'txt',     'ReplaceExpression': '',     'ReplaceValue': '', }  cookies = {     'ASPSESSIONIDCGTRQSDS': 'DFDMDAFDFEPACLKJAAPHHBDH', }  # Get the file response = requests.post('https://thereserve2.apx.com/myModule/include/rptdownload.asp', cookies=cookies, data=data)  # Look at the file df = pd.read_table(StringIO(response.text), sep=',', on_bad_lines='warn') print(df.head())  # Write the file with open('download.txt', 'wb') as f:     f.write(response.content) </code></pre> <p>Output:</p> <pre><code>   Vintage                 Offset Credit Serial Numbers  Quantity of Offset Credits Status Effective Project ID                                       Project Name                     Project Type Protocol Version         Project Site Location Project Site State Project Site Country  Additional Certification(s) CORSIA Eligible                  Account Holder         Retirement Reason             Retirement Reason Details  Unnamed: 16 0     2021   CAR-1-US-888-4-666-TX-2021-6665-1 to 17444                       17444       12/09/2021     CAR888                           Angelina County Landfill  Landfill Gas Capture/Combustion      Version 3.0                        Lufkin              TEXAS                   US                          NaN              No  Element Markets Emissions, LLC  On Behalf of Third Party                                   NaN          NaN 1     2021   CAR-1-US-1247-37-234-MT-2021-6653-1 to 110                         110       04/20/2022    CAR1247  Bluesource - Carroll Avoided Grassland Convers...     Avoided Grassland Conversion      Version 1.0             Valley County, MT            MONTANA                   US                          NaN              No                     Cool Effect     Environmental Benefit                                   NaN          NaN 2     2021  CAR-1-MX-1282-42-938-PU-2021-6736-1 to 1604                        1604       02/17/2022    CAR1282       Captura de carbono en San Rafael Ixtapalucan                    Forestry - MX      Version 1.5        San Rafael Ixtapalucan             PUEBLA                   MX                          NaN              No                Cultivo Land PBC  On Behalf of Third Party  Meta / Facebook Sustainability Goals          NaN 3     2021     CAR-1-MX-1282-42-938-PU-2021-6734-1 to 5                           5       02/17/2022    CAR1282       Captura de carbono en San Rafael Ixtapalucan                    Forestry - MX      Version 1.5        San Rafael Ixtapalucan             PUEBLA                   MX                          NaN              No                Cultivo Land PBC  On Behalf of Third Party  Meta / Facebook Sustainability Goals          NaN 4     2021   CAR-1-MX-1415-42-938-OA-2021-6719-1 to 213                         213       12/06/2021    CAR1415  Carbono, Agua y Biodiversidad Indígena Capulálpam                    Forestry - MX      Version 2.0  Capulálpam de Méndez, Oaxaca             OAXACA                   MX                          NaN              No                     Cool Effect     Environmental Benefit                                   NaN          NaN </code></pre>"			2022-05-08 05:30:59.773 UTC
72163549	javascript|python	how to run python script in javascript	<p><strong>how I use python scrip in JavaScript ?</strong></p> <p>I want to make a live web scraper. And Python is the best for web scraping. But I'm trying to run Python code on the front-end. So that the performance of my application is good.</p>	2022-05-08 17:31:03.203 UTC	72163957	"<p>I'm not a Python developer, so maybe python is better for web scraping... however web craping is done on the back-end, and there for you would not need python on the front-end (it is an option, but it wont make a difference).</p> <p>In fact, JavaScript would perform better than python on the front end because it is 1 - made for the browser without the need for plug-ins, and 2 JS is the fastest dynamic language.</p> <p>my advise would be to send the data from your python backend in JSON to your JS front end, and you will get the best of both worlds.</p>"			2022-05-08 18:21:08.357 UTC
72163549	javascript|python	how to run python script in javascript	<p><strong>how I use python scrip in JavaScript ?</strong></p> <p>I want to make a live web scraper. And Python is the best for web scraping. But I'm trying to run Python code on the front-end. So that the performance of my application is good.</p>	2022-05-08 17:31:03.203 UTC	72163589	<pre><code>&lt;!DOCTYPE html&gt; &lt;html lang=&quot;en&quot;&gt; &lt;head&gt;     &lt;link rel=&quot;stylesheet&quot; href=&quot;https://pyscript.net/alpha/pyscript.css&quot; /&gt;     &lt;script defer src=&quot;https://pyscript.net/alpha/pyscript.js&quot;&gt;&lt;/script&gt; &lt;/head&gt; &lt;body&gt;     &lt;py-script&gt;          print('Now you can!')      &lt;/py-script&gt; &lt;/body&gt; &lt;/html&gt; </code></pre>			2022-05-08 17:35:31.863 UTC
72186646	javascript|python-3.x|django|session|browser	End Session When browser is closed in python django and javascript	"<p>I have created logout def in python, in that def I am deleting session that I have created after login the user.</p> <p>I wish to end/del session when the user closes the browser using(X) OR using(alt+4).</p> <p>how do I call logout url in javascript when user close the browser.</p> <p>Here is def logout:</p> <pre><code>@login_required def logout(request):     username = request.session['username']     ip = settings.IP     headers = settings.HEADERS     del request.session['username'] </code></pre> <p>Here is urls.py</p> <pre><code>from django.urls import path from . import views  urlpatterns = [     path('logout', views.logout, name=&quot;logout&quot;), ] </code></pre>"	2022-05-10 12:50:44.94 UTC	72210796	"<p>Just set the <code>SESSION_EXPIRE_AT_BROWSER_CLOSE</code> setting to true, so that Django's session cookies are only valid for the length of the browser session.</p> <p>If <code>SESSION_EXPIRE_AT_BROWSER_CLOSE</code> is set to True, Django will use browser-length cookies – cookies that expire as soon as the user closes their browser.</p>"			2022-05-12 06:08:01.663 UTC
72200210	javascript|python|converters	reading JavaScript object in a file into a Python array	"<p>I have a javascript file that has an object I'd like to be read by Python (Python 3 is just fine).  Something like this:</p> <pre class=""lang-js prettyprint-override""><code> let variable_i_do_not_want = 'foo' let function_i_do_not_wnt = function() {  }  // .. etc ..  // --- begin object I want --- myObject = {     var1: 'value-1',     var2: 'value-2',     fn2: function() {        &quot;I don't need functions..&quot;     },     mySubObject: {        var3: 'value-3',        .. etc ..     } } // --- end object I want ---  // .. more stuff I don't want ..  </code></pre> <p>I want to convert <code>myObject</code> to a python dict object.  Note I don't really need the functions, just keys and values.</p> <p>I'm fine with (and capable) adding comment markers before/after and isolating the object.  But I think I need a library to convert that string into a Python dict. Is this possible?</p>"	2022-05-11 11:25:54.31 UTC	72202925	"<p>Doing this using python would be a lot of work that can be avoided if you could add a few things directly in your javascript file. (as you told you could modify the js file)</p> <p>I assume that you have nodejs and npm preinstalled (if not then you can install it from <a href=""https://nodejs.org/en/download/"" rel=""nofollow noreferrer"">here</a></p> <p>You need to add these lines of code at the end of the JS file.</p> <pre><code>const fs = require(&quot;fs&quot;);  const getVals = (obj) =&gt; {   let myData = {};   for (const key in obj) {     if (       !(typeof obj[key] === &quot;function&quot;) &amp;&amp; // ignore functions       (!(typeof obj[key] == &quot;object&quot;) || Array.isArray(obj[key])) // ignore objects (except arrays)     ) {       myData[key] = obj[key];     } else if (typeof obj[key] === &quot;object&quot;) { // if it's an object, recurse       myData = {         ...myData,         ...getVals(obj[key]),      };     }   }   return myData; };  // storing the data into a json file fs.writeFile(   &quot;myjsonfile.json&quot;,   JSON.stringify(JSON.stringify(getVals(myObject))), //change your variable name here instead of myObject (if needed)   (err) =&gt; {     if (err) throw err;     console.log(&quot;complete&quot;);   } ); </code></pre> <p>once you add this you can run the js file by</p> <pre><code>~$ npm init -y ~$ node yourjsfile.js </code></pre> <p>This will make a new file named myjsonfile.json with the data which you can load from python like this</p> <pre><code>import json  with open('myjsonfile.json') as file:     d=json.loads(file.read()) #your dict     print(d) </code></pre> <p>;)</p>"			2022-05-11 14:34:32.463 UTC
72201124	python|turtle-graphics	"Converted a code from javascript to python, tryin to use Python Turtle"	"<p>The code under does not draw any image: &quot;&quot;&quot;</p> <pre><code>import turtle  import numpy as np  turtle = turtle.Turtle() steps = 24000 size = 61  def walk(i):     turtle.penup()     term =  1.0357902468 * 2 * np.pi * i/steps     turtle.goto(size * np.sin(term), size * np.cos(term))     turtle.pendown()     len = 5+2.5*np.sin(0.5 * np.pi + term)*np.cos(0.5 * np.pi + term)     l = 0.02     if l &lt; len:         turtle.right(np.sin(l + steps/8 * term))         turtle.forward(l)         l = l * 1.01     return i &lt; steps  i=2 walk(i) &quot;&quot;&quot; </code></pre> <p>Does it just not work and is unfixable, or is there something i am missing?</p>"	2022-05-11 12:32:16.49 UTC	72204483	"<p>To my eye, it seems like you used an <code>if</code> when you meant a <code>while</code>.  Making that substitution, and tidying up the code, it does draw something:</p> <pre><code>from turtle import Screen, Turtle from math import sin, cos, pi  STEPS = 24000 SIZE = 61  def walk(i):     turtle.penup()     term = 1.0357902468 * 2 * pi * i/STEPS     turtle.goto(SIZE * sin(term), SIZE * cos(term))     turtle.pendown()      length = 5 + 2.5 * sin(pi/2 + term) * cos(pi/2 + term)     l = 0.02      while l &lt; length:         turtle.right(sin(l + STEPS/8 * term))         turtle.forward(l)         l *= 1.01      return i &lt; STEPS  screen = Screen()  turtle = Turtle() turtle.speed('fastest')  # because I have no patience  walk(2)  # return value ignored  screen.exitonclick() </code></pre> <p>The next question to ponder is whether you're expecting <code>right()</code> to operate in degrees (the default) or radians (an option) which JavaScript uses.</p>"			2022-05-11 16:23:58.327 UTC
72211439	javascript|python|html|robotframework	how to run python function which is called from JavaScript where the input is passed from html text box	"<p>I have written html code for a text box, when I enter input to html text box, this input should be passed to JavaScript variable. Inside JavaScript I called a python function and this python function should receive the input from html text box input which is passed to JavaScript variable and get executed. Anyone help me with this...</p>"	2022-05-12 07:12:53.757 UTC	72211577	"<p>I found a similar query asked on this platform 9 years ago. Some folks have provided a solution to make an AJAX call to your python code. Please have a look at that <a href=""https://stackoverflow.com/questions/13175510/call-python-function-from-javascript-code"">thread</a> might be helpful to you in some way. Thank you.</p>"			2022-05-12 07:24:55.977 UTC
72239228	python|youtube-api|youtube-data-api|google-api-python-client	"How to get Youtube channel's email using using Python, Javascript or an API"	"<p>Does Youtube provides any API to get channel emails using Oauth?</p> <p>Or How can I get the email in About Section in the provided image using scraping with Python.</p> <p><a href=""https://i.stack.imgur.com/J8yqZ.png"" rel=""nofollow noreferrer"">About section Youtube email</a></p>"	2022-05-14 10:13:01.583 UTC	72241870	"<p>Going though the YouTube api if you use the <a href=""https://developers.google.com/youtube/v3/docs/channels/list?apix=true&amp;apix_params=%7B%22part%22%3A%5B%22snippet%22%5D%2C%22id%22%3A%5B%22UCyqzvMN8newXIxyYIkFzPvA%22%5D%7D"" rel=""nofollow noreferrer"">channels.list</a> method.  with the snippit</p> <p>As follows</p> <pre><code># -*- coding: utf-8 -*-  # Sample Python code for youtube.channels.list # See instructions for running these code samples locally: # https://developers.google.com/explorer-help/code-samples#python  import os  import google_auth_oauthlib.flow import googleapiclient.discovery import googleapiclient.errors  scopes = [&quot;https://www.googleapis.com/auth/youtube.readonly&quot;]  def main():     # Disable OAuthlib's HTTPS verification when running locally.     # *DO NOT* leave this option enabled in production.     os.environ[&quot;OAUTHLIB_INSECURE_TRANSPORT&quot;] = &quot;1&quot;      api_service_name = &quot;youtube&quot;     api_version = &quot;v3&quot;     client_secrets_file = &quot;YOUR_CLIENT_SECRET_FILE.json&quot;      # Get credentials and create an API client     flow = google_auth_oauthlib.flow.InstalledAppFlow.from_client_secrets_file(         client_secrets_file, scopes)     credentials = flow.run_console()     youtube = googleapiclient.discovery.build(         api_service_name, api_version, credentials=credentials)      request = youtube.channels().list(         part=&quot;snippet&quot;,         id=&quot;CHANNELID&quot; )     response = request.execute()      print(response)  if __name__ == &quot;__main__&quot;:     main() </code></pre> <p>You can then see the description of the channel in the results. If the owner of the channel included the email address there then you will see it.  The description is shown in the about tab of the channel</p>"			2022-05-14 15:55:32.253 UTC
72242514	javascript|python|json	How to export python variable as javascript file	"<p>I have a python variable in jupyter notebook</p> <pre><code>allFolders = {'1': { '2': {'3': { 'A' : {}, 'B' : {}, 'C': {}}}}} </code></pre> <p>I am wondering if there is a way to export this variable as a javascript file? What I currently have is:</p> <pre><code>file = open('allFolders.js','w') file.write(allFolders) file.close </code></pre> <p>Which does create a javascript file. However, does my python variable 'allFolders' need to be converted to JSON before this to be valid? My end goal is to import my 'allFolders.js' file into a 'directory.js' file so that 'directory.js' may use the contents of 'allFolders.js' as a const.</p> <pre><code>const {allFolders} = require('./allFolders.js'); </code></pre> <p>But this doesn't seem to work. What steps am I missing here? I am very new to Javascript/JSON.</p>"	2022-05-14 17:24:20.897 UTC	72242542	"<p>You can't write a <code>dict</code> object to the file. Try this</p> <pre><code>import json  file = open('allFolders.js', 'w') file.write(json.dumps([allFolders])) file.close </code></pre> <p>Passing <strong>allFolders</strong> <code>dict</code> as a <code>list</code> encloses it in square brackets essentially making it an <strong>JSON</strong> object.</p>"			2022-05-14 17:29:34.433 UTC
72242514	javascript|python|json	How to export python variable as javascript file	"<p>I have a python variable in jupyter notebook</p> <pre><code>allFolders = {'1': { '2': {'3': { 'A' : {}, 'B' : {}, 'C': {}}}}} </code></pre> <p>I am wondering if there is a way to export this variable as a javascript file? What I currently have is:</p> <pre><code>file = open('allFolders.js','w') file.write(allFolders) file.close </code></pre> <p>Which does create a javascript file. However, does my python variable 'allFolders' need to be converted to JSON before this to be valid? My end goal is to import my 'allFolders.js' file into a 'directory.js' file so that 'directory.js' may use the contents of 'allFolders.js' as a const.</p> <pre><code>const {allFolders} = require('./allFolders.js'); </code></pre> <p>But this doesn't seem to work. What steps am I missing here? I am very new to Javascript/JSON.</p>"	2022-05-14 17:24:20.897 UTC	72242538	"<p>Since your <code>all-folders</code> variable is a nested dictionary, why not export it as a <code>.json</code> instead of a <code>.js</code> file?</p> <p>If you won't have any additional functionality like functions or additional variables inside your <code>Allfolders.js</code> file and only hold the dictionary object, Then it's better if you export it as a <code>.json</code> file and add/import the dictionary object/json value to a variable inside <code>directory.js</code> file</p>"			2022-05-14 17:29:11.84 UTC
72243590	javascript|python|browser|client-side	Trigger A Python Script By Using JavaScript	"<p>I am doing a little project where i have prepared the back end in python and the graphic user interface woth HTML, CSS &amp; JS.</p> <p>The python script doesn't require any external librariesand the only thing that it does is opening a JSON file with the data processed, since it's a game the results are casually generated, and because of this I don't have to pass any parameters to the script. The problem is that I don't know how to trigger the script so it generates the json that i can access trough JabaScript.</p> <p>the scheme of the project is this: index.html</p> <p>pages (folder)</p> <ul> <li>newGame.html</li> <li>loadGame.html</li> <li>rules.html</li> </ul> <p>python (folder)</p> <ul> <li>python_script1.py</li> <li>python_script2.py</li> <li>python_script3.py</li> <li>main.py</li> </ul> <p>specifically i have to trigger the script once the user has loaded the newGame page or the loadGame one.</p> <p>(obiuvsly the js isn't node.js is actual client-side JavaScript)</p> <p>I obiuvsly did some research and i found the pyodyde open source project does what i want, the fact is that i can't figure out how to connect the interface file with the back-end one with this resource.</p>"	2022-05-14 20:16:42.913 UTC	72243826	"<p>There is a new library called PyScript (it can help you run python in your HTML), all you need to do to install the cli is doing this command: <code>pip install pyscript-cli</code> (This command will install the cli not the library). then you should do this command: <code>pyscript wrap python_file.py</code> (NOTE: this will convert the python file to an html file so the python file name would be the name of the html file) And it should be done. The HTML code would be this:</p> <pre class=""lang-html prettyprint-override""><code>&lt;!DOCTYPE html&gt; &lt;html lang=&quot;en&quot;&gt; &lt;head&gt;     &lt;title&gt;Homepage&lt;/title&gt;     &lt;link rel=&quot;stylesheet&quot; href=&quot;https://pyscript.net/alpha/pyscript.css&quot;/&gt;     &lt;script defer src=&quot;https://pyscript.net/alpha/pyscript.js&quot;&gt;&lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;py-script&gt; Code here &lt;/py-script&gt; &lt;/body&gt; &lt;/html&gt; </code></pre>"			2022-05-14 21:00:31.553 UTC
72243590	javascript|python|browser|client-side	Trigger A Python Script By Using JavaScript	"<p>I am doing a little project where i have prepared the back end in python and the graphic user interface woth HTML, CSS &amp; JS.</p> <p>The python script doesn't require any external librariesand the only thing that it does is opening a JSON file with the data processed, since it's a game the results are casually generated, and because of this I don't have to pass any parameters to the script. The problem is that I don't know how to trigger the script so it generates the json that i can access trough JabaScript.</p> <p>the scheme of the project is this: index.html</p> <p>pages (folder)</p> <ul> <li>newGame.html</li> <li>loadGame.html</li> <li>rules.html</li> </ul> <p>python (folder)</p> <ul> <li>python_script1.py</li> <li>python_script2.py</li> <li>python_script3.py</li> <li>main.py</li> </ul> <p>specifically i have to trigger the script once the user has loaded the newGame page or the loadGame one.</p> <p>(obiuvsly the js isn't node.js is actual client-side JavaScript)</p> <p>I obiuvsly did some research and i found the pyodyde open source project does what i want, the fact is that i can't figure out how to connect the interface file with the back-end one with this resource.</p>"	2022-05-14 20:16:42.913 UTC	72246099	"<p>But than, once i typed in the command and created the html file from the python script, how do I connect it to the &quot;newLevel&quot; page?</p>"			2022-05-15 06:47:49.703 UTC
72243590	javascript|python|browser|client-side	Trigger A Python Script By Using JavaScript	"<p>I am doing a little project where i have prepared the back end in python and the graphic user interface woth HTML, CSS &amp; JS.</p> <p>The python script doesn't require any external librariesand the only thing that it does is opening a JSON file with the data processed, since it's a game the results are casually generated, and because of this I don't have to pass any parameters to the script. The problem is that I don't know how to trigger the script so it generates the json that i can access trough JabaScript.</p> <p>the scheme of the project is this: index.html</p> <p>pages (folder)</p> <ul> <li>newGame.html</li> <li>loadGame.html</li> <li>rules.html</li> </ul> <p>python (folder)</p> <ul> <li>python_script1.py</li> <li>python_script2.py</li> <li>python_script3.py</li> <li>main.py</li> </ul> <p>specifically i have to trigger the script once the user has loaded the newGame page or the loadGame one.</p> <p>(obiuvsly the js isn't node.js is actual client-side JavaScript)</p> <p>I obiuvsly did some research and i found the pyodyde open source project does what i want, the fact is that i can't figure out how to connect the interface file with the back-end one with this resource.</p>"	2022-05-14 20:16:42.913 UTC	72251829	"<h1>solution</h1> <p>Ok, with some other research i found out how to solve my problem. But firstable I want to thank you guys for recommending me the PyScript library.</p> <p>The problem I was having is that i needed to connect a python file within the pyscript tag. At first i tought that I had to import it with the <code>import</code> keyword and than executing the file. But than I discovered that the py-script tag has an <code>src</code> attribute and you can link all the external files that you want.</p> <p>So, in the end, iall i had to do was to connect my file is this:</p> <pre><code>&lt;!DOCTYPE html&gt; &lt;html&gt; &lt;head&gt;   &lt;meta charset=&quot;utf-8&quot;&gt;   &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width&quot;&gt;   &lt;title&gt;newGame&lt;/title&gt;   &lt;link href=&quot;style.css&quot; rel=&quot;stylesheet&quot; type=&quot;text/css&quot; /&gt; &lt;/head&gt; &lt;body&gt;   &lt;py-script src= &quot;./python scripts/test_file.py&quot;&gt;&lt;/py-script&gt;   &lt;script src=&quot;script.js&quot;&gt;&lt;/script&gt; &lt;/body&gt; &lt;script defer src=&quot;https://pyscript.net/alpha/pyscript.js&quot;&gt;&lt;/script&gt; &lt;/html&gt; </code></pre>"			2022-05-15 20:06:16.863 UTC
72265829	python|web-scraping|htmlsession	Scraping html generated by javascript with python	<p>My code:</p> <pre><code>session = HTMLSession() r = session.get(url) result = r.html.find('.YD-Header') </code></pre> <p>I am able to scrape it like this if class name = &quot;YD-Header&quot;</p> <p>But I would like to scrape HTML element with class name:</p> <pre><code> &lt;td&gt;  class=&quot;Fw(500) Ta(end) Pstart(10px) Miw(60px)&quot;  &lt;/td&gt; </code></pre> <p>My code doesn't find anything if I use:</p> <pre><code> result = r.html.find('.Fw(500)') </code></pre> <p>How can I find this class (class name consists of blanks and parentheses)?</p>	2022-05-16 21:30:12.997 UTC	72265895	"<p>CSS requires that characters like ( and ) are escaped with the \ character, so for classes with those names you end up with selectors like .Pstart(20px).</p> <p>The issue here is that JavaScript strings also treats \ as the escape character. The JS string '.Pstart(20px)' represents the string .Pstart(20px), which is again not a valid CSS selector as the parenthesis aren't escaped.</p> <p>The solution is to double escape the classes: the JS string '.Pstart\(20px\).Pstart\(40px\)--md' accurately represents the .Pstart(20px).Pstart(40px)--md CSS selector.</p>"			2022-05-16 21:38:18.053 UTC
72266425	javascript|pyscript	How to use Pyscript python function in javascript?	<p>I have a Javascript code and wanted to implement python functions using Pyscript.</p> <p>Simple Example:</p> <p>let's say I have a function:</p> <pre><code>&lt;py-script&gt; def addOne(a):     value = int(a) + 1     return(value) &lt;/py-script&gt; </code></pre> <p>and say I want to use this function in javascript:</p> <pre><code>&lt;script&gt; let compute = addOne(12) &lt;/script&gt; </code></pre> <p>The issue here is that it will say &quot;addOne()&quot; function is not defined. I was wondering if there was a way to use pyscript python functions inside javascript?</p>	2022-05-16 22:54:50.917 UTC	73458196	"<p>PyScript use Pyodide for translating objects between JavaScript and Python. Such cross-call needs a proxy of the Python function in the JS scope. So, if you create a proxy of the Python function, you can set this proxy as a callback in an event listener in JS. See <a href=""https://pyodide.org/en/stable/usage/type-conversions.html#call-js-from-py"" rel=""nofollow noreferrer"">https://pyodide.org/en/stable/usage/type-conversions.html#call-js-from-py</a></p> <p>Well, you cannot set arbitrary arguments to be passed in a JS event. However, the main point of calling Python is to handle some event, isn't it? E.g. you want to do something in Python when a button is clicked. If so, the event handler (your Python function through the proxy) gets the PointerEvent. Its currentTarget property tells you the clicked DOM element. By the attributes of the element, you can practically pass over any data you want.</p> <pre><code>&lt;py-script&gt; import pyodide import js  class myClass():     def __init__(self):         self.add_one_proxy = pyodide.create_proxy(self.add_one)         js.document.getElementById('mybutton').addEventListener(&quot;click&quot;, self.add_one_proxy)          def add_one(self, pointerEventObj):         &quot;&quot;&quot;Callback from JS when a button is clicked&quot;&quot;&quot;         btn_elem = pointerEventObj.currentTarget         data = btn_elem.getAttribute('data')         js.document.getElementById('resultdiv').innerHTML = str(int(data)+1)          def shutdown(self):         self.add_one_proxy.destroy()  klass = myClass() # Make sure in the program to keep holding a reference of klass ... # do the whole program here # When all done, call klass.shutdown() &lt;/py-script&gt;  &lt;body&gt;     &lt;button id=&quot;mybutton&quot; data=&quot;12&quot; /&gt;     &lt;div id=&quot;resultdiv&quot;&gt;calculated data will come here on button click&lt;/div&gt; &lt;/body&gt; </code></pre>"			2022-08-23 11:49:48.343 UTC
72278694	javascript|python|web-scraping	Python - scraping files that are in JavaScript objects	"<p>I'm trying to download files from a VA dataset website with a Python scraper but I'm having trouble figuring out how to parse the JavaScript in the HTML website that appears to contain the files. This is source code for the website (view-source:<a href=""https://www.data.va.gov/dataset/Air-Force-Veterans-2017-Living-Only/9u8y-zaby"" rel=""nofollow noreferrer"">https://www.data.va.gov/dataset/Air-Force-Veterans-2017-Living-Only/9u8y-zaby</a>). I'm trying to download the &quot;.xlsx&quot; files, which (by just using command+F on my Mac) I think are in JavaScript objects. I've looked around this site and others but haven't been able to figure out how to scrape links from within JavaScript. How should I go about doing this? Any help would be greatly appreciated.</p>"	2022-05-17 18:00:28.607 UTC	72297605	"<p>That website is dynamically generated, you can use selenium to download the desired files</p> <p>Here is a working code using <code>wget</code>, <code>selenium</code> and <code>webdriver_manager</code></p> <p>This will check for the link and save the <code>xlsx</code> file in used-defined directory</p> <pre><code>import time import wget import requests from selenium import webdriver from selenium.webdriver import Chrome from selenium.webdriver import ChromeOptions, FirefoxOptions from selenium.webdriver.common.by import By from selenium.webdriver.chrome.service import Service from webdriver_manager.chrome import ChromeDriverManager  options = ChromeOptions() # try out options # options.binary_location = '/opt/headless-chromium' # options.add_argument(&quot;--headless&quot;) # options.add_argument(&quot;--disable-gpu&quot;) # options.add_argument(&quot;--no-sandbox&quot;) # options.add_argument('--disable-dev-shm-usage') # options.add_argument('--disable-gpu-sandbox') # options.add_argument(&quot;--single-process&quot;) options.add_argument(     &quot;user-agent=Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/101.0.4951.54 Safari/537.36&quot;) options.add_argument('--disable-blink-features=AutomationControlled') options.add_experimental_option(&quot;useAutomationExtension&quot;, False) options.add_experimental_option(&quot;excludeSwitches&quot;, [&quot;enable-automation&quot;])  s = Service(ChromeDriverManager().install()) # s = Service(GeckoDriverManager().install()) driver = webdriver.Chrome(service=s, options=options)  driver.get('https://www.data.va.gov/dataset/Air-Force-Veterans-2017-Living-Only/9u8y-zaby') time.sleep(3)  # get the link download_link = driver.find_element(By.XPATH, '//*[@id=&quot;app&quot;]/div/div[2]/section/div/div/div[2]/a').get_attribute(     'href')  # download the file output_directory = 'data'  # it will download the file to data directory filename = wget.download(download_link, out=output_directory)  time.sleep(3) driver.close() driver.quit() </code></pre>"			2022-05-19 01:16:59.387 UTC
72288653	javascript|python|python-3.x|streaming|webcam	How to upload a webcam stream of video and send bytes as soon as they arrive to the server using javascript and python3?	<p>How do you upload a webcam to the server as the bytes are created from the webcam?</p> <p>This is my starting code.</p> <pre><code>let mediaRecorder = new MediaRecorder(mediaStreamObj); let chunks = []; </code></pre>	2022-05-18 11:50:03.567 UTC	72288654	"<p>Here is the solution.  Tested and Works in both Firefox and Chrome.</p> <pre><code>&lt;!DOCTYPE html&gt; &lt;html lang=&quot;en&quot;&gt; &lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;title&gt;MediaCapture and Streams API&lt;/title&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width&quot;&gt;  &lt;script type=&quot;text/javascript&quot; src=&quot;js/jquery.min.js&quot;&gt;&lt;/script&gt;  &lt;/head&gt; &lt;body&gt; &lt;header&gt; &lt;h1&gt;MediaCapture, MediaRecorder and Streams API&lt;/h1&gt; &lt;/header&gt; &lt;main&gt; &lt;p&gt;&lt;/p&gt;  &lt;p&gt;&lt;button id=&quot;btnStart&quot;&gt;START RECORDING&lt;/button&gt;&lt;br/&gt; &lt;button id=&quot;btnStop&quot;&gt;STOP RECORDING&lt;/button&gt;&lt;/p&gt;  &lt;video controls&gt;&lt;/video&gt;  &lt;video id=&quot;vid2&quot; controls&gt;&lt;/video&gt;  &lt;!-- could save to canvas and do image manipulation and saving too --&gt; &lt;/main&gt; &lt;script&gt;   let constraintObj = {       audio: true,       video: {           facingMode: &quot;user&quot;,           width: { min: 640, ideal: 1280, max: 1920 },           height: { min: 480, ideal: 720, max: 1080 }       }   };   // width: 1280, height: 720  -- preference only   // facingMode: {exact: &quot;user&quot;}   // facingMode: &quot;environment&quot;    //handle older browsers that might implement getUserMedia in some way   if (navigator.mediaDevices === undefined) {       navigator.mediaDevices = {};       navigator.mediaDevices.getUserMedia = function(constraintObj) {           let getUserMedia = navigator.webkitGetUserMedia || navigator.mozGetUserMedia;           if (!getUserMedia) {               return Promise.reject(new Error('getUserMedia is not implemented in this browser'));           }           return new Promise(function(resolve, reject) {               getUserMedia.call(navigator, constraintObj, resolve, reject);           });       }   }else{       navigator.mediaDevices.enumerateDevices()       .then(devices =&gt; {           devices.forEach(device=&gt;{               console.log(device.kind.toUpperCase(), device.label);               //, device.deviceId           })       })       .catch(err=&gt;{           console.log(err.name, err.message);       })   }    navigator.mediaDevices.getUserMedia(constraintObj)   .then(function(mediaStreamObj) {       //connect the media stream to the first video element       let video = document.querySelector('video');       if (&quot;srcObject&quot; in video) {           video.srcObject = mediaStreamObj;       } else {           //old version           video.src = window.URL.createObjectURL(mediaStreamObj);       }        video.onloadedmetadata = function(ev) {           //show in the video element what is being captured by the webcam           video.play();       };        //add listeners for saving video/audio       let start = document.getElementById('btnStart');       let stop = document.getElementById('btnStop');       let vidSave = document.getElementById('vid2');       let mediaRecorder = new MediaRecorder(mediaStreamObj);       let chunks = [];        start.addEventListener('click', (ev)=&gt;{           mediaRecorder.start(1000);    // milliseconds, so 1 second is 1000           console.log(mediaRecorder.state);       })       stop.addEventListener('click', (ev)=&gt;{           mediaRecorder.stop();           console.log(mediaRecorder.state);       });       mediaRecorder.ondataavailable = function(ev) {             chunks.push(ev.data);                        var res;             var pos;             var b = &quot;base64,&quot; ;             var fr = new FileReader();             fr.onload = function(){                 res = this.result;                 pos = res.search(b);                 pos = pos + b.length;                 res = res.substring(pos);                  $.ajax({                     type: 'POST',                     url: 'server.py',                     dataType: &quot;html&quot;,                     data: { chunk:  res },                     success: function(data){                         //alert(data + ' yes');                     },                     error: function(XMLHttpRequest, textStatus, errorThrown) {                         alert('Status: ' + textStatus + '   ' + ' Error: ' + errorThrown);                      }                 });             }             fr.readAsDataURL(ev.data);        }       mediaRecorder.onstop = (ev)=&gt;{           let blob = new Blob(chunks, { 'type' : 'video/mp4;' });           chunks = [];           let videoURL = window.URL.createObjectURL(blob);           vidSave.src = videoURL;       }   })   .catch(function(err) {       console.log(err.name, err.message);   });  &lt;/script&gt; &lt;/body&gt; &lt;/html&gt; </code></pre> <p>And the Python3 server.py file to accept the real time webcam video is the following.</p> <pre><code>import os import sys  import cgi import cgitb  import base64  include_path = '/var/webcam_project/www'  cgitb.enable(display=0, logdir=f&quot;&quot;&quot;{include_path}/tmp_errors&quot;&quot;&quot;) # include_path is OUTDIR  sys.path.insert(0, include_path)  def enc_print(string='', encoding='utf8'):     sys.stdout.buffer.write(string.encode(encoding) + b'\n')  from html import escape  args = cgi.FieldStorage()  chunk = '' if not args.getvalue( &quot;chunk&quot; ) else escape( args.getvalue( &quot;chunk&quot; ) )  mp4 = 'webcam.mp4'  with open (mp4, 'ab') as f:     f.write( base64.b64decode(chunk) )  html = 'success'  enc_print(&quot;Content-Type:text/html;charset=utf-8;&quot;) enc_print()         enc_print(html) </code></pre> <p>Vote up if you like these kinds of solutions of value.</p>"			2022-05-18 11:50:03.567 UTC
72315752	javascript|python	Send JavaScript variable as input to python code	"<p>In JavaScript code declared a variable, that variable should be passed as input to python child process which is called inside JavaScript code, where python code executes its output by taking input from JavaScript variable</p> <p>JavaScript code</p> <pre><code>    var input=&quot;onepiece&quot;;     var spawn = require(&quot;child_process&quot;).spawn;     var python_process = spawn('python3',[&quot;/home/centos/python.py&quot;,input] );     python_process.stderr.on('data',function(data) {     console.log(data.toString());     });  </code></pre> <pre><code>import sys input1=sys.argv[1] print(input1) count=0; for i in range(0, len(input1)):     if(input1[i] != ' '):         count = count + 1; print(  str(count)); </code></pre> <p>when I execute javscript code i should get onepiece 8</p>"	2022-05-20 08:25:00.883 UTC	72316145	"<p>Made it work by connecting the stream listener to <code>stdout</code> rather than <code>stderr</code>:</p> <pre class=""lang-sh prettyprint-override""><code>python_process.stdout.on('data',function(data) {    console.log(data.toString()); }); </code></pre>"			2022-05-20 08:55:07.073 UTC
72323536	javascript|python|python-3.x|jinja2	How to convert list from python into comma separated values in python with jinja or javascript	"<p>I want to synchronize my dropzone allowfiles templates with my python upload config allowed files. I can get jinja to spit out my UPLOAD_EXTENSIONS with config.UPLOAD_EXTENSIONS but I can not figure out how to format it into a string that can be used in my javascript allowdfiles format. See below for what I get vs what I want.</p> <p>jinja html template</p> <pre><code>&lt;script&gt;     let allowed_files = &quot;{{ config.UPLOAD_EXTENSIONS }}&quot;;     console.log(allowed_files) &lt;/script&gt; </code></pre> <p>Console Log</p> <pre><code>[&amp;#39;.jpg&amp;#39;, &amp;#39;.png&amp;#39;, &amp;#39;.gif&amp;#39;] </code></pre> <p>What I want is this string</p> <pre><code>.jpg,.png,.gif </code></pre>"	2022-05-20 18:43:43.623 UTC	72323611	"<p>You should use <a href=""https://jinja.palletsprojects.com/en/3.1.x/templates/#working-with-automatic-escaping"" rel=""nofollow noreferrer"">safe filter</a> like this:</p> <pre class=""lang-html prettyprint-override""><code>&lt;script&gt;     let allowed_files = &quot;{{ config.UPLOAD_EXTENSIONS|safe }}&quot;;     console.log(allowed_files) &lt;/script&gt; </code></pre> <p>but it returns a result like this:</p> <pre class=""lang-js prettyprint-override""><code>[&quot;.jpg&quot;, &quot;.png&quot;, &quot;.gif&quot;] </code></pre> <p>If you want the exact use: <code>console.log(allowed_files.join())</code></p>"			2022-05-20 18:51:21.163 UTC
72360313	javascript|python-3.x|selenium|form-submit|captcha	Submit Request from JavaScript to solve ReCaptcha in Python	"<p>I am Currently trying to log into a Site via Selenium and 2Captcha.</p> <p>Everything work fine right now except the Captcha. When I try to submit the request, I get an Error.</p> <pre><code>#!/usr/bin/python3 from selenium import webdriver from selenium.webdriver.chrome.service import Service from webdriver_manager.chrome import ChromeDriverManager from selenium.webdriver.chrome.options import Options import requests, time  user_name = &quot;&quot; password = &quot;&quot;  api_key = ''  site_key = '6LcZlE0UAAAAAFQKM6e6WA2XynMyr6WFd5z1l1Nr' page_url = 'https://www.ebay-kleinanzeigen.de/m-einloggen.html?targetUrl=/'  def Solver():     chrome_options = Options()      chrome_options.add_argument(&quot;start-maximized&quot;)     chrome_options.add_argument(&quot;disable-blink-features=AutomationControlled&quot;)     chrome_options.add_experimental_option('excludeSwitches', ['enable-automation'])     chrome_options.add_experimental_option('useAutomationExtension', False)     chrome_options.add_experimental_option('excludeSwitches', ['enable-logging'])     chrome_options.add_experimental_option(&quot;detach&quot;, True)     driver = webdriver.Chrome(options=chrome_options,service=Service(ChromeDriverManager().install()))      driver.get(page_url)      element = driver.find_element_by_id(&quot;login-email&quot;)     element.send_keys(user_name)     element = driver.find_element_by_id(&quot;login-password&quot;)     element.send_keys(password)     driver.find_element_by_id(&quot;gdpr-banner-accept&quot;).click()      u1 = f&quot;https://2captcha.com/in.php?key={api_key}&amp;method=userrecaptcha&amp;googlekey={site_key}&amp;pageurl={page_url}&amp;json=1&amp;invisible=1&quot;     r1 = requests.get(u1)     print(r1.json())     rid = r1.json().get(&quot;request&quot;)     u2 = f&quot;https://2captcha.com/res.php?key={api_key}&amp;action=get&amp;id={int(rid)}&amp;json=1&quot;     time.sleep(5)     while True:         r2 = requests.get(u2)         print(r2.json())         if r2.json().get(&quot;status&quot;) == 1:             form_tokon = r2.json().get(&quot;request&quot;)             break         time.sleep(5)     wirte_tokon_js = f'document.getElementById(&quot;g-recaptcha-response&quot;).innerHTML=&quot;{form_tokon}&quot;;'     submit_js = 'document.getElementById(&quot;recaptcha-demo-form&quot;).submit();'      print(wirte_tokon_js)     print('')     print(submit_js)     driver.execute_script(wirte_tokon_js)     time.sleep(3)     driver.execute_script(submit_js)     time.sleep(10)  if __name__ == '__main__':     Solver() </code></pre> <p>This is the Error I get.</p> <pre><code>selenium.common.exceptions.JavascriptException: Message: javascript error: Cannot read properties of null (reading 'submit') </code></pre> <p>this would be my last approach to solve the captcha.. I tried clicking it, even using the exact position to of the captcha frame to click the box</p>"	2022-05-24 09:19:05.14 UTC	73170766	"<p><em>this is not right way.</em></p> <blockquote> <p><strong>submit_js = 'document.getElementById(&quot;recaptcha-demo-form&quot;).submit();'</strong></p> </blockquote> <p><em>use this for this code, this is the right way.</em></p> <blockquote> <p><strong>submit_js = 'document.getElementById(&quot;recaptcha-verify-button&quot;);'</strong></p> </blockquote>"			2022-07-29 20:35:11.673 UTC
72369028	javascript|python|css|flask|apache2	Python Flask blueprint without static folder for css and javascript	"<p>I have searched similar answer to this and found to no avail.</p> <p>Using CGI Handler Apache server with an index.cgi</p> <p>I have to adhere the strict policy on the directory list; they're adamantly refused to have a static folder in the directory for Flask.</p> <p>I kinda wish Flask add static_js and static_css that would make our life easier.</p> <p>How do I override the static folder?</p> <p>It works with a single path for either css or javascript:</p> <pre><code># in app.py app.register_blueprint(index_bp) app.add_url_rule('/css/&lt;path:filename&gt;', endpoint='css', view_func=app.send_static_file)  app.add_url_rule('/js/&lt;path:filename&gt;', endpoint='js', view_func=app.send_static_file) </code></pre> <pre><code># css_dir = /parent_folder/css and read from json load from config import css_dir  index = Blueprint('index', __name__, template_folder=html_dir, static_folder=css_dir)  # in html file &lt;link rel='stylesheet' href=&quot;{{ url_for('css', filename='bootstrap.min.css') }}&quot;&gt;  # note: javascript won't load at all </code></pre> <p>or</p> <pre><code># js_dir = /parent_folder/js and read from json load from config import js_dir  index = Blueprint('index', __name__, template_folder=html_dir, static_folder=css_dir)  # in the html file &lt;script type =&quot;text/javascript&quot; src=&quot;{{ url_for('js', filename='lib/bootstrap.min.js') }}&quot;&gt;&lt;/script&gt;  # note: css won't load at all </code></pre> <p>but does not work:</p> <pre><code># multi_dir = /parent_folder and read from json load from config import multi_dir  index = Blueprint('index', __name__, template_folder=html_dir, static_folder=multi_dir)  # in html file &lt;link rel='stylesheet' href=&quot;{{ url_for('css', filename='bootstrap.min.css') }}&quot;&gt;  &lt;script type =&quot;text/javascript&quot; src=&quot;{{ url_for('js', filename='lib/bootstrap.min.js') }}&quot;&gt;&lt;/script&gt;  # note: both won't load at all </code></pre> <p>I want to include javascript and css folders without a static folder</p> <ol> <li>parent_folder <ul> <li>cgi-bin <ul> <li>python/perl stuff</li> </ul> </li> <li>templates <ul> <li>html stuff</li> </ul> </li> <li>css <ul> <li>css stuff</li> </ul> </li> <li>js <ul> <li>lib <ul> <li>javascript stuff</li> </ul> </li> </ul> </li> </ul> </li> </ol> <p>How do I achieve this?</p>"	2022-05-24 20:20:10.213 UTC	72380797	"<p>I figured it out, it can be achieved by create a two python files and register them in the app.py blueprint.</p> <p>Since Stack Overflow won't let me post code in here due to error which is in correct format.</p>"			2022-05-25 15:54:19.21 UTC
72371367	javascript	Why I have two different results? (Math) (Javascript vs Python)	"<p>Why different output?</p> <p>I tried to resolve this problem and I can't with javascript only using python, what is wrong is '%' different in javascript?</p> <p>I use '%' to get last 10 digits from the result.</p> <p>Javascript:</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-js lang-js prettyprint-override""><code>const puzzle = (N, P) =&gt; {       var A = 1,         B = 1,         C = 1,         D = 1,         X;        for (var j = 0; j &lt; P; j++)         for (var i = 0; i &lt; N; i++) {           X = D + 2 * C + 3 * B + 4 * A;           A = B;           B = C;           C = D;           D = X;         }        return D % 10000000000;     };      console.log(puzzle(10, 1));     console.log(puzzle(100, 1));     console.log(puzzle(2022, 100));</code></pre> </div> </div> </p> <p>Python:</p> <pre><code>def puzzle(N, P):     A = 1;     B = 1;     C = 1;     D = 1;     X = 0;      for ea in range(P):       for esa in range(N):           X = D + 2 * C + 3 * B + 4 * A;           A = B;           B = C;           C = D;           D = X;              return D % 10000000000;       print(puzzle(10, 1)); print(puzzle(100, 1)); print(puzzle(2022, 100)); </code></pre> <p>Output (Python):</p> <pre><code>&gt; 30520 &gt; 720820623 &gt; 5553751141 </code></pre>"	2022-05-25 02:27:02.11 UTC	72371875	"<p>You are simply playing with too big numbers for <code>number</code> primitive.<br /> Fortunately, there is a solution.</p> <p>To understand it correctly, nothing is best than reading the documentation about <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/BigInt"" rel=""nofollow noreferrer"">BigInt</a>.</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-js lang-js prettyprint-override""><code>console.clear();  const puzzle = (N, P) =&gt; {   var A = BigInt(1),     B = BigInt(1),     C = BigInt(1),     D = BigInt(1),     X = BigInt(1);    for (var j = 0; j &lt; P; j++)     for (var i = 0; i &lt; N; i++) {       X = D + BigInt(2) * C + BigInt(3) * B + BigInt(4) * A;       A = B;       B = C;       C = D;       D = X;     }    return Number(D % BigInt(10000000000)); };  console.log(puzzle(10, 1)); console.log(puzzle(100, 1)); console.log(puzzle(2022, 100));</code></pre> </div> </div> </p>"			2022-05-25 04:09:59.353 UTC
72394823	javascript|string|parsing|set	Using javascript to parse Set stringified by a python script	"<p>I have a python script that spews a <em>stringified</em> Set of strings:</p> <pre class=""lang-js prettyprint-override""><code>let mySet = &quot;{\&quot;apple\&quot;,\&quot;pear\&quot;,\&quot;berry\&quot;}&quot; </code></pre> <p>How can I parse it back into a Set using javascript?</p> <p>I tried:</p> <pre class=""lang-js prettyprint-override""><code>eval(mySet) </code></pre> <pre class=""lang-js prettyprint-override""><code>new Set(mySet) </code></pre>"	2022-05-26 16:08:07.313 UTC	72396752	"<p>Try this:</p> <pre><code>      let str = '{\\&quot;apple\\&quot;,\\&quot;pear\\&quot;,\\&quot;berry\\&quot;}';       let arr = str.match(/[a-zA-Z]*/g).filter((item) =&gt; item);       const newset = new Set([...arr]);       console.log(newset); </code></pre>"			2022-05-26 18:59:52.64 UTC
72404053	javascript|python	Can access api in python but cannot replicate using JavaScript	"<p>Using the below to access an api using python and it gives me a successful response. Trying to do the same thing from an html file with JavaScript on my hard drive I get the below error. Reading around the issue seems to be that I am running this from a local file not hosted on a proper server.</p> <p><em>Access to fetch at 'https://api.connect.example.com/test/v1/state-pop/levels/rating?' from origin 'null' has been blocked by CORS policy: Response to preflight request doesn't pass access control check: The 'Access-Control-Allow-Origin' header contains the invalid value ''. Have the server send the header with a valid value, or, if an opaque response serves your needs, set the request's mode to 'no-cors' to fetch the resource with CORS disabled.</em></p> <pre><code>import requests import json from requests.auth import HTTPBasicAuth  headers = { 'Accept': 'application/json' } auth = ('user','password') response_API = requests.get('https://api.connect.example.com/test/v1/state-pop/levels/rating?', auth = auth, headers=headers) </code></pre> <pre><code>&lt;!doctype html&gt; &lt;html&gt;     &lt;head&gt; &lt;script&gt; let username = 'username'; let password = 'password';  fetch('https://api.connect.example.com/test/v1/state-pop/levels/rating?', {   method: 'get',   headers: {     &quot;Content-Type&quot;: &quot;text/plain&quot;,     'Authorization': 'Basic ' + btoa(username + &quot;:&quot; + password)   } }) &lt;/script&gt; &lt;/head&gt; &lt;/html&gt; </code></pre>"	2022-05-27 10:33:08.487 UTC	72404089	"<p>You can use this simple extension for your browser to avoid CORS issues also from your html file: <a href=""https://mybrowseraddon.com/access-control-allow-origin.html"" rel=""nofollow noreferrer"">https://mybrowseraddon.com/access-control-allow-origin.html</a></p> <p>After the installation complete you need to toggle on the extension in the 'problematic' site:</p> <p><a href=""https://i.stack.imgur.com/SfJSc.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/SfJSc.png"" alt=""Toggle on CORS extension after installation"" /></a></p> <p>(in the bottom of the picture you can see the toggle button 'ON' - just click it :))</p>"			2022-05-27 10:38:05.833 UTC
72427140	javascript|python|infinite-loop	Cant' find out the cause of infinite loop in Javascript (After translating a function from Python)	"<p>I'm translating a function I've wrote in Python to Javascript but In JS I have an infinite loop while in Python everything works fine.</p> <p>Here's my code in Python:</p> <pre><code> def isPrime(n: int) -&gt; bool:      # Since neither 1 nor 0 is a prime number, return false     if n == 1 or n == 0:         return False      # Loops from 2 to n     for i in range(2, n):          # If the number is divisible by i, then n is not a prime number         if n % i == 0:             return False      # Otherwise, n is a prime number     return True  def getPrimes(n: int) -&gt; list[int]:     &quot;&quot;&quot;     Take a positive int number n as a parameter and prints to the console the first n prime numbers     &quot;&quot;&quot;      primes = []     count = 0      while len(primes) &lt; n:         if isPrime(count):             primes.append(count)         count += 1      return primes  </code></pre> <p>Here's my code in Javascript:</p> <pre><code> function isPrime(num) {      // Since neither 1 nor 0 is a prime number, return false     if (num == 1 || num == 0) {         return false     }      // Loops from 2 to n     for (let i = 2; i &lt;= num; i++) {                  // If the number is divisible by i, then n is not a prime number         if (num % i == 0) {             return false         }     }      // Otherwise, n is a prime number     return true }  function getPrimes(num) {      let primes = [];     count = 0;      while (primes.length &lt; num) {         if (isPrime(count) === true) {             primes.push(count);         }         count++;     }      return primes; }  </code></pre> <p>In Python, when I call the function <code>getPrimes(n)</code> it correctly returns an array containing the first <code>n</code> prime numbers.</p> <p>But in Javascript, the same function causes an infinite loop.</p> <p>Why is that happening? Thank you in advance.</p>"	2022-05-29 20:41:39.747 UTC	72427251	"<p>It's not causing infinite loop, your <code>isPrime(num)</code> function just returns <code>false</code> for every number, because you are having <code>i &lt;= num</code>, which causes <code>num % num == 0</code> evaluating to <code>true</code> and returning <code>false</code>. Just fix it to <code>i &lt; num</code></p> <pre><code>function isPrime(num) {      // Since neither 1 nor 0 is a prime number, return false     if (num === 1 || num === 0) {         return false     }      // Loops from 2 to n     for (let i = 2; i &lt; num; i++) {                  // If the number is divisible by i, then n is not a prime number         if (num % i === 0) {             return false         }     }      // Otherwise, n is a prime number     return true }  function getPrimes(num) {      let primes = [];     count = 0;      while (primes.length &lt; num) {         if (isPrime(count) === true) {             primes.push(count);         }         count++;     }      return primes; }   console.log(getPrimes(10))  // [2, 3, 5, 7, 11, 13, 17, 19, 23, 29] </code></pre>"			2022-05-29 20:59:21.147 UTC
72442548	python|list|map-function	Is there a javascript 'reduce()' like function in python?	"<p>map() and filter() are good when it comes to applying a function individual elements, but there is no way to do any of the following with them on iterables :</p> <ol> <li>apply functions on a bunch of elements as a whole</li> <li>keep track of previously iterated elements / 'accumulate' items</li> <li>get the index of the current element under iteration</li> </ol> <p>All of these pose a challenge when you need to perform operations on the current element based on previous values or on a group of elements together like a sub-array.</p> <h3>example1 :  I want to iterate over and sum the elements one by one</h3> <pre><code>&gt;&gt;&gt; l = [4,7,2,8,10] &gt;&gt;&gt; map(sum,l)       # throws the following error Traceback (most recent call last):   File &quot;&lt;stdin&gt;&quot;, line 1, in &lt;module&gt;   File &quot;&lt;stdin&gt;&quot;, line 1, in &lt;lambda&gt; TypeError: 'int' object is not iterable </code></pre> <p>Not possible since sum cannot operate on single ints and there is no way to track the iterated values up till now!</p> <h3>example 2: I maintain a local variable to track the current sum</h3> <pre><code>&gt;&gt;&gt; curr = 0  &gt;&gt;&gt; [* map(lambda x: curr+=x ,l)]                          ^     File &quot;&lt;stdin&gt;&quot;, line 1     SyntaxError: invalid syntax </code></pre> <p>Again, not allowed since assignment or modification not allowed inside lambda!</p> <p>Both of these results are expected, but is there an easier functional alternative which is typically what the javascript reduce() function does?</p>"	2022-05-31 05:15:27.923 UTC	72444584	"<p>There is <a href=""https://docs.python.org/3/library/functools.html#functools.reduce"" rel=""nofollow noreferrer""><code>functools.reduce</code></a> in the standard library. You can use it together with a <code>lambda</code> function or use the various functions provided by the <a href=""https://docs.python.org/3/library/operator.html"" rel=""nofollow noreferrer""><code>operator</code> module</a>. For example:</p> <pre class=""lang-py prettyprint-override""><code>&gt;&gt;&gt; from functools import reduce &gt;&gt;&gt; import operator as op &gt;&gt;&gt; reduce(op.add, [4,7,2,8,10]) 31 </code></pre> <p>But for that specific use case there is already the builtin function <a href=""https://docs.python.org/3/library/functions.html#sum"" rel=""nofollow noreferrer""><code>sum</code></a>:</p> <pre class=""lang-py prettyprint-override""><code>&gt;&gt;&gt; sum([4,7,2,8,10]) 31 </code></pre> <p>For accumulating values there is <a href=""https://docs.python.org/3/library/itertools.html#itertools.accumulate"" rel=""nofollow noreferrer""><code>itertools.accumulate</code></a>.</p> <p>If you need the elements' indices as well, you can use <a href=""https://docs.python.org/3/library/functions.html#enumerate"" rel=""nofollow noreferrer""><code>enumerate</code></a>.</p>"			2022-05-31 08:34:46.597 UTC
72445999	javascript|python|selenium|xpath|tooltip	Python Selenium get value of tooltip text with javascript website	"<p>I am new to Selenium. Read through many historical posts and try to retrieve tooltip text but fail...</p> <p>X path (for &quot;col_issued_shares&quot; should be correct as it is directly copy like below screen:</p> <p><a href=""https://i.stack.imgur.com/R4rjC.png"" rel=""nofollow noreferrer"">Screenshot 1</a></p> <p>The result is SyntaxError: invalid syntax. My expected output is Issued Shares 20,428,671,958 ( as at 27 May 2022) . But when I view source , it shows toolkit text.</p> <p><a href=""https://i.stack.imgur.com/PPO3w.png"" rel=""nofollow noreferrer"">Screenshot 2</a></p> <p><a href=""https://i.stack.imgur.com/EpMuQ.png"" rel=""nofollow noreferrer"">Screenshot 3</a></p> <pre><code>from selenium import webdriver from selenium.webdriver.chrome.service import Service from selenium.webdriver.common.by import By from selenium.webdriver import Chrome from selenium.webdriver.chrome.options import Options from selenium.webdriver.support.wait import WebDriverWait from selenium.webdriver.support import expected_conditions as EC   s=Service(r'C:\Users\chromedriver.exe') driver = webdriver.Chrome(service=s) url='https://www.hkex.com.hk/Market-Data/Securities-Prices/Equities/Equities-Quote?sym=5&amp;sc_lang=en' driver.get(url)  element = driver.find_element(By.XPATH, &quot;//*[@id=&quot;lhkexw-quoteequities&quot;]/div[2]/div[3]/div[2]/div/div[2]/div[1]/div[1]/span[2]/span&quot;) </code></pre> <p>Can someone help? Thanks a lot</p>"	2022-05-31 10:15:15.463 UTC	72446261	<p>Try xpath <code>//*[@id='lhkexw-quoteequities']/div[2]/div[3]/div[2]/div/div[2]/div[1]/div[1]/span[2]/span</code></p> <p>Actually you are enclosing xpath with double quotes (&quot;). So in xpath you should use single-quote (') for <code>@id=''</code>.</p>			2022-05-31 10:36:38.513 UTC
72449762	javascript|python-3.x|split|python-re	Analog operation for Python code to JavaScript RE Module	"<p>Here is the code :</p> <pre class=""lang-py prettyprint-override""><code>        lines = re.split('\\s*\\n+\\s*', text)          joint_stack = []          for line in lines:             words = re.split('\\s+', line)             instruction = words[0] </code></pre> <p>My JS code is :</p> <pre><code>  _parse_hierarchy(text) {      var lines = text.split('\\s*\\n+\\s*');      console.log(&quot;Test _parse_hierarchy  -&gt; &quot;, lines); </code></pre> <p>I got array but i got whole text in one item. My array length is 1.</p> <p>Looks like i need regex to split by line...</p> <p>I also try <code>var lines = text.match('\\s*\\n+\\s*');</code> with no success.</p> <p>Any suggestion ?</p>"	2022-05-31 14:36:26.023 UTC	72458643	"<p>Correct way for js format: <code>\\</code> =&gt; <code>\</code> and without <code>'</code> or <code>&quot;</code> .</p> <pre class=""lang-js prettyprint-override""><code>    var lines = text.split(/\s*\n+\s*/);      console.log(&quot;Test lines  -&gt; &quot;, lines);     for (var key in lines) {        var line = lines[key];       console.log(&quot;Test _parse_hierarchy FIRST WORD  -&gt; &quot;, line);        var words = line.split(/\s+/);       // var firstword = words[0]; </code></pre>"			2022-06-01 08:29:48.227 UTC
72456481	javascript|python|cellular-automata	"Cellular automata works in Python, not Javascript"	"<p>Edit: I put a JavaScript snippet at the bottom.</p> <p>I've made two versions of the same <a href=""https://www.researchgate.net/publication/216634494_Evolutionary_Games_and_Spatial_Chaos"" rel=""nofollow noreferrer"">celluar automata</a> in JavaScript and Python.</p> <p>The Python version works perfectly as expected, whereas the JavaScript doesn't...</p> <p>The problem is the third generation.</p> <p>How it looks in Python:</p> <p><a href=""https://i.stack.imgur.com/IDDr5.gif"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/IDDr5.gif"" alt=""enter image description here"" /></a></p> <p>How it looks in JavaScript:</p> <p><a href=""https://i.stack.imgur.com/hbUzF.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/hbUzF.png"" alt=""enter image description here"" /></a></p> <p>Two cells (C and D) should change from defectors back to cooperators (blue cell). This is because these cells have a cooperator in their neighbourhood that scores a 6 (6 &gt; 5.7). On the other hand, cells A and B change rightfully back to cooperators. My confusion is that this automata is perfectly symmetrical. Why is A and B working, but not C and D when they are, in theory, existing under the exact same conditions?</p> <p>Some where in the update function I suspected the cells C and D have a neighbor whose score in <code>generation</code>= 3 is 6  (a cooperator. Only a cooperator could score this. See picture of <code>generation</code> = 2 below to see what I mean) but this neighbor's actual strategy is for some reason being written as a defector, when is should be a cooperator.</p> <pre><code> this.updateCell = function(row, col) {         let player = this.active_array[row][col];         let best_strat = 0;         let highest_score = 0;          player.neighbours.forEach(coords =&gt; {             let x_coord = coords[0];             let y_coord = coords[1];             let neighbour = this.active_array[x_coord][y_coord];             if (neighbour.score &gt; highest_score) {                 highest_score = neighbour.score;                 best_strat = neighbour.strat;             }         });         if (player.score &lt; highest_score) {             return best_strat;         }         if (player.score &gt;= highest_score) {             return player.strat;         }     } </code></pre> <p>I ran some console logs in the third generation and it seems to be the case. When cells C and D update, <code>highest_score</code> is returning a 6 (hence, a cooperator) but <code>best_strategy</code> is returning a 1 (meaning a defector). Meaning, cells C and D must have a neighbor whose strategy should be a cooperator but it's actually a defector (even though the scores are correct). If I'm right, I'm not sure how to fix this.</p> <p>What's equally annoying is that I've tried basically copying the logic from the working Python version in JavaScript exactly, but no matter what I change, nothing seems to fix it. I can't find any difference between the two! :&lt;</p> <p>Again, the first two generations of the JavaScript version work perfectly.</p> <p><a href=""https://i.stack.imgur.com/YQfPS.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/YQfPS.png"" alt=""enter image description here"" /></a></p> <p><a href=""https://i.stack.imgur.com/SInS8.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/SInS8.png"" alt=""enter image description here"" /></a></p> <p><a href=""https://i.stack.imgur.com/ZE6CQ.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/ZE6CQ.png"" alt=""enter image description here"" /></a></p> <p>For reference, the working Python code (JavaScript snippet below):</p> <pre><code>from calendar import c from random import choices, sample, shuffle import numpy as np import pandas as pd import copy import matplotlib.pyplot as plt from collections import Counter  v = 1.96 generations = 100 width = 100 height = 100 # cooperate = 0, defect = 1  strategies = ['0', '1'] next_cells = {} temp = [0.2, 0.8] payoffs = np.array([[1, 0], [1 + v, 0]]) rpm = pd.DataFrame(payoffs, columns=['0', '1']) rpm.index = ['0', '1'] cpm = rpm.T output2 = []  for x in range(width):     for y in range(height):         if (x == width/2) and (y == height/2):             strat = '1'         else:             strat = '0'         next_cells[(x, y)] = {             'strategy': strat,              'prev_strat': None,              'score': 0,              'neighbours': [((x + 1) % width, y), ((x - 1) % width, y), (x, (y - 1) % height), (x, (y + 1) % height),             ((x + 1) % width, (y - 1) % height), ((x + 1) % width, (y + 1) % height), ((x - 1) % width, (y - 1) % height), ((x - 1) % width, (y + 1) % height)             ]         }  for gen in range(generations):     output = np.zeros(shape=(width, height))     cells = copy.deepcopy(next_cells)     for coord, cell in cells.items():         score = 0         if cell['strategy'] == '0':                 score += 1         for neighbour in cell['neighbours']:             if cell['strategy'] == '0' and cells[neighbour]['strategy'] == '0':                 score += 1             if cell['strategy'] == '1' and cells[neighbour]['strategy'] == '0':                 score += v         cell['score'] = score                      for coord, cell in cells.items():         highest_score = 0         best_strat = None         for neighbour in cell['neighbours']:             if cells[neighbour]['score'] &gt; highest_score:                 highest_score = cells[neighbour]['score']                 best_strat = cells[neighbour]['strategy']         if cell['score'] &lt; highest_score:             next_cells[coord]['strategy'] = best_strat             next_cells[coord]['prev_strat'] = cell['strategy']         if cell['score'] &gt;= highest_score:             next_cells[coord]['strategy'] = cell['strategy']             next_cells[coord]['prev_strat'] = cell['strategy']                        x, y = coord[0], coord[1]         if next_cells[coord]['strategy'] == '0' and next_cells[coord]['prev_strat'] == '1':             output[x][y] = 2         elif next_cells[coord]['strategy'] == '1' and next_cells[coord]['prev_strat'] == '0':             output[x][y] = 3         else:             output[x][y] = int(next_cells[coord]['strategy'])           plt.imshow(output, interpolation='nearest')     plt.colorbar()     plt.pause(0.01)     plt.savefig(f&quot;images/foo{gen}.png&quot;)     plt.close(&quot;all&quot;)  plt.show() </code></pre> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-js lang-js prettyprint-override""><code>class Cell4 {      constructor() {          this.score = 0;         this.neighbours;         this.strat;         this.prev_strat;          this.initNeighbours = function(row, col) {             let array = [];             array.push(             [(((row - 1) % rows) + rows) % rows, (((col - 1) % cols) + cols) % cols],             [(((row + 1) % rows) + rows) % rows, (((col + 1) % cols) + cols) % cols],             [(((row - 1) % rows) + rows) % rows, (((col + 1) % cols) + cols) % cols],             [(((row + 1) % rows) + rows) % rows, (((col - 1) % cols) + cols) % cols],             [(((row - 1) % rows) + rows) % rows, col],             [(((row + 1) % rows) + rows) % rows, col],               [row, (((col - 1) % cols) + cols) % cols],             [row, (((col + 1) % cols) + cols) % cols],             )             this.neighbours = array;         };     } }  class FractalPD {      constructor() {          this.u = 1.96;         this.cooperator_color = 'blue';         this.defect_color = 'red';         this.was_defect_color = 'cyan';         this.was_coop_color = 'yellow';         this.active_array = [];         this.inactive_array = [];                  this.makeGrid = function() {             for (let i = 0; i &lt; rows; i++) {                 this.active_array[i] = [];                 for (let j = 0; j &lt; cols; j++) {                    this.active_array[i][j] = 0;                 }             }             this.inactive_array = this.active_array;         };          this.randomizeGrid = function() {             for (let i = 0; i &lt; rows; i++) {                 for (let j = 0; j &lt; cols; j++) {                     const cell = new Cell4();                     cell.strat = 0;                     cell.prev_strat = 0;                     cell.initNeighbours(i, j);                     this.active_array[i][j] = cell;                     if (i === parseInt(rows/2) &amp;&amp; j === parseInt(cols/2)) {                         this.active_array[i][j].strat = 1;                         this.active_array[i][j].prev_strat = 1;                     }                 }             }         };          this.fillGrid = function() {             // cooperate = 0 defect = 1             for (let i = 0; i &lt; rows; i++) {                 for (let j = 0; j &lt; cols; j++) {                     if (this.active_array[i][j].strat === 0 &amp;&amp; this.active_array[i][j].prev_strat === 0) {                         ctx.fillStyle = this.cooperator_color;                     }                                          if (this.active_array[i][j].strat === 1 &amp;&amp; this.active_array[i][j].prev_strat === 1) {                         ctx.fillStyle = this.defect_color;                                              }                     if (this.active_array[i][j].strat === 1 &amp;&amp; this.active_array[i][j].prev_strat === 0) {                         ctx.fillStyle = this.was_coop_color;                                              }                     if (this.active_array[i][j].strat === 0 &amp;&amp; this.active_array[i][j].prev_strat === 1) {                         ctx.fillStyle = this.was_defect_color;                                              }                     ctx.fillRect(j * cell_size, i * cell_size, cell_size - 1, cell_size - 1);                     ctx.textAlign=""center"";                      ctx.textBaseline = ""middle"";                     ctx.fillStyle = ""black"";                     ctx.fillText(`${this.active_array[i][j].score.toFixed(1)}`, (j * cell_size) + cell_size/2 , (i * cell_size) + cell_size/2)                 }             }         };                  this.playRound = function(row, col) {             const player = this.active_array[row][col];             const neighbours = player.neighbours;             let score = 0;             if (player.strat === 0) {                 score += 1;             }             neighbours.forEach(coords =&gt; {                 let x_coord = coords[0];                 let y_coord = coords[1];                 let neighbour = this.active_array[x_coord][y_coord];                 if (player.strat === 0 &amp;&amp; neighbour.strat === 0) {                    score += 1;                 }                 if (player.strat === 1 &amp;&amp; neighbour.strat === 0) {                    score += this.u;                 }             });             player.score = score;         };          this.updateCell = function(row, col) {             let player = this.active_array[row][col];             let best_strat = 0;             let highest_score = 0;              player.neighbours.forEach(coords =&gt; {                 let x_coord = coords[0];                 let y_coord = coords[1];                 let neighbour = this.active_array[x_coord][y_coord];                 if (neighbour.score &gt; highest_score) {                     highest_score = neighbour.score;                     best_strat = neighbour.strat;                 }             });             if (player.score &lt; highest_score) {                 return best_strat;             }             if (player.score &gt;= highest_score) {                 return player.strat;             }         }          this.updateGrid = function() {              for (let i = 0; i &lt; rows; i++) {                 for (let j = 0; j &lt; cols; j++) {                     this.playRound(i, j);                 }             }             for (let i = 0; i &lt; rows; i++) {                 for (let j = 0; j &lt; cols; j++) {                     let old_state = this.active_array[i][j].strat;                     let new_state = this.updateCell(i, j);                     this.inactive_array[i][j].strat = new_state;                     this.inactive_array[i][j].prev_strat = old_state;                 }             }             this.active_array = this.inactive_array;         };          this.gameSetUp = () =&gt; {             this.makeGrid();         };          this.runGame = () =&gt; {             this.updateGrid();             this.fillGrid();         };     }     }  const canvas = document.querySelector(""#gamefield""); canvas.width = window.innerWidth; canvas.height = window.innerHeight; const ctx = canvas.getContext(""2d""); let PD = new FractalPD(); let cell_size = 19; let cols = Math.floor(canvas.width / cell_size); let rows = Math.floor(canvas.height / cell_size);  PD.gameSetUp(); PD.randomizeGrid(); PD.fillGrid(); setInterval(function() {     PD.runGame(); }, 3000)</code></pre> <pre class=""snippet-code-css lang-css prettyprint-override""><code>body {     font-family: 'Poppins', sans-serif;     background: #1d1d1d; }</code></pre> <pre class=""snippet-code-html lang-html prettyprint-override""><code>&lt;!DOCTYPE html&gt; &lt;html&gt; &lt;head&gt;     &lt;meta charset=""utf-8""&gt;     &lt;link rel=""stylesheet"" href=""style.css""&gt; &lt;/head&gt;  &lt;body&gt;     &lt;div id=""content""&gt;         &lt;canvas id=""gamefield"" width=""1500"" height=""1000""&gt;&lt;/canvas&gt;      &lt;/div&gt;     &lt;script src=""fractalPD.js""&gt;&lt;/script&gt; &lt;/body&gt; &lt;/html&gt;</code></pre> </div> </div> </p>"	2022-06-01 04:32:17.92 UTC	72474555	"<p>At a glance, I would guess the problem is this line in your <code>makeGrid</code> method:</p> <pre class=""lang-js prettyprint-override""><code>this.inactive_array = this.active_array; </code></pre> <p>This a reference assignment, not a deep copy, so you don't actually have two arrays, but just two references to the same array.  When you try to update <code>inactive_array</code> in <code>updateGrid</code>, you're actually also updating <code>active_array</code>, since they're the same array.</p> <p>To fix this issue, you could make a deep copy of the array with <a href=""https://developer.mozilla.org/en-US/docs/Web/API/structuredClone"" rel=""nofollow noreferrer""><code>structuredClone()</code></a>.  Or just have a method that creates a single array and returns it, and call it twice to get two independent arrays.</p>"			2022-06-02 10:17:52.873 UTC
72462348	javascript|python	python decode javascript btoa string	"<p>I am using this code in javascript to encode one json</p> <pre><code>a = {'address': &quot;djdjdjdj&quot;, &quot;provider&quot;: &quot;google&quot;} {address: 'djdjdjdj', provider: 'google'} btoa(a) 'W29iamVjdCBPYmplY3Rd' </code></pre> <p>I am using this code to decode in backend</p> <pre><code>    import json     import base64     encodes_Str = &quot;W29iamVjdCBPYmplY3Rd&quot;     btoa = lambda x:base64.b64decode(x)     atob = lambda x:base64.b64encode(bytes(x, 'utf-8')).decode('utf-8')     decoded = json.loads(btoa(encodes_Str))     print(decoded) </code></pre> <p>error:</p> <pre><code>    &gt;&gt;&gt; decoded = json.loads(btoa(&quot;W29iamVjdCBPYmplY3Rd&quot;))     Traceback (most recent call last):     File &quot;&lt;stdin&gt;&quot;, line 1, in &lt;module&gt;     File &quot;/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/json/__init__.py&quot;, line 357, in loads         return _default_decoder.decode(s)     File &quot;/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/json/decoder.py&quot;, line 337, in decode         obj, end = self.raw_decode(s, idx=_w(s, 0).end())     File &quot;/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/json/decoder.py&quot;, line 355, in raw_decode         raise JSONDecodeError(&quot;Expecting value&quot;, s, err.value) from None     json.decoder.JSONDecodeError: Expecting value: line 1 column 2 (char 1)     &gt;&gt;&gt;  </code></pre> <p>I am getting above error. How can i get back the json which i encodes in javascript please take a look</p>"	2022-06-01 12:59:15.217 UTC	72462404	"<p>Your problem is that you haven't converted your JavaScript object into a string before attempting to base64 encode it. Hence when you decode it in python, you get the string:</p> <pre><code>[object Object] </code></pre> <p>In your JavaScript you need to JSON encode the object first i.e.</p> <pre class=""lang-js prettyprint-override""><code>a = {'address': &quot;djdjdjdj&quot;, &quot;provider&quot;: &quot;google&quot;} btoa(JSON.stringify(a)) </code></pre> <p>This will give the string:</p> <pre><code>&quot;eyJhZGRyZXNzIjoiZGpkamRqZGoiLCJwcm92aWRlciI6Imdvb2dsZSJ9&quot; </code></pre> <p>which you can then run through</p> <pre class=""lang-py prettyprint-override""><code>json.loads(base64.b64decode(encodes_Str)) </code></pre> <p>to get:</p> <pre><code>{'address': 'djdjdjdj', 'provider': 'google'} </code></pre>"			2022-06-01 13:07:07.083 UTC
72473931	javascript|python|jquery|ajax|fetch	How to use Python function with JavaScript	"<p>I have a JavaScript file that is used for a <strong>google chrome extension</strong>, Also I have a Python file which has functions in it, only for the example let's imagine that in the python file we have a function like so</p> <pre><code>external.py  def name(x)    return &quot;your&quot; + x </code></pre> <p>So I want to call this function through JavaScript and get the return value inside of JavaScript, so if the Python file named external.py and the JS file named index.js for example, so the code will JS be something like that</p> <pre><code>index.js  data = &quot;external.py&quot;.name(&quot;John&quot;)     //(It doesn't have to be like that, just for the example) </code></pre> <p>I've tried using ajax but it does not work (I've tried to import jquery way too many times, but it doesn't seem to work) maybe because it's a google chrome extension. Also, I've tried to use fetch but I have no idea how to write it exactly and if it's impossible with fetch.</p> <p>I am new to JS though, so go easy with me.</p>"	2022-06-02 09:31:01.617 UTC	72499403	"<p>Use this code. Do ajax call in your js code. It may help you.</p> <pre><code>$.ajax({   type: &quot;POST&quot;,   url: &quot;~/pythoncode.py&quot;,   data: { param: text} }).done(function( o ) {    // do something }); </code></pre> <p>Or you can ref to this link for js with python work <a href=""https://pyscript.net/"" rel=""nofollow noreferrer"">https://pyscript.net/</a></p>"			2022-06-04 11:35:29.68 UTC
72509427	javascript|class|attributes|instance-variables	JavaScript: Is there an equivalent to the Python setattr() function?	"<p>I have a class to which I would like to include a method of overriding some of the default instance variables in the constructor, without having a dozen parameters.  I would like to do this by passing an object in the form of:</p> <pre><code>class MyClass {     constructor(overrides) {         this.instanceVar1 = default1;         this.instanceVar2 = default2,          for (key in overrides) {            this.key = overrides[key];         }     }  let overrides = {instanceVar1 : value,                  instanceVar2 : value2}; let instance = new MyClass(overrides);  console.log(instance.instanceVar1)  // Outputs value, not default1. </code></pre> <p>In Python this could be done with</p> <pre><code>if overrides is not None:     for key, value in overrides.items():         self.setattr(self, key, value) </code></pre> <p>Is there a JS equivalent or do I just have to add a bunch of parameters with default values?</p>"	2022-06-05 17:02:26.677 UTC	72511156	"<p>For your given example you simply need to use <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Property_accessors#bracket_notation"" rel=""nofollow noreferrer"">bracket notation</a> to access a property from a variable.</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-js lang-js prettyprint-override""><code>class MyClass {   constructor(overrides) {     this.instanceVar1 = 'default1';     this.instanceVar2 = 'default2';      for (const key in overrides) {       this[key] = overrides[key];       //   ^^^     }   } }  let overrides = {   instanceVar1: 'value',   instanceVar2: 'value2' } let instance = new MyClass(overrides);  console.log(instance.instanceVar1); // value</code></pre> </div> </div> </p> <p>An alternative would be to <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment#object_destructuring"" rel=""nofollow noreferrer"">destructure</a> the needed parameters from the <code>overrides</code> object setting appropriate defaults, and leaving the <code>...rest</code> for use elsewhere.</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-js lang-js prettyprint-override""><code>class MyClass {   constructor({     instanceVar1 = 'default1',     instanceVar2 = 'default2',     ...overrides   }) {     this.instanceVar1 = instanceVar1;     this.instanceVar2 = instanceVar2;      console.log(overrides); // { extraVar1: 'another value' }   } }  let overrides = {   instanceVar1: 'value',   instanceVar2: 'value2',   extraVar1: 'another value' } let instance = new MyClass(overrides);  console.log(instance.instanceVar1); // value</code></pre> </div> </div> </p>"			2022-06-05 21:10:56.273 UTC
72521376	javascript|html|flask	Retrieve form data passed from javascript to flask python app	"<p>I have a website that has a dynamic javascript table queried through mysql. The table lists devices, with a button on each row. When the button is pushed, the mac address in that row should be used to do another sql query to delete cells from that device.</p> <p>I would like to do the sql query to delete cells from flask, but I am unable to get the mac address back in my flask app.</p> <p>Here is the deleteCustomer and Post javascript functions:</p> <pre><code>function deleteCustomer(obj) {     const data = obj.parentNode.parentNode.textContent;          macIndex = data.search(&quot;:&quot;) - 2;     mac = data.substr(macIndex, 17)      var regex = /^([0-9A-F]{2}[:-]){5}([0-9A-F]{2})$/;     test_flag = regex.test(mac)     if (test_flag)     {         var index = obj.parentNode.parentNode.rowIndex;         var table = document.getElementById(&quot;deviceTable&quot;);         //table.deleteRow(index);         console.log(&quot;start&quot;)         parameters = {             value: mac,             name: &quot;mac&quot;         }         post(&quot;/xgs/unassociate/device&quot;, parameters);     } }  /**  * sends a request to the specified url from a form. this will change the window location.  * @param {string} path the path to send the post request to  * @param {object} params the parameters to add to the url  * @param {string} [method=post] the method to use on the form  */  function post(path, params, method='post') {      // The rest of this code assumes you are not using a library.     // It can be made less verbose if you use one.     const form = document.createElement('form');     form.method = method;     form.action = path;      for (const key in params) {     if (params.hasOwnProperty(key)) {         const hiddenField = document.createElement('input');         hiddenField.type = 'hidden';         hiddenField.name = key;         hiddenField.value = params[key];          form.appendChild(hiddenField);     }     }     console.log(form);     document.body.appendChild(form);     form.submit(); } </code></pre> <p>Here is the flask app route to be called:</p> <pre><code>@app.route('/xgs/unassociate/device', methods=['POST']) def unassocCust(): if session.get('logged_in'):     user = app_users.get_user()     if app_admin.get_permissions()['xgs']:         if request.method == 'POST':             print(&quot;Step 1&quot;)             mac = request.form[&quot;mac&quot;]             print(&quot;Step 1.5&quot;)             result = app_xgs.xgs_unassociateCustomer( mac )             data = app_xgs.xgs_devices_with_cust()             print(&quot;Step 2&quot;)             return render_template('xgs_unassociate.html', user=user, permissions=app_admin.get_permissions(), data=data)     else:         return redirect(url_for('page_not_found')) else:     return redirect(url_for('login')) </code></pre> <p>And finally the script that gets called to present the table.</p> <pre><code>&lt;div id='container'&gt;     &lt;script type=&quot;text/javascript&quot;&gt;         myVar = returnData({{data|tojson}})         document.getElementById('container').innerHTML=createTable(myVar, &quot;unassociate&quot;);     &lt;/script&gt; &lt;/div&gt; </code></pre> <p>The line mac = request.form[&quot;mac&quot;] is causing me issues, I can see the mac being sent to the post(path, params, method='post') func from the javascript console, and my webpage goes to the /xgs/unassociate/device page, but back in flask the request.form[&quot;mac&quot;] is causing the 400 Bad Request, as I only make it to the &quot;step 1&quot; flask print.</p>"	2022-06-06 17:28:02.46 UTC	72522308	"<p>I found the solution, in my post function, the actual 'name' of the mac address was 'value', since its a general post function.</p> <pre><code>if (params.hasOwnProperty(key)) {     const hiddenField = document.createElement('input');     hiddenField.type = 'hidden';     hiddenField.name = key;     hiddenField.value = params[key];      form.appendChild(hiddenField); } </code></pre> <p>So I needed to use &quot;value&quot; instead of &quot;mac&quot; for my form request. Although I expected the hiddenField.name to be what I needed, not sure why to include it in the parameter variable at this point.</p> <pre><code>mac = request.form[&quot;value&quot;] </code></pre>"			2022-06-06 18:56:41.613 UTC
72527837	javascript|python|html|css|flask	Python Flask application - How to make html input tag with dropdown updated by javascript ajax function	"<p>I am trying to make the input tag with id=&quot;livebox&quot; be a live search box with surgestions from youtube. Does any one know how to add a dropdown surgestions box to the input tag with surgestions from <code>res</code> in the javascript?</p> <p>The <code>console.log(res)</code> outputs <code>['sidemen', 'sannevillefamily', 'stor mand', 'spiderman', 'signe kragh', 'ssundee', 'sam and colby', 'speed', 'stille musik', 'speak no evil trailer', 'sleep music', 'stranger things season 4', 'spørg casper', 'shakira']</code> if &quot;s&quot; is typed in the input.</p> <p>All the code used is as follows:</p> <p>Flask code .py</p> <pre><code>import requests import re from isodate import parse_duration from flask_youtube_search.common import myShelvedDict from flask import Blueprint, render_template, current_app, request, redirect,jsonify,url_for    main = Blueprint('main', __name__)  @main.route('/', methods=['GET', 'POST']) def index():        return render_template('index.html',data=[])  @main.route(&quot;/livesearch&quot;,methods=[&quot;POST&quot;,&quot;GET&quot;]) def livesearch():     searchbox = request.form.get(&quot;text&quot;)     URL = f&quot;https://suggestqueries-clients6.youtube.com/complete/search?client=youtube&amp;hl=da&amp;gl=dk&amp;gs_rn=64&amp;gs_ri=youtube&amp;ds=yt&amp;cp=5&amp;gs_id=l&amp;q={searchbox}&amp;xhr=t&amp;xssi=t&quot;     r = requests.get(url = URL)     data = r.text     data = re.findall('&quot;([^&quot;]*)&quot;', data)     data = data[1:(len(data)-5)]     myShelvedDict[&quot;data&quot;] = data     data = tuple(data)     print(data)     return jsonify(data) </code></pre> <p>html code for index.html</p> <pre><code>&lt;!doctype html&gt; &lt;html lang=&quot;en&quot;&gt;   &lt;head&gt;     &lt;meta charset=&quot;utf-8&quot;&gt;     &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1, shrink-to-fit=no&quot;&gt;     &lt;title&gt;Search YouTube&lt;/title&gt;      &lt;!-- Bootstrap core CSS --&gt; &lt;link href=&quot;https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css&quot; rel=&quot;stylesheet&quot; integrity=&quot;sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T&quot; crossorigin=&quot;anonymous&quot;&gt;          &lt;script src=&quot;https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js&quot;&gt;&lt;/script&gt;      &lt;style&gt;       .bd-placeholder-img {         font-size: 1.125rem;         text-anchor: middle;         -webkit-user-select: none;         -moz-user-select: none;         -ms-user-select: none;         user-select: none;       }        @media (min-width: 768px) {         .bd-placeholder-img-lg {           font-size: 3.5rem;         }       }     &lt;/style&gt;     &lt;!-- Custom styles for this template --&gt;     &lt;link href=&quot;{{ url_for('static', filename='album.css') }}&quot; rel=&quot;stylesheet&quot;&gt;   &lt;/head&gt;   &lt;body&gt;  &lt;main role=&quot;main&quot;&gt;   &lt;section class=&quot;jumbotron text-center&quot;&gt;     &lt;div class=&quot;container&quot;&gt;       &lt;h1 class=&quot;jumbotron-heading&quot;&gt;Search YouTube&lt;/h1&gt;       &lt;p class=&quot;lead text-muted&quot;&gt;Get the top nine results on YouTube for your query!&lt;/p&gt;       &lt;div class=&quot;input-group mb-3&quot;&gt;         &lt;input list=&quot;surgestions&quot; type=&quot;text&quot; id = &quot;livebox&quot; name=&quot;query&quot;&gt;         &lt;p&gt;{{data}}&lt;/p&gt;       &lt;/div&gt;       &lt;form action =&quot;search&quot; method=&quot;POST&quot;&gt;       &lt;p&gt;         &lt;button type=&quot;submit&quot; name=&quot;submit&quot; value=&quot;search&quot; class=&quot;btn btn-primary my-2&quot;&gt;YouTube Search&lt;/button&gt;       &lt;/p&gt;       &lt;/form&gt;     &lt;/div&gt;   &lt;/section&gt;    &lt;/main&gt; &lt;/body&gt; &lt;script&gt;   $(document).ready(function(){       $(&quot;#livebox&quot;).on(&quot;input&quot;,function(e){           $(&quot;#datalist&quot;).empty();           $.ajax({               method:&quot;post&quot;,               url:&quot;/livesearch&quot;,               data:{text:$(&quot;#livebox&quot;).val()},               success:function(res){                   console.log(res);               }           });       });   }); &lt;/script&gt; &lt;/html&gt; </code></pre> <p>unimportant css code:</p> <pre><code>.jumbotron {   padding-top: 3rem;   padding-bottom: 3rem;   margin-bottom: 0;   background-color: #fff; } @media (min-width: 768px) {   .jumbotron {     padding-top: 6rem;     padding-bottom: 6rem;   } }  .jumbotron p:last-child {   margin-bottom: 0; }  .jumbotron-heading {   font-weight: 300; }  .jumbotron .container {   max-width: 40rem; }  footer {   padding-top: 3rem;   padding-bottom: 3rem; }  footer p {   margin-bottom: .25rem; }  .jumbotron-video {   text-align: center; }  .video-container {   position: relative;   padding-bottom: 56.25%; /* 16:9 */   height: 0; } .video-container iframe {   position: absolute;   top: 0;   left: 12.5%;   width: 80%;   height: 60%; }  .embedded-video-16-9 {   width:  90vw;   height: 50.625vw; /* 90*9/16 */   margin-left: 5vw;   margin-right: 5vw; }  @media (min-width: 893px) {   .embedded-video-16-9 {     width: 45vw;     height: 25.3125vw; /* 45*9/16 */     margin-left: 2vw;     margin-right: 2vw   } } </code></pre> <p>Unimportant import commom.py</p> <pre><code>import shelve  myShelvedDict = shelve.open(&quot;my_shelved_dictionary.db&quot;) </code></pre>"	2022-06-07 08:03:24.047 UTC	72537930	"<p>Ok, I solved it now.</p> <p>The fix was to use following script:</p> <pre><code>&lt;script&gt;   $(document).ready(function(){       $(&quot;#livebox&quot;).on(&quot;input&quot;,function(e){           var _this = $(this);           $(&quot;#datalist&quot;).empty();           $.ajax({               method:&quot;post&quot;,               url:&quot;/livesearch&quot;,               data:{text:$(&quot;#livebox&quot;).val()},               success:function(res){                 $(&quot;#query&quot;).empty();                 for (var i in res) {                     $(&quot;&lt;option/&gt;&quot;).html(res[i]).appendTo(&quot;#query&quot;);                 }                 _this.focus();               }           });       });   }); &lt;/script&gt; </code></pre> <p>with the html:</p> <pre><code>&lt;input autoComplete=&quot;off&quot; list=&quot;query&quot; type=&quot;text&quot; id = &quot;livebox&quot; name=&quot;query&quot;&gt; &lt;datalist id=&quot;query&quot;&gt;&lt;/datalist&gt;  </code></pre>"			2022-06-07 21:54:46.69 UTC
72528584	javascript|python|selenium|web-scraping|scrape	selenium (python) webdriver JavaScript (noscrypt)	"<p>I am trying to scraping data from a site provide note of student to make analysis I try this good</p> <pre><code>from selenium import webdriver #set chromodriver.exe path driver = webdriver.Chrome(executable_path=&quot;C:\\chromedriver.exe&quot;) #set page load timeout  #launch URL driver.get(&quot;https://amatti.education.gov.dz/&quot;) </code></pre> <p>the first thing happen when run this code is open the site : [the site open normal][1] https://i.stack.imgur.com/ay7QJ.png after the site open it go to this site :</p> <p>[after open go to this site][2] https://i.stack.imgur.com/NWvEa.png</p> <p>I notice there is this good in the html of the site that mean if the browser not support JavaScript will go to URL : google.com</p> <pre><code>&lt;noscript&gt;     &lt;meta http-equiv=&quot;refresh&quot; content=&quot;0; url=http://www.google.com/&quot; /&gt; &lt;/noscript&gt; </code></pre> <p>there is any solution to automate this site [1]: <a href=""https://i.stack.imgur.com/ay7QJ.png"" rel=""nofollow noreferrer"">https://i.stack.imgur.com/ay7QJ.png</a> [2]: <a href=""https://i.stack.imgur.com/NWvEa.png"" rel=""nofollow noreferrer"">https://i.stack.imgur.com/NWvEa.png</a></p>"	2022-06-07 09:03:17.693 UTC	72544701	<p>I found the solution the problem comes from WebDrive the site knows there is bot scraping data so i use this argument</p> <pre><code>options.add_argument(&quot;--disable-blink-features=AutomationControlled&quot;) </code></pre> <p>and its work fine</p>			2022-06-08 11:11:39.443 UTC
72529882	javascript|mediapipe|pose|imagebitmap	Mediapipe pose SegmentationMask python javascript differences	"<p>I am developing a pose recognition webapp using mediapipe pose library (<a href=""https://google.github.io/mediapipe/solutions/pose.html"" rel=""nofollow noreferrer"">https://google.github.io/mediapipe/solutions/pose.html</a>).</p> <p>I am using the segmentationMask to find some specific points of the human body that satisfy a constraint (the value in the n-th pixel must be &gt; 0.1).</p> <p>I'am able to do this evaluation in python. The library returns the segmentation mask as a matrix with the same width and height as the input image, and contains values in [0.0, 1.0] where 1.0 and 0.0 indicate high certainty of a “human” and “background” pixel respectively. So I can iterate over the matrix and I am able to find the point that satisfy the constraint.</p> <p>I am trying to do the same thing in javascript, but I have a problem. The The javascript version of the library does not return a matrix but returns an ImageBitmap used by the html canvas to draw the mask. The problem is that with ImageBitmap I cannot access every point of the matrix and I am not able to find the points I am interested in.</p> <p>Is there a way to transform the javascript segmentationMask ImageBitmap in order be similar to the segmenationMask of the python versione library or at least retrive the same informations (I need the values included in this range [0.0, 1.0] for every pixel of the image).</p> <p>Thank you all.</p>"	2022-06-07 10:49:19.63 UTC	72538596	"<p>There is unfortunately no direct way to get an ImageData from an ImageBitmap, but you can <code>drawImage()</code> this ImageBitmap on a clear canvas and then call <code>ctx.getImageData(0, 0, canvas.width, canvas.height)</code> to retrieve an ImageData where you'll get access to all the pixels data.</p> <p>The confidence will be stored in the Alpha channel (every fourth item in <code>imageData.data</code>) as a value between <code>0</code> and <code>255</code>.</p> <pre><code>function onResults(results) {   canvasCtx.clearRect(0, 0, canvasElement.width, canvasElement.height);   canvasCtx.drawImage(results.segmentationMask, 0, 0,                       canvasElement.width, canvasElement.height);   const imgData = canvasCtx.getImageData(0, 0, canvasElement.width, canvasElement.height);   let i = 0;   for (let y = 0; y&lt;imgData.height; y++) {     for (let x = 0; x&lt;imgData.width; x++) {       const confidence = imgData.data[i + 3];       // do something with confidence here       i++;     }   } } </code></pre> <p>And since you're gonna read a lot from that context, don't forget to pass the <code>willReadFrequently</code> option when you get it.</p> <p><a href=""https://jsfiddle.net/zr1x86Ln/"" rel=""nofollow noreferrer"">As a fiddle</a> since StackSnippets won't allow the use of the camera.</p> <hr /> <p>Note that depending on what you do you may want to colorize this image from red to black using <code>globalCompositeOperation</code> and treat the data as an <code>Uint32Array</code> where the confidence would be expressed between <code>0</code> and <code>0xFF000000</code>.</p>"			2022-06-07 23:42:30.803 UTC
72540788	python|html|beautifulsoup|request	How to wait for JavaScript to render before requesting with Python?	"<p>I am trying to request the HTML of a website generated with JavaScript so I can scrape the information with BeautifulSoup. The problem is when I try requesting the HTML, the information I receive is before the page is rendered. The following is the code I am running:</p> <pre><code>import requests import urllib.request from requests_html import HTMLSession  url = 'https://www.edwarddan.com/projects'  this_session = HTMLSession() response = this_session.get(url) response.html.render()  print(response.text) print(&quot;---------------------------------------------------------------&quot;)  soup = BeautifulSoup(response.text, &quot;html.parser&quot;) names = soup.findAll(&quot;div&quot;) </code></pre> <p>As a result, I get the following HTML:</p> <pre class=""lang-html prettyprint-override""><code>&lt;!doctype html&gt; &lt;html lang=&quot;en&quot;&gt;  &lt;head&gt;   &lt;meta charset=&quot;utf-8&quot; /&gt;   &lt;meta name=&quot;robots&quot; content=&quot;noindex&quot; /&gt;   &lt;script src=&quot;/cdn-cgi/apps/head/cTVctQJ-rr0oH623j2V4Pf03v-o.js&quot;&gt;&lt;/script&gt;   &lt;link rel=&quot;icon&quot; href=&quot;/favicon.ico&quot; /&gt;   &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width,initial-scale=1&quot; /&gt;   &lt;meta name=&quot;theme-color&quot; content=&quot;#000000&quot; /&gt;   &lt;meta name=&quot;description&quot; content=&quot;Edward Dan -- Last updated 1/21/2021&quot; /&gt;   &lt;link rel=&quot;apple-touch-icon&quot; href=&quot;/logo192.png&quot; /&gt;   &lt;link rel=&quot;manifest&quot; href=&quot;/manifest.json&quot; /&gt;   &lt;title&gt;Edward Dan&lt;/title&gt;   &lt;link href=&quot;/static/css/main.d231a676.chunk.css&quot; rel=&quot;stylesheet&quot;&gt; &lt;/head&gt;  &lt;body&gt;&lt;noscript&gt;You need to enable JavaScript to run this app.&lt;/noscript&gt;   &lt;div id=&quot;root&quot;&gt;&lt;/div&gt;   &lt;script&gt;     ! function(e) {       function r(r) {         for (var n, p, l = r[0], a = r[1], f = r[2], c = 0, s = []; c &lt; l.length; c++) p = l[c], Object.prototype.hasOwnProperty.call(o, p) &amp;&amp; o[p] &amp;&amp; s.push(o[p][0]), o[p] = 0;         for (n in a) Object.prototype.hasOwnProperty.call(a, n) &amp;&amp; (e[n] = a[n]);         for (i &amp;&amp; i(r); s.length;) s.shift()();         return u.push.apply(u, f || []), t()       }        function t() {         for (var e, r = 0; r &lt; u.length; r++) {           for (var t = u[r], n = !0, l = 1; l &lt; t.length; l++) {             var a = t[l];             0 !== o[a] &amp;&amp; (n = !1)           }           n &amp;&amp; (u.splice(r--, 1), e = p(p.s = t[0]))         }         return e       }       var n = {},         o = {           1: 0         },         u = [];        function p(r) {         if (n[r]) return n[r].exports;         var t = n[r] = {           i: r,           l: !1,           exports: {}         };         return e[r].call(t.exports, t, t.exports, p), t.l = !0, t.exports       }       p.m = e, p.c = n, p.d = function(e, r, t) {         p.o(e, r) || Object.defineProperty(e, r, {           enumerable: !0,           get: t         })       }, p.r = function(e) {         &quot;undefined&quot; != typeof Symbol &amp;&amp; Symbol.toStringTag &amp;&amp; Object.defineProperty(e, Symbol.toStringTag, {           value: &quot;Module&quot;         }), Object.defineProperty(e, &quot;__esModule&quot;, {           value: !0         })       }, p.t = function(e, r) {         if (1 &amp; r &amp;&amp; (e = p(e)), 8 &amp; r) return e;         if (4 &amp; r &amp;&amp; &quot;object&quot; == typeof e &amp;&amp; e &amp;&amp; e.__esModule) return e;         var t = Object.create(null);         if (p.r(t), Object.defineProperty(t, &quot;default&quot;, {             enumerable: !0,             value: e           }), 2 &amp; r &amp;&amp; &quot;string&quot; != typeof e)           for (var n in e) p.d(t, n, function(r) {             return e[r]           }.bind(null, n));         return t       }, p.n = function(e) {         var r = e &amp;&amp; e.__esModule ? function() {           return e.default         } : function() {           return e         };         return p.d(r, &quot;a&quot;, r), r       }, p.o = function(e, r) {         return Object.prototype.hasOwnProperty.call(e, r)       }, p.p = &quot;/&quot;;       var l = this[&quot;webpackJsonpmy-app&quot;] = this[&quot;webpackJsonpmy-app&quot;] || [],         a = l.push.bind(l);       l.push = r, l = l.slice();       for (var f = 0; f &lt; l.length; f++) r(l[f]);       var i = a;       t()     }([])   &lt;/script&gt;   &lt;script src=&quot;/static/js/2.c42d857a.chunk.js&quot;&gt;&lt;/script&gt;   &lt;script src=&quot;/static/js/main.60cdc4af.chunk.js&quot;&gt;&lt;/script&gt; &lt;/body&gt;  &lt;/html&gt; </code></pre> <p><strong>This HTML produces none of the elements that are the seen when the website has finished generating.</strong> I was wondering if there was a way I can <strong>wait for the website to finish running JavaScript</strong> and create all its elements before fetching said information?</p> <p>I am using <strong>HTMLSession</strong> because, from research, I found that it allow websites to load. Specifically, the line <code>response.html.render()</code> should render the page before fetching data, however, it doesn't seem to be working as <strong>nothing has rendered.</strong></p> <p>I have also tried using Selenium in combination with PhantomJS, however, it seems that Selenium is a bit outdated and I would prefer not to use that?</p> <p>Does anyone know how if there is a way to wait for the JS to finish running with <strong>HTMLSession</strong>? If not, is there another library I can use that will allow me to have this functionality?</p>"	2022-06-08 06:04:57.973 UTC	72544793	"<p>You are using wrong attribute <code>response.text</code>, <a href=""https://github.com/psf/requests-html#javascript-support"" rel=""nofollow noreferrer"">official website suggests</a> to use <code>response.html</code> after rendering.</p> <p>Replacement for your code:</p> <pre class=""lang-py prettyprint-override""><code>from requests_html import HTMLSession from bs4 import BeautifulSoup  url = 'https://www.edwarddan.com/projects'  this_session = HTMLSession() response = this_session.get(url) response.html.render()  print(response.html.raw_html) print(&quot;---------------------------------------------------------------&quot;)  soup = BeautifulSoup(response.html.raw_html, &quot;html.parser&quot;) names = soup.findAll(&quot;div&quot;) </code></pre> <p>We have to use HTML to parse in <code>BeautifulSoup</code> so, we are using <code>response.html.raw_html</code> to get raw HTML.</p> <hr /> <p>And it is better to use <code>response.html.find()</code> function to search rather then using <code>BeautifulSoup</code> because it will be faster, then parsing by BeautifulSoup and searching elements.</p> <p>Example for your code:</p> <pre class=""lang-py prettyprint-override""><code>this_session = HTMLSession() response = this_session.get(url) response.html.render()  print(response.html.find('div')) print(&quot;---------------------------------------------------------------&quot;) </code></pre>"			2022-06-08 11:18:52.853 UTC
72573988	javascript|python-3.x|odoo|point-of-sale	Is there a way to call a javascript function from python function in Odoo	"<p>Here is the issue I have right?</p> <p>[NOTE] this is on <strong>odoo14</strong></p> <p>I have a js file that calls a function in python using rpc and it receives the return object; which is perfect.</p> <blockquote> <p>Snippet of the JS function:</p> </blockquote> <pre><code>               this.rpc({                   model: 'atm.transaction',                   method: 'do_payment_transaction',                   args: [customer_id],                 }).then(function (data)                     {                     console.log(&quot;Response of payment&quot;,data)                 }); </code></pre> <p>The python function on the other hand initiates a request to a third party API; This third party API does its stuff and calls my route which I created under controllers.</p> <p>I want my function that is inside my route in the controller to call a js function.[This is my main problem].</p> <p><em>Any insights will be much appreciated.</em></p>"	2022-06-10 12:01:44.413 UTC	73679560	"<p>Yes its totally possible. This is how for example odoo displays channel messages in front end. Its done through longpooling. Here are the step</p> <ol> <li>In your python function, send a notification message</li> </ol> <pre class=""lang-py prettyprint-override""><code>self.env['bus.bus'].sendone('your_channel','your_notification_type',dict_parameters) </code></pre> <ol start=""2""> <li>In Javascript implement a notification listener and perform your desired action</li> </ol> <pre class=""lang-js prettyprint-override""><code>    this.call('bus_service', 'onNotification', this, this._onLongpollingNotifications);     /**          * @private          * @param {Object[]} notifications          * @param {string} [notifications[i].type]          * @param {string} [notifications[i].payload]          */         async _onLongpollingNotifications(notifications) { // your code processed here } </code></pre> <p>For more info check here : <a href=""https://github.com/odoo/odoo/blob/ea481271f8f477d1cdcbb94826111955ed9a6a4f/addons/mail/models/mail_message.py#L750"" rel=""nofollow noreferrer"">https://github.com/odoo/odoo/blob/ea481271f8f477d1cdcbb94826111955ed9a6a4f/addons/mail/models/mail_message.py#L750</a></p>"			2022-09-11 13:10:57.233 UTC
72574515	javascript|reactjs	scope of if statement in javascript compared to python	<p>I have a function in react where i want to do :</p> <pre><code>   renderPost(data) {         const dateStr = new Date(data.pub_date).toLocaleString();         const img='empty'         if (data.header_image_url.url!=null) {             const img=data.header_image_url.url}         else {             const img=&quot;/app/frontend/img.png&quot;}         return (             &lt;div className=&quot;card mb-4&quot;&gt;             &lt;Link to={`/post/${data.id}`}&gt; &lt;img src={img} className=&quot;card-img-top&quot; alt=&quot;&quot;/&gt; &lt;/Link&gt; </code></pre> <p>But it's not working like python : the const img inside the {} in the if and else statements dont take effect and dont override my const variable declaration above.</p> <p>How can i do that ?</p>	2022-06-10 12:45:08.673 UTC	72574553	"<p>You have two problems here.</p> <p><strong>You can't change the value of a <code>const</code></strong>. That's the whole point of <code>const</code>s! If you want to change it, use <code>let</code>.</p> <p>Declaring a variable in a different scope <a href=""https://en.wikipedia.org/wiki/Variable_shadowing"" rel=""nofollow noreferrer""><strong>shadows</strong></a> the variable in the wider scope. It doesn't overwrite it. Don't use <code>const</code> (or <code>let</code>) inside the block.</p> <hr /> <p>There is a school of thought which says you should avoid overwriting variables in favour of code structures where they are assigned in a single place. This can make code more readable.</p> <p>In this case, each branch of the <code>if</code> does nothing except make an assignment to the same place.</p> <p>This is the ideal place to use a <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Conditional_Operator"" rel=""nofollow noreferrer"">conditional operator</a>.</p> <pre><code>const img = data.header_image_url.url != null      ? data.header_image_url.url      : &quot;/app/frontend/img.png&quot;; </code></pre> <p>… or a <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Nullish_coalescing_operator"" rel=""nofollow noreferrer"">nullish coalescing operator</a>:</p> <pre><code>const img = data.header_image_url.url ?? &quot;/app/frontend/img.png&quot;; </code></pre>"			2022-06-10 12:48:12.643 UTC
72582635	javascript|pandas|jupyter-notebook|data-visualization|ipython	Visualizing dataframes in ipython/jupyter notebook by using javascript	"<p>I recently discovered that it's quite easy to inject HTML into Jupiter notebook to visualize python objects. That seems particularly useful to me to write a custom interactive plot for pandas dataframes.</p> <p>The most basic example is:</p> <pre><code>from IPython.display import HTML import pandas as pd HTML( pd.DataFrame([[1,2],[3,4]]).to_html() ) # prints the html representation of a dataframe </code></pre> <p>What I am trying to accomplish is something similar to what apache zeppelin implements (<a href=""https://zeppelin.apache.org/"" rel=""nofollow noreferrer"">https://zeppelin.apache.org/</a>, data visualization), where you can pivot columns interactively to explore the data frame.</p> <p>The first solution I can think of is writing a function get_html that takes the pandas df as input in a json format and visualizes it via d3, pseudocode:</p> <pre><code>def get_html(json_data):     big_html = \     f&quot;&quot;&quot;     &lt;html&gt;     &lt;script&gt;     // inject {json_data} into the js library of your choice     &lt;script&gt;     &lt;/html&gt;     &quot;&quot;&quot;     return big_html HTML( get_html(df.to_json(orient=&quot;records&quot;)) ) </code></pre> <p>This seems suboptimal for a number of reasons, for instance</p> <ol> <li>performance (df are often big)</li> <li>ease of development (get_html should actually call a custom <code>js</code> library, instead of embedding js that way)</li> </ol> <p>However, I cannot figure out how to make this work better.<br /> An idea could be dumping the df onto a json and then re-reading from the disk, but I don't know how to do it.</p>"	2022-06-11 07:56:09.463 UTC	72930821	"<p>I’m not familiar with apache zeppelin, but I’ve had good results with the tools at <a href=""https://bokeh.org/"" rel=""nofollow noreferrer"">bokeh</a> for visual data exploration. Especially check out the crossfilter example on the demo page. Hope it helps.</p>"			2022-07-10 18:16:27.623 UTC
72636753	javascript|python	convert script from javascript to python	"<p>i need help i would like to convert this code to python is there anything online that will turn me into a python? from javascript? the question is how can I convert it online?</p> <pre><code>const number = parseInt(prompt('od: ')); const range = parseInt(prompt('do: '));  for(let i = 1; i &lt;= range; i++) {     const result = i * number;  const result1 = result*2;  function d_root(num) {   return (num % 9) || 9; }  if((result1.toString().length) == 1){ var z = (result*2)     console.log(`${number} * ${i} = ${result},*2=vysledek,${z}`); } if((result1.toString().length) == 2){ var z = (result*2) var a =(z.toString().slice(-2,1)) var b =(z.toString().slice(-1))     console.log(`${number} * ${i} = ${result},*2=vysledek,${z}, ${a+b},${b+a}`); }    if((result1.toString().length) == 3){ var z = (result*2) var a =(z.toString().slice(-0,1)) var b =(z.toString().slice(1,2)) var c =(z.toString().slice(2,3))     console.log(`${number} * ${i} = ${result},*2=vysledek,${z}, ${a+c+b},${a+b+c}`); }  if((result1.toString().length) == 4){  var z = (result*2) var a =(z.toString().slice(0,-3)) var b =(z.toString().slice(1,-2)) var c =(z.toString().slice(2,-1)) var d = (z.toString().slice(3))     console.log(`${number} * ${i} = ${result},*2=vysledek,${z}, ${a+c+d+b},${a+b+c+d}`);  }} </code></pre> <p>this have in python</p> <pre><code>    def digit_root(n):         if n == 0: return 0         return (n - 1) % 9 + 1 n = int(input(&quot;od čisla:&quot;)) m = int(input(&quot;do čisla:&quot;))  for i in range(1,m + 1):     result = i*n     result1 = result*2;     string = (len(str(result1)))     if string == 1:        print(result1)     if string == 2:              if string == 3:              if string == 4: </code></pre> <p>how do i convert slice? and change the order of the digits?</p>"	2022-06-15 19:16:43.767 UTC	72637908	"<p>I believe this does what you ask.  Some of this is silly.  It splits the number up into digits, then prints the individual digits in the same order.</p> <pre><code>number = int(input('od: ')) nrange = int(input('do: '))  def d_root(num):     return (num % 9) or 9  for i in range(nrange):     result = (i+1) * number     z = result * 2     zs = str(z)      if z &lt; 10:         print( f&quot;{number} * {i+1} = {result}, *2=vysledek,{z}&quot; )      elif z &lt; 100:         a = zs[0]         b = zs[1]         print( f&quot;{number} * {i+1} = {result}, *2=vysledek,{z}, {a+b},{b+a}&quot; )      elif z &lt; 1000:         a = zs[0]         b = zs[1]         c = zs[2]         print( f&quot;{number} * {i+1} = {result}, *2=vysledek,{z}, {a+c+b},{a+b+c}&quot; )      elif z &lt; 10000:         a = zs[0]         b = zs[1]         c = zs[2]         d = zs[3]         print( f&quot;{number} * {i+1} = {result}, *2=vysledek,{z}, {a+c+d+b},{a+b+c+d}&quot; ) </code></pre>"			2022-06-15 21:15:02.307 UTC
72641009	python|json|pandas	How to extract text and save as excel file using python or JavaScript	"<p>How do I extract text from this PDF files where some data is in the form of table  while some are key value based data</p> <p>eg: <a href=""https://drive.internxt.com/s/file/78f2d73478b832b2ab55/3edb275967deeca6ad33e7d53f2337c50d5dfb50e0aa525bb7f10d49dff1e2b4"" rel=""nofollow noreferrer"">https://drive.internxt.com/s/file/78f2d73478b832b2ab55/3edb275967deeca6ad33e7d53f2337c50d5dfb50e0aa525bb7f10d49dff1e2b4</a></p> <p>This is what I have tried :</p> <pre><code>import PyPDF2 import openpyxl  from openpyxl import Workbook  pdfFileObj = open('sample.pdf', 'rb') pdfReader = PyPDF2.PdfFileReader(pdfFileObj) pdfReader.numPages  pageObj = pdfReader.getPage(0) mytext = pageObj.extractText()   wb = Workbook() sheet = wb.active sheet.title = 'MyPDF' sheet['A1'] = mytext  wb.save('sample.xlsx') print('Save') </code></pre> <p>However I'd like the data to be stored in the following format.</p> <p><a href=""https://i.stack.imgur.com/2r9ZC.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/2r9ZC.png"" alt=""enter image description here"" /></a></p>"	2022-06-16 05:42:35.443 UTC	72662804	"<p>This pdf does not have well defined tables, hence cannot use any tool to extract the entire data in one table format. What we can do is read the entire pdf as text. And process each data fields line by line by using regex to extract the data.</p> <p>Before you move ahead, please install the pdfplumber package for python</p> <pre><code>pip install pdfplumber </code></pre> <h2>Assumptions</h2> <p>Here are some assumptions that I made for your pdf and accordingly I have written the code.</p> <p><a href=""https://i.stack.imgur.com/vGVu1.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/vGVu1.png"" alt=""enter image description here"" /></a></p> <ol> <li>First line will always contain the title <code>Account History Report</code>.</li> <li>Second line will contain the names <code>IMAGE         All Notes</code></li> <li>Third line will contain only the data <code>Date Created</code> in the form of key:value.</li> <li>Fourth line will contain only the data <code>Number of Pages</code> in the form of key:value.</li> <li>Fifth line will only contain the data <code>Client Code, Client Name</code></li> <li>Starting line 6, a pdf can have multiple data entity, these data entity for eg in this pdf is 2 but can be any  number of entity.</li> <li>Each data entity will contain the following fields:</li> <li>First line in data entity will contain only the data <code>Our Ref, Name, Ref 1, Ref 2</code></li> <li>Second line line will only contain data in the form as present in pdf <code>Amount, Total Paid, Balance, Date of A/C, Date Received</code></li> <li>Third line in data entity will contain the data <code>Last Paid, Amt Last Paid, Status, Collector</code>.</li> <li>Fourth line will contain the column name <code>Date Notes</code></li> <li>The subsequent lines will contain data in the form of table until the next data entity is started.</li> <li>I also assume that each data entity will contain the first data with key <code>Our Ref :</code>.</li> <li>I assume that the data entity will be separated on the first line of each entity in the pattern of key values as <code>Our Ref :Value    Name: Value    Ref 1 :Value    Ref 2:value</code></li> </ol> <pre><code>pattern = r'Our Ref.*?Name.*?Ref 1.*?Ref 2.*?' </code></pre> <ol start=""15""> <li><p>Please note that the rectangle that I have created(thick black) in above image, I am calling those as data entity.</p> </li> <li><p>The final data will be stored in a dictionary(json) where the data entity will have key as dataentity1, dataentity2, dataentity3 based on the number of entities you have in your pdf.</p> </li> <li><p>The header details are stored in the json as key:value and I assume that each key will be present in header only once.</p> </li> </ol> <h2>CODE</h2> <p>Here is the simple elegant code, that gives you information from the pdf in the  form of json. In the output the first few field contains information from the header part, subsequent data entities can be found as data_entity 1 and 2.</p> <p>In the below code all you need to change is <code>pdf_path</code>.</p> <pre><code>import pdfplumber import re  # regex pattern for keys in line1 of data entity my_regex_dict_line1 = {     'Our Ref' : r'Our Ref :(.*?)Name',     'Name' : r'Name:(.*?)Ref 1',     'Ref 1' : r'Ref 1 :(.*?)Ref 2',     'Ref 2' : r'Ref 2:(.*?)$' }  # regex pattern for keys in line2 of data entity my_regex_dict_line2 = {     'Amount' : r'Amount:(.*?)Total Paid',     'Total Paid' : r'Total Paid:(.*?)Balance',     'Balance' : r'Balance:(.*?)Date of A/C',     'Date of A/C' : r'Date of A/C:(.*?)Date Received',     'Date Received' : r'Date Received:(.*?)$' }  # regex pattern for keys in line3 of data entity my_regex_dict_line3 ={     'Last Paid' : r'Last Paid:(.*?)Amt Last Paid',     'Amt Last Paid' : r'Amt Last Paid:(.*?)A/C\s+Status',     'A/C Status': r'A/C\s+Status:(.*?)Collector',     'Collector' : r'Collector :(.*?)$' }  def preprocess_data(data):     return [el.strip() for el in data.splitlines() if el.strip()]      def get_header_data(text, json_data = {}):     header_data_list = preprocess_data(text)     # third line in text of header contains Date Created field     json_data['Date Created'] = re.search(r'Date Created:(.*?)$', header_data_list[2]).group(1).strip()     # fourth line in text contains Number of Pages, Client Code, Client Name     json_data['Number of Pages'] = re.search(r'Number of Pages:(.*?)$', header_data_list[3]).group(1).strip()     # fifth line in text contains Client Code and ClientName     json_data['Client Code'] = re.search(r'Client Code - (.*?)Client Name', header_data_list[4]).group(1).strip()     json_data['ClientName'] = re.search(r'Client Name - (.*?)$', header_data_list[4]).group(1).strip()      def iterate_through_regex_and_populate_dictionaries(data_dict, regex_dict, text):     ''' For the given pattern of regex_dict, this function iterates through each regex pattern and adds the key value to regex_dict dictionary '''     for key, regex in regex_dict.items():             matched_value = re.search(regex, text)             if matched_value is not None:                 data_dict[key] = matched_value.group(1).strip()  def populate_date_notes(data_dict, text):     ''' This function populates date and Notes in the data chunk in the form of list to data_dict dictionary '''     data_dict['Date'] = []     data_dict['Notes'] = []     iter = 4     while(iter &lt; len(text)):         date_match = re.search(r'(\d{2}/\d{2}/\d{4})',text[iter])         data_dict['Date'].append(date_match.group(1).strip())         notes_match = re.search(r'\d{2}/\d{2}/\d{4}\s*(.*?)$',text[iter])         data_dict['Notes'].append(notes_match.group(1).strip())         iter += 1     data_index = 1 json_data = {} pdf_path = r'C:\Users\hpoddar\Desktop\Temp\sample3.pdf' # ENTER YOUR PDF PATH HERE pdf_text = '' data_entity_sep_pattern = r'(?=Our Ref.*?Name.*?Ref 1.*?Ref 2)'  if(__name__ == '__main__'):     with pdfplumber.open(pdf_path) as pdf:         index = 0         while(index &lt; len(pdf.pages)):             page = pdf.pages[index]             pdf_text += '\n' + page.extract_text()             index += 1                  split_on_data_entity = re.split(data_entity_sep_pattern, pdf_text.strip())     # first data in the split_on_data_entity list will contain the header information     get_header_data(split_on_data_entity[0], json_data)     while(data_index &lt; len(split_on_data_entity)):         data_entity = {}         data_processed = preprocess_data(split_on_data_entity[data_index])         iterate_through_regex_and_populate_dictionaries(data_entity, my_regex_dict_line1, data_processed[0])         iterate_through_regex_and_populate_dictionaries(data_entity, my_regex_dict_line2, data_processed[1])         iterate_through_regex_and_populate_dictionaries(data_entity, my_regex_dict_line3, data_processed[2])         if(len(data_processed) &gt; 3 and data_processed[3] != None and 'Date' in data_processed[3] and 'Notes' in data_processed[3]):             populate_date_notes(data_entity, data_processed)             json_data['data_entity' + str(data_index)] = data_entity         data_index += 1                  print(json_data) </code></pre> <p><strong>Output :</strong></p> <p><a href=""https://i.stack.imgur.com/1Oe6m.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/1Oe6m.png"" alt=""enter image description here"" /></a></p> <p><strong>Result string :</strong></p> <pre><code>{'Date Created': '18/04/2022', 'Number of Pages': '4', 'Client Code': '110203', 'ClientName': 'AWS PTE. LTD.', 'data_entity1': {'Our Ref': '2118881115', 'Name': 'Sky Blue', 'Ref 1': '12-34-56789-2021/2', 'Ref 2': 'F2021004444', 'Amount': '$100.11', 'Total Paid': '$0.00', 'Balance': '$100.11', 'Date of A/C': '01/08/2021', 'Date Received': '10/12/2021', 'Last Paid': '', 'Amt Last Paid': '', 'A/C Status': 'CLOSED', 'Collector': 'Sunny Jane', 'Date': ['04/03/2022'], 'Notes': ['Letter Dated 04 Mar 2022.']}, 'data_entity2': {'Our Ref': '2112221119', 'Name': 'Green Field', 'Ref 1': '98-76-54321-2021/1', 'Ref 2': 'F2021001111', 'Amount': '$233.88', 'Total Paid': '$0.00', 'Balance': '$233.88', 'Date of A/C': '01/08/2021', 'Date Received': '10/12/2021', 'Last Paid': '', 'Amt Last Paid': '', 'A/C Status': 'CURRENT', 'Collector': 'Sam Jason', 'Date': ['11/03/2022', '11/03/2022', '08/03/2022', '08/03/2022', '21/02/2022', '18/02/2022', '18/02/2022'], 'Notes': ['Email for payment', 'Case Status', 'to send a Letter', '845***Ringing, No reply', 'Letter printed - LET: LETTER 2', 'Letter sent - LET: LETTER 2', '845***Line busy']}} </code></pre> <p>Now once you got the data in the json format, you can load it in a csv file, as a data frame or whatever format you need the data to be in.</p> <h3>Save as xlsx</h3> <p>To save the same in a xlsx file in the format as shown in the image in the question above. We can use xlsx writer to do the same. Please install the package using pip</p> <pre><code>pip install xlsxwriter </code></pre> <p>From the previous code, we have our entire data in the variable json_data, we will be iterating through all the data entities and write the data to appropriate cell specified by <code>row, col</code> in the code.</p> <pre><code>import xlsxwriter workbook = xlsxwriter.Workbook('Sample.xlsx') worksheet = workbook.add_worksheet(&quot;Sheet 1&quot;) row = 0 col = 0  # write columns columns = ['Account History Report', 'All Notes'] + [ key for key in json_data.keys() if 'data_entity' not in key ] + list(json_data['data_entity1'].keys()) worksheet.write_row(row, col,  tuple(columns)) row += 1  column_index_map = {} for index, col in enumerate(columns):     column_index_map[col] =  index  # write the header worksheet.write(row, column_index_map['Date Created'],  json_data['Date Created']) worksheet.write(row, column_index_map['Number of Pages'],  json_data['Number of Pages']) worksheet.write(row, column_index_map['Client Code'],  json_data['Client Code']) worksheet.write(row, column_index_map['ClientName'],  json_data['ClientName']) data_entity_index = 1   #iterate through each data entity and for each key insert the values in the sheet while True:     data_entity_key = 'data_entity' + str(data_entity_index)     row_size = 1     if(json_data.get(data_entity_key) != None):         for key, value in json_data.get(data_entity_key).items():             if(type(value) == list):                 worksheet.write_column(row, column_index_map[key],  tuple(value))                 row_size = len(value)             else:                 worksheet.write(row, column_index_map[key], value)     else:         break     data_entity_index += 1     row += row_size      workbook.close() </code></pre> <p><strong>Result :</strong> The above code creates a file <code>sample.xlsx</code> in the working directory.</p> <p><a href=""https://i.stack.imgur.com/m1c5Y.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/m1c5Y.png"" alt=""enter image description here"" /></a></p>"			2022-06-17 17:19:26.677 UTC
72642467	javascript|python|php|node.js	convert text file to JSON as key value pair or header with CSV in python or JavaScript or PHP	"<p>I have text file in this format.</p> <p><a href=""https://drive.internxt.com/s/file/6c667ac1aa473f493252/c0918d6bc5217ea29f44fdf9182a6d284e2776a0efd2f51f61bb6a0a207afdca"" rel=""nofollow noreferrer"">https://drive.internxt.com/s/file/6c667ac1aa473f493252/c0918d6bc5217ea29f44fdf9182a6d284e2776a0efd2f51f61bb6a0a207afdca</a></p> <p>I'd like to convert as CSV with header as in</p> <p><a href=""https://i.stack.imgur.com/WjwC7.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/WjwC7.png"" alt=""enter image description here"" /></a></p> <p>or JSON key value pair. Appreciate for guiding.</p>"	2022-06-16 08:05:17.563 UTC	72642690	<p>learn <code>awk</code> and <code>sed</code> powerful tools just for this type of situation.</p>			2022-06-16 08:25:35.717 UTC
72665122	javascript|python|json|scrapy	Scrapy: Converting Javascript array to Json on Python	"<p>I have been struggling with a site I am scrapping using scrappy. This site, returns a series of Javascript variables (array) with the products data. Example:</p> <pre><code>datos[0] = [&quot;12345&quot;,&quot;3M YELLOW CAT5E CABLE&quot;,&quot;6.81&quot;,&quot;1&quot;,&quot;A&quot;,&quot;N&quot;,&quot;N&quot;,&quot;N&quot;,&quot;N&quot;,&quot;N&quot;,0,0,0,0,0,&quot;0&quot;,&quot;0&quot;,&quot;0&quot;,&quot;0&quot;,&quot;0&quot;,&quot;P&quot;,&quot;001-0030&quot;,&quot;12&quot;,&quot;40K8957&quot;,&quot;28396&quot;,&quot;250&quot;,&quot;Due: 30-12-1899&quot;,0.0000,1,&quot;&quot;,\'\']; datos[1] = [&quot;12346&quot;,&quot;3M GREEN CAT5E CABLE&quot;,&quot;7.81&quot;,&quot;1&quot;,&quot;A&quot;,&quot;N&quot;,&quot;N&quot;,&quot;N&quot;,&quot;N&quot;,&quot;N&quot;,0,0,0,0,0,&quot;0&quot;,&quot;0&quot;,&quot;0&quot;,&quot;0&quot;,&quot;0&quot;,&quot;P&quot;,&quot;001-0030&quot;,&quot;12&quot;,&quot;40K8957&quot;,&quot;28396&quot;,&quot;250&quot;,&quot;Due: 30-12-1899&quot;,0.0000,1,&quot;&quot;,\'\']; ... </code></pre> <p>So on...</p> <p>Fetching the array into a string with scrapy was easy, since the site response prints the variables. The problem is I want to transform it into Json so I can process it and store it in a database table.</p> <p>Normally I would use Javascript's function Json.stringify to convert it to Json and post it in PHP.</p> <p>However when using Python's json.loads and even StringIO I am unable to load the array into json.</p> <p>Probably is a format error, but I am unable to identify it, since I am not expert in Json nor Python.</p> <p>EDIT: I just realize since scrapy is unable to execute Javascript probably the main issue is that the data is just a string. I should format it into a Json format.</p> <p>Any help is more than welcome.</p> <p>Thank you.</p>"	2022-06-17 21:50:03.91 UTC	72668104	"<p>There is a section in the <a href=""https://docs.scrapy.org/en/latest/topics/dynamic-content.html#parsing-javascript-code"" rel=""nofollow noreferrer""><code>scrapy</code> doc</a> to find various ways to parse the JavaScript code. For your case, if you just need to have it in an array, you can use the regex to get the data.</p> <p>Since the website you are scraping is not present in the question, I am assuming this would be a more straightforward way to get it, but you could use whichever way seems suitable.</p>"			2022-06-18 09:15:21.043 UTC
72665122	javascript|python|json|scrapy	Scrapy: Converting Javascript array to Json on Python	"<p>I have been struggling with a site I am scrapping using scrappy. This site, returns a series of Javascript variables (array) with the products data. Example:</p> <pre><code>datos[0] = [&quot;12345&quot;,&quot;3M YELLOW CAT5E CABLE&quot;,&quot;6.81&quot;,&quot;1&quot;,&quot;A&quot;,&quot;N&quot;,&quot;N&quot;,&quot;N&quot;,&quot;N&quot;,&quot;N&quot;,0,0,0,0,0,&quot;0&quot;,&quot;0&quot;,&quot;0&quot;,&quot;0&quot;,&quot;0&quot;,&quot;P&quot;,&quot;001-0030&quot;,&quot;12&quot;,&quot;40K8957&quot;,&quot;28396&quot;,&quot;250&quot;,&quot;Due: 30-12-1899&quot;,0.0000,1,&quot;&quot;,\'\']; datos[1] = [&quot;12346&quot;,&quot;3M GREEN CAT5E CABLE&quot;,&quot;7.81&quot;,&quot;1&quot;,&quot;A&quot;,&quot;N&quot;,&quot;N&quot;,&quot;N&quot;,&quot;N&quot;,&quot;N&quot;,0,0,0,0,0,&quot;0&quot;,&quot;0&quot;,&quot;0&quot;,&quot;0&quot;,&quot;0&quot;,&quot;P&quot;,&quot;001-0030&quot;,&quot;12&quot;,&quot;40K8957&quot;,&quot;28396&quot;,&quot;250&quot;,&quot;Due: 30-12-1899&quot;,0.0000,1,&quot;&quot;,\'\']; ... </code></pre> <p>So on...</p> <p>Fetching the array into a string with scrapy was easy, since the site response prints the variables. The problem is I want to transform it into Json so I can process it and store it in a database table.</p> <p>Normally I would use Javascript's function Json.stringify to convert it to Json and post it in PHP.</p> <p>However when using Python's json.loads and even StringIO I am unable to load the array into json.</p> <p>Probably is a format error, but I am unable to identify it, since I am not expert in Json nor Python.</p> <p>EDIT: I just realize since scrapy is unable to execute Javascript probably the main issue is that the data is just a string. I should format it into a Json format.</p> <p>Any help is more than welcome.</p> <p>Thank you.</p>"	2022-06-17 21:50:03.91 UTC	72665538	"<p>If you wanted to take an array and create a json object, you could do something like this.</p> <pre class=""lang-py prettyprint-override""><code>values = [&quot;12345&quot;,&quot;3M YELLOW CAT5E CABLE&quot;,&quot;6.81&quot;,&quot;1&quot;,&quot;A&quot;,&quot;N&quot;,&quot;N&quot;,&quot;N&quot;,&quot;N&quot;,&quot;N&quot;,0,0,0,0,0,&quot;0&quot;,&quot;0&quot;,&quot;0&quot;,&quot;0&quot;,&quot;0&quot;,&quot;P&quot;,&quot;001-0030&quot;,&quot;12&quot;,&quot;40K8957&quot;,&quot;28396&quot;,&quot;250&quot;,&quot;Due: 30-12-1899&quot;,0.0000,1] keys = [x for x in range(len(values))] d = dict(zip(keys, values)) x = json.dumps(d) </code></pre>"			2022-06-17 23:07:17.27 UTC
72676043	javascript|python|selenium|variables	How can I define a javascript variable on a webpage in selenium using Python?	"<p>So I'm trying to execute a script on a webpage in Python that just declares a js variable with selenium. My code:</p> <pre><code>driver.execute_script('var apikey = 30') </code></pre> <p>Nevertheless, when I try to call the variable it somehow says it's undeclared, really weird. How would I define a js variable on a webpage using selenium?</p> <p>Have a good day :)</p>"	2022-06-19 10:21:59.107 UTC	72676386	"<p>The code in the <code>execute_script</code> method runs as a body of an anonymous function (<a href=""https://www.selenium.dev/selenium/docs/api/java/org/openqa/selenium/JavascriptExecutor.html#executeScript(java.lang.String,java.lang.Object...)"" rel=""nofollow noreferrer"">link</a>).</p> <p>If you need to declare a global variable, explicitly assign it to the <code>window</code> variable:</p> <pre class=""lang-py prettyprint-override""><code>driver.execute_script('window.apikey = 30') </code></pre>"			2022-06-19 11:14:14.077 UTC
72677587	python|heroku	Could not find an available JavaScript runtime (Telegram bot on Python & Heroku)	"<p>I'm trying to deploy my tiny bot for Telegram on Heroku. Unfortunately it doesn't work. This is what I see in my &quot;heroku logs&quot;:</p> <pre><code>2022-06-19T13:51:08.829364+00:00 heroku[worker.1]: Starting process with command `python main.py` 2022-06-19T13:51:09.412655+00:00 heroku[worker.1]: State changed from starting to up 2022-06-19T13:51:10.244258+00:00 app[worker.1]: Using United States server backend. 2022-06-19T13:51:18.696067+00:00 app[worker.1]: 2022-06-19 13:51:18,695 (util.py:66 WorkerThread2) ERROR - TeleBot: &quot;RuntimeUnavailableError occurred, args=('Could not find an available JavaScript runtime.',) 2022-06-19T13:51:18.696089+00:00 app[worker.1]: Traceback (most recent call last): 2022-06-19T13:51:18.696091+00:00 app[worker.1]: File &quot;/app/.heroku/python/lib/python3.10/site-packages/telebot/util.py&quot;, line 60, in run 2022-06-19T13:51:18.696091+00:00 app[worker.1]: task(*args, **kwargs) 2022-06-19T13:51:18.696092+00:00 app[worker.1]: File &quot;/app/main.py&quot;, line 40, in send_welcome 2022-06-19T13:51:18.696092+00:00 app[worker.1]: result = ts.bing(result, from_language='ru', to_language='en') 2022-06-19T13:51:18.696093+00:00 app[worker.1]: File &quot;/app/.heroku/python/lib/python3.10/site-packages/translators/apis.py&quot;, line 902, in bing_api 2022-06-19T13:51:18.696093+00:00 app[worker.1]: self.tk = self.get_tk(host_html) 2022-06-19T13:51:18.696093+00:00 app[worker.1]: File &quot;/app/.heroku/python/lib/python3.10/site-packages/translators/apis.py&quot;, line 856, in get_tk 2022-06-19T13:51:18.696094+00:00 app[worker.1]: result = execjs.get().eval(result_str) 2022-06-19T13:51:18.696094+00:00 app[worker.1]: File &quot;/app/.heroku/python/lib/python3.10/site-packages/execjs/_runtimes.py&quot;, line 21, in get 2022-06-19T13:51:18.696095+00:00 app[worker.1]: return get_from_environment() or _find_available_runtime() 2022-06-19T13:51:18.696095+00:00 app[worker.1]: File &quot;/app/.heroku/python/lib/python3.10/site-packages/execjs/_runtimes.py&quot;, line 49, in _find_available_runtime 2022-06-19T13:51:18.696096+00:00 app[worker.1]: raise exceptions.RuntimeUnavailableError(&quot;Could not find an available JavaScript runtime.&quot;) 2022-06-19T13:51:18.696096+00:00 app[worker.1]: execjs._exceptions.RuntimeUnavailableError: Could not find an available JavaScript runtime. 2022-06-19T13:51:18.696096+00:00 app[worker.1]: &quot; 2022-06-19T13:51:18.696210+00:00 app[worker.1]: Traceback (most recent call last): 2022-06-19T13:51:18.696225+00:00 app[worker.1]: File &quot;/app/main.py&quot;, line 56, in &lt;module&gt; 2022-06-19T13:51:18.696380+00:00 app[worker.1]: bot.polling() 2022-06-19T13:51:18.696388+00:00 app[worker.1]: File &quot;/app/.heroku/python/lib/python3.10/site-packages/telebot/__init__.py&quot;, line 392, in polling 2022-06-19T13:51:18.696519+00:00 app[worker.1]: self.__threaded_polling(none_stop, interval, timeout) 2022-06-19T13:51:18.696527+00:00 app[worker.1]: File &quot;/app/.heroku/python/lib/python3.10/site-packages/telebot/__init__.py&quot;, line 416, in __threaded_polling 2022-06-19T13:51:18.696645+00:00 app[worker.1]: self.worker_pool.raise_exceptions() 2022-06-19T13:51:18.696647+00:00 app[worker.1]: File &quot;/app/.heroku/python/lib/python3.10/site-packages/telebot/util.py&quot;, line 109, in raise_exceptions 2022-06-19T13:51:18.696727+00:00 app[worker.1]: six.reraise(self.exc_info[0], self.exc_info[1], self.exc_info[2]) 2022-06-19T13:51:18.696735+00:00 app[worker.1]: File &quot;/app/.heroku/python/lib/python3.10/site-packages/six.py&quot;, line 719, in reraise 2022-06-19T13:51:18.696932+00:00 app[worker.1]: raise value 2022-06-19T13:51:18.696942+00:00 app[worker.1]: File &quot;/app/.heroku/python/lib/python3.10/site-packages/telebot/util.py&quot;, line 60, in run 2022-06-19T13:51:18.697016+00:00 app[worker.1]: task(*args, **kwargs) 2022-06-19T13:51:18.697025+00:00 app[worker.1]: File &quot;/app/main.py&quot;, line 40, in send_welcome 2022-06-19T13:51:18.697097+00:00 app[worker.1]: result = ts.bing(result, from_language='ru', to_language='en') 2022-06-19T13:51:18.697105+00:00 app[worker.1]: File &quot;/app/.heroku/python/lib/python3.10/site-packages/translators/apis.py&quot;, line 902, in bing_api 2022-06-19T13:51:18.697410+00:00 app[worker.1]: self.tk = self.get_tk(host_html) 2022-06-19T13:51:18.697411+00:00 app[worker.1]: File &quot;/app/.heroku/python/lib/python3.10/site-packages/translators/apis.py&quot;, line 856, in get_tk 2022-06-19T13:51:18.697715+00:00 app[worker.1]: result = execjs.get().eval(result_str) 2022-06-19T13:51:18.697724+00:00 app[worker.1]: File &quot;/app/.heroku/python/lib/python3.10/site-packages/execjs/_runtimes.py&quot;, line 21, in get 2022-06-19T13:51:18.697798+00:00 app[worker.1]: return get_from_environment() or _find_available_runtime() 2022-06-19T13:51:18.697806+00:00 app[worker.1]: File &quot;/app/.heroku/python/lib/python3.10/site-packages/execjs/_runtimes.py&quot;, line 49, in _find_available_runtime 2022-06-19T13:51:18.697872+00:00 app[worker.1]: raise exceptions.RuntimeUnavailableError(&quot;Could not find an available JavaScript runtime.&quot;) 2022-06-19T13:51:18.697904+00:00 app[worker.1]: execjs._exceptions.RuntimeUnavailableError: Could not find an available JavaScript runtime. 2022-06-19T13:51:18.900263+00:00 heroku[worker.1]: Process exited with status 1 2022-06-19T13:51:19.187322+00:00 heroku[worker.1]: State changed from up to crashed </code></pre> <p>I was thinking that the problem might have been with pyexecjs or nodejs, so I added it into requirements.txt:</p> <pre><code>PyTelegramBotAPI==3.6.7 telebot==0.0.4 translators==5.2.2 numpy==1.22.4 pyexecjs nodejs </code></pre> <p>Changing python versions etc is of no effect as well.</p> <p>Thank you in advance!</p>"	2022-06-19 14:16:17.1 UTC	73401788	"<p>I encountered a similar problem when deploying my vercel serverless function.</p> <p>PyExecJS has been archived by the owner. It is now read-only.</p> <blockquote> <p>This library is no longer maintananced (Reason). Bugs are not be fixed (even if they are trivial or essential).We suggest to use other library or to make a fork.</p> </blockquote> <p>Try <a href=""https://pypi.org/project/Js2Py/"" rel=""nofollow noreferrer"">Js2Py</a></p> <blockquote> <p>Translates JavaScript to Python code. Js2Py is able to translate and execute virtually any JavaScript code. Js2Py is written in pure python and does not have any dependencies. Basically an implementation of JavaScript core in pure python.</p> </blockquote> <pre class=""lang-py prettyprint-override""><code>js = execjs.compile(func_ub9) res = js.call('ub98484234') </code></pre> <pre class=""lang-py prettyprint-override""><code>context = js2py.EvalJs() context.execute(func_ub9) res = context.ub98484234() </code></pre>"			2022-08-18 10:52:26.023 UTC
72709211	r|computer-science	Object destructuring in R for writing packages; like Python's `**` or JavaScript's `...`	"<p>I have been looking for a way to do object destructuring. This in an effort to write cleaner code when developing packages.</p> <p>I often have a complex system of functions that call others etc and I want to make those arguments available at the higher level functions to the user.</p> <p>When developing packages for <code>R</code> I end up often writing functions that call other functions and end up having to either use the <code>...</code> operator (which can only be used once. Or to manually re-assign the object like so:</p> <pre><code>someFunction1 &lt;- function(arg1, arg2) { print(stringr::str_interp('Do something with ${arg1}, and with ${arg2}')) }  someFunction2 &lt;- function(arg3, arg4) { print(stringr::str_interp('Do something with ${arg1}, and with ${arg2}')) }  # solution with R's ...  someHigherFunction &lt;- function(arg5, arg6, ...) {     # do something with arg5 and 6      someFunction1(...) }  # otherwise I start having to do this; and the more nested the functions get the harder it is to manage someHigherFunction &lt;- function(arg5, arg6, arg1, arg2, arg3, arg4) {     # do something with arg5 and 6      someFunction1(arg1 = arg1, arg2 = arg2)     someFunction1(arg3 = arg3, arg4 = arg4) }  # there is a solution using do.call but it is rather annoying  someHigherFunction &lt;- function(arg5, arg6, arg1_2 = list(arg1 = &quot;something&quot;, arg2 = &quot;something else&quot;)) {     # do something with arg5 and 6      # not ideal but it works     do.call(someFunction1, arg1_2) } </code></pre> <p>In <code>JavaScript</code> we can use object destructuring (easy for positional arguments), python has this too with it's own <code>**</code> double star operator:</p> <pre class=""lang-js prettyprint-override""><code>function foo(a, b) {     console.log(a - b); }  let args = [10, 7];  foo(...args); </code></pre> <p>There are other uses for this as well:</p> <pre class=""lang-js prettyprint-override""><code>let a, b, rest; [a, b] = [10, 20];  console.log(a); // expected output: 10  console.log(b); // expected output: 20  [a, b, ...rest] = [10, 20, 30, 40, 50];  console.log(rest); // expected output: Array [30,40,50] </code></pre> <p>Does anyone have any suggestions on how to accomplish this in R? Did I miss something?</p>"	2022-06-22 03:05:15.333 UTC	72710141	"<p>Expanding on above, is this pattern useful/generalizable?</p> <pre><code>someHigherFunction4 &lt;- function(arg5, arg6, ...) {      # collect arguments passed in dots      args &lt;- match.call(expand.dots = FALSE)$...      # if arguments named, subset dots to avoid unused variable error in do.call      if(!is.null(names(args))) {          validArgs &lt;- formalArgs(someFunction1)          do.call(someFunction1, args[validArgs])        } else {        # if not, pass arguments by position        do.call(someFunction1, as.list(args))    } }  someHigherFunction4(&quot;foo&quot;, TRUE, &quot;this&quot;, &quot;that&quot;) # result: &quot;Do something with this, and with that&quot;  someHigherFunction4(&quot;foo&quot;, TRUE, arg1 = &quot;this&quot;, arg2 = &quot;that&quot;, arg3 = &quot;bar&quot;) # result: &quot;Do something with this, and with that&quot; </code></pre>"			2022-06-22 05:32:42.987 UTC
72724078	javascript|django|react-native	Is there any Javascript or React-Native equivalent syntax of this python code?	"<p>all. I'm trying to post to my django REST server and following is python-version of how I post.</p> <pre><code>with open(some_image, 'rb') as f: response = requests.post(     url,      files={         'image': f,     },      data={         'longitude': SETTINGS[1]['long'],         'latitude': SETTINGS[1]['lat'],         'user_id': SETTINGS[1]['user_id'],     }) </code></pre> <p>I tried to do the same thing in react native ( javascript ), but it gives me errors. Following is my react native code:</p> <pre><code>upload = async () =&gt; {        let files = {             'image' : test // test is a base64 image file         }       let data = {             'longitude' : location[&quot;longitude&quot;],            'latitude' : location[&quot;latitude&quot;],            'user_id' : &quot;test_id&quot;,         }        postUrl = &quot;someurl&quot;;       axios.post(postUrl, files = files, data = data       ).then( response =&gt; console.log(response)       ).catch(function (error) {            console.log(error.response);            console.log(error);       });  } </code></pre> <p>The error status is 415 and it says &quot;Unsupported media type &quot;application/json&quot; in request.</p>"	2022-06-23 03:03:11.19 UTC	72724116	"<p>You will have to use FormData to upload files.</p> <p><a href=""https://www.bezkoder.com/axios-file-upload/"" rel=""nofollow noreferrer"">Click here for more details</a></p>"			2022-06-23 03:10:44.377 UTC
72756142	javascript|python	How to execute a python script via javascript file in an electronjs app?	"<p>I am trying to call and execute a python script via the following javascript code in an electronjs app</p> <pre><code>function getProgramstatus(){          const { exec } = require('child_process');      exec('python python\\getProgramstatus.py', (error, stdout, stderr) =&gt; {     });          let jsonData = require('.\\js\\programstatus.json');     let itemData = JSON.stringify(jsonData);     let programstatus = JSON.parse(itemData);          sessionStorage.setItem('programstatus check', programstatus.status); } </code></pre> <p>The goal of the python script is to write a value at a json file.</p> <pre><code>data1={     &quot;status&quot;: &quot;12&quot;,     &quot;time&quot; : time.ctime(start) } json_object = json.dumps( data1, indent = 4)  with open('..\js\programstatus.json', 'w') as outfile:     outfile.write(json_object)   #print(&quot;2&quot;) sys.exit(&quot;2&quot;) </code></pre> <p>When i execute the python script via terminal it writes at json file, but when i call it from javascript it doen't write at json file. Any ideas;</p>"	2022-06-25 17:52:30.247 UTC	72760085	"<p>I found the answer, why the json file was not written when the python script was called by the application and not by me at the terminal.</p> <p>The problem is the folder/file location. It should be relative to the main.js of the electron app.</p> <p>So I changed the following:</p> <pre><code>with open('..\js\programstatus.json', 'w') as outfile:     outfile.write(json_object) </code></pre> <p>To: with open('.\js\programstatus.json', 'w') as outfile: outfile.write(json_object)</p> <p>and work fine.</p>"			2022-06-26 08:39:42.82 UTC
72756142	javascript|python	How to execute a python script via javascript file in an electronjs app?	"<p>I am trying to call and execute a python script via the following javascript code in an electronjs app</p> <pre><code>function getProgramstatus(){          const { exec } = require('child_process');      exec('python python\\getProgramstatus.py', (error, stdout, stderr) =&gt; {     });          let jsonData = require('.\\js\\programstatus.json');     let itemData = JSON.stringify(jsonData);     let programstatus = JSON.parse(itemData);          sessionStorage.setItem('programstatus check', programstatus.status); } </code></pre> <p>The goal of the python script is to write a value at a json file.</p> <pre><code>data1={     &quot;status&quot;: &quot;12&quot;,     &quot;time&quot; : time.ctime(start) } json_object = json.dumps( data1, indent = 4)  with open('..\js\programstatus.json', 'w') as outfile:     outfile.write(json_object)   #print(&quot;2&quot;) sys.exit(&quot;2&quot;) </code></pre> <p>When i execute the python script via terminal it writes at json file, but when i call it from javascript it doen't write at json file. Any ideas;</p>"	2022-06-25 17:52:30.247 UTC	72759541	"<p>Try outputting the response for hints, like this:</p> <pre><code>function getProgramstatus(){          const { exec } = require('child_process');      exec('python python\\getProgramstatus.py', (error, stdout, stderr) =&gt; {         if (error) {             console.error(`exec error: ${error}`);             return;         }         console.log(`stdout: ${stdout}`);         console.error(`stderr: ${stderr}`);     });          let jsonData = require('.\\js\\programstatus.json');     let itemData = JSON.stringify(jsonData);     let programstatus = JSON.parse(itemData);          sessionStorage.setItem('programstatus check', programstatus.status); }  </code></pre> <p>And please share the output.</p> <p>Also the code execution continues while <code>getProgramstatus.py</code> is still running, you want to use execSync / move the code below exec inside the callback or create a promise, so that <code>let jsonData = require('.\\js\\programstatus.json');</code> gets executed when the python script has finished.</p>"			2022-06-26 07:03:40.123 UTC
72756317	javascript|python|ajax|flask|click	No 'Access-Control-Allow-Origin' header is present on the requested resource. when running a Python script using Javascript	"<p>I am new to AJAX and Flask and I am trying to make a Chrome extension that runs a Python script from Javascript. The script moves the mouse at a certain coordinate and clicks there.</p> <p>This is the Javascript code: <div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-js lang-js prettyprint-override""><code>function click_coord() {     $.ajax({         url: ""http://127.0.0.1:5000/click_coord/"",         type: ""POST"",         success: function(resp){         console.log(resp);     }     });  }</code></pre> </div> </div> </p> <p>This is the Python code:</p> <pre><code>from flask import Flask, jsonify from flask_cors import CORS, cross_origin from pynput.mouse import Button, Controller  app = Flask(__name__) cors = CORS(app)  app.config['CORS_HEADERS'] = 'Content-Type'  @app.route('/click_coord/', methods=['POST'])  def click_coord():     move_mouse()     a = 15     b = 17     return jsonify(a+b)  def move_mouse():     mouse = Controller()      mouse.position = (201, 549)      mouse.press(Button.left)     mouse.release(Button.left)  if __name__ == &quot;__main__&quot;:     app.run(debug=True) </code></pre> <p>The error I get is: No 'Access-Control-Allow-Origin' header is present on the requested resource. I only get this error if I call the function &quot;move_mouse&quot;. If I don't, the code runs properly.</p> <p>I saw in another post that a person had a problem because they didn't add the correct permissions  but i added: &quot;permissions&quot;: [&quot;tabs&quot;, &quot;http://localhost/*&quot;] to the Json manifest</p>"	2022-06-25 18:17:59.393 UTC	72765983	"<p>Try adding a resource to your CORS(app, resources={r&quot;<em>&quot;: {&quot;origins&quot;: &quot;</em>&quot;}})</p>"			2022-06-27 00:24:33.21 UTC
72763690	javascript|python|html|bottle	JavaScript-HTLM validation form not working properly. Python-bottle	"<p>I want to check if the email adress is already in my database using onfocusout in html. If the email adress exists then the messages shows me that the email exists when clicking out but when I rewrite another email adress the message disappears but when I click submit then the messages appears again and the button doesnt let me go to the next page even though I wrote a different email adress. The whole validation process goes to bottle-python route which delivers none if the email is not there or delivers the email if exists.</p> <p><strong>The Email already exists in the database no problem:</strong> <a href=""https://i.stack.imgur.com/8SzdN.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/8SzdN.png"" alt=""The Email already exists in the database no problem"" /></a></p> <p><strong>I wrote this and obviously doesnt exists and still gives me the message and doesnt let me click submit:</strong> <a href=""https://i.stack.imgur.com/iJK2L.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/iJK2L.png"" alt=""I wrote this and obviously doesnt exists and still gives me the message and doesnt let me click submit"" /></a></p> <p>part of HTML + Javascript</p> <p>'''</p> <pre><code> &lt;div class=&quot;box1&quot;&gt;    &lt;form method=&quot;POST&quot; id=&quot;form&quot; name=&quot;form&quot;&gt;     &lt;p&gt;         &lt;label for=&quot;a&quot;&gt;First Name:&lt;/label&gt;         &lt;input id=&quot;a&quot; type=&quot;text&quot; name=&quot;firstName&quot; placeholder=&quot;First Name&quot; required&gt;     &lt;/p&gt;     &lt;p&gt;         &lt;label for=&quot;b&quot;&gt;Last Name:&lt;/label&gt;         &lt;input id=&quot;b&quot; type=&quot;text&quot; name=&quot;lastName&quot; placeholder=&quot;Last Name&quot; required&gt;     &lt;/p&gt;     &lt;p&gt;         &lt;label for=&quot;&quot;&gt;Birthdate:&lt;/label&gt;         &lt;input id=&quot;&quot; type=&quot;date&quot; name=&quot;birthD&quot; placeholder=&quot;Date&quot; required&gt;     &lt;/p&gt;     &lt;p&gt;         &lt;label for=&quot;&quot;&gt;Adress:&lt;/label&gt;         &lt;input id=&quot;&quot; type=&quot;text&quot; name=&quot;adress&quot; placeholder=&quot;Adress&quot; required&gt;     &lt;/p&gt;     &lt;p&gt;         &lt;label for=&quot;&quot;&gt;E-Mail Adress:&lt;/label&gt;         &lt;input id=&quot;email&quot; type=&quot;email&quot; name=&quot;email&quot; placeholder=&quot;example@mail.com&quot; onfocusout=&quot;checkIfUserExists()&quot; required&gt;     &lt;/p&gt;     &lt;p&gt;         &lt;label for=&quot;&quot;&gt;Phone:&lt;/label&gt;         &lt;input id=&quot;phone&quot; type=&quot;text&quot; name=&quot;phone&quot; placeholder=&quot;Phone Number&quot; required&gt;     &lt;/p&gt;     &lt;p&gt;         &lt;label for=&quot;&quot;&gt;Choose your form of Payment:&lt;/label&gt;         &lt;select name=&quot;payment&quot; required&gt;         &lt;option option value=&quot;&quot; disabled selected&gt;Payment&lt;/option&gt;         &lt;option value=&quot;Credit&quot;&gt;Credit&lt;/option&gt;         &lt;option value=&quot;Debit&quot;&gt;Debit&lt;/option&gt;         &lt;option value=&quot;Paypal&quot;&gt;Paypal&lt;/option&gt;         &lt;/select&gt;     &lt;/p&gt;     &lt;p&gt;         &lt;input type=&quot;submit&quot; value=&quot;submit&quot;&gt;     &lt;/p&gt;  &lt;/form&gt;   &lt;div class=&quot;box11&quot;&gt;      &lt;/div&gt; </code></pre>  <pre><code> &lt;/div&gt;  &lt;script src=&quot;https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js&quot;&gt;&lt;/script&gt;   &lt;script type=&quot;text/javascript&quot;&gt;   const  checkIfUserExists = () =&gt; {      const   registrationForm = document.forms['form']      const emailFormElement = registrationForm['email']      const email = emailFormElement.value         axios.post('/validate_email',{ //goes to bottle python      email: email           //     })    .then((response) =&gt; {      if (response.data.user_exists == &quot;true&quot;) {             emailFormElement.setCustomValidity(&quot;This email adress already exist&quot;)             emailFormElement.checktValidity()       }      else {       }      }, (error) =&gt; {      console.log(error)    })    }  &lt;/script&gt; </code></pre> <p>''' Route validates if the email is in database '''</p> <pre><code> @route('/validate_email', method=['POST'])  def validate_email():        if request.method == 'POST':     email_adress = request.json['email'] #the values comes from javascript     email = emailextraction(email_adress)     print(email)     if email:               return {&quot;user_exists&quot;: &quot;true&quot;} #this goes back to javascript     else:              return {&quot;user_exists&quot;: &quot;false&quot;} </code></pre> <p>'''</p>"	2022-06-26 17:15:06.687 UTC	72763753	"<p>First for all in your html file correct the type of email input tag it's written <code>emial</code> should be <code>email</code>.</p> <p>Secondly, you should provide the email in correct format following <code>RFC 5322 and 6854</code>.</p> <p>Actually the second time you change it to a random email(here you have entered it in wrong format) which is not in the database. Actually the <code>checkIfUserExists()</code> functions passes perfectly but the HTML email input tag reports a wrong email format.</p> <p>Since you have changed the validity message by this line <code>emailFormElement.setCustomValidity(&quot;This email address already exists);</code>.</p> <p>HTML tries to notify about the incorrect format but it is forced to use <code>email already exists</code> message because it's explicitly set in your code. Hope that helps.</p>"			2022-06-26 17:24:03.443 UTC
72804927	javascript|python|python-requests|python-requests-html	Execute JavaScript function using Python requests_html	"<p>I am trying to execute a JavaScript function (run with a button click) within a session using Python's <code>requests_html</code></p> <p>I understand the regular <code>requests</code> library does not have JavaScript support so I am trying to use <code>requests_html</code> instead.</p> <p>Here's what I have (using <code>requests</code>):</p> <pre><code>s = requests.Session() r = s.post(url) print(r.text) r2 = s.post(url2) print(r2.text) </code></pre> <p><code>url</code> is the link to the page containing the button and <code>url2</code> is the POST request link the button's JavaScript function executes. (I found  <code>url2</code> through the network tab while in my browser inspector and clicking the button as a test)</p> <p>However, this does not work and I get this from <code>r2.text</code>:</p> <pre><code>&lt;h2&gt;Error(500): An error occurred.&lt;/h2&gt;                 &lt;p&gt;We are sorry but an unexpected error has occurred on our side while handling your request. In the meantime, please retry your request or try the following:&lt;/p&gt; </code></pre> <p>To my understanding, an error 500 means that the issue is server-side, not client-side. However, clicking the button manually on the webpage works fine.</p> <p>This brings me to attempting to directly execute the JavaScript function instead. I couldn't find anything on the <code>requests_html</code> documentation. I've also looked at Selenium, but that doesn't seem to be up to date.</p> <p>It is also worth mentioning that the button inspector looks like this: <code>&lt;button onclick=&quot;registerInterest(72833,959320000, '')&quot; type=&quot;button&quot; class=&quot;btn btn-primary&quot;&gt;&lt;i class=&quot;far fa-clipboard&quot;&gt;&lt;/i&gt; Register Interest&lt;/button&gt;</code></p> <p>So essentially, I would like to execute <code>registerInterest(72833,959320000, '')</code> after my first POST request.</p> <p>Any help would be greatly appreciated, I will gladly provide any additional needed information.</p>"	2022-06-29 16:32:39.413 UTC	72805004	<p>You need to use Selenium for manipulating html elements. You can use code like this:</p> <pre><code>from selenium import webdriver #set chromodriver.exe path driver = webdriver.Chrome(executable_path=&quot;C:\\chromedriver.exe&quot;) #implicit wait driver.implicitly_wait(0.5) #maximize browser driver.maximize_window() #launch URL driver.get(&quot;https://www.tutorialspoint.com/index.htm&quot;) #identify element l =driver.find_element_by_xpath(&quot;//button[text()='Check it Now']&quot;) #perform click l.click() print(&quot;Page title is: &quot;) print(driver.title) #close browser driver.quit() </code></pre> <p>Just check docs on methods of Selenium and find a method which fits you the best.</p>			2022-06-29 16:39:27.403 UTC
72819429	javascript|python|html|flask|filter	Filter with Drop-Down Options in Python Flask App (with JavaScript)	"<p>I'm trying to use drop-downs to filter results in a table. I've tried to make it work with addEventListener('click'), but I'm stuck on how to make it fully functional. I think I'm very close but missing something.</p> <p>Could anyone help to provide a solution such that when the country values are clicked in the drop-down, it filters for all of those with corresponding country values in the table? This will need to work such that multiple drop-downs on multiple columns would be used.</p> <p><a href=""https://i.stack.imgur.com/xlczy.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/xlczy.png"" alt=""enter image description here"" /></a></p> <p><strong>Python</strong></p> <pre><code>app = Flask(__name__) test_data = [['jack', 23, 'china', 'https://www.google.com'],              ['jill', 22, 'canada', 'https://www.cnn.com'],              ['john', 24, 'canada', 'https://www.cnn.com'],              ['jane', 30, 'australia', 'https://www.bbc.com']]  test_df = pd.DataFrame(test_data, columns=['name', 'age', 'country', 'link']) test_df = test_df.to_dict(orient='index') @app.route(&quot;/hello&quot;) def index():     return render_template(&quot;index.html&quot;, test_df=test_df) </code></pre> <p><strong>HTML</strong>: in an index.html</p> <pre><code>&lt;div class=&quot;container&quot;&gt;     &lt;label for=&quot;country&quot;&gt;Countries&lt;/label&gt;     &lt;form class=&quot;form&quot;&gt;         &lt;div class=&quot;form__group&quot;&gt;             &lt;select id=&quot;country&quot; name=&quot;country&quot; data-dropdown&gt;                 &lt;option value=&quot;&quot;&gt;Please select a country&lt;/option&gt;                 &lt;option value=&quot;australia&quot;&gt;Australia&lt;/option&gt;                 &lt;option value=&quot;canada&quot;&gt;Canada&lt;/option&gt;                 &lt;option value=&quot;china&quot;&gt;China&lt;/option&gt;             &lt;/select&gt;         &lt;/div&gt;     &lt;/form&gt; &lt;/div&gt;  &lt;table class=&quot;table&quot;&gt;     &lt;tbody id=&quot;myTable&quot;&gt;     &lt;/tbody&gt; &lt;/table&gt; </code></pre> <p><strong>JavaScript</strong>: within the index.html in script tags</p> <pre><code>var mydata = JSON.parse('{{ test_df|tojson }}'); var countrySelector = document.getElementById('country'); // but what next?  buildTable(mydata) function buildTable(data) {     var table = document.getElementById('myTable')     table.innerHTML = ''     for (var key in data) {         var row = `&lt;tr&gt;                     &lt;td&gt;${data[key].name}&lt;/td&gt;                     &lt;td&gt;${data[key].age}&lt;/td&gt;                     &lt;td&gt;&lt;a href=&quot;${data[key].link}&quot; target='_blank'&gt;${data[key].country}&lt;/a&gt;&lt;/td&gt;                &lt;/tr&gt;`         table.innerHTML += row     } } </code></pre>"	2022-06-30 16:52:37.093 UTC	72821139	"<p>Use the select element's <a href=""https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/change_event"" rel=""nofollow noreferrer"">change event</a> to monitor user changes in the selection.<br /> The following example shows you how to filter the rows by country. To make it easier to filter the rows in JavaScript, they are not passed as a dict but as a list using <code>df.values.tolist()</code>.</p> <pre><code>from flask import (     Flask,      render_template ) import pandas as pd  app = Flask(__name__)  @app.route('/') def index():     test_df = pd.DataFrame(         [             ['jack', 23, 'china', 'https://www.google.com'],             ['jill', 22, 'canada', 'https://www.cnn.com'],             ['john', 24, 'canada', 'https://www.cnn.com'],             ['jane', 30, 'australia', 'https://www.bbc.com']         ],         columns=['name', 'age', 'country', 'link']     )     return render_template('index.html', test_df=test_df.values.tolist()) </code></pre> <pre><code>&lt;!DOCTYPE html&gt; &lt;html&gt;   &lt;head&gt;     &lt;meta charset=&quot;utf-8&quot;&gt;     &lt;title&gt;Index&lt;/title&gt;   &lt;/head&gt;   &lt;body&gt;     &lt;div class=&quot;container&quot;&gt;       &lt;label for=&quot;country&quot;&gt;Countries&lt;/label&gt;       &lt;form class=&quot;form&quot;&gt;         &lt;div class=&quot;form__group&quot;&gt;           &lt;select id=&quot;country&quot; name=&quot;country&quot; data-dropdown&gt;             &lt;option value&gt;Please select a country&lt;/option&gt;             &lt;option value=&quot;australia&quot;&gt;Australia&lt;/option&gt;             &lt;option value=&quot;canada&quot;&gt;Canada&lt;/option&gt;             &lt;option value=&quot;china&quot;&gt;China&lt;/option&gt;           &lt;/select&gt;         &lt;/div&gt;       &lt;/form&gt;     &lt;/div&gt;      &lt;table class=&quot;table&quot;&gt;       &lt;tbody id=&quot;myTable&quot;&gt;       &lt;/tbody&gt;     &lt;/table&gt;      &lt;script type=&quot;text/javascript&quot;&gt;        function buildTable(data) {           const table = document.getElementById('myTable')           table.innerHTML = data.map(row =&gt; {             let [name, age, country, link] = row;             return `&lt;tr&gt;                 &lt;td&gt;${name}&lt;/td&gt;                 &lt;td&gt;${age}&lt;/td&gt;                 &lt;td&gt;&lt;a href=&quot;${link}&quot; target='_blank'&gt;${country}&lt;/a&gt;&lt;/td&gt;               &lt;/tr&gt;`;           }).join('');       }        const data = {{ test_df|tojson }};       const countrySelector = document.getElementById('country');       countrySelector.addEventListener('change', evt =&gt; {         const value = evt.target.value;         if (value) {           buildTable(data.filter(row =&gt; {             let [name, age, country, link] = row;             return country === value           }));         } else {           buildTable(data);         }       });        buildTable(data)      &lt;/script&gt;    &lt;/body&gt; &lt;/html&gt; </code></pre>"			2022-06-30 19:31:21.863 UTC
72821475	javascript|python|selenium	Automate selenium webdriver python onclick javascript double confirmation	"<p>Im new using Selenium Webdriver and i couldn't automate a confirmation javascript onclick button, these button can't inspect to see the xpath;</p> <p>the html button is:</p> <p><code>&lt;input type=&quot;button&quot; class=&quot;ButtonEnable&quot; name=&quot;Reset&quot; id=&quot;Reset&quot; value=&quot;Borrar todos los contadores &quot; onclick=&quot;javascript:CallBack_Reset()&quot;&gt;</code> and i try with the name or id</p> <p><strong>web_element = driver.find_element(By.NAME, 'Reset').click()</strong></p> <p>but appear a pop-up window with a confirmation</p>"	2022-06-30 20:09:06.087 UTC	72860926	"<p>Update. I resolve it.</p> <p>I use a selenium condition (alert) to javascript callback push-up windows.</p> <p>the code to resolve it:</p> <p><code>web_element = driver.find_element(By.NAME, 'Reset').click() WebDriverWait(driver, 5).until(EC.alert_is_present(), '¿Desea borrar todos los contadores?') alert = driver.switch_to.alert alert.accept()</code></p>"			2022-07-04 18:47:55.843 UTC
72831288	javascript|python|arrays	Python Equivalent to Javascript index assignment	"<p>Original code in JS:</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-js lang-js prettyprint-override""><code>// applying crossover for (let i = cxpoint1; i &lt; cxpoint2; i++) {   let temp1 = ind1[i]   let temp2 = ind2[i]    ind1[i]         = temp2   ind1[p1[temp2]] = temp1    ind2[i]         = temp1   ind2[p2[temp1]] = temp2    return [ind1, ind2]</code></pre> </div> </div> </p> <p>New to JS and wondering what is happening on this line:</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-html lang-html prettyprint-override""><code>ind1[p1[temp2]] = temp1</code></pre> </div> </div> </p> <p>Trying to understand so I can make an equivalent function in Python.</p> <p>I understand the assignment, however obviously in Python you cannot use double brackets as shown on the line above. If someone could tell me the concept, I should be able to apply it to my situation.</p> <p>Thanks in advance.</p>"	2022-07-01 15:10:17.04 UTC	72831356	"<p>There's nothing magical going on here.</p> <pre><code>ind1[p1[temp2]] </code></pre> <p><code>p1[temp2]</code> resolves to some value, let's call it <code>a</code>.  So the expression then becomes <code>ind1[a]</code>.</p>"			2022-07-01 15:16:31.307 UTC
72831288	javascript|python|arrays	Python Equivalent to Javascript index assignment	"<p>Original code in JS:</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-js lang-js prettyprint-override""><code>// applying crossover for (let i = cxpoint1; i &lt; cxpoint2; i++) {   let temp1 = ind1[i]   let temp2 = ind2[i]    ind1[i]         = temp2   ind1[p1[temp2]] = temp1    ind2[i]         = temp1   ind2[p2[temp1]] = temp2    return [ind1, ind2]</code></pre> </div> </div> </p> <p>New to JS and wondering what is happening on this line:</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-html lang-html prettyprint-override""><code>ind1[p1[temp2]] = temp1</code></pre> </div> </div> </p> <p>Trying to understand so I can make an equivalent function in Python.</p> <p>I understand the assignment, however obviously in Python you cannot use double brackets as shown on the line above. If someone could tell me the concept, I should be able to apply it to my situation.</p> <p>Thanks in advance.</p>"	2022-07-01 15:10:17.04 UTC	72831393	"<p>To fully understand the code one would need to know how the arrays p1 and p2 look like, but I assume they are integer-arrays. You select an integer from that array in the inner statement that then is the index for the outer statement.</p> <p>It works exactly the same in python:</p> <pre><code>ind1 = [1, 2, 3, 4, 5] p1 = [3, 1, 2] print(ind1[p1[0]]) # -&gt; 4 </code></pre> <p>In this example the inner statement resolves to 3 (first element in the p1-list) and the outer statement then resolves to 4 (fourth element in the ind1-list.</p>"			2022-07-01 15:18:51.05 UTC
72835538	javascript|python|selection-sort	equivalent of python's array.pop() in javascript	"<p>I wonder if there's an easy to implement equivalent to python's <code>array.pop()</code> which returns the deleted element while deleting it from the array in parallel in javascript.</p> <pre><code>let nums = [2, 1, 3, 4, 5, 6];  function sortArray(nums) {   let arr = new Array();   let smallest_index;   for (let j = 0; j &lt; nums.length; j++) {     smallest_index = find_smallest(nums);     console.log(&quot;smallest&quot;, smallest_index);     arr.push(nums.splice(smallest_index, 1).join(&quot;&quot;));   }    return arr; }  function find_smallest(arr) {   let smallest = arr[0];   let smallest_index = 0;    for (let i = 1; i &lt; arr.length; i++) {     if (arr[i] &lt; smallest) {       //   console.log(&quot;this&quot;);       smallest = arr[i];       smallest_index = i;     }   }   return smallest_index; } </code></pre> <p>it seems that if I replace javascript's (<code>nums.splice(smallest_index, 1).join())</code> with python's <code>(arr.append(nums.pop(smallest_index))</code> I would get a perfectly sorted array. is there a similar straightforward solution in javascript as well ?</p>"	2022-07-01 23:53:21.113 UTC	72835585	"<p>OK, you use splice. Here's an example of the implementation below:</p> <pre class=""lang-js prettyprint-override""><code>Array.prototype.pythonPop = function (index) {     return this.splice(index, 1)[0]; } </code></pre> <p>Now, I found the issue, you'll <em>love</em> the answer. So you were using <code>num.length</code> but your methods were augmenting the length of <code>num</code> array. Which is why your answer had only half the needed numbers. See code below. I cached the <code>length</code> prop of <code>nums</code> array</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-js lang-js prettyprint-override""><code>let nums = [2, 1, 3, 4, 5, 6];  function sortArray(nums) {   let arr = new Array();   let smallest_index;   console.log(nums)   for (let j = 0, length = nums.length; j &lt; length; j++) {     smallest_index = find_smallest(nums);     console.log(""smallest"", smallest_index);     console.log(nums)     arr[j] = nums.splice(smallest_index, 1).join("""");   }    return arr; }  function find_smallest(arr) {   let smallest = arr[0];   let smallest_index = 0;    for (let i = 1; i &lt; arr.length; i++) {     if (arr[i] &lt; smallest) {       //   console.log(""this"");       smallest = arr[i];       smallest_index = i;     }   }   return smallest_index; }  console.log(sortArray(nums))</code></pre> </div> </div> </p>"			2022-07-02 00:10:17.163 UTC
72854725	python|python-3.x|flask|flask-sqlalchemy	Python Flask using jinja in Javascript	"<p>This is my Route.py</p> <pre><code> def route_template(template):         x = 3         return render_template(&quot;home/&quot; + template, segment=segment,x=x) </code></pre> <p>i want to show x in Javascript</p> <pre><code>var graph = Morris.Donut({                  element: 'morris-donut-chart',         data: [{                 value: 100, # here want to add jinja                 label: 'Data 1'             },             {                 value: 1,                 label: 'Data 1'             },                     ],     });   </code></pre> <p>i try this but not working  <code>value: {{X}},</code> .. what is best way to add jinja in Javascript</p>"	2022-07-04 09:44:40.317 UTC	72855182	"<p>Please try below code and let me know if it is ok.</p> <pre><code>xdata = JSON.parse({{ x | tojson }}) var graph = Morris.Donut({                  element: 'morris-donut-chart',         data: [{                 value: xdata,                 label: 'Data 1'             },             {                 value: 1,                 label: 'Data 1'             },                     ],     });  </code></pre> <p>Source: <a href=""https://medium.com/@crawftv/javascript-jinja-flask-b0ebfdb406b3"" rel=""nofollow noreferrer"">https://medium.com/@crawftv/javascript-jinja-flask-b0ebfdb406b3</a></p> <p>Regards,</p> <p>Hamid</p>"			2022-07-04 10:19:15.347 UTC
72856541	javascript|python|ajax|flask	ERROR GET 400 (BAD REQUEST) when doing post with ajax (JavaScript) & flask (Python)	"<p>I'm trying to do a POST request with ajax on js:</p> <pre><code>function func() {     var gameName = document.getElementById(&quot;gname&quot;).value;     // var uuid = create_UUID()      const dataSend ={         &quot;user input&quot;: {             &quot;game_name&quot;: gameName         }     }      console.log(&quot;data from user&quot;);     console.log(dataSend);       $.ajax({         url: 'http://127.0.0.1:5000/responer',         contentType: 'application/json',         cache: false,         method: 'POST',         dataType: 'json',         data: JSON.stringify(dataSend),         success: function(data) {             alert.log(data);         },         error: function (xhr, ajaxOptions, thrownError) {             console.log(&quot;ERROR Status:&quot;, xhr.status ,&quot;-&quot;, thrownError)         }              });  }; </code></pre> <p><strong>but I'm getting the error:</strong></p> <p>127.0.0.1 - - [04/Jul/2022 15:04:17] &quot;OPTIONS /responer?{%22user%20input%22:{%22game_name%22:%22gta%22}}&amp;_=1656936257232 HTTP/1.1&quot; 200 -</p> <p>127.0.0.1 - - [04/Jul/2022 15:04:17] &quot;GET /responer?{%22user%20input%22:{%22game_name%22:%22gta%22}}&amp;_=1656936257232 HTTP/1.1&quot; 400 -</p> <p><strong>When I'm working with Postman everything works fine and I get the response:</strong></p> <p>127.0.0.1 - - [04/Jul/2022 15:01:12] &quot;POST /responer HTTP/1.1&quot; 200 -</p> <p><strong>My python side using flask:</strong></p> <pre><code>from flask import Flask, request, jsonify, render_template from flask_cors import CORS  import main import json  app = Flask(__name__) CORS(app)  # cors = CORS(app) #Create the receiver API POST endpoint: @app.route(&quot;/responer&quot;, methods=[&quot;POST&quot;,&quot;GET&quot;]) def postME():    request_data = request.get_json()    print(&quot;data recived: &quot; + str(request_data))     res_data = main.response(request_data) #method that returns the response json     response = app.response_class(       response=json.dumps(res_data),       status=200,       mimetype='application/json'    )     return response </code></pre>"	2022-07-04 12:11:30.937 UTC	72856774	<p>You can close the question. My problem was that I added</p> <pre><code>type:'post' </code></pre> <p>instead of</p> <pre><code>method:'POST' </code></pre> <p>in my ajax request.</p>			2022-07-04 12:28:26.577 UTC
72879273	javascript|python|html|ajax|flask	Flask - How to send a value to JavaScript function during Python script to update Progress Bar?	"<p>I have as an example, two scripts:</p> <ul> <li><code>home.html</code></li> <li><code>views.py</code></li> </ul> <p><code>views.py</code> has a function in it with various tasks e.g.:</p> <pre><code>def home()     list1 = [1, 2, 3, 4, 5]     total1 = 0     for x in list1:         total1 += x      list2 = [10, 20, 30, 40, 50]     total2 = 0     for x in list2:         total2 += x  return render_template(&quot;home.html&quot;) </code></pre> <p><code>home.html</code> has a JavaScript function in it which updates a html/css progressbar depending on what the variable <code>'value'</code> is:</p> <pre><code>&lt;script&gt;     function updateProgressBar(progressBar, value) {         value = Math.round(value);         progressBar.querySelector(&quot;.progress__fill&quot;).style.width = `${value}%`;         progressBar.querySelector(&quot;.progress__text&quot;).textContent = `${value}%`;     } &lt;/script&gt; </code></pre> <p>The python function can vary in completion time. As a way of updating the user of the progress, after every task (i.e. <code>total1</code> complete, <code>total2</code> complete) is done in <code>home()</code>, I want to send a value to the JavaScript function so it can update the progress bar on <code>home.html</code> e.g. if there were 5 tasks in <code>home()</code>, it might send the value 20 after task 1, then 40 after task 2 etc.</p> <p>I am new to 'web development' so struggling to do this and would appreciate any help.</p> <p>Thank you in advance.</p>"	2022-07-06 07:12:15.377 UTC	72879364	"<p>One possible solution is to send the data from flask:</p> <pre class=""lang-py prettyprint-override""><code># ... return render_template(&quot;home.html&quot;, **{     'total1': total1,     'total2': total2 }) </code></pre> <p>Then add two hidden elements in the html you need to use the variables:</p> <pre class=""lang-html prettyprint-override""><code>&lt;p id=&quot;total1&quot; style=&quot;display:none;&quot;&gt;{{ total1 }}&lt;/p&gt; &lt;p id=&quot;total2&quot; style=&quot;display:none;&quot;&gt;{{ total2 }}&lt;/p&gt; </code></pre> <p>Then use JavaScript to load in those element's data:</p> <pre class=""lang-js prettyprint-override""><code>const total1 = document.getElementById('total1'); const total2 = document.getElementById('total2'); // ... </code></pre> <p>Then you are free to use total1 and total2 in your JavaScript file.</p> <p><strong>A better solution</strong> would be if the JavaScript file you have would make an AJAX request towards your flask server, where the server could have a separate function to handle the request and send the data.</p>"			2022-07-06 07:20:24.207 UTC
72881159	python|python-3.x|selenium	Using python to get content from website that requires javascript and that info is not part of source	"<p>I would like to extract the information from this website: <a href=""https://poit.bolagsverket.se/poit-app/kungorelse/K397881-22"" rel=""nofollow noreferrer"">https://poit.bolagsverket.se/poit-app/kungorelse/K397881-22</a></p> <p>The part I am looking for is this:</p> <p><a href=""https://i.stack.imgur.com/zhS8j.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/zhS8j.png"" alt=""enter image description here"" /></a></p> <p>But the problem is that this website requires javascript.</p> <p>I am not sure how to go about extracting this information and it seems that this info is not part of the source code.</p> <p>What I would like to do is to put the information into a list like this:</p> <p>[{ orgnr:559387-6435, företagsnamn:Aktiebolaget Grundstenen 300298, säte:Stockholm, etc. }, { orgnr:4389483439, företagsnamn:Some other name, säte:some city, etc. }]</p> <p>I get this link and a several other links from a list I create in an earlier step</p> <p>[link1:https....,link2:https...,link3:https...]</p> <p>I have tried to use selenium but I cannot get past the step of opening Firefox. I am running python 3.10 on Windows 11.</p> <p>Thank you all in advance!</p>"	2022-07-06 09:36:38.597 UTC	72881378	"<p>I do not know Selenium, but alternatively you could try the <a href=""https://pypi.org/project/requests-html/"" rel=""nofollow noreferrer"">requests-html</a> module for python to render the javascript. From the requests-html documentation:</p> <pre class=""lang-py prettyprint-override""><code>r = session.get('http://python-requests.org') r.html.render() </code></pre> <p>After that, <a href=""https://pypi.org/project/beautifulsoup4/"" rel=""nofollow noreferrer"">BeautifulSoup</a> can help you parse the contents.</p>"			2022-07-06 09:51:42.91 UTC
72881159	python|python-3.x|selenium	Using python to get content from website that requires javascript and that info is not part of source	"<p>I would like to extract the information from this website: <a href=""https://poit.bolagsverket.se/poit-app/kungorelse/K397881-22"" rel=""nofollow noreferrer"">https://poit.bolagsverket.se/poit-app/kungorelse/K397881-22</a></p> <p>The part I am looking for is this:</p> <p><a href=""https://i.stack.imgur.com/zhS8j.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/zhS8j.png"" alt=""enter image description here"" /></a></p> <p>But the problem is that this website requires javascript.</p> <p>I am not sure how to go about extracting this information and it seems that this info is not part of the source code.</p> <p>What I would like to do is to put the information into a list like this:</p> <p>[{ orgnr:559387-6435, företagsnamn:Aktiebolaget Grundstenen 300298, säte:Stockholm, etc. }, { orgnr:4389483439, företagsnamn:Some other name, säte:some city, etc. }]</p> <p>I get this link and a several other links from a list I create in an earlier step</p> <p>[link1:https....,link2:https...,link3:https...]</p> <p>I have tried to use selenium but I cannot get past the step of opening Firefox. I am running python 3.10 on Windows 11.</p> <p>Thank you all in advance!</p>"	2022-07-06 09:36:38.597 UTC	72881969	"<p>The data comes from a xhr/fetch. You can find it here: <a href=""https://poit.bolagsverket.se/poit/rest/HamtaKungorelse?kungorelseid=K397881/22"" rel=""nofollow noreferrer"">https://poit.bolagsverket.se/poit/rest/HamtaKungorelse?kungorelseid=K397881/22</a></p>"			2022-07-06 10:31:55.85 UTC
72886936	javascript|python|html|date|flask	Convert Date in JavaScript (from a Python Dataset)	"<p>How do I edit the date format that gets returned from a dataset from Python via a Flask App in Javascript?</p> <p>It currently shows up as datetime, but I want it to show up as a custom date format.</p> <p>The best type of answer would help me to understand how to access those date values and create a custom date, such as 'Monday, 6 June 2022'. But if you can just turn it into a date, without the time, that may also suffice.</p> <p><a href=""https://i.stack.imgur.com/LPauW.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/LPauW.png"" alt=""enter image description here"" /></a></p> <p><strong>Python</strong></p> <pre><code>import pandas as pd from flask import Flask, render_template, jsonify, render_template_string, request, flash import json import datetime from datetime import datetime  app = Flask(__name__) app.secret_key = &quot;test&quot;  test_df = pd.DataFrame([     ['Afghanistan', 'Report #1', 'Category #1', '2021-01-01', 'https://www.google.com', 'https://reliefweb.int/sites/default/files/styles/thumbnail/public/previews/c5/2d/c52de4ba-42d8-4383-8310-eb1a6966e803.png'],     ['Bangladesh', 'Report #2', 'Category #1', '2021-01-01', 'https://www.google.com', 'https://reliefweb.int/sites/default/files/styles/thumbnail/public/previews/c5/2d/c52de4ba-42d8-4383-8310-eb1a6966e803.png'],     ['Cambodia', 'Report #3', 'Category #2', '2021-01-01', 'https://www.google.com', 'https://reliefweb.int/sites/default/files/styles/thumbnail/public/previews/c5/2d/c52de4ba-42d8-4383-8310-eb1a6966e803.png']],     columns=['Country', 'Title', 'Category', 'Date', 'Link', 'Image']) test_df['Date'] = pd.to_datetime(test_df['Date']) test_df = test_df.fillna(&quot;&quot;) test_df = test_df.values.tolist()  @app.route(&quot;/hello&quot;) def index():     return render_template(&quot;index.html&quot;, test_df=test_df)   if __name__ == '__main__':     app.run(debug=True, port=4000) </code></pre> <p><strong>HTML/JavaScript</strong></p> <pre><code>&lt;body&gt;      &lt;div class=&quot;main&quot;&gt;         &lt;table class=&quot;table mydatatable&quot; id=&quot;mydatatable&quot;&gt;             &lt;thead&gt;                 &lt;tr&gt;                     &lt;th&gt; &lt;/th&gt;                     &lt;th&gt; &lt;/th&gt;                 &lt;/tr&gt;             &lt;/thead&gt;             &lt;tbody id=&quot;myTable&quot;&gt;             &lt;/tbody&gt;         &lt;/table&gt;     &lt;/div&gt;       &lt;script&gt;         // Build Table         function buildTable(data) {             var table = document.getElementById('myTable')             table.innerHTML = data.map(function (row) {                 let [Country, Title, Category, Date, Link, Image] = row;                 return `&lt;tr&gt;                 &lt;td&gt;&lt;br&gt;&lt;br&gt;                 &lt;a href=&quot;${Link}&quot; target='_blank'&gt;                     &lt;img class=&quot;tableThumbnail&quot; src=${Image}&gt;&lt;br&gt;&lt;br&gt;&lt;/td&gt;&lt;/a&gt;                 &lt;td&gt;                     &lt;span class=&quot;tableTitle&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;a href=&quot;${Link}&quot; target='_blank'&gt;${Title}&lt;/a&gt;&lt;br&gt;&lt;/span&gt;                     &lt;span class=&quot;tableCountry&quot;&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;${Country}&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&amp;nbsp;&amp;nbsp;                     &lt;span class=&quot;tableCategory&quot;&gt;&amp;nbsp;&amp;nbsp;${Category}&amp;nbsp;&amp;nbsp;&lt;/span&gt;                     &lt;span class=&quot;tableDate&quot;&gt;&lt;span&gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&lt;i class=&quot;far fa-calendar&quot;&gt;&lt;/i&gt;&amp;nbsp;&amp;nbsp;${Date}&lt;/span&gt;&lt;/span&gt;                 &lt;/td&gt;             &lt;/tr&gt;`;             }).join('');         }         const evidenceData = JSON.parse('{{ test_df|tojson }}');          buildTable(evidenceData)      &lt;/script&gt; &lt;/body&gt; </code></pre> <p>If you're wondering about why the values are nested like this, there's some custom CSS styling (not included here) to make them look better.</p> <p><strong>Libraries</strong></p> <pre><code>&lt;!-- Jquery --&gt; &lt;script src=&quot;https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js&quot;&gt;&lt;/script&gt;  &lt;!-- Datatables --&gt; &lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.datatables.net/1.12.1/css/jquery.dataTables.min.css&quot;&gt; &lt;script src=&quot;https://cdn.datatables.net/1.12.1/js/jquery.dataTables.min.js&quot;&gt;&lt;/script&gt;  &lt;!-- Icons --&gt; &lt;script src=&quot;https://kit.fontawesome.com/f3135b3376.js&quot; crossorigin=&quot;anonymous&quot;&gt;&lt;/script&gt; </code></pre>"	2022-07-06 16:23:11.843 UTC	72888910	"<p>I recommend using the <a href=""https://momentjs.com"" rel=""nofollow noreferrer"">MomentJS</a> library to change the format of the date.<br /> Just include the library in the header.</p> <pre><code>&lt;!-- MomentJS --&gt; &lt;script src=&quot;https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.3/moment.min.js&quot;&gt;&lt;/script&gt; </code></pre> <p>Then you can change the date by choosing the <a href=""https://momentjs.com/docs/#/displaying/format/"" rel=""nofollow noreferrer"">format</a>.</p> <pre><code>moment(date).format('dddd, D MMMM YYYY'); </code></pre> <p>As a little tip, I advise you to choose your variable names in such a way that they do not collide with predefined names in the language. In JavaScript, the CamelCase notation is used as the standard.</p> <pre><code>let [country, title, category, date, link, image] = row; date = moment(date).format('dddd, D MMMM YYYY'); // ...  </code></pre> <hr /> <p>A variant with <code>Date.prototype.toLocaleDateString()</code> is this.</p> <pre><code>let opts = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' }; let ds = new Date('2021-01-01').toLocaleDateString('en-US', opts); console.log(ds); </code></pre> <p>The output should look like this.</p> <pre><code>Friday, January 1, 2021 </code></pre>"			2022-07-06 19:26:38.05 UTC
72889465	python|selenium|xpath|css-selectors|webdriverwait	Find element by classname and click on element within javascript rendered site using Python Selenium	"<p>I searched stack overflow and tried some solutions but could not make it work.</p> <p>Here is my code:</p> <pre><code>from selenium import webdriver  PATH = &quot;C:\Program Files (x86)\chromedriver.exe&quot;; driver = webdriver.Chrome(PATH)  driver.get(&quot;https://coinmarketcap.com/&quot;); driver.implicitly_wait(5) tt = driver.find_element_by_class_name('zafg3t-1') print(tt)  driver.quit() </code></pre> <p>The class name <code>zafg3t-1</code> is the search area class, I can see in browser, but selenium cant find the class. So I unable to click.</p> <p>What is my mistake here?</p>"	2022-07-06 20:23:40.143 UTC	72890182	"<p>Classnames like <em><code>zafg3t-1</code></em>, <em><code>gaWePq</code></em>, etc are dynamic generated and would change after a considerable amount of time and even may be the next time you access the <a href=""https://coinmarketcap.com/"" rel=""nofollow noreferrer"">site</a> afresh.</p> <hr /> <h2>Solution</h2> <p>To click within the <em><strong>Search</strong></em> box  you need to induce <a href=""https://stackoverflow.com/a/59130336/7429447"">WebDriverWait</a> for the <a href=""https://stackoverflow.com/a/54194511/7429447""><em>element_to_be_clickable()</em></a> and you can use either of the following <a href=""https://stackoverflow.com/a/48056120/7429447""><em>locator strategies</em></a>:</p> <ul> <li><p>Using <em>CSS_SELECTOR</em>:</p> <pre><code>driver.get('https://coinmarketcap.com/') WebDriverWait(driver, 20).until(EC.element_to_be_clickable((By.CSS_SELECTOR, &quot;div.cmc-cookie-policy-banner__close&quot;))).click() WebDriverWait(driver, 20).until(EC.element_to_be_clickable((By.CSS_SELECTOR, &quot;div[data-text='Use to trigger search']&quot;))).click() </code></pre> </li> <li><p>Using <em>XPATH</em>:</p> <pre><code>driver.get('https://coinmarketcap.com/') WebDriverWait(driver, 20).until(EC.element_to_be_clickable((By.XPATH, &quot;//div[@class='cmc-cookie-policy-banner__close']&quot;))).click() WebDriverWait(driver, 20).until(EC.element_to_be_clickable((By.XPATH, &quot;//div[text()='Search']&quot;))).click() </code></pre> </li> <li><p><strong>Note</strong>: You have to add the following imports :</p> <pre><code>from selenium.webdriver.support.ui import WebDriverWait from selenium.webdriver.common.by import By from selenium.webdriver.support import expected_conditions as EC </code></pre> </li> <li><p>Browser Snapshot:</p> </li> </ul> <p><img src=""https://i.stack.imgur.com/7C8HC.png"" alt=""coinmarketcap"" /></p>"			2022-07-06 21:43:19.043 UTC
72905476	python|pandas|beautifulsoup	How I can input/search text in Javascript base websites using selinium python?	"<p><em>I want to input result in search field and get the Eircode/zipcode/postalcode from output page.</em> e.g: <a href=""https://eircode-finder.com/search/"" rel=""nofollow noreferrer"">https://eircode-finder.com/search/</a> <em>and search list of addresses like:</em>  <strong>8 old bawn court tallaght  dublin</strong> and from results I want to fetch Eircode/zipcode/postalcode and save it in a <em>.txt file</em> <strong>I have used beautifulsoup to fetch data, but Its not fetching even the html of the page.I don't know details but something is on the website like javascript which is preventing me to get data from that website.</strong></p>"	2022-07-08 00:21:14.6 UTC	72905588	"<p>Mentioned website is developed using <code>react</code> which requires javascript engine for rendering html pages.<br /> <strong><code>Beautiful Soup</code></strong> just sends the request and take the response if it's normal website response will be <strong>HTML</strong> or else it will be <strong>JSON</strong> data which require javascript engine to render.<br /> Website which require javascript engine can be scrapped with selenium as it uses actual browser to request and load the page.</p> <pre class=""lang-py prettyprint-override""><code>from bs4 import BeautifulSoup from selenium import webdriver from selenium.webdriver.common.keys import Keys import time import pandas as pd  path = r&quot;./chromedriver.exe&quot; driver = webdriver.Chrome(path)  url = &quot;https://eircode-finder.com/search/&quot;   driver.get(url) search_input=driver.find_element_by_id(&quot;outlined&quot;) search_input.send_keys(&quot;8 old bawn court tallaght dublin&quot;) # add text which you want to send search_input.send_keys(Keys.ENTER) time.sleep(10) # for page to load eircode=driver.find_element_by_css_selector(&quot;#root &gt; div:nth-child(2) &gt; div &gt; div.MuiBox-root.jss12 &gt; div &gt; div &gt; div &gt; div:nth-child(1) &gt; div.MuiBox-root.jss13 &gt; div &gt; div &gt; h3 &gt; div&quot;) print(eircode.text) time.sleep(10) # buffer  # you can pass this page source to beautiful soup and scrap it # or you can continue scrapping with selenium. soup = BeautifulSoup(driver.page_source, 'html.parser') print(driver.page_source) </code></pre> <p>You can check out this <a href=""https://youtu.be/Xz514u4V_ts"" rel=""nofollow noreferrer"">video</a> which can help you understand better</p>"			2022-07-08 00:46:42.093 UTC
72905476	python|pandas|beautifulsoup	How I can input/search text in Javascript base websites using selinium python?	"<p><em>I want to input result in search field and get the Eircode/zipcode/postalcode from output page.</em> e.g: <a href=""https://eircode-finder.com/search/"" rel=""nofollow noreferrer"">https://eircode-finder.com/search/</a> <em>and search list of addresses like:</em>  <strong>8 old bawn court tallaght  dublin</strong> and from results I want to fetch Eircode/zipcode/postalcode and save it in a <em>.txt file</em> <strong>I have used beautifulsoup to fetch data, but Its not fetching even the html of the page.I don't know details but something is on the website like javascript which is preventing me to get data from that website.</strong></p>"	2022-07-08 00:21:14.6 UTC	72905539	"<p>You can use next example how to make a request to this page api:</p> <pre class=""lang-py prettyprint-override""><code>import requests import pandas as pd  url = &quot;https://geocode.search.hereapi.com/v1/geocode&quot;  to_search = [     &quot;Coolboy Wicklow&quot;,     &quot;8 old bawn court tallaght dublin&quot;, ]  headers = {&quot;Referer&quot;: &quot;https://eircode-finder.com/&quot;} params = {     &quot;q&quot;: &quot;&quot;,     &quot;lang&quot;: &quot;en&quot;,     &quot;in&quot;: &quot;countryCode:IRL&quot;,     &quot;apiKey&quot;: &quot;BegLfP-EDdyWflI0fRrP3HJ7IDSK_0878_n2fbct1wE&quot;, }   def get_item(q):     params[&quot;q&quot;] = q     data = requests.get(url, params=params, headers=headers).json()     out = []      for i in data[&quot;items&quot;]:         out.append([i[&quot;title&quot;], i[&quot;address&quot;].get(&quot;postalCode&quot;)])     return out   all_data = [] for q in to_search:     all_data += get_item(q)  df = pd.DataFrame(all_data, columns=[&quot;title&quot;, &quot;postal_code&quot;]) df = df.drop_duplicates() print(df.to_markdown(index=False)) </code></pre> <p>Prints:</p> <div class=""s-table-container""> <table class=""s-table""> <thead> <tr> <th style=""text-align: left;"">title</th> <th style=""text-align: left;"">postal_code</th> </tr> </thead> <tbody> <tr> <td style=""text-align: left;"">Coolboy, Arklow, County Wicklow, Ireland</td> <td style=""text-align: left;""></td> </tr> <tr> <td style=""text-align: left;"">8 Old Bawn Court, Dublin, County Dublin, D24 N1YH, Ireland</td> <td style=""text-align: left;"">D24 N1YH</td> </tr> </tbody> </table> </div>"			2022-07-08 00:35:27.54 UTC
72924260	javascript|python|jquery|ajax	How to call the python function from the javascript ajax request result?	"<p>So I have the function I want to call <code>get_maps()</code> from a separate python file called &quot;mapsinterpeter.py&quot;, and I have successfully requested the code, but I still cannot call the function.</p> <pre><code>function onSubmit(e) {     e.preventDefault()     if(year.value === &quot;&quot; || cat.value === &quot;&quot;) {         msg.textContent = &quot;Please fill out the fields&quot;         msg.classList.add(&quot;error&quot;);     } else {         msg.textContent = &quot;&quot;         msg.classList.remove(&quot;error&quot;);         const catvalue = cat.value         $.ajax({           type: &quot;POST&quot;,           url: &quot;mapsinterpeter.py&quot;,             data: {async: false},             success: function (response) {            console.log(get_maps(/*args, ect */));        },         });         year.value = &quot;&quot;         cat.value = &quot;&quot;     }  } </code></pre> <p>Console:</p> <pre><code>get_maps is not defined at Object.success (https://6534e288-58df-4278-82e3-7bfc760af484.id.repl.co/script.js:34:20) at c (https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js:2:28327) at Object.fireWith [as resolveWith] (https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js:2:29072) at l (https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js:2:79901) at XMLHttpRequest.&lt;anonymous&gt; (https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js:2:82355) </code></pre>"	2022-07-09 20:02:04.653 UTC	72924277	"<p>You can't call it directly from the javascript file</p> <p>You have to call it and pass params from the AJAX call and then call the .done method when the API executes and do something with the values</p> <pre class=""lang-js prettyprint-override""><code>    $.ajax({       type: &quot;POST&quot;,       url: &quot;~/mapsinterpeter.py&quot;, // Change the path to match this       data: { param: text} // params for function     }).done(function( e ) {        // do something with function response             });  </code></pre>"			2022-07-09 20:05:49.24 UTC
72947222	javascript|python|compression|zlib	"Compress with Python Zlib, decompress in JavaScript Zlib"	"<p>Trying to compress some data in Python (think API backend) then open and decompress in JS (frontend).</p> <p>Python</p> <pre class=""lang-py prettyprint-override""><code>zlib.compress(bytes(json.dumps([&quot;a&quot;, &quot;b&quot;, &quot;c&quot;]), &quot;utf-8&quot;)) </code></pre> <p>This produces a byte object</p> <pre><code>b'x\x9c\x8bVJT\xd2QPJ\x02\x11\xc9J\xb1\x00\x1a\x13\x03C' </code></pre> <p>How do I parse this and decompress this with JavaScript?</p>"	2022-07-12 04:58:25.847 UTC	72947382	"<p>Thanks to @GordonAitchJay for the tip there. Got there in the end.</p> <p>On the Python side we have</p> <pre><code>json_object = [&quot;a&quot;, &quot;b&quot;, &quot;c&quot;] base64.b64encode(zlib.compress(bytes(json.dumps(json_object), &quot;utf-8&quot;))).decode(&quot;ascii&quot;) </code></pre> <p>On the JS side we have</p> <pre><code>let compressedData = Uint8Array.from(atob(input), (c) =&gt; c.charCodeAt(0)); let decompressedData = pako.inflate(compressedData, { to: &quot;string&quot; }); let jsonObject = JSON.parse(decompressedData); </code></pre>"			2022-07-12 05:24:24.97 UTC
72981849	javascript|python|flask|fetch|xls	Insert values from JavaScript to Python to file.xls	"<p>I'm trying to insert certain values into a xls or xlsx file, that have been fetched in JavaScript to the python function. How can I insert the values from the JavaScript function into the python function?</p> <p>This is my python code:</p> <pre><code>import xlwt from xlwt import Workbook      @app.route('/Import_to_excel',     methods=['GET', 'POST'])     def Import_to_excel():              x = request.args.get('id0')         y = request.args.get('id1')         z = request.args.get('id2')              array = [ ip, app, ver]                  wb = Workbook()         sheet1 = wb.add_sheet('Sheet 1')              sheet1.write(0, 0, array[0])         sheet1.write(0, 1, array[1])         sheet1.write(0, 2, array[2])          wb.save('xlwt example.xls')                  return &quot;success&quot; </code></pre> <p>I have also been trying to post a list with the values, instead of individually posting the values one by one. But i have some problems with request.args.getlist() on the Python side of things.</p> <p>This is my JavaScript function</p> <pre><code>function Import_to_excel() {     id0 = document.getElementById(&quot;x&quot;).text     id1 = document.getElementById(&quot;y&quot;).value     id2 = document.getElementById(&quot;z&quot;).value      const input_values = [ id0, id1, id2];   fetch('http://127.0.0.1:5000/Import_to_excel?id0='+id0  ).then(resp =&gt; resp.json())   fetch('http://127.0.0.1:5000/Import_to_excel?id1='+id1  ).then(resp =&gt; resp.json())   fetch('http://127.0.0.1:5000/Import_to_excel?id2='+id2  ).then(resp =&gt; resp.json()) } </code></pre> <p>The output in my xls file is blank.</p>"	2022-07-14 14:04:38.787 UTC	73015833	<p>Python code</p> <pre><code>id = request.args.get('ID') x = id.split('_*_')[0] y = id.split('_*_')[1] z = id.split('_*_')[2] </code></pre> <p>JavaScript</p> <pre><code>  var x = document.getElementById(&quot;x&quot;).value;   var y = document.getElementById(&quot;y&quot;).value;   var z = document.getElementById(&quot;z&quot;).value;   var a = 'http://127.0.0.1:5000/initiate_excel_corvert?ID='x+'_*_'+y+'_*_'+z+'_*_'            fetch(a)           .then(res =&gt; res.json())           .then(res =&gt; console.log(res));         } </code></pre>			2022-07-17 22:39:31.713 UTC
72988178	javascript|python|base64|encode	Encoding Hash in javascript gives different result compared to python	"<p>I am trying to convert a javascript program into python but I am getting different results, after creating the hash they are the same but after encoding  the results they are way off the python one as it is much longer then the javascript version.</p> <p>Javascript result: <em>'DqnyGCG5qW5DPceKe1p7fFyFxqdXrqZhQiN2Ukp-2h0'</em></p> <p>Python result: <em>'NGQ4MWNiYWY3NzgyZmIyZjE3YWEzNWQyNGE1Mjg4M2M2ZmI1MmQxNGE4MDFmNDMxM2FkZWRlOTE1NjVhZGU0YQ'</em></p> <p><strong>Javascript</strong></p> <pre><code>var hash = CryptoJS.HmacSHA256(token.join(&quot;.&quot;), secret); // Same hash on both var base64Hash = CryptoJS.enc.Base64.stringify(hash); document.write(urlConvertBase64(base64Hash)); // Results are different now  function urlConvertBase64(input) {   var output = input.replace(/=+$/, '');   output = output.replace(/\+/g, '-');   output = output.replace(/\//g, '_');    return output; } </code></pre> <p><strong>Python</strong></p> <pre><code>signatureHash = hmac.new(secret.encode(), tokenHB, hashlib.sha256).hexdigest() // Same hash on both signature = base64.urlsafe_b64encode(signatureHash.encode()) signature = signature.rstrip('='.encode()) // Results are different now  print(signature) </code></pre>"	2022-07-15 01:27:46.16 UTC	72988791	"<p>You encoded two different things between the Node.js and Python.  In Node.js you directly used the raw (bytes value of the) hash, while in Python you used the hex encoded value of the same hash.  Depending on which output you desire, you will need to either stringify the hex output in Node.js, or base64 encode the raw hash in Python.</p> <p>The Node.js code that will replicate both versions of the output (your <code>urlConvertBase64</code> implementation omitted from example, but is used):</p> <pre class=""lang-js prettyprint-override""><code>const CryptoJS = require('crypto-js');  var token = 'the token'; var data_to_hash = 'thesecret\x00\x00\x02'; var hashed = CryptoJS.HmacSHA256(data_to_hash, token); var hexdigest = hashed.toString(CryptoJS.enc.Hex); var raw_base64 = urlConvertBase64(CryptoJS.enc.Base64.stringify(hashed)); var hex_base64 = urlConvertBase64(Buffer.from(hexdigest).toString('base64'));  console.log(`raw + base64: ${raw_base64}`); console.log(`hex + base64: ${hex_base64}`); </code></pre> <p>The Python code that will replicate the above:</p> <pre class=""lang-py prettyprint-override""><code>import hashlib import hmac from base64 import urlsafe_b64encode  token = b'the token' data_to_hash = b'thesecret\x00\x00\x02' hashed = hmac.new(token, data_to_hash, hashlib.sha256) hexdigest = hashed.hexdigest().encode() raw_base64 = urlsafe_b64encode(hashed.digest()).decode().rstrip('=') hex_base64 = urlsafe_b64encode(hexdigest).decode().rstrip('=') print(f'raw + base64: {raw_base64}') print(f'hex + base64: {hex_base64}') </code></pre> <p>Both versions produce the following output:</p> <pre> raw + base64: R1oLspOvlQ6X_rzaudD8dk8Kqo-nu9pgij-f_-4tnxo hex + base64: NDc1YTBiYjI5M2FmOTUwZTk3ZmViY2RhYjlkMGZjNzY0ZjBhYWE4ZmE3YmJkYTYwOGEzZjlmZmZlZTJkOWYxYQ </pre>"			2022-07-15 03:35:01.81 UTC
73000746	javascript|python|node.js|typescript	How to convert string value to object in Javascript with command similar to eval in Python	"<p>In Python <code>stringValue</code> was given as a string variable:</p> <pre><code>stringValue = '{&quot;DATA&quot;:{&quot;VERSION&quot;:1.1, &quot;STATE&quot;:True, &quot;STATUS&quot;:&quot;ONLINE&quot;}}' </code></pre> <p>I can go ahead and &quot;convert&quot; or &quot;cast&quot; it as Python dictionary using <code>eval</code> built in function:</p> <pre><code>result = eval(stringValue) </code></pre> <p>Is there a way to do the same in javascript if we would be given <code>var stringValue</code> as:</p> <pre><code>var stringValue = '{&quot;DATA&quot;:{&quot;VERSION&quot;:1.1, &quot;STATE&quot;:true, &quot;STATUS&quot;:&quot;ONLINE&quot;}}' </code></pre>"	2022-07-16 00:35:18.29 UTC	73000781	"<p>use eval</p> <p>With one caveat ... you'll need to add <code>(</code> and <code>)</code> to the string</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-js lang-js prettyprint-override""><code>// this is the ORIGINAL value of the string in the question!!! var stringValue = ""{'DATA':{'VERSION':1.1, 'STATE':true, 'STATUS':'ONLINE'}}""; var result = eval(`(${stringValue})`); console.log(result)</code></pre> </div> </div> </p> <p>Now that code in the question was changed by you after I posted the original answer ...  i.e. swapped <code>'</code> and <code>&quot;</code> - now you CAN use <code>JSON.parse</code> as a comment suggested</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-js lang-js prettyprint-override""><code>var stringValue = '{""DATA"":{""VERSION"":1.1, ""STATE"":true, ""STATUS"":""ONLINE""}}'; var result = JSON.parse(stringValue); console.log(result);</code></pre> </div> </div> </p>"			2022-07-16 00:43:53.813 UTC
73001491	javascript|python	How to convert a .reduce function of Javascript to Python?	"<p>I am reading a javascript source and I need to convert it to Python.</p> <p>Here is the code, since I am just a beginner, I dont get <code>.reduce()</code> function at all</p> <pre class=""lang-js prettyprint-override""><code>function bin2dec(num){     return num.split('').reverse().reduce(function(x, y, i){         return (y === '1') ? x + Math.pow(2, i) : x;     }, 0); } </code></pre> <p>Here is what I have tried so far</p> <pre class=""lang-py prettyprint-override""><code>def bin2dec(num):     listNum = list(num)     listNum = map(int, listNum)     x = listNum[-1]     listNum.reverse()     for i in range (len(listNum)):         if listNum[i] == 1:             x = x + 2**listNum[i]         else:             x = x     return x </code></pre> <p>But it is not correct.</p>"	2022-07-16 04:21:08.9 UTC	73001579	"<p>You can just use the built-in <code>int</code> function:</p> <pre class=""lang-py prettyprint-override""><code>int(&quot;010010&quot;, 2)  &gt;&gt;&gt; 18 </code></pre> <hr /> <p>That said I found a pretty interesting alternative approach using <a href=""https://pypi.org/project/Js2Py/"" rel=""nofollow noreferrer"">js2py</a>. You can feed it the whole js function as a string, allowing you to effectively use js inside python:</p> <pre class=""lang-py prettyprint-override""><code>import js2py  bin2dec = js2py.eval_js(&quot;&quot;&quot; function bin2dec(num){     return num.split('').reverse().reduce(function(x, y, i){         return (y === '1') ? x + Math.pow(2, i) : x;     }, 0); } &quot;&quot;&quot;)  bin2dec(&quot;010010&quot;)  &gt;&gt;&gt; 18 </code></pre> <p>Install with <code>pip install js2py</code></p> <hr /> <p>You made a lot of mistakes with your attempt, the <code>map</code> function returns an <code>iterator</code>, not a <code>list</code>. Generally, just avoid <code>map</code> and <code>filter</code> and just use a list comprehension instead.</p> <p>You also raised 2 to the power of the value (1 or 0) when it should have been the index.</p> <p>Here's a working version of your example:</p> <pre class=""lang-py prettyprint-override""><code>def bin2dec(num):     listNum = [int(n) for n in num]     total = 0     listNum.reverse()     for i, n in enumerate(listNum):         if n == 1:             total += 2 ** i     return total </code></pre>"			2022-07-16 04:41:21.587 UTC
73001491	javascript|python	How to convert a .reduce function of Javascript to Python?	"<p>I am reading a javascript source and I need to convert it to Python.</p> <p>Here is the code, since I am just a beginner, I dont get <code>.reduce()</code> function at all</p> <pre class=""lang-js prettyprint-override""><code>function bin2dec(num){     return num.split('').reverse().reduce(function(x, y, i){         return (y === '1') ? x + Math.pow(2, i) : x;     }, 0); } </code></pre> <p>Here is what I have tried so far</p> <pre class=""lang-py prettyprint-override""><code>def bin2dec(num):     listNum = list(num)     listNum = map(int, listNum)     x = listNum[-1]     listNum.reverse()     for i in range (len(listNum)):         if listNum[i] == 1:             x = x + 2**listNum[i]         else:             x = x     return x </code></pre> <p>But it is not correct.</p>"	2022-07-16 04:21:08.9 UTC	73001894	"<p><strong>Normal Equivalence</strong></p> <ul> <li>Javascript <code>parseInt(x, 2)</code></li> <li>Python <code>int(x, 2)</code></li> </ul> <p><strong>Using Same Method as Posted Code</strong></p> <pre><code>from functools import reduce import math  def bin2dec(s):     return reduce(lambda x, y_i: x + int(math.pow(2, y_i[0])) if y_i[1] == '1' else x,                    enumerate(reversed(s)),                    0) </code></pre> <p><em>Test</em></p> <pre><code>print(bin2dec('110'))  # outut: 6 </code></pre> <p><em>Explanation</em></p> <ul> <li><code>reversed(s)</code> to replace Javascript <code>num.split('').reverse()</code></li> <li>Python's <code>reduce</code> function from <a href=""https://docs.python.org/3.0/library/functools.html"" rel=""nofollow noreferrer"">functools</a> has signature <code>reduce(function, iterable[, initializer])</code> <ul> <li>Use Python lambda function in place of Javascript's <code>function(x, y, i){...</code> (1st argument)</li> <li>Javascript reduce provide current value and current index <code>y, i</code></li> <li>Python only provides current value, so we use enumerate(..) on values array to convert to current index, current value pairs (2nd argument)</li> <li><code>y_i</code> are value tuples, with y_i[0] = index and y_i[1] the value</li> <li>use 0 as initializer (last argument in reduce)</li> </ul> </li> <li>int to convert the value of math.pow from float to integer</li> <li>Python <code>if else</code> expression in place of Javascript's <code>?</code> ternary operator</li> </ul> <p><strong>Simpler Python Code than Using Reduce</strong></p> <pre><code>def bin2dec(s):     return sum((0, 2**i)[y == '1'] for i, y in enumerate(s[::-1])) </code></pre>"			2022-07-16 05:59:37.98 UTC
73064838	javascript|python|selenium|selenium-webdriver	Python Selenium - How to call embedded javascripts?	<p>I would like to write a Python script to automate a process. Therefore I need interact with a webinterface. I installed Selenium and I'm able to call my webinterface and to login. Now I see a bunch of buttons but I can't just simply find them as an element as those are embedded in .js files. I can see them when I click in the browser on 'View Page source':</p> <pre><code>&lt;script src=&quot;web/js/deviceWindow.js&quot;&gt;&lt;/script&gt; </code></pre> <p>When I click on deviceWindow.js I can see the Button where I want to click on:</p> <pre><code>this.setupButton = new Button(); this.setupButton.setText('Settings'); this.setupButton.text.addClass('configBtn'); </code></pre> <p>How can I add this button click to my Python script?</p> <pre><code>from selenium import webdriver from selenium.webdriver.common.keys import Keys  driver = webdriver.Chrome('./chromedriver')  driver.get('http://10.143.140.220/login.html')  password = driver.find_element_by_name('password') password.clear() password.send_keys('password') password.send_keys(Keys.RETURN) </code></pre> <p>I would appreciate any help :-) Thanks!</p>	2022-07-21 10:48:53 UTC	73065413	"<p>Your question is unclear, however.. is this helpful?</p> <pre><code>from selenium.webdriver.support import expected_conditions as EC [...]  button = WebDriverWait(browser, 10).until(EC.element_to_be_clickable((By.XPATH, &quot;//*[contains(text(), 'Settings')]&quot;))) button.click() </code></pre>"			2022-07-21 11:32:41.557 UTC
73135631	javascript|electron	How to Minimize Browser Window using JavaScript or jQuery or Python	"<p>Trying to develop a small app using python flask and electron JS, basically i am using electron for only to run Flask Python Script by using (child_process &amp; Spawn) in electron main.js file also using (LoadURL(http://localhost:5000)) instead of using (loadURL(index.html)).</p> <p>I did close the Browser Window using simple (Window.Close()) function in separate JavaScript file which is linked in the body section, but cant figure out how to MINIMIZE the Browser Window using only JavaScript or Python in the same file linked in body.</p> <p>Cant use electron for this because i am not using index.html in loadURL.</p> <p>Appreciate all the help i cant get on this.</p>"	2022-07-27 09:40:43.38 UTC	73136209	"<p>You should use a <a href=""https://www.electronjs.org/docs/latest/tutorial/tutorial-preload"" rel=""nofollow noreferrer"">preload script</a> and <a href=""https://www.electronjs.org/docs/latest/tutorial/ipc"" rel=""nofollow noreferrer"">inter-process Communication</a></p> <p>It's as simple as this</p> <pre class=""lang-js prettyprint-override""><code>// in the preload script // you can access Electron's renderer process modules here  const { contextBridge, ipcRenderer } = require('electron')  // you should handle the IPC call in the main process // and call Electron's browserWindow.minimize() function contextBridge.exposeInMainWorld('minimize', () =&gt; ipcRenderer.send('minimize')) </code></pre> <pre class=""lang-js prettyprint-override""><code>// in the main process, you should have something like this  const {app, BrowserWindow, ipcMain} = require('electron') const path = require('path')  function createWindow () {   const mainWindow = new BrowserWindow({     webPreferences: {       preload: path.join(__dirname, 'preload.js')     }   })    ipcMain.on('minimize', () =&gt; {     mainWindow.minimize()   })    mainWindow.loadURL('https://example.com') } </code></pre> <p>In your JavaScript file, you can now call <code>window.minimize()</code></p>"			2022-07-27 10:20:31.307 UTC
73171968	javascript|python|html|flask	"return redirect() not displaying the new page in the browser, after sending data from JavaScript file to Python (Flask)"	"<p>I'm trying to make a form where JavaScript makes the authentication of it. After JavaScript says that the user followed the rules correctly, the JavaScript file collects the data typed by the user, so the data is sent to Python (with the help of ajax). From the Python file, I want that it recognizes the data and finally redirect to a new page. Now, I am having an issue because after Python recognizes the previously shared data, <code>return redirect()</code> is not working. It's strange, even though I tried with return <code>redirect(url_for())</code>, I got the same result. <strong>The browser does not update the new page.</strong></p> <p><em><strong>Inside templates folder &gt;&gt;</strong></em></p> <p><strong>educateForm.html</strong></p> <pre><code>&lt;!DOCTYPE html&gt;  &lt;html lang=&quot;en&quot;&gt;      &lt;head&gt;         &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1&quot;&gt;          &lt;link rel=&quot;stylesheet&quot; href=&quot;https://use.fontawesome.com/releases/v5.5.0/css/all.css&quot; integrity=&quot;sha384-B4dIYHKNBt8Bc12p+WXckhzcICo0wtJAoU8YZTY5qE0Id1GSseTk6S+L3BlXeVIU&quot; crossorigin=&quot;anonymous&quot;&gt;          &lt;link href=&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css&quot; rel=&quot;stylesheet&quot; integrity=&quot;sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC&quot; crossorigin=&quot;anonymous&quot;&gt;          &lt;!--Icon link--&gt;         &lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.jsdelivr.net/npm/bootstrap-icons@1.5.0/font/bootstrap-icons.css&quot;&gt;          &lt;title&gt;Educate Form&lt;/title&gt;     &lt;/head&gt;      &lt;body&gt;           &lt;div class=&quot;container-fluid padding&quot; id=&quot;fullForm1&quot;&gt;             &lt;div class=&quot;row padding&quot;&gt;                 &lt;div class=&quot;col-md-12 col-lg-12&quot;&gt;                 &lt;div class=&quot;centerForm&quot; style=&quot;text-align:left;&quot;&gt;                     &lt;h2&gt;Contact information: &lt;/h2&gt;                  &lt;!--Form--&gt;                     &lt;form name='registration' action=&quot;/educateForm&quot; method=&quot;post&quot;&gt;&lt;!--method=&quot;post&quot; onsubmit=&quot;return formValidation()&quot;--&gt;                         &lt;!--onsubmit=&quot;return false&quot;--&gt;                         &lt;div class=&quot;row&quot;&gt;                             &lt;div class=&quot;col-md-5&quot;&gt;                                 &lt;label for=&quot;FName&quot; class=&quot;form-label&quot;&gt;First name&lt;/label&gt;                                 &lt;input type=&quot;text&quot; name=&quot;FName&quot; placeholder=&quot;Mark&quot; id=&quot;FName&quot; class=&quot;form-control&quot; required=&quot;required&quot; autocomplete=&quot;off&quot;/&gt;                             &lt;/div&gt;                             &lt;div class=&quot;col-md-5&quot;&gt;                                 &lt;label for=&quot;LName&quot; class=&quot;form-label&quot;&gt;Last name&lt;/label&gt;                                 &lt;input type=&quot;text&quot; name=&quot;LName&quot; placeholder=&quot;Smith&quot; id=&quot;LName&quot; class=&quot;form-control&quot; required=&quot;required&quot; autocomplete=&quot;off&quot;/&gt;                             &lt;/div&gt;                          &lt;/div&gt;                          &lt;div class=&quot;row&quot;&gt;                             &lt;div class=&quot;col-md-5&quot;&gt;                                 &lt;label for=&quot;email&quot; class=&quot;form-label&quot;&gt;Email address&lt;/label&gt;                                 &lt;input type=&quot;email&quot; name=&quot;email&quot; id=&quot;email&quot; placeholder=&quot;mark@smith.com&quot; class=&quot;form-control&quot; aria-describedby=&quot;emailHelp&quot; required=&quot;required&quot; autocomplete=&quot;off&quot;&gt;                             &lt;/div&gt;                         &lt;/div&gt;                          &lt;!--DISPLAY NONE - STYLE--&gt;                         &lt;div class=&quot;row&quot; style=&quot;display: none;&quot;&gt;                             &lt;div class=&quot;col-md-10&quot;&gt;                                 &lt;label for=&quot;skillsLabel&quot; class=&quot;form-label&quot;&gt;What are your skills?&lt;/label&gt;                                 &lt;textarea class=&quot;form-control&quot; name=&quot;skillsText&quot; id=&quot;skillsText&quot; style=&quot;height: 100px&quot; required=&quot;required&quot; autocomplete=&quot;off&quot;&gt;&lt;/textarea&gt;                             &lt;/div&gt;                         &lt;/div&gt;                              &lt;div id=&quot;buttonContainer&quot;&gt;                                 &lt;input id=&quot;orderButton&quot; type=&quot;submit&quot; name=&quot;submit&quot; class=&quot;btn btn-primary&quot; value=&quot;NEXT&quot; onClick=&quot;return formValidation();&quot; /&gt;                                 &lt;input id=&quot;resetButton&quot; type=&quot;reset&quot; name=&quot;reset&quot; class=&quot;btn btn-outline-secondary&quot; value=&quot;Clear Form&quot; onClick=&quot;return confirmreset()&quot; /&gt;                             &lt;/div&gt;                          &lt;/form&gt;             &lt;/div&gt;             &lt;/div&gt;             &lt;/div&gt;         &lt;/div&gt;           &lt;!--Pagination--&gt;         &lt;ul class=&quot;pagination justify-content-center&quot; id=&quot;pagination&quot;&gt;             &lt;li class=&quot;page-item disabled&quot;&gt;               &lt;a class=&quot;page-link&quot;&gt;Previous&lt;/a&gt;             &lt;/li&gt;             &lt;li class=&quot;page-item active&quot;&gt;&lt;a class=&quot;page-link&quot; href=&quot;/educateForm&quot;&gt;1&lt;/a&gt;&lt;/li&gt;             &lt;li class=&quot;page-item&quot;&gt;&lt;a class=&quot;page-link&quot; href=&quot;/educateForm2&quot;&gt;2&lt;/a&gt;&lt;/li&gt;             &lt;li class=&quot;page-item&quot;&gt;               &lt;a class=&quot;page-link&quot; href=&quot;/educateForm2&quot;&gt;Next&lt;/a&gt;             &lt;/li&gt;         &lt;/ul&gt;           &lt;!--&lt;script type=&quot;text/javascript&quot; src=&quot;http://ajax.googleapis.com/ajax/libs/jquery/1.5/jquery.min.js&quot;&gt;&lt;/script&gt;--&gt;         &lt;!--&lt;script src=&quot;/educate&quot;&gt;&lt;/script&gt;--&gt;          &lt;script src=&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js&quot; integrity=&quot;sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM&quot; crossorigin=&quot;anonymous&quot;&gt;&lt;/script&gt;         &lt;!--Doesn't recognizes AJAX ⏬--&gt;         &lt;!--&lt;script src=&quot;https://code.jquery.com/jquery-3.2.1.slim.min.js&quot; integrity=&quot;sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN&quot; crossorigin=&quot;anonymous&quot;&gt;&lt;/script&gt;--&gt;          &lt;script src=&quot;https://code.jquery.com/jquery-3.6.0.min.js&quot; integrity=&quot;sha256-/xUj+3OJU5yExlq6GSYGSHk7tPXikynS7ogEvDej/m4=&quot; crossorigin=&quot;anonymous&quot;&gt;&lt;/script&gt;         &lt;script src=&quot;https://cdn.jsdelivr.net/npm/popper.js@1.12.9/dist/umd/popper.min.js&quot; integrity=&quot;sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q&quot; crossorigin=&quot;anonymous&quot;&gt;&lt;/script&gt;          &lt;script src=&quot;/educate&quot;&gt;&lt;/script&gt;     &lt;/body&gt; &lt;/html&gt; </code></pre> <p><strong>educateForm2.html</strong></p> <pre><code>&lt;!DOCTYPE html&gt;  &lt;html lang=&quot;en&quot;&gt;     &lt;head&gt;         &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1&quot;&gt;          &lt;link rel=&quot;stylesheet&quot; href=&quot;https://use.fontawesome.com/releases/v5.5.0/css/all.css&quot; integrity=&quot;sha384-B4dIYHKNBt8Bc12p+WXckhzcICo0wtJAoU8YZTY5qE0Id1GSseTk6S+L3BlXeVIU&quot; crossorigin=&quot;anonymous&quot;&gt;          &lt;link href=&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css&quot; rel=&quot;stylesheet&quot; integrity=&quot;sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC&quot; crossorigin=&quot;anonymous&quot;&gt;          &lt;!--Icon link--&gt;         &lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.jsdelivr.net/npm/bootstrap-icons@1.5.0/font/bootstrap-icons.css&quot;&gt;          &lt;title&gt;Educate 2&lt;/title&gt;      &lt;/head&gt;     &lt;body&gt;           &lt;div class=&quot;container-fluid padding&quot;&gt;             &lt;div class=&quot;row welcome text-center&quot;&gt;                 &lt;div id=&quot;properties&quot; class=&quot;col-12&quot;&gt;                     &lt;h1 class=&quot;display-4&quot;&gt;Page 2&lt;/h1&gt;                 &lt;/div&gt;             &lt;/div&gt;         &lt;/div&gt;           &lt;!--Pagination--&gt;         &lt;ul class=&quot;pagination justify-content-center&quot; id=&quot;pagination&quot;&gt;             &lt;li class=&quot;page-item&quot;&gt;             &lt;a class=&quot;page-link&quot; href=&quot;educateForm&quot;&gt;Previous&lt;/a&gt;             &lt;/li&gt;             &lt;li class=&quot;page-item&quot;&gt;&lt;a class=&quot;page-link&quot; href=&quot;educateForm&quot;&gt;1&lt;/a&gt;&lt;/li&gt;             &lt;li class=&quot;page-item active&quot;&gt;&lt;a class=&quot;page-link&quot; href=&quot;educateForm2&quot;&gt;2&lt;/a&gt;&lt;/li&gt;             &lt;li class=&quot;page-item disabled&quot;&gt;             &lt;a class=&quot;page-link&quot;&gt;Next&lt;/a&gt;             &lt;/li&gt;         &lt;/ul&gt;           &lt;script src=&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js&quot; integrity=&quot;sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM&quot; crossorigin=&quot;anonymous&quot;&gt;&lt;/script&gt;         &lt;!--Doesn't recognizes AJAX ⏬--&gt;         &lt;!--&lt;script src=&quot;https://code.jquery.com/jquery-3.2.1.slim.min.js&quot; integrity=&quot;sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN&quot; crossorigin=&quot;anonymous&quot;&gt;&lt;/script&gt;--&gt;          &lt;script src=&quot;https://code.jquery.com/jquery-3.6.0.min.js&quot; integrity=&quot;sha256-/xUj+3OJU5yExlq6GSYGSHk7tPXikynS7ogEvDej/m4=&quot; crossorigin=&quot;anonymous&quot;&gt;&lt;/script&gt;         &lt;script src=&quot;https://cdn.jsdelivr.net/npm/popper.js@1.12.9/dist/umd/popper.min.js&quot; integrity=&quot;sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q&quot; crossorigin=&quot;anonymous&quot;&gt;&lt;/script&gt;      &lt;/body&gt; &lt;/html&gt; </code></pre> <p><strong>educate.js</strong></p> <pre><code>&quot;use strict&quot;;   function formValidation() {      var emailRegex = /^[A-Za-z0-9._]*\@[A-Za-z]*\.[A-Za-z]{2,5}$/; // Expression for validating email      var fname = document.registration.FName.value;     var lname = document.registration.LName.value;     var email = document.registration.email.value;       if (fname == &quot;&quot;) {         alert('Enter the first name!');         document.registration.FName.focus();         return false;     }      if (lname == &quot;&quot;) {         document.registration.LName.focus();         alert('Enter the last name!');         return false;     }      if (email == &quot;&quot;) {         document.registration.email.focus();         alert('Enter the email!');         return false;     }      if (!emailRegex.test(email)) {         alert('Re-enter the valid email in this format: [abc@abc.com]');         document.registration.email.focus();         return false;     }       if (fname != '' &amp;&amp; lname != '' &amp;&amp; email != '') // condition for check mandatory all fields     {         let confirmation = &quot;Once you submit this form, you can't go back \nAre you sure you want to leave this page?&quot;;         if (confirm(confirmation) == true) {             const dict_values = {fname, lname, email} //Pass the javascript variables to a dictionary.             const s = JSON.stringify(dict_values); // Stringify converts a JavaScript object or value to a JSON string             console.log(s); // Prints the variables to console window, which are in the JSON format             window.alert(s);              //Passing the data to Python (into &quot;/educateForm&quot; page) ⏬             $.ajax({                 url:&quot;/educateForm&quot;,                 type:&quot;POST&quot;,                 contentType: &quot;application/json&quot;,                 data: JSON.stringify(s)});              //Display 2nd page without sharing data with Python⏬             //var display = window.open(&quot;/educateForm2&quot;, &quot;_self&quot;, &quot;pagewin&quot;);             //window.location.href = &quot;/educateForm2&quot;;         }     }  }  function setUpPage(){     formValidation(); }  window.addEventListener(&quot;load&quot;, setUpPage, false); </code></pre> <p><em><strong>Outside templates folder &gt;&gt;</strong></em></p> <p><strong>app.py</strong></p> <pre><code>import json import os  from flask import Flask, flash, redirect, render_template, request, session from flask_session import Session from tempfile import mkdtemp from werkzeug.security import check_password_hash, generate_password_hash  from flask import jsonify  # NEW from flask import url_for   # Configure application app = Flask(__name__)  # Ensure templates are auto-reloaded app.config[&quot;TEMPLATES_AUTO_RELOAD&quot;] = True  # Configure session to use filesystem (instead of signed cookies) app.config[&quot;SESSION_PERMANENT&quot;] = False app.config[&quot;SESSION_TYPE&quot;] = &quot;filesystem&quot; Session(app)   @app.after_request def after_request(response):     &quot;&quot;&quot;Ensure responses aren't cached&quot;&quot;&quot;     response.headers[&quot;Cache-Control&quot;] = &quot;no-cache, no-store, must-revalidate&quot;     response.headers[&quot;Expires&quot;] = 0     response.headers[&quot;Pragma&quot;] = &quot;no-cache&quot;     return response    @app.route(&quot;/educateForm&quot;, methods=[&quot;GET&quot;, &quot;POST&quot;]) def educateForm():     &quot;&quot;&quot;Show Educate Form(part 1)&quot;&quot;&quot;      if request.method == &quot;POST&quot;:         output = request.get_json()         print(output) # This is the output that was stored in the JSON within the browser         print(type(output))         result = json.loads(output) #this converts the json output to a python dictionary         print(result) # Printing the new dictionary         print(type(result))#this shows the json converted as a python dictionary          #PROBLEM: Neither of both options worked ⏬         #return redirect(url_for('educateForm2'))         return redirect(&quot;/educateForm2&quot;)      else:  # GET         # Redirect user to educateForm.html         return render_template(&quot;educateForm.html&quot;)  @app.route(&quot;/educateForm2&quot;, methods=[&quot;GET&quot;]) def educateForm2():     &quot;&quot;&quot;Show Educate Form(part 2)&quot;&quot;&quot;     if request.method == &quot;GET&quot;:          # Redirect user to educateForm2.html         return render_template(&quot;educateForm2.html&quot;)  @app.route(&quot;/educate&quot;) def educate():     &quot;&quot;&quot;Show educate.js&quot;&quot;&quot;     if request.method == &quot;GET&quot;:          # Redirect user to educate.js         return render_template(&quot;educate.js&quot;)   if __name__ == &quot;__main__&quot;:     app.run() </code></pre>"	2022-07-29 23:58:32.933 UTC	73172135	"<p>What happens here is that you are making a post request, so the return from the server will not be a redirect in the browser but a response to your javascript request. In that case, you can handle the response in javascript by sending some sort of status_code through the server. Example:</p> <pre><code>@app.route(&quot;/educateForm&quot;, methods=[&quot;GET&quot;, &quot;POST&quot;]) def educateForm():     &quot;&quot;&quot;Show Educate Form(part 1)&quot;&quot;&quot;      if request.method == &quot;POST&quot;:         output = request.get_json()          # validate here the post         ...          # is valid ?         return Response(status=200)                  #is not valid         return Response(status=422)  </code></pre> <p>And in javascript get the status code of the response and redirect the user to the page you want</p> <pre><code>        if (confirm(confirmation) == true) {             const dict_values = {fname, lname, email} //Pass the javascript variables to a dictionary.             const s = JSON.stringify(dict_values); // Stringify converts a JavaScript object or value to a JSON string              //Passing the data to Python (into &quot;/educateForm&quot; page) ⏬             const response = $.ajax({                 url:&quot;/educateForm&quot;,                 type:&quot;POST&quot;,                 contentType: &quot;application/json&quot;,                 data: JSON.stringify(s)});              //Display 2nd page without sharing data with Python⏬             //var display = window.open(&quot;/educateForm2&quot;, &quot;_self&quot;, &quot;pagewin&quot;);             if(response.status === 200) window.location.href = &quot;/educateForm2&quot;;             else alert('Form not valid')         } </code></pre>"			2022-07-30 00:45:23.493 UTC
73171968	javascript|python|html|flask	"return redirect() not displaying the new page in the browser, after sending data from JavaScript file to Python (Flask)"	"<p>I'm trying to make a form where JavaScript makes the authentication of it. After JavaScript says that the user followed the rules correctly, the JavaScript file collects the data typed by the user, so the data is sent to Python (with the help of ajax). From the Python file, I want that it recognizes the data and finally redirect to a new page. Now, I am having an issue because after Python recognizes the previously shared data, <code>return redirect()</code> is not working. It's strange, even though I tried with return <code>redirect(url_for())</code>, I got the same result. <strong>The browser does not update the new page.</strong></p> <p><em><strong>Inside templates folder &gt;&gt;</strong></em></p> <p><strong>educateForm.html</strong></p> <pre><code>&lt;!DOCTYPE html&gt;  &lt;html lang=&quot;en&quot;&gt;      &lt;head&gt;         &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1&quot;&gt;          &lt;link rel=&quot;stylesheet&quot; href=&quot;https://use.fontawesome.com/releases/v5.5.0/css/all.css&quot; integrity=&quot;sha384-B4dIYHKNBt8Bc12p+WXckhzcICo0wtJAoU8YZTY5qE0Id1GSseTk6S+L3BlXeVIU&quot; crossorigin=&quot;anonymous&quot;&gt;          &lt;link href=&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css&quot; rel=&quot;stylesheet&quot; integrity=&quot;sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC&quot; crossorigin=&quot;anonymous&quot;&gt;          &lt;!--Icon link--&gt;         &lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.jsdelivr.net/npm/bootstrap-icons@1.5.0/font/bootstrap-icons.css&quot;&gt;          &lt;title&gt;Educate Form&lt;/title&gt;     &lt;/head&gt;      &lt;body&gt;           &lt;div class=&quot;container-fluid padding&quot; id=&quot;fullForm1&quot;&gt;             &lt;div class=&quot;row padding&quot;&gt;                 &lt;div class=&quot;col-md-12 col-lg-12&quot;&gt;                 &lt;div class=&quot;centerForm&quot; style=&quot;text-align:left;&quot;&gt;                     &lt;h2&gt;Contact information: &lt;/h2&gt;                  &lt;!--Form--&gt;                     &lt;form name='registration' action=&quot;/educateForm&quot; method=&quot;post&quot;&gt;&lt;!--method=&quot;post&quot; onsubmit=&quot;return formValidation()&quot;--&gt;                         &lt;!--onsubmit=&quot;return false&quot;--&gt;                         &lt;div class=&quot;row&quot;&gt;                             &lt;div class=&quot;col-md-5&quot;&gt;                                 &lt;label for=&quot;FName&quot; class=&quot;form-label&quot;&gt;First name&lt;/label&gt;                                 &lt;input type=&quot;text&quot; name=&quot;FName&quot; placeholder=&quot;Mark&quot; id=&quot;FName&quot; class=&quot;form-control&quot; required=&quot;required&quot; autocomplete=&quot;off&quot;/&gt;                             &lt;/div&gt;                             &lt;div class=&quot;col-md-5&quot;&gt;                                 &lt;label for=&quot;LName&quot; class=&quot;form-label&quot;&gt;Last name&lt;/label&gt;                                 &lt;input type=&quot;text&quot; name=&quot;LName&quot; placeholder=&quot;Smith&quot; id=&quot;LName&quot; class=&quot;form-control&quot; required=&quot;required&quot; autocomplete=&quot;off&quot;/&gt;                             &lt;/div&gt;                          &lt;/div&gt;                          &lt;div class=&quot;row&quot;&gt;                             &lt;div class=&quot;col-md-5&quot;&gt;                                 &lt;label for=&quot;email&quot; class=&quot;form-label&quot;&gt;Email address&lt;/label&gt;                                 &lt;input type=&quot;email&quot; name=&quot;email&quot; id=&quot;email&quot; placeholder=&quot;mark@smith.com&quot; class=&quot;form-control&quot; aria-describedby=&quot;emailHelp&quot; required=&quot;required&quot; autocomplete=&quot;off&quot;&gt;                             &lt;/div&gt;                         &lt;/div&gt;                          &lt;!--DISPLAY NONE - STYLE--&gt;                         &lt;div class=&quot;row&quot; style=&quot;display: none;&quot;&gt;                             &lt;div class=&quot;col-md-10&quot;&gt;                                 &lt;label for=&quot;skillsLabel&quot; class=&quot;form-label&quot;&gt;What are your skills?&lt;/label&gt;                                 &lt;textarea class=&quot;form-control&quot; name=&quot;skillsText&quot; id=&quot;skillsText&quot; style=&quot;height: 100px&quot; required=&quot;required&quot; autocomplete=&quot;off&quot;&gt;&lt;/textarea&gt;                             &lt;/div&gt;                         &lt;/div&gt;                              &lt;div id=&quot;buttonContainer&quot;&gt;                                 &lt;input id=&quot;orderButton&quot; type=&quot;submit&quot; name=&quot;submit&quot; class=&quot;btn btn-primary&quot; value=&quot;NEXT&quot; onClick=&quot;return formValidation();&quot; /&gt;                                 &lt;input id=&quot;resetButton&quot; type=&quot;reset&quot; name=&quot;reset&quot; class=&quot;btn btn-outline-secondary&quot; value=&quot;Clear Form&quot; onClick=&quot;return confirmreset()&quot; /&gt;                             &lt;/div&gt;                          &lt;/form&gt;             &lt;/div&gt;             &lt;/div&gt;             &lt;/div&gt;         &lt;/div&gt;           &lt;!--Pagination--&gt;         &lt;ul class=&quot;pagination justify-content-center&quot; id=&quot;pagination&quot;&gt;             &lt;li class=&quot;page-item disabled&quot;&gt;               &lt;a class=&quot;page-link&quot;&gt;Previous&lt;/a&gt;             &lt;/li&gt;             &lt;li class=&quot;page-item active&quot;&gt;&lt;a class=&quot;page-link&quot; href=&quot;/educateForm&quot;&gt;1&lt;/a&gt;&lt;/li&gt;             &lt;li class=&quot;page-item&quot;&gt;&lt;a class=&quot;page-link&quot; href=&quot;/educateForm2&quot;&gt;2&lt;/a&gt;&lt;/li&gt;             &lt;li class=&quot;page-item&quot;&gt;               &lt;a class=&quot;page-link&quot; href=&quot;/educateForm2&quot;&gt;Next&lt;/a&gt;             &lt;/li&gt;         &lt;/ul&gt;           &lt;!--&lt;script type=&quot;text/javascript&quot; src=&quot;http://ajax.googleapis.com/ajax/libs/jquery/1.5/jquery.min.js&quot;&gt;&lt;/script&gt;--&gt;         &lt;!--&lt;script src=&quot;/educate&quot;&gt;&lt;/script&gt;--&gt;          &lt;script src=&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js&quot; integrity=&quot;sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM&quot; crossorigin=&quot;anonymous&quot;&gt;&lt;/script&gt;         &lt;!--Doesn't recognizes AJAX ⏬--&gt;         &lt;!--&lt;script src=&quot;https://code.jquery.com/jquery-3.2.1.slim.min.js&quot; integrity=&quot;sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN&quot; crossorigin=&quot;anonymous&quot;&gt;&lt;/script&gt;--&gt;          &lt;script src=&quot;https://code.jquery.com/jquery-3.6.0.min.js&quot; integrity=&quot;sha256-/xUj+3OJU5yExlq6GSYGSHk7tPXikynS7ogEvDej/m4=&quot; crossorigin=&quot;anonymous&quot;&gt;&lt;/script&gt;         &lt;script src=&quot;https://cdn.jsdelivr.net/npm/popper.js@1.12.9/dist/umd/popper.min.js&quot; integrity=&quot;sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q&quot; crossorigin=&quot;anonymous&quot;&gt;&lt;/script&gt;          &lt;script src=&quot;/educate&quot;&gt;&lt;/script&gt;     &lt;/body&gt; &lt;/html&gt; </code></pre> <p><strong>educateForm2.html</strong></p> <pre><code>&lt;!DOCTYPE html&gt;  &lt;html lang=&quot;en&quot;&gt;     &lt;head&gt;         &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1&quot;&gt;          &lt;link rel=&quot;stylesheet&quot; href=&quot;https://use.fontawesome.com/releases/v5.5.0/css/all.css&quot; integrity=&quot;sha384-B4dIYHKNBt8Bc12p+WXckhzcICo0wtJAoU8YZTY5qE0Id1GSseTk6S+L3BlXeVIU&quot; crossorigin=&quot;anonymous&quot;&gt;          &lt;link href=&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css&quot; rel=&quot;stylesheet&quot; integrity=&quot;sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC&quot; crossorigin=&quot;anonymous&quot;&gt;          &lt;!--Icon link--&gt;         &lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.jsdelivr.net/npm/bootstrap-icons@1.5.0/font/bootstrap-icons.css&quot;&gt;          &lt;title&gt;Educate 2&lt;/title&gt;      &lt;/head&gt;     &lt;body&gt;           &lt;div class=&quot;container-fluid padding&quot;&gt;             &lt;div class=&quot;row welcome text-center&quot;&gt;                 &lt;div id=&quot;properties&quot; class=&quot;col-12&quot;&gt;                     &lt;h1 class=&quot;display-4&quot;&gt;Page 2&lt;/h1&gt;                 &lt;/div&gt;             &lt;/div&gt;         &lt;/div&gt;           &lt;!--Pagination--&gt;         &lt;ul class=&quot;pagination justify-content-center&quot; id=&quot;pagination&quot;&gt;             &lt;li class=&quot;page-item&quot;&gt;             &lt;a class=&quot;page-link&quot; href=&quot;educateForm&quot;&gt;Previous&lt;/a&gt;             &lt;/li&gt;             &lt;li class=&quot;page-item&quot;&gt;&lt;a class=&quot;page-link&quot; href=&quot;educateForm&quot;&gt;1&lt;/a&gt;&lt;/li&gt;             &lt;li class=&quot;page-item active&quot;&gt;&lt;a class=&quot;page-link&quot; href=&quot;educateForm2&quot;&gt;2&lt;/a&gt;&lt;/li&gt;             &lt;li class=&quot;page-item disabled&quot;&gt;             &lt;a class=&quot;page-link&quot;&gt;Next&lt;/a&gt;             &lt;/li&gt;         &lt;/ul&gt;           &lt;script src=&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js&quot; integrity=&quot;sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM&quot; crossorigin=&quot;anonymous&quot;&gt;&lt;/script&gt;         &lt;!--Doesn't recognizes AJAX ⏬--&gt;         &lt;!--&lt;script src=&quot;https://code.jquery.com/jquery-3.2.1.slim.min.js&quot; integrity=&quot;sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN&quot; crossorigin=&quot;anonymous&quot;&gt;&lt;/script&gt;--&gt;          &lt;script src=&quot;https://code.jquery.com/jquery-3.6.0.min.js&quot; integrity=&quot;sha256-/xUj+3OJU5yExlq6GSYGSHk7tPXikynS7ogEvDej/m4=&quot; crossorigin=&quot;anonymous&quot;&gt;&lt;/script&gt;         &lt;script src=&quot;https://cdn.jsdelivr.net/npm/popper.js@1.12.9/dist/umd/popper.min.js&quot; integrity=&quot;sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q&quot; crossorigin=&quot;anonymous&quot;&gt;&lt;/script&gt;      &lt;/body&gt; &lt;/html&gt; </code></pre> <p><strong>educate.js</strong></p> <pre><code>&quot;use strict&quot;;   function formValidation() {      var emailRegex = /^[A-Za-z0-9._]*\@[A-Za-z]*\.[A-Za-z]{2,5}$/; // Expression for validating email      var fname = document.registration.FName.value;     var lname = document.registration.LName.value;     var email = document.registration.email.value;       if (fname == &quot;&quot;) {         alert('Enter the first name!');         document.registration.FName.focus();         return false;     }      if (lname == &quot;&quot;) {         document.registration.LName.focus();         alert('Enter the last name!');         return false;     }      if (email == &quot;&quot;) {         document.registration.email.focus();         alert('Enter the email!');         return false;     }      if (!emailRegex.test(email)) {         alert('Re-enter the valid email in this format: [abc@abc.com]');         document.registration.email.focus();         return false;     }       if (fname != '' &amp;&amp; lname != '' &amp;&amp; email != '') // condition for check mandatory all fields     {         let confirmation = &quot;Once you submit this form, you can't go back \nAre you sure you want to leave this page?&quot;;         if (confirm(confirmation) == true) {             const dict_values = {fname, lname, email} //Pass the javascript variables to a dictionary.             const s = JSON.stringify(dict_values); // Stringify converts a JavaScript object or value to a JSON string             console.log(s); // Prints the variables to console window, which are in the JSON format             window.alert(s);              //Passing the data to Python (into &quot;/educateForm&quot; page) ⏬             $.ajax({                 url:&quot;/educateForm&quot;,                 type:&quot;POST&quot;,                 contentType: &quot;application/json&quot;,                 data: JSON.stringify(s)});              //Display 2nd page without sharing data with Python⏬             //var display = window.open(&quot;/educateForm2&quot;, &quot;_self&quot;, &quot;pagewin&quot;);             //window.location.href = &quot;/educateForm2&quot;;         }     }  }  function setUpPage(){     formValidation(); }  window.addEventListener(&quot;load&quot;, setUpPage, false); </code></pre> <p><em><strong>Outside templates folder &gt;&gt;</strong></em></p> <p><strong>app.py</strong></p> <pre><code>import json import os  from flask import Flask, flash, redirect, render_template, request, session from flask_session import Session from tempfile import mkdtemp from werkzeug.security import check_password_hash, generate_password_hash  from flask import jsonify  # NEW from flask import url_for   # Configure application app = Flask(__name__)  # Ensure templates are auto-reloaded app.config[&quot;TEMPLATES_AUTO_RELOAD&quot;] = True  # Configure session to use filesystem (instead of signed cookies) app.config[&quot;SESSION_PERMANENT&quot;] = False app.config[&quot;SESSION_TYPE&quot;] = &quot;filesystem&quot; Session(app)   @app.after_request def after_request(response):     &quot;&quot;&quot;Ensure responses aren't cached&quot;&quot;&quot;     response.headers[&quot;Cache-Control&quot;] = &quot;no-cache, no-store, must-revalidate&quot;     response.headers[&quot;Expires&quot;] = 0     response.headers[&quot;Pragma&quot;] = &quot;no-cache&quot;     return response    @app.route(&quot;/educateForm&quot;, methods=[&quot;GET&quot;, &quot;POST&quot;]) def educateForm():     &quot;&quot;&quot;Show Educate Form(part 1)&quot;&quot;&quot;      if request.method == &quot;POST&quot;:         output = request.get_json()         print(output) # This is the output that was stored in the JSON within the browser         print(type(output))         result = json.loads(output) #this converts the json output to a python dictionary         print(result) # Printing the new dictionary         print(type(result))#this shows the json converted as a python dictionary          #PROBLEM: Neither of both options worked ⏬         #return redirect(url_for('educateForm2'))         return redirect(&quot;/educateForm2&quot;)      else:  # GET         # Redirect user to educateForm.html         return render_template(&quot;educateForm.html&quot;)  @app.route(&quot;/educateForm2&quot;, methods=[&quot;GET&quot;]) def educateForm2():     &quot;&quot;&quot;Show Educate Form(part 2)&quot;&quot;&quot;     if request.method == &quot;GET&quot;:          # Redirect user to educateForm2.html         return render_template(&quot;educateForm2.html&quot;)  @app.route(&quot;/educate&quot;) def educate():     &quot;&quot;&quot;Show educate.js&quot;&quot;&quot;     if request.method == &quot;GET&quot;:          # Redirect user to educate.js         return render_template(&quot;educate.js&quot;)   if __name__ == &quot;__main__&quot;:     app.run() </code></pre>"	2022-07-29 23:58:32.933 UTC	73180151	"<p>Finally, I got the second page. For those folks who maybe are going through a similar issue. I want to share my code:</p> <p><strong>educate.js</strong></p> <pre><code>    if (fname != '' &amp;&amp; lname != '' &amp;&amp; email != '') // condition for check mandatory all fields     {         let confirmation = &quot;Once you submit this form, you can't go back \nAre you sure you want to leave this page?&quot;;         if (confirm(confirmation) == true) {             const dict_values = {fname, lname, email} //Pass the javascript variables to a dictionary.             const s = JSON.stringify(dict_values); // Stringify converts a JavaScript object or value to a JSON string             console.log(s); // Prints the variables to console window, which are in the JSON format             window.alert(s);              //Passing the data to Python (into &quot;/educateForm&quot; page) ⏬             $.ajax({                 url:&quot;/educateForm&quot;,                 type:&quot;POST&quot;,                 contentType: &quot;application/json&quot;,                 data: JSON.stringify(s)});              //Get the URL             var urlPath = window.location.origin+window.location.pathname;             console.log(urlPath);              //Using response status              fetch(urlPath)                 .then(response =&gt; {                     console.log('response.status: ', response.status); // ️ 200 (from &quot;GET&quot;)                     console.log(response);                     if(response.status == 200) {                         window.location.href = &quot;/educateForm2&quot;;                     }                 })                 .catch(err =&gt; {                     console.log(err);                     alert('Form not valid');                 });          }     } </code></pre> <p><strong>app.py</strong></p> <pre><code>@app.route(&quot;/educateForm&quot;, methods=[&quot;GET&quot;, &quot;POST&quot;]) def educateForm():     &quot;&quot;&quot;Show Educate Form(part 1)&quot;&quot;&quot;      if request.method == &quot;POST&quot;:         output = request.get_json()         result = json.loads(output) #this converts the json output to a python dictionary           #PROBLEM SOLVED: ⏬         if len(result) == 0:             print('This dictionary is empty!')             return jsonify({&quot;result&quot; : &quot;failure&quot;, &quot;error&quot; : &quot;401&quot;, &quot;message&quot; : &quot;Empty Dictionary.&quot;}), 401         else:             print('This dictionary is not empty!')             return jsonify({&quot;result&quot;: &quot;success&quot;}), 200       elif request.method == &quot;GET&quot;: # GET         # Redirect user to educateForm.html         return render_template(&quot;educateForm.html&quot;) </code></pre>"			2022-07-31 01:40:30.237 UTC
73192033	javascript|python	I have this python code that I am trying to turn into javascript but I cant seem to figure out which if statement. to use	<p>This is the python code im trying to convert into javascript.</p> <pre><code>ime = input(&quot;Enter your name: \n\n&quot;)  # correction made by AmyHubbertx for c in ime:      c = c.upper()     if (c == &quot;A&quot;):         print(&quot;..######..\n..#....#..\n..######..\n..#....#..\n..#....#..\n\n&quot;)     elif (c == &quot;B&quot;):         print(&quot;..######..\n..#....#..\n..#####...\n..#....#..\n..######..\n\n&quot;)     elif (c == &quot;C&quot;):         print(&quot;..######..\n..#.......\n..#.......\n..#.......\n..######..\n\n&quot;)     elif (c == &quot;D&quot;):         print(&quot;..#####...\n..#....#..\n..#....#..\n..#....#..\n..#####...\n\n&quot;) </code></pre> <p>I want to be able to write anything and get each letter written to the page. This current code writes 'a' even if you put the wrong letter.</p> <p>How can I input something and have it write to the page?</p> <pre><code>/*function yourName()*/     let name = prompt(&quot;Enter Your Name&quot;)      if (i === 'a' || 'A'){         document.write((&quot;..######..&lt;br&gt;..#........#..&lt;br&gt;..######..&lt;br&gt;..#........#..&lt;br&gt;..#........#..&lt;br&gt;&lt;br&gt;&quot;))     } if ( i = 'b' || 'B'){         document.write((&quot;..######..&lt;br&gt;..#........#..&lt;br&gt;..#####...&lt;br&gt;..#........#..&lt;br&gt;..######..&lt;br&gt;&lt;br&gt;&quot;))     } if ( i = 'c' || 'C'){         document.write((&quot;..######..&lt;br&gt;..#.......&lt;br&gt;..#.......&lt;br&gt;..#.......&lt;br&gt;..######..&lt;br&gt;&lt;br&gt;&quot;))     } /*}*/ </code></pre>	2022-08-01 10:00:56.073 UTC	73192110	"<p>Your <code>if</code> condition is wrong.</p> <p><code>if (i === 'a' || i === 'A') {</code> is what you need, otherwise the statement reads:</p> <blockquote> <p>if <code>i</code> is equal to 'a' OR 'A' Instead of if <code>i</code> is equal to 'a' OR <code>i</code> is equal to 'A'</p> </blockquote> <p>Because you aren't comparing the second part to anything it will return true.</p>"			2022-08-01 10:07:55.613 UTC
73192033	javascript|python	I have this python code that I am trying to turn into javascript but I cant seem to figure out which if statement. to use	<p>This is the python code im trying to convert into javascript.</p> <pre><code>ime = input(&quot;Enter your name: \n\n&quot;)  # correction made by AmyHubbertx for c in ime:      c = c.upper()     if (c == &quot;A&quot;):         print(&quot;..######..\n..#....#..\n..######..\n..#....#..\n..#....#..\n\n&quot;)     elif (c == &quot;B&quot;):         print(&quot;..######..\n..#....#..\n..#####...\n..#....#..\n..######..\n\n&quot;)     elif (c == &quot;C&quot;):         print(&quot;..######..\n..#.......\n..#.......\n..#.......\n..######..\n\n&quot;)     elif (c == &quot;D&quot;):         print(&quot;..#####...\n..#....#..\n..#....#..\n..#....#..\n..#####...\n\n&quot;) </code></pre> <p>I want to be able to write anything and get each letter written to the page. This current code writes 'a' even if you put the wrong letter.</p> <p>How can I input something and have it write to the page?</p> <pre><code>/*function yourName()*/     let name = prompt(&quot;Enter Your Name&quot;)      if (i === 'a' || 'A'){         document.write((&quot;..######..&lt;br&gt;..#........#..&lt;br&gt;..######..&lt;br&gt;..#........#..&lt;br&gt;..#........#..&lt;br&gt;&lt;br&gt;&quot;))     } if ( i = 'b' || 'B'){         document.write((&quot;..######..&lt;br&gt;..#........#..&lt;br&gt;..#####...&lt;br&gt;..#........#..&lt;br&gt;..######..&lt;br&gt;&lt;br&gt;&quot;))     } if ( i = 'c' || 'C'){         document.write((&quot;..######..&lt;br&gt;..#.......&lt;br&gt;..#.......&lt;br&gt;..#.......&lt;br&gt;..######..&lt;br&gt;&lt;br&gt;&quot;))     } /*}*/ </code></pre>	2022-08-01 10:00:56.073 UTC	73192385	"<p>Many issues. <code>=</code> is assignment and <code>==</code> or <code>===</code> is comparison just like in Python.</p> <p>Also not you should NEVER use <code>document.write</code> after the page has loaded. It will wipe the page.</p> <p>Here is a working version taking all letters you type (as long as they are A, B, or C)</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-js lang-js prettyprint-override""><code>const name = prompt(""Enter Your Name"", ""CAB"").trim().toUpperCase() let text = ""No name given"";  const chars = {   'A': ""..######..&lt;br&gt;..#....#..&lt;br&gt;..######..&lt;br&gt;..#....#..&lt;br&gt;..#....#..&lt;br&gt;"",   'B': ""..######..&lt;br&gt;..#....#..&lt;br&gt;..#####...&lt;br&gt;..#....#..&lt;br&gt;..######..&lt;br&gt;"",   'C': ""..######..&lt;br&gt;..#.......&lt;br&gt;..#.......&lt;br&gt;..#.......&lt;br&gt;..######..&lt;br&gt;"", }  if (name.length &gt; 0) {   text = name.split("""").map(c =&gt; chars[c] || ""X&lt;br/&gt;""); // return the character or X if not found   document.getElementById(""content"").innerHTML = `&lt;pre&gt;${text.join(""&lt;/pre&gt;&lt;pre&gt;"")}&lt;/pre&gt;`; }</code></pre> <pre class=""snippet-code-css lang-css prettyprint-override""><code>pre {display: inline-block; float: left }</code></pre> <pre class=""snippet-code-html lang-html prettyprint-override""><code>&lt;div id=""content""&gt;&lt;/div&gt;</code></pre> </div> </div> </p>"			2022-08-01 10:29:29.637 UTC
73209708	javascript|python	How to translate for of with array from JavaScript to Python	"<p>I am working on translating some JavaScript code that a business partner wrote to Python. I am somewhat familiar with JavaScript and very unfamiliar with Python, but have been making good progress until I ran across some code that I haven't seen before in JavaScript.</p> <pre><code>let recordTypesSet = new Set(); for (let [errorType, accountList] of errors) {   for (let i = 0; i &lt; accountList.length; i = i + 1) {     let error = accountList[i];     recordTypesSet.add(error.recordType);   } } </code></pre> <p>I am not sure what the second line is doing really. I know that for of iterates over iterable objects as per mdn, but I haven't seen it done before with an array as is shown here. I was hoping someone could clarify what that line is doing and maybe an example of how to do that the pythonic way as well.</p> <p>Have a great day!</p>"	2022-08-02 14:59:10.727 UTC	73209818	"<p>You are looking at a <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment"" rel=""nofollow noreferrer"">Destructuring assignment</a>. What is happening is that <code>errors</code> is an array of arrays, and each element is of size 2. In each for cycle iteration you take that element and instead of calling <code>element[0]</code> and <code>element[1]</code> on it, you already give it meaningful names.</p>"			2022-08-02 15:07:09.877 UTC
73220060	javascript|python-3.x|random	True random number generator in python or javascript	"<p>I am trying to implement a simple pseudo random generator used in cryptography called LFSR (linear feedback shift register).</p> <p>I have checked a few JS and Python websites for a way to generate a True Random Number but all I find is pseudo random number generator.</p> <p>Is it possible to get a TRN from these coding languages ?</p> <p>Just some pointers would be fine, I am not originally a coder so got a bit confused by this.</p>"	2022-08-03 10:21:17.427 UTC	73220159	"<p>True randomness comes from stuff like detecting radioactive decay events. So no, you cannot achieve true randomness with standard hardware.</p>"			2022-08-03 10:28:18.09 UTC
73220060	javascript|python-3.x|random	True random number generator in python or javascript	"<p>I am trying to implement a simple pseudo random generator used in cryptography called LFSR (linear feedback shift register).</p> <p>I have checked a few JS and Python websites for a way to generate a True Random Number but all I find is pseudo random number generator.</p> <p>Is it possible to get a TRN from these coding languages ?</p> <p>Just some pointers would be fine, I am not originally a coder so got a bit confused by this.</p>"	2022-08-03 10:21:17.427 UTC	73220233	"<p>On your own, achieving true randomness is very difficult, but some APIs that do this exist.</p> <p><code>random.org</code> does it, for example.</p>"			2022-08-03 10:32:37.513 UTC
73255453	javascript|python|selenium|xpath|css-selectors	How to navigate a dropdown triggered by JavaScript using Python Selenium	"<p>I am trying to navigate a dropdown button that operates via JavaScript. However, no matter what I try, the HTML list items it should have never seem to show up in selenium.</p> <p>An image of the dropdown button:</p> <p><a href=""https://i.stack.imgur.com/aiaDx.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/aiaDx.png"" alt=""enter image description here"" /></a></p> <p>Inspector page source:</p> <pre><code>&lt;div class=&quot;dropdown&quot; style=&quot;border-bottom: 1px solid #ebebeb; padding-bottom: 2px;&quot;&gt;      &lt;a class=&quot;btn btn-default btn-sm&quot; onclick=&quot;$(this).parent().toggleClass('open')&quot; title=&quot;Select an Event&quot; style=&quot;width: 220px&quot;&gt;          &lt;span id=&quot;event-selection-span-id&quot;&gt;No event selected.&lt;/span&gt;               &lt;span class=&quot;fa fa-caret-down routing-toolbar-menu&quot;&gt;&lt;/span&gt;      &lt;/a&gt;      &lt;ul class=&quot;dropdown-menu user-dropdown dropdown-menu-left&quot; id=&quot;call-events-list-id&quot;&gt;      &lt;li title=&quot;ADRC Archived Call&quot; event_definition_id=&quot;2f617fc5-c0b0-492a-92e2-561c39c239fc&quot; form_code=&quot;AACOG_ADRC_CCC_ARCH&quot; onclick=&quot;CallCenter.SetEvent(this)&quot; class=&quot;list-group-item event-group-list-item&quot;&gt;ADRC Archived Call&lt;/li&gt;      &lt;li title=&quot;ADRC Information  Call&quot; event_definition_id=&quot;0a22deba-4788-4647-bee6-47305e182eca&quot; form_code=&quot;AACOG_ADRC_CCC&quot; onclick=&quot;CallCenter.SetEvent(this)&quot; class=&quot;list-group-item event-group-list-item&quot;&gt;ADRC Information  Call&lt;/li&gt;      &lt;/ul&gt; &lt;/div&gt; </code></pre> <p>Selenium page source:</p> <pre><code>&lt;div class=&quot;dropdown open&quot; style=&quot;border-bottom: 1px solid #ebebeb; padding-bottom: 2px;&quot;&gt;      &lt;a class=&quot;btn btn-default btn-sm&quot; onclick=&quot;$(this).parent().toggleClass('open')&quot; title=&quot;Select an Event&quot; style=&quot;width: 220px&quot;&gt;            &lt;span id=&quot;event-selection-span-id&quot;&gt;No event selected.&lt;/span&gt;                  &lt;span class=&quot;fa fa-caret-down routing-toolbar-menu&quot;&gt;&lt;/span&gt;      &lt;/a&gt;      &lt;ul class=&quot;dropdown-menu user-dropdown dropdown-menu-left&quot; id=&quot;call-events-list-id&quot;&gt;&lt;/ul&gt; &lt;/div&gt; </code></pre> <p>Here is what I've tried so far, all unsuccessful:</p> <ul> <li><p>Originally just tried finding the elements and using the .click() method to click in them. (e.g. <code>driver.find_element_by_xpath('//*[@id=&quot;step-3&quot;]/div[2]/a').click()</code> then <code>driver.find_element_by_xpath('//*[@id=&quot;call-events-list-id&quot;]/li[2]').click()</code>. Selenium could not find the list element in the second line.</p> </li> <li><p>Then I tried a method that's worked for me before when the previous one didn't: finding the elements then using <code>driver.execute_script(&quot;arguments[0].click()&quot;, btn)</code> for each one. Like before, it worked for the main dropdown button but not the list item that should show up afterwords.</p> </li> <li><p>So I figured I could just execute the javascript manually with the elements' JS paths using <code>driver.execute_script(&quot;$(document.querySelector('#step-3 &gt; div.dropdown &gt; a')).parent().toggleClass('open');&quot;)</code> then <code>driver.execute_script(&quot;CallCenter.SetEvent(document.querySelector('#call-events-list-id &gt; li:nth-child(2)'));&quot;)</code>. This still didn't work and the list elements still did not show up in selenium's page source.</p> </li> </ul> <p>The strangest thing is the list elements show up in the inspector before you even click the main dropdown button. Therefore I should just be able to execute the second JS line manually with no problems, and that works fine when I do it in the browser. I have also tried just waiting for the list elements to show up when the source is loaded but they never show up no matter how long I set the delay for.</p>"	2022-08-05 21:27:55.75 UTC	73255617	"<p>First to click on the element with text as <em><strong>Select an Event</strong></em> and then from the dropdown to click on the element with title as <em><strong>ADRC Information</strong></em> you need to induce <a href=""https://stackoverflow.com/a/59130336/7429447"">WebDriverWait</a> for the <a href=""https://stackoverflow.com/a/54194511/7429447""><em>element_to_be_clickable()</em></a> and you can use either of the following <a href=""https://stackoverflow.com/a/48056120/7429447""><em>locator strategies</em></a>:</p> <ul> <li><p>Using <em>CSS_SELECTOR</em>:</p> <pre><code>WebDriverWait(driver, 20).until(EC.element_to_be_clickable((By.CSS_SELECTOR, &quot;a.btn.btn-default.btn-sm[title='Select an Event']&quot;))).click() WebDriverWait(driver, 20).until(EC.element_to_be_clickable((By.CSS_SELECTOR, &quot;a.btn.btn-default.btn-sm[title='Select an Event'] +ul#call-events-list-id li[title='ADRC Information  Call']&quot;))).click() </code></pre> </li> <li><p>Using <em>XPATH</em>:</p> <pre><code>WebDriverWait(driver, 20).until(EC.element_to_be_clickable((By.XPATH, &quot;//a[@class='btn btn-default btn-sm' and @title='Select an Event']&quot;))).click() WebDriverWait(driver, 20).until(EC.element_to_be_clickable((By.XPATH, &quot;//a[@class='btn btn-default btn-sm' and @title='Select an Event']//following::ul[@id='call-events-list-id']//li[@title='ADRC Information  Call']&quot;))).click() </code></pre> </li> <li><p><strong>Note</strong>: You have to add the following imports :</p> <pre><code>from selenium.webdriver.support.ui import WebDriverWait from selenium.webdriver.common.by import By from selenium.webdriver.support import expected_conditions as EC </code></pre> </li> </ul>"			2022-08-05 21:51:54.51 UTC
73281951	selenium|selenium-webdriver|webdriverwait|expected-condition|selenium-webdriver-python	javascript error: Right-hand side of 'instanceof' is not an object error using expected_conditions with Selenium Python	"<p>I have some  code in selenium/python, which used to work, But now I'm getting:</p> <pre><code>javascript error: Right-hand side of 'instanceof' is not an object </code></pre> <p>I don't know if it's something that was changed in the angular application, or how this error is relevant to what I'm doing. I get it after trying to locate a webelement or waiting for visibility of element, like:</p> <pre><code>wait.until(expected_conditions.visibility_of_element_located(leftNav_page.pageSmallTitle)) </code></pre> <p>&quot;pageSmallTitle&quot; is just a locator like:</p> <pre><code>pageSmallTitle = (By.CSS_SELECTOR, &quot;span[id$='componentTitle']&quot;) </code></pre> <p>Tried changing it to xpath, but didn't make a difference.</p> <p>I would highly appreciate any suggestion!</p>"	2022-08-08 17:35:14.427 UTC	73283282	"<p><a href=""https://stackoverflow.com/a/50474905/7429447""><em>visibility_of_element_located()</em></a> accepts a <em>locator</em> as an argument and the expression is as follows:</p> <pre><code>wait.until(expected_conditions.visibility_of_element_located((By.CSS_SELECTOR, &quot;span[id$='componentTitle']&quot;))) </code></pre> <p>In your usecase, if:</p> <pre><code>pageSmallTitle = (By.CSS_SELECTOR, &quot;span[id$='componentTitle']&quot;) </code></pre> <p>the effective line of code must have been:</p> <pre><code>from selenium.webdriver.support import expected_conditions  wait.until(expected_conditions.visibility_of_element_located(pageSmallTitle)) </code></pre> <p>so essentially there is an additional parameter as <em><code>leftNav_page</code></em>. Hence you see the error.</p> <p>Removing the extra parameter will solve the issue.</p>"			2022-08-08 19:47:53.547 UTC
73313370	javascript|object|javascript-objects	Are Javascript Objects similar to Python functions?	"<p>I've learned python and right now I am beginning to learn javascript. I've got a question about Javascript objects.</p> <pre><code>var superSecureTerminal = {         allUserNames: [],         _username: &quot;&quot;,         ...} </code></pre> <p>Are the allUserNames and _username arguments of the object? In python would it be similar to</p> <p><code>def superSecureTerminal(allUserNames, _username):</code></p>"	2022-08-10 22:25:07.203 UTC	73313428	"<p>JS objects are most like Python dictionaries. That JS code is equivalent to the Python</p> <pre><code>superSecureTerminal = {     &quot;allUserNames&quot;: [],     &quot;_username&quot;: &quot;&quot;,     ... } </code></pre> <p>However, JS objects also have prototypes that can be used like classes are used in Python. EcmaScript 6 added <code>class</code> declarations that create the prototypes automatically, so the code can be organized similarly to the way you write classes in Python and PHP.</p>"			2022-08-10 22:34:37.647 UTC
73367243	javascript|python|regex	Is there a way that i can translate Python regular expression to JavaScript regular expression	"<p>I have been having trouble trying to translate python regular expression to a JavaScript regular expression here is the python code <code>r/^([ab].*\1$ | ^[ab]$/</code> and this was my JavaScript translation <code>/([^ab]*.\1$) | [^ab]$/gm</code> I have to make it match 'a', 'aa', 'bababbb' and it is not supposed to match 'ab', 'baba'. Thank you so much for your help!</p> <p>For better Clarification:</p> <p>I did test my <a href=""https://i.stack.imgur.com/WUbyY.png"" rel=""nofollow noreferrer"">output</a>, and I was still getting false and false when I was supposed to get true and false</p> <p>Here is a picture of the question <a href=""https://i.stack.imgur.com/Tfur8.jpg"" rel=""nofollow noreferrer"">here</a></p> <p>Here is the solution they gave in python for this question <a href=""https://i.stack.imgur.com/ZGiOZ.jpg"" rel=""nofollow noreferrer"">here</a></p> <p>I hope that was able to clear up some confusion :) Thank you so much for all your help!</p>"	2022-08-15 23:10:23.963 UTC	73371435	"<p>This pattern <code>r/^([ab].*\1$ | ^[ab]$/</code> does not seems to be a valid Python regex notation.</p> <p>The question is to match a string made up of the characters a and b, and match strings that begin with the same letter.</p> <p>For that scenario, you can use:</p> <pre><code>^([ab])(?:[ab]*\1)?$ </code></pre> <p>The pattern matches:</p> <ul> <li><code>^</code> Start of string</li> <li><code>([ab])</code> Capture <strong>group 1</strong>, match either a or b</li> <li><code>(?:</code> Non capture group <ul> <li><code>[ab]*\1</code> Optionally match a or b followed by a backreference <code>\1</code> to match the same character as in group 1.</li> </ul> </li> <li><code>)?</code> Close the non capture group and make it optional to also just allow a single character in total</li> <li><code>$</code> End of string</li> </ul> <p><a href=""https://regex101.com/r/91ElQR/1"" rel=""nofollow noreferrer"">Regex demo</a></p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-js lang-js prettyprint-override""><code>const regex = /^([ab])(?:[ab]*\1)?$/; [   ""a"",   ""aa"",   ""bababbb"",   ""ab"",   ""baba"", ].forEach(s =&gt; console.log(`${s} --&gt; ${regex.test(s)}`))</code></pre> </div> </div> </p>"			2022-08-16 09:03:54.243 UTC
73379991	javascript|json	Can't seem to send and get data correctly between javascript front end and python backend	"<p>The idea is I'm trying to send a set or list to the backend. I'm using JavaScript on the front end and sending the data via fetch. For the backend I'm using Flask.</p> <pre><code>const walls1 = new Set()  // Submit Button document.addEventListener('DOMContentLoaded', function(){     document.querySelector('#search_button').onclick = function(){         // Send a GET request to the URL         fetch('http://127.0.0.1:5000/search',{             method:&quot;POST&quot;,             body: JSON.stringify(walls1),             headers: {                 &quot;Content-Type&quot;: &quot;application/json&quot;              }            })         // Put response into json form         .then(response =&gt; response.json())         .then(data =&gt; {             console.log(data)             console.log(walls)         })     }; }); </code></pre> <p>All I want to do is print this set in my backend for now, but can't seem do this successfully.</p> <pre><code>@app.route(&quot;/search&quot;, methods=[&quot;POST&quot;]) def search():             print(request.json) **// prints {}, but the set does have items, so this isn't right**     print(request.data) **// b'{}'**     info = {&quot;success&quot;: True}     return jsonify(info) </code></pre> <p>Update: It looks like the set I am sending from the front end to the backend is empty? But I don't understand why because console.log(walls) prints a non empty set</p>"	2022-08-16 20:30:51.193 UTC	73380286	<p>try convert set to array <code>JSON.stringify(...walls1)</code></p>			2022-08-16 20:59:53.317 UTC
73391070	python	How to format python dictionary print output like JavaScript?	"<p>I'm new to Python but come from JavaScript and I was trying to print an object/dictionary to terminal by using <code>print(vars(client))</code> but came out unformatted like <a href=""https://i.stack.imgur.com/bG96D.png"" rel=""nofollow noreferrer"">this</a>.</p> <p>I'm used to Node JS terminal outputs and was wondering how I can format the Python output like in JS.</p> <p>I printed out <a href=""https://i.stack.imgur.com/I7HlB.png"" rel=""nofollow noreferrer"">this</a> using a similar Node module in JavaScript (I'm using the vscode terminal)</p>"	2022-08-17 15:23:02.177 UTC	73395091	"<p>If you need it to be actually compatible with other JSON parsers, use the <code>json</code> module. It takes care of special cases like <code>None</code> correctly becoming <code>null</code>, enforcing doubly-quoted strings etc.</p> <pre class=""lang-py prettyprint-override""><code>import json d = {&quot;foo&quot;: None, &quot;bar&quot;: &quot;Hello world!&quot;} print(json.dumps(d, indent=4)) # { #     &quot;foo&quot;: null, #     &quot;bar&quot;: &quot;Hello world!&quot; # } </code></pre>"			2022-08-17 21:28:12.963 UTC
73391070	python	How to format python dictionary print output like JavaScript?	"<p>I'm new to Python but come from JavaScript and I was trying to print an object/dictionary to terminal by using <code>print(vars(client))</code> but came out unformatted like <a href=""https://i.stack.imgur.com/bG96D.png"" rel=""nofollow noreferrer"">this</a>.</p> <p>I'm used to Node JS terminal outputs and was wondering how I can format the Python output like in JS.</p> <p>I printed out <a href=""https://i.stack.imgur.com/I7HlB.png"" rel=""nofollow noreferrer"">this</a> using a similar Node module in JavaScript (I'm using the vscode terminal)</p>"	2022-08-17 15:23:02.177 UTC	73392246	"<p>There is a pprint library which can be used to print dictionary output in a formatted way. Here is an example:</p> <pre><code>import pprint dictionary = {&quot;foo&quot;: 1, &quot;bar&quot;: 2} pprint.pprint(dictionary) </code></pre> <p>Output:</p> <pre><code>{'bar': 2, 'foo': 1} </code></pre>"			2022-08-17 16:51:33.997 UTC
73492453	python|jquery|json|flask	How can I access a dynamically updating JSON variable from Python to JavaScript?	"<p>I am creating a live chart that dynamically updates itself. I am taking a tuple of (current time, random integer) for my chart from a dummy database, <code>sender.py</code>. Here is the code for <code>sender.py</code>-</p> <pre><code>import time import random import json from datetime import datetime   def get_coordinates():     while True:         json_data = json.dumps(             {                 'time' : datetime.now().strftime('%Y-%m-%d %H:%M:%S'),                  'value' : random.random() * 1000             })         yield &quot;data:{}\n\n&quot;.format(json_data)         time.sleep(1) </code></pre> <p>I share this data to the route, <code>/chart-data</code>, made in <code>app.py</code> -</p> <pre><code>import os  from flask import Flask, render_template, Response  from sender import get_coordinates  app = Flask(__name__)   @app.route('/chart-data', methods = ['POST']) def chart_data():     get_coordinates()     return Response(get_coordinates())   @app.route(&quot;/&quot;) def index():     return render_template('data.html') </code></pre> <p>I upload <code>json_data</code> from <code>sender.py</code> to the route <code>/chart-data</code> and want to get this in <code>data.html</code>. Here is the .html file (I am trying to retrieve this data in <code>$.ajax()</code> method ) -</p> <pre><code>... &lt;body&gt;      &lt;canvas id = 'myChart' width = &quot;900&quot; height = &quot;400&quot;&gt;&lt;/canvas&gt;     &lt;script&gt;                  var intervalID = setInterval(update_values, 1000);         var x_axis = 0;         var y_axis;                  function update_values() {             $.ajax({                  url: '/data',                  type: 'GET',                  success: function(result) {                      //want to get x-axis and y-axis from sender.py                  },                    })              x_axis = x_axis + 1;              myChart.data.labels.push(x_axis);             myChart.data.datasets.forEach((datasets) =&gt; {                 datasets.data.push(y_axis);             });              myChart.update();         };          ...     &lt;/script&gt;  &lt;/body&gt; </code></pre>"	2022-08-25 18:51:49.83 UTC	73493937	"<p>Using a generator to stream data continuously does not make sense in this context. A possible solution is to get the current data with regular AJAX requests.<br /> The following simple example shows you how to create a dynamically updating chart.</p> <p>The application consists of two traditional endpoints. The former serves the actual page while the latter provides the data. With each request, additional data is generated and delivered in JSON format.</p> <pre class=""lang-py prettyprint-override""><code>from flask import (     Flask,     jsonify,     render_template ) from datetime import datetime import random  app = Flask(__name__)  @app.route('/') def index():     return render_template('index.html')  @app.route('/data') def data():     return jsonify({         'time': datetime.now().strftime('%Y-%m-%d %H:%M:%S'),         'value': random.randint(0, 1000)     }) </code></pre> <p>Within the page, data is obtained from the server at regular intervals using the Fetch API. The data obtained is added to the chart. If there are already more than 10 data records, the oldest ones will be removed.</p> <pre class=""lang-html prettyprint-override""><code>&lt;!DOCTYPE html&gt; &lt;html&gt;   &lt;head&gt;     &lt;meta charset=&quot;utf-8&quot;&gt;     &lt;title&gt;Index&lt;/title&gt;   &lt;/head&gt;   &lt;body&gt;     &lt;div&gt;       &lt;canvas id=&quot;myChart&quot; width=&quot;900&quot; height=&quot;400&quot;&gt;&lt;/canvas&gt;     &lt;/div&gt;     &lt;script src=&quot;https://cdn.jsdelivr.net/npm/chart.js&quot;&gt;&lt;/script&gt;     &lt;script type=&quot;text/javascript&quot;&gt;       (function(url) {         const limit = 9;         const canvas = document.getElementById('myChart');         const chart = new Chart(canvas, {           type: 'line',           data: {             labels: [],             datasets: [{               label: 'MyDataset',               data: []             }]           },           options: {             scales: {               yAxis: {                 max: 1000,                 min: 0               }             }           }         });          setInterval(async () =&gt; {           const data = await fetch(url).then(resp =&gt; resp.ok &amp;&amp; resp.json());           if (data) {             const { time, value } = data;              const overflow = chart.data.labels.length - limit;             if (overflow &gt; 0) {               chart.data.labels.splice(0, overflow);               chart.data.datasets[0].data.splice(0, overflow);             }              chart.data.labels.push(time);             chart.data.datasets[0].data.push(value);             chart.update();           }         }, 1000);        })({{ url_for('data') | tojson }});     &lt;/script&gt;   &lt;/body&gt; &lt;/html&gt; </code></pre>"			2022-08-25 21:38:12.813 UTC
73492676	javascript|python|xml|web-services|soap	Convert Request from Python to javascript - no response	"<p>I'm using a web service to retrieve data from the server. Basically, the script sends a xml to get a response in xml. The following Python script works just fine.</p> <pre><code>import requests          url=&quot;https://fakelink.com/myapp/WebServices/Public/ExportData.asmx&quot;     headers = {'content-type': 'text/xml', 'SOAPAction': 'http://mywebservice.com/ExportQueryData'}      body = &quot;&quot;&quot;&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;     &lt;soap:Envelope xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;     xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot;     xmlns:soap=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot;&gt;       &lt;soap:Body&gt;         &lt;ExportQueryData xmlns=&quot;http://mywebservice.com/&quot;&gt;           &lt;company&gt;mycompany&lt;/company&gt;           &lt;user&gt;myuser&lt;/user&gt;           &lt;query&gt;Test&lt;/query&gt;           &lt;parameterList&gt;           &lt;/parameterList&gt;              &lt;/ExportQueryData&gt;       &lt;/soap:Body&gt;     &lt;/soap:Envelope&gt;&quot;&quot;&quot;          response = requests.post(url,data=body,headers=headers)     print(response.text)  </code></pre> <p>Python script returns this:</p> <pre><code>&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt; &lt;soap:Envelope xmlns:soap=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot;                xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;                xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot;&gt;     &lt;soap:Body&gt;         &lt;ExportQueryDataResponse xmlns=&quot;http://mywebservice.com/&quot;&gt;             &lt;ExportQueryDataResult&gt;                 &lt;ExportDataTable&gt;                     &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot;                                                 xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot;                                                xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;                         &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;QueryExport&quot;                                     msdata:Locale=&quot;&quot;&gt;                             &lt;xs:complexType&gt;                                 &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;                                     &lt;xs:element name=&quot;QueryExport&quot; msdata:Locale=&quot;&quot;&gt;                                         &lt;xs:complexType&gt;                                             &lt;xs:sequence&gt;                                                 &lt;xs:element name=&quot;company&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;                                                 &lt;xs:element name=&quot;defect&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;                                                 &lt;xs:element name=&quot;defectName&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;                                                 &lt;xs:element name=&quot;isGeneric&quot; type=&quot;xs:boolean&quot; minOccurs=&quot;0&quot; /&gt;                                                 &lt;xs:element name=&quot;recordState&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;                                                 &lt;xs:element name=&quot;creationUser&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;                                                 &lt;xs:element name=&quot;creationData&quot; msdata:DateTimeMode=&quot;Unspecified&quot;                                                               type=&quot;xs:dateTime&quot; minOccurs=&quot;0&quot; /&gt;                                                 &lt;xs:element name=&quot;lastUpdateUser&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;                                                 &lt;xs:element name=&quot;lastUpdateData&quot; msdata:DateTimeMode=&quot;Unspecified&quot; type=&quot;xs:dateTime&quot; minOccurs=&quot;0&quot; /&gt;                                                 &lt;xs:element name=&quot;entityLastUpdateData&quot; msdata:DateTimeMode=&quot;Unspecified&quot; type=&quot;xs:dateTime&quot; minOccurs=&quot;0&quot; /&gt;                                             &lt;/xs:sequence&gt;                                         &lt;/xs:complexType&gt;                                     &lt;/xs:element&gt;                                 &lt;/xs:choice&gt;                             &lt;/xs:complexType&gt;                         &lt;/xs:element&gt;                     &lt;/xs:schema&gt;                     &lt;diffgr:diffgram xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;                                      xmlns:diffgr=&quot;urn:schemas-microsoft-com:xml-diffgram-v1&quot;&gt;                         &lt;DocumentElement xmlns=&quot;&quot;&gt;                             &lt;QueryExport diffgr:id=&quot;QueryExport1&quot; msdata:rowOrder=&quot;0&quot;&gt;                                 &lt;company&gt;mycompany&lt;/company&gt;                                 &lt;defect&gt;CMD&lt;/defect&gt;                                 &lt;defectName&gt;CMD&lt;/defectName&gt;                                 &lt;isGeneric&gt;true&lt;/isGeneric&gt;                                 &lt;recordState&gt;OP&lt;/recordState&gt;                                 &lt;creationUser&gt;myuser&lt;/creationUser&gt;                                 &lt;creationData&gt;2022-08-17T08:34:50.123&lt;/creationData&gt;                                 &lt;lastUpdateUser&gt;myuser&lt;/lastUpdateUser&gt;                                 &lt;lastUpdateData&gt;2022-08-17T08:34:50.123&lt;/lastUpdateData&gt;                                 &lt;entityLastUpdateData&gt;2022-08-17T08:34:50.123&lt;/entityLastUpdateData&gt;                             &lt;/QueryExport&gt;                         &lt;/DocumentElement&gt;                     &lt;/diffgr:diffgram&gt;                 &lt;/ExportDataTable&gt;             &lt;/ExportQueryDataResult&gt;         &lt;/ExportQueryDataResponse&gt;     &lt;/soap:Body&gt; &lt;/soap:Envelope&gt; </code></pre> <p>I need the same result but through js. But I'm not found of this language. So far, that's what I got:</p> <pre><code>function soap() {  var xmlhttp = new XMLHttpRequest(); xmlhttp.open('POST', 'https://fakelink.com/myapp/WebServices/Public/ExportData.asmx', true); var sr = '&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;' + '&lt;soap:Envelope xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:soap=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot;&gt;' + '&lt;soap:Body&gt;' + '&lt;ExportQueryData xmlns=&quot;http://mywebservice.com/&quot;&gt;' + '&lt;company&gt;mycompany&lt;/company&gt;' + '&lt;user&gt;myuser&lt;/user&gt;' + '&lt;query&gt;Test&lt;/query&gt;' + '&lt;parameterList&gt;' + '&lt;/parameterList&gt;' + '&lt;/ExportQueryData&gt;' + '&lt;/soap:Body&gt;' + '&lt;/soap:Envelope&gt;';  xmlhttp.setRequestHeader('Content-Type', 'text/xml'); xmlhttp.send(sr); alert(xmlhttp.readyState); alert(xmlhttp.status); alert(xmlhttp.responseText); } </code></pre> <p>Alerts returns 1, 0 and &quot;&quot;, respectively.</p> <p>I'm probably missing something here. Any help?</p>"	2022-08-25 19:13:39.267 UTC	73493727	"<p>As appose to python, JavaScript APIs are asynchronous, e.g. they do not block the execution of the code until the operation is finished. Javascript APIs return the result of the operation via a callback function or a promise.</p> <p>In this case, we need to subscribe to <code>onreadystatechange</code> method of the xmlhttp request. In there we can check if the operation was finished (since this method is called for multiple <a href=""https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/readyState"" rel=""nofollow noreferrer"">readyState</a>, and then we can print the result.</p> <pre class=""lang-js prettyprint-override""><code>xmlhttp.setRequestHeader('Content-Type', 'text/xml'); xmlhttp.onreadystatechange = function() {   if (httpRequest.readyState === XMLHttpRequest.DONE) {      alert(xmlhttp.readyState);      alert(xmlhttp.status);      alert(xmlhttp.responseText);   } } xmlhttp.send(sr); </code></pre> <p>For more information about asynchronous programming in javascript, you can take a look at <a href=""https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Asynchronous"" rel=""nofollow noreferrer"">MDN</a>.</p>"			2022-08-25 21:11:05.623 UTC
73580878	javascript|python|datatable|gherkin|python-behave	Python: How do I translate testing data tables from Javascript to Python	"<p>I'm new to Python. I currently have this code in Javascript (using Cypress) but unfortunately, I had issues with the iframe using Firefox so we switched to Selenium (with Python) to run the test case. I tried to search for the equivalent of this for few hours already but no luck. What is the equivalent of this script to Python? I am writing in BDD as well. Not sure how to handle data tables in Python.</p> <p>I used <code>match case</code> for Python but I got stuck when handling data tables with <code>hashes()</code> or <code>forEach()</code> in Python. Please help. :(</p> <p>Javascript:</p> <pre><code>And (‘step title', (firstInput, dataTable)=&gt;{     switch (firstInput) {         case 'First Case':             dataTable.hashes().forEach(elem =&gt;{                 if(elem.titleOfDataTable == 'First Data'){                     &lt;someActions&gt;                 }else if(elem.titleOfDataTable == 'Second Data'){                     &lt;someActions&gt;                 }else if(elem.titleOfDataTable == 'Third Data'){                     &lt;someActions&gt;                 }else{                     throw new Error(&lt;someMessage&gt;)                 }             })             break;              default:                 &lt;defaultActions&gt;         } }) </code></pre>"	2022-09-02 10:00:37.533 UTC	73581026	"<p>You could simply use if/elif/else statements and a <code>for</code> loop as such (assuming that elem is a dictionary/JSON):</p> <pre><code>def test(first_input, data_table):     if (first_input == 'First Case'):         for elem in data_table.hashes():             if elem['titleOfDataTable]' == 'First Data':                 &lt;some actions&gt;             elif elem['titleOfDataTable'] == 'Second Data':                 &lt;some other actions&gt;             elif elem['titleOfDataTable'] == 'Third Data':                 &lt;some more actions&gt;             else:                 raise ValueError(&quot;Unknown title: &quot; + elem['titleOfDataTable'])      else:          &lt;default actions&gt;  And('step title', test)  # &lt;- modify this line according to the Python API of your test application </code></pre>"			2022-09-02 10:12:55.153 UTC
73634118	python|html|beautifulsoup|python-re	How can I get javascript function parameters from html by python?	"<pre><code>                        &lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;javascript:fnStep2('20221001','210','7','0','Y')&quot; class='day-wrap'&gt;&lt;span class='day'&gt;01&lt;/span&gt;&lt;span class='status stand-by'&gt;대기신청가능&lt;/span&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;a href=&quot;javascript:fnStep2('20221002','210','1','0','Y')&quot; class='day-wrap'&gt;&lt;span class='day'&gt;02&lt;/span&gt;&lt;span class='status stand-by'&gt;대기신청가능&lt;/span&gt;&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;div class='day-wrap '&gt;&lt;span class='day'&gt;03&lt;/span&gt;&lt;span class='status'&gt;미오픈&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td&gt;&lt;div class='day-wrap '&gt;&lt;span class='day'&gt;04&lt;/span&gt;&lt;span class='status stand-by'&gt;확정예약&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;javascript:fnStep2('20221005','110','4','0','Y')&quot; class='day-wrap'&gt;&lt;span class='day'&gt;05&lt;/span&gt;&lt;span class='status stand-by'&gt;대기신청가능&lt;/span&gt;&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;javascript:fnStep2('20221006','110','5','0','Y')&quot; class='day-wrap'&gt;&lt;span class='day'&gt;06&lt;/span&gt;&lt;span class='status stand-by'&gt;대기신청가능&lt;/span&gt;&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;div class='day-wrap '&gt;&lt;span class='day'&gt;07&lt;/span&gt;&lt;span class='status'&gt;미오픈&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;javascript:fnStep2('20221008','210','7','0','Y')&quot; class='day-wrap'&gt;&lt;span class='day'&gt;08&lt;/span&gt;&lt;span class='status stand-by'&gt;대기신청가능&lt;/span&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;a href=&quot;javascript:fnStep2('20221009','210','1','50','Y')&quot; class='day-wrap'&gt;&lt;span class='day'&gt;09&lt;/span&gt;&lt;span class='status stand-by'&gt;대기신청가능&lt;/span&gt;&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;div class='day-wrap '&gt;&lt;span class='day'&gt;10&lt;/span&gt;&lt;span class='status'&gt;미오픈&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td&gt;&lt;div class='day-wrap '&gt;&lt;span class='day'&gt;11&lt;/span&gt;&lt;span class='status'&gt;미오픈&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td&gt;&lt;div class='day-wrap '&gt;&lt;span class='day'&gt;12&lt;/span&gt;&lt;span class='status'&gt;미오픈&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td&gt;&lt;div class='day-wrap '&gt;&lt;span class='day'&gt;13&lt;/span&gt;&lt;span class='status'&gt;미오픈&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td&gt;&lt;div class='day-wrap '&gt;&lt;span class='day'&gt;14&lt;/span&gt;&lt;span class='status'&gt;미오픈&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;javascript:fnStep2('20221015','210','7','0','Y')&quot; class='day-wrap'&gt;&lt;span class='day'&gt;15&lt;/span&gt;&lt;span class='status stand-by'&gt;대기신청가능&lt;/span&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;a href=&quot;javascript:fnStep2('20221016','210','1','0','Y')&quot; class='day-wrap'&gt;&lt;span class='day'&gt;16&lt;/span&gt;&lt;span class='status stand-by'&gt;대기신청가능&lt;/span&gt;&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;div class='day-wrap '&gt;&lt;span class='day'&gt;17&lt;/span&gt;&lt;span class='status'&gt;미오픈&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td&gt;&lt;div class='day-wrap '&gt;&lt;span class='day'&gt;18&lt;/span&gt;&lt;span class='status'&gt;미오픈&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td&gt;&lt;div class='day-wrap '&gt;&lt;span class='day'&gt;19&lt;/span&gt;&lt;span class='status'&gt;미오픈&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td&gt;&lt;div class='day-wrap '&gt;&lt;span class='day'&gt;20&lt;/span&gt;&lt;span class='status'&gt;미오픈&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td&gt;&lt;div class='day-wrap '&gt;&lt;span class='day'&gt;21&lt;/span&gt;&lt;span class='status'&gt;미오픈&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;javascript:fnStep2('20221022','210','7','0','Y')&quot; class='day-wrap'&gt;&lt;span class='day'&gt;22&lt;/span&gt;&lt;span class='status stand-by'&gt;대기신청가능&lt;/span&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;a href=&quot;javascript:fnStep2('20221023','210','1','0','Y')&quot; class='day-wrap'&gt;&lt;span class='day'&gt;23&lt;/span&gt;&lt;span class='status stand-by'&gt;대기신청가능&lt;/span&gt;&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;div class='day-wrap '&gt;&lt;span class='day'&gt;24&lt;/span&gt;&lt;span class='status'&gt;미오픈&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td&gt;&lt;div class='day-wrap '&gt;&lt;span class='day'&gt;25&lt;/span&gt;&lt;span class='status'&gt;미오픈&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td&gt;&lt;div class='day-wrap '&gt;&lt;span class='day'&gt;26&lt;/span&gt;&lt;span class='status'&gt;미오픈&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td&gt;&lt;div class='day-wrap '&gt;&lt;span class='day'&gt;27&lt;/span&gt;&lt;span class='status'&gt;미오픈&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td&gt;&lt;div class='day-wrap '&gt;&lt;span class='day'&gt;28&lt;/span&gt;&lt;span class='status'&gt;미오픈&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;javascript:fnStep2('20221029','210','7','44','Y')&quot; class='day-wrap'&gt;&lt;span class='day'&gt;29&lt;/span&gt;&lt;span class='status stand-by'&gt;대기신청가능&lt;/span&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;a href=&quot;javascript:fnStep2('20221030','210','1','44','Y')&quot; class='day-wrap'&gt;&lt;span class='day'&gt;30&lt;/span&gt;&lt;span class='status stand-by'&gt;대기신청가능&lt;/span&gt;&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;div class='day-wrap '&gt;&lt;span class='day'&gt;31&lt;/span&gt;&lt;span class='status'&gt;미오픈&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt; </code></pre> <p>I am trying to sort upper html data just like:</p> <pre><code>{'01': ['20221001','210','7','0','Y'], '02': ['20221002','210','1','0','Y'], '03': [], ...} </code></pre> <p>I need to get javascript function html to list form.</p> <p>how can I ?</p>"	2022-09-07 10:42:21.507 UTC	73634287	"<p>Try:</p> <pre class=""lang-py prettyprint-override""><code>from ast import literal_eval from bs4 import BeautifulSoup  html_doc = &quot;&quot;&quot;                        &lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;javascript:fnStep2('20221001','210','7','0','Y')&quot; class='day-wrap'&gt;&lt;span class='day'&gt;01&lt;/span&gt;&lt;span class='status stand-by'&gt;대기신청가능&lt;/span&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;a href=&quot;javascript:fnStep2('20221002','210','1','0','Y')&quot; class='day-wrap'&gt;&lt;span class='day'&gt;02&lt;/span&gt;&lt;span class='status stand-by'&gt;대기신청가능&lt;/span&gt;&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;div class='day-wrap '&gt;&lt;span class='day'&gt;03&lt;/span&gt;&lt;span class='status'&gt;미오픈&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td&gt;&lt;div class='day-wrap '&gt;&lt;span class='day'&gt;04&lt;/span&gt;&lt;span class='status stand-by'&gt;확정예약&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;javascript:fnStep2('20221005','110','4','0','Y')&quot; class='day-wrap'&gt;&lt;span class='day'&gt;05&lt;/span&gt;&lt;span class='status stand-by'&gt;대기신청가능&lt;/span&gt;&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;javascript:fnStep2('20221006','110','5','0','Y')&quot; class='day-wrap'&gt;&lt;span class='day'&gt;06&lt;/span&gt;&lt;span class='status stand-by'&gt;대기신청가능&lt;/span&gt;&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;div class='day-wrap '&gt;&lt;span class='day'&gt;07&lt;/span&gt;&lt;span class='status'&gt;미오픈&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;javascript:fnStep2('20221008','210','7','0','Y')&quot; class='day-wrap'&gt;&lt;span class='day'&gt;08&lt;/span&gt;&lt;span class='status stand-by'&gt;대기신청가능&lt;/span&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;a href=&quot;javascript:fnStep2('20221009','210','1','50','Y')&quot; class='day-wrap'&gt;&lt;span class='day'&gt;09&lt;/span&gt;&lt;span class='status stand-by'&gt;대기신청가능&lt;/span&gt;&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;div class='day-wrap '&gt;&lt;span class='day'&gt;10&lt;/span&gt;&lt;span class='status'&gt;미오픈&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td&gt;&lt;div class='day-wrap '&gt;&lt;span class='day'&gt;11&lt;/span&gt;&lt;span class='status'&gt;미오픈&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td&gt;&lt;div class='day-wrap '&gt;&lt;span class='day'&gt;12&lt;/span&gt;&lt;span class='status'&gt;미오픈&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td&gt;&lt;div class='day-wrap '&gt;&lt;span class='day'&gt;13&lt;/span&gt;&lt;span class='status'&gt;미오픈&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td&gt;&lt;div class='day-wrap '&gt;&lt;span class='day'&gt;14&lt;/span&gt;&lt;span class='status'&gt;미오픈&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;javascript:fnStep2('20221015','210','7','0','Y')&quot; class='day-wrap'&gt;&lt;span class='day'&gt;15&lt;/span&gt;&lt;span class='status stand-by'&gt;대기신청가능&lt;/span&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;a href=&quot;javascript:fnStep2('20221016','210','1','0','Y')&quot; class='day-wrap'&gt;&lt;span class='day'&gt;16&lt;/span&gt;&lt;span class='status stand-by'&gt;대기신청가능&lt;/span&gt;&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;div class='day-wrap '&gt;&lt;span class='day'&gt;17&lt;/span&gt;&lt;span class='status'&gt;미오픈&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td&gt;&lt;div class='day-wrap '&gt;&lt;span class='day'&gt;18&lt;/span&gt;&lt;span class='status'&gt;미오픈&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td&gt;&lt;div class='day-wrap '&gt;&lt;span class='day'&gt;19&lt;/span&gt;&lt;span class='status'&gt;미오픈&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td&gt;&lt;div class='day-wrap '&gt;&lt;span class='day'&gt;20&lt;/span&gt;&lt;span class='status'&gt;미오픈&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td&gt;&lt;div class='day-wrap '&gt;&lt;span class='day'&gt;21&lt;/span&gt;&lt;span class='status'&gt;미오픈&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;javascript:fnStep2('20221022','210','7','0','Y')&quot; class='day-wrap'&gt;&lt;span class='day'&gt;22&lt;/span&gt;&lt;span class='status stand-by'&gt;대기신청가능&lt;/span&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;a href=&quot;javascript:fnStep2('20221023','210','1','0','Y')&quot; class='day-wrap'&gt;&lt;span class='day'&gt;23&lt;/span&gt;&lt;span class='status stand-by'&gt;대기신청가능&lt;/span&gt;&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;div class='day-wrap '&gt;&lt;span class='day'&gt;24&lt;/span&gt;&lt;span class='status'&gt;미오픈&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td&gt;&lt;div class='day-wrap '&gt;&lt;span class='day'&gt;25&lt;/span&gt;&lt;span class='status'&gt;미오픈&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td&gt;&lt;div class='day-wrap '&gt;&lt;span class='day'&gt;26&lt;/span&gt;&lt;span class='status'&gt;미오픈&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td&gt;&lt;div class='day-wrap '&gt;&lt;span class='day'&gt;27&lt;/span&gt;&lt;span class='status'&gt;미오픈&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td&gt;&lt;div class='day-wrap '&gt;&lt;span class='day'&gt;28&lt;/span&gt;&lt;span class='status'&gt;미오픈&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;javascript:fnStep2('20221029','210','7','44','Y')&quot; class='day-wrap'&gt;&lt;span class='day'&gt;29&lt;/span&gt;&lt;span class='status stand-by'&gt;대기신청가능&lt;/span&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;a href=&quot;javascript:fnStep2('20221030','210','1','44','Y')&quot; class='day-wrap'&gt;&lt;span class='day'&gt;30&lt;/span&gt;&lt;span class='status stand-by'&gt;대기신청가능&lt;/span&gt;&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;div class='day-wrap '&gt;&lt;span class='day'&gt;31&lt;/span&gt;&lt;span class='status'&gt;미오픈&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&quot;&quot;&quot;  soup = BeautifulSoup(html_doc, &quot;html.parser&quot;)  out = {} for i, a in enumerate(soup.select(&quot;a[href^='javascript:fnStep2']&quot;), 1):     t = list(literal_eval(a[&quot;href&quot;].replace(&quot;javascript:fnStep2&quot;, &quot;&quot;)))     out[&quot;{:&gt;02}&quot;.format(i)] = t  print(out) </code></pre> <p>Prints:</p> <pre><code>{     &quot;01&quot;: [&quot;20221001&quot;, &quot;210&quot;, &quot;7&quot;, &quot;0&quot;, &quot;Y&quot;],     &quot;02&quot;: [&quot;20221002&quot;, &quot;210&quot;, &quot;1&quot;, &quot;0&quot;, &quot;Y&quot;],     &quot;03&quot;: [&quot;20221005&quot;, &quot;110&quot;, &quot;4&quot;, &quot;0&quot;, &quot;Y&quot;],     &quot;04&quot;: [&quot;20221006&quot;, &quot;110&quot;, &quot;5&quot;, &quot;0&quot;, &quot;Y&quot;],     &quot;05&quot;: [&quot;20221008&quot;, &quot;210&quot;, &quot;7&quot;, &quot;0&quot;, &quot;Y&quot;],     &quot;06&quot;: [&quot;20221009&quot;, &quot;210&quot;, &quot;1&quot;, &quot;50&quot;, &quot;Y&quot;],     &quot;07&quot;: [&quot;20221015&quot;, &quot;210&quot;, &quot;7&quot;, &quot;0&quot;, &quot;Y&quot;],     &quot;08&quot;: [&quot;20221016&quot;, &quot;210&quot;, &quot;1&quot;, &quot;0&quot;, &quot;Y&quot;],     &quot;09&quot;: [&quot;20221022&quot;, &quot;210&quot;, &quot;7&quot;, &quot;0&quot;, &quot;Y&quot;],     &quot;10&quot;: [&quot;20221023&quot;, &quot;210&quot;, &quot;1&quot;, &quot;0&quot;, &quot;Y&quot;],     &quot;11&quot;: [&quot;20221029&quot;, &quot;210&quot;, &quot;7&quot;, &quot;44&quot;, &quot;Y&quot;],     &quot;12&quot;: [&quot;20221030&quot;, &quot;210&quot;, &quot;1&quot;, &quot;44&quot;, &quot;Y&quot;], } </code></pre>"			2022-09-07 10:55:59.08 UTC
73634118	python|html|beautifulsoup|python-re	How can I get javascript function parameters from html by python?	"<pre><code>                        &lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;javascript:fnStep2('20221001','210','7','0','Y')&quot; class='day-wrap'&gt;&lt;span class='day'&gt;01&lt;/span&gt;&lt;span class='status stand-by'&gt;대기신청가능&lt;/span&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;a href=&quot;javascript:fnStep2('20221002','210','1','0','Y')&quot; class='day-wrap'&gt;&lt;span class='day'&gt;02&lt;/span&gt;&lt;span class='status stand-by'&gt;대기신청가능&lt;/span&gt;&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;div class='day-wrap '&gt;&lt;span class='day'&gt;03&lt;/span&gt;&lt;span class='status'&gt;미오픈&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td&gt;&lt;div class='day-wrap '&gt;&lt;span class='day'&gt;04&lt;/span&gt;&lt;span class='status stand-by'&gt;확정예약&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;javascript:fnStep2('20221005','110','4','0','Y')&quot; class='day-wrap'&gt;&lt;span class='day'&gt;05&lt;/span&gt;&lt;span class='status stand-by'&gt;대기신청가능&lt;/span&gt;&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;javascript:fnStep2('20221006','110','5','0','Y')&quot; class='day-wrap'&gt;&lt;span class='day'&gt;06&lt;/span&gt;&lt;span class='status stand-by'&gt;대기신청가능&lt;/span&gt;&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;div class='day-wrap '&gt;&lt;span class='day'&gt;07&lt;/span&gt;&lt;span class='status'&gt;미오픈&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;javascript:fnStep2('20221008','210','7','0','Y')&quot; class='day-wrap'&gt;&lt;span class='day'&gt;08&lt;/span&gt;&lt;span class='status stand-by'&gt;대기신청가능&lt;/span&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;a href=&quot;javascript:fnStep2('20221009','210','1','50','Y')&quot; class='day-wrap'&gt;&lt;span class='day'&gt;09&lt;/span&gt;&lt;span class='status stand-by'&gt;대기신청가능&lt;/span&gt;&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;div class='day-wrap '&gt;&lt;span class='day'&gt;10&lt;/span&gt;&lt;span class='status'&gt;미오픈&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td&gt;&lt;div class='day-wrap '&gt;&lt;span class='day'&gt;11&lt;/span&gt;&lt;span class='status'&gt;미오픈&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td&gt;&lt;div class='day-wrap '&gt;&lt;span class='day'&gt;12&lt;/span&gt;&lt;span class='status'&gt;미오픈&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td&gt;&lt;div class='day-wrap '&gt;&lt;span class='day'&gt;13&lt;/span&gt;&lt;span class='status'&gt;미오픈&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td&gt;&lt;div class='day-wrap '&gt;&lt;span class='day'&gt;14&lt;/span&gt;&lt;span class='status'&gt;미오픈&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;javascript:fnStep2('20221015','210','7','0','Y')&quot; class='day-wrap'&gt;&lt;span class='day'&gt;15&lt;/span&gt;&lt;span class='status stand-by'&gt;대기신청가능&lt;/span&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;a href=&quot;javascript:fnStep2('20221016','210','1','0','Y')&quot; class='day-wrap'&gt;&lt;span class='day'&gt;16&lt;/span&gt;&lt;span class='status stand-by'&gt;대기신청가능&lt;/span&gt;&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;div class='day-wrap '&gt;&lt;span class='day'&gt;17&lt;/span&gt;&lt;span class='status'&gt;미오픈&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td&gt;&lt;div class='day-wrap '&gt;&lt;span class='day'&gt;18&lt;/span&gt;&lt;span class='status'&gt;미오픈&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td&gt;&lt;div class='day-wrap '&gt;&lt;span class='day'&gt;19&lt;/span&gt;&lt;span class='status'&gt;미오픈&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td&gt;&lt;div class='day-wrap '&gt;&lt;span class='day'&gt;20&lt;/span&gt;&lt;span class='status'&gt;미오픈&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td&gt;&lt;div class='day-wrap '&gt;&lt;span class='day'&gt;21&lt;/span&gt;&lt;span class='status'&gt;미오픈&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;javascript:fnStep2('20221022','210','7','0','Y')&quot; class='day-wrap'&gt;&lt;span class='day'&gt;22&lt;/span&gt;&lt;span class='status stand-by'&gt;대기신청가능&lt;/span&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;a href=&quot;javascript:fnStep2('20221023','210','1','0','Y')&quot; class='day-wrap'&gt;&lt;span class='day'&gt;23&lt;/span&gt;&lt;span class='status stand-by'&gt;대기신청가능&lt;/span&gt;&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;div class='day-wrap '&gt;&lt;span class='day'&gt;24&lt;/span&gt;&lt;span class='status'&gt;미오픈&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td&gt;&lt;div class='day-wrap '&gt;&lt;span class='day'&gt;25&lt;/span&gt;&lt;span class='status'&gt;미오픈&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td&gt;&lt;div class='day-wrap '&gt;&lt;span class='day'&gt;26&lt;/span&gt;&lt;span class='status'&gt;미오픈&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td&gt;&lt;div class='day-wrap '&gt;&lt;span class='day'&gt;27&lt;/span&gt;&lt;span class='status'&gt;미오픈&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td&gt;&lt;div class='day-wrap '&gt;&lt;span class='day'&gt;28&lt;/span&gt;&lt;span class='status'&gt;미오픈&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;javascript:fnStep2('20221029','210','7','44','Y')&quot; class='day-wrap'&gt;&lt;span class='day'&gt;29&lt;/span&gt;&lt;span class='status stand-by'&gt;대기신청가능&lt;/span&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;a href=&quot;javascript:fnStep2('20221030','210','1','44','Y')&quot; class='day-wrap'&gt;&lt;span class='day'&gt;30&lt;/span&gt;&lt;span class='status stand-by'&gt;대기신청가능&lt;/span&gt;&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;div class='day-wrap '&gt;&lt;span class='day'&gt;31&lt;/span&gt;&lt;span class='status'&gt;미오픈&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt; </code></pre> <p>I am trying to sort upper html data just like:</p> <pre><code>{'01': ['20221001','210','7','0','Y'], '02': ['20221002','210','1','0','Y'], '03': [], ...} </code></pre> <p>I need to get javascript function html to list form.</p> <p>how can I ?</p>"	2022-09-07 10:42:21.507 UTC	73634312	<p>##You can get all the href from a tage and mapped that data to your desire form.</p> <pre><code>result_response = response.css(&quot;a::attr(href)&quot;).getAll() count = 0 response_array = [] for data in result_response:     response_array.append(data.css(&quot;a::attr(href)::text&quot;.get())) return response_array </code></pre>			2022-09-07 10:57:22.38 UTC
73634118	python|html|beautifulsoup|python-re	How can I get javascript function parameters from html by python?	"<pre><code>                        &lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;javascript:fnStep2('20221001','210','7','0','Y')&quot; class='day-wrap'&gt;&lt;span class='day'&gt;01&lt;/span&gt;&lt;span class='status stand-by'&gt;대기신청가능&lt;/span&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;a href=&quot;javascript:fnStep2('20221002','210','1','0','Y')&quot; class='day-wrap'&gt;&lt;span class='day'&gt;02&lt;/span&gt;&lt;span class='status stand-by'&gt;대기신청가능&lt;/span&gt;&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;div class='day-wrap '&gt;&lt;span class='day'&gt;03&lt;/span&gt;&lt;span class='status'&gt;미오픈&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td&gt;&lt;div class='day-wrap '&gt;&lt;span class='day'&gt;04&lt;/span&gt;&lt;span class='status stand-by'&gt;확정예약&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;javascript:fnStep2('20221005','110','4','0','Y')&quot; class='day-wrap'&gt;&lt;span class='day'&gt;05&lt;/span&gt;&lt;span class='status stand-by'&gt;대기신청가능&lt;/span&gt;&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;javascript:fnStep2('20221006','110','5','0','Y')&quot; class='day-wrap'&gt;&lt;span class='day'&gt;06&lt;/span&gt;&lt;span class='status stand-by'&gt;대기신청가능&lt;/span&gt;&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;div class='day-wrap '&gt;&lt;span class='day'&gt;07&lt;/span&gt;&lt;span class='status'&gt;미오픈&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;javascript:fnStep2('20221008','210','7','0','Y')&quot; class='day-wrap'&gt;&lt;span class='day'&gt;08&lt;/span&gt;&lt;span class='status stand-by'&gt;대기신청가능&lt;/span&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;a href=&quot;javascript:fnStep2('20221009','210','1','50','Y')&quot; class='day-wrap'&gt;&lt;span class='day'&gt;09&lt;/span&gt;&lt;span class='status stand-by'&gt;대기신청가능&lt;/span&gt;&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;div class='day-wrap '&gt;&lt;span class='day'&gt;10&lt;/span&gt;&lt;span class='status'&gt;미오픈&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td&gt;&lt;div class='day-wrap '&gt;&lt;span class='day'&gt;11&lt;/span&gt;&lt;span class='status'&gt;미오픈&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td&gt;&lt;div class='day-wrap '&gt;&lt;span class='day'&gt;12&lt;/span&gt;&lt;span class='status'&gt;미오픈&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td&gt;&lt;div class='day-wrap '&gt;&lt;span class='day'&gt;13&lt;/span&gt;&lt;span class='status'&gt;미오픈&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td&gt;&lt;div class='day-wrap '&gt;&lt;span class='day'&gt;14&lt;/span&gt;&lt;span class='status'&gt;미오픈&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;javascript:fnStep2('20221015','210','7','0','Y')&quot; class='day-wrap'&gt;&lt;span class='day'&gt;15&lt;/span&gt;&lt;span class='status stand-by'&gt;대기신청가능&lt;/span&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;a href=&quot;javascript:fnStep2('20221016','210','1','0','Y')&quot; class='day-wrap'&gt;&lt;span class='day'&gt;16&lt;/span&gt;&lt;span class='status stand-by'&gt;대기신청가능&lt;/span&gt;&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;div class='day-wrap '&gt;&lt;span class='day'&gt;17&lt;/span&gt;&lt;span class='status'&gt;미오픈&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td&gt;&lt;div class='day-wrap '&gt;&lt;span class='day'&gt;18&lt;/span&gt;&lt;span class='status'&gt;미오픈&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td&gt;&lt;div class='day-wrap '&gt;&lt;span class='day'&gt;19&lt;/span&gt;&lt;span class='status'&gt;미오픈&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td&gt;&lt;div class='day-wrap '&gt;&lt;span class='day'&gt;20&lt;/span&gt;&lt;span class='status'&gt;미오픈&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td&gt;&lt;div class='day-wrap '&gt;&lt;span class='day'&gt;21&lt;/span&gt;&lt;span class='status'&gt;미오픈&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;javascript:fnStep2('20221022','210','7','0','Y')&quot; class='day-wrap'&gt;&lt;span class='day'&gt;22&lt;/span&gt;&lt;span class='status stand-by'&gt;대기신청가능&lt;/span&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;a href=&quot;javascript:fnStep2('20221023','210','1','0','Y')&quot; class='day-wrap'&gt;&lt;span class='day'&gt;23&lt;/span&gt;&lt;span class='status stand-by'&gt;대기신청가능&lt;/span&gt;&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;div class='day-wrap '&gt;&lt;span class='day'&gt;24&lt;/span&gt;&lt;span class='status'&gt;미오픈&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td&gt;&lt;div class='day-wrap '&gt;&lt;span class='day'&gt;25&lt;/span&gt;&lt;span class='status'&gt;미오픈&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td&gt;&lt;div class='day-wrap '&gt;&lt;span class='day'&gt;26&lt;/span&gt;&lt;span class='status'&gt;미오픈&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td&gt;&lt;div class='day-wrap '&gt;&lt;span class='day'&gt;27&lt;/span&gt;&lt;span class='status'&gt;미오픈&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td&gt;&lt;div class='day-wrap '&gt;&lt;span class='day'&gt;28&lt;/span&gt;&lt;span class='status'&gt;미오픈&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;javascript:fnStep2('20221029','210','7','44','Y')&quot; class='day-wrap'&gt;&lt;span class='day'&gt;29&lt;/span&gt;&lt;span class='status stand-by'&gt;대기신청가능&lt;/span&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;a href=&quot;javascript:fnStep2('20221030','210','1','44','Y')&quot; class='day-wrap'&gt;&lt;span class='day'&gt;30&lt;/span&gt;&lt;span class='status stand-by'&gt;대기신청가능&lt;/span&gt;&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;div class='day-wrap '&gt;&lt;span class='day'&gt;31&lt;/span&gt;&lt;span class='status'&gt;미오픈&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt; </code></pre> <p>I am trying to sort upper html data just like:</p> <pre><code>{'01': ['20221001','210','7','0','Y'], '02': ['20221002','210','1','0','Y'], '03': [], ...} </code></pre> <p>I need to get javascript function html to list form.</p> <p>how can I ?</p>"	2022-09-07 10:42:21.507 UTC	73635364	"<pre class=""lang-py prettyprint-override""><code>from pprint import pp from bs4 import BeautifulSoup  html = &quot;&quot;&quot;&lt;tbody&gt;    &lt;tr&gt;       &lt;td&gt;&lt;/td&gt;       &lt;td&gt;&lt;/td&gt;       &lt;td&gt;&lt;/td&gt;       &lt;td&gt;&lt;/td&gt;       &lt;td&gt;&lt;/td&gt;       &lt;td&gt;&lt;/td&gt;       &lt;td&gt;&lt;a href=&quot;javascript:fnStep2('20221001','210','7','0','Y')&quot; class='day-wrap'&gt;&lt;span class='day'&gt;01&lt;/span&gt;&lt;span class='status stand-by'&gt;대기신청가능&lt;/span&gt;&lt;/a&gt;&lt;/td&gt;    &lt;/tr&gt;    &lt;tr&gt;       &lt;td&gt;&lt;a href=&quot;javascript:fnStep2('20221002','210','1','0','Y')&quot; class='day-wrap'&gt;&lt;span class='day'&gt;02&lt;/span&gt;&lt;span class='status stand-by'&gt;대기신청가능&lt;/span&gt;&lt;/a&gt;&lt;/td&gt;       &lt;td&gt;          &lt;div class='day-wrap '&gt;&lt;span class='day'&gt;03&lt;/span&gt;&lt;span class='status'&gt;미오픈&lt;/span&gt;&lt;/div&gt;       &lt;/td&gt;       &lt;td&gt;          &lt;div class='day-wrap '&gt;&lt;span class='day'&gt;04&lt;/span&gt;&lt;span class='status stand-by'&gt;확정예약&lt;/span&gt;&lt;/div&gt;       &lt;/td&gt;       &lt;td&gt;&lt;a href=&quot;javascript:fnStep2('20221005','110','4','0','Y')&quot; class='day-wrap'&gt;&lt;span class='day'&gt;05&lt;/span&gt;&lt;span class='status stand-by'&gt;대기신청가능&lt;/span&gt;&lt;/a&gt;&lt;/td&gt;       &lt;td&gt;&lt;a href=&quot;javascript:fnStep2('20221006','110','5','0','Y')&quot; class='day-wrap'&gt;&lt;span class='day'&gt;06&lt;/span&gt;&lt;span class='status stand-by'&gt;대기신청가능&lt;/span&gt;&lt;/a&gt;&lt;/td&gt;       &lt;td&gt;          &lt;div class='day-wrap '&gt;&lt;span class='day'&gt;07&lt;/span&gt;&lt;span class='status'&gt;미오픈&lt;/span&gt;&lt;/div&gt;       &lt;/td&gt;       &lt;td&gt;&lt;a href=&quot;javascript:fnStep2('20221008','210','7','0','Y')&quot; class='day-wrap'&gt;&lt;span class='day'&gt;08&lt;/span&gt;&lt;span class='status stand-by'&gt;대기신청가능&lt;/span&gt;&lt;/a&gt;&lt;/td&gt;    &lt;/tr&gt;    &lt;tr&gt;       &lt;td&gt;&lt;a href=&quot;javascript:fnStep2('20221009','210','1','50','Y')&quot; class='day-wrap'&gt;&lt;span class='day'&gt;09&lt;/span&gt;&lt;span class='status stand-by'&gt;대기신청가능&lt;/span&gt;&lt;/a&gt;&lt;/td&gt;       &lt;td&gt;          &lt;div class='day-wrap '&gt;&lt;span class='day'&gt;10&lt;/span&gt;&lt;span class='status'&gt;미오픈&lt;/span&gt;&lt;/div&gt;       &lt;/td&gt;       &lt;td&gt;          &lt;div class='day-wrap '&gt;&lt;span class='day'&gt;11&lt;/span&gt;&lt;span class='status'&gt;미오픈&lt;/span&gt;&lt;/div&gt;       &lt;/td&gt;       &lt;td&gt;          &lt;div class='day-wrap '&gt;&lt;span class='day'&gt;12&lt;/span&gt;&lt;span class='status'&gt;미오픈&lt;/span&gt;&lt;/div&gt;       &lt;/td&gt;       &lt;td&gt;          &lt;div class='day-wrap '&gt;&lt;span class='day'&gt;13&lt;/span&gt;&lt;span class='status'&gt;미오픈&lt;/span&gt;&lt;/div&gt;       &lt;/td&gt;       &lt;td&gt;          &lt;div class='day-wrap '&gt;&lt;span class='day'&gt;14&lt;/span&gt;&lt;span class='status'&gt;미오픈&lt;/span&gt;&lt;/div&gt;       &lt;/td&gt;       &lt;td&gt;&lt;a href=&quot;javascript:fnStep2('20221015','210','7','0','Y')&quot; class='day-wrap'&gt;&lt;span class='day'&gt;15&lt;/span&gt;&lt;span class='status stand-by'&gt;대기신청가능&lt;/span&gt;&lt;/a&gt;&lt;/td&gt;    &lt;/tr&gt;    &lt;tr&gt;       &lt;td&gt;&lt;a href=&quot;javascript:fnStep2('20221016','210','1','0','Y')&quot; class='day-wrap'&gt;&lt;span class='day'&gt;16&lt;/span&gt;&lt;span class='status stand-by'&gt;대기신청가능&lt;/span&gt;&lt;/a&gt;&lt;/td&gt;       &lt;td&gt;          &lt;div class='day-wrap '&gt;&lt;span class='day'&gt;17&lt;/span&gt;&lt;span class='status'&gt;미오픈&lt;/span&gt;&lt;/div&gt;       &lt;/td&gt;       &lt;td&gt;          &lt;div class='day-wrap '&gt;&lt;span class='day'&gt;18&lt;/span&gt;&lt;span class='status'&gt;미오픈&lt;/span&gt;&lt;/div&gt;       &lt;/td&gt;       &lt;td&gt;          &lt;div class='day-wrap '&gt;&lt;span class='day'&gt;19&lt;/span&gt;&lt;span class='status'&gt;미오픈&lt;/span&gt;&lt;/div&gt;       &lt;/td&gt;       &lt;td&gt;          &lt;div class='day-wrap '&gt;&lt;span class='day'&gt;20&lt;/span&gt;&lt;span class='status'&gt;미오픈&lt;/span&gt;&lt;/div&gt;       &lt;/td&gt;       &lt;td&gt;          &lt;div class='day-wrap '&gt;&lt;span class='day'&gt;21&lt;/span&gt;&lt;span class='status'&gt;미오픈&lt;/span&gt;&lt;/div&gt;       &lt;/td&gt;       &lt;td&gt;&lt;a href=&quot;javascript:fnStep2('20221022','210','7','0','Y')&quot; class='day-wrap'&gt;&lt;span class='day'&gt;22&lt;/span&gt;&lt;span class='status stand-by'&gt;대기신청가능&lt;/span&gt;&lt;/a&gt;&lt;/td&gt;    &lt;/tr&gt;    &lt;tr&gt;       &lt;td&gt;&lt;a href=&quot;javascript:fnStep2('20221023','210','1','0','Y')&quot; class='day-wrap'&gt;&lt;span class='day'&gt;23&lt;/span&gt;&lt;span class='status stand-by'&gt;대기신청가능&lt;/span&gt;&lt;/a&gt;&lt;/td&gt;       &lt;td&gt;          &lt;div class='day-wrap '&gt;&lt;span class='day'&gt;24&lt;/span&gt;&lt;span class='status'&gt;미오픈&lt;/span&gt;&lt;/div&gt;       &lt;/td&gt;       &lt;td&gt;          &lt;div class='day-wrap '&gt;&lt;span class='day'&gt;25&lt;/span&gt;&lt;span class='status'&gt;미오픈&lt;/span&gt;&lt;/div&gt;       &lt;/td&gt;       &lt;td&gt;          &lt;div class='day-wrap '&gt;&lt;span class='day'&gt;26&lt;/span&gt;&lt;span class='status'&gt;미오픈&lt;/span&gt;&lt;/div&gt;       &lt;/td&gt;       &lt;td&gt;          &lt;div class='day-wrap '&gt;&lt;span class='day'&gt;27&lt;/span&gt;&lt;span class='status'&gt;미오픈&lt;/span&gt;&lt;/div&gt;       &lt;/td&gt;       &lt;td&gt;          &lt;div class='day-wrap '&gt;&lt;span class='day'&gt;28&lt;/span&gt;&lt;span class='status'&gt;미오픈&lt;/span&gt;&lt;/div&gt;       &lt;/td&gt;       &lt;td&gt;&lt;a href=&quot;javascript:fnStep2('20221029','210','7','44','Y')&quot; class='day-wrap'&gt;&lt;span class='day'&gt;29&lt;/span&gt;&lt;span class='status stand-by'&gt;대기신청가능&lt;/span&gt;&lt;/a&gt;&lt;/td&gt;    &lt;/tr&gt;    &lt;tr&gt;       &lt;td&gt;&lt;a href=&quot;javascript:fnStep2('20221030','210','1','44','Y')&quot; class='day-wrap'&gt;&lt;span class='day'&gt;30&lt;/span&gt;&lt;span class='status stand-by'&gt;대기신청가능&lt;/span&gt;&lt;/a&gt;&lt;/td&gt;       &lt;td&gt;          &lt;div class='day-wrap '&gt;&lt;span class='day'&gt;31&lt;/span&gt;&lt;span class='status'&gt;미오픈&lt;/span&gt;&lt;/div&gt;       &lt;/td&gt;       &lt;td&gt;&lt;/td&gt;       &lt;td&gt;&lt;/td&gt;       &lt;td&gt;&lt;/td&gt;       &lt;td&gt;&lt;/td&gt;       &lt;td&gt;&lt;/td&gt;    &lt;/tr&gt; &lt;/tbody&gt;&quot;&quot;&quot;  soup = BeautifulSoup(html, 'lxml') goal = [x['href'].split(&quot;'&quot;)[1::2] for x in soup.select('a.day-wrap')] pp(goal) </code></pre> <p>Output:</p> <pre><code>[['20221001', '210', '7', '0', 'Y'],  ['20221002', '210', '1', '0', 'Y'],  ['20221005', '110', '4', '0', 'Y'],  ['20221006', '110', '5', '0', 'Y'],  ['20221008', '210', '7', '0', 'Y'],  ['20221009', '210', '1', '50', 'Y'],  ['20221015', '210', '7', '0', 'Y'],  ['20221016', '210', '1', '0', 'Y'],  ['20221022', '210', '7', '0', 'Y'],  ['20221023', '210', '1', '0', 'Y'],  ['20221029', '210', '7', '44', 'Y'],  ['20221030', '210', '1', '44', 'Y']] </code></pre>"			2022-09-07 12:16:35.77 UTC
73669481	javascript|python|numpy|itertools	how to make this javascript for-loop converted to python code with same or faster execution time?	"<p>Please help to optimize my python code, I wrote this JS code and tried to convert it to python that I need the execution time comparable to the original code.</p> <p>The original code follows for-loop in JS, I transferred the code literally by using pure python and numpy but I didn't optimize it well resulting in poor execution time and memory usage.</p> <p>This code calculates a preset enemy vs player power with +-10% difference and do a random roll then get the player winrate. The target is to set the HERO_POWER or ENEMY_POWER atleast in 100000-300000 range.</p> <pre><code>    ''' ##winchance.js## Original code  var h = 0 var g = 0 var i = char_power  var l = i*.9 var u = enemy_power   * 1.1 var d = enemy_power   * .9 for (let e = Math.floor(l); e &lt;= i; e++) for (let t = Math.floor(d); t &lt;= u; t++) e &gt;= t ? h++ : g++ var z = h / (h + g)*100; return z } var out = combat_simulate(parseInt(arguments[2]),parseInt(arguments[3])) console.log(out) '''  import subprocess,itertools,math import numpy as np  def calc_iter(array):     w=0     l=0     for x,y in array:         if x &gt;= y:             w +=1         else:             l +=1     return w,l  ###inputs### HERO_POWER=120000 ENEMY_POWER=110000  w=0 l=0 h_l = HERO_POWER * .9 e_h = ENEMY_POWER * 1.1 e_l = ENEMY_POWER * .9 hp = np.arange(math.floor(h_l),math.floor(HERO_POWER)) ep = np.arange(math.floor(e_l),math.floor(e_h))   print('process using itertools') start_time = time.time() array = itertools.product(hp,ep) w,l = calc_iter(array) print('win rate:{}%'.format(round((w/(w+l))*100,2))) end_time = time.time() print('time elapsed',end_time-start_time)  print() print('process using numpy') start_time = time.time() x,y = np.meshgrid(hp,ep) n = x&gt;y w,l = (np.count_nonzero(n),np.count_nonzero(n==0)) print('win rate:{}%'.format(round((w/(w+l))*100,2))) end_time = time.time() print('time elapsed',end_time-start_time)  print() print('process using nodejs') start_time = time.time() result = subprocess.run('node winchance.js {} {}'.format(HERO_POWER,ENEMY_POWER),capture_output=True,text=True) print('win rate:{}%'.format(round(float(result.stdout),2))) end_time = time.time() print('time elapsed',end_time-start_time) ######################################## process using itertools win rate:68.18% time elapsed 30.484147787094116  process using numpy win rate:68.18% time elapsed 2.0294463634490967  process using nodejs win rate:68.18% time elapsed 0.799668550491333 </code></pre>"	2022-09-10 05:25:53.177 UTC	73669548	"<p>This is more succinct but whether it's faster is for OP to measure because the performance is likely to vary depending on CPU/OS and, possibly, Python version. It will also be significantly affected by the number of elements in the list:</p> <pre><code>def calc_iter(list_):     w = sum(x &gt;= y for x, y in list_)     return w, len(list_)-w </code></pre>"			2022-09-10 05:45:20.807 UTC
73669481	javascript|python|numpy|itertools	how to make this javascript for-loop converted to python code with same or faster execution time?	"<p>Please help to optimize my python code, I wrote this JS code and tried to convert it to python that I need the execution time comparable to the original code.</p> <p>The original code follows for-loop in JS, I transferred the code literally by using pure python and numpy but I didn't optimize it well resulting in poor execution time and memory usage.</p> <p>This code calculates a preset enemy vs player power with +-10% difference and do a random roll then get the player winrate. The target is to set the HERO_POWER or ENEMY_POWER atleast in 100000-300000 range.</p> <pre><code>    ''' ##winchance.js## Original code  var h = 0 var g = 0 var i = char_power  var l = i*.9 var u = enemy_power   * 1.1 var d = enemy_power   * .9 for (let e = Math.floor(l); e &lt;= i; e++) for (let t = Math.floor(d); t &lt;= u; t++) e &gt;= t ? h++ : g++ var z = h / (h + g)*100; return z } var out = combat_simulate(parseInt(arguments[2]),parseInt(arguments[3])) console.log(out) '''  import subprocess,itertools,math import numpy as np  def calc_iter(array):     w=0     l=0     for x,y in array:         if x &gt;= y:             w +=1         else:             l +=1     return w,l  ###inputs### HERO_POWER=120000 ENEMY_POWER=110000  w=0 l=0 h_l = HERO_POWER * .9 e_h = ENEMY_POWER * 1.1 e_l = ENEMY_POWER * .9 hp = np.arange(math.floor(h_l),math.floor(HERO_POWER)) ep = np.arange(math.floor(e_l),math.floor(e_h))   print('process using itertools') start_time = time.time() array = itertools.product(hp,ep) w,l = calc_iter(array) print('win rate:{}%'.format(round((w/(w+l))*100,2))) end_time = time.time() print('time elapsed',end_time-start_time)  print() print('process using numpy') start_time = time.time() x,y = np.meshgrid(hp,ep) n = x&gt;y w,l = (np.count_nonzero(n),np.count_nonzero(n==0)) print('win rate:{}%'.format(round((w/(w+l))*100,2))) end_time = time.time() print('time elapsed',end_time-start_time)  print() print('process using nodejs') start_time = time.time() result = subprocess.run('node winchance.js {} {}'.format(HERO_POWER,ENEMY_POWER),capture_output=True,text=True) print('win rate:{}%'.format(round(float(result.stdout),2))) end_time = time.time() print('time elapsed',end_time-start_time) ######################################## process using itertools win rate:68.18% time elapsed 30.484147787094116  process using numpy win rate:68.18% time elapsed 2.0294463634490967  process using nodejs win rate:68.18% time elapsed 0.799668550491333 </code></pre>"	2022-09-10 05:25:53.177 UTC	73697455	"<p>upon searching the web, I tried to translate the python function code using 'numba' and it shows faster execution with no additional thing to do on my end in this context.</p> <pre><code>import math import numpy as np import time import subprocess import os from numba import njit  hero_power_list = [120000,130000,140000] enemy_power_list = [110000,121000,131000]  @njit def calc_iter_1(array1,array2):     w=0     l=0     for x in array1:         for y in array2:             if x &gt;= y:                 w +=1             else:                 l +=1     return w,l   print('process using numba') for x in range(len(hero_power_list)):     h_l = hero_power_list[x]  * .9     e_h = enemy_power_list[x] * 1.1     e_l = enemy_power_list[x] * .9     hp = np.arange(math.floor(h_l),math.floor(hero_power_list[x]))     ep = np.arange(math.floor(e_l),math.floor(e_h))      start_time = time.perf_counter()     w,l = calc_iter_1(hp,ep)     # print('win rate:{}%'.format(round((w/(w+l))*100,2)))     end_time = time.perf_counter()     print('time elapsed:',round(end_time-start_time,2),'sec(s)')   print() print('process using nodejs') for x in range(len(hero_power_list)):     HERO_POWER = hero_power_list[x]     ENEMY_POWER = enemy_power_list[x]     start_time = time.perf_counter()     result = subprocess.run('node winchance.js {} {}'.format(HERO_POWER,ENEMY_POWER),capture_output=True,text=True)     # print('win rate:{}%'.format(round(float(result.stdout),2)))     end_time = time.perf_counter()     print('time elapsed:',round(end_time-start_time,2),'sec(s)') ######################################## process using numba time elapsed: 0.87 sec(s) time elapsed: 0.43 sec(s) time elapsed: 0.52 sec(s)  process using nodejs time elapsed: 0.81 sec(s) time elapsed: 1.07 sec(s) time elapsed: 1.1 sec(s) </code></pre>"			2022-09-13 04:07:21.93 UTC
73716903	python|linux|bash|web|server	How can I check if a javascript file exist without downloading it in bash or python	<p>How can I check if a javascript file exist without downloading it in bash or python</p>	2022-09-14 12:31:47.553 UTC	73717389	"<p>You can use python urllib module to check file existence in a given URL. Here's a sample code. The results are saved inside the &quot;results&quot; dictionary.</p> <pre><code>from urllib.request import urlopen urls = ['https://www.codecademy.com/cdn-cgi/challenge- platform/h/g/scripts/alpha/invisible.js','https://www.codecademy.com/idontexist.js'] results={} for url in urls:     try:         ret = urlopen(url)         if ret.code == 200:             state=&quot;Exists&quot;             print(url+' : {}'.format(state))     except:         state=&quot;Not exists&quot;         print(url+' : {}'.format(state))      results[url]=state </code></pre>"			2022-09-14 13:06:25.657 UTC
73728823	javascript|python|base64|md5	Convert md5 hash code of javascript to Python return different result	"<p>Currently, I have the following <code>Javascript</code> code that required to be converted to Python code</p> <pre><code>var requestContent = CryptoJS.MD5('{ &quot;agentSessionId&quot;: &quot;1622024176&quot; }'); var requestContentBase64String = requestContent.toString(CryptoJS.enc.Base64); </code></pre> <p>this return the following result <code>bwtSmXFDxoG4cb0HDrZbhQ==</code></p> <p>On the other hand, I wrote the following <code>Python</code> code:</p> <pre><code>request_content = hashlib.md5('{ &quot;agentSessionId&quot;: &quot;1622024176&quot; }').encode('utf-8')).hexdigest() request_content_base64_string = base64.b64encode(request_content.encode()) </code></pre> <p>but it returned a different result <code>NmYwYjUyOTk3MTQzYzY4MWI4NzFiZDA3MGViNjViODU=</code></p> <p>Can someone tell me why these 2 return different results when both do 2 jobs of <code>md5 hashing</code> and <code>encode to base64 string</code> and how do I go about changing the Python code for it to work?</p>"	2022-09-15 09:38:34.227 UTC	73728997	"<blockquote> <p>change ur python code to this :</p> </blockquote> <pre><code>import hashlib import base64  magic = '{ &quot;agentSessionId&quot;: &quot;1622024176&quot; }' magic = hashlib.md5(magic.encode()) magic = magic.digest() magic1= base64.b64encode(magic) encodedStr = str(magic1, &quot;utf-8&quot;) print(encodedStr) </code></pre>"			2022-09-15 09:50:43.83 UTC
73728823	javascript|python|base64|md5	Convert md5 hash code of javascript to Python return different result	"<p>Currently, I have the following <code>Javascript</code> code that required to be converted to Python code</p> <pre><code>var requestContent = CryptoJS.MD5('{ &quot;agentSessionId&quot;: &quot;1622024176&quot; }'); var requestContentBase64String = requestContent.toString(CryptoJS.enc.Base64); </code></pre> <p>this return the following result <code>bwtSmXFDxoG4cb0HDrZbhQ==</code></p> <p>On the other hand, I wrote the following <code>Python</code> code:</p> <pre><code>request_content = hashlib.md5('{ &quot;agentSessionId&quot;: &quot;1622024176&quot; }').encode('utf-8')).hexdigest() request_content_base64_string = base64.b64encode(request_content.encode()) </code></pre> <p>but it returned a different result <code>NmYwYjUyOTk3MTQzYzY4MWI4NzFiZDA3MGViNjViODU=</code></p> <p>Can someone tell me why these 2 return different results when both do 2 jobs of <code>md5 hashing</code> and <code>encode to base64 string</code> and how do I go about changing the Python code for it to work?</p>"	2022-09-15 09:38:34.227 UTC	73728989	"<p>Try this (I changed hexdigest to digest):</p> <pre><code>import hashlib, base64 # JAVA version: bwtSmXFDxoG4cb0HDrZbhQ== request_content = hashlib.md5('{ &quot;agentSessionId&quot;: &quot;1622024176&quot; }'.encode('utf-8')).digest() request_content_base64_string = base64.b64encode(request_content) print(request_content_base64_string) </code></pre> <p>Result:</p> <pre><code>b'bwtSmXFDxoG4cb0HDrZbhQ==' </code></pre>"			2022-09-15 09:50:17.68 UTC
73735568	javascript|opencv|image-processing	"How to use cv.pencilSketch method in Javascript. I know it works in Python, but it is not a function in javascript"	"<p>I want to make image processing tool, and I have used cv2.pencilSketch() method in python. However, in JavaScript, it is not a function.</p> <p>How do I do it in JavaScript? In my browser. (OpenCV js CDN)? <a href=""https://i.stack.imgur.com/6RI50.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/6RI50.png"" alt=""enter image description here"" /></a></p> <p>If it is not a function, I would like to make it a function with my own image processing, but I need help.</p>"	2022-09-15 18:00:10.617 UTC	73736005	"<p>unfortunately, as of now, only a small subset of opencv is exposed to js.</p> <p>you'll find the complete <a href=""https://github.com/opencv/opencv/blob/4.x/platforms/js/opencv_js.config.py#L150"" rel=""nofollow noreferrer"">'whitelist' here</a></p> <p>(and no, pencilSketch() is not included, so you cannot use it)</p> <p>IF you're able to <a href=""https://github.com/opencv/opencv/blob/4.x/platforms/js/README.md"" rel=""nofollow noreferrer"">build it locally</a>, you could try to add the function to the photo section, and build your own.</p> <p>and IF that works, please make a github PR with it, so others can profit from your effort !</p>"			2022-09-15 18:42:26.31 UTC
73745644	javascript|python|itertools|cycle	What is the Python itertools cycle equivalent in Javascript?	"<p>I could not find an equivalent function of Python cycle in itertools:</p> <pre><code>from itertools import cycle g = cycle(('a','b')) next(g) # a next(g) # b next(g) # a # etc. etc. </code></pre> <p>in Javascript.</p> <p>The goal is to create an infinite cycle in an array of values. I guess I could use a Javascript generator but I was wondering if there is any built-in function.</p>"	2022-09-16 13:36:18.067 UTC	73745756	"<p>There is no built in functionality for this. With that said, it is easy to make a function that accepts any  number of arguments and cycles through them:</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-js lang-js prettyprint-override""><code>function* cycle(...items) {   while(true)     yield* items; }   const gen = cycle(""a"", ""b"");  console.log(gen.next().value); console.log(gen.next().value); console.log(gen.next().value);</code></pre> </div> </div> </p> <p>This uses <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/yield*"" rel=""nofollow noreferrer""><code>yield*</code></a> to delegate to the iterator of the array <code>items</code>, effectively <code>yield* items;</code> is a shorter version of</p> <pre><code>for (const item of items)   yield item; </code></pre> <p>Alternatively, it can accept an array and continually cycle through its contents</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-js lang-js prettyprint-override""><code>function* cycle(items) {   while(true)     yield* items; }   const gen = cycle([""a"", ""b""]);  console.log(gen.next().value); console.log(gen.next().value); console.log(gen.next().value);</code></pre> </div> </div> </p> <p>If it has to support any iterables passed in, it will have to maintain a chache of the first iteration, so it can repeat the further cycles. I have shown an implementation of this <a href=""https://stackoverflow.com/a/71532196"">in this answer of mine</a>. Here is the implementation:</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-js lang-js prettyprint-override""><code>function* repeat(iterable) {   const cache = [];      //lazily supply the values from the iterable while caching them   for (const next of iterable) {     cache.push(next);     yield next;   }      //delegate to the cache at this point   while(true)     yield* cache; }  const newMap = new Map([   ['key1', 'value1'],   ['key2', 'value2'] ]);  const iterator = repeat(newMap.values()) // It can be newMap.entries()  console.log(iterator.next().value) // prints value1 console.log(iterator.next().value) // prints value2 console.log(iterator.next().value) // prints value1 console.log(iterator.next().value) // prints value2 console.log(iterator.next().value) // prints value1 console.log(iterator.next().value) // prints value2</code></pre> </div> </div> </p> <hr /> <p>There is a proposal called <a href=""https://github.com/tc39/proposal-iterator-helpers"" rel=""nofollow noreferrer"">Iterator helpers</a> which aims to add tools similar to itertools and, in general, ease the use of iterators. The proposal is currently in stage 2 out of 4 in the approval process.</p>"			2022-09-16 13:46:00.637 UTC
73757659	python|web-scraping|beautifulsoup	How to handle pagination if only javascript can be loaded in BeautifulSoup Python	"<p>It's been hours since I am stuck here.<br /> The entire code has been uploaded below.<br /> The url: &quot;https://www.bostonpublicschools.org/Page/628&quot; is of only 1 page. However, it has 5 pages within itself that can be loaded by clicking on the page-icon at the bottom. This loads a javascript file that cannot be opened on a new tab (trying to open results in page getting blocked). Also, it loads on the same page.</p> <p>And along with that, I'm trying to fetch <code>EMail-IDs</code> by visiting individual websites. But there exist a catch which I'm unable to overcome. That is, some Email IDs exist within <p> tags and some in  tags and some more in different positions say index 3 or 2. Is there any way where I can fetch all of them? Yes,<br /> <code>school.find('div', {'class': &quot;ui-column-one-half region&quot;}).find(class_=&quot;ui-article-description&quot;)</code><br /> this code can fetch them but it's really hard to filter as I mentioned before.</p> <p>I've so far looked at more than 100 solutions and tried many of them and none of them worked for me. Also, I do believe that this can be solved by using <code>selenium</code> as it can interact with the UI.</p> <p>Is there any way I can get the job done within BeautifulSoup?</p> <pre><code>from bs4 import BeautifulSoup as bs import requests import re  valid = False   def URL_Parser(url):     # Desktop user-agent     DESKTOP_USER_AGENT = &quot;Mozilla/5.0 (Macintosh; Intel Mac OS X 10.14; rv:65.0) Gecko/20100101 Firefox/65.0&quot;     # Mobile user-agent     MOBILE_USER_AGENT = &quot;Mozilla/5.0 (Linux; Android 7.0; SM-G930V Build/NRD90M) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/59.0.3071.125 Mobile Safari/537.36&quot;      headers = {&quot;user-agent&quot;: MOBILE_USER_AGENT}     resp = requests.get(url, headers=headers)     return resp   def validate_mail(e_mail):     return bool(re.search(r&quot;^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\.[a-zA-Z0-9-.]+$&quot;, e_mail))   def main():     global valid     URL = &quot;https://www.bostonpublicschools.org/Page/628&quot;     response = URL_Parser(URL)      if response.status_code == 200:         soup = bs(response.content, &quot;html.parser&quot;)          school_database = {&quot;School Name&quot;: [],                            &quot;School Email ID&quot;: [],                            &quot;School Link&quot;: []                            }          links = []          for link in soup.findAll('a', attrs={'href': re.compile(&quot;^https://www.bostonpublicschools.org/Page/&quot;)}):             if link.get('aria-invalid'):                 links.append(link.get('href'))          for link in links:             school = bs(URL_Parser(link).content, 'html.parser')              school_name = school.find('div', {'class': &quot;ui-widget app flexpage&quot;}).find(class_=&quot;ui-widget-header&quot;).select('h1')[0].text.strip()             try:                 school_email = school.find('div', {'class': &quot;ui-column-one-half region&quot;}).find(class_=&quot;ui-article-description&quot;).select('p')[2].text.strip()                 valid = validate_mail(school_email)                 if not valid:                     school_email = school.find('div', {'class': &quot;ui-column-one-half region&quot;}).find(class_=&quot;ui-article-description&quot;).select('p')[1].text.strip()                     valid = validate_mail(school_email)                     if not valid:                         school_email = school.find('div', {'class': &quot;ui-column-one-half region&quot;}).find(class_=&quot;ui-article-description&quot;).select('p')[3].text.strip()                         valid = validate_mail(school_email)              except IndexError:                 print(&quot;&gt;&gt;&gt; Email is not in expected place!&quot;)             else:                 school_database[&quot;School Name&quot;].append(school_name)                 school_database[&quot;School Email ID&quot;].append(school_email)                 school_database[&quot;School Link&quot;].append(link)          print(school_database[&quot;School Link&quot;])         print(school_database[&quot;School Name&quot;])         print(school_database[&quot;School Email ID&quot;])   if '__init__' == main():     main() </code></pre>"	2022-09-17 18:51:26.197 UTC	73757764	"<p>Try:</p> <pre class=""lang-py prettyprint-override""><code>import re import requests from bs4 import BeautifulSoup  url = &quot;https://www.bostonpublicschools.org/Page/628&quot;  # get required parameters: html_doc = requests.get(url).text soup = BeautifulSoup(html_doc, &quot;html.parser&quot;) url = re.search(r&quot;window\.open\((.*)\);&quot;, html_doc).group(1) ModuleInstanceID = re.search(r&quot;ModuleInstanceID=(\d+)&quot;, url).group(1) PageModuleInstanceID = re.search(r&quot;PageModuleInstanceID=(\d+)&quot;, url).group(1) DirectoryType = soup.select_one(&quot;[id$=displaytype]&quot;)[&quot;value&quot;] total_pages = int(soup.select(&quot;.ui-pagination-list li&quot;)[-1].text)  url = &quot;https://www.bostonpublicschools.org/site/UserControls/Minibase/MinibaseListWrapper.aspx&quot;  params = {     &quot;ModuleInstanceID&quot;: ModuleInstanceID,     &quot;PageModuleInstanceID&quot;: PageModuleInstanceID,     &quot;FilterFields&quot;: &quot;&quot;,     &quot;DirectoryType&quot;: DirectoryType,     &quot;PageIndex&quot;: &quot;&quot;, }  # iterate over the pages and print sample info: for params[&quot;PageIndex&quot;] in range(1, total_pages + 1):     soup = BeautifulSoup(         requests.get(url, params=params).content, &quot;html.parser&quot;     )      for a in soup.select(&quot;.sw-flex-item-group a&quot;):         print(a.text) </code></pre> <p>Prints:</p> <pre class=""lang-none prettyprint-override""><code> ...  UP Academy Holland Warren/Prescott K-8 West Zone Early Learning Center Winship, F. Lyman Elementary Winthrop, John Elementary Young Achievers Science &amp; Math K-8 </code></pre>"			2022-09-17 19:07:36.017 UTC
73759734	javascript|python|selenium|web-scraping|runtime-error	Error when extracting a JavaScript value from a variable with Selenium python	"<p>I'm attempting to get the extract the value of the variable <code>remainingTimeString</code> on <a href=""https://shopgoodwill.com/item/151566532"" rel=""nofollow noreferrer"">this website</a> in python using Selenium webdriver. I'm trying to use the <code>driver.execute_script()</code> function. Here is my code:</p> <pre><code>import selenium.webdriver  options = selenium.webdriver.FirefoxOptions() options.add_argument(&quot;--headless&quot;)  driver = selenium.webdriver.Firefox(options=options)  driver.get('https://shopgoodwill.com/item/151632327') print(driver.execute_script(&quot;return remainingTimeString&quot;)) </code></pre> <p>However, when I run it, I get:</p> <pre><code>selenium.common.exceptions.JavascriptException: Message: ReferenceError: remainingTimeString is not defined </code></pre> <p>What should I do? the variable is clearly in a script when I check the HTML source. Thanks!</p>"	2022-09-18 02:25:34.053 UTC	73760958	"<p>That data is being pulled dynamically from an API, after page loads, so your options are - either use a WebDriverWait for that element (or an implicit wait for that matter), or use a less complex solution, like below (without selenium), where you inspect the Network Tab in Dev Tools, locate the API where data is being pulled from, and scrape that API directly:</p> <pre><code>import requests import pandas as pd   headers = {     &quot;User-Agent&quot;: &quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36&quot; }  url = 'https://buyerapi.shopgoodwill.com/api/ItemDetail/GetItemDetailModelByItemId/151632327'  r = requests.get(url, headers=headers) df = pd.json_normalize(r.json()) print(df['remainingTime'][0]) </code></pre> <p>Result printed in terminal:</p> <pre><code>'17h 56m ' </code></pre> <p>The code above is extracting remainingTime only from that dataframe. There are detailed product infos in that json, so you can get other data as well, if you need. Python requests documentation can be found at <a href=""https://requests.readthedocs.io/en/latest/"" rel=""nofollow noreferrer"">https://requests.readthedocs.io/en/latest/</a></p> <p>Also pandas documentation: <a href=""https://pandas.pydata.org/pandas-docs/stable/index.html"" rel=""nofollow noreferrer"">https://pandas.pydata.org/pandas-docs/stable/index.html</a></p>"			2022-09-18 07:49:11.16 UTC
73773094	javascript|json|ajax|flask	Access a JSON data from python in JavaScript	"<p>I have a flask URL called register, where I collect the users's input and process them like so:</p> <pre><code>@app.route(&quot;/register&quot;, methods=[&quot;POST&quot;]) @login_required def register_post():     email = request.values.get(&quot;email&quot;)     username = request.values.get(&quot;username&quot;)     company_name = request.values.get(&quot;company_name&quot;)     password = request.values.get(&quot;password&quot;)     confirm_password = request.values.get(&quot;confirm_password&quot;)     messages = register(email, username, password, confirm_password, company_name)     success_message = (         &quot;Thank you for registering with us. We will get back to you shortly.&quot;     )     print(&quot;request values: &quot;, request.values)     print(&quot;messages: &quot;, messages)     if (len(messages) == 1) and (messages[0] == success_message):         return jsonify({&quot;code&quot;: 200, &quot;message&quot;: messages[0]})     else:         return jsonify({&quot;code&quot;: 400, &quot;message&quot;: messages}) </code></pre> <p>Based on the messages, I would like to display the messages with a native browser pop-up. I am trying to access that JSON data in Javascript like so:</p> <pre><code>$.ajax({     url: &quot;/register&quot;,     type: &quot;POST&quot;,     contentType: &quot;application/json; charset=utf-8&quot;,     dataType: &quot;json&quot;,     success: function (json) {         alert(json);     },     error: function (e) {         alert(e);     } }); </code></pre> <p>I get the JSON object in the browser but it doesn't alert anything in the browser. what could I be doing wrong?</p> <p>Screenshot of the dev tools below: <a href=""https://i.stack.imgur.com/KIk5O.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/KIk5O.png"" alt=""enter image description here"" /></a></p> <p>Network tab <a href=""https://i.stack.imgur.com/pe1L8.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/pe1L8.png"" alt=""enter image description here"" /></a></p>"	2022-09-19 12:05:06.43 UTC	73773236	"<p>You have some code which is navigating to <code>/register</code> so the JavaScript making the Ajax request is irrelevant.</p> <p>Presumably you are submitting a form with <code>action=&quot;/register&quot;</code>.</p> <p>If you want to perform the Ajax request instead then you need:</p> <ul> <li>An event handler</li> <li>To prevent the default behaviour of submitting a form</li> </ul> <pre class=""lang-js prettyprint-override""><code>$('form').on('submit', evt =&gt; {     evt.preventDefault();     //... gather your data for the request body     $.ajax(...); }); </code></pre> <p>Note that your existing JS is missing the <code>data</code> property from the object you pass to <code>ajax</code>. You'll need to populate that with the data you are sending.</p>"			2022-09-19 12:18:02.637 UTC
73782655	javascript|python|google-colaboratory|google-earth-engine	Using the below function I am getting an error when I convert the GEE javascript to Python script	"<p>my code looks like this.</p> <pre><code>Function:      s2SrWithCloudMask = ee.Join.saveFirst('cloud_mask').apply({       'primary': s2Sr,       'secondary': s2Clouds,       'condition': ee.Filter.equals({'leftField': 'system:index',        'rightField': 'system:index'})      }) </code></pre> <p>Error i got when I try to run my code as follows:</p> <p><code>Unrecognized argument type to convert to a FeatureCollection: {'primary':</code> <code>&lt;ee.imagecollection.ImageCollection object at 0x7fda2ad54610&gt;, 'secondary': &lt;ee.imagecollection.ImageCollection object at 0x7fda2aa00e10&gt;, 'condition': &lt;ee.filter.Filter object at 0x7fda2aa0bb50&gt;}</code></p> <p>Any suggestions would be helpful. Thanks in advance.</p>"	2022-09-20 06:54:30.267 UTC	73791882	"<p>Python, unlike JavaScript, has dedicated syntax for named function arguments. The Earth Engine client follows this difference, so you need to use named argument syntax instead of dictionary syntax. This means:</p> <ul> <li>No <code>{}</code></li> <li>Use <code>=</code> instead of <code>:</code></li> <li>Do not quote the parameter names</li> </ul> <pre class=""lang-py prettyprint-override""><code>    s2SrWithCloudMask = ee.Join.saveFirst('cloud_mask').apply(       primary=s2Sr,       secondary=s2Clouds,       condition=ee.Filter.equals(leftField='system:index', rightField='system:index')     ) </code></pre>"			2022-09-20 19:44:31.9 UTC
73836091	javascript|python-3.x|list|filter|lambda	"What is Python list(), filter(), lambda equivalent to Javascript?"	"<p>This is <a href=""https://stackoverflow.com/questions/73832522/how-to-compare-items-in-list"">script in python</a>. I want to achieve the same goal with Javascript. So the script is that</p> <pre><code>my_list = [18, 19, 20, 27, 28, 29, 38, 39, 40]  new_list = list(filter(lambda x: x + 10 in my_list or x - 10 in my_list, my_list)) </code></pre> <p>What is equivalent of list(), filter(), lambda in this situation to convert Python to Javasript ?</p>"	2022-09-24 09:25:42.09 UTC	73836201	"<p>It can be converted to JavaScript using <code>Array.filter()</code> and <code>Array.includes()</code>.</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-js lang-js prettyprint-override""><code>const my_list = [18, 19, 20, 27, 28, 29, 38, 39, 40]  const new_list = my_list.filter(x =&gt; my_list.includes(x+10) || my_list.includes(x-10))  console.log(new_list)</code></pre> </div> </div> </p>"			2022-09-24 09:43:13.27 UTC
