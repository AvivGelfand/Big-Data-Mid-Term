59552659	javascript|python|list|flask|knockout.js	Python List to Javascript Observable Array	"<p>So I am implementing an API through Python Flask. My code structure is something like the following:</p>  <pre><code>src/ |--&gt; main.py |--&gt; api/ |     |--&gt; users.py |--&gt; static/       |--&gt; index.html </code></pre>  <p>Inside <code>users.py</code> I have a list called <code>user_list</code>. The thing is I want to perform some operations with that list, for which I want to make it an Observable Array to and handle it in <code>index.html</code>. Speaking roughly, I do not know how to send that list from <code>users.py</code> to <code>index.html</code> through <code>main.py</code> (which handles the whole API).</p>  <p>I am really lost on how to do this, as I do not understand JavaScript's Observable Arrays at all.</p>"	2020-01-01 12:49:21.817 UTC	59552780	"<p>To pre-populate an observable array, pass an array to the <code>ko.observableArray</code> function. To pass an array from Flask code through the template to JavaScript, use Flask's <code>tojson</code> filter. Thus, in the template:</p>  <pre><code>&lt;script&gt;   const userList = ko.observableArray({{ user_list | tojson }}); &lt;/script&gt; </code></pre>  <p>It is impossible to do this in a static file, for obvious reasons (you want some dynamic content injected into it). An alternative that <em>would</em> work with a static <code>index.html</code> would be to populate your observable array via AJAX, but since you provided no code, it is hard to tell you exactly how to do it.</p>"			2020-01-01 13:05:08.763 UTC
59555840	javascript|python	How do I extract a javascript variable from a .js file with python?	"<p>I'm trying to extract the JSON data in the variable chartData. This is stored in a .js file which generates a chart for my solar system. I want to extract this data so i can store it in a separate database.</p>  <p>However I cant seem to find a way how to extract the JSON data with python.</p>  <p>This is the .js file.</p>  <pre><code>var chartData = { ""labels"": [ ""1"",""2"",""3"",""4"",""5"",""6"",""7"",""8"",""9"",""10"",""11"",""12"",""13"",""14"",""15"",""16"",""17"",""18"",""19"",""20"",""21"",""22"",""23"",""24"",""25"",""26"",""27"",""28"",""29"",""30"",""31""], ""datasets"": [ { ""strokeColor"":"" rgba(64,178,83,1.0)"", ""fillColor"":"" rgba(64,178,83,.5)"", ""data"": [ 15.101000,9.819000,9.966000,19.634000,18.403000,17.015000,20.356000,20.645000,5.443000,14.542000,13.513000,9.774000,15.053000,16.870000,10.582000, 15.139000,7.230000,9.019000,18.687000,16.074000,17.183000,23.353000,22.248000,22.762000,22.458000,20.809000,18.034000,12.810000,15.627000,21.057000, 19.589000] } ] } var max = 25; var steps = 5; var input = document.getElementById(""inputId""); input.setAttribute(""min"",   ""2019-02""); input.setAttribute(""max"",   ""2020-01""); input.setAttribute(""value"", ""2019-08""); document.getElementById(""labelValueId"").innerHTML = "" 498.812kWh 08.2019""; document.getElementById(""buttonPrevId"").disabled  = false; document.getElementById(""buttonNextId"").disabled  = false; var myBar = new Chart(document.getElementById(""canvasId"") .getContext(""2d"")) .Bar(chartData, { ""pointDot"": false, ""datasetFill"": false, ""scaleOverride"": true, ""scaleLabel"": ""&lt;%=value%&gt; kWh"", ""scaleSteps"": steps, ""scaleStartValue"": 0, ""scaleStepWidth"": Math.ceil(max / steps), ""scaleLineColor"":"" rgba(170,170,170,1.0)"", ""scaleFontColor"":"" rgba(170,170,170,1.0)"", ""scaleGridLineColor"":"" rgba(68,68,68,1.0)""}); </code></pre>"	2020-01-01 20:23:09.463 UTC	59555919	"<p>If in variable <code>txt</code> is your javascript string, then you can use <code>re</code> and <code>json</code> module to load the data:</p>  <pre><code>import re import json  m = re.findall(r'chartData =.*?({.*}).*?(?=var max)', txt, flags=re.S)[0] data = json.loads( m )  print(data['datasets'][0]['data']) </code></pre>  <p>Prints:</p>  <pre><code>[15.101, 9.819, 9.966, 19.634, 18.403, 17.015, 20.356, 20.645, 5.443, 14.542, 13.513, 9.774, 15.053, 16.87, 10.582, 15.139, 7.23, 9.019, 18.687, 16.074, 17.183, 23.353, 22.248, 22.762, 22.458, 20.809, 18.034, 12.81, 15.627, 21.057, 19.589] </code></pre>"			2020-01-01 20:34:57.837 UTC
59568716	javascript|python|json|flask	How can Javascript access data sent from Python Flask's render_template() function?	"<p>Problem: I am trying to access data I send (when the user navigates to the landing page of the site) from Javascript code so I can display it when the document is ready. This data is a dataframe.</p>  <p>Python Code: </p>  <pre><code>from flask import Flask, render_template, jsonify import pandas as pd import numpy as np from pandas import DataFrame @app.route(""/"",methods = ['POST', 'GET']) def homeLanding():     df = pd.DataFrame(data=[['ab1234','12:34'],['cd1234','12:36'],['ae54548','12:55'],['df59894','12:56']])     df2 = df.to_json(orient='records')     return render_template(""index.html"",someResponse=df2,namespace='/test') </code></pre>  <p>Javascript Code:</p>  <pre><code>$(document).ready(function(){     //Convert response dataframe to variable     console.log(someResponse);     var x = JSON.parse(someResponse);     //print response dataframe     console.log(x);     //populate table with response dataframe.     $('#table1').DataTable({         ""destroy"":true,         ""searching"": false,         ""ordering"": false,         ""paging"": false,         ""bordering"":true,         data: x,         columns: [         {""title"": 'ID'},         {""title"": 'Time'},         ]     }); }); </code></pre>  <p>html Script:</p>  <pre><code>&lt;!DOCTYPE html&gt; &lt;html&gt;     &lt;head&gt;         &lt;script src=""//code.jquery.com/jquery-3.3.1.min.js""&gt;&lt;/script&gt;         &lt;script type=""text/javascript"" src=""//cdnjs.cloudflare.com/ajax/libs/socket.io/1.3.6/socket.io.min.js""&gt;&lt;/script&gt;         &lt;script type=""text/javascript"" src=""https://cdn.datatables.net/1.10.16/js/jquery.dataTables.min.js""&gt;&lt;/script&gt;         &lt;script src=""static/js/application.js""&gt;&lt;/script&gt;          &lt;link rel=""stylesheet"" href=""//maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css""&gt;         &lt;link rel=""stylesheet"" href=""https://cdn.datatables.net/1.10.20/css/jquery.dataTables.min.css""&gt;         &lt;link rel=""stylesheet"" href=""static/css/application.css""&gt;     &lt;/head&gt;     &lt;body&gt;         &lt;div class=""container""&gt;             &lt;div class=""container-wrapper"" margin=""auto""&gt;                 &lt;table id=""table1"" class=""display""&gt;&lt;/table&gt;             &lt;/div&gt;         &lt;/div&gt;     &lt;/body&gt; &lt;/html&gt; </code></pre>  <p>Current Status: I have been trying several ways of passing the dataframe to render_template() but the dataframe does not seem to get sent over to the client's Javascript code or I do not know how to properly access the data from Javascript response. The dataframe does not print to the console and it does not populate table1.</p>  <p>Thanks in advance.</p>"	2020-01-02 19:07:33.217 UTC	59569266	"<p>Write your js code inside your html file:</p>  <pre><code>&lt;script&gt; $(document).ready(function(){     //Convert response dataframe to variable     console.log(""{{ someResponse }}"");     var x = JSON.parse(""{{ someResponse }}"");     //print response dataframe     console.log(x);     .......  &lt;/script&gt; </code></pre>  <p>You won't be able to pass this variable from backend to javascript file.</p>"			2020-01-02 19:57:55.957 UTC
59568716	javascript|python|json|flask	How can Javascript access data sent from Python Flask's render_template() function?	"<p>Problem: I am trying to access data I send (when the user navigates to the landing page of the site) from Javascript code so I can display it when the document is ready. This data is a dataframe.</p>  <p>Python Code: </p>  <pre><code>from flask import Flask, render_template, jsonify import pandas as pd import numpy as np from pandas import DataFrame @app.route(""/"",methods = ['POST', 'GET']) def homeLanding():     df = pd.DataFrame(data=[['ab1234','12:34'],['cd1234','12:36'],['ae54548','12:55'],['df59894','12:56']])     df2 = df.to_json(orient='records')     return render_template(""index.html"",someResponse=df2,namespace='/test') </code></pre>  <p>Javascript Code:</p>  <pre><code>$(document).ready(function(){     //Convert response dataframe to variable     console.log(someResponse);     var x = JSON.parse(someResponse);     //print response dataframe     console.log(x);     //populate table with response dataframe.     $('#table1').DataTable({         ""destroy"":true,         ""searching"": false,         ""ordering"": false,         ""paging"": false,         ""bordering"":true,         data: x,         columns: [         {""title"": 'ID'},         {""title"": 'Time'},         ]     }); }); </code></pre>  <p>html Script:</p>  <pre><code>&lt;!DOCTYPE html&gt; &lt;html&gt;     &lt;head&gt;         &lt;script src=""//code.jquery.com/jquery-3.3.1.min.js""&gt;&lt;/script&gt;         &lt;script type=""text/javascript"" src=""//cdnjs.cloudflare.com/ajax/libs/socket.io/1.3.6/socket.io.min.js""&gt;&lt;/script&gt;         &lt;script type=""text/javascript"" src=""https://cdn.datatables.net/1.10.16/js/jquery.dataTables.min.js""&gt;&lt;/script&gt;         &lt;script src=""static/js/application.js""&gt;&lt;/script&gt;          &lt;link rel=""stylesheet"" href=""//maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css""&gt;         &lt;link rel=""stylesheet"" href=""https://cdn.datatables.net/1.10.20/css/jquery.dataTables.min.css""&gt;         &lt;link rel=""stylesheet"" href=""static/css/application.css""&gt;     &lt;/head&gt;     &lt;body&gt;         &lt;div class=""container""&gt;             &lt;div class=""container-wrapper"" margin=""auto""&gt;                 &lt;table id=""table1"" class=""display""&gt;&lt;/table&gt;             &lt;/div&gt;         &lt;/div&gt;     &lt;/body&gt; &lt;/html&gt; </code></pre>  <p>Current Status: I have been trying several ways of passing the dataframe to render_template() but the dataframe does not seem to get sent over to the client's Javascript code or I do not know how to properly access the data from Javascript response. The dataframe does not print to the console and it does not populate table1.</p>  <p>Thanks in advance.</p>"	2020-01-02 19:07:33.217 UTC	59569096	"<p><code>someResponse</code> is a Python object, and is rendered onto the html/js not as a JS object, but essentially a string (inspect your code through the browser to see what I mean).</p>  <p>In this case, your template code should be:</p>  <pre><code>console.log(""{{ someResponse }}""); var x = JSON.parse(""{{ someResponse }}""); ... </code></pre>"			2020-01-02 19:42:01.627 UTC
59569335	javascript|python|python-3.x|selenium|robotframework	"How to navigate to new browser window using partial title text using either Python, or JavaScript or Robot Framework and Selenium"	"<p>During my tests, we need to click on links that open webpages in new tab. In some cases, we see the test fail due to inclusion of multiple space or tab characters in the title text. One of the examples of such titles are -</p>  <pre><code>""Looking for more information about US?${SPACE}${SPACE}Find out more from ... Get your questions answered."" </code></pre>  <p>I am trying to switch to the window using the partial text ""Looking for more information about US"" instead of using the whole title text. But so far could not find a way to do that.</p>  <p>My current codes are as follows:</p>  <pre><code>Test for ""Frequently Asked Question"""" Link at the bottom panel     Hide Promo Carousel     execute javascript  window.scrollTo(0,document.body.scrollHeight)     Click External Link and Return      partial link:Frequently Asked Questions     Looking for more information about us?  Find out more from ...... Get your questions answered. </code></pre>  <p>and the keyword is :</p>  <pre><code>Click External Link and Return     [Arguments]     ${Element}  ${ExtUrl}     ${CurrTitle}=   get title     click element   ${Element}     sleep   5s     run keyword and continue on failure  select window  ${ExtUrl}     sleep   1s     run keyword and continue on failure  select window   ${CurrTitle} </code></pre>  <p>Is there a way to locate and navigate to the window using partial text from the title? Kindly suggest if there is any way in robot framework, Python or JavaScript to achieve this.   </p>"	2020-01-02 20:02:57.403 UTC	59635326	"<p>Using the below example the custom keyword will use the current browser and then using a pattern search for the tab and select it. If there are more or less than 1 result, it will fail.</p>  <pre><code>*** Settings *** Library    SeleniumLibrary Library    Collections  *** Test Cases *** Select Window Using Partial Title     Open Browser    http://www.google.com    chrome      Click Element    link:About    CTRL     Sleep    5s     Title Should Be    Google       Switch Window Using Title Pattern    Over*     Title Should Be    Over - Google      [Teardown]    Close Browser  *** Keywords ***   Switch Window Using Title Pattern     [Arguments]    ${title_pattern}     ${current_title}    Get Title            # Save the current  tab title     ${window_titles}    Get Window Titles    # Cycles through the tabs.     Switch Window       ${current_title}     # Restores the original tab focus      ${match_count}      Get Match Count    ${window_titles}    ${title_pattern}      Run Keyword If    '${match_count}'=='0'    Fail    No Browser Tabs found that meet the ""${title_pattern}"" pattern.     Run Keyword If    '${match_count}'&gt;'1'    Fail    Too many Browser Tabs found that meet the ""${title_pattern}"" pattern.      ${matches}    Get Matches        ${window_titles}    ${title_pattern}        Switch Window    ${matches}[0] </code></pre>"			2020-01-07 20:02:11.78 UTC
59572223	javascript|python|datetime	Converting a javascript .millis() object into its python equivalent	"<p>I have the following functional code in javascript:</p>  <pre><code>Date(0).update(2020,1,1,12,0,0).millis() </code></pre>  <p>I have been trying to get it working in python. But I must be doing something very wrong.</p>  <pre><code>import time time_tuple = time.strptime('2020-1-1 12:00:00', '%Y-%m-%d %H:%M:%S') time_epoch = time.mktime(time_tuple) </code></pre>"	2020-01-03 01:39:31.26 UTC	59572266	"<p>You can do something like this:</p>  <pre><code>dt_obj = datetime.strptime('2020-1-1 12:00:00',                            '%d.%m.%Y %H:%M:%S') millisec = dt_obj.timestamp() * 1000 </code></pre>  <p>Here is the explanation of the format specifiers from the <a href=""https://docs.python.org/3/library/datetime.html#strftime-and-strptime-behavior"" rel=""nofollow noreferrer"">official documentation</a></p>"			2020-01-03 01:46:36.96 UTC
59588984	python|selenium|selenium-webdriver	How to click on javascript hyperlink element using selenium python	"<p>my goal is to use selenium python to click on this hyperlink element , here are the 3 solutions I have tried, none of them worked.</p>  <pre><code>&lt;div class=""navigation_item""&gt; &lt;a href=""javascript:;"" onclick=""navigationMenu('students');""&gt;Students (165)&lt;/a&gt; &lt;/div&gt; </code></pre>  <p>Solution 1:</p>  <pre><code>driver.find_element_by_link_text('Students (165)').click() </code></pre>  <blockquote>   <p>error message: selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {""method"":""link text"",""selector"":""Students (165)""}</p> </blockquote>  <p>Solution 2:</p>  <pre><code>driver.find_element_by_xpath('/html/body/div[2]/div[1]/div[3]/div/div[1]/div[3]/div[7]/a').click() </code></pre>  <blockquote>   <p>error message: selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {""method"":""xpath"",""selector"":""/html/body/div[2]/div[1]/div[3]/div/div[1]/div[3]/div[7]/a""}</p> </blockquote>  <p>Solution 3:use javascript code</p>  <pre><code>javascript = ""document.getElementsByClassName('navigation_item')[3].click();"" driver.execute_script(javascript) </code></pre>  <blockquote>   <p>error message:selenium.common.exceptions.JavascriptException: Message: javascript error: Cannot read property 'click' of undefined</p> </blockquote>  <p>So, what went wrong with each solution? How can I make it work? </p>"	2020-01-04 07:57:50.77 UTC	59589110	"<p>To click on the element with text as <strong>Students (165)</strong> you have to induce <em>WebDriverWait</em> for the <code>element_to_be_clickable()</code> and you can use either of the following  <a href=""https://stackoverflow.com/questions/48369043/official-locator-strategies-for-the-webdriver/48376890#48376890"">Locator Strategies</a>:</p>  <ul> <li><p>Using <code>LINK_TEXT</code>:</p>  <pre><code>WebDriverWait(driver, 20).until(EC.element_to_be_clickable((By.LINK_TEXT, ""Students (165)""))).click() </code></pre></li> <li><p>Using <code>PARTIAL_LINK_TEXT</code>:</p>  <pre><code>WebDriverWait(driver, 20).until(EC.element_to_be_clickable((By.PARTIAL_LINK_TEXT, ""Students (""))).click() </code></pre></li> <li><p>Using <code>CSS_SELECTOR</code>:</p>  <pre><code>WebDriverWait(driver, 20).until(EC.element_to_be_clickable((By.CSS_SELECTOR, ""div.navigation_item&gt;a[onclick^='navigationMenu'][onclick*='students']""))).click() </code></pre></li> <li><p>Using <code>XPATH</code>:</p>  <pre><code>WebDriverWait(driver, 20).until(EC.element_to_be_clickable((By.XPATH, ""//div[@class='navigation_item']/a[starts-with(@onclick, 'navigationMenu') and contains(., 'Students')]""))).click() </code></pre></li> <li><p><strong>Note</strong> : You have to add the following imports :</p>  <pre><code>from selenium.webdriver.support.ui import WebDriverWait from selenium.webdriver.common.by import By from selenium.webdriver.support import expected_conditions as EC </code></pre></li> </ul>"			2020-01-04 08:21:38.353 UTC
59588984	python|selenium|selenium-webdriver	How to click on javascript hyperlink element using selenium python	"<p>my goal is to use selenium python to click on this hyperlink element , here are the 3 solutions I have tried, none of them worked.</p>  <pre><code>&lt;div class=""navigation_item""&gt; &lt;a href=""javascript:;"" onclick=""navigationMenu('students');""&gt;Students (165)&lt;/a&gt; &lt;/div&gt; </code></pre>  <p>Solution 1:</p>  <pre><code>driver.find_element_by_link_text('Students (165)').click() </code></pre>  <blockquote>   <p>error message: selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {""method"":""link text"",""selector"":""Students (165)""}</p> </blockquote>  <p>Solution 2:</p>  <pre><code>driver.find_element_by_xpath('/html/body/div[2]/div[1]/div[3]/div/div[1]/div[3]/div[7]/a').click() </code></pre>  <blockquote>   <p>error message: selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {""method"":""xpath"",""selector"":""/html/body/div[2]/div[1]/div[3]/div/div[1]/div[3]/div[7]/a""}</p> </blockquote>  <p>Solution 3:use javascript code</p>  <pre><code>javascript = ""document.getElementsByClassName('navigation_item')[3].click();"" driver.execute_script(javascript) </code></pre>  <blockquote>   <p>error message:selenium.common.exceptions.JavascriptException: Message: javascript error: Cannot read property 'click' of undefined</p> </blockquote>  <p>So, what went wrong with each solution? How can I make it work? </p>"	2020-01-04 07:57:50.77 UTC	59589029	<p>It probably throws an error because page isn't loaded when you're checking for element. Try using:</p>  <pre><code>browser = webdriver.Firefox()  browser.implicitly_wait(5) </code></pre>  <p>Then you can use your first solution: <code>driver.find_element_by_link_text('Students (165)').click()</code></p>  <p>This should be triggered on find element setting timeout for 5 seconds.</p>			2020-01-04 08:05:59.63 UTC
59598966	javascript|python|python-3.x|web-scraping|chart.js	How do I scrape data in <canvas> element with python or javascript?	"<p>I want to scrape data from sites like <a href=""https://stats.warbrokers.io/players/i/5d2ead35d142affb05757778"" rel=""nofollow noreferrer"">this (stat game of the game I play)</a> where an interactive chart is being rendered in the <code>&lt;canvas&gt;</code> element and does not show any data as a scrape-able HTML element. Inspecting the HTML, the page appear to use <a href=""https://www.chartjs.org"" rel=""nofollow noreferrer"">chartjs</a>.</p> <p>Though help in python is preferred, if I really need to use some javascript, that would be fine too.</p> <p>Plus, I would like to avoid methods that require extra files such as phantomjs but again, if that's the only way, please be generous enough to share it.</p>"	2020-01-05 10:33:22.043 UTC	59599742	"<p>One way to to solve this is through checking out the <code>&lt;script&gt;</code> of the page in the page source around line 1050, which is actually where the charts are initialized. There's a recurring pattern in the initialization process of the charts, wherein the canvas elements are queried one by one to get their contexts, followed by the variables that offers the labels and statistics of the charts.</p>  <p>This solution covers using node.js, at least the latest version with the following modules:</p>  <ul> <li><a href=""https://www.npmjs.com/package/cheerio"" rel=""nofollow noreferrer"">cheerio</a> for querying elements in the DOM</li> <li><a href=""https://www.npmjs.com/package/axios"" rel=""nofollow noreferrer"">axios</a> for sending an http request to get the page source.</li> <li><a href=""https://www.npmjs.com/package/abstract-syntax-tree"" rel=""nofollow noreferrer"">abstract-syntax-tree</a> to get a javascript object tree representation of the script that we wish to scrape.</li> </ul>  <p>Here's the <a href=""https://repl.it/repls/AlphanumericScholarlyDrivers"" rel=""nofollow noreferrer"">solution</a> and the source code below:</p>  <pre><code>const cheerio = require('cheerio');  const axios = require('axios');  const { parse, each, find } = require('abstract-syntax-tree');  async function main() {      // get the page source     const { data } = await axios.get(         'https://stats.warbrokers.io/players/i/5d2ead35d142affb05757778'     );      // load the page source with cheerio to query the elements     const $ = cheerio.load(data);      // get the script tag that contains the string 'Chart.defaults'     const contents = $('script')         .toArray()         .map(script =&gt; $(script).html())         .find(contents =&gt; contents.includes('Chart.defaults'));      // convert the script content to an AST     const ast = parse(contents);      // we'll put all declarations in this object     const declarations = {};      // current key     let key = null;      // iterate over all variable declarations inside a script     each(ast, 'VariableDeclaration', node =&gt; {          // iterate over possible declarations, e.g. comma separated         node.declarations.forEach(item =&gt; {              // let's get the key to contain the values of the statistics and their labels             // we'll use the ID of the canvas itself in this case..             if(item.id.name === 'ctx') { // is this a canvas context variable?                 // get the only string literal that is not '2d'                 const literal = find(item, 'Literal').find(v =&gt; v.value !== '2d');                 if(literal) { // do we have non- '2d' string literals?                     // then assign it as the current key                     key = literal.value;                 }             }              // ensure that the variable we're getting is an array expression             if(key &amp;&amp; item.init &amp;&amp; item.init.type === 'ArrayExpression') {                  // get the array expression                 const array = item.init.elements.map(v =&gt; v.value);                  // did we get the values from the statistics?                 if(declarations[key]) {                      // zip the objects to associate keys and values properly                     const result = {};                     for(let index = 0; index &lt; array.length; index++) {                         result[array[index]] = declarations[key][index];                     }                     declarations[key] = result;                      // let's make the key null again to avoid getting                     // unnecessary array expression                     key = null;                  } else {                     // store the values                     declarations[key] = array;                 }             }          });      });      // logging it here, it's up to you how you deal with the data itself     console.log(declarations);  }  main(); </code></pre>"			2020-01-05 12:14:35.183 UTC
59634023	javascript|python|ajax	How to run python function from javascript?	"<p>I have a problem in calling my python function from my javascript file.</p>  <p>I'm using a simple server with <code>python3 -m http.server</code>, so no actual backend..my javascripts are in the front end.</p>  <p>I have a python file called <code>write.py</code> it has a function that I want to execute from my javascript file</p>  <p>write.py file:</p>  <pre class=""lang-py prettyprint-override""><code>def save_vit(text,name):     f = open(name + "".xml"", ""w+"")     f.write(text)     f.close() </code></pre>  <p>the javascript part that i have tried:(but didn't work)</p>  <pre class=""lang-js prettyprint-override""><code>$.ajax({         type: ""POST"",         url: ""write.py"",         data: { text: xmlDoc,name: name}}); </code></pre>  <p><strong>xmlDoc</strong> is a string that has an xml document.</p>  <p><strong>name</strong> is a variable that has the name of the file for the python function.</p>  <p>So my question is, what am I missing to call <code>write.py</code> from my js file or how to call it if this approach is wrong?</p>"	2020-01-07 18:22:23.067 UTC	59636670	"<p>You are using http.server to serve the content of a folder, as files, not to execute them, so in the best case scenario, http.server will respond with the content of the <code>write.py</code> file instead of executing it.</p>  <p>You need to create a webserver that has a endpoint where the code of write.py is integrated.</p>"			2020-01-07 22:00:15.15 UTC
59634023	javascript|python|ajax	How to run python function from javascript?	"<p>I have a problem in calling my python function from my javascript file.</p>  <p>I'm using a simple server with <code>python3 -m http.server</code>, so no actual backend..my javascripts are in the front end.</p>  <p>I have a python file called <code>write.py</code> it has a function that I want to execute from my javascript file</p>  <p>write.py file:</p>  <pre class=""lang-py prettyprint-override""><code>def save_vit(text,name):     f = open(name + "".xml"", ""w+"")     f.write(text)     f.close() </code></pre>  <p>the javascript part that i have tried:(but didn't work)</p>  <pre class=""lang-js prettyprint-override""><code>$.ajax({         type: ""POST"",         url: ""write.py"",         data: { text: xmlDoc,name: name}}); </code></pre>  <p><strong>xmlDoc</strong> is a string that has an xml document.</p>  <p><strong>name</strong> is a variable that has the name of the file for the python function.</p>  <p>So my question is, what am I missing to call <code>write.py</code> from my js file or how to call it if this approach is wrong?</p>"	2020-01-07 18:22:23.067 UTC	59634154	"<p>Python is running on the <em>server</em> side ... JavaScript is running on the <em>client</em> side.</p>  <p>So, the only way for JavaScript to ask for a Python routine to be run is through an asynchronous AJAX request which you will have to build.</p>"			2020-01-07 18:32:53.207 UTC
59634023	javascript|python|ajax	How to run python function from javascript?	"<p>I have a problem in calling my python function from my javascript file.</p>  <p>I'm using a simple server with <code>python3 -m http.server</code>, so no actual backend..my javascripts are in the front end.</p>  <p>I have a python file called <code>write.py</code> it has a function that I want to execute from my javascript file</p>  <p>write.py file:</p>  <pre class=""lang-py prettyprint-override""><code>def save_vit(text,name):     f = open(name + "".xml"", ""w+"")     f.write(text)     f.close() </code></pre>  <p>the javascript part that i have tried:(but didn't work)</p>  <pre class=""lang-js prettyprint-override""><code>$.ajax({         type: ""POST"",         url: ""write.py"",         data: { text: xmlDoc,name: name}}); </code></pre>  <p><strong>xmlDoc</strong> is a string that has an xml document.</p>  <p><strong>name</strong> is a variable that has the name of the file for the python function.</p>  <p>So my question is, what am I missing to call <code>write.py</code> from my js file or how to call it if this approach is wrong?</p>"	2020-01-07 18:22:23.067 UTC	59634141	"<p>You can't send a POST http request to run a python script. </p>  <p>You need to have the python script running on a server, that is able to take restful API calls, to run the script and return a value.</p>  <p>For example, you can run a small flask app that takes in your POST route, which runs a script and returns the value of the script back to the client that accessed the POST route.</p>"			2020-01-07 18:31:31.693 UTC
59651013	javascript|python|arrays|dictionary	Python - Extracting elements from an array similar to JavaScript ES6 Destructuring	"<p>With JavaScript ES6 syntax I can to set variables from array:</p>  <pre><code>const [first, second] = names;   console.log(first, second); // 'Luke' 'Eva'   </code></pre>  <p>Does python have a similar syntax? </p>"	2020-01-08 17:30:35.27 UTC	59651080	"<p>Yes, you can unpack lists like so:</p>  <pre><code>myList = [1, 2, 3] a, b, c = myList print(a) # 1 print(b) # 2 print(c) # 3 </code></pre>  <p>Also, in javascript you can do the following:</p>  <pre><code>// javascript: let myArray = [1, 2, 3]; let [first, ...other] = myArray; console.log(first); // 1 console.log(other); // [2, 3] </code></pre>  <p>Which is also achievable in Python:</p>  <pre><code>myList = [1, 2, 3] first, *other = myList print(first) # 1 print(other) # [2, 3] </code></pre>  <p>The following is also possible:</p>  <pre><code>myList = [1, 2, 3, 4, 5] a, *other, last = myList print(a)      # 1 print(other)  # [2, 3, 4] print(last)   # 5 </code></pre>  <p>It also works on tuples, though note that when unpacking tuples with the <code>*</code> operator, the result is a list:</p>  <pre><code>a, b, *other = (1, 2, 3, 4, 5) print(a)     # 1 print(b)     # 2 print(other) # [3, 4, 5] </code></pre>"			2020-01-08 17:35:28.267 UTC
59694441	javascript|python|web-scraping	Scraping webpage with Javascripts functions using Python	"<p>I need to retrieve some information from a webpage. The page is like a powerpoint: several slides are shown one by one. To move from one slide to another you have to press a button that runs a js function ""<em>load_image_btn('plus')</em>"" which change the image. The URL is exactly the same, and the HTML code only changes de URL of the img ""<em>someurl/546</em>"".</p>  <p>Is there any way to execute that function from python iteratively so I can get all the images?</p>"	2020-01-11 12:34:49.517 UTC	59694520	"<p>One generic way to cope with Javascript-induced problems is to use a headless browser to fully execute each page and then scrape from there. </p>  <p>For my last similar project I used a service that provides instances of headless webbrowsers that can be controlled via API, namely <a href=""https://scrapinghub.com/splash"" rel=""nofollow noreferrer"">https://scrapinghub.com/splash</a>.</p>  <p>But I am sure there are many alternatives.</p>"			2020-01-11 12:47:23.807 UTC
59695665	python|selenium|web-crawler|selenium-chromedriver	python data crawling using chromedriver : javascript void(0)	"<p>I am trying to click this login button using chrome driver. it does not return errors, but the button wasn't clicked and everytime I run the code, I see a little sign on the left of the webpage saying, ' javascript:void(0); '. </p>  <p>Here is my code. Thanks in advance!</p>  <pre><code>import os from selenium import webdriver from selenium.webdriver.support.ui import WebDriverWait from selenium.webdriver.support import expected_conditions as EC  from selenium.webdriver.common.by import By  driver = webdriver.Chrome(executable_path=""/Users/XXX/Documents/chromedriver"") driver.get('https://www.hometax.go.kr/websquare/websquare.html?w2xPath=/ui/pp/index.xml') driver.implicitly_wait(3)  driver.find_element_by_xpath(     '//*[@class=""w2group ""]'     ).click() </code></pre>  <p><a href=""https://i.stack.imgur.com/m64kQ.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/m64kQ.png"" alt=""""></a></p>  <p><a href=""https://i.stack.imgur.com/1gkwm.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/1gkwm.png"" alt=""enter image description here""></a></p>"	2020-01-11 15:11:26.263 UTC	59704630	"<p>Please try,</p>  <pre><code>from selenium import webdriver from selenium.webdriver.support.ui import WebDriverWait from selenium.webdriver.support import expected_conditions as EC from selenium.webdriver.common.by import By   driver = webdriver.Chrome(executable_path=""YOUR_CHROMEDRIVER_PATH"") driver.get('https://www.hometax.go.kr/websquare/websquare.html?w2xPath=/ui/pp/index.xml')  TARGET = 'textbox81212912'  # driver.find_element_by_id(""textbox81212912"").click()  element = WebDriverWait(driver, 30).until(     EC.presence_of_element_located((By.ID, TARGET)) ) element.click()  input() # wait </code></pre>  <p>First, you are seleting the wrong object, by <code>//*[@class=""w2group ""]</code> this XPath means the first of all objects with the class attribute ""w2group"" for that page is selected.  </p>  <p>Also, the id of ""로그인"" element is : ""textbox81212912""<br> <a href=""https://i.stack.imgur.com/ssMS9.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/ssMS9.png"" alt=""enter image description here""></a></p>  <p>Second, use explicitly wait for target element than implicitly wait. This is helpful to prevent unexpected errors like: page load error due to network speed, etc...</p>"			2020-01-12 14:08:27.533 UTC
59705269	javascript|python	Python: Flask passing values to javascript	"<p>So basically I'm doing google map and I need to add some markers, to do that I need to pass some values I did some research but many of them are executed by pressing a button, I'm really green on Javascript. My python code:</p>  <pre><code>@app.route('/&lt;api_key&gt;') def main_screen2(api_key=None):     try:         api_key = api_key or 'None'         Reach_sr = Back_End()         Reach_sr.GetCameras_Info(api_key)         camera2_title = 'TESTTTaaaazzz'         camera2_lat = 15.737769         camera2_log = 40.25693         return render_template('MAIN_index.html', camera2_title=camera2_title, camera2_lat=camera2_lat, camera2_log=camera2_log )     except Exception as error:         print(error)  </code></pre>  <p>And the Javascript code:</p>  <pre><code>function myFunction() {   var camera2_log = parseFloat(""{{ camera2_log }}"")   var camera2_lat = parseFloat(""{{ camera2_lat }}"") }  myFunction()  marker2 = new google.maps.Marker({   map: map,   draggable: false,   title: '{{camera2_title}}',   icon: ""https://developers.google.com/maps/documentation/javascript/examples/full/images/info-i_maps.png"",   animation: google.maps.Animation.DROP,   position: {lat: camera2_lat, lng: camera2_log} }); </code></pre>  <p>The title fits the name correctly, but I have no idea how to also add numbers</p>"	2020-01-12 15:24:46.683 UTC	59706363	"<p>I made a solution to pass a value in a string for example - ""5"" In the Javascript i did this:</p>  <pre><code>var X1= parseFloat(""{{X1_frompython}}"", 10); var X2= parseFloat(""{{X2_frompython}}"", 10); </code></pre>  <p>This will convert a string into a float, and to access it use - X1, X2</p>"			2020-01-12 17:28:06.407 UTC
59705269	javascript|python	Python: Flask passing values to javascript	"<p>So basically I'm doing google map and I need to add some markers, to do that I need to pass some values I did some research but many of them are executed by pressing a button, I'm really green on Javascript. My python code:</p>  <pre><code>@app.route('/&lt;api_key&gt;') def main_screen2(api_key=None):     try:         api_key = api_key or 'None'         Reach_sr = Back_End()         Reach_sr.GetCameras_Info(api_key)         camera2_title = 'TESTTTaaaazzz'         camera2_lat = 15.737769         camera2_log = 40.25693         return render_template('MAIN_index.html', camera2_title=camera2_title, camera2_lat=camera2_lat, camera2_log=camera2_log )     except Exception as error:         print(error)  </code></pre>  <p>And the Javascript code:</p>  <pre><code>function myFunction() {   var camera2_log = parseFloat(""{{ camera2_log }}"")   var camera2_lat = parseFloat(""{{ camera2_lat }}"") }  myFunction()  marker2 = new google.maps.Marker({   map: map,   draggable: false,   title: '{{camera2_title}}',   icon: ""https://developers.google.com/maps/documentation/javascript/examples/full/images/info-i_maps.png"",   animation: google.maps.Animation.DROP,   position: {lat: camera2_lat, lng: camera2_log} }); </code></pre>  <p>The title fits the name correctly, but I have no idea how to also add numbers</p>"	2020-01-12 15:24:46.683 UTC	59707054	"<p>Surround your variables in double curly brackets so Jinja2 knows to fill them in using the variables passed to render_template, e.g.</p>  <pre><code>position: {lat: {{ camera2_lat }}, lng: {{ camera2_log }}} </code></pre>"			2020-01-12 18:47:48.89 UTC
59735338	python|selenium|web-scraping|beautifulsoup|python-requests	How can I scrape career path job titles from this javascript page using Python	"<p>How can I scrape career path job titles from this javascript page using Python?</p>  <p>'<a href=""https://www.dice.com/career-paths?title=PHP%2BDeveloper&amp;location=San%2BDiego,%2BCalifornia,%2BUs,%2BCA&amp;experience=0&amp;sortBy=mostProbableTransition"" rel=""nofollow noreferrer"">https://www.dice.com/career-paths?title=PHP%2BDeveloper&amp;location=San%2BDiego,%2BCalifornia,%2BUs,%2BCA&amp;experience=0&amp;sortBy=mostProbableTransition</a>'</p>  <p>This is my code snippet, the returned soup doesn't have any the text data I need!</p>  <pre class=""lang-py prettyprint-override""><code>import requests from bs4 import BeautifulSoup import json import re from selenium import webdriver from selenium.webdriver.firefox.firefox_binary import FirefoxBinary from selenium.webdriver.common.keys import Keys from selenium.webdriver.common.by import By from selenium.webdriver.support.wait import WebDriverWait from selenium.webdriver.support import expected_conditions as EC   # get BeautifulSoup object def get_soup(url):     """"""     This function returns the BeautifulSoup object.      Parameters:         url: the link to get soup object for      Returns:         soup: BeautifulSoup object     """"""     req = requests.get(url)     soup = BeautifulSoup(req.text, 'html.parser')     return soup  # get selenium driver object def get_selenium_driver():     """"""     This function returns the selenium driver object.      Parameters:         None      Returns:         driver: selenium driver object     """"""     options = webdriver.FirefoxOptions()     options.add_argument('-headless')      driver = webdriver.Firefox(executable_path=r""geckodriver"", firefox_options = options)      return driver  # get soup obj using selenium def get_soup_using_selenium(url):     """"""     Given the url of a page, this function returns the soup object.      Parameters:         url: the link to get soup object for      Returns:         soup: soup object     """"""     options = webdriver.FirefoxOptions()     options.add_argument('-headless')      driver = webdriver.Firefox(executable_path=r""geckodriver"", firefox_options = options)     driver.get(url)     driver.implicitly_wait(3)      html = driver.page_source     soup = BeautifulSoup(html, 'html.parser')      driver.close()      return soup     title = ""PHP%2BDeveloper"" location = ""San%2BDiego,%2BCalifornia,%2BUs,%2BCA"" years_of_experirence = ""0"" sort_by_filter = ""mostProbableTransition""  url = ""https://www.dice.com/career-paths?title={}&amp;location={}&amp;experience={}&amp;sortBy={}"".format(title, location, years_of_experirence , sort_by_filter) career_paths_page_soup = get_soup(url)  </code></pre>"	2020-01-14 14:02:28.557 UTC	59738170	"<p>Like another user has mentioned in the comments, <code>requests</code> won't work for you here. But, using Selenium, you can scrape the page contents using <code>WebDriverWait</code> to ensure all page content had loaded, and <code>element.text</code> to fetch the web page content.</p>  <p>The following code snippet will print the career path strings on the left side of the page:</p>  <pre><code>from selenium import webdriver from selenium.webdriver.firefox.firefox_binary import FirefoxBinary from selenium.webdriver.common.keys import Keys from selenium.webdriver.common.by import By from selenium.webdriver.support.wait import WebDriverWait from selenium.webdriver.support import expected_conditions as EC  # navigate to the page driver = get_selenium_driver() driver.get(url)  # wait for loading indicator to be hidden WebDriverWait(driver, 10).until(EC.invisibility_of_element((By.XPATH, ""//*[contains(text(), 'Loading data')]"")))  # wait for content to load career_path_elements = WebDriverWait(driver, 10).until(EC.presence_of_all_elements_located((By.XPATH, ""//div[@class='abcd']/ul/li"")))  # print out career paths for element in career_path_elements:      # get title attribute that usually contains career path text     title = element.get_attribute(""title"")      # sometimes career path is in span below this element     if not title:          # find the element and print its text         span_element = element.find_element_by_xpath(""span[not(contains(@class, 'currentJobHead'))]"")         print(span_element.text)     # print title in other cases     else:         print(title) </code></pre>  <p>This prints the following:</p>  <pre><code>PHP Developer Drupal Developer Web Developer Full Stack Developer Back-End Developer Full Stack PHP Developer IT Director Software Development Manager </code></pre>  <p>There are a few items of interest here. The main one being the Javascript loading on this page -- upon first opening the page, a ""Loading data..."" indicator appears. We must wait on <code>EC.invisibility_of_element</code> for this item to ensure it has disappeared before we attempt to locate any page content.</p>  <p>After that, we invoke <code>WebDriverWait</code> once again, but this time on the ""Career path"" elements on the right hand side of the page. This <code>WebDriverWait</code> call returns a list of elements, stored in <code>career_path_elements</code>. We can loop through this list of elements to print the career path of each item.</p>  <p>Each career path element contains the career path text in the <code>title</code> attribute, so we call <code>element.get_attribute(""title"")</code> to fetch that text. However, there is a special case for the 'Current Job Title' item where the career path text is contained in a <code>span</code> one level lower. We handle cases where <code>title</code> is empty by calling <code>element.find_element_by_xpath()</code> to locate the <code>span</code> instead. This ensures we can print every career path item on the page.</p>"			2020-01-14 16:40:04.57 UTC
59780416	python	"How do I create a custom file format on Windows, with the interpreter being in, say, JavaScript, or Python?"	"<p>I would like to try to interpret it like a .json file for some user generated content for my game. I'm not a perfect coder, so yeah. I've tried looking it up online, and on MS Docs, but the Docs are about stuff like C++. I have a .py file, and I've used open() to open it. But how can I export it into an object?</p>"	2020-01-17 02:28:38.11 UTC	59780602	"<p>You mention ""like a .json file"", so if you chose to store your content in valid JSON format, you could <a href=""https://docs.python.org/3/tutorial/inputoutput.html#reading-and-writing-files"" rel=""nofollow noreferrer"">read the file into Python</a> and then <a href=""https://docs.python.org/3/library/json.html"" rel=""nofollow noreferrer"">parse the JSON</a> to get the data into Python objects.</p>  <p>Otherwise, file extensions are all convention anyway, so you could create a file with whatever contents you want, call it <code>gamefiles.datastore</code>, and then read it into Python and parse it with a parser (that you would have to write for your custom data storage solution).</p>"			2020-01-17 02:58:10.23 UTC
59833005	javascript|python|json	"JSON from python json.dumps to javascript JSON.parse() with escaped \"""	"<p>I have been fighting with this problem for a few weeks now and still cannot understand what's wrong here. I created a dictionary in python <code>dic</code>. Then I am using dumps to convert it to a valid json.</p>  <pre><code>json_js = json.dumps(dic) # works fine, a valid json from the python's viewpoint # the reverse operation works fine also dic = json.loads(json_js) </code></pre>  <pre><code>print(json_js) ============== {""p0"": {""pf"": {""id"": ""pf1"", ""class"": [""pf"", ""w0"", ""h0""], ""data-page-no"": ""1""}, ""pc"": {""class"": [""pc"", ""pc1"", ""w0"", ""h0""]}, ""img"": [""&lt;img alt=\""\"" clas </code></pre>  <p>This json_js I use later on to add it to a js script that applies <code>JSON.parse()</code> on it. And this is the error that I get.</p>  <pre><code>SyntaxError: JSON.parse: expected ',' or ']' after array element at line 1 column 143 of the JSON data </code></pre>  <p>That 143 character is the first <code>\""</code>. But why can't js figure it as a valid JSON I cannot comprehend. Would you have any suggestions what might have gone wrong here?</p>  <p>EDIT. No idea why people close my question. The desired behaviour is that <code>JSON.parse</code> doesn't throw any errors. The way how I added it to a script is irrelevant for the question. Please, have a look at the part of the source code inside html .</p>  <pre><code>const str = `{""p0"": {""pf"": {""id"": ""pf1f"", ""class"": [""pf"", ""w2"", ""h2""], ""data-page-no"": ""1f""}, ""pc"": {""class"": [""pc"", ""pc1f"", ""w2"", ""h2""]}, ""img"": [""&lt;img alt=\""\"" class=\""bi x0 y0 w1 h1\""` // this string is several megabytes so I only put the first 150 or so characters here. var dic = JSON.parse(str); </code></pre>  <p>EDIT 2. The full transformation.</p>  <pre><code># in python using BeautifulSoup for scripts and new_html new_html = bs() dom = bs() scripts = [dom.new_tag('script')] scripts[0].string = html_script(json_js) # html_script is a ""string... %s"" %json_js new_html.body.append(scripts[0]) with open('stuff.html','w',encoding='utf-8') as f:          f.write(str(new_html)) </code></pre>"	2020-01-21 01:27:17.827 UTC	59834528	"<p>In order to put a string of JSON into JavaScript source code, you used backticks to make it a template string. That’s not enough, though, since many sequences have special meaning inside backticks:</p>  <ul> <li><code>${…}</code> interpolation</li> <li>backslash escape sequences (the current problem, which converted the <code>\""</code> in the JSON to <code>""</code>)</li> <li>backticks</li> </ul>  <p>Embedding literals in JavaScript in HTML <code>&lt;script&gt;</code>s isn’t really trivial, but you can do it by JSON-encoding the JSON, which results in a string that’s <em>almost</em> ready to embed except for:</p>  <ul> <li>exiting the script element with <code>&lt;/script&gt;</code><sub><em>i</em></sub></li> <li>changing the parsing mode with <code>&lt;!--</code></li> <li>creating a poorly-formed JavaScript string literal <a href=""https://github.com/tc39/proposal-json-superset"" rel=""nofollow noreferrer"">(for now)</a> with U+2028 or U+2029</li> </ul>  <p>which can be avoided by escaping all <code>&lt;</code>s, U+2028, and U+2029.</p>  <p>In all:</p>  <pre class=""lang-py prettyprint-override""><code>def script_embeddable_json(value):     return (         json.dumps(json.dumps(value))         .replace(""&lt;"", ""\\u003c"")         .replace(""\u2028"", ""\\u2028"")         .replace(""\u2029"", ""\\u2029""))   json_js = script_embeddable_json(dic) </code></pre>  <p>Then the template should look like <code>const str = %s</code>.</p>"			2020-01-21 05:13:02.56 UTC
59868967	javascript|python	Is it possible to send data from a JavaScript browser app to a local python server directly?	"<p>As the question suggests I'm trying to find a way using JavaScript to send some data to a local python server. I know that using javascript. I know that browser JS can't import any libraries via ""Require"". Does anyone know of a method using JS on its own?</p>"	2020-01-22 22:08:55.22 UTC	59868982	"<p>Yes.</p>  <p>Make your <a href=""https://pypi.org/project/Flask/"" rel=""nofollow noreferrer"">Python app listen for HTTP requests</a>, and then use the <a href=""https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch"" rel=""nofollow noreferrer"">Fetch API</a> from JavaScript.</p>"			2020-01-22 22:10:16.81 UTC
59870098	python|scrapy	How to solve JavaScript redirect issue on Python Scrapy?	"<p>I am fairly new to scrapy and following docs to scrape info on <a href=""https://pbejobbers.com/abrasives"" rel=""nofollow noreferrer"">https://pbejobbers.com/abrasives</a> using my script:</p>  <pre><code>import scrapy   class CrwSpider(scrapy.Spider):     name = ""Otim""      def start_requests(self):         urls = [             'https://pbejobbers.com/abrasives'         ]         for url in urls:             yield scrapy.Request(url=url, callback=self.parse)      def parse(self, response):         pattern = r'document\.location\.href=\""(:?.*)=1\"";'         url = response.css('script::text').re_first(pattern)         print (url)         page = response.url.split(""/"")[-2]         filename = 'quotes-%s.html' % page         with open(filename, 'wb') as f:             f.write(response.body)         self.log('Saved file %s' % filename)          next_page = url+'=1'         if next_page is not None:             next_page = response.urljoin(next_page)             yield scrapy.Request(next_page, callback=self.parse) </code></pre>  <p>When I run the crawler, instead of getting actual page, I am getting this javascript:</p>  <pre><code>&lt;html&gt;   &lt;body&gt;     &lt;script type=""text/javascript"" src=""/aes.min.js""&gt;&lt;/script&gt;     &lt;script&gt;       function toNumbers(d) {         var e = [];         d.replace(/(..)/g, function(d) {           e.push(parseInt(d, 16));         });         return e;       }       function toHex() {         for (           var d = [],             d =               1 == arguments.length &amp;&amp; arguments[0].constructor == Array                 ? arguments[0]                 : arguments,             e = """",             f = 0;           f &lt; d.length;           f++         )           e += (16 &gt; d[f] ? ""0"" : """") + d[f].toString(16);         return e.toLowerCase();       }       var a = toNumbers(""de50860916c188904e9c359aaaf4f248""),         b = toNumbers(""a944ac1efe048739325d92e58868ffa1""),         c = toNumbers(""34d8ed644eb63ddaafeb01607ce6b6ce"");       document.cookie =         ""OCXS="" +         toHex(slowAES.decrypt(c, 2, a, b)) +         ""; expires=Thu, 31-Dec-37 23:55:55 GMT; path=/"";       document.location.href =         ""http://pbejobbers.com/abrasives?81e93addddb02a10cd0652f09370ae96=2"";     &lt;/script&gt;   &lt;/body&gt; &lt;/html&gt; </code></pre>  <p>The actual page consist of list of product cards. I noticed that <code>document.location.href</code> has a new url. So I grabbed it using regular expression and tried to feed it back to crawler as new URL to parse but then I get same result with <code>=2</code>ending URL. I cant seem to get to actual page.</p>  <p>How can I get the redirect URL and use it? I am really stuck. </p>"	2020-01-23 00:27:09.19 UTC	59874555	"<p>You cannot go to next page using Scrapy. As when you disable JavaScript from inspection tools, Next button stops working. Scrapy cannot render JavaScript. You have to use Selenium to scrape this page.</p>"			2020-01-23 08:49:41.923 UTC
59888438	javascript|python-3.x|python-requests-html	Can't run JavaScript using requests-html library on python	"<p>I need to pull out some information from some links that contain some javascript code. I know how to do it with Selenium, but it takes a lot of time and I need more efficient way to pull this off.</p>  <p>I cam across the requests-html library and it looks quite robust way for my purposes, but unfortunately it doesn't look like I'm able to run the javascript with it.</p>  <p>I read the documentation from the following link <a href=""https://requests-html.readthedocs.io/en/latest/"" rel=""nofollow noreferrer"">https://requests-html.readthedocs.io/en/latest/</a></p>  <p>And tried the following code:</p>  <pre><code>from requests_html import HTMLSession,HTML from bs4 import BeautifulSoup  session = HTMLSession() resp = session.get(""https://drive.google.com/file/d/1rZ-DhTFPCen6DvJXlNl3Bxuwj4-ULwoa/view"")  resp.html.render()  soup = BeautifulSoup(resp.html.html, 'lxml')  email = soup.find_all('img', {'class':'ndfHFb-c4YZDc-MZArnb-BA389-YLEF4c'}) print(email) </code></pre>  <p>I get no results after running this code, even though the class exists if I open the link from my browser.</p>  <p>I've also tried using headers with my requests with no help. I tried the same code (with different html tag, of course) for another link (<a href=""https://web.archive.org/web/"" rel=""nofollow noreferrer"">https://web.archive.org/web/</a>*/stackoverflow.com) but I get some html text including a response that says that my browser must support javascript. My code for this part:</p>  <pre><code>from requests_html import HTMLSession from bs4 import BeautifulSoup  session = HTMLSession() resp = session.get(""https://web.archive.org/web/*/stackoverflow.com"")  resp.html.render()  soup = BeautifulSoup(resp.html.html, 'lxml')   print(soup) </code></pre>  <p>The response I get:</p>  <pre><code>&lt;div class=""no-script-message""&gt;         The Wayback Machine requires your browser to support JavaScript, please email &lt;a href=""mailto:info@archive.org""&gt;info@archive.org&lt;/a&gt;&lt;br/&gt;if you have any questions about this.       &lt;/div&gt; </code></pre>  <p>Any help would be appreciated. Thanks!</p>"	2020-01-23 23:22:19.907 UTC	68770756	"<p>This should work on the site. But as you mentioned the code worked for the StackOverflow but did not work for the other URL? is it because the server might not respond or the tag that you are looking for may not be available at that time. but anyway the <a href=""https://www.alixaprodev.com/2021/02/how-to-use-requests-html-library-in-python.html.html"" rel=""nofollow noreferrer"">requests-HTML</a> should have given you an error.</p> <p>I was about to check your problem and add it to my blog post <a href=""https://www.alixaprodev.com/2021/02/how-to-use-requests-html-library-in-python.html.html"" rel=""nofollow noreferrer"">How to use Requests-HTML</a>but unfortunately, the link you provided is not working.</p>"			2021-08-13 10:32:06.627 UTC
59888438	javascript|python-3.x|python-requests-html	Can't run JavaScript using requests-html library on python	"<p>I need to pull out some information from some links that contain some javascript code. I know how to do it with Selenium, but it takes a lot of time and I need more efficient way to pull this off.</p>  <p>I cam across the requests-html library and it looks quite robust way for my purposes, but unfortunately it doesn't look like I'm able to run the javascript with it.</p>  <p>I read the documentation from the following link <a href=""https://requests-html.readthedocs.io/en/latest/"" rel=""nofollow noreferrer"">https://requests-html.readthedocs.io/en/latest/</a></p>  <p>And tried the following code:</p>  <pre><code>from requests_html import HTMLSession,HTML from bs4 import BeautifulSoup  session = HTMLSession() resp = session.get(""https://drive.google.com/file/d/1rZ-DhTFPCen6DvJXlNl3Bxuwj4-ULwoa/view"")  resp.html.render()  soup = BeautifulSoup(resp.html.html, 'lxml')  email = soup.find_all('img', {'class':'ndfHFb-c4YZDc-MZArnb-BA389-YLEF4c'}) print(email) </code></pre>  <p>I get no results after running this code, even though the class exists if I open the link from my browser.</p>  <p>I've also tried using headers with my requests with no help. I tried the same code (with different html tag, of course) for another link (<a href=""https://web.archive.org/web/"" rel=""nofollow noreferrer"">https://web.archive.org/web/</a>*/stackoverflow.com) but I get some html text including a response that says that my browser must support javascript. My code for this part:</p>  <pre><code>from requests_html import HTMLSession from bs4 import BeautifulSoup  session = HTMLSession() resp = session.get(""https://web.archive.org/web/*/stackoverflow.com"")  resp.html.render()  soup = BeautifulSoup(resp.html.html, 'lxml')   print(soup) </code></pre>  <p>The response I get:</p>  <pre><code>&lt;div class=""no-script-message""&gt;         The Wayback Machine requires your browser to support JavaScript, please email &lt;a href=""mailto:info@archive.org""&gt;info@archive.org&lt;/a&gt;&lt;br/&gt;if you have any questions about this.       &lt;/div&gt; </code></pre>  <p>Any help would be appreciated. Thanks!</p>"	2020-01-23 23:22:19.907 UTC	70447539	"<p>In render, add sleep parameter</p> <pre><code>resp.html.render(sleep=2) </code></pre>"			2021-12-22 10:24:06.833 UTC
59897675	javascript|python|serialization	How to serialise a Python dictionary to a JavaScript object text?	"<p>Can someone suggest a way to serialise a Python dictionary to JavaScript source code describing an equivalent object?</p>  <p>Note that this is different from JSON serialisation.  In particular, the following example is important to me:</p>  <pre><code>x = { True: 1, False: 0 } </code></pre>  <p>Serialising this with <code>json.dumps(x)</code> results in:</p>  <pre><code>{ ""true"": 1, ""false"": 0 } </code></pre>  <p>What I want is:</p>  <pre><code>{ true: 1, false: 0 } </code></pre>  <p>This is a valid object declaration in JavaScript but is not valid JSON.  Similar problems occur when using any non-string type as a dictionary key.</p>"	2020-01-24 13:44:59.027 UTC	59898433	"<p>In javascript object keys can only be strings or <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol"" rel=""nofollow noreferrer"">Symbols</a></p>  <p>You can access the object properties with true/false because javascript convert them to strings, you can see that they are actually string with:</p>  <pre><code>var x = { true: 1, false: 0 } console.log(Object.keys(x)) // [""true"", ""false""] </code></pre>"			2020-01-24 14:29:40.557 UTC
59960144	javascript|python|json|utf-8	Sending JSON obj with Japanese characters from Python to Javascript	"<p>I have a Python3 function that when called will return a json object which looks like this:</p>  <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-html lang-html prettyprint-override""><code>finished python tags look like this: {'tags': {'releaseArtist': ['Shuichi Murakami', 'Nobu Caine', 'Electro Keyboard Orchestra', 'Mash', 'Loser', 'Ponta Box', 'Mobo Band', 'JOQR DJ Girls', 'Miro Takebi Trio', 'Nobu-Zans', '7 Seven', 'Ponta Unit'], 'releaseInfo': ['Welcome To My Life', '1998', 'Japan', 'JVC', 'Jazz'], 'tracklist': ['Jaco Pastorius Medley = ジャコ・パトリアス・メドレー', 'I Want You Back = アイ・ウォント・ユー・バック', 'Travelling = トラベリング', 'Ive Got You Under My Skin = アイヴ・ガット・ユー・アンダー・マイ・スキン', '青い山脈', 'Oh! Darling = オー！ ダーリン', 'Jane Birkin Medley = ジェーン・バーキン・メドレー', '津軽 ～ 南部俵積み唄', 'It Might As Well Stay Monday From Now On = 月曜はブルーな日', 'Time Is On My Side = タイム・イズ・オン・マイ・サイド', 'We Can Talk = ウィ・キャン・トーク', 'Left Alone = レフト・ア ローン', 'ヨイトマケの唄', 'Mambo No. 5 = マンボ・ナンバー5', '(The White Room ～ Sunshine Of Your Love) ～ Knockin On Heavens Door = 天国への扉', 'Welcome To My Rhythm [こんなオイラに誰がした] ～ 嵐を呼ぶ男'], 'combinations': ['Welcome To My Life 1998', 'Shuichi Murakam i 1998', 'Shuichi Murakami Welcome To My Life', 'Shuichi Murakami Welcome To My Life 1998']}} json data =  {'tags': {'releaseArtist': ['Shuichi Murakami', 'Nobu Caine', 'Electro Keyboard Orchestra', 'Mash', 'Loser', 'Ponta Box', 'Mobo Band', 'JOQR DJ Girls', 'Miro Takebi Trio', 'Nobu-Zans', '7 Seven', 'Ponta Unit'], 'releaseInfo': ['Welcome To My Life', '1998', 'Japan', 'JVC', 'Jazz'], 'tracklist': ['Jaco Pastorius Medley = ジャコ・パトリアス・メドレー', 'I Want You Back = アイ・ウォント・ユー・バック', 'Travelling = トラベリング', 'Ive Got You Under My Skin = アイヴ・ガット・ユー・アンダー・マイ・スキン', '青い山脈', 'Oh! Darli ng = オー！ ダーリン', 'Jane Birkin Medley = ジェーン・バーキン・メドレー', '津軽 ～ 南部俵積み唄', 'It Might As Well Stay Monday From Now On = 月曜はブルーな日', 'Time Is On My Side = タイム・イズ・オン・マイ・サイド', 'We Can Talk = ウィ・キャン・トーク', 'Left Alone =  レフト・アローン', 'ヨイトマケの唄', 'Mambo No. 5 = マンボ・ナンバー5', '(The White Room ～ Sunshine Of Your Love) ～ Knockin On Heavens Door = 天国への扉', 'Welcome To My Rhythm [こんなオイラに誰がした] ～ 嵐を呼ぶ男'], 'combinations': ['Welcome To My Life 1998', 'Shui chi Murakami 1998', 'Shuichi Murakami Welcome To My Life', 'Shuichi Murakami Welcome To My Life 1998']}}</code></pre> </div> </div> </p>  <p>my Python functionr returns the JSON like this:</p>  <pre><code>#format tags tags = {} tags[""releaseArtist""] = artistsTags  tags[""releaseInfo""] = releaseInfoTags tags[""tracklist""] = tracklistTags tags[""combinations""] = combinationsTags data = {} data[""tags""] = tags print('finished python tags look like:') print(data) return data </code></pre>  <p>My javascript in an html file receives the tags json data structure like this:</p>  <pre><code>            console.log(""ajax request to /my-ajax-test/ was a success !"")             console.log(""response = "", response)                                 //encoded output             console.log(""JSON.stringify(response) = "", JSON.stringify(response)) //encoded output             //console.log(""JSON.loads(response) = "", JSON.loads(response))       //no json.loads function             console.log(""JSON.parse(response) = "", JSON.parse(response))         //encoded output </code></pre>  <p>When I print the received json data; all the Japanese characters get encoded like <code>\u9752\u3044\u5c71\u8108</code>:</p>  <pre><code>response =  {""tags"": {""releaseArtist"": [""Shuichi Murakami"", ""Nobu Caine"", ""Electro Keyboard Orchestra"", ""Mash"", ""Loser"", ""Ponta Box"", ""Mobo Band"", ""JOQR DJ Girls"", ""Miro Takebi Trio"", ""Nobu-Zans"", ""7 Seven"", ""Ponta Unit""], ""releaseInfo"": [""Welcome To My Life"", ""1998"", ""Japan"", ""JVC"", ""Jazz""], ""tracklist"": [""Jaco Pastorius Medley = \u30b8\u30e3\u30b3\u30fb\u30d1\u30c8\u30ea\u30a2\u30b9\u30fb\u30e1\u30c9\u30ec\u30fc"", ""I Want You Back = \u30a2\u30a4\u30fb\u30a6\u30a9\u30f3\u30c8\u30fb\u30e6\u30fc\u30fb\u30d0\u30c3\u30af"", ""Travelling = \u30c8\u30e9\u30d9\u30ea\u30f3\u30b0"", ""Ive Got You Under My Skin = \u30a2\u30a4\u30f4\u30fb\u30ac\u30c3\u30c8\u30fb\u30e6\u30fc\u30fb\u30a2\u30f3\u30c0\u30fc\u30fb\u30de\u30a4\u30fb\u30b9\u30ad\u30f3"", ""\u9752\u3044\u5c71\u8108"", ""Oh! Darling = \u30aa\u30fc\uff01 \u30c0\u30fc\u30ea\u30f3"", ""Jane Birkin Medley = \u30b8\u30a7\u30fc\u30f3\u30fb\u30d0\u30fc\u30ad\u30f3\u30fb\u30e1\u30c9\u30ec\u30fc"", ""\u6d25\u8efd \uff5e \u5357\u90e8\u4ff5\u7a4d\u307f\u5504"", ""It Might As Well Stay Monday From Now On = \u6708\u66dc\u306f\u30d6\u30eb\u30fc\u306a\u65e5"", ""Time Is On My Side = \u30bf\u30a4\u30e0\u30fb\u30a4\u30ba\u30fb\u30aa\u30f3\u30fb\u30de\u30a4\u30fb\u30b5\u30a4\u30c9"", ""We Can Talk = \u30a6\u30a3\u30fb\u30ad\u30e3\u30f3\u30fb\u30c8\u30fc\u30af"", ""Left Alone = \u30ec\u30d5\u30c8\u30fb\u30a2\u30ed\u30fc\u30f3"", ""\u30e8\u30a4\u30c8\u30de\u30b1\u306e\u5504"", ""Mambo No. 5 = \u30de\u30f3\u30dc\u30fb\u30ca\u30f3\u30d0\u30fc5"", ""(The White Room \uff5e Sunshine Of Your Love) \uff5e Knockin On Heavens Door = \u5929\u56fd\u3078\u306e\u6249"", ""Welcome To My Rhythm [\u3053\u3093\u306a\u30aa\u30a4\u30e9\u306b\u8ab0\u304c\u3057\u305f] \uff5e \u5d50\u3092\u547c\u3076\u7537""], ""combinations"": [""Welcome To My Life 1998"", ""Shuichi Murakami 1998"", ""Shuichi Murakami Welcome To My Life"", ""Shuichi Murakami Welcome To My Life 1998""]}} </code></pre>  <p>So the json data is fine when its in Python, but once it reaches javascript it encodes complex chars, and my attempts to decode it with json.parse / json.loads / json.stringify havent been successfull. Is there a way to ensure that my Javascript always has the same chars as in Python? (For languages with chars like Japan, Middle Eastern, etc...)</p>"	2020-01-29 03:32:08.25 UTC	59960336	<p>fixed with</p>  <pre><code>resolve(JSON.parse(response)) </code></pre>			2020-01-29 04:04:40.787 UTC
59960144	javascript|python|json|utf-8	Sending JSON obj with Japanese characters from Python to Javascript	"<p>I have a Python3 function that when called will return a json object which looks like this:</p>  <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-html lang-html prettyprint-override""><code>finished python tags look like this: {'tags': {'releaseArtist': ['Shuichi Murakami', 'Nobu Caine', 'Electro Keyboard Orchestra', 'Mash', 'Loser', 'Ponta Box', 'Mobo Band', 'JOQR DJ Girls', 'Miro Takebi Trio', 'Nobu-Zans', '7 Seven', 'Ponta Unit'], 'releaseInfo': ['Welcome To My Life', '1998', 'Japan', 'JVC', 'Jazz'], 'tracklist': ['Jaco Pastorius Medley = ジャコ・パトリアス・メドレー', 'I Want You Back = アイ・ウォント・ユー・バック', 'Travelling = トラベリング', 'Ive Got You Under My Skin = アイヴ・ガット・ユー・アンダー・マイ・スキン', '青い山脈', 'Oh! Darling = オー！ ダーリン', 'Jane Birkin Medley = ジェーン・バーキン・メドレー', '津軽 ～ 南部俵積み唄', 'It Might As Well Stay Monday From Now On = 月曜はブルーな日', 'Time Is On My Side = タイム・イズ・オン・マイ・サイド', 'We Can Talk = ウィ・キャン・トーク', 'Left Alone = レフト・ア ローン', 'ヨイトマケの唄', 'Mambo No. 5 = マンボ・ナンバー5', '(The White Room ～ Sunshine Of Your Love) ～ Knockin On Heavens Door = 天国への扉', 'Welcome To My Rhythm [こんなオイラに誰がした] ～ 嵐を呼ぶ男'], 'combinations': ['Welcome To My Life 1998', 'Shuichi Murakam i 1998', 'Shuichi Murakami Welcome To My Life', 'Shuichi Murakami Welcome To My Life 1998']}} json data =  {'tags': {'releaseArtist': ['Shuichi Murakami', 'Nobu Caine', 'Electro Keyboard Orchestra', 'Mash', 'Loser', 'Ponta Box', 'Mobo Band', 'JOQR DJ Girls', 'Miro Takebi Trio', 'Nobu-Zans', '7 Seven', 'Ponta Unit'], 'releaseInfo': ['Welcome To My Life', '1998', 'Japan', 'JVC', 'Jazz'], 'tracklist': ['Jaco Pastorius Medley = ジャコ・パトリアス・メドレー', 'I Want You Back = アイ・ウォント・ユー・バック', 'Travelling = トラベリング', 'Ive Got You Under My Skin = アイヴ・ガット・ユー・アンダー・マイ・スキン', '青い山脈', 'Oh! Darli ng = オー！ ダーリン', 'Jane Birkin Medley = ジェーン・バーキン・メドレー', '津軽 ～ 南部俵積み唄', 'It Might As Well Stay Monday From Now On = 月曜はブルーな日', 'Time Is On My Side = タイム・イズ・オン・マイ・サイド', 'We Can Talk = ウィ・キャン・トーク', 'Left Alone =  レフト・アローン', 'ヨイトマケの唄', 'Mambo No. 5 = マンボ・ナンバー5', '(The White Room ～ Sunshine Of Your Love) ～ Knockin On Heavens Door = 天国への扉', 'Welcome To My Rhythm [こんなオイラに誰がした] ～ 嵐を呼ぶ男'], 'combinations': ['Welcome To My Life 1998', 'Shui chi Murakami 1998', 'Shuichi Murakami Welcome To My Life', 'Shuichi Murakami Welcome To My Life 1998']}}</code></pre> </div> </div> </p>  <p>my Python functionr returns the JSON like this:</p>  <pre><code>#format tags tags = {} tags[""releaseArtist""] = artistsTags  tags[""releaseInfo""] = releaseInfoTags tags[""tracklist""] = tracklistTags tags[""combinations""] = combinationsTags data = {} data[""tags""] = tags print('finished python tags look like:') print(data) return data </code></pre>  <p>My javascript in an html file receives the tags json data structure like this:</p>  <pre><code>            console.log(""ajax request to /my-ajax-test/ was a success !"")             console.log(""response = "", response)                                 //encoded output             console.log(""JSON.stringify(response) = "", JSON.stringify(response)) //encoded output             //console.log(""JSON.loads(response) = "", JSON.loads(response))       //no json.loads function             console.log(""JSON.parse(response) = "", JSON.parse(response))         //encoded output </code></pre>  <p>When I print the received json data; all the Japanese characters get encoded like <code>\u9752\u3044\u5c71\u8108</code>:</p>  <pre><code>response =  {""tags"": {""releaseArtist"": [""Shuichi Murakami"", ""Nobu Caine"", ""Electro Keyboard Orchestra"", ""Mash"", ""Loser"", ""Ponta Box"", ""Mobo Band"", ""JOQR DJ Girls"", ""Miro Takebi Trio"", ""Nobu-Zans"", ""7 Seven"", ""Ponta Unit""], ""releaseInfo"": [""Welcome To My Life"", ""1998"", ""Japan"", ""JVC"", ""Jazz""], ""tracklist"": [""Jaco Pastorius Medley = \u30b8\u30e3\u30b3\u30fb\u30d1\u30c8\u30ea\u30a2\u30b9\u30fb\u30e1\u30c9\u30ec\u30fc"", ""I Want You Back = \u30a2\u30a4\u30fb\u30a6\u30a9\u30f3\u30c8\u30fb\u30e6\u30fc\u30fb\u30d0\u30c3\u30af"", ""Travelling = \u30c8\u30e9\u30d9\u30ea\u30f3\u30b0"", ""Ive Got You Under My Skin = \u30a2\u30a4\u30f4\u30fb\u30ac\u30c3\u30c8\u30fb\u30e6\u30fc\u30fb\u30a2\u30f3\u30c0\u30fc\u30fb\u30de\u30a4\u30fb\u30b9\u30ad\u30f3"", ""\u9752\u3044\u5c71\u8108"", ""Oh! Darling = \u30aa\u30fc\uff01 \u30c0\u30fc\u30ea\u30f3"", ""Jane Birkin Medley = \u30b8\u30a7\u30fc\u30f3\u30fb\u30d0\u30fc\u30ad\u30f3\u30fb\u30e1\u30c9\u30ec\u30fc"", ""\u6d25\u8efd \uff5e \u5357\u90e8\u4ff5\u7a4d\u307f\u5504"", ""It Might As Well Stay Monday From Now On = \u6708\u66dc\u306f\u30d6\u30eb\u30fc\u306a\u65e5"", ""Time Is On My Side = \u30bf\u30a4\u30e0\u30fb\u30a4\u30ba\u30fb\u30aa\u30f3\u30fb\u30de\u30a4\u30fb\u30b5\u30a4\u30c9"", ""We Can Talk = \u30a6\u30a3\u30fb\u30ad\u30e3\u30f3\u30fb\u30c8\u30fc\u30af"", ""Left Alone = \u30ec\u30d5\u30c8\u30fb\u30a2\u30ed\u30fc\u30f3"", ""\u30e8\u30a4\u30c8\u30de\u30b1\u306e\u5504"", ""Mambo No. 5 = \u30de\u30f3\u30dc\u30fb\u30ca\u30f3\u30d0\u30fc5"", ""(The White Room \uff5e Sunshine Of Your Love) \uff5e Knockin On Heavens Door = \u5929\u56fd\u3078\u306e\u6249"", ""Welcome To My Rhythm [\u3053\u3093\u306a\u30aa\u30a4\u30e9\u306b\u8ab0\u304c\u3057\u305f] \uff5e \u5d50\u3092\u547c\u3076\u7537""], ""combinations"": [""Welcome To My Life 1998"", ""Shuichi Murakami 1998"", ""Shuichi Murakami Welcome To My Life"", ""Shuichi Murakami Welcome To My Life 1998""]}} </code></pre>  <p>So the json data is fine when its in Python, but once it reaches javascript it encodes complex chars, and my attempts to decode it with json.parse / json.loads / json.stringify havent been successfull. Is there a way to ensure that my Javascript always has the same chars as in Python? (For languages with chars like Japan, Middle Eastern, etc...)</p>"	2020-01-29 03:32:08.25 UTC	60029975	"<p>I think this should work.</p>  <pre><code>import json  tags = {} tags[""releaseArtist""] = artistsTags  tags[""releaseInfo""] = releaseInfoTags tags[""tracklist""] = tracklistTags tags[""combinations""] = combinationsTags data = {} data[""tags""] = tags return json.dumps({'data': data, 'ensure_ascii'=False}) </code></pre>"			2020-02-02 19:52:35.267 UTC
59966826	python|django|django-models|django-templates	How can I get Javascript onSuccess response object variables in Python?	"<p><strong><em>Background:</em></strong></p>  <p>Working in a Django application, I have a template that performs an action (makes a payement) using an external API. The API call is done in Javascript.</p>  <p>On Success, the API returns a <code>response</code> object. This works well on tests.</p>  <pre><code>function makePayment(applicationAmount) {     let paymentEngine = RmPaymentEngine.init({         key: 'abcd'         firstName: '{{ user.f_name }}',         onSuccess: function(response) {             console.log('callback Successful Response', response);             // TODO: Add a function to post the payment records to the database             // response from the API contains a dictionary like (read json) object             // how can I get that response object in Python and use those response             // object values to update a django model database records         },         onError: function(response) {             console.log('callback Error Response', response);             // TODO: Add a function to throw an error message         },         onClose: function() {             console.log(""closed"");         }     }); } </code></pre>  <p><strong><em>Question:</em></strong></p>  <p>How can I get that <code>onSuccess</code> <code>response</code> object variables in Python and use those <code>response</code> object values to update a django model database records?</p>  <p>Looked at this link: <a href=""https://stackoverflow.com/questions/14220321/how-do-i-return-the-response-from-an-asynchronous-call"">How do I return the response from an asynchronous call?</a> but can't seem to implement my need.</p>  <p>I'd be happy to be directed to a simple resource that explains the procedure, not something very involved that takes hours to understand.</p>"	2020-01-29 12:10:50.45 UTC	60094602	"<p>Using ideas from @Lag11 and @Arount and a wonderful tutorial <a href=""https://www.pluralsight.com/guides/work-with-ajax-django"" rel=""nofollow noreferrer"">here</a>, I created 2 function based views, one to just serve the 'page' the other to handle the 'page post to DB'.</p>  <p>Summary, I did this in the <strong><em>template</em></strong>:</p>  <pre><code>function makePayment(applicationAmount) {     let paymentEngine = RmPaymentEngine.init({         key: 'abcd'         firstName: '{{ user.f_name }}',         onSuccess: function(response) {             console.log('callback Successful Response', response);              // start new additions              data = {                 ""payer_email"": ""{{ user.email }}"",                 ""payer_phone"": ""{{ user.phone }}"",                 ""payment_amount_total"": response.amount,             }              $.ajax({                 type: 'POST',                 url: ""{% url 'post_purchase_form' %}"",                 data: data,                 onSuccess: function (response) {                     console.log('callback db post Successful', response);                   },                 error: function (response) {                     // alert the error if any error occured                     alert(response);                 }             })             // end new additions         },         onError: function(response) {             console.log('callback Error Response', response);             // TODO: Add a function to throw an error message         },         onClose: function() {             console.log(""closed"");         }     }); } </code></pre>  <p>And this in the <strong><em>views.py</em></strong>:</p>  <pre><code>def application_form_view(request):     user = request.user     form = ApplicationForm(instance=user)      return render(request, 'application_form.html', {'form': form, 'user': user})  def post_application_form_view(request):     # request should be ajax and method should be POST.     if request.is_ajax and request.method == ""POST"":         # get the form data         form = ApplicationForm(request.POST, request.FILES)         # save the data and after fetch the object in instance         if form.is_valid():             instance = form.save()             # serialize in new FormPurchase object in json             ser_instance = serializers.serialize('json', [ instance, ])             # send to client side.             return JsonResponse({""instance"": ser_instance}, status=200)         else:             # some form errors occured.             return JsonResponse({""error"": form.errors}, status=400)      # some error occured     return JsonResponse({""error"": ""unknown errors""}, status=400) </code></pre>"			2020-02-06 12:04:25.077 UTC
59968562	javascript|python|node.js	Iterating through javascript object to see text (like python requests.text)	"<p>We're currently trying to transfer code from a Python web scraper to a Node.js web scraper. The source is the Pastebin API. When scraping, the response is a javascript object like this:</p>  <pre><code>[   {     scrape_url: 'https://scrape.pastebin.com/api_scrape_item.php?i=FD1BhNuR',     full_url: 'https://pastebin.com/FD1BhNuR',     date: '1580299104',     key: 'FD1BhNuR',     size: '19363',     expire: '0',     title: 'Weight Loss',     syntax: 'text',     user: 'loscanary'   } ] </code></pre>  <p>Our Python script uses the requests library to request data from Pastebin's API and to get access to the actual body of the paste, in addition to the parameters above, we loop through the first entry and retrieve its text value. Here is an excerpt:</p>  <pre><code>response = requests.get(""https://scrape.pastebin.com/api_scraping.php?limit=1"")  parsed_json = response.json() print(parsed_json) for individual in parsed_json:     p = requests.get(individual['scrape_url'])     text = p.text     print(text) </code></pre>  <p>This brings back the actual body of the paste(s), which we can then search through to scrape for more keywords.</p>  <p>In Node, I don't know how to retrieve the same text value of the ""scrape_url"" parameter in the same way as I can with requests.text. I've tried using axios and request but the furthest I can get is accessing the ""scrape_url"" parameter with something like this:</p>  <pre><code>const scrape = async () =&gt; {   try {     const result = await axios.get(pbUrl);     console.log(result.data[0].scrape_url);    } catch (err) {     console.error(err);   } }  scrape(); </code></pre>  <p>How could I get the same result as I can with .text from the Python Requests library and in a loop?</p>"	2020-01-29 13:53:23.093 UTC	60003821	"<p>Here is an example of how to do it (as mentioned by <a href=""https://stackoverflow.com/users/10824407/olvin-roght"">Olvin Roght</a> )</p>  <pre><code>const scrape = async () =&gt; {  try {     const result = await axios.get(pbUrl);     result.data.forEach(async (individual) =&gt; {        const scrapeUrl = individual['scrape_url'];        const response = await axios.get(scrapeUrl);        const text = response.data;        console.log(""this is the text value from the url:"", text);     });      } catch (err) {     console.error(err);   } }  scrape(); </code></pre>"			2020-01-31 12:21:38.083 UTC
59975596	javascript|python|flask|web-frameworks	Connect JavaScript to Python script with Flask	"<p>I created an website with HTML/CSS completly on my own. Also use Javascript for events (click on button, ...).</p>  <p>Now i want to connect an python script with it and more important, return the results from python to my website and display (use) them there. Consider something like this:</p>  <p>Website with an input and button. If you click on the button a python script should run which returns if the input is an odd or even number (of course you dont need python for this specific case, but i want to do that)</p>  <p>From my research i believe Flask is the library to do it (?), but i really dont know how to do it. I found very few examples. I would really appreciate if someone could implement the above example or tell me how to do it exactly.</p>  <p>I know there are already some questions about that concept here online, but as i said, with very few examples.</p>"	2020-01-29 21:07:46.38 UTC	60186707	"<p>I really appreciate your help and time spent. But your answer did not help me in the way I needed it. At that point I had no clue what to do but since I figured it out some time ago  (I watched an youtube video...) I thought i share my solution here (<em>stick two strings</em>):</p> <p>Thats app.py:</p> <pre><code>from flask import Flask, render_template, request  app = Flask(__name__)  @app.route('/stick', methods=['GET', 'POST']) def stick():     if request.method == 'POST':         result = request.form['string1'] + request.form['string2']         return render_template('index.html', result=result)     else:            return render_template('index.html')  if __name__ == &quot;__main__&quot;:     app.run() </code></pre> <p>And that index.html (put in the folder <strong>templates</strong>):</p> <pre><code>&lt;!DOCTYPE html&gt; &lt;html&gt; &lt;body&gt;     &lt;h3&gt; Stick two strings &lt;/h3&gt;     &lt;form action=&quot;{{ url_for('stick') }}&quot; method=&quot;post&quot;&gt;             &lt;input type=&quot;text&quot; name=&quot;string1&quot;&gt;             &lt;input type=&quot;text&quot; name=&quot;string2&quot;&gt;             &lt;input type=&quot;submit&quot; value=&quot;Go!&quot;&gt;             &lt;p id=&quot;result&quot;&gt;&lt;/p&gt;     &lt;/form&gt; &lt;script&gt;  document.getElementById(&quot;result&quot;).innerHTML = &quot;{{result}}&quot;  &lt;/script&gt; &lt;/body&gt; &lt;/html&gt; </code></pre> <p>In the terminal type in <em>python app.py</em> and it should work.</p>"			2020-02-12 10:53:32.47 UTC
59975596	javascript|python|flask|web-frameworks	Connect JavaScript to Python script with Flask	"<p>I created an website with HTML/CSS completly on my own. Also use Javascript for events (click on button, ...).</p>  <p>Now i want to connect an python script with it and more important, return the results from python to my website and display (use) them there. Consider something like this:</p>  <p>Website with an input and button. If you click on the button a python script should run which returns if the input is an odd or even number (of course you dont need python for this specific case, but i want to do that)</p>  <p>From my research i believe Flask is the library to do it (?), but i really dont know how to do it. I found very few examples. I would really appreciate if someone could implement the above example or tell me how to do it exactly.</p>  <p>I know there are already some questions about that concept here online, but as i said, with very few examples.</p>"	2020-01-29 21:07:46.38 UTC	59976185	"<p>You're right about Flask being a good solution for this and there are examples and tutorials everywhere. If what you want is just to run a specific function on a button press and get something back in javascript, I've put a quick example is below.</p> <pre><code># app.py from flask import Flask, render_template from flask import jsonify  app = Flask(__name__)  # Display your index page @app.route(&quot;/&quot;) def index():     return render_template('index.html')  # A function to add two numbers @app.route(&quot;/add&quot;) def add():     a = request.args.get('a')     b = request.args.get('b')     return jsonify({&quot;result&quot;: a+b})  if __name__ == &quot;__main__&quot;:     app.run(host='0.0.0.0', port=80) </code></pre> <p>This can then be run with <code>python app.py</code> and make sure your index.html is in the same directory. Then you should be able to go to <a href=""http://127.0.0.1/"" rel=""noreferrer"">http://127.0.0.1/</a> and see your page load.</p> <p>This implements a function which adds two numbers, this can be called in your javascript by calling <a href=""http://127.0.0.1/add?a=10&amp;b=20"" rel=""noreferrer"">http://127.0.0.1/add?a=10&amp;b=20</a>. This should then return <code>{&quot;result&quot;: 30}</code>.</p> <p>You can grab this in your javascript using the code below and place this code in your buttons on click callback.</p> <pre><code>let first = 10; let second = 20; fetch('http://127.0.0.1/add?a='+first+'&amp;b='+second)   .then((response) =&gt; {     return response.json();   })   .then((myJson) =&gt; {     console.log(&quot;When I add &quot;+first+&quot; and &quot;+second+&quot; I get: &quot; + myJson.result);   });  </code></pre> <p>This should be the barebone basics, but once you can submit data to Flask and get data back, you now have an interface to run things in Python.</p> <p>Edit: Full Front-end example</p> <p><a href=""https://jsfiddle.net/4bv805L6/"" rel=""noreferrer"">https://jsfiddle.net/4bv805L6/</a></p>"			2020-01-29 21:56:47.983 UTC
59996036	javascript|python|html|angular|terminal	How to use html and javascript to choose a file and and run it in command line with python3 commands at the click of a button	"<p>So I have been trying to upload a .xlsx file to a html file (Website) and then re-format the .xlsx file to turn it into a database and then finally be able to search through the database.</p>  <p>I have 3 scripting files for this, <code>validation.py</code>, <code>reader.py</code> and <code>server.py</code>. they coexist to run a search database web app. </p>  <p>I use Terminal commands to run them, and I want to automate this process so that I may:</p>  <p><strong>1.</strong> choose a file and run it with validation (<code>python3 validation.py -i (chosen file)</code>)</p>  <p><strong>2.</strong> read the file (<code>python3 reader.py -i (chosen file) -o (category of file (i.e. chosen file is phone numbers so category would be numbers)</code>) </p>  <p><strong>3.</strong> run (<code>server.py -m (category of file_model)</code>)</p>  <p>This opens up a <code>localhost://8080</code> file. I want to automate the validation, reader, and server commands, so that I may choose a file and then have the commands occur at the click of a button, and open up my <code>localhost</code>. </p>  <p>What might be a good way to do this?</p>"	2020-01-30 23:29:52.213 UTC	59996465	"<p>It sounds like you are trying to make an HTML and JavaScript app that achieves two objectives.</p>  <ol> <li>Display a file picker</li> <li>Run a set of Python commands</li> </ol>  <p>I would recommend you use <a href=""https://www.electronjs.org/"" rel=""nofollow noreferrer"">Electron</a> for this. It allows you to create HTML and JavaScript apps that can interact with terminal commands like Python.</p>  <p>Make sure to get <a href=""https://nodejs.org/en/"" rel=""nofollow noreferrer"">Node.js</a> installed first to use Electron.</p>  <p>To start you will need the <a href=""https://github.com/electron/electron-quick-start"" rel=""nofollow noreferrer"">Electron Quick Start</a>. I have linked it on GitHub and you can get it like this.</p>  <pre><code># Clone this repository git clone https://github.com/electron/electron-quick-start # Go into the repository cd electron-quick-start # Install dependencies npm install </code></pre>  <p>Within the folder you will find the familiar <code>index.html</code> file. To add a file picker to your app use the below HTML. You can read more about it on the <a href=""https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/file"" rel=""nofollow noreferrer"">MDN docs</a>.</p>  <pre><code>&lt;input type=""file"" id=""myFilePicker""&gt; </code></pre>  <p>In order to have your Python commands run when a file is picked, you can make use of the <code>preload.js</code> file included with the Quick Start. This JavaScript can interact with your HTML and also your computer. Replace it's contents with the below code.</p>  <pre><code>window.addEventListener('DOMContentLoaded', () =&gt; {   document.getElementById('myFilePicker').addEventListener('change', function(event) {      let filePath = this.files[0].path      const spawn = require(""child_process"").spawn;     const pythonProcess = spawn('python',[""path/to/script.py"", filePath]);      pythonProcess.stdout.on('data', (data) =&gt; {       // You have data from Python     });    }) }) </code></pre>  <p>This JavaScript does the following:</p>  <ul> <li>Waits for the HTML to load</li> <li>Listens for the file picker to change</li> <li>Gets the path to the file that was chosen</li> <li>Runs a python script, passing the file path as a parameter.</li> </ul>  <p>The Python script code was used from <a href=""https://stackoverflow.com/questions/23450534/how-to-call-a-python-function-from-node-js"">this answer</a>. Within the arrow function that says <code>You have data from Python</code>, you are free to repeat the Python script code. You can then run your second and third scripts.</p>  <p>You can then run <code>npm start</code> in the terminal to launch your new Electron app.</p>"			2020-01-31 00:30:22.347 UTC
60025107	python|html|selenium|web-scraping|rendering	Scrape dynamic javascript content webpage using python	"<p>I am trying to scrape this website: '<a href=""https://ec.europa.eu/research/mariecurieactions/how-to/find-job_en"" rel=""nofollow noreferrer"">https://ec.europa.eu/research/mariecurieactions/how-to/find-job_en</a>' using Python.</p>  <p>First I noticed that the table I am interested in is actually at this url: <a href=""https://ec.europa.eu/assets/eac/msca/jobs/import-jobs_en.htm"" rel=""nofollow noreferrer"">https://ec.europa.eu/assets/eac/msca/jobs/import-jobs_en.htm</a></p>  <p>However, requests + BS4 is only giving me the page source in HTML. I assume that this is because the content is dynamic. </p>  <p>Therefore I tried Selenium + BS4 to scrape the website, but I still only manage to scrape the page source.  </p>  <pre><code>from selenium.webdriver import Firefox from bs4 import BeautifulSoup import lxml  driver = Firefox() url = 'https://ec.europa.eu/assets/eac/msca/jobs/import-jobs_en.htm' driver.get(url) soup = BeautifulSoup(driver.page_source, 'lxml') </code></pre>  <p>How can I scrape the aforementioned website? </p>"	2020-02-02 10:18:02.21 UTC	68153563	"<p>Actually, you can get the desired results using requests + BS4. All you need to do is to use the API <code>https://euraxess.ec.europa.eu/sites/default/files/exports/msca.xml</code> along with headers.</p> <p><strong>Code</strong></p> <pre><code>import requests from bs4 import BeautifulSoup  headers = {     'authority': 'euraxess.ec.europa.eu',     'pragma': 'no-cache',     'cache-control': 'no-cache',     'sec-ch-ua': '&quot; Not;A Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;91&quot;, &quot;Chromium&quot;;v=&quot;91&quot;',     'accept': 'application/xml, text/xml, */*; q=0.01',     'sec-ch-ua-mobile': '?0',     'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.106 Safari/537.36',     'origin': 'https://ec.europa.eu',     'sec-fetch-site': 'same-site',     'sec-fetch-mode': 'cors',     'sec-fetch-dest': 'empty',     'referer': 'https://ec.europa.eu/',     'accept-language': 'en-US,en;q=0.9', }  response = requests.get('https://euraxess.ec.europa.eu/sites/default/files/exports/msca.xml',headers=headers) # print(response.text)  soup = BeautifulSoup(response.content, 'html.parser') ID = soup.find_all('job-id') Title = soup.find_all('job-title') for ID,Title in zip(ID,Title):     print(ID.text,Title.text) </code></pre> <p><strong>output</strong></p> <pre><code>383876 PhD position in the framework of HEalth data LInkage for ClinicAL benefit (Helical) project 433411 PhD Student in Biophysics/Electrophysiology 454880 15 PhD positions in Marie Sklodowska Curie ITN “Active Monitoring of Cancer As An Alternative To Surgery” (CAST) 465392 15 Marie Curie PhD Positions in ''Mobility and Training for Beyond 5G Ecosystems (MOTOR5G)'' 480654 Early Stage Research Position in mmWave-based communication systems at National Instruments Dresden GmbH .... </code></pre>"			2021-06-27 17:07:59.873 UTC
60025107	python|html|selenium|web-scraping|rendering	Scrape dynamic javascript content webpage using python	"<p>I am trying to scrape this website: '<a href=""https://ec.europa.eu/research/mariecurieactions/how-to/find-job_en"" rel=""nofollow noreferrer"">https://ec.europa.eu/research/mariecurieactions/how-to/find-job_en</a>' using Python.</p>  <p>First I noticed that the table I am interested in is actually at this url: <a href=""https://ec.europa.eu/assets/eac/msca/jobs/import-jobs_en.htm"" rel=""nofollow noreferrer"">https://ec.europa.eu/assets/eac/msca/jobs/import-jobs_en.htm</a></p>  <p>However, requests + BS4 is only giving me the page source in HTML. I assume that this is because the content is dynamic. </p>  <p>Therefore I tried Selenium + BS4 to scrape the website, but I still only manage to scrape the page source.  </p>  <pre><code>from selenium.webdriver import Firefox from bs4 import BeautifulSoup import lxml  driver = Firefox() url = 'https://ec.europa.eu/assets/eac/msca/jobs/import-jobs_en.htm' driver.get(url) soup = BeautifulSoup(driver.page_source, 'lxml') </code></pre>  <p>How can I scrape the aforementioned website? </p>"	2020-02-02 10:18:02.21 UTC	60025413	"<p>If you go further, you'll find the real data here:<a href=""https://euraxess.ec.europa.eu/sites/default/files/exports/msca.xml"" rel=""nofollow noreferrer"">https://euraxess.ec.europa.eu/sites/default/files/exports/msca.xml</a> Here is an example of using SimplifiedDoc.</p>  <pre><code>from simplified_scrapy.request import req from simplified_scrapy.simplified_doc import SimplifiedDoc html = req.get('https://euraxess.ec.europa.eu/sites/default/files/exports/msca.xml')  doc = SimplifiedDoc(html) jobs = doc.selects('job-opportunity') for job in jobs:     print (job.select('job-id&gt;text()'),job.select('job-title&gt;text()')) </code></pre>  <p>Result:</p>  <pre><code>367020 Early-Stage Researcher (ESR) 3-year PhD position - ""Efficient intra-cavity and extra-cavity generation of beams with radial and azimuthal polarization in high-power thin-disk lasers"" - Project: GREAT 377512 8 Short-term Early Stage Researcher positions available through the EvoCELL ITN (single cell genomics, evo-devo and science outreach) 383978 ESR (early stage researcher) for intelligent quality control cycles in Industry 4.0 process chains enabled by machine learning ...... </code></pre>"			2020-02-02 10:58:03.29 UTC
60029505	javascript|python|algorithm|insertion-sort	insertion sort in python vs javascript	"<p>I implemented insertion sort using python and javascript.  For some strange reason, the JS code works, and the python code doesn't.  Both implementations should do the same thing.  I traced over every line of the code, and couldn't find a difference between the two. Take a look and see if you can spot what is different with the python code.</p>  <p><strong>Javascript Code:</strong></p>  <pre><code>function insertionSort(nums) {    for (let i=0; i&lt;nums.length; i++) {     const value = nums[i];     let hole = i;      while (hole &gt;= 0 &amp;&amp; nums[hole-1] &gt; value) {       nums[hole] = nums[hole-1];       hole = hole - 1;     }     nums[hole] = value;   }   return nums; }   const sorted = insertionSort([5,2,1,3,6,4]); console.log(sorted); </code></pre>  <p><strong>Python Code:</strong></p>  <pre><code>def insertion_sort(nums):   for i in range(0,len(nums)):     value = nums[i]     hole = i      while hole &gt;= 0 and nums[hole-1] &gt; value:       nums[hole] = nums[hole-1]       hole = hole - 1      nums[hole] = value   return nums  sorts = insertion_sort([5,2,1,3,6,4]) print(sorts)  </code></pre>"	2020-02-02 18:58:53.94 UTC	60029594	"<pre><code>  nums[hole] = nums[hole-1] </code></pre>  <p>If <code>hole == 0</code>, <code>nums[hole-1]</code> becomes <code>nums[-1]</code>, which gets the last element of the list. This is not what it does in Javascript.</p>"			2020-02-02 19:09:44.193 UTC
60029505	javascript|python|algorithm|insertion-sort	insertion sort in python vs javascript	"<p>I implemented insertion sort using python and javascript.  For some strange reason, the JS code works, and the python code doesn't.  Both implementations should do the same thing.  I traced over every line of the code, and couldn't find a difference between the two. Take a look and see if you can spot what is different with the python code.</p>  <p><strong>Javascript Code:</strong></p>  <pre><code>function insertionSort(nums) {    for (let i=0; i&lt;nums.length; i++) {     const value = nums[i];     let hole = i;      while (hole &gt;= 0 &amp;&amp; nums[hole-1] &gt; value) {       nums[hole] = nums[hole-1];       hole = hole - 1;     }     nums[hole] = value;   }   return nums; }   const sorted = insertionSort([5,2,1,3,6,4]); console.log(sorted); </code></pre>  <p><strong>Python Code:</strong></p>  <pre><code>def insertion_sort(nums):   for i in range(0,len(nums)):     value = nums[i]     hole = i      while hole &gt;= 0 and nums[hole-1] &gt; value:       nums[hole] = nums[hole-1]       hole = hole - 1      nums[hole] = value   return nums  sorts = insertion_sort([5,2,1,3,6,4]) print(sorts)  </code></pre>"	2020-02-02 18:58:53.94 UTC	60029599	"<p>Python and javascript have different ideas about what <code>someList[-1]</code> does. </p>  <p>In your code above you evaluate <code>nums[hole-1]</code>. The way you've written your loop this can be <code>nums[-1]</code> when <code>hole</code> is zero. In the python code this gets the last element of the list. In the javascript code this is undefined.  This has a significant effect on what the next part: <code>nums[hole-1] &gt; value</code> means.</p>  <p>In the end you don't need to calculate <code>while hole &gt;= 0 and nums[hole-1] &gt; value</code> when the value of <code>hole</code> is <code>0</code>, so maybe changing <code>&gt;=</code> to <code>&gt;</code> will be a good option.</p>"			2020-02-02 19:10:04.107 UTC
60062924	javascript|python|selenium|selenium-webdriver	python selenium execute onscroll javascript	"<p>I am working with a js heavy webpage and I have a <code>div</code> element which looks like so:</p>  <pre><code>&lt;div id=""results-ItemSearch"" class=""itemresults"" onscroll=""loadMoreItems(event)""&gt; .... &lt;/div&gt; </code></pre>  <p>It is one of those webpages which does autoscrolling (further complicated by the fact that there are three panes within the same window and I am having a hard time getting to the pane I want to work with), and normally, I implement something like this in selenium:</p>  <pre><code>no_of_pagedowns = 1 while no_of_pagedowns:     browser.find_element_by_xpath('/html/body').send_keys(Keys.PAGE_DOWN)     time.sleep(1)     no_of_pagedowns-=1 </code></pre>  <p>however, when I do this on this webpage, I get a <code>selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable</code> exception.</p>  <p>I tried selecting by css, but that does not yield anything either. I also tried <code>waiting</code> for 15 or so seconds for complete load, but that does not seem to work either.</p>  <p>Thus, I was wondering if there is a way to directly excecute the JS <code>loadMoreItems(event)</code> via selenium.</p>  <p>Any help will be appreciated - spent 4 hours on this now!</p>"	2020-02-04 17:46:51.69 UTC	60063322	"<p>You could try scrolling with JavaScript</p>  <pre><code>element =  browser.find_element_by_id('results-ItemSearch') driver.execute_script('arguments[0].scrollTo(0, arguments[0].scrollHeight)', element) </code></pre>  <p>Or</p>  <pre><code>driver.execute_script('scrollBy(0, arguments[0].scrollHeight))', element) </code></pre>"			2020-02-04 18:14:49.81 UTC
60112796	javascript|python	Convert list comprehension python to javascript	"<p>I am trying to convert some python code into JavaScript code.</p>  <p>I have a python list comprehension that take the paramente <code>a</code> as input. <code>a</code> is a string such as ""bac"".</p>  <pre><code>asubstring = [a[i:i + j] for j in range(1, len(a) + 1) for i in range(len(a) - j + 1)] </code></pre>  <p>The output is: <code>['b', 'a', 'c', 'ba', 'ac', 'bac']</code></p>  <p>I converted it into JavaScript by doing:</p>  <pre><code>let j = 1 let i = 0 while(j &lt; aTrimmed.length+1) {     while(i &lt; aTrimmed.length - j + 1) {        aSubstring.push(aTrimmed.slice(i, i+j))        i++     }     j++ } </code></pre>  <p><strong>However</strong>, my output is: <code>[ 'b', 'a', 'c' ]</code></p>  <p>I am not sure what I am missing in the two while loops.</p>"	2020-02-07 11:41:55.673 UTC	60117022	"<p>This version works more favourably with characters outside of the Unicode Basic Multilingual Plane. Although there remain issues with grapheme clusters.</p>  <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-js lang-js prettyprint-override""><code>let s1 = ""abc"" let s2 = """"  function substrings(s) {     let us = [...s]     let result = []      for (let j = 1; j &lt;= us.length; j++) {       for (let i = 0; i &lt;= us.length - j; i++) {         result.push(us.slice(i, i + j).join(''))       }     }      return result }  console.log(substrings(s1)) console.log(substrings(s2))</code></pre> </div> </div> </p>"			2020-02-07 16:01:48.617 UTC
60112796	javascript|python	Convert list comprehension python to javascript	"<p>I am trying to convert some python code into JavaScript code.</p>  <p>I have a python list comprehension that take the paramente <code>a</code> as input. <code>a</code> is a string such as ""bac"".</p>  <pre><code>asubstring = [a[i:i + j] for j in range(1, len(a) + 1) for i in range(len(a) - j + 1)] </code></pre>  <p>The output is: <code>['b', 'a', 'c', 'ba', 'ac', 'bac']</code></p>  <p>I converted it into JavaScript by doing:</p>  <pre><code>let j = 1 let i = 0 while(j &lt; aTrimmed.length+1) {     while(i &lt; aTrimmed.length - j + 1) {        aSubstring.push(aTrimmed.slice(i, i+j))        i++     }     j++ } </code></pre>  <p><strong>However</strong>, my output is: <code>[ 'b', 'a', 'c' ]</code></p>  <p>I am not sure what I am missing in the two while loops.</p>"	2020-02-07 11:41:55.673 UTC	60112988	"<p>Use <code>for</code> loop instead of <code>while</code> because you are forgetting reset you <code>i</code> index to 0 at the end of the second loop.</p>  <pre><code>let aTrimmed = ""bac""; let aSubstring = [];   for(let j = 1; j &lt; aTrimmed.length+1; j++) {     for(let i = 0; i &lt; aTrimmed.length - j + 1; i++) {        aSubstring.push(aTrimmed.slice(i, i + j));     } } alert(aSubstring); </code></pre>"			2020-02-07 11:53:45.34 UTC
60112796	javascript|python	Convert list comprehension python to javascript	"<p>I am trying to convert some python code into JavaScript code.</p>  <p>I have a python list comprehension that take the paramente <code>a</code> as input. <code>a</code> is a string such as ""bac"".</p>  <pre><code>asubstring = [a[i:i + j] for j in range(1, len(a) + 1) for i in range(len(a) - j + 1)] </code></pre>  <p>The output is: <code>['b', 'a', 'c', 'ba', 'ac', 'bac']</code></p>  <p>I converted it into JavaScript by doing:</p>  <pre><code>let j = 1 let i = 0 while(j &lt; aTrimmed.length+1) {     while(i &lt; aTrimmed.length - j + 1) {        aSubstring.push(aTrimmed.slice(i, i+j))        i++     }     j++ } </code></pre>  <p><strong>However</strong>, my output is: <code>[ 'b', 'a', 'c' ]</code></p>  <p>I am not sure what I am missing in the two while loops.</p>"	2020-02-07 11:41:55.673 UTC	60113004	"<p>The issue is that you are not resetting the <code>i</code> variable in the inner loop. In the Python version, <code>for i in range(...)</code> always makes <code>i</code> start from <code>0</code>. Additionally, declaring an iteration variable, then using a <code>while</code> loop which ends in incrementing that variable is a bit weird, why not just use a <code>for</code> loop?</p>  <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-js lang-js prettyprint-override""><code>let aTrimmed = ""abc""; let aSubstring = [];  for (let j = 1; j &lt;= aTrimmed.length; j++) {   for (let i = 0; i &lt;= aTrimmed.length - j; i++) {     aSubstring.push(aTrimmed.slice(i, i + j));   } }  console.log(aSubstring);</code></pre> </div> </div> </p>  <p>Also note the <code>&lt;=</code> instead of <code>&lt; ... + 1</code>.</p>"			2020-02-07 11:54:28.567 UTC
60129563	javascript|python|ajax|plugins|python-requests	What is the equivalent for pythons requests.post method in JavaScript?	"<p>I try to connect to googles Perspective API in Javascript. I have tried a lot of stuff I've researched, but nothing has worked. But when I've tried it in Python, it was super easy... So basically I need the equivalent to the following simple Python code in JavaScript. And it has to work within a browser plugin.</p>  <pre><code>import json import requests api_key = '&lt;MYAPIKEY&gt;' url = ('https://commentanalyzer.googleapis.com/v1alpha1/comments:analyze'+'?key='+api_key) data_dict = {     'comment': {'text': 'text to be checked'},     'languages': ['en'],     'requestedAttributes': {'TOXICITY': {}} } response = requests.post(url=url, data=json.dumps(data_dict)) response_dict = json.loads(response.content) </code></pre>  <p>I am not a JavaScript expert and I really need help to solve this problem, I hope someone can help me out.</p>"	2020-02-08 17:58:53.497 UTC	60129675	"<p>You have to use fetch (or axios) like :</p>  <pre><code>fetch(url, {    method: ""POST"",    headers: {      Accept: ""application/json"",      ""Content-Type"": ""application/json""    }    body: JSON.stringify(data), }).then(res =&gt; res.json()) .then(data =&gt; console.log(data)) .catch(err =&gt; console.log(err)); </code></pre>"			2020-02-08 18:09:08.147 UTC
60129563	javascript|python|ajax|plugins|python-requests	What is the equivalent for pythons requests.post method in JavaScript?	"<p>I try to connect to googles Perspective API in Javascript. I have tried a lot of stuff I've researched, but nothing has worked. But when I've tried it in Python, it was super easy... So basically I need the equivalent to the following simple Python code in JavaScript. And it has to work within a browser plugin.</p>  <pre><code>import json import requests api_key = '&lt;MYAPIKEY&gt;' url = ('https://commentanalyzer.googleapis.com/v1alpha1/comments:analyze'+'?key='+api_key) data_dict = {     'comment': {'text': 'text to be checked'},     'languages': ['en'],     'requestedAttributes': {'TOXICITY': {}} } response = requests.post(url=url, data=json.dumps(data_dict)) response_dict = json.loads(response.content) </code></pre>  <p>I am not a JavaScript expert and I really need help to solve this problem, I hope someone can help me out.</p>"	2020-02-08 17:58:53.497 UTC	60129617	"<p><a href=""https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API"" rel=""nofollow noreferrer"">fetch</a> is what your looking for, its provided by the core js module. Usage is shown <a href=""https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch"" rel=""nofollow noreferrer"">here</a>.</p>"			2020-02-08 18:04:09.09 UTC
60129563	javascript|python|ajax|plugins|python-requests	What is the equivalent for pythons requests.post method in JavaScript?	"<p>I try to connect to googles Perspective API in Javascript. I have tried a lot of stuff I've researched, but nothing has worked. But when I've tried it in Python, it was super easy... So basically I need the equivalent to the following simple Python code in JavaScript. And it has to work within a browser plugin.</p>  <pre><code>import json import requests api_key = '&lt;MYAPIKEY&gt;' url = ('https://commentanalyzer.googleapis.com/v1alpha1/comments:analyze'+'?key='+api_key) data_dict = {     'comment': {'text': 'text to be checked'},     'languages': ['en'],     'requestedAttributes': {'TOXICITY': {}} } response = requests.post(url=url, data=json.dumps(data_dict)) response_dict = json.loads(response.content) </code></pre>  <p>I am not a JavaScript expert and I really need help to solve this problem, I hope someone can help me out.</p>"	2020-02-08 17:58:53.497 UTC	60129633	"<p>You can use the <a href=""https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch"" rel=""nofollow noreferrer"">fetch api</a>.</p>  <pre><code>const api_key = '&lt;MYAPIKEY&gt;'; const url = ('https://commentanalyzer.googleapis.com/v1alpha1/comments:analyze'+'?key='+api_key); const data_dict = {     'comment': {'text': 'text to be checked'},     'languages': ['en'],     'requestedAttributes': {'TOXICITY': {}} };  fetch(url, {    method: 'POST',   body: JSON.stringify(data_dict) })   .then(response =&gt; response.json())   .then(data =&gt; {     // do whatever with the data from the response   }); </code></pre>"			2020-02-08 18:05:07.497 UTC
60130323	python|html|django	How do I execute a Python script in Django using javascript	"<p>I have a python + electronJS + Djangao app. I am trying to launch a python script with a button click (from the HTML front end).</p>  <p>The app launches fine. But when I click the button to launch the python script from the HTML window, nothing happens (I get a blank HTML page).</p>  <p>Here is my java script file:</p>  <pre><code>let {PythonShell} = require('python-shell') var path = require(""path"")   function get_weather() {    let pyshell = new PythonShell('Emotion-recognition-master/real_time_video.py', options);   //let python = spawn('python', [path.join(__dirname, '/home/ironmantis7x/Documents/BSSTLLC/electronJS/electronpydemo1/python-app-with-electron-gui/engine/Emotion-recognition-master', 'real_time_video.py'), obsFilePath, navFilePath]);    pyshell.on('message', function(message) {     swal(message);   })   //document.getElementById(""city"").value = """"; } </code></pre>  <p>Here is my HTML code for the gui launcher:</p>  <pre><code>&lt;body&gt;   &lt;div class=""container""&gt;     &lt;div class=""jumbotron""&gt;       &lt;h1&gt;&lt;b&gt;&lt;center&gt;MAVERICK Sentry System&lt;/center&gt;&lt;/b&gt;&lt;/h1&gt;       &lt;h3&gt;&lt;i&gt;&lt;center&gt;by Maverick AI - a Saudi Company&lt;/center&gt;&lt;/i&gt;&lt;/h3&gt;       &lt;br&gt;     &lt;br&gt;     &lt;center&gt;     &lt;div class=""row""&gt;     &lt;div class=""col-xs-4""&gt;       &lt;img style=""width:40%;padding:5px"" src=""images/weather-icon.png""/&gt;       &lt;br&gt;       &lt;button class=""btn btn-info""&gt;&lt;a style=""color:white"" href=""weather.html""&gt;Weather&lt;/a&gt;&lt;/button&gt;             &lt;div class=""col-xs-4""&gt;       &lt;img style=""width:40%;padding:5px"" src=""images/emotion_recognition.png""/&gt;       &lt;br&gt;     &lt;button class=""btn btn-info""&gt;&lt;a style=""color:white;"" href=""real_time_video.py""&gt;Emotion Recognition&lt;/a&gt;&lt;/button&gt;     &lt;/div&gt;     &lt;div class=""col-xs-4""&gt;       &lt;img style=""width:40%;padding:5px"" src=""images/text_recognition.png""/&gt;       &lt;br&gt;     &lt;button class=""btn btn-info""&gt;&lt;a style=""color:white;"" href=""http://127.0.0.1:5000/detect""&gt;Text Recognition&lt;/a&gt;&lt;/button&gt;     &lt;/div&gt;     &lt;/center&gt; &lt;/div&gt; &lt;/div&gt; &lt;body&gt; </code></pre>  <p>How can I run my python script from html button click properly?</p>"	2020-02-08 19:19:26.55 UTC	60130455	"<p>First, you need to make sure the button sends a post request when clicked. For example, let's assume the button sends a post request to a url 'execute_script/'.</p>  <p>Then, urls.py should look like:</p>  <pre><code># route url to view function: urlpatterns = [     path('execute_script/', views.ExecuteScript, name='execute_script'), ] </code></pre>  <p>And, view.py can look like:</p>  <pre><code>def ExecuteScript(request):      # unpack request if needed:     some_data = request.POST['some_data']      # execute some script here...          # pack context:     context = json.dumps({         'status' : 'Success',     })      # return an HTTP response with context:     return HttpResponse(context) </code></pre>"			2020-02-08 19:35:36.743 UTC
60133024	javascript|python|server	python and javascript: how to download a file from Flask server	"<p>I want to create a web page so that users can download file from my computer, which is the server.</p>  <p>I'm asking this question because I can't really find an answer on the Internet. What I found was about how to download files using python. Just to clarify: I want a web page which users can download files stored on the server (my computer). I'm not sure if this requires python and javascript working together or not.</p>"	2020-02-09 02:34:39.947 UTC	60133122	"<p>I know Python, so that's what I'll recommend. If you use the <a href=""https://flask.palletsprojects.com/en/1.1.x/quickstart/"" rel=""nofollow noreferrer"">Flask</a> framework, you can serve a local file with a quick snippet like this:</p>  <pre><code>from flask import Flask app = Flask(__name__)  @app.route('/') def index():     return '&lt;a href=""/files/example.txt""&gt;Download example.txt&lt;/a&gt;'  @app.route('/files/&lt;path:filename&gt;', methods=['GET']) def download_file(filename):     proj_dir = os.path.dirname(os.getcwd())     return send_from_directory(os.path.join(proj_dir, 'files_dir'),         filename=filename) </code></pre>  <p><em>files_dir</em> is a subfolder within the project directory and contains any files you want to serve for download, including <em>example.txt</em> in this exmaple.</p>  <p>If you navigate to localhost or <a href=""http://yourserver.com/"" rel=""nofollow noreferrer"">http://yourserver.com/</a> it will display a link that downloads the <em>example.txt</em> file.</p>"			2020-02-09 03:07:19.48 UTC
60147247	javascript|flask-wtforms	Triggering javascript from Python Flask WTForms field	"<p>I have a Flask form (via WTForms) in my website, and am trying to enable or disable other fields in my form based on whether a user has selected or de-selected a checkbox (and do this without having to refresh the page) however, my attempts to achieve this by using the onchange or onclick event in the HTML hasn't worked. My field is defined below (label and field)</p>  <pre><code>&lt;div class=""form-group row""&gt;   {{ form.task_submit_sms.label(class_=""col-sm-3 text-right control-label col-form-label"") }}   &lt;div class=""col-sm-1""&gt;       {{ form.task_submit_sms(class_=""custom-control custom-checkbox"" onclick=""enableSMSFields()"") }}   &lt;/div&gt; </code></pre>  <p>   </p>  <p>I have tried both <em>onclick</em> and <em>onchange</em>. and get the following error: </p>  <blockquote>   <p>jinja2.exceptions.TemplateSyntaxError: expected token ',', got   'onclick'</p> </blockquote>  <p>Not sure if it's relevant, but here's my JavaScript: </p>  <pre><code>&lt;script&gt;   // Lock SMS fields unless required   function enableSMSFields()   {     if (document.getElementById('task_submit_sms').checked == true)     {       document.getElementById('task_sms_text').removeAttribute('disabled');     }     else     {       document.getElementById('task_sms_text').setAttribute('disabled','disabled')     }   } &lt;/script&gt; </code></pre>"	2020-02-10 09:16:27.89 UTC	60147622	"<p>This is a function inside the curly brackets, which you are passing arguments separated by commas (that is what the error is saying to you):</p>  <pre><code>{{ form.task_submit_sms(class_=""custom-control custom-checkbox"" onclick=""enableSMSFields()"") }} </code></pre>  <p>Have you tried inserting the comma separator?</p>  <pre><code>{{ form.task_submit_sms(class_=""custom-control custom-checkbox"", onclick=""enableSMSFields()"") }} </code></pre>"			2020-02-10 09:42:32.213 UTC
60151400	javascript|arrays|regex|python-3.x|pandas	Python regex: create pandas Dataframe with JavaScript strings of new Array()	"<p>I am tryng to iterate a Javascript response in order to build a pandas Dataframe. I am starting in regex and JS, so there might be obviousl improvement to make code more reliable. Javascript response, return the following string:</p>  <pre><code>     mmSuggestDeliver(0, new Array(""Name"", ""Category"", ""Keywords"", ""Bias"", ""Extension"", ""IDs""), new Array(new Array(""HSBC Holdings plc (Spons. ADRs)"", ""Stocks"", ""HSBC|US4042804066|HSBC||"", ""75"", """", ""hsbc|HSBC|1|4917""),new Array(""HSBC Holdings plc"", ""Stocks"", ""|GB0005405286|||HSBA"", ""75"", """", ""hsbc-gb0005405286||1|1046""),new Array(""HSBC Trinkaus &amp; Burkhardt AG"", ""Stocks"", ""|DE0008115106|||TUBG"", ""75"", """", ""hsbc_trinkausburkhardt||1|3774""),new Array(""HSBC Bank Malta Plc Registered Shs"", ""Stocks"", ""|MT0000030107|||"", ""75"", """", ""hsbc_bank_malta||1|16831644""),new Array(""HSBC-D7 SA de CV SIID (A)"", ""Stocks"", ""|MX51HS0Q00E8|||"", ""75"", """", ""hsbc-d7||1|5125971""),new Array(""HSBC US Buy-Out GmbH &amp; Co. KGaA"", ""Stocks"", ""|DE000A0MM6H7|||"", ""75"", """", ""hsbc_us_buy-out_gmbhco||1|23145""),new Array(""HSBC Holdings PLC ADR Cert Deposito Arg Repr 0.5 ADRs"", ""Stocks"", ""|ARDEUT112257|||"", ""75"", """", ""hsbc_2||1|1399269""),new Array(""HSBC Holdings PLC6.2 % Pfd Shs Sponsored American Deposit Repr 1/40th 6.2 % PfdShs Ser -A-"", ""Stocks"", ""HSBC.PA|US4042806046|HSBC.PA||"", ""75"", """", ""hsbc-pa|HSBC.PA|1|19327""),new Array(""HSBC Holdings PLC 8 % Perp Sub Cap Secs 2010-Without Fixed Maturity Series -2-"", ""Stocks"", ""HSEB|US4042808026|HSEB||"", ""75"", """", ""hseb|HSEB|1|5083319""),new Array(""HSBC Holdings PLC 8 1-8 % Perpetual Sub Cap Secs 2008-Exch into Non-Cum Dollar Pref Shs"", ""Stocks"", ""HSEA|US4042807036|HSEA||"", ""75"", """", ""hsea|HSEA|1|3782270"")), 10, 0);  </code></pre>  <p>I want data organised as the table bellow BUT without the double quote:</p>  <pre><code>     ""Name"", ""Category"", ""Keywords"", ""Bias"", ""Extension"", ""IDs""     ""HSBC Holdings plc (Spons. ADRs)"", ""Stocks"", ""HSBC|US4042804066|HSBC||"", ""75"", """", ""hsbc|HSBC|1|4917""     ""HSBC Holdings plc"", ""Stocks"", ""|GB0005405286|||HSBA"", ""75"", """", ""hsbc-gb0005405286||1|1046"")     ......     ""HSBC Holdings PLC 8 % Perp Sub Cap Secs 2010-Without Fixed Maturity Series -2-"", ""Stocks"", ""HSEB|US4042808026|HSEB||"", ""75"", """", ""hseb|HSEB|1|5083319""     ""HSBC Holdings PLC 8 1-8 % Perpetual Sub Cap Secs 2008-Exch into Non-Cum Dollar Pref Shs"", ""Stocks"", ""HSEA|US4042807036|HSEA||"", ""75"", """", ""hsea|HSEA|1|3782270""  </code></pre>  <p>Ideally i would like to have final result into a pandas Dataframe.</p>  <p>the bellow code would kind of work but has many caveats. Any optimisation/improvement and correction would be greatly apreciated:</p>  <p>code to get column names:</p>  <pre><code>    js_text = """""" mmSuggestDeliver(0, new Array(""Name"", ""Category"", ""Keywords"", ""Bias"", ""Extension"", ""IDs""),  new Array(new Array(""HSBC Holdings plc (Spons. ADRs)"", ""Stocks"", ""HSBC|US4042804066|HSBC||"", ""75"", """", ""hsbc|HSBC|1|4917""), new Array(""HSBC Holdings plc"", ""Stocks"", ""|GB0005405286|||HSBA"", ""75"", """", ""hsbc-gb0005405286||1|1046""), new Array(""HSBC Trinkaus &amp; Burkhardt AG"", ""Stocks"", ""|DE0008115106|||TUBG"", ""75"", """", ""hsbc_trinkausburkhardt||1|3774""), new Array(""HSBC Bank Malta Plc Registered Shs"", ""Stocks"", ""|MT0000030107|||"", ""75"", """", ""hsbc_bank_malta||1|16831644""), new Array(""HSBC-D7 SA de CV SIID (A)"", ""Stocks"", ""|MX51HS0Q00E8|||"", ""75"", """", ""hsbc-d7||1|5125971""), new Array(""HSBC US Buy-Out GmbH &amp; Co. KGaA"", ""Stocks"", ""|DE000A0MM6H7|||"", ""75"", """", ""hsbc_us_buy-out_gmbhco||1|23145""), new Array(""HSBC Holdings PLC ADR Cert Deposito Arg Repr 0.5 ADRs"", ""Stocks"", ""|ARDEUT112257|||"", ""75"", """", ""hsbc_2||1|1399269""), new Array(""HSBC Holdings PLC6.2 % Pfd Shs Sponsored American Deposit Repr 1/40th 6.2 % PfdShs Ser -A-"", ""Stocks"", ""HSBC.PA|US4042806046|HSBC.PA||"", ""75"", """", ""hsbc-pa|HSBC.PA|1|19327""),new Array(""HSBC Holdings PLC 8 % Perp Sub Cap Secs 2010-Without Fixed Maturity Series -2-"", ""Stocks"", ""HSEB|US4042808026|HSEB||"", ""75"", """", ""hseb|HSEB|1|5083319""),new Array(""HSBC Holdings PLC 8 1-8 % Perpetual Sub Cap Secs 2008-Exch into Non-Cum Dollar Pref Shs"", ""Stocks"", ""HSEA|US4042807036|HSEA||"", ""75"", """", ""hsea|HSEA|1|3782270"")), 10, 0);     """"""      regex_text = r""new Array\((.*)\)""     column_header = _re.search(regex_text, js_text, flags=_re.MULTILINE).group(1)     regex_text = ', (?=(?:[^\""]*\""[^\""]*\"")*[^\""]*$)'     column_header = _re.split(regex_text, column_header, flags=_re.MULTILINE)     print('regex1:', column_header)  </code></pre>  <p>which prints: regex1: ['""Name""', '""Category""', '""Keywords""', '""Bias""', '""Extension""', '""IDs""'] hugly mix of single quotes and double quotes...</p>  <p>code to get datas:</p>  <pre><code>    regex_text = r""new Array\(([\s\S]*?)\),""     table_rows = _re.findall(regex_text, js_text, flags=_re.MULTILINE)     table_rows.pop(0)     table_rows[0] = str(table_rows[0]).replace('new Array(', '')      my_data = []     regex_text = ', (?=(?:[^\""]*\""[^\""]*\"")*[^\""]*$)'      for my_row in table_rows:         my_row = _re.split(regex_text, my_row, flags=_re.MULTILINE)         print('row is:', my_row)         my_data.append(my_row)     result_df = _pd.DataFrame(data=my_data, columns=column_header)     print(result_df)     print(result_df.dtypes)   </code></pre>  <p>which print an hugly DF as:</p>  <pre><code>                                                  ""Name""  ...                               ""IDs""     0                  ""HSBC Holdings plc (Spons. ADRs)""  ...                  ""hsbc|HSBC|1|4917""     1                                ""HSBC Holdings plc""  ...         ""hsbc-gb0005405286||1|1046""     2                     ""HSBC Trinkaus &amp; Burkhardt AG""  ...    ""hsbc_trinkausburkhardt||1|3774""     3               ""HSBC Bank Malta Plc Registered Shs""  ...       ""hsbc_bank_malta||1|16831644""     4                        ""HSBC-D7 SA de CV SIID (A)""  ...                ""hsbc-d7||1|5125971""     5                  ""HSBC US Buy-Out GmbH &amp; Co. KGaA""  ...   ""hsbc_us_buy-out_gmbhco||1|23145""     6  ""HSBC Holdings PLC ADR Cert Deposito Arg Repr ...  ...                 ""hsbc_2||1|1399269""     7  ""HSBC Holdings PLC6.2 % Pfd Shs Sponsored Amer...  ...           ""hsbc-pa|HSBC.PA|1|19327""     8  ""HSBC Holdings PLC 8 % Perp Sub Cap Secs 2010-...  ...               ""hseb|HSEB|1|5083319""     9  ""HSBC Holdings PLC 8 1-8 % Perpetual Sub Cap S...  ...              ""hsea|HSEA|1|3782270"")  </code></pre>  <pre><code>     [10 rows x 6 columns]     ""Name""          object      ""Category""     object      ""Keywords""     object      ""Bias""         object      ""Extension""    object      ""IDs""          object     dtype: object  </code></pre>  <p>The data code has numerous caveats, including:</p>  <ol> <li>if the ""new Array"" part of the JS has more/less spaces, the code will not find the row. I had initially used start end fo regex but then had another issue when there was no space separation between "","" and ""new Array"" :regex:""new Array(\""(.*))""</li> <li>all values are double quoted</li> <li>it doesn't look very pythonesque...</li> </ol>  <p>Thanks for the help!</p>  <p>So far i looked at the following links amongst others:</p>  <p><a href=""https://stackoverflow.com/questions/45709428/regex-help-in-javascript-extract-second-match"">enter link description here</a></p>  <p><a href=""https://stackoverflow.com/questions/2785755/how-to-split-but-ignore-separators-in-quoted-strings-in-python"">enter link description here</a></p>  <p><a href=""https://stackabuse.com/regex-splitting-by-character-unless-in-quotes/"" rel=""nofollow noreferrer"">enter link description here</a></p>"	2020-02-10 13:24:11.91 UTC	60154414	"<p>Try to find within a loop (until no match) the following regex on your input string:</p>  <pre><code>\bnew\s+Array\s*[(]\s*("".*?)(?=[)]\s*,\s*new\s+Array|\s*[)]\s*[)]\s*[^(]+$) </code></pre>  <p>Then, for every iteration, get the first capturing group.</p>  <p>The first iteration should get the header, while the following iterations should get the data.</p>  <p>You have a demo <a href=""https://regex101.com/r/3sZKQm/3/"" rel=""nofollow noreferrer"">here</a> (Green highlighting are the data you would keep with first capturing group)</p>  <p>If R supports <code>\K</code>, this is another alternative that may work for you:</p>  <pre><code>\bnew\s+Array\s*[(]\s*\K""(?:[^""\\]+|\\.)*""\s*(?:,\s*""(?:[^""\\]++|\\.)*"")+ </code></pre>  <p>In that case, you don't need to use capturing groups. All the data will be on the same match.</p>  <p>You have a demo <a href=""https://regex101.com/r/xcPBSG/2/"" rel=""nofollow noreferrer"">here</a> for that second approach.</p>"			2020-02-10 16:23:12.19 UTC
60157134	javascript|python|api|aws-lambda|aws-api-gateway	Sending URL Parameters to a Python REST API using Javascript	"<p>I am trying to send URL parameters to an API I wrote on Python, using Javascript.  My Javascript code is as follows: </p>  <pre><code>function createGetRequest() {         var request = new XMLHttpRequest();         request.open('GET', 'some-link/api/', true);         request.onload = function() {             var data = JSON.parse(this.response);             document.getElementById(""idk"").innerHTML = data.news.entry_news_item_title + ""&lt;/br&gt;"" + data.news.entry_news_item_snippet + ""&lt;/br&gt;""             + data.news.entry_news_item_url;         }         request.send();     } </code></pre>  <p>and my Python REST API code is as follows;</p>  <pre><code>def index(): NewsFeed = feedparser.parse(""https://trends.google.com.tr/trends/trendingsearches/daily/rss?geo=TR"")  entry = NewsFeed.entries[0]  return {""news"" : {""Status"" : ""OK"",                               ""item"" : entry['title'],                               ""entry_news_item_title"" : entry['ht_news_item_title'],                               ""entry_news_item_snippet"" : entry['ht_news_item_snippet'],                               ""entry_news_item_url"" : entry['ht_news_item_url']}} </code></pre>  <p>I want to be able to get the index of the entry from the user and then return the corresponding entry. In other words, I want the <code>entry = NewsFeed.entries[0]</code> part to accept a variable rather than a 0. I have tried everything online yet I can't seem to figure it out.</p>"	2020-02-10 19:30:11.037 UTC	60159739	"<p>In your JavaScript code add entry to GET request as follows:</p>  <pre><code>function createGetRequest() {     // code to get number/id you are clicking on     entry_id = getEntryId();     var request = new XMLHttpRequest();     //After question marks you can input your GET request parameters     request.open('GET', `some-link/api/?entry=${entry_id}`, true); //I am using backticks as interpolation       request.onload = function() {         var data = JSON.parse(this.response);         document.getElementById(""idk"").innerHTML = data.news.entry_news_item_title + ""&lt;/br&gt;"" + data.news.entry_news_item_snippet + ""&lt;/br&gt;""             + data.news.entry_news_item_url;         }         request.send();     } </code></pre>  <p>In you Python code you need just to collect get parameters from request string as follows:</p>  <pre><code># Add the request parameter to the function def index(request):     NewsFeed = feedparser.parse(""https://trends.google.com.tr/trends/trendingsearches/daily/rss?geo=TR"")     # Get the parameter from request     # By using get function if you do not have a parameter with given key it will return None      entry_id = request.GET.get('entry')     if entry_id:         entry = NewsFeed.entries[entry_id]          return {""news"" : {""Status"" : ""OK"",                           ""item"" : entry['title'],                           ""entry_news_item_title"" : entry['ht_news_item_title'],                           ""entry_news_item_snippet"" : entry['ht_news_item_snippet'],                           ""entry_news_item_url"" : entry['ht_news_item_url']}}     else:         # Handle bad request         return {""news"":None} </code></pre>"			2020-02-10 22:59:22.487 UTC
60159181	javascript|python-3.x|exponent	"Are my Javascript and Python code giving me different answers because of exponents, or something else?"	"<p>I've ported a simple algorithm over from Python3 to Javascript, and surprisingly, I'm getting different answers. The Python code works as expected, and I don't know why the Javascript acts differently.</p>  <p>Here's the Python:</p>  <pre><code>def foo():     theArray = [1,2,3,4,5,6]     a = theArray[0]     b = theArray[1]     c = theArray[2]     d = theArray[3]     e = theArray[4]     f = theArray[5]     res = (((a**2 + b**2 - (d - e)^3 + (b//e)^2)/ ((a**2 + b**2 - (d - e)^3) + c**2 + (f-4)^2 + (c//d)^2))*0.75)     return res </code></pre>  <p>Python3 Result: 0.32..</p>  <p>Here's the Javascript code:</p>  <pre><code>function foo() {     theArray = [1,2,3,4,5,6]     var a, b, c, d, e, f     a = theArray[0]     b = theArray[1]     c = theArray[2]     d = theArray[3]     e = theArray[4]     f = theArray[5]     res = (((a**2 + b**2 - (d - e)**3 + (b/e)**2)/ ((a**2 + b**2 - (d - e)**3) + c**2 + (f-4)**2 + (c/d)^2))*0.75)     return res } </code></pre>  <p>Javascript Result: 0.27..</p>  <p>Using <em>Math.pow()</em> in the Javascript code didn't change anything.</p>"	2020-02-10 22:08:28.657 UTC	60159514	"<p>First thing I notice is you sometimes use ""**"" for exponentiation, and sometimes ""^"". The former is what you should use for both python and javascript (or at least according to w3 schools, but anyway they produce different results for me)<br> I'm assuming you don't mean to use the bitwise ""XOR"" operator , but rather an exponent when you write ""^"", as you've typed different symbols both in python and in js… </p>  <p>When I change all instances of ""^"" to ""**"" on my computer, both algorithms return 0.2361</p>"			2020-02-10 22:39:34.187 UTC
60159181	javascript|python-3.x|exponent	"Are my Javascript and Python code giving me different answers because of exponents, or something else?"	"<p>I've ported a simple algorithm over from Python3 to Javascript, and surprisingly, I'm getting different answers. The Python code works as expected, and I don't know why the Javascript acts differently.</p>  <p>Here's the Python:</p>  <pre><code>def foo():     theArray = [1,2,3,4,5,6]     a = theArray[0]     b = theArray[1]     c = theArray[2]     d = theArray[3]     e = theArray[4]     f = theArray[5]     res = (((a**2 + b**2 - (d - e)^3 + (b//e)^2)/ ((a**2 + b**2 - (d - e)^3) + c**2 + (f-4)^2 + (c//d)^2))*0.75)     return res </code></pre>  <p>Python3 Result: 0.32..</p>  <p>Here's the Javascript code:</p>  <pre><code>function foo() {     theArray = [1,2,3,4,5,6]     var a, b, c, d, e, f     a = theArray[0]     b = theArray[1]     c = theArray[2]     d = theArray[3]     e = theArray[4]     f = theArray[5]     res = (((a**2 + b**2 - (d - e)**3 + (b/e)**2)/ ((a**2 + b**2 - (d - e)**3) + c**2 + (f-4)**2 + (c/d)^2))*0.75)     return res } </code></pre>  <p>Javascript Result: 0.27..</p>  <p>Using <em>Math.pow()</em> in the Javascript code didn't change anything.</p>"	2020-02-10 22:08:28.657 UTC	60159634	"<p>Note that they are not the same formulas.</p>  <p>In your python code you have:</p>  <pre><code>res = (((a**2 + b**2 - (d - e)^3 + (b//e)^2) / ((a**2 + b**2 - (d - e)^3) + c**2 + (f-4)^2 + (c//d)^2))*0.75 </code></pre>  <p>Which has <code>(d - e)^3</code> and <code>(b//e)^2</code> and <code>(f-4)^2</code></p>  <p>In your js code you have:</p>  <pre><code>res = (((a**2 + b**2 - (d - e)**3 + (b/e)**2) / ((a**2 + b**2 - (d - e)**3) + c**2 + (f-4)**2 + (c/d)^2))*0.75) </code></pre>  <p>Which instead has <code>(d - e)**3</code> and <code>(b//e)**2</code> and <code>(f-4)**2</code></p>  <p>The XOR operation is a very different operation from exponents.</p>  <p>Also, do note that in python you have lots of integer divides. In javascript the equivalent would be something like:</p>  <pre><code>(Math.floor(b/e))^2 </code></pre>  <p>So the correct js formula should be:</p>  <pre><code>res = (((a**2 + b**2 - (d - e)^3 + Math.floor(b/e)^2) / ((a**2 + b**2 - (d - e)^3) + c**2 + (f-4)^2 + Math.floor(c/d)^2))*0.75 </code></pre>"			2020-02-10 22:50:37.357 UTC
60167292	javascript|python|django|django-templates|escaping	How do I pass Python list on Django template and use it in JavaScript?	"<p>I have a python list that has lists inside. I rendered it into Django template to use in my JavaScript. I did <code>json.dumps(postImages)</code>, and escaped with <code>let postImages = {{ postImages|safe }}</code>. And even tho my lint is giving a warning, it worked!  But the problem is that, there are LISTS, inside of the main list. So whenever I do, <code>postImages[0].length</code>, or <code>postImages[0][0]</code>, it thinks that it is a string and now a list.   </p>  <pre><code>&lt;script&gt;   var postImages = {{ postImages|safe }};   const divCard = document.querySelector('.card');   const divDesc = document.querySelector('.description');   console.log(postImages.length)   for (let i = 0; i &lt; postImages.length; i++){       let img = document.createElement('img');       img.classList = ['resize_no_stretch', 'images']       img.setAttribute('src', postImages[i][0]);       console.log(postImages[i][0])       divCard.insertBefore(img, divDesc);   }; &lt;/script&gt; </code></pre>"	2020-02-11 10:56:19.627 UTC	60220846	"<p>It is solved now. What I did was, I imported json on my views and instead of rendering it normally, I <code>json.dumps()</code> it.</p>  <p>views.py:</p>  <pre><code>import json  postImages = json.dumps(list_of_lists)  return render(request, 'craiglist_clone/results.html', {'postImages' : postImages}) </code></pre>  <p>django template (craiglist_clone/results.html):</p>  <pre><code>let postImages = {{ postImages|safe }} </code></pre>  <p>Your lint my give you warning, but it still works!</p>"			2020-02-14 06:02:34.527 UTC
60175237	javascript|python|hex|sha	Difference between hashing in Javascript and Python	"<p>(there are a fair few fairly similar posts - I've read them, the solutions largely seem to be about Python string encoding, which I thought I had under control but clearly still don't)</p>  <p>I'm trying to port an NPM package to Python, but I can't get the same results from each script. I've stripped it down to this:</p>  <pre><code>import sys import hashlib from binascii import hexlify print(""Python"", sys.version)  test1 = ""abcdefg"".encode(""utf-8"") print(hexlify(test1), hashlib.sha256(test1).hexdigest()) test2 = ""abcdefg"".encode(""latin1"") print(hexlify(test2), hashlib.sha256(test2).hexdigest()) test3 = ""abcdefg"".encode(""ascii"") print(hexlify(test3), hashlib.sha256(test3).hexdigest()) test4 = b""abcdefg"" print(hexlify(test4), hashlib.sha256(test4).hexdigest()) test5 = bytes([0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67]) print(hexlify(test5), hashlib.sha256(test5).hexdigest()) </code></pre>  <pre><code>var js_sha3 = require('js-sha3') var crypto = require('crypto'); var buffer = require('buffer'); console.log(""Javascript:"", process.version)  function toHex(str) {   return new Buffer.from(str).toString('hex') }  var test1 = ""abcdefg"" console.log(toHex(test1).toString('hex'), js_sha3.sha3_256(test1)) var test2 = Buffer.from(""abcdefg"") console.log(toHex(test2), js_sha3.sha3_256(test2)) var test3 = ""abcdefg"" console.log(toHex(test3), crypto.createHash('sha3-256').update(test3).digest(""hex"")) var test4 = Buffer.from(""abcdefg"") console.log(toHex(test4), crypto.createHash('sha3-256').update(test4).digest(""hex"")) var test5 = buffer.Buffer.from(""abcdefg"", 'hex') console.log(toHex(test5), js_sha3.sha3_256(test5)) </code></pre>  <p>However, the output looks like this:</p>  <pre><code>Python 3.7.4 (default, Sep  7 2019, 18:27:02)  [Clang 10.0.1 (clang-1001.0.46.4)] b'61626364656667' 7d1a54127b222502f5b79b5fb0803061152a44f92b37e23c6527baf665d4da9a b'61626364656667' 7d1a54127b222502f5b79b5fb0803061152a44f92b37e23c6527baf665d4da9a b'61626364656667' 7d1a54127b222502f5b79b5fb0803061152a44f92b37e23c6527baf665d4da9a b'61626364656667' 7d1a54127b222502f5b79b5fb0803061152a44f92b37e23c6527baf665d4da9a b'61626364656667' 7d1a54127b222502f5b79b5fb0803061152a44f92b37e23c6527baf665d4da9a Javascript: v12.15.0 61626364656667 7d55114476dfc6a2fbeaa10e221a8d0f32fc8f2efb69a6e878f4633366917a62 61626364656667 7d55114476dfc6a2fbeaa10e221a8d0f32fc8f2efb69a6e878f4633366917a62 61626364656667 7d55114476dfc6a2fbeaa10e221a8d0f32fc8f2efb69a6e878f4633366917a62 61626364656667 7d55114476dfc6a2fbeaa10e221a8d0f32fc8f2efb69a6e878f4633366917a62 abcdef 8b8a2a6bc589cd378fc57f47d5668c58b31167b2bf9e632696e5c2d50fc16002 </code></pre>  <p>However, entering <code>abcdefg</code> into <a href=""https://emn178.github.io/online-tools/sha256.html"" rel=""nofollow noreferrer"">https://emn178.github.io/online-tools/sha256.html</a> *(which is backed by <code>js-sha3</code>) returns <code>7d1a54...</code>.</p>  <p>So, my question is - how does my use of SHA-256 in Javascript and Python differ? What am I missing? (I'm not going to try and claim that one of the implementations is broken!)</p>  <p>[edit] If I use MD5 instead of SHA-256, the results match, adding further to the mystery!</p>  <pre><code>x = bytes(""thequickbrownfox"", ""utf-8"") print(hashlib.md5(x).hexdigest()) print(hashlib.sha256(x).hexdigest()) </code></pre>  <pre><code>var x = ""thequickbrownfox"" console.log(crypto.createHash('md5').update(x).digest(""hex"")) console.log(crypto.createHash('sha3-256').update(x).digest(""hex"")) </code></pre>  <p>outputs:</p>  <pre><code>308fb76dc4d730360ee33932d2fb1056 bd484b82d7875e115c7273e9c6102ca4946b7c55fe905012be9152b87fe09568 308fb76dc4d730360ee33932d2fb1056 4822316e0d7a7a2ce1bb6489e57c73ca5db4c7c660c79c3c65839bd4aaf4ef10 </code></pre>"	2020-02-11 18:25:43.693 UTC	60180858	<p>Today I learned the very important difference between <code>sha256</code> and <code>sha3-256</code>.</p>			2020-02-12 03:53:40.94 UTC
60175237	javascript|python|hex|sha	Difference between hashing in Javascript and Python	"<p>(there are a fair few fairly similar posts - I've read them, the solutions largely seem to be about Python string encoding, which I thought I had under control but clearly still don't)</p>  <p>I'm trying to port an NPM package to Python, but I can't get the same results from each script. I've stripped it down to this:</p>  <pre><code>import sys import hashlib from binascii import hexlify print(""Python"", sys.version)  test1 = ""abcdefg"".encode(""utf-8"") print(hexlify(test1), hashlib.sha256(test1).hexdigest()) test2 = ""abcdefg"".encode(""latin1"") print(hexlify(test2), hashlib.sha256(test2).hexdigest()) test3 = ""abcdefg"".encode(""ascii"") print(hexlify(test3), hashlib.sha256(test3).hexdigest()) test4 = b""abcdefg"" print(hexlify(test4), hashlib.sha256(test4).hexdigest()) test5 = bytes([0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67]) print(hexlify(test5), hashlib.sha256(test5).hexdigest()) </code></pre>  <pre><code>var js_sha3 = require('js-sha3') var crypto = require('crypto'); var buffer = require('buffer'); console.log(""Javascript:"", process.version)  function toHex(str) {   return new Buffer.from(str).toString('hex') }  var test1 = ""abcdefg"" console.log(toHex(test1).toString('hex'), js_sha3.sha3_256(test1)) var test2 = Buffer.from(""abcdefg"") console.log(toHex(test2), js_sha3.sha3_256(test2)) var test3 = ""abcdefg"" console.log(toHex(test3), crypto.createHash('sha3-256').update(test3).digest(""hex"")) var test4 = Buffer.from(""abcdefg"") console.log(toHex(test4), crypto.createHash('sha3-256').update(test4).digest(""hex"")) var test5 = buffer.Buffer.from(""abcdefg"", 'hex') console.log(toHex(test5), js_sha3.sha3_256(test5)) </code></pre>  <p>However, the output looks like this:</p>  <pre><code>Python 3.7.4 (default, Sep  7 2019, 18:27:02)  [Clang 10.0.1 (clang-1001.0.46.4)] b'61626364656667' 7d1a54127b222502f5b79b5fb0803061152a44f92b37e23c6527baf665d4da9a b'61626364656667' 7d1a54127b222502f5b79b5fb0803061152a44f92b37e23c6527baf665d4da9a b'61626364656667' 7d1a54127b222502f5b79b5fb0803061152a44f92b37e23c6527baf665d4da9a b'61626364656667' 7d1a54127b222502f5b79b5fb0803061152a44f92b37e23c6527baf665d4da9a b'61626364656667' 7d1a54127b222502f5b79b5fb0803061152a44f92b37e23c6527baf665d4da9a Javascript: v12.15.0 61626364656667 7d55114476dfc6a2fbeaa10e221a8d0f32fc8f2efb69a6e878f4633366917a62 61626364656667 7d55114476dfc6a2fbeaa10e221a8d0f32fc8f2efb69a6e878f4633366917a62 61626364656667 7d55114476dfc6a2fbeaa10e221a8d0f32fc8f2efb69a6e878f4633366917a62 61626364656667 7d55114476dfc6a2fbeaa10e221a8d0f32fc8f2efb69a6e878f4633366917a62 abcdef 8b8a2a6bc589cd378fc57f47d5668c58b31167b2bf9e632696e5c2d50fc16002 </code></pre>  <p>However, entering <code>abcdefg</code> into <a href=""https://emn178.github.io/online-tools/sha256.html"" rel=""nofollow noreferrer"">https://emn178.github.io/online-tools/sha256.html</a> *(which is backed by <code>js-sha3</code>) returns <code>7d1a54...</code>.</p>  <p>So, my question is - how does my use of SHA-256 in Javascript and Python differ? What am I missing? (I'm not going to try and claim that one of the implementations is broken!)</p>  <p>[edit] If I use MD5 instead of SHA-256, the results match, adding further to the mystery!</p>  <pre><code>x = bytes(""thequickbrownfox"", ""utf-8"") print(hashlib.md5(x).hexdigest()) print(hashlib.sha256(x).hexdigest()) </code></pre>  <pre><code>var x = ""thequickbrownfox"" console.log(crypto.createHash('md5').update(x).digest(""hex"")) console.log(crypto.createHash('sha3-256').update(x).digest(""hex"")) </code></pre>  <p>outputs:</p>  <pre><code>308fb76dc4d730360ee33932d2fb1056 bd484b82d7875e115c7273e9c6102ca4946b7c55fe905012be9152b87fe09568 308fb76dc4d730360ee33932d2fb1056 4822316e0d7a7a2ce1bb6489e57c73ca5db4c7c660c79c3c65839bd4aaf4ef10 </code></pre>"	2020-02-11 18:25:43.693 UTC	60175447	"<p>That is certainly correct that for the same given input the hash function produces the same digest. However, where it gets tricky is that many of those hash functions accept the input in terms of bytes. That means here the encoding the giving string into different is dependent on the platform. However, you also need to take into account that different programming languages might have subtle differences, for example I'm not familiar with python, but it might be adding an empty space at the end of the input and/or use different Unicode representations for different special characters. Even one byte change in the input would produce a completely different output, as one might expect from a hash function.</p>  <p>To sum it up, should you want to find why a different hash is created, you should perform a binary comparison of the input of the hash functions. Or print out the input for the SHA-256 in hexadecimals or base 64.</p>"			2020-02-11 18:41:45.963 UTC
60182138	javascript|django|python-3.x|opencv|pythonanywhere	How to access webcam in OpenCV on PythonAnywhere through Javascript?	"<p>I have developed a WebApplication in Django that has a view method which contains the OpevCV code that when triggered opens the User Webcam to detect its face. This app works fine in my localserver but when I have hosted it on PythonAnywhere it says camera not found as my PA hosting doesnt serve a camera. <br>So someone suggested me to open the webcam through javascript as it deals with the client machine and then pass its feed to server machine which is my hosting. <br>But as i am a rookie in Python i am not able to figure how to perform the above task. I found this piece of js code but i dont know how and where to add this in my Django App.</p>  <p>Code for getting the feed with Javascript</p>  <pre><code>var video = document.querySelector(""#videoElement"");  if (navigator.mediaDevices.getUserMedia) {     navigator.mediaDevices.getUserMedia({video: true}).then(function(stream) {       video.srcObject = stream;   }).catch(function(err0r) {       console.log(""Something went wrong!"");   }); } </code></pre>  <p>My Python code for opening the camera and detecting faces is as follows (it works in localserver)</p>  <pre><code>import cv2  cascade = cv2.CascadeClassifier('./haarcascade_frontalface_default.xml')  cam = cv2.VideoCapture(0)   while True:     ret, frame = cam.read()     frame = cv2.flip(frame, 1)      if ret:         gray = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)          faces = cascade.detectMultiScale(gray, scaleFactor=1.3, minNeighbors=3)          for (x, y, w, h) in faces:             cropped = cv2.resize(frame[y:y+h, x:x+w], (198,198))             cv2.rectangle(frame, (x, y), (x+w, y+h), (255, 0, 0), 2)          if cv2.waitKey(1) &amp; 0xFF == ord('q'):             break             cv2.destroyAllWindows()          cv2.imshow('Stream', frame) </code></pre>  <p>Any help is appreciated. Thank you in advance</p>"	2020-02-12 06:11:11.61 UTC	60348033	"<p>You need to get the live video streaming using javascript, then feed that stream to opencv2 to get it working.</p>  <p>Use: <a href=""https://github.com/daspinola/video-stream-sample"" rel=""nofollow noreferrer"">get live videostream in nodejs</a></p>  <p>You will get a url as <code>""http://localhost:3000""</code> which you can use in the python code as follows:</p>  <pre><code>import cv2  cascade = cv2.CascadeClassifier('./haarcascade_frontalface_default.xml')  cam = cv2.VideoCapture('http://localhost:3000')   while True:     ret, frame = cam.read()     frame = cv2.flip(frame, 1)      if ret:         gray = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)          faces = cascade.detectMultiScale(gray, scaleFactor=1.3, minNeighbors=3)          for (x, y, w, h) in faces:             cropped = cv2.resize(frame[y:y+h, x:x+w], (198,198))             cv2.rectangle(frame, (x, y), (x+w, y+h), (255, 0, 0), 2)          if cv2.waitKey(1) &amp; 0xFF == ord('q'):             break             cv2.destroyAllWindows()          cv2.imshow('Stream', frame) </code></pre>"			2020-02-22 00:53:56.057 UTC
60182138	javascript|django|python-3.x|opencv|pythonanywhere	How to access webcam in OpenCV on PythonAnywhere through Javascript?	"<p>I have developed a WebApplication in Django that has a view method which contains the OpevCV code that when triggered opens the User Webcam to detect its face. This app works fine in my localserver but when I have hosted it on PythonAnywhere it says camera not found as my PA hosting doesnt serve a camera. <br>So someone suggested me to open the webcam through javascript as it deals with the client machine and then pass its feed to server machine which is my hosting. <br>But as i am a rookie in Python i am not able to figure how to perform the above task. I found this piece of js code but i dont know how and where to add this in my Django App.</p>  <p>Code for getting the feed with Javascript</p>  <pre><code>var video = document.querySelector(""#videoElement"");  if (navigator.mediaDevices.getUserMedia) {     navigator.mediaDevices.getUserMedia({video: true}).then(function(stream) {       video.srcObject = stream;   }).catch(function(err0r) {       console.log(""Something went wrong!"");   }); } </code></pre>  <p>My Python code for opening the camera and detecting faces is as follows (it works in localserver)</p>  <pre><code>import cv2  cascade = cv2.CascadeClassifier('./haarcascade_frontalface_default.xml')  cam = cv2.VideoCapture(0)   while True:     ret, frame = cam.read()     frame = cv2.flip(frame, 1)      if ret:         gray = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)          faces = cascade.detectMultiScale(gray, scaleFactor=1.3, minNeighbors=3)          for (x, y, w, h) in faces:             cropped = cv2.resize(frame[y:y+h, x:x+w], (198,198))             cv2.rectangle(frame, (x, y), (x+w, y+h), (255, 0, 0), 2)          if cv2.waitKey(1) &amp; 0xFF == ord('q'):             break             cv2.destroyAllWindows()          cv2.imshow('Stream', frame) </code></pre>  <p>Any help is appreciated. Thank you in advance</p>"	2020-02-12 06:11:11.61 UTC	60370438	"<p>I used to do something similar, the scheme I used was as follows:</p>  <p><img src=""https://i.stack.imgur.com/6QbLP.png"" alt=""Data flow""></p>  <p>As you are already aware, we need javascript to get user's picture from the webcam. I found <a href=""https://medium.com/@alexcambose/webcam-live-streaming-with-websockets-and-base64-64b1b4992db8"" rel=""nofollow noreferrer"">an article</a> that shows us how to do that, you can use only the frontend side (the HTML file) if you want to use Django. That's code is for getting pictures and encode it to base64 (string) and send it via websocket.</p>  <p>After that, we want Django to serve websocket. In the past, I did it with Flask, not Django, but you can see how you can create websocket server using <a href=""https://realpython.com/getting-started-with-django-channels/"" rel=""nofollow noreferrer"">django-channel</a>.</p>  <p>For the last step, you need a function with your OpenCV code. You need to <a href=""https://code.tutsplus.com/tutorials/base64-encoding-and-decoding-using-python--cms-25588"" rel=""nofollow noreferrer"">decode base64</a> and <a href=""https://stackoverflow.com/questions/33754935/read-a-base-64-encoded-image-from-memory-using-opencv-python-library"">convert it to opencv</a></p>  <pre class=""lang-py prettyprint-override""><code>def modify_picture(img_data):     # decode image     img = from_b64(img_data)      # your OpenCV filter     gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)      # encode image to base64     return to_b64(gray) </code></pre>  <p>And of course, you don't need <code>while True</code> and <code>cv2.imshow</code>, but return the base64 version of your new picture. Hope it helps.</p>  <hr>  <p>Update: I write a sample code in my <a href=""https://github.com/tegarimansyah/opencv-streaming"" rel=""nofollow noreferrer"">github</a>. Not in Django, but still in Python. Hope it will give you more insight.</p>"			2020-02-24 06:13:47.887 UTC
60292063	javascript|python|selenium|selenium-webdriver|events	Python to continue receive click event output from Javascript	"<p>I am trying to develop a tool for user to create a simple RPA for themselves by recording the clicking in browser. Using Selenium library, I can execute an event listener javascript into the browser with the return of the clicking node.</p>  <pre><code>from selenium import webdriver   driver = webdriver.Chrome()  test = driver.get('https://www.google.com')  js_script = ""var resp = arguments[0]; document.addEventListener('click', function(e) { resp(e.path);}, true)"" response = driver.execute_async_script(js_script)  print(response) </code></pre>  <p>this only able to record the first time click in the browser. How can I continue listen for the Javascript event return in Python whenever the click is triggered in the browser?</p>"	2020-02-19 02:17:33.543 UTC	60640044	"<p>The ""execute_async_script"" awaits a callback from javascript.</p>  <p>Once the awaited (by Python) callback ""arguments[0]"" is called then, even though the EventListener is still up on the browser, Python got its callback. The function execute_async_script is thus done for.</p>  <p>You can either create a logic in Python that evaluates the value in the response, and according to that recreates another script or do the logic directly in Javascript something like: (User needs to press ""q"" in order to terminate the event)</p>  <pre><code>js_script = """""" //Callback function var done = arguments[arguments.length - 1];  //Take all the events var array_events = []  var retour = (e) =&gt; {     array_events.push(e.path) }  var quit = (key) =&gt; {     console.log(array_events);     (key.keyCode == 81 )? done(JSON.stringify(array_events)) : undefined } // Listen to the clicks getPath = document.addEventListener(""click"", retour, true) // Listen to the key ""q"" which means user has gathered all needed events getKey = document.addEventListener(""keydown"", quit, true)  """""" response = driver.execute_async_script(js_script) print(response) </code></pre>"			2020-03-11 16:00:07.93 UTC
60304865	javascript|python|json|python-requests	Python universal scraper for all postcodes on a page hidden inside javascript	"<p>I'm currently trying to create a universal web scraper which will pick up on all postcodes on a page but I'm finding it really difficult if a page hides their office locations within some javascript. </p>  <p>My scraper:</p>  <pre class=""lang-py prettyprint-override""><code>def parse(url):      try:         print(url)         postcode_regex_pattern = r""([Gg][Ii][Rr] 0[Aa]{2})|((([A-Za-z][0-9]{1,2})|(([A-Za-z][A-Ha-hJ-Yj-y][0-9]{1,2})|(([A-Za-z][0-9][A-Za-z])|([A-Za-z][A-Ha-hJ-Yj-y][0-9][A-Za-z]?))))\s?[0-9][A-Za-z]{2})""         compiled_pattern = re.compile(postcode_regex_pattern)         headers = {             'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36',             }         page = requests.get(url, headers=headers)         # print(page.status_code)         if page.status_code == 200:             soup = BeautifulSoup(page.text, 'lxml')             info_to_store = {                             'url': url,                             'postcodes': [],                             }             visible_text_in_page = text_from_html(soup)             matches = re.findall(compiled_pattern, visible_text_in_page)             pcs = [match[1] for match in matches]             if len(pcs) &gt; 0:                 info_to_store['postcodes'] = list(set(pcs))     except Exception as e:         print('{url}: ' + str(e))         pass </code></pre>  <p>Two good examples that my scraper does not work on:</p>  <p><a href=""https://home.kpmg/uk/en/home/about/offices.html"" rel=""nofollow noreferrer"">https://home.kpmg/uk/en/home/about/offices.html</a></p>  <p><a href=""https://www.twilio.com/company"" rel=""nofollow noreferrer"">https://www.twilio.com/company</a></p>  <p>Does anyone have any advice? I do not want to use selenium.</p>"	2020-02-19 16:23:18.387 UTC	60316922	"<p>You can use <a href=""https://pypi.org/project/requests-html/"" rel=""nofollow noreferrer"">requests_html</a> to render the page and then parse it with BeautifulSoup.<br> Python 3.6 and above is required.</p>  <p>Sample request</p>  <pre><code>from requests_html import HTMLSession session = HTMLSession()  r = session.get('https://home.kpmg/uk/en/home/about/offices.html')  </code></pre>"			2020-02-20 09:41:44.64 UTC
60309567	javascript|child-process	Run python script with args in javascript with exec	"<p>I have inputs such as latitude, longitude and frequency. I would like to run this command on a JS file :</p>  <pre><code>exec(`python test.py '{""latitude"":${latitude},""longitude"":${longitude},""frequency"":${frequency}}'`, (error, stdout, stderr) =&gt; { .... }) </code></pre>  <p>But when I run I have the following error :</p>  <pre><code>error: Command failed: python test.py '{""latitude"":48.118097,""longitude"":-1.636503,""frequency"":2.4}' Traceback (most recent call last):   File ""test.py"", line 16, in &lt;module&gt;     data=json.loads(sys.argv[1])   File ""C:\Users\****\AppData\Local\Programs\Python\Python38\lib\json\__init__.py"", line 357, in loads     return _default_decoder.decode(s)   File ""C:\Users\****\AppData\Local\Programs\Python\Python38\lib\json\decoder.py"", line 337, in decode     obj, end = self.raw_decode(s, idx=_w(s, 0).end())   File ""C:\Users\****\AppData\Local\Programs\Python\Python38\lib\json\decoder.py"", line 355, in raw_decode     raise JSONDecodeError(""Expecting value"", s, err.value) from None json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)  </code></pre>  <p>And my python script begin with </p>  <pre><code>import sys import json data=json.loads(sys.argv[1])  </code></pre>  <p>Moreover if I just run my python script without args, and write random data directly in the python script, it works. So I think it's a problem of the args written in the exec command.</p>  <p>Can you please help me.</p>"	2020-02-19 21:32:39.617 UTC	60309666	"<p>Maybe add double quotes?</p>  <pre><code>python test.py '\""{""latitude"":48.118097,""longitude"":-1.636503,""frequency"":2.4}\""' </code></pre>"			2020-02-19 21:39:50.767 UTC
60337338	javascript|python|api|next.js|falconframework	[Python][Javascript] can't figure out how to send API calls from a NEXTjs webpage GUI to a Python Falcon backend	"<p>I'm trying to send POST requests from a NEXTjs frontend with a simple form field to a backend located on the same server which is a python script using the <a href=""https://falcon.readthedocs.io/en/stable/"" rel=""nofollow noreferrer"" title=""Falcon"">Falcon</a> library. The python script itself is ran by Gunicorn and listens on the 8080 port.</p>  <p>Both codes run pretty well without errors but when I try to submit the form all I get is a 415 error which seems to indicate that what I'm trying to send to the API is not a supported media type but, as pointed out in this <a href=""https://stackoverflow.com/a/46151891/5944716"">answer</a></p>  <blockquote>   <p>Falcon has out of the box support for requests with Content-Type: application/json</p> </blockquote>  <p>Since the webpage and the server are hosted on the same VPS I've also tried to use the 127.0.0.1 address in the fetch call but that was unsuccessful as well (the backend API didn't even responded in fact)</p>  <p>Here's the backend code:</p>  <pre class=""lang-py prettyprint-override""><code>#!/usr/bin/env python # coding=utf-8   import time import falcon import json   class Resource(object):      def on_post(self, req, resp, **kwargs):         request_body = req.media          print('POST Request: {}'.format(req))         print('Request body: {}'.format(request_body))          start = time.time()          resp.body = json.dumps({             'count_identical_pairs': count_identical_pairs(request_body),             'computation_time': int((time.time() - start) * 1000)         })   def count_identical_pairs(integers_array):     total = 0     count = dict()      # Type checking     if not isinstance(integers_array, list):         return -1      # Check if N is within the range [0..100,000]     if len(integers_array) &gt; 100000:         return -2      for integer in integers_array:          # Check if each element of the array is within the range [−1,000,000,000..1,000,000,000]         if integer not in range(-1000000000, 1000000000):             return -3          if str(integer) not in count:             count[str(integer)] = 1         else:             count[str(integer)] += 1      for key, value in count.items():         total += value * (value - 1) / 2      return total   api = application = falcon.API()  api.add_route('/count_identical_pairs', Resource()) </code></pre>  <p>And here's the frontend one:</p>  <pre class=""lang-js prettyprint-override""><code>import React from 'react'; import ReactDOM from 'react-dom'; import './index.css';  class Index extends React.Component {     constructor() {         super();         this.state = {             input_array: [],         };         this.onSubmit = this.onSubmit.bind(this);         this.myHeaders = new Headers();     }      onChange = evt =&gt; {         // This triggers everytime the input is changed         this.setState({             [evt.target.name]: evt.target.value,         });     };      onSubmit = evt =&gt; {         evt.preventDefault();         console.log('this.state.input_array = ' + this.state.input_array);         console.log('JSON.stringify(this.state.input_array) = ' + JSON.stringify(this.state.input_array));         // Making a post request with the fetch API         // Test payload [1, 7, 7, 5, 7, 5, 6, 1]         fetch('http://vps638342.ovh.net:8080/count_identical_pairs', {             method: 'POST',             headers: {                 'Accept': 'application/json',                 'Content-Type': 'application/json; charset=utf-8'             },             mode: 'no-cors',    // Security hazard?             body: JSON.stringify(this.state.input_array),             redirect: 'follow'         })         .then(response =&gt; response.text())         .then(data =&gt; console.log('Data: ' + data))         .catch(error =&gt; console.log('Error: ' + error))     };      render() {         return (             &lt;form onSubmit={this.onSubmit} &gt;                 &lt;input                     name=""input_array""                     type=""text""                     id=""name""                     value={this.state.input_array}                     onChange={this.onChange}&gt;                 &lt;/input&gt;                 &lt;input type=""submit"" /&gt;             &lt;/form&gt;         );     }; }  ReactDOM.render(&lt;Index /&gt;, document.getElementById(""root"")); </code></pre>  <p><strong>EDIT 1:</strong> I've tested the python backend API with Postman and I can see that it works pretty well already as you can see pictured here:</p>  <p><a href=""https://i.stack.imgur.com/1r5gu.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/1r5gu.png"" alt=""postman screenshot""></a> <strong>EDIT 2:</strong> Thanks to @Maku here's the update code on the backend that allows all origins, methods and header. I'm new to server development but I'm guessing it's not a very secure way to code but at least it works (I'll add a third EDIT if I find a more recommended way to do this)</p>"	2020-02-21 11:04:30.97 UTC	60337786	"<p>Enable CORS in your falcon server and remove the 'no-cors' flag in your javascript, that worked for me the other day.<br> <a href=""https://github.com/lwcolton/falcon-cors"" rel=""nofollow noreferrer"">https://github.com/lwcolton/falcon-cors</a> should work for you. To test it you could just allow all origins with something like this (I'm using another python framework so I haven't tested this exact falcon extension) </p>  <pre class=""lang-py prettyprint-override""><code>cors = CORS(allow_all_origins=True, allow_all_headers=True)  api = falcon.API(middleware=[cors.middleware])  </code></pre>  <p>Edit: added allow_all_headers=True like discussed in the comments.</p>"			2020-02-21 11:30:04.52 UTC
60387008	javascript|python|numbers|bitwise-or	JavaScript and Python bitwise OR operation gave different results	"<p>JS</p>  <pre class=""lang-js prettyprint-override""><code>console.log(1 | 1); // 1 console.log(1 | 0x8); // 9 console.log(1 | 0x80000000); // -2147483647 </code></pre>  <p>python</p>  <pre class=""lang-py prettyprint-override""><code>print (1 | 1) # 1 print (1 | 0x8) # 9 print (1 | 0x80000000) # 2147483649 </code></pre>  <p>Why the results in last examples are different?</p>"	2020-02-25 03:15:30.527 UTC	60387129	"<p>Tha JavaScript behavior is described in <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Bitwise_Operators"" rel=""nofollow noreferrer"">MDN</a></p>  <blockquote>   <p>The operands of all bitwise operators are converted to signed 32-bit integers in two's complement format, except for zero-fill right shift which results in an unsigned 32-bit integer.</p> </blockquote>  <p>So you get negative numbers in JavaScript because it treats the value as a 32-bit signed number. The <code>0x80000000</code> bit is the sign bit.</p>  <p>The qualifier at the end of the above quote points the way to get the same result as Python:</p>  <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-js lang-js prettyprint-override""><code>console.log((1 | 0x80000000) &gt;&gt;&gt; 0);</code></pre> </div> </div> </p>  <p><code>&gt;&gt;&gt;</code> is the zero-fill right shift operator. Shifting by 0 bits doesn't change the value, but it gets converted to unsigned.</p>  <p>Python integers have infinite precision, so they don't wrap around to negative numbers when they get to 32 bits.</p>"			2020-02-25 03:32:36.633 UTC
60407130	python-3.x|promise|queue|python-asyncio	Effective Python equivalent of this simple promise-chaining JavaScript class	"<p>Here's the JavaScript code:</p>  <pre class=""lang-js prettyprint-override""><code>class TaskQueue {   constructor() {     this._chain = Promise.resolve();   }   postTask(task) {     const result = this._chain.then(task);     this._chain = result.catch(() =&gt; {});     return result;   } } </code></pre>  <p>I'm pretty sure that this just takes a task (function), gets the Promise from it, ignores the errors, and adds it onto the class 'chain'. I'm not quite sure exactly why, though. <a href=""https://github.com/puppeteer/puppeteer/blob/master/lib/TaskQueue.js"" rel=""nofollow noreferrer"">Here's the file</a> in question, and <a href=""https://github.com/puppeteer/puppeteer/blob/master/lib/Page.js#L917"" rel=""nofollow noreferrer"">here</a> is where you can find it being used. In the usage it seems like there's really no need for queuing system to me.</p>  <p>I have no clue what do in Python. I'm aware that there is no 'exact' equivalent to this style of Python code, but I'd like to replicate it effectively, or at least achieve the same results as the JS even if by a different method.</p>"	2020-02-26 05:06:40.14 UTC	60408897	"<p><code>then</code> creates a new promise which runs after the old one resolves. In Python you can create a task whose coroutine awaits the previous one. Something like:</p>  <pre class=""lang-py prettyprint-override""><code>class TaskQueue:     def __init__(self):         fut = asyncio.get_event_loop().create_future()         fut.set_result(None)         self._task = fut      def post_task(self, awaitable):         async def run_awaitable(prev):             try:                 await prev                 await awaitable             except:                 pass  # consider at least logging here         self._task = asyncio.create_task(run_awaitable(self._task)) </code></pre>"			2020-02-26 07:34:48.923 UTC
60407130	python-3.x|promise|queue|python-asyncio	Effective Python equivalent of this simple promise-chaining JavaScript class	"<p>Here's the JavaScript code:</p>  <pre class=""lang-js prettyprint-override""><code>class TaskQueue {   constructor() {     this._chain = Promise.resolve();   }   postTask(task) {     const result = this._chain.then(task);     this._chain = result.catch(() =&gt; {});     return result;   } } </code></pre>  <p>I'm pretty sure that this just takes a task (function), gets the Promise from it, ignores the errors, and adds it onto the class 'chain'. I'm not quite sure exactly why, though. <a href=""https://github.com/puppeteer/puppeteer/blob/master/lib/TaskQueue.js"" rel=""nofollow noreferrer"">Here's the file</a> in question, and <a href=""https://github.com/puppeteer/puppeteer/blob/master/lib/Page.js#L917"" rel=""nofollow noreferrer"">here</a> is where you can find it being used. In the usage it seems like there's really no need for queuing system to me.</p>  <p>I have no clue what do in Python. I'm aware that there is no 'exact' equivalent to this style of Python code, but I'd like to replicate it effectively, or at least achieve the same results as the JS even if by a different method.</p>"	2020-02-26 05:06:40.14 UTC	65848965	"<p>Here is an example of a Javacript Promise copy:</p> <pre><code>class Promise:     def __init__(self, callback):         self.resolved = ''         self.rejected = ''         if callable(callback):             callback(self.resolve, self.reject)      def resolve(self, value):         self.resolved = value      def reject(self, value):         self.rejected = value      def then(self, callback):         if not self.rejected:             self.resolved = callback(self.resolved)         return self      def catch(self, callback):         if self.rejected:             self.rejected = callback(self.rejected)         return self      def all(self, promises):         resolvedArray = []         rejectedArray = []         for promise in promises:             promise(self.resolve, self.reject)             if self.resolved:                 resolvedArray += self.resolved             if self.rejected:                 rejectedArray += self.rejected                 break         self.resolved = resolvedArray         self.rejected = rejectedArray         return self   def myPromise1(resolve, reject):     resolve(['Ana'])   def myPromise2(resolve, reject):     resolve(['Bia'])   def myPromise3(resolve, reject):     resolve(['Carlos'])   def myPromise4(resolve, reject):     resolve(['Daniel'])   def allResolve(values):     print('without error: ', values)   def allReject(values):     print('with error: ', values)   p = Promise([]) p.all([myPromise1, myPromise2]).then(allResolve).catch(allReject) </code></pre> <p>Another example:</p> <pre><code>def myPromise(resolve, reject):     resolve(['Ana', 'Bia', 'Carlos', 'Daniel'])   def firstResolve(value):     return value[0]   def secondResolve(value):     print(value)   def firstReject(value):     print('error:', value)   p = Promise(myPromise) p.then(firstResolve).then(secondResolve).catch(firstReject) </code></pre>"			2021-01-22 16:23:40.11 UTC
60439028	python|jinja2|databricks	How to add a javascript and css file in Jinja2 using Databricks Python?	"<p>I am using the Databricks Python notebook, and I am trying to render the HTML file in Jinja2.  I am trying to add a Javascript and CSS file. Below is the code I have written. </p>  <p>I am not creating any app using flask. it's just a simple template </p>  <pre><code>myTemplate = Template('''&lt;html&gt; &lt;center&gt;&lt;img src=""data:image/jpeg;base64,{{ tpath }}"" alt={{ name }} width=""1200"" height=""90"" /&gt;&lt;/center&gt;&lt;br&gt;&lt;h1&gt; Hello world {{ something }}!&lt;/h1&gt; {% block javascript %}     &lt;script type=""text/javascript""&gt;         {% include ""/mnt/sandbox/AWS-JDPS-MACHINE-HEALTH/Solution_PDF/myscript.js"" %}     &lt;/script&gt;     &lt;!-- The contents of myscript.js will be loaded inside the script tag --&gt; {% endblock %} {% block css %} &lt;link rel=""stylesheet"" type=""text/css"" href=""/mnt/sandbox/AWS-JDPS-MACHINE-HEALTH/Solution_PDF/Embed.css"" /&gt; {% endblock %}  &lt;/html&gt; ''') test = myTemplate.render(something=""MACHINE HEALTH"", tpath = file, name = 'Sample') </code></pre>  <p>Its throwing error ""No loader for this environment specified.""  As I am using Databricks environment and I am new to jinja2 and Databricks. I am not able to change the path of the environment. </p>  <p>Is there any other way to embed a CSS and javascript file in my template?<br> and when you render it - I would like an HTML file</p>  <p>BELOW IS THE COMPLETE ERROR - </p>  <pre><code>    TypeError                                 Traceback (most recent call last) &lt;command-11791890&gt; in &lt;module&gt;()      12 &lt;/html&gt;      13 ''') ---&gt; 14 test = myTemplate.render(something=""MACHINE HEALTH"", tpath = file, name = 'Tarun')  /databricks/python/lib/python3.5/site-packages/jinja2/environment.py in render(self, *args, **kwargs)     987         except Exception:     988             exc_info = sys.exc_info() --&gt; 989         return self.environment.handle_exception(exc_info, True)     990      991     def stream(self, *args, **kwargs):  /databricks/python/lib/python3.5/site-packages/jinja2/environment.py in handle_exception(self, exc_info, rendered, source_hint)     752             self.exception_handler(traceback)     753         exc_type, exc_value, tb = traceback.standard_exc_info --&gt; 754         reraise(exc_type, exc_value, tb)     755      756     def join_path(self, template, parent):  /databricks/python/lib/python3.5/site-packages/jinja2/_compat.py in reraise(tp, value, tb)      35     def reraise(tp, value, tb=None):      36         if value.__traceback__ is not tb: ---&gt; 37             raise value.with_traceback(tb)      38         raise value      39   &lt;template&gt; in top-level template code()  &lt;template&gt; in block ""javascript""()  TypeError: no loader for this environment specified </code></pre>"	2020-02-27 17:46:51.19 UTC	67431715	"<p>There are two things here:</p> <ol> <li>Ninja doesn't know anything about Databricks File System (DBFS) that is really a wrapper around specific cloud storage implementation.  That's why it's complaining about missing loader.  To access files on DBFS from software that works with local files you need to prepend the <code>/dbfs</code> prefix to the path. For example: <code>/dbfs/mnt/sandbox/</code></li> <li>The same with stylesheets - you can't use <code>href=&quot;/mnt/sandbox/...</code>, as the file is not accessible.  The solution here is either include stylesheet as text into HTML, so the HTML is self contained.  Or put the file into the <a href=""https://docs.databricks.com/data/filestore.html#save-a-file-to-filestore"" rel=""nofollow noreferrer""><code>/FileStore</code> location on DBFS</a> (for example as <code>/FileStore/file_name.css</code>) and refer to it as <code>/files/file_name.css</code> (see documentation for more details/examples)</li> </ol>"			2021-05-07 08:46:28.147 UTC
60518020	javascript|python|selenium|dom	How to get variable value from Javascript using Selenium with Python	"<p>Using Selenium, the following is the code I am running on Python to get my geo-coordinates via use of the navigator web api:</p>  <pre><code>        coordinates = driver.execute_script(         "" return () =&gt; {                                            "" +         ""   var savedCoordinates;                                   "" +         ""                                                           "" +         ""   navigator.geolocation.getCurrentPosition(               "" +         ""       (pos) =&gt; savedCoordinates = pos.coords,             "" +         ""       error,                                              "" +         ""       options);                                           "" +         ""                                                           "" +         ""   let options = {                                         "" +         ""       enableHighAccuracy: true,                           "" +         ""       timeout: 5000,                                      "" +         ""       maximumAge: 0                                       "" +         ""   };                                                      "" +         ""                                                           "" +         ""   function error(err) {                                   "" +         ""       console.warn(`ERROR(${err.code}): ${err.message}`); "" +         ""   };                                                      "" +         ""                                                           "" +         "" return savedCoordinates;                                  "" +         "" }                                                         "" )          print(coordinates)  </code></pre>  <p>Expected output: <code>{latitude: XXX.XXX, longitude XX.XXXX}</code></p>  <p>Actual output: <code>{}</code></p>  <p>Can someone help me figure out how I can get my geo-coordinates using this method?</p>"	2020-03-04 01:54:49.527 UTC	60518941	"<p>It should work without <code>return () =&gt; { }</code></p>  <pre><code>    coordinates = driver.execute_script(     ""   var savedCoordinates;                                   "" +     ""                                                           "" +     ""   navigator.geolocation.getCurrentPosition(               "" +     ""       (pos) =&gt; savedCoordinates = pos.coords,             "" +     ""       error,                                              "" +     ""       options);                                           "" +     ""                                                           "" +     ""   let options = {                                         "" +     ""       enableHighAccuracy: true,                           "" +     ""       timeout: 5000,                                      "" +     ""       maximumAge: 0                                       "" +     ""   };                                                      "" +     ""                                                           "" +     ""   function error(err) {                                   "" +     ""       console.warn(`ERROR(${err.code}): ${err.message}`); "" +     ""   };                                                      "" +     ""                                                           "" +     "" return savedCoordinates;                                  "" )       print(coordinates) </code></pre>  <p>As for me this <code>() =&gt; {}</code> only defines function but it doesn't run it - so it returns this function, not result from function. You may need <code>()</code> to run it</p>  <pre><code>return (() =&gt; {...code...})() </code></pre>"			2020-03-04 04:08:29.8 UTC
60521907	javascript|python|leaflet	Can we pass a JavaScript variable to a Python file?	"<p>I am developing a simple webpage GUI for my satellite images for a machine learning project. All the files are on my local machine and I intend to host the website locally as well. I have used plain Javascript and a third party library, Leaflet to display the image(kind of like a map). </p>  <p>The map displayed is basically a tiled version of image. I need to pass on the path of the tile (which I am currently storing in a js variable) to a python file which will use it to perform feature extraction of that particular tile.</p>  <p>Initially, I attempted to write it into a text file that the python program would read, but that displays a prompt everytime for downloading the file. Most of the other solutions involved FS module of NodeJS.</p>  <p>I am sorry if it is a very simple question I am a beginner and could not find any answer on the above (almost every answer uses some flavor of js)</p>"	2020-03-04 08:34:27.333 UTC	60522436	"<p>If you need send data to python send JSON</p>  <p>Put it in your js and AJAX will be send to python script:</p>  <pre><code>$.ajax({         type: ""POST"",         url: $SCRIPT_ROOT + ""/my_data"",         data: ""data=Hello"",         success: function(response) {             console.log(jQuery.parseJSON(response).msg);         },         error: function (response) {             console.log(jQuery.parseJSON(response).msg);             alert(""Ajax error!"");         } }); </code></pre>  <p><br/>And then python will get request and send response:</p>  <pre class=""lang-py prettyprint-override""><code>@app.route('/my_data', methods=['GET', 'POST']) def ajax_data():     message = request.form['data']     print(message)     try:         return json.dumps({'msg': ""Message was successfully sent!""})     except Exception as e:         return json.dumps({'msg': ""Message send error : "" + e.message}) </code></pre>"			2020-03-04 09:05:52.81 UTC
60521907	javascript|python|leaflet	Can we pass a JavaScript variable to a Python file?	"<p>I am developing a simple webpage GUI for my satellite images for a machine learning project. All the files are on my local machine and I intend to host the website locally as well. I have used plain Javascript and a third party library, Leaflet to display the image(kind of like a map). </p>  <p>The map displayed is basically a tiled version of image. I need to pass on the path of the tile (which I am currently storing in a js variable) to a python file which will use it to perform feature extraction of that particular tile.</p>  <p>Initially, I attempted to write it into a text file that the python program would read, but that displays a prompt everytime for downloading the file. Most of the other solutions involved FS module of NodeJS.</p>  <p>I am sorry if it is a very simple question I am a beginner and could not find any answer on the above (almost every answer uses some flavor of js)</p>"	2020-03-04 08:34:27.333 UTC	60522010	"<p>Did you try using Flask micro web-framework ? It is the easiest way of integrating ML projects with web. </p>  <p>Check these videos if it helps </p>  <p><a href=""https://www.youtube.com/watch?v=CSEmUmkfb8Q&amp;t=154s"" rel=""nofollow noreferrer"">Deploying deep learning using flask for an image recogntion project</a></p>  <p><a href=""https://www.youtube.com/watch?v=UbCWoMf80PY&amp;t=1s"" rel=""nofollow noreferrer"">Deploy ML model using flask</a></p>"			2020-03-04 08:42:36.793 UTC
60528792	python|reactjs|frontend|backend	How to combine javascript/react frontend and python backend?	"<p><br> I'm not quite sure if my question is a duplicate, but I wasn't able to find something helping me in my case.  <br><br><strong>Set Up</strong><br> I've built a frontend webpage which contains a couple of services, for example show some timeseries and other information about my system. The website is build with the react framework and so using javascript in general. <br> Now I want to do some calculations about the timeseries for example calculate the similarity and other features of my sensordata. For that I'm using python which offers me a lot of libraries I've used for a long time and are easy to use.<br><br><br><strong>What I'm looking for:</strong> <br>I'm looking for a very simple way to call my backend-timeseries-analysis-python script from the react GUI passing some variables like the length of the series. Also I want to process the returned values and safe the current values needed for normalization (like max,min) for further calculations. <br><br> So the procedure would look like the following:<br></p>  <pre><code>1) Type value in react frontend input box 2) react/javascript calls pythonscript/ initialize a class and passes variables to class 3) python calculates similarity of sensor data  4) python returns similarity values to frontend and saves classes for later call 5) react displays returned values 6) react/javascript calls pythonscript 7) python compares latest data to past data and refreshs treshholds(like max, min) 8) python calculates similarity of sensor data  9) continue..  </code></pre>  <p>Thanks for your help! </p>  <p><a href=""https://i.stack.imgur.com/mPamU.png"" rel=""noreferrer""><img src=""https://i.stack.imgur.com/mPamU.png"" alt=""System set up""></a></p>"	2020-03-04 14:54:37.13 UTC	60529012	"<p>You can expose your Python scripts on a REST API which will be called by your React frontend. Database connection will be made by this API, and the response is sent to your frontend.</p>  <p>See <a href=""https://flask.palletsprojects.com/en/1.1.x/"" rel=""noreferrer"">Flask</a> (very simple for small projects) or even <a href=""https://www.djangoproject.com/"" rel=""noreferrer"">Django</a> to build Python APIs.</p>"			2020-03-04 15:05:40.09 UTC
60528792	python|reactjs|frontend|backend	How to combine javascript/react frontend and python backend?	"<p><br> I'm not quite sure if my question is a duplicate, but I wasn't able to find something helping me in my case.  <br><br><strong>Set Up</strong><br> I've built a frontend webpage which contains a couple of services, for example show some timeseries and other information about my system. The website is build with the react framework and so using javascript in general. <br> Now I want to do some calculations about the timeseries for example calculate the similarity and other features of my sensordata. For that I'm using python which offers me a lot of libraries I've used for a long time and are easy to use.<br><br><br><strong>What I'm looking for:</strong> <br>I'm looking for a very simple way to call my backend-timeseries-analysis-python script from the react GUI passing some variables like the length of the series. Also I want to process the returned values and safe the current values needed for normalization (like max,min) for further calculations. <br><br> So the procedure would look like the following:<br></p>  <pre><code>1) Type value in react frontend input box 2) react/javascript calls pythonscript/ initialize a class and passes variables to class 3) python calculates similarity of sensor data  4) python returns similarity values to frontend and saves classes for later call 5) react displays returned values 6) react/javascript calls pythonscript 7) python compares latest data to past data and refreshs treshholds(like max, min) 8) python calculates similarity of sensor data  9) continue..  </code></pre>  <p>Thanks for your help! </p>  <p><a href=""https://i.stack.imgur.com/mPamU.png"" rel=""noreferrer""><img src=""https://i.stack.imgur.com/mPamU.png"" alt=""System set up""></a></p>"	2020-03-04 14:54:37.13 UTC	69506107	<p>Check out Streamlit. It's a very good alternative to Flask /Django. I am a backend python guy and have no experience in using frontend but I was able to spin up the front end quickly with Streamlit.</p>			2021-10-09 11:00:22.037 UTC
60531184	python|beautifulsoup	How to extract content in specific javascript tagsin python?	"<p>I am trying to extract the entire schedule and results of the Dota2 TI9 international from <a href=""http://www.dota2.com/international/schedule/0/0/?l=english"" rel=""nofollow noreferrer"">this page</a>. The information I seek is under a  tag and under 'schedule_data'.</p>  <p>So far this is what I have got </p>  <pre><code>import requests, re, json from bs4 import BeautifulSoup as bs url = 'http://www.dota2.com/international/schedule/0/0/?l=english' page = requests.get(url) soup = bs(page.text,'html.parser') all_javascript = soup.find_all(name='script',type='text/javascript') all_javascript[:] = [x for x in all_javascript if(re.search(""schedule_data"",x.text))]   data = all_javascript[0] new_data = json.loads(data.text) </code></pre>  <p>I find all the 'script' tags and then search for the 'schedule_data' pattern to identify the tag I need. However, now the last line fails with the error</p>  <pre><code>new_data = json.loads(data.text) Traceback (most recent call last):    File ""&lt;ipython-input-68-447d26a16d5b&gt;"", line 1, in &lt;module&gt;     new_data = json.loads(data.text)    File ""C:\Users\templ\Anaconda3\lib\json\__init__.py"", line 348, in loads     return _default_decoder.decode(s)    File ""C:\Users\templ\Anaconda3\lib\json\decoder.py"", line 337, in decode     obj, end = self.raw_decode(s, idx=_w(s, 0).end())    File ""C:\Users\templ\Anaconda3\lib\json\decoder.py"", line 355, in raw_decode     raise JSONDecodeError(""Expecting value"", s, err.value) from None  JSONDecodeError: Expecting value </code></pre>  <p>I looked at the solution here <a href=""https://stackoverflow.com/questions/26192727/extract-content-of-script-with-beautifulsoup"">json loads example</a>, <a href=""https://stackoverflow.com/questions/34573197/python-error-load-json-code-of-google-api"">Here</a> and <a href=""https://stackoverflow.com/questions/16573332/jsondecodeerror-expecting-value-line-1-column-1-char-0"">here</a>, but  none of these resolve the issue. These examples seem to suggest that it is a url request failure or a translation error that leads to json loads failure, but I have neither of these. </p>  <pre><code>print(type(data.text)) </code></pre>  <p>returns str for me which i understand to be the correct data type for json loads.</p>  <p>Please help</p>"	2020-03-04 17:01:58.123 UTC	60531904	"<p>Please check out this.</p>  <pre><code>import requests, re, json import ast  from bs4 import BeautifulSoup as bs url = 'http://www.dota2.com/international/schedule/0/0/?l=english' page = requests.get(url) soup = bs(page.text,'html.parser') all_javascript = soup.find_all(name='script',type='text/javascript')  for x in all_javascript:     if re.search(""schedule_data"", x.text):         data = str(x).split(""$( '#ScheduleArea' ).tournamentSchedule("")[1].split(');')[0].strip().replace('\n', '').replace('\t', '').replace('\r', '')         data_dict = ast.literal_eval(data)         print(data_dict['schedule_data'])  </code></pre>"			2020-03-04 17:48:08.03 UTC
60550723	javascript|python|jquery|ajax	need to communicate between python and javascript	"<p>Before I say anything I would like to mention that this question might get flagged as a duplicate, however I have visited at least 10 other questions like this, but none of them were able to answer how to do this.</p>  <p>I am currently working on the beginning stages of a project currently all it has is an html/css file a js file and a py file, my problem is that I need to send some information to the python file from the JavaScript file, and than receive back some information that JavaScript will print to the UI.</p>  <p>I've read that your supposed to use JSON to do this and your supposed to use the Jquery ajax method, but when I attempt to use post it throws an error, also the site is currently on a local web server. </p>"	2020-03-05 17:12:32.323 UTC	60550796	"<p>The reason you can't find it is because your question is nonsensical (not in a bad way, it's just words that make sense individually, but not put together). </p>  <p>You cannot send information ""between files"". You can send information from one process to another. </p>  <p>If the Python file contains a valid Python program, you can run that program with the Python interpreter, and send / receive data from that program. </p>  <p>How you do that depends on what that program is and how it works. </p>  <p>JavaScript will be running in a web browser by the sound of it, so the Python program will probably need to be a web server for ""the JavaScript code running in the browser"" (not the ""JavaScript file"") to be able to communicate with it.</p>"			2020-03-05 17:17:16.573 UTC
60550723	javascript|python|jquery|ajax	need to communicate between python and javascript	"<p>Before I say anything I would like to mention that this question might get flagged as a duplicate, however I have visited at least 10 other questions like this, but none of them were able to answer how to do this.</p>  <p>I am currently working on the beginning stages of a project currently all it has is an html/css file a js file and a py file, my problem is that I need to send some information to the python file from the JavaScript file, and than receive back some information that JavaScript will print to the UI.</p>  <p>I've read that your supposed to use JSON to do this and your supposed to use the Jquery ajax method, but when I attempt to use post it throws an error, also the site is currently on a local web server. </p>"	2020-03-05 17:12:32.323 UTC	60551158	"<p>To send JS data to a python program, process the data in python, then send it back to your JS, you need to make the python program a <a href=""https://docs.python.org/3/library/http.server.html"" rel=""nofollow noreferrer"">web server</a>. You could use a separate server as a middleman, but that is not needed for this simple task.</p>  <p>On your python web server, you need to define a POST endpoint that your JS can reach via <a href=""https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch"" rel=""nofollow noreferrer"">fetch()</a>. In that endpoint (a function), you process the JSON sent and send back whatever response you want.</p>  <p>Control Flow:</p>  <ol> <li>fetch('<a href=""http://localhost:PORTNUMBERHERE"" rel=""nofollow noreferrer"">http://localhost:PORTNUMBERHERE</a>', {method: 'post', body: JSON.stringify(data)})</li> <li>python POST method (I don't have experience with python but the link above should suffice)</li> <li>handle the promise returned by fetch when it resolves and feed it into something rendered</li> </ol>"			2020-03-05 17:39:00.12 UTC
60589176	javascript|python|flask	how to properly get data from javascript to my python flask backend using XMLHttpRequest?	"<p>So I am trying to send a value to my backend flask python and process the data there and return it back, but after trying for hours all I got are error codes, 400 or 500. Please help me!</p>  <p>Here's my js code:</p>  <pre><code>var keyword = document.getElementById(""keyword"").value; var xmlhttp = new XMLHttpRequest(); xmlhttp.open('GET', '/searchresults', true); xmlhttp.send(""keyword="" + keyword); console.log(""SUCCESSFULLY SENT""); </code></pre>  <p>and my python code:</p>  <pre><code>@app.route(""/searchresults"") def test():  return request.args.get['keyword'] </code></pre>  <p>my form:</p>  <pre><code>&lt;form id=""searchform""&gt; &lt;label for=""keyword""&gt;Keyword &lt;span class=""required""&gt;*&lt;/span&gt; &lt;/label&gt; &lt;input type=""text"" id=""keyword"" name=""keyword"" size=""15"" required&gt; &lt;/form&gt; </code></pre>  <h2>EDIT:</h2>  <p>I checked the network to make sure that the request is sent. Please correct me if it's not. <a href=""https://i.stack.imgur.com/UDsQt.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/UDsQt.png"" alt=""enter image description here""></a></p>"	2020-03-08 15:47:21.79 UTC	60589366	"<p>You are trying to send a request body (<code>xmlhttp.send(""keyword="" + keyword)</code>) with the keyword, but you are using the <code>GET</code> HTTP method, which does not allow a request body, so <code>keyword=bla</code> will never be part of the request.</p>  <h3>Pass variables with a <code>GET</code> request</h3>  <pre><code>xmlhttp.open('GET', '/searchresults?keyword=' + keyword, true); xmlhttp.send(); </code></pre>  <p>The Flask code is also wrong. <code>.get()</code> is a function, but it's being used as if it were a dictionary. </p>  <p>Call it as a function:</p>  <pre><code>keyword = request.args.get('keyword') </code></pre>  <h3>Pass variables with a <code>POST</code> request</h3>  <pre><code>xmlhttp.open('POST', '/searchresults', true); xmlhttp.send(""keyword="" + keyword); </code></pre>  <p>You'll have to change your Flask code to look in the request body instead of the args:</p>  <pre><code>keyword = request.form.get('keyword') </code></pre>"			2020-03-08 16:08:51.883 UTC
60596972	javascript|python|eel	Sending data from Python to Javascript using EEL	"<p>I am trying to send data from python to Javascript using EEL and their documentation and it does not seem to work... I keep getting null in my html / js page. </p>  <p>Here is what I have. Basically I want to get the link of the BING wallpaper and use it in my page as a background. But until then, I want to first get the result.</p>  <p>BING py script:</p>  <pre><code>import bs4 import requests import json   def scrape_bing():    BASE_PATH = 'http://www.bing.com'    BASE_REST = '/HPImageArchive.aspx?format=js&amp;idx=0&amp;n=1&amp;mkt=en-US'    URL = BASE_PATH + BASE_REST     r = requests.get(url=URL)     if r.status_code == 200:       data = r.json()       wallpaper_path = BASE_PATH + data['images'][0]['url']       print(wallpaper_path)    else:       raise ValueError(""[ERROR] non-200 response from Bing server for '{}'"".format(URL))     def main():       scrape_bing()     if __name__ == '__main__':       main() </code></pre>  <p>The script works and it returns my URL in the Python console.</p>  <p>My main.py which has EEL is as following:</p>  <pre><code>import eel from inc.bing import scrape_bing  eel.init('web')  myDef = scrape_bing()  @eel.expose def bingR():    return myDef  try:    eel.start('index.html', mode='chrome', host='localhost', port=8274)  except (SystemExit, MemoryError, KeyboardInterrupt):    pass  print ('Closed browser log...!') </code></pre>  <p>I have used an async command just as in their examples, like so: </p>  <pre><code>    &lt;script type=""text/javascript"" src=""/eel.js""&gt;&lt;/script&gt;     &lt;script type=""text/javascript""&gt;      async function run() {         let n = await eel.bingR()();         console.log('Got this from Python: ' + n);     }      run();      &lt;/script&gt; </code></pre>  <p>Please help me understand how all this works.</p>"	2020-03-09 08:34:19.173 UTC	60598430	"<p>Not sure if you accidentally formatted your code wrong, but it's a little off. Also you imported bs4 and json when you don't need to.</p>  <p>Your scrape_bing() function was not returning anything. It needs to return a value to  ""<strong>myDef</strong>"" when assigning it in ""<strong>myDef = scrape_bing()</strong>"".</p>  <p>I changed yours up a bit and came up with this example that will hopefully get you started. Hope this helps.</p>  <hr>  <p><strong>main.py</strong></p>  <pre><code>import eel import requests  eel.init('web')  @eel.expose def bingR():     BASE_PATH = 'http://www.bing.com'     BASE_REST = '/HPImageArchive.aspx?format=js&amp;idx=0&amp;n=1&amp;mkt=en-US'     URL = BASE_PATH + BASE_REST     r = requests.get(url=URL)     if r.status_code == 200:         data = r.json()         wallpaper_path = BASE_PATH + data['images'][0]['url']         print(wallpaper_path)         return wallpaper_path     return 'No wallpaper found'  try:     eel.start('index.html', mode='chrome', host='localhost', port=8274) except (SystemExit, MemoryError, KeyboardInterrupt):     pass  print ('Closed browser log...!') </code></pre>  <p><strong>web\myscript.js</strong></p>  <pre><code>async function run() {     let n = await eel.bingR()();     console.log('Got this from Python: ' + n);     document.getElementById('output').value = n; } run(); </code></pre>  <p><strong>web\index.html</strong></p>  <pre><code>&lt;!doctype html&gt; &lt;html lang=""en""&gt; &lt;head&gt;   &lt;meta charset=""utf-8""&gt;   &lt;title&gt;Test&lt;/title&gt; &lt;/head&gt; &lt;body&gt;   &lt;script type=""text/javascript"" src=""/eel.js""&gt;&lt;/script&gt;   &lt;script type=""text/javascript"" src=""/myscript.js""&gt;&lt;/script&gt;   &lt;input id=""output"" value=""Output here"" style=""width: 700px;""&gt; &lt;/body&gt; &lt;/html&gt; </code></pre>  <p>Also thanks for introducing me to eel. First time using it and really like it :)</p>"			2020-03-09 10:14:53.667 UTC
60598338	javascript|python|python-3.x|pyqt|pyqt5	How to send a variable from python file to javascript file?	"<p>I have been creating a desktop application using pyqt5. In my application, there is a tab widget and inside that tab widget, there is a ""start"" button. So, after clicking that button a list of latitudes and longitudes is generated.</p>  <p>I want to send this list to a javascript file(I am using leaflet.js to create a map), such that I can make a map using this information. How can I send this list to a javascript file from my python application?</p>  <pre><code>class App(QMainWindow):     def __init__(self):         super().__init__()         self.title = 'Delivering &amp; Tracking'         self.setWindowTitle(self.title)          self.tab_widget = MyTabWidget(self)         self.setCentralWidget(self.tab_widget)          self.showFullScreen()  class MyTabWidget(QWidget):     def __init__(self, parent):         super(QWidget, self).__init__(parent)         self.layout = QVBoxLayout(self)          #Initialize tab screen         self.tabs = QTabWidget()         self.map_tab = Maps()          self.tabs.resize(300,200)          self.tabs.addTab(self.map_tab,QIcon(""./icons and images/tab_map.png""), ('Map'))          self.layout.addWidget(self.tabs)         self.setLayout(self.layout)  class Maps(QWidget):     def __init__(self):         super().__init__()          self.startButton()      def startButton(self):         button = QPushButton(""Start"", self)         button.move(655, 415)         button.clicked.connect(self.map)          self.show()      def map(self):         #A list is generated in this function.         latlon = []  if __name__ == '__main__':     app = QApplication(sys.argv)     ex = App()     sys.exit(app.exec_()) </code></pre>  <p>The latlon list which is generated inside the map function, I want to send list to a javascript file, such that I can use it to a map.</p>"	2020-03-09 10:09:30.133 UTC	60598676	"<p>I haven't done this before but it seems from <a href=""https://snorfalorpagus.net/blog/2014/09/13/embedding-a-leaflet-map-in-a-qt-application/"" rel=""nofollow noreferrer"">https://snorfalorpagus.net/blog/2014/09/13/embedding-a-leaflet-map-in-a-qt-application/</a> that you can have a javascript file on the server and simply inject the coordinates into it before evaluating the script in the frame.</p>  <p>If your javascript file has the following format:</p>  <pre><code>// map_source.js // a lot of javascript map.panTo(new L.LatLng($lat$, $long$)); // more javascript // file end </code></pre>  <p>Then you can inject a longitude and latitude in the following way:</p>  <pre><code>def map(self):     #A list is generated in this function.     latlon = [latitude_value, longitude_value]     with open('map_source.js', 'r') as f:         lines = '&lt;my custom newline&gt;'.join(f.readlines())      # substitute latitude     lines = lines.replace('$lat$',str(latlon[0]))     # substitute longitude     lines = lines.replace('$long$',str(latlon[1]))     # Now write the file back     with open('map_source.js', 'w') as f:         f.writelines(lines.split('&lt;my custom newline&gt;')) </code></pre>"			2020-03-09 10:30:56.083 UTC
60598338	javascript|python|python-3.x|pyqt|pyqt5	How to send a variable from python file to javascript file?	"<p>I have been creating a desktop application using pyqt5. In my application, there is a tab widget and inside that tab widget, there is a ""start"" button. So, after clicking that button a list of latitudes and longitudes is generated.</p>  <p>I want to send this list to a javascript file(I am using leaflet.js to create a map), such that I can make a map using this information. How can I send this list to a javascript file from my python application?</p>  <pre><code>class App(QMainWindow):     def __init__(self):         super().__init__()         self.title = 'Delivering &amp; Tracking'         self.setWindowTitle(self.title)          self.tab_widget = MyTabWidget(self)         self.setCentralWidget(self.tab_widget)          self.showFullScreen()  class MyTabWidget(QWidget):     def __init__(self, parent):         super(QWidget, self).__init__(parent)         self.layout = QVBoxLayout(self)          #Initialize tab screen         self.tabs = QTabWidget()         self.map_tab = Maps()          self.tabs.resize(300,200)          self.tabs.addTab(self.map_tab,QIcon(""./icons and images/tab_map.png""), ('Map'))          self.layout.addWidget(self.tabs)         self.setLayout(self.layout)  class Maps(QWidget):     def __init__(self):         super().__init__()          self.startButton()      def startButton(self):         button = QPushButton(""Start"", self)         button.move(655, 415)         button.clicked.connect(self.map)          self.show()      def map(self):         #A list is generated in this function.         latlon = []  if __name__ == '__main__':     app = QApplication(sys.argv)     ex = App()     sys.exit(app.exec_()) </code></pre>  <p>The latlon list which is generated inside the map function, I want to send list to a javascript file, such that I can use it to a map.</p>"	2020-03-09 10:09:30.133 UTC	60598602	"<p>I would probably write the list to a file of whatever format makes the most sense, and then read from that file with the javascript that you're using!</p>  <p>For example (to write):</p>  <pre><code>with open(""test.txt"", ""a"") as f:     for coord in latlon:         f.write(coord + ""\n"") </code></pre>  <p>For example (to read, I personally don't know javascript so this might be a bad solution):</p>  <pre><code>const fs = require(""fs"");  fs.readFile(""test.txt"", ""utf-8"", (err, data) =&gt; {     if (err) throw err;     console.log(data); }); </code></pre>"			2020-03-09 10:26:20.077 UTC
60602550	javascript|python|ajax|server	send post data from javascript to python server	"<p>I am trying to record audio with JavaScript and send it to a Python server. As for now, I have run it and the record works fine. Using AJAX to post and get data, I am trying to pass it, but it doesn't work to send to Python.</p>  <p>Here is my code:</p>  <p>JavaScript:</p>  <pre><code>function submit(blob) {   var reader = new window.FileReader();   reader.readAsDataURL(blob);   reader.onloadend = function() {     var fd = new FormData();     base64data = reader.result;     console.log(base64data);     fd.append('file', base64data, 'audio.ogg');     $.ajax({       type: 'POST',       url: '/',       data: fd,       cache: false,       processData: false,       contentType: false,       enctype: 'multipart/form-data'     }).done(function(data) {       console.log(data);     });   } </code></pre>  <p>Python Server:</p>  <pre><code>from flask import Flask, render_template, request      app = Flask(__name__)      @app.route('/')      def home():          return render_template(""index.html"")       @app.route('/', methods=['POST', 'GET'])      def get_data():              with open('./audio.ogg', 'wb') as f:                  f.write(request.data)              f.close()              print(""FILE CLOSED"")              return render_template(""index.html"")      if __name__ == '__main__':        app.run(debug=True) </code></pre>"	2020-03-09 14:24:13.607 UTC	60602938	"<p>In your JavaScript you're trying to send a string as a file, you should be sending a file/blob.<br> See Below</p>  <pre><code>function submit(blob) {     var fd = new FormData();     fd.append('file', blob, 'audio.ogg');     $.ajax({       type: 'POST',       url: '/',       data: fd,       cache: false,       processData: false,       contentType: false     }).done(function(data) {       console.log(data);     }); } </code></pre>  <p>In you server side code you should use <code>request.files</code> to access the uploaded files. </p>  <pre><code>from flask import Flask, render_template, request      app = Flask(__name__)      @app.route('/')      def home():          return render_template(""index.html"")       @app.route('/', methods=['POST', 'GET'])      def get_data():              request.files[""file""].save('./audio.ogg')              print(""FILE CLOSED"")              return render_template(""index.html"")      if __name__ == '__main__':        app.run(debug=True) </code></pre>"			2020-03-09 14:45:36.857 UTC
60637417	javascript|python|selenium|parsing|web-scraping	How can I use Selenium in Python to get JavaScript element?	"<p>I would like to parse ""disabled"", but I'm unable to do so using Beautiful Soup. How can I use Selenium in Python to parse ""disabled""? The website I'm parsing: <a href=""https://sport.woot.com/offers/asics-mens-clearance-calculator?ref=w_cnt_lnd_cat_sprt_18_1"" rel=""nofollow noreferrer"">https://sport.woot.com/offers/asics-mens-clearance-calculator?ref=w_cnt_lnd_cat_sprt_18_1</a>                                                                              Size</p>  <pre><code>                                    &lt;select id=""attr-size"" name=""Size""&gt;                                         &lt;option value=""none""&gt;- Select -&lt;/option&gt;                                             &lt;option value=""6.5""&gt;6.5&lt;/option&gt;                                             &lt;option value=""8""&gt;8&lt;/option&gt;                                             &lt;option value=""8.5"" disabled=""""&gt;8.5&lt;/option&gt;                                             &lt;option value=""9.5""&gt;9.5&lt;/option&gt;                                             &lt;option value=""10""&gt;10&lt;/option&gt;                                             &lt;option value=""10.5""&gt;10.5&lt;/option&gt;                                             &lt;option value=""11""&gt;11&lt;/option&gt;                                             &lt;option value=""12"" disabled=""""&gt;12&lt;/option&gt;                                             &lt;option value=""13"" disabled=""""&gt;13&lt;/option&gt;                                             &lt;option value=""14"" disabled=""""&gt;14&lt;/option&gt;                                             &lt;option value=""12 Wide US""&gt;12 Wide US&lt;/option&gt;                                             &lt;option value=""13 (4E)"" disabled=""""&gt;13 (4E)&lt;/option&gt;                                     &lt;/select&gt;                                 &lt;/div&gt; </code></pre>  <p>attempt:</p>  <pre><code>from selenium import webdriver import geckodriver_autoinstaller driver = webdriver.Firefox() driver.get(""https://sport.woot.com/offers/asics-mens-clearance-calculator?  ref=w_cnt_lnd_cat_sprt_18_1"") disabled_sizes = driver.find_element_by_class_name(""disabled"") my_disabled_sizes = [] try:     for disabled_size in disabled_sizes:         try:             my_disabled_sizes.append(disabled_sizes.text)          except:             pass except:     pass try:     print(my_disabled_sizes[1:])  # skip first element then start listing  disabled sizes except:     pass </code></pre>"	2020-03-11 13:40:04.33 UTC	60637656	"<p>You can use the below xpath to get all the options with <code>disabled</code> attribute.</p>  <pre><code>//select[@id='attr-size']/option[@disabled] </code></pre>  <p>Here is the logic to get all disabled elements in python.</p>  <pre><code>disabled_elems =driver.find_elements_by_xpath(""//select[@id='attr-size']/option[@disabled]"") </code></pre>  <p><strong>Screenshot:</strong></p>  <p><a href=""https://i.stack.imgur.com/0JlW6.gif"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/0JlW6.gif"" alt=""enter image description here""></a></p>"			2020-03-11 13:51:52.77 UTC
60651083	javascript|python|url|flask	Passing an url from python to JavaScript in Flask	"<p>I have this flask app</p>  <pre><code>@app.route('', methods=['POST']) def my_function():  (...some functions...)  map = some_url      return render_template (""main.html"", map = map) </code></pre>  <p>And I want to insert ""map"" into my JavaScript (.js is in /static):</p>  <pre><code> btn.addEventListener(""click"", function(){    var newMap = document.createElement(""IMG"");         newMap.setAttribute(""src"", ""{{map}}"");    newMap.setAttribute(""width"", ""300"");    newMap.setAttribute(""height"", ""300""); </code></pre>  <p>I do a <code>print(map)</code> before <code>return render_template</code> and it prints well but <code>newMap</code> is created but empty, like with no <code>src</code>.</p>"	2020-03-12 09:30:09.88 UTC	67656765	"<p>There is an alternate solution which will work fine. You can create a hidden input and set its value to the map variable</p> <pre><code>&lt;input type=&quot;hidden&quot; value={{map}} id=&quot;inputId&quot;/&gt; </code></pre> <p>Now using javascript access the value and change setAtrribute second parmaeter to mapValue</p> <pre><code>mapValue = document.getElementById(&quot;inputId&quot;).value newMap.setAttribute(&quot;src&quot;, mapValue);                                    </code></pre>"			2021-05-23 06:20:53.05 UTC
60679909	python-3.x|text-extraction	Extracting all JavaScript filenames from a log file using Python3	"<p>I am new to Python3 and working with textfiles. I am trying to extract all filenames from a log file that end in JavaScript (.js) extensions. The file contains other file extensions also. I want to return only the filename and not the path, sort the output alphabetically and display uniuqe values as there are repeats in the log entries. </p>  <p>Examples from the log file are: </p>  <p>72.133.47.242 - - [25/Apr/2013:15:45:28 -0700] ""GET /include/jquery.js HTTP/1.1"" 200 25139</p>  <p>22.133.47.242 - - [25/Apr/2013:15:45:28 -0700] ""GET /include/jquery.jshowoff.js HTTP/1.1"" 200 25139</p>  <p>In this case I just want to return <strong>jquery.js</strong> and <strong>jquery.jshowoff.js</strong> and not the HTTP request and other log data.</p>  <p>This is my code so far:</p>  <pre><code>filepath = '/home/user/Documents/access_log.txt' with open(filepath, 'r') as access_log:     contents = access_log.readlines()     for line in contents:         if "".js"" in line:             print(line) </code></pre>  <p>My ouput does return only lines that contain <strong>.js</strong> in them but I don't know how to extract the rest. I have tried to use regex to match but have not been successful as I'm also new to using that. Any help would be greatly appreciated.</p>"	2020-03-14 05:07:50.543 UTC	60680333	"<p>Here is another pure-Python solution, using the following <code>logfile.txt</code> as my input:</p>  <pre><code>72.133.47.242 - - [25/Apr/2013:15:45:28 -0700] ""GET /include/jquery.js HTTP/1.1"" 200 25139 22.133.47.242 - - [25/Apr/2013:15:45:28 -0700] ""GET /include/jquery.jshowoff.js HTTP/1.1"" 200 25139 72.133.47.242 - - [25/Apr/2013:15:45:28 -0700] ""GET /2468.js HTTP/1.1"" 200 25139 72.133.47.242 - - [25/Apr/2013:15:45:28 -0700] ""GET /Abcd.js HTTP/1.1"" 200 25139 22.133.47.242 - - [25/Apr/2013:15:45:28 -0700] ""GET /abcd.js HTTP/1.1"" 200 25139 72.133.47.242 - - [25/Apr/2013:15:45:28 -0700] ""GET /aBcd.js HTTP/1.1"" 200 25139 22.133.47.242 - - [25/Apr/2013:15:45:28 -0700] ""GET / asd.js HTTP/1.1"" 200 25139 72.133.47.242 - - [25/Apr/2013:15:45:28 -0700] ""GET /include/index.html HTTP/1.1"" 200 25139 72.133.47.242 - - [25/Apr/2013:15:45:28 -0700] ""GET /include/login.jsp HTTP/1.1"" 200 25139 </code></pre>  <p>All the JavaScript filenames are stored in a <code>set</code>, since you only want unique values. Before being printed, they are sorted alphabetically.</p>  <p>It iterates over each line, finds the index of the first <code>.js</code> starting from the end of the string, then it finds the index of the first <code>/</code> starting from where it found the <code>.js</code>, heading towards the left.</p>  <p>The line is sliced using these 2 indexes to give us the filename. If <code>.js</code> is not found, <code>rfind</code> returns <code>-1</code>, which doesn't matter because we check at the end if the filename ends with <code>.js</code> before adding it to the <code>set</code>. You could use <code>rindex</code>, but you would need to handle the <code>ValueError</code> for lines that don't have <code>.js</code>.</p>  <pre><code>filenames = set()  with open(r""C:\Users\Old Joe\Desktop\logfile.txt"") as f:     for line in f:         end = line.rfind("".js"") + 3 # 3 = len("".js"")         start = line.rfind(""/"", 0, end) + 1 # 1 = len(""/"")         filename = line[start:end]         if filename.endswith("".js""):             filenames.add(filename)   for filename in sorted(filenames, key=str.lower):     print(filename) </code></pre>  <p>Output:</p>  <pre><code> asd.js 2468.js aBcd.js abcd.js Abcd.js jquery.js jquery.jshowoff.js login.js </code></pre>"			2020-03-14 06:29:51.68 UTC
60679909	python-3.x|text-extraction	Extracting all JavaScript filenames from a log file using Python3	"<p>I am new to Python3 and working with textfiles. I am trying to extract all filenames from a log file that end in JavaScript (.js) extensions. The file contains other file extensions also. I want to return only the filename and not the path, sort the output alphabetically and display uniuqe values as there are repeats in the log entries. </p>  <p>Examples from the log file are: </p>  <p>72.133.47.242 - - [25/Apr/2013:15:45:28 -0700] ""GET /include/jquery.js HTTP/1.1"" 200 25139</p>  <p>22.133.47.242 - - [25/Apr/2013:15:45:28 -0700] ""GET /include/jquery.jshowoff.js HTTP/1.1"" 200 25139</p>  <p>In this case I just want to return <strong>jquery.js</strong> and <strong>jquery.jshowoff.js</strong> and not the HTTP request and other log data.</p>  <p>This is my code so far:</p>  <pre><code>filepath = '/home/user/Documents/access_log.txt' with open(filepath, 'r') as access_log:     contents = access_log.readlines()     for line in contents:         if "".js"" in line:             print(line) </code></pre>  <p>My ouput does return only lines that contain <strong>.js</strong> in them but I don't know how to extract the rest. I have tried to use regex to match but have not been successful as I'm also new to using that. Any help would be greatly appreciated.</p>"	2020-03-14 05:07:50.543 UTC	60680205	"<p>This can be done with regex, but I figured I'd give just a python solution. </p>  <p>The approach I took was to split each line based on the OS path character: <code>/</code>. For Windows OS this would be '\' (so keep that in mind if you want this to be cross-platform). This gives a list. Then we search each element in the list for "".js "". The space should always be there. The element with the filename will have extra stuff after the filename, so just split on "".js "" and only keep the first element of that split. I commented these pieces in the code too.</p>  <pre class=""lang-py prettyprint-override""><code>with open(filepath, 'r') as access_log:     contents = access_log.readlines()     log_filenames = []     for line in contents:         # log_filenames on mac/linux will use / so split on that then search for filename         for fragment in line.split('/'):             if "".js "" in fragment:                 # there will be text after .js, so remove it                 frags = fragment.split('.js ')                 # split on "".js "" will give us the base filename as first element of list                 basename = frags[0]                 filename = basename + '.js'                 log_filenames.append(filename)     # get unique values     log_filenames = list(set(log_filenames))     # sort     log_filenames.sort()     print('\n'.join(log_filenames)) </code></pre>  <p>Outputs:</p>  <pre class=""lang-py prettyprint-override""><code>jquery.js jquery.jshowoff.js </code></pre>  <p>Note: In getting unique values I converted the <code>set</code> back to a <code>list</code> just in case you're not used to working with <code>set</code>s. </p>"			2020-03-14 06:05:11.707 UTC
60697945	javascript|python	Pythonic way of accessing properties in Javascript	"<p>In Python, there is a way to iterate over an array, filter some of the elements and then pop only particular properties of the object. It works in such a way:</p>  <pre class=""lang-py prettyprint-override""><code>elements = [{'name':'1', 'id':1},{'name':'2', 'id':2},{'name':'3', 'id':3}] filtered_elements = [x['name'] for x in elements if x['id'] == 1] </code></pre>  <p>Is there any elegant way to do such a thing in JS? </p>"	2020-03-15 21:42:32.193 UTC	60697989	"<p>You can use <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter"" rel=""nofollow noreferrer""><code>filter</code></a> and <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map"" rel=""nofollow noreferrer""><code>map</code></a>:</p>  <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-js lang-js prettyprint-override""><code>var elements = [{'name':'1', 'id':1},{'name':'2', 'id':2},{'name':'3', 'id':3}]; var filtered = elements.filter(x =&gt; x.id === 1).map(x =&gt; x.name);  console.log(filtered);</code></pre> </div> </div> </p>"			2020-03-15 21:47:46.837 UTC
60776975	javascript|python-3.x|electron	How can I call a Javascript function in python?	<p>I'm trying to make a snake game with Electron and deep reinforcement learning. The reinforcement learning stuff I do in python and the game in Javascript. Now how can I call a function like this in python? </p>  <pre><code>makeSomeThing(x) {  } </code></pre>  <p>or </p>  <pre><code>getValue() {    return x; } </code></pre>	2020-03-20 15:24:07.017 UTC	60777159	"<p>Well, I don't know if it is the answer that you expect, but I would create a standalone python service that exposes some API.</p>  <p>Create a client in electron and use python API to send data and get processed information from the Python service</p>  <p>You cant call Javascript API from python. You need something in the middle anyway.</p>"			2020-03-20 15:35:53.353 UTC
60776975	javascript|python-3.x|electron	How can I call a Javascript function in python?	<p>I'm trying to make a snake game with Electron and deep reinforcement learning. The reinforcement learning stuff I do in python and the game in Javascript. Now how can I call a function like this in python? </p>  <pre><code>makeSomeThing(x) {  } </code></pre>  <p>or </p>  <pre><code>getValue() {    return x; } </code></pre>	2020-03-20 15:24:07.017 UTC	60778108	"<ol> <li><p>Please build your python script to an executable binary file. You can use <a href=""http://www.pyinstaller.org/"" rel=""nofollow noreferrer"">pyinstaller</a> to package your python scripts to a standalone executable file. </p></li> <li><p>Then you can spawn this binary file at your Electron project like this.</p>  <pre><code>import { spawn } from 'child_process'; // in my case I'm storing the file at bin directory at the root path of the application // You can change this whatever you want  const pythonPath = const basicURL = process.env.NODE_ENV === 'development' ? path.join(__dirname, './bin/xxxx') : path.join(process.resourcesPath, 'bin', 'xxxx');  const params = ['arg1', 'arg2'];  // params that your python scripts need. const pythonChildProcess = spawn(pythonPath, params);   pythonChildProcess.stdout.on('data', data =&gt; {     console.log(`stdout: ${data}`);      // Here is where the output goes   });   pythonChildProcess.stderr.on('data', data =&gt; {     console.log(`tderr: ${data}`);      // Here is where the error output goes   });   pythonChildProcess.on('close', code =&gt; {     console.log(`closing code: ${code}`);     // Here you can get the exit code of the script   }); </code></pre></li> </ol>"			2020-03-20 16:34:07.047 UTC
60787588	javascript|python|html	How to run a specific Javascript function using python	"<p>I have a Javascript file with 2 functions e.g.</p>  <pre><code>function function1(){ console.log(""Hello world"") }  function function2(){ console.log(""Hello world number 2"") } </code></pre>  <p>And I want to have a python function which executes either one of these function, how would I do this? BTW I want to do this as I will make one of my python scripts run and generate a value and I want to use Javascript to display this value onto the HTML file fancily.</p>"	2020-03-21 12:08:39.403 UTC	60788150	"<p>This is possible via setting up Python's backend - then you can render frontend using proper HTML files with specified JS functionality.</p>  <h3>You could use <strong>Flask</strong> in order to handle the backend in Python:</h3>  <p><em>(remember to install flask before you use it <code>pip3 install flask</code>)</em></p>  <pre class=""lang-py prettyprint-override""><code>from flask import Flask, render_template app = Flask(__name__, template_folder= ""/templates"")  @app.route('/function1') def function1():     return render_template('function1.html')  @app.route('/function2') def function2():     return render_template('function2.html')  app.run(port = 8000) </code></pre>  <p><em>(The templates folder contains different websites you want to display - the ones with your JS functionalities)</em></p>  <p>Now when you open your browser with <code>localhost:8000/function1</code> You should see your website showing evaluated <code>function1</code> value</p>"			2020-03-21 13:07:11.447 UTC
60825446	javascript|python|selenium|web-scraping	Selenium Python - Get Table Data Instead of JavaScript Code	"<p>I need some help on a data <strong>Scraping</strong> Task on this : <a href=""https://soilhealth.dac.gov.in/NewHomePage/NutriPage"" rel=""nofollow noreferrer"">https://soilhealth.dac.gov.in/NewHomePage/NutriPage</a> I Managed to fill the dropdown Menu and to click on view using this code :</p> <pre><code>from selenium import webdriver from selenium.webdriver.common.keys import Keys from selenium.webdriver.support.ui import Select from bs4 import BeautifulSoup  url = &quot;https://soilhealth.dac.gov.in/NewHomePage/NutriPage&quot; driver = webdriver.Chrome(executable_path='./chromedriver.exe') driver.get(url)  select = Select(driver.find_element_by_id('NutriCatId')) select.select_by_visible_text('Sample Wise') select = Select(driver.find_element_by_id('CycleId')) select.select_by_visible_text('All Cycle') select = Select(driver.find_element_by_id('State_Code')) select.select_by_visible_text('Andaman And Nicobar Islands') driver.implicitly_wait(5) select = Select(driver.find_element_by_id('District_Code')) select.select_by_visible_text('Nicobars') driver.find_element_by_id('s').click() driver.implicitly_wait(30) soup_level1=BeautifulSoup(driver.page_source, 'lxml') </code></pre> <p>I need to <strong>scrape</strong> the table data from the source code, instead of having it on soup_level1 xml, I only have the javascript code. Any help to know if <strong>scraping</strong> the data is possible using Selenium is possible and how can I do it would be awsome. Thank you for your help.</p>"	2020-03-24 05:33:09.79 UTC	60826038	"<p>Hey the below code does the job. But it is slow since the table is huge and it takes a bit of time to parse. I observed that the report has an export option available so do try to download it directly using Selenium. Oh and for the explanation the report is generated as an iframe which is different from the default source of the page so you need to switch to that frame to get the info. Do let me know for any clarification. The required data is in df variable.</p>  <pre><code># -*- coding: utf-8 -*- """""" Created on Tue Mar 24 11:08:32 2020  @author: prakh """"""  from selenium import webdriver from selenium.webdriver.common.keys import Keys from selenium.webdriver.support.ui import Select from bs4 import BeautifulSoup import pandas as pd import time  url = ""https://soilhealth.dac.gov.in/NewHomePage/NutriPage"" driver = webdriver.Chrome(executable_path='C:/Users/prakh/Documents/PythonScripts/chromedriver.exe')  driver.get(url)  select = Select(driver.find_element_by_id('NutriCatId')) select.select_by_visible_text('Sample Wise') select = Select(driver.find_element_by_id('CycleId')) select.select_by_visible_text('All Cycle') select = Select(driver.find_element_by_id('State_Code')) select.select_by_visible_text('Andaman And Nicobar Islands') driver.implicitly_wait(5) select = Select(driver.find_element_by_id('District_Code')) select.select_by_visible_text('Nicobars') driver.find_element_by_id('s').click() driver.implicitly_wait(30) #soup_level1=BeautifulSoup(driver.page_source, 'lxml')  #src = driver.find_element_by_xpath('//*[@id=""report""]/iframe').get_attribute(""src"")  driver.switch_to.frame(driver.find_element_by_xpath('//*[@id=""report""]/iframe')) time.sleep(10)  html = driver.page_source df_list = pd.read_html(html) df = df_list[-3]  driver.quit() </code></pre>"			2020-03-24 06:39:55.443 UTC
60854088	javascript|python|google-cloud-platform|google-cloud-functions	Python Google cloud function and JavaScript Post request	"<p>I have a Python cloud function with the following code:</p>  <pre><code>import requests import json  def make_func(request):       if request.method == 'OPTIONS':           headers = {                'Access-Control-Allow-Origin': '*',                'Access-Control-Allow-Methods': 'GET, POST',                'Access-Control-Allow-Headers': 'Content-Type',                'Access-Control-Max-Age': '3600',                'Content-Type': '*',                'Content-Length': ""3000""           }            return ('', 204, headers)       request_json = request.get_json()      print(request_json) #THIS SHOWS ""NONE"" IN THE LOGS       domain = request_json['domain']       headers = {                'Access-Control-Allow-Origin': '*',                'Content-Type': '*',                'Content-Length': ""3000""       }          return (str(domain)), 200, headers)  </code></pre>  <p>I want to sent json data with a JavaScript xhr post request to this function. The JS code is the following: </p>  <pre><code>const data = {   domain : ""test.com"" }  var domain = ""blabla.com""; var xhr = new XMLHttpRequest(); xhr.open('POST', domain, true); xhr.send(data); xhr.onreadystatechange = function () { if (this.readyState == 4 &amp;&amp; this.status == 200) {      var result = xhr.responseText;      alert(JSON.stringify(result));   } } </code></pre>  <p>If I looking into the logs of my GCF and I print the request, it says ""None"". It can't find the ""domain"" variable in the request variable in python. Why is this not working?</p>"	2020-03-25 17:25:39.087 UTC	60855714	"<p>you have to set the header:</p>  <pre><code> xhr.setRequestHeader('Content-Type','application/json');  xhr.send(JSON.stringify(data)); </code></pre>"			2020-03-25 19:04:58.997 UTC
60855700	python|jquery|ajax|web	Controlling website (html/javascript) through Python (jQuery/Ajax) without browser	"<p>I am trying to write a small Python-script that opens/loads content from a website (no-browser) and changes values on the website. The website was obviously written for graphical user input through a webrowser, however I now need to change those values automatically and can no change those settings manually.</p>  <p>Below you can find snippet examples for the corresponding HTML and javascript code that changes the values of the homepage. I extracted this code through the ""code inspector"" and don't have access to those.</p>  <p>The website is running locally in my network through http:\*.<em>.</em>.*:8080 where <em>.</em>.<em>.</em> is my IP and 8080 is the port (both fixed).</p>  <p>I assume that the following line is essential, however I'm unclear how to reproduce that with Python:</p>  <pre><code> $.ajax(root+'/settings/' + control + '?set='+val).fail(display_error('cannot_set', control)); </code></pre>  <p>I was looking into several Python packages such as flask, http, request, however I haven't found a good answer how my problem can be solved.</p>  <p>In the end, I'd like to have a Python method with a simple argument call close to this:</p>  <pre><code>def change_crop_x(val):    # Here needs to be the python code I'm unsure of    return True # True if value was succesfully changed  </code></pre>  <p>Any help will be very much appreciated.</p>  <p>Best, Florian</p>  <pre><code>&lt;div class=""form-group"" id=""crop_host""&gt;   &lt;label class=""col-xs-3 control-label""&gt;Crop&lt;/label&gt;   &lt;div class=""col-xs-4""&gt;     &lt;label class=""col-xs-2 nopadding"" for=""range_crop_x""&gt;X:&lt;/label&gt; &lt;input class=""col-xs-10"" id=""range_crop_x"" type=""range"" min=""0"" max=""100"" value=""50""/&gt;   &lt;/div&gt;   &lt;div class=""col-xs-4""&gt;     &lt;label class=""col-xs-2 nopadding"" for=""range_crop_y""&gt;Y:&lt;/label&gt; &lt;input class=""col-xs-10"" id=""range_crop_y"" type=""range"" min=""0"" max=""100"" value=""50"" /&gt;   &lt;/div&gt; &lt;/div&gt; </code></pre>  <p><a href=""https://i.stack.imgur.com/Ly9JM.png"" rel=""nofollow noreferrer"">Example of content to change</a></p>  <pre><code>  var crops = [""crop_x"", ""crop_y""]   var crop_holders = []   for (i in crops) {     var control = crops[i]     crop_holders.push({       val: get_val('#range_'+control),       id: -9999,       upd: function(val) {},       cmd: function(control){ return function(val) {         if (val == 0) {           val = 1;         }         $.ajax(root+'/settings/' + control + '?set='+val).fail(display_error('cannot_set', control));       }} (control)     })   } </code></pre>  <pre><code>if (config.curvals.crop_x != undefined) {       $('#range_crop_x')         .val(config.curvals.crop_x)         .change(scheduleUpdateW(crop_holders[0]));       $('#range_crop_y')         .val(config.curvals.crop_y)         .change(scheduleUpdateW(crop_holders[1]));     } else {       $('#crop_host').hide()     } </code></pre>"	2020-03-25 19:04:17.697 UTC	62885904	"<p>Looking at the elements you provided, I guess the values you are trying to change are from the application IP Webcam.</p> <p>When you modify the value of CROP X by moving the slider, the following HTTP request is sent to the server: GET http://[YOUR_IP_ADDRESS]:8080/settings/crop_x?set=[VALUE] where the [VALUE] is an integer between 0 and 100 and refers to the position on the slider.</p> <p>I am not very familiar with python but, as far as I know, to achieve the same effect with it, you can use the library named &quot;requests&quot; (among others) and the code should look like this (don't forget to replace [YOUR_IP_ADDRESS] with your own IP address):</p> <pre><code>import requests  def change_crop_x(val):     URL = &quot;http://[YOUR_IP_ADDRESS]:8080/settings/crop_x&quot;     PARAMS = {'set':val}     RESPONSE = requests.get(url = URL, params = PARAMS)     if RESPONSE.status_code == 200:         return True     else:         return False </code></pre> <p>The same can be done for CROP Y.</p> <p>For the zoom slider, the corresponding request is GET http://[YOUR_IP_ADDRESS]:8080/ptz?zoom=[VALUE], with [VALUE] being an integer between 0 and 100.</p> <pre><code>def change_zoom(val):     URL = &quot;http://[YOUR_IP_ADDRESS]:8080/ptz&quot;     PARAMS = {'zoom':val}     RESPONSE = requests.get(url = URL, params = PARAMS)     if RESPONSE.status_code == 200:         return True     else:         return False </code></pre>"			2020-07-13 23:36:06.23 UTC
60860379	python|selenium	"Selenium / Python, how to find and invoke a Javascript function with specific HTML text as hyperlink?"	"<p>Using <strong>Selenium/Python</strong>, how do I find this element and click?</p>  <p><strong><code>&lt;a href=""javascript:getZipFile(0,750,'');"" class=""""&gt;All&lt;/a&gt;</code></strong></p>  <p>the parameters in <strong><code>getZipFile()</code></strong> are random, may be different, and there are multiple <strong><code>getZipFile()</code></strong> references</p>  <p>in the HTML, but only one with the text <strong><code>All</code></strong></p>"	2020-03-26 02:57:02.887 UTC	60861123	"<p>Try to find by <code>link text</code>:</p>  <pre><code>driver.find_element_by_link_text(""All"").click() </code></pre>  <p>Or <code>xpath</code>:</p>  <pre><code>driver.find_element_by_xpath(""//a[contains(@href, 'getZipFile') and text()='All']"").click() </code></pre>"			2020-03-26 04:40:44.017 UTC
60872081	javascript|python|flask	How do I receive a variable from python flask to JavaScript?	"<p>I've seen how to make a post request from JavaScript to get data from the server, but how would I do this flipped. I want to trigger a function in the flask server that will then dynamically update the variable on the JavaScript side to display. Is there a way of doing this in a efficient manner that does not involve a periodic iteration. I'm using an api and I only want to the api to be called once to update.</p>"	2020-03-26 16:45:21.79 UTC	60872227	"<p>There are three basic options for you:</p>  <ol> <li><p><strong>Polling</strong> - With this method, you would periodically send a request to the server (maybe every 5 seconds for example) and ask for an update. The upside is that it is easy to implement. The downside is that many requests will be unnecessary. It sounds like this isn't a great option for you. </p></li> <li><p><strong>Long Polling</strong> - This method means you would open a request up with the server and leave the request open for a long period of time. When the server gets new information it will send a response and close the request - after which the client will immediately open up a new ""long poll"" request. This eliminates some of the unnecessary requests with regular polling, but it is a bit of a hack as HTTP was meant for a reasonably short request response cycle. Some PaaS providers only allow a 30 second window for this to occur for example. </p></li> <li><p><strong>Web Sockets</strong> - This is somewhat harder to setup, but ultimately is the best solution for real time server to client (and vice versa) communication. A socket connection is opened between the server and client and data is passed back and forth whenever either party would like to do so. Javascript has full web socket support now and Flask has some extensions that can help you get this working. There are even great third party managed solutions like Pusher.com that can give you a working concept very quickly.</p></li> </ol>"			2020-03-26 16:53:28.753 UTC
60899709	python|selenium|selenium-webdriver|web-scraping|beautifulsoup	How to get data from javascript rendered table using selenium in python	"<p>I have a website to scrape and i am using selenium to do it. When i finished writing the code, i noticed that i was not getting output at all when i print the table contents. I viewed the page source and then i found out that the table was not in the source. That is why even i find the xpath of the table from inspect element i cant get any output of it. Do someone know how could I get the response/data or just printing the table from the javascript response? Thanks.</p>  <p>Here is my current code</p>  <pre><code>from bs4 import BeautifulSoup from selenium import webdriver import time from selenium.webdriver.common.keys import Keys from selenium.webdriver.chrome.options import Options  options = Options() options.add_argument('--incognito') chrome_path = r""C:\chromedriver.exe"" driver = webdriver.Chrome(chrome_path,options=options)  driver.implicitly_wait(3) url = ""https://reversewhois.domaintools.com/?refine#q= %5B%5B%5B%22whois%22%2C%222%22%2C%22VerifiedID%40SG-Mandatory%22%5D%5D%5D"" driver.get(url) html = driver.page_source soup = BeautifulSoup(html,'lxml')  #These line of codes is for selecting the desired search parameter from the combo box, you can disregard this since i was putting the whole url with params input = driver.find_element_by_xpath('//*[@id=""q0""]/div[2]/div/div[1]/div[3]/input') driver.find_element_by_xpath('//*[@id=""q0""]/div[2]/div/div[1]/div[1]/div').click() driver.find_element_by_xpath('//*[@id=""q0""]/div[2]/div/div[1]/div[5]/div[1]/div/div[3]').click() driver.find_element_by_xpath('//*[@id=""q0""]/div[2]/div/div[1]/div[2]/div/div[1]').click() driver.find_element_by_xpath('//*[@id=""q0""]/div[2]/div/div[1]/div[6]/div[1]/div/div[1]').click input.send_keys(""VerifiedID@SG-Mandatory"") driver.find_element_by_xpath('//*[@id=""search-button-container""]/button').click()   table = driver.find_elements_by_xpath('//*[@id=""refine-preview-content""]/table/tbody/tr/td') for i in table:      print(i) no output </code></pre>  <p>I just want to scrape all the domain names like in the first result like <code>0 _ _ .sg</code></p>"	2020-03-28 10:05:25.423 UTC	60904934	"<p>If you are open to other ways does the following give the expected results? It mimics the xhr the page does (though I have trimmed it down to essential elements only) to retrieve the lookup results. Faster than using a browser.</p>  <pre><code>from bs4 import BeautifulSoup as bs import requests import pandas as pd  headers = {'User-Agent': 'Mozilla/5.0'} r = requests.get('https://reversewhois.domaintools.com/?ajax=mReverseWhois&amp;call=ajaxUpdateRefinePreview&amp;q=[[[%22whois%22,%222%22,%22VerifiedID@SG-Mandatory%22]]]&amp;sf=true', headers=headers) table = pd.read_html(r.json()['results']) print(table) </code></pre>"			2020-03-28 18:12:28.23 UTC
60899709	python|selenium|selenium-webdriver|web-scraping|beautifulsoup	How to get data from javascript rendered table using selenium in python	"<p>I have a website to scrape and i am using selenium to do it. When i finished writing the code, i noticed that i was not getting output at all when i print the table contents. I viewed the page source and then i found out that the table was not in the source. That is why even i find the xpath of the table from inspect element i cant get any output of it. Do someone know how could I get the response/data or just printing the table from the javascript response? Thanks.</p>  <p>Here is my current code</p>  <pre><code>from bs4 import BeautifulSoup from selenium import webdriver import time from selenium.webdriver.common.keys import Keys from selenium.webdriver.chrome.options import Options  options = Options() options.add_argument('--incognito') chrome_path = r""C:\chromedriver.exe"" driver = webdriver.Chrome(chrome_path,options=options)  driver.implicitly_wait(3) url = ""https://reversewhois.domaintools.com/?refine#q= %5B%5B%5B%22whois%22%2C%222%22%2C%22VerifiedID%40SG-Mandatory%22%5D%5D%5D"" driver.get(url) html = driver.page_source soup = BeautifulSoup(html,'lxml')  #These line of codes is for selecting the desired search parameter from the combo box, you can disregard this since i was putting the whole url with params input = driver.find_element_by_xpath('//*[@id=""q0""]/div[2]/div/div[1]/div[3]/input') driver.find_element_by_xpath('//*[@id=""q0""]/div[2]/div/div[1]/div[1]/div').click() driver.find_element_by_xpath('//*[@id=""q0""]/div[2]/div/div[1]/div[5]/div[1]/div/div[3]').click() driver.find_element_by_xpath('//*[@id=""q0""]/div[2]/div/div[1]/div[2]/div/div[1]').click() driver.find_element_by_xpath('//*[@id=""q0""]/div[2]/div/div[1]/div[6]/div[1]/div/div[1]').click input.send_keys(""VerifiedID@SG-Mandatory"") driver.find_element_by_xpath('//*[@id=""search-button-container""]/button').click()   table = driver.find_elements_by_xpath('//*[@id=""refine-preview-content""]/table/tbody/tr/td') for i in table:      print(i) no output </code></pre>  <p>I just want to scrape all the domain names like in the first result like <code>0 _ _ .sg</code></p>"	2020-03-28 10:05:25.423 UTC	60899801	"<p>You can try the below code. After you have selected all the details options to fill and click on the search button it is kind of an implicit wait to make sure we get the full page source. Then we used the read_html from pandas which searches for any tables present in the html and returns a list of dataframe. we take the required df from there.</p>  <pre><code>from selenium import webdriver import time from selenium.webdriver.chrome.options import Options import pandas as pd  options = Options() options.add_argument('--incognito') chrome_path = r""C:/Users/prakh/Documents/PythonScripts/chromedriver.exe"" driver = webdriver.Chrome(chrome_path,options=options)  driver.implicitly_wait(3) url = ""https://reversewhois.domaintools.com/?refine#q=%5B%5B%5B%22whois%22%2C%222%22%2C%22VerifiedID%40SG-Mandatory%22%5D%5D%5D"" driver.get(url) #html = driver.page_source #soup = BeautifulSoup(html,'lxml')  #These line of codes is for selecting the desired search parameter from the combo box input = driver.find_element_by_xpath('//*[@id=""q0""]/div[2]/div/div[1]/div[3]/input') driver.find_element_by_xpath('//*[@id=""q0""]/div[2]/div/div[1]/div[1]/div').click() driver.find_element_by_xpath('//*[@id=""q0""]/div[2]/div/div[1]/div[5]/div[1]/div/div[3]').click() driver.find_element_by_xpath('//*[@id=""q0""]/div[2]/div/div[1]/div[2]/div/div[1]').click() driver.find_element_by_xpath('//*[@id=""q0""]/div[2]/div/div[1]/div[6]/div[1]/div/div[1]').click input.send_keys(""VerifiedID@SG-Mandatory"") driver.find_element_by_xpath('//*[@id=""search-button-container""]/button').click()  time.sleep(5) html = driver.page_source tables = pd.read_html(html)  df = tables[-1] print(df) </code></pre>"			2020-03-28 10:14:12.767 UTC
60918799	javascript|python|jquery|html|json	Send json data to hosted python flask api using javascript on html button click and printing the response from API on a HTML label	"<p>I've hosted a python flask api on pythonanywhere. It takes json input, performs some operations and returns response in json format.</p>  <p>I've a website that tries to call this API and should display the response.</p>  <p>Button click calls a javascript function apicall().</p>  <p>HTML code:</p>  <pre><code>&lt;button type=""submit"" name = ""submit"" id = ""submit"" onclick=""apicall()""&gt;Check&lt;/button&gt; &lt;label id=""response""&gt;&lt;/label&gt; </code></pre>  <p>Javascript Function (It tries to set the label text to the response text):</p>  <pre><code>&lt;script type=""text/javascript""&gt; function apicall(){     xmlObj = new XMLHttpRequest(); //suddenly global scope   xmlObj.open(""POST"",""http://abc.pythonanywhere.com/xyz"",true);   xmlObj.setRequestHeader(""Content-Type"", ""application/json"");   var website=document.getElementById(""url"").value;   var data = JSON.stringify({""url"": website});   xmlObj.send(data);   xmlObj.onreadystatechange = handleRequestStateChange();   function handleRequestStateChange(){     alert(""here"");   if(xmlObj.readyState == 4 &amp;&amp; xmlObj.status==200){     var json = JSON.parse(xmlObj.responseText);     document.getElementById(""response"").innerHTML =json.prediction;     alert(""if loaded"");   }   else   {       alert(xmlObj.status);   }  } } &lt;/script&gt; </code></pre>  <p>However, it alerts status 0. </p>  <p>Error printed on console says: ""[CORS]The origin  did not find the origin  in the access-control-allow-origin in the request header for cross-origin resource at <a href=""http://abc.pythonanywhere.com/xyz"" rel=""nofollow noreferrer"">http://abc.pythonanywhere.com/xyz</a>""</p>  <p>Network Tab in developer tools shows the connection to python anywhere and response code of 200[ok]</p>  <p>Referred links:</p>  <p><a href=""https://stackoverflow.com/questions/2000609/why-is-ajax-returning-http-status-code-0"">Why is AJAX returning HTTP status code 0?</a></p>  <p><a href=""https://stackoverflow.com/questions/5005960/xmlhttprequest-status-0-responsetext-is-empty"">XMLHttpRequest status 0 (responseText is empty)</a></p>  <p>But was not able to solve the issue</p>  <p>I also tried jquery to do the same thing</p>  <pre><code>&lt;script&gt;         $(document).ready( function() {         $('#submit').click(function() {            var website=document.getElementById(""url"").value;            $.ajax({                 type: 'POST',                 contentType: 'application/json',                 data: JSON.stringify(website),                 dataType: 'json',                 url: 'http://abc.pythonanywhere.com/xyz',                 success: function (e) {                    alert(e);                    console.log(e);                    window.location = ""https://www.google.com""                 },                 error: function(error) {                 console.log(error);             }             });         });   }); &lt;/script&gt; </code></pre>  <p>But the jquery code just reloads the page when I click that button with no errors anywhere(or maybe the error log and network log just clears up because of reload).</p>  <p>How can I allow the cross origin requests on python API or how do change the code in javascript or jquery to make this thing work?</p>"	2020-03-29 18:19:58.37 UTC	60919444	<p>I was able to solve this issue by adding the following lines to python rest API.</p>  <p>pip install -U flask-cors</p>  <pre><code>from flask_cors import CORS cors = CORS(app) </code></pre>			2020-03-29 19:09:54.52 UTC
60938359	javascript|python	How to get Python to run JavaScript on a open chrome tab?	"<p>I've made a python script that grabs IPs you connect to on a website and stores them. I'm checking each time since I don't want to connect to the same IP twice. (This is a bit buggy since I get multiple requests, if someone can explain how to put a timer on the skip call without disrupting the rest of the program).</p>  <p>To auto skip them I'm trying to write a JS script to do so. I think I have the click figured out, but how do I get my python script (local) to tell the javascript to run in the browser? Chrome specifically if that helps.</p>"	2020-03-30 19:46:50.8 UTC	60938564	"<p>you can use a webdriver for the desired browser and execute javascript code in the browser head and then execute javascript in the browser head from python code much like the auto login commented feature in this application  <a href=""https://github.com/engMaher/BAF/blob/master/BAF_0.2.0.py"" rel=""nofollow noreferrer"">https://github.com/engMaher/BAF/blob/master/BAF_0.2.0.py</a> </p>"			2020-03-30 19:58:28.41 UTC
60957769	python|xpath	Reading Javascript array as key value pairs using python xpath	"<p>How can I read the below Javascript array as key value pairs using python xpath? OUtput in python would be ['id', '359521','name', 'HO1 mini-briefs HO1' etc]</p>  <p>Possibly in 1 go to get a python list element where I can access the data</p>  <p>Help appreciated</p>  <h1>JAVASCRIPT IN HTML</h1>  <pre><code>   &lt;script type=""text/javascript""&gt;         var wcIsGtm = false;     var productImpressions = [];     var promoImpressions = [];     var wcGuaTrackerName = '';     var wcGuaGlobalTrackerName = 'allstores.';     var wcGuaGlobalTrackerEnabled = '0';      var referralExclusionList = [];      if(document.referrer) {         for(excludedDomain in referralExclusionList) {             if(document.referrer.indexOf(excludedDomain) != -1) {                 document.referrer = '';             }         }     }           (function(w,e,b,c,oo,ki,ng){w['GoogleAnalyticsObject']=oo;w[oo]=w[oo]||function(){         (w[oo].q=w[oo].q||[]).push(arguments)},w[oo].l=1*new Date();ki=e.createElement(b),         ng=e.getElementsByTagName(b)[0];ki.async=1;ki.src=c;ng.parentNode.insertBefore(ki,ng)         })(window,document,'script','//www.google-analytics.com/analytics.js','ga');      ga('create', 'UA-19354276-10', 'auto'); ga('require', 'ec'); ga('set', '&amp;cu', 'EUR');                 var productDetail = {                  'id': '359521',                  'name': 'HO1 mini-briefs HO1',                  'category': 'Collection HOM Basics/Slips',                  'brand': '',                  'price': '10.4',                  'variant': ''              };              ga('ec:addProduct', productDetail);              ga('ec:setAction', 'detail');   ga('send', 'pageview');   &lt;/script&gt;   &lt;meta property=""og:locale"" content=""en_US"" /&gt; &lt;meta property=""og:title"" content=""HO1 mini-briefs HO1"" /&gt; &lt;meta property=""og:type"" content=""product"" /&gt;  </code></pre>  <h1>another example would be</h1>  <pre><code>     var AWACP_CONFIG = {         mageVersion: '1.9.3.1',         useProgress : 1,         popupForAllProducts : 0,         addProductConfirmationEnabled : 1,         removeProductConfirmationEnabled : 1,         dialogsVAlign: 'center',         cartAnimation: 'opacity',         addProductCounterBeginFrom : 0,         removeProductCounterBeginFrom : 0,           hasFileOption : false    };  </code></pre>  <h1>Possible code logic</h1>  <pre><code># todo make more robust to read JS data  var_to_find = 'productDetail' pattern = re.compile(r""var {var_to_find}} ?= ?({.*?});"", re.MULTILINE | re.DOTALL) xpath_string = ""//script[contains(text(), 'var %s')]/text()"" % var_to_find js_data = response.xpath(xpath_string)[0].rstrip() js_data = js_data.re(pattern)[0] json_data = json.loads(js_data) print(json_data)  The idea is to  1. find JS variable based on some input var (we know the var name) 2. it finds the data inside {.*} 3. it strips alle spaces, newlines, comments and only keeps ""var1"":""data"",""var3"":""data"",""var3"":""data"", 4. then split on , to obtain key values pairs 5. then split on : to set key and values in list, excluding "" or '  Step 3 is the most complet because it needs to be robust to deal with any kind of formatting  </code></pre>"	2020-03-31 18:47:38.307 UTC	60972527	"<p>If I understand you correctly, you can do something like the below. Note that xpath isn't going to work here and regex is problematic. So the cleanest way to do it, I believe, is with string manipulation and a dictionary.</p>  <p>For the first:</p>  <pre><code>arr = """"""your first html example"" splt_str = 'var productDetail = {' trg = arr.split(splt_str)[1].split('}')[0].split(',') stf = {} for t in trg:     entry = t.strip().replace(""'"","""").split(':')     stf[entry[0]]= entry[1] for k, v in stf.items():     print(k, v) </code></pre>  <p>Output:</p>  <pre><code>id  4002021 name  Tommy string category  Collection Brand Basics brand   price  8.31 variant   </code></pre>  <p>For the second, change the first two lines to:</p>  <pre><code>arr = """"""your second html example"" splt_str = 'var AWACP_CONFIG = {' </code></pre>  <p>Output:</p>  <pre><code>mageVersion  1.9.3.1 useProgress   1 popupForAllProducts   0 addProductConfirmationEnabled   1 removeProductConfirmationEnabled   1 dialogsVAlign  center cartAnimation  opacity addProductCounterBeginFrom   0 removeProductCounterBeginFrom   0 hasFileOption   false </code></pre>"			2020-04-01 13:55:40.777 UTC
60977649	javascript|python|datetime	Using Python to parse date/time strings in *exactly* the same way as Javascript?	"<p>I have some client-side JavaScript code which reads a string and tries to parse it into a Date() object via <code>new Date(theString)</code>, displaying the resulting Date as a UTC string to the user. If it's a string that can't be turned into a Date, of course, it becomes an <code>Invalid Date</code>, in which case instead it displays ""Not a date/time.""</p>  <p>I also have some server-side Python code which essentially does the same thing: takes the user-submitted maybe-a-date, and stores it as either a UTC string or as ""not a date"".</p>  <p>The trick is, I need the two pieces of code to always behave exactly the same on every single string. I could certainly just make a tiny Python endpoint that uses the existing Python code to send the appropriate response back to the client instead of using <code>Date()</code> client-side, but for various reasons that's an undesirable solution.</p>  <p>So is there a way to translate strings into dates in Python that's guaranteed to work exactly the same way as <code>new Date(myString)</code> does in JavaScript?</p>"	2020-04-01 18:17:00.177 UTC	60981266	"<blockquote>   <p>So is there a way to translate strings into dates in Python that's guaranteed to work exactly the same way as new Date(myString) does in JavaScript?</p> </blockquote>  <p>No.</p>  <p>It's impossible, because:</p>  <ol> <li>Parsing of strings other than the two formats specified in ECMA-262 is implementation dependent and it is easily demonstrated that different implemetations parse the same string differently (e.g. <a href=""https://stackoverflow.com/questions/60960821/why-does-date-parsecovingtonoffice-2-return-a-real-date""><em>Why does Date.parse('COVINGTONOFFICE-2') return a real date?</em></a>)</li> <li>How various implementations parse unsupported formats is not documented, so you can only determine the rules through observing behaviour of every possible string, including those that look nothing like a date, in every implementation, then knowing which implementation you were trying to imitate</li> </ol>"			2020-04-01 22:22:22.14 UTC
60981170	javascript|python|python-3.x	Python run JavaScript 3.8	<p>I have node.js installed and want to know if there is any way to run js code on <strong>python 3.8</strong>. I need to use a large piece of code (babylon) for my web application. Is there any easy way to do this?</p>	2020-04-01 22:14:47.937 UTC	60981577	"<p>I do like the answer given. I would like to add that one could use the Naked library:</p>  <pre class=""lang-py prettyprint-override""><code>from Naked.toolshed.shell import execute_js execute_js('file.js') </code></pre>  <p>One can read more here: <a href=""https://naked.readthedocs.io/"" rel=""nofollow noreferrer"">https://naked.readthedocs.io/</a></p>"			2020-04-01 22:54:23.963 UTC
60981170	javascript|python|python-3.x	Python run JavaScript 3.8	<p>I have node.js installed and want to know if there is any way to run js code on <strong>python 3.8</strong>. I need to use a large piece of code (babylon) for my web application. Is there any easy way to do this?</p>	2020-04-01 22:14:47.937 UTC	60981379	"<h1>Running Code</h1>  <p>I admit I have not messed with this before, but I think the best way to go about it is to have a js file that you can run from python. I found 2 ways to accomplish this- one that returns output and one that simply just runs it.</p>  <h2>Getting Output</h2>  <p>You may be able to use the <code>subprocess</code> module to run the node and record it's output for later use.</p>  <pre><code>import subprocess myValue = subprocess.check_output(['node','index.js']) </code></pre>  <p><a href=""https://docs.python.org/3/library/subprocess.html?highlight=subprocess#subprocess.check_output"" rel=""nofollow noreferrer"">Python <code>subprocess.check_output</code> Documentation</a></p>  <h2>No Output</h2>  <p>If you do not require to read the output of the file, you can just run it with the <code>os</code> module.</p>  <pre><code>import os os.system(""node index.js"") </code></pre>  <p><a href=""https://docs.python.org/3/library/subprocess.html?highlight=subprocess#subprocess.check_output"" rel=""nofollow noreferrer"">Python <code>os.system</code> documentation</a></p>"			2020-04-01 22:32:04.263 UTC
60987698	python|python-3.x|selenium	"Python says ""Please enable JavaScript and Cookies in your browser."" in Selenium webdriver"	"<pre><code>from selenium import webdriver import time from bs4 import BeautifulSoup  driver = webdriver.Chrome(executable_path = ""C:/Users/USER/Desktop/chromedriver.exe"") url="""" driver.get(url) html = driver.page_source soup = BeautifulSoup(html,  ""html.parser"") print(soup) </code></pre>  <p>When i try to use the selenium, ""window.onload=function(){process();}<p>Please enable JavaScript and Cookies in your browser.</p>"" is shown. How can i enable JavaScript?</p>"	2020-04-02 08:55:43.173 UTC	60988504	"<p>Try enabling javascript:</p>  <pre><code>options = webdriver.ChromeOptions() options.add_argument(""--enable-javascript"") </code></pre>"			2020-04-02 09:37:39.213 UTC
61012016	javascript|python|html|plotly|plotly-dash	Dash Python - using external Javascript to display image	"<p><strong>Dear readers,</strong></p>  <p>I want to display an image on a Python Dash page that is generated by some JS code. See the description here: <a href=""https://www.altmetric.com/assets/Getting_Started_Altmetric_Badges.pdf"" rel=""nofollow noreferrer"">https://www.altmetric.com/assets/Getting_Started_Altmetric_Badges.pdf</a>. In a static HTML page one would include this script </p>  <pre><code>&lt;script type='text/javascript' src='https://d1bxh8uas1mnw7.cloudfront.net/assets/embed.js'&gt;&lt;/script&gt; </code></pre>  <p>and this DIV will show the image:</p>  <pre><code>&lt;div class='altmetric-embed' data-badge-type='donut' data-doi=""10.1038/nature.2012.9872""&gt;&lt;/div&gt; </code></pre>  <p>Im trying to get this working in Dash but not even once the image/badge is shown. I tried several options for injecting te DIV (with dash_dangerously_set_inner_html.DangerouslySetInnerHTML() or with the attributesd of DIV using '**{'), and including the SCRIPT (in the custom HEAD of the var index_string, as Html.Script(), as external_scripts and with options serve_locally = False/True), but none seems to work. Good to mention is that Dash serves me a page with only the ""Hello World"" string but without any images. But when I locally store the generated HTML code to a HTML file and open it in my browser, the images are shown !</p>  <p>Localhost gives me: <a href=""https://i.stack.imgur.com/G4EFu.jpg"" rel=""nofollow noreferrer"">this view</a>, whereas the same page gives me locally: <a href=""https://i.stack.imgur.com/Z0iT0.jpg"" rel=""nofollow noreferrer"">this view</a></p>  <p>See included (minimal) non-working example.</p>  <p>Any suggestions here ?</p>  <p>Kind regards, IvoB</p>  <pre><code>#SEE: https://www.altmetric.com/assets/Getting_Started_Altmetric_Badges.pdf import dash import dash_dangerously_set_inner_html import dash_html_components as html  external_stylesheets = ['https://codepen.io/chriddyp/pen/bWLwgP.css'] external_scripts = ['https://d1bxh8uas1mnw7.cloudfront.net/assets/embed.js'] app = dash.Dash(__name__, external_scripts=external_scripts, external_stylesheets=external_stylesheets) app.css.config.serve_locally = False app.scripts.config.serve_locally = False  app.index_string = ''' &lt;!DOCTYPE html&gt; &lt;html&gt;     &lt;head&gt;         &lt;script type='text/javascript' src='https://d1bxh8uas1mnw7.cloudfront.net/assets/embed.js'&gt;&lt;/script&gt;         {%metas%}         &lt;title&gt;{%title%}&lt;/title&gt;         {%favicon%}         {%css%}     &lt;/head&gt;     &lt;body&gt;         &lt;div&gt;My Custom header&lt;/div&gt;         {%app_entry%}         &lt;footer&gt;             {%config%}             {%scripts%}             {%renderer%}         &lt;/footer&gt;         &lt;div&gt;My Custom footer&lt;/div&gt;     &lt;/body&gt; &lt;/html&gt; '''  app.layout = html.Div([     html.Script(src='https://d1bxh8uas1mnw7.cloudfront.net/assets/embed.js'),     html.Div('Hello world'),     html.Div(dash_dangerously_set_inner_html.DangerouslySetInnerHTML(""&lt;div class='altmetric-embed' data-badge-type='donut' data-doi='10.1038/nature.2012.9872'&gt;&lt;/div&gt;"")),     html.Div(className='altmetric-embed', **{'data-badge-type' : 'donut', 'data-doi' : '10.1038/nature.2012.9872'}) ])  if __name__ == '__main__':     app.run_server(debug=True) </code></pre>"	2020-04-03 12:33:04.75 UTC	68433155	"<p>The problem is that Dash hasn't finished rendering the <code>altmetric</code> div yet so the script doesn't act on it.</p> <p>If you put</p> <pre><code>&lt;div class='altmetric-embed' data-badge-type='donut' data-doi='10.1038/nature.2012.9872'&gt;&lt;/div&gt; </code></pre> <p>inside the body of the <code>index_string</code> you will notice that the badge does show up.</p> <p>If you want the div in the dash layout to work with the script you could use something like <a href=""https://github.com/zouhairm/dash_defer_js_import"" rel=""nofollow noreferrer"">dash_defer_js_import</a> to defer execution of the altmetric script.</p> <p>You can install it with:</p> <pre><code>pip install dash_defer_js_import </code></pre> <p>and use it like this:</p> <pre><code>import dash import dash_html_components as html import dash_defer_js_import as dji  app = dash.Dash(__name__)  app.layout = html.Div(     [         html.Div(             className=&quot;altmetric-embed&quot;,             **{&quot;data-badge-type&quot;: &quot;donut&quot;, &quot;data-doi&quot;: &quot;10.1038/nature.2012.9872&quot;}         ),         dji.Import(src=&quot;https://d1bxh8uas1mnw7.cloudfront.net/assets/embed.js&quot;),     ] )   if __name__ == &quot;__main__&quot;:     app.run_server() </code></pre> <p>For better understanding what this <code>Import</code> component is doing you can look at the source code <a href=""https://github.com/zouhairm/dash_defer_js_import/blob/master/src/lib/components/Import.react.js"" rel=""nofollow noreferrer"">here</a>.</p>"			2021-07-18 21:18:02.1 UTC
61019082	javascript|python|recursion	Javascript vs python: Different output for a function with two recursion branches	"<p>I have been translating python code to javascript with no problems but for the following example I fail to do so and don't know what is the reason. It seems that the javascript code yields a totally different output from that of python despite the similar code. I have investigated the problem and it appears that javascript doesn't execute the second recursion branch? Anyone knows how can I make the javascript code to output similarly to that of python? Thanks</p>  <p>1- Python code:</p>  <pre><code>def createNode(_id, right, left):     return {'id': _id, 'left': left, 'right': right}  n1 = createNode(1, None, None) n2 = createNode(2, None, None) n3 = createNode(3, None, None) n4 = createNode(4, None, None) n5 = createNode(1, n1, n2) n6 = createNode(2, n3, n4) n7 = createNode(3, n5, n6)  def DownTree(lst, node):      left = node['left']     right = node['right']       if(right == None):         lst.append(node['id'])     else:         DownTree(lst, right)         if(left == None):         lst.append(node['id'])     else:         print('will excute')         DownTree(lst, left)   lst = [] DownTree(lst, n7)  print(lst) ## outputs: [1, 1, 2, 2, 3, 3, 4, 4] </code></pre>  <p>2- Javascript Code:</p>  <pre><code>function createNode(_id, right, left){     return {'id': _id, 'left': left, 'right': right} } n1 = createNode(1, undefined, undefined) n2 = createNode(2, undefined, undefined) n3 = createNode(3, undefined, undefined) n4 = createNode(4, undefined, undefined) n5 = createNode(1, n1, n2) n6 = createNode(2, n3, n4) n7 = createNode(3, n5, n6)  function DownTree(lst, node){    left = node['left']   right = node['right']     if(right == undefined){     lst.push(node['id'])   }   else{     DownTree(lst, right)   }     if(left == undefined){     lst.push(node['id'])   }   else{     console.log('not executed!')     DownTree(lst, left)   } }   lst = [] DownTree(lst, n7) console.log(lst) // outputs: [1, 1, 1, 3] </code></pre>"	2020-04-03 19:24:35.907 UTC	61019202	<p>In your JS <code>left</code> and <code>right</code> are not scoped correctly. You need to add <code>var</code> or <code>let</code> to their definitions so that they are not global</p>  <pre><code>var left = node['left'] var right = node['right']  </code></pre>			2020-04-03 19:32:22.723 UTC
61063536	javascript|java|encoding|base64|utf-16	"Base64 UTF-16 encoding between java, python and javascript applications"	"<p>As a sample I have the following string, that I presume to be under utf-16 encoding: ""hühühüh"". </p>  <p>In python I get the following result when encoding</p>  <pre><code>&gt;&gt;&gt; base64.b64encode(""hühühüh"".encode(""utf-16"")) b'//5oAPwAaAD8AGgA/ABoAA==' </code></pre>  <p>In java:</p>  <pre><code>&gt;&gt;&gt; String test = ""hühühüh""; &gt;&gt;&gt; byte[] encodedBytes = Base64.getEncoder().encode(test.getBytes(StandardCharsets.UTF_16)); &gt;&gt;&gt; String testBase64Encoded = new String(encodedBytes, StandardCharsets.US_ASCII); &gt;&gt;&gt; System.out.println(testBase64Encoded); /v8AaAD8AGgA/ABoAPwAaA== </code></pre>  <p>In javascript I define a binary encoding function as per the <a href=""https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/btoa"" rel=""nofollow noreferrer"">Mozilla dev guideline</a> and then encode the same string.</p>  <pre><code>&gt;&gt; function toBinary(string) {                                                                                                                                   const codeUnits = new Uint16Array(string.length);       for (let i = 0; i &lt; codeUnits.length; i++) {           codeUnits[i] = string.charCodeAt(i);       }       return String.fromCharCode(...new Uint8Array(codeUnits.buffer));   } &gt;&gt; atob(toBinary(""hühühüh""))  aAD8AGgA/ABoAPwAaAA= </code></pre>  <p>As you can see, each encoder created a distinct base64 string. So lets reverse the encoding again.</p>  <p>In Python all the generated strings decode fine again:</p>  <pre><code>&gt;&gt;&gt; base64.b64decode(""//5oAPwAaAD8AGgA/ABoAA=="").decode(""utf-16"") 'hühühüh' &gt;&gt;&gt; base64.b64decode(""/v8AaAD8AGgA/ABoAPwAaA=="").decode(""utf-16"") 'hühühüh' &gt;&gt;&gt; base64.b64decode(""aAD8AGgA/ABoAPwAaAA="").decode(""utf-16"") 'hühühüh' </code></pre>  <p>In javascript using the fromBinary function again as per the <a href=""https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/btoa"" rel=""nofollow noreferrer"">Mozilla dev guideline</a>:</p>  <pre><code>&gt;&gt;&gt; function fromBinary(binary) {   const bytes = new Uint8Array(binary.length);   for (let i = 0; i &lt; bytes.length; i++) {     bytes[i] = binary.charCodeAt(i);  }   console.log(...bytes)   return String.fromCharCode(...new Uint16Array(bytes.buffer)); } &gt;&gt;&gt; fromBinary(window.atob(""//5oAPwAaAD8AGgA/ABoAA=="")) ""\ufeffhühühüh"" &gt;&gt;&gt; fromBinary(window.atob(""/v8AaAD8AGgA/ABoAPwAaA=="")) ""\ufffe栀ﰀ栀ﰀ栀ﰀ栀"" &gt;&gt;&gt; fromBinary(window.atob(""aAD8AGgA/ABoAPwAaAA="")) ""hühühüh"" </code></pre>  <p>And finally in Java:</p>  <pre><code>&gt;&gt;&gt; String base64Encoded = ""//5oAPwAaAD8AGgA/ABoAA==""; &gt;&gt;&gt; byte[] asBytes = Base64.getDecoder().decode(base64Encoded); &gt;&gt;&gt; String base64Decoded = new String(asBytes, StandardCharsets.UTF_16); &gt;&gt;&gt; System.out.println(base64Decoded); hühühüh &gt;&gt;&gt; String base64Encoded = ""/v8AaAD8AGgA/ABoAPwAaA==""; &gt;&gt;&gt; byte[] asBytes = Base64.getDecoder().decode(base64Encoded); &gt;&gt;&gt; String base64Decoded = new String(asBytes, StandardCharsets.UTF_16); &gt;&gt;&gt; System.out.println(base64Decoded); hühühüh &gt;&gt;&gt; String base64Encoded = ""aAD8AGgA/ABoAPwAaAA=""; &gt;&gt;&gt; byte[] asBytes = Base64.getDecoder().decode(base64Encoded); &gt;&gt;&gt; String base64Decoded = new String(asBytes, StandardCharsets.UTF_16); &gt;&gt;&gt; System.out.println(""Decoded"" + base64Decoded); hühühüh </code></pre>  <p>We can see that python's base64 decoder is able to encode and decode messages for and from the other two parsers. But the definitions between the Java and Javascript parsers do not seem to be compatible with each other. I do not understand why this is. Is this a problem with the base64 libraries in Java and Javascript and if so, are there other tools or routes that let us pass base64 encoded utf-16 strings between a Java and Javascript application? How can I ensure safe base64 string transport between Java and Javscript applications by using tools as close to core language functionality as possible?</p>  <p>EDIT: As said in the accepted answer, the problem is different utf16 encodings. The compatibility problem between Java and Javascript can either be solved by generating the utf16 bytes in Javascript in reverse order, or accepting the encoded string as <code>StandardCharsets.UTF_16LE</code>.</p>"	2020-04-06 15:40:42.877 UTC	61063773	"<p>The problem is that there are 4 variants of <code>UTF-16</code>.</p>  <p>This character encoding uses two bytes per code unit. Which of the two bytes should come first? This creates two variants:</p>  <ul> <li>UTF-16BE stores the most significant byte first.</li> <li>UTF-16LE stores the least significant byte first.</li> </ul>  <p>To allow telling the difference between these two, there is an optional ""byte order mark"" (BOM) character, U+FEFF, at the start of the text. So UTF-16BE with BOM starts with the bytes <code>fe ff</code> while UTF-16LE with BOM starts with <code>ff fe</code>. Since BOM is optional, its presence doubles the number of possible encodings.</p>  <p>It looks like you are using 3 of the 4 possible encodings:</p>  <ul> <li>Python used UTF-16LE with BOM</li> <li>Java used UTF-16BE with BOM</li> <li>JavaScript used UTF-16LE without BOM</li> </ul>  <p>One of the reasons why people prefer UTF-8 to UTF-16 is to avoid this confusion.</p>"			2020-04-06 15:53:52.157 UTC
61071641	javascript|python|url|download|python-requests	How to Download .XML File From Website Through JavaScript Button Using Python	"<p>I am trying to download a customized XML file from this website: <a href=""http://data.un.org/Data.aspx?d=CLINO&amp;f=ElementCode:11;StatisticCode:01&amp;c=1,2,5,17,18,44&amp;s=CountryName:asc,WmoStationNumber:asc,StatisticCode:asc&amp;v=1"" rel=""nofollow noreferrer"">http://data.un.org/Data.aspx?d=CLINO&amp;f=ElementCode:11;StatisticCode:01&amp;c=1,2,5,17,18,44&amp;s=CountryName:asc,WmoStationNumber:asc,StatisticCode:asc&amp;v=1</a></p>  <p>The  method I am most familiar with is using pd.read_csv, but in this case right-clicking the download link and copying the link address generates:</p>  <pre><code>javascript:Download('xml','CLINO','ElementCode:11;StatisticCode:01','s=CountryName:asc,WmoStationNumber:asc,StatisticCode:asc','c=1,2,5,17,18,44',''); </code></pre>  <p>I tried the solution posted <a href=""https://stackoverflow.com/questions/55918415/is-there-any-way-to-download-csv-file-from-website-button-click-using-python"">here</a> but unfortunately the process deviated at Step 4. </p>  <p>Using python, how do I access the .xml file to download and save?</p>"	2020-04-07 01:58:24.447 UTC	61073312	"<pre class=""lang-py prettyprint-override""><code>import requests import pandas as pd  params = {     'Service': 'page',     'DataFilter': 'ElementCode:11;StatisticCode:01',     'DataMartId': 'CLINO',     'UserQuery': '',     'c': '1,2,5,17,18,44' }   def main(url, params):     with requests.Session() as req:         allin = []         for item in range(1, 23):             print(f""Extracting Page# {item}"")             params['Page'] = item             r = req.get(url, params=params)             df = pd.read_html(r.content)[0]             allin.append(df)         new = pd.concat(allin)         print(new)         new.to_csv(""Data.csv"", index=False)   main(""http://data.un.org/Handlers/DataHandler.ashx"", params) </code></pre>"			2020-04-07 05:23:52.12 UTC
61089348	javascript|python|android|hook|frida	"Frida +Python+Javascript what does ""java.use (""XXX"") "" do when the class can not be found?"	"<p>I use the following javascrip inside python (in android + frida environment) to hook a method. </p>  <pre><code>jscode ="""""" Java.perform(function () {      console.log(""start hook..."");     var d =java.use(""myapp.okhttp3.internal.f.a"");     d.verify.implementation =function(p1, p2){     console.log(""ssl unpinning for"");      return true;      } }); """"""  </code></pre>  <p>This is the python file:</p>  <pre><code>import sys   import os   import threading   import subprocess   import frida   import time   jscode ="""""" Java.perform(function () {      console.log(""start hook..."");     var d =java.use(""myapp.okhttp3.internal.f.a"");     d.verify.implementation =function(p1, p2){     console.log(""ssl unpinning for"");      return true;      } }); """"""   os.system('adb forward tcp:27042 tcp:27042')   os.system('adb forward tcp:27043 tcp:27043')    APP_NAME = 'myapp'    device = frida.get_usb_device(1) pid = device.spawn([APP_NAME])   device.resume(pid)   time.sleep(1)   process = device.attach(pid)   print('success') script = process.create_script(jscode)  print(pid)  script.load()  print('script loaded')  input() </code></pre>  <p>My question is: Does <code>var d =java.use(""myapp.okhttp3.internal.f.a"")</code>  throw ""class not found exception"" when the class can not be found, and how to view this exception? can I use codes like <strong>console.log(java.use(""myapp.okhttp3.internal.f.a"")</strong> to log ""class not found exception""?</p>"	2020-04-07 21:01:15.487 UTC	61103052	"<p>You can use surround try-catch in js and catch @ handle in python</p>  <pre class=""lang-js prettyprint-override""><code>try {   var d =... } catch (e) {   send(JSON.stringify(e)); } </code></pre>  <p>In python side</p>  <pre class=""lang-py prettyprint-override""><code>def on_message(msg, _data):   # check if msg has error and handle  script.on('message', on_message) </code></pre>"			2020-04-08 14:23:39.77 UTC
61101997	javascript|python-3.x|eel	Returning Array from Python to Javascript	"<p>I was trying to return an array of data from python function to Javascript. I am using eel python module. The python function returns a string with ease, but when I tried to return an array object, it returns nothing to javascript.</p>  <p>Here is the python function:</p>  <pre><code>@eel.expose  def get_list_data(column_name):     tree = ET.parse('resources.xml')     root = tree.getroot()      column_list_data = []      for child in root.findall('column'):         if child.get('name') == column_name:             for grandchild in child:                 column_list_data.append(grandchild.text)     return(column_list_data) </code></pre>  <p>And here is the javascript function.</p>  <pre><code>function getListData(){     let retData = eel.get_list_data(""Response"")();     console.log(retData); }  getListData(); </code></pre>  <p>Here is the console log shows.</p>  <pre><code>Promise __proto__: Promise [[PromiseStatus]]: ""resolved"" [[PromiseValue]]: Array(0) </code></pre>"	2020-04-08 13:35:33.63 UTC	61102330	"<p>That is, because retData seems to be a Promise. Please consider reading the following (<a href=""https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Global_Objects/Promise"" rel=""nofollow noreferrer"">MDN Promise</a>) for a deeper understanding of promises in javascript.</p>  <p>The promise is executed asynchronously. The code below the ""then-callback"" is executed in case that the promise has been resolved successfully.  To give you something to start with: </p>  <pre><code>function getListData(){     let retData = eel.get_list_data(""Response"")()        .then(retData =&gt; {            console.log(retData);        })        .catch(e =&gt; console.log(e)); } </code></pre>"			2020-04-08 13:50:49.13 UTC
61104007	javascript|python|data-visualization|visualization	How to create 3D linear algebra visualizations with javascript or python?	"<p>Which programming language and libraries would you recommend me to recreate the 3D geometric and linear algebra visualizations displayed in this book <a href=""http://immersivemath.com/ila/learnmore.html"" rel=""nofollow noreferrer"">http://immersivemath.com/ila/learnmore.html</a> ? I speculate it's either JavaScript or Python, but I'm not sure.</p>"	2020-04-08 15:11:30.12 UTC	62017515	"<p>The most used JS library for 3D visualizations is <a href=""https://threejs.org/"" rel=""nofollow noreferrer"">Three</a>. It's not the simplest to learn but the docs are great, it's powerful, and its popularity makes it ""community-validated"".</p>  <p>Another choice would be <a href=""https://www.babylonjs.com/"" rel=""nofollow noreferrer"">Babylon</a>, which also have great documentation and also relies on WebGL for rendering.</p>  <p><a href=""https://d3js.org/"" rel=""nofollow noreferrer"">D3</a>, the de-facto standard for custom JS visualizations in JS, also handles a bit of 3D, although it's not focused on that.</p>  <p>If library size is a factor you consider, then <a href=""https://github.com/evanw/lightgl.js"" rel=""nofollow noreferrer"">Light</a> might be a better choice, and if zero-dependency is also a plus, then you might consider <a href=""http://seenjs.io/"" rel=""nofollow noreferrer"">Seen</a>.</p>  <p><a href=""http://www.cannonjs.org/"" rel=""nofollow noreferrer"">Cannon</a> is more a 3D physics engine than a 3D visualization library, but it might come handy sometimes.</p>  <p>Consider also <a href=""https://www.ambiera.com/copperlicht/"" rel=""nofollow noreferrer"">CopperLicht</a>, <a href=""http://www.kevs3d.co.uk/dev/phoria/"" rel=""nofollow noreferrer"">Phoria</a>, and <a href=""http://scenejs.org/"" rel=""nofollow noreferrer"">Scene</a>.</p>  <hr>  <p>I wouldn't recommend doing 3D visualizations on the browser in Python, since there are many libraries in JS that are quite powerful, and moving a computationally expensive task such as 3D rendering on the server might overload it, not to mention the lack of interactivity that server-side rendering might incur.</p>"			2020-05-26 08:16:47.17 UTC
61154295	javascript|python|django|socket.io	How can i connect a Javascript client to a Python-SocketIO server?	"<p>I'm just getting started to Python-SocketIO, i created an example server, it looks like this:</p>  <pre><code>import eventlet import socketio  sio = socketio.Server()  app = socketio.WSGIApp(sio, static_files={     '/': {'content_type': 'text/html', 'filename': 'index.html'} })  @sio.on('connect') def connect(sid, environ):     print('connect ', sid)  @sio.on('msg') def message(sid, data):     print('message ', data)  @sio.on('disconnect') def disconnect(sid):     print('disconnect ', sid)  if __name__ == '__main__':     eventlet.wsgi.server(eventlet.listen(('', 5000)), app) </code></pre>  <p>Then, i have an <strong>HTML</strong> file which is running on a Django application, i would like to connect that client to my Python-SocketIO server:</p>  <pre><code>&lt;script src=""https://cdnjs.cloudflare.com/ajax/libs/socket.io/2.2.0/socket.io.js""&gt;&lt;/script&gt; &lt;script&gt;  socket = io.connect('');  socket.on('connect',function() {   console.log('Client has connected to the server!'); });  socket.on('msg',function(data) {   console.log('Received a message from the server!',data); });  socket.on('disconnect',function() {   console.log('The client has disconnected!'); });  // Sends a message to the server via sockets function send(message) {   socket.send('msg',message); };  &lt;/script&gt; </code></pre>  <p>The problem is that, on my client side, i keep getting the following errors:</p>  <pre><code>Access to XMLHttpRequest at 'http://localhost:5000/socket.io/?EIO=3&amp;transport=polling&amp;t=N5eSEa2' from origin 'http://127.0.0.1:8000' has been blocked by CORS policy: No 'Access-Control-Allow-Origin' header is present on the requested resource. localhost:5000/socket.io/?EIO=3&amp;transport=polling&amp;t=N5eSEa2:1 Failed to load resource: net::ERR_FAILED </code></pre>  <p>My Django server is running <code>on http://127.0.0.1:8000/</code>. Can anyone help me find what i'm doing wrong?</p>"	2020-04-11 08:57:36.727 UTC	61158553	"<p>Set the CORS header on your server:</p>  <pre><code>sio = socketio.Server(cors_allowed_origins='*') </code></pre>  <p>(<a href=""https://stackoverflow.com/questions/57579110/how-to-fix-access-control-allow-origin-error-in-a-python-socket-io-server"">Source</a>)</p>"			2020-04-11 14:42:05.14 UTC
61175965	javascript|python	Python equivalent to Javascript class and arrow function	"<p>I'm trying to get to grips with classes in python and explore javascript, so decided to convert a maze program in javascript as an learning exercise.  However, I'm stuck early on with the concept of declaring classes for the directions of travel.  Can someone help me out? </p>  <pre><code>class Direction {     constructor(char, reverse, increment,mask) {         this.char = char;         this.reverse = reverse;         this.increment = increment;         this.mask = mask;     }     toString() {         return this.char;     } }  const NORTH = new Direction(""⇧"", () =&gt; SOUTH, (x, y) =&gt; [x, y + 1],1); const SOUTH = new Direction(""⇩"", () =&gt; NORTH, (x, y) =&gt; [x, y - 1],2); const EAST = new Direction(""⇨"", () =&gt; WEST, (x, y) =&gt; [x + 1, y],4); const WEST = new Direction(""⇦"", () =&gt; EAST, (x, y) =&gt; [x - 1, y],8); </code></pre>  <p>Here is my attempt in python, which fails because I use SOUTH before defining, but don't know the python equivalent of arrow function which returns an element not yet declared:</p>  <pre><code>class Direction:      def __init__(self, char,reverse,increment,mask):           self.char = char         self.reverse = reverse         self.increment = increment         self.mask = mask      def __str__(self):         return self.char  NORTH = Direction(""⇧"", SOUTH, [x, y + 1],1) SOUTH = Direction(""⇩"", NORTH, [x, y - 1],2) EAST = Direction(""⇨"", WEST,  [x + 1, y],4) WEST = Direction(""⇦"", EAST,  [x - 1, y],8) </code></pre>"	2020-04-12 18:07:38.507 UTC	61189105	"<p>You should just turn your class into an enum and reference directions as members of the enum so they do not resolve at definition time (which gets you an error of referencing a variable before assignment) but only when actually used.</p>  <pre class=""lang-py prettyprint-override""><code>from enum import Enum  class Direction(Enum):     def __init__(self, char, reverse, increment, mask):           self.char = char         self.reverse = reverse         self.increment = increment         self.mask = mask      def __str__(self):         return self.char       NORTH = Direction(""⇧"", Direction.SOUTH, [x, y + 1], 1)     SOUTH = Direction(""⇩"", Direction.NORTH, [x, y - 1], 2)     EAST = Direction(""⇨"", Direction.WEST,  [x + 1, y], 4)     WEST = Direction(""⇦"", Direction.EAST,  [x - 1, y], 8) </code></pre>"			2020-04-13 13:37:28.99 UTC
61190321	javascript|python|function|flask|routing	Calling/Invoking a Javascript function from python a flask function within html	"<p>I was creating a flask application and tried to call a python function in which I wanted to invoke some javascript function/code regarding the HTML template that I returned on the initial <code>app.route('/')</code></p>  <p>If the user did something, then I called another function that should invoke or call a js function I have tried looking everywhere but I cannot make any sense of the solutions.</p>  <p>Here is the structure of my code:</p>  <pre><code>@app.route('/', methods=['GET', 'POST']) def upload_file():     if request.method == 'POST':         #verify if the file is valid         #here invoke js to do something (for example flash(""test""))     return '''     &lt;!doctype html&gt;     &lt;title&gt;Upload new File&lt;/title&gt;     &lt;h1&gt;Upload new File&lt;/h1&gt;     &lt;form method=post enctype=multipart/form-data&gt;       &lt;input type=file name=file&gt;       &lt;input type=submit value=Upload&gt;     &lt;/form&gt;     ''' </code></pre>"	2020-04-13 14:42:18.337 UTC	71275728	"<p>You can load the Page with the JS, by passing an argument to jinja, And if it meets the condition Then the js gets loaded Otherwise it does not.</p> <pre><code>&lt;!DOCTYPE html&gt; &lt;html lang=&quot;en&quot;&gt;  &lt;head&gt;     &lt;meta charset=&quot;UTF-8&quot;&gt;     &lt;title&gt;Upload new File&lt;/title&gt; &lt;/head&gt;  &lt;body&gt;     {% if flash_message == True %}     &lt;script&gt;         function YourFunction() {             alert(&quot;[YOUR_MESSAGE_HERE]&quot;);         }     &lt;/script&gt;     {% endif %}      &lt;h1&gt;Upload new File&lt;/h1&gt;      &lt;form method=post enctype=multipart/form-data&gt;         &lt;input type=file name=file&gt;         &lt;input type=submit value=Upload&gt;     &lt;/form&gt; &lt;/body&gt;  &lt;/html&gt; </code></pre> <p>Then you can Just pass flash_message to render_template Like so</p> <pre class=""lang-py prettyprint-override""><code>from flask import Flask, render_template  app = Flask(__name__)   @app.route('/', methods=['GET', 'POST']) def upload_file():     YOUR CODE...      return render_template('upload.html', flash_message=True) </code></pre>"			2022-02-26 10:06:31.93 UTC
61190321	javascript|python|function|flask|routing	Calling/Invoking a Javascript function from python a flask function within html	"<p>I was creating a flask application and tried to call a python function in which I wanted to invoke some javascript function/code regarding the HTML template that I returned on the initial <code>app.route('/')</code></p>  <p>If the user did something, then I called another function that should invoke or call a js function I have tried looking everywhere but I cannot make any sense of the solutions.</p>  <p>Here is the structure of my code:</p>  <pre><code>@app.route('/', methods=['GET', 'POST']) def upload_file():     if request.method == 'POST':         #verify if the file is valid         #here invoke js to do something (for example flash(""test""))     return '''     &lt;!doctype html&gt;     &lt;title&gt;Upload new File&lt;/title&gt;     &lt;h1&gt;Upload new File&lt;/h1&gt;     &lt;form method=post enctype=multipart/form-data&gt;       &lt;input type=file name=file&gt;       &lt;input type=submit value=Upload&gt;     &lt;/form&gt;     ''' </code></pre>"	2020-04-13 14:42:18.337 UTC	61198265	"<p>You could execute a JavaScript function on load and have the function check for the condition. You can influence the outcome of this check by changing the condition with Python. If you use the <a href=""https://flask.palletsprojects.com/en/1.1.x/tutorial/templates/"" rel=""noreferrer"">render_template</a> function of Flask, you do not have to write your HTML code within your Python file. For better readability I am using this functionality, but you can always put the HTML code into your Python code, as you have done before.</p>  <p>Your HTML template, e.g. named <code>upload.html</code>:   </p>  <pre><code>&lt;!DOCTYPE html&gt; &lt;html lang=""en""&gt; &lt;head&gt;   &lt;meta charset=""UTF-8""&gt;   &lt;title&gt;Upload new File&lt;/title&gt; &lt;/head&gt; &lt;body onload=""flashMessage()""&gt;   &lt;script&gt;     function flashMessage() {       if (""{{ flash_message }}"" == ""True"") {         alert(""[YOUR_MESSAGE_HERE]"");       }     }   &lt;/script&gt;    &lt;h1&gt;Upload new File&lt;/h1&gt;   &lt;form method=post enctype=multipart/form-data&gt;     &lt;input type=file name=file&gt;     &lt;input type=submit value=Upload&gt;   &lt;/form&gt; &lt;/body&gt; &lt;/html&gt; </code></pre>  <p>Your Python code:</p>  <pre><code>from flask import Flask, render_template  app = Flask(__name__)   @app.route('/', methods=['GET', 'POST']) def upload_file():     if request.method == 'POST':         #verify if the file is valid         #here invoke js to do something (for example flash(""test""))         return render_template('upload.html', flash_message=""True"")      return render_template('upload.html', flash_message=""False"") </code></pre>  <p>So, the condition line in your HTML file will render to</p>  <pre><code>if (""True"" == ""True"") </code></pre>  <p>or</p>  <pre><code>if (""False"" == ""True"") </code></pre>  <p>depending on if you want the flash message to show or not.</p>"			2020-04-13 23:13:33.72 UTC
61192478	javascript|python|discord|discord.js|discord.py	Is there any way to have a discord bot in JavaScript and some comands in python?	"<p>I have a discord bot in discord.js, but I have found a free version of the cleverbot API <a href=""https://github.com/plasticuproject/cleverbotfree"" rel=""nofollow noreferrer"">https://github.com/plasticuproject/cleverbotfree</a> and I want to have a command that works with that API. Is there a way to execute python in javascript?</p>"	2020-04-13 16:38:26.44 UTC	61192523	<p>There is most likely no direct way that isn't super janky. You might want to set up a python program that exposes the information you need via an API and use that information in your node program. </p>			2020-04-13 16:40:56.38 UTC
61193693	javascript|python|client-server	How to call a Javascript function from Python	"<p>I have a python code (server side) which doesn't interact with client side. However, I need to represent some items when it (server code) will has done. The only idea I came up with is the JS function which represents an item, calling from Python. Could you advise me either packages or another idea to implement this.</p>  <p><strong>Some Details</strong> (I do not aware is it necessary, but might be it's helpful)</p>  <pre class=""lang-py prettyprint-override""><code>async def start_delete_delay(app, delay):     """"""     The very function which thrust a delay for each front token.     Key arguments:     app -- our application.     delay -- a delay in seconds     """"""     async with app['db'].acquire() as conn:          # First of all we need to check for database emptiness         query = text(""SELECT True FROM tokens LIMIT(1)"")         if await conn.fetch(query):              # If database is not empty then we are processing a waiting delay.             # First, fetching an id &amp; related token from the first position (due to it queue) from database.             query = select([db.tokens.c.id, db.tokens.c.token]).order_by(asc(db.tokens.c.id)).limit(1)             query_result = await conn.fetchrow(query)              # Retrieving an id and token             id_before_sleep, token = query_result['id'], query_result['token']              # Setting a delay             try:                 await asyncio.sleep(delay)              # Some information related with cancellation error             # https://docs.python.org/3/library/asyncio-task.html#asyncio.Task.cancel             except asyncio.CancelledError:                 pass              # Check whether a token at the first place as same as it was before             finally:                  # If it possible but all of members picked their tokens over 60 seconds.                 if await conn.fetch(text(""SELECT True FROM tokens LIMIT(1)"")):                     query_result = await conn.fetchrow(query)                     id_after_sleep = query_result['id']                      # If they are same then we delete that token and starting delay again.                     if id_before_sleep == id_after_sleep:                         query = delete(db.tokens).where(db.tokens.c.id == id_before_sleep)                          # preparing a token for reuse.                         app['new_token'].prepare_used_token(token)                          # Deleting a token                         await conn.fetchrow(query)                          # I'd like to call a JS function (which I already have) here                          # Starting a delay for adjacent token, over and over and over                         task = make_task(start_delete_delay, app, delay)                         asyncio.gather(task) </code></pre>"	2020-04-13 17:53:41.25 UTC	61259121	"<p>I found two solutions, so if someone faced with such problems try to use them:</p>  <p><strong>First solution</strong></p>  <p>The clue is WebSockets. I used <code>aiohttp</code> and <code>asyncio</code>.</p>  <p>In JavaScript file I added up a listening socket:</p>  <pre class=""lang-js prettyprint-override""><code>var socket = new WebSocket('/link-to-websocket') </code></pre>  <p>In server-side I added a websocket_handler, in my case it sending the message after deleting a toke from database</p>  <pre class=""lang-py prettyprint-override""><code>async def websocket_handler(request):      ws = web.WebSocketResponse()     await ws.prepare(request)      async for msg in ws:         if msg.type == aiohttp.WSMsgType.TEXT:             if app['updt_flag']:                 await ws.send_str(""signal"")             else:                 await ws.close()     return ws </code></pre>  <p>And adding it to routes</p>  <pre class=""lang-py prettyprint-override""><code>app.add_routes([web.get('/link-to-websocket', websocket_handler)]) </code></pre>  <p>1) <a href=""https://blog.sessionstack.com/how-javascript-works-deep-dive-into-websockets-and-http-2-with-sse-how-to-pick-the-right-path-584e6b8e3bf7"" rel=""nofollow noreferrer"">How JavaScript works: Deep dive into WebSockets and HTTP/2 with SSE + how to pick the right path</a></p>  <p>2) <a href=""https://docs.aiohttp.org/en/stable/web_quickstart.html#websockets"" rel=""nofollow noreferrer"">Python aiohttp websockets</a></p>  <p>However this method isn't the best, we don't use entire websocket's functionality therefore let's go ahead to another method: Server-Sent Events (SSE). This method is more suitable for the my problem because we always receiving response from server without request to it (whereas websockets doesn't incorporate such option):</p>  <p><strong>Second solution</strong> As I said above I will use SSE and for these purposes it required a sse-package</p>  <p><code>pip install aiohttp_sse</code></p>  <pre class=""lang-py prettyprint-override""><code> import asyncio from aiohttp_sse import sse_response   async def SSE_request(request):     loop = request.app.loop     async with sse_response(request) as resp:         while True:             if request.app['updt_flag']:                 await resp.send(""signal"")                 request.app['updt_flag'] = False             await asyncio.sleep(1, loop=loop)     return resp </code></pre>  <p>Adding route</p>  <p><code>web.get('/update', SSE_request)</code></p>  <p>Adding listening sse to JS:</p>  <pre class=""lang-js prettyprint-override""><code>const evtSource = new EventSource(""/update""); evtSource.onmessage = function(e) {                     display_queue_remove(); } </code></pre>  <p>Thats all:)</p>"			2020-04-16 20:06:30.027 UTC
61211129	javascript|python|node.js|python-3.x|cryptography	How do I make the same SHA256 encoded string in Javascript that I do in Python 3?	"<p>I have this Python script which produces the correct output:</p>  <pre class=""lang-py prettyprint-override""><code>import hashlib  username = ""LoginUser"" password = ""LoginPass"" nonce = ""1234567890""  def LowerCase(s): return s.lower() def Hex(s): return ''.join([hex(char)[2:] for char in s])  def SHA1(s): h = hashlib.sha1(); h.update(s); return h.digest() def SHA1Raw(s): h = hashlib.sha1(); h.update(s); return h.hexdigest()  def SHA256(s): h = hashlib.sha256(); h.update(s); return h.digest() def SHA256Raw(s): h = hashlib.sha256(); h.update(s); return h.hexdigest()  def UTF8Encode(s): return str.encode(s)    step1 = SHA256((UTF8Encode(username))) step2 = SHA1((UTF8Encode(password)))  step3 = SHA256Raw(step1 + step2)  step1 = SHA256Raw((UTF8Encode(username))) step2 = SHA1Raw((UTF8Encode(password)))   print("""""" SHA256(username={username})                            =    {step1} SHA1(password={password})                              =    {step2} SHA256((username + password)={username}{password})     =    {step3} """""".format(     username = username,     password = password,     step1 = step1,     step2 = step2,     step3 = step3 ))  </code></pre>  <p>Output:</p>  <pre><code>PS D:\project&gt; python .\test.py SHA256(username=LoginUser)                            =    7981673b2c73a6bdb665f347dc89e9d324f542b1fa1c4a700bc523d8a9a6f565   SHA1(password=LoginPass)                              =    df703733447469593d39a125ca93462eade53cab SHA256((username + password)=LoginUserLoginPass)     =    cf3066e157468d6a9d59f9ff0662e4f8f8432be4e07c68320a8b6a031d0c022b </code></pre>  <p>Now in Javascript, I try to mirror the functions I have in Python. I cannot for the life of me. I tried quickly understanding Buffers and streams in this context but I believe I am just confusing myself further by not staying grounded to something.</p>  <p>Anyways here's the Javascript versiona and it's output:</p>  <pre class=""lang-js prettyprint-override""><code>const crypto = require('crypto')  const username = ""LoginUser"" const password = ""LoginPass"" const nonce = ""1234567890""  const LowerCase = s =&gt; s.toLowerCase() const Hex = s =&gt; Buffer.from(s, 'utf8').toString('hex')  const SHA1 = s =&gt; crypto.createHash('sha1').update(s, 'utf8').digest('hex') const SHA1Raw = s =&gt; crypto.createHash('sha1').update(s, 'utf8').digest()  const SHA256 = s =&gt; crypto.createHash('sha256').update(s, 'utf8').digest('hex') const SHA256Raw = s =&gt; crypto.createHash('sha256').update(s, 'utf8').digest()  const UTF8Encode = s =&gt; Buffer.from(s, 'utf8');   let step1 = SHA256(username) let step2 = SHA1(password) let step3 = SHA256Raw(step1.concat(step2))  console.log(` SHA256(username=${username})                            =    ${step1} SHA1(password=${password})                              =    ${step2} SHA256((username + password)=${username+password})      =    ${step3.toString('hex')} `) </code></pre>  <p>Output:</p>  <pre><code>PS D:\project&gt; node .\test.js   SHA256(username=LoginUser)                            =    7981673b2c73a6bdb665f347dc89e9d324f542b1fa1c4a700bc523d8a9a6f565 SHA1(password=LoginPass)                              =    df703733447469593d39a125ca93462eade53cab SHA256((username + password)=LoginUserLoginPass)      =    757101f0fd2628ce12dc039146f56da14a1e85a27fda5d68c2623f616c4fc3cc </code></pre>  <p>Can anyone help?</p>"	2020-04-14 15:14:13.65 UTC	61228199	"<p>You only need a very small modification to make this work in Node.js.</p>  <p>I would suggest calculating the hashes as buffer objects, this makes the combined hash easier to calculate (since we don't need to parse from hex). </p>  <p>We do this by using <a href=""https://nodejs.org/api/buffer.html#buffer_class_method_buffer_concat_list_totallength"" rel=""nofollow noreferrer"">Buffer.concat</a> to concatenate the output of the previous hashes.</p>  <pre><code>const crypto = require('crypto')  const username = ""LoginUser"" const password = ""LoginPass"" const nonce = ""1234567890""  const LowerCase = s =&gt; s.toLowerCase() const Hex = s =&gt; Buffer.from(s, 'utf8').toString('hex')  const SHA1 = s =&gt; crypto.createHash('sha1').update(s, 'utf8').digest('hex') const SHA1Raw = s =&gt; crypto.createHash('sha1').update(s, 'utf8').digest()  const SHA256 = s =&gt; crypto.createHash('sha256').update(s, 'utf8').digest('hex') const SHA256Raw = s =&gt; crypto.createHash('sha256').update(s, 'utf8').digest()  const UTF8Encode = s =&gt; Buffer.from(s, 'utf8');   let step1 = SHA256Raw(username) // Get the SHA256 as a buffer. let step2 = SHA1Raw(password) // Get the SHA1 as a buffer. let step3 = SHA256Raw(Buffer.concat([step1, step2])) // Get the SHA256 of the previous steps concatenated as a buffer.  console.log(` SHA256(username=${username})                            =    ${step1.toString('hex')} SHA1(password=${password})                              =    ${step2.toString('hex')} SHA256((username + password)=${username+password})      =    ${step3.toString('hex')} `) </code></pre>  <p>This gives the correct result, e.g. </p>  <pre><code>SHA256(username=LoginUser)                            =    7981673b2c73a6bdb665f347dc89e9d324f542b1fa1c4a700bc523d8a9a6f565 SHA1(password=LoginPass)                              =    df703733447469593d39a125ca93462eade53cab SHA256((username + password)=LoginUserLoginPass)      =    cf3066e157468d6a9d59f9ff0662e4f8f8432be4e07c68320a8b6a031d0c022b </code></pre>"			2020-04-15 12:00:38.347 UTC
61219287	python|html|web|web-scraping|python-requests	Web scraping without Javascript in Python using requests	"<p>So, I'm making a Python script, that gets a webpages content and compares it to a previously saved version to see if the webpage has changed. I'm getting the raw content using this method:</p>  <pre><code>def getcontent(url):     str = requests.get(url)     str = str.text     return(str) </code></pre>  <p>after that I'm doing some cleaning up of the content and quote escaping and such, but that's irrelevant. The issue I keep running into, is, that the webpage has got some JavaScript code, that generates a unique key that my method downloads. Each time you grab the webpage content, the key is different. I have zero idea what that key is for. The issue is, that if the key is different, the new content, and the saved content aren't identical. </p>  <p>How can I disable JavaScript from running when I request a webpage?</p>"	2020-04-15 00:12:10.233 UTC	61219322	"<p>The token is generated server-side and can be used for various reasons (for example CSRF-token)</p>  <p>The token will always be in the content of your response, there is no JavaScript needed for that. </p>  <p>You should find a way to ignore / remove the token.</p>"			2020-04-15 00:16:19.38 UTC
61243202	javascript|python	Javascript If versus Python if statements in While loop	"<p>I am having a hard time trying to port this Javascript code to Python. In Javascript the function can take two strings such as str1=123456, and str2=passwo. Then it will output something like p1a2s3s4w5o6</p>  <p>In python it just combines it. Someone please tell me how this could be done with if statements in python if even possible. Maybe I need to do it another way. Thanks for your help.</p>  <p>Python example</p>  <pre><code>def merge(str1, str2):     arr1 = str1.split();     arr2 = str2.split();     result = """";     index1 = 0;     index2 = 0;     while ((index1 &lt; len(arr1)) or (index2 &lt; len(arr2))):         if(index1 &lt; len(arr1)):             result += arr1[index1];             print(""part1"")             index1 = index1+1;         if(index2 &lt; len(arr2)):             result += arr2[index2];             index2 = index2+1;     print(result);     return result; </code></pre>  <p>Javascript example</p>  <pre><code>function merge(str1, str2){     var arr1 = str1.split("""");     var arr2 = str2.split("""");     var result = """";     var index1 = 0;     var index2 = 0;     while((index1 &lt; arr1.length) || (index2 &lt; arr2.length)){         if(index1 &lt; arr1.length){             result += arr1[index1];             index1++;         }         if(index2 &lt; arr2.length){             result += arr2[index2];             index2++;         }     }     return result; } </code></pre>"	2020-04-16 05:20:47.823 UTC	61243305	"<p>First of all, in python you don't need semi-columns at the end of statement. Second, when you split() string in python, it's split it by default from spaces, so it's create for you list of 1 object. so you don't need to split because python string it's already array-like.</p>  <p>and this is your fixed code (i just delete the split and rename the parameters to be arr instead of str):</p>  <pre><code>def merge(arr1, arr2):     result = """"     index1 = 0     index2 = 0     while ((index1 &lt; len(arr1)) or (index2 &lt; len(arr2))):         if(index1 &lt; len(arr1)):             result += arr1[index1];             print(""part1"")             index1 = index1+1         if(index2 &lt; len(arr2)):             result += arr2[index2];             index2 = index2+1     print(result)     return result </code></pre>"			2020-04-16 05:29:44.41 UTC
61243202	javascript|python	Javascript If versus Python if statements in While loop	"<p>I am having a hard time trying to port this Javascript code to Python. In Javascript the function can take two strings such as str1=123456, and str2=passwo. Then it will output something like p1a2s3s4w5o6</p>  <p>In python it just combines it. Someone please tell me how this could be done with if statements in python if even possible. Maybe I need to do it another way. Thanks for your help.</p>  <p>Python example</p>  <pre><code>def merge(str1, str2):     arr1 = str1.split();     arr2 = str2.split();     result = """";     index1 = 0;     index2 = 0;     while ((index1 &lt; len(arr1)) or (index2 &lt; len(arr2))):         if(index1 &lt; len(arr1)):             result += arr1[index1];             print(""part1"")             index1 = index1+1;         if(index2 &lt; len(arr2)):             result += arr2[index2];             index2 = index2+1;     print(result);     return result; </code></pre>  <p>Javascript example</p>  <pre><code>function merge(str1, str2){     var arr1 = str1.split("""");     var arr2 = str2.split("""");     var result = """";     var index1 = 0;     var index2 = 0;     while((index1 &lt; arr1.length) || (index2 &lt; arr2.length)){         if(index1 &lt; arr1.length){             result += arr1[index1];             index1++;         }         if(index2 &lt; arr2.length){             result += arr2[index2];             index2++;         }     }     return result; } </code></pre>"	2020-04-16 05:20:47.823 UTC	61243297	"<p>Use:</p>  <pre><code>def merge(str1, str2):     return """".join(x + y for x, y in zip(str(str1), str(str2)))  print(merge(""passwo"", 123456)) </code></pre>  <p>This prints:</p>  <pre><code>p1a2s3s4w5o6 </code></pre>"			2020-04-16 05:29:11.027 UTC
61243202	javascript|python	Javascript If versus Python if statements in While loop	"<p>I am having a hard time trying to port this Javascript code to Python. In Javascript the function can take two strings such as str1=123456, and str2=passwo. Then it will output something like p1a2s3s4w5o6</p>  <p>In python it just combines it. Someone please tell me how this could be done with if statements in python if even possible. Maybe I need to do it another way. Thanks for your help.</p>  <p>Python example</p>  <pre><code>def merge(str1, str2):     arr1 = str1.split();     arr2 = str2.split();     result = """";     index1 = 0;     index2 = 0;     while ((index1 &lt; len(arr1)) or (index2 &lt; len(arr2))):         if(index1 &lt; len(arr1)):             result += arr1[index1];             print(""part1"")             index1 = index1+1;         if(index2 &lt; len(arr2)):             result += arr2[index2];             index2 = index2+1;     print(result);     return result; </code></pre>  <p>Javascript example</p>  <pre><code>function merge(str1, str2){     var arr1 = str1.split("""");     var arr2 = str2.split("""");     var result = """";     var index1 = 0;     var index2 = 0;     while((index1 &lt; arr1.length) || (index2 &lt; arr2.length)){         if(index1 &lt; arr1.length){             result += arr1[index1];             index1++;         }         if(index2 &lt; arr2.length){             result += arr2[index2];             index2++;         }     }     return result; } </code></pre>"	2020-04-16 05:20:47.823 UTC	61243327	"<p>If both strings have the same length, you could replace the whole function by list comprehension:</p>  <pre><code>result = """".join([f""{str2[ind]}{str1[ind]}"" for ind in range(len(str1))]) </code></pre>  <p>As a function:</p>  <pre><code>def merge(str1, str2):     return """".join([f""{str2[ind]}{str1[ind]}"" for ind in range(len(str1))]) </code></pre>"			2020-04-16 05:31:17.257 UTC
61243202	javascript|python	Javascript If versus Python if statements in While loop	"<p>I am having a hard time trying to port this Javascript code to Python. In Javascript the function can take two strings such as str1=123456, and str2=passwo. Then it will output something like p1a2s3s4w5o6</p>  <p>In python it just combines it. Someone please tell me how this could be done with if statements in python if even possible. Maybe I need to do it another way. Thanks for your help.</p>  <p>Python example</p>  <pre><code>def merge(str1, str2):     arr1 = str1.split();     arr2 = str2.split();     result = """";     index1 = 0;     index2 = 0;     while ((index1 &lt; len(arr1)) or (index2 &lt; len(arr2))):         if(index1 &lt; len(arr1)):             result += arr1[index1];             print(""part1"")             index1 = index1+1;         if(index2 &lt; len(arr2)):             result += arr2[index2];             index2 = index2+1;     print(result);     return result; </code></pre>  <p>Javascript example</p>  <pre><code>function merge(str1, str2){     var arr1 = str1.split("""");     var arr2 = str2.split("""");     var result = """";     var index1 = 0;     var index2 = 0;     while((index1 &lt; arr1.length) || (index2 &lt; arr2.length)){         if(index1 &lt; arr1.length){             result += arr1[index1];             index1++;         }         if(index2 &lt; arr2.length){             result += arr2[index2];             index2++;         }     }     return result; } </code></pre>"	2020-04-16 05:20:47.823 UTC	61243312	"<p>Python 3 provides direct typecasting of string into list using list() and remove semicolons.</p>  <p>Use </p>  <pre><code>    arr1 = list(str1)     arr2 = list(str2) </code></pre>  <p>instead of </p>  <pre><code>    arr1 = str1.split();     arr2 = str2.split(); </code></pre>  <p>entire code:</p>  <pre><code>def merge(str1, str2):     arr1 = list(str1)     arr2 = list(str2)     result = """"     index1 = 0     index2 = 0     while ((index1 &lt; len(arr1)) or (index2 &lt; len(arr2))):         if(index1 &lt; len(arr1)):             result += arr1[index1]             print(""part1"")             index1 = index1+1         if(index2 &lt; len(arr2)):             result += arr2[index2]             index2 = index2+1     print(result)     return result </code></pre>"			2020-04-16 05:30:13.717 UTC
61251363	javascript|python|python-3.x|websocket|network-programming	Javascript/Python - click a button on a website and run a function in python	"<p>It is currently 2:17PM and I have been working on this since 8AM. I usually do python. I want to make a array of buttons where clicking a button will run a python function on the server. I want to do this by sending a web request from the client javascript to a python server, which will receive it, parse it, and run the correct function. I have tried webhooks, websockets, ajax, and manually parsing GET and POST requests. I can't get it to work, there seems to be nothing online about webhooks in python, python websocket API's insist you use async and don't even work, I barely understand ajax but it doesn't let you change ports, and when I try to manually parse requests all I get is the initial connection and clicking the button won't send any more.</p>  <p>This is my latest attempt client side, get request parsing (I wanted to change ports or parse the headers but I only get data when the sockets in python first create the connection, I get nothing later when I click the button.)</p>  <pre><code>&lt;html&gt; &lt;head&gt; &lt;title&gt;Dashboard v0.1&lt;/title&gt; &lt;script&gt;     function send(theUrl)     {         var xmlHttp = new XMLHttpRequest();         xmlHttp.open( ""GET"", theUrl, false);         xmlHttp.send(null);         return xmlHttp.responseText;     } &lt;/script&gt;  &lt;style&gt;     body {         width: 35em;         margin: 0 auto;         font-family: Tahoma, Verdana, Arial, sans-serif;     } &lt;/style&gt;  &lt;/head&gt; &lt;body&gt;     &lt;button type=""button"" onclick=""send(""http://127.0.0.1:34000"")""&gt;Test&lt;/button&gt; &lt;/body&gt; &lt;/html&gt; </code></pre>  <p>This is my latest attempt server side:</p>  <pre><code>from threading import * from socket import *  server = socket(AF_INET, SOCK_STREAM) Port = 34000  Host = """" BufferSize = 2048 server.bind((Host, Port)) server.listen(1000)  while True:     connection, address = server.accept()     print(""Accepted connection"")      while True:         response = connection.recv(BufferSize).decode(""utf8"")         print(str(response))  </code></pre>  <p>Please help. I just want to send a request. I frankly don't give a shit about security, it's on my home network. I don't know javascript, this is all code snippets.</p>"	2020-04-16 13:24:16.997 UTC	61258172	"<p>I found the answer! Simply reply with <code>HTTP/1.1 200 OK</code> to shut the browser up. Here's my implementation:</p>  <pre><code>def listen(id, server):     while True:         client_connection, client_address = server.accept()         request_data = client_connection.recv(1024)         executeCommand(id)          http_response = b""""""\     HTTP/1.1 200 OK     """"""         client_connection.sendall(http_response)         client_connection.close()          print(str(id))``` </code></pre>"			2020-04-16 19:09:23.293 UTC
61309517	javascript|arrays|count	Is there .count method in javascript like python?	"<p>In Python, if we have a list,</p>  <pre class=""lang-py prettyprint-override""><code>array = [1,2,3,4,5] </code></pre>  <p>If we say <code>array.count(1)</code>, it will return the count of 1 in <code>array</code>.</p>  <p>Is there a method like this in javascript?</p>"	2020-04-19 18:25:53.29 UTC	61309580	"<p>I think there isn't. But you can make one by using <code>prototype</code>.</p>  <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-js lang-js prettyprint-override""><code>let array = [1,2,3,4,5,1];  Array.prototype.count = function(value) {     let count = 0;      this.forEach(item =&gt; {  if (item === value) {      count++;  }     });      return count; }  console.log(array.count(1)); console.log(array.count(2));</code></pre> </div> </div> </p>"			2020-04-19 18:30:15.403 UTC
61352783	javascript|python|web-scraping|beautifulsoup	Pull values from javascript source in Python BeautifulSoup	"<p>I'm pretty new to web scraping and was wondering if it's possible to extract the information I need from a javascript app. Currently, I'm using beautifulsoup in python and am interested in this output from the html parser:</p> <pre><code>&lt;p&gt;&lt;script&gt; var acct = '488'; var loc = ''; var cat = ''; var stylesheet=''; var hideLastnames = true; var jsHost = ((&quot;https:&quot; == document.location.protocol) ? &quot;https://&quot; : &quot;http://&quot;); document.write(&quot;&lt;scr&quot;+&quot;ipt src='&quot;+jsHost+&quot;ajax.googleapis.com/ajax/libs/jquery/1.7/jquery.min.js' type='text/javascript'&gt;&lt;/scr&quot;+&quot;ipt&gt;&quot;); document.write(&quot;&lt;scr&quot;+&quot;ipt&gt;var jQuery = jQuery.noConflict(true);&lt;/scr&quot;+&quot;ipt&gt;&quot;); document.write(&quot;&lt;scr&quot;+&quot;ipt src='&quot;+jsHost+&quot;www.groupexpro.com/schedule/embed/schedule_embed_responsive.js.php?a=&quot;+acct+&quot;' type='text/javascript'&gt;&lt;/scr&quot;+&quot;ipt&gt;&quot;); &lt;/script&gt;&lt;/p&gt; </code></pre> <p>In the actual website (<a href=""https://recreation.gocrimson.com/fitness/schedules"" rel=""nofollow noreferrer"">https://recreation.gocrimson.com/fitness/schedules</a>), it looks like <a href=""https://i.stack.imgur.com/eaUad.png"" rel=""nofollow noreferrer"">this</a>. Ideally, I would want to store a json with all the information listed in the table. Has anyone had experience doing something similar?</p>"	2020-04-21 20:37:12.32 UTC	61353579	"<p><a href=""https://recreation.gocrimson.com/fitness/schedules"" rel=""nofollow noreferrer"">https://recreation.gocrimson.com/fitness/schedules</a> requests a different URL to get the schedule data in JSONP format. </p>  <p><code>URL:https://www.groupexpro.com/schedule/embed/json.php?schedule&amp;instructor_id=true&amp;format=jsonp&amp;a=488&amp;location=&amp;category=&amp;start=1587380400&amp;end=1587898800</code></p>  <p>Try to understand the URL and modify it to for your purpose.</p>  <p>Example</p>  <pre><code>from bs4 import BeautifulSoup import requests import json   headers ={""User-Agent"":""Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:77.0) Gecko/20100101 Firefox/77.0""}  page=requests.get(""https://www.groupexpro.com/schedule/embed/json.php?schedule&amp;instructor_id=true&amp;format=jsonp&amp;a=488"",headers=headers)  #Extract json from jsonp jsondata='{'+page.text.split('{')[1].split('}')[0]+'}'  #can also be loaded into python dict using data=json.loads(jsondata)  </code></pre>"			2020-04-21 21:28:35.59 UTC
61356082	javascript|python|bokeh|papaparse	Load CSV file into static Python Bokeh Web app with JavaScript Papa Parse	"<p>I have a static Bokeh web app for local use and I want to be able to load a file using javascript without running python. The idea is to be able to share Bokeh output_html file with other non-python users to run it and load their data with a file selector for interactive visualization. I made a very rough code based on <a href=""https://stackoverflow.com/questions/38100011/using-papa-parse-for-big-csv-files"">this post</a> and <a href=""https://stackoverflow.com/questions/34680708/load-graph-data-from-files-on-button-click-with-bokeh"">this post</a></p>  <p>I have no knowledge in JS and I apologize in advance for the bad implementation. Please feel free if you have a similar example or a simpler approach to read a file without bokeh server.</p>  <pre><code>from bokeh.models.widgets import Toggle from bokeh.plotting import figure, output_file, show  output_file(""load_data_buttons.html"")  x = [0] y = x  source = ColumnDataSource(data=dict(x=x, y=y))  plot = figure(plot_width=400, plot_height=400) plot.line('x', 'y', source=source, line_width=3, line_alpha=0.6)  callback = CustomJS(args=dict(source=source), code=""""""        // initialize our parsed_csv to be used wherever we want var parsed_csv; var start_time, end_time;          // document.ready         $(function() {            $('.load-file').on('click', function(e) {             start_time = performance.now();             $('#report').text('Processing...');              console.log('initialize worker');              var worker = new Worker('worker.js');             worker.addEventListener('message', function(ev) {               console.log('received raw CSV, now parsing...');                // Parse our CSV raw text               Papa.parse(ev.data, {                 header: true,                 dynamicTyping: true,                 complete: function (results) {                     // Save result in a globally accessible var                   parsed_csv = results;                   console.log('parsed CSV!');                   console.log(parsed_csv);                    $('#report').text(parsed_csv.data.length + ' rows processed');                   end_time = performance.now();                   console.log('Took ' + (end_time - start_time) + "" milliseconds to load and process the CSV file."")                 }               });                // Terminate our worker               worker.terminate();             }, false);              // Submit our file to load             var file_to_load = document.getElementById(""myFile"").files[0];              console.log('call our worker');             worker.postMessage({file: file_to_load});           });          });          x =  parsed_csv.data['x']         y =  parsed_csv.data['y']         #load data stored in the file name and assign to x and y         source.trigger('change');     """""")  toggle1 = Toggle(label=""Load data file 1"", callback=callback)  layout = Row(toggle1, plot)  show(layout) </code></pre>  <p><strong>worker.js</strong></p>  <pre><code>self.addEventListener('message', function(e) {     console.log('worker is running');      var file = e.data.file;     var reader = new FileReader();      reader.onload = function (fileLoadedEvent) {         console.log('file loaded, posting back from worker');          var textFromFileLoaded = fileLoadedEvent.target.result;          // Post our text file back from the worker         self.postMessage(textFromFileLoaded);     };      // Actually load the text file     reader.readAsText(file, ""UTF-8""); }, false); </code></pre>  <p>The csv file has x,y data</p>  <pre><code>x   y 0   0 1   1 2   2 3   3 4   4 </code></pre>"	2020-04-22 02:01:47.793 UTC	61358249	"<p>You don't need Web Workers to achieve it, especially if you're not comfortable with JavaScript. Here's how I would do it:</p>  <pre class=""lang-py prettyprint-override""><code>from bokeh.layouts import row, column from bokeh.models import Div, ColumnDataSource, CustomJS, FileInput from bokeh.plotting import figure, save  source = ColumnDataSource(data=dict(x=[0], y=[0]))  plot = figure(plot_width=400, plot_height=400) plot.line('x', 'y', source=source, line_width=3, line_alpha=0.6)  fi_label = Div(text='Load data file 1') fi = FileInput() status = Div()  callback = CustomJS(args=dict(source=source,                               status=status),                     code="""""" status.text = 'Loading...'; Papa.parse(atob(cb_obj.value), {     // For some reason, Papa didn't detect it automatically.     delimiter: '\t',     header: true,     dynamicTyping: true,     complete: function (results) {         const acc = results.meta.fields.reduce((acc, f) =&gt; {             acc[f] = [];             return acc;         }, {});         source.data = results.data.reduce((acc, row) =&gt; {             for (const k in acc) {                 acc[k].push(row[k]);             }             return acc;         }, acc);         status.text = 'Ready!';     } }); """""")  fi.js_on_change('value', callback)  template = """"""\ {% block preamble %} &lt;script src=""https://cdnjs.cloudflare.com/ajax/libs/PapaParse/5.1.0/papaparse.min.js""         integrity=""sha256-Fh801SO9gqegfUdkDxyzXzIUPWzO/Vatqj8uN+5xcL4=""         crossorigin=""anonymous""&gt;&lt;/script&gt; {% endblock %} """""" # Cannot use `show` because it doesn't have the `template` argument. save(column(row(fi_label, fi), plot), template=template) </code></pre>"			2020-04-22 05:59:52.407 UTC
61357222	javascript|python|selenium	How to handle webelement's id - not attribute id(!) in javascript from selenium-python?	"<p>I need to handle webelements by identifying them uniquely. Attribute id has known limitations: it might be missing and it might be non-unique. There is a possibility to use evaluate, and I'm interested whether it's possible to identify elements by their id - not attribute id?</p>  <p>Please consider the following code: I search element by its attribute id and then print its id - they are absolutely different</p>  <pre><code>&gt; Blockquote &gt;&gt;&gt; elem=driver.find_element(‘id’, ‘userInfoWhoRadioGroup_errorMessage’) &gt;&gt;&gt; elem.id ‘0ce5ef48-df80-487f-ada2-fc999dedb614’ &gt;&gt;&gt; e.get_attribute(‘id’) ‘userInfoWhoRadioGroup_errorMessage’ &gt;&gt;&gt; &gt; Blockquote The beauty of the element's id is that every element has it and that it's unique. </code></pre>  <p>Some more details: the elements I need to handle are already found using webdriver, I have them and their ids. Now I'd like to run javascript on them (without refreshing the page that would change the ids). And I'm looking for a way to uniquely identify them by these ids</p>"	2020-04-22 04:14:21.973 UTC	61357620	"<p>HTML attribute <kbd>id</kbd> and <kbd>elem.id</kbd> are completely of 2 different things. The HTML id is specified in the HTML, where was <code>elem.id</code> is the <code>id</code> assigned to the element by selenium. This will be always unique and also changes when the page is refreshed/reloaded.</p>  <p>I would <strong>not</strong> recommend using <kbd>elem.id</kbd> for identification purpose.</p>  <p>You can interact with the element using the below</p>  <pre><code>driver.execute_script(""arguments[0].textContent"", elem) </code></pre>"			2020-04-22 05:01:23.687 UTC
61372789	javascript|python|html|ajax|flask	How to pass variable from javascript to python without ajax?	"<p>I have a get method in javascript where i download some data from a website. I load the data into a variable and I want to send the variable to python. How can I achieve this without using ajax? I have managed to pass the variable to python by using ajax post, but the problem is that I cannot render a template back in the python method. Moreover, I don't want to render the template from inside the javascript file, because the variables for the render depend upon some if else statements from python.</p>"	2020-04-22 18:46:47.247 UTC	61372922	<p>Use form submit... And put action and method in th form tag</p>			2020-04-22 18:54:05.617 UTC
61379590	python|dictionary	"Create dict from local variables like JavaScript `{ var1, var2, ...}` with Python"	"<ul> <li>For JavaScript, object can be created by</li> </ul> <pre><code>a=1; obj={ a }  // JSON.stringify(obj) == '{&quot;a&quot;:1}' </code></pre> <p>this make the <code>obj</code> has key <code>a</code> and its value is <code>1</code></p> <ul> <li>For Python code is:</li> </ul> <pre><code>a = 1 obj = { 'a': a } </code></pre> <p>Is it possible to create a function or class that make code like this?</p> <pre><code>a = 1 obj = func_or_class(a)  # obj == {'a': 1} </code></pre>"	2020-04-23 04:52:06.707 UTC	61381012	"<p>Since all the built-in members of <code>locals()</code> starts and ends with <code>__</code>, you can filter them out by these prefix and suffix. In addition, you can filter out functions by using <code>callable</code>:</p>  <p>For example:</p>  <pre><code>a = 1 b = 2 output = {k:v for k,v in locals().items() if not (k.startswith(""__"") and k.endswith(""__"")) and not callable(v)} print(output) # output: {'a': 1, 'b': 2} </code></pre>"			2020-04-23 06:52:24.3 UTC
61379590	python|dictionary	"Create dict from local variables like JavaScript `{ var1, var2, ...}` with Python"	"<ul> <li>For JavaScript, object can be created by</li> </ul> <pre><code>a=1; obj={ a }  // JSON.stringify(obj) == '{&quot;a&quot;:1}' </code></pre> <p>this make the <code>obj</code> has key <code>a</code> and its value is <code>1</code></p> <ul> <li>For Python code is:</li> </ul> <pre><code>a = 1 obj = { 'a': a } </code></pre> <p>Is it possible to create a function or class that make code like this?</p> <pre><code>a = 1 obj = func_or_class(a)  # obj == {'a': 1} </code></pre>"	2020-04-23 04:52:06.707 UTC	61607049	"<p>After trying a lot, the following code is nearly what I want:</p>  <pre><code>class LocalDict(dict):     def __new__(cls, spaces, attrs):          return {k: v for k, v in spaces.items() if k in attrs.split()}  def foo():     a = 1     b = c = 2     my_dict = LocalDict(locals(), 'a b c')     return my_dict  print(foo())  # {'a': 1, 'b': 2, 'c': 2} </code></pre>  <p>And I wonder whether there is some way that I don't need to pass <code>locals</code> to the <code>LocalDict</code> class.</p>"			2020-05-05 06:30:34.64 UTC
61379590	python|dictionary	"Create dict from local variables like JavaScript `{ var1, var2, ...}` with Python"	"<ul> <li>For JavaScript, object can be created by</li> </ul> <pre><code>a=1; obj={ a }  // JSON.stringify(obj) == '{&quot;a&quot;:1}' </code></pre> <p>this make the <code>obj</code> has key <code>a</code> and its value is <code>1</code></p> <ul> <li>For Python code is:</li> </ul> <pre><code>a = 1 obj = { 'a': a } </code></pre> <p>Is it possible to create a function or class that make code like this?</p> <pre><code>a = 1 obj = func_or_class(a)  # obj == {'a': 1} </code></pre>"	2020-04-23 04:52:06.707 UTC	61379703	"<p>It all depends on the way you need to work with the data, really. Your methods above are sound, especially the dict comprehension. So other than the old-fashioned way:</p>  <p><code>{""key"": ""value"", ... }</code></p>  <p>I'd say you're doing it right. If you have a specific example, you can edit your question and I will try to work off that.</p>  <p>Hope that helps!</p>"			2020-04-23 05:05:47.097 UTC
61379590	python|dictionary	"Create dict from local variables like JavaScript `{ var1, var2, ...}` with Python"	"<ul> <li>For JavaScript, object can be created by</li> </ul> <pre><code>a=1; obj={ a }  // JSON.stringify(obj) == '{&quot;a&quot;:1}' </code></pre> <p>this make the <code>obj</code> has key <code>a</code> and its value is <code>1</code></p> <ul> <li>For Python code is:</li> </ul> <pre><code>a = 1 obj = { 'a': a } </code></pre> <p>Is it possible to create a function or class that make code like this?</p> <pre><code>a = 1 obj = func_or_class(a)  # obj == {'a': 1} </code></pre>"	2020-04-23 04:52:06.707 UTC	61379958	"<p>How about this?</p>  <pre><code>var1 = 1 var2 = 2 var3 = 3 my_dict = {k: v for k, v in locals().items() if k.startswith('var')} </code></pre>  <p>or</p>  <pre><code>var1 = 1 var2 = 2 var3 = 3 var4 = ""abc"" my_dict = {k: v for k, v in locals().items() if isinstance(v, int) or isinstance(v, str)} </code></pre>"			2020-04-23 05:29:36.113 UTC
61422763	javascript|python|html|jquery|selenium	Click on list item based on name using javascript with Selenium Python	"<p>I'm working on a web form and I'm trying to click on a given <code>li</code> within a <code>ul</code> based on the list item's name. So in the below example I would need to click on the option with the text = ""Your Employer"". I managed to do this with the classic <code>driver.find_element_by_xpath</code> but since performance is a big factor on my project, I would need to select all dropdown options with Javascript. I managed to fill out all input fields of the form but I cannot do the same for the dropdown menus.</p>  <pre><code>div class=""ui-selectmenu-menu ui-front ui-selectmenu-open"" id=""RegisteredOwner-menu-wrap"" style=""top: 1898px; left: 130px;"" xpath=""1""&gt; &lt;ul aria-hidden=""false"" aria-labelledby=""RegisteredOwner-button"" id=""RegisteredOwner-menu"" class=""ui-menu ui-widget ui-widget-content ui-corner-bottom"" role=""listbox"" tabindex=""0"" aria-activedescendant=""ui-id-109"" aria-disabled=""false"" style=""width: 281px;""&gt;     &lt;li class=""ui-menu-item"" id=""ui-id-108"" tabindex=""-1"" role=""option""&gt;         Please select     &lt;/li&gt;     &lt;li class=""ui-menu-item ui-state-focus"" id=""ui-id-109"" tabindex=""-1"" role=""option""&gt;The Insured&lt;/li&gt;     &lt;li class=""ui-menu-item"" id=""ui-id-114"" tabindex=""-1"" role=""option""&gt;Finance/Lease Company&lt;/li&gt;     &lt;li class=""ui-menu-item"" id=""ui-id-115"" tabindex=""-1"" role=""option""&gt;Your Employer&lt;/li&gt;     &lt;li class=""ui-menu-item"" id=""ui-id-116"" tabindex=""-1"" role=""option""&gt;None of the Above&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; </code></pre>  <p>I tried many alternatives but with no success. I managed to open the dropdown but I can't select the specific option. I know this could be done using the option id but I would need to do this with the option name/text as an input.</p>  <p>I believe something similar to this should work:</p>  <pre><code>def populate_dropdown(driver, xls):     elem = driver.find_element_by_xpath(""//li[@class='ui-menu-item'][contains(text(),'"" + str(xls) + ""')]"")     driver.execute_script(""arguments[0].click();"", elem) </code></pre>  <p>Any help will be much appreciated.</p>"	2020-04-25 08:12:32.673 UTC	61423904	"<p>At first you need click on <strong>dropdown</strong> field so that all list element gets loaded. Note: In this case, all list value are dynamic, these value could have the dependency on other field.</p>  <p>Then after use explicit wait to get your required element get loaded. Once the  element is visible , use <strong>click</strong> to select the value . <em>Ex: xpath= //li[text()='textInput']</em></p>  <p>There is no need of using contains in xpath here, you can directly go with text.</p>  <p>I have also gone through this kind of scenario...I guess this would help</p>"			2020-04-25 09:57:57.413 UTC
61423882	python|selenium|web|driver	Python passing javascript to true/false	"<p>So I am trying to create a python program that checks if an item is instock or out of stock. To do this I use the selenium chrome web driver. In order to check if an item is in stock, I use this code:</p>  <pre><code>print(driver.execute_script(""return document.body.innerText.includes('sold out')"")) </code></pre>  <p>I wish to use this in an if statement so I can make it run a Discord webhook if it comes back true/false.</p>  <pre><code>if(driver.execute_script(""return document.body.innerText.includes('sold out')"" == 'False')): </code></pre>  <p>The code without the if statement runs fine.</p>"	2020-04-25 09:56:16.137 UTC	61424085	"<p>I figured it out! Sorry.</p>  <p>test = (driver.execute_script(""return document.body.innerText.includes('sold out')""))</p>"			2020-04-25 10:13:08.943 UTC
61433679	javascript|python	Python JSON to Javascript	"<p>With this line of code in python I created JSON containing multiple messages:</p>  <pre><code>notification = [{                  'message': 'This is the homepage',                  'username': 'User',                  'room': 'Home',                  'timestamp': '11:59'                  },                 {                  'message': 'Hello World!',                  'username': 'User',                  'room': 'Home',                  'timestamp': '12:00'                }]  return render_template(""chat.html"",  messages = notification) </code></pre>  <p>Now I would like to print all the messages on the webpage, so I sent all the information to javascript. But when the output of the following script returns an empty string.</p>  <pre><code>const message = `{{messages}}`; console.log(message); </code></pre>  <p>Why is the string empty?</p>"	2020-04-25 22:56:19.18 UTC	61433843	"<p>Try passing the notification as json to the template</p>  <p>Flask</p>  <pre><code>return render_template(""chat.html"",  messages = json.dumps(notification)) </code></pre>  <p>Template</p>  <pre><code>const message = JSON.parse('{{messages | tojson | safe}}'); console.log(message) </code></pre>"			2020-04-25 23:14:16.783 UTC
61433679	javascript|python	Python JSON to Javascript	"<p>With this line of code in python I created JSON containing multiple messages:</p>  <pre><code>notification = [{                  'message': 'This is the homepage',                  'username': 'User',                  'room': 'Home',                  'timestamp': '11:59'                  },                 {                  'message': 'Hello World!',                  'username': 'User',                  'room': 'Home',                  'timestamp': '12:00'                }]  return render_template(""chat.html"",  messages = notification) </code></pre>  <p>Now I would like to print all the messages on the webpage, so I sent all the information to javascript. But when the output of the following script returns an empty string.</p>  <pre><code>const message = `{{messages}}`; console.log(message); </code></pre>  <p>Why is the string empty?</p>"	2020-04-25 22:56:19.18 UTC	61433823	"<p>What you are passing in the <code>notification</code> variable isn't actually JSON, it's a Python list. You need to use <code>json.dumps</code> to convert it to an actual JSON string.</p>  <p>Then in your JS you will need to wrap the string in quotes (single quotes best as JSON uses double quotes) so that your JS is syntactically valid. You can then even use Javascript's <code>JSON.parse</code> to convert it to a JS array:</p>  <pre><code>const message = '{{messages}}' ; console.log(JSON.parse(message) ); </code></pre>"			2020-04-25 23:11:42.607 UTC
61524814	javascript|python|selenium	Getting error Cannot read property 'currentTime' of undefined when uexecute JavaScript using Selenium with Python	"<p>I would like to jump to a specific time while playing a video. While I have manage to achieve similar objective from YouTube website (see thread <a href=""https://stackoverflow.com/a/61523738/6446053"">here</a>), the same approach fail to work properly at a different website. As much I would like to share the website link, but due to confidential concern, Im unable to disclose it here.</p> <p>The embedded video in this website have frame with the ID <code>player</code>. And I know the following line is working without any error.</p> <pre><code>        video = WebDriverWait(self.browser, 15).until(EC.visibility_of_element_located((By.ID, &quot;player&quot;))) </code></pre> <p>Since, the iframe does not have a <code>TagName</code>, I instead replace the <code>getElementsByTagName</code> into <a href=""https://www.w3schools.com/jsref/met_document_getelementbyid.asp"" rel=""nofollow noreferrer""><code>getElementById</code></a>. However, the compiler return an error</p> <blockquote> <p>Message: javascript error: Cannot read property 'currentTime' of undefined</p> </blockquote> <p>The full code is as below</p> <pre><code>   video = WebDriverWait(self.browser, 15).until(EC.visibility_of_element_located((By.ID, &quot;player&quot;))) # The line work perfectly     print('Fast forward')     player_status = self.browser.execute_script(&quot;document.getElementById('player')[0].currentTime += 80;&quot;) # The compiler return an error at this line.     print('Get Current time')     time_video = self.browser.execute_script(&quot;return document.getElementById('player')[0].currentTime;&quot;) </code></pre> <p>I appreciate for any hint or help.</p> <p>Thanks in advance.</p>"	2020-04-30 13:43:47.387 UTC	61539393	"<p>As pointed by @VLAZ, the syntax should be changed into</p>  <pre><code>self.browser.execute_script(""document.getElementById('player').currentTime += 80;"")' </code></pre>"			2020-05-01 08:51:08.01 UTC
61566098	javascript|python|flask|post	How to pass JavaScript list of directory variables to Python Flask	"<p>I want to pass a list of dictionary from JavaScript+HTML to Python+Flask and use it as a list of dictionary.</p>  <p>Here is my JavaScript:</p>  <pre><code>List = [];       function AddN(x, y, List, Field,selected = false) {             List.push({                 id: ID,                 x: x,                 y: y,                 neighbour: [ID],                 selected: selected             });             ID += 1;             document.getElementById(Field).value=List;         } </code></pre>  <p>And later I have a hidden input in the HTML form for POSTing the list.</p>  <p>And my Python goes like this:</p>  <pre><code>    @app.route(""/Input.html"",methods=[""GET"",""POST""])     def input():         if request.method == ""POST"":            nA = request.values.getlist(""ListA"") </code></pre>  <p>Where ListA is the ID and the name of the mentioned hidden input in HTML form. By using print() I can see my Python is getting a type:list variable, but it is empty and I am sure it is not empty in the HTML+JS.</p>  <p>Any idea?</p>  <p>Thank you. ———————————————————————————————————————————————— Edit:</p>  <p>Here is the code I used to post in my HTML:</p>  <pre><code>&lt;form&gt; .......... &lt;input type=""hidden"" id=""ListA""&gt; &lt;input type=""submit"" id=""Submit""&gt; &lt;/form&gt; </code></pre>  <p>And I've tried this too(not used together with the input-hidden method):</p>  <pre><code>$.ajax({     url:""/InputCanvas.html"",     type:""POST"",     data:JSON.stringify(answer) }); </code></pre>  <p>The other variables(floats and integers) are passed to the Python correctly. Only the lists are empty.</p>  <hr>  <p>Edit:</p>  <p>I've changed the HTML tag and added a name to it. The program is posting some list of string which looks like this: [""[object Object],[object Object]""] and always with length 1.</p>"	2020-05-02 20:48:06.41 UTC	61567370	"<p>It looks your <code>input</code> html element is missing the <code>name</code> attribute, so the form sent to the server is missing <code>ListA</code>. Change it to:</p>  <pre><code>&lt;input type=""hidden"" id=""ListA"" name=""ListA""&gt; </code></pre>  <hr>  <p>In order to load the list in your Flask I would make the following changes:</p>  <ol> <li><p>set the value of the <code>input</code> element to a properly formatted json string in your function <code>AddN</code>. Make sure you enclose property names in <em>double quotes</em> (otherwise the <code>json.loads</code> won't parse the json correctly):</p>  <p><code>var value = {""list"": List }  document.getElementById(Field).value=JSON.stringify(value);</code></p></li> <li><p>change the Python to parse the string as json:</p>  <p><code>listA = request.values.get(""ListA"")  value = json.loads(listA)</code></p></li> </ol>  <p>Then you can access you list using <code>value['list']</code>.</p>"			2020-05-02 22:54:00.707 UTC
61587109	javascript|python|regex	"regex catch inline math formula, ex: $ inline $ in python or javascript"	"<p>I have a string input (a content of a markdown file), where every math formula enclosed by $$. </p>  <p>Ex:</p>  <pre><code>$$ stand alone $$  $$ stand  alone $$   And there $$ inline $$.   $$ inline 2 $$ some text also.  </code></pre>  <p>I would like to change the <em>inline</em> formulas to be enclosed by $. </p>  <p>I tried to catch with regex, but so far I can not come up with the right solution.</p>  <p>This one example catch every $$ but do not distinct inline and stand-alone:</p>  <pre class=""lang-py prettyprint-override""><code>re.findall(r'\$\$([^\$]+?)\$\$',  txt)  </code></pre>"	2020-05-04 07:26:48.447 UTC	61587363	"<p>You could capture the stand alone formulas in a capturing group surrounded by anchors and use an alternation <code>|</code> with another group to capture the the content between the inline formulas.</p>  <p>In the replacement, place back group 1 and 2 where group 2 is surrounded by a single <code>$</code></p>  <pre><code>^(\$\$[\s\S]*?\$\$)$|(?&lt;!\$)\$(\$[\s\S]*?\$)\$(?!\$) </code></pre>  <p><a href=""https://regex101.com/r/aplk3K/1"" rel=""nofollow noreferrer"">Regex demo</a> | <a href=""https://ideone.com/r0X4J2"" rel=""nofollow noreferrer"">Python demo</a></p>  <p><em>Example code</em></p>  <pre><code>import re  pattern = r""^(\$\$[\s\S]*?\$\$)$|(?&lt;!\$)\$(\$[\s\S]*?\$)\$(?!\$)"" test_str = (""$$ stand alone $$\n\n""             ""$$ stand \n""             ""alone $$\n\n""             ""And there $$ inline $$. "")  regex = re.compile(pattern, re.MULTILINE) result = re.sub(     regex,     lambda x: x.group(2) if x.group(2) else x.group(1), test_str )  if result:     print (result) </code></pre>  <p><em>Output</em></p>  <pre><code>$$ stand alone $$  $$ stand  alone $$  And there $ inline $. </code></pre>"			2020-05-04 07:44:57.597 UTC
61587109	javascript|python|regex	"regex catch inline math formula, ex: $ inline $ in python or javascript"	"<p>I have a string input (a content of a markdown file), where every math formula enclosed by $$. </p>  <p>Ex:</p>  <pre><code>$$ stand alone $$  $$ stand  alone $$   And there $$ inline $$.   $$ inline 2 $$ some text also.  </code></pre>  <p>I would like to change the <em>inline</em> formulas to be enclosed by $. </p>  <p>I tried to catch with regex, but so far I can not come up with the right solution.</p>  <p>This one example catch every $$ but do not distinct inline and stand-alone:</p>  <pre class=""lang-py prettyprint-override""><code>re.findall(r'\$\$([^\$]+?)\$\$',  txt)  </code></pre>"	2020-05-04 07:26:48.447 UTC	61587213	<p>How about defining the start in your regex by adding <code>^</code>.</p>  <p>Like <code>^\$\$([^\$]+?)\$\$</code></p>			2020-05-04 07:34:12.623 UTC
61587109	javascript|python|regex	"regex catch inline math formula, ex: $ inline $ in python or javascript"	"<p>I have a string input (a content of a markdown file), where every math formula enclosed by $$. </p>  <p>Ex:</p>  <pre><code>$$ stand alone $$  $$ stand  alone $$   And there $$ inline $$.   $$ inline 2 $$ some text also.  </code></pre>  <p>I would like to change the <em>inline</em> formulas to be enclosed by $. </p>  <p>I tried to catch with regex, but so far I can not come up with the right solution.</p>  <p>This one example catch every $$ but do not distinct inline and stand-alone:</p>  <pre class=""lang-py prettyprint-override""><code>re.findall(r'\$\$([^\$]+?)\$\$',  txt)  </code></pre>"	2020-05-04 07:26:48.447 UTC	61587493	"<p>First, you can use <code>.*+</code> instead of <code>[^$]+</code>. It doesn't capture patterns which include <code>\n</code>.</p>  <p>Then, put ""not at starting of line-<code>(?!^)</code>"" and ""not at ending of line-<code>(?&lt;!$)</code>"". And use <code>|</code> to combine them.</p>  <pre class=""lang-py prettyprint-override""><code>print(re.findall(r'(?m)(?!^)\$\$(.+?)\$\$|\$\$(.+?)\$\$(?&lt;!$)', txt)) </code></pre>  <p>will print:</p>  <pre class=""lang-py prettyprint-override""><code>[(' inline ', ''), ('', ' inline 2 ')] </code></pre>  <p><code>(?m)</code> indicates ""multiline"" flag.</p>  <p>If you want to replace those to <code>REPLACED!!</code>,</p>  <pre class=""lang-py prettyprint-override""><code>print(re.sub(r'(?m)(?!^)\$\$(.+?)\$\$|\$\$(.+?)\$\$(?&lt;!$)', '$$ REPLACED!! $$', text)) </code></pre>  <p>output:</p>  <pre><code>$$ stand alone $$  $$ stand  alone $$   And there $$ REPLACED!! $$.   $$ REPLACED!! $$ some text also. </code></pre>  <hr>  <p>If you dislike that group number is not consistent,</p>  <p>You can use conditional pattern:</p>  <pre class=""lang-py prettyprint-override""><code>print(re.findall(r'(?m)(.+)?\$\$(.+?)\$\$(?(1)|.+)', text)) </code></pre>  <p>output:</p>  <pre class=""lang-py prettyprint-override""><code>[('And there ', ' inline '), ('', ' inline 2 ')] </code></pre>  <p>Now the target group number is always 2.</p>"			2020-05-04 07:53:54.007 UTC
61587109	javascript|python|regex	"regex catch inline math formula, ex: $ inline $ in python or javascript"	"<p>I have a string input (a content of a markdown file), where every math formula enclosed by $$. </p>  <p>Ex:</p>  <pre><code>$$ stand alone $$  $$ stand  alone $$   And there $$ inline $$.   $$ inline 2 $$ some text also.  </code></pre>  <p>I would like to change the <em>inline</em> formulas to be enclosed by $. </p>  <p>I tried to catch with regex, but so far I can not come up with the right solution.</p>  <p>This one example catch every $$ but do not distinct inline and stand-alone:</p>  <pre class=""lang-py prettyprint-override""><code>re.findall(r'\$\$([^\$]+?)\$\$',  txt)  </code></pre>"	2020-05-04 07:26:48.447 UTC	61587348	"<p>You could use look-ahead and look-behind to check if theres text before or after the formula like so:</p>  <pre class=""lang-py prettyprint-override""><code>re.findall(r'(?:(?&lt;=(?: |\w))\$\$([^\n$]+?)\$\$)|(?:\$\$([^\n$]+?)\$\$(?=(?: |\w)))',  txt) </code></pre>  <p>This yields:</p>  <pre><code>[(' inline ', ''), ('', ' inline 2 ')] </code></pre>  <p>you can learn more about look aheads/behinds <a href=""https://docs.python.org/3/library/re.html"" rel=""nofollow noreferrer"">here</a> and test your patterns <a href=""https://regex101.com/"" rel=""nofollow noreferrer"">here</a>.</p>  <p>Edit: removed unnecessary escaping in <code>[\n\$]</code> as suggested in Bosoeng Choi's comment.</p>"			2020-05-04 07:44:06.613 UTC
61593886	javascript|python|selenium|robotframework	How to click on a WebElement using JavaScript using RobotFramework SeleniumLibrary in Python?	"<p>I'm trying to click on a WebElement using JavaScript but I'm unable to create a JavaScript statement for that. </p>  <p>I'm able to click on a <strong>Cancel</strong> button using this statement</p>  <pre><code>driver.execute_javascript(""$(\""div[title='Cancel']\"")[0].click()"") </code></pre>  <p>But on clicking another element which is more complicated, I'm trying this </p>  <pre><code>expand_xpath = ""//span[text()='Submit']//ancestor::table//a[text()='Expand']"" driver.execute_javascript(""document.getElementByXpath('${expand_xpath}').click()"") </code></pre>  <p><em>JavascriptException: Message: javascript error: document.getElementByXpath is not a function</em></p>  <p>This <strong>expand_xpath</strong> is storing xpath of the WebElement which I need to click but I'm unable to frame the JS code for clicking this element.</p>  <p>Please find the RobotFramework <strong>Execute Javascript</strong> keyword expnation on this link <a href=""https://robotframework.org/SeleniumLibrary/SeleniumLibrary.html#Execute%20Javascript"" rel=""nofollow noreferrer"">https://robotframework.org/SeleniumLibrary/SeleniumLibrary.html#Execute%20Javascript</a></p>  <p>Second Try:</p>  <pre><code>expand_xpath = ""//span[text()='Submit']//ancestor::table//a[text()='Expand']"" driver.execute_javascript(""document.evaluate('${expand_xpath}', document.body, null, 9, null).singleNodeValue.click()"") </code></pre>  <p>Output:</p>  <pre><code>JavascriptException: Message: javascript error: missing ) after argument list </code></pre>"	2020-05-04 13:51:50.967 UTC	61610314	"<p>Since you're using RobotFramework, this one is quite easy:</p>  <pre><code>${locator}    //button[@id='abc'] Execute JavaScript    document.evaluate(""${locator}"", document, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null).singleNodeValue.click() </code></pre>  <p>Note that the inputted xpath should not contain double quote ("") character, only single quote (') to prevent JS parsing error</p>"			2020-05-05 09:52:16.247 UTC
61593886	javascript|python|selenium|robotframework	How to click on a WebElement using JavaScript using RobotFramework SeleniumLibrary in Python?	"<p>I'm trying to click on a WebElement using JavaScript but I'm unable to create a JavaScript statement for that. </p>  <p>I'm able to click on a <strong>Cancel</strong> button using this statement</p>  <pre><code>driver.execute_javascript(""$(\""div[title='Cancel']\"")[0].click()"") </code></pre>  <p>But on clicking another element which is more complicated, I'm trying this </p>  <pre><code>expand_xpath = ""//span[text()='Submit']//ancestor::table//a[text()='Expand']"" driver.execute_javascript(""document.getElementByXpath('${expand_xpath}').click()"") </code></pre>  <p><em>JavascriptException: Message: javascript error: document.getElementByXpath is not a function</em></p>  <p>This <strong>expand_xpath</strong> is storing xpath of the WebElement which I need to click but I'm unable to frame the JS code for clicking this element.</p>  <p>Please find the RobotFramework <strong>Execute Javascript</strong> keyword expnation on this link <a href=""https://robotframework.org/SeleniumLibrary/SeleniumLibrary.html#Execute%20Javascript"" rel=""nofollow noreferrer"">https://robotframework.org/SeleniumLibrary/SeleniumLibrary.html#Execute%20Javascript</a></p>  <p>Second Try:</p>  <pre><code>expand_xpath = ""//span[text()='Submit']//ancestor::table//a[text()='Expand']"" driver.execute_javascript(""document.evaluate('${expand_xpath}', document.body, null, 9, null).singleNodeValue.click()"") </code></pre>  <p>Output:</p>  <pre><code>JavascriptException: Message: javascript error: missing ) after argument list </code></pre>"	2020-05-04 13:51:50.967 UTC	61611881	"<p>I'm using this method to deal with the click.</p>  <p><strong>Arguments:</strong> ele_xpath : XPATH of the element to be clicked.    </p>  <pre><code>from SeleniumLibrary import SeleniumLibrary    def click_element_with_javascript(ele_xpath):             try:                 js_exp = ""document.evaluate(\""##xpath##\"", document.body, null, 9, null).singleNodeValue.click()"".replace('##xpath##', ele_xpath)                 driver.execute_javascript(js_exp)             except Exception as e:                 print(""Element click through javascript resulted in Exception: {}"".format(e)) </code></pre>"			2020-05-05 11:17:56.647 UTC
61593886	javascript|python|selenium|robotframework	How to click on a WebElement using JavaScript using RobotFramework SeleniumLibrary in Python?	"<p>I'm trying to click on a WebElement using JavaScript but I'm unable to create a JavaScript statement for that. </p>  <p>I'm able to click on a <strong>Cancel</strong> button using this statement</p>  <pre><code>driver.execute_javascript(""$(\""div[title='Cancel']\"")[0].click()"") </code></pre>  <p>But on clicking another element which is more complicated, I'm trying this </p>  <pre><code>expand_xpath = ""//span[text()='Submit']//ancestor::table//a[text()='Expand']"" driver.execute_javascript(""document.getElementByXpath('${expand_xpath}').click()"") </code></pre>  <p><em>JavascriptException: Message: javascript error: document.getElementByXpath is not a function</em></p>  <p>This <strong>expand_xpath</strong> is storing xpath of the WebElement which I need to click but I'm unable to frame the JS code for clicking this element.</p>  <p>Please find the RobotFramework <strong>Execute Javascript</strong> keyword expnation on this link <a href=""https://robotframework.org/SeleniumLibrary/SeleniumLibrary.html#Execute%20Javascript"" rel=""nofollow noreferrer"">https://robotframework.org/SeleniumLibrary/SeleniumLibrary.html#Execute%20Javascript</a></p>  <p>Second Try:</p>  <pre><code>expand_xpath = ""//span[text()='Submit']//ancestor::table//a[text()='Expand']"" driver.execute_javascript(""document.evaluate('${expand_xpath}', document.body, null, 9, null).singleNodeValue.click()"") </code></pre>  <p>Output:</p>  <pre><code>JavascriptException: Message: javascript error: missing ) after argument list </code></pre>"	2020-05-04 13:51:50.967 UTC	61595158	"<p>Try clicking on element using below javaScript :   </p>  <pre><code> element= driver.find_element_by_xpath(""//span[text()='Submit']//ancestor::table//a[text()='Expand']"")  driver.execute_script(""arguments[0].click();"", element) </code></pre>  <p>OR use below: </p>  <pre><code>expand_xpath = ""//span[text()='Submit']//ancestor::table//a[text()='Expand']"" driver.execute_javascript(""document.getElementByXPath('${expand_xpath}').click()"") </code></pre>  <p>Note: ""P"" is in uppercase in <em>XPath</em>.</p>"			2020-05-04 14:54:19.537 UTC
61618146	javascript|python|bokeh|bokehjs	Python / Bokeh / Javascript / js_on_change for stacked bar and dropdown list selection	"<p>I am struggling to understand how to incorporate js_on_change for self-embedded bokeh stacked bar graph  with dropdown selection. In a nutshell, whenever we select a value in the dropdown menu, it should map itself into a list of columns of the main dataframe that can be used then for stacked bar plotting.</p>  <p>I think I am lacking knowledge of Javascript and how to play around with it. Stackers, need your help. Below you will find the complete code that should run on your end.</p>  <p>I borrowed a little from this thread <a href=""https://stackoverflow.com/questions/46281068/bokeh-plot-a-different-column-using-customjs"">bokeh - plot a different column using customJS</a></p>  <pre><code>import pandas as pd import numpy as np import datetime  from bokeh.io import show from bokeh.layouts import row, column from bokeh.models import ColumnDataSource, CustomJS from bokeh.plotting import figure, ColumnDataSource, show from bokeh.models.widgets import Select from bokeh.models import Label, Title, NumeralTickFormatter  df = pd.DataFrame.from_dict(     {  'Apples_green': {'2018': 100, '2019': 150, '2020': 200},  'Apples_red': {'2018': 200, '2019': 75, '2020': 25},  'Oranges_green': {'2018': 25, '2019': 60, '2020': 70},  'Oranges_red': {'2018': 100, '2019': 80, '2020': 10}     }  )  #List of columns for apples initial_col = [i for i in df.columns.tolist() if i.startswith('Apples')] selection_list = [""Apples"", ""Oranges""]  d_map = {   'Apples':['Apples_green', 'Apples_red'],   'Oranges':['Oranges_green', 'Oranges_red'] }  source = ColumnDataSource(df)  p = figure(plot_width=350, plot_height = 300,         x_range=df.index.drop_duplicates().tolist()) p.vbar_stack(initial_col, x='index',  width=0.9, color=['green', 'red'], source=source) p.yaxis.formatter = NumeralTickFormatter(format='(0.00)')   select = Select(title=""Fruit:"", value=selection_list[0], options=selection_list)  select.js_on_change('value', CustomJS(args=dict(source=source, select=select, d_map = d_map), code=""""""  // print the selectd value of the select widget -   // this is printed in the browser console.  // cb_obj is the callback object, in this case the select   // widget. cb_obj.value is the selected value.  console.log(' changed selected option', cb_obj.value);    // create a new variable for the data of the column data source   // this is linked to the plot   var data = source.data;    // allocate the selected column to the field for the y values    data['{}'] = data[d_map[cb_obj.value]];    // register the change - this is required to process the change in    // the y values   source.change.emit(); """""".format(d_map[selection_list[0]])))  col = column(select) layout = row(col, p) show(layout) </code></pre>  <p>Eventually, it plots the figure but javascript part is not working.</p>  <p><a href=""https://i.stack.imgur.com/RMpD5.png"" rel=""nofollow noreferrer"">See screenshot here</a></p>"	2020-05-05 16:30:26.12 UTC	61618982	"<p>The immediate problem with your code is the way you format the JS code string passed to <code>CustomJS</code>. It ends up being a broken JS code - you could see the error by opening your browser's JS console and changing the value of the <code>Select</code> widget.</p>  <p>As for your actual task - it's not that easy to do because <code>vbar_stack</code> is <a href=""https://github.com/bokeh/bokeh/blob/23166fd9d8232decce0ce9219812e570e83d8412/bokeh/plotting/figure.py#L1294-L1297"" rel=""nofollow noreferrer"">not a real glyph function</a>. Instead, it's just a helper function that calls the <code>vbar</code> glyph function with the necessary parameters. Your call to <code>p.vbar_stack(...)</code> effectively becomes</p>  <pre class=""lang-py prettyprint-override""><code>p.vbar(bottom=stack(), top=stack('Apples_green'),        x='index', width=0.9, color='green', source=source) p.vbar(bottom=stack('Apples_green'), top=stack('Apples_green', 'Apples_red'),        x='index', width=0.9, color='red', source=source) </code></pre>  <p>That means that in order to change the columns which the expressions used by the <code>VBar</code> glyphs use, you will have to basically convert that Bokeh Python code into BokehJS JavaScript code.</p>  <p>With that being said, here's a working version of your code that should work for any number of colors, not just two:</p>  <pre class=""lang-py prettyprint-override""><code>import pandas as pd  from bokeh.layouts import row, column from bokeh.models import CustomJS from bokeh.models import NumeralTickFormatter from bokeh.models.widgets import Select from bokeh.plotting import figure, ColumnDataSource, show from bokeh.transform import stack  df = pd.DataFrame.from_dict(     {         'Apples_green': {'2018': 100, '2019': 150, '2020': 200},         'Apples_red': {'2018': 200, '2019': 75, '2020': 25},         'Oranges_green': {'2018': 25, '2019': 60, '2020': 70},         'Oranges_red': {'2018': 100, '2019': 80, '2020': 10}     } )  d_map = {     'Apples': ['Apples_green', 'Apples_red'],     'Oranges': ['Oranges_green', 'Oranges_red'] }  selection_list = list(d_map.keys())  # In modern Python, dicts are ordered by default. initial_value = selection_list[0] initial_col = [i for i in df.columns.tolist() if i.startswith(initial_value)]  source = ColumnDataSource(df)  p = figure(plot_width=350, plot_height=300,            x_range=df.index.drop_duplicates().tolist()) renderers = [] col_acc = [] for col in d_map[initial_value]:     color = col[len(initial_value) + 1:]     r = p.vbar(bottom=stack(*col_acc), top=stack(col, *col_acc),                x='index', width=0.9, color=color, source=source)     col_acc.append(col)     renderers.append(r) p.yaxis.formatter = NumeralTickFormatter(format='(0.00)')  select = Select(title=""Fruit:"", value=initial_value, options=selection_list)  select.js_on_change('value', CustomJS(args=dict(d_map=d_map, renderers=renderers),                                       code=""""""     const Stack = Bokeh.Models('Stack');     const col_acc = [];     d_map[cb_obj.value].forEach((col, idx) =&gt; {         const {glyph} = renderers[idx];         glyph.bottom = {expr: new Stack({fields: col_acc})};         col_acc.push(col);         glyph.top = {expr: new Stack({fields: col_acc})};     }); """"""))  col = column(select) layout = row(col, p) show(layout) </code></pre>"			2020-05-05 17:14:57.587 UTC
61629408	javascript|python|node.js|sha256|plaid	Python body.encode( ) Javascript alternative	"<p>I'm trying to verify a webhook coming from Plaid in NodeJS by calculating the Sha256 of the webhook body and I'm following a Python code <a href=""https://support.plaid.com/hc/en-us/articles/360041410794"" rel=""nofollow noreferrer"">here</a> where the code is showing :</p>  <pre><code>   # Compute the has of the body.    m = hashlib.sha256()    m.update(body.encode())    body_hash = m.hexdigest()  </code></pre>  <p>What's the alternative of body.encode() in Javascript before passing it to the Sha256 function please ? Note that the body I'm getting is an object containing the following data : </p>  <blockquote>   <p>{ error: null,   item_id: '4zAGyokJ1XiWP63QNl1RuLZV76o55nudVXzNG',<br>   new_transactions: 0,   webhook_code: 'DEFAULT_UPDATE',   webhook_type:   'TRANSACTIONS' }</p> </blockquote>  <p>However I'm trying to get this hash : </p>  <blockquote>   <p>b05ef560b59e8d8e427433c5e0f6a11579b5dfe6534257558b896f858007385a</p> </blockquote>"	2020-05-06 07:14:35.707 UTC	61629917	"<p>So, if the body is JSON <strong>(NOT JSON STRING)</strong> then you need to stringify it and put it in the <code>.update</code> function As the <code>m.body</code> takes a string. If you have your body as <strong>STRING</strong> then just put it in as is.</p>  <p>This is from the Crypto Example <a href=""https://nodejs.org/api/crypto.html#crypto_class_hash"" rel=""nofollow noreferrer"">here</a>:</p>  <pre><code>const crypto = require('crypto'); const hash = crypto.createHash('sha256');  const stringBody = JSON.stringify(body); hash.update(stringBody); console.log(hash.digest('hex')); </code></pre>  <p><strong>Edit:</strong><br> If the hash is not same then maybe you need to correct the newlines or whitespaces. You need to make both bodies exactly the same. Here In the below example I am using same exact string and encoding using Python AND NodeJS.</p>  <pre><code>import hashlib body = '{""error"":null,""item_id"":""4zAGyokJ1XiWP63QNl1RuLZV76o55nudVXzNG"",""new_transactions"":0,""webhook_code"":""DEFAULT_UPDATE"",""webhook_type"":""TRANSACTIONS""}' m = hashlib.sha256() m.update(body.encode()) body_hash = m.hexdigest() print(body_hash) </code></pre>  <p><strong>Output:</strong></p>  <pre><code>python3 file.py 26f1120ccaf99a383b7462b233e18994d0c06d4585e3fe9a91a449e97a1c03ba </code></pre>  <p><strong>And Using NodeJS:</strong></p>  <pre><code>const crypto = require('crypto'); const hash = crypto.createHash('sha256'); const body = {   error: null,   item_id: '4zAGyokJ1XiWP63QNl1RuLZV76o55nudVXzNG',   new_transactions: 0,   webhook_code: 'DEFAULT_UPDATE',   webhook_type: 'TRANSACTIONS' }  const stringBody = JSON.stringify(body); hash.update(stringBody); console.log(hash.digest('hex')); </code></pre>  <p><strong>Output:</strong></p>  <pre><code>node file.js 26f1120ccaf99a383b7462b233e18994d0c06d4585e3fe9a91a449e97a1c03ba </code></pre>"			2020-05-06 07:45:55.517 UTC
61686095	javascript|python-3.x|flask|sqlalchemy	javascript python 3 jsonResponse undefined	"<p>I'm trying to send a post request to my server and then instantly update the webpage to display the user input.  It looks like the POST request is going through because when I refresh the page the user input is displayed and the correct data has been inserted into my database.  The problem is that when I submit the form the page displays undefined data.  I can't update the item or delete it until I refresh the page.  Why isn't the submitted data showing on the page right away?  This is my relevant code.</p>  <p>index.html:</p>  <pre><code>      const descInput = document.getElementById('description');       document.getElementById('form').onsubmit = function(e) {         e.preventDefault();         const desc = descInput.value;         descInput.value = '';         response = fetch('/todos/create', {           method: 'POST',           body: JSON.stringify({             'description': desc,           }),           headers: {             'Content-Type': 'application/json',           }         })         .then(response =&gt; {             return response.json()         })         .then(jsonResponse =&gt; {           const li = document.createElement('li');           const checkbox = document.createElement('input');           checkbox.className = 'check-completed';           checkbox.type = 'checkbox';           checkbox.setAttribute('data-id', jsonResponse.id);           li.appendChild(checkbox);            const text = document.createTextNode(' ' + jsonResponse.description);           li.appendChild(text);            const deleteBtn = document.createElement('button');           deleteBtn.className = 'delete-button';           deleteBtn.setAttribute('data-id', jsonResponse.id);           deleteBtn.innerHTML = '&amp;cross;';           li.appendChild(deleteBtn);            document.getElementById('todos').appendChild(li);           document.getElementById('error').className = 'hidden';         })         .catch(function() {           console.error('Error occurred');           document.getElementById('error').className = '';         })       } </code></pre>  <p>app.py:</p>  <pre><code>@app.route('/todos/create', methods=['POST']) def create_todo():     error = False     body = {} #   description = request.form.get('description', '') #   return render_template('index.html')     try:         description = request.get_json()['description']         todo = Todo(description=description)         #body['description'] = todo.description         db.session.add(todo)         db.session.commit()     except:         error=True         db.session.rollback()         print(sys.exc_info())     finally:         db.session.close()     if error:         abort (400)     else:         return jsonify(body) </code></pre>"	2020-05-08 18:53:21.27 UTC	61687956	<p>I got it.  I wasn't setting my json object with the necessary attributes and returning it in app.py</p>			2020-05-08 20:55:49.39 UTC
61707486	javascript|python|html|flask	How to pass a Python variable/Jinja2 template to a JavaScript file?	"<p>I know you can pass a variable to inline javascript in your html like in <a href=""https://stackoverflow.com/questions/15321431/how-to-pass-a-list-from-python-by-jinja2-to-javascript"">this question</a>:</p>  <pre><code>&lt;script type=""text/javascript""&gt;     function test_func(data) {         console.log(data);     }     test_func({{ data|safe }}) &lt;/script&gt; </code></pre>  <p>But how can I pass this data to a function in a javascript file?</p>  <p>I want to call <code>test_func({{ data|safe }})</code> from the file:</p>  <pre><code>    &lt;script src=""{{ url_for('static', filename='scripts/highcharts.js') }}""&gt;&lt;/script&gt; </code></pre>"	2020-05-10 05:13:44.31 UTC	61720040	"<p>If your js code uses a module system there are more elegant ways to do this, but otherwise this is one way, if I understand your situation correctly:</p>  <pre><code>&lt;div&gt;blah blah&lt;/blah&gt; &lt;script&gt;     var window.myData = window.myData = {{ data|tojson }}; &lt;/script&gt; </code></pre>  <p>... It sounds like from your comments that you are modifying <code>highcharts.js</code>, which I would have expected would be an unmodifiable 3rd party file. But assuming you can modify it, within <code>highcharts.js</code> would be something like:</p>  <pre><code>test_func(window.myData); </code></pre>  <p>This assumes that your <code>myData</code> is safe to share globally across all js on your page.</p>  <p>Also note that for this to work, you have to make sure <code>window.myData</code> has been populated before <code>highcharts.js</code> is run. You should not rely on asynchronous happenstance for this but instead make that sure the code is always loaded in the right order based on js loading rules. This is another thing that using js modules of some flavor would take care of.</p>  <h3>Note on escaping:</h3>  <p>Note that I've used <code>tojson</code> instead of <code>safe</code> here. That's a result of 3 minutes of googling and may be wrong. But the point is that I don't think <code>safe</code> is what you want probably, which seems to turn off escaping entirely. Unless you know with confidence that <code>data</code> is free from potential XSS-style attack strings, you probably want <a href=""https://stackoverflow.com/questions/12339806/escape-strings-for-javascript-using-jinja2"">javascript escaping</a> here I think instead of HTML escaping which is probably the default. However, I'm not an expert.</p>"			2020-05-10 23:25:26.867 UTC
61711850	javascript|python|selenium	Return value from JavaScript to Python using Selenium	"<p>I'm trying to return True or False from this javascript method ""confirm()"" to my python variable. However, it displays the prompt, and the program control moves ahead and never returns anything. How do I stop it from doing so? Is there any other method I can use to take ""Yes"" or ""No"" from the user and return it to my python variable? I have tried prompt() but I don't want the user to type anything. I want it to be just a simple ""Yes"" or ""No"". </p>  <pre><code>choice= self.driver.execute_script("""""" if(confirm('Yes or No?')) {          return true;             }         else{             return false;         } """""")  if choice == True:     print('Success!') else:     print('Failed') </code></pre>"	2020-05-10 12:19:03.763 UTC	61732010	"<p>Basically the problem here and how you want to solve it is a little bit more complicated.</p>  <p>First of all the javascript code is not valid and executing this script will return <code>None</code>. Much simpler version of the script is <code>driver.execute_script(""return confirm('...')"")</code> but the problem here will be that the alert will pop up and the python code will continue so it will still return <code>None</code>.</p>  <p>What you can do is to execute <code>confirm('Yes or No?')</code> store it in variable, wait until alert is gone and return this variable.</p>  <pre class=""lang-py prettyprint-override""><code>from selenium import webdriver from selenium.webdriver.support.ui import WebDriverWait from selenium.common.exceptions import NoAlertPresentException  # small helper class to wait untill alert is no longer present class alert_is_not_present(object):     """""" Expect an alert to not to be present.""""""     def __call__(self, driver):         try:             alert = driver.switch_to.alert             alert.text             return False         except NoAlertPresentException:             return True   self.driver.execute_script(""choice = confirm('yes or no')"")  # Give some large timeout so you're sure that someone will have time to click # Wait until user makes a choice WebDriverWait(self.driver, 10000).until(alert_is_not_present()) # retrieve the choice choice = self.driver.execute_script('return choice') if choice:     print('Success!') else:     print('Failed') </code></pre>"			2020-05-11 14:22:45.707 UTC
61776440	javascript|python|jquery|ajax|flask	trouble returning json from python to javascript with ajax	"<p>I'm sending <code>articleUrl</code> from my .js to my python function, which works fine. I then want my python function to return <code>pubscore</code> back to the .js. </p>  <p>pubscore prints fine in the .py, but then I get <strong>""Uncaught ReferenceError: pubscore is not defined at Object.myFunction [as success] (background.js:41)""</strong>. Line 41 is <code>var myPubscore = pubscore</code> in the .js. </p>  <p><strong>background.js</strong></p>  <pre><code>$.ajax({     type: 'POST',     url: `${url}/buttoncolor`,     data: articleUrl,     success: function urlFunction(data) {     var myPubscore = pubscore;     console.log(myPubscore);     } }) </code></pre>  <p><strong>application.py</strong></p>  <pre><code>def buttoncolor():     import json     if request.method == 'POST':         if not request.form['url']:             flash('Please enter all the fields', 'error')         else:             rurl = request.form['url']              ...              pubscore = pub_tuple[8]             print(pubscore)             return json.dumps(pubscore)     else:         strscore = str(pubscore)         message = {'greeting': strscore}         return jsonify(message)  # serialize and use JSON headers </code></pre>  <p><strong>Suggested code that didn't work for me but could be helpful to someone else</strong></p>  <pre><code>chrome.runtime.onMessage.addListener(function(request, sender, sendResponse) {     if (request.type == ""articleUrl"") {         var articleUrl = request;         $.ajax({             type: 'POST',             url: `${url}/buttoncolor`,             data: articleUrl,             success: function(){ alert('success');             }         })          $.getJSON(`${url}/buttoncolor`,{data: articleUrl}, function(data) {         doWork(data.greetings);         });          function doWork(myPubscore){         console.log(myPubscore);         if (myPubscore &gt; 1)         {console.log(""myPubscore is more than 1"")}         }     } </code></pre>"	2020-05-13 13:50:18.527 UTC	61776610	"<p>Please try this</p>  <pre class=""lang-js prettyprint-override""><code>function doWork(data) {   const myPubscore = data.greeting;   console.log(myPubscore)   if (myPubscore &gt; 1) {     console.log(""myPubscore is more than 1"")   } }  chrome.runtime.onMessage.addListener(function(request, sender, sendResponse) {   if (request.type == ""articleUrl"") {     var articleUrl = request;     $.ajax({       type: 'POST',       url: `${url}/buttoncolor`,       data: articleUrl,       success: doWork,       error: function(e) {         console.log(""error"", e)       }     })   } }) </code></pre>"			2020-05-13 13:58:13.967 UTC
61779392	javascript|python	Unable to read python generated JSON using javascript	"<p>I'm pretty new to python. I am trying to generate a JSON array response in python that my javascript application can consume. However, while my javascript recognizes that there are multiple objects within the array, it doesn't recognize any of the keys within those objects. I assume it's due to how I am creating the array and objects in python since I can copy/paste the array to a javascript object and its works perfectly. </p>  <p>Here is an example of my Python 3.7 script:</p>  <pre><code>data1 = '{""id"": ""1"", ""username"": """", ""url"": """", ""icon"": """", ""display"":' + json.dumps(state) +', ""mouseover"": """", ""data"":' + json.dumps(Payload) + '}' data2 = '{""id"": ""2"", ""username"": """", ""url"": """", ""icon"": """", ""display"":' + json.dumps(state) +', ""mouseover"": """", ""data"":' + json.dumps(Payload) + '}'  jsonObj = []  jsonObj.append(data1) jsonObj.append(data2)  return {     'statusCode': 200,     'status': ""ok"",     'data': jsonObj } </code></pre>  <p>Here is a sample of my javascript:</p>  <pre><code>    $.ajax({     url: Url,     type: ""GET"",     success: function (result) {         console.log(result.data);          /*This didn't work --&gt; ""undefined""*/         console.log(""WTF?---&gt;"" + result.data[0].id)          /*This didn't work --&gt; ""undefined""*/         Array.from(request.data).forEach(element =&gt; {             console.log(element.id);         });           /*This didn't work --&gt; ""undefined""*/         var x = JSON.stringify(result.data);         var z = JSON.parse(x);         console.log(z[0].id)          /*This didn't work --&gt; ""undefined""*/         Array.from(z).forEach(element =&gt; {             console.log(element.id);         });       } }) </code></pre>  <p>As I said, javascript recognizes there are 2 objects in the array. It's almost as if javascript reads the objects in the array as one key value. The output looks correct and validates as JSON. Not sure what I am doing wrong but I am guessing it has to do with how I am appending the jsonObj as the data key value. </p>  <p>Any thoughts? </p>"	2020-05-13 16:04:15.427 UTC	61780606	"<p>Thanks to Olian04 putting me on the right track by using typeof to determine whether the objects in the array were truly objects and not strings... I was able to determine that the objects withing the array were in fact actually strings. To resolve the issue I simply ran the array of string through a foreach and converted them to objects. </p>  <pre><code>jsonObj = [];  Array.prototype.forEach.call(result.data, element =&gt; { var converted = JSON.parse(element); jsonObj.push(converted); }); </code></pre>"			2020-05-13 17:04:31.717 UTC
61796379	javascript|python|selenium	Javascript login page with Python Selenium	"<p>I am trying to login to the following page using Python selenium package to do few activities. I wrote the following, but every time I  get ""the Class is not found"". I need to access the username and password to use <code>send_keys()</code>. Any feedback on this is appreciated. </p>  <p>[Code]</p>  <pre class=""lang-py prettyprint-override""><code>from selenium import webdriver from selenium.webdriver.common.by import By from selenium.webdriver.support.ui import WebDriverWait as wait from selenium.webdriver.support import expected_conditions as EC  chrome_browser = webdriver.Chrome('C:/Users/vbabu/AppData/Local/chromedriver') chrome_browser.maximize_window() chrome_browser.get('https://myservices-dfsi.console.oraclecloud.com/mycloud/cloudportal/gettingStarted')  form = chrome_browser.find_element_by_id('idcs-signin-basic-signin-form-post-redirect-form') print(form) </code></pre>  <p>[Error]</p>  <blockquote>   <p>selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {""method"":""css selector"",""selector"":""[id=""idcs-signin-basic-signin-form-post-redirect-form""]""}</p> </blockquote>  <p>[Expected Output]</p>  <p>I need to access the username and password tags.</p>  <p><img src=""https://i.stack.imgur.com/g2xYJ.png"" alt=""Screenshot""></p>"	2020-05-14 11:35:37.353 UTC	61797511	"<p><code>time.sleep(5)</code> and <code>ID = ""idcs-signin-basic-signin-form-username""</code></p>"			2020-05-14 12:35:27.833 UTC
61796379	javascript|python|selenium	Javascript login page with Python Selenium	"<p>I am trying to login to the following page using Python selenium package to do few activities. I wrote the following, but every time I  get ""the Class is not found"". I need to access the username and password to use <code>send_keys()</code>. Any feedback on this is appreciated. </p>  <p>[Code]</p>  <pre class=""lang-py prettyprint-override""><code>from selenium import webdriver from selenium.webdriver.common.by import By from selenium.webdriver.support.ui import WebDriverWait as wait from selenium.webdriver.support import expected_conditions as EC  chrome_browser = webdriver.Chrome('C:/Users/vbabu/AppData/Local/chromedriver') chrome_browser.maximize_window() chrome_browser.get('https://myservices-dfsi.console.oraclecloud.com/mycloud/cloudportal/gettingStarted')  form = chrome_browser.find_element_by_id('idcs-signin-basic-signin-form-post-redirect-form') print(form) </code></pre>  <p>[Error]</p>  <blockquote>   <p>selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {""method"":""css selector"",""selector"":""[id=""idcs-signin-basic-signin-form-post-redirect-form""]""}</p> </blockquote>  <p>[Expected Output]</p>  <p>I need to access the username and password tags.</p>  <p><img src=""https://i.stack.imgur.com/g2xYJ.png"" alt=""Screenshot""></p>"	2020-05-14 11:35:37.353 UTC	61796889	"<p>Try using explicit wait until element get available to perform actions</p>  <pre><code>username = WebDriverWait(driver, 20).until(EC.visibility_of_element_located((By.ID, ""idcs-signin-basic-signin-form-username""))) username.send_keys(""some_text"") </code></pre>  <p>import below packages:</p>  <pre><code>from selenium.webdriver.common.by import By from selenium.webdriver.support.ui import WebDriverWait from selenium.webdriver.support import expected_conditions as EC </code></pre>"			2020-05-14 12:03:00.217 UTC
61802595	javascript|python|selenium|web-scraping	Scrape data inside a JavaScript function by using python selenium	"<p>Please let me know if there is any option available to scrape data inside a JavaScript function below using Selenium</p> <p><strong>page <a href=""https://www.bayut.com/index/sale-prices-apartments-abu-dhabi.html"" rel=""nofollow noreferrer"">https://www.bayut.com/index/sale-prices-apartments-abu-dhabi.html</a></strong></p> <p><strong>input code</strong></p> <pre><code>&lt;script type=&quot;text/javascript&quot;&gt;  var chartData1 = []; var chartData2 = []; var chartData3 = [];  function generateChartData() {             var newDate = new Date('2010-01-31');             chartData1.push({             date: newDate,                     value: 1443,                     disply_val: '1,443'             });             chartData2.push({             date: newDate,                     value: 0,                     disply_val: '0'             });             chartData3.push({             date: newDate,                     value: 100.0000,                     disply_val: '100'             });                 var newDate = new Date('2010-02-28');             chartData1.push({             date: newDate,                     value: 1407,                     disply_val: '1,407'             });             chartData2.push({             date: newDate,                     value: 0,                     disply_val: '0'             });             chartData3.push({             date: newDate,                     value: 97.5000,                     disply_val: '98'             });                 var newDate = new Date('2010-03-31');             chartData1.push({             date: newDate,                     value: 1400,                     disply_val: '1,400'             });             chartData2.push({             date: newDate,                     value: 0,                     disply_val: '0'             });             chartData3.push({             date: newDate,                     value: 97.0000,                     disply_val: '97'             });                 var newDate = new Date('2010-04-30');             chartData1.push({             date: newDate,                     value: 1433,                     disply_val: '1,433'             });             chartData2.push({             date: newDate,                     value: 0,                     disply_val: '0'             });             chartData3.push({             date: newDate,                     value: 99.3300,                     disply_val: '99'             });                 var newDate = new Date('2010-05-31');             chartData1.push({             date: newDate,                     value: 1409,                     disply_val: '1,409'             });             chartData2.push({             date: newDate,                     value: 0,                     disply_val: '0'             });             chartData3.push({             date: newDate,                     value: 97.6700,                     disply_val: '98'             });                 var newDate = new Date('2010-06-30');             chartData1.push({             date: newDate,                     value: 1380,                     disply_val: '1,380'             });             chartData2.push({             date: newDate,                     value: 0,                     disply_val: '0'             });             chartData3.push({             date: newDate,                     value: 95.6700,                     disply_val: '96'             });                 var newDate = new Date('2010-07-31');             chartData1.push({             date: newDate,                     value: 1270,                     disply_val: '1,270'             });             chartData2.push({             date: newDate,                     value: 0,                     disply_val: '0'             });             chartData3.push({             date: newDate,                     value: 88.0000,                     disply_val: '88'             });                 var newDate = new Date('2010-08-31');             chartData1.push({             date: newDate,                     value: 1265,                     disply_val: '1,265'             });             chartData2.push({             date: newDate,                     value: 0,                     disply_val: '0'             });             chartData3.push({             date: newDate,                     value: 87.6700,                     disply_val: '88'             });                 var newDate = new Date('2010-09-30');             chartData1.push({             date: newDate,                     value: 1251,                     disply_val: '1,251'             });             chartData2.push({             date: newDate,                     value: 0,                     disply_val: '0'             });             chartData3.push({             date: newDate,                     value: 86.6700,                     disply_val: '87'             });                 var newDate = new Date('2010-10-31');             chartData1.push({             date: newDate,                     value: 1251,                     disply_val: '1,251'             });             chartData2.push({             date: newDate,                     value: 0,                     disply_val: '0'             });             chartData3.push({             date: newDate,                     value: 86.6700,                     disply_val: '87'             });                 var newDate = new Date('2010-11-30');             chartData1.push({             date: newDate,                     value: 1227,                     disply_val: '1,227'             });             chartData2.push({             date: newDate,                     value: 0,                     disply_val: '0'             });             chartData3.push({             date: newDate,                     value: 85.0000,                     disply_val: '85'             });                 var newDate = new Date('2010-12-31');             chartData1.push({             date: newDate,                     value: 1284,                     disply_val: '1,284'             });             chartData2.push({             date: newDate,                     value: 0,                     disply_val: '0'             });             chartData3.push({             date: newDate,                     value: 89.0000,                     disply_val: '89'             });                 var newDate = new Date('2011-01-31');             chartData1.push({             date: newDate,                     value: 1284,                     disply_val: '1,284'             });             chartData2.push({             date: newDate,                     value: 0,                     disply_val: '0'             });             chartData3.push({             date: newDate,                     value: 89.0000,                     disply_val: '89'             });                 var newDate = new Date('2011-02-28');             chartData1.push({             date: newDate,                     value: 1279,                     disply_val: '1,279'             });             chartData2.push({             date: newDate,                     value: 0,                     disply_val: '0'             });             chartData3.push({             date: newDate,                     value: 88.6700,                     disply_val: '89'             });                 var newDate = new Date('2011-03-31');             chartData1.push({             date: newDate,                     value: 1212,                     disply_val: '1,212'             });             chartData2.push({             date: newDate,                     value: 0,                     disply_val: '0'             });             chartData3.push({             date: newDate,                     value: 84.0000,                     disply_val: '84'             });                 var newDate = new Date('2011-04-30');             chartData1.push({             date: newDate,                     value: 1231,                     disply_val: '1,231'             });             chartData2.push({             date: newDate,                     value: 0,                     disply_val: '0'             });             chartData3.push({             date: newDate,                     value: 85.3300,                     disply_val: '85'             });                 var newDate = new Date('2011-05-31');             chartData1.push({             date: newDate,                     value: 1279,                     disply_val: '1,279'             });             chartData2.push({             date: newDate,                     value: 0,                     disply_val: '0'             });             chartData3.push({             date: newDate,                     value: 88.6700,                     disply_val: '89'             });                 var newDate = new Date('2011-06-30');             chartData1.push({             date: newDate,                     value: 1318,                     disply_val: '1,318'             });             chartData2.push({             date: newDate,                     value: 0,                     disply_val: '0'             });             chartData3.push({             date: newDate,                     value: 91.3300,                     disply_val: '91'             }); </code></pre>          … <p><strong>Output</strong></p> <p><strong>Date            Value</strong></p> <p><strong>2010-01-31       1443</strong></p> <p><strong>2010-02-28       1407</strong></p> <p><strong>Tried but not working</strong> My output file should have date and value columns, please let me know if there is option available</p> <pre><code>driver.find_element_by_id('newDate') driver.find_elements_by_xpath(&quot;//*[@class=' mask_search']&quot;)   </code></pre>"	2020-05-14 16:33:38.117 UTC	61809565	"<p>use driver.execute_script:</p>  <pre><code>data = driver.execute_script('return [chartData1, chartData2, chartData3]') </code></pre>"			2020-05-15 00:15:04.467 UTC
61814274	javascript|python|selenium|automation	Javascript Dialog Box Python Selenium	"<p>I am trying to do automation with Python selenium package which requires to login the following page and do a series of tasks. While doing so, there is a place where webdriver requires to get into the dialog box and browse objects and imports files. From the selenium documention, i see <code>switch_to_alert()</code> but i understand it is for js alerts. Is there any other packages I need to use in order to interact with the dialog box. Your help on this is greatly appreciated.</p>  <p>[My code]</p>  <pre><code>import time from selenium import webdriver from selenium.webdriver.common.by import By from selenium.webdriver.support.ui import WebDriverWait as wait from selenium.webdriver.support import expected_conditions as EC  chrome_browser = webdriver.Chrome('C:/Users/vbabu/AppData/Local/chromedriver') chrome_browser.maximize_window() chrome_browser.get('https://idcs-b3fbc99e47864601a4d679df46d79328.identity.oraclecloud.com/ui/v1/adminconsole/?root=users')  time.sleep(5)  user_name = chrome_browser.find_element_by_id('idcs-signin-basic-signin-form-username') user_name.send_keys('abc') password = chrome_browser.find_element_by_id('idcs-signin-basic-signin-form-password') password.send_keys('test') signin = chrome_browser.find_element_by_id('idcs-signin-basic-signin-form-submit') signin.click()  time.sleep(10)  importusers = chrome_browser.find_element_by_id('idcs-users-toolbar-import-users') importusers.click()  time.sleep(5)  popup = chrome_browser.switch_to_alert()  #switchwin = chrome_browser.find_element_by_id('idcs-users-import-dialog_layer_surrogate') browsebtn = chrome_browser.find_element_by_id('idcs-users-import-file-upload-button') browsebtn.click() </code></pre>  <p>[Javascript Popup Script]</p>  <pre><code>&lt;div id=""idcs-users-import-dialog"" data-bind=""attr: {title: bundle('userManagement.manageUsers.userImportDialogTitle')},       ojComponent: {component: 'ojDialog', initialVisibility: 'hide', close: closeImportUserDialog,       rootAttributes: { style: 'min-width: 900px; width: 950px; min-height: 300px; height: 500px;'}}"" class=""oj-dialog oj-component oj-component-initnode oj-draggable oj-resizable oj-subtree-hidden"" tabindex=""-1"" role=""dialog"" aria-labelledby=""ui-id-37"" style=""min-width: 900px; width: 950px; min-height: 300px; height: 500px; top: auto; left: auto; bottom: auto; right: auto; display: none;"" aria-hidden=""true""&gt;&lt;div class=""oj-dialog-header oj-dialog-header-close ui-draggable-handle""&gt;&lt;div class=""oj-dialog-title"" id=""ui-id-37""&gt;Import Users&lt;/div&gt;&lt;button class=""oj-dialog-header-close-wrapper oj-button-jqui oj-button oj-component oj-enabled oj-button-half-chrome oj-button-icon-only oj-component-initnode oj-default"" aria-labelledby=""ui-id-243"" title=""Close"" tabindex=""1""&gt;&lt;div class=""oj-button-label""&gt;&lt;span class=""oj-button-icon oj-start oj-component-icon oj-fwk-icon-cross""&gt;&lt;/span&gt;&lt;span class=""oj-button-text oj-helper-hidden-accessible"" id=""ui-id-243""&gt;Close&lt;/span&gt;&lt;/div&gt;&lt;/button&gt;&lt;/div&gt;   &lt;div class=""oj-dialog-content oj-dialog-default-content""&gt;&lt;div class=""oj-dialog-body""&gt;     &lt;div class=""oj-flex oj-padding"" data-bind=""visible: importStep() === 1""&gt;       &lt;div class=""oj-flex-item oj-sm-12""&gt;         &lt;div class=""oj-flex oj-flex-items-pad oj-sm-align-items-center""&gt;           &lt;div class=""oj-flex-item oj-sm-1 idcs-align-center idcs-text-lg idcs-text-color-active""&gt;             &lt;span class=""idcs-icon idcs-user""&gt;&lt;/span&gt;           &lt;/div&gt;           &lt;div class=""oj-flex-item oj-sm-10""&gt;             &lt;div class=""oj-flex oj-flex-items-pad""&gt;               &lt;h3 data-bind=""text:bundle('userManagement.manageUsers.userImportDialogHeading')""&gt;Import Users&lt;/h3&gt;             &lt;/div&gt;             &lt;div class=""oj-flex oj-flex-items-pad""&gt;               &lt;p data-bind=""text:bundle('userManagement.manageUsers.userImportDialogInfo')""&gt;Select a file to import by using the browse button and then click Import. For additional help, please use the help links on the right side of this window.&lt;/p&gt;             &lt;/div&gt;           &lt;/div&gt;         &lt;/div&gt;          &lt;hr&gt;          &lt;div class=""oj-flex oj-md-justify-content-space-between oj-margin-top""&gt;           &lt;div class=""oj-flex-item oj-sm-9""&gt;             &lt;div class=""oj-flex oj-md-align-items-center""&gt;               &lt;div class=""oj-flex-item oj-sm-12 oj-md-4 idcs-text-right oj-padding-horizontal""&gt;                 &lt;h4 data-bind=""text: bundle('userManagement.manageUsers.selectFile')""&gt;Select a file to import&lt;/h4&gt;               &lt;/div&gt;               &lt;div class=""oj-flex-item oj-sm-12 oj-md-5 oj-form-control oj-choice-row-inline manage-user-input""&gt;                 &lt;input disabled="""" id=""dictionaryLocation"" type=""text"" class=""oj-form-control oj-inputtext-nocomp"" data-bind=""value: importFileLocation, attr: {title: bundle('userManagement.manageUsers.userImportHint') }"" title=""You can use a file with the CSV extension to import users into Identity Cloud Service.""&gt;               &lt;/div&gt;               &lt;div class=""oj-flex-item oj-flex oj-sm-12 oj-md-2 oj-md-justify-content-center""&gt;                 &lt;span&gt;                   &lt;label for=""idcs-users-import-file-upload-button"" class=""oj-component oj-enabled oj-button-text-icon-start oj-component-initnode oj-default""&gt;                     &lt;input id=""idcs-users-import-file-upload-button"" type=""file"" class=""idcs-hide"" data-bind=""value:importFileLocation, required: true"" accept="".csv""&gt;                     &lt;button id=""browse-button"" class=""oj-padding-start oj-button-jqui oj-button oj-component oj-enabled oj-button-full-chrome oj-button-text-only oj-component-initnode oj-default"" data-bind=""attr: { title: bundle('userManagement.manageUsers.userImportHint')},                                          click: fileBrowseClickListener, ojComponent: {component: 'ojButton', label: bundle('generic.browse')}"" title=""You can use a file with the CSV extension to import users into Identity Cloud Service."" aria-labelledby=""ui-id-36""&gt;&lt;div class=""oj-button-label""&gt;&lt;span class=""oj-button-text"" id=""ui-id-36""&gt;Browse&lt;/span&gt;&lt;/div&gt;&lt;/button&gt;                   &lt;/label&gt;                 &lt;/span&gt;               &lt;/div&gt;  </code></pre>  <p>[Screenshot of the popup window]</p>  <p><a href=""https://i.stack.imgur.com/WdEoE.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/WdEoE.png"" alt=""enter image description here""></a></p>  <p>[Expected Output]</p>  <ul> <li>Need to get inside the Dialog box and do some interactions. In this example, click browse, select file and click the import button.</li> </ul>"	2020-05-15 07:47:18.297 UTC	61814563	"<p>You cannot use switch_to_alert. The popup dialog is div, not an alert. </p>  <p>JS alert not belongs to DOM tree.</p>  <p>Find popup dialog &lt; div > as below:</p>  <p>If you cannot interact with the dialog box, check &lt; div > is in frame or not.</p>  <pre><code>popup = chrome_browser.find_element_by_id('idcs-users-import-dialog') </code></pre>  <p>And if you want to upload file, use send_keys to &lt; input > element.</p>  <pre><code>browsebtn = chrome_browser.find_element_by_id('idcs-users-import-file-upload-button') browsebtn.send_keys(//Your file path//) </code></pre>"			2020-05-15 08:04:19.74 UTC
61865415	python|selenium	Unable click on load more button which contains href = javascript void using python	"<p>I am trying to extract all the URLs data from the webpage '<a href=""https://careers.wipro.com/search-for-jobs.aspx?div=Technologies&amp;#divhere"" rel=""nofollow noreferrer"">https://careers.wipro.com/search-for-jobs.aspx?div=Technologies&amp;#divhere</a>'  This website contains a 'load more' button which loads more pages. iI tried the below code to load all the pages first by clicking load more button </p>  <pre><code>from selenium.webdriver.support.ui import WebDriverWait as wait from selenium.webdriver.support import expected_conditions as EC from selenium.webdriver.common.by import By from selenium.webdriver.common.action_chains import ActionChains  driver = webdriver.Chrome() driver.get(""https://careers.wipro.com/search-for-jobs.aspx?div=Technologies&amp;#divhere"")  main_menu = driver.find_element_by_css_selector('#DivVeiwMore .button-show-more').click()  actions = ActionChains(driver) actions.move_to_element(main_menu).click().build().perform() </code></pre>  <p>the above code gave below error.</p>  <p>ElementClickInterceptedException: Message: element click intercepted: Element ... is not clickable at point (455, 863). Other element would</p>  <p>then I tried using the below code</p>  <pre><code>url = ""https://careers.wipro.com/search-for-jobs.aspx?  div=Technologies&amp;#divhere"" driver = webdriver.Chrome() driver.get(url) html = driver.page_source.encode('utf-8') page_num = 0  while driver.find_elements_by_css_selector('#DivVeiwMore .button-show-more'): element = driver.find_element_by_css_selector('#DivVeiwMore .button-show-more').click() driver.execute_script(""arguments[0].click();"", element) page_num += 1 print(""getting page number"" +str(page_num)) time.sleep(10) </code></pre>  <p>html = driver.page_source.encode('utf-8') the above code gave me another error ElementClickInterceptedException: Message: element click intercepted: Element ... is not clickable at point (455, 863). Other element would receive the click: ...   (Session info: chrome=81.0.4044.138)</p>  <p>then I tried using wait but it didn't work as well.please find the code and error below</p>  <pre><code>from selenium.webdriver.support.ui import WebDriverWait as wait from selenium.webdriver.support import expected_conditions as EC from selenium.webdriver.common.by import By from selenium.webdriver.common.action_chains import ActionChains  driver = webdriver.Chrome() driver.get(""https://careers.wipro.com/search-for-jobs.aspx?  div=Technologies&amp;#divhere"")  main_menu =  driver.find_element_by_css_selector('a[href=""javascript:void(0);""]').click()  #actions = ActionChains(driver) #actions.move_to_element(main_menu).click().build().perform()  wait(driver, 15).until(EC.element_to_be_clickable((By.CSS_SELECTOR,  'a[href=""javascript:void(0);""]'))).click() </code></pre>  <p>this gave me an error  ElementNotInteractableException: Message: element not interactable</p>  <p>I am not sure where i am going wrong can anyone help me how to click on Load More button and load all pages so i can extract all href elements from the page.</p>"	2020-05-18 08:25:20.543 UTC	61867211	"<p>What is observed that notification of accepting cookie is interrupting the click and you are not waiting for loading the element.</p>  <p>there are different approach but i have used 1 Webdriverwait . Check if below lines work for you...</p>  <p>Change your driver path</p>  <pre><code>from selenium import webdriver from selenium.webdriver.support.ui import WebDriverWait from selenium.webdriver.support import expected_conditions as EC from selenium.common.exceptions import TimeoutException from selenium.webdriver.common.by import By import time  opt=webdriver.ChromeOptions()  opt.add_argument(""--start-maximized"")  driver= webdriver.Chrome(executable_path=""C:\\chrome driver\\chromedriver.exe"",options=opt) driver.get(""https://careers.wipro.com/search-for-jobs.aspx?div=Technologies&amp;#divhere"")  # if Accept cookie and decline cookie notification is visible in 5 sec then click on decline  try:     WebDriverWait(driver,5).until(EC.element_to_be_clickable((By.XPATH,'//*[@id=""DivCookie""]/div/div/div/a[2]/button')))     driver.find_element_by_xpath('//*[@id=""DivCookie""]/div/div/div/a[2]/button').click() except TimeoutException:     pass  WebDriverWait(driver, 30).until(EC.element_to_be_clickable((By.CSS_SELECTOR, '#DivVeiwMore .button-show-more'))) time.sleep(1) # just to ensure element is properly loaded main_menu = driver.find_element_by_css_selector('#DivVeiwMore .button-show-more').click() # you can use Action chain as well </code></pre>"			2020-05-18 10:09:32.58 UTC
61877953	javascript|python|html|eel	Eel python: Javascript error eel is not a function	"<p>I am using eel to communicate with python. I'm working in dir <code>C:\Users\Desktop\Eel</code> where I have <code>app.py</code> and inside the <code>UI</code> folder I have <code>index.html, myjava.js, style.css, images</code> but nothing called <code>eel.js</code>. I said this because in docs it says to include script called <code>/eel.js</code>.</p>  <hr>  <p><strong>index.html</strong></p>  <pre><code>&lt;head&gt;     &lt;script type=""text/javascript"" language=""JavaScript"" src=""./myjava.js""&gt;&lt;/script&gt;     &lt;script type=""text/javascript"" src=""/eel.js""&gt;&lt;/script&gt;     &lt;link rel=""stylesheet"" href=""style.css""&gt; &lt;/head&gt; </code></pre>  <pre><code>&lt;body&gt; &lt;div class=""container"" onclick=""runeel()""&gt; &lt;/body&gt; </code></pre>  <p>my Javascript is:</p>  <pre><code>function runeel(){     eel.runpy() } </code></pre>  <p><strong>app.py</strong></p>  <pre><code>import eel  eel.init('UI') eel.start('index.html', size=(900, 550))  @eel.expose def runpy():      ....code which creates an excel file in desktop... </code></pre>  <p>When I run the py file, the index.html loads up and then when I click the div I get into the function and but it throws the error:</p>  <pre><code>myjava.js:2 Uncaught TypeError: eel.runpy is not a function </code></pre>  <p>What am I missing?</p>"	2020-05-18 19:56:14.217 UTC	66735675	<p>i had the same problem until I removed the /eel.js from</p> <pre><code>&lt;script type=&quot;text/javascript&quot; src=&quot;/eel.js&quot;&gt;&lt;/script&gt; </code></pre> <p>now it's look like</p> <pre><code>&lt;script type=&quot;text/javascript&quot; src=&quot;eel.js&quot;&gt;&lt;/script&gt; </code></pre>			2021-03-21 17:53:08.11 UTC
61877953	javascript|python|html|eel	Eel python: Javascript error eel is not a function	"<p>I am using eel to communicate with python. I'm working in dir <code>C:\Users\Desktop\Eel</code> where I have <code>app.py</code> and inside the <code>UI</code> folder I have <code>index.html, myjava.js, style.css, images</code> but nothing called <code>eel.js</code>. I said this because in docs it says to include script called <code>/eel.js</code>.</p>  <hr>  <p><strong>index.html</strong></p>  <pre><code>&lt;head&gt;     &lt;script type=""text/javascript"" language=""JavaScript"" src=""./myjava.js""&gt;&lt;/script&gt;     &lt;script type=""text/javascript"" src=""/eel.js""&gt;&lt;/script&gt;     &lt;link rel=""stylesheet"" href=""style.css""&gt; &lt;/head&gt; </code></pre>  <pre><code>&lt;body&gt; &lt;div class=""container"" onclick=""runeel()""&gt; &lt;/body&gt; </code></pre>  <p>my Javascript is:</p>  <pre><code>function runeel(){     eel.runpy() } </code></pre>  <p><strong>app.py</strong></p>  <pre><code>import eel  eel.init('UI') eel.start('index.html', size=(900, 550))  @eel.expose def runpy():      ....code which creates an excel file in desktop... </code></pre>  <p>When I run the py file, the index.html loads up and then when I click the div I get into the function and but it throws the error:</p>  <pre><code>myjava.js:2 Uncaught TypeError: eel.runpy is not a function </code></pre>  <p>What am I missing?</p>"	2020-05-18 19:56:14.217 UTC	65900387	"<p>In my case, I had to start <code>eel</code> <em>after</em> exposing the function via the decorator:</p> <pre><code>import eel  eel.init('UI')  @eel.expose def runpy():      ....code which creates an excel file in desktop...  eel.start('index.html', size=(900, 550)) </code></pre>"			2021-01-26 11:20:22.81 UTC
61877953	javascript|python|html|eel	Eel python: Javascript error eel is not a function	"<p>I am using eel to communicate with python. I'm working in dir <code>C:\Users\Desktop\Eel</code> where I have <code>app.py</code> and inside the <code>UI</code> folder I have <code>index.html, myjava.js, style.css, images</code> but nothing called <code>eel.js</code>. I said this because in docs it says to include script called <code>/eel.js</code>.</p>  <hr>  <p><strong>index.html</strong></p>  <pre><code>&lt;head&gt;     &lt;script type=""text/javascript"" language=""JavaScript"" src=""./myjava.js""&gt;&lt;/script&gt;     &lt;script type=""text/javascript"" src=""/eel.js""&gt;&lt;/script&gt;     &lt;link rel=""stylesheet"" href=""style.css""&gt; &lt;/head&gt; </code></pre>  <pre><code>&lt;body&gt; &lt;div class=""container"" onclick=""runeel()""&gt; &lt;/body&gt; </code></pre>  <p>my Javascript is:</p>  <pre><code>function runeel(){     eel.runpy() } </code></pre>  <p><strong>app.py</strong></p>  <pre><code>import eel  eel.init('UI') eel.start('index.html', size=(900, 550))  @eel.expose def runpy():      ....code which creates an excel file in desktop... </code></pre>  <p>When I run the py file, the index.html loads up and then when I click the div I get into the function and but it throws the error:</p>  <pre><code>myjava.js:2 Uncaught TypeError: eel.runpy is not a function </code></pre>  <p>What am I missing?</p>"	2020-05-18 19:56:14.217 UTC	62129082	"<p>It seems that the init statement is written first. What about writing the @eel.expose statement right after the import statement?</p>  <p>I'm not good at English, so I'm worried that it will make sense. But I would be happy if I could help.</p>"			2020-06-01 09:17:22.29 UTC
61880828	javascript|python|html|flask	How can I access data provided to HTML template from Python flask routing in my JavaScript code?	"<p>So I have a python flask application that routes to a site and passes along two lists:</p>  <pre><code>def chart():     labels = ['x', 'y', 'z']     values = [100, 150, 100]     return render_template('chart.html',      labels=labels, values=values) </code></pre>  <p>I use <code>Chart.min.js</code> and I can then use the lists in rendering a graph in my <code>chart.html</code>:</p>  <pre><code>{% block body %} &lt;h1&gt;Test chart&lt;/h1&gt;  &lt;canvas id=""myChart"" width=""800"" height=""400""&gt;&lt;/canvas&gt;  &lt;p id=""caption""&gt;chart displaying labels n' values&lt;/p&gt;  &lt;script type=text/javascript&gt;      var ctx = document.getElementById('myChart');      var names = [         {% for item in labels %}             ""{{ item }}"",         {% endfor %}     ];      var numbers = [         {% for item in values %}             {{ item }},         {% endfor %}     ];      var chartData = {         labels: names,         datasets: [{           label: 'values',            data: numbers         }]     };      var myChart = new Chart(ctx, {         type: 'line',         data: chartData     });  &lt;/script&gt;  {% endblock %} </code></pre>  <p>Now this works fine and I get a nice pretty graph.  Then I wanted to put my JavaScript in a seperate file in the static folder for my flask application but I cannot find how I'm supposed to access the lists passed along to <code>chart.htlm</code>. I can render a graph just fine if I hardcode some data into the JS file but I can't seem to get the data provided by the python code..</p>  <pre><code>var ctx = document.getElementById('myChart');  // var names = ['x', 'y', 'z']; // var numbers = [100, 150, 100];  var chartData = {     labels: names,     datasets: [{         label: 'values',         data: numbers     }] };  var myChart = new Chart(ctx, {     type: 'line',     data: chartData }); </code></pre>  <p>I have tried to loop the contents of the lists from my python file into different containers such as <code>&lt;div&gt;</code>, <code>&lt;ol&gt;</code> and <code>&lt;ul&gt;</code>and access those through <code>document.getElementById("""")</code> among some other attempts, can't really remember them all.</p>  <p>I have tried to find the answer on google but to no avail.</p>  <p>Any help is appreciated and I should mention that I'm new to these coding languages and frameworks so please have some oversight if what I am missing is obvious.</p>  <p>=== NEW WORKING VERSION ===</p>  <p><code>chart.html</code> :</p>  <pre><code>&lt;script type=""text/javascript""&gt;      window.addEventListener('DOMContentLoaded', (event) =&gt; {         const myChart2 = document.getElementById('ChartOne');         drawChart(ChartOne, {{ labels| tojson }}, {{ values| tojson }}, ChartType.LINE);      });  &lt;/script&gt;  &lt;div&gt;     &lt;canvas id=""ChartOne"" width=""800"" height=""400""&gt;&lt;/canvas&gt;     &lt;p id=""caption""&gt;line chart displaying labels n' values&lt;/p&gt; &lt;/div&gt;  </code></pre>  <p><code>script.js</code>:</p>  <pre><code>const ChartType = {     LINE: ""line"" // add more variables for more chart options }  function drawEmployeeChart(ctx, labels, values, chartType) {     var chartData = {         labels: labels,         datasets: [{             label: 'values',             data: values,         }]     };      var myChart = new Chart(ctx, {         type: chartType,         data: chartData     }); } </code></pre>"	2020-05-18 23:45:24.463 UTC	61883835	"<p>Now that you've separated your javascript into a new js file, you have to get your variables there.</p>  <p>What you could do is define a javascript function in your .js file that takes two arrays:</p>  <pre><code>function render_chart(labels, values) {     var ctx = document.getElementById('myChart');      var chartData = {         labels: names,         datasets: [{             label: 'values',             data: values         }]     };      var myChart = new Chart(ctx, {         type: 'line',         data: chartData     }); } </code></pre>  <p>Then call the function from your <code>chart.html</code> page, but you have to convert the variables you pass from Flask to json. To do that do this, using the special <code>tojson</code> Jinja2 filters:</p>  <pre><code>&lt;script type=""text/javascript""&gt;render_chart({{ labels|tojson }}, {{ values|tojson }})'&gt;&lt;/script&gt; </code></pre>"			2020-05-19 05:26:45.097 UTC
61895940	javascript|python-3.x	"How can i take n number of input in an array in javascript, python"	"<p>I want to take an user input that determins the number of inputs desired to take &amp; input that number of inputs . For example if i need to enter 5 inputs ,the user would get a prompt asking what number of inputs you want to enter &amp; if i log it and continue the the user gets another prompt asking the inputs</p>"	2020-05-19 16:21:48.29 UTC	61896191	"<p>You can use something like this for python and use the list as you want</p>  <pre><code>lst = []  n = int(input(""Enter number of elements : ""))  for i in range(0, n):      ele = int(input())      lst.append(ele) # adding the element   print(lst)  #lst will contain all user inputs </code></pre>  <p>For Javascript</p>  <pre><code>var lst = []; var n = prompt(""Enter number of elements : ""); var ele; for(let i = 0; i &lt; n; i++){     ele = prompt("""");     lst.push(ele); # adding the element  } console.log(lst); #lst will contain all user inputs </code></pre>"			2020-05-19 16:34:27.373 UTC
61895940	javascript|python-3.x	"How can i take n number of input in an array in javascript, python"	"<p>I want to take an user input that determins the number of inputs desired to take &amp; input that number of inputs . For example if i need to enter 5 inputs ,the user would get a prompt asking what number of inputs you want to enter &amp; if i log it and continue the the user gets another prompt asking the inputs</p>"	2020-05-19 16:21:48.29 UTC	61896333	"<p>In javascript </p>  <pre><code>let numbersOfInputs = 1 * prompt('Enter the total numbers of input',0);  let inputAsArray = [] ; for(let index = 0;index &lt; numbersOfInputs;index += 1){ let temp = 1 * prompt(`Enter the value for inputAsArray[${index}]`,0); inputAsArray.push(temp); }; console.log(inputAsArray) </code></pre>"			2020-05-19 16:41:52.92 UTC
61901628	google-colaboratory	It is possible to assign the google colab notebook name to a python variable. In Jupyter you can use javascript but this does not work in colab	<p>It is possible to assign the google colab notebook name to a python variable. In Jupyter you can use javascript but this does not work in colab. I have found examples using %javascript to access the html but these do not appear to work with colab notebooks. So I want to copy the notebook to my google drive and rename it but then assign the new name to a python variable.</p>	2020-05-19 22:11:00.183 UTC	61906730	"<p>Here's the code to get the notebook name.</p>  <pre class=""lang-py prettyprint-override""><code>from requests import get filename = get('http://172.28.0.2:9000/api/sessions').json()[0]['name'] </code></pre>"			2020-05-20 06:45:21.383 UTC
61935246	javascript|python|python-3.x|python-requests|jqxhr	Build an XHR link on javascript website for python requests	"<p>I'm scraping the following website <a href=""https://lv.scorebing.com/"" rel=""nofollow noreferrer"">Scorebing</a> using requests. In order to do so, I'm exploring the website to locate the XHR calls and get an url like this</p>  <p><a href=""https://i.stack.imgur.com/A1Lc4.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/A1Lc4.png"" alt=""page position""></a> being the code as follows</p>  <pre><code>import requests,json  header={some data from the XHR I got using Postman} url='https://lv.scorebing.com/ajax/score/data?mt=0&amp;nr=1&amp;corner=1'  response=requests.get(url=url,headers=header,data=json.dumps({})) response.json() </code></pre>  <p>No problems there. My problem is that if I switch tab, like from Corner to Fixture, no new XHR is called. In fact, only ""Live Matches"" and ""Corners"" allows for this direct XHR connection. I see that some js scripts are loaded, but I can't go from there to replicating my previous step.</p>  <p><a href=""https://i.stack.imgur.com/0tBQ5.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/0tBQ5.png"" alt=""new page position""></a></p>  <p>I know I can scrape this using selenium, and probably using a regular requests to the url of the page and using BSoup, but what I don't understand is why some tabs make XHR calls to load data where other similar ones use js. I would like to know how can you reverse engineer those js calls in order to get an API similar to the first part.</p>"	2020-05-21 13:08:25.77 UTC	61938707	"<p>Firstly,you should know that <code>XHR</code>(XMLHttpRequest) in Chrome will record all the <code>ajax</code> request.</p>  <hr>  <p>What's <code>Ajax</code>?</p>  <blockquote>   <p>Ajax is a set of web development techniques using many web technologies on the client side to create asynchronous web applications.</p> </blockquote>  <p>Ajax could be achieved by <code>JavaScript</code> or <code>jQuery</code>(Well,jQuery is a JavaScript library.It is JavaScipt essentially,but jQuery offer a API about <code>ajax</code>).</p>  <p>In your example page,there are many ajax requests in the source code: <a href=""https://i.stack.imgur.com/rnlst.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/rnlst.png"" alt=""enter image description here""></a></p>  <p><a href=""https://i.stack.imgur.com/KOcM8.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/KOcM8.png"" alt=""enter image description here""></a></p>  <hr>  <blockquote>   <p>I would like to know how can you reverse engineer those js calls in order to get an API similar to the first part.</p> </blockquote>  <p>If you really want to do it just by the source code,you should:</p>  <ol> <li>Send a <code>GET</code> request to the page.</li> <li>Analysis the source code of the page,then iterate each <code>Javascript</code>.(Also send <code>GET</code> request.)</li> <li>Find all the ajax requests and also send <code>GET</code> requests,select the data you need from them.</li> </ol>"			2020-05-21 16:03:50.117 UTC
61949545	python|python-3.x	method in python like eval() in javascript	"<p>in javascript you can do:</p>  <pre><code>i = -1; array.forEach(function() {  i++  eval(""var item"" + i + "" = "" + array[0]); }); </code></pre>  <p>to dynamically create variables, used this a couple of times to write data from an external JSON array into divs for each, is something like this possible in python(3.7)? especially the eval() method.</p>  <p>thanks in advance!</p>"	2020-05-22 07:07:52.333 UTC	61949630	"<p>Yes there is! You can use the exec function in this case:</p>  <pre><code>i = -1  for value in array:     i += 1     exec(""item"" + str(i) + "" = "" + str(array[0])) </code></pre>  <p>There are negatives to this though, as stated in the comments already, but assuming you still decide to use it here it is.</p>"			2020-05-22 07:14:33.247 UTC
61968154	javascript|python|html|beautifulsoup|python-requests	Is there any way to get data from an javascript in html with python	"<p>This is the html script I get when I use requests.</p>  <pre><code>&lt;script type=""text/javascript""&gt; $(document).ready(function(){         data = [{""str"":""안녕하세요+저는+예상우+입니다"",""errInfo"":[{""help"":""입력 오류입니다."",""errorIdx"":0,""correctMethod"":1,""start"":9,""end"":12,""orgStr"":""예상우"",""candWord"":""예상외""}],""idx"":0}];         pageIdx = 0;         /*&lt;![CDATA[*/         if(1){                 totalPageCnt = 1;         }         /*]]&gt;*/         data = eval(data);          makeHTML(0);          if(totalPageCnt != 1){                 if(pageIdx == 0){                         toast(""총 "" +totalPageCnt+""페이지입니다. 아래 화살표를 이용해 이동해주세요."");                 }                  document.getElementById('pageAnnounce').innerHTML = ""총 "" +totalPageCnt+""페이지 중 "" + (pageIdx+1) +""페이지입니다.&lt;br&gt;화살표를 눌러 페이지를 이동해주세요."";         } }); &lt;/script&gt; </code></pre>  <p>I want to get <code>str</code>,<code>help</code>,<code>errorIdx</code>,<code>correctMethod</code>,<code>start</code>,<code>end</code>,<code>orgStr</code>,<code>candWord</code>from this javascript with python. How can I do this?</p>"	2020-05-23 06:06:53.247 UTC	61968220	"<p>Try this,</p>  <pre><code>import re import json from bs4 import BeautifulSoup  soup = BeautifulSoup(text, ""html.parser"")  script = soup.find('script') data = json.loads(re.search(""data = (.*);"", script.text).group(1))  print(data[0]['str'])  </code></pre>"			2020-05-23 06:16:36.303 UTC
61973628	javascript|python|html|eel	How to pass selected file path to python script via javascript	"<p>I'm using <a href=""https://github.com/samuelhwilliams/Eel"" rel=""nofollow noreferrer"">eel</a> to create a simple but clean GUI to my project. In this project, I have a custom database which I pickle/update/unpickle when needed. From local webserver, I select the file and click the submit button. Then I pass the file directory to later read in python script. The structure I have is as follows; <br /></p> <h1>HTML</h1> <p>I have two simple elements, one button and one input</p> <pre><code>&lt;input type=&quot;file&quot; id=&quot;file-upload&quot;&gt; &lt;input class=&quot;btn btn-success&quot; type=&quot;submit&quot; onClick=&quot;get_input_directory()&quot; value=&quot;Send&quot;&gt; </code></pre> <h1>JS</h1> <pre><code>function get_input_directory() {     var data = document.getElementById(&quot;file-uploader&quot;).value     eel.get_input(data) } </code></pre> <h1>Python</h1> <p>And for the moment I just print the directory If I got it right.</p> <pre><code>@eel.expose def get_input(data):     print(data) </code></pre> <p>And what I planned to do later was to use the script down to unpickle database into my program:</p> <pre><code>with open(file_dir, &quot;rb&quot;) as f:     mdl = pickle.load(f)     return mdl </code></pre> <p>But my database file is printed as:</p> <pre><code>C:/fakepath/database.file </code></pre> <p>I searched the web and found out that this is a security measure that browser implemented but I tried FileReader method to pass the file directly into the unpickling function but that also failed saying that no such file exists.</p> <p>What should I use for this problem, or is there a way to pass the directory into the python script which would be much easier since the backend is pretty much done for project. Any help is appreciated. Thanks in advance!</p>"	2020-05-23 14:34:34.46 UTC	61998339	"<p>This has to do with JS not having full exist to your computer. Best to do is add the file handler in python/eel. Because python does has full access to the path of your computer:</p>  <pre><code>@eel.expose def btn_ResimyoluClick():     root = Tk()     root.withdraw()     root.wm_attributes('-topmost', 1)     folder = filedialog.askdirectory()     return folder </code></pre>  <p>Copied from: <a href=""https://github.com/samuelhwilliams/Eel/issues/86"" rel=""nofollow noreferrer"">https://github.com/samuelhwilliams/Eel/issues/86</a></p>"			2020-05-25 08:11:21.127 UTC
61983195	javascript|node.js|directory|documentation|docstring	Equivalent of Python's help() in javascript or nodejs	"<p>When I want to know the number of arguments and argument types of a function in python, i just use the function help() to get them. But in javascript or nodejs, it is really hard to know the argument type and number of arguments of a function. Is there any function similar to Python's help in Javascript or is there any other way to get that information?</p>"	2020-05-24 08:04:15.747 UTC	61983327	"<p>Modern IDEs can present you this information for the ECMAScript APIs based on the type definitions (written in TypeScript) that they include. Other than that, you have to look at the function implementation (or switch to TypeScript ;) ).</p>"			2020-05-24 08:18:45.54 UTC
61983195	javascript|node.js|directory|documentation|docstring	Equivalent of Python's help() in javascript or nodejs	"<p>When I want to know the number of arguments and argument types of a function in python, i just use the function help() to get them. But in javascript or nodejs, it is really hard to know the argument type and number of arguments of a function. Is there any function similar to Python's help in Javascript or is there any other way to get that information?</p>"	2020-05-24 08:04:15.747 UTC	61985402	"<p>JavaScript is dynamically typed, so it is hard to tell the types. For the number of arguments, you can try <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/length"" rel=""nofollow noreferrer""><code>Function.length</code></a> with some caveats. Some hints about argument type of not built-in functions can provide <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/toString"" rel=""nofollow noreferrer""><code>Function.prototype.toString()</code></a>, with full or truncated output. For example:</p>  <pre class=""lang-js prettyprint-override""><code>&gt; fs.read.length 6 &gt; fs.read.toString().replace(/\{.+/s, '') 'function read(fd, buffer, offset, length, position, callback) ' </code></pre>  <p>Or you can use TypeScript with IDE)</p>"			2020-05-24 11:41:37 UTC
61995745	javascript|python|ajax	Make Javascript Execute a Python Script	"<p>I have a question that has been asked several times here and other places around the internet*, but answers I've seen are incomplete or ineffective.</p>  <p>I would like to have a JavaScript function <code>runPy()</code> that, upon being called (in a browser, via a button-click for instance), will execute a Python script in my server that we'll call <code>test.py</code>.</p>  <p>Let's say that test.py is simply designed to create a text file and write in it 'hello world'</p>  <p><strong>Python</strong></p>  <pre class=""lang-python prettyprint-override""><code>f = open('test.txt', 'w+') f.write('hello world') </code></pre>  <p>Based on other answers, I have pieced together the following JavaScript/jQuery function:</p>  <p><strong>JavaScript</strong></p>  <pre class=""lang-js prettyprint-override""><code>function runPy() {     $.ajax({         type:'POST',         url:'test.py',         success: function(data) {                                                                  console.log(data)         };     }); } </code></pre>  <p>Now, this is of course incorrect. As one might expect, rather than running the Python script, it prints to the console the contents of the script:</p>  <p><strong>Console</strong> <br></p>  <pre class=""lang-none prettyprint-override""><code>f = open('test.txt', 'w+') f.write('hello world') </code></pre>  <p>How would I go about editing my JavaScript (and/or Python) to achieve the functionality I would like? In a perfect world, I would like to avoid importing any new dependencies (I've seen some answers dependent on Flask or Django) but of course beggars can't be choosers. </p>  <p>Additionally, if I will allow myself to get greedy, it would be very nice to be able to pass arguments to the Python script as well, or even use JavaScript to call a specific function in the Python script, and have the results passed back to the client-side JavaScript.</p>  <p>*<strong>Similar Questions</strong> <br> <a href=""https://stackoverflow.com/questions/32288722/call-python-function-from-js"">Call python function from JS</a> <br> <a href=""https://stackoverflow.com/questions/25517662/how-to-call-python-script-from-javascript"">how to call python script from javascript?</a> <br> <a href=""https://stackoverflow.com/questions/49934730/run-python-scripts-from-javascript-functions"">Run Python scripts from JavaScript functions</a></p>"	2020-05-25 04:22:37.393 UTC	61995933	"<p>You're going on the right path.</p> <p>But, here's why the POST isn't working. Except for HTML filetype, making a POST call to fetch a static file on the server (i.e. random.js, random.css etc) will print the raw file content. In this scenario, you'll need to handle this on the server-side backend code. I don't know which backend framework you're using but here are some articles that can help you with this:</p> <p>NodeJS: <a href=""https://medium.com/swlh/run-python-script-from-node-js-and-send-data-to-browser-15677fcf199f"" rel=""nofollow noreferrer"">https://medium.com/swlh/run-python-script-from-node-js-and-send-data-to-browser-15677fcf199f</a></p> <p>.NET: <a href=""https://medium.com/better-programming/running-python-script-from-c-and-working-with-the-results-843e68d230e5"" rel=""nofollow noreferrer"">https://medium.com/better-programming/running-python-script-from-c-and-working-with-the-results-843e68d230e5</a></p> <p>Java: <a href=""https://stackoverflow.com/questions/27267391/running-a-py-file-from-java/27267509"">Running a .py file from Java</a></p> <p><strong>UPDATE!!:</strong> Due to the recent developments in the space of Web Development, it is now possible to run Python on the Client-side through WebAssembly. Please find more instructions here: <a href=""https://github.com/pyodide/pyodide"" rel=""nofollow noreferrer"">Pyodide</a></p>"			2020-05-25 04:42:48.76 UTC
62009282	javascript|python|json|flask	Flask: python object to json triggering error when read by javascript	"<p>I'm trying to pass python dictionaries and javascript objects back and forth as necessary. From similar questions, I've gathered that I need to do this.</p>  <p>Python:</p>  <pre class=""lang-py prettyprint-override""><code>posts = [ {'author':'JL Rowling','title':'Harry Potter'}, {'author':'JRR Tolkien','title':'Lord of the Rings'}, ] </code></pre>  <p>Javascript:</p>  <pre class=""lang-js prettyprint-override""><code>var jsonPosts = JSON.parse({{ posts }}); console.log(jsonPosts); </code></pre>  <p>Likewise, these doesn't work either:</p>  <pre><code>var jsonPosts = JSON.parse(posts|tojson); var jsonPosts = {{ posts|tojson }}; </code></pre>  <p>The JS error I'm triggering is <code>TypeError: Object of type Undefined is not JSON serializable</code></p>  <p>I got this advice from the following Q/A:</p>  <p><a href=""https://stackoverflow.com/questions/31123800/python-to-javascript-json-objects-flask"">Python to Javascript JSON objects (Flask)</a></p>  <p><a href=""https://stackoverflow.com/questions/11178426/how-can-i-pass-data-from-flask-to-javascript-in-a-template"">How can I pass data from Flask to JavaScript in a template?</a></p>  <p>How can I fix this? </p>  <p>Edit:  I've used answer recommendation and found the following error to be present in the console:</p>  <pre><code>VM129:1 Uncaught SyntaxError: Unexpected token u in JSON at position 0     at JSON.parse (&lt;anonymous&gt;)     at about:16 </code></pre>  <p>Corresponding to </p>  <pre><code>let jsonPosts = JSON.parse(); </code></pre>  <p>It seems that it doesn't have access to <code>encoded_posts</code>.</p>"	2020-05-25 19:21:21.787 UTC	62009344	"<p>You need to use the <em>encoded</em> posts:</p>  <pre><code>encoded_posts = json.dumps(posts) </code></pre>  <p>That will give you string, which is what <code>JSON.parse</code> is expecting.</p>  <pre><code>var jsonPosts = JSON.parse({{ encoded_posts }}); </code></pre>"			2020-05-25 19:25:23.873 UTC
62031809	python|beautifulsoup	Extracting JavaScript Variables into Python Dictionaries	"<p>Understanding that I have to use PyQt5 in conjunction with BeautifulSoup to run javascript on my client after extracting the html using BeautifulSoup, I am trying to convert variable _Flourish_data into a Python dictionary. </p>  <p>Is there an easy way to extract the Javascript variable, _Flourish_data, into a Python dictionary? Here is my current Python to extract the Javascript using PyQt5 and BeautifulSoup:</p>  <pre><code>import bs4 as bs import sys import urllib.request from PyQt5.QtWebEngineWidgets import QWebEnginePage from PyQt5.QtWidgets import QApplication from PyQt5.QtCore import QUrl  class Page(QWebEnginePage):     def __init__(self, url):         self.app = QApplication(sys.argv)         QWebEnginePage.__init__(self)         self.html = ''         self.loadFinished.connect(self._on_load_finished)         self.load(QUrl(url))         self.app.exec_()      def _on_load_finished(self):         self.html = self.toHtml(self.Callable)      def Callable(self, html_str):         self.html = html_str         self.app.quit()  page = Page('https://flo.uri.sh/visualisation/2451841/embed?auto=1') soup = bs.BeautifulSoup(page.html, 'html.parser') js_test = soup.find_all('script') js_test[5] </code></pre>  <p>The output of the existing code is </p>  <pre><code>&lt;script&gt;         function _Flourish_unflattenInto(dest, src) {             dest = dest || {};             for (var k in src) {                 var t = dest;                 for (var i = k.indexOf("".""), p = 0; i &gt;= 0; i = k.indexOf(""."", p = i+1)) {                     var s = k.substring(p, i);                     if (!(s in t)) t[s] = {};                     t = t[s];                 }                 t[k.substring(p)] = src[k];             }             return dest;         }         var _Flourish_settings = {""cell_fill_1"":""#ffffff"",""cell_fill_2"":""#ebebeb"",""cell_fill_direction"":""horizontal"",""cell_font_size"":""1"",""cell_height"":20,""cell_horizontal_alignment"":""center"",""cell_link_color"":""#2886b2"",""cell_padding_horizontal"":16,""cell_padding_vertical"":11,""column_width_mode"":""auto"",""column_widths"":""10%, 10%, 10%, 10%, 50%, 10%"",""header_fill"":""#181f6c"",""header_font_color"":""#ffffff"",""header_font_default"":false,""header_font_size"":1.1,""header_horizontal_alignment"":""center"",""header_style_default"":true,""layout.body_font"":{""name"":""Source Sans Pro"",""url"":""https://fonts.googleapis.com/css?family=Source+Sans+Pro:400,700""},""layout.layout_order"":""stack-default"",""layout.space_between_sections"":""0.5"",""mobile.view"":true,""no_results_text"":""Use the search bar to find your state"",""pagination_amount"":41,""pagination_amount_search"":""5"",""search_enabled"":false,""search_hide_table"":false,""search_placeholder"":""Search to find your state"",""search_resize"":true,""search_width"":15};         _Flourish_unflattenInto(window.template.state, _Flourish_settings);          var _Flourish_data_column_names = {""rows"":{""columns"":[""State "",""Earliest/Planned Start Date for 20/21 Academic Year "","""","""","""",""""]}},                 _Flourish_data = {""rows"":[{""columns"":[""Alabama"",""Varies by district"","""","""","""",""""]},{""columns"":[""Alaska"",""Varies by district"","""","""","""",""""]},{""columns"":[""American Samoa"",""Unknown"","""","""","""",""""]},{""columns"":[""Arizona"",""Varies by district"","""","""","""",""""]},{""columns"":[""Arkansas"",""Varies by district"","""","""","""",""""]},{""columns"":[""Bureau of Indian Education"",""Varies by district"","""","""","""",""""]},{""columns"":[""California"",""Varies by district"","""","""","""",""""]},{""columns"":[""Colorado"",""Varies by district"","""","""","""",""""]},{""columns"":[""Connecticut"",""Not yet determined"","""","""","""",""""]},{""columns"":[""Delaware"",""Varies by district"","""","""","""",""""]},{""columns"":[""Department of Defense Education Activity\n  "",""Varies by district"","""","""","""",""""]},{""columns"":[""District of Columbia"",""8/31/2020"","""","""","""",""""]},{""columns"":[""Florida"",""Unknown"","""","""","""",""""]},{""columns"":[""Georgia"",""Unknown"","""","""","""",""""]},{""columns"":[""Guam"",""Unknown"","""","""","""",""""]},{""columns"":[""Hawaii"",""Not yet determined"","""","""","""",""""]},{""columns"":[""Idaho"",""Varies by District"","""","""","""",""""]},{""columns"":[""Illinois"",""Varies by district"","""","""","""",""""]},{""columns"":[""Indiana"",""Not yet determined"","""","""","""",""""]},{""columns"":[""Iowa"",""Varies by district"","""","""","""",""""]},{""columns"":[""Kansas"",""Not yet determined"","""","""","""",""""]},{""columns"":[""Kentucky"",""Unknown"","""","""","""",""""]},{""columns"":[""Louisiana"",""Varies by district"","""","""","""",""""]},{""columns"":[""Maine"",""Varies by district"","""","""","""",""""]},{""columns"":[""Maryland"",""Not yet determined"","""","""","""",""""]},{""columns"":[""Massachusetts"",""Not yet determined"","""","""","""",""""]},{""columns"":[""Michigan"",""Not yet determined"","""","""","""",""""]},{""columns"":[""Minnesota"",""Not yet determined"","""","""","""",""""]},{""columns"":[""Mississippi "",""Varies by district"","""","""","""",""""]},{""columns"":[""Missouri"",""Varies by district"","""","""","""",""""]},{""columns"":[""Montana"",""Varies by district"","""","""","""",""""]},{""columns"":[""Nebraska"",""Varies by district"","""","""","""",""""]},{""columns"":[""Nevada"",""Varies by district"","""","""","""",""""]},{""columns"":[""New Hampshire"",""Not yet determined"","""","""","""",""""]},{""columns"":[""New Jersey"",""Varies by district"","""","""","""",""""]},{""columns"":[""New Mexico"",""Unknown"","""","""","""",""""]},{""columns"":[""New York"",""Not yet determined"","""","""","""",""""]},{""columns"":[""North Carolina"",""8/17/2020"","""","""","""",""""]},{""columns"":[""North Dakota"",""Varies by district"","""","""","""",""""]},{""columns"":[""Northern Marianas"",""Unknown"","""","""","""",""""]},{""columns"":[""Ohio"",""Not yet determined"","""","""","""",""""]},{""columns"":[""Oklahoma"",""Varies by district"","""","""","""",""""]},{""columns"":[""Oregon"",""Not yet determined"","""","""","""",""""]},{""columns"":[""Pennsylvania"",""Varies by district"","""","""","""",""""]},{""columns"":[""Puerto Rico"",""Unknown"","""","""","""",""""]},{""columns"":[""Rhode Island"",""Not yet determined"","""","""","""",""""]},{""columns"":[""South Carolina"",""Not yet determined"","""","""","""",""""]},{""columns"":[""South Dakota"",""Varies by district"","""","""","""",""""]},{""columns"":[""Tennessee"",""Varies by district"","""","""","""",""""]},{""columns"":[""Texas"",""Varies by district"","""","""","""",""""]},{""columns"":[""U.S. Virgin Islands\n  "",""Not yet determined"","""","""","""",""""]},{""columns"":[""Utah"",""Varies by district"","""","""","""",""""]},{""columns"":[""Vermont"",""Not yet determined"","""","""","""",""""]},{""columns"":[""Virginia"",""Not yet determined"","""","""","""",""""]},{""columns"":[""Washington"",""Varies by District"","""","""","""",""""]},{""columns"":[""West Virginia"",""Not yet determined"","""","""","""",""""]},{""columns"":[""Wisconsin"",""Varies by district"","""","""","""",""""]},{""columns"":[""Wyoming"",""Not yet determined"","""","""","""",""""]}]};         for (var _Flourish_dataset in _Flourish_data) {                 window.template.data[_Flourish_dataset] = _Flourish_data[_Flourish_dataset];                 window.template.data[_Flourish_dataset].column_names = _Flourish_data_column_names[_Flourish_dataset];         }         window.template.draw();     &lt;/script&gt; </code></pre>  <p>I just want var _flourish_data from HTML  tag, as shown below:</p>  <pre><code>        _Flourish_data = {""rows"":[{""columns"":[""Alabama"",""Varies by district"","""","""","""",""""]},{""columns"":[""Alaska"",""Varies by district"","""","""","""",""""]},{""columns"":[""American Samoa"",""Unknown"","""","""","""",""""]},{""columns"":[""Arizona"",""Varies by district"","""","""","""",""""]},{""columns"":[""Arkansas"",""Varies by district"","""","""","""",""""]},{""columns"":[""Bureau of Indian Education"",""Varies by district"","""","""","""",""""]},{""columns"":[""California"",""Varies by district"","""","""","""",""""]},{""columns"":[""Colorado"",""Varies by district"","""","""","""",""""]},{""columns"":[""Connecticut"",""Not yet determined"","""","""","""",""""]},{""columns"":[""Delaware"",""Varies by district"","""","""","""",""""]},{""columns"":[""Department of Defense Education Activity\n  "",""Varies by district"","""","""","""",""""]},{""columns"":[""District of Columbia"",""8/31/2020"","""","""","""",""""]},{""columns"":[""Florida"",""Unknown"","""","""","""",""""]},{""columns"":[""Georgia"",""Unknown"","""","""","""",""""]},{""columns"":[""Guam"",""Unknown"","""","""","""",""""]},{""columns"":[""Hawaii"",""Not yet determined"","""","""","""",""""]},{""columns"":[""Idaho"",""Varies by District"","""","""","""",""""]},{""columns"":[""Illinois"",""Varies by district"","""","""","""",""""]},{""columns"":[""Indiana"",""Not yet determined"","""","""","""",""""]},{""columns"":[""Iowa"",""Varies by district"","""","""","""",""""]},{""columns"":[""Kansas"",""Not yet determined"","""","""","""",""""]},{""columns"":[""Kentucky"",""Unknown"","""","""","""",""""]},{""columns"":[""Louisiana"",""Varies by district"","""","""","""",""""]},{""columns"":[""Maine"",""Varies by district"","""","""","""",""""]},{""columns"":[""Maryland"",""Not yet determined"","""","""","""",""""]},{""columns"":[""Massachusetts"",""Not yet determined"","""","""","""",""""]},{""columns"":[""Michigan"",""Not yet determined"","""","""","""",""""]},{""columns"":[""Minnesota"",""Not yet determined"","""","""","""",""""]},{""columns"":[""Mississippi "",""Varies by district"","""","""","""",""""]},{""columns"":[""Missouri"",""Varies by district"","""","""","""",""""]},{""columns"":[""Montana"",""Varies by district"","""","""","""",""""]},{""columns"":[""Nebraska"",""Varies by district"","""","""","""",""""]},{""columns"":[""Nevada"",""Varies by district"","""","""","""",""""]},{""columns"":[""New Hampshire"",""Not yet determined"","""","""","""",""""]},{""columns"":[""New Jersey"",""Varies by district"","""","""","""",""""]},{""columns"":[""New Mexico"",""Unknown"","""","""","""",""""]},{""columns"":[""New York"",""Not yet determined"","""","""","""",""""]},{""columns"":[""North Carolina"",""8/17/2020"","""","""","""",""""]},{""columns"":[""North Dakota"",""Varies by district"","""","""","""",""""]},{""columns"":[""Northern Marianas"",""Unknown"","""","""","""",""""]},{""columns"":[""Ohio"",""Not yet determined"","""","""","""",""""]},{""columns"":[""Oklahoma"",""Varies by district"","""","""","""",""""]},{""columns"":[""Oregon"",""Not yet determined"","""","""","""",""""]},{""columns"":[""Pennsylvania"",""Varies by district"","""","""","""",""""]},{""columns"":[""Puerto Rico"",""Unknown"","""","""","""",""""]},{""columns"":[""Rhode Island"",""Not yet determined"","""","""","""",""""]},{""columns"":[""South Carolina"",""Not yet determined"","""","""","""",""""]},{""columns"":[""South Dakota"",""Varies by district"","""","""","""",""""]},{""columns"":[""Tennessee"",""Varies by district"","""","""","""",""""]},{""columns"":[""Texas"",""Varies by district"","""","""","""",""""]},{""columns"":[""U.S. Virgin Islands\n  "",""Not yet determined"","""","""","""",""""]},{""columns"":[""Utah"",""Varies by district"","""","""","""",""""]},{""columns"":[""Vermont"",""Not yet determined"","""","""","""",""""]},{""columns"":[""Virginia"",""Not yet determined"","""","""","""",""""]},{""columns"":[""Washington"",""Varies by District"","""","""","""",""""]},{""columns"":[""West Virginia"",""Not yet determined"","""","""","""",""""]},{""columns"":[""Wisconsin"",""Varies by district"","""","""","""",""""]},{""columns"":[""Wyoming"",""Not yet determined"","""","""","""",""""]}]}; </code></pre>  <p>Any help would be greatly appreciated!</p>"	2020-05-26 21:35:51.177 UTC	62031953	"<pre class=""lang-py prettyprint-override""><code>import requests import re import json   def main(url):     r = requests.get(url)     match = json.loads(re.search(r'_Flourish_data = ({.*})', r.text).group(1))     print(match.keys())   main(""https://flo.uri.sh/visualisation/2451841/embed?auto=1"") </code></pre>"			2020-05-26 21:46:55.657 UTC
62031809	python|beautifulsoup	Extracting JavaScript Variables into Python Dictionaries	"<p>Understanding that I have to use PyQt5 in conjunction with BeautifulSoup to run javascript on my client after extracting the html using BeautifulSoup, I am trying to convert variable _Flourish_data into a Python dictionary. </p>  <p>Is there an easy way to extract the Javascript variable, _Flourish_data, into a Python dictionary? Here is my current Python to extract the Javascript using PyQt5 and BeautifulSoup:</p>  <pre><code>import bs4 as bs import sys import urllib.request from PyQt5.QtWebEngineWidgets import QWebEnginePage from PyQt5.QtWidgets import QApplication from PyQt5.QtCore import QUrl  class Page(QWebEnginePage):     def __init__(self, url):         self.app = QApplication(sys.argv)         QWebEnginePage.__init__(self)         self.html = ''         self.loadFinished.connect(self._on_load_finished)         self.load(QUrl(url))         self.app.exec_()      def _on_load_finished(self):         self.html = self.toHtml(self.Callable)      def Callable(self, html_str):         self.html = html_str         self.app.quit()  page = Page('https://flo.uri.sh/visualisation/2451841/embed?auto=1') soup = bs.BeautifulSoup(page.html, 'html.parser') js_test = soup.find_all('script') js_test[5] </code></pre>  <p>The output of the existing code is </p>  <pre><code>&lt;script&gt;         function _Flourish_unflattenInto(dest, src) {             dest = dest || {};             for (var k in src) {                 var t = dest;                 for (var i = k.indexOf("".""), p = 0; i &gt;= 0; i = k.indexOf(""."", p = i+1)) {                     var s = k.substring(p, i);                     if (!(s in t)) t[s] = {};                     t = t[s];                 }                 t[k.substring(p)] = src[k];             }             return dest;         }         var _Flourish_settings = {""cell_fill_1"":""#ffffff"",""cell_fill_2"":""#ebebeb"",""cell_fill_direction"":""horizontal"",""cell_font_size"":""1"",""cell_height"":20,""cell_horizontal_alignment"":""center"",""cell_link_color"":""#2886b2"",""cell_padding_horizontal"":16,""cell_padding_vertical"":11,""column_width_mode"":""auto"",""column_widths"":""10%, 10%, 10%, 10%, 50%, 10%"",""header_fill"":""#181f6c"",""header_font_color"":""#ffffff"",""header_font_default"":false,""header_font_size"":1.1,""header_horizontal_alignment"":""center"",""header_style_default"":true,""layout.body_font"":{""name"":""Source Sans Pro"",""url"":""https://fonts.googleapis.com/css?family=Source+Sans+Pro:400,700""},""layout.layout_order"":""stack-default"",""layout.space_between_sections"":""0.5"",""mobile.view"":true,""no_results_text"":""Use the search bar to find your state"",""pagination_amount"":41,""pagination_amount_search"":""5"",""search_enabled"":false,""search_hide_table"":false,""search_placeholder"":""Search to find your state"",""search_resize"":true,""search_width"":15};         _Flourish_unflattenInto(window.template.state, _Flourish_settings);          var _Flourish_data_column_names = {""rows"":{""columns"":[""State "",""Earliest/Planned Start Date for 20/21 Academic Year "","""","""","""",""""]}},                 _Flourish_data = {""rows"":[{""columns"":[""Alabama"",""Varies by district"","""","""","""",""""]},{""columns"":[""Alaska"",""Varies by district"","""","""","""",""""]},{""columns"":[""American Samoa"",""Unknown"","""","""","""",""""]},{""columns"":[""Arizona"",""Varies by district"","""","""","""",""""]},{""columns"":[""Arkansas"",""Varies by district"","""","""","""",""""]},{""columns"":[""Bureau of Indian Education"",""Varies by district"","""","""","""",""""]},{""columns"":[""California"",""Varies by district"","""","""","""",""""]},{""columns"":[""Colorado"",""Varies by district"","""","""","""",""""]},{""columns"":[""Connecticut"",""Not yet determined"","""","""","""",""""]},{""columns"":[""Delaware"",""Varies by district"","""","""","""",""""]},{""columns"":[""Department of Defense Education Activity\n  "",""Varies by district"","""","""","""",""""]},{""columns"":[""District of Columbia"",""8/31/2020"","""","""","""",""""]},{""columns"":[""Florida"",""Unknown"","""","""","""",""""]},{""columns"":[""Georgia"",""Unknown"","""","""","""",""""]},{""columns"":[""Guam"",""Unknown"","""","""","""",""""]},{""columns"":[""Hawaii"",""Not yet determined"","""","""","""",""""]},{""columns"":[""Idaho"",""Varies by District"","""","""","""",""""]},{""columns"":[""Illinois"",""Varies by district"","""","""","""",""""]},{""columns"":[""Indiana"",""Not yet determined"","""","""","""",""""]},{""columns"":[""Iowa"",""Varies by district"","""","""","""",""""]},{""columns"":[""Kansas"",""Not yet determined"","""","""","""",""""]},{""columns"":[""Kentucky"",""Unknown"","""","""","""",""""]},{""columns"":[""Louisiana"",""Varies by district"","""","""","""",""""]},{""columns"":[""Maine"",""Varies by district"","""","""","""",""""]},{""columns"":[""Maryland"",""Not yet determined"","""","""","""",""""]},{""columns"":[""Massachusetts"",""Not yet determined"","""","""","""",""""]},{""columns"":[""Michigan"",""Not yet determined"","""","""","""",""""]},{""columns"":[""Minnesota"",""Not yet determined"","""","""","""",""""]},{""columns"":[""Mississippi "",""Varies by district"","""","""","""",""""]},{""columns"":[""Missouri"",""Varies by district"","""","""","""",""""]},{""columns"":[""Montana"",""Varies by district"","""","""","""",""""]},{""columns"":[""Nebraska"",""Varies by district"","""","""","""",""""]},{""columns"":[""Nevada"",""Varies by district"","""","""","""",""""]},{""columns"":[""New Hampshire"",""Not yet determined"","""","""","""",""""]},{""columns"":[""New Jersey"",""Varies by district"","""","""","""",""""]},{""columns"":[""New Mexico"",""Unknown"","""","""","""",""""]},{""columns"":[""New York"",""Not yet determined"","""","""","""",""""]},{""columns"":[""North Carolina"",""8/17/2020"","""","""","""",""""]},{""columns"":[""North Dakota"",""Varies by district"","""","""","""",""""]},{""columns"":[""Northern Marianas"",""Unknown"","""","""","""",""""]},{""columns"":[""Ohio"",""Not yet determined"","""","""","""",""""]},{""columns"":[""Oklahoma"",""Varies by district"","""","""","""",""""]},{""columns"":[""Oregon"",""Not yet determined"","""","""","""",""""]},{""columns"":[""Pennsylvania"",""Varies by district"","""","""","""",""""]},{""columns"":[""Puerto Rico"",""Unknown"","""","""","""",""""]},{""columns"":[""Rhode Island"",""Not yet determined"","""","""","""",""""]},{""columns"":[""South Carolina"",""Not yet determined"","""","""","""",""""]},{""columns"":[""South Dakota"",""Varies by district"","""","""","""",""""]},{""columns"":[""Tennessee"",""Varies by district"","""","""","""",""""]},{""columns"":[""Texas"",""Varies by district"","""","""","""",""""]},{""columns"":[""U.S. Virgin Islands\n  "",""Not yet determined"","""","""","""",""""]},{""columns"":[""Utah"",""Varies by district"","""","""","""",""""]},{""columns"":[""Vermont"",""Not yet determined"","""","""","""",""""]},{""columns"":[""Virginia"",""Not yet determined"","""","""","""",""""]},{""columns"":[""Washington"",""Varies by District"","""","""","""",""""]},{""columns"":[""West Virginia"",""Not yet determined"","""","""","""",""""]},{""columns"":[""Wisconsin"",""Varies by district"","""","""","""",""""]},{""columns"":[""Wyoming"",""Not yet determined"","""","""","""",""""]}]};         for (var _Flourish_dataset in _Flourish_data) {                 window.template.data[_Flourish_dataset] = _Flourish_data[_Flourish_dataset];                 window.template.data[_Flourish_dataset].column_names = _Flourish_data_column_names[_Flourish_dataset];         }         window.template.draw();     &lt;/script&gt; </code></pre>  <p>I just want var _flourish_data from HTML  tag, as shown below:</p>  <pre><code>        _Flourish_data = {""rows"":[{""columns"":[""Alabama"",""Varies by district"","""","""","""",""""]},{""columns"":[""Alaska"",""Varies by district"","""","""","""",""""]},{""columns"":[""American Samoa"",""Unknown"","""","""","""",""""]},{""columns"":[""Arizona"",""Varies by district"","""","""","""",""""]},{""columns"":[""Arkansas"",""Varies by district"","""","""","""",""""]},{""columns"":[""Bureau of Indian Education"",""Varies by district"","""","""","""",""""]},{""columns"":[""California"",""Varies by district"","""","""","""",""""]},{""columns"":[""Colorado"",""Varies by district"","""","""","""",""""]},{""columns"":[""Connecticut"",""Not yet determined"","""","""","""",""""]},{""columns"":[""Delaware"",""Varies by district"","""","""","""",""""]},{""columns"":[""Department of Defense Education Activity\n  "",""Varies by district"","""","""","""",""""]},{""columns"":[""District of Columbia"",""8/31/2020"","""","""","""",""""]},{""columns"":[""Florida"",""Unknown"","""","""","""",""""]},{""columns"":[""Georgia"",""Unknown"","""","""","""",""""]},{""columns"":[""Guam"",""Unknown"","""","""","""",""""]},{""columns"":[""Hawaii"",""Not yet determined"","""","""","""",""""]},{""columns"":[""Idaho"",""Varies by District"","""","""","""",""""]},{""columns"":[""Illinois"",""Varies by district"","""","""","""",""""]},{""columns"":[""Indiana"",""Not yet determined"","""","""","""",""""]},{""columns"":[""Iowa"",""Varies by district"","""","""","""",""""]},{""columns"":[""Kansas"",""Not yet determined"","""","""","""",""""]},{""columns"":[""Kentucky"",""Unknown"","""","""","""",""""]},{""columns"":[""Louisiana"",""Varies by district"","""","""","""",""""]},{""columns"":[""Maine"",""Varies by district"","""","""","""",""""]},{""columns"":[""Maryland"",""Not yet determined"","""","""","""",""""]},{""columns"":[""Massachusetts"",""Not yet determined"","""","""","""",""""]},{""columns"":[""Michigan"",""Not yet determined"","""","""","""",""""]},{""columns"":[""Minnesota"",""Not yet determined"","""","""","""",""""]},{""columns"":[""Mississippi "",""Varies by district"","""","""","""",""""]},{""columns"":[""Missouri"",""Varies by district"","""","""","""",""""]},{""columns"":[""Montana"",""Varies by district"","""","""","""",""""]},{""columns"":[""Nebraska"",""Varies by district"","""","""","""",""""]},{""columns"":[""Nevada"",""Varies by district"","""","""","""",""""]},{""columns"":[""New Hampshire"",""Not yet determined"","""","""","""",""""]},{""columns"":[""New Jersey"",""Varies by district"","""","""","""",""""]},{""columns"":[""New Mexico"",""Unknown"","""","""","""",""""]},{""columns"":[""New York"",""Not yet determined"","""","""","""",""""]},{""columns"":[""North Carolina"",""8/17/2020"","""","""","""",""""]},{""columns"":[""North Dakota"",""Varies by district"","""","""","""",""""]},{""columns"":[""Northern Marianas"",""Unknown"","""","""","""",""""]},{""columns"":[""Ohio"",""Not yet determined"","""","""","""",""""]},{""columns"":[""Oklahoma"",""Varies by district"","""","""","""",""""]},{""columns"":[""Oregon"",""Not yet determined"","""","""","""",""""]},{""columns"":[""Pennsylvania"",""Varies by district"","""","""","""",""""]},{""columns"":[""Puerto Rico"",""Unknown"","""","""","""",""""]},{""columns"":[""Rhode Island"",""Not yet determined"","""","""","""",""""]},{""columns"":[""South Carolina"",""Not yet determined"","""","""","""",""""]},{""columns"":[""South Dakota"",""Varies by district"","""","""","""",""""]},{""columns"":[""Tennessee"",""Varies by district"","""","""","""",""""]},{""columns"":[""Texas"",""Varies by district"","""","""","""",""""]},{""columns"":[""U.S. Virgin Islands\n  "",""Not yet determined"","""","""","""",""""]},{""columns"":[""Utah"",""Varies by district"","""","""","""",""""]},{""columns"":[""Vermont"",""Not yet determined"","""","""","""",""""]},{""columns"":[""Virginia"",""Not yet determined"","""","""","""",""""]},{""columns"":[""Washington"",""Varies by District"","""","""","""",""""]},{""columns"":[""West Virginia"",""Not yet determined"","""","""","""",""""]},{""columns"":[""Wisconsin"",""Varies by district"","""","""","""",""""]},{""columns"":[""Wyoming"",""Not yet determined"","""","""","""",""""]}]}; </code></pre>  <p>Any help would be greatly appreciated!</p>"	2020-05-26 21:35:51.177 UTC	62031912	"<p>You don't need to execute Javascript. It can be done with <code>json</code> and <code>re</code> module.</p>  <p>For example:</p>  <pre><code>import re import json import requests  url = 'https://flo.uri.sh/visualisation/2451841/embed?auto=1'  html_data = requests.get(url).text data = re.search(r'_Flourish_data = (\{.*?\});', html_data).group(1)  data = json.loads(data)  # uncomment this to print all data: # print(json.dumps(data, indent=4))  for row in data['rows']:     print('{:&lt;55}{}'.format(*map(str.strip, row['columns'][:2]))) </code></pre>  <p>Prints:</p>  <pre><code>Alabama                                                Varies by district Alaska                                                 Varies by district American Samoa                                         Unknown Arizona                                                Varies by district Arkansas                                               Varies by district Bureau of Indian Education                             Varies by district California                                             Varies by district Colorado                                               Varies by district Connecticut                                            Not yet determined Delaware                                               Varies by district Department of Defense Education Activity               Varies by district District of Columbia                                   8/31/2020 Florida                                                Unknown Georgia                                                Unknown Guam                                                   Unknown Hawaii                                                 Not yet determined Idaho                                                  Varies by District Illinois                                               Varies by district Indiana                                                Not yet determined Iowa                                                   Varies by district Kansas                                                 Not yet determined Kentucky                                               Unknown Louisiana                                              Varies by district Maine                                                  Varies by district Maryland                                               Not yet determined Massachusetts                                          Not yet determined Michigan                                               Not yet determined Minnesota                                              Not yet determined Mississippi                                            Varies by district Missouri                                               Varies by district Montana                                                Varies by district Nebraska                                               Varies by district Nevada                                                 Varies by district New Hampshire                                          Not yet determined New Jersey                                             Varies by district New Mexico                                             Unknown New York                                               Not yet determined North Carolina                                         8/17/2020 North Dakota                                           Varies by district Northern Marianas                                      Unknown Ohio                                                   Not yet determined Oklahoma                                               Varies by district Oregon                                                 Not yet determined Pennsylvania                                           Varies by district Puerto Rico                                            Unknown Rhode Island                                           Not yet determined South Carolina                                         Not yet determined South Dakota                                           Varies by district Tennessee                                              Varies by district Texas                                                  Varies by district U.S. Virgin Islands                                    Not yet determined Utah                                                   Varies by district Vermont                                                Not yet determined Virginia                                               Not yet determined Washington                                             Varies by District West Virginia                                          Not yet determined Wisconsin                                              Varies by district Wyoming                                                Not yet determined </code></pre>"			2020-05-26 21:43:26.413 UTC
62064714	python|unicode|utf|ucs2	How to decode javascript-unicode string in python?	"<p>I have this string:</p>  <pre><code>{\u0022allow_group_shows\u0022: true, \u0022needs_supporter_to_pm\u0022: true, \u0022ads_zone_ids\u0022: {\u0022300x250,centre\u0022: \u0022\u0022, \u0022300x250,right\u0022: \u0022\u0022, \u0022300x250,left\u0022: \u0022\u0022, \u0022468x60\u0022: \u0022\u0022, \u0022160x600,top\u0022: \u0022\u0022, \u0022160x600,bottom\u0022: \u0022\u0022, \u0022160x600,middle\u0022: \u0022\u0022}, \u0022chat_settings\u0022: {\u0022sort_users_key\u0022: \u0022a\u0022, \u0022silence_broadcasters\u0022: \u0022false\u0022, \u0022highest_token_color\u0022: \u0022darkpurple\u0022, \u0022emoticon_autocomplete_delay\u0022: \u00220\u0022, \u0022ignored_users\u0022: \u0022\u0022, \u0022show_emoticons\u0022: true, \u0022font_size\u0022: \u00229pt\u0022, \u0022b_tip_vol\u0022: \u002210\u0022, \u0022allowed_chat\u0022: \u0022all\u0022, \u0022room_leave_for\u0022: \u0022org\u0022, \u0022font_color\u0022: \u0022#494949\u0022, \u0022font_family\u0022: \u0022default\u0022, \u0022room_entry_for\u0022: \u0022org\u0022, \u0022v_tip_vol\u0022: \u002280\u0022}, \u0022is_age_verified\u0022: true, \u0022flash_host\u0022: \u0022edge143.stream.highwebmedia.com\u0022, \u0022tips_in_past_24_hours\u0022: 0, \u0022dismissible_messages\u0022: [], \u0022show_mobile_site_banner_link\u0022: false, \u0022last_vote_in_past_90_days_down\u0022: false, \u0022server_name\u0022: \u0022113\u0022, \u0022num_users_required_for_group\u0022: 2, \u0022group_show_price\u0022: 18, \u0022is_mobile\u0022: false, \u0022chat_username\u0022: \u0022__anonymous__eiwBXR\u0022, \u0022recommender_hmac\u0022: \u0022dae28e4e9afa15da7c6227af2e8fb8abd85a3714aca8f86f01a53a6dd1377115\u0022, \u0022broadcaster_gender\u0022: \u0022couple\u0022, \u0022hls_source\u0022: \u0022https://localhost/live\u002Dhls/amlst:jimmy_and_amy\u002Dsd\u002De73f4b67186a2ec4c13137607d02470ac61f32b60ac15e691bf33493423ef477_trns_h264/playlist.m3u8\u0022, \u0022allow_show_recordings\u0022: true, \u0022is_moderator\u0022: false, \u0022room_status\u0022: \u0022public\u0022, \u0022edge_auth\u0022: \u0022{\u005C\u0022username\u005C\u0022:\u005C\u0022__anonymous__eiwBXR\u005C\u0022,\u005C\u0022org\u005C\u0022:\u005C\u0022A\u005C\u0022,\u005C\u0022expire\u005C\u0022:1590669977,\u005C\u0022sig\u005C\u0022:\u005C\u0022454d96141c66fb42f74e9620b9d79e937de3a774a5687021f8650cc4f563d371\u005C\u0022,\u005C\u0022room\u005C\u0022:\u005C\u0022jimmy_and_amy\u005C\u0022}\u0022, \u0022is_supporter\u0022: false, \u0022chat_password\u0022: \u0022{\u005C\u0022username\u005C\u0022:\u005C\u0022__anonymous__eiwBXR\u005C\u0022,\u005C\u0022org\u005C\u0022:\u005C\u0022A\u005C\u0022,\u005C\u0022expire\u005C\u0022:1590669977,\u005C\u0022sig\u005C\u0022:\u005C\u0022454d96141c66fb42f74e9620b9d79e937de3a774a5687021f8650cc4f563d371\u005C\u0022,\u005C\u0022room\u005C\u0022:\u005C\u0022jimmy_and_amy\u005C\u0022}\u0022, \u0022room_pass\u0022: \u0022b5b2408cd91e6c595a3f732a5b7b1567b566bcc92f384ce5e6a00a26a24fb5c7\u0022, \u0022low_satisfaction_score\u0022: false, \u0022tfa_enabled\u0022: false, \u0022room_title\u0022: \u0022(STEP SIS CUM FACE) shh... Luna is here and dont know what we are doing #hairy #creampie #stockings #new #lush [3536 tokens remaining]\u0022, \u0022satisfaction_score\u0022: {\u0022down_votes\u0022: 15, \u0022up_votes\u0022: 67, \u0022percent\u0022: 82, \u0022max\u0022: 31222657}, \u0022viewer_username\u0022: \u0022AnonymousUser\u0022, \u0022hidden_message\u0022: \u0022\u0022, \u0022following\u0022: false, \u0022wschat_host\u0022: \u0022https://chatws\u002D45.stream.highwebmedia.com/ws\u0022, \u0022has_studio\u0022: false, \u0022num_followed\u0022: 0, \u0022spy_private_show_price\u0022: 30, \u0022hide_satisfaction_score\u0022: false, \u0022broadcaster_username\u0022: \u0022jimmy_and_amy\u0022, \u0022ignored_emoticons\u0022: [], \u0022apps_running\u0022: \u0022[[\u005C\u0022Tip Goal\u005C\u0022,\u005C\u0022\u005C\u005C/apps\u005C\u005C/app_details\u005C\u005C/tip\u002Dgoal\u005C\u005C/?slot\u003D0\u005C\u0022],[\u005C\u0022Ultra Bot \u002D 4Sci\u005C\u0022,\u005C\u0022\u005C\u005C/apps\u005C\u005C/app_details\u005C\u005C/ultra\u002Dbot\u002D4sci\u005C\u005C/?slot\u003D2\u005C\u0022],[\u005C\u0022Roll The Dice\u005C\u0022,\u005C\u0022\u005C\u005C/apps\u005C\u005C/app_details\u005C\u005C/roll\u002Dthe\u002Ddice\u002D5\u005C\u005C/?slot\u003D3\u005C\u0022]]\u0022, \u0022token_balance\u0022: 0, \u0022private_min_minutes\u0022: 10, \u0022viewer_gender\u0022: \u0022m\u0022, \u0022allow_anonymous_tipping\u0022: false, \u0022num_users_waiting_for_group\u0022: 0, \u0022last_vote_in_past_24_hours\u0022: null, \u0022is_widescreen\u0022: true, \u0022num_viewers\u0022: 1672, \u0022broadcaster_on_new_chat\u0022: false, \u0022private_show_price\u0022: 30, \u0022num_followed_online\u0022: 0, \u0022allow_private_shows\u0022: true} </code></pre>  <p>and I want to decode it in python to view to make it easier for me to send it over the internet into our android app... anyways that why I am here it should look like </p>  <pre><code>""{""allow_group_shows"": true, ""needs_supporter_to_pm"": true, ""ads_zone_ids"": {""300x250,centre"": """", ""300x250,right"": """", ""300x250,left"": """", ""468x60"": """", ""160x600,top"": """", ""160x600,bottom"": """", ""160x600,middle"": """"}, ""chat_settings"": {""sort_users_key"": ""a"", ""silence_broadcasters"": ""false"", ""highest_token_color"": ""darkpurple"", ""emoticon_autocomplete_delay"": ""0"", ""ignored_users"": """", ""show_emoticons"": true, ""font_size"": ""9pt"", ""b_tip_vol"": ""10"", ""allowed_chat"": ""all"", ""room_leave_for"": ""org"", ""font_color"": ""#494949"", ""font_family"": ""default"", ""room_entry_for"": ""org"", ""v_tip_vol"": ""80""}, ""is_age_verified"": true, ""flash_host"": ""edge306.stream.highwebmedia.com"", ""tips_in_past_24_hours"": 0, ""dismissible_messages"": [], ""show_mobile_site_banner_link"": false, ""last_vote_in_past_90_days_down"": false, ""server_name"": ""115"", ""num_users_required_for_group"": 2, ""group_show_price"": 18, ""is_mobile"": false, ""chat_username"": ""bom4b5"", ""recommender_hmac"": ""ed05e292bb82262255a96944d81bb04dc2d248ca69fff35cf5d7015889c005b1"", ""broadcaster_gender"": ""couple"", ""hls_source"": ""https://***/live-edge/****-sd-e73f4b67186a2ec4c13137607d02470ac61f32b60***%22%7D"", ""allow_show_recordings"": true, ""is_moderator"": false, ""room_status"": ""public"", ""edge_auth"": ""{\""username\"":\""bom4b5\"",\""org\"":\""A\"",\""expire\"":1590666696,\""sig\"":\""49b6844fde2c47c2430bd05946b6cfbc9c7864788b9236d7f5af5ff88efd3f95\"",\""room\"":\""jimmy_and_amy\""}"", ""is_supporter"": false, ""chat_password"": ""****"", ""room_pass"": ""b5b2408cd91e6c595a3f732a5b7b1567b566bcc92f384ce5e6a00a26a24fb5c7"", ""low_satisfaction_score"": false, ""tfa_enabled"": false, ""room_title"": ""(STEP SIS CUM FACE) shh... Luna is here and dont know what we are doing #hairy #creampie #stockings #new #lush [4310 tokens remaining]"", ""satisfaction_score"": {""down_votes"": 15, ""up_votes"": 67, ""percent"": 82, ""max"": 31222657}, ""viewer_username"": ""bom4b5"", ""hidden_message"": """", ""following"": false, ""wschat_host"": ""https://chatws-45.stream.highwebmedia.com/ws"", ""has_studio"": false, ""num_followed"": 0, ""spy_private_show_price"": 30, ""hide_satisfaction_score"": false, ""broadcaster_username"": ""jimmy_and_amy"", ""ignored_emoticons"": [], ""apps_running"": ""[[\""Tip Goal\"",\""\\/apps\\/app_details\\/tip-goal\\/?slot=0\""],[\""Ultra Bot - 4Sci\"",\""\\/apps\\/app_details\\/ultra-bot-4sci\\/?slot=2\""],[\""Roll The Dice\"",\""\\/apps\\/app_details\\/roll-the-dice-5\\/?slot=3\""]]"", ""token_balance"": 0, ""private_min_minutes"": 10, ""viewer_gender"": ""f"", ""allow_anonymous_tipping"": false, ""num_users_waiting_for_group"": 0, ""last_vote_in_past_24_hours"": null, ""is_widescreen"": true, ""num_viewers"": 331, ""broadcaster_on_new_chat"": false, ""private_show_price"": 30, ""num_followed_online"": 0, ""allow_private_shows"": true}"" </code></pre>  <p>I tried <a href=""https://stackoverflow.com/questions/49769903/how-to-decode-javascript-unicode-string-in-python"">How to decode javascript unicode string in python?</a> it worked but the only one issue is that I cant decode it after I split </p>  <pre><code>gett = s.get(""https://localhost.com/34534535/"") # print(gett.text + ""\n\n\n\n"")  m = json.dumps({""k"": gett.text})  # decodes it  # split testt = (json.loads(m)[""k""]).split('window.initialRoomDossier = ""') testt = testt[1].split('"";')  final = testt[0]  # show the same  </code></pre>  <p>the thing is that if I load it from a string like </p>  <pre><code>a = ""{\u0022allow_group_shows\u0022: true, \u0022nee..."" </code></pre>  <p>it does work but not after I split</p>"	2020-05-28 12:27:58.153 UTC	62065416	"<p>Here is how I solved it</p>  <pre><code>import js2py   #split splitt = (json.loads(m)[""k""]).split('window.initialRoomDossier = ""') splitt = splitt[1].split('"";')  final = str(splitt[0]) final = 'var kek = ""'+final+'"";'#Turning it into javascript code (Later we will run it)   #Javascript Virtual Machine context = js2py.EvalJs({'python_sum': sum})    #Slides the sexy code context.execute(final)#Running the javascript code #print (context.kek)#  m3u8_url = json.loads(context.kek)[""hls_source""] </code></pre>"			2020-05-28 13:02:34.47 UTC
62067325	javascript|python|postgresql|flask|flask-sqlalchemy	python flask javascript DELETE 405 (METHOD NOT ALLOWED)	"<p>I'm trying to add a button to delete a musical venue from my postgres database with flask-sqlalchemy on that venue's page and then redirect to the homepage but I'm getting the error</p>  <pre><code>DELETE ip 405 (METHOD NOT ALLOWED) </code></pre>  <p>in my console and </p>  <pre><code>[28/May/2020 14:12:49] ""DELETE /deletevenue/1 HTTP/1.1"" 302 - 72.133.209.13 - - [28/May/2020 14:12:50] ""DELETE / HTTP/1.1"" 405 - </code></pre>  <p>in my terminal.  I don't know what is going wrong.  I can see that the correct venue_id is being sent to the route but I'm still getting this error.  I don't know what's wrong here.  This is the relevant code:</p>  <p>app.py</p>  <pre><code>@app.route('/deletevenue/&lt;venue_id&gt;', methods=['DELETE']) def delete_venue(venue_id):   error = False   venue = db.session.query(Venue).filter_by(id=venue_id).one()   name = venue.name   try:     Venue.query.filter_by(id=venue_id).delete()     db.session.commit()   except:     error = True     db.session.rollback()   finally:     db.session.close()   if error:     flash('An Error occured.  The venue ' + name + ' could not be deleted.')     return redirect(url_for('index'))   else:     flash('Success.  Venue ' + name + ' was deleted.')     return redirect(url_for('index'))  @app.route('/') def index():   return render_template('pages/home.html') </code></pre>  <p>show_venue.html</p>  <pre><code>    &lt;div class=""row""&gt;         &lt;button class=""btn btn-default btn-lg"" id=""deleteArtist"" data-id=""{{ venue.id }}""&gt;Delete this Artist&lt;/button&gt;     &lt;/div&gt; &lt;/section&gt;  &lt;script&gt;     const btn = document.getElementById('deleteArtist');     btn.onclick = function(e) {         venue_id = e.target.dataset['id'];         console.log(venue_id)         let r = confirm(""Are you sure you want to delete this venue?"");         if (r == true) {             fetch('/deletevenue/' + venue_id, {                 method: 'DELETE'             })         }     }  &lt;/script&gt; </code></pre>  <p>How can I get this button working?</p>"	2020-05-28 14:32:25.257 UTC	62067909	"<ol> <li><p>redirect() is flask => return response_code: 302 with same method it's recieved. (HERE is DELETE) => so it's redirect to <code>index route</code> with method DELETE => 405.</p></li> <li><p>Method <a href=""https://developers.google.com/web/updates/2015/03/introduction-to-fetch"" rel=""nofollow noreferrer"">fetch()</a> return a Promise => It's need a result response, you can not redirect code like: </p></li> </ol>  <pre class=""lang-py prettyprint-override""><code>return redirect(url_for('index')) </code></pre>  <p>It should return json or something like value, then use your javascript code check value => redirect. - <a href=""https://www.w3schools.com/howto/howto_js_redirect_webpage.asp"" rel=""nofollow noreferrer"">How TO - Redirect to Another Webpage</a></p>"			2020-05-28 15:00:25.093 UTC
62093616	javascript|python|opencv|image-processing|interpolation	OpenCV resize substantially different results between python and javascript	"<p>I'm currently working on a project dealing with thermal imagery and am having to do some resizing of the resulting image. I'm currently resizing in javascript (after sending data from web server), and this works really well, unfortunately a new requirement means I'm having to move this resizing over to the web server, using python.</p>  <p>I've done this, but when i'm resizing i'm now getting a 'triple overlapping image', which I don't get in the javascript side (see screenshot)</p>  <p>Python (Working Version)</p>  <pre><code>nparr = np.frombuffer(temps, dtype=np.float32) temparr = np.copy(nparr) temparr *= (1.0/temparr.max()) // array comes in single dimension, reshapre to (width,height) temps = temparr.reshape(int(temp_frame[""width""]), int(temp_frame[""height""]))  socketio.emit(""thermal_image"", {'data':b''+bytearray(temps),'width':temps.shape[0], 'height':temps.shape[1]}, broadcast=True)  </code></pre>  <p>Javascript (Working Version)</p>  <pre><code>let bytes = new Float32Array(msg.data); let width = msg.width; let height = msg.height; var mat = cv.matFromArray(height, width, cv.CV_32FC1, bytes); let dst_mat = new cv.Mat(); let dsize = new cv.Size(1000,1000); cv.resize(mat, dst_mat, dsize,0,0,cv.INTER_AREA); cv.imshow(canvas_name, dst_mat);  </code></pre>  <p>And the new python code, alongside the javascript used to display Python (Not working version)</p>  <pre><code>nparr = np.frombuffer(temps, dtype=np.float32) temparr = np.copy(nparr) temparr *= (1.0/temparr.max()) temps = temparr.reshape(int(temp_frame[""width""]), int(temp_frame[""height""])) resized_temps = np.zeros((1000,1000), np.float32) cv2.resize(temps, dsize=(1000,1000), dst=resized_temps, fx=0, fy=0,interpolation=cv2.INTER_AREA) socketio.emit(""thermal_image"", {'data':b''+bytearray(resized_temps),    'width':resized_temps.shape[0],    'height':resized_temps.shape[1]},    broadcast=True) </code></pre>  <p>Javascript (Not Working Version)</p>  <pre><code>let bytes = new Float32Array(msg.data); let width = msg.width; let height = msg.height; var mat = cv.matFromArray(height, width, cv.CV_32FC1, bytes); cv.imshow(canvas_name, dst_mat); </code></pre>  <p>As you can see the only difference is the resize being either in the javascript or the python, and yet the results are between really good, and pretty much useless. I know this is something i'm doing wrong but can't for the life of me figure it out.</p>  <p>The images are of the same person, slightly different poses. The second image is using the python, movement can still be seen, and if positioned correctly the object in the scene can be seen.. 3 times.</p>  <p><a href=""https://i.stack.imgur.com/XvjvF.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/XvjvF.png"" alt=""good_thermal""></a> <a href=""https://i.stack.imgur.com/PtKTy.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/PtKTy.png"" alt=""bad_thermal""></a></p>  <p>EDIT: Changed images to clearer ones</p>"	2020-05-29 19:46:40.737 UTC	62102775	"<p>Silly bug but in case anyone else comes across it after a sleepless time like me i'll post the answer:</p>  <p>I was receiving in the data a flattened byte array, then reshaping to the shape (width, height). This worked fine when doing the resize in javascript as I sent again the flattened array to javascript and the resize was done (height,width). Which is how opencv takes its values.</p>  <p>When moving to python I forgot to change the reshape to (height, width) and instead was keeping (width,height). So when opencv did the resize we were interpolating in the wrong directions, resulting in the lines and the duplicate images. </p>  <p>So Solution,</p>  <p>change line  <code>temps = temparr.reshape(int(temp_frame[""width""]), int(temp_frame[""height""]))</code> <code>temps = temparr.reshape(int(temp_frame[""height""]), int(temp_frame[""width""]))</code></p>  <p>and voila, opencv plays nice</p>"			2020-05-30 12:59:24.14 UTC
62093844	javascript|python|selenium|selenium-webdriver|webdriver	JavascriptException: Message: javascript error: arguments[0].click is not a function error using arguments[0].click through Selenium and Python	"<p>I have been webscraping some websites to grab there locations for webscraping practice. This code gets me down to individual city levels of a hotel brand, but whenever I use driver.execute_script(""arguments[0].click();"", button) in my code (as seen in the second to last line) I get this error:</p>  <pre><code>JavascriptException: Message: javascript error: arguments[0].click is not a function </code></pre>  <p>Below is a sample of the code that I have written thus far. </p>  <pre><code>for state in state_links: driver = Chrome(path_to_chrome_driver) link = 'https://www.ihg.com/destinations/us/en/united-states/' + state.lower().replace(' ', '-') driver.get(link) city_links = driver.find_elements_by_xpath('//div[@class=""countryListingContainer col-xs-12""]//ul//div//li//a//span') city_links = [thing.text for thing in city_links] driver.close() for city in city_links:     driver = Chrome(path_to_chrome_driver)     link2 = 'https://www.ihg.com/destinations/us/en/united-states/' + state.lower().replace(' hotels', '').replace(' ', '-') + '/' + city.lower().replace(' ', '-')     driver.get(link2)     hotel_links = driver.find_elements_by_xpath('//div[@class=""hotelList-detailsContainer""]//div//div//p//a')     hotel_links = [elem.text for elem in hotel_links]     driver.close()     for hotel in hotel_links:         driver = Chrome(path_to_chrome_driver)         driver.get(link2)         driver.implicitly_wait(15)         driver.execute_script(""arguments[0].click();"", hotel)         driver.implicitly_wait(10) </code></pre>"	2020-05-29 20:05:00.833 UTC	62095454	"<p>This error message...</p>  <pre><code>JavascriptException: Message: javascript error: arguments[0].click is not a function </code></pre>  <p>...implies that invoking <em>click()</em> on <code>arguments[0]</code> using <code>execute_script()</code> failed.</p>  <hr>  <p>A bit of more information about the steps would have helped us to construct a canonical answer. However, presumably as you are collecting the <code>hotel_links</code> just after:</p>  <pre><code>driver.get(link2) hotel_links = driver.find_elements_by_xpath('//div[@class=""hotelList-detailsContainer""]//div//div//p//a') </code></pre>  <p>So initially, <code>hotel_links</code> contains the <a href=""https://stackoverflow.com/questions/52782684/what-is-the-difference-between-webdriver-and-webelement-in-selenium/52805139#52805139"">WebElements</a>. But in the next line you are overwriting the <em>List</em> <code>hotel_links</code> with the <em>elem.text</em> as follows:</p>  <pre><code>hotel_links = [elem.text for elem in hotel_links] </code></pre>  <p>So, <code>hotel_links</code> now contains elements of type <strong>text</strong>.</p>  <p>As <em>text</em> element doesn't support <code>click()</code>, hence moving forward when you try to invoke <code>click()</code> on the text elements through <code>execute_script()</code>, you see the said error.</p>  <hr>  <h2>Solution</h2>  <p>If you need the <em>text</em> of the hotel links, store them in a seperate <em>List</em> asfollows:</p>  <pre><code>hotel_links_text = [elem.text for elem in hotel_links] </code></pre>  <hr>  <h2>Reference</h2>  <p>You can find a couple of relevant discussions in:</p>  <ul> <li><a href=""https://stackoverflow.com/questions/49871432/what-does-argument-0-and-argument-1-mean-in-javascriptexecutor-in-selenium-w/49873090#49873090"">What does arguments[0] and arguments[1] mean when using executeScript method from JavascriptExecutor interface through Selenium WebDriver?</a></li> </ul>"			2020-05-29 22:25:28.347 UTC
62101253	python|function	Javascript vs Python indentation	"<p>I want to make a function work like an on off switch in python. I know how to do it in Javascript, but I don't understand how indenting works with Python, can someone help point me in the right direction? </p>  <pre><code>&lt;p id=""demo""&gt;test&lt;/p&gt; &lt;button onClick=""myFunction()""&gt;change&lt;/button&gt;  &lt;script&gt; var onoff = 1;  function myFunction() {     if(onoff == 1){         document.getElementById(""demo"").innerHTML = ""one"";         onoff = 2;     }     else if(onoff == 2){         document.getElementById(""demo"").innerHTML = ""two"";         onoff = 1;     } } &lt;/script&gt; </code></pre>  <pre><code>onoff = 1  def test():   if onoff == 1:     print(""on"")     onoff = 2   elif onoff == 2:     print(""off"")     onoff = 1   test() test() test() test() </code></pre>"	2020-05-30 10:42:08.027 UTC	62101364	"<p>This is about scope as @jonrsharpe commented.</p>  <p>Did you run and notice the error below?</p>  <blockquote>   <p>UnboundLocalError: local variable 'onoff' referenced before assignment</p> </blockquote>  <p>There are many solutions. Here is an example.</p>  <pre><code>onoff = 1  def test():   global onoff   if onoff == 1:     print(""on"")     onoff = 2   elif onoff == 2:     print(""off"")     onoff = 1   test() test() test() test() </code></pre>  <p>see:</p>  <ul> <li><a href=""https://stackoverflow.com/questions/370357/unboundlocalerror-on-local-variable-when-reassigned-after-first-use"">python - UnboundLocalError on local variable when reassigned after first use - Stack Overflow</a></li> <li><a href=""https://medium.com/@vbsreddy1/unboundlocalerror-when-the-variable-has-a-value-in-python-e34e097547d6"" rel=""nofollow noreferrer"">UnboundLocalError: local variable referenced before assignment in Python.</a></li> <li><a href=""https://stackoverflow.com/questions/10851906/python-3-unboundlocalerror-local-variable-referenced-before-assignment"">function - Python 3: UnboundLocalError: local variable referenced before assignment - Stack Overflow</a></li> </ul>"			2020-05-30 10:52:26.297 UTC
62120029	python|beautifulsoup|esprima-python	Python BeautifulSoup how to extract var result from javascript element?	"<p>I'm new with Python and I've been trying to use BeautifulSoup to extract one particular data line from a variable defined in a script element.</p>  <p>Code:</p>  <pre><code>import requests from bs4 import BeautifulSoup import esprima  #----------------some comment'  URL = 'https://downdetector.com/status/facebook/'  browser = {'user-agent': 'my agent'}   #--------------some comment: page = requests.get(URL, headers=browser) soup = BeautifulSoup(page.content, 'html.parser')   #---------------some comment:  chart = soup.find(""div"",{""class"":""popover-container justify-content-center p-relative""}).script.get_text() print(chart) </code></pre>  <p>OUTPUT:</p>  <pre><code>var data = { status: 'success',   baseline: 29,        communicate: null,   company: 'Facebook', max: 66, series: [                        { x: '2020-05-30T13:22:28.168484-04:00', y: 25  },                        { x: '2020-05-30T13:37:28.168484-04:00', y: 27  },                        .....                        { x: '2020-05-31T13:07:28.168484-04:00', y: 30  },                    ]                 }                  $(function () {                   chartThis(data, 'holder', 'line')                 });                  if (data.communicate &amp;&amp; $('#dd-communicate').length) {                   $('#dd-communicate').html('&lt;div class=""border text-left d-inline-block p-2""&gt;&lt;i class=""fa"" aria-hidden=""true"" style=""color: red; width:16px; height:12px; background:url(https://cdn2.downdetector.com/d328eb8cbe4e164/images/v2/message.svg) no-repeat""&gt;&lt;/i&gt;'                     +'&lt;span class=""d-inline-block px-1""&gt;'+ data.company+' &amp;bull;  ' + moment.utc(data.communicate.created_at).fromNow()                     + '&lt;/span&gt;&lt;p class=""font-weight-bold my-0""&gt;'+ data.communicate.message + '&lt;/p&gt;&lt;/div&gt;')                 } </code></pre>  <p>Do you know an easy way to extract the 'max' value from the var result above?</p>  <p>I've tried using esprima, but still no luck as I've hit error:</p>  <blockquote>   <p>Traceback (most recent call last):   File   ""c:/test.py, line 31, in        if token[""type""] == ""Identifier"" and token[""value""] == ""max"": TypeError: 'BufferEntry' object is not subscriptable</p> </blockquote>  <p>My code with esprima looked like this:</p>  <pre><code>import requests from bs4 import BeautifulSoup import esprima  #----------------some comment'  URL = 'https://downdetector.com/status/facebook/'  browser = {'user-agent': 'my agent'}   #--------------some comment: page = requests.get(URL, headers=browser) soup = BeautifulSoup(page.content, 'html.parser')   #---------------some comment:  chart = soup.find(""div"",{""class"":""popover-container justify-content-center p-relative""}).script.get_text()  tokens = esprima.tokenize(chart)  token_iterator = iter(tokens)  for token in token_iterator:     if token[""type""] == ""Identifier"" and token[""value""] == ""max"":         value_token = next(next(token_iterator))         result = value_token[""value""] </code></pre>  <p>Any help would be greatly appreciated!</p>"	2020-05-31 17:30:40.393 UTC	62120116	"<p>A quick solution to extract the max value would be to use <code>split</code> on the <code>chart</code>: </p>  <pre><code>import requests from bs4 import BeautifulSoup  URL = 'https://downdetector.com/status/facebook/' browser = {'user-agent': 'my agent'}  page = requests.get(URL, headers=browser) soup = BeautifulSoup(page.content, 'html.parser')   chart = soup.find(""div"",{""class"":""popover-container justify-content-center p-relative""}).script.get_text() max_val= chart.split(""max: "")[1].split("","")[0]  print(max_val)  OUT: 64 </code></pre>"			2020-05-31 17:36:59.687 UTC
62137129	javascript|java|class|oop|prototypal-inheritance	"Why are JavaScript classes not considered ""real"" classes? (compared to Python, Java, etc.)"	"<p>Why are JavaScript classes considered not ""real"" compared to those in a ""standard"" class-based languages such as Java? I know that JavaScript classes use prototypes under the hood, but doesn't Java code compile down to <code>getfield</code>,<code>invokevirtual</code> etc. that perform dynamic lookups as well? Other than the fact that prototypes are regular objects that can be modified arbitrarily at run time and that you can't implement access control or multiple inheritance with prototypes, how are Java' classes fundamentally different from JavaScript's?</p>"	2020-06-01 16:58:57.447 UTC	62137219	"<p>Because JavaScript doesn't have classes; it's a prototypE-based OOPL.</p> <p>The syntactic sugar of ES6 classes adds no additional functionality to ES5. Classes are implemented <em>on top</em> of its native OOP paradigm: prototypal inheritance can mimic classical inheritance, the reverse is not true (with caveats).</p> <p>You may actually be asking a duplicate of <a href=""https://stackoverflow.com/q/19633762/438992"">this question</a>, with the (yet another) caveat that points are applicable to varying degrees depending on which specific languages are being discussed (e.g., Ruby's classes and instances are a lot different than Java's.)</p> <p>Access control and multiple inheritance are orthogonal discussions, e.g., Self has (prioritized) multiple inheritance, you could implement access control in Lua via metatables/metafunctions, etc.</p>"			2020-06-01 17:03:37.147 UTC
62147000	javascript|python|html|python-3.x	Python - Write to HTML input element through javascript	"<p><strong>The goal</strong></p>  <p>I am working on a private project, written in Python3 and using Selenium to write information from a local database into input-elements on an HTML file of a website.</p>  <p>More explicitly : I want to write to a dnd-character-sheet-html on the website roll20 (<a href=""https://roll20.org"" rel=""nofollow noreferrer"">https://roll20.org</a>). </p>  <p><strong>The Problem</strong></p>  <p>Sadly, the ""send_keys()"" method of the selenium package often drops characters, due to a <a href=""https://stackoverflow.com/questions/18013821/pythons-selenium-send-keys-with-chrome-driver-drops-characters"">known bugg</a> in the drivers for firefox and chrome that selenium uses. Thus I want to write using javascript directly. I managed to write to some elements, however, the second I click anywhere on the HTML all the entered values disappear. </p>  <p><strong>Current Solution Attempts</strong></p>  <p>Currently I identify the element I want to write to through its xpath and then set its ""value"" attribute. Below is some example code for this:</p>  <pre><code>import selenium   class DemoClass:     def __init__(self, driver):         self.driver = driver         self.known_element_xpaths = ['Some/Xpath1', 'Some/Xpath2', 'Some/Xpath3']       def write_all_elements(self, input_string):         for element_xpath in self.known_element_xpaths:             self.write_to_element(element_xpath, input_string)      def write_to_element(self, element_xpath, input_string):         js_command = f'document.evaluate(\'{element_xpath}\', document, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null).singleNodeValue.value = \'{input_string}\';'         self.driver.execute_script(js_command)  driver = selenium.webdriver.chrome() page = DemoClass(driver) page.write_all_elements('Test') </code></pre>  <p>I do not know enough about javascript to understand why values keep disappearing. My last searches showed me that it might be about the form (?) being updated with its default values after clicking, leading to a reset of the HTML (?).</p>  <p>Either way, it seems to me I should've used a different way in javascript to write to these elements. What is the correct way to do it here?</p>  <p>Any help or pointing towards the right solution would be appreciated, I am a fair bit out of my depth here.</p>  <p><strong>Attached Resources</strong></p>  <p>In case it helps, here is also a screenshot of the section where I am trying to write to elements and a more close-up screenshot of the exact elements I'm trying to write to. Further here is an <a href=""https://filebin.net/9k32eunu6zswmt3b"" rel=""nofollow noreferrer"">example HTML</a> (including associated resources), but please note the text only disappears when writing to- and clicking on a character sheet <strong>online</strong>. </p>  <p><a href=""https://i.stack.imgur.com/No789.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/No789.png"" alt=""The spell-section of a character sheet""></a></p>  <hr>  <hr>  <p><a href=""https://i.stack.imgur.com/mzAB5.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/mzAB5.png"" alt=""The spell elements I want to write to""></a></p>"	2020-06-02 07:34:19.743 UTC	63519658	"<p>You could try setting</p> <pre><code>driver.implicitly_wait(10) </code></pre> <p>either when declaring the driver or in the class constructor</p> <pre><code>self.driver = driver self.driver.implicitly_wait(10) </code></pre> <p>Explanation <a href=""https://stackoverflow.com/questions/53588966/python-selenium-difference-between-driver-implicitly-wait-and-time-sleep"">here</a></p> <hr /> <p>If you want to avoid using JS (<em>because its very hard to debug using selenium and python - been there</em>), you could checkout this post on <a href=""https://stackoverflow.com/questions/28346240/selenium-not-setting-input-field-value"">selenium-not-setting-input-field-value</a>. Note the .clear() method that is used before sending keys.</p> <p>The post you mention about the driver bug also has this <a href=""https://stackoverflow.com/a/55493098/9511107"">answer</a>, have you tried that?</p> <p>Did you tried and <em>press Enter</em> (programmatically or manually) after sending the keys. Maybe the site expects some kind of field validation.</p>"			2020-08-21 08:55:30.26 UTC
62163095	javascript|python|import	Import Python Classes to Javascript?	"<p>I want to use Python classes and functions I've written in a separate Javascript file. I'm wondering if it's possible to ""import"" those classes to my JS file?</p>"	2020-06-02 23:48:28.31 UTC	62163186	"<p>Short answer: No, you can not do that. The problem is, that JavaScript runs on the client while python is server-sided.</p>  <p>Long answer: While you can't directly import python scripts and use their classes and functions in JavaScript, you can actually use server-sided JavaScript implementations like AJAX to call a Python script. This is not what you imagined however, such a request would look like this:</p>  <pre><code>$.ajax({   type: ""POST"",   url: ""~/your_script.py"",   data: { param1: value1} }).done(function( o ) {    // some more code }); </code></pre>  <p>As you can see, you are able to call a script and even pass some parameters, but that is about it. I mean in theorie sure, you could hack your way around and set up your website like this. But trust me, before you know what is happening you loose track of all the calls and the project becomes virtually impossible to maintain.</p>"			2020-06-02 23:59:28.403 UTC
62163119	javascript|python|react-native	How to access python library in javascript react native library	"<p>I am developing a mobile application using the react native library with the JavaScript language. On the other hand, I have an image processing code that I wrote in python. Is it possible to combine them? Can I put python in my React native code?</p>"	2020-06-02 23:52:28.673 UTC	62163782	<p>No this is not possible. What are you trying to achieve? Why do you thing that embedding python in your React native code is the way to achieve it?</p>			2020-06-03 01:21:49.147 UTC
62172608	javascript|python|reactjs|react-native	reading data from python file into javascript file	"<p>Hi I have been trying to create an application using reactJS which takes a file (.mf4 format ) as input, reads data and plots it. But there does not exist any JS librarie for reading data from .mf4 file, however there are python libraries.</p>  <p>Lets say <code>getdata()</code> is a python function which returns say python dataframe.</p>  <p>How can I call <code>getdata()</code> function in JS and get data? </p>  <p>what are the different ways I can implement this?</p>"	2020-06-03 12:15:27.787 UTC	62172627	"<p>Export from python to JSON format and read the JSON with React JS Hooks: </p>  <p><a href=""https://blog.nubecolectiva.com/como-mostrar-datos-mediante-hooks-con-react-js-16-12/"" rel=""nofollow noreferrer"">https://blog.nubecolectiva.com/como-mostrar-datos-mediante-hooks-con-react-js-16-12/</a></p>  <p>In you front you can use Chart JS or other library.</p>"			2020-06-03 12:16:25.083 UTC
62187408	javascript|python|selenium	python selenium xpath multiple button using javascript issues	"<p>i'm currently facing issue with selenium getting the exact xpath on a javascript button and appreciate if someone could enlighten me or guide me.</p>  <p>As you can see from the image, the highlighted ones are the javascript button. what i'm planning to do is to use selenium to find buttons that are showing ""bill"" and click into it to clear the status. </p>  <p><img src=""https://i.stack.imgur.com/YY0if.png"" alt=""testing""></p>  <p>my current codes are</p>  <pre><code>while True:     try:         driver.find_element_by_xpath(""//*[@id='main']/div/div/div[2]/div/div[2]/table/tbody/tr[1]/td[12]/a[1]"")     except NoSuchElementException:         driver.refresh()         time.sleep(5)     else:         time.sleep(3)         driver.find_element_by_xpath(""//*[@id='main']/div/div/div[2]/div/div[2]/table/tbody/tr[1]/td[12]/a[1]"").click() </code></pre>  <p>What i want it to do is to search for the ""bill"" button and if is not found, keep refreshing the page until ""bill"" button appear, then click on it which will bring it to another page. Do take note that it can be more than 1 ""bill"" button appearing (still have not figure out how to code for that part as well but i would want it to click on the row that appear the ""bill"" button with the earlier timing first which will bring to another page and after clearing on that page which will forward back to this page and proceed with the 2nd ""bill"" button etc.)</p>  <p>what happen now with my code is that the xpath element is only on the first row of ""bill"" button which it also can be ""check"" button being on the first row at the same position. And like i mention earlier on there could be multiple ""bill"" button coming so i'm not sure how to solve for that.</p>  <p>this are the html i get from inspecting from chrome browser for the ""bill"" button.</p>  <pre><code>&lt;a href=""javascript:;"" onclick=""showContent('billing','/info/bill/12');"" class=""btn btn-danger btn-sm""&gt;                                     &lt;span class=""glyphicon glyphicon-card""&gt;                                     &lt;/span&gt;                                     &amp;nbsp;bill                                 &lt;/a&gt; </code></pre>  <p>Really really appreciate if someone can help me out on this. thanks</p>"	2020-06-04 05:26:50.88 UTC	62187628	"<p>Looks like your XPATH has been copy pasted. That should have worked since every XPATH is unique but let me show another way for declaring XPATH.</p>  <p>Try declaring XPATH in this format //tag_name[@attr1=""value1"" and @attr2=""value2"" and...and @attrn=""valuen""].  In your Example:   </p>  <pre><code>while True:     try:         driver.find_element_by_xpath(""//a[@class='btn btn-danger btn-sm' and @href='javascript;']"")     except NoSuchElementException:         driver.refresh()         time.sleep(5)     else:         time.sleep(3)         driver.find_element_by_xpath(""//a[@class='btn btn-danger btn-sm' and @href='javascript;']"").click() </code></pre>  <p>You Can also validate whether your XPATH is unique or not by searching the XPATH in your console. Click Ctrl+F in console and copy paste your XPATH. If the number of results is 1, it's fine. Else, try adding more attributes to your XPATH.</p>  <p>Also check in the console whether the control of the button stays with a or wrapped in another tag. If it is wrapped within another tag, then you might have to change the XPATH. </p>"			2020-06-04 05:46:06.45 UTC
62221824	javascript|python|math|finance	Discrepancies between Javascript and Python	"<p>I have an exam question where I have to find the delta of a put and a call option using the Black and Schole formula.</p>  <p>I found a website <a href=""http://www.deltaquants.com/calc-test"" rel=""nofollow noreferrer"">http://www.deltaquants.com/calc-test</a> that does that for me, so I went in the code and found this function:</p>  <pre><code>getDelta: function(spot, strike, volatility, riskfree, dividendy) {     var self = this;     var d1 = self.getD1(spot, strike, volatility, riskfree, dividendy);     var Nd1 = phi(d1);     // Interesting line     var result = Math.exp( - dividendy * self.expiry) * (self.type !== 'put') ? Nd1 : (Nd1 - 1);      return result.toFixed(6); } </code></pre>  <p>I replicated that in Python:</p>  <pre><code>def delta(q, t, nd1, put: bool):     return np.exp(- q * t) * (nd1 - 1 * put)  print(delta(.02, .25, .5279031701805211, True)) # -0.46974223705768553 print(delta(.02, .25, .5279031701805211, False)) # 0.5252702421349968 </code></pre>  <p>With the same inputs (Nd1 = nd1, dividendy = q, self.expiry = t), the JS code returns <code>-0.472097</code> for the put and <code>0.527903</code> for the call. </p>  <p>I rewrote their JS code to be testable in the console:</p>  <pre><code>const delta = (q, t, nd1, type) =&gt; Math.exp(-q * t) * (type !== ""put"") ? nd1 : (nd1 - 1); </code></pre>  <p>If you rewrite the JS the same way I did in python:</p>  <pre><code>const delta2 = (q, t, nd1, put) =&gt; Math.exp(-q * t) * (nd1 - 1 * put); // Where put is a boolean </code></pre>  <p>You get the same results as my python code, it seems that the <code>Mat.exp</code> part is always disregarded in their code. Do you know why?</p>"	2020-06-05 18:17:55.183 UTC	62222905	"<p>The problem is that the ternary operator (<code>... ? ... : ...</code>) has lower operator precedence than multiplication, so if you have an expression <code>A * B ? C : D</code> it gets parsed as if it were <code>(A * B) ? C : D</code> rather than <code>A * (B ? C : D)</code>.</p>  <p>If you add parentheses to emphasise the way the expression gets parsed, you end up with this:</p>  <pre class=""lang-js prettyprint-override""><code>    var result = (Math.exp( - dividendy * self.expiry) * (self.type !== 'put')) ? Nd1 : (Nd1 - 1);     //           ^-------------------- added parentheses ---------------------^ </code></pre>  <p>Here you can see that the expression involving <code>Math.exp</code> is in the condition of the ternary operator, and so the value of <code>result</code> will be either <code>Nd1</code> or <code>Nd1 - 1</code>.</p>  <p>I suspect the intended calculation is </p>  <pre class=""lang-js prettyprint-override""><code>    var result = Math.exp( - dividendy * self.expiry) * ((self.type !== 'put') ? Nd1 : (Nd1 - 1));     //                                                  ^---------- added parentheses ----------^ </code></pre>"			2020-06-05 19:32:20.377 UTC
62235853	python	python match values from javascript using re.search	"<p>Helloo guys,</p>  <p>I want to extract two values from one javascript but my code not working.</p>  <p>Content :</p>  <pre><code>window.DETAILS_PAGE_MAP_GLOBALS = {         GOOGLE_MAPS_LONGITUDE: 55.3750694379,         GOOGLE_MAPS_LATITUDE: 25.309934898     };  </code></pre>  <p>My code :</p>  <pre><code>sk = re.search(r'window.DETAILS_PAGE_MAP_GLOBALS = {(.*?)', str(content)).group(1) print(sk)  </code></pre>  <p>But it prints nothing !!</p>  <p>I need to get longitude and latitiude into variable, how i can do that ?</p>"	2020-06-06 18:01:19.057 UTC	62236019	"<p>This will extract the longitude and latitude numbers into a list.</p>  <pre><code>import re content = """"""window.DETAILS_PAGE_MAP_GLOBALS = {                 GOOGLE_MAPS_LONGITUDE: 55.3750694379,                 GOOGLE_MAPS_LATITUDE: 25.309934898             };""""""  lat_lon_re = re.compile(r'GOOGLE_MAPS_L.+:\s+([-\d\.]+)')  m = lat_lon_re.findall(content) print(m)  Output: ['55.3750694379', '25.309934898'] </code></pre>"			2020-06-06 18:14:13.13 UTC
62235853	python	python match values from javascript using re.search	"<p>Helloo guys,</p>  <p>I want to extract two values from one javascript but my code not working.</p>  <p>Content :</p>  <pre><code>window.DETAILS_PAGE_MAP_GLOBALS = {         GOOGLE_MAPS_LONGITUDE: 55.3750694379,         GOOGLE_MAPS_LATITUDE: 25.309934898     };  </code></pre>  <p>My code :</p>  <pre><code>sk = re.search(r'window.DETAILS_PAGE_MAP_GLOBALS = {(.*?)', str(content)).group(1) print(sk)  </code></pre>  <p>But it prints nothing !!</p>  <p>I need to get longitude and latitiude into variable, how i can do that ?</p>"	2020-06-06 18:01:19.057 UTC	62235929	"<p>You could use</p>  <pre><code>(\w+):\s+([\d.]+) </code></pre>  <p>See <a href=""https://regex101.com/r/a9bn3A/1/"" rel=""nofollow noreferrer""><strong>a demo on regex101.com</strong></a>.</p>"			2020-06-06 18:07:00.447 UTC
62253564	python|string|hashmap|anagram	I just need to turn solution of JavaScript problem into Python code using the same approach	"<p>I'm stuck on turning this JS anagram problem into Python solution using the same approach. Here is the problem:</p>  <p><a href=""https://i.stack.imgur.com/yxcF7.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/yxcF7.png"" alt=""Here the problem:""></a> </p>  <p>Here is the JavaScript solution:</p>  <pre><code>    if (first.length !== second.length) {         return false;     }      const lookup = {};      for (let i = 0; i &lt; first.length; i++) {         let letter = first[i];         // if letter exists, increment, otherwise set to 1         lookup[letter] ? (lookup[letter] += 1) : (lookup[letter] = 1);     }      for (let i = 0; i &lt; second.length; i++) {         let letter = second[i];         // can't find letter or letter is zero then it's not an anagram         if (!lookup[letter]) {             return false;         } else {             lookup[letter] -= 1;         }     }      return true; }  console.log(validAnagram('anagram', 'nagaram')); </code></pre>  <p>And here is my Python code using the same approach:</p>  <pre><code>    if len(first) != len(second):         return False      lookup = {}      for char in first:         letter = first[char]         if lookup[letter]:             lookup[letter] += 1         else:             lookup[letter] = 1      for char in second:         letter = second[char]         if not lookup[letter]:             return False         else:             lookup[letter] -= 1      return True   print(valid_anagram(""anagram"", ""nagaram"")) </code></pre>  <p>This is the error I'm getting when I run my Python solution:</p>  <pre><code>letter = first[char] TypeError: string indices must be integers </code></pre>"	2020-06-08 01:01:31.31 UTC	62253582	"<p>You are attempting to pass in a string to get the index instead of passing in an integer. </p>  <pre><code>first = ""hello"" for char in first:       print(char)   </code></pre>  <p>Output: </p>  <pre><code>h e l l o </code></pre>  <p>To get the index use this:</p>  <pre><code>for char in range(len(first)):    print(char) </code></pre>  <p>Output:</p>  <pre><code>0 1 2 3 4 </code></pre>  <p>Here is a simpler solution </p>  <pre><code>def valid_anagram(str1, str2):     list_str1 = list(str1)     list_str1.sort()     list_str2 = list(str2)     list_str2.sort()      return (list_str1 == list_str2) </code></pre>"			2020-06-08 01:05:43.71 UTC
62253564	python|string|hashmap|anagram	I just need to turn solution of JavaScript problem into Python code using the same approach	"<p>I'm stuck on turning this JS anagram problem into Python solution using the same approach. Here is the problem:</p>  <p><a href=""https://i.stack.imgur.com/yxcF7.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/yxcF7.png"" alt=""Here the problem:""></a> </p>  <p>Here is the JavaScript solution:</p>  <pre><code>    if (first.length !== second.length) {         return false;     }      const lookup = {};      for (let i = 0; i &lt; first.length; i++) {         let letter = first[i];         // if letter exists, increment, otherwise set to 1         lookup[letter] ? (lookup[letter] += 1) : (lookup[letter] = 1);     }      for (let i = 0; i &lt; second.length; i++) {         let letter = second[i];         // can't find letter or letter is zero then it's not an anagram         if (!lookup[letter]) {             return false;         } else {             lookup[letter] -= 1;         }     }      return true; }  console.log(validAnagram('anagram', 'nagaram')); </code></pre>  <p>And here is my Python code using the same approach:</p>  <pre><code>    if len(first) != len(second):         return False      lookup = {}      for char in first:         letter = first[char]         if lookup[letter]:             lookup[letter] += 1         else:             lookup[letter] = 1      for char in second:         letter = second[char]         if not lookup[letter]:             return False         else:             lookup[letter] -= 1      return True   print(valid_anagram(""anagram"", ""nagaram"")) </code></pre>  <p>This is the error I'm getting when I run my Python solution:</p>  <pre><code>letter = first[char] TypeError: string indices must be integers </code></pre>"	2020-06-08 01:01:31.31 UTC	62253684	"<p>Here's the same solution, that uses <code>dict</code> to count letters like your Java code:</p>  <pre><code>from collections import Counter  def valid_anagram( str1, str2 ) :     return Counter(str1) == Counter(str2) </code></pre>  <p>testing:</p>  <pre><code>&gt;&gt;&gt; valid_anagram('anagram', 'nagaram') True &gt;&gt;&gt;  </code></pre>  <hr>  <p>I wrote below, and I write here again, the whole point of using python is not reinventing the wheel and use existing libraries to make the code compact, fast and easy to understand.</p>  <p>Take for example your code:</p>  <pre><code>for char in first:     letter = first[char]     if lookup[letter]:         lookup[letter] += 1     else:         lookup[letter] = 1 </code></pre>  <p>This can be rewritten as:</p>  <pre><code>lookup = dict() for letter in first:     if lookup[letter]:         lookup[letter] += 1     else:         lookup[letter] = 1 </code></pre>  <p>Or, better yet:</p>  <pre><code>lookup = Counter() for letter in first:     lookup[letter] += 1 </code></pre>  <p>Or, even better:</p>  <pre><code>lookup = Counter( first ) </code></pre>  <p>So why waste time and space....</p>"			2020-06-08 01:24:07.667 UTC
62253605	python|selenium|xpath|css-selectors|linktext	How to click a javascript enabled anchor element using Selenium and Python	"<p>This is the html of the element I am trying to click:</p>  <pre><code>&lt;a id=""sd3"" class=""node"" href=""/cgi-bin/luci/;stok=753940cb907c7e8524cfaf3c5227614c/expert/configuration/network/wlan""  target=""mainFrame"" onclick=""javascript: d.s(3);""&gt;Wireless LAN 2.4G&lt;/a&gt; </code></pre>  <p>This is the error raised:</p>  <pre><code>selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element </code></pre>  <p>From the F12 inspection screen, this is the xpath:</p>  <pre><code>//*[@id=""sd3""] </code></pre>  <p>This is the selector:</p>  <pre><code>#sd3 </code></pre>  <p>This is the full xpath: </p>  <pre><code>/html/body/div[3]/div/ul/li[2]/div/ul/li/div/ul/li[3]/div/div/div[2]/div[2]/div[2]/a </code></pre>  <p>I tried all of these:</p>  <pre><code>driver.find_element_by_link_text(url).click() driver.find_element_by_xpath(""//dTreeNode[3]"").click() driver.find_element_by_partial_link_text('url').click() driver.find_element_by_css_selector('a.node').click() driver.find_element_by_xpath(""//dd1[2]"").click() driver.find_element_by_css_selector('a#sd3').click() driver.find_element_by_css_selector("".node[id='sd3']"").click() driver.find_element_by_xpath(""//a[@id='sd3']"").click() driver.find_element_by_link_text('Wireless LAN 2.4G').click() driver.find_element_by_xpath(""//div[@id='dd1']/div[2]/a[1]"").click() driver.find_element_by_xpath(""//div[@id='dd1']/div[2]/a[@id='sd3']"").click() driver.find_element_by_xpath(""//a[@id='sd3']"").click() driver.find_element_by_id(""sd3"").click() driver.find_element_by_link_text('Wireless LAN 2.4G').click() driver.find_element_by_xpath(""/html/body/div[3]/div/ul/li[2]/div/ul/li/div/ul/li[3]/div/div/div[2]/div[2]/div[2]/a"").click() driver.find_element_by_xpath(""//*[@id='sd3']"").click() </code></pre>  <p>Conclusion: I must admit that I find myself completely clueless to find that despite all my different attempts, it is this very same exception being raised. And yet I'm using the same line of codes earlier in my script and it works like a dime. I even tried to give the content time to generate (3 seconds) cause it's dynamically generated. I'm led to 2 conclusions. I'm either the problem which I couldn't find, or the fact that this is some dynamically generated content is adding a layer of complexity for Selenium that I didn't get.</p>"	2020-06-08 01:09:07.863 UTC	62255108	"<p>The <code>&lt;a&gt;</code> element is a <a href=""https://www.javascript.com/"" rel=""nofollow noreferrer"">JavaScript</a> enabled element. So to <code>click()</code> on the element you need to induce <a href=""https://stackoverflow.com/questions/49775502/webdriverwait-not-working-as-expected/49775808#49775808"">WebDriverWait</a> for the <code>element_to_be_clickable()</code> and you can use either of the following <a href=""https://stackoverflow.com/questions/48369043/official-locator-strategies-for-the-webdriver/48376890#48376890"">Locator Strategies</a>:</p>  <ul> <li><p>Using <code>LINK_TEXT</code>:</p>  <pre><code>WebDriverWait(driver, 20).until(EC.element_to_be_clickable((By.LINK_TEXT, ""Wireless LAN 2.4G""))).click() </code></pre></li> <li><p>Using <code>PARTIAL_LINK_TEXT</code>:</p>  <pre><code>WebDriverWait(driver, 20).until(EC.element_to_be_clickable((By.PARTIAL_LINK_TEXT, ""Wireless LAN 2""))).click() </code></pre></li> <li><p>Using <code>CSS_SELECTOR</code>:</p>  <pre><code>WebDriverWait(driver, 20).until(EC.element_to_be_clickable((By.CSS_SELECTOR, ""a.node[href$='/expert/configuration/network/wlan']""))).click() </code></pre></li> <li><p>Using <code>XPATH</code>:</p>  <pre><code>WebDriverWait(driver, 20).until(EC.element_to_be_clickable((By.XPATH, ""//a[@class='node' and contains(@href, 'expert/configuration/network/wlan')][contains(., 'LAN 2.4G')]""))).click() </code></pre></li> <li><p><strong>Note</strong> : You have to add the following imports:</p>  <pre><code>from selenium.webdriver.support.ui import WebDriverWait from selenium.webdriver.common.by import By from selenium.webdriver.support import expected_conditions as EC </code></pre></li> </ul>  <blockquote>   <p><strong>Note</strong>: You can find a relevant discussion in <a href=""https://stackoverflow.com/questions/47993443/selenium-selenium-common-exceptions-nosuchelementexception-when-using-chrome/47995294#47995294"">Selenium “selenium.common.exceptions.NoSuchElementException” when using Chrome</a></p> </blockquote>"			2020-06-08 04:40:16.303 UTC
62271380	javascript|python|sockets|server|client	Send UDP Data from Python to Javascript?	"<p>How do I retrieve data fro this Python Server in Javacript. The end goal is to be able to use Python variables to Control Javascript variables. I've scoured everywhere for hints on how to work with sockets and javascript but they only dive into sending data whereas I'm wanting to receive data. </p>  <p>Thanks in Advance! :)</p>  <p>Python Server Code:</p>  <pre><code>import socket UDP_IP = socket.gethostname() UDP_PORT = 5005 ip_address = socket.gethostbyname(socket.gethostname())  MESSAGE = ""Hello, World!""  print (""UDP target IP:"", UDP_IP) print(""IP Address is"",ip_address) print (""UDP target port:"", UDP_PORT) print (""message:"", MESSAGE)  sock = socket.socket(socket.AF_INET,  # Internet                  socket.SOCK_DGRAM)  # UDP  #sock.sendto(MESSAGE, (UDP_IP, UDP_PORT))  sock.sendto(bytes(MESSAGE, ""utf-8""), (ip_address, UDP_PORT)) </code></pre>  <p>JAVASCRIPT CLIENT:</p>  <pre><code>var socket = io.connect('http://127.0.0.1:5005'); </code></pre>"	2020-06-08 21:21:32.663 UTC	62271917	"<p><strong>Best option should be flask</strong></p>  <pre><code>@app.route('/') def hello():    data = {'username': 'Pang', 'site': 'stackoverflow.com'}    return render_template('settings.html', data=data) </code></pre>  <p>In the above code you specify the route and the data you want to send, previously processed in a python variable.</p>  <p><strong>In your js:</strong></p>  <pre><code>function myFunc(vars) { return vars </code></pre>  <p>}</p>  <p>In this way you should be able to view your values and use them</p>  <p><strong>In your html</strong></p>  <pre><code>&lt;html&gt; &lt;head&gt;      &lt;script type=""text/javascript"" {{ url_for('static', filename='app.js')}}&gt;&lt;/script&gt;      &lt;script type=""text/javascript""&gt;         myVar = myFunc({{vars|tojsenter code hereon}})      &lt;/script&gt; &lt;/head&gt; </code></pre>  <p></p>  <p>In the above code you store your data reciebed in <strong>MyVar</strong>, you can omit the json parsing.</p>"			2020-06-08 22:04:16.23 UTC
62318161	javascript|python|django	How to add Thousand Separator to number in Javascript / Python / Django	"<p>I wanted to ask how to add thousand separator to the number when I type the number and also to the output.</p>  <p>For example 10 000 becomes 10,000.</p>  <p>I tried to use Django intcomma but it's not working.</p>  <p>Really appreciate if you guys can help me with this. Below is my code :</p>  <p>HTML     </p>  <pre><code>&lt;html&gt; &lt;head&gt;   &lt;script src=""https://ajax.googleapis.com/ajax/libs/jquery/2.2.0/jquery.min.js""&gt;&lt;/script&gt;   &lt;link rel=""stylesheet"" href=""https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css"" /&gt;   &lt;script src=""https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/js/bootstrap.min.js""&gt;&lt;/script&gt; &lt;/head&gt;  &lt;body&gt;   &lt;div class=""container""&gt;     &lt;br /&gt;     &lt;br /&gt;     &lt;div class=""form-group""&gt;       &lt;form name=""add_price"" id=""add_price""&gt;         &lt;div class=""table-responsive""&gt;           &lt;table class=""table table-bordered"" id=""price""&gt;             {{ priceformset.management_form }}             {% for price in priceformset %}              &lt;tr&gt;               &lt;td&gt;{{ product.product_price }}&lt;/td&gt;               &lt;td&gt;{{ product.product_quantity }}&lt;/td&gt;                &lt;td&gt;{{ product.product_total_price }}&lt;/td&gt;             &lt;/tr&gt;             {% endfor %}           &lt;/table&gt;           &lt;input type=""button"" name=""submit"" id=""submit"" class=""btn btn-info"" value=""Submit"" /&gt;         &lt;/div&gt;       &lt;/form&gt;     &lt;/div&gt;   &lt;/div&gt; &lt;/body </code></pre>  <p>Javascript</p>  <pre><code>$('.textInput').on('change keyup', function() {        product_total_price=0;        var product_price= Number($('#id_Product-0-price').val());       var product_quantity= Number($('#id_Product-0-quantity').val());        product_total_price= product_price * product_quantity;       $('#id_Product-0-total_price').val(product_total_price);  }); </code></pre>  <p>Models.py</p>  <pre><code> class Price (models.Model):     product_price = models.CharField(max_length=512,null=True,blank=True)     product_quantity = models.CharField(max_length=512,null=True,blank=True)     product_total_price= models.CharField(max_length=512,null=True,blank=True) </code></pre>  <p>Forms.py</p>  <pre><code>class PriceForm(forms.ModelForm):  product_price =forms.CharField(required=False,label=('Price'),widget=forms.TextInput(         attrs= {         ""class"":""textInput form-control"",         ""placeholder"" : ""Price"" }))  product_quantity =forms.CharField(required=False,label=('Quantity'),widget=forms.TextInput(         attrs= {         ""class"":""textInput form-control"",         ""placeholder"" : ""Quantity"" }))  product_total_price =forms.CharField(required=False,label=('Total Price'),widget=forms.TextInput(         attrs= {         ""class"":""textInput form-control"",         ""placeholder"" : ""Total Price"" }))  class Meta:         model = Price         fields = ('__all__') </code></pre>"	2020-06-11 06:12:44.673 UTC	68040221	"<p>It works with float-type vale as well. It's a little complex but I really love to share my idea. It's based on Javascript.</p> <pre><code>value.toString().split('.').map((v, i) =&gt; i===0?v.split('').map((val, idx, self) =&gt; ((idx===0)||((self.length-idx)%3!==0))?val:`,${val}`).join(''):v).join('.') </code></pre>"			2021-06-18 18:54:03.923 UTC
62318161	javascript|python|django	How to add Thousand Separator to number in Javascript / Python / Django	"<p>I wanted to ask how to add thousand separator to the number when I type the number and also to the output.</p>  <p>For example 10 000 becomes 10,000.</p>  <p>I tried to use Django intcomma but it's not working.</p>  <p>Really appreciate if you guys can help me with this. Below is my code :</p>  <p>HTML     </p>  <pre><code>&lt;html&gt; &lt;head&gt;   &lt;script src=""https://ajax.googleapis.com/ajax/libs/jquery/2.2.0/jquery.min.js""&gt;&lt;/script&gt;   &lt;link rel=""stylesheet"" href=""https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css"" /&gt;   &lt;script src=""https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/js/bootstrap.min.js""&gt;&lt;/script&gt; &lt;/head&gt;  &lt;body&gt;   &lt;div class=""container""&gt;     &lt;br /&gt;     &lt;br /&gt;     &lt;div class=""form-group""&gt;       &lt;form name=""add_price"" id=""add_price""&gt;         &lt;div class=""table-responsive""&gt;           &lt;table class=""table table-bordered"" id=""price""&gt;             {{ priceformset.management_form }}             {% for price in priceformset %}              &lt;tr&gt;               &lt;td&gt;{{ product.product_price }}&lt;/td&gt;               &lt;td&gt;{{ product.product_quantity }}&lt;/td&gt;                &lt;td&gt;{{ product.product_total_price }}&lt;/td&gt;             &lt;/tr&gt;             {% endfor %}           &lt;/table&gt;           &lt;input type=""button"" name=""submit"" id=""submit"" class=""btn btn-info"" value=""Submit"" /&gt;         &lt;/div&gt;       &lt;/form&gt;     &lt;/div&gt;   &lt;/div&gt; &lt;/body </code></pre>  <p>Javascript</p>  <pre><code>$('.textInput').on('change keyup', function() {        product_total_price=0;        var product_price= Number($('#id_Product-0-price').val());       var product_quantity= Number($('#id_Product-0-quantity').val());        product_total_price= product_price * product_quantity;       $('#id_Product-0-total_price').val(product_total_price);  }); </code></pre>  <p>Models.py</p>  <pre><code> class Price (models.Model):     product_price = models.CharField(max_length=512,null=True,blank=True)     product_quantity = models.CharField(max_length=512,null=True,blank=True)     product_total_price= models.CharField(max_length=512,null=True,blank=True) </code></pre>  <p>Forms.py</p>  <pre><code>class PriceForm(forms.ModelForm):  product_price =forms.CharField(required=False,label=('Price'),widget=forms.TextInput(         attrs= {         ""class"":""textInput form-control"",         ""placeholder"" : ""Price"" }))  product_quantity =forms.CharField(required=False,label=('Quantity'),widget=forms.TextInput(         attrs= {         ""class"":""textInput form-control"",         ""placeholder"" : ""Quantity"" }))  product_total_price =forms.CharField(required=False,label=('Total Price'),widget=forms.TextInput(         attrs= {         ""class"":""textInput form-control"",         ""placeholder"" : ""Total Price"" }))  class Meta:         model = Price         fields = ('__all__') </code></pre>"	2020-06-11 06:12:44.673 UTC	62318818	"<p>javascript:</p>  <pre class=""lang-js prettyprint-override""><code>const n = 100000 const formated = n.toLocaleString() </code></pre>  <p>python (requires python 3.6+):</p>  <pre class=""lang-py prettyprint-override""><code>n = 1000000 formatted = f'{n:,}' </code></pre>"			2020-06-11 07:00:41.41 UTC
62318161	javascript|python|django	How to add Thousand Separator to number in Javascript / Python / Django	"<p>I wanted to ask how to add thousand separator to the number when I type the number and also to the output.</p>  <p>For example 10 000 becomes 10,000.</p>  <p>I tried to use Django intcomma but it's not working.</p>  <p>Really appreciate if you guys can help me with this. Below is my code :</p>  <p>HTML     </p>  <pre><code>&lt;html&gt; &lt;head&gt;   &lt;script src=""https://ajax.googleapis.com/ajax/libs/jquery/2.2.0/jquery.min.js""&gt;&lt;/script&gt;   &lt;link rel=""stylesheet"" href=""https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css"" /&gt;   &lt;script src=""https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/js/bootstrap.min.js""&gt;&lt;/script&gt; &lt;/head&gt;  &lt;body&gt;   &lt;div class=""container""&gt;     &lt;br /&gt;     &lt;br /&gt;     &lt;div class=""form-group""&gt;       &lt;form name=""add_price"" id=""add_price""&gt;         &lt;div class=""table-responsive""&gt;           &lt;table class=""table table-bordered"" id=""price""&gt;             {{ priceformset.management_form }}             {% for price in priceformset %}              &lt;tr&gt;               &lt;td&gt;{{ product.product_price }}&lt;/td&gt;               &lt;td&gt;{{ product.product_quantity }}&lt;/td&gt;                &lt;td&gt;{{ product.product_total_price }}&lt;/td&gt;             &lt;/tr&gt;             {% endfor %}           &lt;/table&gt;           &lt;input type=""button"" name=""submit"" id=""submit"" class=""btn btn-info"" value=""Submit"" /&gt;         &lt;/div&gt;       &lt;/form&gt;     &lt;/div&gt;   &lt;/div&gt; &lt;/body </code></pre>  <p>Javascript</p>  <pre><code>$('.textInput').on('change keyup', function() {        product_total_price=0;        var product_price= Number($('#id_Product-0-price').val());       var product_quantity= Number($('#id_Product-0-quantity').val());        product_total_price= product_price * product_quantity;       $('#id_Product-0-total_price').val(product_total_price);  }); </code></pre>  <p>Models.py</p>  <pre><code> class Price (models.Model):     product_price = models.CharField(max_length=512,null=True,blank=True)     product_quantity = models.CharField(max_length=512,null=True,blank=True)     product_total_price= models.CharField(max_length=512,null=True,blank=True) </code></pre>  <p>Forms.py</p>  <pre><code>class PriceForm(forms.ModelForm):  product_price =forms.CharField(required=False,label=('Price'),widget=forms.TextInput(         attrs= {         ""class"":""textInput form-control"",         ""placeholder"" : ""Price"" }))  product_quantity =forms.CharField(required=False,label=('Quantity'),widget=forms.TextInput(         attrs= {         ""class"":""textInput form-control"",         ""placeholder"" : ""Quantity"" }))  product_total_price =forms.CharField(required=False,label=('Total Price'),widget=forms.TextInput(         attrs= {         ""class"":""textInput form-control"",         ""placeholder"" : ""Total Price"" }))  class Meta:         model = Price         fields = ('__all__') </code></pre>"	2020-06-11 06:12:44.673 UTC	62318287	"<p>It's easy to do in js:</p>  <pre><code>let number = 1000 number.toLocaleString() </code></pre>  <p>This is how to do it in python:</p>  <pre><code>def place_value(number):      return (""{:,}"".format(number))   print(place_value(1000000))  </code></pre>  <p>Happy to help</p>"			2020-06-11 06:23:36.83 UTC
62327055	python-requests	How to create a stock availability checker with python requests if JavaScript is used?	"<p>I wrote some code which should check whether a product is back in stock and when it is, send me an email to notify me. This works when the things I'm looking for are in the html.</p> <p>However, sometimes certain objects are loaded through JavaScript. How could I edit my code so that the web scraping also works with JavaScript?</p> <p>This is my code thus far:</p> <pre><code>import time import requests  while True:     # Get the url of the IKEA page     url = 'https://www.ikea.com/nl/nl/p/flintan-bureaustoel-vissle-zwart-20336841/'      # Get the text from that page and put everything in lower cases     productpage = requests.get(url).text.lower()      # Set the strings that should be on the page if the product is not available     outofstockstrings = ['niet beschikbaar voor levering', 'alleen beschikbaar in de winkel']      # Check whether the strings are in the text of the webpage     if any(x in productpage for x in outofstockstrings):         time.sleep(1800)         continue     else:         # send me an email and break the loop </code></pre>"	2020-06-11 14:45:42.79 UTC	64151195	"<p>Instead of scraping and analyzing the HTML you could use the inofficial stock API that the IKEA website is using too. That API return JSON data which is way easier to analyze and you’ll also get estimates when the product gets back to stock.</p> <p>There even is a project written in javascript / node which provides you this kind of information straight from the command line: <a href=""https://github.com/Ephigenia/ikea-availability-checker"" rel=""nofollow noreferrer"">https://github.com/Ephigenia/ikea-availability-checker</a></p> <p>You can easily check the stock amount of the chair in all stores in the Netherlands:</p> <pre><code>npx ikea-availability-checker stock --country nl 20336841 </code></pre>"			2020-10-01 07:55:55.643 UTC
62350675	python|selenium|selenium-webdriver	"Python Selenium, javascript button never finishing to load"	"<p>i'm doing a simple selenium script to get all products in this page: <a href=""https://www.bauducco.com.br/produtos/"" rel=""nofollow noreferrer"">https://www.bauducco.com.br/produtos/</a>.</p>  <p>I've just created this code to try to open the page and click in the red button to load more products:</p>  <pre><code>from selenium import webdriver from selenium.webdriver.common.by import By from selenium.webdriver.support.ui import WebDriverWait  from selenium.webdriver.support import expected_conditions as EC import time   driver = webdriver.Firefox(executable_path=r'mypath') driver.get('http://www.bauducco.com.br/produtos/')  button = driver.find_element_by_xpath(                  '/html/body/div[1]/div/section/div[2]/span/a')  driver.execute_script(""window.scrollTo(0, 1080)"")    button.click() time.sleep(5)  </code></pre>  <p>This is all the code. I've tried to execute using Google Chrome and also fireFox but none worked. The button just keep loading and never brings my content. Even if i just open the page with the selenium and click by myself the button doesn't work.</p>  <p>Some ideia what is happening ? Maybe is a trick to block bots ?</p>"	2020-06-12 18:51:08.577 UTC	62351901	"<p>You should add firefox webdriver option ""--disable-web-security"" because webdriver blocks CORS requests:</p>  <pre><code>from selenium import webdriver from selenium.webdriver.firefox.options import Options firefox_options = Options()   firefox_options.add_argument(""--disable-web-security"")   driver = webdriver.Firefox(executable_path=r'mypath',  firefox_options=firefox_options) driver.get('http://www.bauducco.com.br/produtos/')  button = driver.find_element_by_xpath('/html/body/div[1]/div/section/div[2]/span/a')  button.click() </code></pre>"			2020-06-12 20:19:50.567 UTC
62353469	javascript|python|selenium|akamai	How to scrape the Javascript based site https://marketchameleon.com/Calendar/Earnings using Selenium and Python?	"<p>I am trying to get earning dates from <a href=""https://marketchameleon.com/Calendar/Earnings"" rel=""nofollow noreferrer"">https://marketchameleon.com/Calendar/Earnings</a>  The site has a javascript loader that loads the earnings table, but when I am using selenium it is not appears. I tried chrome and firefox drivers.</p>  <p>a sample of the code:</p>  <pre><code>firefox_driver_path = os.path.abspath('../firefoxdriver_win32/geckodriver.exe') options = webdriver.FirefoxOptions() options.add_argument(""--enable-javascript"") driver = webdriver.Firefox(executable_path=firefox_driver_path, options=options) driver.get(""https://marketchameleon.com/Calendar/Earnings"") </code></pre>  <p>how can I get the data? </p>"	2020-06-12 22:41:22.253 UTC	62364975	"<p>I took your code added a few tweaks and ran a test to extract the earning dates from <a href=""https://marketchameleon.com/Calendar/Earnings"" rel=""nofollow noreferrer"">https://marketchameleon.com/Calendar/Earnings</a> as follows:</p> <ul> <li><p>Code Block:</p> <pre><code>from selenium import webdriver from selenium.webdriver.common.by import By from selenium.webdriver.support.ui import WebDriverWait from selenium.webdriver.support import expected_conditions as EC  options = webdriver.ChromeOptions()  options.add_argument(&quot;start-maximized&quot;) options.add_experimental_option(&quot;excludeSwitches&quot;, [&quot;enable-automation&quot;]) options.add_experimental_option('useAutomationExtension', False) driver = webdriver.Chrome(options=options, executable_path=r'C:\Utility\BrowserDrivers\chromedriver.exe') driver.get('https://marketchameleon.com/Calendar/Earnings') print(WebDriverWait(driver, 5).until(EC.visibility_of_element_located((By.CSS_SELECTOR, &quot;table.dateselect_menu_h_table tr &gt; th &gt; span&quot;))).text) print(WebDriverWait(driver, 5).until(EC.visibility_of_element_located((By.XPATH, &quot;//table[@class='dateselect_menu_h_table']//tr/th/span&quot;))).get_attribute(&quot;innerHTML&quot;)) </code></pre> </li> </ul> <hr /> <h2>Observation</h2> <p>Similar to your observation, I have hit the same roadblock that using <a href=""https://stackoverflow.com/questions/54459701/what-is-selenium-and-what-is-webdriver/54482491#54482491"">Selenium</a> the earnings table doesn't loads:</p> <p><img src=""https://i.stack.imgur.com/HKws0.png"" alt=""marketchameleon"" /></p> <hr /> <h2>Deep Dive</h2> <p>While inspecting the <a href=""https://javascript.info/dom-nodes"" rel=""nofollow noreferrer"">DOM Tree</a> of the <em>webpage</em> I found that some of the <code>&lt;script&gt;</code> and other tags refers to the keyword <strong>akam</strong>. As an example:</p> <ul> <li><code>!function(){if(BOOMR=a.BOOMR||{},BOOMR.plugins=BOOMR.plugins||{},!BOOMR.plugins.AK){var e=&quot;&quot;==&quot;true&quot;?1:0,t=&quot;&quot;,n=&quot;gertvyrrfrzvsxxfd3ta-f-81b1f5d51-clientnsv4-s.akamaihd.net&quot;</code></li> <li><code>&lt;script type=&quot;text/javascript&quot; src=&quot;https://marketchameleon.com/akam/11/4e7414cb&quot; defer=&quot;&quot;&gt;&lt;/script&gt;</code></li> <li><code>&lt;noscript&gt;&lt;img src=&quot;https://marketchameleon.com/akam/11/pixel_4e7414cb?a=dD03OTIxZTlmM2QwMWVhMDkxODhjNzQwN2E3NmFkNzRiMDQ5ODBkOGU0JmpzPW9mZg==&quot; style=&quot;visibility: hidden; position: absolute; left: -999px; top: -999px;&quot; /&gt;&lt;/noscript&gt;</code></li> <li><code>&lt;link id=&quot;dnsprefetchlink&quot; rel=&quot;dns-prefetch&quot; href=&quot;//gertvyrrfrzvsxxfd3ta-f-81b1f5d51-clientnsv4-s.akamaihd.net&quot;&gt;</code></li> </ul> <p>Which is a clear indication that the website is protected by <a href=""https://www.akamai.com/us/en/products/security/bot-manager.jsp"" rel=""nofollow noreferrer""><strong>Bot Manager</strong></a> an advanced bot detection service provided by <a href=""https://www.akamai.com/"" rel=""nofollow noreferrer""><strong>Akamai</strong></a> and the response gets <strong>blocked</strong>.</p> <hr /> <h2>Bot Manager</h2> <p>As per the article <a href=""https://www.akamai.com/us/en/multimedia/documents/akamai/akamai-bot-manager-training-overview-and-agenda.pdf"" rel=""nofollow noreferrer"">Bot Manager - Foundations</a>:</p> <p><img src=""https://i.stack.imgur.com/DwL3F.png"" alt=""akamai_detection"" /></p> <hr /> <h2>Conclusion</h2> <p>So it can be concluded that the request for the data is detected as being performed by <a href=""https://stackoverflow.com/questions/54459701/what-is-selenium-and-what-is-webdriver/54482491#54482491"">Selenium</a> driven <a href=""https://stackoverflow.com/questions/48079120/what-is-the-difference-between-chromedriver-and-webdriver-in-selenium/48080871#48080871"">WebDriver</a> instance and the response is blocked.</p> <hr /> <h2>References</h2> <p>A couple of documentations:</p> <ul> <li><a href=""https://www.akamai.com/us/en/multimedia/documents/product-brief/bot-manager-product-brief.pdf"" rel=""nofollow noreferrer"">Bot Manager</a></li> <li><a href=""https://www.akamai.com/us/en/multimedia/documents/akamai/akamai-bot-manager-training-overview-and-agenda.pdf"" rel=""nofollow noreferrer"">Bot Manager : Foundations</a></li> </ul> <hr /> <h2>tl; dr</h2> <p>A couple of relevant discussions:</p> <ul> <li><a href=""https://stackoverflow.com/questions/33225947/can-a-website-detect-when-you-are-using-selenium-with-chromedriver/62520191#62520191"">Can a website detect when you are using selenium with chromedriver?</a></li> <li><a href=""https://stackoverflow.com/questions/53039551/selenium-webdriver-modifying-navigator-webdriver-flag-to-prevent-selenium-detec/53040904#53040904"">Selenium webdriver: Modifying navigator.webdriver flag to prevent selenium detection</a></li> </ul>"			2020-06-13 20:03:49.043 UTC
62366934	javascript|python|html|css|websocket	Control Javascript/CSS elements with Python via Websocket?	"<p>I'm trying to control the Font Size property via the below python code. I've sent the data via Websocket and Python and JS seem to work perfectly. I'm now just trying to use that data to control the font size JS/CSS property but, I've no luck. Below are my code attempts. What am I doing wrong?</p>  <p>Thanks in Advance! : )</p>  <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-js lang-js prettyprint-override""><code>function WebSocketTest() {              if (""WebSocket"" in window) {                alert(""WebSocket is supported by your Browser!"");                 // Let us open a web socket                var ws = new WebSocket(""ws://localhost:8768/echo"");                 ws.onopen = function() {                    // Web Socket is connected, send data using send()                   ws.send(""Message to send"");                   alert(""Message is sent..."");                };                 ws.onmessage = function (evt) {                   var received_msg = evt.data;                   document.querySelector(""h1"").style.fontSize = evt.data;                   };                 ws.onclose = function() {                    // websocket is closed.                 };             } else {                 // The browser doesn't support WebSocket                alert(""WebSocket NOT supported by your Browser!"");             }          }</code></pre> <pre class=""snippet-code-css lang-css prettyprint-override""><code>/*! Generated by Font Squirrel (https://www.fontsquirrel.com) on June 3, 2020 */  @font-face {     font-family: 'spartanthin';     src: url('fonts/SpartanUnconv/Spartan-VariableFont_wght.ttf');     font-weight: 100 900;     font-style: normal;   }     h1 {  margin-bottom: 10px; font-family: 'spartanthin'; font-weight: var(--font-weight); font-size: 15px; text-align: left; position: relative;   }</code></pre> <pre class=""snippet-code-html lang-html prettyprint-override""><code>&lt;html&gt; &lt;body&gt;  &lt;h1&gt;Heading&lt;/h1&gt;  &lt;p&gt;A Black Fox Jumped Over A Fence&lt;/p&gt;  &lt;/body&gt; &lt;/html&gt;</code></pre> </div> </div> </p>  <p>Python:    </p>  <pre><code>import asyncio     import websockets      async def echo(websocket, path):         async for message in websocket:             await websocket.send(str(900)) #FontSize Value      start_server = websockets.serve(echo, ""localhost"", 8778)      asyncio.get_event_loop().run_until_complete(start_server)     asyncio.get_event_loop().run_forever() </code></pre>"	2020-06-14 00:04:56.923 UTC	62379143	"<p>that <code>async for message in websocket:</code> means your server only responds to messages from client and your client does not send any messages.</p>  <p>try it like so</p>  <pre><code>import asyncio import websockets  async def echo(websocket, path):     await websocket.send(str(900)) #FontSize Value  start_server = websockets.serve(echo, ""localhost"", 8778) asyncio.get_event_loop().run_until_complete(start_server) asyncio.get_event_loop().run_forever() </code></pre>  <p>also, change the JS part <code>WebSocket(""ws://localhost:8768/echo"");</code> to <code>WebSocket(""ws://localhost:8778"");</code> (so it corresponds with your server). And I'am not sure if you are calling that js function, so if u dont have <code>WebSocketTest();</code> anywhere, place it to script tag in html or directly to a js file after that <code>WebSocketTest</code> function definition.</p>"			2020-06-14 22:58:01.543 UTC
62382415	javascript|python|string|slice	How to use the Python string index in JavaScript?	"<p>In Python, you can do something like this:</p>  <pre><code>string = ""Hello World"" print(string[2:5]) # llo </code></pre>  <p>What is the equivalent of that in JavaScript?</p>"	2020-06-15 06:18:27.093 UTC	62382494	"<p>You can use both <code>slice</code> or <code>substring</code>:</p>  <pre class=""lang-js prettyprint-override""><code>const str = ""Hello world!"";  console.log(str.substring(2, 5)); console.log(str.slice(2, 5)); </code></pre>"			2020-06-15 06:24:44.283 UTC
62382415	javascript|python|string|slice	How to use the Python string index in JavaScript?	"<p>In Python, you can do something like this:</p>  <pre><code>string = ""Hello World"" print(string[2:5]) # llo </code></pre>  <p>What is the equivalent of that in JavaScript?</p>"	2020-06-15 06:18:27.093 UTC	62382428	"<p>Try using the <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/slice"" rel=""nofollow noreferrer""><code>slice</code></a> function:</p>  <pre><code>var str = ""Hello world!"";  var res = str.slice(2, 5);  console.log(res) // llo </code></pre>"			2020-06-15 06:19:55.377 UTC
62385261	javascript|python	Interpret Javascript web application using Python	"<p>Excuse me if my coding lingo is off, I'm familiar with coding but still what you might consider a beginner. Let me first explain why I'm doing this, followed by what I what I want from it to hopefully give you an idea of how to tackle this problem. </p>  <p>I'm a small streamer on dlive, to reward my viewers for watching I'm using a service called Incent, that rewards viewers with crypto for picking up dropcodes. I've noticed that people have a better experience when someone has typed out the code in the chat rather than it blinking on screen for 30 seconds only to disappear. It's not always someone sits in chat and types it out and sometimes there are spelling errors etc. I figured I wanted to automate  the process to make the integration of incent into my stream more seamless. I've coded my own chat bot using python and just wanted to push the code through that.The bot is working and able to send messages, so that's not my issue here. </p>  <p>Now the issue I have is how do I make python interpret what's happening on the drop url, making it take just the drop code. The incent drop url uses javascript so I'm not entirely sure how to make it work. Here's a url to the preview, so you can get an idea what happens when a drop comes <a href=""https://get.incent.com/overlays/v1/dropcodes/28mIAiGQNa7adlZAg6948N:15LCP76AiNGk6RmRAaKKep?preview"" rel=""nofollow noreferrer"">https://get.incent.com/overlays/v1/dropcodes/28mIAiGQNa7adlZAg6948N:15LCP76AiNGk6RmRAaKKep?preview</a></p>  <p>I'm not sure what route to go from here. I was playing around the idea with web scraping, but I'd rather it run in the background and not having to open up, say a selenium browser every time it needs to check for the code. A method like that I imagine would have to run continuously inside a while loop. Ideally I'd want python to just receive the code every time it drops. I thought I could use requests to accomplish this, but I have to admit that I don't know how to make that work. </p>  <p>Hopefully you now have an idea of what the problem is and I hope you can help me with this.  </p>"	2020-06-15 09:30:00.697 UTC	62386484	"<p>You could try something like this.</p>  <ul> <li>Open the page via headless browser</li> <li>wait until the code arrives (an element with <code>class^=""RewardCodestyles__Code""]</code> - meaning that starts with that class)</li> <li>evaluate the <code>innertText</code> or <code>textContent</code> of that element to retrieve the code</li> <li>sleep for some time (10 sec in this example) and start over</li> </ul>  <p>Sample code (with <a href=""https://pypi.org/project/pyppeteer/"" rel=""nofollow noreferrer"">pyppeteer</a>):</p>  <pre><code>import asyncio from pyppeteer import launch  URL = 'https://get.incent.com/overlays/v1/dropcodes/28mIAiGQNa7adlZAg6948N:15LCP76AiNGk6RmRAaKKep?preview'   async def main():     browser = await launch()     page = await browser.newPage()     await page.goto(URL)      # wait until the code arrives     await page.waitForFunction('''() =&gt; {         return !!document.body.querySelector('[class^=""RewardCodestyles__Code""]')     }     ''', {         'timeout': 60000     })      # then just extract the code     code = await page.evaluate('''() =&gt; {         return document.body.querySelector('[class^=""RewardCodestyles__Code""]').innerText     }''')      # do things with the code here     print(code)      await browser.close()   async def forever():     while True:         await main()         # sleep a bit here - for 10 secs.         await asyncio.sleep(10)  loop = asyncio.get_event_loop() loop.run_until_complete(forever()) </code></pre>  <p>An output from a sample run:</p>  <pre><code>TEST-C0D3 TEST-C0D3 TEST-C0D3 TEST-C0D3 TEST-C0D3 TEST-C0D3 </code></pre>"			2020-06-15 10:39:22.213 UTC
62404345	javascript|python|hmac	Javascript HMAC and Python HMAC not returning same hash	"<p>I currently have a Javascript code that looks like this</p>  <pre><code>var CryptoJS = require(""crypto-js"");  var key = ""bookbookbook""; var msg = ""2020-06-16 20:03:19"";  var signature = CryptoJS.HmacSHA1(msg, key); var checksum = CryptoJS.enc.Utf8.parse(signature);  console.log(""checksum: "" + CryptoJS.enc.Base64.stringify(checksum)); </code></pre>  <p>the checksum is ODNjOWY5NThmYzUxODNkYWM1MjhjZTY3ZTYzYmQxNjE1ZDRkZDQ5Zg==</p>  <p>I tried to convert it to Python</p>  <pre><code>import base64 import time import hmac import hashlib  key = ""bookbookbook"".encode(encoding='utf-8') msg = ""2020-06-16 20:03:19"".encode(encoding='utf-8')  digest = hmac.new(key, msg, hashlib.sha1).digest() checksum = base64.b64encode(digest).decode('utf-8')  print(checksum) </code></pre>  <p>but the checksum returned is this g8n5WPxRg9rFKM5n5jvRYV1N1J8=</p>  <p>How do I make it return the same?</p>"	2020-06-16 08:36:58.573 UTC	62440485	"<p>I found the solution. Although I do agree with Kaddath the Javascript sucks, I'm unable to alter it due to the fact that  1) it has been been used and running for several years and  2) I'm doing a port to Python, not fixing/updating the original code and 3) ""da bossman"" says just port not fix</p>  <p>Here's the Python code that produces the same output:</p>  <pre><code>import base64 import time import hmac import hashlib import binascii  key = ""bookbookbook"".encode(encoding='utf-8') msg = ""2020-06-16 20:03:19"".encode(encoding='utf-8')  digest = hmac.new(key, msg, hashlib.sha1).digest()  checksum = base64.b64encode(binascii.hexlify(bytearray(digest))) print(""checksum: "", checksum.decode('utf-8')) </code></pre>"			2020-06-18 00:33:25.463 UTC
62404345	javascript|python|hmac	Javascript HMAC and Python HMAC not returning same hash	"<p>I currently have a Javascript code that looks like this</p>  <pre><code>var CryptoJS = require(""crypto-js"");  var key = ""bookbookbook""; var msg = ""2020-06-16 20:03:19"";  var signature = CryptoJS.HmacSHA1(msg, key); var checksum = CryptoJS.enc.Utf8.parse(signature);  console.log(""checksum: "" + CryptoJS.enc.Base64.stringify(checksum)); </code></pre>  <p>the checksum is ODNjOWY5NThmYzUxODNkYWM1MjhjZTY3ZTYzYmQxNjE1ZDRkZDQ5Zg==</p>  <p>I tried to convert it to Python</p>  <pre><code>import base64 import time import hmac import hashlib  key = ""bookbookbook"".encode(encoding='utf-8') msg = ""2020-06-16 20:03:19"".encode(encoding='utf-8')  digest = hmac.new(key, msg, hashlib.sha1).digest() checksum = base64.b64encode(digest).decode('utf-8')  print(checksum) </code></pre>  <p>but the checksum returned is this g8n5WPxRg9rFKM5n5jvRYV1N1J8=</p>  <p>How do I make it return the same?</p>"	2020-06-16 08:36:58.573 UTC	62408489	"<p>this step is unnecessary and transforms your data, making the result wrong: <code>var checksum = CryptoJS.enc.Utf8.parse(signature);</code> (<code>Utf8.parse</code> is used to convert an UTF-8 string to wordsArray, but you already have a wordsArray as a result from <code>CryptoJS.HmacSHA1</code>'s call)</p>  <p>Your code should be: (took responsability to change variables names to something more proper)</p>  <pre><code>var CryptoJS = require(""crypto-js"");  var key = ""bookbookbook""; var msg = ""2020-06-16 20:03:19"";  var encrypted = CryptoJS.HmacSHA1(msg, key);  console.log(""encrypted in Base64: "" + CryptoJS.enc.Base64.stringify(encrypted)); </code></pre>  <p><a href=""https://jsfiddle.net/q758dwL0/"" rel=""nofollow noreferrer"">see it in action in a fiddle, you'll see same result as the python code</a></p>"			2020-06-16 12:27:13.663 UTC
62431352	javascript|python|dictionary|object-literal	Are JavaScript object literals the same thing as Python dictionaries?	<p>I’ve started using JavaScript recently and have noticed a resemblance between JavaScript object literals and python dictionaries. They are used in similar situations and have similar syntax. So are they basically the same thing but with different names?</p>	2020-06-17 14:26:34.273 UTC	62438633	"<p>They have the same structures; <code>key: value</code>. The key could be an array, integer, object etc. Same goes for the value.</p>  <p>Python:</p>  <pre><code>my_python_dictionary = {'name': 'John', age: 5, 123: 'a string'} one_of_the_values_of_my_python_dictionary = my_python_dictionary['name'] </code></pre>  <p>JavaScript:</p>  <pre><code>let myJavaScriptObjectLiteral = {""name"": ""John"", age: 5, 123: ""a string""} let oneOfTheValuesOfMyJavaScriptObjectLiteral = myJavaScriptObjectLiteral[""name""] </code></pre>"			2020-06-17 21:25:31.413 UTC
62431352	javascript|python|dictionary|object-literal	Are JavaScript object literals the same thing as Python dictionaries?	<p>I’ve started using JavaScript recently and have noticed a resemblance between JavaScript object literals and python dictionaries. They are used in similar situations and have similar syntax. So are they basically the same thing but with different names?</p>	2020-06-17 14:26:34.273 UTC	71422660	"<p>it is totally not the same thing. in JS, object literals is a object, so you can combine them with data and function, and you can call the method by dot, just like x.xxx(), and you can deconstruction it with the same symbol {...}, just like other object.</p> <p>but in python, dict is not a object, you can not use dot, and if you want deconstruction, you must use ** for it, by the way, you can deconstruction turple by *</p> <p>summarize: their is nothing just like object literals in python...</p>"			2022-03-10 10:33:51.75 UTC
62436893	javascript|python|post|authorization|fetch	Transpile python request in Javascript fetch?	"<p>I was wondering how to write this python request in javascript:</p>  <pre><code>url = ""something.something"" data = {""name"":""description""} auth = (""user"",""11111"")  x = requests.post(url, json=data, auth=auth) </code></pre>  <p>I have this so far:</p>  <pre><code>fetch(`something.something`, {       method: 'POST',       header: {         'Content-Type': 'application/json',         'Authorization': 'user:11111',       },       body: {         ""name"": ""description""       } }) </code></pre>  <p>But I have an 403. My guess is that the authorization is formatted incorrectly. </p>"	2020-06-17 19:26:35.493 UTC	62437007	"<pre><code>auth = (""user"",""11111"")  x = requests.post(url, json=data, auth=auth) </code></pre>  <p>This uses <code>HTTPBasicAuth</code> for authorization. </p>  <p><a href=""https://en.wikipedia.org/wiki/Basic_access_authentication"" rel=""nofollow noreferrer"">Basic HTTP Auth</a> requires the credentials to be passed in the <code>Authorization</code> header like this:</p>  <pre><code>Authorization: Basic &lt;base64(user:password)&gt; </code></pre>  <p>So the javascript example should look something like:</p>  <pre><code>fetch(`something.something`, {       method: 'POST',       header: {         'Content-Type': 'application/json',         'Authorization': 'Basic ' + btoa('user:11111'),       },       body: {         ""name"": ""description""       } }) </code></pre>"			2020-06-17 19:33:44.39 UTC
62448747	javascript|python|flask|socket.io	"How to create simple ""CHAT APP"" using Flask-SocketIO, Python, Javascript?"	"<p>How can I edit these codes so that when I click the button, the input texts will be appended to the empty unordered lists and be able to broadcast to other ""users""?</p>  <h1>HTML code</h1>  <pre><code>    &lt;body&gt;        &lt;ul&gt;        &lt;/ul&gt;        &lt;input type=""text"" id=""myMessage""&gt;        &lt;button&gt;Send&lt;/button&gt;     &lt;/body&gt; </code></pre>  <h1>Javascript Template code</h1>  <pre><code>document.addEventListener('DOMContentLoaded', () =&gt; {      var socket = io.connect(location.protocol + '//' + document.domain + ':' + location.port);      socket.on('connect', () =&gt; {      });      socket.on('announce chat', data =&gt; {      }); });  </code></pre>  <h1>Python code</h1>  <pre><code>app = Flask(__name__) app.config[""SECRET_KEY""] = os.getenv(""SECRET_KEY"") socketio = SocketIO(app)  @app.route(""/"") def index():     return render_template(""index.html"")  @socketio.on(""submit chat"") def chat(data): </code></pre>"	2020-06-18 11:16:36.007 UTC	62450353	"<p>Well you dont call your submit chat and you should format it like submit_chat not with white space in between.</p>  <p>On your socket.io script you dont have submit_chat called you do have announce chat...</p>  <pre><code> socket.on('submit_chat', data =&gt; {  }); </code></pre>"			2020-06-18 12:48:34.71 UTC
62463210	javascript|python|database	Communicating image data between Python and JavaScript	"<p>I'm currently working to send image data, in the form the byte arrays, from Python to JavaScript. I tried to use Redis as a means of in-memory, persistent communication channel, but it seems like bad design to force users to separately run <code>redis-cli</code> in the terminal. I tried to see if I can launch a Redis server using Python, but I could not find anything for that either. Is there an efficient, user-friendly way of setting up this type of communication? Would socket programming be a good way of setting up this communication channel as well?</p>"	2020-06-19 04:21:39.69 UTC	62566693	"<p>To answer my own question, I decided to go down the path of using websockets to achieve bidirectional communication between Python and JavaScript. Specifically, I set up a websocket using <a href=""https://github.com/tornadoweb/tornado"" rel=""nofollow noreferrer"">tornado</a>, setup Python and JavaScript cilents, and communicate via event-driven programming.</p> <p>I really wanted to steer away from calling <code>redis-cli</code> or any other bash commands via subprocess, and I think using websockets is an elegant and efficient solution.</p>"			2020-06-25 01:53:24.13 UTC
62463210	javascript|python|database	Communicating image data between Python and JavaScript	"<p>I'm currently working to send image data, in the form the byte arrays, from Python to JavaScript. I tried to use Redis as a means of in-memory, persistent communication channel, but it seems like bad design to force users to separately run <code>redis-cli</code> in the terminal. I tried to see if I can launch a Redis server using Python, but I could not find anything for that either. Is there an efficient, user-friendly way of setting up this type of communication? Would socket programming be a good way of setting up this communication channel as well?</p>"	2020-06-19 04:21:39.69 UTC	62463260	"<p>You can start redis-cli from your python code using <a href=""https://docs.python.org/3/library/subprocess.html"" rel=""nofollow noreferrer"">subprocess</a>. As per my understanding of your problem, you have to use subprocess.Popen(), to run a terminal command in a separate thread(in parallel). If want your python code to wait for the terminal command to finish, you can use subprocess.call()</p>"			2020-06-19 04:27:47.77 UTC
62472323	javascript|python|django	Is javascript date object compatible to python datetime object	"<p>For example in python, a date can be something like: 2020-06-19T11:32:16.548109Z, is there a way that i can use to convert this to a javascript Date object?</p>"	2020-06-19 14:22:51.51 UTC	62472594	"<p>If your date from python is serialized into an <a href=""https://www.iso.org/iso-8601-date-and-time-format.html"" rel=""nofollow noreferrer"">ISO 8601</a> date format, then you can simply pass the string into the <code>Date</code> constructor in JavaScript. The precision of the decimal fraction is non-standard, as it is up the the language to decide that.</p>  <pre class=""lang-js prettyprint-override""><code>// 2020-06-19T11:32:16.548Z new Date('2020-06-19T11:32:16.548109Z').toISOString() </code></pre>  <pre class=""lang-js prettyprint-override""><code>// Fri, 19 Jun 2020 11:32:16 GMT new Date('2020-06-19T11:32:16.548109Z').toUTCString() </code></pre>  <hr>  <p><strong>Note:</strong> In Python, the precision of timestamp epochs are to the nearest microsecond. JavaScript will just ignore those when deserializing, because it uses millisecond epochs.</p>  <p>From <a href=""https://en.wikipedia.org/wiki/ISO_8601#General_principles"" rel=""nofollow noreferrer"">Wikipedia</a>:</p>  <blockquote>   <p><em>If necessary for a particular application, the standard supports the addition of a decimal fraction to the smallest time value in the representation.</em></p> </blockquote>  <p>Check this article out, as it explains how different languages handle ISO 8601:</p>  <blockquote>   <p><strong><em><a href=""https://nbsoftsolutions.com/blog/iso-8601-and-nanosecond-precision-across-languages"" rel=""nofollow noreferrer"">ISO 8601 and Nanosecond Precision Across Languages</a></em></strong></p> </blockquote>"			2020-06-19 14:37:13.213 UTC
62480499	python|web-scraping|scrapy	"Need to get links from youtube video page, links are loading through javascript. Using python request module"	<p>I need to read links of videos from below links.</p>  <pre><code>https://www.youtube.com/channel/UCoq5eKuZhG7Dm-63YFUYQog/videos </code></pre>  <p>The links which are loading at the start are easy to get but those are loading after javascript are difficult. Can anyone help me to identify how to get those using Python request module. I do not understand what would be the Post request.</p>	2020-06-20 01:05:33.47 UTC	62480636	"<p>You can use the official API which is straightforward to search for the videos for a specific channel :</p>  <ul> <li>Go to <a href=""https://console.developers.google.com/"" rel=""nofollow noreferrer"">Google Developer Console</a>, search Youtube Data API / enable Youtube Data API v3</li> </ul>  <p><a href=""https://i.stack.imgur.com/nMieAm.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/nMieAm.png"" alt=""enable API screen""></a></p>  <ul> <li>Go to Credentials / Create Credentials / API key</li> </ul>  <p><a href=""https://i.stack.imgur.com/fTQw9.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/fTQw9.png"" alt=""API key screen""></a></p>  <ul> <li><p>install google api client for python :</p>  <pre><code>pip3 install --upgrade google-api-python-client </code></pre></li> </ul>  <p>Use the API key in the script below. This script fetch videos items from channel with id <code>UCoq5eKuZhG7Dm-63YFUYQog</code>, use <a href=""https://github.com/googleapis/google-api-python-client/blob/master/docs/pagination.md#pagination"" rel=""nofollow noreferrer"">pagination</a> to get all of them, and re-create the link from the videoId :</p>  <pre><code>import googleapiclient.discovery from urllib.parse import parse_qs, urlparse import re  #extract channel id from url url = 'https://www.youtube.com/channel/UCoq5eKuZhG7Dm-63YFUYQog/videos' channel_id = re.search('channel\/(.*)\/videos', url).group(1)  print(f'get all videos links from {channel_id}') youtube = googleapiclient.discovery.build(""youtube"", ""v3"", developerKey = ""YOUR_KEY"")  request = youtube.search().list(     channelId = channel_id,     part = ""id"",     maxResults = 50,     type = ""video"" ) response = request.execute()  videos_items = [] while request is not None:     response = request.execute()     videos_items += response[""items""]     request = youtube.search().list_next(request, response)  print(f""total: {len(videos_items)}"") print([      f'https://www.youtube.com/watch?v={t[""id""][""videoId""]}'     for t in videos_items ]) </code></pre>  <p>Output:</p>  <pre><code>get all videos links from UCoq5eKuZhG7Dm-63YFUYQog total: 80 [     'https://www.youtube.com/watch?v=uORsR14S7gw',      'https://www.youtube.com/watch?v=cARHPeZIUs4',      ............     'https://www.youtube.com/watch?v=CF2JO5a2EHE',      'https://www.youtube.com/watch?v=1yLesOxlHs0' ] </code></pre>  <p>If you need more details about the video, use <code>part = ""snippet""</code>, see <a href=""https://developers.google.com/youtube/v3/docs/search/list"" rel=""nofollow noreferrer"">this</a></p>"			2020-06-20 01:28:18.953 UTC
62480499	python|web-scraping|scrapy	"Need to get links from youtube video page, links are loading through javascript. Using python request module"	<p>I need to read links of videos from below links.</p>  <pre><code>https://www.youtube.com/channel/UCoq5eKuZhG7Dm-63YFUYQog/videos </code></pre>  <p>The links which are loading at the start are easy to get but those are loading after javascript are difficult. Can anyone help me to identify how to get those using Python request module. I do not understand what would be the Post request.</p>	2020-06-20 01:05:33.47 UTC	62480590	"<p>You can't use request smodule only. You would have to scrape website for those links with Selenium and / or BeautifulSoup. There is plenty of help here about those . </p>  <p>Here is a link to one of my answers which will give you a head start. </p>  <p><a href=""https://stackoverflow.com/a/62480188/13775029"">https://stackoverflow.com/a/62480188/13775029</a></p>  <p>You'll have to search for different div and possibly  tags .</p>"			2020-06-20 01:20:16.16 UTC
62501059	python|macos|macos-catalina|pywebview	"the javascript of pywebview python library for MacOS is working with a local implementation, but not from a remote web server"	"<p>I'm quite a noob at any development at all.  So I apologize ahead of time if I'm missing something very trivial.</p> <p>I implemented pywebview on ubuntu and on raspbian, and now I'm trying to do it on MacOS.  the test bed is Catalina 10.15.5.</p> <p>the code I'm running:</p> <pre><code>import os import webview     def get_ip(self):             raw_ip = os.popen('curl https://ipinfo.io/ip').read()             local_ip = raw_ip.replace('\n','')             response = {&quot;ip&quot;: local_ip}             return response window = webview.create_window('PyWebView Test', 'https://website.com/index.html', js_api=api, width=1024, height=768) </code></pre> <p>on this html page, I try to display the public IP of my local machine:</p> <p>so in the html I run is:</p> <pre><code>&lt;html&gt; &lt;body&gt; &lt;h2 class=&quot;text&quot;&gt;Current IP:&lt;/h2&gt; &lt;h2 class=&quot;text&quot; id=&quot;local_ip&quot;&gt;&lt;/h2&gt; &lt;/body&gt; &lt;script&gt;     $(function getipaddress(){     $(document).ready(function () {       pywebview.api.get_ip().then(function(response) {         window.local_ip = response.ip;         $('#local_ip').html(window.local_ip);       })      });     }); &lt;/script&gt; &lt;/html&gt; </code></pre> <p>when I run this code locally, that is</p> <pre><code>window = webview.create_window('PyWebView Test', './index.html', js_api=api, width=1024, height=768) </code></pre> <p>when index.html is in the same folder, I'm able to see the IP address displayed, which is what is desired.</p> <p>I scoured for a solution, I've found <a href=""https://stackoverflow.com/questions/2101611/javascript-alert-not-working-in-embedded-webview"">this</a> which seems close, but I don't know how to implement this fix.  but unable to find what I need, please help!</p>"	2020-06-21 15:59:03.547 UTC	63327743	"<p>within the JS on the html side, added an on mouse movement function and worked, which was acceptable for my use case.</p>"			2020-08-09 14:51:53.323 UTC
62528941	python|flask	Decode javascript JSON.stringify to dict in Flask Python	"<p>I converted an array <code>[5,10,1]</code> in javascript to store it in the cookies.</p> <pre><code>JSON.stringify(stored_list)  </code></pre> <p>In my cookies stored as</p> <pre><code>[%225%22%2C%2210%22%2C%221%22] </code></pre> <p>How can I read this now in Flask Python as a dict for example? Because the following code does not work.</p> <pre><code>cookies = request.cookies.get('cart_ids') print(json.loads(str(cookies))) </code></pre>"	2020-06-23 06:54:12.31 UTC	62529141	"<p>When you use the JSON.stringify, it &quot;urlencodes&quot; the content. To decode this in python you can use <code>urllib</code>:</p> <pre class=""lang-py prettyprint-override""><code>import json from urllib.parse import unquote  encoded_array = &quot;[%225%22%2C%2210%22%2C%221%22]&quot; decoded_array = unquote(encoded_array) assert decoded_array == '[&quot;5&quot;,&quot;10&quot;,&quot;1&quot;]'  array = json.loads(decoded_array) print(array) # ['5', '10', '1'] # At this point it is a list of strings, that you can easily parse to integers using map(int, array). </code></pre>"			2020-06-23 07:06:31.54 UTC
62556397	python|web-scraping|beautifulsoup|powerbi	How to extract JSON/Table from a javascript variable in python	"<p>I have been trying to <strong>scrape</strong> <a href=""https://support.riverbed.com/content/support/eos_eoa.html"" rel=""nofollow noreferrer"">https://support.riverbed.com/content/support/eos_eoa.html</a> which contains a paginated table generated in javascript.</p> <p>I am currently using beautiful soup to capture the script element. However the variable EOL_ENTRIES hold the data I need but I am unable to parse it. Any tips on how to successfully <strong>scrape</strong> the data.</p> <p>The ultimate aim is to actually put this data in PowerBI, However PBI is only able to <strong>scrape</strong> the first page.</p> <p>Any help is much appreciated.</p> <pre><code>import re from bs4 import BeautifulSoup  http = httplib2.Http() url='https://support.riverbed.com/content/support/eos_eoa.html' resp, data = http.request(url) html = data.decode(&quot;UTF-8&quot;) soup = BeautifulSoup(html, 'html5lib')  #the 37th script which contains the data script_with_data = soup.find_all('script')[37] </code></pre> <p>The Sample output looks like</p> <pre><code>&lt;script type=&quot;text/javascript&quot;&gt;          var EOL_ENTRIES = [                                                                                                                                                                                                                    {                     productFamily: 'SteelCentral',                     shortName: 'SteelCentral AppInternals Collector v9',                     link: 'https:\/\/support.riverbed.com\/content\/support\/eos_eoa\/steelcentral-cascade-opnet\/SteelCentral-AppInternals-Console-v9-and-AppInternals-Collector-v9-BrowserMetrix-OnPremise.html',                     linkOverride: 'https:\/\/support.riverbed.com\/content\/support\/eos_eoa\/steelcentral-cascade-opnet\/SteelCentral-AppInternals-Console-v9-and-AppInternals-Collector-v9-BrowserMetrix-OnPremise.html',                     sku: 'AIXCOL',                     skuOverride: '',                     description: 'SteelCentral AppInternals Collector v9',                     limitedAvailability: '',                     limitedAvailabilityFormatted: '',                     endOfAvailability: 'Wed Jul 03 00:00:00 PDT 2019',                     endOfAvailabilityFormatted: 'Wed Jul 03 00:00:00 PDT 2019',                     endOfSupportFeatures: 'Sat Aug 31 00:00:00 PDT 2019',                     endOfSupportFeaturesFormatted: 'Sat Aug 31 00:00:00 PDT 2019',                     endOfSupportMaintenance: 'Sat Aug 31 00:00:00 PDT 2019',                     endOfSupportMaintenanceFormatted: 'Sat Aug 31 00:00:00 PDT 2019'} ];                               </code></pre>"	2020-06-24 13:36:00.967 UTC	62559506	"<p>If you are trying to get the data into Power BI, I would take a different approach: extract the data and load it into a dataframe, which can then be exported to Excel/CSV which PBI can read.</p> <p>So I would try this:</p> <pre><code>import pandas as pd     prods = str(script_with_data).split('var EOL_ENTRIES = [')[1].split('}')[0].replace('\t','').replace('\n','').split(',')     rows = []     for prod in prods:         row = []         row.extend([prod.split(': ')[0],prod.split(': ')[1].replace(&quot;'&quot;,&quot;&quot;)])         rows.append(row)          pd.DataFrame(rows) </code></pre> <p>and from here use standard panda methods to export the dataframe.</p>"			2020-06-24 16:12:13.397 UTC
62556397	python|web-scraping|beautifulsoup|powerbi	How to extract JSON/Table from a javascript variable in python	"<p>I have been trying to <strong>scrape</strong> <a href=""https://support.riverbed.com/content/support/eos_eoa.html"" rel=""nofollow noreferrer"">https://support.riverbed.com/content/support/eos_eoa.html</a> which contains a paginated table generated in javascript.</p> <p>I am currently using beautiful soup to capture the script element. However the variable EOL_ENTRIES hold the data I need but I am unable to parse it. Any tips on how to successfully <strong>scrape</strong> the data.</p> <p>The ultimate aim is to actually put this data in PowerBI, However PBI is only able to <strong>scrape</strong> the first page.</p> <p>Any help is much appreciated.</p> <pre><code>import re from bs4 import BeautifulSoup  http = httplib2.Http() url='https://support.riverbed.com/content/support/eos_eoa.html' resp, data = http.request(url) html = data.decode(&quot;UTF-8&quot;) soup = BeautifulSoup(html, 'html5lib')  #the 37th script which contains the data script_with_data = soup.find_all('script')[37] </code></pre> <p>The Sample output looks like</p> <pre><code>&lt;script type=&quot;text/javascript&quot;&gt;          var EOL_ENTRIES = [                                                                                                                                                                                                                    {                     productFamily: 'SteelCentral',                     shortName: 'SteelCentral AppInternals Collector v9',                     link: 'https:\/\/support.riverbed.com\/content\/support\/eos_eoa\/steelcentral-cascade-opnet\/SteelCentral-AppInternals-Console-v9-and-AppInternals-Collector-v9-BrowserMetrix-OnPremise.html',                     linkOverride: 'https:\/\/support.riverbed.com\/content\/support\/eos_eoa\/steelcentral-cascade-opnet\/SteelCentral-AppInternals-Console-v9-and-AppInternals-Collector-v9-BrowserMetrix-OnPremise.html',                     sku: 'AIXCOL',                     skuOverride: '',                     description: 'SteelCentral AppInternals Collector v9',                     limitedAvailability: '',                     limitedAvailabilityFormatted: '',                     endOfAvailability: 'Wed Jul 03 00:00:00 PDT 2019',                     endOfAvailabilityFormatted: 'Wed Jul 03 00:00:00 PDT 2019',                     endOfSupportFeatures: 'Sat Aug 31 00:00:00 PDT 2019',                     endOfSupportFeaturesFormatted: 'Sat Aug 31 00:00:00 PDT 2019',                     endOfSupportMaintenance: 'Sat Aug 31 00:00:00 PDT 2019',                     endOfSupportMaintenanceFormatted: 'Sat Aug 31 00:00:00 PDT 2019'} ];                               </code></pre>"	2020-06-24 13:36:00.967 UTC	62558989	"<p>The data is in JavaScript, so you need some preprocessing to be able to load it with <code>json</code> module:</p> <pre><code>import re import json import requests from bs4 import BeautifulSoup   url = 'https://support.riverbed.com/content/support/eos_eoa.html' soup = BeautifulSoup(requests.get(url).content, 'html5lib')  # select &lt;script&gt; tag of interest s = soup.find(lambda t: t.name == 'script' and 'var EOL_ENTRIES' in t.text)  # extract string from this script tag t = re.search(r'var EOL_ENTRIES = (\[.*\]);', s.text, flags=re.S)[1]  # preprocess the string t = t.replace(&quot;'&quot;, '&quot;') t = re.sub(r'^(\s*)(.*?):', r'\1&quot;\2&quot;:', t, flags=re.M)  # decode string to Python data data = json.loads(t)  # uncomment this to print all data: # print(json.dumps(data, indent=4))  # print some data to screen: for product in data:     print('{:&lt;40} {:&lt;40} {}'.format(product['sku'], product['productFamily'], product['shortName'])) </code></pre> <p>Prints:</p> <pre><code>AIXCOL                                   SteelCentral                             SteelCentral AppInternals Collector v9 AIXCOL-AN                                SteelCentral                             SteelCentral AppInternals Collector v9 AIXCOL-LP                                SteelCentral                             SteelCentral AppInternals Collector v9 AIXCOL-LP-MODEL                          SteelCentral                             SteelCentral AppInternals Collector v9 AIXCOL-LS                                SteelCentral                             SteelCentral AppInternals Collector v9 AIXCOL-LS-MODEL                          SteelCentral                             SteelCentral AppInternals Collector v9 AIXCOL-SITE                              SteelCentral                             SteelCentral AppInternals Collector v9 AIXCOL-SUB-LIC                           SteelCentral                             SteelCentral AppInternals Collector v9 PANCOL                                   SteelCentral                             SteelCentral AppInternals Collector v9   ... and so on. </code></pre>"			2020-06-24 15:46:43.033 UTC
62565087	javascript|python|arrays|slice	How can I mimic Python's step argument in JavaScript?	"<p>In Python, I can overwrite elements in an array using slicing syntax and passing a step argument. For example:</p> <pre><code>alist = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10] alist[::2] = [&quot;foo&quot;, &quot;foo&quot;, &quot;foo&quot;, &quot;foo&quot;, &quot;foo&quot;] print(alist) # ['foo', 2, 'foo', 4, 'foo', 6, 'foo', 8, 'foo', 10] </code></pre> <p>Is there a way to mimic this behavior in JavaScript?</p>"	2020-06-24 22:37:19.323 UTC	62565630	"<p>Let me know  if this works for you:</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-js lang-js prettyprint-override""><code>function range(from, to){   let f = from, t = to;   if(t === undefined){     t = from; f = 0;   }   for(var i=f,r=[]; i&lt;=t; i++){     r.push(i);   }   return r; } function step(a, num, b){   const r = b.slice();   for(let i=num-1,l=a.length; i&lt;l; i+=num){     if(!a.hasOwnProperty(i)){       break;     }     r.splice(i, 0, a[i]);   }   return r; } const aList = range(1, 10), bList = ['foo', 'bar', 'foo', 'bar', 'foo', 'bar']; console.log(step(aList, 2, bList)); console.log(step(aList, 3, bList));</code></pre> </div> </div> </p>"			2020-06-24 23:33:47.253 UTC
62565087	javascript|python|arrays|slice	How can I mimic Python's step argument in JavaScript?	"<p>In Python, I can overwrite elements in an array using slicing syntax and passing a step argument. For example:</p> <pre><code>alist = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10] alist[::2] = [&quot;foo&quot;, &quot;foo&quot;, &quot;foo&quot;, &quot;foo&quot;, &quot;foo&quot;] print(alist) # ['foo', 2, 'foo', 4, 'foo', 6, 'foo', 8, 'foo', 10] </code></pre> <p>Is there a way to mimic this behavior in JavaScript?</p>"	2020-06-24 22:37:19.323 UTC	62565202	"<p>You can use <code>map</code> and return an element from the second list on every even iteration.</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-js lang-js prettyprint-override""><code>const alist = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]; const blist = [""foo"", ""foo"", ""foo"", ""foo"", ""foo""]; const clist = alist.map((e,i) =&gt; i%2==0?blist[i/2]:e);  console.log (clist)</code></pre> </div> </div> </p>"			2020-06-24 22:46:37.25 UTC
62565087	javascript|python|arrays|slice	How can I mimic Python's step argument in JavaScript?	"<p>In Python, I can overwrite elements in an array using slicing syntax and passing a step argument. For example:</p> <pre><code>alist = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10] alist[::2] = [&quot;foo&quot;, &quot;foo&quot;, &quot;foo&quot;, &quot;foo&quot;, &quot;foo&quot;] print(alist) # ['foo', 2, 'foo', 4, 'foo', 6, 'foo', 8, 'foo', 10] </code></pre> <p>Is there a way to mimic this behavior in JavaScript?</p>"	2020-06-24 22:37:19.323 UTC	62565147	"<p>You can implement such a function yourself with a <code>for</code> loop.</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-js lang-js prettyprint-override""><code>var alist = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10] var alist2 = [""foo"", ""foo"", ""foo"", ""foo"", ""foo""] function overwrite(arr, arr2, step){   for(let i = 0, j = 0; i &lt; arr.length &amp;&amp; j &lt; arr2.length; i += step, j++){     arr[i] = arr2[j];   } } overwrite(alist, alist2, 2); console.log(alist);</code></pre> </div> </div> </p>"			2020-06-24 22:42:09.19 UTC
62601392	javascript|python|json	Python to Javascript via JSON	"<p>I'm trying to send int data from Python to Javascript. I'd like to use input from python to control elements in Javascript. I'm just having trouble getting data sent from Python's JSON to Javascript. Below are my attempts with little luck, Python code works excellent, how to I get Javascript to read and turn that data into a variable?</p> <p>Thanks in Advance! :)</p> <pre><code>import json          x = 1          while True:              x = int(input())              if 10 &lt;= x &lt;= 900:             x += 100                  print(x)                  json.dumps(x) </code></pre> <p>Javascript:</p> <pre><code>&lt;script type = &quot;text/javascript&quot;&gt;    document.getElementById(&quot;page&quot;).style.fontWeight = json.dumps(x);      &lt;/script&gt; </code></pre>"	2020-06-26 19:11:42.667 UTC	62601722	<p>I'm assuming you're new to programming since you seem to have an oversimplified understanding of making two units of code communicate. The proper way to do that depends greatly on the context in which the code is executed.</p> <p>From the snippets you included one can guess you want to run Python server-side and JavaScript client-side in the browser. For this setup you probably want to set up a web server or web socket in Python and query it or connect to it with your JS script.</p>			2020-06-26 19:36:02.357 UTC
62602424	python-3.x|web-scraping|beautifulsoup	Python webscraping: HTML instead of Javascript function	"<p>i am trying to scrape the 4 strings within the red box with python from this URL: <a href=""https://crypto.post.at/CS2/6XFSGJ"" rel=""nofollow noreferrer"">https://crypto.post.at/CS2/6XFSGJ</a></p> <p><a href=""https://i.stack.imgur.com/v9SZT.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/v9SZT.png"" alt=""enter image description here"" /></a></p> <p>When inspecting the page i can find the values in the html body. When i try to get the html with Beautiful Soup or urllib.request i get the following</p> <pre class=""lang-html prettyprint-override""><code>&lt;!doctype html&gt; &lt;html lang=&quot;en&quot;&gt;  &lt;head&gt;     &lt;meta charset=&quot;utf-8&quot; /&gt;     &lt;link rel=&quot;icon&quot; href=&quot;/favicon.ico&quot; /&gt;     &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width,initial-scale=1&quot; /&gt;     &lt;meta name=&quot;theme-color&quot; content=&quot;#000000&quot; /&gt;     &lt;meta name=&quot;description&quot; content=&quot;A physcial-digital stamp collectible for post.at - by capacity.at&quot; /&gt;     &lt;link rel=&quot;apple-touch-icon&quot; href=&quot;/logo192.png&quot; /&gt;     &lt;link rel=&quot;manifest&quot; href=&quot;/manifest.json&quot; /&gt;     &lt;title&gt;Crypto stamp 2&lt;/title&gt;     &lt;script type=&quot;text/javascript&quot;&gt;console.log = () =&gt; { }, console.warn = () =&gt; { }, console.error = () =&gt; { }&lt;/script&gt;     &lt;link href=&quot;/static/css/7.b1cfa592.chunk.css&quot; rel=&quot;stylesheet&quot;&gt;     &lt;link href=&quot;/static/css/main.86d5d71a.chunk.css&quot; rel=&quot;stylesheet&quot;&gt; &lt;/head&gt;  &lt;body&gt;&lt;noscript&gt;You need to enable JavaScript to run this dApp.&lt;/noscript&gt;     &lt;div id=&quot;root&quot;&gt;&lt;/div&gt;     &lt;script&gt;!function (e) { function t(t) { for (var n, a, f = t[0], u = t[1], i = t[2], d = 0, s = []; d &lt; f.length; d++)a = f[d], Object.prototype.hasOwnProperty.call(o, a) &amp;&amp; o[a] &amp;&amp; s.push(o[a][0]), o[a] = 0; for (n in u) Object.prototype.hasOwnProperty.call(u, n) &amp;&amp; (e[n] = u[n]); for (l &amp;&amp; l(t); s.length;)s.shift()(); return c.push.apply(c, i || []), r() } function r() { for (var e, t = 0; t &lt; c.length; t++) { for (var r = c[t], n = !0, a = 1; a &lt; r.length; a++) { var u = r[a]; 0 !== o[u] &amp;&amp; (n = !1) } n &amp;&amp; (c.splice(t--, 1), e = f(f.s = r[0])) } return e } var n = {}, a = { 6: 0 }, o = { 6: 0 }, c = []; function f(t) { if (n[t]) return n[t].exports; var r = n[t] = { i: t, l: !1, exports: {} }; return e[t].call(r.exports, r, r.exports, f), r.l = !0, r.exports } f.e = function (e) { var t = []; a[e] ? t.push(a[e]) : 0 !== a[e] &amp;&amp; { 0: 1, 1: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 16: 1, 17: 1, 18: 1, 20: 1, 21: 1, 22: 1, 23: 1 }[e] &amp;&amp; t.push(a[e] = new Promise((function (t, r) { for (var n = &quot;static/css/&quot; + ({}[e] || e) + &quot;.&quot; + { 0: &quot;7429d2cd&quot;, 1: &quot;a61c0bf9&quot;, 2: &quot;31d6cfe0&quot;, 3: &quot;31d6cfe0&quot;, 4: &quot;31d6cfe0&quot;, 8: &quot;aeac5f21&quot;, 9: &quot;6ad86d01&quot;, 10: &quot;3bb5f1a4&quot;, 11: &quot;9617c16b&quot;, 12: &quot;f996d814&quot;, 13: &quot;0033f4ad&quot;, 14: &quot;52eb52b6&quot;, 15: &quot;31d6cfe0&quot;, 16: &quot;7d672536&quot;, 17: &quot;f6d29a98&quot;, 18: &quot;543b35a5&quot;, 19: &quot;31d6cfe0&quot;, 20: &quot;9aea3428&quot;, 21: &quot;9aea3428&quot;, 22: &quot;9b3f5997&quot;, 23: &quot;e520eab9&quot;, 24: &quot;31d6cfe0&quot;, 25: &quot;31d6cfe0&quot;, 26: &quot;31d6cfe0&quot;, 27: &quot;31d6cfe0&quot;, 28: &quot;31d6cfe0&quot; }[e] + &quot;.chunk.css&quot;, o = f.p + n, c = document.getElementsByTagName(&quot;link&quot;), u = 0; u &lt; c.length; u++) { var i = (l = c[u]).getAttribute(&quot;data-href&quot;) || l.getAttribute(&quot;href&quot;); if (&quot;stylesheet&quot; === l.rel &amp;&amp; (i === n || i === o)) return t() } var d = document.getElementsByTagName(&quot;style&quot;); for (u = 0; u &lt; d.length; u++) { var l; if ((i = (l = d[u]).getAttribute(&quot;data-href&quot;)) === n || i === o) return t() } var s = document.createElement(&quot;link&quot;); s.rel = &quot;stylesheet&quot;, s.type = &quot;text/css&quot;, s.onload = t, s.onerror = function (t) { var n = t &amp;&amp; t.target &amp;&amp; t.target.src || o, c = new Error(&quot;Loading CSS chunk &quot; + e + &quot; failed.\\n(&quot; + n + &quot;)&quot;); c.code = &quot;CSS_CHUNK_LOAD_FAILED&quot;, c.request = n, delete a[e], s.parentNode.removeChild(s), r(c) }, s.href = o, document.getElementsByTagName(&quot;head&quot;)[0].appendChild(s) })).then((function () { a[e] = 0 }))); var r = o[e]; if (0 !== r) if (r) t.push(r[2]); else { var n = new Promise((function (t, n) { r = o[e] = [t, n] })); t.push(r[2] = n); var c, u = document.createElement(&quot;script&quot;); u.charset = &quot;utf-8&quot;, u.timeout = 120, f.nc &amp;&amp; u.setAttribute(&quot;nonce&quot;, f.nc), u.src = function (e) { return f.p + &quot;static/js/&quot; + ({}[e] || e) + &quot;.&quot; + { 0: &quot;37cb5cd9&quot;, 1: &quot;27668167&quot;, 2: &quot;1935e8bb&quot;, 3: &quot;18c6f29c&quot;, 4: &quot;bb39ce13&quot;, 8: &quot;cabd6ab7&quot;, 9: &quot;8952c698&quot;, 10: &quot;2b03fd70&quot;, 11: &quot;2d167b3a&quot;, 12: &quot;9e30f254&quot;, 13: &quot;46916483&quot;, 14: &quot;2e15bf0e&quot;, 15: &quot;76d9f1c6&quot;, 16: &quot;a529361e&quot;, 17: &quot;f84f46d1&quot;, 18: &quot;685d52a1&quot;, 19: &quot;24283f6b&quot;, 20: &quot;d2e3f4f7&quot;, 21: &quot;35128c16&quot;, 22: &quot;13b7793f&quot;, 23: &quot;97055897&quot;, 24: &quot;69ccb34b&quot;, 25: &quot;690ede0a&quot;, 26: &quot;329c9c33&quot;, 27: &quot;2a536f40&quot;, 28: &quot;65db6d43&quot; }[e] + &quot;.chunk.js&quot; }(e); var i = new Error; c = function (t) { u.onerror = u.onload = null, clearTimeout(d); var r = o[e]; if (0 !== r) { if (r) { var n = t &amp;&amp; (&quot;load&quot; === t.type ? &quot;missing&quot; : t.type), a = t &amp;&amp; t.target &amp;&amp; t.target.src; i.message = &quot;Loading chunk &quot; + e + &quot; failed.\\n(&quot; + n + &quot;: &quot; + a + &quot;)&quot;, i.name = &quot;ChunkLoadError&quot;, i.type = n, i.request = a, r[1](i) } o[e] = void 0 } }; var d = setTimeout((function () { c({ type: &quot;timeout&quot;, target: u }) }), 12e4); u.onerror = u.onload = c, document.head.appendChild(u) } return Promise.all(t) }, f.m = e, f.c = n, f.d = function (e, t, r) { f.o(e, t) || Object.defineProperty(e, t, { enumerable: !0, get: r }) }, f.r = function (e) { &quot;undefined&quot; != typeof Symbol &amp;&amp; Symbol.toStringTag &amp;&amp; Object.defineProperty(e, Symbol.toStringTag, { value: &quot;Module&quot; }), Object.defineProperty(e, &quot;__esModule&quot;, { value: !0 }) }, f.t = function (e, t) { if (1 &amp; t &amp;&amp; (e = f(e)), 8 &amp; t) return e; if (4 &amp; t &amp;&amp; &quot;object&quot; == typeof e &amp;&amp; e &amp;&amp; e.__esModule) return e; var r = Object.create(null); if (f.r(r), Object.defineProperty(r, &quot;default&quot;, { enumerable: !0, value: e }), 2 &amp; t &amp;&amp; &quot;string&quot; != typeof e) for (var n in e) f.d(r, n, function (t) { return e[t] }.bind(null, n)); return r }, f.n = function (e) { var t = e &amp;&amp; e.__esModule ? function () { return e.default } : function () { return e }; return f.d(t, &quot;a&quot;, t), t }, f.o = function (e, t) { return Object.prototype.hasOwnProperty.call(e, t) }, f.p = &quot;/&quot;, f.oe = function (e) { throw console.error(e), e }; var u = this[&quot;webpackJsonpcreate-capacity-app&quot;] = this[&quot;webpackJsonpcreate-capacity-app&quot;] || [], i = u.push.bind(u); u.push = t, u = u.slice(); for (var d = 0; d &lt; u.length; d++)t(u[d]); var l = i; r() }([])&lt;/script&gt;     &lt;script src=&quot;/static/js/7.12875f3a.chunk.js&quot;&gt;&lt;/script&gt;     &lt;script src=&quot;/static/js/main.8d5a6bd9.chunk.js&quot;&gt;&lt;/script&gt; &lt;/body&gt;  &lt;/html&gt; </code></pre> <p>Here the values in the HTML body are missing and there is just the JavaScript script.</p> <p>How can i scrape this values?</p> <p>Thanks</p>"	2020-06-26 20:30:36.81 UTC	62603769	"<p>The data is loaded dynamically via JavaScript. You only have to compute <code>token ID</code> from the <code>Stamp Code</code>:</p> <pre><code>import json import requests from bs4 import BeautifulSoup   alphabet = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz' base_count = len(alphabet) def base58_decode(s):     &quot;&quot;&quot; Decodes the base58-encoded string s into an integer &quot;&quot;&quot;     decoded = 0     multi = 1     s = s[::-1]     for char in s:         decoded += multi * alphabet.index(char)         multi = multi * base_count      return decoded  def get_token_id(stamp_id):     n = (base58_decode(stamp_id) &amp; 0xffffff)     return n-150000 if n &gt;= 150000 else n  url = 'https://crypto.post.at/CS2/6XFSGJ' api_url = 'https://crypto.post.at/api/asset/CS2/{}'.format(get_token_id(url.rsplit('/', maxsplit=1)[-1])) data = requests.get(api_url).json()  print(json.dumps(data, indent=4))  print('-' * 80)  print('contract_symbol:', data['contract_symbol']) print('type:', data['type']) print('asset_id:', data['asset_id']) print('color:', data['color']) </code></pre> <p>Prints:</p> <pre><code>{     &quot;asset_id&quot;: &quot;6XFSGJ&quot;,     &quot;color&quot;: &quot;black&quot;,     &quot;contract_address&quot;: &quot;0xa7f87E8D193E29bf1eD050Fdd511B79Fe0264d8B&quot;,     &quot;contract_ensname&quot;: &quot;cs2.cryptostamp.eth&quot;,     &quot;contract_name&quot;: &quot;Crypto stamp Edition 2&quot;,     &quot;contract_symbol&quot;: &quot;CS2&quot;,     &quot;image_path&quot;: &quot;/CS2/image/llama-black&quot;,     &quot;minted&quot;: false,     &quot;network_id&quot;: &quot;1&quot;,     &quot;network_name&quot;: &quot;main&quot;,     &quot;owner&quot;: &quot;0x76192e78957BD40C01321b7aF61C30D5f214580b&quot;,     &quot;owner_ens&quot;: null,     &quot;sales_source_name&quot;: &quot;Physical Sale&quot;,     &quot;sales_source_ocs&quot;: false,     &quot;sales_source_presale&quot;: false,     &quot;shop_deliverable&quot;: false,     &quot;shop_delivery_status&quot;: 0,     &quot;shop_delivery_status_name&quot;: &quot;None&quot;,     &quot;token_id&quot;: 66619,     &quot;total_number_issued&quot;: 240000,     &quot;type&quot;: &quot;llama&quot;,     &quot;uri&quot;: &quot;https://crypto.post.at/CS2/meta/66619&quot;,     &quot;used_in_upgrade&quot;: false } -------------------------------------------------------------------------------- contract_symbol: CS2 type: llama asset_id: 6XFSGJ color: black </code></pre>"			2020-06-26 22:38:40.42 UTC
62605237	javascript|python|angular|encryption|obfuscation	Translating Javascript Function to Python	"<p>I am far from knowing javascript however am attempting to solve a decode function and translate it to python. Within the sites code it generates a string of length 100 characters which gets plugged into a function called decode as shown here and returns a string of 96 characters in length. I've already started trying to translate this into a usable python function.</p> <pre class=""lang-js prettyprint-override""><code>decode.call(undefined, &quot;TaYWuqsVvO1zjYWnzcZaSyOucBGnvoz7Jiq2RLZBvTk35uaNHlYrwFb8V2fqQqBjVOGPyuu4WD1dMXeX1Si1GqVIWJYXey75PQMS&quot;);  function decode(message) {   /** @type {number} */   var offset = 71 + 28 * 75 + 14 + 38;   if (this.angular.isDate(offset)) {     console.log(&quot;Offset derived as: {&quot;, offset, &quot;}&quot;);   }   return _.replace(message, /./g, function(char, increment) {     return String.fromCharCode((char.charCodeAt(0) * increment + offset) % 77 + 48);   }); } ; </code></pre> <p>Javascript is not my native language so any help and explaining of the different function calls would help a lot. I understand already that in this case our offset is an integer value of 2223. And then we take our message and replace its content. However I am a bit confused by the increment function and the <code>/./g</code> portion.</p>"	2020-06-27 02:33:14.2 UTC	62605357	"<p>It's not clear in your code what <code>this.angular</code> is all about, but it seems like you are most interested in the string substitution. In python you can do something like:</p> <pre><code>def decode(s):     offset = 71 + 28 * 75 + 14 + 38;     return &quot;&quot;.join(chr((ord(a) * increment + offset)  % 77 + 48) for increment, a in enumerate(s) )  p = decode(&quot;TaYWuqsVvO1zjYWnzcZaSyOucBGnvoz7Jiq2RLZBvTk35uaNHlYrwFb8V2fqQqBjVOGPyuu4WD1dMXeX1Si1GqVIWJYXey75PQMS&quot;) </code></pre> <p>This makes <code>p</code> equal to:</p> <pre><code>'s:&gt;Dy@pe:8BGNueGAhvnQsRohGqRldO1`sk^@NFG=^BK&lt;CoUj^cMB4^sPtfS|N1^K[hUhgBoAJzEss&gt;&lt;l&gt;eeI_wKGOusZ11D_vs]' </code></pre> <p>which is the same value I get in javascript.</p> <p><code>chr()</code> and <code>ord()</code> are roughly the same as <code>String.fromCharCode()</code> and <code>char.charCodeAt()</code>. You can get both the <code>increment</code> and value using <code>enumerate</code>. After that the rest is just math.</p>"			2020-06-27 02:59:21.207 UTC
62607340	javascript|python|jquery|base64|odoo	Decode base64 string sent by javascript to python	"<p>I'm trying to decode a string in Python sent by jQuery. I don't receive any error, but if I try to open the file, I get encoding error.</p> <p>I'm trying to decode to save in ir.attachment in Odoo, but I think that's not the problem.</p> <p>Currently, I remove 'data:image/jpeg;' at the start of the string sent by js. I'm trying the following code:</p> <pre><code>base64.b64decode('iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAACXBIWXMAAAsSAAALEgHS3X78AAAB30lEQVRYhe1XMW6DQBCcQ24j+wdxSxVShc7OC+ImtW0JRJHCyU+IUiGQjF8Q5wXBHV1IE1rnB/YLiC5anNPpMBBwXMQjnQTL6mb27nb3YFmW4ZjQjsr+7wWcBHB0VMaUmX0A9wAMGl369AkgARDqWbxsXUDKzB4AF8C4wP+cBvdbWrYzBPAKYBH43qQOsWU7EYDBbgtSZvJI13vIRayl97FlO24N8pCT82cNP5FHwlLXFcAxs2yndBVI6C7IfAXCAvIFgCmAaxr8eQVgUzD/fJ8I+jYTbewDV3zp3yTfLYCRnsVRSTT5GZBxGfheoiCfy44anXYZkzLyEkSW7RgCuaEi5+BZMJRsqxZSrCuIyM+XEhqllYhW8ptE8LnO9jmpKmGisFXFu+R3AeAJwJ1g25YJaAIe8YNCxC1l0FQOUCXAUNgqI/A9l9JXxA2vHYHvhfI8GtV3EaOmy0BlWRQxDXxPeRA1xQkdpMysVddLRDyqIs/RKWg+bsrMTdN0rNKgOnoWJykzX2ifcvAUek6ZuaIyndd+g+pGT89iuX78Cnk7nhCJ3A8Gedc6FL6zQM/iDUW2PSSZCrs05FsBoK9IISVSZrayBcofkwpXsoiuZUVtuZmAv8TpWn4ScFwBAL4AbIiR9pT9cFoAAAAASUVORK5CYII=') </code></pre>"	2020-06-27 07:48:56.58 UTC	62607746	"<p>It works very well for me:</p> <pre><code>import base64   elem = base64.b64decode('iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAACXBIWXMAAAsSAAALEgHS3X78AAAB30lEQVRYhe1XMW6DQBCcQ24j+wdxSxVShc7OC+ImtW0JRJHCyU+IUiGQjF8Q5wXBHV1IE1rnB/YLiC5anNPpMBBwXMQjnQTL6mb27nb3YFmW4ZjQjsr+7wWcBHB0VMaUmX0A9wAMGl369AkgARDqWbxsXUDKzB4AF8C4wP+cBvdbWrYzBPAKYBH43qQOsWU7EYDBbgtSZvJI13vIRayl97FlO24N8pCT82cNP5FHwlLXFcAxs2yndBVI6C7IfAXCAvIFgCmAaxr8eQVgUzD/fJ8I+jYTbewDV3zp3yTfLYCRnsVRSTT5GZBxGfheoiCfy44anXYZkzLyEkSW7RgCuaEi5+BZMJRsqxZSrCuIyM+XEhqllYhW8ptE8LnO9jmpKmGisFXFu+R3AeAJwJ1g25YJaAIe8YNCxC1l0FQOUCXAUNgqI/A9l9JXxA2vHYHvhfI8GtV3EaOmy0BlWRQxDXxPeRA1xQkdpMysVddLRDyqIs/RKWg+bsrMTdN0rNKgOnoWJykzX2ifcvAUek6ZuaIyndd+g+pGT89iuX78Cnk7nhCJ3A8Gedc6FL6zQM/iDUW2PSSZCrs05FsBoK9IISVSZrayBcofkwpXsoiuZUVtuZmAv8TpWn4ScFwBAL4AbIiR9pT9cFoAAAAASUVORK5CYII=')  with open('test_save.jpeg', 'wb') as f:     f.write(elem) </code></pre> <p>Result:</p> <p><a href=""https://i.stack.imgur.com/TJEZI.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/TJEZI.png"" alt=""enter image description here"" /></a></p> <p>Does it answer your question?</p>"			2020-06-27 08:42:04.98 UTC
62631962	javascript|python|html|linux|screen-scraping	How to scrape HTML from a javascript webpage using Python	"<p>Trying to parse the html in order to get data from  tags nested inside of  tags, but when I prettify I get javascript. How do I get the information out of this javascript? How do I turn it into html? Is there a better way to get this information? This is my first question and I apologize if I've made any mistakes. Thank you.</p> <p>This is my code:</p> <pre><code>from bs4 import BeautifulSoup as bs import requests  html = requests.get(url) soup = bs(html.content, 'html.parser') print(soup.prettify()) </code></pre> <p>The response is: what looks like byte/string of pre-prettified code followed by</p> <pre><code>&lt;html&gt; &lt;head&gt; &lt;/head&gt; &lt;script language=&quot;javascript&quot;&gt; var strUrl = window.location.href;   if (strUrl.indexOf(&quot;modisoftinc.com&quot;) &gt; 0)     window.location.replace(&quot;https://www.modisoftinc.com/home.html&quot;); if (strUrl.indexOf(&quot;www.modisoftinc.com&quot;) &gt; 0)     window.location.replace(&quot;https://www.modisoftinc.com/home.html&quot;); if (strUrl.indexOf(&quot;http://modisoftinc.com&quot;) &gt; 0)     window.location.replace(&quot;https://www.modisoftinc.com/home.html&quot;); if (strUrl.indexOf(&quot;www.modisoftinc.com&quot;) &gt; 0)     window.location.replace(&quot;https://www.modisoftinc.com/home.html&quot;);   if (strUrl.indexOf(&quot;echecks.modisoftinc.com&quot;) &gt; 0)     window.location.replace(&quot;https://echecks.modisoftinc.com/Account/Logon&quot;);   if (strUrl.indexOf(&quot;pos.modisoftinc.com&quot;) &gt; 0)     window.location.replace(&quot;https://pos.modisoftinc.com/Account/Logon&quot;);   if (strUrl.indexOf(&quot;clock.modisoftinc.com&quot;) &gt; 0)     window.location.replace(&quot;https://clock.modisoftinc.com/Account/Logon&quot;);   if (strUrl.indexOf(&quot;admin11.modisoftinc.com&quot;) &gt; 0)     window.location.replace(&quot;https://admin11.modisoftinc.com/Account/Logon&quot;);     if (strUrl.indexOf(&quot;modisoft.com&quot;) &gt; 0)     window.location.replace(&quot;https://www.modisoft.com/home.html&quot;); if (strUrl.indexOf(&quot;www.modisoft.com&quot;) &gt; 0)     window.location.replace(&quot;https://www.modisoft.com/home.html&quot;); if (strUrl.indexOf(&quot;http://modisoft.com&quot;) &gt; 0)     window.location.replace(&quot;https://www.modisoft.com/home.html&quot;); if (strUrl.indexOf(&quot;www.modisoft.com&quot;) &gt; 0)     window.location.replace(&quot;https://www.modisoft.com/home.html&quot;);   if (strUrl.indexOf(&quot;echecks.modisoft.com&quot;) &gt; 0)     window.location.replace(&quot;https://echecks.modisoft.com/Account/Logon&quot;);  if (strUrl.indexOf(&quot;app.modisoft.com&quot;) &gt; 0)     window.location.replace(&quot;https://app.modisoft.com/Account/Logon&quot;);  if (strUrl.indexOf(&quot;app1.modisoft.com&quot;) &gt; 0)     window.location.replace(&quot;https://app1.modisoft.com/Account/Logon&quot;);  if (strUrl.indexOf(&quot;app2.modisoft.com&quot;) &gt; 0)     window.location.replace(&quot;https://app2.modisoft.com/Account/Logon&quot;);  if (strUrl.indexOf(&quot;pos.modisoft.com&quot;) &gt; 0)     window.location.replace(&quot;https://pos.modisoft.com/Account/Logon&quot;);  if (strUrl.indexOf(&quot;clock.modisoft.com&quot;) &gt; 0)     window.location.replace(&quot;https://clock.modisoft.com/Account/Logon&quot;);      if (strUrl.indexOf(&quot;admin11.modisoft.com&quot;) &gt; 0)     window.location.replace(&quot;https://admin11.modisoft.com/Account/Logon&quot;);    if (strUrl.indexOf(&quot;modisoftrewards.com&quot;) &gt; 0)     window.location.replace(&quot;https://www.modisoftrewards.com/index.html&quot;); if (strUrl.indexOf(&quot;www.modisoftrewards.com&quot;) &gt; 0)     window.location.replace(&quot;https://www.modisoftrewards.com/index.html&quot;); if (strUrl.indexOf(&quot;http://modisoftrewards.com&quot;) &gt; 0)     window.location.replace(&quot;https://www.modisoftrewards.com/index.html&quot;); if (strUrl.indexOf(&quot;www.modisoftrewards.com&quot;) &gt; 0)     window.location.replace(&quot;https://www.modisoftrewards.com/index.html&quot;);          if (strUrl.indexOf(&quot;localhost&quot;) &gt; 0)        window.location.replace(&quot;Account/Logon&quot;); &lt;/script&gt; &lt;body&gt; &lt;/body&gt; &lt;/html&gt; </code></pre>"	2020-06-29 05:45:50.25 UTC	62658724	"<blockquote> <p>How do I get the information out of this javascript? How do I turn it into html?</p> </blockquote> <p>Yes, you need a browser automation (selenium, headless Chrome) to execute on-site JS. Then upon that, the JS fills in HTML with missing data. Eg.:</p> <ol> <li><p><a href=""https://webscraping.pro/javascript-rendering-library-for-scraping-javascript-sites/"" rel=""nofollow noreferrer"">https://webscraping.pro/javascript-rendering-library-for-scraping-javascript-sites/</a></p> </li> <li><p><a href=""https://webscraping.pro/java-library-to-scrape-linkedin-its-data-affiliates/"" rel=""nofollow noreferrer"">https://webscraping.pro/java-library-to-scrape-linkedin-its-data-affiliates/</a></p> </li> </ol> <h2>Hack</h2> <p>In some cases you might use <code>a bare coding</code> (python, php) to <strong>imitate JS requests</strong> (usually XHR/Ajax) and get the missing info. Eg. <a href=""https://webscraping.pro/scrape-lazy-load-page-python-requests/"" rel=""nofollow noreferrer"">Scrape a JS Lazy load page by Python requests</a></p>"			2020-06-30 13:35:34.693 UTC
62633601	javascript|python|hmac|sha|cryptojs	HMAC SHA256 in Python vs. JavaScript	"<p>I want to re-implement a certain API client, which is written in Python, in JavaScript. I fail to replicate the HMAC SHA256 signing function. For some keys the output is identical, but for some it is different. It appears that the output is the same when the key consists of printable characters after decoding its Base64 representation.</p> <h2>Python</h2> <pre><code>#!/usr/bin/env python3  import base64 import hashlib import hmac  def sign_string(key_b64, to_sign):     key = base64.b64decode(key_b64)     signed_hmac_sha256 = hmac.HMAC(key, to_sign.encode(), hashlib.sha256)     digest = signed_hmac_sha256.digest()     return base64.b64encode(digest).decode()  print(sign_string('VGhpcyBpcyBhIHByaW50YWJsZSBzdHJpbmcuCg==', &quot;my message&quot;)) print(sign_string('dGhlIHdpbmQgb2YgTXQuIEZ1amkK', &quot;my message&quot;)) print(sign_string('pkmNNJw3alrpIBi5t5Pxuym00M211oN86IhLZVT8', &quot;my message&quot;)) </code></pre> <h2>JavaScript</h2> <pre><code>&lt;script src=&quot;https://cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.9-1/crypto-js.min.js&quot;&gt;&lt;/script&gt; &lt;script src=&quot;https://cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.9-1/hmac-sha256.min.js&quot;&gt;&lt;/script&gt; &lt;script src=&quot;https://cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.9-1/enc-base64.min.js&quot;&gt;&lt;/script&gt;  &lt;script&gt;     function sign_string(key_b64, to_sign) {         key = atob(key_b64)         var hash = CryptoJS.HmacSHA256(to_sign, key);         var hashInBase64 = CryptoJS.enc.Base64.stringify(hash);         document.write(hashInBase64 + '&lt;br&gt;');     }     sign_string('VGhpcyBpcyBhIHByaW50YWJsZSBzdHJpbmcuCg==', &quot;my message&quot;)     sign_string('dGhlIHdpbmQgb2YgTXQuIEZ1amkK', &quot;my message&quot;)     sign_string('pkmNNJw3alrpIBi5t5Pxuym00M211oN86IhLZVT8', &quot;my message&quot;) &lt;/script&gt; </code></pre> <h2>Outputs</h2> <p><strong>Python</strong></p> <pre><code>TdhfUQfym16HyWQ8wxQeNVvJKr/tp5rLKHYQSpURLpw= pQ5NzK3KIWjqc75AXBvWgLK8X0kZvjRHXrLAdxIN+Bk= 8srAvMucCd91CWI7DeCFjxJrEYllaaH63wmVlMk0W+I= </code></pre> <p><strong>JavaScript</strong></p> <pre><code>TdhfUQfym16HyWQ8wxQeNVvJKr/tp5rLKHYQSpURLpw= pQ5NzK3KIWjqc75AXBvWgLK8X0kZvjRHXrLAdxIN+Bk= 31QxOpifnpFUpx/sn336ZmmjkYbLlNrs8NP9om6nPeY= </code></pre> <p>As you can see the first two are the same, while the last is different.</p> <p><strong>How can I change the JavaScript code to behave the same as the python code?</strong></p>"	2020-06-29 07:56:50.01 UTC	62633802	"<p>In the third example you are using different parameters in the python and JavaScript versions. In python: sign_string('xTsHZGfWUmnIpSu+TaVraECU88O3j9qVjlwTWGb/C8k=', &quot;my message&quot;) In JavaScript: sign_string('pkmNNJw3alrpIBi5t5Pxuym00M211oN86IhLZVT8', &quot;my message&quot;)</p>"			2020-06-29 08:11:51.57 UTC
62633601	javascript|python|hmac|sha|cryptojs	HMAC SHA256 in Python vs. JavaScript	"<p>I want to re-implement a certain API client, which is written in Python, in JavaScript. I fail to replicate the HMAC SHA256 signing function. For some keys the output is identical, but for some it is different. It appears that the output is the same when the key consists of printable characters after decoding its Base64 representation.</p> <h2>Python</h2> <pre><code>#!/usr/bin/env python3  import base64 import hashlib import hmac  def sign_string(key_b64, to_sign):     key = base64.b64decode(key_b64)     signed_hmac_sha256 = hmac.HMAC(key, to_sign.encode(), hashlib.sha256)     digest = signed_hmac_sha256.digest()     return base64.b64encode(digest).decode()  print(sign_string('VGhpcyBpcyBhIHByaW50YWJsZSBzdHJpbmcuCg==', &quot;my message&quot;)) print(sign_string('dGhlIHdpbmQgb2YgTXQuIEZ1amkK', &quot;my message&quot;)) print(sign_string('pkmNNJw3alrpIBi5t5Pxuym00M211oN86IhLZVT8', &quot;my message&quot;)) </code></pre> <h2>JavaScript</h2> <pre><code>&lt;script src=&quot;https://cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.9-1/crypto-js.min.js&quot;&gt;&lt;/script&gt; &lt;script src=&quot;https://cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.9-1/hmac-sha256.min.js&quot;&gt;&lt;/script&gt; &lt;script src=&quot;https://cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.9-1/enc-base64.min.js&quot;&gt;&lt;/script&gt;  &lt;script&gt;     function sign_string(key_b64, to_sign) {         key = atob(key_b64)         var hash = CryptoJS.HmacSHA256(to_sign, key);         var hashInBase64 = CryptoJS.enc.Base64.stringify(hash);         document.write(hashInBase64 + '&lt;br&gt;');     }     sign_string('VGhpcyBpcyBhIHByaW50YWJsZSBzdHJpbmcuCg==', &quot;my message&quot;)     sign_string('dGhlIHdpbmQgb2YgTXQuIEZ1amkK', &quot;my message&quot;)     sign_string('pkmNNJw3alrpIBi5t5Pxuym00M211oN86IhLZVT8', &quot;my message&quot;) &lt;/script&gt; </code></pre> <h2>Outputs</h2> <p><strong>Python</strong></p> <pre><code>TdhfUQfym16HyWQ8wxQeNVvJKr/tp5rLKHYQSpURLpw= pQ5NzK3KIWjqc75AXBvWgLK8X0kZvjRHXrLAdxIN+Bk= 8srAvMucCd91CWI7DeCFjxJrEYllaaH63wmVlMk0W+I= </code></pre> <p><strong>JavaScript</strong></p> <pre><code>TdhfUQfym16HyWQ8wxQeNVvJKr/tp5rLKHYQSpURLpw= pQ5NzK3KIWjqc75AXBvWgLK8X0kZvjRHXrLAdxIN+Bk= 31QxOpifnpFUpx/sn336ZmmjkYbLlNrs8NP9om6nPeY= </code></pre> <p>As you can see the first two are the same, while the last is different.</p> <p><strong>How can I change the JavaScript code to behave the same as the python code?</strong></p>"	2020-06-29 07:56:50.01 UTC	62635919	"<p>The base64 encoded secret you are trying to give to CryptoJs does not represent a valid UTF-8 string, which CryptoJS requires. You can use <a href=""https://onlineutf8tools.com/convert-hexadecimal-to-utf8"" rel=""nofollow noreferrer"">this tool</a> to check for validity. <code>atob()</code> is encoding agnostic and just converts byte by byte, and does not check if it's valid UTF-8.</p> <p>Here I did the decoding of the base64 secret with CryptoJS's own decoder and it throws an error saying it's invalid UTF-8:</p> <pre><code>&lt;script src=&quot;https://cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.9-1/crypto-js.min.js&quot;&gt;&lt;/script&gt; &lt;script src=&quot;https://cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.9-1/hmac-sha256.min.js&quot;&gt;&lt;/script&gt; &lt;script src=&quot;https://cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.9-1/enc-base64.min.js&quot;&gt;&lt;/script&gt;  &lt;script&gt;     function sign_string(key_b64, to_sign) {         var key = CryptoJS.enc.Base64.parse(key_b64).toString(CryptoJS.enc.Utf8);         var hash = CryptoJS.HmacSHA256(to_sign, key);         var hashInBase64 = CryptoJS.enc.Base64.stringify(hash);         document.write(hashInBase64 + '&lt;br&gt;');     }     sign_string('VGhpcyBpcyBhIHByaW50YWJsZSBzdHJpbmcuCg==', &quot;my message&quot;)     sign_string('dGhlIHdpbmQgb2YgTXQuIEZ1amkK', &quot;my message&quot;)     sign_string('pkmNNJw3alrpIBi5t5Pxuym00M211oN86IhLZVT8', &quot;my message&quot;) &lt;/script&gt; </code></pre> <p>I also found a way you can use raw bytes for the key. This works for the last key but not for the first two.</p> <pre><code>var key = CryptoJS.enc.Hex.parse(toHex(atob(key_b64))); </code></pre> <p>Now if you combine these two methods you can have a real solution. This final code gives identical output as python:</p> <pre><code>&lt;script src=&quot;https://cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.9-1/crypto-js.min.js&quot;&gt;&lt;/script&gt; &lt;script src=&quot;https://cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.9-1/hmac-sha256.min.js&quot;&gt;&lt;/script&gt; &lt;script src=&quot;https://cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.9-1/enc-base64.min.js&quot;&gt;&lt;/script&gt;  &lt;script&gt;     function sign_string(key_b64, to_sign) {         try {             var key = CryptoJS.enc.Base64.parse(key_b64).toString(CryptoJS.enc.Utf8);         }         catch {             var key = CryptoJS.enc.Hex.parse(toHex(atob(key_b64)));         }         var hash = CryptoJS.HmacSHA256(to_sign, key);         var hashInBase64 = CryptoJS.enc.Base64.stringify(hash);         document.write(hashInBase64 + '&lt;br&gt;');     }          function toHex(str) {         var result = '';         for (var i=0; i&lt;str.length; i++) {           if (str.charCodeAt(i).toString(16).length === 1) {             result += '0' + str.charCodeAt(i).toString(16);           } else {             result += str.charCodeAt(i).toString(16);           }         }         return result;     }      sign_string('VGhpcyBpcyBhIHByaW50YWJsZSBzdHJpbmcuCg==', &quot;my message&quot;)     sign_string('dGhlIHdpbmQgb2YgTXQuIEZ1amkK', &quot;my message&quot;)     sign_string('pkmNNJw3alrpIBi5t5Pxuym00M211oN86IhLZVT8', &quot;my message&quot;)     sign_string('xTsHZGfWUmnIpSu+TaVraECU88O3j9qVjlwTWGb/C8k=', &quot;my message&quot;) &lt;/script&gt; </code></pre>"			2020-06-29 10:14:29.747 UTC
62641283	javascript|python|flask	How to use Python Flask in Javascript file(.js)?	"<p>When Javascript code was in the HTML file, this was not problem. However, As soon as I moved the contents of the script tag to a js file for use in other HTML files, there was a problem with not being able to read the image. The code is as follows.</p> <p>script.js</p> <pre><code>function mouseOverSelf() {     let img = document.getElementById(&quot;changeImg1&quot;);     let m = document.getElementById(&quot;changeColor1&quot;);     img.src = &quot;{{ url_for('static', filename='img/edit_w.svg') }}&quot;;     m.style.color = &quot;white&quot;; }  function mouseOutSelf() {     let img = document.getElementById(&quot;changeImg1&quot;);     let m = document.getElementById(&quot;changeColor1&quot;);     img.src = &quot;{{ url_for('static', filename='img/edit.svg') }}&quot;;     m.style.color = &quot;black&quot;; }  function mouseOverExcel() {     let img = document.getElementById(&quot;changeImg2&quot;);     let m = document.getElementById(&quot;changeColor2&quot;);     img.src = &quot;{{ url_for('static', filename='img/spreadsheet_w.svg') }}&quot;;     m.style.color = &quot;white&quot;; }  function mouseOutExcel() {     let img = document.getElementById(&quot;changeImg2&quot;);     let m = document.getElementById(&quot;changeColor2&quot;);     img.src = &quot;{{ url_for('static', filename='img/spreadsheet.svg') }}&quot;;     m.style.color = &quot;black&quot;; }  </code></pre> <p>index.html</p> <pre><code>&lt;script type=&quot;text/javascript&quot; src=&quot;{{ url_for('static', filename='js/script.js') }}&quot;&gt;&lt;/script&gt; </code></pre> <p>How Can I do?</p>"	2020-06-29 15:17:14.233 UTC	62643201	"<p>the solution is to include the javascript code (the same with css) via <code>{% block %}</code> tag in the template, not via <code>&lt;script src=&quot;..&quot;&gt;</code> html tag (<code>&lt;link rel=&quot;stylesheet&quot; href=&quot;..&quot;&gt;</code>).</p> <p>you have two option, the javascript code (the same with css) is meant to be loaded and executed for:</p> <ul> <li>a particular page (local)</li> <li>all pages (global)</li> </ul> <p>with <code>jinja2</code> template inheritance mechanism, below how you can do:</p> <p>in <code>base.html</code></p> <pre><code>&lt;!doctype html&gt; &lt;html class=&quot;no-js&quot; lang=&quot;en_US&quot;&gt; &lt;head&gt;   &lt;meta charset=&quot;utf-8&quot;&gt;   &lt;title&gt;{% block title %}{% endblock %}&lt;/title&gt;   &lt;meta name=&quot;description&quot; content=&quot;{% block description %}{% endblock %}&quot;&gt;   &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1, shrink-to-fit=no&quot;&gt;    &lt;link rel=&quot;manifest&quot; href=&quot;{{ url_for('static', filename='site.webmanifest') }}&quot;&gt;   &lt;link rel=&quot;apple-touch-icon&quot; href=&quot;{{ url_for('static', filename='icon.png') }}&quot;&gt;   &lt;link rel=&quot;shortcut icon&quot; href=&quot;{{ url_for('static', filename='favicon.ico') }}&quot;&gt;    {% block stylesheets %}    &lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.13.0/css/all.min.css&quot; integrity=&quot;sha256-h20CPZ0QyXlBuAw7A+KluUYx/3pK+c7lYEpqLTlxjYQ=&quot; crossorigin=&quot;anonymous&quot; /&gt;   &lt;link rel=&quot;stylesheet&quot; href=&quot;https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css&quot; integrity=&quot;sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh&quot; crossorigin=&quot;anonymous&quot;&gt;   {% block stylesheets_others %}{% endblock %}   &lt;link rel=&quot;stylesheet&quot; href=&quot;{{ url_for('static', filename='css/bootstrap-override.css') }}&quot;&gt;   &lt;link rel=&quot;stylesheet&quot; href=&quot;{{ url_for('static', filename='css/bootstrap-extend.css') }}&quot;&gt;   &lt;link rel=&quot;stylesheet&quot; href=&quot;{{ url_for('static', filename='css/main.css') }}&quot;&gt;   {% block stylesheets_local %}{% endblock %}    {% endblock %}    &lt;meta name=&quot;theme-color&quot; content=&quot;#fafafa&quot;&gt; &lt;/head&gt; &lt;body&gt;   &lt;!--[if IE]&gt;     &lt;p class=&quot;browserupgrade&quot;&gt;You are using an &lt;strong&gt;outdated&lt;/strong&gt; browser. Please &lt;a href=&quot;https://browsehappy.com/&quot;&gt;upgrade your browser&lt;/a&gt; to improve your experience and security.&lt;/p&gt;   &lt;![endif]--&gt;    {% block body %}     {% include 'includes/header.html' %}     {% block content %}{% endblock %}     {% include 'includes/footer.html' %}   {% endblock %}    {% block javascripts %}    &lt;script src=&quot;{{ url_for('static', filename='js/vendor/modernizr-3.8.0.min.js') }}&quot;&gt;&lt;/script&gt;   &lt;script src=&quot;https://code.jquery.com/jquery-3.4.1.min.js&quot; integrity=&quot;sha256-CSXorXvZcTkaix6Yvo6HppcZGetbYMGWSFlBw8HfCJo=&quot; crossorigin=&quot;anonymous&quot;&gt;&lt;/script&gt;   &lt;script&gt;window.jQuery || document.write('&lt;script src=&quot;{{ url_for('static', filename='js/vendor/jquery-3.4.1.min.js') }}&quot;&gt;&lt;\/script&gt;')&lt;/script&gt;   &lt;script src=&quot;https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js&quot; integrity=&quot;sha384-Q6E9RHvbIyZFJoft+2mJbHaEWldlvI9IOYy5n3zV9zzTtmI3UksdQRVvoxMfooAo&quot; crossorigin=&quot;anonymous&quot;&gt;&lt;/script&gt;   &lt;script src=&quot;https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/js/bootstrap.min.js&quot; integrity=&quot;sha384-wfSDF2E50Y2D1uUdj0O3uMBJnjuUD4Ih7YwaYd1iqfktj0Uod8GCExl3Og8ifwB6&quot; crossorigin=&quot;anonymous&quot;&gt;&lt;/script&gt;   {% block javascripts_others %}{% endblock %}   &lt;script src=&quot;{{ url_for('static', filename='js/vendor/vendor.min.js') }}&quot;&gt;&lt;/script&gt;   &lt;script src=&quot;{{ url_for('static', filename='js/plugins.js') }}&quot;&gt;&lt;/script&gt;   &lt;script src=&quot;{{ url_for('static', filename='js/main.js') }}&quot;&gt;&lt;/script&gt;   {% block javascripts_local %}{% endblock %}   &lt;!-- Google Analytics: change UA-XXXXX-Y to be your site's ID. --&gt;   &lt;script&gt;     window.ga = function () { ga.q.push(arguments) }; ga.q = []; ga.l = +new Date;     ga('create', 'UA-XXXXX-Y', 'auto'); ga('set','transport','beacon'); ga('send', 'pageview')   &lt;/script&gt;   &lt;script src=&quot;https://www.google-analytics.com/analytics.js&quot; async&gt;&lt;/script&gt;    {% endblock %} &lt;/body&gt; &lt;/html&gt; </code></pre> <p>in <code>my-page.html</code></p> <pre><code>{% extends 'base.html' %}  [..] {% block stylesheets_local %}   {{ super() }} {# to load the parent assets #}   &lt;style&gt;   /* You &quot;Local&quot; css goes here .. (if any) */   &lt;/style&gt; {% endblock %}  {% block body %}   [..] {% endblock %}   [..] {% block javascripts_local %}   {{ super() }} {# to load the parent assets #}   &lt;script&gt;   // You &quot;Local&quot; javascript code goes here ..   &lt;/script&gt; {% endblock %} </code></pre> <p>if you want to load other javascript or css <strong>external libraries</strong> via e.g: <code>cdn</code> for particular page the logic is the same, you need to extend <code>{% block javascripts_others %}{% endblock %}</code> and <code>{% block stylesheets_others %}{% endblock %}</code> blocks in your template, but don't forget to include <code>{{ super }}</code> to load the parent assets if any.</p> <p>But if you think an external libraries, javascript or css, should be loaded <strong>globally</strong> then add them in <code>base.html</code> respectively below <code>bootstrap</code> and <code>font awesome</code> libs. So with this logic you'll load the assets for any page with the right order with no conflict.</p> <p>But it happens that your code (js or css) is meant to be loaded for <strong>few pages</strong> not all pages (not globally), in this case, create a <strong>separated template</strong> and put you js or css code and include it in the right place and order (like we did previously)</p> <p>in <code>page-1.html</code>, <code>page-2.html</code>, <code>page-3.html</code> ..</p> <pre><code>{% extends 'base.html' %}  [..] {% block stylesheets_local %}    {{ super() }} {# to load the parent assets #}   {% include 'includes/mycss.css.html' %}  {% endblock %}  {% block body %}   [..] {% endblock %}   [..] {% block javascripts_local %}    {{ super() }} {# to load the parent assets #}   {% include 'includes/myscript.js.html' %}  {% endblock %} </code></pre> <p>note how i named partial template just convention, a good practice.</p>"			2020-06-29 17:04:38.367 UTC
62666026	javascript|python|python-requests	Sending a javascript variable to python using forms	"<p>Suppose I have created a form</p> <pre><code>&lt;form action=&quot; &quot; method=&quot;POST&quot;&gt; &lt;input type=&quot;text&quot; name=&quot;xyz&quot;&gt; &lt;input type=&quot;text&quot; name=&quot;abc&quot;&gt; &lt;button type=&quot;submit&quot; &gt;submit&lt;/button&gt; &lt;/form&gt; </code></pre> <p>Using this I can access the values with the name &quot;xyz&quot; and &quot;abc&quot;</p> <pre><code>if request.method == &quot;POST&quot;:      val1 = request.form['abc']      val2 = request.form['xyz'] </code></pre> <p>But I also want to access a javascript variable using the same form. Since javascript variable has no identifier as like <code>&lt;input&gt;</code> has 'name', So is there any way to do so?</p>"	2020-06-30 20:56:26.203 UTC	62666085	<p>If you want to pass a JavaScript variable to python using the form you can add an input field of type hidden with the value of the is variable (you can set it from JavaScript using document.getElementBy... functions)</p>			2020-06-30 21:01:42.453 UTC
62669179	javascript|typescript|asynchronous|async-await	What is the execution flow of an await/async program in TypeScript/JavaScript or Python?	"<p>For a while know I try to wrap my head around the <strong>internals</strong> of async/await. I am a C++ developer with focus on multithreading and this concepts interferes with how a C++ program is executed.</p> <p>I do understand Promise objects, and the emphasis of concurrent != parallelism, and also the event loop. I can follow the demand to have a single-threaded application that concurrently executes different parts of the program but what &quot;creates&quot; an event on the event loop? Is it the <code>Promise</code> object? Or the <code>async</code> keyword? Or is it something in some I/O functions to not block?</p> <p>The closest concept I know would be the Global Interpreter Lock in Python where several threads wait for a global lock, so Python executes in a round-robin method to let every thread execute a piece of code. But this concept doesn't require an event-loop, and e.g. in JS/TS there is only a single thread involved.</p> <p>Can anyone help me out (or recommend a good resource), so I can understand the execution flow or how I can make sense of this? Thank you so much!</p>"	2020-07-01 03:22:55.85 UTC	62669454	<p>If you understand a promise then async await is just syntactic sugar.</p> <pre><code>async function() {   doStuff();   const x = await getSomePromise();   doStuffWithX(x); } </code></pre> <p>is the same as</p> <pre><code>function() {   doStuff();   getSomePromise().then(function(data) {     const x = data;     doStuffWithX(x);   }); } </code></pre> <p>The interpreter does the callback wrapping for you.</p>			2020-07-01 03:57:32.547 UTC
62680304	javascript|python|flask	Pass value of javascript variable into flask python	<p><code>logReg = (Math.exp(ptsCrunch) / (1 + Math.exp(ptsCrunch)) * 100)</code></p> <p>The code above is a javascript variable that I want to pass into an if-else statement in flask. I have used ajax and various @app.route requests but none seems to work. Please help!</p>	2020-07-01 15:33:23.67 UTC	62680667	"<p>This sample code will help you.</p> <p><strong>Flask:</strong></p> <pre><code>from flask import Flask, render_template, request from flask import jsonify  from flask_cors import CORS,cross_origin app = Flask(__name__) CORS(app, support_credentials=True)   @app.route(&quot;/send&quot;, methods=['GET']) @cross_origin() def post_bot_response():      usr_inp = request.args.get('msg');      ### res = chat(urs_inp)     return 'd' ## return res   if __name__ == '__main__':     app.run(debug=True, port=8009)  ## For deploying the app use `app.run(debug=False, host=&quot;0.0.0.0&quot;, port=80) </code></pre> <p><strong>Html:</strong></p> <pre><code>&lt;div&gt; &lt;div id=&quot;chatBox&quot;&gt; &lt;p class=&quot;botText&quot;&gt;&lt;span&gt;Hi! I'm a chatbot, how can I help you today?&lt;/span&gt;&lt;/p&gt; &lt;/div&gt;  &lt;!-- &lt;form action=&quot;&quot; method=&quot;POST&quot;&gt; --&gt; &lt;input id=&quot;textInput&quot; type=&quot;text&quot; name=&quot;msg&quot; placeholder=&quot;Message&quot;/&gt; &lt;input type=&quot;submit&quot; value=&quot;Send&quot;/&gt; &lt;!-- &lt;/form&gt; --&gt; &lt;/div&gt; &lt;script src=&quot;http://ajax.googleapis.com/ajax/libs/jquery/2.0.0/jquery.min.js&quot;&gt;&lt;/script&gt; &lt;script&gt; function getBotResponse() { var rawText = $(&quot;#textInput&quot;).val(); var userHtml = '&lt;p class=&quot;userText&quot;&gt;&lt;span&gt;' + rawText + &quot;&lt;/span&gt;&lt;/p&gt;&quot;; $(&quot;#textInput&quot;).val(&quot;&quot;); $(&quot;#chatBox&quot;).append(userHtml); document .getElementById(&quot;textInput&quot;) .scrollIntoView({ block: &quot;start&quot;, behavior: &quot;smooth&quot; }); $.get(&quot;http://127.0.0.1:8009/send&quot;, { msg: rawText }).done(function(data) { var botHtml = '&lt;p class=&quot;botText&quot;&gt;&lt;span&gt;' + data + &quot;&lt;/span&gt;&lt;/p&gt;&quot;; $(&quot;#chatBox&quot;).append(botHtml); document.getElementById(&quot;textInput&quot;) .scrollIntoView({ block: &quot;start&quot;, behavior: &quot;smooth&quot; }); });  } $(&quot;#textInput&quot;).keypress(function(e) { if (e.which == 13) {   getBotResponse();  } console.log(&quot;works&quot;); });   &lt;/script&gt; </code></pre>"			2020-07-01 15:53:02.533 UTC
62692345	python|email|outlook|thunderbird	Opening outlook in python/javascript/shell with an attachment in windows 64bits	<p>I've been trying to open a mail client (does not have to be outlook) in windows with specified attachment</p> <p>Using <code>mailto</code> option does not open with the attachment and using thunderbird commandline does not work in window machine.</p> <p>Will there be any way to solve this problem (using any of the javascript/python/shell)</p>	2020-07-02 08:40:28.113 UTC	62705542	"<p>There is no generic way of doing that for all email clients, but for Outlook you can use a script (VBS) similar to the one below. JS or Python will be very similar.</p> <pre><code>set App = CreateObject(&quot;Outlook.Application&quot;) set Item = App.CreateItem(0) Item.Subject = &quot;test&quot; Item.Attachments.Add &quot;c:\temp\test.txt&quot; </code></pre>"			2020-07-02 21:50:00.63 UTC
62700658	javascript|python|bitwise-operators	Python equivalent of the JavaScript bitwise >>>	"<p>Is there an equivalent of <code>&gt;&gt;&gt;</code> operator of JavaScript in Python. As per <code>&gt;&gt;&gt;</code> definition of JavaScript, the operator,</p> <blockquote> <p>Shifts right by pushing zeros in from the left, and let the rightmost bits fall off</p> </blockquote> <p>So is there any direct operator in python as <code>&gt;&gt;</code> cannot do so in my opinion</p>"	2020-07-02 16:09:13.307 UTC	62700852	<p>What worked for me is not applying bit shifts to negative numbers and that was the only difference between <code>&gt;&gt;&gt;</code> and <code>&gt;&gt;</code></p>			2020-07-02 16:21:53.833 UTC
62700658	javascript|python|bitwise-operators	Python equivalent of the JavaScript bitwise >>>	"<p>Is there an equivalent of <code>&gt;&gt;&gt;</code> operator of JavaScript in Python. As per <code>&gt;&gt;&gt;</code> definition of JavaScript, the operator,</p> <blockquote> <p>Shifts right by pushing zeros in from the left, and let the rightmost bits fall off</p> </blockquote> <p>So is there any direct operator in python as <code>&gt;&gt;</code> cannot do so in my opinion</p>"	2020-07-02 16:09:13.307 UTC	62700837	<p><code>x &lt;&lt; y</code> Returns x with the bits shifted to the left by y places (and new bits on the right-hand-side are zeros). This is the same as multiplying <code>x</code> by <code>2**y</code>.</p> <p><code>x &gt;&gt; y</code> Returns x with the bits shifted to the right by y places. This is the same as integer-dividing <code>x</code> by <code>2**y</code>.</p>			2020-07-02 16:20:42.76 UTC
62707514	javascript|python|user-interface|webautomation	Any way to automate desktop GUI using Python just like automating web forms with JavaScript?	"<p>As we all know, filling out the web forms automatically is possible using JavaScript. Basically, We find the ID of related element using Inspect (Ctrl + I) in i.e Chrome and write a javascript code in the chrome console to automate what we want to do by code.</p> <p>Just like that, is it possible to automate desktop apps using python? if yes how ?</p>"	2020-07-03 02:14:10.71 UTC	62877665	"<p><a href=""https://pywinauto.github.io/"" rel=""nofollow noreferrer"">Pywinauto</a>  is a GUI automation library written in pure Python and well developed for Windows GUI.</p>"			2020-07-13 14:08:22.533 UTC
62707514	javascript|python|user-interface|webautomation	Any way to automate desktop GUI using Python just like automating web forms with JavaScript?	"<p>As we all know, filling out the web forms automatically is possible using JavaScript. Basically, We find the ID of related element using Inspect (Ctrl + I) in i.e Chrome and write a javascript code in the chrome console to automate what we want to do by code.</p> <p>Just like that, is it possible to automate desktop apps using python? if yes how ?</p>"	2020-07-03 02:14:10.71 UTC	62707580	"<p>You can do this in python using <strong>selenium</strong>. Selenium is an open-source testing tool, used for functional testing and also compatible with non-functional testing. You can refer to this <a href=""https://www.guru99.com/selenium-python.html"" rel=""nofollow noreferrer"">link</a> to get started.</p>"			2020-07-03 02:22:26.703 UTC
62710432	javascript|python|jquery|django	Django: Passing multiple keys into AJAX including a JavaScript seralised form and parsing them in python	"<p><strong>What I need</strong></p> <p>I'm trying to find a way to send a multi layered dictionary via AJAX to my server, including a JavaScript seralised form with the use of <code>serialize()</code>.</p> <p><strong>The issue</strong></p> <p>When I use <code>data: frm.serialize();</code>. It's a single layered json and it is easily parsed when returned to server with result:</p> <pre class=""lang-py prettyprint-override""><code>&lt;QueryDict: {'csrfmiddlewaretoken': ['6aTZ7xey90sczae15069ZlbIiE7gVWW69RyeJBptUxadbgnBo8t8R0Nskg8S8Jzb', '6aTZ7xey90sczae15069ZlbIiE7gVWW69RyeJBptUxadbgnBo8t8R0Nskg8S8Jzb'], 'days': ['Mon', 'Wed'], 'no_weeks': ['1']}&gt; </code></pre> <p>Then when using a nested dictionary with</p> <pre class=""lang-js prettyprint-override""><code>data: {'form':frm.serialize(),'additional_data':12,'csrfmiddlewaretoken' : $(&quot;input[name=csrfmiddlewaretoken]&quot;).val()}``` </code></pre> <p>I get:</p> <pre class=""lang-py prettyprint-override""><code>&lt;QueryDict: {'form': ['csrfmiddlewaretoken=IF2D4vTBjaQSsrE4oY3Lb36jekPB5nZbLmHSGz4w4HyT4xNEH6qK3II3gWQdiaCg&amp;days=Mon&amp;days=Thu&amp;no_weeks=2&amp;csrfmiddlewaretoken=IF2D4vTBjaQSsrE4oY3Lb36jekPB5nZbLmHSGz4w4HyT4xNEH6qK3II3gWQdiaCg'], 'additional_data': ['12'], 'csrfmiddlewaretoken': ['IF2D4vTBjaQSsrE4oY3Lb36jekPB5nZbLmHSGz4w4HyT4xNEH6qK3II3gWQdiaCg']}&gt; </code></pre> <p><strong>What i've tried</strong></p> <p>I have attempted with use of <a href=""https://stackoverflow.com/a/11281019/11475846"">this answer</a> to use <code>urllib</code> to parse the form section of the data into a separate variable. Like so:</p> <pre class=""lang-py prettyprint-override""><code>x = parse_qs(urllib.parse.urlparse(request.POST['form']).query) </code></pre> <p>This returns an empty dicitonary.</p> <p><strong>Code</strong></p> <p><em><strong>HTML</strong></em></p> <pre class=""lang-html prettyprint-override""><code>&lt;form method=&quot;post&quot; id=&quot;replicate_form&quot;&gt;     [..more code] &lt;/form&gt; </code></pre> <p><em><strong>Javscript</strong></em></p> <pre class=""lang-js prettyprint-override""><code>function send_replication_data() {     var frm = $('#replicate_form')     var form_server_response = submit_formdata(frm) }  // parent function to handle replcation form saving  $('#create_replicate_booking_button').on('click', function() {     send_replication_data()  });  // submit booking data ajax  function submit_formdata(frm) {     var tmp = $.ajax({             type: frm.attr('method'),             async:false,             url: window.location.href,             data: {'form':frm.serialize(),                    'additional_data':12,                    'csrfmiddlewaretoken' : $(&quot;input[name=csrfmiddlewaretoken]&quot;).val()}          });     return tmp.responseJSON; } </code></pre> <p>Possibly I could somehow make use of whatever Django is doing in it's middleware to a parse the form data in the first scenario?</p>"	2020-07-03 07:24:58.487 UTC	62711047	"<p>The <code>.serialize()</code> method creates a text string in standard <strong>URL-encoded</strong> notation.</p> <p>You could use <code>urllib.parse.parse_qs</code> to parse a query string(form data sent to server by GET) or <code>request.POST['form']</code> since it uses the same encoding.</p> <p>Query strings are element of <strong>urls</strong>, while <code>request.POST['form']</code> has no attribute called <code>query</code></p> <pre><code>from urllib import parse x = parse.parse_qs(request.POST['form'])<del>.query</del>) </code></pre>"			2020-07-03 08:03:14.78 UTC
62733734	javascript|selenium|selenium-webdriver|navigator|circular-reference	javascript error: circular reference error while trying to retrieve navigator.plugins using Selenium and Python	"<p>I'm trying to retrieve the value of <code>navigator.plugins</code> from a <a href=""https://stackoverflow.com/questions/54459701/what-is-selenium-and-what-is-webdriver/54482491#54482491"">Selenium</a> driven <a href=""https://stackoverflow.com/questions/51091121/why-doesnt-chromedriver-require-chrome-or-chromium/51096327#51096327"">ChromeDriver</a> initiated <a href=""/questions/tagged/google-chrome"" class=""post-tag"" title=""show questions tagged &#39;google-chrome&#39;"" rel=""tag"">google-chrome</a> <em>Browsing Context</em>.</p> <p>Using <a href=""/questions/tagged/google-chrome-devtools"" class=""post-tag"" title=""show questions tagged &#39;google-chrome-devtools&#39;"" rel=""tag"">google-chrome-devtools</a> I'm able to retrieve <code>navigator.userAgent</code> and <code>navigator.plugins</code> as follows:</p> <p><a href=""https://i.stack.imgur.com/J7NQ3.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/J7NQ3.png"" alt=""navigator_userAgent_plugins"" /></a></p> <p>But using <em>Selenium</em>'s <code>execute_script()</code> method I'm able to extract the <code>navigator.userAgent</code> but <code>navigator.plugins</code> raises the following <em>circular reference</em> error:</p> <ul> <li><p>Code Block:</p> <pre><code>from selenium import webdriver   options = webdriver.ChromeOptions()  options.add_argument(&quot;start-maximized&quot;) driver = webdriver.Chrome(options=options, executable_path=r'C:\WebDrivers\chromedriver.exe') driver.get(&quot;https://www.google.com/&quot;) print(&quot;userAgent: &quot;+driver.execute_script(&quot;return navigator.userAgent;&quot;)) print(&quot;plugins: &quot;+driver.execute_script(&quot;return navigator.plugins;&quot;)) </code></pre> </li> <li><p>Console Output:</p> <pre><code>userAgent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.116 Safari/537.36 Traceback (most recent call last):   File &quot;C:\Users\Soma Bhattacharjee\Desktop\Debanjan\PyPrograms\navigator_properties.py&quot;, line 19, in &lt;module&gt;     print(&quot;vendor: &quot;+driver.execute_script(&quot;return navigator.plugins;&quot;))   File &quot;C:\Python\lib\site-packages\selenium\webdriver\remote\webdriver.py&quot;, line 636, in execute_script     'args': converted_args})['value']   File &quot;C:\Python\lib\site-packages\selenium\webdriver\remote\webdriver.py&quot;, line 321, in execute     self.error_handler.check_response(response)   File &quot;C:\Python\lib\site-packages\selenium\webdriver\remote\errorhandler.py&quot;, line 242, in check_response     raise exception_class(message, screen, stacktrace) selenium.common.exceptions.JavascriptException: Message: javascript error: circular reference   (Session info: chrome=83.0.4103.116) </code></pre> </li> </ul> <p>I've been through the following discussions on <em>circular reference</em> and I understand the concept. But I am not sure how should I address the issue here.</p> <ul> <li><a href=""https://stackoverflow.com/questions/1493453/example-of-a-circular-reference-in-javascript"">Example of a circular reference in Javascript?</a></li> <li><a href=""https://stackoverflow.com/questions/14962018/detecting-and-fixing-circular-references-in-javascript"">Detecting and fixing circular references in JavaScript</a></li> <li><a href=""https://stackoverflow.com/questions/16334440/is-circular-reference-between-objects-a-bad-practice"">Is circular reference between objects a bad practice?</a></li> </ul> <p>Can someone help me to retrieve the <code>navigator.plugins</code> please?</p>"	2020-07-04 19:48:04.94 UTC	62943472	"<h2>Circular Reference</h2> <p>A <a href=""https://www.tutorialspoint.com/why-circular-reference-is-bad-in-javascript"" rel=""nofollow noreferrer"">circular reference</a> occurs if two separate objects pass references to each other. Circular referencing implies that the 2 objects referencing each other are tightly coupled and changes to one object may need changes in other as well.</p> <hr /> <h2>NavigatorPlugins.plugins</h2> <p><a href=""https://developer.mozilla.org/en-US/docs/Web/API/NavigatorPlugins/plugins"" rel=""nofollow noreferrer"">NavigatorPlugins.plugins</a> returns a <a href=""https://developer.mozilla.org/en-US/docs/Web/API/PluginArray"" rel=""nofollow noreferrer"">PluginArray</a> object, listing the <a href=""https://developer.mozilla.org/en-US/docs/Web/API/Plugin"" rel=""nofollow noreferrer"">Plugin</a> objects describing the plugins installed in the application. <code>plugins</code> is <code>PluginArray</code> object used to access <code>Plugin</code> objects either by name or as a list of items. The returned value has the length property and supports accessing individual items using bracket notation (e.g. <code>plugins[2]</code>), as well as via <code>item(index)</code> and <code>namedItem(&quot;name&quot;)</code> methods.</p> <hr /> <p>To extract the <code>navigator.plugins</code> properties you can use the following solutions:</p> <ul> <li><p>To get the list of <em>names</em> of the <code>plugins</code>:</p> <pre><code>print(driver.execute_script(&quot;return Array.from(navigator.plugins).map(({name}) =&gt; name);&quot;)) </code></pre> <ul> <li><p>Console Output:</p> <pre><code>['Chrome PDF Plugin', 'Chrome PDF Viewer', 'Native Client'] </code></pre> </li> </ul> </li> <li><p>To get the list of <em>filename</em> of the <code>plugins</code>:</p> <pre><code>print(driver.execute_script(&quot;return Array.from(navigator.plugins).map(({filename}) =&gt; filename);&quot;)) </code></pre> <ul> <li><p>Console Output:</p> <pre><code>['internal-pdf-viewer', 'mhjfbmdgcfjbbpaeojofohoefgiehjai', 'internal-nacl-plugin'] </code></pre> </li> </ul> </li> <li><p>To get the list of <em>description</em> of the <code>plugins</code>:</p> <pre><code>print(driver.execute_script(&quot;return Array.from(navigator.plugins).map(({description}) =&gt; description);&quot;)) </code></pre> <ul> <li><p>Console Output:</p> <pre><code>['Portable Document Format', '', ''] </code></pre> </li> </ul> </li> </ul>"			2020-07-16 21:05:21.653 UTC
62733734	javascript|selenium|selenium-webdriver|navigator|circular-reference	javascript error: circular reference error while trying to retrieve navigator.plugins using Selenium and Python	"<p>I'm trying to retrieve the value of <code>navigator.plugins</code> from a <a href=""https://stackoverflow.com/questions/54459701/what-is-selenium-and-what-is-webdriver/54482491#54482491"">Selenium</a> driven <a href=""https://stackoverflow.com/questions/51091121/why-doesnt-chromedriver-require-chrome-or-chromium/51096327#51096327"">ChromeDriver</a> initiated <a href=""/questions/tagged/google-chrome"" class=""post-tag"" title=""show questions tagged &#39;google-chrome&#39;"" rel=""tag"">google-chrome</a> <em>Browsing Context</em>.</p> <p>Using <a href=""/questions/tagged/google-chrome-devtools"" class=""post-tag"" title=""show questions tagged &#39;google-chrome-devtools&#39;"" rel=""tag"">google-chrome-devtools</a> I'm able to retrieve <code>navigator.userAgent</code> and <code>navigator.plugins</code> as follows:</p> <p><a href=""https://i.stack.imgur.com/J7NQ3.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/J7NQ3.png"" alt=""navigator_userAgent_plugins"" /></a></p> <p>But using <em>Selenium</em>'s <code>execute_script()</code> method I'm able to extract the <code>navigator.userAgent</code> but <code>navigator.plugins</code> raises the following <em>circular reference</em> error:</p> <ul> <li><p>Code Block:</p> <pre><code>from selenium import webdriver   options = webdriver.ChromeOptions()  options.add_argument(&quot;start-maximized&quot;) driver = webdriver.Chrome(options=options, executable_path=r'C:\WebDrivers\chromedriver.exe') driver.get(&quot;https://www.google.com/&quot;) print(&quot;userAgent: &quot;+driver.execute_script(&quot;return navigator.userAgent;&quot;)) print(&quot;plugins: &quot;+driver.execute_script(&quot;return navigator.plugins;&quot;)) </code></pre> </li> <li><p>Console Output:</p> <pre><code>userAgent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.116 Safari/537.36 Traceback (most recent call last):   File &quot;C:\Users\Soma Bhattacharjee\Desktop\Debanjan\PyPrograms\navigator_properties.py&quot;, line 19, in &lt;module&gt;     print(&quot;vendor: &quot;+driver.execute_script(&quot;return navigator.plugins;&quot;))   File &quot;C:\Python\lib\site-packages\selenium\webdriver\remote\webdriver.py&quot;, line 636, in execute_script     'args': converted_args})['value']   File &quot;C:\Python\lib\site-packages\selenium\webdriver\remote\webdriver.py&quot;, line 321, in execute     self.error_handler.check_response(response)   File &quot;C:\Python\lib\site-packages\selenium\webdriver\remote\errorhandler.py&quot;, line 242, in check_response     raise exception_class(message, screen, stacktrace) selenium.common.exceptions.JavascriptException: Message: javascript error: circular reference   (Session info: chrome=83.0.4103.116) </code></pre> </li> </ul> <p>I've been through the following discussions on <em>circular reference</em> and I understand the concept. But I am not sure how should I address the issue here.</p> <ul> <li><a href=""https://stackoverflow.com/questions/1493453/example-of-a-circular-reference-in-javascript"">Example of a circular reference in Javascript?</a></li> <li><a href=""https://stackoverflow.com/questions/14962018/detecting-and-fixing-circular-references-in-javascript"">Detecting and fixing circular references in JavaScript</a></li> <li><a href=""https://stackoverflow.com/questions/16334440/is-circular-reference-between-objects-a-bad-practice"">Is circular reference between objects a bad practice?</a></li> </ul> <p>Can someone help me to retrieve the <code>navigator.plugins</code> please?</p>"	2020-07-04 19:48:04.94 UTC	62734403	"<p>I'm assuming it has something to do with the fact that <a href=""https://developer.mozilla.org/en-US/docs/Web/API/NavigatorPlugins/plugins"" rel=""nofollow noreferrer""><code>navigator.plugins</code></a> returns a <a href=""https://developer.mozilla.org/en-US/docs/Web/API/PluginArray"" rel=""nofollow noreferrer"">PluginArray</a>.</p> <p>The <code>PluginArray</code> page lists the methods and properties that are available and with that I wrote this code that returns the list of names. You can adapt it to whatever you need.</p> <pre><code>print(&quot;plugins: &quot; + driver.execute_script(&quot;var list = [];for(var i = 0; i &lt; navigator.plugins.length; i++) { list.push(navigator.plugins[i].name); }; return list.join();&quot;)) </code></pre>"			2020-07-04 20:57:24.363 UTC
62733734	javascript|selenium|selenium-webdriver|navigator|circular-reference	javascript error: circular reference error while trying to retrieve navigator.plugins using Selenium and Python	"<p>I'm trying to retrieve the value of <code>navigator.plugins</code> from a <a href=""https://stackoverflow.com/questions/54459701/what-is-selenium-and-what-is-webdriver/54482491#54482491"">Selenium</a> driven <a href=""https://stackoverflow.com/questions/51091121/why-doesnt-chromedriver-require-chrome-or-chromium/51096327#51096327"">ChromeDriver</a> initiated <a href=""/questions/tagged/google-chrome"" class=""post-tag"" title=""show questions tagged &#39;google-chrome&#39;"" rel=""tag"">google-chrome</a> <em>Browsing Context</em>.</p> <p>Using <a href=""/questions/tagged/google-chrome-devtools"" class=""post-tag"" title=""show questions tagged &#39;google-chrome-devtools&#39;"" rel=""tag"">google-chrome-devtools</a> I'm able to retrieve <code>navigator.userAgent</code> and <code>navigator.plugins</code> as follows:</p> <p><a href=""https://i.stack.imgur.com/J7NQ3.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/J7NQ3.png"" alt=""navigator_userAgent_plugins"" /></a></p> <p>But using <em>Selenium</em>'s <code>execute_script()</code> method I'm able to extract the <code>navigator.userAgent</code> but <code>navigator.plugins</code> raises the following <em>circular reference</em> error:</p> <ul> <li><p>Code Block:</p> <pre><code>from selenium import webdriver   options = webdriver.ChromeOptions()  options.add_argument(&quot;start-maximized&quot;) driver = webdriver.Chrome(options=options, executable_path=r'C:\WebDrivers\chromedriver.exe') driver.get(&quot;https://www.google.com/&quot;) print(&quot;userAgent: &quot;+driver.execute_script(&quot;return navigator.userAgent;&quot;)) print(&quot;plugins: &quot;+driver.execute_script(&quot;return navigator.plugins;&quot;)) </code></pre> </li> <li><p>Console Output:</p> <pre><code>userAgent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.116 Safari/537.36 Traceback (most recent call last):   File &quot;C:\Users\Soma Bhattacharjee\Desktop\Debanjan\PyPrograms\navigator_properties.py&quot;, line 19, in &lt;module&gt;     print(&quot;vendor: &quot;+driver.execute_script(&quot;return navigator.plugins;&quot;))   File &quot;C:\Python\lib\site-packages\selenium\webdriver\remote\webdriver.py&quot;, line 636, in execute_script     'args': converted_args})['value']   File &quot;C:\Python\lib\site-packages\selenium\webdriver\remote\webdriver.py&quot;, line 321, in execute     self.error_handler.check_response(response)   File &quot;C:\Python\lib\site-packages\selenium\webdriver\remote\errorhandler.py&quot;, line 242, in check_response     raise exception_class(message, screen, stacktrace) selenium.common.exceptions.JavascriptException: Message: javascript error: circular reference   (Session info: chrome=83.0.4103.116) </code></pre> </li> </ul> <p>I've been through the following discussions on <em>circular reference</em> and I understand the concept. But I am not sure how should I address the issue here.</p> <ul> <li><a href=""https://stackoverflow.com/questions/1493453/example-of-a-circular-reference-in-javascript"">Example of a circular reference in Javascript?</a></li> <li><a href=""https://stackoverflow.com/questions/14962018/detecting-and-fixing-circular-references-in-javascript"">Detecting and fixing circular references in JavaScript</a></li> <li><a href=""https://stackoverflow.com/questions/16334440/is-circular-reference-between-objects-a-bad-practice"">Is circular reference between objects a bad practice?</a></li> </ul> <p>Can someone help me to retrieve the <code>navigator.plugins</code> please?</p>"	2020-07-04 19:48:04.94 UTC	62734287	"<p>There might be a serialization issue when you query a non-primitive data structure from a browser realm. By closely inspecting the hierarchy of a single plugin, we can see it has a recursive structure which is an issue for the serializer. <a href=""https://i.stack.imgur.com/MJzr3.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/MJzr3.png"" alt=""enter image description here"" /></a></p> <p>If you need a list of plugins, try returning just a serialized, newline-separated string and then split it by a newline symbol in the Python realm.</p> <p>For example:</p> <pre><code>plugins = driver.execute_script(&quot;return Array.from(navigator.plugins).map(({name}) =&gt; name).join('\n');&quot;).split('\n') </code></pre>"			2020-07-04 20:46:20.463 UTC
62799729	javascript|python-3.x	How do i use a python variable in the middle of a javascript code?	<p>How do I use a python variable in the middle of a javascript code?</p> <p>I want to put the variable where it says <code>'test';</code></p> <pre><code>test = 'Lorem ipsum dolor sit amet'  driver.execute_script(&quot;document.querySelector('#react-root').innerText = 'test';&quot;) </code></pre>	2020-07-08 16:52:21.75 UTC	62799876	"<p>You just have to use <a href=""http://zetcode.com/python/fstring/"" rel=""nofollow noreferrer"">string interpolation</a>:</p> <pre><code>test = 'Lorem ipsum dolor sit amet'  driver.execute_script(f&quot;document.querySelector('#react-root').innerText = '{test}';&quot;)  </code></pre>"			2020-07-08 17:01:09.197 UTC
62818066	javascript|python|websocket|portforwarding|dmz	Python / JavaScript - WebSockets connection problem	"<p>I am having several errors with a <strong>WebSockets</strong> server.</p> <p>Previously, I had a lot of problems in acknowledging the server when a connection was established. In the bind address, I have the empty string which is equal to <code>0.0.0.0</code> so I thought that the problem may come from there. For now, the client can only know that it has been connected when the server stops the <code>time</code> async function. I sometimes get the error</p> <p><code>send.html:14 WebSocket connection to ws://86.205.245.32:5678/ failed: WebSocket opening handshake timed out</code></p> <p>but rarely.</p> <p><em><strong>I have lots of questions that can maybe answer this post.</strong></em></p> <ul> <li><p>Can using subprotocol help? If yes, how to use it with a Python server?</p> </li> <li><p>Can using WSS help?</p> </li> <li><p>Do I need to change the bind IP of <code>0.0.0.0</code> to another?</p> </li> </ul> <p><em><strong>The Server</strong></em></p> <pre><code>print(&quot;start serveur&quot;) import time, websockets, asyncio  async def time(websocket, path):     print(&quot;connect&quot;)     print(websocket)     print(await websocket.recv()) start_server = websockets.serve(time, &quot;&quot;, 5678) loop=asyncio.get_event_loop()   loop.run_until_complete(start_server)   loop.run_forever() </code></pre> <p><em><strong>Server's Traceback</strong></em></p> <pre><code>Error in connection handler Traceback (most recent call last):   File &quot;/usr/lib/python3.5/asyncio/tasks.py&quot;, line 241, in _step     result = coro.throw(exc)   File &quot;/usr/local/lib/python3.5/dist-packages/websockets/protocol.py&quot;, line 674, in transfer_data     message = yield from self.read_message()   File &quot;/usr/local/lib/python3.5/dist-packages/websockets/protocol.py&quot;, line 742, in read_message     frame = yield from self.read_data_frame(max_size=self.max_size)   File &quot;/usr/local/lib/python3.5/dist-packages/websockets/protocol.py&quot;, line 815, in read_data_frame     frame = yield from self.read_frame(max_size)   File &quot;/usr/local/lib/python3.5/dist-packages/websockets/protocol.py&quot;, line 884, in read_frame     extensions=self.extensions,   File &quot;/usr/local/lib/python3.5/dist-packages/websockets/framing.py&quot;, line 99, in read     data = yield from reader(2)   File &quot;/usr/lib/python3.5/asyncio/streams.py&quot;, line 668, in readexactly     yield from self._wait_for_data('readexactly')   File &quot;/usr/lib/python3.5/asyncio/streams.py&quot;, line 458, in _wait_for_data     yield from self._waiter   File &quot;/usr/lib/python3.5/asyncio/futures.py&quot;, line 380, in __iter__     yield self  # This tells Task to wait for completion.   File &quot;/usr/lib/python3.5/asyncio/tasks.py&quot;, line 304, in _wakeup     future.result()   File &quot;/usr/lib/python3.5/asyncio/futures.py&quot;, line 285, in result     raise CancelledError concurrent.futures._base.CancelledError  The above exception was the direct cause of the following exception:  Traceback (most recent call last):   File &quot;/usr/local/lib/python3.5/dist-packages/websockets/server.py&quot;, line 169, in handler     yield from self.ws_handler(self, path)   File &quot;webserveur.py&quot;, line 8, in time     print(await websocket.recv())   File &quot;/usr/local/lib/python3.5/dist-packages/websockets/protocol.py&quot;, line 434, in recv     yield from self.ensure_open()   File &quot;/usr/local/lib/python3.5/dist-packages/websockets/protocol.py&quot;, line 658, in ensure_open     ) from self.transfer_data_exc websockets.exceptions.ConnectionClosed: WebSocket connection is closed: code = 1006 (connection closed abnormally [internal]), no reason </code></pre> <p><em><strong>The Client</strong></em></p> <pre><code>&lt;script&gt;     alert(&quot;hello&quot;);      var ws = new WebSocket(&quot;ws://86.205.245.32:5678/&quot;  );//1*              ws.onopen = function (event) {        alert(&quot;had a handshake answer that cause a connection&quot;);        ws.send(&quot;hello&quot;);     }  &lt;/script&gt; </code></pre> <p><em><strong>WebSockets Request</strong></em></p> <pre><code>General Request URL: ws://86.205.245.32:5678/ Request Headers Provisional headers are shown Accept-Encoding: gzip, deflate Accept-Language: en-GB,en;q=0.9,en-US;q=0.8,fr;q=0.7 Cache-Control: no-cache Connection: Upgrade Host: 86.205.245.32:5678 Origin: file:// Pragma: no-cache Sec-WebSocket-Extensions: permessage-deflate; client_max_window_bits Sec-WebSocket-Key: M+CfTACesBfbhkWnFclrsA== Sec-WebSocket-Version: 13 Upgrade: websocket User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.116 Safari/537.36 </code></pre> <p>I want to use <em><strong>DMZ</strong></em> because my network is very strange with lots of protection, so I think that putting the server in a <em><strong>Demilitarize zone</strong></em> will help. For now, I can't tell you if it will be helpful because for now when the client execute the line <code>1* see on the client code</code> it can't connect to the server. What is strange is that without <em><strong>DMZ</strong></em> and the server on a Windows computer, it's the same but for sending data, the client can only see the data of the server when the server closes the connection.</p> <p><em><strong>What did I try</strong></em></p> <ul> <li>I tried to deactivate the firewall</li> <li>I asked questions on StackOverflow</li> </ul> <p>I often have this issues when I close the server during the client execution, even if it doesn't execute the block <code>time</code> that prints <code>print(&quot;connect&quot;)</code>:</p> <pre><code>Task was destroyed but it is pending! task: &lt;Task pending coro=&lt;WebSocketServerProtocol.handler() running at /usr/local/lib/python3.5/dist-packages/websockets/server.py:117&gt; wait_for=&lt;Future pending cb=[Task._wakeup()]&gt;&gt; </code></pre> <p>I also changed the client's code as follows but without success.</p> <pre><code>var ws = new WebSocket(&quot;ws://86.205.245.32:5678/&quot;),         messages = document.createElement('ul');          ws.onopen = function (event) {         alert(&quot;connect&quot;);         ws.send(&quot;hello&quot;);                  } </code></pre> <p><em><strong>The Hardware</strong></em></p> <ul> <li><p>A Windows computer (client)</p> </li> <li><p>A Rasberry Pi (server)</p> </li> </ul> <p><em>Thanks for helping and let me know if you already had this issue and what have you done to solve it. Or if you have found errors in the code that could cause this type of problem</em></p> <p>THANKS</p>"	2020-07-09 15:11:55.377 UTC	62892012	"<p>I tried to reproduce your issue, but my opinion is that your problem is caused by your network infrastructure.</p> <p>The <em><strong>server</strong></em> and the <em><strong>client</strong></em> are very basic and they work smoothly.</p> <p>Divide your problem into different phases:</p> <ol> <li>Use your local environment to debug the code (<strong>client</strong> and <strong>server</strong> in <code>localhost</code>, on your PC)</li> <li>Use your local network to have the first segregation between the <strong>client</strong> and the <strong>server</strong></li> <li>Use some free plans on Cloud Providers to test extended networking (AWS, GCP, DigitalOcean)</li> </ol> <p>Some suggestions may be:</p> <ul> <li>Disable completely the Windows Firewall</li> <li>Check out that you don't have Firewalls on your Linux Distro (UFW, IPTables...)</li> <li>Use the LAN IP of your Raspberry Pi for testing instead of its public IP</li> <li>Make sure that in your <em>Livebox Play</em> you don't have a Firewall in place or some routing rules</li> </ul>"			2020-07-14 09:27:31.93 UTC
62839889	javascript|python|node.js|sockets|tcp	"Send simple TCP messages in JavaScript, similarly to Python .socket"	"<p>Coming from Python, I am trying to achieve a similar result using <code>JavaScript</code> and <code>node.js</code>.</p> <p>I am trying to send a simple TCP message across a network. In <code>Python</code>, I would achieve this in the following way:</p> <pre><code>import socket  device_ip = '192.168.0.10' device_port = 20000  s = socket.socket(socket.AF_INET, socket.SOCK_STREAM) s.settimeout(5) s.connect((device_ip, device_port))  command = ('Message to be sent to device here') s.sendall(command.encode()) s.recv(4096) </code></pre> <p>I have looked at node's <code>socket.io</code> module, but I couldn't find anything as simple as the above solution in <code>Python</code>.</p> <p>The device at the end of <code>device_ip</code> will respond to the message so long as it is TCP encoded, it will then just send back an <code>Ack</code> message which the JS can effectively ignore. The <code>Ack</code> messages only exist as a simple handshake before sending another message. I have the <code>Python</code> code working as desired, but I find myself needing to run this with <code>JS</code> and <code>Node</code>.</p>"	2020-07-10 17:59:31.98 UTC	62840269	"<p>Node provides the <code>Net</code>-<a href=""https://nodejs.org/api/net.html#net_net"" rel=""nofollow noreferrer"">module</a> which basically allows you to create tcp-server and client sockets. Here's a very simple example for a server-socket:</p> <pre><code>const net = require('net'); const server = net.createServer((c) =&gt; {     console.log('client connected');     c.on('end', () =&gt; {         console.log('client disconnected');     });     c.write('hello\r\n');     c.pipe(c); });  server.listen(20000, () =&gt; {     console.log('server socket listening ...'); }); </code></pre> <p>And here's the code for a corresponding client-socket:</p> <pre><code>const net = require('net'); const client = net.createConnection({ port: 20000}, () =&gt; {     client.write('world!\r\n'); }); client.on('data', (data) =&gt; {     console.log(data.toString());     client.end(); }); </code></pre>"			2020-07-10 18:25:31.74 UTC
62845612	javascript|python|selenium	Unable to click buttons using Selenium with Python (JavaScript did not work either)	"<p><a href=""https://www.fire.ca.gov/incidents/2018/"" rel=""nofollow noreferrer"">https://www.fire.ca.gov/incidents/2018/</a>[enter image description here][1]</p> <p>[1]: <a href=""https://i.stack.imgur.com/c6Z5K.png**strong"" rel=""nofollow noreferrer"">https://i.stack.imgur.com/c6Z5K.png**strong</a> text**</p> <p>The idea was trying to pull all the acres burnt on total of 31 pages. Tried with regular click and JS click but both failed. No error was reported it was just the buttons that was not functional --- It never left page 1 so basically I got the same numbers 31 times.</p> <p>Any useful advice will be much appreciated cuz I literally spent a whole day trying to click several god damn buttons.</p> <pre><code>for i in range(31):     records = driver.find_elements_by_class_name('responsive-table-row')     for n in range(1,11):         record_single = records[n].find_elements_by_class_name('responsive-table-cell')         try:             acres = record_single[3].find_element_by_tag_name('span').text           except:             acres = 'N/A'              ws.append([acres])      buttons = driver.find_element_by_class_name('pagination-navigation')     button_parent = buttons.find_element_by_tag_name('ul')     button_list = button_parent.find_elements_by_tag_name('li')      if i &lt;30:         #button_list[i+1].click         driver.execute_script('arguments[0].click()',button_list[i+1])         time.sleep(3) </code></pre>"	2020-07-11 05:37:58.397 UTC	62849515	"<p>Button_list contains the li's.</p> <p>Your script is attempting the click the list items (li) structure , not the anchor within it (a). If you look at the source, the li doesn't contain anything. The anchor contains  javascript href and should fire the event to navigate the page.</p> <p>In your solution, in your loop at the end, you'll want to do something like:</p> <pre><code>Button_list[i+1].find_element_by_tag_name('a').click </code></pre> <p>Alternatively, you can combine all those finds into 1 xpath.  Open chromedevtools, press control+f and enter this: <em>[edit] updated xpath</em></p> <pre><code>//*[@class='pagination-navigation']/ul/li </code></pre> <p>That will create a list of all the li's.</p> <p><em>[edit] Added this bit</em></p> <p>Additionally, you can add the <code>/a</code> to the end and directly create a a list of buttons (still using find element<strong>s</strong>):</p> <pre><code>//*[@class='pagination-navigation']/ul/li/a </code></pre> <p>In my dev tools, this matches 31 elements.</p> <p>That returns multiple matches and you can use that to populate your button_list. There's lots of resources out there to help you learn how to use xpath - just give it a Google :-)</p>"			2020-07-11 13:04:50.1 UTC
62869304	python|web-scraping|beautifulsoup	Python Web Scraping that involves javascript element	"<p>I amt trying to get the size and stock information whether it is out of stock or in stock. <a href=""https://limitededt.com/collections/footwear/products/adidas-originals-jonah-hill-superstar-fw7577"" rel=""nofollow noreferrer"">https://limitededt.com/collections/footwear/products/adidas-originals-jonah-hill-superstar-fw7577</a></p> <p>It looks like I have to click on each sizing manually,  and the button will either show &quot;SOLD OUT&quot; or &quot;Add to CART&quot;.</p> <p>I am able to retrieve basic information from the HTML  page, but this looks like a JS event.</p> <p>When I click on the size, the url changes to</p> <p><a href=""https://limitededt.com/collections/footwear/products/adidas-originals-jonah-hill-superstar-fw7577?variant=32432939466823"" rel=""nofollow noreferrer"">https://limitededt.com/collections/footwear/products/adidas-originals-jonah-hill-superstar-fw7577?variant=32432939466823</a></p> <p>There is additional &quot;variant=32432939466823 &quot;</p> <p>I was thinking I can manually figure out what the variant is, then use request to load the page again and then try to get the button info and determine whether it's in stock or out of stock.</p> <p>Are there any alternatives that I can request once and interact with the sizings to check the stocks?</p> <pre><code>url = &quot;https://limitededt.com/collections/footwear/products/adidas-originals-jonah-hill-superstar-fw7577&quot;  source = requests.get(url).text  soup = BeautifulSoup(source, 'lxml') </code></pre>"	2020-07-13 04:34:02.67 UTC	63105705	"<p>By looking at the networking tab in your Browser you find a <code>JSON</code> that contains all the products - you can load this data simply by adding <code>.json</code> to the URL. This does not contain stock information, though, as this data is loaded from a shopify, which seems to be <em>a Canadian multinational e-commerce company headquartered in Ottawa</em> (according to Wikipedia). This data is loaded into a script tag in the DOM that you can easily extract using BeautifulSoup (though I don't really use it - we could simply use regular expressions).</p> <pre><code>from bs4 import BeautifulSoup import requests import re  # define both URLs: for the JSON and the actual website for the shopify stock url = 'https://limitededt.com/collections/footwear/products/adidas-originals-jonah-hill-superstar-fw7577' product_info = url + '.json'  # fetch both data sources with requests.Session() as session:     soup = BeautifulSoup(session.get(url).text, 'html.parser')     swym = soup.find('script', {'id': 'swym-snippet'})     info = session.get(product_info).json()  # this will contain all the products and their stock products = dict()  # get the data for each product from the json for variant in info['product']['variants']:     products[variant['id']] = variant  # find the shopify data using a regular expression regex = re.compile(r'SwymProductVariants\[[0-9]+\] = ({[^(;)]+)') inventory = re.findall(regex, swym.text)  # add the inventory information to the previously constructed product dictionary for inv in inventory:     indices = [key.strip().split(':')[1] for index, key in enumerate(inv.split(',')) if index in [1, 5]]     products[int(indices[0])]['stock'] = int(indices[1]) </code></pre>"			2020-07-26 21:07:15.937 UTC
62870544	python|web-scraping|beautifulsoup	Python Web Scraping Beautiful Soup Parse Javascript Element and process variable	"<p>I am trying to retrieve the variable in json format to python.</p> <pre><code>url = &quot;https://limitededt.com/collections/footwear/products/adidas-originals-jonah-hill-superstar-fw7577&quot; source = requests.get(url).text  soup = BeautifulSoup(source, 'lxml') print(soup.findAll('script')[10]) </code></pre> <p>The code above produces:</p> <pre><code>&lt;script&gt;window.ShopifyAnalytics = window.ShopifyAnalytics || {}; window.ShopifyAnalytics.meta = window.ShopifyAnalytics.meta || {}; window.ShopifyAnalytics.meta.currency = 'SGD'; var meta = {&quot;product&quot;:{&quot;id&quot;:4738795503687,&quot;gid&quot;:&quot;gid:\/\/shopify\/Product\/4738795503687&quot;,&quot;vendor&quot;:&quot;adidas Originals&quot;,&quot;type&quot;:&quot;footwear&quot;,&quot;variants&quot;:[{&quot;id&quot;:32432939204679,&quot;price&quot;:18000,&quot;name&quot;:&quot;+ Jonah Hill Superstar - 7&quot;,&quot;public_title&quot;:&quot;7&quot;,&quot;sku&quot;:&quot;FW7577&quot;},{&quot;id&quot;:32432939237447,&quot;price&quot;:18000,&quot;name&quot;:&quot;+ Jonah Hill Superstar - 7.5&quot;,&quot;public_title&quot;:&quot;7.5&quot;,&quot;sku&quot;:&quot;FW7577&quot;},{&quot;id&quot;:32432939270215,&quot;price&quot;:18000,&quot;name&quot;:&quot;+ Jonah Hill Superstar - 8&quot;,&quot;public_title&quot;:&quot;8&quot;,&quot;sku&quot;:&quot;FW7577&quot;},{&quot;id&quot;:32432939302983,&quot;price&quot;:18000,&quot;name&quot;:&quot;+ Jonah Hill Superstar - 8.5&quot;,&quot;public_title&quot;:&quot;8.5&quot;,&quot;sku&quot;:&quot;FW7577&quot;},{&quot;id&quot;:32432939335751,&quot;price&quot;:18000,&quot;name&quot;:&quot;+ Jonah Hill Superstar - 9&quot;,&quot;public_title&quot;:&quot;9&quot;,&quot;sku&quot;:&quot;FW7577&quot;},{&quot;id&quot;:32432939368519,&quot;price&quot;:18000,&quot;name&quot;:&quot;+ Jonah Hill Superstar - 9.5&quot;,&quot;public_title&quot;:&quot;9.5&quot;,&quot;sku&quot;:&quot;FW7577&quot;},{&quot;id&quot;:32432939401287,&quot;price&quot;:18000,&quot;name&quot;:&quot;+ Jonah Hill Superstar - 10&quot;,&quot;public_title&quot;:&quot;10&quot;,&quot;sku&quot;:&quot;FW7577&quot;},{&quot;id&quot;:32432939434055,&quot;price&quot;:18000,&quot;name&quot;:&quot;+ Jonah Hill Superstar - 10.5&quot;,&quot;public_title&quot;:&quot;10.5&quot;,&quot;sku&quot;:&quot;FW7577&quot;},{&quot;id&quot;:32432939466823,&quot;price&quot;:18000,&quot;name&quot;:&quot;+ Jonah Hill Superstar - 11&quot;,&quot;public_title&quot;:&quot;11&quot;,&quot;sku&quot;:&quot;FW7577&quot;},{&quot;id&quot;:32432939499591,&quot;price&quot;:18000,&quot;name&quot;:&quot;+ Jonah Hill Superstar - 11.5&quot;,&quot;public_title&quot;:&quot;11.5&quot;,&quot;sku&quot;:&quot;FW7577&quot;}]},&quot;page&quot;:{&quot;pageType&quot;:&quot;product&quot;,&quot;resourceType&quot;:&quot;product&quot;,&quot;resourceId&quot;:4738795503687}}; for (var attr in meta) {   window.ShopifyAnalytics.meta[attr] = meta[attr]; }&lt;/script&gt; </code></pre> <p>Basically I want to retrieve the meta variable's content and access the key value pairs in python.</p> <p>How do I do that?</p>"	2020-07-13 06:45:37.823 UTC	62870738	"<pre><code>import re, json  url = &quot;https://limitededt.com/collections/footwear/products/adidas-originals-jonah-hill-superstar-fw7577&quot; source = requests.get(url).text  soup = BeautifulSoup(source, 'lxml') script = soup.findAll('script')[10].text.strip()  p = re.compile(&quot;meta = ({(.*)})&quot;) m = p.search(script) json_str = m[1]  json_data = json.loads(json_str) print(json_data) </code></pre> <p>Output:</p> <pre><code>{'product': {'id': 4738795503687,   'gid': 'gid://shopify/Product/4738795503687',   'vendor': 'adidas Originals',   'type': 'footwear',   'variants': [{'id': 32432939204679,     'price': 18000,     'name': '+ Jonah Hill Superstar - 7',     'public_title': '7',     'sku': 'FW7577'},    {'id': 32432939237447,     'price': 18000,     'name': '+ Jonah Hill Superstar - 7.5',     'public_title': '7.5',     'sku': 'FW7577'},    {'id': 32432939270215,     'price': 18000,     'name': '+ Jonah Hill Superstar - 8',     'public_title': '8',     'sku': 'FW7577'},    {'id': 32432939302983,     'price': 18000,     'name': '+ Jonah Hill Superstar - 8.5',     'public_title': '8.5',     'sku': 'FW7577'},    {'id': 32432939335751,     'price': 18000,     'name': '+ Jonah Hill Superstar - 9',     'public_title': '9',     'sku': 'FW7577'},    {'id': 32432939368519,     'price': 18000,     'name': '+ Jonah Hill Superstar - 9.5',     'public_title': '9.5',     'sku': 'FW7577'},    {'id': 32432939401287,     'price': 18000,     'name': '+ Jonah Hill Superstar - 10',     'public_title': '10',     'sku': 'FW7577'},    {'id': 32432939434055,     'price': 18000,     'name': '+ Jonah Hill Superstar - 10.5',     'public_title': '10.5',     'sku': 'FW7577'},    {'id': 32432939466823,     'price': 18000,     'name': '+ Jonah Hill Superstar - 11',     'public_title': '11',     'sku': 'FW7577'},    {'id': 32432939499591,     'price': 18000,     'name': '+ Jonah Hill Superstar - 11.5',     'public_title': '11.5',     'sku': 'FW7577'}]},  'page': {'pageType': 'product',   'resourceType': 'product',   'resourceId': 4738795503687}} </code></pre>"			2020-07-13 07:00:39.783 UTC
62870544	python|web-scraping|beautifulsoup	Python Web Scraping Beautiful Soup Parse Javascript Element and process variable	"<p>I am trying to retrieve the variable in json format to python.</p> <pre><code>url = &quot;https://limitededt.com/collections/footwear/products/adidas-originals-jonah-hill-superstar-fw7577&quot; source = requests.get(url).text  soup = BeautifulSoup(source, 'lxml') print(soup.findAll('script')[10]) </code></pre> <p>The code above produces:</p> <pre><code>&lt;script&gt;window.ShopifyAnalytics = window.ShopifyAnalytics || {}; window.ShopifyAnalytics.meta = window.ShopifyAnalytics.meta || {}; window.ShopifyAnalytics.meta.currency = 'SGD'; var meta = {&quot;product&quot;:{&quot;id&quot;:4738795503687,&quot;gid&quot;:&quot;gid:\/\/shopify\/Product\/4738795503687&quot;,&quot;vendor&quot;:&quot;adidas Originals&quot;,&quot;type&quot;:&quot;footwear&quot;,&quot;variants&quot;:[{&quot;id&quot;:32432939204679,&quot;price&quot;:18000,&quot;name&quot;:&quot;+ Jonah Hill Superstar - 7&quot;,&quot;public_title&quot;:&quot;7&quot;,&quot;sku&quot;:&quot;FW7577&quot;},{&quot;id&quot;:32432939237447,&quot;price&quot;:18000,&quot;name&quot;:&quot;+ Jonah Hill Superstar - 7.5&quot;,&quot;public_title&quot;:&quot;7.5&quot;,&quot;sku&quot;:&quot;FW7577&quot;},{&quot;id&quot;:32432939270215,&quot;price&quot;:18000,&quot;name&quot;:&quot;+ Jonah Hill Superstar - 8&quot;,&quot;public_title&quot;:&quot;8&quot;,&quot;sku&quot;:&quot;FW7577&quot;},{&quot;id&quot;:32432939302983,&quot;price&quot;:18000,&quot;name&quot;:&quot;+ Jonah Hill Superstar - 8.5&quot;,&quot;public_title&quot;:&quot;8.5&quot;,&quot;sku&quot;:&quot;FW7577&quot;},{&quot;id&quot;:32432939335751,&quot;price&quot;:18000,&quot;name&quot;:&quot;+ Jonah Hill Superstar - 9&quot;,&quot;public_title&quot;:&quot;9&quot;,&quot;sku&quot;:&quot;FW7577&quot;},{&quot;id&quot;:32432939368519,&quot;price&quot;:18000,&quot;name&quot;:&quot;+ Jonah Hill Superstar - 9.5&quot;,&quot;public_title&quot;:&quot;9.5&quot;,&quot;sku&quot;:&quot;FW7577&quot;},{&quot;id&quot;:32432939401287,&quot;price&quot;:18000,&quot;name&quot;:&quot;+ Jonah Hill Superstar - 10&quot;,&quot;public_title&quot;:&quot;10&quot;,&quot;sku&quot;:&quot;FW7577&quot;},{&quot;id&quot;:32432939434055,&quot;price&quot;:18000,&quot;name&quot;:&quot;+ Jonah Hill Superstar - 10.5&quot;,&quot;public_title&quot;:&quot;10.5&quot;,&quot;sku&quot;:&quot;FW7577&quot;},{&quot;id&quot;:32432939466823,&quot;price&quot;:18000,&quot;name&quot;:&quot;+ Jonah Hill Superstar - 11&quot;,&quot;public_title&quot;:&quot;11&quot;,&quot;sku&quot;:&quot;FW7577&quot;},{&quot;id&quot;:32432939499591,&quot;price&quot;:18000,&quot;name&quot;:&quot;+ Jonah Hill Superstar - 11.5&quot;,&quot;public_title&quot;:&quot;11.5&quot;,&quot;sku&quot;:&quot;FW7577&quot;}]},&quot;page&quot;:{&quot;pageType&quot;:&quot;product&quot;,&quot;resourceType&quot;:&quot;product&quot;,&quot;resourceId&quot;:4738795503687}}; for (var attr in meta) {   window.ShopifyAnalytics.meta[attr] = meta[attr]; }&lt;/script&gt; </code></pre> <p>Basically I want to retrieve the meta variable's content and access the key value pairs in python.</p> <p>How do I do that?</p>"	2020-07-13 06:45:37.823 UTC	62878105	<p>This works for me</p> <pre><code>import json import requests  url = &quot;https://limitededt.com/collections/footwear/products/adidas-originals-jonah-hill-superstar-fw7577&quot; json_data = session.get(url + '.json').json() </code></pre>			2020-07-13 14:32:04.117 UTC
62879698	javascript	Any tips on context manager similar to Python in Javascript?	<p>I quite liked Python's context manager where I did not have to be concerned with how the resource was obtained or cleaned up afterwards. Is there a way to do this in a neat way in Javascript?</p>	2020-07-13 15:59:23.727 UTC	70446940	"<p>You can make something similar using generator functions in javascript:</p> <pre class=""lang-js prettyprint-override""><code>function* usingGroup() {    // setup    console.group()    try {      yield    } finally {      // cleanup      console.groupEnd()    } } </code></pre> <p>and to use it, you can use a <code>for ... of</code> loop:</p> <pre class=""lang-js prettyprint-override""><code>for(const _ of usingGroup()) {    console.log('inside a group') } </code></pre> <p>This method is similar to how you define context managers in python using the <code>@contextmanager</code> decorator. Although the way of using a for loop to define where the context applies feels strange in my opinion.</p> <p><em>How does it work:</em></p> <p>Abstracting away the whole generator object and iterator protocol, you can think of it as doing this: before the first iteration of the loop, the code inside the generator function is run until the <code>yield</code> statement, at this point, the for loop body runs once since a value has been yielded by the generator, before the next iteration, the rest of the code in the generator is run. Since it does not yield, the loop considers it done and exits without executing its body again. The <code>try ... finally</code> ensures that even if an error is thrown, the code gets executed.</p> <p>If you need to use some value inside your loop (like a file you opened for example), you can just <code>yield</code> it inside the generator.</p> <p><em>full code:</em></p> <pre class=""lang-js prettyprint-override""><code>function* usingGroup() {    console.group()    try {      yield    } finally {      console.groupEnd()    } }  for(const _ of usingGroup()) {    console.log('inside a group') } </code></pre>"			2021-12-22 09:34:44.937 UTC
62879698	javascript	Any tips on context manager similar to Python in Javascript?	<p>I quite liked Python's context manager where I did not have to be concerned with how the resource was obtained or cleaned up afterwards. Is there a way to do this in a neat way in Javascript?</p>	2020-07-13 15:59:23.727 UTC	71383627	"<p>I'm happy to break this to you, we now have that in JavaScript. It's a tiny library called &quot;contextlib&quot; (closely resembling python's contexlib).</p> <p>Disclaimer: I authored contextlib.</p> <p>You can install using <code>npm install contextlib</code>.</p> <pre class=""lang-js prettyprint-override""><code>import {With, contextmanager} from 'contextlib';  class context:     enter() { console.log('entering context') }      exit() { console.log('leaving context') }  With(new context(), () =&gt; {    console.log('inside context') }) </code></pre> <p>You can also use the <code>contextmanager</code> decorator</p> <pre><code>context = contextmanager(function*(){     try {         console.log('entering context')         yield     } finally {         console.log('leaving context')     } }) </code></pre> <p>You should check it out on <a href=""https://github.com/mcsavvy/contextlib"" rel=""nofollow noreferrer"">github</a>.</p>"			2022-03-07 15:42:14.72 UTC
62879698	javascript	Any tips on context manager similar to Python in Javascript?	<p>I quite liked Python's context manager where I did not have to be concerned with how the resource was obtained or cleaned up afterwards. Is there a way to do this in a neat way in Javascript?</p>	2020-07-13 15:59:23.727 UTC	65697214	"<p>I also surprised by missing this feature. Unfortunately, only callback based solutions are available in JS</p> <p><a href=""https://promise-nuggets.github.io/articles/21-context-managers-transactions.html"" rel=""nofollow noreferrer"">https://promise-nuggets.github.io/articles/21-context-managers-transactions.html</a></p>"			2021-01-13 07:14:47.69 UTC
62882219	javascript|opencv|transformation	I need guidance on how to convert the creation of a matrix via python/numpy to javascript	"<p>I need to align 2 images with opencv.js</p> <p>I'm attempting to find a way around the problem found <a href=""https://stackoverflow.com/questions/62744310/opencv-js-issue-with-findtransformecc-criteria"">here</a>. So I am trying <a href=""https://www.learnopencv.com/image-alignment-feature-based-using-opencv-c-python/"" rel=""nofollow noreferrer"">this approach</a>.</p> <p>I'm having issues trying to recreate (and calculate) the python numpy transformation matrix in javascript.</p> <p>Here is the python:</p> <pre><code> image_baseline_keypoints = np.float32([kpv_image_baseline[m.queryIdx].pt for m in matches[:number_of_matches]]).reshape(-1, 1, 2); image_keypoints = n.float32([kpv_image[m.trainIdx].pt for m in matches[:number_of_matches]]).reshape(-1, 1, 2);  (note: the article [linked above][2] has another way of creating the matrix via numpy as well. ) </code></pre> <p><strong>what is the appropriate approach to doing the same thing in javascript?</strong>  is it to use numjs (attempting it next but if possible i don't want to bring in another library)?</p> <p>here is the overall JS code:</p> <pre><code>     function Align_img2() {          let image_baseline = cv.imread(imgElement_Baseline);         let image = cv.imread('imageChangeup');          let image_baseline_gray = new cv.Mat();         let image_gray = new cv.Mat();          //get size of baseline image         var image_baseline_width = image_baseline.cols;         var image_baseline_height = image_baseline.rows;          //resize image to baseline image         let image_baseline_dimensions = new cv.Size(image_baseline_width, image_baseline_height);         cv.resize(image, image, image_baseline_dimensions, cv.INTER_AREA);          // Convert images to grayscale         cv.cvtColor(image_baseline, image_baseline_gray, cv.COLOR_BGR2GRAY);         cv.cvtColor(image, image_gray, cv.COLOR_BGR2GRAY);          // Initiate detector         var orb = new cv.ORB(10000);         var kpv_image_baseline = new cv.KeyPointVector();         var kpv_image = new cv.KeyPointVector();         var descriptors_image_baseline =new cv.Mat();         var descriptors_image =new cv.Mat();         var image_baseline_keypoints=new cv.Mat();         var image_keypoints =new cv.Mat();          // find the keypoints with ORB         orb.detect(image_baseline_gray, kpv_image_baseline);         orb.detect(image_gray, kpv_image);          // compute the descriptors with ORB         orb.compute(image_baseline_gray, kpv_image_baseline, descriptors_image_baseline);         orb.compute(image_gray, kpv_image, descriptors_image);          // Debug to verify key points found         //let color = new cv.Scalar(0,255,0, 255);         //cv.drawKeypoints(image_baseline_gray, kpv_image_baseline, image_baseline_keypoints, color);         //cv.drawKeypoints(image_gray, kpv_image, image_keypoints, color);         //console.log(image_baseline_keypoints);         //console.log(image_keypoints);          // find matches         let bf = new cv.BFMatcher(cv.NORM_HAMMING, 1);         // Match descriptors         let matches = new cv.DMatchVector();         bf.match(descriptors_image_baseline, descriptors_image, matches);          // Debug to verify matches found         //var matches_img = new cv.Mat();         //cv.drawMatches(image_baseline_gray, kpv_image_baseline, image_gray, kpv_image, matches, matches_img, color);         //console.log(matches_img);          // calculate transformation matrix         number_of_matches = 10;         /*          image_baseline_keypoints = np.float32([kpv_image_baseline[m.queryIdx].pt for m in matches[:number_of_matches]]).reshape(-1, 1, 2);         image_keypoints = np.float32([kpv_image[m.trainIdx].pt for m in matches[:number_of_matches]]).reshape(-1, 1, 2);         */          //note: np =&gt; nj in numjs         image_baseline_keypoints = nj.float32([kpv_image_baseline[m.queryIdx].pt for (m in matches)]).reshape(-1, 1, 2);         image_keypoints = nj.float32([kpv_image[m.trainIdx].pt for (m in matches)]).reshape(-1, 1, 2);          // Calculate Homography         var h = new cv.Mat();         h = cv.findHomography(image_baseline_keypoints, image_keypoints);          // Warp image to baseline_image based on homography         var dst = new cv.Mat();         cv.warpPerspective(image_gray, dst, h, (image_baseline_gray.shape[1], image_baseline_gray.shape[0]));         cv.imshow('imageChangeup', dst);          matches_img.delete();         matches.delete();         bf.delete();         orb.delete();         kpv_image_baseline.delete();         kpv_image.delete();         descriptors_image_baseline.delete();         descriptors_image.delete();         image_baseline_keypoints.delete();         image_keypoints.delete();         image_baseline_gray.delete();         image_gray.delete();         h.delete();         dst.delete();     };  </code></pre>"	2020-07-13 18:39:31.213 UTC	63695553	"<p>Unfortunately , opencvjs doc is AWFUL ! actually there is nothing to be named as doc ! cv.findHomography method has 3 arguments . where two first ones must be matArray . you must convert your pointA and pointB to matArray by calling : <code>cv.matFromArray(number_of_cols_pointsA,2,cv.CV_32F,pointsA)</code> and here , &quot;2&quot; is array dimention . and CV_32F referes to float32 type mat . and for the third argument of <code>findHomography</code> you can use <code>cv.RANSAC</code></p>"			2020-09-01 21:13:44.5 UTC
62892495	javascript|python|selenium|web-scraping|beautifulsoup	Scraping a specific website with a search box and javascripts in Python	"<p>On the website <a href=""https://sray.arabesque.com/dashboard"" rel=""nofollow noreferrer"">https://sray.arabesque.com/dashboard</a> there is a search box &quot;input&quot; in html. I want to enter a company name in the search box, choose the first suggestion for that name in the dropout menu (e.g., &quot;Anglo American plc&quot;), go to the url with the info about that company, load javascripts to get full html version of the obtained page, and then scrape it for GC Score, ESG Score, Temperature Score in the bottom.</p> <pre><code>!apt install chromium-chromedriver !cp /usr/lib/chromium-browser/chromedriver /usr/bin !pip install selenium  from selenium import webdriver from selenium.webdriver.common.keys import Keys options = webdriver.ChromeOptions() options.add_argument('-headless') options.add_argument('-no-sandbox') options.add_argument('-disable-dev-shm-usage')  wd = webdriver.Chrome('chromedriver',options=options)  companies = ['Anglo American plc']  for company in companies:   # dryscrape.start_xvfb()   # session = dryscrape.Session()   # session.visit(&quot;https://srayapi.arabesque.com/api/sray/company/history/004BTP-E&quot;)   resp = wd.get('https://sray.arabesque.com/dashboard/') #print(driver.page_source)   e = wd.find_element_by_id(id_='mat-input-0')   e.send_keys(company)   e.send_keys(Keys.ENTER)   innerHTML = e.execute_script(&quot;return document.body.innerHTML&quot;)   print(innerHTML) </code></pre> <p>I don't quite understand how to visit an URL with info about Anglo American and scrape it if we don't know the URL after entering the company name in the search box.</p>"	2020-07-14 09:54:22.7 UTC	62897284	"<p>Without exactly knowing why you want to use selenium, use the search and then getting another site, here is what I would do to get the data you are looking for:</p> <pre><code>import requests import json  session = requests.Session() url = 'https://srayapi.arabesque.com/api/sray/q' response = session.get(url).json()  rays = response['data']['rays'] [ray for ray in rays if ray['name'].startswith('Anglo American')] </code></pre> <p>Then do whatever you want, so for <em>esg</em>, <em>gc</em> and <em>temperature</em> perhaps:</p> <pre><code>myObj = [{result['name']: {'gc': result['gc'], 'esg': result['esg'], 'temp': result['score_near']}} for result in results] </code></pre>"			2020-07-14 14:18:19.353 UTC
62892495	javascript|python|selenium|web-scraping|beautifulsoup	Scraping a specific website with a search box and javascripts in Python	"<p>On the website <a href=""https://sray.arabesque.com/dashboard"" rel=""nofollow noreferrer"">https://sray.arabesque.com/dashboard</a> there is a search box &quot;input&quot; in html. I want to enter a company name in the search box, choose the first suggestion for that name in the dropout menu (e.g., &quot;Anglo American plc&quot;), go to the url with the info about that company, load javascripts to get full html version of the obtained page, and then scrape it for GC Score, ESG Score, Temperature Score in the bottom.</p> <pre><code>!apt install chromium-chromedriver !cp /usr/lib/chromium-browser/chromedriver /usr/bin !pip install selenium  from selenium import webdriver from selenium.webdriver.common.keys import Keys options = webdriver.ChromeOptions() options.add_argument('-headless') options.add_argument('-no-sandbox') options.add_argument('-disable-dev-shm-usage')  wd = webdriver.Chrome('chromedriver',options=options)  companies = ['Anglo American plc']  for company in companies:   # dryscrape.start_xvfb()   # session = dryscrape.Session()   # session.visit(&quot;https://srayapi.arabesque.com/api/sray/company/history/004BTP-E&quot;)   resp = wd.get('https://sray.arabesque.com/dashboard/') #print(driver.page_source)   e = wd.find_element_by_id(id_='mat-input-0')   e.send_keys(company)   e.send_keys(Keys.ENTER)   innerHTML = e.execute_script(&quot;return document.body.innerHTML&quot;)   print(innerHTML) </code></pre> <p>I don't quite understand how to visit an URL with info about Anglo American and scrape it if we don't know the URL after entering the company name in the search box.</p>"	2020-07-14 09:54:22.7 UTC	62895287	"<p>You can do that using selenium.Couple of things you need to update.</p> <p>While interacting headless you need to provide <code>window size</code>.</p> <p>Induce <code>WebDriverWait</code>() to avoid synchronization issue.</p> <p><strong>Code</strong>:</p> <pre><code>from selenium import webdriver from selenium.webdriver.support.ui import WebDriverWait from selenium.webdriver.support import expected_conditions as EC from selenium.webdriver.common.by import By  options = webdriver.ChromeOptions() options.add_argument('-headless') options.add_argument('-no-sandbox') options.add_argument('-disable-dev-shm-usage') options.add_argument('window-size=1920,1080')  wd = webdriver.Chrome(options=options)  companies = ['Anglo American plc']  for company in companies:   wd.get('https://sray.arabesque.com/dashboard/')   WebDriverWait(wd, 20).until(EC.element_to_be_clickable((By.XPATH, &quot;//a[text()='list']&quot;))).click()   WebDriverWait(wd, 20).until(EC.element_to_be_clickable((By.XPATH, &quot;//input[@id='mat-input-0']&quot;))).send_keys(company)   WebDriverWait(wd, 20).until(EC.element_to_be_clickable((By.XPATH, &quot;//span[contains(.,' Anglo American plc ')]&quot;))).click()   WebDriverWait(wd, 20).until(EC.element_to_be_clickable((By.XPATH, &quot;(//span[normalize-space(.)='Open dashboard'])[1]&quot;))).click()   WebDriverWait(wd,10).until(EC.visibility_of_element_located((By.CSS_SELECTOR,&quot;div.mat-tab-labels&quot;)))   print(wd.find_element_by_xpath(&quot;//div[@class='mat-tab-label-content'][contains(.,'GC Score')]/span&quot;).text)   print(wd.find_element_by_xpath(&quot;//div[@class='mat-tab-label-content'][contains(.,'ESG Score')]/span&quot;).text)   print(wd.find_element_by_xpath(&quot;//div[@class='mat-tab-label-content'][contains(.,'Temp')]/span&quot;).text) </code></pre> <p><strong>Output</strong>:</p> <pre><code>57.03 53.78 2.7°C     </code></pre>"			2020-07-14 12:32:28.82 UTC
62925743	javascript|python|selenium|web-scraping|beautifulsoup	How do I extract the data from these JavaScript tables using Selenium and Python?	"<p>I am very new to Python, JavaScript, and Web-Scraping. I am trying to write code that writes all of the data in tables like this into a csv file. The webpage is &quot;https://www.mcmaster.com/cam-lock-fittings/material~aluminum/&quot;</p> <p><a href=""https://i.stack.imgur.com/xQBOJ.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/xQBOJ.png"" alt=""enter image description here"" /></a></p> <p>I started by trying to find the data in the html but then realized that the website uses JavaScript. I then tried using selenium but I cannot find anywhere in the JavaScript code that has the actual data that is displayed in these tables. I wrote this code to see if I could find the display data anywhere but I was unable to find it.</p> <pre><code>from urllib.request import urlopen from bs4 import BeautifulSoup from selenium import webdriver  url = 'https://www.mcmaster.com/cam-lock-fittings/material~aluminum/'   options = webdriver.ChromeOptions() options.add_experimental_option('excludeSwitches', ['enable-logging']) driver = webdriver.Chrome(executable_path='C:/Users/Brian Knoll/Desktop/chromedriver.exe', options=options)  driver.get(url) html = driver.execute_script(&quot;return document.documentElement.outerHTML&quot;) driver.close()  filename = &quot;McMaster Text.txt&quot; fo = open(filename, &quot;w&quot;) fo.write(html) fo.close() </code></pre> <p>I'm sure there's an obvious answer that is just going over my head. Any help would be greatly appreciated! Thank you!</p>"	2020-07-16 00:39:03.68 UTC	62928234	"<p>I guess you need to wait till the table your looking for is loaded.<br /> To do so, add the following line to wait for 10 seconds before start scraping the data</p> <pre><code>fullLoad = WebDriverWait(driver, 10).until(EC.presence_of_element_located((By.XPATH, &quot;//div[contains(@class, 'ItmTblCntnr')]&quot;))) </code></pre> <p>Here is the full code:</p> <pre><code>from urllib.request import urlopen from bs4 import BeautifulSoup from selenium import webdriver from selenium.webdriver.support.ui import WebDriverWait from selenium.webdriver.support import expected_conditions as EC from selenium.webdriver.common.by import By  url = 'https://www.mcmaster.com/cam-lock-fittings/material~aluminum/'   options = webdriver.ChromeOptions() options.add_experimental_option('excludeSwitches', ['enable-logging']) driver = webdriver.Chrome(executable_path=os.path.abspath(&quot;chromedriver&quot;), options=options)  driver.get(url) fullLoad = WebDriverWait(driver, 10).until(EC.presence_of_element_located((By.XPATH, &quot;//div[contains(@class, 'ItmTblCntnr')]&quot;)))  html = driver.execute_script(&quot;return document.documentElement.outerHTML&quot;) driver.close()  filename = &quot;McMaster Text.txt&quot; fo = open(filename, &quot;w&quot;) fo.write(html) fo.close() </code></pre>"			2020-07-16 05:45:11.487 UTC
62936214	python|flask|charts|google-visualization	Flask Python - Google Chart javascript is not working passing string as parameter in html page	"<p>I have this string in my flask app.</p> <p><a href=""https://i.stack.imgur.com/J2ZZn.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/J2ZZn.png"" alt=""enter image description here"" /></a></p> <p>I am passing this string for my google chart in page, but its not working. Somebody could help me? <a href=""https://i.stack.imgur.com/ZLBa6.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/ZLBa6.png"" alt=""enter image description here"" /></a></p> <p>My javascript and HTML page <a href=""https://i.stack.imgur.com/LfA4b.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/LfA4b.png"" alt=""enter image description here"" /></a></p>"	2020-07-16 13:47:12.363 UTC	62937130	"<p><code>arrayToDataTable</code> expects an array, not a string.</p> <p>you could parse the string as JSON...</p> <pre><code>JSON.parse(my_string)  var data2 = google.visualization.arrayToDataTable(JSON.parse(my_string)); </code></pre> <p>but first, you will need to change <strong>all</strong> the single quotes...</p> <pre><code>['Month',  ... </code></pre> <p>to double quotes...</p> <pre><code>[&quot;Month&quot;,  ... </code></pre>"			2020-07-16 14:36:52.613 UTC
62939087	python|json|python-requests|splunk|splunk-sdk	"How to connect to Splunk API via Python, receiving javascript error"	"<p>I am trying to connect to Splunk via API using python. I can connect, and get a 200 status code but when I read the content, it doesn't read the content of the page. View below:</p> <p><a href=""https://i.stack.imgur.com/0E597.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/0E597.png"" alt=""enter image description here"" /></a></p> <p>Here is my code:</p> <pre><code>import json import requests import re  baseurl = 'https://my_splunk_url:8888' username = 'my_username' password = 'my_password'  headers={&quot;Content-Type&quot;: &quot;application/json&quot;}  s = requests.Session() s.proxies = {&quot;http&quot;: &quot;my_proxy&quot;}  r = s.get(baseurl, auth=(username, password), verify=False, headers=None, data=None)  print(r.status_code) print(r.text) </code></pre> <p>I am new to Splunk and python so any ideas or suggestions as to why this is happening would help.</p>"	2020-07-16 16:19:28.877 UTC	66647250	"<p>Nice piece of coding. One of the wonderful aspects of Python is the ability to use other people's well written packages. In this case, why not use Splunk's Python packages to do all of that work, with a lot less coding around it.</p> <p>pip install splunklib.</p> <p>Then add the following to your import block</p> <p>import splunklib.client as client</p> <p>import splunklib.results as results</p> <p>pypi.org has documentation on some of the usage, Splunk has an excellent set of how-to documents. Remember, be lazy, use someone else's work to make your work look better.</p>"			2021-03-15 23:48:04.17 UTC
62939087	python|json|python-requests|splunk|splunk-sdk	"How to connect to Splunk API via Python, receiving javascript error"	"<p>I am trying to connect to Splunk via API using python. I can connect, and get a 200 status code but when I read the content, it doesn't read the content of the page. View below:</p> <p><a href=""https://i.stack.imgur.com/0E597.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/0E597.png"" alt=""enter image description here"" /></a></p> <p>Here is my code:</p> <pre><code>import json import requests import re  baseurl = 'https://my_splunk_url:8888' username = 'my_username' password = 'my_password'  headers={&quot;Content-Type&quot;: &quot;application/json&quot;}  s = requests.Session() s.proxies = {&quot;http&quot;: &quot;my_proxy&quot;}  r = s.get(baseurl, auth=(username, password), verify=False, headers=None, data=None)  print(r.status_code) print(r.text) </code></pre> <p>I am new to Splunk and python so any ideas or suggestions as to why this is happening would help.</p>"	2020-07-16 16:19:28.877 UTC	62946463	"<p>You need to authenticate first to get a token, then you'll be able to hit the rest of REST endpoints. The auth endpoint it at <code>/servicesNS/admin/search/auth/login</code>, which will give you the <code>session_key</code>, which you then provide to subsequent requests.</p> <p>Here is some code that uses requests to authenticate to a Splunk instance, then start a search. It then checks to see if the search is complete, if not, wait a second and then check again. Keep checking and sleeping until the search is done, then print out the results.</p> <pre><code>import time # need for sleep from xml.dom import minidom  import json, pprint  import requests from requests.packages.urllib3.exceptions import InsecureRequestWarning requests.packages.urllib3.disable_warnings(InsecureRequestWarning)   base_url = 'https://localhost:8089' username = 'admin' password = 'changeme'  search_query = &quot;search=search index=*&quot;  r = requests.get(base_url+&quot;/servicesNS/admin/search/auth/login&quot;,     data={'username':username,'password':password}, verify=False)  session_key = minidom.parseString(r.text).getElementsByTagName('sessionKey')[0].firstChild.nodeValue print (&quot;Session Key:&quot;, session_key)  r = requests.post(base_url + '/services/search/jobs/', data=search_query,     headers = { 'Authorization': ('Splunk %s' %session_key)},     verify = False)  sid = minidom.parseString(r.text).getElementsByTagName('sid')[0].firstChild.nodeValue print (&quot;Search ID&quot;, sid)  done = False while not done:     r = requests.get(base_url + '/services/search/jobs/' + sid,         headers = { 'Authorization': ('Splunk %s' %session_key)},         verify = False)     response = minidom.parseString(r.text)     for node in response.getElementsByTagName(&quot;s:key&quot;):         if node.hasAttribute(&quot;name&quot;) and node.getAttribute(&quot;name&quot;) == &quot;dispatchState&quot;:             dispatchState = node.firstChild.nodeValue             print (&quot;Search Status: &quot;, dispatchState)             if dispatchState == &quot;DONE&quot;:                 done = True             else:                 time.sleep(1)  r = requests.get(base_url + '/services/search/jobs/' + sid + '/results/',     headers = { 'Authorization': ('Splunk %s' %session_key)},     data={'output_mode': 'json'},     verify = False)  pprint.pprint(json.loads(r.text)) </code></pre> <p>Many of the request calls thare used include the flag, <code>verify = False</code> to avoid issues with the default self-signed SSL certs, but you can drop that if you have legit certificates.</p> <p>Published a while ago at <a href=""https://gist.github.com/sduff/aca550a8df636fdc07326225de380a91"" rel=""nofollow noreferrer"">https://gist.github.com/sduff/aca550a8df636fdc07326225de380a91</a></p>"			2020-07-17 03:04:24.977 UTC
62939572	javascript|python|html|flask|jinja2	How to serialize a python class to pass onto javascript	"<p>I am trying to pass a variable onto a javascript in flask. But I get the following error: <code>TypeError: Object of type MyClass is not JSON serializable</code></p> <p>Code:</p> <p>routes.py:</p> <pre><code>@app.route('/') @app.route('/index') def index():     data = {         &quot;foo&quot;: myObj     }     return render_template('index.html', data=data) </code></pre> <p>To note that <code>myObj</code> is a custom class object of type MyClass.</p> <p>index.html:</p> <pre><code>    &lt;script src=&quot;{{ url_for('static', filename='my_script.js', type=&quot;module&quot;) }}&quot; crossorigin=&quot;anonymous&quot;             defer&gt;     &lt;/script&gt;     &lt;script&gt;         let data = {{ data|tojson }};     &lt;/script&gt; </code></pre> <p>my_script.js:</p> <pre><code>console.log(data); </code></pre> <p>I tried to simply write <code>{{ data }}</code> instead of <code>{{ data|tojson }}</code> but I get the errors: <code>Uncaught SyntaxError: Unexpected token '&amp;'</code> and <code>my_script.js?type=module:1 Uncaught ReferenceError: data is not defined at my_script.js?type=module:1</code></p> <p>I know that there are a lot of question, but I do not find one that addresses this issue.</p>"	2020-07-16 16:47:43.793 UTC	62940326	"<p>The problem here is that you're trying to pass a Python object to Javascript. It's not going to work. The best thing to do is convert it to JSON, which is compatible between Python and Javascript.</p> <p>Using the <code>json</code> module you can serialise your dictionary. However, the Python object of <code>MyClass</code> is not JSON serialisable. You should be able to serialise the <code>__data__</code> attribute instead, which is a dictionary of attributes in the object.</p> <p>Change your Python like this:</p> <pre><code>import json  @app.route('/') @app.route('/index') def index():     data = {         &quot;foo&quot;: myObj.__dict__     }     return render_template('index.html', data=json.dumps(data))   </code></pre>"			2020-07-16 17:30:10.267 UTC
62949687	javascript|python	From Python to Javascript : dealing with negatives arrays indexes	"<p>I have to convert a python code to javascript. Now in this code we are dealing with lists like so :</p> <pre class=""lang-py prettyprint-override""><code>    selected_element = current_list[index_col] </code></pre> <p>The <code>index_col</code> is an index that come from a database. I cannot really manipulate it because it has to keep the same value for another part in the code.</p> <p>Some of thoses indexes are negatives (-3, -5, and so on)</p> <p>So i need a simple solution to pretty keep the same syntax <code>current_array[index_col]</code> (I replace <code>list</code> by <code>array</code> here in order to respect the JS syntax names), that would allow me to deal with negative values.</p> <p>I cannot use external libraries, all must be implemented in vanilla javascript (no lodash)</p> <p>So far I found :</p> <p><a href=""https://stackoverflow.com/questions/30549077/accessing-an-element-of-an-array-through-negative-indexes"">Accessing an element of an array through negative indexes</a></p> <p>But is does not really help me to keep the same syntax. I must keep this syntax <code>current_array[index_col]</code>.</p>"	2020-07-17 08:04:54.717 UTC	62949799	"<p>Well, for that reason you have Proxy (<a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy"" rel=""nofollow noreferrer"">docs</a>):</p> <pre class=""lang-js prettyprint-override""><code>const current_array = ['dog', 'pig', 'cat']; const current_array_proxy = new Proxy(current_array, {     get(target, prop) {         // First check if the given index is a valis number         if (!isNaN(prop)) {             // If it is a valid number : be sure to not passing a string, parse it to an integer              prop = parseInt(prop, 10);             if (prop &lt; 0) {                                  prop += target.length;             }         }         return target[prop];     } }); </code></pre> <p><a href=""https://medium.com/uncaught-exception/javascript-array-negative-index-using-proxies-ed096dc84416#:%7E:text=JavaScript%20arrays%20are%20collections%20of,index%20will%20just%20return%20undefined%20."" rel=""nofollow noreferrer"">Source</a>  (for this implementation and further explanation)</p> <p>If you try it :</p> <pre><code>current_array_proxy[-2];  </code></pre> <p><strong>OUTPUT</strong> : &quot;pig&quot;</p> <p><strong>EDIT</strong> :</p> <p>From comments :</p> <p>You should handle the float number case, so replace :</p> <p><code>if (!isNaN(prop))</code></p> <p>by :</p> <p><code>if(typeof prop !== &quot;symbol&quot; &amp;&amp; (+prop) === (prop|0) &amp;&amp; +prop &lt; 0){ prop = +prop + target.length; }</code></p> <p>If you want you can write a utils function that will return you the proxy for each single input array :</p> <pre class=""lang-js prettyprint-override""><code> const getArrayProxy = (current_array) =&gt; new Proxy(...) //the rest is the same  </code></pre>"			2020-07-17 08:11:22.663 UTC
62984320	javascript|python|selenium-webdriver|xpath	Finding web element using javascript statments through Python Selenium WebDriver	"<p>I want to find specific web element by executing javascript code and then click on that element. This is my code:</p> <pre><code>driver.get('https://justjoin.it') driver.maximize_window()   for position in [x.text for x in driver.find_elements_by_xpath('//div[@class=&quot;css-1x9zltl&quot;]')]:       javascript = f&quot;document.evaluate('//div[contains(@class, 'css-1x9zltl') and text()='{position}']', document);&quot;       driver.execute_script(javascript).click() </code></pre> <p>And when I run this code console throws me this error:</p> <pre><code>selenium.common.exceptions.JavascriptException: Message: javascript error: missing ) after argument list </code></pre> <p>Any ideas how to solve this?</p>"	2020-07-19 18:45:45.863 UTC	62985599	"<p>It probably has to do with the interaction of the single and double quote marks within your f-string. Try escaping one by changing your <code>javascript</code> to:</p> <pre><code>javascript = f&quot;document.evaluate(\&quot;//div[contains(@class, 'css-1x9zltl') and text()='{position}']\&quot;, document);&quot; </code></pre> <p>and see if it works.</p>"			2020-07-19 20:59:35.073 UTC
62987956	javascript|python|react-native	How to have javascript and python communicate together in a phone application?	<p><strong>How to have java script and python communicate together in a phone application?</strong></p> <p>I am working on this phone app as a project of mine. I have a python script which web scrapes data from other websites. I am trying to have include this data in my app. I need a way to use python in react-native so I can connect it with java script. Is there anyway I can do this?</p>	2020-07-20 02:52:12.823 UTC	63072204	"<p>You can try to use <a href=""https://www.jython.org/"" rel=""nofollow noreferrer"">Jython</a> to create one connection between Python and JavaScript, or use <a href=""https://www.transcrypt.org/home"" rel=""nofollow noreferrer"">Transcrypt</a> to transcript your Python code into JavaScript.</p> <p>I also had this doubt but the solution that I found was to use AWS lambda to run my Python code, but in this case, my app already has the necessity to connect with my API, so it was one simple and smart solution to my problem.</p>"			2020-07-24 10:57:54.173 UTC
62987956	javascript|python|react-native	How to have javascript and python communicate together in a phone application?	<p><strong>How to have java script and python communicate together in a phone application?</strong></p> <p>I am working on this phone app as a project of mine. I have a python script which web scrapes data from other websites. I am trying to have include this data in my app. I need a way to use python in react-native so I can connect it with java script. Is there anyway I can do this?</p>	2020-07-20 02:52:12.823 UTC	62988003	"<p>See. In a few words, what you would do is:</p> <ol> <li>Gather/Scrape the data.</li> <li>Insert data into database of your choice using a server side language of your choice. 2.1. This is generally done by creating something called an API.</li> <li>You then query this API using an HTTP/S React Native library that is hopefully available.</li> <li>Once that data is properly stored in the database, you can run all kinds of reports on it.</li> </ol>"			2020-07-20 02:58:28.6 UTC
62997124	python|django|ajax	Trying to render a python dictionary into django template with javascript	"<p>Im trying to render a python dictionary into my django template using ajax. I have some results from the whoisLookup which i want to render in certain table rows. Be gentle im litteraly new to django and JavaScript!</p> <p>My views.py code</p> <pre><code>def whois_lookup(request):     if request.is_ajax():         domain = request.session.get('domain_or_ip')         res = whois.whois(domain)         data = {'message': 'whois-lookup completed.',                 'domain_name': res.domain_name                 }         return HttpResponse(json.dumps(data), content_type='application/json')     else:         raise Http404 </code></pre> <p>what i tryed in my .js file.</p> <pre><code>$(document).ready(function () { $('#whois-btn').click(function () {     $.ajax({         type: &quot;GET&quot;,         url: &quot;/WanDashboard/whoisLookup/&quot;,         beforeSend: () =&gt; {             $(&quot;.ajax_loader&quot;).show();             console.log('BeforeSend whoisLookup');         },         success: function (data) {             # this works.             alert(data.message);             # this does not work             alert(data.domain_name)         },         complete: () =&gt; {             $(&quot;.ajax_loader&quot;).hide();             console.log('Completed whois ajax request.');         }     }); }); </code></pre> <p>});</p> <p>the .html page</p> <pre><code>&lt;div id=&quot;whois-results&quot;&gt; &lt;table class=&quot;table table-dark&quot; id=&quot;result_whois_table&quot;&gt;     &lt;thead&gt;     &lt;tr&gt;         &lt;th scope=&quot;col&quot;&gt;Domain Name&lt;/th&gt;         &lt;th scope=&quot;col&quot;&gt;Whois Server&lt;/th&gt;         &lt;th scope=&quot;col&quot;&gt;Name Servers&lt;/th&gt;         &lt;th scope=&quot;col&quot;&gt;Contact mails&lt;/th&gt;         &lt;th scope=&quot;col&quot;&gt;Address&lt;/th&gt;         &lt;th scope=&quot;col&quot;&gt;City&lt;/th&gt;     &lt;/tr&gt;     &lt;/thead&gt;     &lt;tbody&gt;     &lt;tr&gt;         &lt;td&gt;{{ data.domain_name }}&lt;/td&gt;     &lt;/tr&gt;     &lt;/tbody&gt; &lt;/table&gt; </code></pre>"	2020-07-20 14:03:04.84 UTC	62998840	<pre><code>domain = request.session.get('domain_or_ip') </code></pre> <p>Im not sure if the code you have added here is the exact same as in your application - but the .get() needs a valid parameter. e.g.</p> <pre><code>domain = request.session.get('https://api.github.com/user') </code></pre> <p>Your whois_lookup function will return a JSON dump to the url that you have assigned to it in your urls.py file.</p> <p>So your templates will not work as they are not setup as @vishal has mentioned in the comments.</p>			2020-07-20 15:30:10.81 UTC
62997124	python|django|ajax	Trying to render a python dictionary into django template with javascript	"<p>Im trying to render a python dictionary into my django template using ajax. I have some results from the whoisLookup which i want to render in certain table rows. Be gentle im litteraly new to django and JavaScript!</p> <p>My views.py code</p> <pre><code>def whois_lookup(request):     if request.is_ajax():         domain = request.session.get('domain_or_ip')         res = whois.whois(domain)         data = {'message': 'whois-lookup completed.',                 'domain_name': res.domain_name                 }         return HttpResponse(json.dumps(data), content_type='application/json')     else:         raise Http404 </code></pre> <p>what i tryed in my .js file.</p> <pre><code>$(document).ready(function () { $('#whois-btn').click(function () {     $.ajax({         type: &quot;GET&quot;,         url: &quot;/WanDashboard/whoisLookup/&quot;,         beforeSend: () =&gt; {             $(&quot;.ajax_loader&quot;).show();             console.log('BeforeSend whoisLookup');         },         success: function (data) {             # this works.             alert(data.message);             # this does not work             alert(data.domain_name)         },         complete: () =&gt; {             $(&quot;.ajax_loader&quot;).hide();             console.log('Completed whois ajax request.');         }     }); }); </code></pre> <p>});</p> <p>the .html page</p> <pre><code>&lt;div id=&quot;whois-results&quot;&gt; &lt;table class=&quot;table table-dark&quot; id=&quot;result_whois_table&quot;&gt;     &lt;thead&gt;     &lt;tr&gt;         &lt;th scope=&quot;col&quot;&gt;Domain Name&lt;/th&gt;         &lt;th scope=&quot;col&quot;&gt;Whois Server&lt;/th&gt;         &lt;th scope=&quot;col&quot;&gt;Name Servers&lt;/th&gt;         &lt;th scope=&quot;col&quot;&gt;Contact mails&lt;/th&gt;         &lt;th scope=&quot;col&quot;&gt;Address&lt;/th&gt;         &lt;th scope=&quot;col&quot;&gt;City&lt;/th&gt;     &lt;/tr&gt;     &lt;/thead&gt;     &lt;tbody&gt;     &lt;tr&gt;         &lt;td&gt;{{ data.domain_name }}&lt;/td&gt;     &lt;/tr&gt;     &lt;/tbody&gt; &lt;/table&gt; </code></pre>"	2020-07-20 14:03:04.84 UTC	63071224	"<p>Kinda late but i managed to do it like this.</p> <p>views.py code</p> <pre><code>def whois_lookup(request): if request.is_ajax():     domain = request.session.get('domain_or_ip')     res = whois.whois(domain)     l_nameservers = res.name_servers         nameservers = ' '.join([str(elem) for elem in l_nameservers])     whois_data = {         'message': 'Completed-scan!',         'nameservers': nameservers     }     return JsonResponse(whois_data, safe=False) else:     raise Http404 </code></pre> <p>and the JavaScript code that helped me do the job.</p> <pre><code>$(document).ready(function () { $('#whois-btn').click(function () {     $.ajax({         type: &quot;GET&quot;,         url: &quot;/WanDashboard/whoisLookup/&quot;,         dataType: 'json',         beforeSend: () =&gt; {             $(&quot;.ajax_loader&quot;).show();             console.log('BeforeSend whoisLookup');         },         success: function (whois_data) {             let splitted_array_nameservers = whois_data.nameservers.split(&quot;&quot;);             $(&quot;#result_whois_table&quot;).show();             let whois_table = $(&quot;#result_whois_table tbody&quot;);             whois_table.append(&quot;&lt;tr&gt;&lt;td&gt;&quot; + whois_data.nameservers + &quot;&lt;/td&gt;&lt;/tr&gt;&quot;)         },         complete: () =&gt; {             $(&quot;.ajax_loader&quot;).hide();             console.log('Completed ajax.');         }     }); }); </code></pre> <p>});</p> <p>This is a really sketchy sollution though!!</p>"			2020-07-24 09:56:38.063 UTC
63043666	javascript|python|html|django|templates	How to pass python list to javascript array using Django	"<p>UPDATE 7/23/2020</p> <p>I have a Django project where I am trying to pass a list of values from a python function to my 'index.html' file. This list of values comes from a DB query in my views.py file</p> <p>my views.py</p> <pre><code>def index_view(request):          context = {}       con=sqlite3.connect(&quot;db.sqlite3&quot;)     cursor=con.cursor()      db_query=&quot;SELECT distinct product_name from dboinvproduct&quot;      cursor.execute(db_query)      result=cursor.fetchall()      con.close()      list_of_products = list(itertools.chain(*result))           context['product_names'] = list_of_products     return render(request, 'index.html', context) </code></pre> <p>then within the body of my index.html</p> <pre><code>function loadFunct(){                var products = &quot;{{product_names|safe}}&quot;;                alert(products);               } </code></pre> <p>And the alert shows the following string:</p> <pre><code>['product a', 'product b', 'product c', 'product d'] </code></pre> <p>Which is much closer than I was previously. The problem is, this is a string that looks like an array... Which means this will not work for my application... I need it to be in the form of an array.</p> <p>What is the best way to do this? I have read about json_dumps on the python side, but I get a typeError because that expects a dictionary...</p>"	2020-07-22 21:46:11.863 UTC	63056518	"<p><code>json.dumps()</code> should accept list like this.</p> <pre><code>&gt;&gt;&gt; import json &gt;&gt;&gt; json.dumps(['a','b']) '[&quot;a&quot;, &quot;b&quot;]' </code></pre> <p>Therefore you can pre-jsonify the list in the view like this,</p> <pre><code>context['product_names'] = json.dumps(list_of_products) return render(request, 'index.html', context) </code></pre> <p>and use in the template like this.</p> <pre><code>function loadFunct(){     var products = {{product_names|safe}}; // Be aware that there are no quotes or double quotes.      console.log(products); } </code></pre>"			2020-07-23 14:22:42.897 UTC
63079635	javascript|python|json|class|nested	How to convert a Javascript object with nested functions into a Python Class?	"<p>Trying to convert this code below into a Python class. Would I need to nest a System class within the original class? Confused on how to go about this. I want to call <code>MainClass.System.GetInstance().GetLibraryVersion()</code>, as an example</p> <pre><code>{   System: {     GetInstance: () =&gt; {       return {         GetLibraryVersion: () =&gt; {           return {             major: 0,             minor: 0,             type: '',             build: ''           }         }       }     }   } } </code></pre>"	2020-07-24 18:38:15.2 UTC	63162114	<p>The answer:</p> <pre><code>class MainClass: def __init__(self):     self.System = self.System()  class System():     def __init__(self):         self.major = 0         self.minor = 0         self.type = ''         self.build = ''      def GetInstance(self):         return self      def GetLibraryVersion(self):         return self </code></pre>			2020-07-29 20:42:57.113 UTC
63085734	javascript|python|node.js|command-line|exe	Is there a way to return args to command line in Python (Compiled to EXE) to a JavaScript file?	"<p>So, I am making a node program and there are many things which Python can do and JavaScript can't like using modules Python-specific, etc. So, I decided to compile the Python files to EXE and then use invoke them using JavaScript with the code below...</p> <pre><code>const execFile = require(&quot;child_process&quot;).execFile; function openExe(filePath, args = &quot;&quot;) {   execFile(filePath, [args], (error, stdout, stderr) =&gt; {     if (error) {       console.error(&quot;stderr&quot;, stderr);       throw error;     }   }); }  </code></pre> <p>Then I wrote this in Python...</p> <pre><code>import sys  from pyowm.owm import OWM  args = (sys.argv) args.pop(0) print(args)   def print_weather(thing, location):     location = location.lower()     location = location.replace(&quot; &quot;, &quot;&quot;)     location = location.replace(&quot;weather&quot;, &quot;&quot;)     owm = OWM(api-key)     mgr = owm.weather_manager()     listOfAll = []     listOfNotAll = []     weather = mgr.weather_at_place(location).weather     temp = int((weather.to_dict()['temperature'])['temp'])     temp = round((temp - (273.15)) * 9/5 + 32)     weather1 = str(weather.to_dict()[thing])     listOfAll.append(f&quot;The weather in {location} is {weather1}&quot;)     listOfAll.append(f&quot;The current temperature is {temp}°F&quot;)     if temp &lt;= 68:         listOfAll.append(&quot;You should probably wear warm cloths &quot;)         listOfNotAll.append(&quot;\U0001F455&quot;)     elif temp &gt; 99:         listOfAll.append(&quot;Drink some water its pretty hot...&quot;)         listOfNotAll.append(&quot;\U0001F4A6&quot;)     #{{{{Some way to return both (listOfNotAll and listOfAll) the lists}}}}   print_weather(&quot;detailed_status&quot;, &quot;chennai&quot;) </code></pre> <p>Now what I need is some way to return the output of this file (Has been compiled to EXE) to the JavaScript file. If that is not possible in this case then what is it that I have to change...</p> <p>Thanks...</p>"	2020-07-25 07:44:00.563 UTC	63085951	"<p>You can print <code>listOfAll</code> and <code>listOfNotAll</code> at the end of the <code>print_weather</code> function. For example:</p> <pre><code>print(&quot;listOfAll:&quot;) for item in listOfAll:     print(item)  print(&quot;listOfNotAll:&quot;) for item in listOfNotAll:     print(item) </code></pre> <p>The output from your python code will be captured by the stdout variable in javascript. At this point you can do whatever you want with stdout (for example, convert it to an array of lines using <code>stdout.split(&quot;\n&quot;)</code> )</p> <p>I found a blog post that's also a possible solution to your question: <a href=""https://www.sohamkamani.com/blog/2015/08/21/python-nodejs-comm/"" rel=""nofollow noreferrer"">https://www.sohamkamani.com/blog/2015/08/21/python-nodejs-comm/</a></p>"			2020-07-25 08:08:55.32 UTC
63087753	javascript|python|selenium-webdriver|xpath|document.evaluate	How to find web element by xpath using javascript code in python selenium webdriver?	<p>I would like to find web element by xpath executing javascript code in python and then click on it. Is this possible and how to do this?</p>	2020-07-25 11:26:00.403 UTC	63106990	"<p>To find a <a href=""https://stackoverflow.com/questions/52782684/what-is-the-difference-between-webdriver-and-webelement-in-selenium/52805139#52805139"">WebElement</a> by <a href=""/questions/tagged/xpath"" class=""post-tag"" title=""show questions tagged &#39;xpath&#39;"" rel=""tag"">xpath</a> using <a href=""/questions/tagged/javascript"" class=""post-tag"" title=""show questions tagged &#39;javascript&#39;"" rel=""tag"">javascript</a> in you have to use the <a href=""https://www.w3.org/TR/DOM-Level-3-XPath/xpath.html#XPathEvaluator-evaluate"" rel=""nofollow noreferrer""><code>evaluate()</code></a> method which evaluates an <em>xpath</em> expression and returns a result.</p> <hr /> <h2>document.evaluate()</h2> <p><a href=""https://developer.mozilla.org/en-US/docs/Web/API/Document/evaluate"" rel=""nofollow noreferrer"">document.evaluate()</a> returns an <a href=""https://developer.mozilla.org/en-US/docs/Web/API/XPathResult"" rel=""nofollow noreferrer"">XPathResult</a> based on an <a href=""https://developer.mozilla.org/en-US/docs/Web/XPath"" rel=""nofollow noreferrer"">XPath</a> expression and other given parameters.</p> <p>The syntax is:</p> <pre><code>var xpathResult = document.evaluate(   xpathExpression,   contextNode,   namespaceResolver,   resultType,   result ); </code></pre> <hr /> <h2>Example</h2> <p>As an example the <em>Search Box</em> within the <a href=""https://www.google.com/"" rel=""nofollow noreferrer"">Google Home Page</a> which can be identified uniquely using the <em>xpath</em> as <code>//*[@name='q']</code> can also be identified from the <a href=""/questions/tagged/google-chrome-devtools"" class=""post-tag"" title=""show questions tagged &#39;google-chrome-devtools&#39;"" rel=""tag"">google-chrome-devtools</a> <em>Console</em> using <code>document.evaluate()</code> and the <em>xpath</em> expression as follows:</p> <pre><code>document.evaluate(&quot;//*[@name='q']&quot;, document, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null).singleNodeValue; </code></pre> <p>Snapshot:</p> <p><img src=""https://i.stack.imgur.com/KC4iS.png"" alt=""document_evalute_xpath"" /></p>"			2020-07-26 23:52:07.143 UTC
63087753	javascript|python|selenium-webdriver|xpath|document.evaluate	How to find web element by xpath using javascript code in python selenium webdriver?	<p>I would like to find web element by xpath executing javascript code in python and then click on it. Is this possible and how to do this?</p>	2020-07-25 11:26:00.403 UTC	63089081	"<p>You can use the following method (check the <a href=""https://selenium-python.readthedocs.io/locating-elements.html"" rel=""nofollow noreferrer"">docs</a>):</p> <pre><code>find_element_by_xpath </code></pre> <p>Then, to click on the element you found, simply use:</p> <pre><code>element.click() </code></pre>"			2020-07-25 13:43:55.417 UTC
63109260	javascript|python|webkit|gtk3	How to connect javascript and python using webkit2gtk?	"<p>I am running a small html file inside a python window using <code>webkit2gtk</code>. I have disabled the gtk title bar, and there is a close and minimize button in the html page itself.</p> <p>Now, I want to close the window when that close button is clicked. Previously I used <code>webkitgtk</code>, and there webkit could sense the change in title of the html file, and would close the window when the title was changed (not just close, minimize and dragging were also implemented in this method. It would disable dragging when the mouse hovered over a button in html).</p> <pre class=""lang-py prettyprint-override""><code>    def title_changed(widget, frame, title):             print(title)             if title == &quot;close&quot;:                 Gtk.main_quit()             elif title == &quot;minimize&quot;:                 self.window.iconify()      self.webview.connect('title-changed', title_changed) </code></pre> <p>Now I want to port the code to <code>webkit2gtk</code>. However, it looks like the <code>title-changed</code> call, which was available in <code>webkitgtk</code> <a href=""https://stackoverflow.com/questions/63090388/how-to-handle-title-change-in-webkit2gtk"">has been removed</a> in <code>webkit2gtk</code>. So, how to handle close and other events, that is, how to make python do something to the window, when a button is clicked (which is handled by JS)?</p> <p>If title-change is not available anymore, what other option is there?</p>"	2020-07-27 05:40:53.037 UTC	63162212	"<p>Communication from the web process to the UI process via the page title was a bit dubious even in WebKit 1, but it was unfortunately the most convenient option at the time.</p> <p>In WebKit 2 you can use <a href=""https://lazka.github.io/pgi-docs/#WebKit2-4.0/classes/WebView.html#WebKit2.WebView.send_message_to_page"" rel=""nofollow noreferrer""><code>WebView.send_message_to_page()</code></a> and <a href=""https://lazka.github.io/pgi-docs/#WebKit2-4.0/classes/UserContentManager.html#WebKit2.UserContentManager.register_script_message_handler"" rel=""nofollow noreferrer""><code>UserContentManager.register_script_message_handler()</code></a>.</p>"			2020-07-29 20:49:32.817 UTC
63122089	javascript|python|plotly|plotly-python|plotly.js	extract attributes from plotly plot (generated in python) javascript	"<p>I am using the python API to generate a plot:</p> <pre class=""lang-py prettyprint-override""><code>import plotly.graph_objs as go fig = go.Figure(         ) fig_html = fig.to_html(             include_plotlyjs=False,             full_html=False,             ... ) </code></pre> <p>I then add the html figure to my webpage, which loads the Plotly CDN in the head section.</p> <p>I understand that when javascript creates the object through <code>Plotly.newPlot</code> you get a reference to the plot object in javascript (as explained in <a href=""https://stackoverflow.com/questions/50192259/extract-all-attributes-from-plotly-javascript"">this question</a>). But in the case where javascript only has a reference to the raw html div generated through python but not the plotly object, how does one extract plot attributes in javascript?</p>"	2020-07-27 19:18:17.243 UTC	63123690	"<p>I figured it out! The div DOM object automatically has the <code>_fullLayout</code> property, without needing to use any Plotly functions:</p> <pre class=""lang-js prettyprint-override""><code>document.getElementById(&quot;&lt;figure_div_id&gt;&quot;)._fullLayout </code></pre>"			2020-07-27 21:16:23.62 UTC
63132205	javascript|python-3.x|react-native|flask	React javascript fetch python	"<p>So I'm trying to connect a Flask server to a front end create react app.  Below is the code for each and a bit more description on the errors. I followed the existed answer <a href=""https://stackoverflow.com/questions/40915319/javascript-fetch-flask-json"">from this link</a></p> <p>Create React App fetch</p> <pre><code> export default class Toggle extends Component {      state = {         on: false,         pyResp: []     }      toggle = () =&gt; {         this.setState({             on: !this.state.on,         })          console.log(&quot;fetching python localhost&quot;);         fetch('http://127.0.0.1:5000/', {             method: 'GET',             mode: 'no-cors',             dataType: 'json'         })             .then(r =&gt; r.json())             .then(r =&gt; {                 console.log(r)                 this.setState({                     pyResp: r                 })             })             .catch(err =&gt; console.log(err))     }      render() {         return (             &lt;div&gt;                 &lt;div className=&quot;toggle&quot;&gt;                     &lt;div className=&quot;toggle-btn&quot;&gt;&lt;button onClick={this.toggle}&gt; Toggle &lt;/button&gt; &lt;/div&gt;                     &lt;div className={!this.state.on ? &quot;display-txt hide&quot; : &quot;display-txt show&quot;}&gt;                         {this.state.on &amp;&amp; &lt;p&gt;true&lt;/p&gt;}                     &lt;/div&gt;                 &lt;/div&gt;                  &lt;div className=&quot;text-box&quot;&gt; &lt;label&gt; Name:&lt;input type=&quot;text&quot; name=&quot;name&quot; /&gt; &lt;/label&gt;&lt;/div&gt;             &lt;/div&gt;         )     } } </code></pre> <p>And Flask Server</p> <pre><code>from flask_cors import CORS, cross_origin  app = Flask(__name__) CORS(app)   @app.route(&quot;/&quot;) def hello_world():     jsonResp = {&quot;jack&quot;: 4098, &quot;sape&quot;: 4139}     print(&quot;===print===&quot;)     print(jsonify(jsonResp))     return jsonify(jsonResp)   if __name__ == &quot;__main__&quot;:     app.run(debug=True) </code></pre> <p><strong>I am getting error Toggle.js:27 SyntaxError: Unexpected end of input at Toggle.js:16</strong></p>"	2020-07-28 10:39:06.603 UTC	63132377	<p>The problem seem to be here</p> <pre><code>&lt;div className={!this.state.on ? &quot;display-txt hide&quot; : &quot;display-txt show&quot;}&gt;     {this.state.on &amp;&amp; &lt;p&gt;true&lt;/p&gt;} &lt;/div&gt; </code></pre> <p>Change to</p> <pre><code>&lt;div className={!this.state.on ? &quot;display-txt hide&quot; : &quot;display-txt show&quot;}&gt;     {(this.state.on) ? (&lt;p&gt;true&lt;/p&gt;) : null) } &lt;/div&gt; </code></pre>			2020-07-28 10:48:50.827 UTC
63132205	javascript|python-3.x|react-native|flask	React javascript fetch python	"<p>So I'm trying to connect a Flask server to a front end create react app.  Below is the code for each and a bit more description on the errors. I followed the existed answer <a href=""https://stackoverflow.com/questions/40915319/javascript-fetch-flask-json"">from this link</a></p> <p>Create React App fetch</p> <pre><code> export default class Toggle extends Component {      state = {         on: false,         pyResp: []     }      toggle = () =&gt; {         this.setState({             on: !this.state.on,         })          console.log(&quot;fetching python localhost&quot;);         fetch('http://127.0.0.1:5000/', {             method: 'GET',             mode: 'no-cors',             dataType: 'json'         })             .then(r =&gt; r.json())             .then(r =&gt; {                 console.log(r)                 this.setState({                     pyResp: r                 })             })             .catch(err =&gt; console.log(err))     }      render() {         return (             &lt;div&gt;                 &lt;div className=&quot;toggle&quot;&gt;                     &lt;div className=&quot;toggle-btn&quot;&gt;&lt;button onClick={this.toggle}&gt; Toggle &lt;/button&gt; &lt;/div&gt;                     &lt;div className={!this.state.on ? &quot;display-txt hide&quot; : &quot;display-txt show&quot;}&gt;                         {this.state.on &amp;&amp; &lt;p&gt;true&lt;/p&gt;}                     &lt;/div&gt;                 &lt;/div&gt;                  &lt;div className=&quot;text-box&quot;&gt; &lt;label&gt; Name:&lt;input type=&quot;text&quot; name=&quot;name&quot; /&gt; &lt;/label&gt;&lt;/div&gt;             &lt;/div&gt;         )     } } </code></pre> <p>And Flask Server</p> <pre><code>from flask_cors import CORS, cross_origin  app = Flask(__name__) CORS(app)   @app.route(&quot;/&quot;) def hello_world():     jsonResp = {&quot;jack&quot;: 4098, &quot;sape&quot;: 4139}     print(&quot;===print===&quot;)     print(jsonify(jsonResp))     return jsonify(jsonResp)   if __name__ == &quot;__main__&quot;:     app.run(debug=True) </code></pre> <p><strong>I am getting error Toggle.js:27 SyntaxError: Unexpected end of input at Toggle.js:16</strong></p>"	2020-07-28 10:39:06.603 UTC	63132984	"<p>Change the mode from <code>no-cors</code> to <code>cors</code>.</p> <pre><code>fetch('http://127.0.0.1:5000/', {             method: 'GET',             mode: 'cors'         })             .then(r =&gt; r.json())             .then(r =&gt; {                 console.log(r)                 this.setState({                     pyResp: r                 })             })             .catch(err =&gt; console.log(err)) </code></pre> <p>I tried locally and this worked for me.</p>"			2020-07-28 11:23:40.743 UTC
63160078	javascript|python|encryption|blockchain	Problem with encrypting with Python and decrypting in Javascript	"<p>i'm having troubles encrypting with Python and decrypting with Javascript , here's what i did in Python :</p> <pre><code>import binascii import pandas as pd import Crypto import Crypto.Random from Crypto.PublicKey import RSA import binascii import json from Crypto.Signature import PKCS1_v1_5 from Crypto.Cipher import PKCS1_OAEP from Crypto.Hash import SHA512, SHA384, SHA256, SHA, MD5 import requests from flask import Flask, jsonify, request, render_template     ....  public_keyy = RSA.importKey(binascii.unhexlify(recipient_address)) encryptor = PKCS1_OAEP.new(public_keyy) encrypted = encryptor.encrypt(bytes(value, encoding='utf-8')) value=  binascii.hexlify(encrypted).decode('utf8',errors='ignore') print(&quot;Encrypted:&quot;, binascii.hexlify(encrypted)) </code></pre> <p>And here's what im doing in Javascript (using JSEncrypt.js )  :</p> <pre><code>        for (i = 1; i &lt; response.length; i++) {             for (j = 0; j &lt; response[&quot;chain&quot;][i][&quot;transactions&quot;].length; j++) {                //format date                var options = {  year: &quot;numeric&quot;, month: &quot;short&quot;,  day: &quot;numeric&quot;, hour: &quot;2-digit&quot;, minute: &quot;2-digit&quot;, second: &quot;2-digit&quot;  };               var date = new Date(response[&quot;chain&quot;][i][&quot;timestamp&quot;] * 1000);               var formattedDateTime = date.toLocaleTimeString(&quot;en-us&quot;, options);               var valeur=response[&quot;chain&quot;][i][&quot;transactions&quot;][j][&quot;value&quot;]                //DECRYPTION                               decrypt = new JSEncrypt();                decrypt.setPrivateKey(priv_key);                var plainText = decrypt.decrypt(valeur);                transaction = [count,                             response[&quot;chain&quot;][i][&quot;transactions&quot;][j][&quot;recipient_address&quot;],                             response[&quot;chain&quot;][i][&quot;transactions&quot;][j][&quot;sender_address&quot;],                             response[&quot;chain&quot;][i][&quot;transactions&quot;][j][&quot;sender_id&quot;],                             response[&quot;chain&quot;][i][&quot;transactions&quot;][j][&quot;sender_bat&quot;],                             response[&quot;chain&quot;][i][&quot;transactions&quot;][j][&quot;value&quot;],                             formattedDateTime,plainText,message,                             response[&quot;chain&quot;][i][&quot;block_number&quot;]];           transactions.push(transaction); </code></pre> <p>So im trying to decrypt with a private key that the user generates , like this one :</p> <p>&quot;3082025b02010002818100a2376cf4d9ca5d09c1c8392edb218af719d4cc6b1b49999cdfdb0f819e0dc6f0220a9e0007a50bf7185c52e4b6e769dbffe9312ae9dedf8ec9dc6f70711a4f2b5c61af54e431e20a267af4224a34bb7f7da9823b365c31be62593dd79baad421b1c5f3dd4cdf4dce06492543cbafa058b4151b6b99064abcc1ccfb2bb572afab020301000102818003a12cda533a4ec282d9e0a7e4cb6af3dd3d4413a8c59717d0ff1d306dfdf89748cc98cb70d22069e93ecb97cd808d7f6df4ba10a1b11c0000d945fd48245b9d6dac7f2dbe558eb6a5329da2429e72765e2f5d1ec328c0e5da628cb72e0867e71fa510b5ee20238028b93e5e36c371abd7a320f0267de8f2308bdc352722e409024100be201b36623b3e6bb2a1a1cbcaaee0accb98baa2e166955e1c903461ca3fe31b1d42201c9ada9d7dfa1b0104a55a9203e72934cf36d1ca6551091d123f7e6d23024100da6bd53bdaa03961b20074e5a0b6fc03fa839464765e795d39ee522e3c7cc0033256f9dc30e551f58eaf5a3cd67e421a1b8e05cad56f8efaa4c567761c926fd90240315801d8067c9bc1b5d5cf3925fc672151a1ece6731b7daeb43914ef405f7e60be223855543762e29c33bffae5b370ec0465a468173131974405da7eaeedf003024039b7a1034e0464e5620a28d9bd1c5d8017a4c983ba9bc06a583297d8cbf7132e451122b982da364c3346370c3889e8a1c9824019974901794e2d33e7cc290e11024038c801fcb3d9c28fbe6c352148cefe7dbc0214ce6fb3eb5bb656daef6426b49a68e1d1d3aa419d409992e71be0d97fad9f7d44b969a55c980fb0e6d19804afa8 &quot;</p> <p>what am I doing wrong ? I think that this key format is not supported by JSEncrypt, but i don't know what to do, any help ?</p> <p>Thank you :)</p>"	2020-07-29 18:21:04.3 UTC	63160306	<p>I suspect you are not decrypting with the right algo &amp; key size.</p> <p>The problem might be in these lines of code.</p> <pre><code>decrypt.setPrivateKey(priv_key); var plainText = decrypt.decrypt(valeur); </code></pre>			2020-07-29 18:38:05.373 UTC
63175106	javascript|python|django	Django: How to pass python variable value to javascript file?	"<p>I've a function in views.py which returns latitude and longitude:</p> <pre><code>return render(request, 'map.html', {'lat_lng':lat_lng}) </code></pre> <p>and I am able to access it in html file as <code>{{ lat_lng }}</code> but when I try to use <code>lat_lng</code> in separate <strong>js</strong> file then I'm not able to access it.</p> <p>I tried all below stack answers but none worked for me:</p> <p><a href=""https://stackoverflow.com/questions/298772/django-template-variables-and-javascript"">Django Template Variables and Javascript</a></p> <p><a href=""https://stackoverflow.com/questions/52886765/passing-django-variables-to-javascript"">Passing django variables to javascript</a></p> <p><a href=""https://stackoverflow.com/questions/36689075/how-to-use-django-variable-in-javascript-file"">How to use Django variable in JavaScript file?</a></p> <p><a href=""https://stackoverflow.com/questions/1445989/passing-python-data-to-javascript-via-django"">Passing Python Data to JavaScript via Django</a></p>"	2020-07-30 14:14:36.96 UTC	63175176	"<p>Be sure when that getting the variable in a script tag is before including the separate js file Exmple :</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""false"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-html lang-html prettyprint-override""><code>&lt;script type=""text/javascript""&gt;     var variable = ""{{myV}}""; &lt;/script&gt;  &lt;script type=""text/javascript"" src=""myJsFile.js""&gt;&lt;/script&gt;</code></pre> </div> </div> </p>"			2020-07-30 14:19:52.907 UTC
63175106	javascript|python|django	Django: How to pass python variable value to javascript file?	"<p>I've a function in views.py which returns latitude and longitude:</p> <pre><code>return render(request, 'map.html', {'lat_lng':lat_lng}) </code></pre> <p>and I am able to access it in html file as <code>{{ lat_lng }}</code> but when I try to use <code>lat_lng</code> in separate <strong>js</strong> file then I'm not able to access it.</p> <p>I tried all below stack answers but none worked for me:</p> <p><a href=""https://stackoverflow.com/questions/298772/django-template-variables-and-javascript"">Django Template Variables and Javascript</a></p> <p><a href=""https://stackoverflow.com/questions/52886765/passing-django-variables-to-javascript"">Passing django variables to javascript</a></p> <p><a href=""https://stackoverflow.com/questions/36689075/how-to-use-django-variable-in-javascript-file"">How to use Django variable in JavaScript file?</a></p> <p><a href=""https://stackoverflow.com/questions/1445989/passing-python-data-to-javascript-via-django"">Passing Python Data to JavaScript via Django</a></p>"	2020-07-30 14:14:36.96 UTC	63175206	"<blockquote> <p>when I try to use lat_lng in separate js file then I'm not able to access it.</p> </blockquote> <p>You can't use a django template variable in a static file. The static files will be returned in a way that bypasses Django's typical request processing.</p> <p>Instead, set the variables on <code>data-*</code> attributes on an known HTML element, then get the element, access the attribute and use the value that way.</p>"			2020-07-30 14:21:48.133 UTC
63175106	javascript|python|django	Django: How to pass python variable value to javascript file?	"<p>I've a function in views.py which returns latitude and longitude:</p> <pre><code>return render(request, 'map.html', {'lat_lng':lat_lng}) </code></pre> <p>and I am able to access it in html file as <code>{{ lat_lng }}</code> but when I try to use <code>lat_lng</code> in separate <strong>js</strong> file then I'm not able to access it.</p> <p>I tried all below stack answers but none worked for me:</p> <p><a href=""https://stackoverflow.com/questions/298772/django-template-variables-and-javascript"">Django Template Variables and Javascript</a></p> <p><a href=""https://stackoverflow.com/questions/52886765/passing-django-variables-to-javascript"">Passing django variables to javascript</a></p> <p><a href=""https://stackoverflow.com/questions/36689075/how-to-use-django-variable-in-javascript-file"">How to use Django variable in JavaScript file?</a></p> <p><a href=""https://stackoverflow.com/questions/1445989/passing-python-data-to-javascript-via-django"">Passing Python Data to JavaScript via Django</a></p>"	2020-07-30 14:14:36.96 UTC	63175349	"<p>You can take advantage of <a href=""https://docs.djangoproject.com/en/3.0/ref/templates/builtins/#json-script"" rel=""nofollow noreferrer"">json_script</a> template tag. In your template do this</p> <pre><code>{{ lat_lng|json_script:&quot;lat_lng&quot; }} </code></pre> <p>Then in your javascript file you can access this variable like</p> <pre class=""lang-js prettyprint-override""><code>const lat_lng = JSON.parse(document.getElementById(&quot;lat_lng&quot;).textContent); </code></pre>"			2020-07-30 14:29:19.883 UTC
63175106	javascript|python|django	Django: How to pass python variable value to javascript file?	"<p>I've a function in views.py which returns latitude and longitude:</p> <pre><code>return render(request, 'map.html', {'lat_lng':lat_lng}) </code></pre> <p>and I am able to access it in html file as <code>{{ lat_lng }}</code> but when I try to use <code>lat_lng</code> in separate <strong>js</strong> file then I'm not able to access it.</p> <p>I tried all below stack answers but none worked for me:</p> <p><a href=""https://stackoverflow.com/questions/298772/django-template-variables-and-javascript"">Django Template Variables and Javascript</a></p> <p><a href=""https://stackoverflow.com/questions/52886765/passing-django-variables-to-javascript"">Passing django variables to javascript</a></p> <p><a href=""https://stackoverflow.com/questions/36689075/how-to-use-django-variable-in-javascript-file"">How to use Django variable in JavaScript file?</a></p> <p><a href=""https://stackoverflow.com/questions/1445989/passing-python-data-to-javascript-via-django"">Passing Python Data to JavaScript via Django</a></p>"	2020-07-30 14:14:36.96 UTC	63175189	<p>One simple way to do it is to append the following snippet at the top of your template html file(the one that imports your javascript file):</p> <pre><code>&lt;script type=&quot;text/javascript&quot;&gt;     const LAT_LNG = &quot;{{ lat_lng }}&quot;; // Or pass it through a function &lt;/script&gt; </code></pre>			2020-07-30 14:20:55.357 UTC
63185073	javascript|python	Convert python signing code to javascript	"<p>I'm currently working on a code generator and porting it over to javascript, however I can't seem to get the same results?</p> <p>The code which I've got in Python is the following:</p> <pre class=""lang-py prettyprint-override""><code>def sign(self, cs, api):     temp_string = &quot;&quot;     cs_length = len(cs)     api_length = len(api)      if api_length &gt; 0:         for index in range(0, cs_length):             temp_char = cs[index]             temp_code = ord(temp_char)             temp_code_2 = ord(api[index % api_length])             new_code = self.get_code(temp_code, 47, 57, temp_code_2)             new_char = &quot;&quot;             if new_code != cs[index]:                 new_char = chr(new_code)                 try:                     temp_string += new_char                 except:                     xbmc.log(&quot;Unprintable character =&gt; %s&quot; % new_char)              xbmc.log(&quot;Index: %i\tCharacter %i:%s\t\tModulus %i\t\tModulus Code %i:%s\t\tNew Code %i:%s&quot; %                      (index, temp_code, temp_char, (index % api_length), temp_code_2, chr(temp_code_2), new_code,                       new_char))     else:         xbmc.log(&quot;Signature cannot be blank&quot;)      # xbmc.log(&quot;\r\nTarget Signature: 7a74G7m23Vrp0o5c&quot;)     xbmc.log(&quot;Result signature: %s&quot; % temp_string[0:16])      return temp_string[0:16]  def get_code(self, char_code, const_1, const_2, char_result):     if const_1 &lt; char_code &lt;= const_2:         char_code += char_result % (const_2 - const_1)         if char_code &gt; const_2:             char_code = char_code - const_2 + const_1      return char_code </code></pre> <p>And here's what I've wrote in Javascript:</p> <pre class=""lang-js prettyprint-override""><code>get_code(char_code, const_1, const_2, char_result) {     if(const_1 &lt; char_code &lt;= const_2) {         char_code += char_result % (const_2 - const_1);         if(char_code &gt; const_2) {             char_code = char_code - const_2 + const_1;         }     }     return char_code; }  sign(cs, api) {     let temp_string = '';     let cs_length = cs.length;     let api_length = api.length;     if(api_length &gt; 0) {         for(let index in this.range(0, cs_length)) {             let temp_char = cs[index];             let temp_code = temp_char.charCodeAt(0);             let temp_code_2 = api[index % api_length].charCodeAt(0);             let new_code = this.get_code(temp_code, 47, 57, temp_code_2);             let new_char = &quot;&quot;;             if(new_code != cs[index]) {                 try {                     new_char = new_code.charCodeAt(0);                     temp_string += new_char;                 } catch(error) {                     console.log('&quot;Unprintable character =&gt; ' + new_char);                 }             }         }     }     return temp_string.substring(0, 16); } </code></pre> <p>When running it in Javascript, I'm just getting a ton of <code>&quot;Unprintable character =&gt; </code> results being thrown?</p>"	2020-07-31 02:50:21.97 UTC	63185387	"<p>Your issue appears to be your conversion from this Python code</p> <pre class=""lang-py prettyprint-override""><code>new_char = chr(new_code) </code></pre> <p>To JavaScript</p> <pre class=""lang-js prettyprint-override""><code>new_char = new_code.charCodeAt(0); </code></pre> <p>Given that <a href=""https://docs.python.org/3/library/functions.html#chr"" rel=""nofollow noreferrer""><code>chr</code></a> in Python takes an <code>int</code> and return a single length <code>str</code>, while <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/charCodeAt"" rel=""nofollow noreferrer""><code>String.charCodeAt</code></a> does the exact opposite - also given that the value of <code>new_code</code> appears to be an <code>Number</code> or <code>int</code> (in JavaScript and Python respectively), that will simply not work as that is not a method available for the <code>Number</code> type.</p> <p>It would have been clear had the code logged the actual <code>error</code> inside the <code>catch</code> block - the nature of the exception should have revealed that <code>TypeError: new_code.charCodeAt is not a function</code>.</p> <p>You were probably looking for <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/fromCharCode"" rel=""nofollow noreferrer""><code>String.fromCharCode</code></a>, so that problematic line should be:</p> <pre class=""lang-js prettyprint-override""><code>new_char = String.fromCharCode(new_code); </code></pre>"			2020-07-31 03:33:44.223 UTC
63208010	javascript|python|forms|web-scraping|python-requests	How to login to JavaScript form and scrape using python	"<p>I was trying to login to this page to scrape information from it , but I could not pass the form , it's not like any other I have logged into using <strong>BeautifulSoup</strong> , <strong>Requests</strong> and <strong>urllib</strong>  in python 3.8 .</p> <p>I have no idea what to post or where to put the payload or literally anything at this point knowing I have 0 experience in Java Script.</p> <p><a href=""http://mygate.aiu.edu.sy:8080/faces/ui/pages/student/index.xhtml"" rel=""nofollow noreferrer"">http://mygate.aiu.edu.sy:8080/faces/ui/pages/student/index.xhtml</a></p>"	2020-08-01 17:17:41.693 UTC	63208119	"<p>There're two ways - hard way and easy way.</p> <ul> <li><p>The hard way - you need to monitor all the requests page sends when you logging in in the real browser (through &quot;Network&quot; tab in Chrome or FF dev tools), and then you need to replicate them on your side to look like a real user. You can do it with <code>requests</code>+<code>BeautifulSoup</code>, but I'll better use <a href=""https://scrapy.org/"" rel=""nofollow noreferrer"">Scrapy</a> because it has built-in support for saving cookies between requests, etc.</p> </li> <li><p>The easy way, and it's still Python - use <a href=""https://selenium-python.readthedocs.io/"" rel=""nofollow noreferrer"">Selenium</a>. This way you're operating through the real browser, you can just send <code>click on that thing</code> commands, and browser will do all the work, including &quot;looking like a real browser&quot;, so you'll skip a lot of antibot stuff.</p> </li> </ul>"			2020-08-01 17:28:22.763 UTC
63241727	python|selenium|xpath|css-selectors|webdriverwait	"Python, Selenium: how to click on javascript:void(0) element"	"<p>I have an &quot;onclick&quot; element in a webpage,</p> <pre><code>&lt;a href=&quot;javascript:void(0)&quot; onclick=     &quot;toIndexHtml('3','http://xxxxxxxxxxx/trade','0')&quot;&gt; &lt;i&gt;&lt;/i&gt; &lt;span&gt;&lt;/span&gt; trade &lt;/a&gt; </code></pre> <p>It is shown in the webpage as a button and I want to click on it, I tried to search for it using the following code:</p> <pre class=""lang-py prettyprint-override""><code>driver.find_element_by_xpath(&quot;//a[contains(@onclick,'toIndexHtml')]&quot;).click() </code></pre> <pre class=""lang-py prettyprint-override""><code>WebDriverWait(driver, 20).until(     EC.element_to_be_clickable((By.XPATH,&quot;/html/body/div/ul/li[3]/a&quot;))).click() </code></pre> <p>Both are not working, please suggest if there is any other ways! Thanks in advance!</p> <p>P.S.: I am using Chrome WebDriver and Chrome v64.</p>"	2020-08-04 07:02:45.207 UTC	63242311	"<p>Your first locator looks perfect and should have worked.</p> <p>Ideally, to click on the element you need to induce <a href=""https://stackoverflow.com/questions/49775502/webdriverwait-not-working-as-expected/49775808#49775808"">WebDriverWait</a> for the <code>element_to_be_clickable()</code> and you can use either of the following <a href=""https://stackoverflow.com/questions/48369043/official-locator-strategies-for-the-webdriver/48376890#48376890"">Locator Strategies</a>:</p> <ul> <li><p>Using <code>CSS_SELECTOR</code>:</p> <pre><code>WebDriverWait(driver, 20).until(EC.element_to_be_clickable((By.CSS_SELECTOR, &quot;a[onclick^='toIndexHtml']&quot;))).click() </code></pre> </li> <li><p>Using <code>XPATH</code>:</p> <pre><code>WebDriverWait(driver, 20).until(EC.element_to_be_clickable((By.XPATH, &quot;//a[starts-with(@onclick,'toIndexHtml')]&quot;))).click() </code></pre> </li> <li><p><strong>Note</strong> : You have to add the following imports :</p> <pre><code>from selenium.webdriver.support.ui import WebDriverWait from selenium.webdriver.common.by import By from selenium.webdriver.support import expected_conditions as EC </code></pre> </li> </ul>"			2020-08-04 07:46:41.557 UTC
63243135	python-3.x|forms|post|mechanize|mechanize-python	Python + Mechanize - Emulate Javascript button click using POST?	"<p>I'm trying to automate filling a car insurance quote form on a site: (following the same format as the site URL lets call it:  &quot;https://secure.examplesite.com/css/car/step1#noBack&quot;)</p> <p>I'm stuck on the rego section as once the rego has been added, a button needs to be clicked to perform the search and it seems this is heavy Javascript and I know mechanizer can't handle this. I'm not versed in JavaScript, but I can see that when clicking the button a POST request is made to this URL: (&quot;https://secure.examplesite.com/css/car/step1/searchVehicleByRegNo&quot;) Please see image also.</p> <p>How can I emulate this POST request in Mechanize to run the javascript? So I can see the response / interact with the response? Or is this not possible? Can I consider bs4/requests/robobrowser instead. I'm only ~4 months into learning! Thanks</p> <pre><code># Mechanize test import mechanize  br = mechanize.Browser() br.set_handle_robots(False)   # ignore robots br.set_handle_refresh(False)  # can sometimes hang without this res = br.open(&quot;https://secure.examplesite.com/css/car/step1#noBack&quot;)  br.select_form(id = &quot;quoteCollectForm&quot;) br.set_all_readonly(False)    # allow everything to be written to  controlDict = {}  # List all form controls for control in br.form.controls:     controlDict[control.name] = control.value     print(&quot;type = %s, name = %s, value = %s&quot; %(control.type, control.name, control.value))  # Enter Rego etc &quot;example&quot; br.form[&quot;vehicle.searchRegNo&quot;] = &quot;example&quot;  # Now for control name = vehicle.searchRegNo, value = example  # BUT Now how do I click the button?? Simulate POST? The post url is formatted like: # https://secure.examplesite.com/css/car/step1/searchVehicleByRegNo </code></pre> <p><a href=""https://i.stack.imgur.com/AsfBs.jpg"" rel=""nofollow noreferrer"">Javascript POST</a></p>"	2020-08-04 08:40:33.827 UTC	63913886	"<p>Solved my own problem-</p> <p>Steps:</p> <ol> <li>open dev tools in browser</li> <li>Go to network tab and clear</li> <li>interact with form element (in my case car rego finder)</li> <li>click on the event that occurs from interaction</li> <li>copy the exact URL, Request header data, and payload</li> <li>I used Postman to quickly test the request and responses were correct / the same as the Webform and found the relevant headers</li> <li>in postman convert to python requests code</li> </ol> <p>Now I can interact completely with the form</p>"			2020-09-16 05:49:57.153 UTC
63243160	javascript|python|video	Is it possible for a javascript code to get the constantly updated variables of a running python program?	"<p>I have a <strong>python program</strong> that <strong>tracks</strong> the <strong>position of a person</strong> in a room. This position is saved as a variable (&quot;<em>coordinates</em>&quot;), and constantly updated. Based on these coordinates (x and y) I would like a video player to zoom in and out. So if someone is in the front of the room, the movie clip is zoomed in. When he/she is in the back, the footage is zoomed out.</p> <p>Now the problem is, I don't really find nice video players in python. I do however see a lot of nice <strong>video players in javascript</strong>. Now my question is: would it be possible for a <strong>javascript file to somehow &quot;ask&quot; the python file what the current value of the variable is</strong>? Is there a regular way to do this? If this is not the case I will search for a python video module, but really like the javascript one...</p> <p>Thanks in advance!!!</p>"	2020-08-04 08:41:59.1 UTC	63243365	"<p>Personally, the way I know of achieving this is writing to a file or a database from python and make Javascript make an ajax call to a handler python (or another format) script in the server, which would return the values in the file to which the variables have been written.</p> <p>Although using a video player in python3 would be the best practice. Try looking into <a href=""https://codeloop.org/how-to-play-mp4-videos-in-python-pyglet/"" rel=""nofollow noreferrer"">pyglet</a> or <a href=""https://pypi.org/project/moviepy/"" rel=""nofollow noreferrer"">moviepy</a>. <a href=""https://stackoverflow.com/questions/19428258/how-to-pan-and-zoom-properly-in-2d"">Here</a> is post which focusses on zooming and panning with pyglet.</p> <p>Also, you can use webSockets (or selenium) to drive the js from python itself. <a href=""https://stackoverflow.com/questions/44010059/execute-js-code-on-page-from-python"">This</a> should help.</p>"			2020-08-04 08:55:12.487 UTC
63243160	javascript|python|video	Is it possible for a javascript code to get the constantly updated variables of a running python program?	"<p>I have a <strong>python program</strong> that <strong>tracks</strong> the <strong>position of a person</strong> in a room. This position is saved as a variable (&quot;<em>coordinates</em>&quot;), and constantly updated. Based on these coordinates (x and y) I would like a video player to zoom in and out. So if someone is in the front of the room, the movie clip is zoomed in. When he/she is in the back, the footage is zoomed out.</p> <p>Now the problem is, I don't really find nice video players in python. I do however see a lot of nice <strong>video players in javascript</strong>. Now my question is: would it be possible for a <strong>javascript file to somehow &quot;ask&quot; the python file what the current value of the variable is</strong>? Is there a regular way to do this? If this is not the case I will search for a python video module, but really like the javascript one...</p> <p>Thanks in advance!!!</p>"	2020-08-04 08:41:59.1 UTC	63243334	"<p>If it's supposed to be vanilla JavaScript, then I'd suggest using sockets and updating the field with an <code>onMessage</code> event. This would mean that the Python side of the program would be &quot;pushing&quot; the information onto the JavaScript side which would only display the data.</p> <pre><code>let yourSocket = new WebSocket(&quot;ws://whatever.source&quot;);  const yourField = document.getElementById(&quot;your_element_id&quot;);  yourSocket.onMessage = function(event) {     yourField.innerHTML = event.data; } </code></pre> <p>Substitute <code>whatever.source</code> for your message source (coming from python) and <code>your_element_id</code> with the ID of the element you want to fill with data.</p> <p>Please refer to <a href=""https://javascript.info/websocket"" rel=""nofollow noreferrer"">https://javascript.info/websocket</a> for the JS part and for the Python side there's <a href=""https://websockets.readthedocs.io/en/stable/intro.html."" rel=""nofollow noreferrer"">https://websockets.readthedocs.io/en/stable/intro.html.</a>.</p>"			2020-08-04 08:53:03.977 UTC
63246707	javascript|python|web-scraping|request	Python scraping create payload cnmv.es and render javascript	"<p>I send request <a href=""https://www.cnmv.es/portal/Consultas/BusquedaPorEntidad.aspx"" rel=""nofollow noreferrer"">https://www.cnmv.es/portal/Consultas/BusquedaPorEntidad.aspx</a> with payload and search text aaa, but get javascript response. So I need render javascript, but I do not want use Selenium. Also I not sure if my payload good.</p> <pre><code>    url = 'https://www.cnmv.es/portal/Consultas/BusquedaPorEntidad.aspx'     search_text = 'aaa'     r = requests.get('https://www.cnmv.es/portal/Consultas/BusquedaPorEntidad.aspx')     soup = BeautifulSoup(r.content, 'html.parser')      VIEWSTATE  = soup.find(id=&quot;__VIEWSTATE&quot;)['value'] + '%3D&amp;'     VIEWSTATEGENERATOR = '__VIEWSTATEGENERATOR=' + soup.find(id=&quot;__VIEWSTATEGENERATOR&quot;)['value']      EVENTVALIDATION = '&amp;__EVENTVALIDATION' + soup.find(id=&quot;__EVENTVALIDATION&quot;)['value']     SEARCH = &quot;&amp;ctl00%24wBusqueda%24txtBusqueda=&amp;ctl00%24ContentPrincipal%24txtBusqueda={0}&amp;ctl00%24ContentPrincipal%24btnBuscar=Search&quot;.format(search_text)           payload = '__EVENTTARGET=&amp;__EVENTARGUMENT=&amp;__VIEWSTATE=' + VIEWSTATE + VIEWSTATEGENERATOR + EVENTVALIDATION + SEARCH       headers = {     'Connection': 'keep-alive',     'Cache-Control': 'max-age=0',     'Upgrade-Insecure-Requests': '1',     'Origin': 'https://www.cnmv.es',     'Content-Type': 'application/x-www-form-urlencoded',     'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.105 Safari/537.36',     'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9',     'Sec-Fetch-Site': 'same-origin',     'Sec-Fetch-Mode': 'navigate',     'Sec-Fetch-User': '?1',     'Sec-Fetch-Dest': 'document',     'Referer': 'https://www.cnmv.es/portal/Consultas/BusquedaPorEntidad.aspx',     'Accept-Language': 'en-US,en;q=0.9',     }      response = requests.request(&quot;POST&quot;, url, headers=headers, data = payload)      print(response.text.encode('utf8')) </code></pre>"	2020-08-04 12:16:47.637 UTC	63248507	"<p>I didn't test your <code>payload</code> but I don't know why you add <code>%3D</code> to <code>__VIEWSTATE</code></p> <p>I use dictionary which <code>requests</code> will automatically converted to string and I don't have to add <code>&amp;</code> manually. And I don't have to use <code>%24</code> instead of <code>$</code> in <code>ctl00$wBusqueda$txtBusqueda</code>, etc.</p> <pre><code>payload = {     '__EVENTTARGET': '',     '__EVENTARGUMENT': '',     '__VIEWSTATE': soup.find(id=&quot;__VIEWSTATE&quot;)['value'],     '__VIEWSTATEGENERATOR': soup.find(id=&quot;__VIEWSTATEGENERATOR&quot;)['value'],     '__EVENTVALIDATION': soup.find(id=&quot;__EVENTVALIDATION&quot;)['value'],     'ctl00$wBusqueda$txtBusqueda': '',     'ctl00$ContentPrincipal$txtBusqueda': search_text,     'ctl00$ContentPrincipal$btnBuscar': 'Buscar', }         </code></pre> <p><strong>BTW:</strong> Code works for me without headers but I keep them commented.</p> <pre><code>import requests from bs4 import BeautifulSoup  url = 'https://www.cnmv.es/portal/Consultas/BusquedaPorEntidad.aspx' search_text = 'aaa'  r = requests.get('https://www.cnmv.es/portal/Consultas/BusquedaPorEntidad.aspx') soup = BeautifulSoup(r.content, 'html.parser')  payload = {     '__EVENTTARGET': '',     '__EVENTARGUMENT': '',     '__VIEWSTATE': soup.find(id=&quot;__VIEWSTATE&quot;)['value'],     '__VIEWSTATEGENERATOR': soup.find(id=&quot;__VIEWSTATEGENERATOR&quot;)['value'],     '__EVENTVALIDATION': soup.find(id=&quot;__EVENTVALIDATION&quot;)['value'],     'ctl00$wBusqueda$txtBusqueda': '',     'ctl00$ContentPrincipal$txtBusqueda': search_text,     'ctl00$ContentPrincipal$btnBuscar': 'Buscar', }          headers = { #    'Connection': 'keep-alive', #    'Cache-Control': 'max-age=0', #    'Upgrade-Insecure-Requests': '1', #    'Origin': 'https://www.cnmv.es', #    'Content-Type': 'application/x-www-form-urlencoded', #    'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.105 Safari/537.36', #    'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9', #    'Sec-Fetch-Site': 'same-origin', #    'Sec-Fetch-Mode': 'navigate', #    'Sec-Fetch-User': '?1', #    'Sec-Fetch-Dest': 'document', #    'Referer': 'https://www.cnmv.es/portal/Consultas/BusquedaPorEntidad.aspx', #    'Accept-Language': 'en-US,en;q=0.9', }  r = requests.post(url, headers=headers, data=payload) #print(response.text)  soup = BeautifulSoup(r.content, 'html.parser') for item in soup.find_all('option'):     print(item['value'], '|', item.text) </code></pre> <p>Result:</p> <pre><code>CLP3846 | AAA TRADE LTD V85543155 | DWS DINERO GOBIERNOS AAA, FI V85263911 | EUROVALOR DEUDA PUBLICA EUROPEA AAA, FI 9686 | WWW.AAARATEDBOND.COM </code></pre>"			2020-08-04 13:58:01.507 UTC
63251102	python|selenium|web-scraping|beautifulsoup	How do I fill in a javascript widget before it autofills its default text with Selenium and Python	"<p>I am trying to fill in the date of a javascript widget to then download data for a specified date.  Using clear() or Ctrl+a Delete will both empty the text field, however, when sending the string containing the date, the widget autofills with a default date and ignores the keys sent to it. Can anybody help me with a way to properly fill in the date of the widget?</p> <pre><code>import requests import re import time from bs4 import BeautifulSoup from selenium import webdriver from selenium.webdriver import ActionChains from selenium.webdriver.common.keys import Keys as KEYS  url ='https://rtba.spectraenergy.com/InformationalPosting/Default.aspx?bu=TE&amp;Type=OA' driver = webdriver.Chrome('D:/Program Setup Files/chromedriver.exe') driver.get(url)  date = driver.find_element_by_xpath('//*[@id=&quot;ctl00_MainContent_ctl01_oaDefault_ucDate_rdpDate_dateInput_text&quot;]') # ActionChains(driver).click(date).send_keys(&quot;1/1/2020&quot;).perform() ActionChains(driver).click(date).key_down(KEYS.CONTROL).send_keys(&quot;a&quot;).send_keys(KEYS.DELETE).send_keys(&quot;1/1/2020&quot;).perform()  # Find the button, call it downloadEXCEL downloadEXCEL = driver.find_element_by_partial_link_text('Downloadable Format') ActionChains(driver).click(downloadEXCEL).perform()                         # Click the button  </code></pre> <p>I know the send_keys is working because the commented out line here</p> <pre><code># ActionChains(driver).click(date).send_keys(&quot;1/1/2020&quot;).perform() </code></pre> <p>will send the date and the field will contain the two dates concatenated.</p>"	2020-08-04 16:23:48.47 UTC	63255125	<p>I only needed to &quot;take my finger off control&quot; so to speak</p> <pre><code>ActionChains(driver).click(date).key_down(KEYS.CONTROL).send_keys(&quot;a&quot;).key_up(KEYS.CONTROL).send_keys(&quot;1/1/2020&quot;).send_keys(KEYS.RETURN).perform() </code></pre> <p>Using key_up(KEYS.CONTROL) after I was finished with 'CTRL + a' did the trick.</p>			2020-08-04 21:13:33.387 UTC
63252324	javascript|python|web|flask	Having Issues with handling Python dictionaries in Javascript flask templates	"<p>So I am building a web application using flask that can track mutiple vehicles and provide updates. The python script helps gather all the data and puts them in a dictionary.</p> <p>I am sending this dictionary over to the index.html with the javascript code within the HTML that initializes a map and places markers based on the coordinates received from python.</p> <p>The issue I am having is this dictionary is not being parsed properly in js and as a result I get no data.</p> <p>Right now I have the {{truck_dict}} placeholder to hold the dict object from python in the html.</p> <p>PS. I am not the best at JS so dont judge XD</p> <pre><code>#Python Code return render_template('pages/index.html', trucks = truck.driver_locator(truck.locations())) #Even when I jsonify/json.dump the variable in the trucks object, nothing happens </code></pre> <pre><code>#JS Code var truck_dict = {{trucks | tojson}} var i; for (var key in truck_dict){ var value = truck_dict[key]; var geojson = {       type: 'FeatureCollection',       features: [{             type: 'Feature',             geometry: {             type: 'Point',             coordinates: value          },             properties: {                   title: 'Mapbox',                   description: '1303'                   }                }]          }; </code></pre> <p>SAMPLE OUTPUT of the python generated dict</p> <pre><code>{'1301': [43.1220307, -78.9352247], '1302': [42.3107737, -77.2519131], '1304': [40.3809016, -74.5665863], '1305': [40.2453049, -74.5707928], '1303': [39.6435448, -75.9325289]} </code></pre>"	2020-08-04 17:40:43.853 UTC	63253885	"<p>Here is the output:</p> <pre><code>var truck_dict = {'1301': [43.1220307, -78.9352247], '1302': [42.3107737, -77.2519131], '1304': [40.3809016, -74.5665863], '1305': [40.2453049, -74.5707928], '1303': [39.6435448, -75.9325289]};  for (var i in truck_dict) {   console.log(i, truck_dict[i]); } </code></pre> <p>output:</p> <pre><code>1301 [43.1220307, -78.9352247] 1302 [42.3107737, -77.2519131] 1303 [39.6435448, -75.9325289] 1304 [40.3809016, -74.5665863] 1305 [40.2453049, -74.5707928] </code></pre> <p>So, you need to log truck_dict, like:</p> <pre><code>var truck_dict = {{trucks | tojson}};  console.log(trucks); console.log(truck_dict); </code></pre>"			2020-08-04 19:31:36.007 UTC
63252324	javascript|python|web|flask	Having Issues with handling Python dictionaries in Javascript flask templates	"<p>So I am building a web application using flask that can track mutiple vehicles and provide updates. The python script helps gather all the data and puts them in a dictionary.</p> <p>I am sending this dictionary over to the index.html with the javascript code within the HTML that initializes a map and places markers based on the coordinates received from python.</p> <p>The issue I am having is this dictionary is not being parsed properly in js and as a result I get no data.</p> <p>Right now I have the {{truck_dict}} placeholder to hold the dict object from python in the html.</p> <p>PS. I am not the best at JS so dont judge XD</p> <pre><code>#Python Code return render_template('pages/index.html', trucks = truck.driver_locator(truck.locations())) #Even when I jsonify/json.dump the variable in the trucks object, nothing happens </code></pre> <pre><code>#JS Code var truck_dict = {{trucks | tojson}} var i; for (var key in truck_dict){ var value = truck_dict[key]; var geojson = {       type: 'FeatureCollection',       features: [{             type: 'Feature',             geometry: {             type: 'Point',             coordinates: value          },             properties: {                   title: 'Mapbox',                   description: '1303'                   }                }]          }; </code></pre> <p>SAMPLE OUTPUT of the python generated dict</p> <pre><code>{'1301': [43.1220307, -78.9352247], '1302': [42.3107737, -77.2519131], '1304': [40.3809016, -74.5665863], '1305': [40.2453049, -74.5707928], '1303': [39.6435448, -75.9325289]} </code></pre>"	2020-08-04 17:40:43.853 UTC	63252553	"<p>You're trying to index a dictionary.Using <code>truck_dict[I]</code> doesn't work here because your indices are not numbers (not possible in js anyway).</p> <p>You need to access dictionary elements with their keys (ex. <code>truck_dict['1301']</code> or <code>truck_dict.1301</code>) <strong>NOT</strong> indexes. If you want to iterate over each key (which you can use to reference the value mapped to that key), use:</p> <pre><code>for(var key in truck_dict) {   var value = truck_dict[key];   // do what you need with value and key here } </code></pre>"			2020-08-04 17:54:56.773 UTC
63254469	javascript|python|math|addition|base	"why does (00123 + 34351) return 34434 in javascript, java and python ? The correct answer is 34474"	"<pre><code>console.log(00123 + 34351); //in javascript, outputs 34434 print(00123 + 34351); //in python, outputs 34434 </code></pre> <p>in javascript, outputs 34434 in python, outputs 34434</p> <p>However removing the leading zeroes i.e (123 + 34351) gives the correct answer, which is 34474</p>"	2020-08-04 20:18:05.003 UTC	63254495	"<p>Not sure about Java, but in JavaScript and in Python 2, numbers starting with <code>0</code> are octal numbers, i.e. <code>00123</code> is actually <code>83</code> in decimal.</p> <p><strong>JavaScript:</strong> <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Grammar_and_types#Numeric_literals"" rel=""nofollow noreferrer"">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Grammar_and_types#Numeric_literals</a></p>"			2020-08-04 20:20:04.197 UTC
63254469	javascript|python|math|addition|base	"why does (00123 + 34351) return 34434 in javascript, java and python ? The correct answer is 34474"	"<pre><code>console.log(00123 + 34351); //in javascript, outputs 34434 print(00123 + 34351); //in python, outputs 34434 </code></pre> <p>in javascript, outputs 34434 in python, outputs 34434</p> <p>However removing the leading zeroes i.e (123 + 34351) gives the correct answer, which is 34474</p>"	2020-08-04 20:18:05.003 UTC	63254505	"<p>No, the correct answer is, indeed 34434 (base 10).  A number with a leading 0 in many languages is octal, so your addition operation is 123 (base 8) + 34351 (base 10).  Convert the octal integer to decimal, and you'll see the rationale.</p>"			2020-08-04 20:20:35.213 UTC
63254469	javascript|python|math|addition|base	"why does (00123 + 34351) return 34434 in javascript, java and python ? The correct answer is 34474"	"<pre><code>console.log(00123 + 34351); //in javascript, outputs 34434 print(00123 + 34351); //in python, outputs 34434 </code></pre> <p>in javascript, outputs 34434 in python, outputs 34434</p> <p>However removing the leading zeroes i.e (123 + 34351) gives the correct answer, which is 34474</p>"	2020-08-04 20:18:05.003 UTC	63254499	"<p><code>0</code> is a common prefix for octal, for which the decimal number is 83. Doing</p> <pre><code>console.log(00123+34351) </code></pre> <p>is equivalent to</p> <pre><code>console.log(83+34351) </code></pre> <p>edit: note that in python 3+ the prefix is <code>0o</code></p>"			2020-08-04 20:20:11.453 UTC
63283026	javascript|python|selenium|google-chrome|selenium-webdriver	How to get the return value of a JavaScript function to a Python Variable	"<p>I am trying to web scrape some information from a website local storage using selenium webdriver. I am using python 3.8.5 I want to return that JavaScript's output value to a python variable.</p> <pre><code>number = driver.execute_script(&quot;setTimeout(function(){ localStorage.getItem('value'); }, 1500);&quot;) </code></pre> <p>But when I print the variable <strong><code>number</code></strong> the result is None for some reason. Any ideas on what I should do?</p>"	2020-08-06 11:53:14.94 UTC	63283794	"<p>If you want to pass any value from client-side (javascript) to backend (python) you can use ajax for data sending here: <a href=""https://www.w3schools.com/jquery/jquery_ajax_get_post.asp"" rel=""nofollow noreferrer"">https://www.w3schools.com/jquery/jquery_ajax_get_post.asp</a></p> <p>But the best way is to fetch the required data directly through python that would be fast enough. There are many packages/libraries like selenium, requests, beautiful soap with them you can do that.</p>"			2020-08-06 12:37:48.073 UTC
63283026	javascript|python|selenium|google-chrome|selenium-webdriver	How to get the return value of a JavaScript function to a Python Variable	"<p>I am trying to web scrape some information from a website local storage using selenium webdriver. I am using python 3.8.5 I want to return that JavaScript's output value to a python variable.</p> <pre><code>number = driver.execute_script(&quot;setTimeout(function(){ localStorage.getItem('value'); }, 1500);&quot;) </code></pre> <p>But when I print the variable <strong><code>number</code></strong> the result is None for some reason. Any ideas on what I should do?</p>"	2020-08-06 11:53:14.94 UTC	63284398	"<p>This will navigate to this page where you asked this question and return the localStorage item &quot;se:fkey&quot; using javascript:</p> <pre><code>from selenium import webdriver  driver = webdriver.Chrome(executable_path=r'C:\\Path\\To\\Your\\chromedriver.exe') driver.get('https://stackoverflow.com/questions/63283026/how-to-get-the-return-value-of-a-javascript-function-to-a-python-variable')  a_returned = driver.execute_script(&quot;&quot;&quot; a_function = function(){ console.log(localStorage.getItem(&quot;se:fkey&quot;)); return localStorage.getItem(&quot;se:fkey&quot;); }; return a_function();  &quot;&quot;&quot;)  print(&quot;a_returned:&quot;, a_returned) </code></pre>"			2020-08-06 13:14:27.757 UTC
63283026	javascript|python|selenium|google-chrome|selenium-webdriver	How to get the return value of a JavaScript function to a Python Variable	"<p>I am trying to web scrape some information from a website local storage using selenium webdriver. I am using python 3.8.5 I want to return that JavaScript's output value to a python variable.</p> <pre><code>number = driver.execute_script(&quot;setTimeout(function(){ localStorage.getItem('value'); }, 1500);&quot;) </code></pre> <p>But when I print the variable <strong><code>number</code></strong> the result is None for some reason. Any ideas on what I should do?</p>"	2020-08-06 11:53:14.94 UTC	63283302	"<p>You have to return from the JS script:</p> <pre class=""lang-py prettyprint-override""><code>print(driver.execute_script('return localStorage.getItem(&quot;value&quot;);')) </code></pre>"			2020-08-06 12:09:03.257 UTC
63283026	javascript|python|selenium|google-chrome|selenium-webdriver	How to get the return value of a JavaScript function to a Python Variable	"<p>I am trying to web scrape some information from a website local storage using selenium webdriver. I am using python 3.8.5 I want to return that JavaScript's output value to a python variable.</p> <pre><code>number = driver.execute_script(&quot;setTimeout(function(){ localStorage.getItem('value'); }, 1500);&quot;) </code></pre> <p>But when I print the variable <strong><code>number</code></strong> the result is None for some reason. Any ideas on what I should do?</p>"	2020-08-06 11:53:14.94 UTC	63283546	"<p>You can use this:</p> <pre><code>number = driver.execute_script(&quot;setTimeout(function(){ return localStorage.getItem('value'); }, 1500);&quot;) </code></pre>"			2020-08-06 12:23:07.27 UTC
63306737	javascript|utf-8	Javascript analogue of Python's string.encode('UTF-8')	"<p>I have a string that represents some binary data, looking like: <code>\x89PNG\x1a\x00\x00\x00IHDR\x00\x00</code> etc</p> <p>I need to post this string to some API, etc. AS IS but the problem is that Javascript automatically converts it to <code>PNG</code> etc</p> <p>.escape, .encodeURI.. etc don't help</p> <p>In Python such conversion can be done like <strong>string.encode('UTF-8')</strong> but I can't find nothing like that in JS.</p> <p>Maybe someone knows the library or something that may help?</p>"	2020-08-07 17:36:45.763 UTC	63321261	"<p>In Javascript we usualy use <a href=""https://developer.mozilla.org/en-US/docs/Glossary/Base64"" rel=""nofollow noreferrer"">Base64</a> for this.</p> <p>You can do something like</p> <pre><code>var encodedData = window.btoa(stringToEncode); var decodedData = window.atob(encodedData); </code></pre> <p>You may also find this interesting</p> <pre><code>function encode_utf8(s) {   return unescape(encodeURIComponent(s)); }  function decode_utf8(s) {   return decodeURIComponent(escape(s)); } </code></pre> <p>Or reference <a href=""https://stackoverflow.com/a/22373061/6302200"">https://stackoverflow.com/a/22373061/6302200</a></p>"			2020-08-08 23:57:35.743 UTC
63321963	python|web-scraping|python-requests|cdn	Scraping javascript of CDN data with python	"<p>There is a large dataset, full of neatly-stored tabular data, found <a href=""https://c0cre127.caspio.com/dp/311a1000697d9171cc1c4128ae42"" rel=""nofollow noreferrer"">here</a> that I would like to parse through and save locally.</p> <p>The problem is, no matter how deep I &quot;drill down&quot; to inspect the source code, there isn't any actual data, nor any discernible source page.</p> <p>My question is, is it therefore even possible to access the data via the typical <code>requests.get()</code> and <code>.content</code> etc.? Or would something like <code>selenium</code> do the trick? If not these two options, then what?</p> <p>Thanks in advance.</p>"	2020-08-09 02:30:31.98 UTC	63322043	"<p>See my comment for what it's worth here's the request that should work but doesn't... For reasons I'm not sure, unless there's security at their end with regard to cookies.</p> <p>Inspecting the page, it's making a POST request to <code>c0cre127.caspio.com/dp/311a1000697d9171cc1c4128ae42</code>. Also what you get back is in a structured format. You can see it in the preview within the request in network tools. Interesting the 'responseText' which gives you the data, is all in html. So theoretically you could just parse this part of the data to grab what you need. The problem is when I recreate this HTTP request, the AppKey which part of the cookie needed according to the request, says it's wrong.</p> <p>So selenium would work, not sure I can do much about the AppKey.</p> <pre><code>import requests  cookies = {     'cbParamList': '',     'cbCookieAccepted': '1',     'AppKey': '311a1000697d9171cc1c4128ae42',     'AWSALB': '76fnReAlqLZyJz4gNmSMnGc3oluXMlbsrGwaF+kcm4Rg8fklrjjrxvmez+XxXXg/yDle490fw/MKBNPWCyoGAiihFYgcWQ1RSp0vxSGJHDnfXncHSQuprTjv8Fjk',     'AWSALBCORS': '76fnReAlqLZyJz4gNmSMnGc3oluXMlbsrGwaF+kcm4Rg8fklrjjrxvmez+XxXXg/yDle490fw/MKBNPWCyoGAiihFYgcWQ1RSp0vxSGJHDnfXncHSQuprTjv8Fjk', }  headers = {     'authority': 'c0cre127.caspio.com',     'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.105 Safari/537.36',     'content-type': 'multipart/form-data; boundary=----WebKitFormBoundarykaIBnhjgBEZ0L714',     'accept': '*/*',     'origin': 'https://c0cre127.caspio.com',     'sec-fetch-site': 'same-origin',     'sec-fetch-mode': 'cors',     'sec-fetch-dest': 'empty',     'referer': 'https://c0cre127.caspio.com/dp/311a1000697d9171cc1c4128ae42',     'accept-language': 'en-US,en;q=0.9', }  params = (     ('rnd', '1596940878792'), )  data = '$------WebKitFormBoundarykaIBnhjgBEZ0L714\\r\\nContent-Disposition: form-data; name=&quot;cbUniqueFormId&quot;\\r\\n\\r\\n_69831fa53c178f\\r\\n------WebKitFormBoundarykaIBnhjgBEZ0L714\\r\\nContent-Disposition: form-data; name=&quot;ComparisonType1_1&quot;\\r\\n\\r\\n\\r\\n------WebKitFormBoundarykaIBnhjgBEZ0L714\\r\\nContent-Disposition: form-data; name=&quot;MatchNull1_1&quot;\\r\\n\\r\\nN\\r\\n------WebKitFormBoundarykaIBnhjgBEZ0L714\\r\\nContent-Disposition: form-data; name=&quot;FieldName2&quot;\\r\\n\\r\\nDate\\r\\n------WebKitFormBoundarykaIBnhjgBEZ0L714\\r\\nContent-Disposition: form-data; name=&quot;Operator2&quot;\\r\\n\\r\\nOR\\r\\n------WebKitFormBoundarykaIBnhjgBEZ0L714\\r\\nContent-Disposition: form-data; name=&quot;NumCriteriaDetails2&quot;\\r\\n\\r\\n1\\r\\n------WebKitFormBoundarykaIBnhjgBEZ0L714\\r\\nContent-Disposition: form-data; name=&quot;ComparisonType2_1&quot;\\r\\n\\r\\n=\\r\\n------WebKitFormBoundarykaIBnhjgBEZ0L714\\r\\nContent-Disposition: form-data; name=&quot;MatchNull2_1&quot;\\r\\n\\r\\nN\\r\\n------WebKitFormBoundarykaIBnhjgBEZ0L714\\r\\nContent-Disposition: form-data; name=&quot;FieldName3&quot;\\r\\n\\r\\n\\r\\n------WebKitFormBoundarykaIBnhjgBEZ0L714\\r\\nContent-Disposition: form-data; name=&quot;Operator3&quot;\\r\\n\\r\\n\\r\\n------WebKitFormBoundarykaIBnhjgBEZ0L714\\r\\nContent-Disposition: form-data; name=&quot;NumCriteriaDetails3&quot;\\r\\n\\r\\n1\\r\\n------WebKitFormBoundarykaIBnhjgBEZ0L714\\r\\nContent-Disposition: form-data; name=&quot;ComparisonType3_1&quot;\\r\\n\\r\\n\\r\\n------WebKitFormBoundarykaIBnhjgBEZ0L714\\r\\nContent-Disposition: form-data; name=&quot;MatchNull3_1&quot;\\r\\n\\r\\nN\\r\\n------WebKitFormBoundarykaIBnhjgBEZ0L714\\r\\nContent-Disposition: form-data; name=&quot;FieldName4&quot;\\r\\n\\r\\nProperty\\r\\n------WebKitFormBoundarykaIBnhjgBEZ0L714\\r\\nContent-Disposition: form-data; name=&quot;Operator4&quot;\\r\\n\\r\\nOR\\r\\n------WebKitFormBoundarykaIBnhjgBEZ0L714\\r\\nContent-Disposition: form-data; name=&quot;NumCriteriaDetails4&quot;\\r\\n\\r\\n1\\r\\n------WebKitFormBoundarykaIBnhjgBEZ0L714\\r\\nContent-Disposition: form-data; name=&quot;ComparisonType4_1&quot;\\r\\n\\r\\n=\\r\\n------WebKitFormBoundarykaIBnhjgBEZ0L714\\r\\nContent-Disposition: form-data; name=&quot;MatchNull4_1&quot;\\r\\n\\r\\nN\\r\\n------WebKitFormBoundarykaIBnhjgBEZ0L714\\r\\nContent-Disposition: form-data; name=&quot;FieldName5&quot;\\r\\n\\r\\n\\r\\n------WebKitFormBoundarykaIBnhjgBEZ0L714\\r\\nContent-Disposition: form-data; name=&quot;Operator5&quot;\\r\\n\\r\\n\\r\\n------WebKitFormBoundarykaIBnhjgBEZ0L714\\r\\nContent-Disposition: form-data; name=&quot;NumCriteriaDetails5&quot;\\r\\n\\r\\n1\\r\\n------WebKitFormBoundarykaIBnhjgBEZ0L714\\r\\nContent-Disposition: form-data; name=&quot;ComparisonType5_1&quot;\\r\\n\\r\\n\\r\\n------WebKitFormBoundarykaIBnhjgBEZ0L714\\r\\nContent-Disposition: form-data; name=&quot;MatchNull5_1&quot;\\r\\n\\r\\nN\\r\\n------WebKitFormBoundarykaIBnhjgBEZ0L714\\r\\nContent-Disposition: form-data; name=&quot;FieldName6&quot;\\r\\n\\r\\nZone\\r\\n------WebKitFormBoundarykaIBnhjgBEZ0L714\\r\\nContent-Disposition: form-data; name=&quot;Operator6&quot;\\r\\n\\r\\nOR\\r\\n------WebKitFormBoundarykaIBnhjgBEZ0L714\\r\\nContent-Disposition: form-data; name=&quot;NumCriteriaDetails6&quot;\\r\\n\\r\\n1\\r\\n------WebKitFormBoundarykaIBnhjgBEZ0L714\\r\\nContent-Disposition: form-data; name=&quot;ComparisonType6_1&quot;\\r\\n\\r\\n=\\r\\n------WebKitFormBoundarykaIBnhjgBEZ0L714\\r\\nContent-Disposition: form-data; name=&quot;MatchNull6_1&quot;\\r\\n\\r\\nN\\r\\n------WebKitFormBoundarykaIBnhjgBEZ0L714\\r\\nContent-Disposition: form-data; name=&quot;AppKey&quot;\\r\\n\\r\\n311a1000697d9171cc1c4128ae42\\r\\n------WebKitFormBoundarykaIBnhjgBEZ0L714\\r\\nContent-Disposition: form-data; name=&quot;PrevPageID&quot;\\r\\n\\r\\n1\\r\\n------WebKitFormBoundarykaIBnhjgBEZ0L714\\r\\nContent-Disposition: form-data; name=&quot;cbPageType&quot;\\r\\n\\r\\nSearch\\r\\n------WebKitFormBoundarykaIBnhjgBEZ0L714\\r\\nContent-Disposition: form-data; name=&quot;PageID&quot;\\r\\n\\r\\n2\\r\\n------WebKitFormBoundarykaIBnhjgBEZ0L714\\r\\nContent-Disposition: form-data; name=&quot;GlobalOperator&quot;\\r\\n\\r\\nAND\\r\\n------WebKitFormBoundarykaIBnhjgBEZ0L714\\r\\nContent-Disposition: form-data; name=&quot;NumCriteria&quot;\\r\\n\\r\\n6\\r\\n------WebKitFormBoundarykaIBnhjgBEZ0L714\\r\\nContent-Disposition: form-data; name=&quot;Search&quot;\\r\\n\\r\\n1\\r\\n------WebKitFormBoundarykaIBnhjgBEZ0L714\\r\\nContent-Disposition: form-data; name=&quot;Value2_1&quot;\\r\\n\\r\\n04/05/2020\\r\\n------WebKitFormBoundarykaIBnhjgBEZ0L714\\r\\nContent-Disposition: form-data; name=&quot;Value4_1&quot;\\r\\n\\r\\nAtterbury\\r\\n------WebKitFormBoundarykaIBnhjgBEZ0L714\\r\\nContent-Disposition: form-data; name=&quot;Value6_1&quot;\\r\\n\\r\\nCentral\\r\\n------WebKitFormBoundarykaIBnhjgBEZ0L714\\r\\nContent-Disposition: form-data; name=&quot;ClientQueryString&quot;\\r\\n\\r\\n\\r\\n------WebKitFormBoundarykaIBnhjgBEZ0L714\\r\\nContent-Disposition: form-data; name=&quot;AjaxAction&quot;\\r\\n\\r\\nSearchForm\\r\\n------WebKitFormBoundarykaIBnhjgBEZ0L714\\r\\nContent-Disposition: form-data; name=&quot;GridMode&quot;\\r\\n\\r\\nFalse\\r\\n------WebKitFormBoundarykaIBnhjgBEZ0L714\\r\\nContent-Disposition: form-data; name=&quot;cbUniqueFormId&quot;\\r\\n\\r\\n_69831fa53c178f\\r\\n------WebKitFormBoundarykaIBnhjgBEZ0L714\\r\\nContent-Disposition: form-data; name=&quot;AjaxActionHostName&quot;\\r\\n\\r\\nhttps://c0cre127.caspio.com\\r\\n------WebKitFormBoundarykaIBnhjgBEZ0L714\\r\\nContent-Disposition: form-data; name=&quot;cbAjaxReferrer&quot;\\r\\n\\r\\nhttps://c0cre127.caspio.com/dp/311a1000697d9171cc1c4128ae42\\r\\n------WebKitFormBoundarykaIBnhjgBEZ0L714--\\r\\n'  response = requests.post('https://c0cre127.caspio.com/dp/311a1000697d9171cc1c4128ae42', headers=headers, params=params, cookies=cookies, data=data) </code></pre> <h2> Output </h2> <pre><code>'Undefined AppKey. (&lt;a href=&quot;http://www.caspio.com/l/default.ashx?s=157&quot;&gt;Caspio Bridge&lt;/a&gt; error) (60011)' </code></pre> <h2> Update </h2> <p><a href=""https://i.stack.imgur.com/uG5uK.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/uG5uK.png"" alt=""enter image description here"" /></a></p>"			2020-08-09 02:47:28.66 UTC
63350361	javascript|python|django|websocket|ubuntu-16.04	Websocket between python server and javascript client	"<p>I am very new to web development, so any tips regarding the following matter will be useful! So, the client written in javascript is supposed to communicate with the server written in python. I am trying to establish websocket connection between two PCs running UBUNTU and Windows OS They work perfectly fine when I run them using UBUNTU, using localhost. Also, everything works fine when the server is in UBUNTU and the client is in Windows. Only when the server is located in Windows and the client is in UBUNTU I keep running into the same error. 'Error in connection establishment: net::ERR_CONNECTION_TIMED_OUT.</p> <p>I tried turning off the firewall settings in Windows, but it didn't work.</p> <p>Any input will be very appreciated!</p> <h1>Python Server</h1> <pre><code>import asyncio import websockets  async def hello(websocket, path):     name = await websocket.recv()     print(f&quot;&lt; {name}&quot;)      greeting = f&quot;Hello {name}!&quot;      await websocket.send(greeting)     print(f&quot;&gt; {greeting}&quot;)  start_server = websockets.serve(hello, &quot;localhost&quot;, 8765)  asyncio.get_event_loop().run_until_complete(start_server) asyncio.get_event_loop().run_forever() </code></pre> <h1>Javascript Client</h1> <pre><code>var ws = new WebSocket(&quot;ws://localhost:1337/&quot;);  ws.onopen = function(){     console.log(&quot;Connection is Established&quot;);     ws.send(&quot;Message to Send&quot;); };  ws.onmessage = function(evt) {     var received_msg = evt.data;     console.log(received_msg); }; </code></pre>"	2020-08-11 01:50:21.167 UTC	63353976	"<p>Okay, I found what was wrong. Completely forgot that I had to change my router settings for port forwarding.</p>"			2020-08-11 08:03:30.457 UTC
63360541	javascript|python|json	How to parse a json in python which was created with json stringfy using javascript	"<p>I have an object i stringyfied in JavaScript and i want to parse it in python. However i get the following error:</p> <blockquote> <p>Traceback (most recent call last):   File &quot;main.py&quot;, line 7, in  y = json.loads(x)   File &quot;/usr/lib/python3.8/json/<strong>init</strong>.py&quot;, line 357, in loads return _default_decoder.decode(s)   File &quot;/usr/lib/python3.8/json/decoder.py&quot;, line 337, in decode obj, end = self.raw_decode(s, idx=_w(s, 0).end())   File &quot;/usr/lib/python3.8/json/decoder.py&quot;, line 353, in raw_decode obj, end = self.scan_once(s, idx) json.decoder.JSONDecodeError: Expecting ',' delimiter: line 1 column 18 (char 17)</p> </blockquote> <p><strong>javascript</strong></p> <pre><code>const text = 'K said &quot;Hello World&quot; ';  const obj = {   text: text }  const stringified = JSON.stringify(obj); </code></pre> <p>output of stringified is : <code>{&quot;text&quot;:&quot;K said \&quot;Hello World\&quot; &quot;}</code></p> <p><strong>python</strong></p> <pre><code>import json  x = '{&quot;text&quot;:&quot;K said \&quot;Hello World\&quot; &quot;}'  y = json.loads(x)  print(y) </code></pre>"	2020-08-11 14:40:06.497 UTC	63360654	<p>Try this:</p> <p>The variable <code>x</code> has to be</p> <pre><code>x = &quot;{\&quot;text\&quot;:\&quot;K said \&quot;Hello World\&quot; \&quot;}&quot; y = json.loads(x)  print(y) &gt;&gt;&gt; {'text': 'K said &quot;Hello World&quot; '}  </code></pre>			2020-08-11 14:45:41.97 UTC
63360541	javascript|python|json	How to parse a json in python which was created with json stringfy using javascript	"<p>I have an object i stringyfied in JavaScript and i want to parse it in python. However i get the following error:</p> <blockquote> <p>Traceback (most recent call last):   File &quot;main.py&quot;, line 7, in  y = json.loads(x)   File &quot;/usr/lib/python3.8/json/<strong>init</strong>.py&quot;, line 357, in loads return _default_decoder.decode(s)   File &quot;/usr/lib/python3.8/json/decoder.py&quot;, line 337, in decode obj, end = self.raw_decode(s, idx=_w(s, 0).end())   File &quot;/usr/lib/python3.8/json/decoder.py&quot;, line 353, in raw_decode obj, end = self.scan_once(s, idx) json.decoder.JSONDecodeError: Expecting ',' delimiter: line 1 column 18 (char 17)</p> </blockquote> <p><strong>javascript</strong></p> <pre><code>const text = 'K said &quot;Hello World&quot; ';  const obj = {   text: text }  const stringified = JSON.stringify(obj); </code></pre> <p>output of stringified is : <code>{&quot;text&quot;:&quot;K said \&quot;Hello World\&quot; &quot;}</code></p> <p><strong>python</strong></p> <pre><code>import json  x = '{&quot;text&quot;:&quot;K said \&quot;Hello World\&quot; &quot;}'  y = json.loads(x)  print(y) </code></pre>"	2020-08-11 14:40:06.497 UTC	63360627	"<p>You need a <strong>raw</strong> string in order to <strong>jsonify</strong> this as the string is not properly parsed in python. Putting a <strong>r</strong> before the string should do the work</p> <pre class=""lang-py prettyprint-override""><code>import json  x = r'{&quot;text&quot;:&quot;K said \&quot;Hello World\&quot; &quot;}'  y = json.loads(x)  print(y) &gt;&gt;&gt; {'text': 'K said &quot;Hello World&quot; '} </code></pre>"			2020-08-11 14:44:27.623 UTC
63361208	javascript|python|visualization|video-processing|after-effects	How To Edit After Effects Template with Python or Javascript?	"<p>I planning to build an online music visualizer but I cannot figure out how to generate high graphic visualization using this After Effects template - <a href=""https://www.velosofy.com/template/neon-moon-audio-visualizer-gwhef28c28o"" rel=""noreferrer"">Visualization After Effects Template</a> and similar others. How can I Edit this Template with my own text and audio. I want to make something like this - <a href=""https://www.renderforest.com/music-visualisations"" rel=""noreferrer"">Website Example</a></p> <p>I Found Some Visualization Example using Web Audio &amp; p5js But They Were Not as Graphically Pleasing and I want to Streamline The Process By Using Existing AE Templates. I Was Not Able to Find Any Helpful Tutorial or Tool for this, So I am Here Looking for a Solution.</p> <p>The Process -</p> <ol> <li>User Makes API Request with Link of Audio (web address), Title and Subtitle.</li> <li>The Video is Processed with the Data in the request and stored in a public access dir.</li> <li>Link to The File is Sent Back to The User.</li> </ol> <p>The Tech I Am Open to Use : ReactJS, Javascript, Python, Django, Nodejs.</p> <p>Thanks for your time.</p>"	2020-08-11 15:15:54.983 UTC	63409129	"<p>Use <a href=""https://github.com/inlife/nexrender"" rel=""nofollow noreferrer"">NexRender</a></p> <p>This Will Help To Edit and Render After Effects File. Read the Docs and Implement According to Your Need.</p>"			2020-08-14 08:21:15.35 UTC
63361208	javascript|python|visualization|video-processing|after-effects	How To Edit After Effects Template with Python or Javascript?	"<p>I planning to build an online music visualizer but I cannot figure out how to generate high graphic visualization using this After Effects template - <a href=""https://www.velosofy.com/template/neon-moon-audio-visualizer-gwhef28c28o"" rel=""noreferrer"">Visualization After Effects Template</a> and similar others. How can I Edit this Template with my own text and audio. I want to make something like this - <a href=""https://www.renderforest.com/music-visualisations"" rel=""noreferrer"">Website Example</a></p> <p>I Found Some Visualization Example using Web Audio &amp; p5js But They Were Not as Graphically Pleasing and I want to Streamline The Process By Using Existing AE Templates. I Was Not Able to Find Any Helpful Tutorial or Tool for this, So I am Here Looking for a Solution.</p> <p>The Process -</p> <ol> <li>User Makes API Request with Link of Audio (web address), Title and Subtitle.</li> <li>The Video is Processed with the Data in the request and stored in a public access dir.</li> <li>Link to The File is Sent Back to The User.</li> </ol> <p>The Tech I Am Open to Use : ReactJS, Javascript, Python, Django, Nodejs.</p> <p>Thanks for your time.</p>"	2020-08-11 15:15:54.983 UTC	64293154	"<p>Just wanted to add this in addition to Shivam's answer:  you can achieve this using Dataclay's tool <a href=""https://dataclay.com/templater"" rel=""nofollow noreferrer"">Templater Bot for Adobe After Effects</a>.</p>"			2020-10-10 11:56:58.83 UTC
63364441	python|eel	Pass JavaScript Variable Value to Python with Eel	<p>I have a python program using eel library to build a nice GUI.</p> <p>In the GUI I have a variable within a JS function that I need to pass to Python to store in a variable.</p> <p>Any ideas why this is?</p>	2020-08-11 18:40:25.253 UTC	63811543	"<p>You can read the below Github article. Maybe this will help.</p> <p><a href=""https://github.com/samuelhwilliams/Eel"" rel=""nofollow noreferrer"">https://github.com/samuelhwilliams/Eel</a></p> <p>Return values While we want to think of our code as comprising a single application, the Python interpreter and the browser window run in separate processes. This can make communicating back and forth between them a bit of a mess, especially if we always had to explicitly send values from one side to the other.</p> <p>Eel supports two ways of retrieving return values from the other side of the app, which helps keep the code concise.</p> <p>To prevent hanging forever on the Python side, a timeout has been put in place for trying to retrieve values from the JavaScript side, which defaults to 10000 milliseconds (10 seconds). This can be changed with the _js_result_timeout parameter to eel.init. There is no corresponding timeout on the JavaScript side.</p> <p>Callbacks When you call an exposed function, you can immediately pass a callback function afterward. This callback will automatically be called asynchronously with the return value when the function has finished executing on the other side.</p> <p>For example, if we have the following function defined and exposed in Javascript:</p> <pre><code>eel.expose(js_random); function js_random() {   return Math.random(); } </code></pre> <p>Then in Python, we can retrieve random values from the Javascript side like so:</p> <pre><code>    def print_num(n):         print('Got this from Javascript:', n)  # Call Javascript function, and pass explicit callback function eel.js_random()(print_num)  # Do the same with an inline lambda as callback eel.js_random()(lambda n: print('Got this from Javascript:', n)) (It works exactly the same the other way around). </code></pre> <p>Synchronous returns In most situations, the calls to the other side are to quickly retrieve some piece of data, such as the state of a widget or contents of an input field. In these cases it is more convenient to just synchronously wait a few milliseconds then continue with your code, rather than breaking the whole thing up into callbacks.</p> <p>To synchronously retrieve the return value, simply pass nothing to the second set of brackets. So in Python we would write:</p> <pre><code>n = eel.js_random()()  # This immediately returns the value print('Got this from Javascript:', n) </code></pre> <p>You can only perform synchronous returns after the browser window has started (after calling eel.start()), otherwise obviously the call with hang.</p> <p>In Javascript, the language doesn't allow us to block while we wait for a callback, except by using await from inside an async function. So the equivalent code from the Javascript side would be:</p> <pre><code>async function run() {   // Inside a function marked 'async' we can use the 'await' keyword.    let n = await eel.py_random()(); // Must prefix call with 'await', otherwise it's the same syntax   console.log(&quot;Got this from Python: &quot; + n); }  run(); </code></pre>"			2020-09-09 12:18:21.683 UTC
63387647	javascript|python|html|flask	Getting data from python flask to html through Javascript	"<p>I am learning data science but I am still new to flask, html and Js. I have  developed a ML model for home price prediction and would love to deploy it to Heroku.</p> <p>The problem is the drop down menu in my frontend is not updated by the locations I have passed in my python flask backend.</p> <p>here are the important parts of my code.</p> <p>server.py:</p> <pre><code>from flask import Flask, request, jsonify, render_template app = Flask(__name__)  @app.route('/locations') def locations():     response = jsonify({         'locations': get_location_names()     })     response.headers.add('Access-Control-Allow-Origin', '*')      return response </code></pre> <p>app.js</p> <pre><code>function onPageLoad() {   console.log( &quot;document loaded&quot; );   $.get(&quot;{{ url_for('locations') }}&quot;,   function(data, status) {   console.log(&quot;got response for locations request&quot;);   if(data) {       var locations = data.locations;       var uiLocations = document.getElementById(&quot;uiLocations&quot;);       $('#uiLocations').empty();       for(var i in locations) {           var opt = new Option(locations[i]);           $('#uiLocations').append(opt);       }   }   }); </code></pre> <p>index.html:</p> <pre><code>&lt;!DOCTYPE html&gt; &lt;html&gt; &lt;head&gt; &lt;title&gt;Banglore Home Price Prediction&lt;/title&gt; &lt;script src=&quot;https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js&quot;         type=&quot;text/javascript&quot;&gt;&lt;/script&gt; &lt;link rel=&quot;stylesheet&quot; type= &quot;text/css&quot; href=&quot;{{url_for('static', filename = 'app.css')}}&quot;&gt; &lt;script type=&quot;text/javascript&quot; src =&quot;{{url_for('static', filename = 'app.js')}}&quot;&gt;&lt;/script&gt; &lt;/head&gt; </code></pre> <p>the browser consoles prints &quot;document loaded&quot; which I placed in app.js but doesn't get the data from server.py. I believe the issue is with the url_for statement but don't know how to go about it.</p>"	2020-08-13 03:19:20.03 UTC	63388143	"<p>You can't use jinja2 expressions in a js file which is loaded as a static asset. - v25</p> <p>You can add your Javascript in a <code>&lt;script&gt;</code> tag in the index.html file. Or you can hard code it.</p> <p>I usually do not use either approachs. Instead, I render all the files with a custom python script before running the main app. I use a .bat file and type all the commands needed. You sometimes use Sass or any other thing that requires rendering... So it's helpful to be organized and write such a script. Use this approach if your JavaScript data doesn't change dynamically.</p> <p>But if your script is dynamic, you can add a route that renders your file every time it is requested.</p> <pre><code>@app.route('/my_script.js') def script():     return render_template('my_script.js', name='mark') </code></pre> <p>And in your <code>/locations</code> route:</p> <pre><code>&lt;script src=&quot;{{url_for('script')}}&quot;&gt;&lt;/script&gt; </code></pre> <p>Jinja2 can parse any file regardless of it's type.</p>"			2020-08-13 04:28:01.467 UTC
63390683	javascript|python|discord|bots	Running a python script in a discord javascript coded bot	<p>How can I run a Python script inside a JavaScript Discord Bot code?</p>	2020-08-13 08:01:54.197 UTC	63391040	"<p>You cant just interpret python code in javascript. You could try to spawn a proccess and execute your python script and take the output. Here is a solution, how to do this: <a href=""https://stackoverflow.com/questions/34538825/node-js-call-external-exe-and-wait-for-output/34539036"">node.js call external exe and wait for output</a></p>"			2020-08-13 08:24:34.47 UTC
63396945	javascript|python|selenium	Replace send_keys() for an element found by xpath with javascript exec script python selenium	"<p>This is how I'm currently sending input :</p> <pre><code>          elemnt = self.browser.find_element_by_xpath(xpath=&quot;//somexpath&quot;)             elemnt.send_keys(tokenId) </code></pre> <p>Is there a way to do it with executing a javascript that will basically type an  input for a given xpath ? I need this because the website I'm testing has an odd behavior when using send_keys() to type something, when the text is done typing, a loading circle appears and  for some reason it goes to the next page after a search(which should be done by pressing continue)</p> <p>Manually, I managed to reproduce the issue with  typing a text, the loading circle appears, and if I press enter while the loading circle is still searching it moves to the next page (there is a continue button that does that when it's pressed)</p> <p>So my thinking here is that send_keys() might have some weird key press that causes the bug to reoccure, and i would like to replace it with some javascript if its possible that types an input for a specific XPath.</p>"	2020-08-13 14:04:46.04 UTC	63398262	"<p>Solved it like this :</p> <pre><code>                                    self.browser.execute_script(&quot;arguments[0].setAttribute('value', 'some value');&quot;, self.browser.find_element_by_xpath(&quot;//input[@placeholder='Introdu TOKEN']&quot;)) </code></pre>"			2020-08-13 15:22:49.377 UTC
63417081	javascript|python|html|eel	Javascript can`t see python function exposed with eel	"<p>I used @eel.expose the same way as in the documentation, but it doesnt work. I am trying to send information about weather from pyowm to javascript, but javascript doesnt recognize python function. Here is my python code:</p> <pre class=""lang-py prettyprint-override""><code>import eel import pyowm  owm = pyowm.OWM(&quot;78e8414197f287eb489f857bf10fa96a&quot;)  eel.init(&quot;web&quot;) eel.start(&quot;main.html&quot;, size=(700, 700))   @eel.expose def getWeather(place):     mgr = owm.weather_manager()     observation = mgr.weather_at_place(place)     w = observation.weather      temp = w.temperature('celsius')['temp']      return temp </code></pre> <p>And html code:</p> <pre class=""lang-html prettyprint-override""><code>&lt;!DOCTYPE html&gt; &lt;html&gt;     &lt;head&gt;         &lt;meta charset=&quot;UTF-8&quot;&gt;         &lt;title&gt;Weather&lt;/title&gt;         &lt;script type=&quot;text/javascript&quot; src=&quot;/eel.js&quot;&gt;&lt;/script&gt;         &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;main.css&quot;&gt;     &lt;/head&gt;     &lt;body&gt;         &lt;input type=&quot;text&quot; id=&quot;location&quot; placeholder=&quot;Enter city and country&quot; required=&quot;&quot; value=&quot;New York, USA&quot;&gt;         &lt;button id=&quot;getWeatherButton&quot;&gt;GET WEATHER&lt;/button&gt;         &lt;div id=&quot;result&quot;&gt;&lt;/div&gt;                  &lt;script type=&quot;text/javascript&quot;&gt;             document.getElementById(&quot;getWeatherButton&quot;).onclick = async function displayWeather() {                 let place = document.getElementById(&quot;location&quot;).value;                 let temp = await eel.getWeather(place)();                  document.getElementById(&quot;result&quot;).innerHTML = temp;             };         &lt;/script&gt;     &lt;/body&gt; &lt;/html&gt; </code></pre>"	2020-08-14 17:01:39.607 UTC	63437512	"<p>eel.start() has to be in the end of the code Here is right code:</p> <pre><code>import eel import pyowm  owm = pyowm.OWM(&quot;78e8414197f287eb489f857bf10fa96a&quot;)  eel.init(&quot;web&quot;)   @eel.expose def getWeather(place):     mgr = owm.weather_manager()     observation = mgr.weather_at_place(place)     w = observation.weather      temp = w.temperature('celsius')['temp']      return temp   eel.start(&quot;main.html&quot;, size=(700, 700)) </code></pre>"			2020-08-16 13:33:06.56 UTC
63422843	javascript|python|dom|javascript-engine	How do I register a Python DOM object with a javascript engine on initialization?	"<p>Context:</p> <p>I'm creating a python application called <a href=""https://github.com/AlexisGoodfellow/itbrowz"" rel=""nofollow noreferrer"">itbrowz</a>. The ultimate desired outcome of this application is to be a passable modern web browser that can be used directly in iTerm2. For that to happen, I need to integrate an embeddable JavaScript engine into my project.</p> <p>Legwork I've already done:</p> <p>The project is using a Python library called <a href=""https://github.com/kata198/AdvancedHTMLParser"" rel=""nofollow noreferrer"">AdvancedHTMLParser</a> which (basically) implements the DOM interface in Python. There is also already a local cache containing separate files for all the individual referenced/inline scripts on a given page.</p> <p>I've been exploring the use of python bindings to various JavaScript engines, such as <a href=""https://github.com/sony/v8eval"" rel=""nofollow noreferrer"">v8eval</a>. The reason this one doesn't work is that it does not expose a way to register the Python-side document object with the underlying v8 engine, so the JavaScript scripts which expect to manipulate a pre-existing document object will all fail. The same goes for the <a href=""https://github.com/davisp/python-spidermonkey"" rel=""nofollow noreferrer"">spidermonkey</a> engine and its associated Python language bindings - there is no way to pass the Python-side DOM to to JavaScript engine's evaluation context.</p> <p>Problem:</p> <p>The core issue I'm trying to resolve is the fact that the document object itself is constructed in Python, and so far as I can tell it's not possible to make that Python-side document object available to the JavaScript engine when the engine is initialized. This is the first major problem I need to solve. But even if it were possible to solve the problem of passing the Python-side document object to the JavaScript engine, I'd still need a way to reliably sync the Python-side document object with the newly manipulated state of JavaScript-side document object.</p> <p>What ideas do you have that could accomplish the goal of registering and syncing a document object over the Python/JavaScript language bridge?</p>"	2020-08-15 05:18:31.62 UTC	63433616	"<p>After another long day of research, I've come across something that will address my use case. It is called <a href=""https://github.com/PiotrDabkowski/Js2Py"" rel=""nofollow noreferrer"">Js2Py</a>. From the README under the &quot;Advanced Usage&quot; heading:</p> <pre><code>&quot;Moreover, you can use Python objects from your JavaScript code if you add them to the scope&quot; </code></pre> <p>This would allow me to patch in the document object I've created in Python into the JavaScript evaluation context. Additionally, it appears that <code>js2py</code> offers strong capabilities for transpiling JavaScript files to python files in their entirety through its function <code>translate_file()</code>. This could feasibly resolve the cross-language document object syncing issues entirely, since all of the executed code would be in the same language, which means they could share the same document object, and potentially even share the same event loop!</p> <p>The only downside appears to be the possibility of an intense amount of compute overhead from on-the-fly transpilation from JavaScript to Python. It also appears that the library is currently pre-1.0, so there's likely still some bugs hiding somewhere in the library itself. That being said, it seems like the best option to lean on for a passion project like <code>itbrowz</code>.</p>"			2020-08-16 05:56:56.48 UTC
63432535	javascript|python|html|selenium	Web Scraping of Javascript table (with grid and list views) using Python - Beautiful Soup	"<p>I'm trying to parse data from a json table from this website.</p> <p>url - <a href=""https://boxes.mysubscriptionaddiction.com/subscription_boxes_for/food"" rel=""nofollow noreferrer"">https://boxes.mysubscriptionaddiction.com/subscription_boxes_for/food</a>.</p> <p>I primarily need the name, ratings and descriptions of all the food subscription boxes listed. I'm facing a few challenges here. One is that there are 2 views to the table - grid and list view. How do we specify which table view we are referring to in our code? Second is that I am getting a</p> <pre><code>ValueError - Timeout value connect was Timeout(connect=&lt;object object at 0x000002767CECD5C0&gt;,  read=&lt;object object at 0x000002767CECD5C0&gt;, total=None), but it must be an int, float or None. </code></pre> <p>Not sure what this means.<br> My code:</p> <pre><code>from pandas.io.html import read_html from selenium import webdriver import json import requests import os import sys from bs4 import BeautifulSoup import requests   driver = webdriver.Firefox(executable_path='C:\Drivers\geckodriver.exe')  driver.get('https://boxes.mysubscriptionaddiction.com/subscription_boxes_for/food')   table = driver.find_element_by_xpath('/html/body/div[3]/div/span/div[2]/div/div[1]/div[3]/div[3]/table')  table_html = table.get_attribute('innerHTML')  bs = BeautifulSoup(table_html, 'html.parser')  rows = bs.select('tbody tr')  print(bs) </code></pre>"	2020-08-16 02:23:28.03 UTC	63436632	"<p>Here is how to get the data you are looking for:  (<code>data</code> is a dict that contains the information)</p> <pre><code>import requests from bs4 import BeautifulSoup import json  scrape_url = 'https://boxes.mysubscriptionaddiction.com/subscription_boxes_for/food'  r1 = requests.get(scrape_url) page = r1.content soup = BeautifulSoup(page, 'html.parser') scripts = soup.find_all('script')  data_str = scripts[11].contents[0].strip() data = json.loads(data_str,strict=False) print(data['itemListElement']) </code></pre>"			2020-08-16 12:00:41.187 UTC
63444954	selenium|web-scraping|beautifulsoup|scrapy|mechanize	How to fill JavaScript form using Python?	"<p>I want to use Python to fill <a href=""https://forms.office.com/Pages/ResponsePage.aspx?id=8Pm7rtoj40mYvzIXGrvJvCxQDveyljlCrKN2Teo3EHFUQVNaWDlYRkhYR09JRTZWRFpKTTNIQU9HUC4u"" rel=""nofollow noreferrer"">this</a> form.</p> <p>I tried using Mechanize but this is a Microsoft Form which uses JavaScript and has no form tag and no GET/POST URL. Maybe BeautifulSoup/Selenium can do this, but I do not have any experience in scraping JS forms. Can anyone help me out and suggest how to go about this?</p> <p>Here's what I've tried, Mechanize is unable to recognize any form on the page:</p> <pre><code>import mechanize  def main():     br = mechanize.Browser()     br.set_handle_robots(False)     br.set_handle_refresh(False)     br.addheaders = [('User-agent', 'Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.0.1) Gecko/2008071615 Fedora/3.0.1-1.fc9 Firefox/3.0.1')]     response  = br.open(&quot;https://forms.office.com/Pages/ResponsePage.aspx?id=8Pm7rtoj40mYvzIXGrvJvCxQDveyljlCrKN2Teo3EHFUQVNaWDlYRkhYR09JRTZWRFpKTTNIQU9HUC4u&quot;)     for form in br.forms():         print(&quot;Form name:&quot;, form.name) #prints nothing         print(form) #prints nothing  if __name__ == '__main__':     main() </code></pre>"	2020-08-17 05:20:09.783 UTC	63449454	"<p>Selenium works fine.</p> <p>You'll need to <a href=""https://selenium-python.readthedocs.io/installation.html"" rel=""nofollow noreferrer"">install the components</a></p> <ul> <li>install selenium <code>pip install selenium</code></li> <li>You need to ensure you download the correct chromedriver (or other driver)  for your browser and OS versions and <strong>add it to path</strong></li> </ul> <p>Then this runs:</p> <pre class=""lang-py prettyprint-override""><code>from selenium import webdriver  driver = webdriver.Chrome() url = &quot;https://forms.office.com/Pages/ResponsePage.aspx?id=8Pm7rtoj40mYvzIXGrvJvCxQDveyljlCrKN2Teo3EHFUQVNaWDlYRkhYR09JRTZWRFpKTTNIQU9HUC4u&quot; driver.get(url)   name = driver.find_element_by_xpath(&quot;//div[@class='question-title-box'][.//span[text()='NAME']]/following-sibling::*//input&quot;) name.send_keys(&quot;hello, World&quot;)  setionSelection = &quot;F&quot; section = driver.find_element_by_xpath(&quot;//div[@class='question-title-box'][.//span[text()='Section']]/following-sibling::*//input[@value='&quot; + setionSelection + &quot;']&quot;) section.click()  date = driver.find_element_by_xpath(&quot;//input[contains(@placeholder, 'Please input date')]&quot;) date.send_keys(&quot;01/12/2020&quot;)   submit = driver.find_element_by_xpath(&quot;//div[text()='Submit']&quot;) submit.click() </code></pre> <p>The xapths are a little long but they're based on the question text so potentially stable</p> <p><a href=""https://i.stack.imgur.com/cmUAm.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/cmUAm.png"" alt=""Working selenium"" /></a></p> <hr /> <p>For an alternative approach - When you say there is no POST url, did you check devtools? - That exposes the destination of the form:</p> <pre><code>Request URL: https://forms.office.com/formapi/api/aebbf9f0-23da-49e3-98bf-32171abbc9bc/users/f70e502c-96b2-4239-aca3-764dea371071/forms('8Pm7rtoj40mYvzIXGrvJvCxQDveyljlCrKN2Teo3EHFUQVNaWDlYRkhYR09JRTZWRFpKTTNIQU9HUC4u')/responses Request Method: POST </code></pre> <p>it also exposes the payload... This is the first submit:</p> <pre><code>{startDate: &quot;2020-08-17T10:40:18.504Z&quot;, submitDate: &quot;2020-08-17T10:40:18.507Z&quot;,…} answers: &quot;[{&quot;questionId&quot;:&quot;r8f09d63e6f6f42feb2f8f4f8ed3f9389&quot;,&quot;answer1&quot;:&quot;Hello, World&quot;},{&quot;questionId&quot;:&quot;r28fe12073dfa47399f8ce95ae679dccf&quot;,&quot;answer1&quot;:&quot;G&quot;},{&quot;questionId&quot;:&quot;r8f9e9fedcc2e410c80bfa1e0e3ef9750&quot;,&quot;answer1&quot;:&quot;2020-08-28&quot;}]&quot; startDate: &quot;2020-08-17T10:40:18.504Z&quot; submitDate: &quot;2020-08-17T10:40:18.507Z&quot; </code></pre> <p>Those post URL UUID/GUIDs questions IDs seem to be satic for this form. Every time i run form they're not chaning. This is the second run:</p> <pre><code>{startDate: &quot;2020-08-17T10:43:48.544Z&quot;, submitDate: &quot;2020-08-17T10:43:48.546Z&quot;,…} answers: &quot;[{&quot;questionId&quot;:&quot;r8f09d63e6f6f42feb2f8f4f8ed3f9389&quot;,&quot;answer1&quot;:&quot;test me&quot;},{&quot;questionId&quot;:&quot;r28fe12073dfa47399f8ce95ae679dccf&quot;,&quot;answer1&quot;:&quot;G&quot;},{&quot;questionId&quot;:&quot;r8f9e9fedcc2e410c80bfa1e0e3ef9750&quot;,&quot;answer1&quot;:&quot;2020-08-12&quot;}]&quot; startDate: &quot;2020-08-17T10:43:48.544Z&quot; submitDate: &quot;2020-08-17T10:43:48.546Z&quot; </code></pre> <p>Once you capture this once you'll probably be able to do it through the API without a GUI.</p> <p>... Just to make sure, i tried it and i get success...</p> <p><a href=""https://i.stack.imgur.com/bZ9lX.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/bZ9lX.png"" alt=""enter image description here"" /></a></p> <pre><code>import requests  url = &quot;https://forms.office.com/formapi/api/aebbf9f0-23da-49e3-98bf-32171abbc9bc/users/f70e502c-96b2-4239-aca3-764dea371071/forms('8Pm7rtoj40mYvzIXGrvJvCxQDveyljlCrKN2Teo3EHFUQVNaWDlYRkhYR09JRTZWRFpKTTNIQU9HUC4u')/responses&quot; myobj = {&quot;startDate&quot;:&quot;2020-08-17T10:48:40.118Z&quot;,&quot;submitDate&quot;:&quot;2020-08-17T10:48:40.121Z&quot;,&quot;answers&quot;:&quot;[{\&quot;questionId\&quot;:\&quot;r8f09d63e6f6f42feb2f8f4f8ed3f9389\&quot;,\&quot;answer1\&quot;:\&quot;Hello again, World\&quot;},{\&quot;questionId\&quot;:\&quot;r28fe12073dfa47399f8ce95ae679dccf\&quot;,\&quot;answer1\&quot;:\&quot;F\&quot;},{\&quot;questionId\&quot;:\&quot;r8f9e9fedcc2e410c80bfa1e0e3ef9750\&quot;,\&quot;answer1\&quot;:\&quot;2020-08-26\&quot;}]&quot;}  x = requests.post(url, data = myobj) </code></pre> <p>My answers are just hard coded into the data object but it seems to work.</p> <p>Remember to pip <code>install requests</code> if you don't already have it</p>"			2020-08-17 10:55:31.687 UTC
63466353	javascript|python|stored-procedures|snowflake-cloud-data-platform|snowflake-schema	Can Snowflake Procedure can be written in python instead of javascript?	<p>Can Snowflake Procedure can be written in python instead of javascript?</p> <p>I went through Snowflake document it says javascript but was looking for options other then javascript.</p>	2020-08-18 10:05:28.877 UTC	63466541	"<p>Snowflake recently introduced External functions which gives user ability to write UDFS in python. More details on following link</p> <p><a href=""https://docs.snowflake.com/en/sql-reference/external-functions-introduction.html"" rel=""nofollow noreferrer"">https://docs.snowflake.com/en/sql-reference/external-functions-introduction.html</a></p> <p><a href=""https://community.snowflake.com/s/article/Snowflake-External-Function"" rel=""nofollow noreferrer"">https://community.snowflake.com/s/article/Snowflake-External-Function</a></p>"			2020-08-18 10:16:51.2 UTC
63466353	javascript|python|stored-procedures|snowflake-cloud-data-platform|snowflake-schema	Can Snowflake Procedure can be written in python instead of javascript?	<p>Can Snowflake Procedure can be written in python instead of javascript?</p> <p>I went through Snowflake document it says javascript but was looking for options other then javascript.</p>	2020-08-18 10:05:28.877 UTC	73724327	"<p>As of Sept 2022, Snowflake has added Python 3.8 support to Functions and Procedures in Snowflake now with packages like Pandas preinstalled.</p> <p>To see what python packages you can use inside Snowflake:</p> <pre class=""lang-sql prettyprint-override""><code>select * from information_schema.packages where language = 'python'; </code></pre> <p>To have your Python code directly in snowflake running, you can create a Python UDF:</p> <pre class=""lang-sql prettyprint-override""><code>-- Creates the function that adds 1 to 2 integers you pass it. create or replace function add_one_to_inputs(x number(10, 0), y number(10, 0)) returns number(10, 0) language python runtime_version = 3.8 packages = ('pandas') handler = 'add_one_to_inputs' as $$ import pandas  def add_one_to_inputs(df):   return df[0] + df[1] + 1  add_one_to_inputs._sf_vectorized_input = pandas.DataFrame $$;  -- After function creation to run call it select add_one_to_inputs(2,4); </code></pre> <p>Not only that, you can also execute python code from a stage. You can execute the CREATE PROCEDURE command, pointing to the Python file on the stage. For example:</p> <pre class=""lang-sql prettyprint-override""><code>CREATE OR REPLACE PROCEDURE MYPROC(from_table STRING, to_table STRING, count INT)   RETURNS INT   LANGUAGE PYTHON   RUNTIME_VERSION = '3.8'   PACKAGES = ('snowflake-snowpark-python')   IMPORTS = ('@mystage/my_py_file.py')   HANDLER = 'my_py_file.run'; </code></pre> <p>You can read more about Python UDFs here: <a href=""https://docs.snowflake.com/en/developer-guide/udf/python/udf-python.html#python-udfs"" rel=""nofollow noreferrer"">https://docs.snowflake.com/en/developer-guide/udf/python/udf-python.html#python-udfs</a></p> <p>Writing Stored Procedures in Python: <a href=""https://docs.snowflake.com/en/sql-reference/stored-procedures-python.html"" rel=""nofollow noreferrer"">https://docs.snowflake.com/en/sql-reference/stored-procedures-python.html</a></p>"			2022-09-15 00:09:48.223 UTC
63479116	javascript|python|ajax|web|flask	"render_template does nothing after receiving ajax content (flask, python, javascript)"	"<p>I am passing data with ajax to my python function when a condition is met:</p> <pre><code>        if (lesson.length === 0) {             $.ajax(                 {                     type:'POST',                     contentType:'application/json',                     dataType:'json',                     url:'http://127.0.0.1:5000/result?value=' + errors ,                     success:function(response){ document.write(response); }                   }             );         } </code></pre> <p>I know that the information is correctly received, since I can see it in the terminal through print:</p> <pre><code>127.0.0.1 - - [19/Aug/2020 11:59:46] &quot;GET /static/flexjava.js HTTP/1.1&quot; 200 - 0 127.0.0.1 - - [19/Aug/2020 11:59:48] &quot;POST /result?value=0 HTTP/1.1&quot; 200 - </code></pre> <p>But python does nothing after the print() function. Render or redirect both don't work, the browser stays just as it is even though the information was passed:</p> <pre><code>@app.route(&quot;/result&quot;, methods=[&quot;GET&quot;, &quot;POST&quot;]) def result():     content = request.args.get('value')     if &quot;username&quot; not in session or session[&quot;username&quot;] == &quot;guest&quot;:         return redirect(&quot;/login&quot;)     if request.method == &quot;GET&quot;:         return redirect(&quot;/&quot;)     else:         print(content)         return render_template(&quot;finished.html&quot;) </code></pre>"	2020-08-19 02:18:42.11 UTC	63480421	"<p>You are not using ajax properly.  You want to receive back a <code>json</code> response, not a complete web page.</p> <p>Try:</p> <pre><code>$.ajax(         {             type:'POST',             contentType:'application/json',             dataType:'json',             url:'http://127.0.0.1:5000/result?value=' + errors ,             success:function(response){                  console.log(response);                 document.write(response); # not a good idea                 # I would use something like:                 # document.getElementById(&quot;myDiv&quot;).innerText = response.content;             }           }     );      </code></pre> <p>Then:</p> <pre><code>from flask import jsonify  @app.route(&quot;/result&quot;, methods=[&quot;GET&quot;, &quot;POST&quot;]) def result():     content = request.args.get('value')     ...     else:         print(content)         return jsonify(             {                 &quot;content&quot;: content             }         ) </code></pre> <p>This functionality really does nothing, as you already have <code>errors</code> in the calling template.  If you are trying to go to <code>finished</code>, you would do that in the ajax <code>success</code> callback:</p> <pre><code>success:function(response){      console.log(response);     window.location.replace(window.location.href + &quot;finished&quot;); } </code></pre>"			2020-08-19 05:15:44.347 UTC
63493107	javascript|python|datetime	"UTC times in Python and Javascript are off by 5 hours, how to fix?"	"<p>I have:</p> <pre><code># Python import datetime, time py_utc_now = int(time.mktime(datetime.datetime.utcnow().timetuple()))    # 1597879534  # Javascript var js_utc_now = Math.round(new Date().getTime() / 1000);               # 1597861534   py_utc_now - js_utc_now &gt;&gt;&gt; 18000    # seconds  18000 / 60 &gt;&gt;&gt; 300.0    # minutes </code></pre> <p>I was always taught that UTC time was always based on GMT in London, no matter what part of the world you are in. And I'm currently in the Chicago area (-5 GMT), so this makes no sense either way.</p> <p>Why are my values 5 hours apart? And how can I get the exact time for each, regardless of where I am in the world?</p>"	2020-08-19 18:39:31.893 UTC	63493251	<p>Both <code>datetime</code> and <code>new Date()</code> derive their values from the settings of the machine they are running on. It does not matter where in the world you are.</p> <p>In Python:</p> <pre><code>py_utc_now = datetime.now(timezone.utc) </code></pre> <p>In JS I suggest you use a third-party library called <code>dayjs</code>. It's super small but it gives you a lot of flexibility when working with dates and time. Or you can use the <code>getUTCDate()</code> method.</p> <pre><code>var currTime = new Date(); var js_utc_now = currTime.getUTCDate(); </code></pre>			2020-08-19 18:50:02.403 UTC
63493107	javascript|python|datetime	"UTC times in Python and Javascript are off by 5 hours, how to fix?"	"<p>I have:</p> <pre><code># Python import datetime, time py_utc_now = int(time.mktime(datetime.datetime.utcnow().timetuple()))    # 1597879534  # Javascript var js_utc_now = Math.round(new Date().getTime() / 1000);               # 1597861534   py_utc_now - js_utc_now &gt;&gt;&gt; 18000    # seconds  18000 / 60 &gt;&gt;&gt; 300.0    # minutes </code></pre> <p>I was always taught that UTC time was always based on GMT in London, no matter what part of the world you are in. And I'm currently in the Chicago area (-5 GMT), so this makes no sense either way.</p> <p>Why are my values 5 hours apart? And how can I get the exact time for each, regardless of where I am in the world?</p>"	2020-08-19 18:39:31.893 UTC	63493531	"<p>Your Python code is taking a time that is <em>already</em> UTC, and then passing it to <code>mktime</code>, which <a href=""https://docs.python.org/3/library/time.html#time.mktime"" rel=""nofollow noreferrer"">expects local time values</a>. This effectively doubles the timezone offset, resulting in the error you're seeing.</p> <p>To get the correct UTC timestamp in Python, you can use a much simpler expression:</p> <pre><code>int(time.time()) </code></pre>"			2020-08-19 19:12:04.55 UTC
63493107	javascript|python|datetime	"UTC times in Python and Javascript are off by 5 hours, how to fix?"	"<p>I have:</p> <pre><code># Python import datetime, time py_utc_now = int(time.mktime(datetime.datetime.utcnow().timetuple()))    # 1597879534  # Javascript var js_utc_now = Math.round(new Date().getTime() / 1000);               # 1597861534   py_utc_now - js_utc_now &gt;&gt;&gt; 18000    # seconds  18000 / 60 &gt;&gt;&gt; 300.0    # minutes </code></pre> <p>I was always taught that UTC time was always based on GMT in London, no matter what part of the world you are in. And I'm currently in the Chicago area (-5 GMT), so this makes no sense either way.</p> <p>Why are my values 5 hours apart? And how can I get the exact time for each, regardless of where I am in the world?</p>"	2020-08-19 18:39:31.893 UTC	63493152	<p>You need to use Date.UTC() to retrieve the UTC date in JS.</p>			2020-08-19 18:42:54.69 UTC
63499867	javascript|python|selenium	query selector javascript not excuted in python selenium	"<pre><code>driver.excute_script('document.querySelector(&quot;button[type=\&quot;submit\&quot;]&quot;).click();') </code></pre> <p>And also try this:</p> <pre><code>driver.excute_script('document.querySelector(&quot;button[type=\&quot;submit\&quot;]&quot;).click()'); </code></pre> <p>It shows the error:</p> <pre><code>Warning (from warnings module):   File &quot;C:\Users\gggg\Desktop\JJ.py&quot;, line 6     driver = webdriver.Chrome('C:\\Users\\gggg\\Downloads\\chromedriver_win32 (1)\\chromedriver.exe', chrome_options=options) DeprecationWarning: use options instead of chrome_options Traceback (most recent call last):   File &quot;C:\Users\gggg\Desktop\JJ.py&quot;, line 14, in &lt;module&gt;     driver.execute_script(&quot;document.querySelector('button[type=\'submit\']').click();&quot;);   File &quot;C:\Users\gggg\AppData\Local\Programs\Python\Python38-32\lib\site-packages\selenium\webdriver\remote\webdriver.py&quot;, line 634, in execute_script     return self.execute(command, {   File &quot;C:\Users\gggg\AppData\Local\Programs\Python\Python38-32\lib\site-packages\selenium\webdriver\remote\webdriver.py&quot;, line 321, in execute     self.error_handler.check_response(response)   File &quot;C:\Users\gggg\AppData\Local\Programs\Python\Python38-32\lib\site-packages\selenium\webdriver\remote\errorhandler.py&quot;, line 242, in check_response     raise exception_class(message, screen, stacktrace) selenium.common.exceptions.JavascriptException: Message: javascript error: missing ) after argument list   (Session info: headless chrome=84.0.4147.135) </code></pre>"	2020-08-20 07:01:27.267 UTC	63577101	"<p>When you execute this:</p> <pre class=""lang-py prettyprint-override""><code>driver.execute_script('document.querySelector(&quot;button[type=\&quot;submit\&quot;]&quot;).click();') </code></pre> <p>On JS side this will look like</p> <pre class=""lang-js prettyprint-override""><code>document.querySelector(&quot;button[type=&quot;submit&quot;]&quot;).click(); </code></pre> <p>and querySelector attempts to evaluate <code>&quot;button[type=&quot;</code> and find the closing <code>)</code> but finds <code>submit</code> instead. Hence the exception: <code>javascript error: missing ) after argument list </code>.</p> <p>To solve the problem use <code>'</code> and <code>&quot;</code> both in your js expression and enclose your python string in triple quotes:</p> <pre class=""lang-py prettyprint-override""><code>driver.execute_script('''document.querySelector(&quot;button[type='submit']&quot;).click();''') </code></pre> <p>Or you could use</p> <pre class=""lang-py prettyprint-override""><code>driver.find_element_by_css_selector(&quot;button[type='submit']&quot;).click() </code></pre> <p>and not to worry about triple quotes.</p> <p>Or if you want to use the js click() instead of selenium's click for some reason:</p> <pre class=""lang-py prettyprint-override""><code>elem = driver.find_element_by_css_selector(&quot;button[type='submit']&quot;) driver.execute_script(&quot;arguments[0].click()&quot;, elem) </code></pre>"			2020-08-25 10:39:27.617 UTC
63508360	javascript|json|python-3.x	Passing JSON data to javascript from python	"<p>I'm trying to pass some data retrieved from a database with python to javascript.</p> <p>The code below works.   I can access the data in javascript but I can only pass one row at a time.</p> <pre><code>#!le/usr/bin/env python3 import sys import re import datetime import sqlite3 import json import time SQLDB = '/home/daylene/db/PiLN.sqlite3' db = sqlite3.connect(SQLDB)  db.row_factory = sqlite3.Row cursor = db.cursor() sql = '''SELECT segment, dt, set_temp, temp, pid_output                FROM firing WHERE run_id=? ORDER BY dt;           ''' p = ((54),) cursor.execute(sql, p) columns = [column[0] for column in cursor.description] results = [] for row in cursor.fetchall():     results.append(dict(zip(columns,row))) print(json.dumps(results[-1])) </code></pre> <p>And the working javascript</p> <pre><code>  &lt;script&gt;         $(document).ready(function () {             showGraph();         });           function showGraph()         {             $.ajax({               mimeType: 'application/json; charset=iso-8859-1',               url:  'data.cgi',               //data: JSON.stringify( query ),               contentType: &quot;application/json&quot;,               dataType: 'json',               method: 'POST',               async: false,               success:  function (response)                 {                     //document.write(response);                       var time = response[&quot;dt&quot;];                     var temp = response[&quot;temp&quot;];                     //document.write(response);                     //for (var i in response) {                      //   time.push(response.time);                       //  temp.push(response.temp);                     //}                      var chartdata = {                         labels: time,                         datasets: [                             {                                 label: 'time',                                 backgroundColor: '#49e2ff',                                 borderColor: '#46d5f1',                                 hoverBackgroundColor: '#CCCCCC',                                 hoverBorderColor: '#666666',                                 data: temp                             }                         ]                     };                      var graphTarget = $(&quot;#graphCanvas&quot;);                      var barGraph = new Chart(graphTarget, {                         type: 'bar',                         data: chartdata                     });                 }                                   });     }         &lt;/script&gt; </code></pre> <p>uncommentating <code>document.write(response);</code> and changing to <code>print(json.dumps(results))</code>  does not work.   Nothing is returned with <code>document.write(response);</code></p> <p>Adding this does not work</p> <pre><code>for row in results:     results1.append(json.dumps(row)) print(results1) </code></pre> <p>and then adding this also does not work</p> <pre><code>results1 = [] for row in results:     results1.append(json.dumps(row)) print(json.dump(results1) </code></pre> <p>The output of <code>print(results)</code> (shortened)</p> <pre><code>[{&quot;segment&quot;: 4, &quot;dt&quot;: &quot;2020-07-09 19:58:55&quot;, &quot;set_temp&quot;: 1145, &quot;temp&quot;: 1145.02, &quot;pid_output&quot;: 83.49}, {&quot;segment&quot;: 4, &quot;dt&quot;: &quot;2020-07-09 19:59:24&quot;, &quot;set_temp&quot;: 1145, &quot;temp&quot;: 1145.15, &quot;pid_output&quot;: 80.76}, {&quot;segment&quot;: 4, &quot;dt&quot;: &quot;2020-07-09 19:59:54&quot;, &quot;set_temp&quot;: 1145, &quot;temp&quot;: 1145.16, &quot;pid_output&quot;: 80.6}, {&quot;segment&quot;: 4, &quot;dt&quot;: &quot;2020-07-09 20:00:24&quot;, &quot;set_temp&quot;: 1145, &quot;temp&quot;: 1145.15, &quot;pid_output&quot;: 80.73}, {&quot;segment&quot;: 4, &quot;dt&quot;: &quot;2020-07-09 20:00:55&quot;, &quot;set_temp&quot;: 1145, &quot;temp&quot;: 1145, &quot;pid_output&quot;: 83.73}, {&quot;segment&quot;: 4, &quot;dt&quot;: &quot;2020-07-09 20:01:24&quot;, &quot;set_temp&quot;: 1145, &quot;temp&quot;: 1145.08, &quot;pid_output&quot;: 82.1}, {&quot;segment&quot;: 4, &quot;dt&quot;: &quot;2020-07-09 20:01:54&quot;, &quot;set_temp&quot;: 1145, &quot;temp&quot;: 1145.13, &quot;pid_output&quot;: 80.99}] </code></pre> <p>Any guidance is appreciated.</p>"	2020-08-20 15:26:38.257 UTC	63509448	"<p>Bleh, I figured it out.   It wasn't the code but rather the size of the data I was trying to pass.   Trying a smaller array worked fine.</p> <p>I finally thought to check the lighttpd logs and I'm getting this.</p> <p><code>(mod_cgi.c.588) response headers too large for /app/data.cgi</code></p>"			2020-08-20 16:32:44.197 UTC
63508360	javascript|json|python-3.x	Passing JSON data to javascript from python	"<p>I'm trying to pass some data retrieved from a database with python to javascript.</p> <p>The code below works.   I can access the data in javascript but I can only pass one row at a time.</p> <pre><code>#!le/usr/bin/env python3 import sys import re import datetime import sqlite3 import json import time SQLDB = '/home/daylene/db/PiLN.sqlite3' db = sqlite3.connect(SQLDB)  db.row_factory = sqlite3.Row cursor = db.cursor() sql = '''SELECT segment, dt, set_temp, temp, pid_output                FROM firing WHERE run_id=? ORDER BY dt;           ''' p = ((54),) cursor.execute(sql, p) columns = [column[0] for column in cursor.description] results = [] for row in cursor.fetchall():     results.append(dict(zip(columns,row))) print(json.dumps(results[-1])) </code></pre> <p>And the working javascript</p> <pre><code>  &lt;script&gt;         $(document).ready(function () {             showGraph();         });           function showGraph()         {             $.ajax({               mimeType: 'application/json; charset=iso-8859-1',               url:  'data.cgi',               //data: JSON.stringify( query ),               contentType: &quot;application/json&quot;,               dataType: 'json',               method: 'POST',               async: false,               success:  function (response)                 {                     //document.write(response);                       var time = response[&quot;dt&quot;];                     var temp = response[&quot;temp&quot;];                     //document.write(response);                     //for (var i in response) {                      //   time.push(response.time);                       //  temp.push(response.temp);                     //}                      var chartdata = {                         labels: time,                         datasets: [                             {                                 label: 'time',                                 backgroundColor: '#49e2ff',                                 borderColor: '#46d5f1',                                 hoverBackgroundColor: '#CCCCCC',                                 hoverBorderColor: '#666666',                                 data: temp                             }                         ]                     };                      var graphTarget = $(&quot;#graphCanvas&quot;);                      var barGraph = new Chart(graphTarget, {                         type: 'bar',                         data: chartdata                     });                 }                                   });     }         &lt;/script&gt; </code></pre> <p>uncommentating <code>document.write(response);</code> and changing to <code>print(json.dumps(results))</code>  does not work.   Nothing is returned with <code>document.write(response);</code></p> <p>Adding this does not work</p> <pre><code>for row in results:     results1.append(json.dumps(row)) print(results1) </code></pre> <p>and then adding this also does not work</p> <pre><code>results1 = [] for row in results:     results1.append(json.dumps(row)) print(json.dump(results1) </code></pre> <p>The output of <code>print(results)</code> (shortened)</p> <pre><code>[{&quot;segment&quot;: 4, &quot;dt&quot;: &quot;2020-07-09 19:58:55&quot;, &quot;set_temp&quot;: 1145, &quot;temp&quot;: 1145.02, &quot;pid_output&quot;: 83.49}, {&quot;segment&quot;: 4, &quot;dt&quot;: &quot;2020-07-09 19:59:24&quot;, &quot;set_temp&quot;: 1145, &quot;temp&quot;: 1145.15, &quot;pid_output&quot;: 80.76}, {&quot;segment&quot;: 4, &quot;dt&quot;: &quot;2020-07-09 19:59:54&quot;, &quot;set_temp&quot;: 1145, &quot;temp&quot;: 1145.16, &quot;pid_output&quot;: 80.6}, {&quot;segment&quot;: 4, &quot;dt&quot;: &quot;2020-07-09 20:00:24&quot;, &quot;set_temp&quot;: 1145, &quot;temp&quot;: 1145.15, &quot;pid_output&quot;: 80.73}, {&quot;segment&quot;: 4, &quot;dt&quot;: &quot;2020-07-09 20:00:55&quot;, &quot;set_temp&quot;: 1145, &quot;temp&quot;: 1145, &quot;pid_output&quot;: 83.73}, {&quot;segment&quot;: 4, &quot;dt&quot;: &quot;2020-07-09 20:01:24&quot;, &quot;set_temp&quot;: 1145, &quot;temp&quot;: 1145.08, &quot;pid_output&quot;: 82.1}, {&quot;segment&quot;: 4, &quot;dt&quot;: &quot;2020-07-09 20:01:54&quot;, &quot;set_temp&quot;: 1145, &quot;temp&quot;: 1145.13, &quot;pid_output&quot;: 80.99}] </code></pre> <p>Any guidance is appreciated.</p>"	2020-08-20 15:26:38.257 UTC	63508596	"<p>The easiest way to serve data to your JS frontend from Python is by making a server that serves HTTP requests.</p> <p>Using simple flask for example:</p> <pre><code>from flask import Flask, jsonify  app = Flask(__name__)  @app.route(&quot;/my-data&quot;) def get_data():      my_data = [{&quot;segment&quot;: 4, &quot;dt&quot;: &quot;2020-07-09 19:58:55&quot;}, {}]      return jsonify(my_data)  if __name__ == &quot;__main__&quot;:     app.run(port=8080, host=&quot;0.0.0.0&quot;) </code></pre> <p>And then you can request the data from <code>http://localhost:8080/my-data</code> in your Javascript.</p>"			2020-08-20 15:39:01.627 UTC
63509853	javascript	What order do JavaScripts need to be written in Python?	"<p><strong>Update</strong></p> <p>Thank you Chris and Taplar for providing the following links -</p> <p><a href=""http://www.getbootstrap.com/docs/4.5/getting-started/introduction"" rel=""nofollow noreferrer"">www.getbootstrap.com/docs/4.5/getting-started/introduction</a><br /> <a href=""https://stackoverflow.com/questions/8996852/load-and-execute-order-of-scripts"">load and execute order of scripts</a></p> <p>I did not look at the documentation in the first place because I did not have enough grasp of the issue, to even know what part of the documentation to search in.</p> <p><strong>Original Question</strong></p> <p>I had many issues when adding my date widget to my customer user profile model, you can see more of my code relating to the issue <a href=""https://stackoverflow.com/questions/63347615/getting-date-widget-to-display-american-dates-for-american-users/63348193?noredirect=1#comment112026150_63348193"">here</a>. One issue was related to the order of my Java Scripts.</p> <pre><code>&lt;script src=&quot;https://code.jquery.com/jquery-3.3.1.slim.min.js&quot; integrity=&quot;sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo&quot; crossorigin=&quot;anonymous&quot;&gt;&lt;/script&gt;    &lt;script src=&quot;https://cdnjs.cloudflare.com/ajax/libs/tempusdominus-bootstrap-4/5.1.2/js/tempusdominus-bootstrap-4.min.js&quot; integrity=&quot;sha256-z0oKYg6xiLq3yJGsp/LsY9XykbweQlHl42jHv2XTBz4=&quot; crossorigin=&quot;anonymous&quot;&gt;&lt;/script&gt; </code></pre> <p>If I put my scripts the other way round, the date widget would not work.</p> <p>It never dawned on me that the order the scripts were in would have an impact on whether the code worked or not.</p> <p>Would an experienced Python programmer be able to tell, just by looking at the two scripts, what order they need to be in?</p> <p>To prevent future problems, is there anything I can check, to work out what orders script need to be written in?</p>"	2020-08-20 16:57:39.47 UTC	63509889	"<p>The libraries must be included in that order, as the bootstrap file is a plugin for the base library of jQuery.  Without the base library already included, the addon has nothing that it can add-on to.</p>"			2020-08-20 17:00:08.703 UTC
63510415	javascript|python|selenium|selenium-webdriver	Python Selenium javascript error: shape=rectangle is not supported	"<p>I'm using python selenium to automate the download of financial reports. To achieve this I have to insert my password using this virtual keyboard:</p> <p><a href=""https://i.stack.imgur.com/rgHBk.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/rgHBk.png"" alt=""enter image description here"" /></a></p> <p>I'm trying to click every letter of my password through xpath:</p> <pre><code>object = driver.find_element_by_xpath('//*[@id=&quot;alphaKeyboard&quot;]/area[13]') object.click() </code></pre> <p>The XPath to each letter is quite similar, only changes the number inside <code>*area[]*</code></p> <p>But I'm getting the following error:</p> <pre><code>selenium.common.exceptions.JavascriptException: Message: javascript error: shape=rectangle is not supported </code></pre> <p>I suppose this problem is related to the shape='rectangle' element that contains the virtual keyboard, the complete html element for each letter looks like this, for example for the letther 'F':</p> <pre><code>&lt;area shape=&quot;rectangle&quot; coords=&quot; 72, 22, 93, 44&quot; onclick=&quot;writeAlpha('F')&quot; onmouseover=&quot;setHandCursor(document.alphaKeyboard)&quot; onmouseout=&quot;setDefaultCursor(document.alphaKeyboard)&quot;&gt; </code></pre> <p>Any suggestions with that?</p> <p>I let you the URL if you want to try:</p> <p><a href=""https://sucursalempresas.transaccionesbancolombia.com/SVE/control/BoleTransactional.bancolombia"" rel=""nofollow noreferrer"">https://sucursalempresas.transaccionesbancolombia.com/SVE/control/BoleTransactional.bancolombia</a></p>"	2020-08-20 17:35:04.03 UTC	63510969	"<p>There's a big shortcut for you on this one.</p> <p>In your element, you have:</p> <pre><code>onclick=&quot;writeAlpha('F')&quot; </code></pre> <p>On click that runs the javascript function <code>writeAlpha('F')</code>. You can run that function directly and not have to worry about the keyboard or xpaths at all.</p> <p>Running it from the devtools console looks like this:</p> <p><a href=""https://i.stack.imgur.com/HXwL8.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/HXwL8.png"" alt=""Devtool Keypress"" /></a></p> <p>In python you run javascript as such:</p> <pre><code>driver.execute_script(&quot;writeAlpha('F')&quot;) </code></pre> <p>You'll just need to  update the letter to send.</p> <hr /> <p>[Update] - Taking it a little further...</p> <p>You can create your details as string, split it and send it with a loop like this:</p> <pre><code>driver = webdriver.Chrome() driver.get(&quot;https://sucursalempresas.transaccionesbancolombia.com/SVE/control/BoleTransactional.bancolombia&quot;)  myKeys = &quot;HELLOWORLD&quot; myKeys = myKeys.split()  for key in myKeys:     driver.execute_script(&quot;writeAlpha('&quot;+key+&quot;')&quot;) </code></pre> <p>That outputs this:</p> <p><a href=""https://i.stack.imgur.com/Pwxo8.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/Pwxo8.png"" alt=""final keys to virtual keyobard"" /></a></p>"			2020-08-20 18:11:47.997 UTC
63536827	javascript|python|html|selenium|csv	Transform a HTML in CSV Using Python and Javascript	"<p>I have a doubt, I'm Working in a program that need do take data from website, but that site doesn't have any API.</p> <p>So I'm thinking to combine JavaScript and Python.</p> <p>I'm using JavaScript to transform HTML in this data:</p> <pre><code>&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;&lt;head&gt;&lt;/head&gt;&lt;body&gt;BLUE - Amil Ltda14/07/2020;;102636;Name censured;213113;10101039;1;Única;20/09/2020;102636;HCRIANÇASJ;83,00; &lt;br&gt;BLUE18 - Amil Ltda21/07/2020;;102636;Name Censured Again;213029;10101039;1;Única;20/09/2020;102636;HCRI;83,00; </code></pre> <p>But python interprets like one string and I need to convert in <code>csv</code> or <code>json</code> like format.</p> <p>I'm trying to use <code>.replace (&lt;br&gt;,//n)</code> but it didn't work.</p> <p>Plus, I need to delete the following section:</p> <pre><code>&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;&lt;head&gt;&lt;/head&gt;&lt;body&gt;BLUE - Amil Ltda14/07/2020 </code></pre>"	2020-08-22 13:40:35.84 UTC	63536992	"<pre><code>const str = `&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;&lt;head&gt;&lt;/head&gt;&lt;body&gt;BLUE - Amil Ltda14/07/2020;;102636;Name censured;213113;10101039;1;Única;20/09/2020;102636;HCRIANÇASJ;83,00; &lt;br&gt;BLUE18 - Amil Ltda21/07/2020;;102636;Name Censured Again;213029;10101039;1;Única;20/09/2020;102636;HCRI;83,00;`; const lines = str.split(/&lt;br&gt;/gs); for (let i = 0; i &lt; lines.length; i++) {     lines[i] = lines[i].replace(/(.*)BLUE\d*\s-\sAmil\sLtda\d+\/\d+\/\d+;;/, ''); } console.log(lines); </code></pre>"			2020-08-22 13:57:58.587 UTC
63537390	javascript|python|tostring	JavaScript toString(16) in Python for floats?	"<p>I am trying to convert the following JavaScript code to Python:</p> <pre class=""lang-js prettyprint-override""><code>var n = 0.3846705659431655 n.toString(16)  result: &quot;0.6279c52c75af6&quot; </code></pre> <p>The challenge I am having right now is that I can't seem to convert floats in Python. It will error on me or give me a different result.</p> <p><strong>Example:</strong></p> <pre class=""lang-py prettyprint-override""><code>n = 0.3846705659431655 float.hex(n)  result: 0x1.89e714b1d6bd8p-2 expected result: &quot;0.6279c52c75af6&quot; </code></pre> <p>Is there any other method for me to get the same result in Python?</p>"	2020-08-22 14:40:27.36 UTC	63537840	"<p>I'm doing it with Python 3.8 but it should work also for you.</p> <pre class=""lang-py prettyprint-override""><code>def FloatToHex(number, base = 16):     if number &lt; 0:                          # Check if the number is negative to manage the sign         sign = &quot;-&quot;                          # Set the negative sign, it will be used later to generate the first element of the result list         number = -number                    # Change the number sign to positive     else:         sign = &quot;&quot;                           # Set the positive sign, it will be used later to generate the first element of the result list      s = [sign + str(int(number)) + '.']     # Generate the list, the first element will be the integer part of the input number     number -= int(number)                   # Remove the integer part from the number      for i in range(base):                   # Iterate N time where N is the required base         y = int(number * 16)                # Multiply the number by 16 and take the integer part         s.append(hex(y)[2:])                # Append to the list the hex value of y, the result is in format 0x00 so we take the value from postion 2 to the end         number = number * 16 - y            # Calculate the next number required for the conversion      return ''.join(s).rstrip('0')           # Join all the list values and return the converted number  n = 0.3846705659431655 print(FloatToHex(n)) </code></pre> <p>result <code>0.6279c52c75af6</code></p>"			2020-08-22 15:22:24.787 UTC
63547967	javascript|python|json|flask	How to send JSON data from front-end JavaScript to the Back-end Server built by using Python Flask	"<p>I am using a simple HTML form to get some simple data from the user. I want that data to be first filtered using the JavaScript in the front-end and if everything is Okay, I am converting that gathered data in JSON format using JavaScript in the front-end itself.</p> <p><strong>Now what i want is to send that JSON formatted data in the JavaScript to be sent to the backend.</strong></p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-js lang-js prettyprint-override""><code>function fun(){     let user = document.getElementById('user').value     let password = document.getElementById('password').value      let data = {         ""user"": user,         ""password"": password     }     console.log(data); // this data needs to be sent to the backend     return true }</code></pre> <pre class=""snippet-code-html lang-html prettyprint-override""><code>&lt;!DOCTYPE html&gt; &lt;html lang=""en""&gt; &lt;head&gt;     &lt;link rel=""stylesheet"" href=""main.css""&gt;     &lt;title&gt;Data Entry&lt;/title&gt; &lt;/head&gt; &lt;body&gt;     &lt;div&gt;         &lt;form action="""" onsubmit=""return fun()""&gt;             &lt;label for=""user""&gt;user&lt;/label&gt;             &lt;input type=""text"" name=""user"" id=""user""&gt;             &lt;label for=""password""&gt;password&lt;/label&gt;             &lt;input type=""password"" name=""password"" id=""password""&gt;             &lt;input type=""submit"" value=""submit""&gt;         &lt;/form&gt;     &lt;/div&gt;     &lt;script src=""code.js""&gt;&lt;/script&gt; &lt;/body&gt; &lt;/html&gt;</code></pre> </div> </div> </p>"	2020-08-23 14:14:59.9 UTC	63548146	"<p>You can use fetch API.</p> <p>Example, you can use following code inside fun():</p> <pre><code> fetch('your-python-server', {         method: 'post',         body: JSON.stringify(data)       }).then(function(response) {         return response.json();       }).then(function(data) {         console.log(&quot;Data returned from python server&quot;, data)       }); </code></pre>"			2020-08-23 14:31:38.45 UTC
63554203	javascript|python|numpy	python to javascript numpy ndarray operation confusion	"<p>I am trying to convert some python numpy code into javascript, and I am unsure of what the follow code is actually doing.</p> <p><code>self.W = np.random.rand(size, size)-0.5</code></p> <p><code>self.W /= 0.9</code></p> <p>What does the <code>- 0.5</code> do in this case? Does this subtract 0.5 from every number in the multi-dimensional array. Just below that line, does the division happen on every element inside of self.W? To convert to javascript, would I just iterate over all of the elements and apply the operation to the element at that index?</p> <p>Also, in the following snippet, what is actually happening?? I have no idea what is happening. I am use to bracket notation being an index, but this looks like a condition (like ternary?), but it also looks like it is generating a new matrix to do this.</p> <p><code>self.W[np.random.rand(size, size)&gt;self.sparsity] = 0</code></p> <p>Thanks for any help.</p> <p><a href=""https://github.com/Devrim-Celik/simple_echo_state_network/blob/master/ESN.py"" rel=""nofollow noreferrer"">Original Python Code on GitHub</a></p>"	2020-08-24 03:05:47.707 UTC	63554241	"<p>You should probably just install an appropriate version of Python and <code>numpy</code> when attempting a conversion like this.</p> <p>With a few simple lines of testing on the CLI, you'd be able to answer your own question:</p> <pre><code>&gt;&gt;&gt; import numpy as np &gt;&gt;&gt; np.random.rand(1, 2) array([[0.08239857, 0.15732393]]) &gt;&gt;&gt; x = np.random.rand(1, 2) &gt;&gt;&gt; x array([[0.08155715, 0.57869165]]) &gt;&gt;&gt; x - .5 array([[-0.41844285,  0.07869165]]) </code></pre> <p>So, yes - the <code>numpy.ndarray</code> type has a subtract operation defined on it that, when presented with a number as the second operand and an array as the first, subtracts that number from each element of the array.</p> <p>With the division, similarly:</p> <pre><code>&gt;&gt;&gt; x *= 10 &gt;&gt;&gt; x array([[0.81557146, 5.78691654]]) &gt;&gt;&gt; x /= 10 &gt;&gt;&gt; x array([[0.08155715, 0.57869165]]) </code></pre> <p>The difference is that <code>/</code> would return a new result array (in <code>x / 10</code>) whereas <code>/=</code> assigns the result to <code>x</code>, overwriting its values in <code>x /= 10</code>.</p> <p>The last example is more complicated, but very typical of how the <code>numpy</code> library is implemented. Similar to the operations like <code>-</code> and <code>/=</code> being distributed, applying a comparison to an array distributes it and returns an array of boolean values, which can then be used as an 'index' to select exactly those value of an array for which the array of boolean values is <code>True</code>.</p> <p>It then proceeds to set exactly those selected values to <code>0</code>, in the example you gave.</p> <p>Asking how to code those operations in JavaScript is just asking SO to write your code for you - now that you understand what happens, you should try to implement the same logic in JavaScript. If you run into specific issues you don't understand, you can ask separate questions about those.</p>"			2020-08-24 03:11:15.437 UTC
63570326	javascript|python|selenium	Selenium get a value of a JavaScript global variable (from Python)	"<p>I would like to get a value from a global variable in JavaScript:</p> <pre class=""lang-js prettyprint-override""><code>    clearInterval(countdownTimerTHx);     var saniye_thx = 298 // &lt;--- This variable     function secondPassedTHx() { </code></pre> <p><a href=""https://i.stack.imgur.com/odIbh.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/odIbh.png"" alt=""For a larger code snippet see this"" /></a></p> <p>Here I just want to get the value <strong>&quot;298&quot;</strong> in saniye_thx var</p> <p>The XPATH is: <strong>//*[@id=&quot;c2VuZE9nb2xsb3dlcnNfdGlrdG9r&quot;]/script</strong></p> <p>How can I do that? Thank you, and have a good day.</p>"	2020-08-25 00:20:57.553 UTC	63571092	"<p>Assuming you have a webdriver instance <code>driver</code>, you should be able to use the <code>execute_script</code> function in order to execute client-side JavaScript to get a value.</p> <p>Something like the following should show enough context to call the <code>execute_script</code> function and get the value.</p> <pre class=""lang-py prettyprint-override""><code>from selenium.webdriver import Chrome  driver = Chrome()  # Setup driver to go to appropriate web site  saniye_thx = driver.execute_script('return saniye_thx') </code></pre>"			2020-08-25 02:09:44.927 UTC
63570326	javascript|python|selenium	Selenium get a value of a JavaScript global variable (from Python)	"<p>I would like to get a value from a global variable in JavaScript:</p> <pre class=""lang-js prettyprint-override""><code>    clearInterval(countdownTimerTHx);     var saniye_thx = 298 // &lt;--- This variable     function secondPassedTHx() { </code></pre> <p><a href=""https://i.stack.imgur.com/odIbh.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/odIbh.png"" alt=""For a larger code snippet see this"" /></a></p> <p>Here I just want to get the value <strong>&quot;298&quot;</strong> in saniye_thx var</p> <p>The XPATH is: <strong>//*[@id=&quot;c2VuZE9nb2xsb3dlcnNfdGlrdG9r&quot;]/script</strong></p> <p>How can I do that? Thank you, and have a good day.</p>"	2020-08-25 00:20:57.553 UTC	63570812	<p>Try to use JavascriptExecutor</p> <p>WebDriver driver = new ChromeDriver();</p> <p>JavascriptExecutor je = (JavascriptExecutor)driver;</p> <p>var returnValue = js.executeScript(&quot;return saniye_thx&quot;);</p>			2020-08-25 01:33:49.763 UTC
63570524	python|selenium|selenium-chromedriver	how to fill javascript text box with selenium and python (without send_keys)	"<p>I want to enter a value into a field</p> <p>I find the element by:</p> <pre><code>driver.find_element_by_xpath('//*[@id=&quot;cell--gE-Ez1qtyIA&quot;]') </code></pre> <p>And I do this to display the text and click:</p> <pre><code>driver.find_element_by_xpath('//*[@id=&quot;cell--gE-Ez1qtyIA&quot;]').click() driver.find_element_by_xpath('//*[@id=&quot;cell--gE-Ez1qtyIA&quot;]').text </code></pre> <p>So far so good, but I use this code when I want to send a value to this field:</p> <pre><code>driver.find_element_by_xpath('//*[@id=&quot;cell--gE-Ez1qtyIA&quot;]').send_keys('test') </code></pre> <p>Nothing happens and the field value does not change</p>"	2020-08-25 00:49:30.277 UTC	63570755	"<p>Try to use <code>javascriptexecutor</code> instead of <code>sendkeys</code></p> <pre><code>WebDriver driver = new ChromeDriver(); JavascriptExecutor je = (JavascriptExecutor)driver; je.executeScript(&quot;document.getElementById('IDofElement').setAttribute('value', 'your value here')&quot;); </code></pre>"			2020-08-25 01:24:22.87 UTC
63570524	python|selenium|selenium-chromedriver	how to fill javascript text box with selenium and python (without send_keys)	"<p>I want to enter a value into a field</p> <p>I find the element by:</p> <pre><code>driver.find_element_by_xpath('//*[@id=&quot;cell--gE-Ez1qtyIA&quot;]') </code></pre> <p>And I do this to display the text and click:</p> <pre><code>driver.find_element_by_xpath('//*[@id=&quot;cell--gE-Ez1qtyIA&quot;]').click() driver.find_element_by_xpath('//*[@id=&quot;cell--gE-Ez1qtyIA&quot;]').text </code></pre> <p>So far so good, but I use this code when I want to send a value to this field:</p> <pre><code>driver.find_element_by_xpath('//*[@id=&quot;cell--gE-Ez1qtyIA&quot;]').send_keys('test') </code></pre> <p>Nothing happens and the field value does not change</p>"	2020-08-25 00:49:30.277 UTC	63572490	"<p>Since we are unaware about the nature of the text box you are trying to access, there are some possibilities because of which you are facing this situation. The <code>send_keys()</code> works on all the text box which ever you use. Look for the points below and try applying it on the element:</p> <ol> <li>The element is not extracted properly, try some other locator like id, name, css_selector.</li> <li>The element is not ready to use, put some explicit wait and check for presence and visibility of element.</li> </ol> <p>A sample code can be using explicit wait:</p> <pre><code>wait = WebDriverWait(driver, 10) element = wait.until(EC.presence_of_all_elements_located((&quot;xpath&quot;, &quot;//*[@id='cell--gE-Ez1qtyIA']&quot;))) element.send_keys(&quot;test&quot;) </code></pre>"			2020-08-25 05:20:48.687 UTC
63596758	python|selenium|xpath|css-selectors|webdriverwait	Javascript button wit no id not clicking with Selenium (Python)	"<p>I am trying to click on the following button using Selenium in Python. However, any way I have tried to approach clicking on that button has failed and I was hoping someone could help. For all intents and purposes. I am a novice in both Python/Selenium so any help would be greatly appreciated!</p> <pre class=""lang-html prettyprint-override""><code>&lt;tr&gt;    &lt;td colspan=3&gt;&lt;/td&gt;   &lt;td align=center valign='center'&gt; &lt;a href=&quot;javascript:myFunction('/mailbox/jsp/MBIList.jsp')&quot;       onMouseOver=&quot;chgButton('Go','GoOver'); window.status=''; return true;&quot;       onMouseOut=&quot;chgButton('Go','GoOff'); window.status=''; return true;&quot;       onMouseDown=&quot;chgButton('Go','GoDown'); return true;&quot;&gt;&lt;img border=0       src=&quot;/mailbox/images/go_off.gif&quot; vspace=7 name='Go' align='top'&gt;&lt;/a&gt;    &lt;/td&gt; &lt;/tr&gt; </code></pre>"	2020-08-26 11:33:04.317 UTC	63597543	"<p>U can click on any element using any of the element attributes. For example in this case I would use attribute @name='Go' in your <strong>Xpath</strong>, where you are trying to select element.</p>"			2020-08-26 12:20:26.333 UTC
63596758	python|selenium|xpath|css-selectors|webdriverwait	Javascript button wit no id not clicking with Selenium (Python)	"<p>I am trying to click on the following button using Selenium in Python. However, any way I have tried to approach clicking on that button has failed and I was hoping someone could help. For all intents and purposes. I am a novice in both Python/Selenium so any help would be greatly appreciated!</p> <pre class=""lang-html prettyprint-override""><code>&lt;tr&gt;    &lt;td colspan=3&gt;&lt;/td&gt;   &lt;td align=center valign='center'&gt; &lt;a href=&quot;javascript:myFunction('/mailbox/jsp/MBIList.jsp')&quot;       onMouseOver=&quot;chgButton('Go','GoOver'); window.status=''; return true;&quot;       onMouseOut=&quot;chgButton('Go','GoOff'); window.status=''; return true;&quot;       onMouseDown=&quot;chgButton('Go','GoDown'); return true;&quot;&gt;&lt;img border=0       src=&quot;/mailbox/images/go_off.gif&quot; vspace=7 name='Go' align='top'&gt;&lt;/a&gt;    &lt;/td&gt; &lt;/tr&gt; </code></pre>"	2020-08-26 11:33:04.317 UTC	63598256	"<p>The desired element is a dynamic element, so to click on the element you have to induce <a href=""https://stackoverflow.com/questions/49775502/webdriverwait-not-working-as-expected/49775808#49775808"">WebDriverWait</a> for the <code>element_to_be_clickable()</code> and you can use either of the following <a href=""https://stackoverflow.com/questions/48369043/official-locator-strategies-for-the-webdriver/48376890#48376890"">Locator Strategies</a>:</p> <ul> <li><p>Using <code>CSS_SELECTOR</code>:</p> <pre><code>WebDriverWait(driver, 20).until(EC.element_to_be_clickable((By.CSS_SELECTOR, &quot;a[href*='/mailbox/jsp/MBIList'] &gt; img[name='Go'][src^='/mailbox/images/go_off']&quot;))).click() </code></pre> </li> <li><p>Using <code>XPATH</code>:</p> <pre><code>WebDriverWait(driver, 20).until(EC.element_to_be_clickable((By.XPATH, &quot;//a[contains(@href, '/mailbox/jsp/MBIList')]/img[@name='Go' and starts-with(@src, '/mailbox/images/go_off')]&quot;))).click() </code></pre> </li> <li><p><strong>Note</strong>: You have to add the following imports :</p> <pre><code>from selenium.webdriver.support.ui import WebDriverWait from selenium.webdriver.common.by import By from selenium.webdriver.support import expected_conditions as EC </code></pre> </li> </ul>"			2020-08-26 13:00:52.217 UTC
63605357	security	Could there be malware in Python/Javascript files that I purchased?	"<p>I recently purchased a django-react code off fiverr. I don't know too much about web development. This may be just paranoia but is it possible that there could be some malicious malware in these kind of <a href=""https://i.stack.imgur.com/nb4J5.png"" rel=""nofollow noreferrer"">Files</a>. And that if I run the server then something could happen to the pc I run it on?</p>"	2020-08-26 20:34:34.573 UTC	63611618	"<p>Short answer, is it possible for HTML, PY, JS etc. files to contain malicious content, yes. If you run this server on a PC can any malicious content do bad things to the PC that it is being run on, yes.</p> <p>Ok, so that is the scary side of this done. Let's consider the question a little more objectively. Let's think about how these files can contain malicious content, and more importantly what can you do about it.</p> <ol> <li><strong>The author deliberately wrote malicious code into the files</strong></li> </ol> <p>Of course this is possible, but in my opinion unlikely. People producing malware are looking for a return on the investment of their time. Writing a solution to your request on fiverr and including malicious content is a huge investment for minimal return.</p> <p>Also, please bare in mind that any contractor / freelancer is building their career on trust. If they get caught writing malicious code for customers then their reputation will be impacted. There is a great book on <a href=""https://www.amazon.co.uk/Who-Can-You-Trust-Technology/dp/1541773675"" rel=""nofollow noreferrer"">Who Can You Trust?</a> which goes into the details about trust on platforms sharing goods and services.</p> <p>If you do want to check for issues in the code, then I would use a static code analyser (e.g. Fortify) and a penetration test.</p> <ol start=""2""> <li><strong>The author has included an open source module that has malicious content</strong></li> </ol> <p>This in my opinion is more likely. There have been examples in the past of modules published via sharing mechanisms e.g. NPM have contained malicious content. Here are a couple of examples:</p> <ul> <li><a href=""https://nakedsecurity.sophos.com/2020/01/15/malicious-npm-package-taken-down-after-microsoft-warning/"" rel=""nofollow noreferrer"">Malicious NPM package</a></li> <li><a href=""https://www.trendmicro.com/vinfo/hk-en/security/news/cybercrime-and-digital-threats/hacker-infects-node-js-package-to-steal-from-bitcoin-wallets"" rel=""nofollow noreferrer"">Bitcoin Stealer</a></li> </ul> <p>The good news here is that it is quite easy for you to check for known issues. For example, as you have JS files I assume there is a dependancy on npm, you can use <a href=""https://docs.npmjs.com/cli/audit"" rel=""nofollow noreferrer"">npm-audit</a> to check the dependancies for security advisories.</p> <p>In summary, in your position I would start by ensuring that the dependencies used by the code don't have any significant security advisories. Then, if the system is critical enough I would use a static code analysis tool (e.g. Fortify) to check the custom code. Finally, always good for a public facing system is getting a good penetration test done.</p> <p>The key point here, is to think about the risk profile for the system and then decide what investment you need / should do to ensure the security of the system. Is this a customer facing system taking sensitive information (e.g. bank / credit card details), or, an internal intranet system? The first will require more stringent security checks to ensure that you keep your customers safe.</p>"			2020-08-27 08:00:26.137 UTC
63612691	python|jenkins	python script with jenkins showing html and javascript data in mail body	"<p>I need to create a python script to integrate to jenkins which displays the html in mail body when the job is success, any suggestions will be helpful.</p>"	2020-08-27 09:04:13.023 UTC	63612799	"<p>You can make use the <a href=""https://python-jenkins.readthedocs.io/en/latest/"" rel=""nofollow noreferrer""><code>python-jenkins</code></a> module to do all jenkins related operations mentioned below:</p> <pre><code>1. Create new jobs 2. Copy existing jobs 3. Delete jobs 4. Update jobs 5. Get a job’s build information 6. Get Jenkins master version information 7. Get Jenkins plugin information 8. Start a build on a job 9. Create nodes 10. Enable/Disable nodes 11. Get information on nodes 12. Create/delete/reconfig views 13. Put server in shutdown mode (quiet down) 14. List running builds 15. Delete builds 16. Wipeout job workspace 17. Create/delete/update folders 18. Set the next build number  </code></pre> <p><strong>EDIT 1:</strong></p> <p>Please take a look at these <a href=""https://stackoverflow.com/a/11896118/11094041"">link 1</a> and <a href=""https://stackoverflow.com/a/33665885/11094041"">link 2</a>, if you want to send it as mail.</p>"			2020-08-27 09:11:33.767 UTC
63645139	javascript|python|jquery|ajax	how do i pass parameter or ajax data to a python script using ajax call in javascript and get response if it is successful?	"<p>I want to pass all parameter used in an ajax call in jquery to a python file or script which I am using to communicate with the database and doing all the computation at once and updating or sending those calculation to the database or directly sending the response to the ajax call on success. I have added an example jquery and python code which has no parameter passed into it. But i want to pass data in the python script if user makes any changes.</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-js lang-js prettyprint-override""><code>$(document).ready(function(){      $('#filter_graph_by_date').click(function(){                                 var from_date =$('#start_date').val();          var to_date =$('#end_date').val();                              var customer =$('#customer_filters').val();                                      var machine =$('#machine_filters').val();                   var cytype = $('#cyType_filters').val();          var cystatus = $('#cyStatus_filters').val();                       var net = $('#ByNetWts').val();           var res = $('#ByResWts').val();                                if(from_date != '' &amp;&amp; to_date != ''){                                      $.ajax({                    url:""statistics.py"",                                                type:""POST"",                  dataType:""json"",                  data: {                       from_date: from_date,                       to_date: to_date,                                                      customer: customer,                                           machine: machine,                      cytype: cytype,                       cystatus: cystatus,                                          net:net,                                          res:res,                   },                                                                             success: function(data) {                         },                                               error: function(data) {                       console.log(data);                   }                                         })           }       })                      })</code></pre> </div> </div> </p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-js lang-js prettyprint-override""><code>import os, sys, time import pymysql from json2html import * import string  PRJ_DB = 'plcproject'                          def get_values_Keys(band_limit, first_key, last_key, frm, to, keys, diff):      col_limit = {};     key_vals = {};     key_vals[first_key] = 0;     key_vals[last_key] = 0;     lastKey_count = 0;                  for key in keys:             col_limit[key] = [(key - band_limit), (key + band_limit)];             key_vals[str(key)] = 0;                        for dif_val in diff:              val = dif_val;             if (val &lt; frm):                 key_vals[first_key] += 1;             elif (val &gt; to):                 lastKey_count += 1;             else:                 for key in keys:                      if ((val &gt;= col_limit[key][0]) and (val &lt; col_limit[key][1])):                         key_vals[str(key)] += 1;                         break;                                        key_vals[last_key] = lastKey_count;         out_row = {};         cnt = 0;         #final_row = []         out_row[cnt] = [ first_key, key_vals[first_key]];         #final_row.append(key_vals[first_key])         cnt = 1;                for key in keys:             #print(""Key:"", key)             out_row[cnt] = [str(key), key_vals[str(key)]];             #final_row.append(key_vals[str(key)])             cnt += 1;                  out_row[cnt] = [last_key, key_vals[last_key]];         #final_row.append(key_vals[last_key])         #print(""Final Row:"", final_row)          return out_row;      def get_average_key_val(mc, keyVals):     keyVals_list = []     key_val_dict = {}     keys = []     vals = []     mult_items = 0     sum = 0     cnt = 0     keyVals_list = list(keyVals.values())[1:][:-1]          for item in keyVals_list:         key, val = item[0], item[1]         keys.append(key)         vals.append(val)         sum+=val         try:             prod = int(key)*int(val)             mult_items+=prod             if prod:                 cnt+=1         except:             continue     i = 0     key_val_dict['machine'] = mc     for key in keys:         key_val_dict[key] = vals[i]         i+=1              key_val_dict['sum'] = sum     try:         key_val_dict['Average'] = ""{:.2f}"".format(mult_items/cnt)     except:         key_val_dict['Average'] = 0          return key_val_dict                                            if __name__ == '__main__':         mydb = pymysql.connect(host=""localhost"", user=""root"", passwd="""", database=PRJ_DB)     db_coursor = mydb.cursor()     db_coursor.execute(""SELECT differences, machine FROM productiondetail WHERE status = 1"")     data_rows = db_coursor.fetchall()     machine_list = []     diff_rows = []          for data in data_rows:         #0 --&gt; rangefrom  1--&gt; rangeto, 2--&gt; leastcount         diff_rows.append(data[0])         machine_list.append(data[1])              #print(diff_rows, machine_list)              cnt = 0     mc_diff = {}         for mc in machine_list:         try:             mc_diff[mc].append(diff_rows[cnt])         except:             print(""First value for "", mc)             mc_diff[mc] = []             mc_diff[mc].append(diff_rows[cnt])         cnt+=1               db_coursor.execute(""SELECT rangefrom, rangeto, leastcount FROM othersettings WHERE id = 1"");     data_rows = db_coursor.fetchall()     for data in data_rows:         #0 --&gt; rangefrom  1--&gt; rangeto, 2--&gt; leastcount         rangefrom = int(data[0])         rangeto = int(data[1])         leastcount = int(data[2])         band_limit  = leastcount / 2;         first_key = '&lt;'+str(rangefrom);         last_key = '&gt;'+str(rangeto);          print(""==== "", rangefrom, rangeto, leastcount)       keys = [];     key_vals_dict_list = []     key_vals_dict = {};           cnt = 0     for i in range(rangefrom, rangeto, leastcount):         #print(i)         keys.append(i)         cnt += 1          final_lst = []          sum_avg = ['sum', 'Average']     header = ['Machine_range']+keys + sum_avg     final_lst.append(header)     header_len = len(header)     for mc in mc_diff:         #print(""Machine %s Graph Array List :"" %mc)         key_vals_array = get_values_Keys(band_limit, first_key, last_key, rangefrom, rangeto, keys, mc_diff[mc]);         #print (key_vals_array)         #print()         tmp = get_average_key_val(mc, key_vals_array)         final_lst.append(tmp.values())         key_vals_dict_list.append(tmp)               #print(""Full Graph Array List:"")     key_vals_array = get_values_Keys(band_limit, first_key, last_key, rangefrom, rangeto, keys, diff_rows);     #print (key_vals_array)     #print()          temp = get_average_key_val('Total', key_vals_array)     tot_perc = dict(temp)          tot_vals = temp.values()     final_lst.append(tot_vals)          tot_sum = temp['sum']     for k, v in temp.items():         #print(""++++++++"",k, v)         if v == 'Total':            tot_perc[k] = ""Total %""         elif k == 'sum':             tot_perc[k] = 100         elif k == 'Average':            tot_perc[k] = """"         elif isinstance(v, int):             try:                 tot_perc[k] = ""{:.2f}"".format((v/tot_sum) * 100)             except:                 tot_perc[k] = 0.0         else:             continue                          key_vals_dict_list.append(temp)             key_vals_dict_list.append(tot_perc)             final_lst.append(tot_perc.values())             #for k, v in temp.items():              input = {""statistics"":key_vals_dict_list}             #print(input)             html_data = json2html.convert(json = input)             fo = open(""test.html"", 'w')             fo.write(html_data)             fo.close()             #print(final_lst)              #Clear DB Table             sql = ""TRUNCATE TABLE statistics""             db_coursor.execute(sql)             mydb.commit()              #create Table array elements;             chr_set = string.ascii_lowercase[:header_len]             c_len = 26 - header_len             ch_ar = """"             for i in range(c_len):                 ch_ar += ' ,'             ch_ar= ch_ar.strip("","")              stat_sql = ""INSERT INTO statistics (`a`, `b`, `c`, `d`, `e`, `f`, `g`, `h`, `i`, `j`, `k`, `l`, `m`, `n`, `o`, `p`, `q`, `r`, `s`, `t`, `u`, `v`, `w`, `x`, `y`, `z`) VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)"";             for data in final_lst:                 data=list(data)+ch_ar.split("","")                 for i in range(0, len(data)):                      data[i] = str(data[i])                  #Update new values                 data = tuple(data)                 #print(stat_sql)                 print(data)                 db_coursor.execute(stat_sql, data)                 mydb.commit()</code></pre> </div> </div> </p>"	2020-08-29 08:50:08.22 UTC	63645466	"<p>Try this.. using data: JSON.stringify</p>  <pre class=""lang-js prettyprint-override""><code>$(document).ready(function(){      $('#filter_graph_by_date').click(function(){                                 var from_date =$('#start_date').val();          var to_date =$('#end_date').val();                              var customer =$('#customer_filters').val();                                      var machine =$('#machine_filters').val();                   var cytype = $('#cyType_filters').val();          var cystatus = $('#cyStatus_filters').val();                       var net = $('#ByNetWts').val();           var res = $('#ByResWts').val();                                if(from_date != '' &amp;&amp; to_date != ''){             $.ajax({                 url: '&quot;statistics.py&quot;',                 dataType: 'json',                 type: 'post',                 contentType: 'application/json',                 data: JSON.stringify( {  from_date: from_date,                       to_date: to_date,                                                      customer: customer,                                           machine: machine,                      cytype: cytype,                       cystatus: cystatus,                                          net:net,                                          res:res } ),                                  processData: false,                 success: function( data, textStatus, jQxhr ){                     $('#response pre').html( JSON.stringify( data ) );                 },                   error: function( jqXhr, textStatus, errorThrown ){                     console.log( errorThrown );                 }            });                          </code></pre>"			2020-08-29 09:30:50.34 UTC
63651823	multithreading|ipython|jupyter|pyzmq	Direct communication between Javascript in Jupyter and server via IPython kernel	"<p>I'm trying to display an interactive mesh visualizer based on Three.js inside a Jupyter cell. The workflow is the following:</p> <ol> <li>The user launches a Jupyter notebook, and open the viewer in a cell</li> <li>Using Python commands, the user can manually add meshes and animate them interactively</li> </ol> <p>In practice, the main thread is sending requests to a server via ZMQ sockets (every request needs a single reply), then the server sends back the desired data to the main thread using other socket pairs (many &quot;request&quot;, very few replies expected), which finally uses communication through ipython kernel to send the data to the Javascript frontend. So far so good, and it works properly because the messages are all flowing in the same direction:</p> <pre><code>Main thread (Python command) [ZMQ REQ] -&gt; [ZMQ REP] Server (Data) [ZMQ XREQ] -&gt; [ZMQ XREQ] Main thread (Data) [IPykernel Comm] -&gt; [Ipykernel Comm] Javascript (Display) </code></pre> <p>However, the pattern is different when I'm want to fetch the status of the frontend to wait for the meshes to finish loading:</p> <pre><code>Main thread (Status request) --&gt; Server (Status request) --&gt; Main thread (Waiting for reply) |                                                         | &lt;--------------------------------Javascript (Processing) &lt;-- </code></pre> <p>This time, the server sends a request to the frontend, which in return does not send the reply directly back to the server, but to the main thread, that will forward the reply to the server, and finally to the main thread.</p> <p>There is a clear issue: the main thread is supposed to jointly forward the reply of the frontend and receive the reply from the server, which is impossible. The ideal solution would be to enable the server to communicate directly with the frontend but I don't know how to do that, since I cannot use <code>get_ipython().kernel.comm_manager.register_target</code> on the server side. I tried to instantiate an ipython kernel client on the server side using <code>jupyter_client.BlockingKernelClient</code>, but I didn't manged to use it to communicate nor to register targets.</p>"	2020-08-29 21:11:45.783 UTC	63666477	"<p>OK so I found a solution for now but it is not great. Indeed of just waiting for a reply and keep busy the main loop, I added a timeout and interleave it with <code>do_one_iteration</code> of the kernel to force to handle to messages:</p> <pre><code>while True:     try:         rep = zmq_socket.recv(flags=zmq.NOBLOCK).decode(&quot;utf-8&quot;)     except zmq.error.ZMQError:         kernel.do_one_iteration() </code></pre> <p>It works but unfortunately it is not really portable and it messes up with the Jupyter evaluation stack (all queued evaluations will be processed here instead of in order)...</p> <p>Alternatively, there is another way that is more appealing:</p> <pre><code>import zmq import asyncio import nest_asyncio  nest_asyncio.apply()  zmq_socket.send(b&quot;ready&quot;) async def enforce_receive():     await kernel.process_one(True)     return zmq_socket.recv().decode(&quot;utf-8&quot;) loop = asyncio.get_event_loop() rep = loop.run_until_complete(enforce_receive()) </code></pre> <p>but in this case you need to know in advance that you expect the kernel to receive exactly one message, and relying on <code>nest_asyncio</code> is not ideal either.</p> <p>Here is a link to an issue on this topic of <a href=""https://github.com/jupyter-widgets/ipywidgets/issues/642"" rel=""nofollow noreferrer"">Github</a>, along with an example <a href=""https://github.com/jasongrout/ipywidgets/blob/315f7b1a4cca6da60b538f030d07cdfb41792601/docs/source/examples/Widget%20Asynchronous.ipynb"" rel=""nofollow noreferrer"">notebook</a>.</p> <h3>UPDATE</h3> <p>I finally manage to solve completely my issue, without shortcomings. The trick is to analyze every incoming messages. The irrelevant messages are put back in the queue in order, while the comm-related ones are processed on-the-spot:</p> <pre><code>class CommProcessor:     &quot;&quot;&quot;     @brief     Re-implementation of ipykernel.kernelbase.do_one_iteration                 to only handle comm messages on the spot, and put back in                 the stack the other ones.      @details   Calling 'do_one_iteration' messes up with kernel                 'msg_queue'. Some messages will be processed too soon,                 which is likely to corrupt the kernel state. This method                 only processes comm messages to avoid such side effects.     &quot;&quot;&quot;      def __init__(self):         self.__kernel = get_ipython().kernel         self.qsize_old = 0      def __call__(self, unsafe=False):         &quot;&quot;&quot;         @brief      Check once if there is pending comm related event in                     the shell stream message priority queue.          @param[in]  unsafe     Whether or not to assume check if the number                                 of pending message has changed is enough. It                                 makes the evaluation much faster but flawed.         &quot;&quot;&quot;         # Flush every IN messages on shell_stream only         # Note that it is a faster implementation of ZMQStream.flush         # to only handle incoming messages. It reduces the computation         # time from about 10us to 20ns.         # https://github.com/zeromq/pyzmq/blob/e424f83ceb0856204c96b1abac93a1cfe205df4a/zmq/eventloop/zmqstream.py#L313         shell_stream = self.__kernel.shell_streams[0]         shell_stream.poller.register(shell_stream.socket, zmq.POLLIN)         events = shell_stream.poller.poll(0)         while events:             _, event = events[0]             if event:                 shell_stream._handle_recv()                 shell_stream.poller.register(                     shell_stream.socket, zmq.POLLIN)                 events = shell_stream.poller.poll(0)          qsize = self.__kernel.msg_queue.qsize()         if unsafe and qsize == self.qsize_old:             # The number of queued messages in the queue has not changed             # since it last time it has been checked. Assuming those             # messages are the same has before and returning earlier.             return          # One must go through all the messages to keep them in order         for _ in range(qsize):             priority, t, dispatch, args = \                 self.__kernel.msg_queue.get_nowait()             if priority &lt;= SHELL_PRIORITY:                 _, msg = self.__kernel.session.feed_identities(                     args[-1], copy=False)                 msg = self.__kernel.session.deserialize(                     msg, content=False, copy=False)             else:                 # Do not spend time analyzing already rejected message                 msg = None             if msg is None or not 'comm_' in msg['header']['msg_type']:                 # The message is not related to comm, so putting it back in                 # the queue after lowering its priority so that it is send                 # at the &quot;end of the queue&quot;, ie just at the right place:                 # after the next unchecked messages, after the other                 # messages already put back in the queue, but before the                 # next one to go the same way. Note that every shell                 # messages have SHELL_PRIORITY by default.                 self.__kernel.msg_queue.put_nowait(                     (SHELL_PRIORITY + 1, t, dispatch, args))             else:                 # Comm message. Processing it right now.                 comm_handler = getattr(                     self.__kernel.comm_manager, msg['header']['msg_type'])                 msg['content'] = self.__kernel.session.unpack(msg['content'])                 comm_handler(None, None, msg)          self.qsize_old = self.__kernel.msg_queue.qsize()  process_kernel_comm = CommProcessor() </code></pre>"			2020-08-31 07:24:02.447 UTC
63657641	javascript|python|referenceerror	Calling JavaScript function from Python with js2py causes ReferenceError: document is not defined	"<p>I am trying to call a javascript function from python to change the DOM but I am unable to. Just console logging a message works, but as soon as I try to influence the DOM I get the error mentioned in the title. I'm sure there's something basic I'm missing here... Any suggestions or workarounds?</p> <p><em>app.py</em></p> <pre><code>app = Flask(__name__)  @app.route('/') def index():     return render_template(&quot;index.html&quot;)  @app.route('/python_func') def python_func():     eval_res, jsFile = js2py.run_file('static/test.js')     jsFile.hello()     return &quot;nothing&quot; </code></pre> <p><em>test.js</em></p> <pre><code>function hello() {     console.log(&quot;hello&quot;) &lt;--- Works     let div = document.createElement(&quot;div&quot;) &lt;--- This doesn't } </code></pre> <p><em>script.js (this button calls python function)</em></p> <pre><code>$(function() {     $('#startbtn').bind('click', function() {         $.getJSON('/python_func',             function(data) {         //do nothing         });         return false;     }); }); </code></pre>"	2020-08-30 12:56:07.087 UTC	63661588	<p>I found out that Js2Py won't be able to run JS code that has DOM dependencies.</p>			2020-08-30 19:56:36.667 UTC
63659636	javascript|python|html|flask|backend	How do I send data from javascript to python flask back-end?	"<p>I know this question has been answered already but I do not understand. I am new to flask and co-developing a chat website. This includes a database for users to log in</p> <p>My signup.html has a considerable size, so I will only include the part I'm having troubles with:</p> <pre class=""lang-html prettyprint-override""><code>{% extends &quot;base.html&quot; %} {% block title %} Sign up {% endblock %} {% block content %} &lt;form method=&quot;POST&quot; id=&quot;signupform&quot; action=&quot;#&quot; onsubmit=&quot;checkForm()&quot;&gt;     &lt;div class=&quot;form-group row&quot;&gt;             &lt;div class=&quot;col-sm-10&quot;&gt;             &lt;div class=&quot;form-check&quot;&gt;                 &lt;input class=&quot;form-check-input&quot; type=&quot;checkbox&quot; id=&quot;gridCheck1&quot;&gt;                 &lt;label class=&quot;form-check-label&quot; for=&quot;gridCheck1&quot;&gt;                     I have read and agreed to the &lt;a href=&quot;/TOS&quot;&gt;Terms Of Service&lt;/a&gt;                 &lt;/label&gt;                 &lt;small id=&quot;checkSmall&quot; class=&quot;form-text text-muted&quot;&gt;&lt;/small&gt;             &lt;/div&gt;         &lt;/div&gt;     &lt;/div&gt; &lt;/form&gt; {% endblock %} </code></pre> <p>My javascript:</p> <pre class=""lang-js prettyprint-override""><code>function checkForm() {     var isChecked = document.getElementById(&quot;gridCheck1&quot;).checked     if (isChecked == false) {         console.warn(&quot;TOS not agreed to&quot;)         document.getElementById(&quot;checkSmall&quot;).innerHTML = &quot;Please agree to the TOS before continuing.&quot;;     } else {         console.log(&quot;Tos were agreed to&quot;)     } } </code></pre> <p>My python (again, not the whole file):</p> <pre class=""lang-py prettyprint-override""><code>@app.route(&quot;/signup&quot;, methods=[&quot;GET&quot;, &quot;POST&quot;]) def signup():     if request.method == &quot;POST&quot;:         Name = request.form[&quot;Name&quot;]         Email = request.form[&quot;Email&quot;]         Password = request.form[&quot;Password&quot;]         usr = users(Name, Email, Password)         acc = [Name, Email, Password]         for value in acc:             if len(value) == 0 or &quot; &quot;*len(value) == value:                 flash(f&quot;{value} cant be blank&quot;)                 return redirect(url_for(&quot;signup&quot;))                 break             elif len(value) &gt; 100:                 flash(f&quot;{value} cant be more then 100 chars&quot;)                 return redirect(url_for(&quot;signup&quot;))                 break         db.session.add(usr)         db.session.commit()         flash(&quot;Signed up.&quot;)         return redirect(url_for('home'))     return render_template(&quot;signup.html&quot;) </code></pre> <p>I dont want to redirect to the home page unless the user actually agrees. I already have the javascript set up to pop a little message if they dont check that checkbox, and I need to tell the server to stop from the js. Could anyone help? PS: I could also use another way to acheive my goal. Also, just in case this can help anyone solve my problem, I'm using bootstrap. I'm not good at html, so anything helps.</p>"	2020-08-30 16:28:16.343 UTC	63660366	<p>Simplest way I can think of (I think this will work; anyone correct me if it is wrong):</p> <pre><code>&lt;input class=&quot;form-check-input&quot; type=&quot;checkbox&quot; id=&quot;gridCheck1&quot; required&gt; </code></pre>			2020-08-30 17:46:16.3 UTC
63678723	javascript|python|template-literals	Is there a Python equivalent to template literals in JavaScript?	"<p>To provide a basic example, say I wanted to write:</p> <pre><code>name = str(input()) age = int(input()) print('Hi, {name}, you are {age}.') </code></pre> <p>In javascript, this would look like:</p> <pre><code>console.log(`Hi, ${name}, you are ${age}.`) </code></pre> <p>I assume there is no direct implementation of template literals in Python, as I haven't found any mention on Google / DDG.</p> <p>If I am correct in thinking that there isn't a direct implementation, have any of you found workarounds? Thanks in advance.</p>"	2020-08-31 21:58:36.733 UTC	63678773	"<p>You can go with <a href=""https://docs.python.org/3/reference/lexical_analysis.html#formatted-string-literals"" rel=""noreferrer""><strong>formatted string literals</strong></a> (&quot;f-strings&quot;) since Python 3.6</p> <pre class=""lang-py prettyprint-override""><code>f&quot;Hi {name}, you are {age}&quot; </code></pre> <p>Or string formatting</p> <pre><code>&quot;Hi {}, you are {}&quot;.format(name, age) &quot;Hi {name}, you are {age}&quot;.format(name=name, age=age) </code></pre> <p>Or format specifiers</p> <pre><code>&quot;Hi %s, you are %d&quot; % (name, age) </code></pre>"			2020-08-31 22:04:38.147 UTC
63704667	python|html|flask	How to call python function on button press in flask without javascript?	"<p>I am new to flask framework, what I want to do is very simple but I cant seem to find a solution online which does not use javascript (I dont know any javascript, which is why I want to avoid it for now).</p> <p>I want to call python function when user presses a button.</p> <p>Here is HTML button:</p> <pre><code>&lt;input type=&quot;submit&quot; name=&quot;A&quot; value=&quot;submit_A&quot;&gt; </code></pre> <p>Python code:</p> <pre><code>@app.route('/submit_a', methods=['POST', 'GET']) def submit_a():     if request.method == 'POST':         # code to detect button press         # do stuff     return redirect(url_for('upload_page')) </code></pre> <p>Any help would be appreciated</p>"	2020-09-02 11:34:49.77 UTC	63704718	"<p>Wrap button with form:</p> <pre class=""lang-html prettyprint-override""><code>&lt;form action=&quot;/submit_a&quot; method=&quot;POST&quot;&gt;     &lt;input type=&quot;submit&quot; name=&quot;A&quot; value=&quot;submit_A&quot;&gt; &lt;/form&gt; </code></pre>"			2020-09-02 11:38:35.643 UTC
63734708	javascript|python|eel	Javascript using Python function with eel	"<p>I'm in the process of making a chatbot program with Python and JavaScript. I use eel to make the UI for chatbot, but exposed function from python code can't be used in JavaScript Code.</p> <p><strong>Python Code</strong></p> <pre><code>@eel.expose def responsedMessage(message):     word = tokenize(message)     if not word == '@':         reply = load_w2v(word)     else:         reply = ''     response = make_sentence(reply)     return response </code></pre> <p><strong>JavaScript</strong></p> <pre><code>async function btnFunc(){     if(!inputText.value) return false;     output(inputText.value,'me');     const response = await eel.responsedMessage(inputText.value);     output(response,'robot'); } </code></pre> <p><strong>Error</strong></p> <pre><code>chatbot_js.html:60 Uncaught (in promise) TypeError: eel.responsedMessage is not a function at btnFunc (chatbot_js.html:60) at HTMLInputElement.onclick (chatbot_js.html:16) </code></pre> <p>Why is this error happened?</p>"	2020-09-04 04:08:26.427 UTC	64256150	<p>you should put the <strong>eel.start('main.html')</strong> at the end of your python script</p> <pre><code>@eel.expose def responsedMessage(message):     word = tokenize(message)     if not word == '@':         reply = load_w2v(word)     else:         reply = ''     response = make_sentence(reply)     return response  eel.start('main.html') </code></pre>			2020-10-08 05:09:44.313 UTC
63736191	javascript|python|promise|brython	How to call brython/python from javascript?	<p>I am trying to call brython function from javascript promise it giving error <code> ReferenceError: brythonListener is not defined</code> how to solve this?</p> <p>python/brython code</p> <pre><code>&lt;script type=&quot;text/python&quot;&gt; def execute(*args):     print(str(args)) window.brythonListener=execute &lt;/script&gt; </code></pre> <p>javascript code</p> <pre><code>            function(data){                 console.log(data) //till here code works                 brythonListener(data)             }         ) </code></pre> <p>what i am missing here?</p>	2020-09-04 06:49:32.257 UTC	63750399	<p>Reason for the issue <code> ReferenceError: brythonListener is not defined</code> is <code>brythonListener</code> was created after brython was loaded to solve this just reload brython when the js script calling python script</p> <p>Brython script</p> <pre><code>&lt;script type=&quot;text/python&quot;&gt; from browser import window  def execute(*args):     print(str(args))  window.brythonListener = execute &lt;/script&gt; </code></pre> <p>Js Script which will call brython function</p> <pre><code>&lt;Script onload=&quot;brython()&quot;&gt; function(data){   console.log(data)   brythonListener(data) }) &lt;/script&gt; </code></pre>			2020-09-05 04:17:30.837 UTC
63736191	javascript|python|promise|brython	How to call brython/python from javascript?	<p>I am trying to call brython function from javascript promise it giving error <code> ReferenceError: brythonListener is not defined</code> how to solve this?</p> <p>python/brython code</p> <pre><code>&lt;script type=&quot;text/python&quot;&gt; def execute(*args):     print(str(args)) window.brythonListener=execute &lt;/script&gt; </code></pre> <p>javascript code</p> <pre><code>            function(data){                 console.log(data) //till here code works                 brythonListener(data)             }         ) </code></pre> <p>what i am missing here?</p>	2020-09-04 06:49:32.257 UTC	72442845	"<p>I have programmed an add-on that enables you to do this after analyzing and looking at the code and the basic working method of Brython.....</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-html lang-html prettyprint-override""><code>&lt;script&gt; runconsole_scripts = $B.parser._run_scripts function check_all_old_brython() {     $(""script[type='text/python']"").attr(""type"",""text/python/old"")  };  function add_new_script(text) {     $(function () {         $('&lt;script&gt;')           .attr('type', 'text/python')           .text(text)           .appendTo('body');       }); };  function remove_all_new_brython_scripts() {     $(""script[type='text/python']"").remove() };  function uncheck_all_old_brython() {     $(""script[type='text/python/old']"").attr(""type"",""text/python"") };  function sleep(ms) {     return new Promise(resolve =&gt; setTimeout(resolve, ms));   }  async function run_exec(code, options) {     check_all_old_brython();     add_new_script(code);     $B.parse_options(options);     if (!($B.isWebWorker || $B.isNode)) {         //_run_scripts(options)         await sleep(1)         runconsole_scripts(options);         await sleep(1)     };          remove_all_new_brython_scripts();     uncheck_all_old_brython(); }; &lt;/script&gt;</code></pre> </div> </div> </p> <p>You have to put the code right after calling the library ....</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-html lang-html prettyprint-override""><code>&lt;script src=""assets/js/brython.min.js?h=d56c14be45278a1455b1f545237583fc""&gt;&lt;/script&gt; &lt;script src=""assets/js/brython_stdlib.js?h=e1293c1c0a36696318d3804d6240f20d""&gt;&lt;/script&gt; &lt;script&gt; runconsole_scripts = $B.parser._run_scripts function check_all_old_brython() {     $(""script[type='text/python']"").attr(""type"",""text/python/old"")  };  function add_new_script(text) {     $(function () {         $('&lt;script&gt;')           .attr('type', 'text/python')           .text(text)           .appendTo('body');       }); };  function remove_all_new_brython_scripts() {     $(""script[type='text/python']"").remove() };  function uncheck_all_old_brython() {     $(""script[type='text/python/old']"").attr(""type"",""text/python"") };  function sleep(ms) {     return new Promise(resolve =&gt; setTimeout(resolve, ms));   }  async function run_exec(code, options) {     check_all_old_brython();     add_new_script(code);     $B.parse_options(options);     if (!($B.isWebWorker || $B.isNode)) {         //_run_scripts(options)         await sleep(1)         runconsole_scripts(options);         await sleep(1)     };          remove_all_new_brython_scripts();     uncheck_all_old_brython(); }; &lt;/script&gt;</code></pre> </div> </div> </p> <p>or after body tag....</p> <p>I recommend that you put the code in a file and name it &quot;brython_call_from_console.js&quot;</p>"			2022-05-31 05:57:11.917 UTC
63748438	javascript|python|dictionary	"Differences between a Python dictionary and JavaScript ""dictionary""?"	"<p>I am learning JavaScript now. I learned in a class that JavaScript dictionaries are objects. The teacher said this in a way that implied that python dictionaries are not. It seems like to me a python dictionary is an instance of the class &quot;dictionary.&quot; One implication of this is that in JavaScript <code>my_dict['key1']</code> will return the associated <code>value1</code>, but so will <code>my_dict.key1</code>. In python, <code>my_dict.key1</code> will tell you that there is no method <code>key1</code> in the class &quot;dictionary.&quot; While I know how to use python, my general knowledge of programming is fairly week. My questions are these:</p> <ol> <li>what are the differences between Python dictionaries and JavaScript dictionaries</li> <li>What is the implication that &quot;JavasScript dictionaries are objects&quot; vs the corollary &quot;Python dictionaries are NOT objects&quot; (if that is true)?</li> <li>How does this effect how I should think about programing in Python vs JavaScript when using dictionaries?</li> </ol>"	2020-09-04 21:55:38.4 UTC	63748488	"<p>In Python, dictionaries are a form of mapping type. They can be initialized using a sequence of comma-separated name: value pairs, enclosed in curly braces. They are accessed using array notation involving square braces. The key can be any hashable, including numbers and strings.</p> <p>In Javascript, a dictionary is the same as an object. It can be initialized using the same syntax as Python. The key can be a number, a string, or an identifier. Because the dictionary is also an object, the elements can be accessed either using array notation, e.g. b[i], or using property notation, e.g. b.i.</p> <p>Consider an identifier used in an initializer, such as</p> <pre><code> b = {i:j}  </code></pre> <p>In Python both i and j are evaluated, but in Javascript, only j is evaluated. In Javascript you also have the privilege of writing in the dot notation, using the identifier i. Hence in Python,</p> <pre><code> i='k'  j=1  b = {i:j}  b['k'] # -&gt; 1  </code></pre> <p>In Javascript,</p> <pre><code> i='k'  j=1  b = {i:j}  b['i'] // -&gt; 1  b.i // -&gt; 1  // b[i], b['k'] and b.k are not defined  </code></pre> <p>In Javascript, using the identifier in dot notation is completely identical in all cases to using a string that &quot;looks like&quot; the identifier in array notation. Hence, b = { 'i':1 } ; b['i'] // -&gt; 1 b.i // -&gt; 1 When a number or boolean is used in a dictionary, Javascript will access the element using a string representation of the number or boolean. Not so in Python — a string and a number (or boolean) are different hashables.</p> <p>If you are interested in differences between both languages, then look at <a href=""https://stackoverflow.com/questions/1786522/how-different-are-the-semantics-between-python-and-javascript?answertab=votes#tab-top"">ans</a></p>"			2020-09-04 22:00:54.647 UTC
63750509	javascript|python|aes	Decrypt AES-generated hex from aes-js(Javascript) to pycryptodome(Python)	"<p>So im trying to decrypt a string I cryptographed with JS in Python. I used the <code>aes-js</code> library. I get this: <code>caba6777379a00d12dcd0447015cd4dbcba649857866072d</code>. This is my JS code:</p> <pre class=""lang-js prettyprint-override""><code>var key = aesjs.utils.utf8.toBytes(&quot;ThisKeyIs16Bytes&quot;); console.log(`Key (bytes): ${key}`);  var text = 'psst... this is a secret'; var textBytes = aesjs.utils.utf8.toBytes(text);  var aesCtr = new aesjs.ModeOfOperation.ctr(key, new aesjs.Counter(5)); var encryptedBytes = aesCtr.encrypt(textBytes);  var encryptedHex = aesjs.utils.hex.fromBytes(encryptedBytes); console.log(`Hex: ${key}`); </code></pre> <p>I've tried a few things in python, but this is what I currently have:</p> <pre class=""lang-py prettyprint-override""><code>from Crypto.Cipher import AES  ciphered_data = bytearray.fromhex('caba6777379a00d12dcd0447015cd4dbcba649857866072d') key = b'ThisKeyIs16Bytes'  cipher = AES.new(key, AES.MODE_CTR) original_data = cipher.decrypt(ciphered_data) print(original_data.decode(&quot;utf-8&quot;, errors=&quot;ignore&quot;)) </code></pre> <p>But I just recieve a mess.<code>=*լ☻ve↕-:tQɊ#¶</code>.</p>"	2020-09-05 04:39:58.59 UTC	63751581	"<p>The <a href=""https://pycryptodome.readthedocs.io/en/latest/src/cipher/classic.html#ctr-mode"" rel=""nofollow noreferrer"">CTR</a> mode is used. In the Pyton code the initialization of the counter is missing, i.e. the definition of the correct start value, e.g.</p>  <pre><code>... cipher = AES.new(key, AES.MODE_CTR, nonce = b'', initial_value = 5) ... </code></pre>  <p>or alternatively using a <a href=""https://pycryptodome.readthedocs.io/en/latest/src/util/util.html#crypto-util-counter-module"" rel=""nofollow noreferrer""><code>Counter</code></a> object:</p>  <pre><code>from Crypto.Util import Counter ... counter = Counter.new(128, initial_value = 5) cipher = AES.new(key, AES.MODE_CTR, counter = counter) ... </code></pre>  <p>With one of these two changes the decryption works.</p>"			2020-09-05 07:42:00.063 UTC
63751516	python|node.js|npm|subprocess	JavaScript heap out of memory when building react project in python subprocess	"<p>I want to automate the deployment of a react app on my server. I have a github webhook event that hits a python Flask endpoint where I then run <code>npm run build:stage</code> in a subprocess.</p> <p><strong>If I run the build command in an ssh login session, it works fine</strong> and the build generates but when the webhook fires and the command is run through the python subprocess, I see the following error:</p> <p>Python code that executes the command:</p> <pre><code>p = subprocess.Popen(command, cwd=cwd, stdout=subprocess.PIPE, stderr=subprocess.PIPE, shell=True) </code></pre> <pre><code>09/05/2020 02:42:59 PM +08 : INFO : Process Output:  &gt; laravel-app@0.1.0 build:stage /home/user/reactapp &gt; env-cmd -f .env.prod react-scripts build  Creating an optimized production build...  &lt;--- Last few GCs ---&gt;  [5541:0x2bc1760]    19190 ms: Scavenge 524.4 (551.5) -&gt; 516.9 (554.2) MB, 10.4 / 0.0 ms  (average mu = 0.989, current mu = 0.988) allocation failure  [5541:0x2bc1760]    19217 ms: Scavenge 528.1 (555.1) -&gt; 528.0 (559.4) MB, 16.6 / 0.0 ms  (average mu = 0.989, current mu = 0.988) allocation failure  [5541:0x2bc1760]    19432 ms: Scavenge 533.1 (560.0) -&gt; 532.7 (563.7) MB, 209.0 / 0.0 ms  (average mu = 0.989, current mu = 0.988) allocation failure    &lt;--- JS stacktrace ---&gt; Cannot get stack trace in GC.  09/05/2020 02:42:59 PM +08 : ERROR : Process Error: FATAL ERROR: Scavenger: semi-space copy Allocation failed - JavaScript heap out of memory npm ERR! code ELIFECYCLE npm ERR! errno 1 npm ERR! laravel-app@0.1.0 build:stage: `env-cmd -f .env.prod react-scripts build` npm ERR! Exit status 1 npm ERR!  npm ERR! Failed at the laravel-app@0.1.0 build:stage script. npm ERR! This is probably not a problem with npm. There is likely additional logging output above.  npm ERR! A complete log of this run can be found in: npm ERR!     /home/user/.npm/_logs/2020-09-05T06_42_59_795Z-debug.log </code></pre> <p>After going through <a href=""https://stackoverflow.com/questions/62469659/scavenger-allocation-failed-javascript-heap-out-of-memory"">Link 1</a>, <a href=""https://stackoverflow.com/a/57924320/1783688"">Link 2</a>, <a href=""https://stackoverflow.com/a/61263408/1783688"">Link 3</a></p> <p>I added the following to my bashrc<br /> <code>export NODE_OPTIONS=--max_old_space_size=4096 --max-semi-space-size=4096000</code></p> <p>and updated my build command to:<br /> <code>&quot;build:stage&quot;: &quot;env-cmd -f .env.prod react-scripts --max_old_space_size=4096 --max-semi-space-size=4096000 build&quot;</code></p> <p>The error changed to:</p> <pre><code>09/05/2020 03:10:16 PM +08 : INFO : Process Output: &gt; laravel-app@0.1.0 build:stage /home/user/reactapp &gt; env-cmd -f .env.prod react-scripts --max_old_space_size=4096 --max-semi-space-size=4096000 build  Creating an optimized production build...  &lt;--- Last few GCs ---&gt;  [7923:0x2e1d950]    33699 ms: Scavenge 415.5 (451.4) -&gt; 412.5 (535.7) MB, 37.8 / 0.0 ms  (average mu = 0.858, current mu = 0.000) allocation failure  [7923:0x2e1d950]    33913 ms: Scavenge 474.0 (542.3) -&gt; 438.2 (546.6) MB, 36.2 / 0.0 ms  (average mu = 0.858, current mu = 0.000) allocation failure  [7923:0x2e1d950]    34236 ms: Scavenge 480.8 (549.1) -&gt; 454.3 (567.2) MB, 77.7 / 0.0 ms  (average mu = 0.858, current mu = 0.000) allocation failure    &lt;--- JS stacktrace ---&gt; Cannot get stack trace in GC.  09/05/2020 03:10:16 PM +08 : ERROR : Process Error: FATAL ERROR: NewSpace::Rebalance Allocation failed - JavaScript heap out of memory  1: 0x9d8da0 node::Abort() [node]  2: 0x9d9f56 node::OnFatalError(char const*, char const*) [node]  3: 0xb37dbe v8::Utils::ReportOOMFailure(v8::internal::Isolate*, char const*, bool) [node]  4: 0xb38139 v8::internal::V8::FatalProcessOutOfMemory(v8::internal::Isolate*, char const*, bool) [node]  5: 0xce34f5  [node]  6: 0xd2a8ae  [node]  7: 0xd2e627 v8::internal::MarkCompactCollector::CollectGarbage() [node]  8: 0xcef049 v8::internal::Heap::MarkCompact() [node]  9: 0xcefdb3 v8::internal::Heap::PerformGarbageCollection(v8::internal::GarbageCollector, v8::GCCallbackFlags) [node] 10: 0xcf0925 v8::internal::Heap::CollectGarbage(v8::internal::AllocationSpace, v8::internal::GarbageCollectionReason, v8::GCCallbackFlags) [node] 11: 0xcf1fcf v8::internal::Heap::HandleGCRequest() [node] 12: 0xca0fb4 v8::internal::StackGuard::HandleInterrupts() [node] 13: 0xfef887 v8::internal::Runtime_StackGuard(int, unsigned long*, v8::internal::Isolate*) [node] 14: 0x13725d9  [node] npm ERR! code ELIFECYCLE npm ERR! errno 1 npm ERR! laravel-app@0.1.0 build:stage: `env-cmd -f .env.prod react-scripts --max_old_space_size=4096 --max-semi-space-size=4096000 build` npm ERR! Exit status 1 npm ERR!  npm ERR! Failed at the laravel-app@0.1.0 build:stage script. npm ERR! This is probably not a problem with npm. There is likely additional logging output above.  npm ERR! A complete log of this run can be found in: npm ERR!     /home/user/.npm/_logs/2020-09-05T07_10_16_341Z-debug.log  </code></pre> <pre><code># npm -v 6.12.0 # node -v v12.13.0 </code></pre> <p>Server: CentOS Linux release 7.6.1810 (Core)</p> <p>No clue how to proceed further</p> <p>UPDATE:</p> <p>I upgraded my hosting plan to increase the RAM from 4GB to 6GB. Now if I run the python snipper in a python console, the build generates fine but when it runs via the webhook throught flask app, I still see it fail with the above error.</p>"	2020-09-05 07:31:47.293 UTC	68365654	<p>I had exactly the same problem running &quot;npm audit fix&quot; via python subprocess.run. I got it fixed via moving this part into a script and executing the shell (bash in my case) with the script from within my Python script.</p>			2021-07-13 15:48:50.197 UTC
63761991	python|selenium|beautifulsoup	How to scrape a javascript website in Python?	"<p>I am trying to scrape a website. I have tried using two methods but both do not provide me with the full website source code that I am looking for. I am trying to scrape the news titles from the website URL provided below.</p> <p>URL: &quot;https://www.todayonline.com/&quot;</p> <p>These are the two methods I have tried but failed.</p> <h1>Method 1: Beautiful Soup</h1> <pre><code>tdy_url = &quot;https://www.todayonline.com/&quot; page = requests.get(tdy_url).text soup = BeautifulSoup(page) soup  # Returns me a HTML with javascript text soup.find_all('h3')  ### Returns me empty list [] </code></pre> <h1>Method 2: Selenium + BeautifulSoup</h1> <pre><code>tdy_url = &quot;https://www.todayonline.com/&quot;  options = Options() options.headless = True  driver = webdriver.Chrome(&quot;chromedriver&quot;,options=options)  driver.get(tdy_url) time.sleep(10) html = driver.page_source  soup = BeautifulSoup(html) soup.find_all('h3')  ### Returns me only less than 1/4 of the 'h3' tags found in the original page source  </code></pre> <p>Please help. I have tried scraping other news websites and it is so much easier. Thank you.</p>"	2020-09-06 08:03:20.947 UTC	63762273	<p><strong>There are different ways of gathering the content of a webpage that contains Javascript.</strong></p> <ol> <li>Using <code>selenium</code> with Firefox web driver</li> <li>Using a headless browser with <code>phantomJS</code></li> <li>Making an API call using a REST client or python <code>requests</code> library</li> </ol> <p><strong>You have to do your research first</strong></p>			2020-09-06 08:39:38.663 UTC
63761991	python|selenium|beautifulsoup	How to scrape a javascript website in Python?	"<p>I am trying to scrape a website. I have tried using two methods but both do not provide me with the full website source code that I am looking for. I am trying to scrape the news titles from the website URL provided below.</p> <p>URL: &quot;https://www.todayonline.com/&quot;</p> <p>These are the two methods I have tried but failed.</p> <h1>Method 1: Beautiful Soup</h1> <pre><code>tdy_url = &quot;https://www.todayonline.com/&quot; page = requests.get(tdy_url).text soup = BeautifulSoup(page) soup  # Returns me a HTML with javascript text soup.find_all('h3')  ### Returns me empty list [] </code></pre> <h1>Method 2: Selenium + BeautifulSoup</h1> <pre><code>tdy_url = &quot;https://www.todayonline.com/&quot;  options = Options() options.headless = True  driver = webdriver.Chrome(&quot;chromedriver&quot;,options=options)  driver.get(tdy_url) time.sleep(10) html = driver.page_source  soup = BeautifulSoup(html) soup.find_all('h3')  ### Returns me only less than 1/4 of the 'h3' tags found in the original page source  </code></pre> <p>Please help. I have tried scraping other news websites and it is so much easier. Thank you.</p>"	2020-09-06 08:03:20.947 UTC	63762449	"<p>I will suggest you the fairly simple approach,</p> <pre><code>import requests from bs4 import BeautifulSoup as bs  page = requests.get('https://www.todayonline.com/googlenews.xml').content soup = bs(page) news = [i.text for i in soup.find_all('news:title')]  print(news) </code></pre> <p>output</p> <pre><code>['DBS named world’s best bank by New York-based financial publication',  'Russia has very serious questions to answer on Navalny - UK',  &quot;Exclusive: 90% of China's Sinovac employees, families took coronavirus vaccine - CEO&quot;,  'Three militants killed after fatal attack on policeman in Tunisia', .....] </code></pre> <p>Also, you can check the XML page for more information if required.</p> <p>P.S. Always check for the compliance before <strong>scraping</strong> any website :)</p>"			2020-09-06 09:04:11.163 UTC
63761991	python|selenium|beautifulsoup	How to scrape a javascript website in Python?	"<p>I am trying to scrape a website. I have tried using two methods but both do not provide me with the full website source code that I am looking for. I am trying to scrape the news titles from the website URL provided below.</p> <p>URL: &quot;https://www.todayonline.com/&quot;</p> <p>These are the two methods I have tried but failed.</p> <h1>Method 1: Beautiful Soup</h1> <pre><code>tdy_url = &quot;https://www.todayonline.com/&quot; page = requests.get(tdy_url).text soup = BeautifulSoup(page) soup  # Returns me a HTML with javascript text soup.find_all('h3')  ### Returns me empty list [] </code></pre> <h1>Method 2: Selenium + BeautifulSoup</h1> <pre><code>tdy_url = &quot;https://www.todayonline.com/&quot;  options = Options() options.headless = True  driver = webdriver.Chrome(&quot;chromedriver&quot;,options=options)  driver.get(tdy_url) time.sleep(10) html = driver.page_source  soup = BeautifulSoup(html) soup.find_all('h3')  ### Returns me only less than 1/4 of the 'h3' tags found in the original page source  </code></pre> <p>Please help. I have tried scraping other news websites and it is so much easier. Thank you.</p>"	2020-09-06 08:03:20.947 UTC	63762266	"<p>You can access data via API (check out the Network tab): <a href=""https://i.stack.imgur.com/4itws.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/4itws.png"" alt=""enter image description here"" /></a></p> <hr /> <p>For example,</p> <pre class=""lang-py prettyprint-override""><code>import requests url = &quot;https://www.todayonline.com/api/v3/news_feed/7&quot; data = requests.get(url).json() </code></pre>"			2020-09-06 08:38:56.86 UTC
63761991	python|selenium|beautifulsoup	How to scrape a javascript website in Python?	"<p>I am trying to scrape a website. I have tried using two methods but both do not provide me with the full website source code that I am looking for. I am trying to scrape the news titles from the website URL provided below.</p> <p>URL: &quot;https://www.todayonline.com/&quot;</p> <p>These are the two methods I have tried but failed.</p> <h1>Method 1: Beautiful Soup</h1> <pre><code>tdy_url = &quot;https://www.todayonline.com/&quot; page = requests.get(tdy_url).text soup = BeautifulSoup(page) soup  # Returns me a HTML with javascript text soup.find_all('h3')  ### Returns me empty list [] </code></pre> <h1>Method 2: Selenium + BeautifulSoup</h1> <pre><code>tdy_url = &quot;https://www.todayonline.com/&quot;  options = Options() options.headless = True  driver = webdriver.Chrome(&quot;chromedriver&quot;,options=options)  driver.get(tdy_url) time.sleep(10) html = driver.page_source  soup = BeautifulSoup(html) soup.find_all('h3')  ### Returns me only less than 1/4 of the 'h3' tags found in the original page source  </code></pre> <p>Please help. I have tried scraping other news websites and it is so much easier. Thank you.</p>"	2020-09-06 08:03:20.947 UTC	63762428	"<p>The news data on the website you are trying to scrape is fetched from the server using JavaScript (this is called <a href=""https://en.wikipedia.org/wiki/XMLHttpRequest"" rel=""nofollow noreferrer"">XHR -- XMLHttpRequest</a>). It is happening dynamically, while the page is loading or being scrolled. so this data is not returned inside the page returned by the server.</p> <p>In the first example, you are getting only the page returned by the server -- without the news, but with JS that is supposed to get them. Neither requests nor BeautifulSoup can execute JS.</p> <p>However, you can try to reproduce requests that are getting news titles from the server with Python requests. Do the following steps:</p> <ol> <li>Open DevTools of your browser (usually you have to press <kbd>F12</kbd> or the combination of <kbd>Ctrl</kbd>+<kbd>Shift</kbd>+<kbd>I</kbd> for that), and take a look at requests that are getting news titles from the server. Sometimes, it is even easier than web scraping with BeautifulSoup. Here is a screenshot (Firefox): <a href=""https://i.stack.imgur.com/2T2I9.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/2T2I9.png"" alt=""Screenshot (Firefox)"" /></a></li> </ol> <ol start=""2""> <li><p>Copy the request link (right-click -&gt; Copy -&gt; Copy link), and pass it to <code>requests.get(...)</code>.</p> </li> <li><p>Get <code>.json()</code> of the request. It will return a dict that is easy to work with. To better understand the structure of the dict, I would recommend to use <code>pprint</code> instead of simple print. Note you have to do <code>from pprint import pprint</code> before using it.</p> </li> </ol> <p>Here is an example of the code that gets the titles from the main news on the page:</p> <pre><code>import requests   nodes = requests.get(&quot;https://www.todayonline.com/api/v3/news_feed/7&quot;)\         .json()[&quot;nodes&quot;] for node in nodes:     print(node[&quot;node&quot;][&quot;title&quot;]) </code></pre> <p>If you want to scrape a group of news under caption, you need to change the number after <code>news_feed/</code> in the request URL (to get it, you just need to filter the requests by &quot;news_feed&quot; in the DevTools and scroll the news page down).</p> <p>Sometimes web sites have protection against bots (although the website you are trying to scrape doesn't). In such cases, you might need to do <a href=""https://stackoverflow.com/a/60356159/8661764"">these steps</a> as well.</p>"			2020-09-06 09:00:39.04 UTC
63775539	javascript|python|selenium|click|sendkeys	Key press with javascript python selenium	"<p>Is there a way to basically simulate key pressing from a keyboard?</p> <p>I want to click an element that's typable and then mimic what an end-user would do to type, by pressing keys. I don't want to give any XPath and then use sendkeys or anything.</p> <p>Bascially element.click() -&gt; keypressing, I'm pretty sure selenium has no option for this that's why I'm turning to js. Does anyone know if something like this is possible?</p> <p>EDIT: The test is done on a webpage</p> <p>Can this be done?</p>"	2020-09-07 10:12:17.633 UTC	63778835	"<p>First, you'll need to obtain the element (use XPath or CSS_Selector).</p> <p>You can accomplish this with <a href=""https://www.selenium.dev/selenium/docs/api/py/webdriver/selenium.webdriver.common.action_chains.html"" rel=""nofollow noreferrer""><code>ActionChains</code></a> for instance if you want to copy/paste text use CTRL+'c' then CTRL+'v':</p> <pre><code>from selenium import webdriver from selenium.webdriver.common.action_chains import ActionChains from selenium.webdriver.common.keys import Keys  driver = webdriver.Chrome()  driver.get('http://example.com') element = driver.find_element_by_xpath('the/xpath')  ActionChains(driver).move_to_element(element).click(element).key_down(Keys.CONTROL).send_keys('v').key_up(Keys.CONTROL).perform() </code></pre> <p>Or you can use <a href=""https://www.selenium.dev/selenium/docs/api/py/webdriver/selenium.webdriver.common.action_chains.html#selenium.webdriver.common.action_chains.ActionChains.send_keys"" rel=""nofollow noreferrer""><code>ActionChains().send_keys()</code></a></p>"			2020-09-07 13:45:02.037 UTC
63801426	python|web-scraping	Scraping a js based website for a javascript generated .csv download from python	"<p>I try to scrape a ajax/js based website for a .csv download.</p> <p>If I visit the site in a browser, I need to click a button that calls a js function &quot;downloadChartCSV()&quot;. <strong>This function generates and downloads a .csv file.</strong>  That the file I'm after.</p> <p>How can I automate this?</p> <p>I have tried:</p> <ul> <li>requests-html, which can login and render the page, but I miss an option to call that onClick event. There seems to be an open issue about exactly this: <a href=""https://github.com/psf/requests-html/issues/355"" rel=""nofollow noreferrer"">Github Issue</a></li> <li>Selenium which probably works, but I don't want a full browser that is flashing up.</li> </ul>"	2020-09-08 20:54:11.493 UTC	63801522	"<p>If you want to have the functionality of Selenium, but don't want a full browser flashing up: Use the PhantomJS Driver.</p> <p><a href=""https://realpython.com/headless-selenium-testing-with-python-and-phantomjs/"" rel=""nofollow noreferrer"">https://realpython.com/headless-selenium-testing-with-python-and-phantomjs/</a></p> <p>This is a very good Introduction into it.</p>"			2020-09-08 21:02:34.107 UTC
63862466	javascript|python|jquery	How can my Python code obtain a value located inside a text/javascript <script> from a website?	"<p>I'm trying to get some value between brackets within <code>text/javascript</code> source. I've documented myself on how to do so, but couldn't really find a solution using Regex, although I think its the easiest way out. Here's the source:</p> <pre class=""lang-js prettyprint-override""><code>$(document).ajaxSend(function (event, jqxhr, settings) {     if (settings.type == &quot;POST&quot;) {         jqxhr.setRequestHeader(&quot;ReqVerToken&quot;, &quot;jqJ8-Xt4Bw88FWgzXk3HAykj79URgq8NgOSDrCXVZvoANhsiFZ9vSKqf8tC6iNxYEyh9y8GEl1Rsi4flYt2VEDWaixv0G16-GZcPqG_u8Yg1:ATFdoJkWCB8hcQtGRZGP498E5OksSmSbc96WlKnX7rmxhKQDkrkpVEMd1lLos5wOC8IeWZ13hEhYltp3kNRdie3mrh11upWaO7104A3Hojk1&quot;);     } }); </code></pre> <p>Basically, I want to reach to ReVerToken's value, so that later I can log into interested website. The website is using some sort of CSRF token, which in this case, is the ReVerToken.</p>"	2020-09-12 16:26:46.59 UTC	63862744	"<p>Assuming <code>setRequestHeader</code> is always used and the <code>&quot;</code>-char is not allowed in the token:</p> <pre><code>import re match = re.search(r'setRequestHeader\(\s*&quot;(\w+)&quot;\s*,\s*&quot;([^&quot;]+)', js_string) name = match[1] # ReqVerToken token = match[2] # jqJ8-Xt4Bw88FWgzXk3HAykj79URgq8NgO..... </code></pre>"			2020-09-12 16:55:01.05 UTC
63863039	javascript|python|authentication|python-requests	How to send a HTTPS POST request to a JavaScript created login form using Python?	"<p>How can I send a POST request to login to a website using the requests library? The main url does not contain any login forms, but when clicked on a button a form appears (which I think is done via JavaScript)</p>"	2020-09-12 17:27:58.633 UTC	63863110	"<p>If you're using the requests library you have to find the post request action URL then send the user and pass credentials accordingly</p> <pre><code>payload = {'nameOfUserNameInput': 'USERNAME', 'nameOfPasswordInput': 'PASSWORD'} url = 'http://www.example.com/action_url' requests.post(url, data=payload) </code></pre>"			2020-09-12 17:35:01.39 UTC
63904810	javascript|python|html|svg|cloudflare-workers	Python Code in a JavaScript running on a Cloudflare Worker	"<p>I am building a worker that displays an <code>svg</code> file that is generated using a python code <code>triangles.py</code>. In this python code, I have a function:</p> <pre class=""lang-py prettyprint-override""><code>getSVGCode(vw, vh):     ⋮     callingOtherFunction(inThisFile)     ⋮     return svgCode </code></pre> <p>This function needs to be called from a javascript that is running on Cloudflare Workers (using their method given below). The svgCode is inserted into the <code>html</code> string that the javascript returns to the browser.</p> <pre class=""lang-js prettyprint-override""><code>const html = `&lt;!DOCTYPE html&gt; &lt;body&gt;   &lt;h1&gt;Hello World&lt;/h1&gt;    &lt;svg&gt;My svg here&lt;/svg&gt;    &lt;p&gt;This markup was generated by a Cloudflare Worker.&lt;/p&gt; &lt;/body&gt;`  async function handleRequest(request) {   return new Response(html, {     headers: {       &quot;content-type&quot;: &quot;text/html;charset=UTF-8&quot;,     },   }) }  addEventListener(&quot;fetch&quot;, event =&gt; {   return event.respondWith(handleRequest(event.request)) }) </code></pre> <p>So, I want to know a way to get the Javascript code to pass the viewport dimensions (<code>vh</code> and <code>vw</code>) to the python function so that the svg can be generated using this size. If this option is not possible, I will have to resize the svg which can look stretched. I also want to know how to make the Worker run the python code from javascript too.</p> <p>I am a beginner at coding, and javascript especially. Please include full information so that I can understand your answers. Thanks!</p>"	2020-09-15 15:11:42.597 UTC	68747938	"<p>So, I figured I can use <code>&lt;script&gt;&lt;/script&gt;</code> inside the <code>html</code> variable. I used something like the following.</p> <pre class=""lang-html prettyprint-override""><code>&lt;script&gt;     const vw = document.documentElement.clientWidth;     const vh = document.documentElement.clientHeight;     var svgHref = &quot;https://your.url.here/using?height=vh&amp;ampwidth=vw&quot;;     document.getElementById(&quot;triangles-svg&quot;).src = svgHref; &lt;/script&gt; </code></pre> <p>This was accompanied by a body with,</p> <pre class=""lang-html prettyprint-override""><code>&lt;body&gt;     &lt;img id=&quot;triangles-svg&quot;&gt; &lt;/body&gt; </code></pre> <p>Viola. :)</p>"			2021-08-11 19:32:23.8 UTC
63954507	javascript	pythonic Nested default dictionary in javascript	"<p>I want to implement a nested default dictionary in javascript, so I can go</p> <p><code>nest['first']['second']['third'] = 'yay'</code> without having to check or initialize <code>nest['first']</code> &amp; <code>nest['first']['second']</code></p> <p>In python, this is pretty easy</p> <pre><code>nested = defaultDict(lambda: deafultDict(dict())) </code></pre> <p>I tried to implement the same in javascript using Proxy. The results were not as expected and I can't figure out what I'm missing. From the last logline, it looks like the same default dictionary is being passed around as a reference. How can I avoid this and make it work as expected?</p> <pre class=""lang-js prettyprint-override""><code>function defaultDict (defaultValue) {   const handler = {     get: (obj, prop) =&gt; {       return prop in obj ? obj[prop] : defaultValue     }   }   return new Proxy({}, handler) }  var nested = defaultDict(defaultDict({}))  nested['first']['second']['third'] = 'yay'  console.log(nested['first']['second']['third']) // yay  OK console.log(nested['first']['second']) // {third: 'yay'} OK  console.log(nested['first']) // result: {} expected {second: {third: 'yay'}}  console.log(nested['none']['gggggggggggg']) // result: {third: 'yay'} expected: {} </code></pre> <p>thanks!</p>"	2020-09-18 11:02:03.677 UTC	63954561	"<p>To achieve an arbitrarily deep autovivifying object, you'll want something like</p> <pre><code>function defaultDict(defaultValueFn) {   const handler = {     get: (obj, prop) =&gt; {       if(!(prop in obj)) obj[prop] = defaultValueFn();       return obj[prop];     },     };   return new Proxy({}, handler); }  var nestedDefaultDict = () =&gt; defaultDict(nestedDefaultDict); var nested = nestedDefaultDict();  nested.a.b.c = 8; nested.d.e.f = 8; console.log(nested); // { a: { b: { c: 8 } }, d: { e: { f: 8 } } } </code></pre> <p>, that is just like in the Python <code>defaultdict</code>, you pass in a callable that returns the nested object, not the object itself.</p>"			2020-09-18 11:05:36.737 UTC
63956127	javascript|python|jquery|flask|signals	Javascript client page dont catch Python Flask emit signal	"<p>in my project on event &quot;CONNECT&quot; i emit many signals:</p> <pre><code>@sock.on( &quot;connect&quot; ) def connectHandler():     logger.info(&quot;User logged&quot;)      for k, v in mapMsg: #mapMsg is a map of msg         msg = v.getValuesToString()  #msg is a string         sock.emit( 'ActionPending', {'data': msg}, namespace=&quot;/test&quot; ) </code></pre> <p>in index.html:</p> <pre><code>{% extends 'base.html' %} {% block scripts %}     &lt;script src=&quot;//code.jquery.com/jquery-1.12.4.min.js&quot; integrity=&quot;sha256-ZosEbRLbNQzLpnKIkEdrPv7lOy9C27hHQ+Xp8a4MxAQ=&quot; crossorigin=&quot;anonymous&quot;&gt;&lt;/script&gt;     &lt;script src=&quot;//cdnjs.cloudflare.com/ajax/libs/socket.io/2.2.0/socket.io.js&quot; integrity=&quot;sha256-yr4fRk/GU1ehYJPAs8P4JlTgu0Hdsp4ZKrx8bDEDC3I=&quot; crossorigin=&quot;anonymous&quot;&gt;&lt;/script&gt;     &lt;script type=&quot;text/javascript&quot; charset=&quot;utf-8&quot;&gt;         $(document).ready(function() {             namespace = '/test'             var socket = io(namespace);              socket.on('connect', function() {                 console.log('CONNECT EVENT'); //&lt;-- I READ THIS ON CONSOLE!             });          var d=0;         socket.on('ActionPending', function(msg) {             console.log(&quot;Sono qui con msg: &quot;+msg)  //&lt;--this i dont view!            if (d &gt; 3 ){                 $('#log4').empty()                d=0;            }            $('#log4').append('&lt;br&gt;' + $('&lt;div/&gt;').text('ActionPending: ' + msg.data).html());            d++;             //if (cb)                 //cb();         });      &lt;dt&gt;&lt;h3&gt;ActionPending:&lt;/h3&gt;&lt;/dt&gt;     &lt;dd&gt;&lt;div id=&quot;log4&quot;&gt;&lt;/div&gt;&lt;/dd&gt; </code></pre> <p>I view always CONNECT EVENT on connect event. But i dont view msg object. Some Tips? thanks Regards</p>"	2020-09-18 12:49:59.467 UTC	63957065	"<p>Besides missing a few semi-colons and var declarations, you're missing closing brackets for your document.ready function and a closing script tag.</p> <p>The issue that you're having is because the variable 'socket' is in the namespace of the anonymous function being called on document.ready.</p> <p>The 'ActionPending' socket event is defined outside of the document.ready function. If you adjust the code so that the 'ActionPending' event is also within the document.ready function, your code should work as intended</p> <pre><code>{% extends 'base.html' %} {% block scripts %}     &lt;script src=&quot;//code.jquery.com/jquery-1.12.4.min.js&quot; integrity=&quot;sha256-ZosEbRLbNQzLpnKIkEdrPv7lOy9C27hHQ+Xp8a4MxAQ=&quot; crossorigin=&quot;anonymous&quot;&gt;&lt;/script&gt;     &lt;script src=&quot;//cdnjs.cloudflare.com/ajax/libs/socket.io/2.2.0/socket.io.js&quot; integrity=&quot;sha256-yr4fRk/GU1ehYJPAs8P4JlTgu0Hdsp4ZKrx8bDEDC3I=&quot; crossorigin=&quot;anonymous&quot;&gt;&lt;/script&gt;     &lt;script type=&quot;text/javascript&quot; charset=&quot;utf-8&quot;&gt;     $(document).ready(function() {         var namespace = '/test';         var socket = io(namespace);          socket.on('connect', function() {             console.log('CONNECT EVENT'); //&lt;-- I READ THIS ON CONSOLE!         });          var d=0;         socket.on('ActionPending', function(msg) {             console.log(&quot;Sono qui con msg: &quot;+msg);  //&lt;--this i dont view!             if (d &gt; 3 ){                 $('#log4').empty();                 d=0;             }             $('#log4').append('&lt;br&gt;' + $('&lt;div/&gt;').text('ActionPending: ' + msg.data).html());             d++;             //if (cb)                 //cb();         });     });     &lt;/script&gt;     &lt;dt&gt;&lt;h3&gt;ActionPending:&lt;/h3&gt;&lt;/dt&gt;     &lt;dd&gt;&lt;div id=&quot;log4&quot;&gt;&lt;/div&gt;&lt;/dd&gt; </code></pre>"			2020-09-18 13:50:47.337 UTC
63981396	javascript|python|selenium|selenium-webdriver|setattribute	How to convert selenium python script in to Selenium Javascript	"<pre><code>element = WebDriverWait(driver, 20).until(EC.element_to_be_clickable((By.XPATH, &quot;//div[@class='notranslate public-DraftEditor-content' and @role='textbox']&quot;))).send_keys(&quot;This is auto message example.&quot;) </code></pre> <p>Hello, I would like to ask if this can be converted into javascript because I have the whole bot already typed in javascript and only this needs to be converted from selenium python to javascript. Is it possible or do I have to write the whole javascript into selenium?</p>"	2020-09-20 16:47:02.71 UTC	63981608	"<p>To convert the line of code from <a href=""/questions/tagged/python"" class=""post-tag"" title=""show questions tagged &#39;python&#39;"" rel=""tag"">python</a> to <a href=""/questions/tagged/javascript"" class=""post-tag"" title=""show questions tagged &#39;javascript&#39;"" rel=""tag"">javascript</a> notation, you can use the <strong><code>setAttribute()</code></strong> method and you can use either of the following solutions:</p> <ul> <li><p>Using <a href=""https://developer.mozilla.org/en-US/docs/Web/API/Element/setAttribute"" rel=""nofollow noreferrer""><code>setAttribute()</code></a> and <code>innerHTML</code>:</p> <pre><code>element = WebDriverWait(driver, 20).until(EC.element_to_be_clickable((By.XPATH, &quot;//div[@class='notranslate public-DraftEditor-content' and @role='textbox']&quot;))) driver.execute_script(&quot;arguments[0].setAttribute('innerHTML','This is auto message example.')&quot;, element) </code></pre> </li> <li><p>Using <a href=""https://www.w3schools.com/jsref/met_element_setattribute.asp"" rel=""nofollow noreferrer""><code>setAttribute()</code></a> and <code>textContext</code>:</p> <pre><code>element = WebDriverWait(driver, 20).until(EC.element_to_be_clickable((By.XPATH, &quot;//div[@class='notranslate public-DraftEditor-content' and @role='textbox']&quot;))) driver.execute_script(&quot;arguments[0].setAttribute('textContext','This is auto message example.')&quot;, element) </code></pre> </li> </ul> <hr /> <h2>Reference</h2> <p>You can find a couple of relevant discussions in:</p> <ul> <li><a href=""https://stackoverflow.com/questions/63818820/is-there-a-way-to-add-a-new-attribute-with-a-value-to-an-element-using-selenium/63820053#63820053"">Is there a way to add a new attribute with a value to an element using selenium python?</a></li> <li><a href=""https://stackoverflow.com/questions/60406498/selenium-datepicker-using-javascriptexecutor/60409690#60409690"">Selenium Datepicker using JavascriptExecutor</a></li> </ul>"			2020-09-20 17:09:29.577 UTC
63983831	javascript|python|selenium	Missing error after argument list - Selenium Python (executing Javascript)	"<p>I've been at this for a while now, I know there are some questions along the lines of this one but I cannot figure out where on earth my string isn't escaped correctly or needs more quotes.</p> <p>I have this line</p> <pre><code>self.driver.execute_script(&quot;$x('//div[text()=\'Find Artwork\']')[0].click()&quot;) </code></pre> <p>and this works perfectly in the console</p> <pre><code>$x('//div[text()=\'Find Artwork\']')[0].click() </code></pre> <p>However when running in Python with Selenium + Chrome webdriver I get this error</p> <pre><code>selenium.common.exceptions.JavascriptException: Message: javascript error: missing ) after argument list </code></pre> <p>Unsure quite what to do here. I've tried double quotes, escaping, everything.</p> <p>Thanks!</p>"	2020-09-20 21:26:26.437 UTC	63988164	"<p><code>$x</code> is not part of JavaScript, but just a utility in cosole of firefox and chrome.</p> <p>See <a href=""https://stackoverflow.com/questions/10661949/what-is-the-variable-x-used-for-in-chrome"">this question</a>.</p> <p>You can try something like this:</p> <pre class=""lang-py prettyprint-override""><code>javaScript = &quot;document.getElementsById('username')[0].click();&quot; driver.execute_script(javaScript)  //or  driver.execute_script(&quot;arguments[0].click()&quot;, element); </code></pre>"			2020-09-21 07:52:46.003 UTC
63984807	javascript|python|eel	Python Eel - Javascript running prematurely	"<p>I am trying to learn to use the Python eel library. Specifically, I am attempting to call a Python function by clicking a button (that runs a JavaScript function).</p> <p>In my folder I have four files, arranged like this:</p> <pre><code>| +--- main.py | +--- web-gui      |      +--- index.html      |      +--- main.js      |      +--- style.css </code></pre> <p>Here is my <code>main.py</code>:</p> <pre class=""lang-py prettyprint-override""><code># Start GUI using eel  import eel  eel.init('web-gui') eel.start('index.html', size=(1440, 900), block=False)  # Boolean data from javascript (true or false) is given to python  result = eel.js_startPython()()  print('Javascript says hello! Your result is', bool(result))  </code></pre> <p>Here is my <code>main.js</code>:</p> <pre class=""lang-js prettyprint-override""><code>// Javascript passes data to Python when button is pushed  document.getElementById(&quot;data&quot;).addEventListener(&quot;click&quot;, js_startPython);  eel.expose(js_startPython); // Expose this function to Python function js_startPython() {     console.log('successful button click')     return result = true;     }  </code></pre> <p>And here is my <code>index.html</code>:</p> <pre class=""lang-html prettyprint-override""><code>&lt;!DOCTYPE html&gt; &lt;html lang=&quot;en&quot;&gt; &lt;head&gt;     &lt;meta charset=&quot;UTF-8&quot;&gt;     &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;     &lt;title&gt;Python Decider&lt;/title&gt;     &lt;link rel=&quot;stylesheet&quot; href=&quot;style.css&quot;&gt;      &lt;/head&gt; &lt;body&gt;      &lt;div class=&quot;container&quot;&gt;         &lt;div class=&quot;text&quot;&gt;             &lt;h1&gt;                 The Python Decider             &lt;/h1&gt;             &lt;p&gt;                 Have a yes/no question? Click on the button to find out your answer.             &lt;/p&gt;         &lt;/div&gt;         &lt;div class=&quot;button&quot;&gt;             &lt;div class=&quot;flex align-midde align-center&quot;&gt;                 &lt;a class=&quot;button glow-button&quot; href=&quot;#&quot; id=&quot;data&quot;&gt;Click me!&lt;/a&gt;             &lt;/div&gt;         &lt;/div&gt;     &lt;/div&gt;          &lt;script type=&quot;text/javascript&quot; src=&quot;/eel.js&quot;&gt;&lt;/script&gt;     &lt;script type=&quot;text/javascript&quot; src=&quot;main.js&quot;&gt;&lt;/script&gt;      &lt;/body&gt; &lt;/html&gt; </code></pre> <p>I expect that, when I <em>press</em> the button, python console will return this:</p> <pre class=""lang-py prettyprint-override""><code>&gt;&gt;&gt; Javascript says hello! Your result is True </code></pre> <p>My current issue is that the JavaScript code is running <em>without</em> being called. Without pressing anything, it displays</p> <pre class=""lang-py prettyprint-override""><code>&gt;&gt;&gt; Javascript says hello! Your result is True # before button is even pressed </code></pre> <p>Sorry about the really long post. I appreciate any answers. I also apologize if this question has already been asked on SO, but I'm pretty sure it hasn't been.</p>"	2020-09-21 00:19:28.607 UTC	64643957	"<p>Your understanding of how Eel interacts with JS is wrong. Currently, your Python code is calling <code>js_startPython()</code> after <code>eel.start()</code>. The <code>eel.expose(js_startPython)</code> function exposes the JS function to Python, what you want to do is expose a Python function to your JS, using the decorator functions <code>@eel.expose</code>:</p> <p><strong>Python</strong></p> <pre><code>@eel.expose def py_startJavaScript(result):     print('Javascript says hello! Your result is', bool(result)) </code></pre> <p><strong>JavaScript</strong></p> <pre><code>document.getElementById(&quot;data&quot;).addEventListener(&quot;click&quot;, eel.js_startPython(true)); </code></pre> <p>I also noticed that you have <code>block=False</code> on your <code>eel.start()</code>, which means that eel will stop after that line. You can avoid that by adding the following underneath:</p> <pre><code>while True:     eel.sleep(10) </code></pre>"			2020-11-02 10:39:33.143 UTC
63990454	javascript|python|html	Scraping javascript website and script tags using python	"<p>I am trying to scrape a javascript web page. Having read some of the posts I managed to write the following:</p> <pre><code>from bs4 import BeautifulSoup import requests website_url = requests.get('https://ec.europa.eu/health/documents/community-register/html/reg_hum_atc.htm').text soup= BeautifulSoup(website_url,'lxml') print(soup.prettify()) </code></pre> <p>and recover the following scripts as follows:</p> <pre><code>soup.find_all('script')[3] </code></pre> <p>which gives:</p> <pre><code>&lt;script type=&quot;text/javascript&quot;&gt;             // Initialize script parameters.             var exportTitle =&quot;Centralised medicinal products for human use by ATC code&quot;;              // Initialise the dataset.             var dataSet = [ {&quot;id&quot;:&quot;A&quot;,&quot;parent&quot;:&quot;#&quot;,&quot;text&quot;:&quot;A - Alimentary tract and metabolism&quot;}, {&quot;id&quot;:&quot;A02&quot;,&quot;parent&quot;:&quot;A&quot;,&quot;text&quot;:&quot;A02 - Drugs for acid related disorders&quot;}, {&quot;id&quot;:&quot;A02B&quot;,&quot;parent&quot;:&quot;A02&quot;,&quot;text&quot;:&quot;A02B - Drugs for treatment of peptic ulcer&quot;}, {&quot;id&quot;:&quot;A02BC&quot;,&quot;parent&quot;:&quot;A02B&quot;,&quot;text&quot;:&quot;A02BC - Proton pump inhibitors&quot;}, {&quot;id&quot;:&quot;A02BC01&quot;,&quot;parent&quot;:&quot;A02BC&quot;,&quot;text&quot;:&quot;A02BC01 - omeprazole&quot;}, {&quot;id&quot;:&quot;ho15861&quot;,&quot;parent&quot;:&quot;A02BC01&quot;,&quot;text&quot;:&quot;Losec and associated names (referral)&quot;,&quot;type&quot;:&quot;pl&quot;}, ... {&quot;id&quot;:&quot;h154&quot;,&quot;parent&quot;:&quot;V09IA05&quot;,&quot;text&quot;:&quot;NeoSpect (withdrawn)&quot;,&quot;type&quot;:&quot;pl&quot;}, {&quot;id&quot;:&quot;V09IA09&quot;,&quot;parent&quot;:&quot;V09IA&quot;,&quot;text&quot;:&quot;V09IA09 - technetium (&lt;sup&gt;99m&lt;/sup&gt;Tc) tilmanocept&quot;}, {&quot;id&quot;:&quot;h955&quot;,&quot;parent&quot;:&quot;V09IA09&quot;,&quot;text&quot;:&quot;Lymphoseek (active)&quot;,&quot;type&quot;:&quot;pl&quot;}, {&quot;id&quot;:&quot;V09IB&quot;,&quot;parent&quot;:&quot;V09I&quot;,&quot;text&quot;:&quot;V09IB - Indium (&lt;sup&gt;111&lt;/sup&gt;In) compounds&quot;}, {&quot;id&quot;:&quot;V09IB03&quot;,&quot;parent&quot;:&quot;V09IB&quot;,&quot;text&quot;:&quot;V09IB03 - indium (&lt;sup&gt;111&lt;/sup&gt;In) antiovariumcarcinoma antibody&quot;},{&quot;id&quot;:&quot;h025&quot;,&quot;parent&quot;:&quot;V09IB03&quot;,&quot;text&quot;:&quot;Indimacis 125 (withdrawn)&quot;,&quot;type&quot;:&quot;pl&quot;}, ... ]; &lt;/script&gt; </code></pre> <p>Now the problem that I am facing is to apply .text() to <code>soup.find_all('script')[3]</code> and recover a json file from that. When I try to apply .text(), the result is an empty string: ''.</p> <p>So my question is: why is that? Ideally I would like to end up with:</p> <pre><code>A02BC01 Losec and associated names (referral) ... V09IA05 NeoSpect (withdrawn) V09IA09 Lymphoseek V09IB03 Indimacis 125 (withdrawn) ... </code></pre>"	2020-09-21 10:26:24.747 UTC	63992027	"<p>Firstly, you get the text and after that, some string processing - get all the text after 'dataSet = ' and remove the last ';' to have a beautiful JSON array. At the end to process the JSON array in small jsons and print the data.</p> <pre><code>data = soup.find_all(&quot;script&quot;)[3].string dataJson = data.split('dataSet = ')[1].split(';')[0] jsonArray = json.loads(dataJson) for jsonElement in jsonArray:     print(jsonElement['parent'], end=' ')     print(jsonElement['text']) </code></pre>"			2020-09-21 12:09:52.243 UTC
63997626	python|json|web-scraping	Python Text/Javascript How to get Json Data?	"<p>I try to scrape a website but I stuck, I can't get Barcode number. Please help me.</p> <p>I want to get from this data &quot;&quot;&quot; &quot;barkod&quot;:&quot;3086123570955&quot; &quot;&quot;&quot;. I need get (3086123570955).</p> <p>My Data:</p> <pre><code>//&lt;![CDATA[ globalModel.isiosDevice = false;                                              globalModel.isAndroidDevice = false;                                              globalModel.urlReferrer = 'https://www.gencayofis.com/Arama';                                              globalModel.pageUrl = 'www.gencayofis.com/bic-bodymark-gecici-dovme-kalemi-acik-mavi-pembe-mor-3-lu-blister-5226';                                              if (typeof globalModel.member == 'undefined') { globalModel.member = {&quot;memberId&quot;:0,&quot;memberName&quot;:null,&quot;memberEMail&quot;:null,&quot;memberCity&quot;:null,&quot;memberProvince&quot;:null,&quot;memberCountry&quot;:null,&quot;memberCountryCode&quot;:null,&quot;memberGender&quot;:0,&quot;membershipDate&quot;:&quot;0001-01-01T00:00:00&quot;,&quot;memberLastLoginDate&quot;:&quot;0001-01-01T00:00:00&quot;,&quot;memberRole&quot;:null,&quot;moneyPoints&quot;:0,&quot;memberType&quot;:null,&quot;isMember&quot;:true,&quot;priceType&quot;:0,&quot;emailPermit&quot;:false,&quot;smsPermit&quot;:false}; }                                             var numFormatDefaults = {currencySymbol : '₺',currencySymbolLocation:0,decimalChar:',',decimalPlaces:2};                                             siteSettings.isAuthenticated = globalModel.isAuthenticated;                                             globalModel.searchUrl = '/Arama';var productDetailModel = {&quot;productId&quot;:5226,&quot;productName&quot;:&quot;Bic Bodymark Geçici Dövme Kalemi Açık Mavi Pembe Mor 3 lü Blister&quot;,&quot;stockCode&quot;:&quot;BICGCDV3LU0101&quot;,&quot;productShortDescription&quot;:null,&quot;productUrl&quot;:null,&quot;productIsAsorti&quot;:false,&quot;assortmentGroupId&quot;:0,&quot;productVariantData&quot;:null,&quot;products&quot;:null,&quot;moneyOrderDiscount&quot;:0,&quot;currencies&quot;:[{&quot;id&quot;:1,&quot;tanim&quot;:&quot;TL&quot;,&quot;dovizKodu&quot;:&quot;TRY&quot;,&quot;kur&quot;:1.0,&quot;aktif&quot;:true,&quot;varsayilan&quot;:true,&quot;guncellemeTarihi&quot;:&quot;2014-02-05T13:46:08&quot;,&quot;dilKodu&quot;:&quot;tr-TR&quot;,&quot;formatTanimGoster&quot;:false,&quot;simgeKonum&quot;:0,&quot;format&quot;:{&quot;formatTanimGoster&quot;:false,&quot;simge&quot;:&quot;₺&quot;,&quot;simgeKonum&quot;:0,&quot;ondalikAyraci&quot;:&quot;,&quot;,&quot;panelOndalikBasamak&quot;:4,&quot;satisOndalikBasamak&quot;:2}},{&quot;id&quot;:4,&quot;tanim&quot;:&quot;CHF&quot;,&quot;dovizKodu&quot;:&quot;CHF&quot;,&quot;kur&quot;:2.4698,&quot;aktif&quot;:false,&quot;varsayilan&quot;:false,&quot;guncellemeTarihi&quot;:&quot;2014-02-08T22:47:38&quot;,&quot;dilKodu&quot;:&quot;de-CH&quot;,&quot;formatTanimGoster&quot;:false,&quot;simgeKonum&quot;:0,&quot;format&quot;:{&quot;formatTanimGoster&quot;:false,&quot;simge&quot;:&quot;CHF&quot;,&quot;simgeKonum&quot;:0,&quot;ondalikAyraci&quot;:&quot;.&quot;,&quot;panelOndalikBasamak&quot;:4,&quot;satisOndalikBasamak&quot;:2}},{&quot;id&quot;:3,&quot;tanim&quot;:&quot;EURO&quot;,&quot;dovizKodu&quot;:&quot;EUR&quot;,&quot;kur&quot;:3.0148,&quot;aktif&quot;:true,&quot;varsayilan&quot;:false,&quot;guncellemeTarihi&quot;:&quot;2014-02-08T22:47:38&quot;,&quot;dilKodu&quot;:&quot;de-DE&quot;,&quot;formatTanimGoster&quot;:false,&quot;simgeKonum&quot;:0,&quot;format&quot;:{&quot;formatTanimGoster&quot;:false,&quot;simge&quot;:&quot;€&quot;,&quot;simgeKonum&quot;:0,&quot;ondalikAyraci&quot;:&quot;,&quot;,&quot;panelOndalikBasamak&quot;:4,&quot;satisOndalikBasamak&quot;:2}},{&quot;id&quot;:2,&quot;tanim&quot;:&quot;USD&quot;,&quot;dovizKodu&quot;:&quot;USD&quot;,&quot;kur&quot;:2.2209,&quot;aktif&quot;:true,&quot;varsayilan&quot;:false,&quot;guncellemeTarihi&quot;:&quot;2014-02-08T22:47:38&quot;,&quot;dilKodu&quot;:&quot;en-US&quot;,&quot;formatTanimGoster&quot;:false,&quot;simgeKonum&quot;:0,&quot;format&quot;:{&quot;formatTanimGoster&quot;:false,&quot;simge&quot;:&quot;$&quot;,&quot;simgeKonum&quot;:0,&quot;ondalikAyraci&quot;:&quot;.&quot;,&quot;panelOndalikBasamak&quot;:4,&quot;satisOndalikBasamak&quot;:2}}],&quot;productPrice&quot;:55.2106,&quot;productPriceStr&quot;:&quot;65,15&quot;,&quot;productPriceKDVIncluded&quot;:65.148507999999993,&quot;productCurrency&quot;:&quot;TRY&quot;,&quot;product&quot;:{&quot;id&quot;:9594,&quot;urunAdi&quot;:&quot;Bic Bodymark Geçici Dövme Kalemi Açık Mavi Pembe Mor 3 lü Blister&quot;,&quot;stokKodu&quot;:&quot;BICGCDV3LU0101&quot;,&quot;barkod&quot;:&quot;3086123570955&quot;,&quot;stokAdedi&quot;:99.0,&quot;eksiStokAdedi&quot;:0.0,&quot;satisFiyati&quot;:108.079,&quot;indirimliFiyati&quot;:55.2106,&quot;satisKDV&quot;:19.45422,&quot;indirimliKDV&quot;:9.937908,&quot;kdvOrani&quot;:18,&quot;kdvDahil&quot;:true,&quot;paraBirimiId&quot;:1,&quot;kargoAgirligi&quot;:0.0,&quot;kargoUcreti&quot;:0.0,&quot;urunKartiId&quot;:5226,&quot;aktif&quot;:true,&quot;anaUrun&quot;:true,&quot;spotResimAdi&quot;:&quot;bic-bodymark-gecici-dovme-kalemi-acik-ma-9053.jpg&quot;,&quot;spotResimThumbYolu&quot;:&quot;/Uploads/UrunResimleri/Thumb/bic-bodymark-gecici-dovme-kalemi-acik-ma-9053.jpg&quot;,&quot;spotResimYolu&quot;:&quot;/Uploads/UrunResimleri/bic-bodymark-gecici-dovme-kalemi-acik-ma-9053.jpg&quot;,&quot;spotResimBuyukYolu&quot;:&quot;/Uploads/UrunResimleri/buyuk/bic-bodymark-gecici-dovme-kalemi-acik-ma-9053.jpg&quot;,&quot;tedarikciKodu&quot;:&quot;BICGCDV3LU0101&quot;,&quot;paraBirimi&quot;:&quot;TRY&quot;,&quot;paraBirimiKodu&quot;:&quot;TRY&quot;,&quot;paraBirimiDilKodu&quot;:&quot;tr-TR&quot;,&quot;urunSepetFiyati&quot;:55.2106,&quot;urunSepetFiyatiKDV&quot;:9.937908,&quot;urunFiyatiOrjinal&quot;:55.2106,&quot;urunFiyatiOrjinalKDV&quot;:9.937908,&quot;urunFiyatiOrjinalKurHaric&quot;:55.2106,&quot;urunFiyatiOrjinalKDVKurHaric&quot;:9.937908,&quot;indirimOrani&quot;:49,&quot;ekSecenekOzellik&quot;:null,&quot;ekSecenekOzellikDetay&quot;:null,&quot;ekSecenekOzellikDetayIDs&quot;:null,&quot;urunAdediOndalikliSayiGirilebilir&quot;:false,&quot;urunAdediMinimumDeger&quot;:1.0,&quot;urunAdediVarsayilanDeger&quot;:1.0,&quot;urunAdediKademeDeger&quot;:1.0,&quot;uyeAlimMin&quot;:1.0,&quot;uyeAlimMaks&quot;:999999.0,&quot;resimler&quot;:null,&quot;urunKampanyaAktif&quot;:false,&quot;urunKampanyaAdet&quot;:0,&quot;urunKampanyaUrunFiyat&quot;:0.0,&quot;urunKampanyaSepetTutari&quot;:0.0,&quot;urunKampanyaKosulsuzEklenebilir&quot;:true,&quot;urunKampanyaNormalFiyatKullan&quot;:false,&quot;satisFiyatiStr&quot;:&quot;₺127,53&quot;,&quot;indirimliFiyatiStr&quot;:&quot;₺65,15&quot;,&quot;urunFiyatiOrjinalStr&quot;:&quot;₺65,15&quot;,&quot;urunSepetFiyatiStr&quot;:&quot;₺65,15&quot;,&quot;urunFiyatiOrjinalKurHaricStr&quot;:&quot;₺65,15&quot;,&quot;tahminiTeslimSuresi&quot;:0,&quot;tahminiTeslimSuresiTarihi&quot;:&quot;21 Eylül 2020 Pazartesi&quot;,&quot;tahminiTeslimSuresiGoster&quot;:false,&quot;tahminiTeslimSuresiAyniGun&quot;:false},&quot;productPayAtTheDoorPrice&quot;:10.0,&quot;productPayAtTheDoorWithCardPrice&quot;:0.0,&quot;openCartPopup&quot;:true,&quot;rating&quot;:0,&quot;maxInstallment&quot;:1,&quot;productFileUploadActive&quot;:false,&quot;productFileUploadIsRequire&quot;:false,&quot;productFileUploadMaxSize&quot;:0,&quot;productCombineActive&quot;:false,&quot;productCombineType&quot;:-1,&quot;productCategoryId&quot;:24,&quot;salesUnit&quot;:&quot;&quot;,&quot;brandName&quot;:&quot;BİC&quot;,&quot;mainVariantId&quot;:9594,&quot;totalStockAmount&quot;:99.0,&quot;productCombinePurchase&quot;:false,&quot;productCombineBulkPurchase&quot;:false,&quot;formId&quot;:0,&quot;videoSettings&quot;:{&quot;videoLink&quot;:&quot;&quot;,&quot;videoTagTipi&quot;:&quot;video&quot;,&quot;urunListedeGoster&quot;:false,&quot;otomatikOynat&quot;:false,&quot;videoSesAktif&quot;:false,&quot;tumKontrolleriGoster&quot;:false,&quot;urunDetayVideoAyar&quot;:{&quot;videoYenidenBaslasin&quot;:true,&quot;videoSesAktif&quot;:false,&quot;tumKontrolleriGoster&quot;:false,&quot;otomatikOynat&quot;:false,&quot;ilkSiradaGoster&quot;:true}},&quot;dynamicForm&quot;:null,&quot;memberCriticalStock&quot;:1,&quot;productActive&quot;:true,&quot;productDesingSetting&quot;:{&quot;active&quot;:false,&quot;desingIdType&quot;:0,&quot;pitchPrintDesingId&quot;:null},&quot;is3dImageActive&quot;:false,&quot;indirimOraniGoster&quot;:true,&quot;fiyatGoster&quot;:true,&quot;showVatIncludedPrice&quot;:false,&quot;showLocalPrice&quot;:false,&quot;productImages&quot;:[{&quot;id&quot;:286329,&quot;imageName&quot;:&quot;bic-bodymark-gecici-dovme-kalemi-acik-ma-9053.jpg&quot;,&quot;bigImagePath&quot;:&quot;/Uploads/UrunResimleri/buyuk/bic-bodymark-gecici-dovme-kalemi-acik-ma-9053.jpg&quot;,&quot;thumbImagePath&quot;:&quot;/Uploads/UrunResimleri/thumb/bic-bodymark-gecici-dovme-kalemi-acik-ma-9053.jpg&quot;,&quot;imageType&quot;:1,&quot;imagePath&quot;:&quot;/Uploads/UrunResimleri/bic-bodymark-gecici-dovme-kalemi-acik-ma-9053.jpg&quot;,&quot;imageOrder&quot;:1,&quot;threeDImageFolder&quot;:&quot;&quot;,&quot;variantId&quot;:0,&quot;productId&quot;:5226,&quot;isShowCase&quot;:0,&quot;video&quot;:null,&quot;altTag&quot;:&quot;BİCBic Bodymark Geçici Dövme Kalemi Açık Mavi Pembe Mor 3 lü Blister&quot;,&quot;active&quot;:true,&quot;settings&quot;:{&quot;ucYuzAltmisDereceResimTipi&quot;:1,&quot;ucYuzAltmisDereceYuklenecekResimSayisi&quot;:24},&quot;socialMediaImage&quot;:false},{&quot;id&quot;:286330,&quot;imageName&quot;:&quot;bic-bodymark-gecici-dovme-kalemi-acik-ma-df04.jpg&quot;,&quot;bigImagePath&quot;:&quot;/Uploads/UrunResimleri/buyuk/bic-bodymark-gecici-dovme-kalemi-acik-ma-df04.jpg&quot;,&quot;thumbImagePath&quot;:&quot;/Uploads/UrunResimleri/thumb/bic-bodymark-gecici-dovme-kalemi-acik-ma-df04.jpg&quot;,&quot;imageType&quot;:1,&quot;imagePath&quot;:&quot;/Uploads/UrunResimleri/bic-bodymark-gecici-dovme-kalemi-acik-ma-df04.jpg&quot;,&quot;imageOrder&quot;:2,&quot;threeDImageFolder&quot;:&quot;&quot;,&quot;variantId&quot;:0,&quot;productId&quot;:5226,&quot;isShowCase&quot;:0,&quot;video&quot;:null,&quot;altTag&quot;:&quot;BİCBic Bodymark Geçici Dövme Kalemi Açık Mavi Pembe Mor 3 lü Blister&quot;,&quot;active&quot;:true,&quot;settings&quot;:{&quot;ucYuzAltmisDereceResimTipi&quot;:1,&quot;ucYuzAltmisDereceYuklenecekResimSayisi&quot;:24},&quot;socialMediaImage&quot;:false}],&quot;isSuite&quot;:false,&quot;suite&quot;:{},&quot;isIntegral&quot;:false,&quot;image360Type&quot;:1,&quot;estimatedDeliveryTimeShowType&quot;:0}; globalModel.pageType = 'productdetail';var productsModel = {&quot;pageType&quot;:3,&quot;pageName&quot;:&quot;&quot;,&quot;targetId&quot;:5226,&quot;pagingType&quot;:1,&quot;orderBy&quot;:null,&quot;orderDirection&quot;:null,&quot;showProductVideo&quot;:-1,&quot;autoPlayVideo&quot;:-1,&quot;productVariantListActive&quot;:false,&quot;filterSettings&quot;:null,&quot;urlList&quot;:[{&quot;dil&quot;:&quot;tr&quot;,&quot;sayfaAdresi&quot;:&quot;/bic-bodymark-gecici-dovme-kalemi-acik-mavi-pembe-mor-3-lu-blister-5226&quot;,&quot;seoSayfaBaslik&quot;:&quot;&quot;,&quot;seoAnahtarKelime&quot;:&quot;&quot;,&quot;seoSayfaAciklama&quot;:&quot;&quot;,&quot;seoNoIndex&quot;:false,&quot;seoNoFollow&quot;:false}]};//]]&gt; </code></pre>"	2020-09-21 17:56:50.37 UTC	63997691	"<p>You can use <code>re</code>/<code>json</code> modules to extract the data:</p> <pre><code>import re import json   s = '''//&lt;![CDATA[ globalModel.isiosDevice = false;                                              globalModel.isAndroidDevice = false;                                              globalModel.urlReferrer = 'https://www.gencayofis.com/Arama';                                              globalModel.pageUrl = 'www.gencayofis.com/bic-bodymark-gecici-dovme-kalemi-acik-mavi-pembe-mor-3-lu-blister-5226';                                              if (typeof globalModel.member == 'undefined') { globalModel.member = {&quot;memberId&quot;:0,&quot;memberName&quot;:null,&quot;memberEMail&quot;:null,&quot;memberCity&quot;:null,&quot;memberProvince&quot;:null,&quot;memberCountry&quot;:null,&quot;memberCountryCode&quot;:null,&quot;memberGender&quot;:0,&quot;membershipDate&quot;:&quot;0001-01-01T00:00:00&quot;,&quot;memberLastLoginDate&quot;:&quot;0001-01-01T00:00:00&quot;,&quot;memberRole&quot;:null,&quot;moneyPoints&quot;:0,&quot;memberType&quot;:null,&quot;isMember&quot;:true,&quot;priceType&quot;:0,&quot;emailPermit&quot;:false,&quot;smsPermit&quot;:false}; }                                             var numFormatDefaults = {currencySymbol : '₺',currencySymbolLocation:0,decimalChar:',',decimalPlaces:2};                                             siteSettings.isAuthenticated = globalModel.isAuthenticated;                                             globalModel.searchUrl = '/Arama';var productDetailModel = {&quot;productId&quot;:5226,&quot;productName&quot;:&quot;Bic Bodymark Geçici Dövme Kalemi Açık Mavi Pembe Mor 3 lü Blister&quot;,&quot;stockCode&quot;:&quot;BICGCDV3LU0101&quot;,&quot;productShortDescription&quot;:null,&quot;productUrl&quot;:null,&quot;productIsAsorti&quot;:false,&quot;assortmentGroupId&quot;:0,&quot;productVariantData&quot;:null,&quot;products&quot;:null,&quot;moneyOrderDiscount&quot;:0,&quot;currencies&quot;:[{&quot;id&quot;:1,&quot;tanim&quot;:&quot;TL&quot;,&quot;dovizKodu&quot;:&quot;TRY&quot;,&quot;kur&quot;:1.0,&quot;aktif&quot;:true,&quot;varsayilan&quot;:true,&quot;guncellemeTarihi&quot;:&quot;2014-02-05T13:46:08&quot;,&quot;dilKodu&quot;:&quot;tr-TR&quot;,&quot;formatTanimGoster&quot;:false,&quot;simgeKonum&quot;:0,&quot;format&quot;:{&quot;formatTanimGoster&quot;:false,&quot;simge&quot;:&quot;₺&quot;,&quot;simgeKonum&quot;:0,&quot;ondalikAyraci&quot;:&quot;,&quot;,&quot;panelOndalikBasamak&quot;:4,&quot;satisOndalikBasamak&quot;:2}},{&quot;id&quot;:4,&quot;tanim&quot;:&quot;CHF&quot;,&quot;dovizKodu&quot;:&quot;CHF&quot;,&quot;kur&quot;:2.4698,&quot;aktif&quot;:false,&quot;varsayilan&quot;:false,&quot;guncellemeTarihi&quot;:&quot;2014-02-08T22:47:38&quot;,&quot;dilKodu&quot;:&quot;de-CH&quot;,&quot;formatTanimGoster&quot;:false,&quot;simgeKonum&quot;:0,&quot;format&quot;:{&quot;formatTanimGoster&quot;:false,&quot;simge&quot;:&quot;CHF&quot;,&quot;simgeKonum&quot;:0,&quot;ondalikAyraci&quot;:&quot;.&quot;,&quot;panelOndalikBasamak&quot;:4,&quot;satisOndalikBasamak&quot;:2}},{&quot;id&quot;:3,&quot;tanim&quot;:&quot;EURO&quot;,&quot;dovizKodu&quot;:&quot;EUR&quot;,&quot;kur&quot;:3.0148,&quot;aktif&quot;:true,&quot;varsayilan&quot;:false,&quot;guncellemeTarihi&quot;:&quot;2014-02-08T22:47:38&quot;,&quot;dilKodu&quot;:&quot;de-DE&quot;,&quot;formatTanimGoster&quot;:false,&quot;simgeKonum&quot;:0,&quot;format&quot;:{&quot;formatTanimGoster&quot;:false,&quot;simge&quot;:&quot;€&quot;,&quot;simgeKonum&quot;:0,&quot;ondalikAyraci&quot;:&quot;,&quot;,&quot;panelOndalikBasamak&quot;:4,&quot;satisOndalikBasamak&quot;:2}},{&quot;id&quot;:2,&quot;tanim&quot;:&quot;USD&quot;,&quot;dovizKodu&quot;:&quot;USD&quot;,&quot;kur&quot;:2.2209,&quot;aktif&quot;:true,&quot;varsayilan&quot;:false,&quot;guncellemeTarihi&quot;:&quot;2014-02-08T22:47:38&quot;,&quot;dilKodu&quot;:&quot;en-US&quot;,&quot;formatTanimGoster&quot;:false,&quot;simgeKonum&quot;:0,&quot;format&quot;:{&quot;formatTanimGoster&quot;:false,&quot;simge&quot;:&quot;$&quot;,&quot;simgeKonum&quot;:0,&quot;ondalikAyraci&quot;:&quot;.&quot;,&quot;panelOndalikBasamak&quot;:4,&quot;satisOndalikBasamak&quot;:2}}],&quot;productPrice&quot;:55.2106,&quot;productPriceStr&quot;:&quot;65,15&quot;,&quot;productPriceKDVIncluded&quot;:65.148507999999993,&quot;productCurrency&quot;:&quot;TRY&quot;,&quot;product&quot;:{&quot;id&quot;:9594,&quot;urunAdi&quot;:&quot;Bic Bodymark Geçici Dövme Kalemi Açık Mavi Pembe Mor 3 lü Blister&quot;,&quot;stokKodu&quot;:&quot;BICGCDV3LU0101&quot;,&quot;barkod&quot;:&quot;3086123570955&quot;,&quot;stokAdedi&quot;:99.0,&quot;eksiStokAdedi&quot;:0.0,&quot;satisFiyati&quot;:108.079,&quot;indirimliFiyati&quot;:55.2106,&quot;satisKDV&quot;:19.45422,&quot;indirimliKDV&quot;:9.937908,&quot;kdvOrani&quot;:18,&quot;kdvDahil&quot;:true,&quot;paraBirimiId&quot;:1,&quot;kargoAgirligi&quot;:0.0,&quot;kargoUcreti&quot;:0.0,&quot;urunKartiId&quot;:5226,&quot;aktif&quot;:true,&quot;anaUrun&quot;:true,&quot;spotResimAdi&quot;:&quot;bic-bodymark-gecici-dovme-kalemi-acik-ma-9053.jpg&quot;,&quot;spotResimThumbYolu&quot;:&quot;/Uploads/UrunResimleri/Thumb/bic-bodymark-gecici-dovme-kalemi-acik-ma-9053.jpg&quot;,&quot;spotResimYolu&quot;:&quot;/Uploads/UrunResimleri/bic-bodymark-gecici-dovme-kalemi-acik-ma-9053.jpg&quot;,&quot;spotResimBuyukYolu&quot;:&quot;/Uploads/UrunResimleri/buyuk/bic-bodymark-gecici-dovme-kalemi-acik-ma-9053.jpg&quot;,&quot;tedarikciKodu&quot;:&quot;BICGCDV3LU0101&quot;,&quot;paraBirimi&quot;:&quot;TRY&quot;,&quot;paraBirimiKodu&quot;:&quot;TRY&quot;,&quot;paraBirimiDilKodu&quot;:&quot;tr-TR&quot;,&quot;urunSepetFiyati&quot;:55.2106,&quot;urunSepetFiyatiKDV&quot;:9.937908,&quot;urunFiyatiOrjinal&quot;:55.2106,&quot;urunFiyatiOrjinalKDV&quot;:9.937908,&quot;urunFiyatiOrjinalKurHaric&quot;:55.2106,&quot;urunFiyatiOrjinalKDVKurHaric&quot;:9.937908,&quot;indirimOrani&quot;:49,&quot;ekSecenekOzellik&quot;:null,&quot;ekSecenekOzellikDetay&quot;:null,&quot;ekSecenekOzellikDetayIDs&quot;:null,&quot;urunAdediOndalikliSayiGirilebilir&quot;:false,&quot;urunAdediMinimumDeger&quot;:1.0,&quot;urunAdediVarsayilanDeger&quot;:1.0,&quot;urunAdediKademeDeger&quot;:1.0,&quot;uyeAlimMin&quot;:1.0,&quot;uyeAlimMaks&quot;:999999.0,&quot;resimler&quot;:null,&quot;urunKampanyaAktif&quot;:false,&quot;urunKampanyaAdet&quot;:0,&quot;urunKampanyaUrunFiyat&quot;:0.0,&quot;urunKampanyaSepetTutari&quot;:0.0,&quot;urunKampanyaKosulsuzEklenebilir&quot;:true,&quot;urunKampanyaNormalFiyatKullan&quot;:false,&quot;satisFiyatiStr&quot;:&quot;₺127,53&quot;,&quot;indirimliFiyatiStr&quot;:&quot;₺65,15&quot;,&quot;urunFiyatiOrjinalStr&quot;:&quot;₺65,15&quot;,&quot;urunSepetFiyatiStr&quot;:&quot;₺65,15&quot;,&quot;urunFiyatiOrjinalKurHaricStr&quot;:&quot;₺65,15&quot;,&quot;tahminiTeslimSuresi&quot;:0,&quot;tahminiTeslimSuresiTarihi&quot;:&quot;21 Eylül 2020 Pazartesi&quot;,&quot;tahminiTeslimSuresiGoster&quot;:false,&quot;tahminiTeslimSuresiAyniGun&quot;:false},&quot;productPayAtTheDoorPrice&quot;:10.0,&quot;productPayAtTheDoorWithCardPrice&quot;:0.0,&quot;openCartPopup&quot;:true,&quot;rating&quot;:0,&quot;maxInstallment&quot;:1,&quot;productFileUploadActive&quot;:false,&quot;productFileUploadIsRequire&quot;:false,&quot;productFileUploadMaxSize&quot;:0,&quot;productCombineActive&quot;:false,&quot;productCombineType&quot;:-1,&quot;productCategoryId&quot;:24,&quot;salesUnit&quot;:&quot;&quot;,&quot;brandName&quot;:&quot;BİC&quot;,&quot;mainVariantId&quot;:9594,&quot;totalStockAmount&quot;:99.0,&quot;productCombinePurchase&quot;:false,&quot;productCombineBulkPurchase&quot;:false,&quot;formId&quot;:0,&quot;videoSettings&quot;:{&quot;videoLink&quot;:&quot;&quot;,&quot;videoTagTipi&quot;:&quot;video&quot;,&quot;urunListedeGoster&quot;:false,&quot;otomatikOynat&quot;:false,&quot;videoSesAktif&quot;:false,&quot;tumKontrolleriGoster&quot;:false,&quot;urunDetayVideoAyar&quot;:{&quot;videoYenidenBaslasin&quot;:true,&quot;videoSesAktif&quot;:false,&quot;tumKontrolleriGoster&quot;:false,&quot;otomatikOynat&quot;:false,&quot;ilkSiradaGoster&quot;:true}},&quot;dynamicForm&quot;:null,&quot;memberCriticalStock&quot;:1,&quot;productActive&quot;:true,&quot;productDesingSetting&quot;:{&quot;active&quot;:false,&quot;desingIdType&quot;:0,&quot;pitchPrintDesingId&quot;:null},&quot;is3dImageActive&quot;:false,&quot;indirimOraniGoster&quot;:true,&quot;fiyatGoster&quot;:true,&quot;showVatIncludedPrice&quot;:false,&quot;showLocalPrice&quot;:false,&quot;productImages&quot;:[{&quot;id&quot;:286329,&quot;imageName&quot;:&quot;bic-bodymark-gecici-dovme-kalemi-acik-ma-9053.jpg&quot;,&quot;bigImagePath&quot;:&quot;/Uploads/UrunResimleri/buyuk/bic-bodymark-gecici-dovme-kalemi-acik-ma-9053.jpg&quot;,&quot;thumbImagePath&quot;:&quot;/Uploads/UrunResimleri/thumb/bic-bodymark-gecici-dovme-kalemi-acik-ma-9053.jpg&quot;,&quot;imageType&quot;:1,&quot;imagePath&quot;:&quot;/Uploads/UrunResimleri/bic-bodymark-gecici-dovme-kalemi-acik-ma-9053.jpg&quot;,&quot;imageOrder&quot;:1,&quot;threeDImageFolder&quot;:&quot;&quot;,&quot;variantId&quot;:0,&quot;productId&quot;:5226,&quot;isShowCase&quot;:0,&quot;video&quot;:null,&quot;altTag&quot;:&quot;BİCBic Bodymark Geçici Dövme Kalemi Açık Mavi Pembe Mor 3 lü Blister&quot;,&quot;active&quot;:true,&quot;settings&quot;:{&quot;ucYuzAltmisDereceResimTipi&quot;:1,&quot;ucYuzAltmisDereceYuklenecekResimSayisi&quot;:24},&quot;socialMediaImage&quot;:false},{&quot;id&quot;:286330,&quot;imageName&quot;:&quot;bic-bodymark-gecici-dovme-kalemi-acik-ma-df04.jpg&quot;,&quot;bigImagePath&quot;:&quot;/Uploads/UrunResimleri/buyuk/bic-bodymark-gecici-dovme-kalemi-acik-ma-df04.jpg&quot;,&quot;thumbImagePath&quot;:&quot;/Uploads/UrunResimleri/thumb/bic-bodymark-gecici-dovme-kalemi-acik-ma-df04.jpg&quot;,&quot;imageType&quot;:1,&quot;imagePath&quot;:&quot;/Uploads/UrunResimleri/bic-bodymark-gecici-dovme-kalemi-acik-ma-df04.jpg&quot;,&quot;imageOrder&quot;:2,&quot;threeDImageFolder&quot;:&quot;&quot;,&quot;variantId&quot;:0,&quot;productId&quot;:5226,&quot;isShowCase&quot;:0,&quot;video&quot;:null,&quot;altTag&quot;:&quot;BİCBic Bodymark Geçici Dövme Kalemi Açık Mavi Pembe Mor 3 lü Blister&quot;,&quot;active&quot;:true,&quot;settings&quot;:{&quot;ucYuzAltmisDereceResimTipi&quot;:1,&quot;ucYuzAltmisDereceYuklenecekResimSayisi&quot;:24},&quot;socialMediaImage&quot;:false}],&quot;isSuite&quot;:false,&quot;suite&quot;:{},&quot;isIntegral&quot;:false,&quot;image360Type&quot;:1,&quot;estimatedDeliveryTimeShowType&quot;:0}; globalModel.pageType = 'productdetail';var productsModel = {&quot;pageType&quot;:3,&quot;pageName&quot;:&quot;&quot;,&quot;targetId&quot;:5226,&quot;pagingType&quot;:1,&quot;orderBy&quot;:null,&quot;orderDirection&quot;:null,&quot;showProductVideo&quot;:-1,&quot;autoPlayVideo&quot;:-1,&quot;productVariantListActive&quot;:false,&quot;filterSettings&quot;:null,&quot;urlList&quot;:[{&quot;dil&quot;:&quot;tr&quot;,&quot;sayfaAdresi&quot;:&quot;/bic-bodymark-gecici-dovme-kalemi-acik-mavi-pembe-mor-3-lu-blister-5226&quot;,&quot;seoSayfaBaslik&quot;:&quot;&quot;,&quot;seoAnahtarKelime&quot;:&quot;&quot;,&quot;seoSayfaAciklama&quot;:&quot;&quot;,&quot;seoNoIndex&quot;:false,&quot;seoNoFollow&quot;:false}]};//]]&gt;'''  data = re.search(r'var productDetailModel = ({.*?});', s).group(1) data = json.loads(data)  # uncomment this to print all data: # print(json.dumps(data, indent=4))  print(data['product']['barkod']) </code></pre> <p>Prints:</p> <pre><code>3086123570955 </code></pre>"			2020-09-21 18:02:25.88 UTC
64005091	javascript|python|ajax	How to print javascript data in Python terminal	"<p>I have a javascript file, an html file and a python file. In the Java script function, a data is generated as a result of the event and I can see this data in the browser console. I would like to see this data in python as well. I made the website in a program called Hype4 and javascript and html files were generated automatically. I wrote the javascript function and the python file, but I cannot send data to python from the js function.</p> <p>Python File:</p> <pre class=""lang-py prettyprint-override""><code>from flask import Flask, render_template, request, jsonify import json import pandas as pd    app = Flask(__name__)  @app.route(&quot;/&quot;) def index():     return render_template(&quot;cafeproje.html&quot;)  @app.route('/receiver', methods = [&quot;POST&quot;]) def receiver():     data = request.get_json()     df = pd.read_json(data)     print(data)     return jsonify(data)       if __name__==&quot;__main__&quot;:     app.run(debug=True) </code></pre> <p>Html File:</p> <pre class=""lang-html prettyprint-override""><code>&lt;!DOCTYPE html&gt; &lt;html&gt;   &lt;head&gt;     &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot; /&gt;     &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;chrome=1,IE=edge&quot; /&gt;     &lt;title&gt;CafeProje&lt;/title&gt;     &lt;style&gt;         html {             height:100%;         }         body {             background-color:#FFF;             margin:0;             height:100%;         }     &lt;/style&gt;     &lt;!-- copy these lines to your document head: --&gt;     &lt;script src=&quot;https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js&quot;&gt;&lt;/script&gt;     &lt;meta name=&quot;viewport&quot; content=&quot;user-scalable=no, width=320&quot; /&gt;      &lt;!-- end copy --&gt;   &lt;/head&gt;   &lt;body&gt;     &lt;!-- copy these lines to your document: --&gt;      &lt;div id=&quot;cafeproje_hype_container&quot; class=&quot;HYPE_document&quot; style=&quot;margin:auto;position:relative;width:100%;height:100%;overflow:hidden;&quot;&gt;&lt;/div&gt;     &lt;script src=&quot;static/js/cafeproje_hype_generated_script.js&quot;&gt;&lt;/script&gt;          &lt;!-- end copy --&gt;            &lt;!-- text content for search engines: --&gt;      &lt;div style=&quot;display:none&quot; aria-hidden=true&gt;          &lt;div&gt;Garson Seçiniz&lt;/div&gt;         &lt;div&gt;0&lt;/div&gt;         &lt;div&gt;Garson İlgili miydi?&lt;/div&gt;         &lt;div&gt; Arga Tek. Hizmetinizde&lt;/div&gt;         &lt;div&gt;&lt;/div&gt;         &lt;div&gt;Garson Titiz miydi?&lt;/div&gt;         &lt;div&gt;Garson Hızlı mıydı?&lt;/div&gt;         &lt;div&gt;Evet&lt;/div&gt;         &lt;div&gt;Tuvaleti Kullandınız mı?&lt;/div&gt;         &lt;div&gt;Hayır&lt;/div&gt;         &lt;div&gt;Anketimiz Bu Kadardı Teşekkürler&lt;/div&gt;         &lt;div&gt;Tuvaletler Temiz Miydi?&lt;/div&gt;      &lt;/div&gt;      &lt;!-- end text content: --&gt;    &lt;/body&gt; &lt;/html&gt;  </code></pre> <p>Javascript Function:</p> <pre class=""lang-js prettyprint-override""><code>function veriGonder (hypeDocument, element, event){          if (sayfaNo == &quot;1&quot;) {              var id = idKaydet;         var sayfa = sayfaNo;         var garson = garson;         var oy = &quot;NONE&quot;;         var secenek = &quot;NONE&quot;;                  datas = [{ id: idKaydet, sayfa: sayfaNo, garson: garson }];     console.log(&quot;Sayfa 1 Gönderildi: &quot;);         console.log(datas);                  $.ajax({             type: &quot;POST&quot;,             url:&quot;/receiver&quot;,             contentType: &quot;application/json; charset=utf-8&quot;,             data: JSON.stringify({ id: idKaydet, sayfa: sayfaNo, garson: garson })         });     }               else if (sayfaNo == &quot;2&quot;) {              var id = idKaydet;         var sayfa = sayfaNo;         var garson = &quot;NONE&quot;;         var oy = oyMiktari;         var secenek = &quot;NONE&quot;;                  datas = [{ id: idKaydet, sayfa: sayfaNo, oy: oyMiktari }];      console.log(&quot;Sayfa 2 Gönderildi: &quot;);         console.log(datas);         $.ajax({             type: &quot;POST&quot;,             url:&quot;/receiver&quot;,             contentType: &quot;application/json; charset=utf-8&quot;,             data: JSON.stringify({ id: idKaydet, sayfa: sayfaNo, oy: oyMiktari  })           });     }          else if (sayfaNo == &quot;3&quot;) {              var id = idKaydet;         var sayfa = sayfaNo;         var garson = &quot;NONE&quot;;         var oy = oyMiktari;         var secenek = &quot;NONE&quot;;                  datas = [{ id: idKaydet, sayfa: sayfaNo, oy: oyMiktari }];      console.log(&quot;Sayfa 3 Gönderildi: &quot;);         console.log(datas);         $.ajax({             type: &quot;POST&quot;,             url:&quot;/receiver&quot;,             contentType: &quot;application/json; charset=utf-8&quot;,             data: JSON.stringify({ id: idKaydet, sayfa: sayfaNo, oy: oyMiktari })            });     }          else if (sayfaNo == &quot;4&quot;) {              var id = idKaydet;         var sayfa = sayfaNo;         var garson = &quot;NONE&quot;;         var oy = oyMiktari;         var secenek = &quot;NONE&quot;;                  datas = [{ id: idKaydet, sayfa: sayfaNo, oy: oyMiktari }];      console.log(&quot;Sayfa 4 Gönderildi: &quot;);         console.log(datas);         $.ajax({             type: &quot;POST&quot;,             url:&quot;/receiver&quot;,             contentType: &quot;application/json; charset=utf-8&quot;,             data: JSON.stringify({ id: idKaydet, sayfa: sayfaNo, oy: oyMiktari })            });     }          else if (sayfaNo == &quot;5&quot;) {              var id = idKaydet;         var sayfa = sayfaNo;         var garson = &quot;NONE&quot;;         var oy = &quot;NONE&quot;;         var secenek = secenek;                  datas = [{ id: idKaydet, sayfa: sayfaNo, secenek: secenek }];       console.log(&quot;Sayfa 5 Gönderildi: &quot;);         console.log(datas);         $.ajax({             type: &quot;POST&quot;,             url:&quot;/receiver&quot;,             contentType: &quot;application/json; charset=utf-8&quot;,             data: JSON.stringify({ id: idKaydet, sayfa: sayfaNo, secenek: secenek })             });     }          else if (sayfaNo == &quot;5m1&quot;) {              var id = idKaydet;         var sayfa = sayfaNo;         var garson = &quot;NONE&quot;;         var oy = oyMiktari;         var secenek = &quot;NONE&quot;;                  datas = [{ id: idKaydet, sayfa: sayfaNo, oy: oyMiktari }];      console.log(&quot;Sayfa 5m1 Gönderildi: &quot;);         console.log(datas);         $.ajax({             type: &quot;POST&quot;,             url:&quot;/receiver&quot;,             contentType: &quot;application/json; charset=utf-8&quot;,             data: JSON.stringify({ id: idKaydet, sayfa: sayfaNo, oy: oyMiktari })            });     }        }    </code></pre> <p>Auto-generated javascript code by Hype4 (Share link as it doesn't fit here): <a href=""https://www.codepile.net/pile/wA75kWrj"" rel=""nofollow noreferrer"">https://www.codepile.net/pile/wA75kWrj</a></p>"	2020-09-22 07:36:34.68 UTC	64022241	"<p>please read the documentation for <a href=""https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.read_json.html#pandas-read-json"" rel=""nofollow noreferrer"">read_json</a>:</p> <blockquote> <p>Parameters path_or_buf <strong>a valid JSON str</strong>, path object or file-like object</p> </blockquote> <p>you're not passing there <strong>a valid JSON str</strong>. You are passing there a dictionary which you created one line higher:</p> <pre><code>data = request.get_json() # this returns a dictionary </code></pre> <p>which is why you are getting error that the parameter is a dictionary:</p> <pre><code>Invalid file path or buffer object type: &lt;class 'dict'&gt; </code></pre> <p>remove the line <code>data = request.get_json()</code> and pass into <code>read_json()</code> the response as a <strong>json string</strong></p>"			2020-09-23 06:32:16 UTC
64005091	javascript|python|ajax	How to print javascript data in Python terminal	"<p>I have a javascript file, an html file and a python file. In the Java script function, a data is generated as a result of the event and I can see this data in the browser console. I would like to see this data in python as well. I made the website in a program called Hype4 and javascript and html files were generated automatically. I wrote the javascript function and the python file, but I cannot send data to python from the js function.</p> <p>Python File:</p> <pre class=""lang-py prettyprint-override""><code>from flask import Flask, render_template, request, jsonify import json import pandas as pd    app = Flask(__name__)  @app.route(&quot;/&quot;) def index():     return render_template(&quot;cafeproje.html&quot;)  @app.route('/receiver', methods = [&quot;POST&quot;]) def receiver():     data = request.get_json()     df = pd.read_json(data)     print(data)     return jsonify(data)       if __name__==&quot;__main__&quot;:     app.run(debug=True) </code></pre> <p>Html File:</p> <pre class=""lang-html prettyprint-override""><code>&lt;!DOCTYPE html&gt; &lt;html&gt;   &lt;head&gt;     &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot; /&gt;     &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;chrome=1,IE=edge&quot; /&gt;     &lt;title&gt;CafeProje&lt;/title&gt;     &lt;style&gt;         html {             height:100%;         }         body {             background-color:#FFF;             margin:0;             height:100%;         }     &lt;/style&gt;     &lt;!-- copy these lines to your document head: --&gt;     &lt;script src=&quot;https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js&quot;&gt;&lt;/script&gt;     &lt;meta name=&quot;viewport&quot; content=&quot;user-scalable=no, width=320&quot; /&gt;      &lt;!-- end copy --&gt;   &lt;/head&gt;   &lt;body&gt;     &lt;!-- copy these lines to your document: --&gt;      &lt;div id=&quot;cafeproje_hype_container&quot; class=&quot;HYPE_document&quot; style=&quot;margin:auto;position:relative;width:100%;height:100%;overflow:hidden;&quot;&gt;&lt;/div&gt;     &lt;script src=&quot;static/js/cafeproje_hype_generated_script.js&quot;&gt;&lt;/script&gt;          &lt;!-- end copy --&gt;            &lt;!-- text content for search engines: --&gt;      &lt;div style=&quot;display:none&quot; aria-hidden=true&gt;          &lt;div&gt;Garson Seçiniz&lt;/div&gt;         &lt;div&gt;0&lt;/div&gt;         &lt;div&gt;Garson İlgili miydi?&lt;/div&gt;         &lt;div&gt; Arga Tek. Hizmetinizde&lt;/div&gt;         &lt;div&gt;&lt;/div&gt;         &lt;div&gt;Garson Titiz miydi?&lt;/div&gt;         &lt;div&gt;Garson Hızlı mıydı?&lt;/div&gt;         &lt;div&gt;Evet&lt;/div&gt;         &lt;div&gt;Tuvaleti Kullandınız mı?&lt;/div&gt;         &lt;div&gt;Hayır&lt;/div&gt;         &lt;div&gt;Anketimiz Bu Kadardı Teşekkürler&lt;/div&gt;         &lt;div&gt;Tuvaletler Temiz Miydi?&lt;/div&gt;      &lt;/div&gt;      &lt;!-- end text content: --&gt;    &lt;/body&gt; &lt;/html&gt;  </code></pre> <p>Javascript Function:</p> <pre class=""lang-js prettyprint-override""><code>function veriGonder (hypeDocument, element, event){          if (sayfaNo == &quot;1&quot;) {              var id = idKaydet;         var sayfa = sayfaNo;         var garson = garson;         var oy = &quot;NONE&quot;;         var secenek = &quot;NONE&quot;;                  datas = [{ id: idKaydet, sayfa: sayfaNo, garson: garson }];     console.log(&quot;Sayfa 1 Gönderildi: &quot;);         console.log(datas);                  $.ajax({             type: &quot;POST&quot;,             url:&quot;/receiver&quot;,             contentType: &quot;application/json; charset=utf-8&quot;,             data: JSON.stringify({ id: idKaydet, sayfa: sayfaNo, garson: garson })         });     }               else if (sayfaNo == &quot;2&quot;) {              var id = idKaydet;         var sayfa = sayfaNo;         var garson = &quot;NONE&quot;;         var oy = oyMiktari;         var secenek = &quot;NONE&quot;;                  datas = [{ id: idKaydet, sayfa: sayfaNo, oy: oyMiktari }];      console.log(&quot;Sayfa 2 Gönderildi: &quot;);         console.log(datas);         $.ajax({             type: &quot;POST&quot;,             url:&quot;/receiver&quot;,             contentType: &quot;application/json; charset=utf-8&quot;,             data: JSON.stringify({ id: idKaydet, sayfa: sayfaNo, oy: oyMiktari  })           });     }          else if (sayfaNo == &quot;3&quot;) {              var id = idKaydet;         var sayfa = sayfaNo;         var garson = &quot;NONE&quot;;         var oy = oyMiktari;         var secenek = &quot;NONE&quot;;                  datas = [{ id: idKaydet, sayfa: sayfaNo, oy: oyMiktari }];      console.log(&quot;Sayfa 3 Gönderildi: &quot;);         console.log(datas);         $.ajax({             type: &quot;POST&quot;,             url:&quot;/receiver&quot;,             contentType: &quot;application/json; charset=utf-8&quot;,             data: JSON.stringify({ id: idKaydet, sayfa: sayfaNo, oy: oyMiktari })            });     }          else if (sayfaNo == &quot;4&quot;) {              var id = idKaydet;         var sayfa = sayfaNo;         var garson = &quot;NONE&quot;;         var oy = oyMiktari;         var secenek = &quot;NONE&quot;;                  datas = [{ id: idKaydet, sayfa: sayfaNo, oy: oyMiktari }];      console.log(&quot;Sayfa 4 Gönderildi: &quot;);         console.log(datas);         $.ajax({             type: &quot;POST&quot;,             url:&quot;/receiver&quot;,             contentType: &quot;application/json; charset=utf-8&quot;,             data: JSON.stringify({ id: idKaydet, sayfa: sayfaNo, oy: oyMiktari })            });     }          else if (sayfaNo == &quot;5&quot;) {              var id = idKaydet;         var sayfa = sayfaNo;         var garson = &quot;NONE&quot;;         var oy = &quot;NONE&quot;;         var secenek = secenek;                  datas = [{ id: idKaydet, sayfa: sayfaNo, secenek: secenek }];       console.log(&quot;Sayfa 5 Gönderildi: &quot;);         console.log(datas);         $.ajax({             type: &quot;POST&quot;,             url:&quot;/receiver&quot;,             contentType: &quot;application/json; charset=utf-8&quot;,             data: JSON.stringify({ id: idKaydet, sayfa: sayfaNo, secenek: secenek })             });     }          else if (sayfaNo == &quot;5m1&quot;) {              var id = idKaydet;         var sayfa = sayfaNo;         var garson = &quot;NONE&quot;;         var oy = oyMiktari;         var secenek = &quot;NONE&quot;;                  datas = [{ id: idKaydet, sayfa: sayfaNo, oy: oyMiktari }];      console.log(&quot;Sayfa 5m1 Gönderildi: &quot;);         console.log(datas);         $.ajax({             type: &quot;POST&quot;,             url:&quot;/receiver&quot;,             contentType: &quot;application/json; charset=utf-8&quot;,             data: JSON.stringify({ id: idKaydet, sayfa: sayfaNo, oy: oyMiktari })            });     }        }    </code></pre> <p>Auto-generated javascript code by Hype4 (Share link as it doesn't fit here): <a href=""https://www.codepile.net/pile/wA75kWrj"" rel=""nofollow noreferrer"">https://www.codepile.net/pile/wA75kWrj</a></p>"	2020-09-22 07:36:34.68 UTC	64007021	"<p>@balderman</p> <p>Python:</p> <pre class=""lang-py prettyprint-override""><code>from flask import Flask, render_template, request, jsonify import json import pandas as pd    app = Flask(__name__)  @app.route(&quot;/&quot;) def index():     return render_template(&quot;cafeproje.html&quot;)  @app.route('/receiver', methods = [&quot;POST&quot;]) def receiver():     print(&quot;we are here&quot;)     data = request.get_json()     df = pd.read_json(data)     print(data)     return jsonify(data)       if __name__==&quot;__main__&quot;:     app.run(debug=True) </code></pre> <p>I did not change other codes.</p> <p>Output:</p> <pre><code>* Serving Flask app &quot;cafeproje&quot; (lazy loading)  * Environment: production    WARNING: This is a development server. Do not use it in a production deployment.    Use a production WSGI server instead.  * Debug mode: on  * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)  * Restarting with stat  * Debugger is active!  * Debugger PIN: 250-177-957 127.0.0.1 - - [22/Sep/2020 12:18:26] &quot;GET / HTTP/1.1&quot; 200 - 127.0.0.1 - - [22/Sep/2020 12:18:28] &quot;POST /receiver HTTP/1.1&quot; 500 - Traceback (most recent call last):   File &quot;/Users/tunahan/opt/anaconda3/envs/CafeProjesiDeneme/lib/python3.7/site-packages/flask/app.py&quot;, line 2464, in __call__     return self.wsgi_app(environ, start_response)   File &quot;/Users/tunahan/opt/anaconda3/envs/CafeProjesiDeneme/lib/python3.7/site-packages/flask/app.py&quot;, line 2450, in wsgi_app     response = self.handle_exception(e)   File &quot;/Users/tunahan/opt/anaconda3/envs/CafeProjesiDeneme/lib/python3.7/site-packages/flask/app.py&quot;, line 1867, in handle_exception     reraise(exc_type, exc_value, tb)   File &quot;/Users/tunahan/opt/anaconda3/envs/CafeProjesiDeneme/lib/python3.7/site-packages/flask/_compat.py&quot;, line 39, in reraise     raise value   File &quot;/Users/tunahan/opt/anaconda3/envs/CafeProjesiDeneme/lib/python3.7/site-packages/flask/app.py&quot;, line 2447, in wsgi_app     response = self.full_dispatch_request()   File &quot;/Users/tunahan/opt/anaconda3/envs/CafeProjesiDeneme/lib/python3.7/site-packages/flask/app.py&quot;, line 1952, in full_dispatch_request     rv = self.handle_user_exception(e)   File &quot;/Users/tunahan/opt/anaconda3/envs/CafeProjesiDeneme/lib/python3.7/site-packages/flask/app.py&quot;, line 1821, in handle_user_exception     reraise(exc_type, exc_value, tb)   File &quot;/Users/tunahan/opt/anaconda3/envs/CafeProjesiDeneme/lib/python3.7/site-packages/flask/_compat.py&quot;, line 39, in reraise     raise value   File &quot;/Users/tunahan/opt/anaconda3/envs/CafeProjesiDeneme/lib/python3.7/site-packages/flask/app.py&quot;, line 1950, in full_dispatch_request     rv = self.dispatch_request()   File &quot;/Users/tunahan/opt/anaconda3/envs/CafeProjesiDeneme/lib/python3.7/site-packages/flask/app.py&quot;, line 1936, in dispatch_request     return self.view_functions[rule.endpoint](**req.view_args)   File &quot;/Volumes/GoogleDrive/Ortak Drive'lar/Arga Tek/Tunahan/ProjeCafeDeneme/cafeproje.py&quot;, line 17, in receiver     df = pd.read_json(data)   File &quot;/Users/tunahan/opt/anaconda3/envs/CafeProjesiDeneme/lib/python3.7/site-packages/pandas/util/_decorators.py&quot;, line 214, in wrapper     return func(*args, **kwargs)   File &quot;/Users/tunahan/opt/anaconda3/envs/CafeProjesiDeneme/lib/python3.7/site-packages/pandas/io/json/_json.py&quot;, line 585, in read_json     path_or_buf, encoding=encoding, compression=compression   File &quot;/Users/tunahan/opt/anaconda3/envs/CafeProjesiDeneme/lib/python3.7/site-packages/pandas/io/common.py&quot;, line 200, in get_filepath_or_buffer     raise ValueError(msg) ValueError: Invalid file path or buffer object type: &lt;class 'dict'&gt; </code></pre>"			2020-09-22 09:39:15.293 UTC
64018249	javascript|jquery|json|post	Accessing values from python in javascript after json post	"<p>Swear I've done this before, can never figure out what to change</p> <p><strong>Python</strong></p> <pre><code>@csrf_exempt def add_trip_to_map(request):     trip_id = request.POST['trip_id']     trip = Trip.objects.get(pk = trip_id)     orig, dest = trip.load.orig, trip.load.dest     data = {'orig_lat':str(orig.lat),             'orig_lon':str(orig.lon),             'dest_lat':str(dest.lat),             'dest_lon':str(dest.lon)}     return HttpResponse(json.dumps(data)) </code></pre> <p><strong>JS</strong></p> <pre><code>    $.post( &quot;{% url 'add_trip_to_map' %}&quot;, { trip_id: trip_id }, function( data ) { console.log(data);     //console.log(data[&quot;dest_lon&quot;]);      var marker = new mapboxgl.Marker() .setLngLat([data[&quot;dest_lat&quot;], data[&quot;dest_lon&quot;]]) .addTo(map);  </code></pre> <p><strong>console.log(data) looks like this:</strong></p> <pre><code>{&quot;orig_lat&quot;: &quot;33.493100&quot;, &quot;orig_lon&quot;: &quot;117.131700&quot;, &quot;dest_lat&quot;: &quot;32.454500&quot;, &quot;dest_lon&quot;: &quot;99.738100&quot;} </code></pre> <p><strong>BUT I can't access values in js</strong></p> <pre><code>lng_lat.js:40 Uncaught Error: Invalid LngLat object: (NaN, NaN) </code></pre>"	2020-09-22 22:01:50.56 UTC	64018384	"<p>I assume your first issue is: the returned value of your post is a string. If so you need to convert it:</p> <pre><code> data = JSON.parse(data); </code></pre> <p>The second issue is related to your lon/lat: they must be in the range -90 ... +90</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""true"" data-console=""true"" data-babel=""false""> <div class=""snippet-code snippet-currently-hidden""> <pre class=""snippet-code-js lang-js prettyprint-override""><code>mapboxgl.accessToken = 'pk.eyJ1IjoiZmFyYWRheTIiLCJhIjoiTUVHbDl5OCJ9.buFaqIdaIM3iXr1BOYKpsQ'; var map = new mapboxgl.Map({     container: 'map',     style: 'mapbox://styles/mapbox/streets-v11', // stylesheet location     center: [-74.5, 40], // starting position [lng, lat]     zoom: 9 // starting zoom });  var data = '{""orig_lat"": ""33.493100"", ""orig_lon"": ""117.131700"", ""dest_lat"": ""32.454500"", ""dest_lon"": ""99.738100""}';  data = JSON.parse(data);  var lon = (Math.abs(parseFloat(data[""dest_lon""])) &gt; 90) ? '90' : data[""dest_lon""]; var lat = (Math.abs(parseFloat(data[""dest_lon""])) &gt; 90) ? '90' : data[""dest_lat""];  var marker = new mapboxgl.Marker()         .setLngLat([data[""dest_lat""], data[""dest_lon""]])         .addTo(map);</code></pre> <pre class=""snippet-code-html lang-html prettyprint-override""><code>&lt;script src='https://api.mapbox.com/mapbox-gl-js/v1.12.0/mapbox-gl.js'&gt;&lt;/script&gt; &lt;link href='https://api.mapbox.com/mapbox-gl-js/v1.12.0/mapbox-gl.css' rel='stylesheet' /&gt;   &lt;div id='map' style='width: 400px; height: 300px;'&gt;&lt;/div&gt;</code></pre> </div> </div> </p>"			2020-09-22 22:16:14.583 UTC
64020836	javascript|vue.js|apexcharts	Apexcharts time not matching JavaScript/Python	"<p>In my Python</p> <pre><code>  2020-09-23T10:50:46.838023  </code></pre> <p>In JavaScript</p> <pre><code>  2020-09-23T10:50:46.838023 </code></pre> <p>In JavaScript apexcharts format</p> <pre><code>  2020-09-23T03:50:46.838023 </code></pre> <p>why has it changed the hour from 10 to 03?</p> <p>This my Vue code</p> <pre><code>chartOptions: {               chart: {                 id: &quot;chart&quot; + key,                 type: obj.chart,                 zoom: {                   enabled: false,                 },               },               tooltip: {                 x: {                   format: 'dd/MMM HH:mm:ss',                 }               },               xaxis: {                 type: &quot;datetime&quot;,                 categories: obj.time,                 labels: {                   show: true                 }               },             },           }; </code></pre> <p>My <code>obj</code> is object used for <code>foreach</code> loop.</p>"	2020-09-23 03:58:37.07 UTC	64093155	"<p>If you want to display local time in ApexCharts, turn off the UTC flag on x-axis labels.</p> <pre class=""lang-js prettyprint-override""><code>xaxis: {   labels: {     datetimeUTC: false   } } </code></pre>"			2020-09-27 20:43:51.25 UTC
64029589	javascript|python|html|sockets|server	How do I send message from HTML to Python (Flask) using JavaScript?	"<p>I need to send string from HTML file to Python(Flask) using JavaScript.</p> <p>This is my HTML code inside &quot;templates&quot; folder:</p> <pre><code>&lt;button type=&quot;button&quot; class=&quot;btn btn-primary btn-lg&quot; id=&quot;test&quot;&gt;Large button&lt;/button&gt; &lt;script type=&quot;text/javascript&quot;     src=&quot;{{ url_for('static', filename='index.js') }}&quot;&gt;&lt;/script&gt; </code></pre> <p>This is my JavaScript code (<strong><code>index.js</code></strong>) inside &quot;static&quot; folder</p> <pre><code>$(function() { $('a#test').bind('click', function() { //var value = document.getElementById(&quot;msg&quot;).value     $.getJSON('/run',         //{val:value},         function(data) {         // do nothing         });         return false;   }); }); </code></pre> <p>This is the code for my <code>main.py</code></p> <pre><code>from flask import *  #some code  @app.route(&quot;/run&quot;) def run(): print(&quot;clicked&quot;) return &quot;none&quot; </code></pre> <p>It is supposed to work, but the button doesn't work, &quot;clicked&quot; isn't being printed when the button is being pressed.</p>"	2020-09-23 13:56:10.913 UTC	64029948	<p>@geatanoM <code>change $('a#test') to $('#test')</code> as there should only ever be one element with test as its id and your trying to call an <code>a</code> tag in your code rather than a button</p>			2020-09-23 14:15:34.517 UTC
64071752	mysql|windows-server	"Trigger python, Php, ruby or Javascript by mysql database change"	"<p>How can I make sure that specific changes in the database trigger a script? I use windows server and mysql, and I can use the woocommerce api.</p>"	2020-09-25 21:55:32.78 UTC	64089690	"<p>It isn't really within relational database architecture for the database to be letting other programs know what's happening in the database. MySQL triggers can make changes <em>in</em> the database - for example, update one table each time there's an insert in another table. But they don't call external programs.</p> <p>I think you basically have two options here.</p> <ol> <li>Whatever is making changes to your data, have that thing also trigger the script you want to trigger.</li> <li>Have your script query the database every 5 minutes (or even every 1 minute) and act on changes. You can find changes by creating a column that tells you when a row was last updated, and having your script use the timestamp; or creating a column that marks rows when they've been acted on by your script (slightly more reliable).</li> </ol>"			2020-09-27 14:42:52.84 UTC
64090258	javascript|python|hmac	Generating an HMAC in Javascript doesn't match the one generated in python (with utf-8 encoded characters)	"<p>The python server generates the hmac:</p> <pre><code>dict_payload = {&quot;name&quot;: &quot;Emulsión&quot;} payload = jsonpickle.encode(dict_payload, unpicklable=False) python_hmac = hmac.new(&quot;secret&quot;, bytes(payload, &quot;utf-8&quot;), hashlib.sha256,)  returns - 29c7e4b7049a61c24d0f57c402510d6b0c42b15e97981d6ce96b02fdcf913a45 </code></pre> <p>and in node js:</p> <pre><code>payload = {&quot;name&quot;: &quot;Emulsión&quot;} crypto     .createHmac(&quot;sha256&quot;, &quot;secret&quot;)     .update(payload, &quot;utf8&quot;)     .digest(&quot;hex&quot;);  returns - 61d834992df9a302d8ca1768d4d04be644ba1c35054b342db3ed29f4b2f1e888 </code></pre> <p>seems that in python the <code>ó</code> character was replaced by <code>\u00f3</code> how to achieve the same in Javascript?</p>"	2020-09-27 15:38:22.06 UTC	64090435	"<p>You need to make sure you are dealing with quotes in your input correctly.</p> <pre><code>payload = {&quot;name&quot;: &quot;Emulsión&quot;} str(payload) </code></pre> <p>Gives you:</p> <pre><code>&quot;{'name': 'Emulsión'}&quot; </code></pre> <p>This is not the same as a json string which has double quotes:</p> <pre><code>'{&quot;name&quot;: &quot;Emulsión&quot;}' </code></pre> <p>and will lead to a different result. If you ensure your strings are <strong>exactly</strong> the same, you'll get the same result:</p> <pre><code>import hmac  import hashlib  payload = '{&quot;name&quot;: &quot;Emulsión&quot;}'      python_hmac = hmac.new(b&quot;secret&quot;, bytes(payload, &quot;utf-8&quot;), hashlib.sha256,)  python_hmac.hexdigest()  # '61d834992df9a302d8ca1768d4d04be644ba1c35054b342db3ed29f4b2f1e888' </code></pre>"			2020-09-27 15:55:57.9 UTC
64093183	python	Converting javascript filter() and forEach() shorthand to Python	"<p>I'm converting some code from Javascript to Python. As I'm not an experienced coder, know only a bit from Javascript and next to nothing from Python it's a challenge. I'm getting there but I'm stuck on this piece of code. It filters an array and updates the entries found with a new value.</p> <pre><code>array.filter(entry =&gt; entry.field_to_match === value_to_match).forEach(entry =&gt; entry.field_to_match = new_value); </code></pre> <p>Is there a Python guru out there that can rewrite this in Python?</p> <p>What I have so far is that I can get the entries that match the filter. But O'm not sure how to update the array in that loop. Here is what I have.</p> <pre><code>for key in array:     if (key['field_to_match'] == value_to_match):         print(key) </code></pre> <p>The actual array looks like this:</p> <pre><code>[{'port_idx': 1, 'portconf_id': '5f342xxxxcc6e1', 'port_security_mac_address': [], 'name': 'Edgerouter X'}, {'port_idx': 2, 'portconf_id': '5f342bxxxxcc6e1', 'port_security_mac_address': [], 'name': 'Diskstation'}, {'port_idx': 3, 'portconf_id': '5f3xxxxxxc6e1', 'port_security_mac_address': [], 'name': 'Diskstation2'}, {'port_idx': 4, 'portconf_id': '5fxxxx6e1', 'port_security_mac_address': [], 'name': 'Omvormer'}, {'port_idx': 5, 'portconf_id': '5f342xxxxxxcc6e1', 'poe_mode': 'auto', 'port_security_mac_address': [], 'name': 'Woonkamer'}, {'port_idx': 6, 'portconf_id': '5f34xxxxxcc6e1', 'poe_mode': 'auto', 'port_security_mac_address': [], 'name': '1e verdieping'}, {'port_idx': 7, 'portconf_id': '5f342xxxxcc6e1', 'poe_mode': 'off', 'port_security_mac_address': [], 'name': 'Slaapkamer'}, {'port_idx': 8, 'portconf_id': '5f342bxxxxc6e1', 'poe_mode': 'auto', 'port_security_mac_address': [], 'name': 'DoorBird'}] </code></pre> <p>and I want the end result to look like this (where poe_mode has been updated to off for port with port_idx 6)</p> <pre><code>[{'port_idx': 1, 'portconf_id': '5f342xxxxcc6e1', 'port_security_mac_address': [], 'name': 'Edgerouter X'}, {'port_idx': 2, 'portconf_id': '5f342bxxxxcc6e1', 'port_security_mac_address': [], 'name': 'Diskstation'}, {'port_idx': 3, 'portconf_id': '5f3xxxxxxc6e1', 'port_security_mac_address': [], 'name': 'Diskstation2'}, {'port_idx': 4, 'portconf_id': '5fxxxx6e1', 'port_security_mac_address': [], 'name': 'Omvormer'}, {'port_idx': 5, 'portconf_id': '5f342xxxxxxcc6e1', 'poe_mode': 'auto', 'port_security_mac_address': [], 'name': 'Woonkamer'}, {'port_idx': 6, 'portconf_id': '5f34xxxxxcc6e1', 'poe_mode': 'off', 'port_security_mac_address': [], 'name': '1e verdieping'}, {'port_idx': 7, 'portconf_id': '5f342xxxxcc6e1', 'poe_mode': 'off', 'port_security_mac_address': [], 'name': 'Slaapkamer'}, {'port_idx': 8, 'portconf_id': '5f342bxxxxc6e1', 'poe_mode': 'auto', 'port_security_mac_address': [], 'name': 'DoorBird'}] </code></pre>"	2020-09-27 20:48:10.74 UTC	64093287	"<p><code>result = array.filter(predicate_function)</code> can be translated to a generator comprehension: <code>result = (value for value in array if predicate_function(value))</code>, which is lazily evaluated.</p> <p><code>result = array.forEach(function)</code> can be translated to <code>result = map(function, array)</code>, which results in another lazily evaluated generator.</p> <p>To compute the values, a constructor like <code>list</code> or <code>tuple</code> is needed.</p> <p>So what you likely want is something like this:</p> <pre><code>list(map(lambda value: setattr(value, field_to_match, new_value), (value for value is array if array.field_to_match == value_to_match))) </code></pre> <p>This one-liner also preserves all the ugliness of JavaScript.</p> <p>A more pythonic solution would be:</p> <pre><code>for value in array:     if value.field_to_match == value_to_match:         value.field_to_match = new_value </code></pre>"			2020-09-27 21:01:08.58 UTC
64100050	javascript|python|edit|python-re	Problem editing javascript file in Python	"<p>I'm editing a javascript file in Python, I've done most places but I'm stuck at a critical point, can you help?</p> <p>The part I'm trying to edit:</p> <pre><code>                    &quot;589&quot;: {                         p: &quot;no-repeat&quot;,                         c: 97,                         q: &quot;100% 100%&quot;,                         bS: 420,                         cP: &quot;garson&quot;,                         r: &quot;none&quot;,                         d: 138,                         cQ: 1,                         gg: &quot;0&quot;,                         cR: 1,                         aP: &quot;pointer&quot;,                         h: &quot;553&quot;,                         i: &quot;garson2&quot;,                         bF: &quot;578&quot;,                         aI: 35,                         j: &quot;absolute&quot;,                         x: &quot;visible&quot;,                         aA: {                             a: [{                                 d: 1.1,                                 p: 1,                                 g: 1,                                 f: 1                             }, {                                 p: 4,                                 h: &quot;474&quot;                             }, {                                 p: 4,                                 h: &quot;476&quot;                             }]                         },                         k: &quot;div&quot;,                         aJ: 35,                         dB: &quot;img&quot;,                         z: 23,                         Q: 16,                         aK: 35,                         R: &quot;rgba(0, 0, 0, 0.411)&quot;,                         S: 5,                         a: 140,                         aL: 35,                         T: 4,                         b: 2                     } </code></pre> <p>There are many more blocks like this in the javascript file. <code>i: &quot;garson2&quot;</code> term is also not fixed but I can get this value. Using the term <code>i: &quot;garson2&quot;</code>, I want to make <code>r: &quot;none&quot;</code> variable <code>r: &quot;inline&quot;</code> in the block where this term is. How can I do it? Note: The terms between <code>r: &quot;none&quot;</code> and <code>i: &quot;garson2&quot;</code> are also variable.</p>"	2020-09-28 10:04:09.423 UTC	64103890	"<p>You may use positive look ahead assertions for this and use <code>re.sub()</code> to replace.</p> <pre class=""lang-regex prettyprint-override""><code>r: &quot;none&quot;(?=[^{}]+i: &quot;garson2&quot;) </code></pre> <p><a href=""https://regex101.com/r/RYSmKc/1"" rel=""nofollow noreferrer"">Demo</a></p> <p><strong>Example</strong></p> <pre class=""lang-py prettyprint-override""><code>import re text=&quot;&quot;&quot; &quot;589&quot;: {                         p: &quot;no-repeat&quot;,                         c: 97,                         q: &quot;100% 100%&quot;,                         bS: 420,                         cP: &quot;garson&quot;,                         r: &quot;none&quot;,                         d: 138,                         cQ: 1,                         gg: &quot;0&quot;,                         cR: 1,                         aP: &quot;pointer&quot;,                         h: &quot;553&quot;,                         i: &quot;garson2&quot;,                         bF: &quot;578&quot;,                         aI: 35,                         j: &quot;absolute&quot;,                         x: &quot;visible&quot;,                         aA: {                             a: [{                                 d: 1.1,                                 p: 1,                                 g: 1,                                 f: 1                             }, {                                 p: 4,                                 h: &quot;474&quot;                             }, {                                 p: 4,                                 h: &quot;476&quot;                             }]                         },                         k: &quot;div&quot;,                         aJ: 35,                         dB: &quot;img&quot;,                         z: 23,                         Q: 16,                         aK: 35,                         R: &quot;rgba(0, 0, 0, 0.411)&quot;,                         S: 5,                         a: 140,                         aL: 35,                         T: 4,                         b: 2                     } &quot;&quot;&quot;  print(re.sub(r'r: &quot;none&quot;(?=[^{}]+i: &quot;garson2&quot;)','r: &quot;inline&quot;',text)) </code></pre> <p><strong>Output</strong></p> <pre><code>&quot;589&quot;: {                         p: &quot;no-repeat&quot;,                         c: 97,                         q: &quot;100% 100%&quot;,                         bS: 420,                         cP: &quot;garson&quot;,                         r: &quot;inline&quot;,                         d: 138,                         cQ: 1,                         gg: &quot;0&quot;,                         cR: 1,                         aP: &quot;pointer&quot;,                         h: &quot;553&quot;,                         i: &quot;garson2&quot;,                         bF: &quot;578&quot;,                         aI: 35,                         j: &quot;absolute&quot;,                         x: &quot;visible&quot;,                         aA: {                             a: [{                                 d: 1.1,                                 p: 1,                                 g: 1,                                 f: 1                             }, {                                 p: 4,                                 h: &quot;474&quot;                             }, {                                 p: 4,                                 h: &quot;476&quot;                             }]                         },                         k: &quot;div&quot;,                         aJ: 35,                         dB: &quot;img&quot;,                         z: 23,                         Q: 16,                         aK: 35,                         R: &quot;rgba(0, 0, 0, 0.411)&quot;,                         S: 5,                         a: 140,                         aL: 35,                         T: 4,                         b: 2                     } </code></pre>"			2020-09-28 14:11:15.177 UTC
64100050	javascript|python|edit|python-re	Problem editing javascript file in Python	"<p>I'm editing a javascript file in Python, I've done most places but I'm stuck at a critical point, can you help?</p> <p>The part I'm trying to edit:</p> <pre><code>                    &quot;589&quot;: {                         p: &quot;no-repeat&quot;,                         c: 97,                         q: &quot;100% 100%&quot;,                         bS: 420,                         cP: &quot;garson&quot;,                         r: &quot;none&quot;,                         d: 138,                         cQ: 1,                         gg: &quot;0&quot;,                         cR: 1,                         aP: &quot;pointer&quot;,                         h: &quot;553&quot;,                         i: &quot;garson2&quot;,                         bF: &quot;578&quot;,                         aI: 35,                         j: &quot;absolute&quot;,                         x: &quot;visible&quot;,                         aA: {                             a: [{                                 d: 1.1,                                 p: 1,                                 g: 1,                                 f: 1                             }, {                                 p: 4,                                 h: &quot;474&quot;                             }, {                                 p: 4,                                 h: &quot;476&quot;                             }]                         },                         k: &quot;div&quot;,                         aJ: 35,                         dB: &quot;img&quot;,                         z: 23,                         Q: 16,                         aK: 35,                         R: &quot;rgba(0, 0, 0, 0.411)&quot;,                         S: 5,                         a: 140,                         aL: 35,                         T: 4,                         b: 2                     } </code></pre> <p>There are many more blocks like this in the javascript file. <code>i: &quot;garson2&quot;</code> term is also not fixed but I can get this value. Using the term <code>i: &quot;garson2&quot;</code>, I want to make <code>r: &quot;none&quot;</code> variable <code>r: &quot;inline&quot;</code> in the block where this term is. How can I do it? Note: The terms between <code>r: &quot;none&quot;</code> and <code>i: &quot;garson2&quot;</code> are also variable.</p>"	2020-09-28 10:04:09.423 UTC	64106689	"<pre class=""lang-py prettyprint-override""><code>    r = re.compile(r'r: &quot;none&quot;(?=[^{}]+i: &quot;garson2&quot;)')     with open('static/js/cafeproje_hype_generated_script.js') as f:         contents = f.read()      contents = r.sub(r'r: &quot;none&quot;(?=[^{}]+i: &quot;garson2&quot;)','r: &quot;inline&quot;',contents)      with open('static/js/cafeproje_hype_generated_script.js', 'w') as f:         f.write(contents)      return print (&quot;Garson Ekleme İşlemi Tamam\n\nEklenen Garson İsmi:\t{}\nEklenen Garson Sırası:\t{}&quot;.format(garson_isim,garson_sira)) </code></pre> <p>I tried it like you said in the code. But I got an error. I apologize for not writing this part in advance, I guess I have extended the time required for a solution without knowing it.</p> <p>The error I get is:</p> <pre><code>Traceback (most recent call last):   File &quot;/Volumes/GoogleDrive/Ortak Drive'lar/Arga Tek/Tunahan/Projeler/ProjeCafeDeneme/garsonekle.py&quot;, line 7, in &lt;module&gt;     garsonislem.garson_ekle(garson_sira,garson_isim,res_adr) #garson eklemek için   File &quot;/Volumes/GoogleDrive/Ortak Drive'lar/Arga Tek/Tunahan/Projeler/ProjeCafeDeneme/garsonislem.py&quot;, line 17, in garson_ekle     res_ekle(garson_sira,garson_isim,res_adr)   File &quot;/Volumes/GoogleDrive/Ortak Drive'lar/Arga Tek/Tunahan/Projeler/ProjeCafeDeneme/garsonislem.py&quot;, line 48, in res_ekle     gorunur_yap(garson_sira,garson_isim)   File &quot;/Volumes/GoogleDrive/Ortak Drive'lar/Arga Tek/Tunahan/Projeler/ProjeCafeDeneme/garsonislem.py&quot;, line 81, in gorunur_yap     contents = r.sub(r'r: &quot;none&quot;(?=[^{}]+i: &quot;garson2&quot;)','r: &quot;inline&quot;',contents) TypeError: 'str' object cannot be interpreted as an integer </code></pre>"			2020-09-28 17:14:19.13 UTC
64102096	python|transcrypt	Transcrypt is a compiler that translates Python into JavaScript ahead-of-time and dont working with sqlite3?	"<p>I try to execute command python <code>-m transcrypt -b -m -n mr_index.py</code> and failed on code's string <code>&quot;import sqlite3&quot;</code>. Why?</p> <blockquote> <p>C:\Users\Legion\Downloads\meterrhyme-master&gt;python -m transcrypt -b -m -n mr_index.py<br /> Transcrypt (TM) Python to JavaScript Small Sane Subset Transpiler Version 3.7.16 Copyright (C) Geatec Engineering. License: Apache 2.0<br /> Saving target code in: C:/Users/Legion/Downloads/meterrhyme-master/_<em>target_</em>/org.transcrypt._<em>runtime_</em>.js<br /> Error while compiling (offending file last):<br /> File 'mr_index', line 5, namely:<br /> Import error, can't find any of: C:/Users/Legion/Downloads/meterrhyme-master/sqlite3.py<br /> C:/Users/Legion/Downloads/meterrhyme-master/sqlite3.js<br /> C:/Users/Legion/AppData/Local/Programs/Python/Python38-32/lib/site-packages/transcrypt/modules/sqlite3.py<br /> C:/Users/Legion/AppData/Local/Programs/Python/Python38-32/lib/site-packages/transcrypt/modules/sqlite3.js<br /> C:/Users/Legion/Downloads/meterrhyme-master/sqlite3.py<br /> C:/Users/Legion/Downloads/meterrhyme-master/sqlite3.js<br /> C:/Users/Legion/AppData/Local/Programs/Python/Python38-32/sqlite3.py<br /> C:/Users/Legion/AppData/Local/Programs/Python/Python38-32/sqlite3.js<br /> C:/Users/Legion/AppData/Local/Programs/Python/Python38-32/lib/site-packages/sqlite3.py<br /> C:/Users/Legion/AppData/Local/Programs/Python/Python38-32/lib/site-packages/sqlite3.js<br /> Aborted</p> </blockquote>"	2020-09-28 12:20:56.373 UTC	64111830	"<p>Transcrypt can only transpile pure Python code and as such wont work with most 3rd party libraries that utilize C extensions.  It is intended to act as a bridge between Python code and the JavaScript world, mainly to create code that will run in a web browser and be able to utilize JavaScript libraries.</p> <p>If you are using Node to run the transpiled Python code, you can use the <a href=""https://www.npmjs.com/package/sqlite3"" rel=""nofollow noreferrer"">JavaScript SQLite library</a> instead, but still code to it using Python.</p>"			2020-09-29 02:00:15.1 UTC
64106063	python|google-earth-engine	How to convert from Javascript to Python API for FeatureCollection in GEE?	"<p>I have a JS Code which runs well:</p> <pre><code>dataset = ee.Image('USGS/SRTMGL1_003'); elevation = dataset.select('elevation');  var means_of_tea = tea.map(function(field){   var elevation_mean = elevation.reduceRegion({     reducer: ee.Reducer.mean(),     geometry: field.geometry(),     scale: 30,     maxPixels: 1e9   });   var slope_mean = slope.reduceRegion({     reducer: ee.Reducer.mean(),     geometry: field.geometry(),     scale: 30,     maxPixels: 1e9   });   return field.set({elevation:elevation_mean, slope:slope_mean}); </code></pre> <p>I tried to convert the code to python:</p> <pre><code>def map_fc(field):   elevation_mean = elevation.reduceRegion({       'reducer': ee.Reducer.mean(),       'geometry': field.geometry(),       'scale': 30,       'maxPixels': 1e9   })   return field.set({'elevation': elevation_mean}) teawithmean = tea.map(map_fc) </code></pre> <p>But gives the error:</p> <pre><code>&lt;ipython-input-36-e999072d4723&gt; in &lt;module&gt;()       9   })      10   return field.set({'elevation': elevation_mean}) ---&gt; 11 teawithmean = tea.map(inmap)  17 frames /usr/local/lib/python3.6/dist-packages/ee/__init__.py in init(self, *args)     397           raise EEException(     398               'Invalid argument for ee.{0}(): {1}.  ' --&gt; 399               'Must be a ComputedObject.'.format(name, args))     400         else:     401           result = args[0]  EEException: Invalid argument for ee.Reducer(): ({'reducer': &lt;ee.Reducer object at 0x7f3b4699e4a8&gt;, 'geometry': ee.Geometry({   &quot;functionInvocationValue&quot;: {     &quot;functionName&quot;: &quot;Feature.geometry&quot;,     &quot;arguments&quot;: {       &quot;feature&quot;: {         &quot;argumentReference&quot;: null       }     }   } }), 'scale': 30, 'maxPixels': 1000000000.0},).  Must be a ComputedObject. </code></pre> <p>I've read the google guide for converting form JS to python but had no idea why this happen. Is the error duo to wrong syntax?</p>"	2020-09-28 16:27:20.09 UTC	64106668	"<p>In the Python EE API, use Python named argument syntax instead of dictionaries for arguments.</p> <pre class=""lang-py prettyprint-override""><code>  elevation_mean = elevation.reduceRegion(       reducer=ee.Reducer.mean(),       geometry=field.geometry(),       scale=30,       maxPixels=1e9   ) </code></pre> <p>Note that a property name is not a named argument, so <code>set()</code> works the same way as in JavaScript; you can use a dictionary or not, but do not use <code>=</code>.</p> <pre class=""lang-py prettyprint-override""><code>return field.set({'elevation': elevation_mean}) # or return field.set('elevation', elevation_mean) </code></pre>"			2020-09-28 17:12:49.847 UTC
64119236	python|web-scraping|beautifulsoup	is there a way to scrape a JavaScript page without selenium in python	<p>is there a way to scrape JS-rendered web page with python beautifulsoup or lxml without selenium?</p> <p>thanx</p>	2020-09-29 12:03:56.87 UTC	64119456	"<p>you can use requests_html module as alternative, it is pretty simple</p> <pre><code>from bs4 import BeautifulSoup import requests  resp = requests.get(&quot;https://stackexchange.com/sites&quot;)  html = resp.content soup = BeautifulSoup(html)  option_tags = soup.find_all(&quot;option&quot;) </code></pre> <p>in case you want to get deeper into it, just google the module</p>"			2020-09-29 12:17:43.157 UTC
64135350	python|python-3.x	How to remove JavaScript & other tags using Python... without importing modules	"<p>For the first part of school project, I'm trying to figure out how to remove JavaScript <code>&lt;script {...} &gt;</code> and <code>&lt;/script {...} &gt;</code> tags as well as anything between <code>&lt;</code> and <code>&gt;</code>.</p> <p>However we can't import <strong>any</strong> modules (even built in Python ones) because apparently the marker might not be able to access them etc etc.</p> <p>I tried this:</p> <pre><code>text = &quot;&lt;script beep beep&gt; hello &lt;/script boop doop woop&gt; hello &lt;hi&gt; hey &lt;bye&gt;&quot; while text.find(&quot;&lt;script&quot;) &gt;= 0:     script_start = text.find(&quot;&lt;script&quot;)     script_end = text.find(&quot;&gt;&quot;, text.find(&quot;&lt;/script&quot;)) + 1     text = text[:script_start] + text[script_end:]  while text.find(&quot;&lt;&quot;) &gt;= 0:     script2_start = text.find(&quot;&lt;&quot;)     script2_end = text.find(&quot;&gt;&quot;) + 1     text = text[:script2_start] + text[script2_end:] </code></pre> <p>And that does work for smaller files but the project has to do with big text files (the simplified testing one we were given is 10.4MB) so it doesn't finish &amp; it just gets stuck.</p> <p>Anyone got any ideas to make it more efficient?</p>"	2020-09-30 10:10:24.063 UTC	64136456	"<p>Even though there are 2 while loops, it is still linear complexity</p> <pre><code>string = &quot;&lt;script beep beep&gt; hello &lt;/script boop doop woop&gt; hello &lt;hi&gt; hey &lt;bye&gt;&quot; new_string = '' i = 0 while i &lt; len(string):     if string[i] == &quot;&lt;&quot;:         while i &lt; len(string):             i += 1             if string[i] == '&gt;':                 break     else:         new_string += string[i]     i += 1  print(new_string) </code></pre> <p>Outputs:</p> <pre><code> hello  hello  hey  </code></pre>"			2020-09-30 11:18:16.873 UTC
64135350	python|python-3.x	How to remove JavaScript & other tags using Python... without importing modules	"<p>For the first part of school project, I'm trying to figure out how to remove JavaScript <code>&lt;script {...} &gt;</code> and <code>&lt;/script {...} &gt;</code> tags as well as anything between <code>&lt;</code> and <code>&gt;</code>.</p> <p>However we can't import <strong>any</strong> modules (even built in Python ones) because apparently the marker might not be able to access them etc etc.</p> <p>I tried this:</p> <pre><code>text = &quot;&lt;script beep beep&gt; hello &lt;/script boop doop woop&gt; hello &lt;hi&gt; hey &lt;bye&gt;&quot; while text.find(&quot;&lt;script&quot;) &gt;= 0:     script_start = text.find(&quot;&lt;script&quot;)     script_end = text.find(&quot;&gt;&quot;, text.find(&quot;&lt;/script&quot;)) + 1     text = text[:script_start] + text[script_end:]  while text.find(&quot;&lt;&quot;) &gt;= 0:     script2_start = text.find(&quot;&lt;&quot;)     script2_end = text.find(&quot;&gt;&quot;) + 1     text = text[:script2_start] + text[script2_end:] </code></pre> <p>And that does work for smaller files but the project has to do with big text files (the simplified testing one we were given is 10.4MB) so it doesn't finish &amp; it just gets stuck.</p> <p>Anyone got any ideas to make it more efficient?</p>"	2020-09-30 10:10:24.063 UTC	64135724	"<p>You do not need to delete anything. In fact: you <strong>never</strong> want to modify strings.</p> <p>Strings are immuteable: every time you &quot;modify&quot; one, you instead create a new one and trash the old one. That is a waste of processor and memory.</p> <p>You are operating on files - so process it character-wise:</p> <ul> <li>remember if you are inside <code>&lt;...&gt;</code> or not</li> <li>if so, only important character is  <code>&gt;</code> to get outside again</li> <li>if outside and character is <code>&lt;</code> you get inside and ignore that character</li> <li>if outside and not <code>&lt;</code> you write the character to the output (-file)</li> </ul> <hr /> <pre><code># create file with open(&quot;somefile.txt&quot;,&quot;w&quot;) as f:     # up the multiplicator to 10000000 to create something in the megabyte range     f.write(&quot;&lt;script beep beep&gt; hello &lt;/script boop doop woop&gt; hello &lt;hi&gt; hey &lt;bye&gt; tata\n&quot;*10)  # open file to read from and file to write to with open(&quot;somefile.txt&quot;) as f, open(&quot;otherfile.txt&quot;,&quot;w&quot;) as out:     # starting outside     inside = False     # we iterate the file line by line     for line in f:         # and each line characterwise         for c in line:             if not inside and c == &quot;&lt;&quot;:                 inside = True             elif inside and c != &quot;&gt;&quot;:                 continue             elif inside and c == &quot;&gt;&quot;:                 inside = False             elif not inside:                 # only case to write to out                 out.write(c)  print(open(&quot;somefile.txt&quot;).read() + &quot;\n&quot;) print(open(&quot;otherfile.txt&quot;).read()) </code></pre> <p>Output:</p> <pre><code>&lt;script beep beep&gt; hello &lt;/script boop doop woop&gt; hello &lt;hi&gt; hey &lt;bye&gt; tata &lt;script beep beep&gt; hello &lt;/script boop doop woop&gt; hello &lt;hi&gt; hey &lt;bye&gt; tata &lt;script beep beep&gt; hello &lt;/script boop doop woop&gt; hello &lt;hi&gt; hey &lt;bye&gt; tata &lt;script beep beep&gt; hello &lt;/script boop doop woop&gt; hello &lt;hi&gt; hey &lt;bye&gt; tata &lt;script beep beep&gt; hello &lt;/script boop doop woop&gt; hello &lt;hi&gt; hey &lt;bye&gt; tata &lt;script beep beep&gt; hello &lt;/script boop doop woop&gt; hello &lt;hi&gt; hey &lt;bye&gt; tata &lt;script beep beep&gt; hello &lt;/script boop doop woop&gt; hello &lt;hi&gt; hey &lt;bye&gt; tata &lt;script beep beep&gt; hello &lt;/script boop doop woop&gt; hello &lt;hi&gt; hey &lt;bye&gt; tata &lt;script beep beep&gt; hello &lt;/script boop doop woop&gt; hello &lt;hi&gt; hey &lt;bye&gt; tata &lt;script beep beep&gt; hello &lt;/script boop doop woop&gt; hello &lt;hi&gt; hey &lt;bye&gt; tata    hello  hello  hey  tata  hello  hello  hey  tata  hello  hello  hey  tata  hello  hello  hey  tata  hello  hello  hey  tata  hello  hello  hey  tata  hello  hello  hey  tata  hello  hello  hey  tata  hello  hello  hey  tata  hello  hello  hey  tata </code></pre> <hr /> <p>If you arent allowed to directly operate with the files, read the file into a list that consumes 11+Mbyte of memory:</p> <pre><code>data = list(&quot;&lt;script beep beep&gt; hello &lt;/script boop doop woop&gt; hello &lt;hi&gt; hey &lt;bye&gt; tata\n&quot; * 10)  result = []  inside = False for c in data:     if inside:         if c == &quot;&gt;&quot;:             inside = False         # else ignore c - because we are inside     elif c == &quot;&lt;&quot;:         inside = True     else:         result.append(c)  print(''.join(result)) </code></pre> <p>this is still better then iteratively searching for the first occurrence of &quot;&lt;&quot; in the list but might need up to twice the memory of your source (if it does not contain any &lt;..&gt; you double the list).</p> <p>Operating the files is far more memory efficient then doing any inplace list modification (wich would be a third way to do this).</p> <hr /> <p>There are some glaring things you would also need to work around, f.e.</p> <pre><code>&lt;script type=&quot;text/javascript&quot;&gt; var i = 10; if (i &lt; 5) {   // some code } &lt;/script&gt; </code></pre> <p>will leave the &quot;code&quot; inside.</p> <hr /> <p>This might do the easier corner cases:</p> <pre><code># open file to read from and file to write to with open(&quot;somefile.txt&quot;) as f, open(&quot;otherfile.txt&quot;,&quot;w&quot;) as out:     # starting outside     inside = False     insideJS = False     jsStart = 0     # we iterate the file line by line     for line in f:          # string manipulation :/ - will remove &lt;script ...&gt; .. &lt;/script ..&gt;         # even over multiple lines - probably missed some cornercases.         while True:           if insideJS and not &quot;&lt;/script&quot; in line:               line = &quot;&quot;               break            if &quot;&lt;script&quot; in line:               insideJS = True               jsStart = line.index(&quot;&lt;script&quot;)               jsEnd = len(line)           elif insideJS:               jsStart = 0                      if not insideJS:               break            if &quot;&lt;/script&quot; in line:               jsEnd = line.index(&quot;&gt;&quot;, line.index(&quot;&lt;/script&quot;, jsStart))+1               line = line[:jsStart] + line[jsEnd:]               insideJS = False           else:               line = line[:jsStart]          # and each line characterwise         for c in line:             # ... same as above ... </code></pre>"			2020-09-30 10:33:25.29 UTC
64135350	python|python-3.x	How to remove JavaScript & other tags using Python... without importing modules	"<p>For the first part of school project, I'm trying to figure out how to remove JavaScript <code>&lt;script {...} &gt;</code> and <code>&lt;/script {...} &gt;</code> tags as well as anything between <code>&lt;</code> and <code>&gt;</code>.</p> <p>However we can't import <strong>any</strong> modules (even built in Python ones) because apparently the marker might not be able to access them etc etc.</p> <p>I tried this:</p> <pre><code>text = &quot;&lt;script beep beep&gt; hello &lt;/script boop doop woop&gt; hello &lt;hi&gt; hey &lt;bye&gt;&quot; while text.find(&quot;&lt;script&quot;) &gt;= 0:     script_start = text.find(&quot;&lt;script&quot;)     script_end = text.find(&quot;&gt;&quot;, text.find(&quot;&lt;/script&quot;)) + 1     text = text[:script_start] + text[script_end:]  while text.find(&quot;&lt;&quot;) &gt;= 0:     script2_start = text.find(&quot;&lt;&quot;)     script2_end = text.find(&quot;&gt;&quot;) + 1     text = text[:script2_start] + text[script2_end:] </code></pre> <p>And that does work for smaller files but the project has to do with big text files (the simplified testing one we were given is 10.4MB) so it doesn't finish &amp; it just gets stuck.</p> <p>Anyone got any ideas to make it more efficient?</p>"	2020-09-30 10:10:24.063 UTC	64136008	"<p>Here is one approach with <a href=""https://www.cs.odu.edu/%7Ezeil/cs390/latest/Public/fsa/index.html"" rel=""nofollow noreferrer"">FSA</a>:</p> <pre><code>output = ''  NORMAL, INSIDE_TAG = range(2) # availale states  state = NORMAL # start with normal state  s = '&lt;script beep beep&gt; hello &lt;/script boop doop woop&gt; hello &lt;hi id=&quot;someid&quot; class=&quot;some class&quot;&gt;&lt;a&gt; hey &lt;/a&gt;&lt;bye&gt;'  for char in s:   if char == '&lt;': # if we encounter '&lt;' we enter the INSIDE_TAG state     state = INSIDE_TAG     continue   elif char == '&gt;': # we can safely exit the INSIDE_TAG state     state = NORMAL     continue    if state == NORMAL:     output += char  # add the char to the output only if we are in normal state  print(output) </code></pre> <p>If parsing the tags semantic is required, make sure to use stack (can be implemented with <code>list</code>).</p> <hr /> <p>It would increase the complexity but you go achieve a robust checking with FSM.</p> <p>see the following example:</p> <pre><code>output = ''  (   NORMAL,   TAG_ATTRIBUTE,   INSIDE_JAVASCRIPT,   EXITING_TAG,   BEFORE_TAG_OPENING_OR_ENDING,   TAG_NAME,   ABOUT_TO_EXIT_JS ) = range(7) # availale states  state = NORMAL # start with normal state  tag_name = ''  s = &quot;&quot;&quot; &lt;script type=&quot;text/javascript&quot;&gt;   var i = 10;   if (i &lt; 5) {     // some code   } &lt;/script&gt; &lt;sometag&gt;   test string   &lt;a href=&quot;http://google.com&quot;&gt; another string&lt;/a&gt; &lt;/sometag&gt; &quot;&quot;&quot;  for char in s:   # print(char, '-', state, ':', tag_name)   if state == NORMAL:     if char == '&lt;':       state = BEFORE_TAG_OPENING_OR_ENDING     else:       output += char   elif state == BEFORE_TAG_OPENING_OR_ENDING:     if char == '/':       state = EXITING_TAG     else:       tag_name += char       state = TAG_NAME   elif state == TAG_ATTRIBUTE:     if char == '&gt;':       if tag_name == 'script':         state = INSIDE_JAVASCRIPT       else:         state = NORMAL   elif state == TAG_NAME:     if char == ' ':       state = TAG_ATTRIBUTE     elif char == '&gt;':       if tag_name == 'script':         state = INSIDE_JAVASCRIPT       else:         state = NORMAL     else:       tag_name += char   elif state == INSIDE_JAVASCRIPT:     if char == '&lt;':       state = ABOUT_TO_EXIT_JS     else:       pass       # output += char   elif state == ABOUT_TO_EXIT_JS:     if char == '/':       state = EXITING_TAG       tag_name = ''     else:       # output += '&lt;'       state = INSIDE_JAVASCRIPT   elif state == EXITING_TAG:     if char == '&gt;':       state = NORMAL  print(output) </code></pre> <p><strong>OUTPUT:</strong></p> <pre><code>  test string   another string </code></pre>"			2020-09-30 10:49:37.987 UTC
64146082	javascript|python|geolocation|geometry|shapely	python shapely unary_union in javascript	"<p>Is there a way to create the <code>unary_union</code> from python <code>shapely</code> module for JavaScript?</p> <pre><code>from shapely.ops import unary_union </code></pre> <p>I have seen turf.js has <code>union()</code> but this isn't equal to the <code>unary_union</code>.</p> <p>Or does anyone know what the <code>unary_union</code> actually does? Maybe I can try to recreate it, I have seen the source code in python but it looked very complicated.</p> <p>The above code takes to line coords and merges them into one. The it converts to a LineString for shapely to read. But not sure whats the purpose of the <code>unary_union</code> (but it is the only way that gives me the correct result when comparing with actual data).</p> <p>The idea was to get the area before/after the intersects, <code>unary_union</code> helped with finding the area before the intersect and the other area after the intersect.</p> <p><strong>UPDATE:</strong></p> <p>This is the full code of the program which gets me the areas of the intersected lines:</p> <pre><code>import numpy as np from shapely.geometry import LineString from shapely.ops import unary_union, polygonize  avg_coords = [(0.0, 0.0), (4.872117, 2.29658), (5.268545, 2.4639225), (5.664686, 2.6485724), (6.059776, 2.8966842), (6.695151, 3.0986626), (7.728006, 3.4045217), (8.522297, 3.652668), (9.157002, 3.895031), (10.191483, 4.1028132), (10.827622, 4.258638), (11.38593, 4.2933016), (11.86478, 4.3048816), (12.344586, 4.258769), (12.984073, 4.2126703), (13.942729, 4.1781383), (14.58212, 4.137809), (15.542498, 3.99943), (16.502588, 3.878359), (17.182951, 3.7745714), (18.262657, 3.6621647), (19.102558, 3.567045), (20.061789, 3.497897), (21.139917, 3.4806826), (22.097425, 3.5153809), (23.65388, 3.5414772), (24.851482, 3.541581), (26.04966, 3.507069), (27.72702, 3.463945), (28.925198, 3.429433), (29.883854, 3.3949006), (31.08246, 3.3344274), (31.92107, 3.317192), (33.716183, 3.3952322), (35.63192, 3.4213595), (37.427895, 3.4474766), (39.343628, 3.473604), (41.49874, 3.508406), (43.773468, 3.5518723), (46.287716, 3.595359), (49.28115, 3.6302335), (52.633293, 3.6997545), (54.30922, 3.7431688), (55.8651, 3.8038807), (58.738773, 3.8387446), (60.893887, 3.8735466), (63.647655, 3.9170544), (66.760704, 3.960593), (68.79663, 3.9607692), (70.23332, 3.986855), (72.867905, 3.995737), (75.38245, 4.0219164), (77.778656, 3.9615464), (79.337975, 3.8145657), (80.41826, 3.6675436), (80.899734, 3.5204697), (81.62059, 3.38207), (82.34045, 3.3042476), (83.30039, 3.1918304), (84.38039, 3.062116), (84.50359, 2.854434), (83.906364, 2.7591898), (83.669716, 2.586092), (83.43435, 2.3351095), (83.19727, 2.1879735), (82.84229, 1.9283267), (82.48516, 1.7984879), (81.65014, 1.5993768), (80.454544, 1.4781193), (79.13962, 1.3308897), (77.944595, 1.1750168), (76.39001, 1.0364205), (74.59633, 0.87184185), (71.60447, 0.741775), (70.04903, 0.6551017), (58.3, 0.0)] model_coords = [(0.0, 0.0), (0.6699889, 0.18807), (1.339894, 0.37499), (2.009583, 0.55966), (2.67915, 0.74106), (3.348189, 0.91826), (4.016881, 1.0904), (4.685107, 1.2567), (5.359344, 1.418), (6.026172, 1.5706), (6.685472, 1.714), (7.350604, 1.8508), (8.021434, 1.9803), (8.684451, 2.0996), (9.346408, 2.2099), (10.0066, 2.311), (10.66665, 2.4028), (11.32436, 2.4853), (11.98068, 2.5585), (12.6356, 2.6225), (13.29005, 2.6775), (13.93507, 2.7232), (14.58554, 2.7609), (15.23346, 2.7903), (15.87982, 2.8116), (16.52556, 2.8254), (17.16867, 2.832), (17.80914, 2.8317), (18.44891, 2.825), (19.08598, 2.8124), (19.72132, 2.7944), (20.35491, 2.7713), (20.98673, 2.7438), (21.61675, 2.7121), (22.24398, 2.677), (22.86939, 2.6387), (23.49297, 2.5978), (24.1147, 2.5548), (24.73458, 2.51), (25.3526, 2.464), (25.96874, 2.4171), (26.58301, 2.3697), (27.1954, 2.3223), (27.80491, 2.2751), (28.41354, 2.2285), (29.02028, 2.1829), (29.62512, 2.1384), (30.22809, 2.0954), (30.82917, 2.0541), (31.42837, 2.0147), (32.02669, 1.9775), (32.62215, 1.9425), (33.21674, 1.9099), (33.80945, 1.8799), (34.40032, 1.8525), (34.98933, 1.8277), (35.5765, 1.8058), (36.16283, 1.7865), (36.74733, 1.7701), (37.33002, 1.7564), (37.91187, 1.7455), (38.49092, 1.7372), (39.06917, 1.7316), (39.64661, 1.7285), (40.22127, 1.7279), (40.79514, 1.7297), (41.36723, 1.7337), (41.93759, 1.7399), (42.50707, 1.748), (43.07386, 1.7581), (43.63995, 1.7699), (44.20512, 1.7832), (44.76772, 1.7981), (45.3295, 1.8143), (45.88948, 1.8318), (46.44767, 1.8504), (47.00525, 1.8703), (47.55994, 1.8911), (48.11392, 1.9129), (48.6661, 1.9356), (49.21658, 1.959), (49.76518, 1.9832), (50.31305, 2.0079), (50.85824, 2.033), (51.40252, 2.0586), (51.94501, 2.0845), (52.48579, 2.1107), (53.02467, 2.1369), (53.56185, 2.1632), (54.09715, 2.1895), (54.63171, 2.2156), (55.1634, 2.2416), (55.69329, 2.2674), (56.22236, 2.2928), (56.74855, 2.3179), (57.27392, 2.3426), (57.7964, 2.3668), (58.31709, 2.3905), (58.83687, 2.4136), (59.35905, 2.4365), (59.87414, 2.4585), (60.38831, 2.4798), (60.8996, 2.5006), (61.40888, 2.5207), (61.91636, 2.5401), (62.42194, 2.5589), (62.92551, 2.577), (63.42729, 2.5945), (63.92607, 2.6113), (64.42384, 2.6275), (64.91873, 2.643), (65.4127, 2.658), (65.90369, 2.6724), (66.39266, 2.6862), (66.87964, 2.6995), (67.36373, 2.7123), (67.84679, 2.7246), (68.32689, 2.7364), (68.80595, 2.7478), (69.28194, 2.7588), (69.756, 2.7695), (70.22709, 2.7798), (70.69707, 2.7898), (71.16405, 2.7995), (71.62902, 2.809), (72.0919, 2.8183), (72.55277, 2.8273), (73.01067, 2.8362), (73.46734, 2.845), (73.92112, 2.8536), (74.37269, 2.8622), (74.82127, 2.8706), (75.26884, 2.8791), (75.71322, 2.8875), (76.15559, 2.8958), (76.59488, 2.9042), (77.03304, 2.9126), (77.46812, 2.921), (77.90111, 2.9294), (78.33199, 2.9379), (78.75986, 2.9464), (79.18652, 2.955), (79.60912, 2.9637), (80.03049, 2.9724), (80.44985, 2.9811), (80.86613, 2.99), (81.2802, 2.9989), (81.69118, 3.0078), (82.10006, 3.0168), (82.50674, 3.0259), (82.91132, 3.035), (83.31379, 3.0441), (83.71307, 3.0533), (84.10925, 3.0625), (84.50421, 3.0717), (84.8961, 3.0809), (85.28577, 3.0901), (85.67334, 3.0993), (86.05771, 3.1085), (86.43989, 3.1176), (86.81896, 3.1267), (87.19585, 3.1358), (87.57063, 3.1448), (87.94319, 3.1537), (88.31257, 3.1626), (88.67973, 3.1713), (89.04372, 3.18), (89.40659, 3.1886), (89.7652, 3.197), (90.12457, 3.2053), (90.47256, 3.2135), (90.82946, 3.2216), (91.17545, 3.2295), (91.52045, 3.2373), (91.86441, 3.2449), (92.20641, 3.2524), (92.54739, 3.2597), (92.88728, 3.2669), (93.21538, 3.2739), (93.55325, 3.2807), (93.87924, 3.2874), (94.20424, 3.2939), (94.52822, 3.3002), (94.85012, 3.3064), (95.16219, 3.3123), (95.48208, 3.3182), (95.79107, 3.3238), (96.09807, 3.3293), (96.40505, 3.3346), (96.71003, 3.3397), (97.01401, 3.3447), (97.31592, 3.3496), (97.60799, 3.3542), (97.90789, 3.3587), (98.19686, 3.3631), (98.48386, 3.3673), (98.77085, 3.3714), (99.05574, 3.3753), (99.32983, 3.3791), (99.6127, 3.3828), (99.8837, 3.3863), (100.1538, 3.3897), (100.4326, 3.393), (100.6897, 3.3961), (100.9566, 3.3991), (101.2215, 3.402), (101.4756, 3.4048), (101.7375, 3.4075), (101.9885, 3.4101), (102.2385, 3.4126), (102.4875, 3.4149), (102.7354, 3.4172), (102.9714, 3.4194), (103.2163, 3.4214), (103.4493, 3.4234), (103.6823, 3.4253), (103.9133, 3.4271), (104.1433, 3.4288), (104.3712, 3.4304), (104.5882, 3.4319), (104.8141, 3.4333), (105.0291, 3.4346), (105.2421, 3.4358), (105.4541, 3.437), (105.6651, 3.438), (105.8751, 3.439), (106.083, 3.4399), (106.28, 3.4407), (106.4759, 3.4414), (106.6699, 3.442), (106.8629, 3.4425), (107.0549, 3.443), (107.2458, 3.4433), (107.4249, 3.4435), (107.6128, 3.4437), (107.7897, 3.4438), (107.9647, 3.4437), (108.1387, 3.4436), (108.3116, 3.4433), (108.4737, 3.443), (108.6436, 3.4426), (108.8027, 3.4421), (108.9706, 3.4414), (109.1265, 3.4407), (109.2814, 3.4399), (109.4255, 3.439), (109.5784, 3.4379), (109.7195, 3.4368), (109.8694, 3.4356), (110.0084, 3.4342), (110.1454, 3.4328), (110.2813, 3.4313), (110.4162, 3.4296), (110.5403, 3.4279), (110.6722, 3.426), (110.7932, 3.424), (110.9132, 3.422), (111.0322, 3.4198), (111.1492, 3.4175), (111.2651, 3.4151), (111.3701, 3.4127), (111.483, 3.4101), (111.585, 3.4074), (111.686, 3.4046), (111.786, 3.4017), (111.884, 3.3987), (111.9809, 3.3956), (112.0669, 3.3924), (112.1608, 3.3891), (112.2448, 3.3857), (112.3268, 3.3822), (112.4078, 3.3786), (112.4867, 3.3749), (112.5548, 3.3711), (112.6317, 3.3672), (112.6978, 3.3632), (112.7726, 3.3591), (112.8356, 3.3549), (112.8975, 3.3506), (112.9476, 3.3462), (113.0076, 3.3417), (113.0655, 3.3372), (113.1125, 3.3325), (113.1584, 3.3278), (113.2024, 3.3229), (113.2464, 3.318), (113.2884, 3.313), (113.3283, 3.3079), (113.3584, 3.3027), (113.3963, 3.2974), (113.4233, 3.292), (113.4492, 3.2865), (113.4742, 3.281), (113.4972, 3.2753), (113.5201, 3.2696), (113.5312, 3.2638), (113.5501, 3.2579), (113.5591, 3.2519), (113.5661, 3.2459), (113.5721, 3.2397), (113.577, 3.2335), (113.5809, 3.2272), (113.573, 3.2208), (113.5749, 3.2143), (113.5649, 3.2077), (113.5539, 3.2011), (113.5409, 3.1944), (113.5278, 3.1876), (113.5128, 3.1807), (113.4967, 3.1737), (113.4697, 3.1667), (113.4418, 3.1596), (113.4227, 3.1524), (113.3917, 3.145), (113.3597, 3.1375), (113.3266, 3.1298), (113.2827, 3.1218), (113.2475, 3.1136), (113.2016, 3.1051), (113.1635, 3.0964), (113.1155, 3.0873), (113.0655, 3.0779), (113.0144, 3.0683), (112.9525, 3.0583), (112.8994, 3.048), (112.8345, 3.0373), (112.7793, 3.0264), (112.7123, 3.0152), (112.6453, 3.0037), (112.5763, 2.9919), (112.5063, 2.9798), (112.4352, 2.9674), (112.3533, 2.9548), (112.2801, 2.9419), (112.1952, 2.9287), (112.1102, 2.9153), (112.034, 2.9017), (111.9361, 2.8879), (111.8481, 2.8739), (111.7581, 2.8597), (111.667, 2.8453), (111.5661, 2.8307), (111.473, 2.816), (111.3689, 2.801), (111.2639, 2.786), (111.1579, 2.7708), (111.0509, 2.7555), (110.9428, 2.74), (110.8239, 2.7245), (110.7138, 2.7088), (110.5928, 2.6931), (110.4709, 2.6772), (110.3578, 2.6613), (110.2338, 2.6453), (110.1087, 2.6292), (109.9826, 2.613), (109.8457, 2.5968), (109.7176, 2.5805), (109.5787, 2.5642), (109.4496, 2.5478), (109.3086, 2.5314), (109.1666, 2.5149), (109.0236, 2.4984), (108.8806, 2.4819), (108.7355, 2.4653), (108.5905, 2.4488), (108.4434, 2.4322), (108.2865, 2.4155), (108.1384, 2.3989), (107.9794, 2.3822), (107.8195, 2.3655), (107.6684, 2.3488), (107.5063, 2.3321), (107.3374, 2.3156), (107.1744, 2.2989), (107.0104, 2.2822), (106.8442, 2.2654), (106.6683, 2.2487), (106.5012, 2.232), (106.3242, 2.2152), (106.1452, 2.1985), (105.9662, 2.1818), (105.7862, 2.165), (105.6052, 2.1483), (105.4232, 2.1316), (105.2402, 2.1149), (105.0572, 2.0981), (104.8721, 2.0814), (104.6772, 2.0647), (104.492, 2.048), (104.295, 2.0313), (104.098, 2.0147), (103.9, 1.998), (103.701, 1.9813), (103.502, 1.9647), (103.301, 1.948), (103.1, 1.9314), (102.899, 1.9148), (102.6959, 1.8982), (102.483, 1.8816), (102.2789, 1.865), (102.0649, 1.8484), (101.8588, 1.8318), (101.6428, 1.8153), (101.4268, 1.7988), (101.2098, 1.7822), (100.9918, 1.7657), (100.7728, 1.7492), (100.5538, 1.7328), (100.3338, 1.7163), (100.1128, 1.6999), (99.89169, 1.6834), (99.65978, 1.667), (99.43769, 1.6506), (99.20477, 1.6343), (98.98066, 1.6179), (98.74665, 1.6016), (98.51164, 1.5852), (98.27574, 1.5689), (98.04964, 1.5527), (97.81264, 1.5364), (97.57562, 1.5202), (97.33752, 1.5039), (97.08962, 1.4877), (96.8506, 1.4716), (96.61061, 1.4554), (96.37051, 1.4393), (96.12058, 1.4232), (95.87949, 1.4071), (95.62759, 1.391), (95.38547, 1.375), (95.13258, 1.359), (94.88946, 1.343), (94.63548, 1.3271), (94.38145, 1.3111), (94.12645, 1.2952), (93.87144, 1.2793), (93.61545, 1.2635), (93.35946, 1.2477), (93.10343, 1.2319), (92.84642, 1.2161), (92.58843, 1.2004), (92.33042, 1.1846), (92.07232, 1.169), (91.8034, 1.1533), (91.54331, 1.1377), (91.2744, 1.1221), (91.0133, 1.1065), (90.7434, 1.091), (90.48229, 1.0755), (90.21139, 1.0601), (89.9493, 1.0446), (89.67728, 1.0292), (89.40428, 1.0139), (89.13137, 0.99855), (88.86826, 0.98325), (88.59427, 0.96799), (88.32026, 0.95277), (88.04527, 0.93758), (87.77126, 0.92242), (87.4972, 0.90731), (87.21732, 0.89222), (86.94719, 0.87718), (86.66711, 0.86217), (86.3773, 0.8472), (86.10719, 0.83227), (85.82721, 0.81738), (85.5472, 0.80252), (85.26721, 0.7877), (84.9872, 0.77292), (84.7071, 0.75819), (84.41721, 0.74349), (84.1371, 0.72883), (83.84721, 0.71421), (83.5671, 0.69963), (83.27721, 0.68509), (82.99711, 0.6706), (82.70711, 0.65615), (82.41721, 0.64173), (82.1371, 0.62736), (81.8471, 0.61304), (81.55722, 0.59875), (81.27709, 0.58451), (80.98712, 0.57031), (80.697, 0.55616), (80.39711, 0.54205), (80.10722, 0.52798), (79.8271, 0.51396), (79.53701, 0.49999), (79.23711, 0.48605), (78.9471, 0.47217), (78.65701, 0.45833), (78.3571, 0.44453), (78.06712, 0.43078), (77.77701, 0.41708), (77.4771, 0.40343), (77.18701, 0.38982), (76.8871, 0.37626), (76.59711, 0.36274), (76.30701, 0.34928), (76.0071, 0.33586), (75.7169, 0.32249), (75.4071, 0.30917), (75.11701, 0.29589), (74.8171, 0.28267), (74.52701, 0.26949), (74.22711, 0.25636), (73.937, 0.24329), (73.63691, 0.23026), (73.3271, 0.21728), (73.03699, 0.20436), (72.73712, 0.19148), (72.4469, 0.17865), (72.13712, 0.16588), (71.84701, 0.15315), (71.547, 0.14048), (71.24701, 0.12786), (70.947, 0.11528), (70.64701, 0.10277), (70.3471, 0.090298), (70.05691, 0.077883), (69.74712, 0.06552), (69.457, 0.05321), (69.1569, 0.040952), (68.84709, 0.028747), (68.557, 0.016595), (68.25701, 0.0)]  polygon_points = [] #creates a empty list where we will append the points to create the polygon  for xyvalue in avg_coords:     polygon_points.append([xyvalue[0],xyvalue[1]]) #append all xy points for curve 1  for xyvalue in model_coords[::-1]:     polygon_points.append([xyvalue[0],xyvalue[1]]) #append all xy points for curve 2 in the reverse order (from last point to first point)  for xyvalue in avg_coords[0:1]:     polygon_points.append([xyvalue[0],xyvalue[1]]) #append the first point in curve 1 again, to it &quot;closes&quot; the polygon  line_non_simple = LineString(polygon_points) #converts the intersecting array to linestring mls = unary_union(line_non_simple) #not quite sure what this does but it works  avg_poly = []  model_poly = []  for xyvalue in avg_coords:     avg_poly.append([xyvalue[0],xyvalue[1]])   for xyvalue in model_coords:     model_poly.append([xyvalue[0],xyvalue[1]])    line_non_simple = LineString(polygon_points) mls = unary_union(line_non_simple)  Area_cal =[]  for polygon in polygonize(mls):     Area_cal.append(polygon.area)     print(polygon.area)# print area of each section      Area_poly = (np.asarray(Area_cal).sum())      print(Area_poly)#print combined area </code></pre> <p>When plotted it looks like this</p> <p><a href=""https://i.stack.imgur.com/LYPog.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/LYPog.png"" alt=""enter image description here"" /></a></p>"	2020-09-30 21:35:42.437 UTC	65641921	"<p>So to create simple polygons from a complex polygon (self-intersecting), is to use <code>turf.unkink()</code> for Javascript turf.js. The area can also be found using the <a href=""https://www.seas.upenn.edu/%7Eese502/lab-content/extra_materials/Polygon%20Area%20and%20Centroid.pdf"" rel=""nofollow noreferrer"">polygon area equation</a>.</p> <p>Example code below.</p> <p>Firstly, join the end point of the first curve with end of second curve, then join the start point of the second curve with start point of the first point. This creates a single polyon of the two curves.</p> <p>Like the following:</p> <pre><code>function zip(arrays) {   return arrays[0].map((_,i) =&gt; {     return arrays.map((array) =&gt; {return array[i]})   }); }  var xy_1 = zip([x1,y1]); var xy_2 = zip([x2,y2]);  var newPolygon = [] //creates a empty list where we will append the points to create the polygon  for(var i = 0; i &lt; xy_1.length; i++)    newPolygon.push([xy_1[i][0],xy_1[i][1]]) //append all xy points for curve 1  for(var i = xy_2.length - 1; i &gt;= 0; i--)   newPolygon.push([xy_2[i][0],xy_2[i][1]]) //append all xy points for curve 2 in the reverse order (from last point to first point)  console.log(newPolygon) </code></pre> <p>Then using the <code>unkink()</code> function from turf.js you can simplify the self-intersecting polygon into simple polygons and then find area.</p> <p><strong>NOTE:</strong> The area is calculated in Cartesian form, as <code>turf.area</code> gives different area.</p> <pre><code>const line_non_simple = turf.polygon([some_intersecting_polygon_coords])  var result = turf.unkinkPolygon(line_non_simple);  var A_modelArea = []  function findModelArea(multiCoords){   //Split multicoords to x, y    var xNew = []   var yNew = []   for(var i = 0; i &lt; multiCoords.length; i++ ){     xNew.push(multiCoords[i][0]);     yNew.push(multiCoords[i][1])   }   //Finds the area using the x, y   var avg_sum = []   for(var i = 0; i &lt; multiCoords.length -1; i++ ){     avg_sum.push(xNew[i]*yNew[i+1]-xNew[i+1]*yNew[i])   }   var avg_area = Math.abs(0.5*(avg_sum.reduce((a, b) =&gt; a + b)))    A_modelArea.push(avg_area); }  result.features.map(i =&gt; findModelArea(i.geometry.coordinates[0]))  console.log(A_modelArea.reduce((a, b) =&gt; a + b)) </code></pre>"			2021-01-09 11:08:50.217 UTC
64147010	python|selenium|web-scraping|web-crawler	Crawling JavaScript site with selenium (python) returns error: Message: no such element: Unable to locate element:	"<p>I am new to python and webcrawling in general. I started with BeautifulSoup but quickly learned that sites that use JavaScript cant be crawled with <code>bs4</code>, so I started using <code>selenium</code>. Selenium, however, also returns an error and cant find the elements (search box) I am trying to scrape. So far I have also learned, that the page I am trying to crawl probably uses <code>Angular</code>, which somehow hides the elements I am looking for. Is there a way I could still use selenium or another package to enter search queries and crawl <a href=""https://ec.europa.eu/info/funding-tenders/opportunities/portal/screen/home"" rel=""nofollow noreferrer"">the site</a>?</p> <p>Any element I try to find cant be found, ive also tried finding them via <code>xpath</code> or <code>name</code> with out luck. I believe anything inside <code>&lt;app-root&gt;&lt;/app-root&gt;</code> cant be found simply with selenium.</p> <p>Here is my code so far</p> <pre><code>from selenium import webdriver from selenium.webdriver.chrome.options import Options from selenium.webdriver.common.by import By from selenium.webdriver.common.keys import Keys from selenium.webdriver.support.ui import WebDriverWait from selenium.webdriver.support.expected_conditions import presence_of_element_located import time import sys  chrome_driver_path = &quot;path&quot;    chrome_options = Options() chrome_options.add_argument(&quot;--headless&quot;) chrome_options.add_argument('--no-sandbox')  webdriver = webdriver.Chrome(     executable_path=chrome_driver_path,     options=chrome_options )  useBaseURL = &quot;https://ec.europa.eu/info/funding-tenders/opportunities/portal/screen/home&quot;  with webdriver as driver:     # timeout     wait = WebDriverWait(driver, 10)      driver.get(useBaseURL)          searchbox = driver.find_element_by_class_name(&quot;ng-tns-c6-0 ui-inputtext ui-widget ui-state-default ui-corner-all ui-autocomplete-input ng-star-inserted&quot;)        driver.close() </code></pre>"	2020-09-30 23:16:58.747 UTC	64148646	"<p>The following sends keys to that element. Your error was the usage of a compounded class name as a class name. I also added the next click.</p> <pre><code>driver.get(useBaseURL) wait.until(EC.element_to_be_clickable((By.CSS_SELECTOR, &quot; p-autocomplete &gt; span &gt; input&quot;))).send_keys(&quot;AAA&quot;)  driver.find_element_by_css_selector('button.btn.btn-accent.btn-search').click() </code></pre> <p>Import</p> <pre><code>from selenium.webdriver.support import expected_conditions as EC </code></pre>"			2020-10-01 03:27:23.8 UTC
64156493	javascript|python-3.x|date|datetime|time	What is python3 equivalent of Date.now() of javascript?	"<p>In JavaScript, I can assign:</p> <p><code>var now = Date.now();</code></p> <p>Then use now to calculate as a number variable</p> <pre class=""lang-py prettyprint-override""><code>&gt;&gt;&gt; import datetime &gt;&gt;&gt; datetime.datetime.now() &gt;&gt;&gt; datetime.datetime.today() </code></pre> <p>In python3, Using upper code doesnt seem helpful. Any idea what is equivalent of Date.now().</p>"	2020-10-01 13:33:34.557 UTC	64156575	<p>You should use <code>time</code> module.</p> <pre><code>&gt;&gt;&gt; import time &gt;&gt;&gt; int(time.time() * 1000) #for getting the millisecs  1601559393404 </code></pre>			2020-10-01 13:37:22.483 UTC
64156493	javascript|python-3.x|date|datetime|time	What is python3 equivalent of Date.now() of javascript?	"<p>In JavaScript, I can assign:</p> <p><code>var now = Date.now();</code></p> <p>Then use now to calculate as a number variable</p> <pre class=""lang-py prettyprint-override""><code>&gt;&gt;&gt; import datetime &gt;&gt;&gt; datetime.datetime.now() &gt;&gt;&gt; datetime.datetime.today() </code></pre> <p>In python3, Using upper code doesnt seem helpful. Any idea what is equivalent of Date.now().</p>"	2020-10-01 13:33:34.557 UTC	71357658	"<p><a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/now"" rel=""nofollow noreferrer"">Date.now()</a> returns the number of milliseconds elapsed since January 1, 1970 00:00:00 UTC. The Python 3.3 and later equivalent is:</p> <pre class=""lang-py prettyprint-override""><code>from datetime import datetime, timezone  now_ms = int(datetime.now(tz=timezone.utc).timestamp() * 1000) </code></pre> <p>Without <code>tz=timezone.utc</code>, <a href=""https://docs.python.org/3/library/datetime.html#datetime.datetime.timestamp"" rel=""nofollow noreferrer"">datetime.timestamp</a> will use a naive datetime, usually set to your local time with timezone, daylight savings time, etc. This can be a subtle source of bugs, when going from Python to Javascript, between development environments and production, or around daylight savings time transitions.</p>"			2022-03-04 22:03:16.737 UTC
64273471	python|python-3.x	How to process javascript for scraping in python?	<p>I have to make a script to extract a url from a site. As I understand this url is generated by javascript when the user click the &quot;play&quot; button (it's an audio stream url). I know that  mechanize python module doesn't support javascript. Then what should I use to detect the url from that button ?</p>	2020-10-09 03:18:07.233 UTC	64273644	"<p>You can use beautifulsoup -- <a href=""https://pypi.org/project/beautifulsoup4/"" rel=""nofollow noreferrer"">https://pypi.org/project/beautifulsoup4/</a> <a href=""https://www.crummy.com/software/BeautifulSoup/bs4/doc/#:%7E:text=Beautiful%20Soup%20is%20a%20Python,hours%20or%20days%20of%20work"" rel=""nofollow noreferrer"">https://www.crummy.com/software/BeautifulSoup/bs4/doc/#:~:text=Beautiful%20Soup%20is%20a%20Python,hours%20or%20days%20of%20work</a>.</p> <p>It's very easy.</p>"			2020-10-09 03:44:19.787 UTC
64310692	javascript|python	javascript equivalent for python regex yes-pattern no-pattern	"<p>In python there is a syntax for - if a capture group exists then x else y e.g.</p> <pre class=""lang-py prettyprint-override""><code>&gt;&gt;&gt; pat = re.compile('(?:(a)|(c))b(?(1)a|c)') # should only match 'aba' or 'cbc' &gt;&gt;&gt; pat.match('abc') None &gt;&gt;&gt; pat.match('aba') &lt;re.Match object; span=(0, 3), match='aba'&gt; &gt;&gt;&gt; pat.match('cba') None &gt;&gt;&gt; pat.match('cbc') &lt;re.Match object; span=(0, 3), match='cbc'&gt; </code></pre> <p>How might one achieve a similar expression in javascript.</p> <p>Leading to a general approach for converting the python regex syntax to javascript</p> <pre class=""lang-py prettyprint-override""><code>(?(id/name)yes-pattern|no-pattern) </code></pre> <p>I've tried a few ideas but haven't found an approach that's worked</p>"	2020-10-12 01:50:03.777 UTC	64310825	"<p>I'm not sure if Javascript has conditionals the way python does, but I think something like this should work:</p> <pre class=""lang-js prettyprint-override""><code>/(.+(?&lt;=^(a|c))b(a|c))$/g </code></pre> <p>The <code>.+</code> at the front is used to actually accumulate tokens, and then the conditional is replaced with a positive look-behind (<code>?&lt;=...</code>) but instead of a reference, we include the actual pattern we are looking for.</p>"			2020-10-12 02:12:16.957 UTC
64310692	javascript|python	javascript equivalent for python regex yes-pattern no-pattern	"<p>In python there is a syntax for - if a capture group exists then x else y e.g.</p> <pre class=""lang-py prettyprint-override""><code>&gt;&gt;&gt; pat = re.compile('(?:(a)|(c))b(?(1)a|c)') # should only match 'aba' or 'cbc' &gt;&gt;&gt; pat.match('abc') None &gt;&gt;&gt; pat.match('aba') &lt;re.Match object; span=(0, 3), match='aba'&gt; &gt;&gt;&gt; pat.match('cba') None &gt;&gt;&gt; pat.match('cbc') &lt;re.Match object; span=(0, 3), match='cbc'&gt; </code></pre> <p>How might one achieve a similar expression in javascript.</p> <p>Leading to a general approach for converting the python regex syntax to javascript</p> <pre class=""lang-py prettyprint-override""><code>(?(id/name)yes-pattern|no-pattern) </code></pre> <p>I've tried a few ideas but haven't found an approach that's worked</p>"	2020-10-12 01:50:03.777 UTC	64310709	"<p>For this particular case, you don't need if/else syntax, you can backreference a single capture group:</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-js lang-js prettyprint-override""><code>const pattern = /([ac])b\1/; console.log(   pattern.test('abc'),   pattern.test('aba'),   pattern.test('cbc'), );</code></pre> </div> </div> </p>"			2020-10-12 01:52:45.143 UTC
64321439	javascript|python	Does the concept of global and local variable differ in python and javascript?	"<p>I know Python a bit, I am trying to learn JS and getting a bit confused about the concepts of Global and Local variables in JS. Like in this code in JS ---&gt;</p> <pre class=""lang-js prettyprint-override""><code>function queue(arr, item){   arr.push(item)   arr.shift()  } a = [1,2,3,4,5] queue(a, 6) console.log(a)   // O/P : [2,3,4,5,6] </code></pre> <p>Output --&gt; [2,3,4,5,6]</p> <p>But this output is not possible in Python. Another code in JS ---&gt;</p> <pre class=""lang-js prettyprint-override""><code>glo = 14 function myWorld(){   lo = ++glo   glo = 5   return l }  console.log(myWorld())   // O/P : 15 console.log(glo)        // O/P : 5  </code></pre> <p>This is also not possible in python. This is possible in python if <code>glo</code> is a list and we update <code>glo[i] = 5</code> inside the function. I am getting confused. Please help and I would appreciate if you provide a good resource for learning JS.</p> <p>I am a 2020 Grad. I am also preparing for interviews and kind of feeling lost in the way, any help will be much appreciated. Thanks very much in advance.</p>"	2020-10-12 16:10:12.867 UTC	64321910	"<p>Array is passed to the function by reference. So when you <code>shift</code> you aren't shifting on a copy of it but on the array itself modyfing it.</p> <p>Python behave the same if you for example define:</p> <pre><code>def queue(arr, item):     arr.append(item)     arr.pop(0) </code></pre> <p>In general you can search some tutorials relative to the concept of <code>scope</code> in js.</p> <p>See for example <a href=""https://www.w3schools.com/js/js_scope.asp"" rel=""nofollow noreferrer"">js scope</a></p>"			2020-10-12 16:42:32.35 UTC
64338009	javascript|python|selenium|parsing|html-parsing	How do I execute a JavaScript code in python using selenium?	"<p>I try to extract some info through selenium using these:</p> <pre><code>from selenium import webdriver  # $ pip install selenium from selenium.webdriver.chrome.options import Options  path = 'C:/Users/Жираслан/Downloads/chromedriver_win32 (1)/chromedriver.exe' wd = webdriver.Chrome(executable_path=path) result = wd.find_element_by_class_name('wrapper__top_3UDaE') </code></pre> <p>when the code in the web-page's elements are:</p> <pre><code>&lt;div class=&quot;wrapper__top_3UDaE&quot;&gt;     &lt;h3&gt;Лидерборд&lt;/h3&gt;     &lt;span class=&quot;wrapper__description_nfMmy&quot;&gt;...&lt;/span&gt; &lt;/div&gt; </code></pre> <p>and after</p> <pre><code>result = wd.find_element_by_class_name('wrapper__top_3UDaE') result </code></pre> <p>I get the next error:</p> <pre><code>Message: no such element: Unable to locate element: {&quot;method&quot;:&quot;css selector&quot;,&quot;selector&quot;:&quot;.wrapper__top_3UDaE&quot;}   (Session info: chrome=86.0.4240.75) </code></pre> <p>Please, give me a hint on how to implement this correctly. Thanks.</p>"	2020-10-13 15:14:31.78 UTC	64346963	"<p>In your example, you give us the <code>HTML</code> code for a <code>div</code></p> <pre><code>&lt;div class=&quot;wrapper__top_3UDaE&quot;&gt;     &lt;h3&gt;Лидерборд&lt;/h3&gt;     &lt;span class=&quot;wrapper__description_nfMmy&quot;&gt;...&lt;/span&gt; &lt;/div&gt; </code></pre> <p>To get your element, you will need the following imports</p> <pre><code>from selenium import webdriver from selenium.webdriver.common.by import By </code></pre> <p>Then, you can use this <code>xpath</code></p> <pre><code>//div[@class='wrapper__top_3UDaE'] </code></pre> <p>and you should be able to get your element</p> <pre><code>wd = webdriver.Chrome(executable_path=path) result = wd.find_element(By.XPATH, &quot;//div[@class='wrapper__top_3UDaE']&quot;) </code></pre> <p>If your <code>div</code> is a button, you can click on your element</p> <pre><code>wd = webdriver.Chrome(executable_path=path) result = wd.find_element(By.XPATH, &quot;//div[@class='wrapper__top_3UDaE']&quot;) result.click() </code></pre>"			2020-10-14 05:10:13.293 UTC
64339229	javascript|python|loops|for-loop	"How to write a Python nested ""for"" loop in JavaScript"	"<p>I hope this is descriptive enough,</p> <p>could anyone show me how to write this python code in javascript?</p> <p>I am in week 3 in javascript school and I had this python syntax in some code I wrote about a year ago.</p> <p>I am just curious how I would go about writing this in javaScript.</p> <p>I feel like this would greatly help me understand nested for loops in JS!</p> <pre><code>for Row in [&quot;A&quot;, &quot;B&quot;, &quot;C&quot;, &quot;D&quot;, &quot;E&quot;]:   for Fixture in range(5):     for Shelf in [&quot;A&quot;, &quot;B&quot;, &quot;C&quot;, &quot;D&quot;, &quot;E&quot;, &quot;F&quot;, &quot;G&quot;]:       for Bin in range(4):         print(f&quot;{Row } {Fixture + 1} {Shelf} {Bin + 1}&quot;) </code></pre> <p>Thanks so much!</p>"	2020-10-13 16:20:37.133 UTC	64339398	"<pre><code>Row=[&quot;A&quot;,&quot;B&quot;, &quot;C&quot;, &quot;D&quot;, &quot;E&quot;]; Shelf=[&quot;A&quot;, &quot;B&quot;, &quot;C&quot;, &quot;D&quot;, &quot;E&quot;, &quot;F&quot;, &quot;G&quot;];  for(var i=0;i&lt;Row.length;i++){   for(var Fixture=0;Fixture&lt;5;Fixture++){     for(var k=0;k&lt;Shelf.length;k++){       for(var Bin=0;Bin&lt;4;Bin++){         console.log(Row[i]+&quot; &quot;+(Fixture+1)+&quot; &quot;+Shelf[k]+&quot; &quot;+(Bin+1));       }     }   } } </code></pre>"			2020-10-13 16:32:05.43 UTC
64339229	javascript|python|loops|for-loop	"How to write a Python nested ""for"" loop in JavaScript"	"<p>I hope this is descriptive enough,</p> <p>could anyone show me how to write this python code in javascript?</p> <p>I am in week 3 in javascript school and I had this python syntax in some code I wrote about a year ago.</p> <p>I am just curious how I would go about writing this in javaScript.</p> <p>I feel like this would greatly help me understand nested for loops in JS!</p> <pre><code>for Row in [&quot;A&quot;, &quot;B&quot;, &quot;C&quot;, &quot;D&quot;, &quot;E&quot;]:   for Fixture in range(5):     for Shelf in [&quot;A&quot;, &quot;B&quot;, &quot;C&quot;, &quot;D&quot;, &quot;E&quot;, &quot;F&quot;, &quot;G&quot;]:       for Bin in range(4):         print(f&quot;{Row } {Fixture + 1} {Shelf} {Bin + 1}&quot;) </code></pre> <p>Thanks so much!</p>"	2020-10-13 16:20:37.133 UTC	64339520	"<p>In simple short terms it's</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-js lang-js prettyprint-override""><code>for ( const Row of [ ""A"", ""B"", ""C"", ""D"", ""E"" ] ) {      for ( let Fixture = 0; Fixture &lt; 5; Fixture++ ) {          for ( const Shelf of [ ""A"", ""B"", ""C"", ""D"", ""E"", ""F"", ""G"" ] ) {              for ( let Bin = 0; Bin &lt; 4; Bin++ ) {                  // used to print in this demo                 document.write( `${Row } ${Fixture + 1} ${Shelf} ${Bin + 1}` );                 document.write(""&lt;/br&gt;"");                  // you can also log to a console                 console.log(`${Row } ${Fixture + 1} ${Shelf} ${Bin + 1}`);              }         }     } }</code></pre> </div> </div> </p> <p>So in this JS I used 2 different types of loops to get this result.</p> <p>The first loop is a <code>for of</code> loop. It takes the objects directly from the Array.</p> <p>The second loop has a setting point that runs before the loop <code>let Fixture = 0;</code>, the second part is the conditional part to check if the loop should keep going <code>Fixture &lt; 5;</code>, and the final part is executed after each loop run <code>Fixture++</code> to add to the number.</p> <p>A other common way of looping arrays is to use the ES6</p> <p>I'd strongly recommend checking <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Loops_and_iteration"" rel=""nofollow noreferrer"">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Loops_and_iteration</a> to read more about loops in javascript.</p>"			2020-10-13 16:39:36.307 UTC
64388030	python|python-3.x	Python equivalent of Javascript Object.values() method	"<p>In Javascript I can use the <code>Object.values()</code> method to iterate over the <em>values</em> of an object.</p> <p>For example (Javascript):</p> <pre><code>const myObj = {   'a': ['x', 'y', 'z'],   'b': [1, 2, 3],   'c': [true, false, null], // For Python [True, False, None] } const values = Object.values(myObj) </code></pre> <p>Where <code>values</code> contains:</p> <pre><code>[     ['x', 'y', 'z'],     [1, 2, 3],     [true, false, null], // for Python [True, False, None] ] </code></pre> <p>What is the simplest, build in way to get only the values of the dictionary in Python? (which mean a list of lists in this example)</p>"	2020-10-16 11:13:04.777 UTC	64388031	"<p>In Python we can use the <code>.values()</code> method to iterate over and get the <em>values</em> of a dictionary.</p> <p>For example:</p> <pre><code>mydict = {   'a': ['x', 'y', 'z'],   'b': [1, 2, 3],   'c': [True, False, None], } values = mydict.values() </code></pre> <p>Where <code>values</code> contains:</p> <pre><code>[     ['x', 'y', 'z'],     [1, 2, 3],     [True, False, None], ] </code></pre>"			2020-10-16 11:13:04.777 UTC
64395529	python|parsing|zoho	parsing Javascript page using python	<p>now I am trying to create a Javascript page parser using python.</p> <p>I tried a lot of python libraries but I can't :(</p> <p>Can someone give me an example of how to parse this page: &quot;https://help.zoho.com/portal/en/community/zoho-crm</p> <p>I want to get questions body or if someone knows how questions name too</p> <p>(sorry for my English) ANY suggestions</p>	2020-10-16 19:48:28.64 UTC	64395863	"<p>Google <a href=""https://selenium-python.readthedocs.io/"" rel=""nofollow noreferrer"">python+selenium</a></p> <pre class=""lang-py prettyprint-override""><code> from selenium import webdriver from selenium.webdriver.common.by import By from selenium.webdriver.common.keys import Keys from selenium.webdriver.support import expected_conditions as EC from selenium.webdriver.support.ui import WebDriverWait  url = 'https://help.zoho.com/portal/en/community/zoho-crm'  driver = webdriver.Chrome() driver.get(url)  element = WebDriverWait(driver, 10).until(     EC.presence_of_element_located(         (By.CSS_SELECTOR, &quot;div.TopicListLeftContainer__section&quot;)) )  for idx, q in enumerate(driver.find_elements_by_css_selector('div.CommunityListItem__wrapper')):     a = q.find_element_by_tag_name('a')     t = q.find_element_by_css_selector('div.CommunityListItem__description')     print(idx+1, a.text)     print(t.text)     print()  driver.quit()   </code></pre>"			2020-10-16 20:17:01.73 UTC
64397724	javascript|python|beautifulsoup	Python GET request after DOM manipulation by Javascript	"<p>I'm looking at the source code of <a href=""https://www.matchi.se/facilities/abybadminton?date=2020-10-17&amp;sport="" rel=""nofollow noreferrer"">this link</a> as it was read by the browser. The problem is that the DOM seems to be manipulated by Javascript (For example the calendar).</p> <p>How can I get the page after loading so I can access the Javascript generated calendar?</p> <p>I wish to get this result</p> <pre><code>&lt;table class=&quot;table-bordered daily&gt; </code></pre> <p>I've tried this code with no luck</p> <pre><code>import requests from bs4 import BeautifulSoup  page = requests.get('https://www.matchi.se/facilities/abybadminton?date=2020-10-17&amp;sport=') soup = BeautifulSoup(page.content, 'html.parser')   for eachRow in soup.find_all('table'):     print(eachRow) </code></pre>"	2020-10-16 23:40:53.13 UTC	64399738	"<p>The page is making request to external URL via JavaScript. You can use <code>requests</code> to load this information:</p> <pre><code>import re import requests from bs4 import BeautifulSoup  date = '2020-10-17'  main_url = 'https://www.matchi.se/facilities/abybadminton?date={date}&amp;sport=' html_doc = requests.get(main_url.format(date=date)).text  sport_id = re.search(r&quot;var sport = '(.*?)'&quot;, html_doc).group(1) facility_id = re.search(r'facilityId: &quot;(.*?)&quot;', html_doc).group(1)  ajax_url = 'https://www.matchi.se/book/schedule'  params = {     'wl': '',     'facilityId': facility_id,     'date': date,     'sport': sport_id,     'week': '',     'year': ''     }  soup = BeautifulSoup( requests.get(ajax_url, params=params).content, 'html.parser' )  # print occupied slots: for td in soup.select('td.slot.red'):     title = BeautifulSoup(td['title'], 'html.parser').get_text(strip=True, separator=' ')     print(title) </code></pre> <p>Prints:</p> <pre><code>Booked Bana 1 11:00 - 12:00 Booked Bana 2 10:00 - 11:00 Booked Bana 2 11:00 - 12:00 Booked Bana 2 12:00 - 13:00 Booked Bana 3 12:00 - 13:00 Booked Bana 3 14:00 - 15:00 Booked Bana 4 11:00 - 12:00 Booked Bana 5 11:00 - 12:00 Booked Bana 5 14:00 - 15:00 Booked Bana 6 11:00 - 12:00 Booked Bana 6 12:00 - 13:00 Booked Bana 7 11:00 - 12:00 Booked Bana 7 12:00 - 13:00 Booked Bana 7 14:00 - 15:00 Booked Bana 7 15:00 - 16:00 Booked Bana 8 10:00 - 11:00 Booked Bana 9 14:00 - 15:00 Booked Bana 10 12:00 - 13:00 Booked Bana 10 15:00 - 16:00 Booked Bana 13 11:00 - 12:00 Booked Bana 14 10:00 - 11:00 Booked Bana 15 10:00 - 11:00 Booked Bana 15 18:00 - 19:00 Booked Bana 16 13:00 - 14:00 </code></pre>"			2020-10-17 06:45:57.253 UTC
64400176	python|selenium|input|automated-tests	Python Selenium - Text dissapeared when using javascript faster input	"<p>Hope you are doing well.</p> <p>The default sendkey method of selenium is somehow slow and I learnt from here that I could use &quot;driver.execute_script&quot; to make faster input.</p> <p>For most of the sites, &quot;&quot;driver.execute_script&quot; works perfectly but recently I found that for some sites, &quot;driver.execute_script&quot; would input the text but if I press Enter or click anywhere afterward, the text will disspeared.</p> <p>Below is sample of my code:</p> <pre><code>driver.get(&quot;https://www.apple.com/hk/en&quot;) driver.find_element(By.LINK_TEXT, &quot;Shopping Bag&quot;).click() time.sleep(0.5) driver.find_element(By.LINK_TEXT, &quot;Sign in&quot;).click() time.sleep(0.5) driver.execute_script('document.getElementById(&quot;recon-0-0&quot;).value=&quot;abc@abc.com&quot;') </code></pre> <p>Does anybody knows whether it is restriction of the website or problem of my code?</p> <p>Thank you for your help.</p>"	2020-10-17 07:49:40.44 UTC	64400685	"<p>I looked into this and essentially it is site-side. Seems like rather than an onValueChanged() they are using something like onInput(). Since changing the value directly is not an input action the attribute updates are not triggered (including the actual value). These include: <code>.class=&quot; form-textbox-input form-textbox-entered&quot;</code>, <code>.aria-describedby=&quot; signin-info-id&quot;</code>, but most importantly--<code>.aria-invalid=&quot;false&quot;</code>.</p> <p>So, in short, changing the value directly makes it fail validation.</p> <p>.send_keys() does work as expected</p>"			2020-10-17 08:54:17.743 UTC
64409393	javascript|python|web-scraping|beautifulsoup|python-requests	How to get past Javascript is disabled in your browser error when web scraping with Python	"<p>I am trying to create a script to download an ebook into a pdf. When I try to use beautifulsoup in it I to print the contents of a single page, I get a message in the console stating &quot;Oh no! It looks like JavaScript is disabled in your browser. Please re-enable to access the reader.&quot; I have already enabled Javascript in Chrome and this same piece of code works for a page like a stackO answer page. What could be blocking Javascript in this page and how can I bypass it?</p> <p>My code for reference:</p> <pre><code>url = requests.get(&quot;https://platform.virdocs.com/r/s/0/doc/350551/sp/14552484/mi/47443495/?cfi=%2F4%2F2%5BP7001013978000000000000000003FF2%5D%2F2%2F2%5BP7001013978000000000000000010019%5D%2F2%2C%2F1%3A0%2C%2F1%3A0&quot;) url.raise_for_status() soup = bs4.BeautifulSoup(url.text, &quot;html.parser&quot;) elems = soup.select(&quot;p&quot;)  print(elems[0].getText()) </code></pre>"	2020-10-18 03:19:44.4 UTC	64409426	"<p>The problem is that the page actually contains no content. To load the content it needs to run some JS code. The <code>requests.get</code> method does not run JS, it just loads the basic HTML.</p> <p>What you need to do is to emulate a browser, i.e. 'open' the page, run JS, and then scrape content. One way to do it is to use a browser driver as described here - <a href=""https://stackoverflow.com/a/57912823/9805867"">https://stackoverflow.com/a/57912823/9805867</a></p>"			2020-10-18 03:26:18.603 UTC
64414550	javascript|json|django	"Django, how to convert Python dict to Javascript"	"<p>In a Django app I have a dict created in a view and I want to use it in Javascript, but I get a syntax error</p> <p><strong>views.py</strong></p> <pre><code>MY_TYPES = {     'use_random': 0,     'use_stages': 1,     'use_import': 2,     0: 'use_random',     1: 'use_stages',     2: 'use_import', }   class Duo(View):     url = 'duo/test_dict.html'      def get(self, request, partner_pk):         context = {             'my_types': json.dumps(MY_TYPES),         }         return render(request, self.url, context) </code></pre> <p><strong>test_dict.html</strong></p> <pre><code>{% load static %} &lt;head&gt;     &lt;script src=&quot;https://code.jquery.com/jquery-3.4.1.js&quot; integrity=&quot;sha256-WpOohJOqMqqyKL9FccASB9O0KwACQJpFTUBLTYOVvVU=&quot; crossorigin=&quot;anonymous&quot;&gt;&lt;/script&gt; &lt;/head&gt;`  {% block content %}     &lt;h1&gt; Test dict&lt;/h1&gt;      &lt;script&gt;         my_types = {{ my_types|safe }};     &lt;/script&gt;      &lt;script type=&quot;text/javascript&quot; src=&quot;{% static 'js/test_dict.js' %}&quot;&gt;&lt;/script&gt; {% endblock content %} </code></pre> <p><strong>test_dict.js</strong></p> <pre><code>$(document).ready(function () {     console.log(my_types)     console.log(JSON.parse(my_types)) }); </code></pre> <p>Line 2 gives the output</p> <blockquote> <p>{0: &quot;use_random&quot;, 1: &quot;use_stages&quot;, 2: &quot;use_import&quot;, use_random: 0, use_stages: 1, use_import: 2}</p> </blockquote> <p>but throws the error in line 3</p> <blockquote> <p>SyntaxError: Unexpected token o in JSON at position 1</p> </blockquote> <p>What am I doing wrong?</p>"	2020-10-18 14:36:33.763 UTC	64414616	"<blockquote> <p>but throws the error in line 3</p> <p>SyntaxError: Unexpected token o in JSON at position 1</p> </blockquote> <p>The reason this happens is because it is no longer a <em>string</em> but a JSON blob. You should pass this as a string if you want <code>my_types</code> to be a string:</p> <pre><code>&lt;script&gt; my_types = <b>'</b>{{ my_types|safe }}<b>'</b>; &lt;/script&gt;</code></pre> <p>by adding quotes (<code>'…'</code>), you thus wrap it in a string.</p> <p>But this is actually not necessary, if you write <code>my_types = {{ my_types|safe }};</code>, then <code>my_types</code> will already be a JavaScript dictionary, and then calling <code>JSON.parse(…)</code> makes thus no sense.</p> <p>Note that JSON does <em>not</em> allow integers to be keys, so Python will convert the integer keys to their string counterparts.</p>"			2020-10-18 14:43:30.36 UTC
64415512	javascript|python-3.x|selenium|selenium-webdriver	Selenium + Python - Not able to interact/click with JavaScript	"<p>Problem: Not able to find/click/send.keys to any of elements on a specific webpage.</p> <p>WebDriver Chrome</p> <p>I can interact with that webpage until I click a certain link where a new tab is opened and from that page I'm unable to do anything.</p> <p>What I've tried so far after extensive research here:</p> <p>1- Since a new tab was opened, I've &quot;forced&quot; the code looking into the new tab using <strong>driver.switch_to.window</strong> and to be sure I've printed the current page title and it's the correct one.</p> <p>2- I've tried both implicit/explicit waiting (even time.sleep) in order to wait for the page to load.</p> <p>3- Research pointed me to iframe.. I don't have any iframe but nevertheless I've searched for the number of frames (2) and switched between both and tried to find elements using xpath (full xpath) and none were find.</p> <p>4- Maximize window.</p> <p>So I tried &quot;everything&quot; in the books. Inspecting the elements that I needed to interact I've found that every single one was pointing to a JS with some arguments.</p> <pre> href=""JavaScript:SWESubmitForm(document.SWEForm2_0,s_10,&quot;s_2_1_96_0&quot;,&quot;VRId-0&quot;)"" tabindex=""2997"" id=""s_2_1_96_0"">Track Faults </pre> <p>Looking further found that s_10 is a variable within the script which have different options from s_0 to s_14.</p> <pre> var s_0 = {action:""/esales_enu/start.swe"",target:""_sweview"",SWECmd:""GotoView"",SWEMethod:""GotoView"",SWEView:""L2C Track Channel Reference View BT"",SWEApplet:""L2C New CZ Home Page Applet BT"",SWEReqRowId:""0"",SWESP:""false"",SWENeedContext:""true"",SWEKeepContext:""0"",SWEDIC:""false""};  var s_10 = {action:""/esales_enu/start.swe"",target:""_sweview"",SWECmd:""GotoView"",SWEMethod:""GotoView"",SWEView:""New Portal Fault Search View ORH BT"",SWEApplet:""L2C New CZ Home Page Applet BT"",SWEReqRowId:""0"",SWESP:""false"",SWENeedContext:""true"",SWEKeepContext:""0"",SWEDIC:""false""};</pre> <p>So I started searching and found <strong>driver.execute_script()</strong> and I've wrote:</p> <pre>driver.execute_script(""SWESubmitForm(document.SWEForm2_0,s_10,'s_2_1_96_0','VRId-0')"")</pre> <p>But this occurs:</p> <pre>selenium.common.exceptions.JavascriptException: Message: javascript error: SWESubmitForm is not defined </pre> <p>What I'm missing here? Syntax? If someone can shed some light on which direction should I go, it will be really appreciated.</p> <p>Thanks.</p>"	2020-10-18 16:13:37.143 UTC	64449627	"<p>I was able to fix this and learn a few things. The JS &quot;theory&quot; I was taking didn't made any sense since the driver.execute_script() isn't used the way I was thinking but rather injecting code or finding elements as well.</p> <p>Second, the solution was actually frames :)</p> <p>I was so focused in switching between the two frames I had found initially that for not one moment I thought that INSIDE those two frames could had been more frames!</p> <p>And basically that was it, after switching to the main frame, I've switched again to the 2nd frame inside that main one and was able to find through xpath.</p>"			2020-10-20 16:41:32.913 UTC
64424581	javascript|python	How to assign a python variable's value(string) as the value in JavaScript variable	"<p>I want to assign the email and password value got from the previous page through Python-CGI to JavaScript variable. When I am doing the following code I am getting the below error,</p> <p><strong>CODE:</strong></p> <pre><code>#!/usr/bin/python3 import cgi import cgitb; cgitb.enable() print (&quot;Content-type:text/html\n\n&quot;) form = cgi.FieldStorage()  email=str(form.getvalue(&quot;email&quot;)[0]) password=str(form.getvalue(&quot;password&quot;)[0])  print (email,password)  # email@email.com,123456  print (&quot;&quot;&quot; &lt;!DOCTYPE html&gt; &lt;html&gt;   &lt;body&gt;      &lt;script&gt;       var email=String(&quot;&quot;&quot;+str(email.strip())+&quot;&quot;&quot;);       var password=String(&quot;&quot;&quot;+str(password.strip())+&quot;&quot;&quot;);       alert(email);       alert(password);     &lt;/script&gt;    &lt;/body&gt; &lt;/html&gt;  &quot;&quot;&quot;) </code></pre> <p><strong>ERROR</strong>:</p> <p>Uncaught SyntaxError: missing ) after argument list</p> <p><a href=""https://i.stack.imgur.com/ymSWj.png"" rel=""nofollow noreferrer"">error which I am getting</a></p>"	2020-10-19 09:28:02.153 UTC	64424676	"<p>Try to use <a href=""https://realpython.com/python-f-strings/"" rel=""nofollow noreferrer"">f-string</a></p> <pre><code>email = 'jack@jack.com' password = 'secret' val1 = 133  html  = f&quot;&quot;&quot; &lt;!DOCTYPE html&gt; &lt;html&gt;   &lt;body&gt;      &lt;script&gt;       var email='{email.strip()}';       var password='{password.strip()}';       var data={{'key1':{val1}}};       alert(email);       alert(password);     &lt;/script&gt;    &lt;/body&gt; &lt;/html&gt; &quot;&quot;&quot; print(html) </code></pre> <p>output</p> <pre><code>&lt;!DOCTYPE html&gt; &lt;html&gt;   &lt;body&gt;      &lt;script&gt;       var email='jack@jack.com';       var password='secret';       var data={'key1':133};       alert(email);       alert(password);     &lt;/script&gt;    &lt;/body&gt; &lt;/html&gt; </code></pre>"			2020-10-19 09:34:40.067 UTC
64424581	javascript|python	How to assign a python variable's value(string) as the value in JavaScript variable	"<p>I want to assign the email and password value got from the previous page through Python-CGI to JavaScript variable. When I am doing the following code I am getting the below error,</p> <p><strong>CODE:</strong></p> <pre><code>#!/usr/bin/python3 import cgi import cgitb; cgitb.enable() print (&quot;Content-type:text/html\n\n&quot;) form = cgi.FieldStorage()  email=str(form.getvalue(&quot;email&quot;)[0]) password=str(form.getvalue(&quot;password&quot;)[0])  print (email,password)  # email@email.com,123456  print (&quot;&quot;&quot; &lt;!DOCTYPE html&gt; &lt;html&gt;   &lt;body&gt;      &lt;script&gt;       var email=String(&quot;&quot;&quot;+str(email.strip())+&quot;&quot;&quot;);       var password=String(&quot;&quot;&quot;+str(password.strip())+&quot;&quot;&quot;);       alert(email);       alert(password);     &lt;/script&gt;    &lt;/body&gt; &lt;/html&gt;  &quot;&quot;&quot;) </code></pre> <p><strong>ERROR</strong>:</p> <p>Uncaught SyntaxError: missing ) after argument list</p> <p><a href=""https://i.stack.imgur.com/ymSWj.png"" rel=""nofollow noreferrer"">error which I am getting</a></p>"	2020-10-19 09:28:02.153 UTC	64424818	"<p>you have to add quoet/double quote before and after the user input: because in the end , without adding the '' ,the code will be like this String(email@gmail.com); so you have to add a quoet/double quote</p> <pre><code>#!/usr/bin/python3 import cgi import cgitb; cgitb.enable() print (&quot;Content-type:text/html\n\n&quot;) form = cgi.FieldStorage()  email=str(form.getvalue(&quot;email&quot;)[0]) password=str(form.getvalue(&quot;password&quot;)[0])  print (email,password)  # email@email.com,123456  print (&quot;&quot;&quot; &lt;!DOCTYPE html&gt; &lt;html&gt;   &lt;body&gt;      &lt;script&gt;       var email=String('&quot;&quot;&quot;+str(email.strip())+&quot;&quot;&quot;');       var password=String('&quot;&quot;&quot;+str(password.strip())+&quot;&quot;&quot;');       alert(email);       alert(password);     &lt;/script&gt;    &lt;/body&gt; &lt;/html&gt;  &quot;&quot;&quot;) </code></pre>"			2020-10-19 09:42:29.037 UTC
64424834	javascript|python|json|eel	How can I convert the python class str to dictionary in javascript	"<p>I have a data in python that is in this format</p> <pre><code> d1 = [&quot;id&quot;:&quot;hajdgrwe2123&quot;, &quot;name&quot;:&quot;john law&quot;, &quot;age&quot;:&quot;95&quot;] </code></pre> <p>Python has it as data type &quot; class 'str' &quot;.</p> <p>I am sending the data from python to javascript using eel so I want to convert the data to dictionary in javascript so that I can make the call below</p> <p>d1[&quot;id&quot;] # result should be hajdgrwe2123</p> <p>I tried converting to json in javascript but it did not work. How can I convert the python class str to dictionary in javascript?</p>"	2020-10-19 09:43:39.023 UTC	64424921	"<p>When sending from Python to JS, you need to encode the data as JSON (using <code>json.dumps()</code> for example).</p> <p>Then, you can parse it to a JS object using:</p> <pre><code>const d1 = JSON.parse(json_data); </code></pre> <p>You can access it's properties using:</p> <pre><code>d1['id'] // prints: hajdgrwe2123 </code></pre> <p>or:</p> <pre><code>d1.id // prints: hajdgrwe2123 </code></pre>"			2020-10-19 09:48:18.69 UTC
64424834	javascript|python|json|eel	How can I convert the python class str to dictionary in javascript	"<p>I have a data in python that is in this format</p> <pre><code> d1 = [&quot;id&quot;:&quot;hajdgrwe2123&quot;, &quot;name&quot;:&quot;john law&quot;, &quot;age&quot;:&quot;95&quot;] </code></pre> <p>Python has it as data type &quot; class 'str' &quot;.</p> <p>I am sending the data from python to javascript using eel so I want to convert the data to dictionary in javascript so that I can make the call below</p> <p>d1[&quot;id&quot;] # result should be hajdgrwe2123</p> <p>I tried converting to json in javascript but it did not work. How can I convert the python class str to dictionary in javascript?</p>"	2020-10-19 09:43:39.023 UTC	64424997	"<p>You can use <a href=""https://docs.python.org/3/library/json.html#json.dumps"" rel=""nofollow noreferrer"">json.dumps()</a> function to convert a Python object to a JSON object string:</p> <pre class=""lang-py prettyprint-override""><code>import json  d1 = {&quot;id&quot;:&quot;hajdgrwe2123&quot;, &quot;name&quot;:&quot;john law&quot;, &quot;age&quot;:&quot;95&quot;}  json_str = json.dumps(d1)  # json_str = '{&quot;id&quot;: &quot;hajdgrwe2123&quot;, &quot;name&quot;: &quot;john law&quot;, &quot;age&quot;: &quot;95&quot;}' # Do something with json_str to pass it to the Javascript process </code></pre> <p>The JSON object can then be used as suggested by domenikk <a href=""https://stackoverflow.com/a/64424921/14349691"">https://stackoverflow.com/a/64424921/14349691</a>.</p>"			2020-10-19 09:53:17.98 UTC
64429425	python|flask|jinja2	getting python list of strings into javascript variable via Jinja2 render_template()	"<p>I want to set a javascript variable in a HTML-document by calling (Jinja2) <code>render_template('manage_stations.html', stations=stations)</code> (The javascript variable should be an array of station names as strings used for an autocomplete functionality):</p> <pre><code>var station_names = ['station1name', 'station2name', 'station3name']; </code></pre> <p>In my python code, the entries of the list <em>stations[]</em> are of type <strong>sqlite3.Row</strong>. I only need the ['station_name'] content:</p> <pre><code>stations[0]['station_name'] = 'station1name' stations[1]['station_name'] = 'station2name'  stations[2]['station_name'] = 'station3name'  </code></pre> <p>etc...</p> <p>my manage_stations.html file  like this:</p> <pre><code>&lt;!DOCTYPE html&gt; &lt;html lang=&quot;de&quot;&gt;  &lt;head&gt;   &lt;script&gt;      var station_names = {{ [ x['station_name'] for x in stations]|tojson }} ;   &lt;/script&gt;  &lt;/head&gt; &lt;body&gt;&lt;/body&gt; &lt;/html&gt; </code></pre> <blockquote> <p>Exception has occurred: TemplateSyntaxError expected token ',', got 'for'</p> </blockquote> <p>Is it possible to solve this in the html-template? I had the idea to assemble a string like:</p> <pre><code>l = &quot;'&quot; + &quot;','&quot;.join(s['station_name'].replace(&quot;'&quot;, r&quot;\'&quot;) for s in stations) + &quot;'&quot; </code></pre> <p>and then pass it as an additional parameter to the render_template function. <code>render_template('manage_stations.html', stations=stations, station_name_string=l)</code> But wouldn't it be better to only pass one variable stations (which contains all the neccesary information) and do the formatting somehow?</p> <p>Thank You!</p> <p>EDIT: I just found out that list comprehension is not supported in Jinja2 - is it still possilbe to get the variable set without adding a second parameter?</p>"	2020-10-19 14:26:34.907 UTC	64430102	"<p>...one (not the desired) way to solve it is to really add a new parameter, stations_list, and add this:</p> <pre><code> station_list = [ x['station_name'] for x in stations]       &lt;script&gt; var station_names =   {{ station_list|safe }}  ; &lt;/script&gt; </code></pre> <p>However, I'm still not sarisfied because I pass two arguments with the same info, only because the formatting can't be done...</p>"			2020-10-19 15:07:18.437 UTC
64448730	javascript|python|html|django|opencv	How do i access my webcam with python (Django) from the browser with the help of HTML and Javascript?	<p>I am trying to create a web-app and I need to get video input from the webcam into Javascript or HTML and pass it to Python (Django) where I can use OpenCV with each frame.</p>	2020-10-20 15:46:38.973 UTC	64448921	"<p>You can use the WebRTC APIs to capture or stream video from the camera. You can check this documentation on it <a href=""https://developer.mozilla.org/en-US/docs/Web/API/WebRTC_API"" rel=""nofollow noreferrer"">https://developer.mozilla.org/en-US/docs/Web/API/WebRTC_API</a>.</p> <p>And also this WebRTC implementation for Python <a href=""https://github.com/aiortc/aiortc"" rel=""nofollow noreferrer"">https://github.com/aiortc/aiortc</a></p> <p>I hope the links are of use.</p>"			2020-10-20 15:58:10.47 UTC
64512382	javascript|python|html|selenium|element	Selenium only loading JavaScript and not full HTML - Python	"<p>I am trying to find the search bar in this link: <a href=""https://www.takealot.com"" rel=""nofollow noreferrer"">https://www.takealot.com</a> using the class &quot;search-field&quot; from:</p> <pre>     input class=""search-field "" type=""text"" placeholder=""Search for products, brands..."" value="""" </pre>  <p>My Code:</p> <pre><code>from selenium import webdriver import time  driver = webdriver.Firefox() driver.get(&quot;https://www.takealot.com/&quot;)  print(driver.page_source)  time.sleep(100)  driver.quit() </code></pre> <p>I have set sleep to 100 hoping that the HTML was taking long to load but I only seem to get the below output:</p> <pre><code>&lt;html dir=&quot;ltr&quot; lang=&quot;en&quot;&gt;&lt;head&gt; &lt;link rel=&quot;preload&quot; href=&quot;https://shopfront.takealot.com/static/js/app-loader.js&quot; as=&quot;script&quot;&gt; &lt;link rel=&quot;preconnect&quot; href=&quot;//media.takealot.com&quot; crossorigin=&quot;&quot;&gt; &lt;link rel=&quot;preconnect&quot; href=&quot;https://shopfront.takealot.com&quot; crossorigin=&quot;&quot;&gt; &lt;link rel=&quot;preconnect&quot; href=&quot;//api.takealot.com&quot; crossorigin=&quot;&quot;&gt; &lt;link rel=&quot;preconnect&quot; href=&quot;//static.takealot.com&quot; crossorigin=&quot;&quot;&gt; &lt;title&gt;Takealot.com: Online Shopping | SA's leading online store&lt;/title&gt; &lt;link rel=&quot;shortcut icon&quot; href=&quot;https://www.takealot.com/favicon.ico?20110717&quot; type=&quot;image/x-icon&quot;&gt; &lt;meta property=&quot;twitter:account_id&quot; content=&quot;4503599630296419&quot;&gt; &lt;meta name=&quot;description&quot; content=&quot;South Africa's leading online store. Fast, reliable delivery to your door. Many ways to pay. Shop anything you can imagine: TVs, laptops, cellphones, kitchen appliances, toys, books, beauty &amp;amp; more. Shop the mobile app anytime, anywhere.&quot; data-react-helmet=&quot;true&quot;&gt;&lt;link rel=&quot;canonical&quot; href=&quot;https://www.takealot.com/&quot; data-react-helmet=&quot;true&quot;&gt;&lt;link rel=&quot;alternate&quot; media=&quot;handheld&quot; href=&quot;https://m.takealot.com/&quot; data-react-helmet=&quot;true&quot;&gt;&lt;link rel=&quot;alternate&quot; href=&quot;android-app://fi.android.takealot/app/takealot.com/home&quot; data-react-helmet=&quot;true&quot;&gt;&lt;meta name=&quot;robots&quot; content=&quot;INDEX,FOLLOW&quot; data-react-helmet=&quot;true&quot;&gt;&lt;meta property=&quot;og:site_name&quot; content=&quot;Takealot.com&quot; data-react-helmet=&quot;true&quot;&gt;&lt;meta property=&quot;og:title&quot; content=&quot;Takealot.com: Online Shopping | SA's leading online store&quot; data-react-helmet=&quot;true&quot;&gt;&lt;meta property=&quot;og:description&quot; content=&quot;South Africa's leading online store. Fast, reliable delivery to your door. Many ways to pay. Shop anything you can imagine: TVs, laptops, cellphones, kitchen appliances, toys, books, beauty &amp;amp; more. Shop the mobile app anytime, anywhere.&quot; data-react-helmet=&quot;true&quot;&gt;&lt;meta property=&quot;og:image&quot; content=&quot;https://www.takealot.com/static/images/logo_transparent.png&quot; data-react-helmet=&quot;true&quot;&gt;&lt;script type=&quot;application/ld+json&quot;&gt;   {     &quot;@context&quot;: &quot;http://schema.org&quot;,     &quot;@type&quot;: &quot;WebSite&quot;,     &quot;url&quot;: &quot;https://www.takealot.com&quot;,     &quot;name&quot;: &quot;Takealot.com&quot;,     &quot;potentialAction&quot;: {         &quot;@type&quot;: &quot;SearchAction&quot;,         &quot;target&quot;: &quot;https://www.takealot.com/all/?qsearch={search_term_string}&quot;,         &quot;query-input&quot;: &quot;required name=search_term_string&quot;     }   } &lt;/script&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0&quot;&gt; &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;ie=edge&quot;&gt; &lt;style&gt;         html, body {           background-color: #f4f4f4;         }         .sf {           min-height: 400px;         }       &lt;/style&gt; &lt;link href=&quot;https://shopfront.takealot.com/56ef9861e86851c6e164b4f9ac61aaf391be03e0/static/js/runtime-752252ceefc11a26036e.js&quot; rel=&quot;preload&quot; as=&quot;script&quot;&gt;&lt;link href=&quot;https://shopfront.takealot.com/56ef9861e86851c6e164b4f9ac61aaf391be03e0/static/js/vendors~app-79405fe02e9a75a07916.js&quot; rel=&quot;preload&quot; as=&quot;script&quot;&gt;&lt;link href=&quot;https://shopfront.takealot.com/56ef9861e86851c6e164b4f9ac61aaf391be03e0/static/js/app-0aaac12d85774ebc557d.js&quot; rel=&quot;preload&quot; as=&quot;script&quot;&gt;&lt;script src=&quot;https://shopfront.takealot.com/56ef9861e86851c6e164b4f9ac61aaf391be03e0/static/js/runtime-752252ceefc11a26036e.js&quot;&gt;&lt;/script&gt;&lt;/head&gt; &lt;body id=&quot;body&quot;&gt; &lt;div class=&quot;sf &quot; id=&quot;shopfront-app&quot;&gt;&lt;style&gt;     @keyframes load-in {       0% {         opacity: 0;       }        100% {         opacity: 1;       }     }      @keyframes load8 {       0% {         transform: rotate(0deg);       }        100% {         transform: rotate(360deg);       }     }      .appload-wrapper {       animation: load-in 200ms linear;       box-sizing: border-box;       height: 100%;       min-height: 300px;       position: relative;       transform: translateZ(0);     }      .apploader {       animation: load8 .8s infinite linear;       border-bottom: 3px solid rgba(77, 77, 79, .2);       border-left: 3px solid #0b79bf;       border-radius: 50%;       border-right: 3px solid rgba(77, 77, 79, .2);       border-top: 3px solid rgba(77, 77, 79, .2);       box-sizing: border-box;       display: block;       font-size: 10px;       height: 30px;       left: calc(50% - 15px);       position: absolute;       text-indent: -9999em;       top: calc(50% - 15px);       transform: translateZ(0);       width: 30px;     }      .apploader::after {       border-radius: 50%;       box-sizing: border-box;       height: 30px;       width: 30px;     }     &lt;/style&gt;     &lt;div class=&quot;appload-wrapper&quot;&gt;       &lt;div class=&quot;apploader&quot;&gt;&lt;/div&gt;     &lt;/div&gt;&lt;/div&gt; &lt;script src=&quot;https://shopfront.takealot.com/static/js/app-loader.js&quot; onload=&quot;window.loadShopfront('https://shopfront.takealot.com');&quot; type=&quot;text/javascript&quot;&gt;       &lt;/script&gt;   &lt;/body&gt;&lt;/html&gt; </code></pre>"	2020-10-24 10:29:53.783 UTC	64512487	"<p>To set the value in search field Induce <code>WebDriverWait</code>() and wait for <code>element_to_be_clickable</code>() and use below css selector.</p> <pre><code>driver.get(&quot;https://www.takealot.com/&quot;) WebDriverWait(driver,20).until(EC.element_to_be_clickable((By.CSS_SELECTOR,&quot;input.search-field&quot;))).send_keys(&quot;USB&quot;) </code></pre> <p>You need to import below libraries.</p> <pre><code>from selenium.webdriver.support import expected_conditions as EC from selenium.webdriver.common.by import By from selenium.webdriver.support.ui import WebDriverWait </code></pre> <p>To learn more about <code>WebDriverWait</code> refer this link <a href=""https://selenium-python.readthedocs.io/waits.html"" rel=""nofollow noreferrer"">ExplicitWait</a></p>"			2020-10-24 10:43:27.007 UTC
64538471	javascript|python|html|flask|plotly	Send Plotly figure as json from python to javascript in Flask	"<p>I have this code that generates a figure as a json object:</p> <pre><code>linear_regression_fig = go.Figure()     # plot predicted values     linear_regression_fig.add_trace(go.Scatter(         x=group_by_df['day'].map(dt.datetime.fromordinal),         y=group_by_df['predicted']))     # plot actual values     linear_regression_fig.add_trace(go.Scatter(         x=group_by_df['day'].map(dt.datetime.fromordinal),         y=group_by_df[sensor_name],         name=('Actual values'),         mode='lines+markers'))      linear_regression_fig.update_layout(         height=700,         font=dict(color=&quot;grey&quot;),         paper_bgcolor='rgba(0,0,0,0)',         title=('Linear Regression for ') + (sensor_name),         yaxis_title=(sensor_name),         xaxis_title=('Day'),         showlegend=True)     linear_regression_json = json.dumps(linear_regression_fig, cls=plotly.utils.PlotlyJSONEncoder)  </code></pre> <p>And here I want to display the figure inside a div in the html page:</p> <pre><code> &lt;div class=&quot;chart&quot; id=&quot;pred_plot&quot;&gt;     &lt;script&gt;         var graphs = {         {             prediction_plot_py | safe         }         }         ;         Plotly.plot('pred_plot', graphs, {});     &lt;/script&gt; &lt;/div&gt; </code></pre> <p>But I get this error &quot;identifier or string literal or numeric literal expected&quot; in the javascript section. How can I solve this? I mention that this code worked at the beginning of summer and the plot was displayed correctly.</p>"	2020-10-26 13:51:00.683 UTC	64538580	"<p>This is invalid JSON:</p> <pre><code> var graphs = {         {             prediction_plot_py | safe         }         } </code></pre> <p>Additionally, you put an empty object as a parameter to Plotly.plot(), which I am not sure if you intended. Proper JSON looks like this:</p> <pre><code>var graphs = {     {         prediction_plot_py: &quot;safe&quot;,         example: &quot;test&quot;     } } </code></pre>"			2020-10-26 13:56:39.207 UTC
64556470	javascript|python	Reading a javascript dict into Python	"<p>I have a file <code>file.js</code> which contains:</p> <pre class=""lang-js prettyprint-override""><code>Foo.bar = {     &quot;key1&quot;: &quot;value1&quot;,     &quot;key2&quot;: &quot;value2&quot;, } </code></pre> <p>I would like to read the dict into Python. I've come up with</p> <pre><code>from pathlib import Path import json  txt = Path('file.js').read_text() json.loads(txt[txt.find('{'):txt.find('}')+1]) </code></pre> <p>it just feels hack-ish - is there a better way?</p>"	2020-10-27 14:21:00.95 UTC	64556569	"<pre><code>with open('file.js') as json_file:     data = json_file.read()     data_dict = eval(data[data.find(&quot;=&quot;) + 1:]) </code></pre> <p>This considering that your file contains only a single json object, like on your example.</p>"			2020-10-27 14:26:31.767 UTC
64561314	python|python-3.x|selenium	Python selenium problem with wait till element is clickable and with click link with javascript href	"<p>I wrote script to get data from page and I try improve two functionality. First: I want to change <code>time.sleep(10)</code> to</p> <pre><code>select = WebDriverWait(driver, 30).until(ec.element_located_to_be_selected((By.NAME, 'capacityReport_length'))) </code></pre> <p>but i get <code>&quot;is not clickable at point (438,86) because another element &lt;div class=&quot;mods-content-all-aisles&quot;&gt; obscures it&quot;.</code></p> <p>Also i can't click <code>&lt;a href = &quot;setting min&quot; href=&quot;javascript:void(0)&quot;&gt;</code></p> <p>Any advice ?</p>"	2020-10-27 19:05:10.253 UTC	64561613	"<p>In order for an element to be directly clickable, it can't be obscured by another element. In the browser, the obscuring element (often the encapsulating element), takes the click event and may or may not pass it through to elements beneath it. In other words, the element you want to click is not <em>directly</em> clickable.</p> <p>In this case, the element <code>&lt;div class=&quot;mods-content-all-aisles&quot;&gt;</code> is blocking you from directly clicking the element you want to click.</p> <p>You can try to find the obscuring element and click <em>that</em> element at some location to get the behavior you want.</p> <p>It could also be the case that your wait condition is not sufficient. You probably want to (additionally) use the <code>element_to_be_clickable</code> condition.</p> <pre><code>wait = WebDriverWait(driver, 10) element = wait.until(ec.element_to_be_clickable((By.ID, 'someid'))) </code></pre> <p>Alternatively, you can try some of the following ideas:</p> <p>using javascript to trigger the click:</p> <pre><code>driver.execute_script(&quot;arguments[0].click();&quot;, my_element) </code></pre> <p>You can also try using javascript to retrieve an element from coordinates and clicking it:</p> <pre><code>coords = (438, 86) driver.execute_script(&quot;document.elementFromPoint(arguments[0], arguments[1]).click()&quot;, *coords) </code></pre> <p>You could also try deleting the element that obscures the element you want to click, but that may end up deleting the element you want to click if it's nested inside of it.</p> <p>Ultimately, it will be difficult to give definitive answer without the full contents of the page you're working with including the HTML and JS resources. But hopefully this guidance will help you arrive at the solution for this specific webpage.</p>"			2020-10-27 19:29:21.627 UTC
64587224	python|json|selenium|web-scraping|selenium-chromedriver	how to scrape data from javascript website using python	"<p>I am unable to scrape data from website I have a URL link <a href=""https://autodesk.wd1.myworkdayjobs.com/Ext/0/refreshFacet/318c8bb6f553100021d223d9780d30be"" rel=""nofollow noreferrer"">https://autodesk.wd1.myworkdayjobs.com/Ext/0/refreshFacet/318c8bb6f553100021d223d9780d30be</a> when I open this link there are lots of job list showing when I scroll the page its automatic load the more job list when I inspect the page there are only JavaScript showing and I need to extract the following data job location, job description, job URL, full time or part time, minimum qualifications in json format I don't have idea how to do that below here my code</p> <pre class=""lang-py prettyprint-override""><code>from bs4 import BeautifulSoup import pandas as pd from selenium import webdriver from datetime import datetime startTime = datetime.now() import time print('startTime',startTime) driver = webdriver.Chrome('C:\\Users\\arif khan\\Downloads\\chromedriver.exe') driver.get('https://autodesk.wd1.myworkdayjobs.com/Ext/0/refreshFacet/318c8bb6f553100021d223d9780d30be') </code></pre>"	2020-10-29 08:13:10.69 UTC	64626571	"<p>You have to extract it from the div:</p> <pre><code>jobs = driver.find_elements_by_xpath(&quot;//div[@class='WNOO WBOO']/ul/li&quot;) for job in jobs:     print(job) </code></pre> <p>While on the website, right-click and use &quot;Inspect Element&quot; to see the code for any specific element. For example, if you right click on the text &quot;Finance Manager&quot;, and click &quot;Inspect Element&quot;, it will reveal the code for it.</p>"			2020-10-31 21:27:31.007 UTC
64596805	javascript|python|websocket|python-asyncio	Trying to send b64encoded PNG image to JavaScript client via asyncio websockets server using Python	"<p>I am trying to send a base64 encoded PNG images to a JavaScript client via asyncio websockets server in python. Right now I am just looping through images from memory to create a &quot;video player&quot; on the JavaScript side and its working... however, the first image that comes through throws a RuntimeError on my python server. it then operates as expected so very hard to pinpoint the problem..</p> <pre><code>ERROR:asyncio:Task exception was never retrieved future: &lt;Task finished coro=&lt;WebSocketCommonProtocol.send() done, defined at /usr/local/lib/python3.7/dist-packages/websockets/protocol.py:521&gt; exception=RuntimeError('Task &lt;Task pending coro=&lt;WebSocketCommonProtocol.send() running at /usr/local/lib/python3.7/dist-packages/websockets/protocol.py:567&gt; cb=[_wait.&lt;locals&gt;._on_completion() at /usr/lib/python3.7/asyncio/tasks.py:440] created at /usr/lib/python3.7/asyncio/tasks.py:361&gt; got Future &lt;Future pending&gt; attached to a different loop') created at /usr/lib/python3.7/asyncio/tasks.py:361&gt; source_traceback: Object created at (most recent call last):   File &quot;/usr/lib/python3.7/threading.py&quot;, line 885, in _bootstrap     self._bootstrap_inner()   File &quot;/usr/lib/python3.7/threading.py&quot;, line 917, in _bootstrap_inner     self.run()   File &quot;/usr/lib/python3.7/threading.py&quot;, line 865, in run     self._target(*self._args, **self._kwargs)   File &quot;../comm/mqtt.py&quot;, line 320, in __process_messages     response_data = self._msg_callback_dispatch[t](in_msg.body)   File &quot;SiteManagerOp.py&quot;, line 385, in on_image_callback     coro = asyncio.run(self.tx_UI_device_image(data.get('did'), data.get('img')), debug=True)   File &quot;/usr/lib/python3.7/asyncio/runners.py&quot;, line 43, in run     return loop.run_until_complete(main)   File &quot;/usr/lib/python3.7/asyncio/base_events.py&quot;, line 571, in run_until_complete     self.run_forever()   File &quot;/usr/lib/python3.7/asyncio/base_events.py&quot;, line 539, in run_forever     self._run_once()   File &quot;/usr/lib/python3.7/asyncio/base_events.py&quot;, line 1767, in _run_once     handle._run()   File &quot;/usr/lib/python3.7/asyncio/events.py&quot;, line 88, in _run     self._context.run(self._callback, *self._args)   File &quot;Manager.py&quot;, line 181, in tx_UI_device_image     await self.sockserver.send_to_clients(json.dumps(img_msg))   File &quot;/home/mendel/webserver/SocketServer.py&quot;, line 39, in send_to_clients     await asyncio.wait([client.send(message) for client in self.clients])   File &quot;/usr/lib/python3.7/asyncio/tasks.py&quot;, line 361, in wait     fs = {ensure_future(f, loop=loop) for f in set(fs)}   File &quot;/usr/lib/python3.7/asyncio/tasks.py&quot;, line 361, in &lt;setcomp&gt;     fs = {ensure_future(f, loop=loop) for f in set(fs)} Traceback (most recent call last):   File &quot;/usr/local/lib/python3.7/dist-packages/websockets/protocol.py&quot;, line 567, in send     await self.write_frame(True, opcode, data)   File &quot;/usr/local/lib/python3.7/dist-packages/websockets/protocol.py&quot;, line 1077, in write_frame     await self._drain()   File &quot;/usr/local/lib/python3.7/dist-packages/websockets/protocol.py&quot;, line 318, in _drain     await self._drain_helper()   File &quot;/usr/local/lib/python3.7/dist-packages/websockets/protocol.py&quot;, line 299, in _drain_helper     await waiter RuntimeError: Task &lt;Task pending coro=&lt;WebSocketCommonProtocol.send() running at /usr/local/lib/python3.7/dist-packages/websockets/protocol.py:567&gt; cb=[_wait.&lt;locals&gt;._on_completion() at /usr/lib/python3.7/asyncio/tasks.py:440] created at /usr/lib/python3.7/asyncio/tasks.py:361&gt; got Future &lt;Future pending&gt; attached to a different loop </code></pre> <p>Python Code:</p> <pre><code>#storing images to memory.. img_data = [] i=1 while i &lt; 300:     with open(f&quot;pngs/out{i}.png&quot;, &quot;rb&quot;) as f:         img_data.append(base64.b64encode(f.read()).decode('utf-8'))         i+=1  #non-async call back for recieving images def on_image_callback(self, data=None):     print (f&quot;rx image:&quot;, data.get('did'))     coro = asyncio.run(self.tx_UI_device_image(data.get('did'), data.get('img')), debug=True)   #async initiates send_to_client as JSON payload.. async def tx_UI_device_image(self, did, img):     img_msg = {'image':{'did':did, 'img_data':img}}     print (&quot;img size: &quot;, len(img))     await self.sockserver.send_to_clients(json.dumps(img_msg))  #socket server handler... class WebsocketServer:     def __init__(self, host, port, onconnect_callback, rxdata_callback):         self.start_server = websockets.serve(self.ws_handler, host, port)         self.loop = asyncio.get_event_loop()         self.onconnect = onconnect_callback         self.ondata_Rx = rxdata_callback         self.clients = set()      def start(self):         self.loop.run_until_complete(self.start_server)         self.loop.run_forever()      async def register(self, ws: WebSocketServerProtocol) -&gt; None:         self.clients.add(ws)         logging.info(f'{ws.remote_address} connects.')         await self.onconnect()        async def unregister(self, ws: WebSocketServerProtocol) -&gt; None:         self.clients.remove(ws)         logging.info(f'{ws.remote_address} disconnects.')      async def send_to_clients(self, message: str) -&gt; None:         if self.clients:             await asyncio.wait([client.send(message) for client in self.clients])          async def ws_handler(self, ws: WebSocketServerProtocol, uri: str) -&gt; None:         await self.register(ws)         try:             await self.distribute(ws)         finally:             await self.unregister(ws)      async def distribute(self, ws: WebSocketServerProtocol) -&gt; None:         async for message in ws:             await self.ondata_Rx(json.loads(message)) </code></pre> <p>JavaScript:</p> <pre><code>s.onmessage = function(e) {     //console.log(&quot;got: &quot; + e.data);     var data = JSON.parse(e.data);     for (var key in data) {       if (data.hasOwnProperty(key)) { // this will check if key is owned by data object and not by any of it's ancestors         if (key == &quot;image&quot;){           console.log(data[key].did);           var image = new Image();           image.src =('data:image/png;base64,' + data[key].img_data);            var player = document.getElementById(data[key].did + '-player');           player.setAttribute('src', image.src)         }     } } </code></pre> <p>I believe the problem is the asyncio.run call in a different thread affecting the event_loop or creating a new one rather, but I can't find any other way around this. It works with a much smaller message payload or if i just send a bunch of chars like ('A' * 300000)</p> <p>What is causing this error and how do I resolve or workaround?</p> <p><strong>UPDATE: Found Solution</strong></p> <p>instead of calling <code>asyncio.run()</code> anytime i needed to call something outside of an async function - I used <code>asyncio.run_coroutine_threadsafe(&lt;coroutine&gt;, loop=self.socketserver.loop)</code></p>"	2020-10-29 18:03:36.303 UTC	64599489	"<p>Instead of calling <code>asyncio.run()</code> anytime you call something outside of an async function (or i.e in a different thread) - use this instead and specify the event loop you want to target:</p> <pre><code>asyncio.run_coroutine_threadsafe(&lt;coroutine&gt;, loop=self.socketserver.loop) </code></pre>"			2020-10-29 21:31:35.67 UTC
64605228	python|html|flask|google-visualization	Sending a variable through python flask to javascript and displaying bar graph using google charts	"<p>Hey i am trying to make a bar graph in my html page. I am using Google Charts, flask and html. Whenever I manually enter data it works perfectly. But when I try to send the data through flask, it doesn't show anything.</p> <p>Here is my application.py:</p> <pre><code>import flask import mysql.connector  app = flask.Flask(__name__)  f = mysql.connector.connect(host = &quot;localhost&quot;, user = &quot;root&quot;, passwd = &quot;&quot;) mycur = f.cursor()  @app.route(&quot;/&quot;) def get_vals():     mycur.execute(&quot;use one_stop_healthcare;&quot;)     mycur.execute(&quot;select NAME, ACTIVE, DISCHARGED from ccinfo;&quot;)     dat = mycur.fetchall()      active=[[]]     for i in range(0,5,1):         for j in range(0,2,1):             active[i].append(dat[i][j])         active.append([])     del active[5]     active.insert(0, ['All the wards', 'Active cases', 'Recovered'])     print(active)     return flask.render_template(&quot;index.html&quot;, active=active)  app.run()   </code></pre> <p>Here is my index.html(In a template folder)</p> <pre><code>&lt;html&gt;   &lt;head&gt;     &lt;script type=&quot;text/javascript&quot; src=&quot;https://www.gstatic.com/charts/loader.js&quot;&gt;&lt;/script&gt;     &lt;script type=&quot;text/javascript&quot;&gt;         google.charts.load('current', {packages: ['corechart', 'bar']});         google.charts.setOnLoadCallback(drawMultSeries);         var active         function drawMultSeries() { // Here is where i manually add the data. It works like this.             var active = [['All the wards', 'Active cases', 'Recovered'], ['Ward-1', 357, 153], ['Ward-2', 744, 349], ['Ward-3', 83, 54], ['Ward-4', 1360, 433], ['Ward-5', 149, 100]]         var data = google.visualization.arrayToDataTable(active);          var options = {             title: 'Covid care centers',             chartArea: {width: '50%'},             hAxis: {             title: 'Active cases',             minValue: 0             },             vAxis: {             title: 'Wards'             }         };          var chart = new google.visualization.BarChart(document.getElementById('chart_div'));         chart.draw(data, options);     } &lt;/script&gt; &lt;/head&gt; &lt;body&gt;     &lt;div id=&quot;chart_div&quot;&gt;&lt;/div&gt; &lt;/body&gt; </code></pre>"	2020-10-30 08:51:22.823 UTC	64606009	<p>You currently don't use the python object 'active' at all.</p> <p>Replace this line in your html-code:</p> <pre><code>var active </code></pre> <p>by</p> <pre><code>var active = {{active}} </code></pre> <p>(and remove the manuall declaration)</p>			2020-10-30 09:47:44.07 UTC
64608034	javascript|python|python-requests|api-key	Api key request in Python/Javascript	"<p>I'm trying to make a request to an API. I've got the API key and read the documentation.</p> <p>Documentation: <a href=""https://info.nobil.no/images/downloads/API-NOBIL-Documentation_v3_20180808.pdf"" rel=""nofollow noreferrer"">https://info.nobil.no/images/downloads/API-NOBIL-Documentation_v3_20180808.pdf</a></p> <p>The examples in the documentation seems to me to be in javascript.</p> <pre class=""lang-js prettyprint-override""><code> jQuery.ajax({  type: 'POST',  url: 'https://nobil.no/api/server/search.php', data: { 'apikey': nobilApiKey, 'apiversion': '3', 'action': &quot;search&quot;,  'type': 'rectangle',  'northeast': '(59.943921193288915, 10.826683044433594)',  'southwest': '(59.883683240905256, 10.650901794433594)', 'existingids': '189,195,199,89,48'},  dataType: 'json' });     </code></pre> <p>Questions: 1.) Can I make a request to the server with python? 2.) How do I incorperate the api key into the code?</p> <p>Would really appreciate a code snippet showing how!</p>"	2020-10-30 12:04:45.187 UTC	64608221	"<p>you would use the <code>requests</code> library</p> <p>it would look something like this:</p> <pre><code>import requests url = 'https://nobil.no/api/server/search.php?mode=ajax' post_data = { 'apikey': nobilApiKey, 'apiversion': '3', 'action': &quot;search&quot;,  'type': 'rectangle',  'northeast': '(59.943921193288915, 10.826683044433594)',  'southwest': '(59.883683240905256, 10.650901794433594)', 'existingids': '189,195,199,89,48'} r = requests.post(url, data=post_data) # do something with r </code></pre> <p>Read the docs here: <a href=""https://requests.readthedocs.io/en/master/"" rel=""nofollow noreferrer"">https://requests.readthedocs.io/en/master/</a></p>"			2020-10-30 12:18:44.793 UTC
64626226	javascript|python|django	How can I display javascriptfunctions results from one python django template in another?	"<p>I have a template in my Python Django project, which has a point counter based on the script below:</p> <pre><code>function nowScrolling( last_known_scroll_position ) {             let percentage = last_known_scroll_position / ( window_height - client_height )  * 100;             progressbar.style.right = &quot;calc( 100% - &quot; + Math.round( percentage ) + &quot;% )&quot;;     document.getElementsByClassName('score')[0].innerText= &quot;Congrats! You have just earned &quot;  + Math.round(percentage)/2 +&quot; points!&quot;; } </code></pre> <p>I wonder how to refer the score (function result) on another template / page (Profile, which is going to summarize users points? Thank you very much!</p>"	2020-10-31 20:43:50.583 UTC	64630813	"<p>One easy way is by creating an input field in the HTML page where your script is present. Then by using javascript, set the value of input field equal to the result.</p> <pre><code>document.getElementById(&quot;id_of_input_field&quot;).value = your_result; </code></pre> <p>Then by request.get[&quot;&quot;] method, you can get the value in your views.py file and store it in the database.Then you can render it wherever you want.</p> <p>If you don't want to use database to do all the stuff then here is the 2nd way; You should use <code>localStorage</code> function in javascript to store the value of your result in the local storage of the browser. Note that local storage has no expiration date. So that is fine but that is as that is a browser feature, so anybody can edit his/her local storage. Here is the syntax;</p> <pre><code>localStorage.setItem('result', 'value_of_the_result_from_your_function'); </code></pre>"			2020-11-01 10:25:00.187 UTC
64629615	javascript|dynamic-programming	"Javascript dynamic programming table, can't index 2D array like in Python in some cases?"	"<p>Edit: Actually the logic is wrong here. I solved it using Python3 with a dictionary that updates the last index at which a letter is seen.  In dynamic programming lingo, it is similar to L.I.S (longest increasing subsequence).</p> <p>If anyone knows how to solve this without using a dictionary, please comment because I learned DP in school and those lessons only used arrays so it should be possible with just arrays.</p> <p>Original question:</p> <p>I am trying Leetcode, 3. Longest Substring Without Repeating Characters.</p> <p>I can solve this in Python making a 2D table for dynamic programming.</p> <p>But in JavaScript which I am sort of new to, I am getting an error.</p> <pre><code>evalmachine.&lt;anonymous&gt;:41                 var top = T[i-1][j]                                 ^  TypeError: Cannot read property '1' of undefined     at lengthOfLongestSubstring (evalmachine.&lt;anonymous&gt;:4 </code></pre> <p>My code:</p> <pre><code>/**  * @param {string} s  * @return {number}  */ var lengthOfLongestSubstring = function(s) {     //empty string     if (s.length &lt;= 0){         return 0     }     //initialize dict     var dict = {};     //initialize 2D table T     var T = new Array(s.length)     for (var i = 0; i&lt;s.length; i++){         T[i] = new Array(s.length);     }          //base cases are diagonals     for (var i = 0; i &lt; T.length; i++){         for (var j=0; j&lt;T.length; j++){             if(i==j){                 T[i][j] = 1;             }             else{                 T[i][j] = 0;             }         }     }     //put base case in dict     //dict[s[0]]=1     for (var i=0; i &lt; s.length; i++){         for (var j=i+1; j&lt;s.length; j++){             var row_char = s.charAt(i);             var col_char = s.charAt(j);             if (row_char==col_char){                 T[i][j] = 1;             }             else{                 //console.log(&quot;j&quot;,j,T)                 var left = T[i][j-1]                 console.log(left)                 var top = T[i-1][j]                  console.log(top)                 var bigger = Math.max(left,top);                 T[i][j] = bigger + 1             }         }     }     //iterate each row to get max     var high = Number.MIN_SAFE_INTEGER;          for (var i = 0; i &lt; s.length; i++){         if(T[i][s.length-1] &gt; high){             high = T[i][s.length-1];         }      }          return high;      }; </code></pre> <p>It is letting me fill the table with 0's and base case of 1 indexing like <code>T[i][j]</code> but then complaining about indexing like that to get the value which I don't understand.</p> <p>I looked at this: <a href=""https://stackoverflow.com/q/8238456/9481613"">How to get value at a specific index of array In JavaScript?</a> But it does not really say anything different.</p>"	2020-11-01 07:31:40.047 UTC	68124303	"<p>On the first iteration of the loop following the <code>//put base case in dict</code> comment <code>i</code> is <code>0</code>.</p> <p>You're then attempting to access <code>T[i-1][j]</code>, which is the equivalent of <code>T[-1][j]</code>.</p> <p>Because <code>T</code> doesn't have a <code>-1</code> index, <code>T[-1]</code> resolves to <code>undefined</code>, upon which you attempt to access index <code>[j]</code> and you get the error you're seeing.</p>"			2021-06-25 01:15:17.067 UTC
64636703	javascript|python	How can i do this javascript code on Python 3?	"<p>I have this line on JavaScript, but i want to know what's the equivalent of that in Python.</p> <pre class=""lang-js prettyprint-override""><code>const { entities, classification } = obj </code></pre> <p>The complete function is:</p> <pre class=""lang-js prettyprint-override""><code>function extractActionEntities (lang, expressionsFilePath, obj) {     return new Promise(async (resolve, reject) =&gt; {         log.title('NER')         log.info('Searching for entities...')          // Need to instanciate on the fly to flush entities         this.nerManager = new NerManager()          const { entities, classification } = obj         // Remove end-punctuation and add an end-whitespace         const query = `${string.removeEndPunctuation(obj.query)} `         const expressionsObj = JSON.parse(fs.readFileSync(expressionsFilePath, 'utf8'))         const { module, action } = classification         const promises = []     }); } </code></pre>"	2020-11-01 20:35:59.603 UTC	64636736	"<p>Python doesn't use constants, so you have to port only the destructuring, which Python also doesn't have (at least not exactly like ES6).</p> <p>You can, however, do this:</p> <pre class=""lang-py prettyprint-override""><code>entities, classification = [obj[k] for k in (&quot;entities&quot;, &quot;classification&quot;)] </code></pre> <p>Or, according to <a href=""https://stackoverflow.com/a/52083390/5160230"">this</a>, use the <code>itemgetter</code>.</p> <pre class=""lang-py prettyprint-override""><code>from operator import itemgetter entities, classification = itemgetter(&quot;entities&quot;, &quot;classification&quot;)(obj) </code></pre>"			2020-11-01 20:39:58.38 UTC
64642279	visual-studio-code|pascal|freepascal	"How to change between python, pascal, and javascript language easily in Visual Studio Code?"	"<p>I just learned programming, and I just installed vscode. Can I change between programming languages easily? And how to run Pascal programming in it?</p>"	2020-11-02 08:43:37.317 UTC	64644432	"<p>You can just write your files, and vscode will handle everything for you, as it has a very good understanding of file associations.</p> <p>The only things that might be confusing are when using f5 for example to run your code.</p> <p>You can set what happens when pressing f5 (Debug) and control shift b (build)by altering the tasks defined in tasks.json.</p> <p>To find this file, go to your command pallet (f1 or control shift p), and search for <code>Tasks: Open User Tasks</code>.</p> <p>There's a link in that file to the schema docs.</p> <p>I think the file is saved in the .vscode folder at the root of your project's directory.</p>"			2020-11-02 11:11:35.45 UTC
64689402	javascript|python-3.x|selenium	How do i use python list inside a javascript code?	"<p>How do i use a python list inside a javascript code?</p> <pre><code>stream_id = 4000  # add stream sources list a_file = open(&quot;C:/Users/Unknown/Documents/Selenium/stream_source.txt&quot;, &quot;r&quot;)  stream_sources_list = [] for line in a_file:   stripped_line = line.strip()   stream_source_line_list = stripped_line.split()   stream_sources_list.append(stream_source_line_list)  a_file.close()  print(&quot;stream_sources:&quot;, len(stream_sources_list))      while listposition &lt; len(stream_sources_list):          # navigate         driver.get(&quot;http://192.168.94.128:25500/stream.php?id={}&quot;.format(stream_id))          driver.execute_script(f&quot;document.getElementById('stream_source').setAttribute('value', '{stream_sources_list[listposition]}');&quot;)          stream_id = stream_id + 1         listposition = listposition + 1 </code></pre> <p>this is the part that doesn't work: '{stream_sources_list[listposition]}'</p> <pre><code>driver.execute_script(f&quot;document.getElementById('stream_source').setAttribute('value', '{stream_sources_list[listposition]}');&quot;) </code></pre>"	2020-11-05 00:04:05.573 UTC	64689698	"<p>Use node.js child process child_process.spawn():</p> <p>here is an example <a href=""https://www.geeksforgeeks.org/run-python-script-node-js-using-child-process-spawn-method/#:%7E:text=Child%20Process%20allows%20us%20to,to%20spawn%20child%20process%20asynchronously"" rel=""nofollow noreferrer"">https://www.geeksforgeeks.org/run-python-script-node-js-using-child-process-spawn-method/#:~:text=Child%20Process%20allows%20us%20to,to%20spawn%20child%20process%20asynchronously</a>.</p>"			2020-11-05 00:49:34.163 UTC
64701094	python|css|selenium|robotframework	RobotFramework Python Get Text from inside a javascript function	"<p>The below alert text inside the pasted function below only appears when I hit a button. I wish to capture the text to validate it.</p> <p>When I use the following code I can find the locator on the page, but no text is returned in my response. How can I get inside the function?</p> <pre><code>${response}    Get Text    css=body script:nth-child(9)  (script)         $(function () {             Metro.toast.create(&quot;No changes have been entered so                     nothing will be updated in CMS!&quot;, null, 6000, &quot;alert&quot;);         });  (/script)      </code></pre> <p>The response comes as pass but with no text.</p> <p><code>15:49:17.350   INFO    ${response} = </code></p>"	2020-11-05 16:16:27.657 UTC	64709533	"<p><code>Get Text</code> in Selenium/SeleniumLibrary returns the <em>visible</em> text in a tag - e.g. what the browser renders in the viewport. Naturally, anything that is in a <code>&lt;script&gt;</code> is not that - it's code that will be executed <em>(regardless what it'll do - put some text out there or not, it is code)</em>.</p> <p>You can still get the tag's content though - every DOM element has an attribute <code>innerHTML</code>, that is its raw content <em>(before rendering and so on)</em>. So try this:</p> <pre><code>${response}    Get Element Attribute   css=body script:nth-child(9)    innerHTML </code></pre> <p>This will of course return you everything (because the response is the raw content) - <code>&quot;Metro.toast.create(&quot;</code>, etc - so you'll have to manipulate the output a bit, to get just the method's argument.</p>"			2020-11-06 05:53:31.277 UTC
64730313	javascript|python|android|django|instagram	Is there any way of redirecting user from In-app browser like Instagram to Google Chrome browser using JavaScript or Python in Android?	"<p>I'm trying to make my website redirect from Instagram to Google chrome.</p> <p>This is my JavaScript try to redirect url, but it is not working as I thought:</p> <pre><code>if(navigator.userAgent.includes(&quot;Instagram&quot;)){       window.open('https://www.google.com/','_blank'); } </code></pre> <p>And in python I've tried using <code>webrowser.get(&quot;google-chrome&quot;).open(&quot;https://www.google.co.in/&quot;)</code>, but both methods do not work for me! Please help! Thanks in Advance.</p>"	2020-11-07 17:08:49.553 UTC	64730361	"<p>I use this method on my PC. Maybe if you register the path for the browser than it can work.</p> <pre><code>import webbrowser as wb  browserpath = 'C:\\Program Files (x86)\\Microsoft\\Edge\\Application\\msedge.exe' wb.register('edge', None, wb.BackgroundBrowser(edgepath)) wb.get(&quot;edge&quot;).open(https://www.google.co.in/) </code></pre>"			2020-11-07 17:13:56.183 UTC
64734066	javascript|python	Python dictionaries in javascript	"<p>I didn't really know how to parse the title very well but, what I need help with is I was watching a tutorial on how to make a programming language in python. I wanted to make it in javascript. I got the lexer working but then came to the parser. In the tutorial they do this:</p> <pre class=""lang-py prettyprint-override""><code>t = {token['value']: []} </code></pre> <p>I want to do that in javascript. But when I try to do that I can user the token['value'] part to as a 'label' so to say.</p> <p><em>Thanks!</em></p>"	2020-11-08 01:36:10.997 UTC	64734083	"<p>You may be looking for computed properties:</p> <pre class=""lang-js prettyprint-override""><code>const t = {   [token.value]: [] }; </code></pre> <p>Then you will be able to access <code>t[token.value]</code>.</p>"			2020-11-08 01:41:29.927 UTC
64742954	python|python-3.x|regex|python-re	How can I find all paths in javascript file with regex in Python?	"<p>Sample Javascript (content):</p> <pre class=""lang-js prettyprint-override""><code>t.appendChild(u),t}},{10:10}],16:[function(e,t,r){e(10);t.exports=function(e){var t=document.createDocumentFragment(),r=document.createElement(&quot;img&quot;);r.setAttribute(&quot;alt&quot;,e.empty),r.id=&quot;trk_recaptcha&quot;,r.setAttribute(&quot;src&quot;,&quot;/cdn-cgi/images/trace/captcha/js/re/transparent.gif?ray=&quot;+e.ray),t.appendChild(r);var n=document.createTextNode(&quot; &quot;);t.appendChild(n);var a=document.createElement(&quot;input&quot;);a.id=&quot;id&quot;,a.setAttribute(&quot;name&quot;,&quot;id&quot;),a.setAttribute(&quot;type&quot;,&quot;hidden&quot;),a.setAttribute(&quot;value&quot;,e.ray),t.appendChild(a);var i=document.createTextNode(&quot; &quot;);t.appendChild(i);  t.appendChild(u),t}},{10:10}],16:[function(e,t,r){e(10);t.exports=function(e){var t=document.createDocumentFragment(),r=document.createElement(&quot;img&quot;);r.setAttribute(&quot;alt&quot;,e.empty),r.id=&quot;trk_recaptcha&quot;,r.setAttribute(&quot;sdfdsfsfds&quot;,'/test/path'),t.appendChild(r);var n=document.createTextNode(&quot; &quot;);t.appendChild(n);var a=document.createElement(&quot;input&quot;);a.id=&quot;id&quot;,a.setAttribute(&quot;name&quot;,&quot;id&quot;),a.setAttribute(&quot;type&quot;,&quot;hidden&quot;),a.setAttribute(&quot;value&quot;,e.ray),t.appendChild(a);var i=document.createTextNode(&quot; &quot;);t.appendChild(i); </code></pre> <pre><code>regex = &quot;&quot; endpoints = re.findall(regex, content) </code></pre> <p>Output I want:</p> <pre><code>&gt; /cdn-cgi/images/trace/captcha/js/re/transparent.gif?ray= &gt; /test/path </code></pre> <p>I want to find all fields starting with &quot;/ and '/ with regex. I've tried many url regexes but it didn't work for me.</p>"	2020-11-08 20:55:57.487 UTC	64743150	"<p>Consider:</p> <pre class=""lang-py prettyprint-override""><code>import re  txt = ... #your code pat = r&quot;(\&quot;|\')(\/.*?)\1&quot;  for el in re.findall(pat, txt):     print(el[1]) </code></pre> <p>each <code>el</code> will be match of pattern starting with single, or double quote. Then minimal number of characters, then the same character as at the beginning (same type of quote).</p> <p><code>.*</code> stands for whatever number of any characters, following <code>?</code> makes it non-greedy i.e. provides minimal characters match. Then <code>\1</code> refers to first group, so it will match whatever type of quote was matched at the beginning. Then by specifying <code>el[1]</code> we return second group matched i.e. whatever was matched within quotes.</p>"			2020-11-08 21:19:24.827 UTC
64742954	python|python-3.x|regex|python-re	How can I find all paths in javascript file with regex in Python?	"<p>Sample Javascript (content):</p> <pre class=""lang-js prettyprint-override""><code>t.appendChild(u),t}},{10:10}],16:[function(e,t,r){e(10);t.exports=function(e){var t=document.createDocumentFragment(),r=document.createElement(&quot;img&quot;);r.setAttribute(&quot;alt&quot;,e.empty),r.id=&quot;trk_recaptcha&quot;,r.setAttribute(&quot;src&quot;,&quot;/cdn-cgi/images/trace/captcha/js/re/transparent.gif?ray=&quot;+e.ray),t.appendChild(r);var n=document.createTextNode(&quot; &quot;);t.appendChild(n);var a=document.createElement(&quot;input&quot;);a.id=&quot;id&quot;,a.setAttribute(&quot;name&quot;,&quot;id&quot;),a.setAttribute(&quot;type&quot;,&quot;hidden&quot;),a.setAttribute(&quot;value&quot;,e.ray),t.appendChild(a);var i=document.createTextNode(&quot; &quot;);t.appendChild(i);  t.appendChild(u),t}},{10:10}],16:[function(e,t,r){e(10);t.exports=function(e){var t=document.createDocumentFragment(),r=document.createElement(&quot;img&quot;);r.setAttribute(&quot;alt&quot;,e.empty),r.id=&quot;trk_recaptcha&quot;,r.setAttribute(&quot;sdfdsfsfds&quot;,'/test/path'),t.appendChild(r);var n=document.createTextNode(&quot; &quot;);t.appendChild(n);var a=document.createElement(&quot;input&quot;);a.id=&quot;id&quot;,a.setAttribute(&quot;name&quot;,&quot;id&quot;),a.setAttribute(&quot;type&quot;,&quot;hidden&quot;),a.setAttribute(&quot;value&quot;,e.ray),t.appendChild(a);var i=document.createTextNode(&quot; &quot;);t.appendChild(i); </code></pre> <pre><code>regex = &quot;&quot; endpoints = re.findall(regex, content) </code></pre> <p>Output I want:</p> <pre><code>&gt; /cdn-cgi/images/trace/captcha/js/re/transparent.gif?ray= &gt; /test/path </code></pre> <p>I want to find all fields starting with &quot;/ and '/ with regex. I've tried many url regexes but it didn't work for me.</p>"	2020-11-08 20:55:57.487 UTC	64743017	<p>This should do it:</p> <pre><code>regex = r&quot;&quot;&quot;[&quot;']\/[^&quot;']*&quot;&quot;&quot; </code></pre> <p>Note that you will need to trim the first character from the match. This also assumes that there are no quotation marks in the path.</p>			2020-11-08 21:04:00.197 UTC
64750991	javascript|python	Javascript string.length does not equal Python len()	"<p>Imagine the following text entered in an HTML <code>textarea</code>:</p> <pre><code>123456   7 </code></pre> <p>If one calculates the length of this text via javascript, i.e. <code>string.length</code>, that comes out to <code>10</code>.</p> <p>Now if that input's length is measured in python, i.e. via <code>len(string)</code>, it is <code>13</code>.</p> <p>It does not look <code>13</code> to the human eye, but if one runs <code>print repr(string)</code> in python, we get <code>123456\r\n\r\n\r\n7</code>. That is <code>13</code> characters, not <code>10</code>. For reference, this test was carried out in Ubuntu OS.</p> <p>Is there any way for python to report the string length via a mechanism that imitates javascript's <code>string.length's</code> result? I.e. in simpler terms, how do I get <code>10</code> in python?</p> <p>I understand I can manually iterate and collapse <code>\r\n</code> into a single character, but I wonder if there is a more robust - even inbuilt - way to do it? In any case, an illustrative example would be great!</p>"	2020-11-09 11:42:52.957 UTC	64751213	"<p>You can make use of Regular Expressions which is much more elegant than iterating. Replacing the characters <code>\n</code> and <code>\r</code> by <code>''</code> does the trick.</p> <p>Use the re module of python.</p> <pre><code>import re x = '123456\r\n\r\n\r\n7' y = re.sub(r'\r\n','\n',x) print(len(y)) #Answer will be 10 </code></pre> <p>For further reference, check out the <a href=""https://docs.python.org/3.1/library/re.html#re.sub"" rel=""nofollow noreferrer"">python docs</a></p>"			2020-11-09 11:57:33.17 UTC
64770188	javascript|python|node.js|web|spawn	Spawning Python process with Javascript	"<p>My goal is to run python code that the user would write on the website. I found out that <code>spawn()</code> could do it.</p> <pre><code>var process = spawn('python',[&quot;./script.py&quot;] );  </code></pre> <p>However, I do not want user to store their code in a file but rather i want their code to be executed directly. I want to take their code as a string and do something like this.</p> <pre><code>var process = spawn('python',pythonCodeString ); </code></pre> <p>This method would obviously not work because <code>spawn()</code> takes file path as an argument. Are there other methods of executing user's python code with js?</p> <p>P.S. I am making a website where one can edit an image using python code. For ex. user uploads an image and would want to change it to gray scale(all these transformation users can do with python)</p>"	2020-11-10 13:50:02.593 UTC	64771311	"<p>You could just automatically create the .py file from the inputted python code/string and then subsequently call it with spawn() and delete it once it has been executed, much like a &quot;temporary&quot; script, so that the user doesn't need to store it manually inside a file.</p>"			2020-11-10 14:56:57.193 UTC
64780490	javascript|python|regex	A Javascript Library to validate Python Regex?	"<p>I have a react UI which contains a regex validator/tester to make sure users give us the correct regex. However, our backend is using python. i know python regex is different than javascript. Therefore, i was wondering is there a Javascript Library to validate Python Regex? (I know python has js-regex which can validate js regex) Thanks</p>"	2020-11-11 04:30:08.667 UTC	64780799	"<p>Not sure if this is what you are looking for, but I found this on npm:</p> <p><a href=""https://www.npmjs.com/package/pyre-to-regexp"" rel=""nofollow noreferrer"">https://www.npmjs.com/package/pyre-to-regexp</a></p>"			2020-11-11 05:10:00.367 UTC
64780490	javascript|python|regex	A Javascript Library to validate Python Regex?	"<p>I have a react UI which contains a regex validator/tester to make sure users give us the correct regex. However, our backend is using python. i know python regex is different than javascript. Therefore, i was wondering is there a Javascript Library to validate Python Regex? (I know python has js-regex which can validate js regex) Thanks</p>"	2020-11-11 04:30:08.667 UTC	64780807	"<p>Take a look at this package: <a href=""https://www.npmjs.com/package/pyre-to-regexp"" rel=""nofollow noreferrer"">https://www.npmjs.com/package/pyre-to-regexp</a></p> <p>You can provide it a Python compatible regular expression string, and it'll return a JavaScript <code>RegExp</code> instance. You can use it to validate strings.</p> <p>Please note that this hasn't been updated in 3 years. Therefore, what I would recommend is that you convert the Python RegEx strings to JS compatible ones. You can use a <a href=""https://regexper.com/"" rel=""nofollow noreferrer"">visualizer tool</a> if it's too complex.</p>"			2020-11-11 05:10:47.583 UTC
64786650	javascript|electron|revitpythonshell	Python and JavaScript link	"<p>I was trying to link the Javascript Electron app with the python deep learning engine by using PYthon-shell. But I don't know where to go now.</p> <p>This is the python code:</p> <pre><code>from keras.models import load_model import cv2 import numpy as np import os from PIL import ImageTk, Image  from sklearn.preprocessing import label import sys     model = load_model('model.h5') model.compile(optimizer='adam', loss='binary_crossentropy',                   metrics=['accuracy'])  img = cv2.imread('file/4/1.jpg')  img = np.reshape(img, [1, 28, 28, 3]) class1 = model.predict_classes(img)  print(&quot;the pridicted number is&quot;, class1 + 1)  sys.stdout.flush() </code></pre> <p>The javascript code looks like:</p> <pre><code> let {PythonShell} = require('python-shell')   var path = require('path'); function getPrediction() {        let pyInput ={     scriptPath : path.join('/../BackEnd/'),     pyPaht :path.join( '/../BackEnd/')    }   PythonShell = new PythonShell('numbers.py', pyInput);   pyshell.on('message', function(message) {     alert(message);   })  } </code></pre> <p>Here is the error output:</p> <pre><code>index.js:35 Uncaught ReferenceError: Cannot access 'PythonShell' before initialization     at jsFunction  </code></pre>"	2020-11-11 12:41:42.18 UTC	64789103	"<p>I'm pretty sure</p> <pre class=""lang-js prettyprint-override""><code>PythonShell = new PythonShell('numbers.py', pyInput); </code></pre> <p>should read</p> <pre class=""lang-js prettyprint-override""><code>pyshell = new PythonShell('numbers.py', pyInput); </code></pre> <p>Also you've misspelt <code>alert</code> as <code>aler</code>.</p>"			2020-11-11 15:14:03.26 UTC
64798153	python|regex|quadratic	How to convert string formula into javascript equivalent in Python?	"<p>I've input formulae string like:</p> <pre><code>y = 5.02x^2 + 2x + 10 </code></pre> <p>and I want the output string to be like:</p> <pre><code>y = 5.02*pow(x,2) + 2*x +10 </code></pre> <p>So far what I've tried is to match it as a quadratic equation:</p> <pre><code>import re strn = input (&quot;Enter formula :&quot;)  x = re.sub(r'(-?\d+)x\^2 ([+-]\d+)x ([+-]\d+)','Do not know what to put here',strn) print(x) </code></pre> <p>but i don't know how to replace like <code>^</code> sign with <code>pow(a,b)</code> or <code>5x</code> as <code>5*x</code></p>"	2020-11-12 04:54:12.82 UTC	64798969	"<p>If requirement is just to address <code>*</code> and <code>^</code> operators then this code may work for you:</p> <pre><code>&gt;&gt;&gt; import re &gt;&gt;&gt; s = '5.02x^2 + 2x + 10' &gt;&gt;&gt; print ( re.sub(r'([a-zA-Z])\^(\d+)', r'pow(\1,\2)', re.sub(r'(\d)([a-zA-Z])', r'\1*\2', s)) ) 5.02*pow(x,2) + 2*x + 10 </code></pre> <p>We are using 2 <code>re.sub</code> calls here:</p> <ol> <li><code>re.sub(r'(\d)([a-zA-Z])', r'\1*\2', string)</code>: Inserts <code>*</code> between a letter and a digit. <em>Note that digit must come before a letter</em></li> <li><code>re.sub(r'([a-zA-Z])\^(\d+)', r'pow(\1,\2)', string)</code>: Converts <code>^</code> to <code>pow</code> function</li> </ol> <p>If your requirements are more exhaustive than this then please update your question.</p>"			2020-11-12 06:29:23.553 UTC
64826503	javascript|python|node.js	How to load data from Python and save to a variable in JavaScript	"<p>I am working on a project in which I need to use some libraries in Python, however, the majority of the project will be coded in Javascript (React Native).</p> <p>I am currently playing around calling Python from JavaScript, and I want to save data called from Python to variables in my JavaScript file.</p> <p>Here is the code I am currently playing around with:</p> <p>index.js</p> <pre><code>const spawn = require(&quot;child_process&quot;).spawn;  const process = spawn(&quot;python&quot;, [&quot;./hello.py&quot;, 4]);  var result;  process.stdout.on(&quot;data&quot;, (data) =&gt; {   result = parseInt(data.toString()); });  var newNum = result * 10; console.log(newNum); </code></pre> <p>hello.py</p> <pre><code>import sys  sum = 0 sum = int(sys.argv[1]) sum = sum*3  print(sum) </code></pre> <p>However, the console output is just &quot;undefined&quot;, what do I do to fix this?</p> <p>Thanks</p>"	2020-11-13 18:53:55.52 UTC	64826563	"<p>Since Node.js is asynchronous, you'll need to wait for the child process to exit before trying to operate on the <code>result</code>. Let me illustrate:</p> <pre><code>const spawn = require(&quot;child_process&quot;).spawn; const process = spawn(&quot;python&quot;, [&quot;./hello.py&quot;, 4]); // A process was started in the background, and your code continues... // You declare a `result` variable, whose value is `undefined`... var result; // Python might still be starting up at this point... // You register a handler for output from the process, but it might not get called // yet since your computer is from 1996 and it takes a while to start Python... process.stdout.on(&quot;data&quot;, (data) =&gt; {   result = parseInt(data.toString()); }); // You operate on the `result`, which still is undefined... var newNum = result * 10; // Oh! Hey! Python started in the background! It printed out some data, and now the data handler from before got called! Yay! `result` is indeed 12 right now! // but... you know... let's print `undefined * 10`. console.log(newNum); </code></pre> <p>You could instead wait for the stdout stream to end:</p> <pre><code>const spawn = require(&quot;child_process&quot;).spawn;  const process = spawn(&quot;python&quot;, [&quot;./hello.py&quot;, 4]);  var result;  process.stdout.on(&quot;data&quot;, (data) =&gt; {   result = parseInt(data.toString()); });  process.stdout.on(&quot;end&quot;, () =&gt; {   var newNum = result * 10;   console.log(newNum); }); </code></pre> <p>Or the process to exit:</p> <pre><code>const spawn = require(&quot;child_process&quot;).spawn;  const process = spawn(&quot;python&quot;, [&quot;./hello.py&quot;, 4]);  var result;  process.stdout.on(&quot;data&quot;, (data) =&gt; {   result = parseInt(data.toString()); });  process.on(&quot;exit&quot;, () =&gt; {   var newNum = result * 10;   console.log(newNum); }); </code></pre> <p>And you can wrap this up into a neat helper function that returns a promise (untested, sorry):</p> <pre><code>const spawn = require(&quot;child_process&quot;).spawn;  function spawnAndCaptureOutput(command, args) {   return new Promise((resolve) =&gt; {     const process = spawn(command, args);     let stdout = &quot;&quot;;     let stderr = &quot;&quot;;     process.stdout.on(&quot;data&quot;, (data) =&gt; {       stdout += data.toString();     });     process.stderr.on(&quot;data&quot;, (data) =&gt; {       stderr += data.toString();     });     process.on(&quot;close&quot;, (code) =&gt; {       resolve({ stdout, stderr, code });     });     // TODO: error handling?   }); }  spawnAndCaptureOutput(&quot;python&quot;, [&quot;./hello.py&quot;, 4]).then(   ({ stdout }) =&gt; {     const number = parseInt(stdout);     console.log(number * 8);   }, ); </code></pre>"			2020-11-13 18:59:03.843 UTC
64840437	javascript|node.js|reactjs	"In JavaScript, how can one import classes and functions simply, like in python?"	"<p>My directory structure is currently as below:</p> <pre><code>˅ REACT-APP |   &gt; node_modules |   &gt; public |   ˅ src |   |   ˅ components |   |   |   Home.js |   |   ˅ custom-modules |   |   |   number.js |   |   |   give_me_number.js |   |   App.js |   |   index.js |   .gitignore |   package-lock.json |   package.json |   README.md </code></pre> <p>The contents of <code>give_me_number.js</code></p> <pre class=""lang-js prettyprint-override""><code>import someNumber from './give_me_number'; </code></pre> <p>The contents of <code>number.js</code></p> <pre class=""lang-js prettyprint-override""><code>var someNumber = 5; export default someNumber; </code></pre> <p>trying to run <code>node give_me_number.js</code> will throw a warning <code>(node:7816)</code> and a <code>SyntaxError</code>:</p> <pre><code>SyntaxError: Cannot use import statement outside a module </code></pre> <p>What confuses me greatly is that I can easily access the default export of <code>Home.js</code> from <code>App.js</code></p> <p>The contents of <code>Home.js</code></p> <pre class=""lang-js prettyprint-override""><code>import * as React from 'react';  const Home = () =&gt; {     return (         &lt;h1&gt;Site Home&lt;/h1&gt;     ) }  export default Home; </code></pre> <p>The contents of <code>App.js</code>:</p> <pre class=""lang-js prettyprint-override""><code>/*...*/ import Home from './components/Home'  const App = () =&gt; {/*...*/}  export default App; </code></pre> <h3>Full Error</h3> <pre><code>(node:7816) Warning: To load an ES module, set &quot;type&quot;: &quot;module&quot; in the package.json or use the .mjs extension. C:...\react-app\src\custom-modules\give_me_number.js:1 import someNumber from './expressions'; ^^^^^^  SyntaxError: Cannot use import statement outside a module     at wrapSafe (internal/modules/cjs/loader.js:1053:16)     at Module._compile (internal/modules/cjs/loader.js:1101:27)     at Object.Module._extensions..js (internal/modules/cjs/loader.js:1157:10)     at Module.load (internal/modules/cjs/loader.js:985:32)     at Function.Module._load (internal/modules/cjs/loader.js:878:14)     at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:71:12)     at internal/main/run_main_module.js:17:47 </code></pre>"	2020-11-15 01:36:25.35 UTC	64840447	"<p>As stated in the error message, you need to add the line:</p> <pre><code>&quot;type: &quot;module&quot;, </code></pre> <p>to your <code>package.json</code> file [in order to use ES6 modules].</p>"			2020-11-15 01:39:33.133 UTC
64843789	javascript|python	Python one line if condition like in Javascript	"<p>This is a valid syntax in JavaScript:</p> <pre class=""lang-js prettyprint-override""><code>const myVar = true; myVar &amp;&amp; myFunction() // function will be executed </code></pre> <p>The same behavior can be achieved like this in Python:</p> <pre class=""lang-py prettyprint-override""><code>myVar = True if myVar:    myFUnction()  # function will be executed </code></pre> <p>Is there a Pythonic way how to get the same one-liner like in Javascript <em><strong>without</strong></em> explicitly using an <code>if</code> statement?</p>"	2020-11-15 11:22:07.857 UTC	64843885	"<p>There is no pythonic way to do this, because oneliners make code reading harder.</p> <p>However, you could just do <code>if True: print('a')</code></p>"			2020-11-15 11:32:30.233 UTC
64843789	javascript|python	Python one line if condition like in Javascript	"<p>This is a valid syntax in JavaScript:</p> <pre class=""lang-js prettyprint-override""><code>const myVar = true; myVar &amp;&amp; myFunction() // function will be executed </code></pre> <p>The same behavior can be achieved like this in Python:</p> <pre class=""lang-py prettyprint-override""><code>myVar = True if myVar:    myFUnction()  # function will be executed </code></pre> <p>Is there a Pythonic way how to get the same one-liner like in Javascript <em><strong>without</strong></em> explicitly using an <code>if</code> statement?</p>"	2020-11-15 11:22:07.857 UTC	64843833	"<p><code>and</code> is a short-circuit in python (as explained <a href=""https://docs.python.org/2/library/stdtypes.html#boolean-operations-and-or-not"" rel=""nofollow noreferrer"">here</a>), so</p> <pre><code>myVar and myFunction() </code></pre> <p>will give you what you want</p>"			2020-11-15 11:27:02.607 UTC
64848173	javascript|python	"""("" unexpected Python calling javascript"	"<p>I have a project on my RaspPI where I need to call a .js from python. That is the line where i call it:</p> <pre><code>cmd = &quot;/home/pi/temperature/TurnOn.js&quot;   subprocess.call(cmd, shell = True) </code></pre> <p>The error message:      Syntax error: &quot;(&quot; unexpected</p> <p>I already tried os.system()</p> <p>I am using this git in the .js:   <a href=""https://github.com/jhfoo/hs100-api"" rel=""nofollow noreferrer"">https://github.com/jhfoo/hs100-api</a> Is this caused by python or JavaScript and how can I fix it?</p> <p>Greetings</p>"	2020-11-15 18:22:56.763 UTC	64848290	"<p>This is a bash syntax error. Your js file is being executed by bash.</p> <p>You have to specify the interpreter in your command for example:</p> <pre class=""lang-py prettyprint-override""><code>cmd = &quot;node /home/pi/temperature/TurnOn.js&quot;   subprocess.call(cmd, shell = False) </code></pre>"			2020-11-15 18:35:05.47 UTC
64883027	javascript|python|django	<how to pass data from HTML/Javascript to be used in Django in Python and back	"<p>I'll Summarize the problem: = i'm a beginner at django, html, python, but i must find a way to do something because of my schools demo project.</p> <p>To give absolutely minimum of the problem: I have a variable in html/javascript which i want to get and process in Django/python.</p> <p>When i have processed info on django/python side, i want to be able to access it from a html/javascript pages.</p> <p>I have tried to look into different things like Ajax, jquery, but i just don't understand it and most tutorials and such get way too wide and complex to grab that one thing i need. Thanks for any help :)</p> <p>Yes , i have gone thorough stackoverflow similiar questions.</p>"	2020-11-17 20:43:22.177 UTC	64883329	"<p>The simple answer is to use a basic HTML form and POST the data to your backend as a standard Web submission. If your value is in a javascript variable you can use javascript to write it to a hidden form field. Then you store the data somewhere on the backend(it can just be in memory at first) and use it in subsequent requests.  Alternatively, you can do the entire thing in javascript using something like jQuery ajax to keep the api simple.</p> <p>To make this work you need to have an endpoint implemented in your Django backend to handle the submitted data. Good documentation looks like <a href=""https://developer.mozilla.org/en-US/docs/Learn/Server-side/Django/Forms"" rel=""nofollow noreferrer"">https://developer.mozilla.org/en-US/docs/Learn/Server-side/Django/Forms</a></p>"			2020-11-17 21:06:36.877 UTC
64883027	javascript|python|django	<how to pass data from HTML/Javascript to be used in Django in Python and back	"<p>I'll Summarize the problem: = i'm a beginner at django, html, python, but i must find a way to do something because of my schools demo project.</p> <p>To give absolutely minimum of the problem: I have a variable in html/javascript which i want to get and process in Django/python.</p> <p>When i have processed info on django/python side, i want to be able to access it from a html/javascript pages.</p> <p>I have tried to look into different things like Ajax, jquery, but i just don't understand it and most tutorials and such get way too wide and complex to grab that one thing i need. Thanks for any help :)</p> <p>Yes , i have gone thorough stackoverflow similiar questions.</p>"	2020-11-17 20:43:22.177 UTC	64883409	"<p>There are multiple ways to do it first you should know web structure, web has two sides</p> <p>1 - front end (static files html,css,js no server intervention )</p> <p>2 - Back end  (you can programme it with different languages like php or use a framework like django)</p> <p>Back end : contain two sides also <strong>server side</strong> and <strong>Database side</strong> in Django its uses <strong>ORM</strong> which is Object-relational mapping that's mean it a way to connect server-side with <strong>SQl</strong> database</p> <p>Now your question will be how to connect front-end with back-end</p> <p>one way is to use <strong>API</strong> application programming interface in this case you will build an web application in server waiting for certain requests (those requests are made from your front-end like fetch requests) and Give it a response (response handled with your front-end the question here is when you get the data from the server how you will show it in the UI ? )</p> <p>the other way is that Django follows the model-template-views (MTV) here is a good resource explain that</p> <p><a href=""https://data-flair.training/blogs/django-architecture/"" rel=""nofollow noreferrer"">https://data-flair.training/blogs/django-architecture/</a></p>"			2020-11-17 21:13:54.757 UTC
64968899	javascript|python|plot|bokeh|interactive	Filter data with Javascript callback in Python's Bokeh	"<p>apologies in advance for unprecise/unappreciated wording as this is my first question here. Feel free to point out how I can improve it in the future.</p> <p>I have been reading through all of Bokeh's user guide and various forums but belief this question is still insufficiently covered as it appears over and over again without an answer that can be applied generically.</p> <p>My task is to construct a scatterplot in Python's Bokeh that can interactively be filtered based on a categorical variable. My limited understanding of Javascript (and how the data is structured) prevents me from figuring this out by  myself.</p> <p>I found, that one solution is to append x&amp;y values that fulfill the condition (f.e. <a href=""https://stackoverflow.com/questions/62855670/filtering-bokeh-labelset-with-javascript"">Filtering Bokeh LabelSet with Javascript</a>). However, I want to keep all the other variables as well, since I use them to define graphic parameters / hover information in the plot.</p> <p>Therefore my question, how can I append whole rows to the new output data if one of the columns fulfills a certain condition in Javascript? I am also unsure if I call the callback correctly such that the plot would actually react to my selection. So please fell free to point out any mistakes here as well.</p> <p>See some example code here:</p> <pre><code>#Packages import pandas as pd import numpy as np from bokeh.plotting import figure, output_file, show import bokeh.events as bev import bokeh.models as bmo import bokeh.layouts as bla  #Data data = pd.DataFrame(data = np.array([[1,1,'a',0.5],                                      [2,2,'a',0.5],                                      [3,3,'a',0.75],                                      [4,4,'b',1],                                      [5,5,'b',2]]),                     columns = ['x', 'y', 'category', 'other information'])   #Setup output_file('dashboard.html')  source = bmo.ColumnDataSource(data)  #Define dropdown options dropdown_options = [('All', 'item_1'), None] + [(cat, str('item_' + str(i))) for i, cat in enumerate(sorted(data['category'].unique()), 2)]  #Generate dropdown widget dropdown = bmo.Dropdown(label = 'Category', button_type = 'default', menu = dropdown_options)   #Callback callback = bmo.CustomJS(args = dict(source = source),                         code = &quot;&quot;&quot;                                                  var data = source.data;                                                  var cat = cb_obj.value;                                                  if (cat = 'All'){                                                              data = source.data                                                          } else {                                                          var new_data = [];                                                          for (cat i = 0; i &lt;= source.data['category'].length; i++){                                                                          if (source.data['category'][i] == cat) {                                                                                          new_data.push(source.data[][i])                                                                                          }                                                                          }                                                          data = new_data.data                                                                              }                                                      source.data = data                                                                            source.change.emit();                                                  &quot;&quot;&quot;)   #Link actions dropdown.js_on_event(bev.MenuItemClick, callback)  #Plot p = figure(plot_width = 800, plot_height = 530, title = None)  p.scatter(x = 'x', y = 'y', source = source)   show(bla.column(dropdown, p)) </code></pre> <p>Unsurprisingly, the filter does not work. As said, any help highly appreciated since I do not know how to index whole rows in Javascript and whatever else I am doing wrong.</p> <p>Best regards, Oliver</p>"	2020-11-23 12:58:26.91 UTC	64970309	"<p>I wrote a solution for your issue. I am no Bokeh expert so I might not know everything but hope that helps to understand what is going on. Some explanation:</p> <ul> <li><p>You had some syntax errors to start with: at your for loop you used <code>cat i</code>, you probably meant <code>var i</code></p> </li> <li><p>In your if you were assigning <code>All</code> to <code>cat</code>, you need to do the comparison: with either <code>cat == 'All'</code> or <code>cat === 'All'</code></p> </li> <li><p>your <code>cb_obj.value</code> did not work for some reason and was returning undefined. You can check your variables with simple <code>console.log(variableName)</code> and open dev console in the browser to see callbacks in action. I changed your list comprehension to be tuple of the same values instead of <code>(category_name, item_category_number)</code>. Now <code>cb_obj.item</code> returns <code>category_name</code> which you can do comparison with.</p> </li> <li><p>You should understand what format your data is in, you can do so with <code>console.log(source.data)</code> for example. <code>source.data</code> here is object of arrays (or dictionary of lists if you were to describe that in Python). Because of that you could not push the data the way you did in for loop and also you had a syntax error: <code>source.data[][i]</code> - you won't access what you want with empty bracket. I wrote two functions to handle this functionality. <code>generateNewDataObject</code> creates object of empty arrays that we can append with <code>addRowToAccumulator</code></p> </li> <li><p>The last thing is that I needed were two data_sources. First that we will not do changes on and second that we will modify and use to display on the plot. If we were to modify the first one then after the first filter all other categories would be dropped and we could get them back only by refreshing the page. The 'immutable' data_source allows us to reference it and not lose filtered data in the process.</p> </li> </ul> <p>I hope that helps.</p> <pre><code># Packages  import bokeh.events as bev import bokeh.layouts as bla import bokeh.models as bmo import numpy as np import pandas as pd from bokeh.plotting import figure, output_file, show  # Data data = pd.DataFrame(     data=np.array(         [             [1, 1, 'a', 0.5],             [2, 2, 'a', 0.5],             [3, 3, 'a', 0.75],             [4, 4, 'b', 1],             [5, 5, 'b', 2]         ]     ),     columns=['x', 'y', 'category', 'other information'] )  # Setup output_file('dashboard.html')  source = bmo.ColumnDataSource(data)  # Define dropdown options dropdown_options = [                        ('All', 'All'), None                    ] + [(cat, cat)                        for i, cat in enumerate(sorted(data['category'].unique()), 2)                    ] # Generate dropdown widget dropdown = bmo.Dropdown(label='Category', button_type='default', menu=dropdown_options)  filtered_data = bmo.ColumnDataSource(data) # Callback callback = bmo.CustomJS(     args=dict(unfiltered_data=source, filtered_data=filtered_data),     code=&quot;&quot;&quot;  var data = unfiltered_data.data; var cat = cb_obj.item;  function generateNewDataObject(oldDataObject){     var newDataObject = {}     for (var key of Object.keys(oldDataObject)){         newDataObject[key] = [];     }     return newDataObject  }  function addRowToAccumulator(accumulator, dataObject, index) {     for (var key of Object.keys(dataObject)){         accumulator[key][index] = dataObject[key][index];     }     return accumulator; }  if (cat === 'All'){     data = unfiltered_data.data; } else {     var new_data =  generateNewDataObject(data);     for (var i = 0; i &lt;= unfiltered_data.data['category'].length; i++){         if (unfiltered_data.data['category'][i] == cat) {             new_data = addRowToAccumulator(new_data, unfiltered_data.data, i);         }     }     data = new_data; }  filtered_data.data = data; filtered_data.change.emit(); &quot;&quot;&quot; )  # Link actions dropdown.js_on_event(bev.MenuItemClick, callback)  # Plot p1 = figure(plot_width=800, plot_height=530, title=None)  p1.scatter(x='x', y='y', source=filtered_data)  show(bla.column(dropdown, p1)) </code></pre>"			2020-11-23 14:24:03.657 UTC
64973508	javascript|python|filter|bokeh	Multiple filters in Python Bokeh & Javascript	"<p>this builds on my previous question (<a href=""https://stackoverflow.com/questions/64968899/filter-data-with-javascript-callback-in-pythons-bokeh"">Filter data with Javascript callback in Python&#39;s Bokeh</a>) that was successfully answered and takes it one step further.</p> <p>When I try to filter my plot with multiple filters in Python's Bokeh, the function returns an empty plot.</p> <p>I can't find any conceptual differences to the working solution with one filter so would appreciate any hint.</p> <p>Below is a reproducible example:</p> <pre><code># Packages import bokeh.events as bev import bokeh.layouts as bla import bokeh.models as bmo import numpy as np import pandas as pd from bokeh.plotting import figure, output_file, show  # Data data = pd.DataFrame(     data=np.array(         [             [1, 1, 'a', 'c', 0.5],             [2, 2, 'a', 'c', 0.5],             [3, 3, 'a', 'd', 0.75],             [4, 4, 'b', 'd', 1],             [5, 5, 'b', 'd', 2]         ]     ),     columns=['x', 'y', 'category 1', 'category 2', 'other information'] )  # Setup output_file('dashboard.html')  source = bmo.ColumnDataSource(data)  # Define dropdown options dropdown_options1 = [                        ('All', 'All'), None                    ] + [(cat, cat)                        for i, cat in enumerate(sorted(data['category 1'].unique()), 2)                    ] dropdown_options2 = [                        ('All', 'All'), None                    ] + [(cat, cat)                        for i, cat in enumerate(sorted(data['category 2'].unique()), 2)                    ]  # Generate dropdown widget dropdown1 = bmo.Dropdown(label='Category1', button_type='default', menu=dropdown_options1) dropdown2 = bmo.Dropdown(label='Category2', button_type='default', menu=dropdown_options2)  filtered_data = bmo.ColumnDataSource(data) # Callback callback = bmo.CustomJS(     args = dict(unfiltered_data = source, filtered_data = filtered_data, dropdown1 = dropdown1 , dropdown2 = dropdown2 ),     code = &quot;&quot;&quot;  var data = unfiltered_data.data; var ind = dropdown1.item; var ctr = dropdown2.item;  function generateNewDataObject(oldDataObject){          var newDataObject = {}          for (var key of Object.keys(oldDataObject)){                      newDataObject[key] = [];              }          return newDataObject  }   function addRowToAccumulator(accumulator, dataObject, index) {          for (var key of Object.keys(dataObject)){                      accumulator[key][index] = dataObject[key][index];              }          return accumulator; }   if (ind === 'All' &amp;&amp; ctr === 'All'){                      data = unfiltered_data.data;                  } else if (ctr === 'All') {                  var new_data =  generateNewDataObject(data);          for (var i = 0; i &lt;= unfiltered_data.data['category 1'].length; i++){                      if (unfiltered_data.data['category 1'][i] == ind) {                              new_data = addRowToAccumulator(new_data, unfiltered_data.data, i);                      }     }          data = new_data;      } else if (ind === 'All'){          var new_data =  generateNewDataObject(data);          for (var i = 0; i &lt;= unfiltered_data.data['category 2'].length; i++){                      if (unfiltered_data.data['category 2'][i] == ctr) {                              new_data = addRowToAccumulator(new_data, unfiltered_data.data, i);                      }     }          data = new_data;          } else {              var new_data =  generateNewDataObject(data);          for (var i = 0; i &lt;= unfiltered_data.data['category 1'].length; i++){                      if (unfiltered_data.data['category 2'][i] == ctr &amp;&amp; unfiltered_data.data['category 1'][i] == ind) {                              new_data = addRowToAccumulator(new_data, unfiltered_data.data, i);                      }     }          data = new_data;                                      }  filtered_data.data = data; filtered_data.change.emit(); &quot;&quot;&quot; )   # Link actions dropdown1.js_on_event(bev.MenuItemClick, callback) dropdown2.js_on_event(bev.MenuItemClick, callback)  # Plot p1 = figure(plot_width=800, plot_height=530, title=None)  p1.scatter(x='x', y='y', source=filtered_data)  show(bla.column(bla.row(dropdown1, dropdown2), p1))  </code></pre> <p>I tried to access the dropdowns' values with different approaches (<code>.item</code>, <code>.value</code> and <code>.text</code>) but without any success.</p> <p>Thank you for any support, Oliver</p>"	2020-11-23 17:41:53.087 UTC	64973883	"<p>Dropdown is a click event, so the information is only in the event, not on any property of the widget itself (if you want that, maybe a <code>Select</code> widget would be a better choice than <code>Dropdown</code>). There is an <a href=""https://docs.bokeh.org/en/latest/docs/user_guide/interaction/widgets.html#dropdown"" rel=""nofollow noreferrer"">example in the docs</a> that shows how to access the item in the event:</p> <pre class=""lang-py prettyprint-override""><code>dropdown = Dropdown(label=&quot;Dropdown button&quot;, menu=menu) dropdown.js_on_event(     &quot;menu_item_click&quot;,      CustomJS(code=&quot;console.log('dropdown: ' + this.item&quot;) ) </code></pre>"			2020-11-23 18:08:25.63 UTC
64986202	javascript|python|json	Use JSON to communicate between Python and JavaScript to change CSS of a Website	"<p>I have a Problem parsing a JSON file in the same path as the javascript. I have tried it with the following code</p> <pre><code>var request = new XMLHttpRequest(); request.open('GET', 'data.json') request.responseType = 'json'; request.send(); request.onload = function() {     var data = request.response;     var jsondata = JSON.parse(data);     return jsondata;     }  console.log(jsondata['text_06']); </code></pre> <p>But I only get the error: Uncaught ReferenceError: jsondata is not defined at webvisu.js:101</p> <p>In this case &quot;text_06&quot; is a string from the JSON file which looks like following:</p> <pre><code>{  &quot;part_count_07&quot;: 0,  &quot;packaging_05&quot;: false,  &quot;emergency_stop_06&quot;: false,  &quot;start_stop_08&quot;: false,  &quot;error_07&quot;: false,  &quot;beg_06&quot;: false,  &quot;beg2_05&quot;: false,  &quot;warning_08&quot;: false,  &quot;text_06&quot;: &quot;magazine nearly full&quot;,  &quot;emergency_stop_08&quot;: false,  &quot;warning_07&quot;: false,  &quot;emergency_stop_05&quot;: true,  &quot;information_05&quot;: false,  &quot;text_05&quot;: &quot;emergency-stop&quot;,  &quot;mid1_05&quot;: false,  &quot;start_stop_07&quot;: false,  &quot;packing_07&quot;: false,  &quot;part_count_05&quot;: 9,  &quot;start_stop_06&quot;: false,  &quot;end1_05&quot;: true,  &quot;emergency_stop_07&quot;: false,  &quot;error_06&quot;: false,  &quot;packing_08&quot;: false,  &quot;beg1_05&quot;: false,  &quot;beg_07&quot;: false,  &quot;information_08&quot;: false,  &quot;error_05&quot;: false,  &quot;warning_05&quot;: false,  &quot;information_06&quot;: false,  &quot;part_count_06&quot;: 10,  &quot;mid_08&quot;: true,  &quot;warning_06&quot;: false,  &quot;end_07&quot;: false,  &quot;mid_07&quot;: false,  &quot;end2_05&quot;: true,  &quot;beg_08&quot;: true,  &quot;text_07&quot;: &quot;&quot;,  &quot;information_07&quot;: false,  &quot;extract_count&quot;: 0,  &quot;error_08&quot;: false,  &quot;end_08&quot;: false,  &quot;part_count_08&quot;: 1,  &quot;text_08&quot;: &quot; &quot;,  &quot;start_stop_05&quot;: false,  &quot;color_07&quot;: 0 } </code></pre> <p>My goal is it to change text and colors on the website with the data out of the JSON file which gets overwritten by the following Python script every second which is already fully functional:</p> <pre><code>while True:      with open('data.json') as f:         json_data = json.load(f)      if extract_count == 0:         ext_note = True  # Storing Station Data ST07     db_07 = plc_07.db_read(DB_NUM_07, START_ADDRESS, SIZE_07)      error_07 = (get_bool(db_07, 0, 0))     warning_07 = (get_bool(db_07, 0, 1))     information_07 = (get_bool(db_07, 0, 2))     part_count_07 = (int.from_bytes(db_07[2:4], byteorder='big'))     start_stop_07 = (get_bool(db_07, 4, 0))     emergency_stop_07 = (get_bool(db_07, 4, 1))     beg_07 = (get_bool(db_07, 4, 2))     mid_07 = (get_bool(db_07, 4, 3))     end_07 = (get_bool(db_07, 4, 4))     packing_07 = (get_bool(db_07, 4, 5))     color_07 = (int.from_bytes(db_07[6:8], byteorder='big'))     extract_count = (int.from_bytes(db_07[8:10], byteorder='big'))     text_07 = (get_string(db_07, 10, 266))      if ext_note:         set_int(db_07, 8, (json_data['extract_count']))         set_int(db_07, 6, (json_data['color_07']))         ext_note = False      set_bool(db_07, 4, 0, (json_data['start_stop_07']))     set_bool(db_07, 4, 5, (json_data['packing_07']))     set_bool(db_07, 4, 6, True)      plc_07.db_write(DB_NUM_07, START_ADDRESS, db_07)  # Seperating Station Data ST05     db_05 = plc_05.db_read(DB_NUM_05, START_ADDRESS, SIZE_05)      error_05 = (get_bool(db_05, 4, 2))     warning_05 = (get_bool(db_05, 4, 1))     information_05 = (get_bool(db_05, 4, 0))     packaging_05 = (get_bool(db_05, 0, 1))     part_count_05 = (int.from_bytes(db_05[2:4], byteorder='big'))     start_stop_05 = (get_bool(db_05, 0, 0))     emergency_stop_05 = (get_bool(db_05, 5, 0))     beg1_05 = (get_bool(db_05, 4, 3))     mid1_05 = (get_bool(db_05, 4, 4))     end1_05 = (get_bool(db_05, 4, 5))     beg2_05 = (get_bool(db_05, 4, 6))     end2_05 = (get_bool(db_05, 4, 7))     text_05 = (get_string(db_05, 6, 262))      set_bool(db_07, 5, 1, True)  # Packaging Station Data ST08     db_08 = plc_08.db_read(DB_NUM_08, START_ADDRESS, SIZE_08)      error_08 = (get_bool(db_08, 0, 0))     warning_08 = (get_bool(db_08, 0, 1))     information_08 = (get_bool(db_08, 0, 2))     part_count_08 = (int.from_bytes(db_08[2:4], byteorder='big'))     start_stop_08 = (get_bool(db_08, 4, 0))     emergency_stop_08 = (get_bool(db_08, 4, 1))     beg_08 = (get_bool(db_08, 4, 2))     mid_08 = (get_bool(db_08, 4, 3))     end_08 = (get_bool(db_08, 4, 4))     packing_08 = (get_bool(db_08, 4, 5))     text_08 = (get_string(db_08, 6, 262))      set_bool(db_07, 4, 6, True)  # Handling Station Data ST06     db_06 = plc_06.db_read(DB_NUM_06, START_ADDRESS, SIZE_06)      error_06 = (get_bool(db_06, 0, 0))     warning_06 = (get_bool(db_06, 0, 1))     information_06 = (get_bool(db_06, 0, 2))     part_count_06 = (int.from_bytes(db_06[2:4], byteorder='big'))     start_stop_06 = (get_bool(db_06, 4, 0))     emergency_stop_06 = (get_bool(db_06, 4, 1))     beg_06 = (get_bool(db_06, 4, 2))     text_06 = (get_string(db_06, 6, 262))      set_bool(db_07, 4, 3, True)      json_data = {         &quot;error_07&quot;: error_07,         &quot;warning_07&quot;: warning_07,         &quot;information_07&quot;: information_07,         &quot;part_count_07&quot;: part_count_07,         &quot;start_stop_07&quot;: start_stop_07,         &quot;emergency_stop_07&quot;: emergency_stop_07,         &quot;beg_07&quot;: beg_07,         &quot;mid_07&quot;: mid_07,         &quot;end_07&quot;: end_07,         &quot;text_07&quot;: text_07,         &quot;packing_07&quot;: packing_07,         &quot;color_07&quot;: color,         &quot;extract_count&quot;: extract_count,         &quot;error_05&quot;: error_05,         &quot;warning_05&quot;: warning_05,         &quot;information_05&quot;: information_05,         &quot;packaging_05&quot;: packaging_05,         &quot;part_count_05&quot;: part_count_05,         &quot;start_stop_05&quot;: start_stop_05,         &quot;emergency_stop_05&quot;: emergency_stop_05,         &quot;beg1_05&quot;: beg1_05,         &quot;mid1_05&quot;: mid1_05,         &quot;end1_05&quot;: end1_05,         &quot;beg2_05&quot;: beg2_05,         &quot;end2_05&quot;: end2_05,         &quot;text_05&quot;: text_05,         &quot;error_08&quot;: error_08,         &quot;warning_08&quot;: warning_08,         &quot;information_08&quot;: information_08,         &quot;part_count_08&quot;: part_count_08,         &quot;start_stop_08&quot;: start_stop_08,         &quot;emergency_stop_08&quot;: emergency_stop_08,         &quot;beg_08&quot;: beg_08,         &quot;mid_08&quot;: mid_08,         &quot;end_08&quot;: end_08,         &quot;packing_08&quot;: packing_08,         &quot;text_08&quot;: text_08,         &quot;error_06&quot;: error_06,         &quot;warning_06&quot;: warning_06,         &quot;information_06&quot;: information_06,         &quot;part_count_06&quot;: part_count_06,         &quot;start_stop_06&quot;: start_stop_06,         &quot;emergency_stop_06&quot;: emergency_stop_06,         &quot;beg_06&quot;: beg_06,         &quot;text_06&quot;: text_06     }      json.dump(json_data, open('data.json', 'w'), indent=1)      print(json.dumps(json_data, indent=1))     t.sleep(1)  </code></pre> <p>So my Question is how do I correctly parse a JSON file in JavaScript and use it's data within the script. Is it even possible to permanently read the JSON file and update the Website according to the new data?</p>"	2020-11-24 12:09:52.903 UTC	64986340	<p>You might call a function when the data is loaded</p> <pre><code>request.onload = function() {     var data = request.response;     var jsondata = JSON.parse(data);     dataLoaded(jsondata); }  function dataLoaded(jsondata){     console.log(jsondata['text_06']); } </code></pre>			2020-11-24 12:18:05.297 UTC
64986202	javascript|python|json	Use JSON to communicate between Python and JavaScript to change CSS of a Website	"<p>I have a Problem parsing a JSON file in the same path as the javascript. I have tried it with the following code</p> <pre><code>var request = new XMLHttpRequest(); request.open('GET', 'data.json') request.responseType = 'json'; request.send(); request.onload = function() {     var data = request.response;     var jsondata = JSON.parse(data);     return jsondata;     }  console.log(jsondata['text_06']); </code></pre> <p>But I only get the error: Uncaught ReferenceError: jsondata is not defined at webvisu.js:101</p> <p>In this case &quot;text_06&quot; is a string from the JSON file which looks like following:</p> <pre><code>{  &quot;part_count_07&quot;: 0,  &quot;packaging_05&quot;: false,  &quot;emergency_stop_06&quot;: false,  &quot;start_stop_08&quot;: false,  &quot;error_07&quot;: false,  &quot;beg_06&quot;: false,  &quot;beg2_05&quot;: false,  &quot;warning_08&quot;: false,  &quot;text_06&quot;: &quot;magazine nearly full&quot;,  &quot;emergency_stop_08&quot;: false,  &quot;warning_07&quot;: false,  &quot;emergency_stop_05&quot;: true,  &quot;information_05&quot;: false,  &quot;text_05&quot;: &quot;emergency-stop&quot;,  &quot;mid1_05&quot;: false,  &quot;start_stop_07&quot;: false,  &quot;packing_07&quot;: false,  &quot;part_count_05&quot;: 9,  &quot;start_stop_06&quot;: false,  &quot;end1_05&quot;: true,  &quot;emergency_stop_07&quot;: false,  &quot;error_06&quot;: false,  &quot;packing_08&quot;: false,  &quot;beg1_05&quot;: false,  &quot;beg_07&quot;: false,  &quot;information_08&quot;: false,  &quot;error_05&quot;: false,  &quot;warning_05&quot;: false,  &quot;information_06&quot;: false,  &quot;part_count_06&quot;: 10,  &quot;mid_08&quot;: true,  &quot;warning_06&quot;: false,  &quot;end_07&quot;: false,  &quot;mid_07&quot;: false,  &quot;end2_05&quot;: true,  &quot;beg_08&quot;: true,  &quot;text_07&quot;: &quot;&quot;,  &quot;information_07&quot;: false,  &quot;extract_count&quot;: 0,  &quot;error_08&quot;: false,  &quot;end_08&quot;: false,  &quot;part_count_08&quot;: 1,  &quot;text_08&quot;: &quot; &quot;,  &quot;start_stop_05&quot;: false,  &quot;color_07&quot;: 0 } </code></pre> <p>My goal is it to change text and colors on the website with the data out of the JSON file which gets overwritten by the following Python script every second which is already fully functional:</p> <pre><code>while True:      with open('data.json') as f:         json_data = json.load(f)      if extract_count == 0:         ext_note = True  # Storing Station Data ST07     db_07 = plc_07.db_read(DB_NUM_07, START_ADDRESS, SIZE_07)      error_07 = (get_bool(db_07, 0, 0))     warning_07 = (get_bool(db_07, 0, 1))     information_07 = (get_bool(db_07, 0, 2))     part_count_07 = (int.from_bytes(db_07[2:4], byteorder='big'))     start_stop_07 = (get_bool(db_07, 4, 0))     emergency_stop_07 = (get_bool(db_07, 4, 1))     beg_07 = (get_bool(db_07, 4, 2))     mid_07 = (get_bool(db_07, 4, 3))     end_07 = (get_bool(db_07, 4, 4))     packing_07 = (get_bool(db_07, 4, 5))     color_07 = (int.from_bytes(db_07[6:8], byteorder='big'))     extract_count = (int.from_bytes(db_07[8:10], byteorder='big'))     text_07 = (get_string(db_07, 10, 266))      if ext_note:         set_int(db_07, 8, (json_data['extract_count']))         set_int(db_07, 6, (json_data['color_07']))         ext_note = False      set_bool(db_07, 4, 0, (json_data['start_stop_07']))     set_bool(db_07, 4, 5, (json_data['packing_07']))     set_bool(db_07, 4, 6, True)      plc_07.db_write(DB_NUM_07, START_ADDRESS, db_07)  # Seperating Station Data ST05     db_05 = plc_05.db_read(DB_NUM_05, START_ADDRESS, SIZE_05)      error_05 = (get_bool(db_05, 4, 2))     warning_05 = (get_bool(db_05, 4, 1))     information_05 = (get_bool(db_05, 4, 0))     packaging_05 = (get_bool(db_05, 0, 1))     part_count_05 = (int.from_bytes(db_05[2:4], byteorder='big'))     start_stop_05 = (get_bool(db_05, 0, 0))     emergency_stop_05 = (get_bool(db_05, 5, 0))     beg1_05 = (get_bool(db_05, 4, 3))     mid1_05 = (get_bool(db_05, 4, 4))     end1_05 = (get_bool(db_05, 4, 5))     beg2_05 = (get_bool(db_05, 4, 6))     end2_05 = (get_bool(db_05, 4, 7))     text_05 = (get_string(db_05, 6, 262))      set_bool(db_07, 5, 1, True)  # Packaging Station Data ST08     db_08 = plc_08.db_read(DB_NUM_08, START_ADDRESS, SIZE_08)      error_08 = (get_bool(db_08, 0, 0))     warning_08 = (get_bool(db_08, 0, 1))     information_08 = (get_bool(db_08, 0, 2))     part_count_08 = (int.from_bytes(db_08[2:4], byteorder='big'))     start_stop_08 = (get_bool(db_08, 4, 0))     emergency_stop_08 = (get_bool(db_08, 4, 1))     beg_08 = (get_bool(db_08, 4, 2))     mid_08 = (get_bool(db_08, 4, 3))     end_08 = (get_bool(db_08, 4, 4))     packing_08 = (get_bool(db_08, 4, 5))     text_08 = (get_string(db_08, 6, 262))      set_bool(db_07, 4, 6, True)  # Handling Station Data ST06     db_06 = plc_06.db_read(DB_NUM_06, START_ADDRESS, SIZE_06)      error_06 = (get_bool(db_06, 0, 0))     warning_06 = (get_bool(db_06, 0, 1))     information_06 = (get_bool(db_06, 0, 2))     part_count_06 = (int.from_bytes(db_06[2:4], byteorder='big'))     start_stop_06 = (get_bool(db_06, 4, 0))     emergency_stop_06 = (get_bool(db_06, 4, 1))     beg_06 = (get_bool(db_06, 4, 2))     text_06 = (get_string(db_06, 6, 262))      set_bool(db_07, 4, 3, True)      json_data = {         &quot;error_07&quot;: error_07,         &quot;warning_07&quot;: warning_07,         &quot;information_07&quot;: information_07,         &quot;part_count_07&quot;: part_count_07,         &quot;start_stop_07&quot;: start_stop_07,         &quot;emergency_stop_07&quot;: emergency_stop_07,         &quot;beg_07&quot;: beg_07,         &quot;mid_07&quot;: mid_07,         &quot;end_07&quot;: end_07,         &quot;text_07&quot;: text_07,         &quot;packing_07&quot;: packing_07,         &quot;color_07&quot;: color,         &quot;extract_count&quot;: extract_count,         &quot;error_05&quot;: error_05,         &quot;warning_05&quot;: warning_05,         &quot;information_05&quot;: information_05,         &quot;packaging_05&quot;: packaging_05,         &quot;part_count_05&quot;: part_count_05,         &quot;start_stop_05&quot;: start_stop_05,         &quot;emergency_stop_05&quot;: emergency_stop_05,         &quot;beg1_05&quot;: beg1_05,         &quot;mid1_05&quot;: mid1_05,         &quot;end1_05&quot;: end1_05,         &quot;beg2_05&quot;: beg2_05,         &quot;end2_05&quot;: end2_05,         &quot;text_05&quot;: text_05,         &quot;error_08&quot;: error_08,         &quot;warning_08&quot;: warning_08,         &quot;information_08&quot;: information_08,         &quot;part_count_08&quot;: part_count_08,         &quot;start_stop_08&quot;: start_stop_08,         &quot;emergency_stop_08&quot;: emergency_stop_08,         &quot;beg_08&quot;: beg_08,         &quot;mid_08&quot;: mid_08,         &quot;end_08&quot;: end_08,         &quot;packing_08&quot;: packing_08,         &quot;text_08&quot;: text_08,         &quot;error_06&quot;: error_06,         &quot;warning_06&quot;: warning_06,         &quot;information_06&quot;: information_06,         &quot;part_count_06&quot;: part_count_06,         &quot;start_stop_06&quot;: start_stop_06,         &quot;emergency_stop_06&quot;: emergency_stop_06,         &quot;beg_06&quot;: beg_06,         &quot;text_06&quot;: text_06     }      json.dump(json_data, open('data.json', 'w'), indent=1)      print(json.dumps(json_data, indent=1))     t.sleep(1)  </code></pre> <p>So my Question is how do I correctly parse a JSON file in JavaScript and use it's data within the script. Is it even possible to permanently read the JSON file and update the Website according to the new data?</p>"	2020-11-24 12:09:52.903 UTC	64986348	"<p>Your code looks fine enough but remember that variables declared inside functions are locally scoped, so put your console.log inside the function</p> <pre class=""lang-js prettyprint-override""><code>var request = new XMLHttpRequest(); request.open('GET', 'data.json') request.responseType = 'json'; request.send(); request.onload = function() {     var data = request.response;     var jsondata = JSON.parse(data);     console.log(jsondata['text_06']);     return jsondata;     } </code></pre>"			2020-11-24 12:18:26.633 UTC
64986202	javascript|python|json	Use JSON to communicate between Python and JavaScript to change CSS of a Website	"<p>I have a Problem parsing a JSON file in the same path as the javascript. I have tried it with the following code</p> <pre><code>var request = new XMLHttpRequest(); request.open('GET', 'data.json') request.responseType = 'json'; request.send(); request.onload = function() {     var data = request.response;     var jsondata = JSON.parse(data);     return jsondata;     }  console.log(jsondata['text_06']); </code></pre> <p>But I only get the error: Uncaught ReferenceError: jsondata is not defined at webvisu.js:101</p> <p>In this case &quot;text_06&quot; is a string from the JSON file which looks like following:</p> <pre><code>{  &quot;part_count_07&quot;: 0,  &quot;packaging_05&quot;: false,  &quot;emergency_stop_06&quot;: false,  &quot;start_stop_08&quot;: false,  &quot;error_07&quot;: false,  &quot;beg_06&quot;: false,  &quot;beg2_05&quot;: false,  &quot;warning_08&quot;: false,  &quot;text_06&quot;: &quot;magazine nearly full&quot;,  &quot;emergency_stop_08&quot;: false,  &quot;warning_07&quot;: false,  &quot;emergency_stop_05&quot;: true,  &quot;information_05&quot;: false,  &quot;text_05&quot;: &quot;emergency-stop&quot;,  &quot;mid1_05&quot;: false,  &quot;start_stop_07&quot;: false,  &quot;packing_07&quot;: false,  &quot;part_count_05&quot;: 9,  &quot;start_stop_06&quot;: false,  &quot;end1_05&quot;: true,  &quot;emergency_stop_07&quot;: false,  &quot;error_06&quot;: false,  &quot;packing_08&quot;: false,  &quot;beg1_05&quot;: false,  &quot;beg_07&quot;: false,  &quot;information_08&quot;: false,  &quot;error_05&quot;: false,  &quot;warning_05&quot;: false,  &quot;information_06&quot;: false,  &quot;part_count_06&quot;: 10,  &quot;mid_08&quot;: true,  &quot;warning_06&quot;: false,  &quot;end_07&quot;: false,  &quot;mid_07&quot;: false,  &quot;end2_05&quot;: true,  &quot;beg_08&quot;: true,  &quot;text_07&quot;: &quot;&quot;,  &quot;information_07&quot;: false,  &quot;extract_count&quot;: 0,  &quot;error_08&quot;: false,  &quot;end_08&quot;: false,  &quot;part_count_08&quot;: 1,  &quot;text_08&quot;: &quot; &quot;,  &quot;start_stop_05&quot;: false,  &quot;color_07&quot;: 0 } </code></pre> <p>My goal is it to change text and colors on the website with the data out of the JSON file which gets overwritten by the following Python script every second which is already fully functional:</p> <pre><code>while True:      with open('data.json') as f:         json_data = json.load(f)      if extract_count == 0:         ext_note = True  # Storing Station Data ST07     db_07 = plc_07.db_read(DB_NUM_07, START_ADDRESS, SIZE_07)      error_07 = (get_bool(db_07, 0, 0))     warning_07 = (get_bool(db_07, 0, 1))     information_07 = (get_bool(db_07, 0, 2))     part_count_07 = (int.from_bytes(db_07[2:4], byteorder='big'))     start_stop_07 = (get_bool(db_07, 4, 0))     emergency_stop_07 = (get_bool(db_07, 4, 1))     beg_07 = (get_bool(db_07, 4, 2))     mid_07 = (get_bool(db_07, 4, 3))     end_07 = (get_bool(db_07, 4, 4))     packing_07 = (get_bool(db_07, 4, 5))     color_07 = (int.from_bytes(db_07[6:8], byteorder='big'))     extract_count = (int.from_bytes(db_07[8:10], byteorder='big'))     text_07 = (get_string(db_07, 10, 266))      if ext_note:         set_int(db_07, 8, (json_data['extract_count']))         set_int(db_07, 6, (json_data['color_07']))         ext_note = False      set_bool(db_07, 4, 0, (json_data['start_stop_07']))     set_bool(db_07, 4, 5, (json_data['packing_07']))     set_bool(db_07, 4, 6, True)      plc_07.db_write(DB_NUM_07, START_ADDRESS, db_07)  # Seperating Station Data ST05     db_05 = plc_05.db_read(DB_NUM_05, START_ADDRESS, SIZE_05)      error_05 = (get_bool(db_05, 4, 2))     warning_05 = (get_bool(db_05, 4, 1))     information_05 = (get_bool(db_05, 4, 0))     packaging_05 = (get_bool(db_05, 0, 1))     part_count_05 = (int.from_bytes(db_05[2:4], byteorder='big'))     start_stop_05 = (get_bool(db_05, 0, 0))     emergency_stop_05 = (get_bool(db_05, 5, 0))     beg1_05 = (get_bool(db_05, 4, 3))     mid1_05 = (get_bool(db_05, 4, 4))     end1_05 = (get_bool(db_05, 4, 5))     beg2_05 = (get_bool(db_05, 4, 6))     end2_05 = (get_bool(db_05, 4, 7))     text_05 = (get_string(db_05, 6, 262))      set_bool(db_07, 5, 1, True)  # Packaging Station Data ST08     db_08 = plc_08.db_read(DB_NUM_08, START_ADDRESS, SIZE_08)      error_08 = (get_bool(db_08, 0, 0))     warning_08 = (get_bool(db_08, 0, 1))     information_08 = (get_bool(db_08, 0, 2))     part_count_08 = (int.from_bytes(db_08[2:4], byteorder='big'))     start_stop_08 = (get_bool(db_08, 4, 0))     emergency_stop_08 = (get_bool(db_08, 4, 1))     beg_08 = (get_bool(db_08, 4, 2))     mid_08 = (get_bool(db_08, 4, 3))     end_08 = (get_bool(db_08, 4, 4))     packing_08 = (get_bool(db_08, 4, 5))     text_08 = (get_string(db_08, 6, 262))      set_bool(db_07, 4, 6, True)  # Handling Station Data ST06     db_06 = plc_06.db_read(DB_NUM_06, START_ADDRESS, SIZE_06)      error_06 = (get_bool(db_06, 0, 0))     warning_06 = (get_bool(db_06, 0, 1))     information_06 = (get_bool(db_06, 0, 2))     part_count_06 = (int.from_bytes(db_06[2:4], byteorder='big'))     start_stop_06 = (get_bool(db_06, 4, 0))     emergency_stop_06 = (get_bool(db_06, 4, 1))     beg_06 = (get_bool(db_06, 4, 2))     text_06 = (get_string(db_06, 6, 262))      set_bool(db_07, 4, 3, True)      json_data = {         &quot;error_07&quot;: error_07,         &quot;warning_07&quot;: warning_07,         &quot;information_07&quot;: information_07,         &quot;part_count_07&quot;: part_count_07,         &quot;start_stop_07&quot;: start_stop_07,         &quot;emergency_stop_07&quot;: emergency_stop_07,         &quot;beg_07&quot;: beg_07,         &quot;mid_07&quot;: mid_07,         &quot;end_07&quot;: end_07,         &quot;text_07&quot;: text_07,         &quot;packing_07&quot;: packing_07,         &quot;color_07&quot;: color,         &quot;extract_count&quot;: extract_count,         &quot;error_05&quot;: error_05,         &quot;warning_05&quot;: warning_05,         &quot;information_05&quot;: information_05,         &quot;packaging_05&quot;: packaging_05,         &quot;part_count_05&quot;: part_count_05,         &quot;start_stop_05&quot;: start_stop_05,         &quot;emergency_stop_05&quot;: emergency_stop_05,         &quot;beg1_05&quot;: beg1_05,         &quot;mid1_05&quot;: mid1_05,         &quot;end1_05&quot;: end1_05,         &quot;beg2_05&quot;: beg2_05,         &quot;end2_05&quot;: end2_05,         &quot;text_05&quot;: text_05,         &quot;error_08&quot;: error_08,         &quot;warning_08&quot;: warning_08,         &quot;information_08&quot;: information_08,         &quot;part_count_08&quot;: part_count_08,         &quot;start_stop_08&quot;: start_stop_08,         &quot;emergency_stop_08&quot;: emergency_stop_08,         &quot;beg_08&quot;: beg_08,         &quot;mid_08&quot;: mid_08,         &quot;end_08&quot;: end_08,         &quot;packing_08&quot;: packing_08,         &quot;text_08&quot;: text_08,         &quot;error_06&quot;: error_06,         &quot;warning_06&quot;: warning_06,         &quot;information_06&quot;: information_06,         &quot;part_count_06&quot;: part_count_06,         &quot;start_stop_06&quot;: start_stop_06,         &quot;emergency_stop_06&quot;: emergency_stop_06,         &quot;beg_06&quot;: beg_06,         &quot;text_06&quot;: text_06     }      json.dump(json_data, open('data.json', 'w'), indent=1)      print(json.dumps(json_data, indent=1))     t.sleep(1)  </code></pre> <p>So my Question is how do I correctly parse a JSON file in JavaScript and use it's data within the script. Is it even possible to permanently read the JSON file and update the Website according to the new data?</p>"	2020-11-24 12:09:52.903 UTC	64986398	"<p>Because <code>jsondata</code> is defined within the definition of the callback function <code>request.onload</code> while you are trying to access it outside the code block. You may want to move <code>console.log</code> inside the onload function.</p> <pre class=""lang-js prettyprint-override""><code>request.onload = function() {     var data = request.response;     var jsondata = JSON.parse(data);     return jsondata; }  console.log(jsondata['text_06']); // jsondata is not accessible </code></pre> <p>It's also recommended that <code>request.send()</code> is called after having <code>request.onload</code> defined</p> <pre class=""lang-js prettyprint-override""><code>request.onload = function() {     var data = request.response;     var jsondata = JSON.parse(data);     console.log(jsondata['text_06']);     return jsondata;     } request.send(); </code></pre> <p>If you want to access <code>jsondata</code> outside, you may want to define a global variable outside the onload function and update it once you receive the data.</p>"			2020-11-24 12:21:21.74 UTC
64993665	javascript|python|python-3.x|for-loop	Converting a 'for loop' from Javascript to Python	"<p>I am trying to convert the following javascript code to python.</p> <pre><code>let speed = 50; const lightCount = 1; const lights = [[200, 10];  const isRed = (speed, dist, dur) =&gt;     (18 * dist) % (10 * speed * dur) &gt;= (5 * speed * dur);  for(let i = 0; i &lt; lightCount; i++) {     if (isRed(speed, lights[i][0], lights[i][1])) {         speed--; // Reduce speed         i = -1; // Start again     } } console.log(speed); </code></pre> <p>I tried the following in python, but it is not working:</p> <pre><code>speed = 50 light_count = 1 lights = [[200, 10]  def is_red(speed, dist, dur):     if (18 * dist) % (10 * speed * dur) &gt;= (5 * speed * dur):         return True     return False  for i in range(light_count):     if is_red(speed, lights[i][0], lights[i][1]):         speed -= 1         i = -1  print(speed) </code></pre> <p>The answer is supposed to be 36 but it is showing 49. It always loops only once. Please suggest a solution. Thanks in advance</p>"	2020-11-24 19:40:03.21 UTC	64993825	"<p>Editing <code>i</code> will not step the loop back. <code>int</code>s are immutable, so you are just editing the state of a temporary variable. You can try using a <code>while</code> loop, and just incrementing back i.</p> <p>Example:</p> <pre><code>speed = 50 light_count = 1 lights = [[200, 10]  def is_red(speed, dist, dur):     if (18 * dist) % (10 * speed * dur) &gt;= (5 * speed * dur):         return True     return False  i = 0 while i &lt; light_count:     if is_red(speed, lights[i][0], lights[i][1]):         speed -= 1     #    i -= 1     #i += 1     else:         i += 1 del i </code></pre>"			2020-11-24 19:50:29.7 UTC
64994878	javascript|python	Can you use JavaScript for changing a existing Python variable?	"<p>I have some code in Python that makes a website. There is some JavaScript I need. Using JavaScript, I want to change a Python variable.</p> <p>In the <code>a</code> tags under the <code>nav</code>, I want to use JavaScript to change the variable <code>page</code>. Please use the <code>onclick</code> parameter and a <code>script</code> tag.</p> <p>I have tried searching it up, but none matched my needs. Here is the basic outline of my code. It's not the best way, but I find it useful.</p> <pre><code>from socket import *   def create_server():     server_socket = socket(AF_INET, SOCK_STREAM)     try:         server_socket.bind(('localhost', 9000))         server_socket.listen(5)          page = 'home'          while True:             (client_socket, address) = server_socket.accept()              rd = client_socket.recv(5000).decode()             pieces = rd.split('\n')              if len(pieces) &gt; 0:                 print(pieces[0])              data = 'HTTP/1.1 200 OK\r\n'         data += 'Content-Type: text/html; charset=utf-8\r\n\r\n'         data += '''&lt;html&gt;                         &lt;head&gt;                             &lt;style&gt;                                 body {                                     font-family: &quot;Avenir Next&quot;;                                 }                                                                  a {                                     text-decoration: none;                                 }                                                                  nav ul {                                     list-style-type: none;                                     margin: 0;                                     padding: 0;                                     overflow: hidden;                                     background-color: #333;                                     position: sticky;                                     top: 0;                                     border-radius: 7px;                                 }                                                                  nav ul li {                                     float: left;                                 }                                                                  nav ul li a {                                     display: block;                                     color: white;                                     text-align: center;                                     padding: 14px 16px;                                     text-decoration: none;                                 }                                                                  nav ul li a:hover {                                     background-color: #111;                                 }                                                                  .active {                                     background-color: #4CAF50;                                 }                             &lt;/style&gt;                 '''          data += f'''                             &lt;title&gt;{page.title()} | MySite&lt;/title&gt;                         &lt;/head&gt;                         &lt;body&gt;                             &lt;nav&gt;                                 &lt;ul&gt;                                     &lt;li&gt;&lt;a {'class=&quot;active&quot;' if page == 'home' else ''} href=&quot;#&quot; onclick=&quot;SOMETHING&quot;&gt;Home&lt;/a&gt;&lt;/li&gt;                                     &lt;li&gt;&lt;a {'class=&quot;active&quot;' if page == 'about' else ''} href=&quot;#&quot; onclick=&quot;SOMETHING&quot;&gt;About MySite&lt;a&gt;&lt;/li&gt;                                     &lt;li style=&quot;float:right&quot;&gt;&lt;a {'class=&quot;active&quot;' if page == 'login' else ''} href=&quot;#&quot; onclick=&quot;return&quot;&gt;Login&lt;/a&gt;&lt;/li&gt;                                 &lt;/ul&gt;                             &lt;/nav&gt;                             &lt;center&gt;                                 &lt;h1&gt;MySite&lt;/h1&gt;                                 &lt;h2&gt;Nice Subheading&lt;p&gt;                             &lt;/center&gt;                         &lt;/body&gt;                     &lt;/html&gt;\r\n\r\n'''             client_socket.sendall(data.encode())             client_socket.shutdown(SHUT_WR)     except KeyboardInterrupt:         print('\nShutting Down...\n')     except Exception as exc:         print(f'\n\nError:\n{exc}')      server_socket.close()   print('Access http://localhost:9000\n\nRequests:') create_server() </code></pre>"	2020-11-24 21:10:43.827 UTC	64994910	<p>No you can't. The only way is having a endpoint where you send a http request to an api endpoint or something similar</p>			2020-11-24 21:14:06.6 UTC
64996057	javascript|python|python-import	Import javascript array from local file into local python file	"<p>I have a local javascript file with an array like this:</p> <p>file1.js:</p> <pre><code>export const arr = ['a', 'b', 'c'] </code></pre> <p>Can I import this array as a python list (or any other data type) in a python script on the same machine and in the same project? Ideally it would look something like this:</p> <p>file2.py:</p> <pre><code>from ..path.to.javascript.file1.js import arr </code></pre> <p>But this doesn't work. Would it be possible if I exported the array as a JSON stringified object?</p>"	2020-11-24 22:54:27.92 UTC	64996116	"<p>Assuming you can write the JSON to a file, you can read it in Python like this:</p> <pre><code>import json  with open(&quot;file.json&quot;) as f:     json_file = json.loads(f) </code></pre>"			2020-11-24 23:01:31.037 UTC
64996057	javascript|python|python-import	Import javascript array from local file into local python file	"<p>I have a local javascript file with an array like this:</p> <p>file1.js:</p> <pre><code>export const arr = ['a', 'b', 'c'] </code></pre> <p>Can I import this array as a python list (or any other data type) in a python script on the same machine and in the same project? Ideally it would look something like this:</p> <p>file2.py:</p> <pre><code>from ..path.to.javascript.file1.js import arr </code></pre> <p>But this doesn't work. Would it be possible if I exported the array as a JSON stringified object?</p>"	2020-11-24 22:54:27.92 UTC	64996724	"<p>There are two ways to do this:</p> <ol> <li><p>convert your .js file to a .json and change the array to proper json format like this:</p> <p>{&quot;arr&quot;: [&quot;a&quot;, &quot;b&quot;, &quot;c&quot;]}</p> <p>The double quotes are necessary for json format. (Also it's best to embed the array in a json object to avoid a <a href=""https://stackoverflow.com/questions/43717574/javascript-why-shouldnt-the-server-respond-with-a-json-array"">security vulnerability</a> although it is possible to have an array as json top-level.) Then use the built-in <code>json</code> module to read the json.</p> </li> <li><p>Read the .js file as a string, and extract the list using <a href=""https://docs.python.org/3/library/ast.html#ast.literal_eval"" rel=""nofollow noreferrer""><code>ast.literal_eval</code></a>. which will safely convert the string to a list.</p> </li> </ol> <p>First approach:</p> <pre><code>import json  with open(&quot;file1.js&quot;) as f:     li = json.load(f)['arr']   #note that you use load(), not loads() to read from file </code></pre> <p>Second approach:</p> <pre><code>import ast  with open(file1.js') as dataFile:     data = dataFile.read()     str = data[data.find('[') : data.rfind(']')+1]     li = ast.literal_eval(str) </code></pre>"			2020-11-25 00:12:24.59 UTC
65027737	javascript|python|selenium|selenium-webdriver|webdriver	JavascriptException: Message: javascript error: Cannot read property 'click' of undefined error executing JavaScript through Python Selenium	"<p>I have the following code in which I enter a page and search for a product, I want to execute a JavaScript code</p> <pre><code>from selenium import webdriver from getpass import getpass #-------------------------------------------PRODUCT SEARCH----------------------------------------------------------------------------------- options = webdriver.ChromeOptions() options.add_experimental_option(&quot;excludeSwitches&quot;, [&quot;enable-automation&quot;]) options.add_experimental_option('useAutomationExtension', False) options.add_argument(&quot;--disable-blink-features=AutomationControlled&quot;)  driver = webdriver.Chrome(&quot;C:\\Users\\stbaz\\Documents\\Python\\ChromeTools\\chromedriver.exe&quot;, options=options) driver.get(&quot;https://www.innvictus.com/&quot;) product_textbox = driver.find_element_by_id(&quot;is-navigation__search-bar__input&quot;) product_textbox.send_keys(&quot;FW7093&quot;) product_textbox.submit() #------------------------------------------PRODUCT SEARCH END--------------------------------------------------------------------------------------  driver.implicitly_wait(5) js='javascript:document.getElementsByClassName(&quot;buy-button buy-button--sticky buy-button--buy-now visible-xs visible-sm&quot;)[1].click();window.open(&quot;/checkout&quot;)' driver.execute_script(js) </code></pre> <p>But I get the following error</p> <pre><code>selenium.common.exceptions.JavascriptException: Message: javascript error: Cannot read property 'click' of undefined </code></pre> <p>I can run that code manually in chrome, I use a bookmark, but I want to run it in Python, what am I doing wrong?</p>"	2020-11-26 18:48:38.047 UTC	65027955	"<p>Mainly Getting an error &quot;Cannot read property 'click' of undefined&quot; is if selector or class cannot be found in the DOM. I believe the error happens if JavaScript cannot find the selector in the markup/DOM or if it does not exist. Maybe you should try <code>js='javascript:document.getElementsByClassName(&quot;buy-button buy-button--sticky  buy-button--buy-now visible-xs visible-sm&quot;).click();window.open(&quot;/checkout&quot;)'</code> with out the index. check <a href=""https://stackoverflow.com/questions/53514947/cannot-read-property-click-of-undefined-while-using-java-script-executor-in-se"">Cannot read property &#39;click&#39; of undefined while using Java Script Executor in Selenium</a> It may help</p>"			2020-11-26 19:08:10.397 UTC
65027737	javascript|python|selenium|selenium-webdriver|webdriver	JavascriptException: Message: javascript error: Cannot read property 'click' of undefined error executing JavaScript through Python Selenium	"<p>I have the following code in which I enter a page and search for a product, I want to execute a JavaScript code</p> <pre><code>from selenium import webdriver from getpass import getpass #-------------------------------------------PRODUCT SEARCH----------------------------------------------------------------------------------- options = webdriver.ChromeOptions() options.add_experimental_option(&quot;excludeSwitches&quot;, [&quot;enable-automation&quot;]) options.add_experimental_option('useAutomationExtension', False) options.add_argument(&quot;--disable-blink-features=AutomationControlled&quot;)  driver = webdriver.Chrome(&quot;C:\\Users\\stbaz\\Documents\\Python\\ChromeTools\\chromedriver.exe&quot;, options=options) driver.get(&quot;https://www.innvictus.com/&quot;) product_textbox = driver.find_element_by_id(&quot;is-navigation__search-bar__input&quot;) product_textbox.send_keys(&quot;FW7093&quot;) product_textbox.submit() #------------------------------------------PRODUCT SEARCH END--------------------------------------------------------------------------------------  driver.implicitly_wait(5) js='javascript:document.getElementsByClassName(&quot;buy-button buy-button--sticky buy-button--buy-now visible-xs visible-sm&quot;)[1].click();window.open(&quot;/checkout&quot;)' driver.execute_script(js) </code></pre> <p>But I get the following error</p> <pre><code>selenium.common.exceptions.JavascriptException: Message: javascript error: Cannot read property 'click' of undefined </code></pre> <p>I can run that code manually in chrome, I use a bookmark, but I want to run it in Python, what am I doing wrong?</p>"	2020-11-26 18:48:38.047 UTC	65030344	"<p>So, I included the main program without using <code>JavaScript</code>; but, under the Main Program Reference, I included the method for using <code>JavaScript</code> as well.</p> <p>To achieve this solution without JS, I used <code>xpath</code> to validate that the page loaded successfully. Then, after that, I found the <code>xpath</code> for the search button</p> <pre><code>//nav[@class='is-navigation']//span[contains(@class, 'search-btn')] </code></pre> <p>Once I discovered the <code>xpath</code> for this, I clicked the search button and then I created a method to search for a specific product. In my example, I used the &quot;Converse&quot; shoes as an example.</p> <pre><code>def search_for_text(driver : ChromeDriver, text : str):     driver.find_element(By.XPATH, &quot;//form[@id='formSearch']//input[contains(@data-options, 'SearchBox')]&quot;).send_keys(text)     time.sleep(2)     if driver.find_element(By.XPATH, &quot;//form[@id='formSearch']//input[contains(@data-options, 'SearchBox')]&quot;).get_attribute('value').__len__() != text.__len__():         raise Exception(&quot;Failed to populate our search textbox&quot;)     else:         driver.find_element(By.XPATH, &quot;//form[@id='formSearch']//input[contains(@data-options, 'SearchBox')]&quot;).send_keys(Keys.RETURN)         time.sleep(2)         wait_displayed(driver, &quot;//div[@class='is-pw__products']//div[contains(@class, 'products-list')]&quot;, 30)         print(f'Your search for {text} was successful') </code></pre> <p>In that method, you see that I used <code>wait_displayed</code> to validate that my product list displays properly.</p> <p><strong>MAIN PROGRAM - FOR REFERENCE</strong></p> <pre><code>from selenium import webdriver from selenium.webdriver.chrome.webdriver import WebDriver as ChromeDriver from selenium.webdriver.common.by import By from selenium.webdriver.support.ui import WebDriverWait as DriverWait from selenium.webdriver.support import expected_conditions as DriverConditions from selenium.common.exceptions import WebDriverException from selenium.webdriver.common.keys import Keys import time   def get_chrome_driver():     &quot;&quot;&quot;This sets up our Chrome Driver and returns it as an object&quot;&quot;&quot;     path_to_chrome = &quot;F:\Selenium_Drivers\Windows_Chrome87_Driver\chromedriver.exe&quot;     chrome_options = webdriver.ChromeOptions()           # Browser is displayed in a custom window size     chrome_options.add_argument(&quot;window-size=1500,1000&quot;)          return webdriver.Chrome(executable_path = path_to_chrome,                             options = chrome_options)       def wait_displayed(driver : ChromeDriver, xpath: str, int = 5):     try:          DriverWait(driver, int).until(             DriverConditions.presence_of_element_located(locator = (By.XPATH, xpath))         )     except:         raise WebDriverException(f'Timeout: Failed to find {xpath}')           def is_displayed(driver : ChromeDriver, xpath: str, int = 5):     try:          webElement = DriverWait(driver, int).until(             DriverConditions.presence_of_element_located(locator = (By.XPATH, xpath))         )          return True if webElement != None else False     except:         return False           def click_search(driver : ChromeDriver):     driver.find_element(By.XPATH, &quot;//nav[@class='is-navigation']//span[contains(@class, 'search-btn')]&quot;).click()     time.sleep(2)     if is_displayed(driver, &quot;//form[@id='formSearch']//input[contains(@data-options, 'SearchBox')]&quot;) == False:         raise Exception(&quot;Failed to click our search button&quot;)     else:         print('You clicked the Search Button Successfully')           def search_for_text(driver : ChromeDriver, text : str):     driver.find_element(By.XPATH, &quot;//form[@id='formSearch']//input[contains(@data-options, 'SearchBox')]&quot;).send_keys(text)     time.sleep(2)     if driver.find_element(By.XPATH, &quot;//form[@id='formSearch']//input[contains(@data-options, 'SearchBox')]&quot;).get_attribute('value').__len__() != text.__len__():         raise Exception(&quot;Failed to populate our search textbox&quot;)     else:         driver.find_element(By.XPATH, &quot;//form[@id='formSearch']//input[contains(@data-options, 'SearchBox')]&quot;).send_keys(Keys.RETURN)         time.sleep(2)         wait_displayed(driver, &quot;//div[@class='is-pw__products']//div[contains(@class, 'products-list')]&quot;, 30)         print(f'Your search for {text} was successful')            # Gets our chrome driver and opens our site chrome_driver = get_chrome_driver() chrome_driver.get(&quot;https://www.innvictus.com/&quot;) wait_displayed(chrome_driver, &quot;(//nav[@class='is-navigation']//div[contains(@class, 'desktop-menu')]//a[contains(@href, 'lanzamientos')])[1]&quot;) wait_displayed(chrome_driver, &quot;//div[@class='content-page']//div[@class='scrolling-wrapper-flexbox']&quot;) wait_displayed(chrome_driver, &quot;//nav[@class='is-navigation']//span[contains(@class, 'search-btn')]&quot;) click_search(chrome_driver) search_for_text(chrome_driver, &quot;Converse&quot;) chrome_driver.quit() chrome_driver.service.stop() </code></pre> <p><strong>COMMAND FOR CLICKING THE SEARCH BUTTON USING JAVASCRIPT</strong></p> <pre><code>jsText = &quot;document.querySelector('nav').querySelector('div .is-navigation__main').querySelector('div .is-navigation__main__right').querySelector('span').click()&quot; driver.execute_script(jsText) </code></pre> <p><strong>METHOD</strong></p> <pre><code>def click_search_using_javaScript(driver : ChromeDriver):     jsText = &quot;document.querySelector('nav').querySelector('div .is-navigation__main').querySelector('div .is-navigation__main__right').querySelector('span').click()&quot;     driver.execute_script(jsText)     time.sleep(2)     if is_displayed(driver, &quot;//form[@id='formSearch']//input[contains(@data-options, 'SearchBox')]&quot;) == False:         raise Exception(&quot;Failed to click our search button&quot;)     else:         print('You clicked the Search Button Successfully') </code></pre>"			2020-11-26 23:21:44.143 UTC
65027737	javascript|python|selenium|selenium-webdriver|webdriver	JavascriptException: Message: javascript error: Cannot read property 'click' of undefined error executing JavaScript through Python Selenium	"<p>I have the following code in which I enter a page and search for a product, I want to execute a JavaScript code</p> <pre><code>from selenium import webdriver from getpass import getpass #-------------------------------------------PRODUCT SEARCH----------------------------------------------------------------------------------- options = webdriver.ChromeOptions() options.add_experimental_option(&quot;excludeSwitches&quot;, [&quot;enable-automation&quot;]) options.add_experimental_option('useAutomationExtension', False) options.add_argument(&quot;--disable-blink-features=AutomationControlled&quot;)  driver = webdriver.Chrome(&quot;C:\\Users\\stbaz\\Documents\\Python\\ChromeTools\\chromedriver.exe&quot;, options=options) driver.get(&quot;https://www.innvictus.com/&quot;) product_textbox = driver.find_element_by_id(&quot;is-navigation__search-bar__input&quot;) product_textbox.send_keys(&quot;FW7093&quot;) product_textbox.submit() #------------------------------------------PRODUCT SEARCH END--------------------------------------------------------------------------------------  driver.implicitly_wait(5) js='javascript:document.getElementsByClassName(&quot;buy-button buy-button--sticky buy-button--buy-now visible-xs visible-sm&quot;)[1].click();window.open(&quot;/checkout&quot;)' driver.execute_script(js) </code></pre> <p>But I get the following error</p> <pre><code>selenium.common.exceptions.JavascriptException: Message: javascript error: Cannot read property 'click' of undefined </code></pre> <p>I can run that code manually in chrome, I use a bookmark, but I want to run it in Python, what am I doing wrong?</p>"	2020-11-26 18:48:38.047 UTC	65029054	"<p>This error message...</p> <pre><code>selenium.common.exceptions.JavascriptException: Message: javascript error: Cannot read property 'click' of undefined </code></pre> <p>...implies that the <code>click()</code> method can't be executed as the <a href=""https://stackoverflow.com/questions/52782684/what-is-the-difference-between-webdriver-and-webelement-in-selenium/52805139#52805139"">WebElement</a> haven't completely rendered within the <a href=""https://javascript.info/dom-nodes"" rel=""nofollow noreferrer"">DOM Tree</a> and the element is still an <strong>undefined</strong> element.</p> <hr /> <h2>Solution</h2> <p>To execute the JavaScript, you need to induce <a href=""https://stackoverflow.com/questions/49775502/webdriverwait-not-working-as-expected/49775808#49775808"">WebDriverWait</a> for <code>visibility_of_all_elements_located()</code> and you can use either of the following <a href=""https://stackoverflow.com/questions/48369043/official-locator-strategies-for-the-webdriver/48376890#48376890"">Locator Strategies</a>:</p> <ul> <li><p>Using <code>CSS_SELECTOR</code>:</p> <pre><code>WebDriverWait(driver, 20).until(EC.visibility_of_all_elements_located((By.CSS_SELECTOR, &quot;.buy-button.buy-button--sticky.buy-button--buy-now.visible-xs.visible-sm&quot;))) driver.execute_script(&quot;var x= document.getElementsByClassName('buy-button buy-button--sticky buy-button--buy-now visible-xs visible-sm')[0];&quot;+&quot;x.click();&quot;) </code></pre> </li> <li><p>Using <code>XPATH</code>:</p> <pre><code>WebDriverWait(driver, 20).until(EC.visibility_of_all_elements_located((By.XPATH, &quot;//*[@class='buy-button buy-button--sticky buy-button--buy-now visible-xs visible-sm']&quot;))) driver.execute_script(&quot;var x= document.getElementsByClassName('buy-button buy-button--sticky buy-button--buy-now visible-xs visible-sm')[0];&quot;+&quot;x.click();&quot;) </code></pre> </li> <li><p><strong>Note</strong> : You have to add the following imports :</p> <pre><code>from selenium.webdriver.support.ui import WebDriverWait from selenium.webdriver.common.by import By from selenium.webdriver.support import expected_conditions as EC </code></pre> </li> </ul>"			2020-11-26 20:49:23.387 UTC
65031038	javascript|python|html	Reading HTML created by JavaScript with Python	"<p>I have a small problem with linking Python with HTML, CSS, and JavaScript: Currently, I have a website that takes in the user's input, and uses JavaScript to modify some of the  tags, so that Python can read it.</p> <p>However, when I tried the following code:</p> <pre><code>from requests_html import HTMLSession &lt;br&gt; session = HTMLSession() &lt;br&gt; r = session.get('https://infiniteembarrasseddesign.lucatu1.repl.co/') &lt;br&gt; ex = r.html.find(&quot;#ex&quot;, first=True) &lt;br&gt; print(ex.text). </code></pre> <p>It doesn't output anything. Well, it does, just an empty element. However, my JavaScript should have replaced the textContent of the div with the user's entry. Is there a way to make Python read HTML created by JavaScript?</p> <p>My operating system is windows 10.</p> <p>Here's the HTML code if you want it:</p> <p><a href=""https://repl.it/@LUCATU1/InfiniteEmbarrassedDesign#index.html"" rel=""nofollow noreferrer"">https://repl.it/@LUCATU1/InfiniteEmbarrassedDesign#index.html</a>. The URL of the webpage is in the code.</p> <p>My apologies that I cannot provide the main code for Python as it involves opening private .mdb files.</p>"	2020-11-27 01:23:53.223 UTC	65031073	"<p>Problem is that requests.get does not render a JavaScript, in order to test it you can open Dev Tools(F12 - in Chrome) and click &quot;Console&quot; open and type &quot;Disable JavaScript&quot; and refresh the page, after you will see what your web-sraper(<strong>requests</strong>) gets. You can solve this problem by alternative version by using <a href=""https://pypi.org/project/selenium/"" rel=""nofollow noreferrer"">Selenium</a>.</p>"			2020-11-27 01:32:16.917 UTC
65031038	javascript|python|html	Reading HTML created by JavaScript with Python	"<p>I have a small problem with linking Python with HTML, CSS, and JavaScript: Currently, I have a website that takes in the user's input, and uses JavaScript to modify some of the  tags, so that Python can read it.</p> <p>However, when I tried the following code:</p> <pre><code>from requests_html import HTMLSession &lt;br&gt; session = HTMLSession() &lt;br&gt; r = session.get('https://infiniteembarrasseddesign.lucatu1.repl.co/') &lt;br&gt; ex = r.html.find(&quot;#ex&quot;, first=True) &lt;br&gt; print(ex.text). </code></pre> <p>It doesn't output anything. Well, it does, just an empty element. However, my JavaScript should have replaced the textContent of the div with the user's entry. Is there a way to make Python read HTML created by JavaScript?</p> <p>My operating system is windows 10.</p> <p>Here's the HTML code if you want it:</p> <p><a href=""https://repl.it/@LUCATU1/InfiniteEmbarrassedDesign#index.html"" rel=""nofollow noreferrer"">https://repl.it/@LUCATU1/InfiniteEmbarrassedDesign#index.html</a>. The URL of the webpage is in the code.</p> <p>My apologies that I cannot provide the main code for Python as it involves opening private .mdb files.</p>"	2020-11-27 01:23:53.223 UTC	65031116	"<p><code>requests.get</code> don't see Javascript, you can try selenium:</p> <pre><code>from selenium import webdriver  driver = webdriver.ChromeDriver()  driver.get(&quot;URL&quot;) </code></pre> <p>And get source using <code>driver.page_source</code> or crawl through the page using selenium methods.</p>"			2020-11-27 01:40:42.86 UTC
65035897	javascript|python|cryptography|sha1	Different results trying to port SHA-1 digest from Python to browser JavaScript	"<p><strong>Main question</strong></p> <p>I have the following short piece of legacy code that I am trying to port from Python (with just standard lib) to JavaScript - from the name of the methods I assume it creates a SHA-1 digest of the <code>abc</code> string</p> <pre class=""lang-py prettyprint-override""><code>import hashlib import hmac  print(hmac.new(b&quot;abc&quot;, None, hashlib.sha1).hexdigest()) </code></pre> <p>I searched for how to do that in the browser in JS and found <a href=""https://developer.mozilla.org/en-US/docs/Web/API/SubtleCrypto/digest"" rel=""nofollow noreferrer"">the following code in the Mozilla documentation</a></p> <pre class=""lang-js prettyprint-override""><code>var msgUint8 = new TextEncoder().encode('abc'); var hashBuffer = await crypto.subtle.digest('SHA-1', msgUint8); var hashArray = Array.from(new Uint8Array(hashBuffer)); var hashHex = hashArray.map(b =&gt; b.toString(16).padStart(2, '0')).join(''); console.log(hashHex) </code></pre> <p>the problem is, they yield two completely different results, and I have no idea why:</p> <ul> <li><code>cc47e3c0aa0c2984454476d061108c0b110177ae</code> - Python</li> <li><code>a9993e364706816aba3e25717850c26c9cd0d89d</code> - JavaScript</li> </ul> <p>I tried comparing the bytes of <code>b&quot;abc&quot;</code> with what <code>new TextEncoder().encode('abc')</code> returns and they are exactly the same: <code>0x61 0x62 0x63</code>, so the problem lies somewhere else and I have no idea where.</p> <p>I need the JavaScript code to return what the Python code returns. Any ideas?</p> <hr> <p><strong>Additionally</strong></p> <p>My final goal is to actually port <em>this</em> code (note the <code>b&quot;hello&quot;</code> instead of <code>None</code>):</p> <pre><code>print(hmac.new(b&quot;abc&quot;, b&quot;hello&quot;, hashlib.sha1).hexdigest()) </code></pre> <p>so if you have an idea on that one too - I would hugely appreciate it!</p>"	2020-11-27 10:38:06.207 UTC	65039886	"<p>The Python code calculates a SHA1 based HMAC. The JavaScript code on the other hand computes a SHA-1 hash. An <a href=""https://en.wikipedia.org/wiki/HMAC"" rel=""nofollow noreferrer"">HMAC</a> needs a key in addition to the data, while a <a href=""https://en.wikipedia.org/wiki/Cryptographic_hash_function"" rel=""nofollow noreferrer"">cryptographic hash function</a> works without a key.</p> <p>The first Python code uses the key <code>abc</code> and an <em>empty</em> message. The posted result for the HMAC is hex encoded:</p> <pre><code>cc47e3c0aa0c2984454476d061108c0b110177ae </code></pre> <p>The second Python code uses the same key and the message <code>hello</code>. The result for the HMAC is hex encoded:</p> <pre><code>d373670db3c99ebfa96060e993c340ccf6dd079e </code></pre> <p>The Java code determines the SHA-1 hash for <code>abc</code>. The result is</p> <pre><code>a9993e364706816aba3e25717850c26c9cd0d89d </code></pre> <p>So all results are correct, but are generated with different input data or algorithms.</p> <hr /> <p>The calculation of the HMAC can be implemented with the <em>browser native</em> <a href=""https://developer.mozilla.org/en-US/docs/Web/API/Web_Crypto_API"" rel=""nofollow noreferrer"">WebCrypto-API</a> as follows:</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-js lang-js prettyprint-override""><code>(async () =&gt; {     var hmac = await calcHMac('abc', 'hello');     console.log('HMAC: ', buf2hex(hmac));      var hmac = await calcHMac('abc', '');     console.log('HMAC: ', buf2hex(hmac));  })();      async function calcHMac(rawkey, data) {     var key = await window.crypto.subtle.importKey('raw', utf8Encode(rawkey), {name: 'HMAC', hash: 'SHA-1'},true, ['sign']);             var hmac = await window.crypto.subtle.sign('HMAC', key, utf8Encode(data));     return hmac; }      function utf8Encode(str){     return new TextEncoder().encode(str); }      function buf2hex(buffer) {     return Array.prototype.map.call(new Uint8Array(buffer), x =&gt; ('00' + x.toString(16)).slice(-2)).join(''); // from: https://stackoverflow.com/a/40031979/9014097  }</code></pre> </div> </div> </p> <p>and provides the same result as the two Python codes.</p> <p>A remark to SHA-1: Although HMAC/SHA-1 is considered to be secure (contrary to SHA-1), there are arguments to switch to SHA-256, see <a href=""https://crypto.stackexchange.com/q/15382"">here</a>.</p> <hr /> <p>The WebCrypto API is a bit cumbersome. A functionally identical implementation with <a href=""https://cryptojs.gitbook.io/docs/#hmac"" rel=""nofollow noreferrer"">CryptoJS</a>, the library mentioned in the comment by Maurice Meyer, is simpler and looks like this:</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-js lang-js prettyprint-override""><code>var hmac = CryptoJS.HmacSHA1('hello', 'abc'); console.log('HMAC: ', hmac.toString(CryptoJS.enc.Hex));  var hmac = CryptoJS.HmacSHA1('', 'abc'); console.log('HMAC: ', hmac.toString(CryptoJS.enc.Hex));</code></pre> <pre class=""snippet-code-html lang-html prettyprint-override""><code>&lt;script src=""https://cdnjs.cloudflare.com/ajax/libs/crypto-js/4.0.0/crypto-js.min.js""&gt;&lt;/script&gt;</code></pre> </div> </div> </p> <p>but requires CryptoJS as external dependency.</p>"			2020-11-27 15:31:28.067 UTC
65053732	javascript|node.js|flask|environment-variables|dotenv	How to read environment vars for both python and javascript in Flask	"<p>My app is to be deployed on Heroku. I set up environment variables in .env in my root directory.</p> <p>Testing locally with Flask, I have Python accessing env vars using the dotenv package with no issues. I run into trouble when trying to access the environment variables with Javascript.</p> <p>I read Node.js has it's own dotenv dependency to access environment variables in JavaScript using <code>process.env.ENV_VAR</code>. I installed the package into my virtual environment and started my js script with <code>require('dotenv').config()</code>, but when running the Flask app, the console returns:</p> <p><code>Uncaught ReferenceError: require is not defined</code></p> <p>This tells me I'm not accessing the node.js dependencies through Flask and gives me the suggestion it might not be possible.</p> <p>Is there a way to access env vars through Javascript and Python for a Flask app?</p>"	2020-11-28 19:36:19.773 UTC	65054306	"<p>After some further researching, I came across</p> <blockquote> <p>Everything that goes to client side doesn't belongs to you only. It is unrelated to Flask because it is server-side framework.</p> </blockquote> <p>Turns out, looking into my API key I was trying to hide from the app is a Public Key that only provides read-access. There is no harm in publishing the key.</p>"			2020-11-28 20:48:19.42 UTC
65071892	javascript|python|json|unicode|base64	Decode a base64 encoded JSON string generated from JavaScript in Python	"<p>Take this base64-encoded JSON string generated from JavaScript using <code>JSON.stringify</code> and <code>btoa</code>:</p> <pre class=""lang-js prettyprint-override""><code>btoa(JSON.stringify({&quot;é&quot;: &quot;è&quot;})) &quot;eyLpIjoi6CJ9&quot; </code></pre> <p>I'm trying to decode it from Python. I'm doing:</p> <pre class=""lang-py prettyprint-override""><code>&gt;&gt;&gt; import base64 &gt;&gt;&gt; import json &gt;&gt;&gt; json.loads(base64.b64decode(&quot;eyLpIjoi6CJ9&quot;)) </code></pre> <p>I'm getting a <code>UnicodeDecodeError</code>:</p> <pre><code>UnicodeDecodeError: 'utf-8' codec can't decode byte 0xe9 in position 2: invalid continuation byte </code></pre> <p>What is the right way to properly decode this in Python?</p> <p>Note: I'm using base64 encoding so this can be safely passed as an URL query string parameter.</p> <p>Thanks!</p>"	2020-11-30 10:33:03.713 UTC	65072217	"<p>You can also do in JavaScript</p> <pre><code>    btoa(unescape(encodeURIComponent(JSON.stringify({&quot;é&quot;: &quot;è&quot;}))))     base64 output: eyLDqSI6IsOoIn0= </code></pre> <p>though I think btoa works on just the extended ascii table, not all unicode characters.</p> <p>Then in Python</p> <pre><code>    json.loads(base64.b64decode(&quot;eyLDqSI6IsOoIn0=&quot;)     prints: {'é': 'è'} </code></pre>"			2020-11-30 10:55:03.103 UTC
65082054	javascript|python|html	Is there a way to put python code into a javascript onclick function?	"<p>I am trying to put some python code into a javascript function so that I can call it on a button click. I was just wondering if there was a tag or some built-in way to code python inside a javascript function? I know that I may be able to do this by asking the function to open a file or something like that, but if there is a way to contain this entire solution inside one file that would be great.</p> <p>This is the code I'm trying to put into the function:</p> <pre><code>user_input = input(&quot;input text here: &quot;) cipher_key = int(input(&quot;input cipher key here: &quot;)) for x in user_input:     if x == &quot; &quot;:         print(x)     else:         ord_num = ord(x)         alf_num = ord_num - 97 + cipher_key         en_num = alf_num % 26 + 97         print(chr(en_num)) </code></pre>"	2020-11-30 22:25:54.703 UTC	65082257	"<p>It depends on your environment ; if you are writing a node js program you can do it as indicated here <a href=""https://stackoverflow.com/questions/5775088/how-to-execute-an-external-program-from-within-node-js"">How to execute an external program from within Node.js?</a> . If you’re writing a client side code (for a web browser) you can’t .</p> <p><strong>Edit</strong></p> <p>your code is relatively simple so you can convert your function into js. Assuming that you are writing a Nodejs code:</p> <pre><code>const readline = require(&quot;readline&quot;); const rl = readline.createInterface({     input: process.stdin,     output: process.stdout });  rl.question(&quot;input text here: &quot;, function(user_input) {     rl.question(&quot;input cipher key here: &quot;, function(cipher_key) {         rl.close();         cipher_key = parseInt(cipher_key)         for (let i = 0; i &lt; user_input.length(); i++) {             const x = user_input[i];             if (x === &quot; &quot;)                 process.stdout.write(x)             else {                 const ord_num = x.charCodeAt(0)                 const alf_num = ord_num - 97 + cipher_key                 const en_num = alf_num % 26 + 97                 process.stdout.write(String.fromCharCode(en_num))              }         }     }); }); </code></pre>"			2020-11-30 22:46:37.263 UTC
65083291	python|chatbot|twitch	Converting a javascript folder to python	"<p>So I know js2py is a thing but I'm not entirely sure if you can convert an entire folder? I only know how to use python and being able to convert the language would be extremely helpful for me, I'm trying to make a twitch chat bot however moderation commands and configuration is difficult for me and the destinygg chat bot is insanely good and being able to use it would be amazing. <a href=""https://github.com/destinygg/chat-bot"" rel=""nofollow noreferrer"">https://github.com/destinygg/chat-bot</a> If this is not possible I understand however its worth a shot to ask how/if I guess :)</p>"	2020-12-01 00:56:29.017 UTC	65083350	"<p>No, it supports translating a file but not a folder.</p> <p>But you can <a href=""https://stackoverflow.com/questions/3207219/how-do-i-list-all-files-of-a-directory"">enumerate the files in your folder</a> and translate them one-by-one, using:</p> <pre><code>js2py.translate_file('example.js', 'example.py') </code></pre>"			2020-12-01 01:05:55.39 UTC
65093280	javascript|python|html|eel	How to handle multiple return from python as multiple parameters in JavaScript?	"<p>I am working on a project and I am using the eel python library to create GUI. I am using sqlite to store the database. I want to retrieve information and show it in different <code>&lt;input = text&gt;</code> input boxes.</p> <p><strong>But my output is</strong> [![It means I am getting all the output in one box][1]][1]</p> <p>It means I am getting all the output in one box</p> <p><strong>My JavaScript code</strong></p> <pre><code>function set_retrieve_2(name) {     document.getElementById(&quot;Name&quot;).value = name;     document.getElementById(&quot;DOB&quot;).value = dob;     document.getElementById(&quot;Sex&quot;).value = sex;     document.getElementById(&quot;Address&quot;).value = address;     document.getElementById(&quot;phone&quot;).value = phone;     document.getElementById(&quot;Of_name&quot;).value = of_name;     document.getElementById(&quot;Mem_Number&quot;).value = mem_number;     document.getElementById(&quot;Mem_Date&quot;).value = mem_date; } </code></pre> <p><strong>My python code is</strong></p> <pre><code>@eel.expose def retrieved_2(nic):     conn = sqlite3.connect(&quot;information_database&quot;)     c = conn.cursor()     c.execute(&quot;SELECT * FROM info WHERE NIC= ?&quot;, [nic])     found = c.fetchone()     if found:         c = conn.cursor()         c.execute(&quot;SELECT NIC FROM info WHERE NIC= ?&quot;, [nic])         nic_n = c.fetchone()         print(nic_n)         c = conn.cursor()         c.execute(&quot;SELECT name FROM info WHERE NIC= ?&quot;, [nic])         name = c.fetchone()         c = conn.cursor()         c.execute(&quot;SELECT DOB FROM info WHERE NIC= ?&quot;, [nic])         dob = c.fetchone()         c = conn.cursor()         c.execute(&quot;SELECT sex FROM info WHERE NIC= ?&quot;, [nic])         sex = c.fetchone()         c = conn.cursor()         c.execute(&quot;SELECT address FROM info WHERE NIC= ?&quot;, [nic])         address = c.fetchone()         c = conn.cursor()         c.execute(&quot;SELECT phone FROM info WHERE NIC= ?&quot;, [nic])         phone = c.fetchone()         c = conn.cursor()         c.execute(&quot;SELECT of_name FROM info WHERE NIC= ?&quot;, [nic])         of_name = c.fetchone()         c = conn.cursor()         c.execute(&quot;SELECT mem_number FROM info WHERE NIC= ?&quot;, [nic])         mem_number = c.fetchone()         c = conn.cursor()         c.execute(&quot;SELECT mem_date FROM info WHERE NIC= ?&quot;, [nic])         mem_date = c.fetchone()         conn.commit()         conn.close()         return name, dob, sex, address, phone, of_name, mem_number, mem_date </code></pre> <p>Please help me thank you [1]: <a href=""https://i.stack.imgur.com/AcFwk.png"" rel=""nofollow noreferrer"">https://i.stack.imgur.com/AcFwk.png</a></p>"	2020-12-01 15:18:59.47 UTC	65815927	"<p>Make the python function returns a dictionary/JSON object, which carries the results you want, so change</p> <pre><code>return name, dob, sex, address, phone, of_name, mem_number, mem_date </code></pre> <p>to</p> <pre><code>return { 'name' : name, 'dob' : dob, 'sex' : sex, 'address' : address, 'phone' : phone, 'of_name' : of_name, 'mem_number' : mem_number, 'mem_date' : mem_date } </code></pre> <p>and change the javascript code to</p> <pre><code>async function set_retrieve_2(name) {     var data=await eel.retrieved_2(name)();      document.getElementById(&quot;Name&quot;).value = data.name;     document.getElementById(&quot;DOB&quot;).value = data.dob;     document.getElementById(&quot;Sex&quot;).value = data.sex;     document.getElementById(&quot;Address&quot;).value = data.address;     document.getElementById(&quot;phone&quot;).value = data.phone;     document.getElementById(&quot;Of_name&quot;).value = data.of_name;     document.getElementById(&quot;Mem_Number&quot;).value = data.mem_number;     document.getElementById(&quot;Mem_Date&quot;).value = data.mem_date; } </code></pre> <p>more clarifications and discussions would be upon comments.</p>"			2021-01-20 19:00:36.863 UTC
65127897	javascript|python|arrays|expression	JavaScript equivalent of List Operations in Python	"<p>Is there a JavaScript Version of the Python expression in the form of</p> <pre class=""lang-py prettyprint-override""><code>nums = [0,0] + [1] * (n) </code></pre> <p>?</p> <p><code>n</code> is the number of times an item is repeated. Examples: If n is 3, nums produces <code>[0,0,1,1,1]</code>, If n is 4, nums produces <code>[0,0,1,1,1,1]</code> and if n is 5, nums produces <code>[0,0,1,1,1,1,1]</code> and so on.</p>"	2020-12-03 14:28:17.893 UTC	65251162	"<p>In JavaScript there aren't operators defined that work on arrays, however, you can imitate their results:</p> <h1>Operations</h1> <h2>List concatenation (<code>+</code>)</h2> <p>This is very simple as there is the <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/concat"" rel=""nofollow noreferrer""><code>Array#concat()</code></a> method</p> <pre><code>a = [1, 2] b = [3]  c = a + b </code></pre> <p>in JavaScript is equal to</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-js lang-js prettyprint-override""><code>const a = [1, 2]; const b = [3];  const c = a.concat(b);  console.log(c);</code></pre> </div> </div> </p> <p>You could define a function that concatenates any amount of elements as:</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-js lang-js prettyprint-override""><code>const add = (...items) =&gt; [].concat(...items);  console.log(""[1, 2] + [3]:"", add([1, 2], [3])); console.log(""[1] + [2] + 3:"", add([1], [2], 3)); console.log(""[1, 2] + 3:"", add([1, 2], 3)); console.log(""1 + 2 + 3:"", add(1, 2, 3));</code></pre> </div> </div> </p> <h2>List Repetition (<code>*</code>)</h2> <p>There is no native way to repeat an array in JavaScript. You can apply a loop and repeatedly call <code>add</code>, however an easier way might be to use <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/from"" rel=""nofollow noreferrer""><code>Array.from</code></a>. The first argument it takes is an array-like which can be used to define the size of the create <code>{length: neededSize}</code> and the second argument it takes is a function that will determine the contents of this array.</p> <p>This is a simple implementation:</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-js lang-js prettyprint-override""><code>const mul = (arr, times) =&gt;    Array.from({length: times*arr.length}, (_,i) =&gt; arr[i%arr.length]);  console.log(""[] * 3:"", mul([], 3)); console.log(""[1] * 3:"", mul([1], 3)); console.log(""[1, 2] * 3:"", mul([1, 2], 3)); console.log(""[1, 2, 3] * 3:"", mul([1, 2, 3], 3));</code></pre> </div> </div> </p> <h1>Module that handles operations fluently</h1> <p>For the sake of it, here is a small module that makes the operations into a fluent interface and eagerly evaluates each operations:</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-js lang-js prettyprint-override""><code>const add = (...items) =&gt;    [].concat(...items); const mul = (arr, times) =&gt;    Array.from({length: times*arr.length}, (_,i) =&gt; arr[i%arr.length]);  const arrayMath = arr =&gt; ({   add: (...items) =&gt; arrayMath(add(arr, ...items)),   mul: num =&gt; arrayMath(mul(arr, num)),   result: () =&gt; arr })  const res1 = arrayMath([])     .add([1, 2])     .add([3])     .mul(2)   .result();  const res2 = arrayMath([])     .add(1, 2)     .add([3])     .mul(2)   .result();  const res3 = arrayMath([])     .add(1, [2])     .add([3])     .mul(2)   .result();   const res4 = arrayMath([1])     .mul(2)     .add(2)     .mul(3)   .result();   console.log(res1); console.log(res2); console.log(res3); console.log(res4);</code></pre> </div> </div> </p>"			2020-12-11 12:12:41.563 UTC
65127897	javascript|python|arrays|expression	JavaScript equivalent of List Operations in Python	"<p>Is there a JavaScript Version of the Python expression in the form of</p> <pre class=""lang-py prettyprint-override""><code>nums = [0,0] + [1] * (n) </code></pre> <p>?</p> <p><code>n</code> is the number of times an item is repeated. Examples: If n is 3, nums produces <code>[0,0,1,1,1]</code>, If n is 4, nums produces <code>[0,0,1,1,1,1]</code> and if n is 5, nums produces <code>[0,0,1,1,1,1,1]</code> and so on.</p>"	2020-12-03 14:28:17.893 UTC	65128149	"<p>Since when you simply multiply a number to an array, it will parse all the contents in array to integer to perform the operation, but while parsing it also considers the comma that separates the elements in the array,  so ultimately the parse gives you a NaN(Not a Number).</p> <p>So you have to do it manually by a for loop(or any loop):</p> <pre><code>var arr = [0,0];   function myFunction() {   let x;    for(x=0;x&lt;3;x++){   arr.push(1)  } </code></pre> <p>Change the variables according to your wish later.</p>"			2020-12-03 14:41:13.8 UTC
65131106	javascript|python|socket.io|python-socketio	Python-socketio Server.call() method does not seem to work with JavaScript client	"<h2>Summarize the problem</h2> <p>I am using the <code>python-socketio</code> package as a server for a web-based game that I am creating. I initially implemented the client in Python (with <code>python-socketio[client]</code>) for debugging purposes, and made extensive use of the <code>Server.call()</code> method while developing. This works perfectly with everything running in Python, and will wait for user input before sending the return value of the function on the client side back to the server.</p> <p>However, when trying to switch things over to JavaScript, <code>Server.call()</code> times out no matter what I do. I am not really aware of any alternatives that I can switch to without having to completely rip apart my already implemented program, but I am open to suggestions.</p> <h2>Describe what you've tried</h2> <p>I've tried reimplementing my Python client code in JavaScript more or less exactly as was originally written. This was a bust, since as I've mentioned above any time I use <code>Server.call()</code> it times out (or hangs indefinitely if I set <code>timeout=None</code>).</p> <p>I have additionally tried to switch away from <code>Server.call()</code> and instead use <code>Server.emit()</code> with a callback to set a global variable and then block until it is set using <code>Server.sleep()</code>, but this doesn't seem to work either.</p> <h2>Show some code</h2> <p>Here's a minimal example that demonstrates the issue. The server is the same in both use cases and the Python client and JavaScript client are practically identical, but things only work when using the Python client.</p> <p>Here is the server, written in Python and using the <code>python-socketio</code> module:</p> <pre><code># server.py   from socketio import Server, WSGIApp  socketio = Server(async_mode='eventlet', async_handlers=True, cors_allowed_origins='*')  @socketio.on('start') def start(sid):     name = socketio.call('get name', to=sid)     print(name)  if __name__ == '__main__':     app = WSGIApp(socketio)     import eventlet     eventlet.wsgi.server(eventlet.listen(('0.0.0.0', 5000)), app) </code></pre> <p>Here is the working Python client:</p> <pre><code># client.py   import socketio  sio = socketio.Client()  @sio.event def connect():     sio.emit('start')  @sio.on('get name') def get_name():     print('Sending name')     return 'Hermione Granger'  if __name__ == '__main__':     sio.connect('http://localhost:5000', transports=['websocket']) </code></pre> <p>Here is the non-working JavaScript client and some corresponding HTML, just so anyone reading this has everything they need to try to reproduce my issue:</p> <pre><code>// client.js   var socket = io.connect('http://localhost:5000');  socket.on('connect', function () {     socket.emit('start'); });  socket.on('get name', function () {     console.log('Sending name');     return 'Hermione Granger'; }); </code></pre> <pre><code>&lt;!-- index.html --&gt;   &lt;!doctype html&gt;  &lt;html lang=&quot;en&quot;&gt;  &lt;head&gt;     &lt;meta charset=&quot;utf-8&quot;&gt;     &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1, shrink-to-fit=no&quot;&gt; &lt;/head&gt;  &lt;body&gt;     &lt;script src=&quot;https://cdnjs.cloudflare.com/ajax/libs/socket.io/2.3.0/socket.io.js&quot;&gt;&lt;/script&gt;     &lt;script src=&quot;client.js&quot;&gt;&lt;/script&gt; &lt;/body&gt; &lt;/html&gt; </code></pre> <p>If anyone can help me figure out why this isn't working (or recommend a simple alternative) I will be greatly in your debt! :)</p> <h2>Log outputs from the server</h2> <p>Here are the server logs when I try to run the JavaScript client:</p> <pre class=""lang-none prettyprint-override""><code>Server initialized for eventlet. (16261) wsgi starting up on http://0.0.0.0:5000 (16261) accepted ('127.0.0.1', 63733) 2bff7607e60548e5ba70b2dcabb6131d: Sending packet OPEN data {'sid': '2bff7607e60548e5ba70b2dcabb6131d', 'upgrades': [], 'pingTimeout': 60000, 'pingInterval': 25000} 2bff7607e60548e5ba70b2dcabb6131d: Sending packet MESSAGE data 0 2bff7607e60548e5ba70b2dcabb6131d: Received request to upgrade to websocket 2bff7607e60548e5ba70b2dcabb6131d: Upgrade to websocket successful 2bff7607e60548e5ba70b2dcabb6131d: Received packet MESSAGE data 2[&quot;start&quot;] received event &quot;start&quot; from 2bff7607e60548e5ba70b2dcabb6131d [/] emitting event &quot;get name&quot; to 2bff7607e60548e5ba70b2dcabb6131d [/] 2bff7607e60548e5ba70b2dcabb6131d: Sending packet MESSAGE data 21[&quot;get name&quot;] 2bff7607e60548e5ba70b2dcabb6131d: Received packet PING data None 2bff7607e60548e5ba70b2dcabb6131d: Sending packet PONG data None 2bff7607e60548e5ba70b2dcabb6131d: Received packet PING data None 2bff7607e60548e5ba70b2dcabb6131d: Sending packet PONG data None Exception in thread Thread-4: Traceback (most recent call last):   File &quot;/usr/lib/python3.8/threading.py&quot;, line 932, in _bootstrap_inner     self.run()   File &quot;/usr/lib/python3.8/threading.py&quot;, line 870, in run     self._target(*self._args, **self._kwargs)   File &quot;/mnt/c/Users/eshap/Documents/GitHub/dominion-game/venv/lib/python3.8/site-packages/socketio/server.py&quot;, line 685, in _handle_event_internal     r = server._trigger_event(data[0], namespace, sid, *data[1:])   File &quot;/mnt/c/Users/eshap/Documents/GitHub/dominion-game/venv/lib/python3.8/site-packages/socketio/server.py&quot;, line 714, in _trigger_event     return self.handlers[namespace][event](*args)   File &quot;server.py&quot;, line 7, in start     name = socketio.call('get name', to=sid)   File &quot;/mnt/c/Users/eshap/Documents/GitHub/dominion-game/venv/lib/python3.8/site-packages/socketio/server.py&quot;, line 386, in call     raise exceptions.TimeoutError() socketio.exceptions.TimeoutError </code></pre> <p>For comparison, here are the server logs when I successfully run the Python client:</p> <pre class=""lang-none prettyprint-override""><code>Server initialized for eventlet. (14184) wsgi starting up on http://0.0.0.0:5000 (14184) accepted ('127.0.0.1', 54749) a5f56db4733b4b1b924b0cb2a599e7c6: Sending packet OPEN data {'sid': 'a5f56db4733b4b1b924b0cb2a599e7c6', 'upgrades': [], 'pingTimeout': 60000, 'pingInterval': 25000} a5f56db4733b4b1b924b0cb2a599e7c6: Sending packet MESSAGE data 0 a5f56db4733b4b1b924b0cb2a599e7c6: Received request to upgrade to websocket a5f56db4733b4b1b924b0cb2a599e7c6: Upgrade to websocket successful a5f56db4733b4b1b924b0cb2a599e7c6: Received packet PING data None a5f56db4733b4b1b924b0cb2a599e7c6: Sending packet PONG data None a5f56db4733b4b1b924b0cb2a599e7c6: Received packet MESSAGE data 2[&quot;start&quot;] received event &quot;start&quot; from a5f56db4733b4b1b924b0cb2a599e7c6 [/] emitting event &quot;get name&quot; to a5f56db4733b4b1b924b0cb2a599e7c6 [/] a5f56db4733b4b1b924b0cb2a599e7c6: Sending packet MESSAGE data 21[&quot;get name&quot;] a5f56db4733b4b1b924b0cb2a599e7c6: Received packet MESSAGE data 31[&quot;Hermione Granger&quot;] received ack from a5f56db4733b4b1b924b0cb2a599e7c6 [/] Hermione Granger </code></pre>"	2020-12-03 17:34:03.267 UTC	65141774	"<p>The problem is that you are using the Python style for returning values in your JavaScript version. In JavaScript events are asynchronous, when you want to provide a return value you have to do so with a callback function instead.</p> <p>Here is the correct way to code the <code>get name</code> event for JavaScript:</p> <pre class=""lang-js prettyprint-override""><code>socket.on('get name', function (cb) {     console.log('Sending name');     cb('Hermione Granger'); }); </code></pre>"			2020-12-04 10:19:23.16 UTC
65147051	javascript|jquery|python-3.x|flask|jsonify	How my javascript can get json result returned by Flask Python route?	"<p>I have a flask web application with python.</p> <p>I have a template where user have a list of tasks with checkboxes to enable or disable the task. I use jsonify and javascript to update or disable the value in Mysql database.</p> <p>here is the route:</p> <pre><code>@app.route('/update_enable_task_user', methods=['GET', 'POST']) @login_required def update_enable_task_user():     print(f&quot;update_enable_task_user request.form : {request.form}&quot;)     taskuser = TaskUser.query.filter_by(id=int(request.form['id_task_user'])).first()     print(f&quot;request.form['enable'] : {request.form['enable']} - {type(request.form['enable'])}&quot;)           if request.form['enable'] == &quot;1&quot;:                 return jsonify({'result':'failed'})      else:         return jsonify({'result':'success'}) </code></pre> <p>Here is the template:</p> <pre><code>&lt;div id=&quot;enable_disable_task_2&quot;&gt;      &lt;label&gt;&lt;input type=&quot;checkbox&quot; onclick=&quot;checktaskuser()&quot; class=&quot;ios-switch switch green&quot; id=&quot;platform_task_2_enable&quot; platform_id_task_user=&quot;2&quot; name=&quot;platform_task_2_enable&quot;         style=&quot;opacity: 0;&quot;/&gt;         &lt;div&gt;             &lt;div&gt;&lt;/div&gt;         &lt;/div&gt;     &lt;/label&gt;      &lt;/div&gt;  function checktaskuser(){     var taskuser_update =  document.getElementById(&quot;platform_task_{{task[5]}}_enable&quot;);     var url= window.location.href;     alert(taskuser_update);     if ( document.getElementById(&quot;platform_task_{{task[5]}}_enable&quot;).checked === false ) {         alert(&quot;platform_task_{{task[5]}}_enable is NOT checked!!!!&quot;);                                        var data;         $.ajax({             dataType: &quot;json&quot;,             url: url,             data: data,             success: function (data) {                 // begin accessing JSON data here                 alert(result);             }         });     }          } </code></pre> <p>When My user check the checkbox, I see the 2 alert messages from javascript and I can see the json in network tab of browser console: <a href=""https://i.stack.imgur.com/lFGGT.jpg"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/lFGGT.jpg"" alt=""enter image description here"" /></a></p> <p>So for me, that means my flask python script did the job. But it failed somewhere in ajax?</p> <p>But the 3rd alert in my javascript (alert(result);) is not showing up. I don't see any error messages (not in the Chrome console and not from the Flask console).</p> <p>So I tried the getJSON function :</p> <pre><code>function checktaskuser(){                     var taskuser_update =  document.getElementById(&quot;platform_task_{{task[5]}}_enable&quot;);                     var url= window.location.href;                     alert(taskuser_update);                     if ( document.getElementById(&quot;platform_task_{{task[5]}}_enable&quot;).checked === false ) {                         alert(&quot;platform_task_{{task[5]}}_enable is NOT checked!!!!&quot;);                                                                                                        $.getJSON(                             url ,                         function(data) {                             $('#result').textalert(data);                         }                     );                     }                                          } </code></pre> <p>And I get same result: No 3rd alert and no error message.</p> <p><strong>EDIT 1:</strong></p> <p>After thinking of my issue, I think the javascript is executed before the FLask route is executed. That is why the json is empty as it was not sent yet by Flask route.</p> <p>So my question is how my javascript can catch the json returned by FLask python route?</p> <p><strong>EDIT 2</strong></p> <p>I tried the solution of @folan</p> <p>I get &quot;Uncaught ReferenceError: data is not defined in console.</p> <p><a href=""https://i.stack.imgur.com/aZ47a.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/aZ47a.png"" alt=""enter image description here"" /></a> So my question is What is data? I am not an expert at all in jquery and javascript. I am trying to make work Python with javascript on a page which updata Mysql database without refreshing.</p> <p>When user is on template page, he can update the column &quot;enable&quot; on Mysql DB without refreshing the page.</p> <p>Flask update the Mysql DB on a special route.</p> <pre><code>@app.route('/update_enable_task_user', methods=['GET', 'POST']) @login_required def update_enable_task_user(): </code></pre> <p>My new question is What is &quot;data&quot;? It suppose to be the jsonify sent by Flask route which I caught. But Ajax seems not to catch the data in this solution.</p> <p>I didn't declare it in my code and this $ajax() formula intrigues me. So I read the doc <a href=""https://medium.com/coding-design/writing-better-ajax-8ee4a7fb95f"" rel=""nofollow noreferrer"">https://medium.com/coding-design/writing-better-ajax-8ee4a7fb95f</a></p> <p>I didn't show the part of Flask code in template which call the flask route: Jquery code &amp; Flask to Update the column &quot;enable&quot; task in Mysql DB.</p> <pre><code>// ===================== TASK ENABLE WITH ID =================================                     var platform_id_task_user = {{task[5]}};             // When user check the check box task_enable             $('#platform_task_{{task[5]}}_enable').on('change', function() {                                                  // We collect the ID of task_user                                  // if task_enable is checked                 if ($('#platform_task_{{task[5]}}_enable').is(':checked')){                                         var task_enable = 1;                            }                 // if task_enable is NOT checked                 else{                                         var task_enable = 0;                 }                 // We send the data to our route update_enable_task_user                 req = $.ajax({                     url : '/update_enable_task_user',                     type : 'POST',                     data : {enable : task_enable,id_task_user: {{task[5]}}}                 });                 $('#enable_disable_task_{{task[5]}}').fadeOut(1000).fadeIn(1000);             }); </code></pre> <p>In this code above, we can see the &quot;data&quot; variable. Maybe should I add my code here. Instead of creating the function :</p> <pre><code>onclick=&quot;checktaskuser()&quot; </code></pre> <p>Should I add my code here? I did try with an alert to display the &quot;data&quot; but I get again <strong>&quot;Uncaught ReferenceError: data is not defined&quot;</strong></p>"	2020-12-04 16:19:59.543 UTC	65147791	"<p>You can listen to your ajax request and on its completion, you can execute your success callback.</p> <pre><code>var call = $.ajax({   dataType: &quot;json&quot;,   url: url,   data: data, });  // Listening to completion call.done(function(data){   alert(data); }); </code></pre> <p>You can read more about ajax <a href=""https://medium.com/coding-design/writing-better-ajax-8ee4a7fb95f"" rel=""nofollow noreferrer"">https://medium.com/coding-design/writing-better-ajax-8ee4a7fb95f</a></p>"			2020-12-04 17:12:48.627 UTC
65151031	python	How to import javascript code in python with variable?	"<p>I have file javascript and python, I want to call javascript function in python code with send variable from python. example my javascript file</p> <pre><code>var msg = 'this is the encrypt key, very long character'; function split (value, msg){     if(value == msg){         return true;     }else{         return false;     } }  function process(value){     var a = split(value, msg);     if (a == &quot;true&quot;){          return a;     }else{          return &quot;Error&quot;;     } } </code></pre> <p>now I want to add this file to my python code, I want to send variable from python to my javascript code. example like this</p> <pre><code>value = &quot;aaa&quot; js = open('example.js','r') print(js.process(value)) </code></pre> <p>I want to import javascript file to python code, and I want to use the <code>process</code> function in the javascript file. I know my code is wrong, I don't understand how to make a function like that. Please help me</p>"	2020-12-04 21:32:08.4 UTC	65151151	"<p>You need a wonderful module named as js2py. Install by :</p> <blockquote> <p>pip install js2py</p> </blockquote> <p>The code looks like this :</p> <pre><code>import js2py process=js2py.eval_js('''function process(value,a){     if (a == &quot;true&quot;){          return a;     }else{          return &quot;Error&quot;;     } }''')  split=js2py.eval_js('''function split (value){     var msg = 'this is the encrypt key, very long character';     if(value == msg){         return true;     }else{         return false;     } }''') value=&quot;aaa&quot; a=split(value) print(process(value,a)) </code></pre>"			2020-12-04 21:43:40.603 UTC
65156643	javascript|python|flask|jinja2	set a javascript Null value if a python value is None in Jinja Expression	<p>I want to set a default value in javascript in case the {{ }} jinja expression returns nothing. This way the javascript does not throw an error.</p> <p>Is there some way to make a default value like this in the HTML file:</p> <pre><code>&lt;script&gt;   var info= {{ python_info | safe }}?self:null; &lt;/script&gt; </code></pre> <p>If python_info is &quot;&quot; then I want the javascript to be null or some other default value.</p> <p>I know you can could do an || or solution but this messes up the linting even worse.</p>	2020-12-05 11:56:11.063 UTC	65156716	<p>The below should work</p> <pre><code>&lt;script&gt;   var info = {{ python_info if python_info else 'null' }}; &lt;/script&gt; </code></pre>			2020-12-05 12:04:42.623 UTC
65160477	javascript|python|json|lua|jsonpath	Query language for JSON or how to use Javascript/Lua in Python?	"<p>I'm looking solution to query JSON that extracts specific data. This solution will be embedded inside our Python software (more exactly Python AWS Lambda) and the user should have the ability to specify such query string in GUI. For example, we have such JSON and I would extract &quot;nazwisko_weterynarza.value&quot;  from &quot;files&quot; array if &quot;typ_dokument&quot; is equal to &quot;szczepienie&quot; and &quot;data_szczepienia&quot; is equal to 3434343. I've tried this using JSON Path but I've failed.<br /> What about embedded Lua/Javascript in Python, but how to create a 'sandbox' to be sure that such a solution will be safe?</p> <pre><code>{     &quot;files&quot; :          [         {             &quot;meta&quot;:  {                 &quot;updated&quot;: 555555,                 &quot;attributes&quot;: [                      {                         &quot;typ_dokumentu&quot;:                             {                                  &quot;formula_type&quot;: &quot;NONE&quot;,                                 &quot;formula&quot;: &quot;&quot;,                                 &quot;value_type&quot;: &quot;string&quot;,                                     &quot;value&quot;: &quot;szczepienie&quot;,                                 &quot;updated&quot;: 5345435435345                             }                     },                     {                         &quot;data_szczepienia&quot;:                         {                             &quot;formula_type&quot;: &quot;NONE&quot;,                             &quot;formula&quot;: &quot;&quot;,                             &quot;value_type&quot;: &quot;int&quot;,                                 &quot;value&quot;: 3434343,                             &quot;updated&quot;: 5345435225345                         },                     },                     {                         &quot;nazwisko_weterynarza&quot;:                         {                             &quot;formula_type&quot;: &quot;NONE&quot;,                             &quot;formula&quot;: &quot;&quot;,                             &quot;value_type&quot;: &quot;string&quot;,                                 &quot;value&quot;: &quot;Nowak&quot;,                             &quot;updated&quot;: 5345435225345                         }                     }                 ]             }         },         {             &quot;meta&quot;:  {                 &quot;updated&quot;: 555555,                 &quot;attributes&quot;: [                      {                         &quot;typ_dokumentu&quot; :                         {                             &quot;formula_type&quot;: &quot;NONE&quot;,                             &quot;formula&quot;: &quot;&quot;,                             &quot;value_type&quot;: &quot;string&quot;,                                 &quot;value&quot;: &quot;Certyfikat urodzin&quot;,                             &quot;updated&quot;: 5345435435345                         }                     },                     {                         &quot;data_urodzin&quot; :                         {                             &quot;formula_type&quot;: &quot;NONE&quot;,                             &quot;formula&quot;: &quot;&quot;,                             &quot;value_type&quot;: &quot;int&quot;,                                 &quot;value&quot;: 8888888,                             &quot;updated&quot;: 5345435225345                         }                     }                 ]             }         }     ] } </code></pre>"	2020-12-05 18:25:30.017 UTC	65192608	"<p>The AWS JSON (reference) path queries are not capable enough. Some more advanced JSONPath processors can do it, eg. using Jayway's JsonPath we could run a query like this:</p> <pre><code>$.files..meta.[?(@.attributes[*].typ_dokumentu.value contains 'szczepienie' &amp;&amp; @.attributes[*].data_szczepienia.value contains '3434343')]..nazwisko_weterynarza.value </code></pre> <p>Reurns <code>[&quot;Nowak&quot;]</code> (You can try it <a href=""https://jsonpath.herokuapp.com/"" rel=""nofollow noreferrer"">online</a>).</p> <p>I don't know what you mean by embedded JavaScript/Lua, but in any event, you could create a web service that does the querying for you leveraging an implementation of your choice. Security wouldn't be an issue as long as your API is properly secured.</p>"			2020-12-08 03:19:44.723 UTC
65164842	javascript|python|selenium|web-scraping|beautifulsoup	Selenium will not show javascript loaded table in webpage with Python	"<p>I am trying to scrape the following webpage: <a href=""https://steamdb.info/app/730/graphs/"" rel=""nofollow noreferrer"">https://steamdb.info/app/730/graphs/</a> (I have gained permission from the website)</p> <p>The problem is that the &quot;Monthly Breakdown&quot; table seems to be loaded by Javascript, and BeautifulSoup does not work. When using Selenium to open the webpage, it says that to see the table &quot;You must have Javascript enabled.&quot;, which should be enabled when using Selenium. Here is my code:</p> <pre><code>from selenium import webdriver  options = webdriver.ChromeOptions() options.add_argument(&quot;--enable-javascript&quot;) browser = webdriver.Chrome(options=options) browser.maximize_window()  url = &quot;https://steamdb.info/app/730/graphs/&quot; browser.get(url) </code></pre> <p>Any ways to solve this problem?</p> <p>How the page should look: <a href=""https://i.stack.imgur.com/97Hjs.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/97Hjs.png"" alt=""enter image description here"" /></a></p> <p>How it looks on Selenium: <a href=""https://i.stack.imgur.com/JIKtm.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/JIKtm.png"" alt=""enter image description here"" /></a></p>"	2020-12-06 05:02:40.763 UTC	65164908	"<p>Try this and see if you no longer get that error message:</p> <pre><code>options.add_argument(&quot;javascript.enabled&quot;, True) </code></pre> <p>You may also need to look into &quot;waits&quot; <a href=""https://selenium-python.readthedocs.io/waits.html"" rel=""nofollow noreferrer"">here</a> to make sure the async operation on the webpage has time to load.</p>"			2020-12-06 05:15:48.763 UTC
65164842	javascript|python|selenium|web-scraping|beautifulsoup	Selenium will not show javascript loaded table in webpage with Python	"<p>I am trying to scrape the following webpage: <a href=""https://steamdb.info/app/730/graphs/"" rel=""nofollow noreferrer"">https://steamdb.info/app/730/graphs/</a> (I have gained permission from the website)</p> <p>The problem is that the &quot;Monthly Breakdown&quot; table seems to be loaded by Javascript, and BeautifulSoup does not work. When using Selenium to open the webpage, it says that to see the table &quot;You must have Javascript enabled.&quot;, which should be enabled when using Selenium. Here is my code:</p> <pre><code>from selenium import webdriver  options = webdriver.ChromeOptions() options.add_argument(&quot;--enable-javascript&quot;) browser = webdriver.Chrome(options=options) browser.maximize_window()  url = &quot;https://steamdb.info/app/730/graphs/&quot; browser.get(url) </code></pre> <p>Any ways to solve this problem?</p> <p>How the page should look: <a href=""https://i.stack.imgur.com/97Hjs.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/97Hjs.png"" alt=""enter image description here"" /></a></p> <p>How it looks on Selenium: <a href=""https://i.stack.imgur.com/JIKtm.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/JIKtm.png"" alt=""enter image description here"" /></a></p>"	2020-12-06 05:02:40.763 UTC	65164948	"<p><strong>Update:</strong></p> <p>To enable or disable javascript :</p> <pre><code>from selenium import webdriver from selenium.webdriver.chrome.options import Options chrome_options = Options()  #value 1 enables it , if you set to 2 it disables it      chrome_options.add_experimental_option( &quot;prefs&quot;,{'profile.managed_default_content_settings.javascript': 1})  driver =webdriver.Chrome(r&quot;.\chromedriver.exe&quot;,options=chrome_options)   driver.get(&quot;https://www.google.com&quot;) </code></pre> <p><strong>THis wont solve your issue</strong></p> <p>you can check if the javascript is enabled by typing below in your address bar:</p> <pre><code> chrome://settings/content/javascript?search=javascript </code></pre> <p>you can see that even if its enabled the website won't load properly.</p> <p>it seems they have enabled security to avoid using selenium in thier website</p> <p><strong>Previous answer:</strong></p> <p>There is no command line argument called --enable-javascript chromium project try the above javascript-harmony flag instead.</p> <p>below are the full list of supported chrome flags:</p> <p><a href=""https://peter.sh/experiments/chromium-command-line-switches/#login-profile"" rel=""nofollow noreferrer"">https://peter.sh/experiments/chromium-command-line-switches/#login-profile</a></p> <p>please add screenshots and other information if more help is needed</p>"			2020-12-06 05:23:20.527 UTC
65184037	javascript|python|selenium|textarea	How to locate and write text into textarea using python and javascript?	"<p>Hei,</p> <p>I am trying to write something inside a textarea element with python selenium and a javascript: The js is: <code>self.driver.execute_script(&quot;document.getElementsByClassName('textarea').value='tesssst';&quot;)</code></p> <p>But it does not get the text there and I have tried with other get elements by (..).</p> <p>It works if I use <code>self.driver.find_element_by_css_selector(&quot;textarea&quot;).send_keys(code)</code></p> <p>or by xpath. But the problem with this method is that 'code' variable is pretty big and javascript works faster. Also, if I use</p> <p><code>send_keys(keys.control + c/v)</code></p> <p>it gives me an extra dot at the start of the text and I have no idea why would that even happen. Any sugestions?</p> <p><a href=""https://i.stack.imgur.com/w9bJc.png"" rel=""nofollow noreferrer"">Ace Editor</a></p> <p><a href=""https://i.stack.imgur.com/B32Lf.png"" rel=""nofollow noreferrer"">value</a></p> <p><a href=""https://i.stack.imgur.com/IzA2I.png"" rel=""nofollow noreferrer"">HTML Code</a></p> <p><a href=""https://i.stack.imgur.com/QPPqD.png"" rel=""nofollow noreferrer"">More Html</a></p>"	2020-12-07 14:55:29.57 UTC	71592435	"<p>I have been trying out the options provided in PDHide's answer, and the following worked for me finally:</p> <pre><code>self.driver.execute_script( &quot;arguments[0].value += 'tesssst';&quot;,self.driver.find_element_by_css_selector(&quot;pre#editor&quot;)) </code></pre> <p>For your reference, I am using selenium version 3.1.4, chrome version: 91.0.4472.114 and ChromeDriver 91.0.4472.19</p>"			2022-03-23 18:43:23.597 UTC
65184037	javascript|python|selenium|textarea	How to locate and write text into textarea using python and javascript?	"<p>Hei,</p> <p>I am trying to write something inside a textarea element with python selenium and a javascript: The js is: <code>self.driver.execute_script(&quot;document.getElementsByClassName('textarea').value='tesssst';&quot;)</code></p> <p>But it does not get the text there and I have tried with other get elements by (..).</p> <p>It works if I use <code>self.driver.find_element_by_css_selector(&quot;textarea&quot;).send_keys(code)</code></p> <p>or by xpath. But the problem with this method is that 'code' variable is pretty big and javascript works faster. Also, if I use</p> <p><code>send_keys(keys.control + c/v)</code></p> <p>it gives me an extra dot at the start of the text and I have no idea why would that even happen. Any sugestions?</p> <p><a href=""https://i.stack.imgur.com/w9bJc.png"" rel=""nofollow noreferrer"">Ace Editor</a></p> <p><a href=""https://i.stack.imgur.com/B32Lf.png"" rel=""nofollow noreferrer"">value</a></p> <p><a href=""https://i.stack.imgur.com/IzA2I.png"" rel=""nofollow noreferrer"">HTML Code</a></p> <p><a href=""https://i.stack.imgur.com/QPPqD.png"" rel=""nofollow noreferrer"">More Html</a></p>"	2020-12-07 14:55:29.57 UTC	65185766	"<p>getElementsByClassName returns an array, so I think you need to get the first element of that array. Try the following code:</p> <pre><code>driver.execute_script('document.getElementsByClassName(&quot;className&quot;)[0].value=&quot;yourValue&quot;') </code></pre>"			2020-12-07 16:42:05.127 UTC
65184037	javascript|python|selenium|textarea	How to locate and write text into textarea using python and javascript?	"<p>Hei,</p> <p>I am trying to write something inside a textarea element with python selenium and a javascript: The js is: <code>self.driver.execute_script(&quot;document.getElementsByClassName('textarea').value='tesssst';&quot;)</code></p> <p>But it does not get the text there and I have tried with other get elements by (..).</p> <p>It works if I use <code>self.driver.find_element_by_css_selector(&quot;textarea&quot;).send_keys(code)</code></p> <p>or by xpath. But the problem with this method is that 'code' variable is pretty big and javascript works faster. Also, if I use</p> <p><code>send_keys(keys.control + c/v)</code></p> <p>it gives me an extra dot at the start of the text and I have no idea why would that even happen. Any sugestions?</p> <p><a href=""https://i.stack.imgur.com/w9bJc.png"" rel=""nofollow noreferrer"">Ace Editor</a></p> <p><a href=""https://i.stack.imgur.com/B32Lf.png"" rel=""nofollow noreferrer"">value</a></p> <p><a href=""https://i.stack.imgur.com/IzA2I.png"" rel=""nofollow noreferrer"">HTML Code</a></p> <p><a href=""https://i.stack.imgur.com/QPPqD.png"" rel=""nofollow noreferrer"">More Html</a></p>"	2020-12-07 14:55:29.57 UTC	65184078	"<p><code>self.driver.execute_script( &quot;$('pre#editor').text(&quot;jsdasdsjj&quot;);&quot;)</code></p> <p>Or</p> <p><code>self.driver.execute_script( &quot;arguments[0].text('tesssst');&quot;,self.driver.find_element_by_css_selector(&quot;pre#editor&quot;))</code></p> <p><a href=""https://i.stack.imgur.com/pDmgS.gif"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/pDmgS.gif"" alt=""enter image description here"" /></a></p> <p>use textContent to set the value</p>"			2020-12-07 14:58:35.747 UTC
65195438	javascript|python|rpc|odoo-13	Trying to send data from javascript to python POS odoo using rpc.query	"<p>I am trying to send my data in the list to their fields so i can retrieve them into another screen in same module / project.</p> <p>The list i am trying to send :</p> <pre><code>var vals = {                 'token_number':Token,                 'partner_id':customer_name,                 'queue_line_ids':queue_lines,             } </code></pre> <p>where <strong>Token</strong> is random number generated on custom_button click,<strong>customer_name</strong> is the id of customer obtained by &quot;this.pos.get_order().cid&quot; and <strong>queuelines</strong> is array of product and their info obtained from orderlines.</p> <p>The <code>rpc.query</code> i wrote by referring to  point_of_sale in odoo13/addon/ :</p> <pre><code> return rpc.query({                 model: 'pos.queue',                 method: 'create',                 args: [vals],              }).then(function () {                 console.log(&quot;Success&quot;)             }).catch(function (reason){                 var error = reason.message;                 console.log(error);             }); </code></pre> <p>The <code>pos.queue</code> in my module's model.py :</p> <pre><code>class POSOrderQueue(models.Model):     _name = 'pos.queue'      token_number = fields.Integer(string=&quot;Token Number&quot;, store=True)     partner_id = fields.Char(store=True)     pos_order_id = fields.Char(store=True)     order_progress = fields.Selection([('in_queue', 'In Queue'),                                        ('in_progress', 'In Progress'),                                        ('done', 'Done')], string=&quot;Order progress&quot;, default='inqueue', store=True)     no_items = fields.Integer(string='No of Items', store=True)     queue_line_ids = fields.One2many('pos.queue.line', 'queue_id')      def create(self):         val = {             &quot;token_number&quot;: self.token_number,             &quot;partner_id&quot;: self.partner_id,             &quot;queue_line_ids&quot;: self.queue_line_ids,         }          self.env['pos.queue'].create(val)   </code></pre>"	2020-12-08 08:23:21.783 UTC	65680652	"<p>Yes so i was finding solution to pass orderline data in my database along with other as i came a long way from time this question was passed so i felt obliged to share my findings and modification which enable to pass <code>token number</code> <code>Customer id</code> <code>Estimated time</code> &amp; <code>status</code>. Following are the modification i did so far The list :</p> <pre><code>val_list = {                         'token_number':Token,                         'partner_id':customer_name,                         'pos_order_id':torder.name,                         'est_time':e_time,                         'order_progress':torder.order_progress,                                             }; </code></pre> <p>where <code>torder</code> is <code>this.pos.get_order()</code>. MY rpc query become like (thanks to my supervisor)</p> <pre><code> return rpc.query({                     model: 'pos.queue',                     method: 'create_token',                     args:[val_list],                 }).then(function () {                     console.log(&quot;Success&quot;)                 }).catch(function (reason){                     var error = reason.message;                     console.log(error);                 }); </code></pre> <p>the model became like:</p> <pre><code>class POSOrderQueue(models.Model):     _name = 'pos.queue'      token_number = fields.Integer(string=&quot;Token Number&quot;, store=True)     partner_id = fields.Char(store=True)     pos_order_id = fields.Char(store=True)     est_time = fields.Text(string=&quot;estimated time&quot;, store=True)     order_progress = fields.Selection([('in_queue', 'In Queue'),                                        ('in_progress', 'In Progress'), ('cancel', 'Cancel'),                                        ('done', 'Done')], string=&quot;Order progress&quot;, default='in_queue', store=True)     no_items = fields.Integer(string='No of Items', store=True)     queue_line_ids = fields.One2many('pos.queue.line', 'queue_id')      @api.model     def create_token(self, val_list):         res = super(POSOrderQueue, self).create(val_list)         print(&quot;yes working&quot;)         return res  class POSOrderQueueLine(models.Model):     _name = 'pos.queue.line'      queue_id = fields.Many2one('pos.queue')     product_name = fields.Char(store=True)     product_quant = fields.Integer()     product_price = fields.Float()      def create(self, vals):         res = super(POSOrderQueueLine, self).create(vals)         return res </code></pre> <p>The problem is partially solved but i can't acheive my last objective which is to pass <code>orderline</code> data through rpc query into my model <code>pos.queue.line</code> so it can be viewable in my custom view of odoo13 which is like this <a href=""https://i.stack.imgur.com/bzNs1.png"" rel=""nofollow noreferrer"">screenshot of my view table</a></p>"			2021-01-12 08:52:54.44 UTC
65210540	javascript|python|selenium|web-scraping	Rendering Page in JavaScript using Python Selenium	"<p>I am using Python Splinter Selenium (Chromedriver) to web-scrape a page. The page has a table created with JavaScript, but I am when Beautiful Soup parses it, the table isn't there. Am having trouble rendering the table so I can parse it with Beautiful Soup. How do it do it within Selenium? If I can't, what libraries should I be using?</p> <p>Here is an example of what I have:</p> <pre><code>import pandas as pd from bs4 import BeautifulSoup as bs import pymongo import requests from splinter import Browser from datetime import date from flask_pymongo import PyMongo import datetime </code></pre> <pre><code>executable_path = {'executable_path': '/usr/local/bin/chromedriver'} browser = Browser('chrome', **executable_path, headless=True) url = &quot;https://www.onthesnow.com/epic-pass/skireport.html&quot; browser.visit(url) browser.execute_script(&quot;window.scrollTo(0, document.body.scrollHeight);&quot;) html = browser.html soup = bs(html, 'html.parser') response = requests.get(url) soup = bs(response.text, 'html.parser') </code></pre> <p>The link to the website with the table: <a href=""https://www.onthesnow.com/epic-pass/skireport.html"" rel=""nofollow noreferrer"">https://www.onthesnow.com/epic-pass/skireport.html</a></p> <p>Thanks in advance for any help.</p>"	2020-12-09 04:13:52.493 UTC	65212588	"<p>Use <code>WebDriver.page_source</code>: <a href=""https://selenium-python.readthedocs.io/api.html#selenium.webdriver.remote.webdriver.WebDriver.page_source"" rel=""nofollow noreferrer"">https://selenium-python.readthedocs.io/api.html#selenium.webdriver.remote.webdriver.WebDriver.page_source</a></p> <p>Then pass it to bs4 to parse.</p> <pre class=""lang-py prettyprint-override""><code>from bs4 import BeautifulSoup from selenium import webdriver browser = webdriver.Chrome() browser.get(url) html = browser.page_source soup = BeautifulSoup(html, &quot;lxml&quot;) </code></pre>"			2020-12-09 07:45:44.153 UTC
65212119	javascript|python|json|scrapy	"How to parse JavaScript Json into Python dict type, effeciently"	"<p>I am looking for way to read javascript json data loaded into one of a script tag of this <a href=""https://www.zocdoc.com/doctor/andrew-fagelman-md-7363?insuranceCarrier=-1&amp;insurancePlan=-1"" rel=""nofollow noreferrer"">page</a>. I have tried various <code>re</code> patterns posted on google and stackoveflow but got nothing.</p> <p>The Json <a href=""https://jsonformatter.curiousconcept.com/#"" rel=""nofollow noreferrer"">Formatter</a> shows an Invalid (RFC 8259).</p> <p>Here is a code</p> <pre><code>import requests,json from scrapy.selector import Selector  headers = {'Content-Type': 'application/json', 'Accept-Language': 'en-US,en;q=0.5', 'User-Agent': 'Mozilla/5.0 (iPhone; CPU iPhone OS 5_1 like Mac OS X) AppleWebKit/534.46 (KHTML, like Gecko) Version/5.1 Mobile/9B179 Safari/7534.48.3'}  url = 'https://www.zocdoc.com/doctor/andrew-fagelman-md-7363?insuranceCarrier=-1&amp;insurancePlan=-1'  response = requests.get(url,headers = headers)  sel = Selector(text = response.text)  profile_data = sel.css('script:contains(APOLLO_STATE)::text').get('{}').split('__REDUX_STATE__ = JSON.parse(')[-1].split(');\n          window.ZD = {')[0]      profile_json = json.loads(profile_data)      print(type(profile_json)) </code></pre> <p>The problem seems an invalid json format. The type of <code>profile_json</code> is string while a little amendments in above code shows below error stack</p> <pre><code>&gt;&gt;&gt; profile_data = sel.css('script:contains(APOLLO_STATE)::text').get('{}').split('__REDUX_STATE__ = JSON.parse(&quot;')[-1].split('&quot;);\n          window.ZD = {')[0].replace(&quot;\\&quot;,&quot;&quot;) &gt;&gt;&gt; profile_json = json.loads(profile_data) Traceback (most recent call last):   File &quot;/usr/lib/python3.6/code.py&quot;, line 91, in runcode     exec(code, self.locals)   File &quot;&lt;console&gt;&quot;, line 1, in &lt;module&gt;   File &quot;/usr/lib/python3.6/json/__init__.py&quot;, line 354, in loads     return _default_decoder.decode(s)   File &quot;/usr/lib/python3.6/json/decoder.py&quot;, line 339, in decode     obj, end = self.raw_decode(s, idx=_w(s, 0).end())   File &quot;/usr/lib/python3.6/json/decoder.py&quot;, line 355, in raw_decode     obj, end = self.scan_once(s, idx) json.decoder.JSONDecodeError: Expecting ',' delimiter: line 1 column 41316 (char 41315) </code></pre> <p>Error in output are highlighted here:</p> <p><a href=""https://i.stack.imgur.com/cAZQX.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/cAZQX.png"" alt=""json"" /></a></p> <p>The original HTML contains this (heavily trimmed):</p> <pre class=""lang-html prettyprint-override""><code>&lt;script&gt;    ...    window.__REDUX_STATE__ = JSON.parse(&quot;{\&quot;routing\&quot;: ...    \&quot;awards\&quot;:[\&quot;Journal of Urology - \\\&quot;Efficacy, Safety, and Use of Viagra in Clinical Practice.\\\&quot;\&quot;,\&quot;Critical Care Resident of the Year - 2003\&quot;],    ... </code></pre> <p>The same string extracted by scrapy is this:</p> <pre><code>&quot;awards&quot;:[                &quot;Journal of Urology - &quot;&quot;Efficacy&quot;,                &quot;Safety&quot;,                &quot;and Use of Viagra in Clinical Practice.&quot;&quot;&quot;,                &quot;Critical Care Resident of the Year - 2003&quot;             ], </code></pre> <p>It appears the backslashes are removed from it, making the JSON invalid.</p>"	2020-12-09 07:08:06.73 UTC	65228876	"<p>I don't know if this is an efficient way of handling the problem but below code resolved my problem.</p> <pre><code>&gt;&gt;&gt; import js2xml &gt;&gt;&gt; profile_data = sel.css('script:contains(APOLLO_STATE)::text').get('{}') &gt;&gt;&gt; parsed = js2xml.parse(profile_data) &gt;&gt;&gt; js = json.loads(parsed.xpath(&quot;//string[contains(text(),'routing')]/text()&quot;)[0]) </code></pre>"			2020-12-10 05:16:21.793 UTC
65228710	javascript|python|math	Would it be better to use Javascript or Python for calculations on my website	"<p>I am considering working on a project to emulate circuits in order to get more invested in an electronic circuits class that I am currently taking. I have found it useful to create Python scripts to work on my homework calculations, but now I would like to make a website to share with classmates to use these scripts.</p> <p>From my understanding, I can run only run <code>Javascript</code> on the browser and can only use <code>Python</code> on the backend. I've gotten comfortable with using <code>Python</code> for math and have heard that it's better in general for mathematics. In my assignments, the most that I've worked with is <code>pi</code> and long floating point numbers.</p> <h2>So...</h2> Would it be worth my time to create a python backend to run calculations? Or can I get by with browser `Javascript` for calculations. I am comfortable with both languages. <p>Also as a follow-up question, could I use <code>Flask</code> to run <code>Python</code> in the browser?</p> <p>Thank you!</p>"	2020-12-10 04:56:15.167 UTC	65228748	"<p>The only case in which one would definitely be preferable to the other would be if the calculations to be performed may get very expensive, in which case it would be much more user-friendly to have the <em>server</em> shoulder the load, rather than having the client do it (since low-end clients may become unresponsive for too long while calculating).</p> <p>If that's a potential issue for your case, running the expensive code on the backend would be the way to go. (It doesn't have to be Python on the backend - it could even be server-side JS, or even PHP or whatever else you prefer and is performant enough for your needs.)</p> <p>If that <em>isn't</em> something to worry about for your case, then feel free to choose whatever you like (calculate on the client or on the server), using whatever approach you're most comfortable with - there isn't an objective way to choose between them.</p>"			2020-12-10 05:01:15.923 UTC
65242697	javascript|python|loops	Javascript Python for loop Syntax erros	"<p>How does for loop work in Javascript? I have a couple Python code snippets I want to convert to JS to be ran online, but always getting Syntax errors.</p> <pre><code>final_words = [i.split()[-1] for i in chosen_stimuli] </code></pre> <p>I converted to JS as</p> <pre><code>final_words = [i.split().slice(-1)[0] in chosen_stimuli] </code></pre> <p>The second Python code I have is</p> <pre><code>for word in final_words:     if word in ''.join(textbox.text).lower():         matched_words.append(word) </code></pre> <p>I translated to JS as</p> <pre><code>for (word in final_words){     if word in ''.join(textbox.text).toLowerCase(){         matched_words.push(word)} } </code></pre>"	2020-12-10 21:39:18.747 UTC	65242751	"<p>You can't just convert python to javascript just by adding parentheses and braces randomly. It's about the actual concept of the code. Your snippet:</p> <pre class=""lang-py prettyprint-override""><code>final_words = [i.split()[-1] for i in chosen_stimuli] </code></pre> <p>Is using a list comprehension to map a function on a list. So, use <code>map</code> in js:</p> <pre class=""lang-js prettyprint-override""><code>let final_words = chosen_stimuli.map(i =&gt; i.split(/\s+/).slice(-1)[0]); </code></pre> <p>Your second code:</p> <pre class=""lang-py prettyprint-override""><code>for word in final_words:     if word in ''.join(textbox.text).lower():         matched_words.append(word) </code></pre> <p>Loops through a list, checks if a string contains a word, and if it does, append it to an array. So, do so:</p> <pre class=""lang-js prettyprint-override""><code>for (let word of final_words) {     if (textbox.text.join(&quot;&quot;).toLowerCase().contains(word)) {         matched_words.push(word);     } } </code></pre> <p>Note that JS uses <code>for...of</code> to loop through arrays, not <code>for...in</code>, which does something different.</p>"			2020-12-10 21:43:55.663 UTC
65245359	javascript|python|recursion|sudoku	Sudoku solver works in python but not javascript	"<p>So I was following along with a Computerphile video about writing a sudoku solver and managed to get the code working in python, here's what I got:</p> <pre><code>def possible(grid, y, x, n): for i in range(0,9):     if grid[y][i] == n:         return False     if grid[i][x] == n:         return False x0 = (x//3)*3 y0 = (y//3)*3 for i in range(0,3):     for j in range(0,3):         if grid[y0+i][x0+j] == n:             return False return True  def solver(grid):     for y in range(9):         for x in range(9):             if grid[y][x] == 0:                 for n in range(1,10):                     if possible(grid, y, x, n):                         grid[y][x] = n                         solver(grid)                         grid[y][x] = 0                 return     print(np.matrix(grid)) </code></pre> <p>This code works properly. But I wanted to try to get this working in a web application, so I translated it to Javascript like this:</p> <pre><code>function possible(board, y, x, n) {     for(i = 0; i &lt; 9; i++) {         if(board[y][i] === n) {             return false;         }         if(board[i][x] === n) {             return false;         }     }     y0 = Math.floor(y/3)*3;     x0 = Math.floor(x/3)*3;     for(i = 0; i &lt; 3; i++) {         for(j = 0; j &lt; 3; j++) {             if(board[i+y0][j+x0] === n) {                 return false;             }         }     }     return true; }   function solver(board) {     for(y = 0; y &lt; 9; y++) {         for(x = 0; x &lt; 9; x++) {             if(board[y][x] === 0) {                 for(n = 1; n &lt; 10; n++) {                     if(possible(board, y, x, n)) {                         board[y][x] = n;                         solver(board);                         board[y][x] = 0;                     }                 }                 return;             }         }     }     console.log(board); } </code></pre> <p>As far as I can see, these functions are exactly the same, and since it works in Python I can't figure out why it doesn't work in JavaScript. In JS, it seems that it never even reaches the console.log(board) line, so I'm wandering if I'm hitting max recursion depth or something simple like that.</p> <p>For reference, here is a grid that works in the Python solver:</p> <pre><code>grid = [     [5, 3, 0, 0, 7, 0, 0, 0, 0],     [6, 0, 0, 1, 9, 5, 0, 0, 0],     [0, 9, 8, 0, 0, 0, 0, 6, 0],     [8, 0, 0, 0, 6, 0, 0, 0, 3],     [4, 0, 0, 8, 0, 3, 0, 0, 1],     [7, 0, 0, 0, 2, 0, 0, 0, 6],     [0, 6, 0, 0, 0, 0, 2, 8, 0],     [0, 0, 0, 4, 1, 9, 0, 0, 5],     [0, 0, 0, 0, 8, 0, 0, 7, 9] ] </code></pre>"	2020-12-11 03:23:12.573 UTC	65246026	"<p>If you are using for loops inside a function, <code>var</code> will create a local variable, &quot;no var&quot; will look up the scope chain until it finds the variable or hits the global scope. Meaning that you need to declare the <code>var</code> when creating your variables inside the for loops to avoid one loop messing with the other around. Read more <a href=""https://stackoverflow.com/questions/1470488/what-is-the-purpose-of-the-var-keyword-and-when-should-i-use-it-or-omit-it"">here</a></p> <p>So your code should look like this:</p> <pre class=""lang-js prettyprint-override""><code>function possible(board, y, x, n) {     for (var i = 0; i &lt; 9; i++) {         if (board[y][i] === n) {             return false;         }         if (board[i][x] === n) {             return false;         }     }     y0 = Math.floor(y / 3) * 3;        x0 = Math.floor(x / 3) * 3;     for (var i = 0; i &lt; 3; i++) {         for (var j = 0; j &lt; 3; j++) {             if (board[y0+i][x0+j] === n) {                 return false;             }         }     }     return true; }  function solver(board) {     for (var y = 0; y &lt; 9; y++) {         for (var x = 0; x &lt; 9; x++) {             if (board[y][x] === 0) {                 for (var n = 1; n &lt; 10; n++) {                                        if (possible(board, y, x, n)) {                         board[y][x] = n;                         solver(board);                         board[y][x] = 0;                      }                   }               return             }         }     }     console.log(board); } </code></pre>"			2020-12-11 05:00:20.06 UTC
65258263	python|selenium|xpath|onclick|webdriverwait	Selenium Python: click on onclick element containing JavaScript	"<p>I'm using Selenium with Python to navigate through a webpage and want to click on such Element:</p> <pre><code>&lt;td style=&quot;width:75px;cursor:pointer;&quot; onclick=&quot;$(this).up().addClassName('grid-visited'); showIndicator(); document.location.href='/masterdata/show/id/1'&quot;&gt;591000397&lt;/td&gt; </code></pre> <p>I tried a some stuff which didn't work, e.g.</p> <pre><code>browser.find_element_by_css_selector(&quot;td[onclick*=pointer]&quot;).click() </code></pre> <p>or</p> <pre><code>browser.find_element_by_link_text(&quot;591000397&quot;).click() </code></pre> <p>Error message be like</p> <pre><code>Message: no such element: Unable to locate element: {&quot;method&quot;:&quot;css selector&quot;,&quot;selector&quot;:&quot;td[onclick*=pointer]&quot;} </code></pre> <p>Thank you for your help</p>"	2020-12-11 20:34:06.703 UTC	65259737	"<p>To click on the element with text as <strong>591000397</strong> you can use either of the following <a href=""https://stackoverflow.com/questions/48369043/official-locator-strategies-for-the-webdriver/48376890#48376890"">Locator Strategies</a>:</p> <ul> <li><p>Using <code>xpath</code>:</p> <pre><code>browser.find_element_by_xpath(&quot;//td[contains(@onclick, 'grid-visited') and contains(@onclick, 'masterdata')][text()='591000397']&quot;).click() </code></pre> </li> </ul> <hr /> <p>Ideally, to click on the element you need to induce <a href=""https://stackoverflow.com/questions/59130200/selenium-wait-until-element-is-present-visible-and-interactable/59130336#59130336"">WebDriverWait</a> for the <code>element_to_be_clickable()</code> and you can use either of the following <a href=""https://stackoverflow.com/questions/48369043/official-locator-strategies-for-the-webdriver/48376890#48376890"">Locator Strategies</a>:</p> <ul> <li><p>Using <code>XPATH</code>:</p> <pre><code>WebDriverWait(browser, 20).until(EC.element_to_be_clickable((By.XPATH, &quot;//td[contains(@onclick, 'grid-visited') and contains(@onclick, 'masterdata')][text()='591000397']&quot;))).click() </code></pre> </li> <li><p><strong>Note</strong>: You have to add the following imports :</p> <pre><code>from selenium.webdriver.support.ui import WebDriverWait from selenium.webdriver.common.by import By from selenium.webdriver.support import expected_conditions as EC </code></pre> </li> </ul> <hr /> <h2>References</h2> <p>You can find a couple of relevant discussions on <a href=""https://stackoverflow.com/questions/47993443/selenium-selenium-common-exceptions-nosuchelementexception-when-using-chrome/47995294#47995294"">NoSuchElementException</a> in:</p> <ul> <li><a href=""https://stackoverflow.com/questions/50315587/selenium-common-exceptions-nosuchelementexception-message-no-such-element-una/50315715#50315715"">selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element while trying to click Next button with selenium</a></li> <li><a href=""https://stackoverflow.com/questions/53441658/selenium-in-python-nosuchelementexception-message-no-such-element-unable-to/53442511#53442511"">selenium in python : NoSuchElementException: Message: no such element: Unable to locate element</a></li> </ul>"			2020-12-11 22:57:32.45 UTC
65260857	javascript|python|function|for-loop|list-comprehension	For in python to javascript language	"<p>I have this line in python for list comprehension, however I don't understand much of this language, and I wanted to convert it to javascript.</p> <p>the line is:</p> <pre><code>next = [ (i,j) for i,j in getValidMoves(grid,x,y,moves) ] num = [ (len(getValidMoves(grid,x+i,y+j,moves)),i,j) for i,j in next] </code></pre> <p>getValidMoves is an auxiliary function, but i think it is not necessary to understand the rest of the code</p>"	2020-12-12 02:02:01.36 UTC	65261121	"<p>Let's start with how a for loop in python works:</p> <p>In contrast with many languages, python actually takes each element contained in whatever iterable object you give in the foor loop statement, and is iterating through that object without any incrementation whatsoever. So in python the following code is not an endless loop.</p> <pre><code>for i in range(5):     i=3     print(i) ## prints 3, five times </code></pre> <p>All this gives the ability to the for loop to iterate through an iterable like the following</p> <pre><code>for i in ['hsusu', 4, ['usjs'], '21']:     print(i) ## prints each one of the list elements </code></pre> <p>Now the for loop inside the list comprehension is the same thing as a normal for loop. However the list comprehension is a fast way of creating lists from iterables because it using the append function efficiency. In the following example with a normal multiline for loop you are using append 5 times in order to create a list</p> <pre><code>next = [] # an empty list for i, j in getValidMoves(grid,x,y,moves): # iterate through the iterable     next.append((i,j)) # append the desired element </code></pre> <p>In the contrary, list comprehension doesn't call the append function ( or at least not so much. I am not sure), so the iteratyion is completed faster.</p> <p>About <code>next = [ (i,j) for i,j in getValidMoves(grid,x,y,moves)]</code> This line is creating a list, because of the square brackets, named <code>next</code>, because of the variable name, that contains tuples, because of the normal brackets of (i,j), out of the contents of the output of the function <code>getValidMoves(grid,x,y,moves)</code>, which should be an iterable (otherwise there will be an error). Now since you are using two variables in the for loop the iterable has to be something like [[1,2],[7,8]], where each elemen6 of the iterable is an iterable with 2 elements.</p> <p>l hope that you understand everything now and if not tell in the comments what should I explain better. I will soon add references for everything I wrote.</p>"			2020-12-12 02:48:55.767 UTC
65260857	javascript|python|function|for-loop|list-comprehension	For in python to javascript language	"<p>I have this line in python for list comprehension, however I don't understand much of this language, and I wanted to convert it to javascript.</p> <p>the line is:</p> <pre><code>next = [ (i,j) for i,j in getValidMoves(grid,x,y,moves) ] num = [ (len(getValidMoves(grid,x+i,y+j,moves)),i,j) for i,j in next] </code></pre> <p>getValidMoves is an auxiliary function, but i think it is not necessary to understand the rest of the code</p>"	2020-12-12 02:02:01.36 UTC	65261026	"<p>3 things that might help you convert this into Javascript:</p> <ul> <li>Check the <a href=""https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions"" rel=""nofollow noreferrer"">docs for list comprehensions</a>. This nicely show how you can convert that to regular <code>for...in</code> loops.</li> <li>Edit: in JavaScript, the equivalent of a Python <code>for...in</code> loop would be a <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/for...of"" rel=""nofollow noreferrer""><code>for...of</code></a> loop. The <code>for...in</code> loop in JavaScript does something different. (It's JavaScript, so <code>for (var i = 0; ...; ++i) ...</code> can also be used though.)</li> <li><code>for i, j in ...</code> is called &quot;unpacking&quot; in Python; equivalent to <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment"" rel=""nofollow noreferrer"">&quot;Destructuring assignment&quot;</a> in JavaScript.</li> </ul>"			2020-12-12 02:31:34.65 UTC
65303010	javascript|python	Javascript variable export to python	"<p>Quick question. Can i somehow access javascript variable inside script and then use it to make python graphs?</p> <p>i got javascript script running on my website, i need to &quot;export&quot; variables inside script after leaving website, then use it in python script running somewhere else. My site is basic html page collecting data about its usage.</p> <pre><code>window.onload = function(){     var heatmapInstance = h337.create({       container: document.querySelector('.heatmap'),       radius: 90     });      document.querySelector('.heatmap').onmousemove = function(ev) {       heatmapInstance.addData({         x: ev.layerX,         y: ev.layerY,         value: 1       });     };   }     function getHeatMap() {     var currentData = heatmapInstance.getData();     return currentData;   } </code></pre>"	2020-12-15 09:16:34.56 UTC	65303044	"<p>You can use the <a href=""https://developer.mozilla.org/en-US/docs/Web/API/Beacon_API"" rel=""nofollow noreferrer"">beacon API</a> to flush data when users close the tab, in supported browsers, to your back-end.</p> <pre><code>window.onload = window.onunload = function analytics(event) {   if (!navigator.sendBeacon) return;    var url = &quot;https://example.com/analytics&quot;;   // Create the data to send   var data = &quot;state=&quot; + event.type + &quot;&amp;location=&quot; + location.href;    // Send the beacon   var status = navigator.sendBeacon(url, data);    // Log the data and result   console.log(&quot;sendBeacon: URL = &quot;, url, &quot;; data = &quot;, data, &quot;; status = &quot;, status); }; </code></pre>"			2020-12-15 09:19:37.28 UTC
65316931	javascript|python|html|jquery|json	Issues sending/interpreting JSON sent from Javascript to Python	"<p>I am trying to send JSON from Javascript to a Python POST route using Flask. I believe the JSON is sending correctly to Python, except I am struggling to figure out how to access it. In my Python response variable after the POST route occurs, <code>type(response)</code> prints <code>&lt;Response [200]&gt;</code>. When I print <code>dir(response)</code> I get <a href=""https://i.stack.imgur.com/J7Vfv.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/J7Vfv.png"" alt=""enter image description here"" /></a></p> <p>I see that there is a JSON method within this response, however when I print <code>response.json()</code>, I receive the following error:</p> <pre><code>json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0) </code></pre> <p>My Javascript and Python code is below. Appreciate any help.</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-js lang-js prettyprint-override""><code>async function processForm() {     const luckyNumObj = {num: {fact: ""text is here"", num: 3}, year: {fact: ""text is here"", year: 1990}};     console.log(""luckyNumObj:"", JSON.stringify(luckyNumObj))     await axios.post(""/api/get-lucky-num"", JSON.stringify(luckyNumObj)) };  processForm()</code></pre> </div> </div> </p> <pre><code>from flask import Flask, render_template, redirect, session, request, jsonify import json import requests from werkzeug.exceptions import Unauthorized  app = Flask(__name__)  app.config['SECRET_KEY'] = &quot;shhhhh&quot;   @app.route(&quot;/&quot;) def homepage():     &quot;&quot;&quot;Show homepage.&quot;&quot;&quot;     return redirect(&quot;/api/get-lucky-num&quot;)  @app.route(&quot;/api/get-lucky-num&quot;, methods=[&quot;GET&quot;, &quot;POST&quot;]) def json_api():     &quot;&quot;&quot;JSON API Endpoint&quot;&quot;&quot;     if request.method == 'POST':         response = requests.get('http://localhost:5000/api/get-lucky-num')         data = response.json()          print(&quot;data&quot;, data)          return render_template(&quot;index.html&quot;)          return render_template(&quot;index.html&quot;) </code></pre>"	2020-12-16 03:33:42.67 UTC	65317376	"<p>It looks like you're mixing up a couple python libraries.</p> <p>The <a href=""https://requests.readthedocs.io/en/master/"" rel=""nofollow noreferrer"">requests</a> python library is used for sending out HTTP requests, similar to axios in javascript. The <a href=""https://flask.palletsprojects.com/en/1.1.x/"" rel=""nofollow noreferrer"">flask</a> python library is used for making an HTTP web server.</p> <p>At the top of your file, you're doing <code>import requests</code> which imports the requests library, not the flask library. Later, you're telling the requests library to send a GET request to <code>http://localhost:5000/api/get-lucky-num</code>, then you're trying to get the JSON response from the result of that request.</p> <p>What you were probably trying to do instead was <code>from flask import request</code>, which would import flask's request API. From there, you could do <code>request.json</code> to get the JSON data that was POSTed to this endpoint. You might have to set the 'Content-Type' header to 'application/json' in javascript when you send the request for flask to interpret it correctly. This can be done as follows:</p> <pre><code>await axios.post(&quot;/api/get-lucky-num&quot;, JSON.stringify(luckyNumObj), {   headers: { &quot;content-type&quot;: 'application/json' }, }) </code></pre> <p>See <a href=""https://stackoverflow.com/questions/10434599/get-the-data-received-in-a-flask-request"">this stackoverflow answer</a> for more information on getting the POST data from a flask response, and <a href=""https://www.npmjs.com/package/axios"" rel=""nofollow noreferrer"">this page</a> for more information on using axios.</p>"			2020-12-16 04:33:31.627 UTC
65332093	javascript|python|selenium|selenium-webdriver	What is the selenium python client equivalent of this JavaScript document.getElementById('#searchboxinput').dispatchEvent(new MouseEvent('keyup'));	<p>what is the python selenium equivalent of this JavaScript line?</p> <pre><code>document.getElementById('#searchboxinput').dispatchEvent(new MouseEvent('keyup')); </code></pre>	2020-12-16 22:34:41.07 UTC	65332518	<p>The Selenium Python client line of code to execute the <em>JavaScript</em>:</p> <pre><code>document.getElementById('#searchboxinput').dispatchEvent(new MouseEvent('keyup')); </code></pre> <p>will be:</p> <pre><code>driver.execute_script(&quot;document.getElementById('#searchboxinput').dispatchEvent(new MouseEvent('keyup'))&quot;) </code></pre>			2020-12-16 23:17:08.423 UTC
65343782	javascript|python|recursion	Recursion working in Python but not in JavaScript	"<p>I'm new to Python, and for one of my first projects, I made a script for solving a given <a href=""https://en.wikipedia.org/wiki/Sudoku"" rel=""nofollow noreferrer"">Sudoku puzzle</a>. My script uses recursion to solve the puzzle. I tried to &quot;translate&quot; it to JavaScript to implement it on a website, but that didn't work. In the following you can find my Python and JS code.</p> <p><strong>Python</strong></p> <pre><code>import numpy as np sudoku = [[1,7,2,0,0,0,0,0,0],             [0,0,0,0,0,0,0,1,0],             [0,0,0,5,1,4,0,9,0],             [0,3,0,9,0,5,0,8,0],             [0,2,7,8,0,1,5,6,0],             [0,5,0,4,0,2,0,7,0],             [0,0,0,7,4,9,0,3,0],             [0,0,0,0,0,0,0,2,0],             [4,8,6,0,0,0,0,0,0]]  def isPossible(x,y,n):     global sudoku     for row in range(9):         if sudoku[row][x] == n:             return False     for col in range(9):         if sudoku[y][col] == n:             return False     x0 = (x//3)*3     y0 = (y//3)*3     for a in range(3):         for b in range(3):             if sudoku[y0+a][x0+b] == n:                 return False     return True  def solve():     global sudoku     for y in range(9):         for x in range(9):             if sudoku[y][x] == 0:                 for n in range(1,10):                     if isPossible(x,y,n):                         sudoku[y][x] = n                         solve()                         sudoku[y][x] = 0                 return     print(np.matrix(sudoku))  solve() #prints the solved puzzle </code></pre> <p><strong>JS</strong></p> <pre><code>let grid = [[1,7,2,0,0,0,0,0,0],     [0,0,0,0,0,0,0,1,0],     [0,0,0,5,1,4,0,9,0],     [0,3,0,9,0,5,0,8,0],     [0,2,7,8,0,1,5,6,0],     [0,5,0,4,0,2,0,7,0],     [0,0,0,7,4,9,0,3,0],     [0,0,0,0,0,0,0,2,0],     [4,8,6,0,0,0,0,0,0]];  function isPossible(x,y,n){     for(let i = 0; i &lt; 9; i++){         if(grid[y][i] === n){             return false;         }         if(grid[i][x] === n){             return false;         }     }     for(let i = 0; i &lt; 3; i++){         for(let j = 0; j &lt; 3; j++){             if(grid[Math.floor(y/3)*3+i][Math.floor(x/3)*3+j] === n){                 return false;             }         }     }     return true; }  function solve() {     for(let y = 0; y &lt; 9; y++){         for(let x = 0; x &lt; 9; x++){             if(grid[y][x] === 0){                 for(let n = 1; n &lt; 10; n++){                     if(isPossible(x, y, n)){                         grid[y][x] = n;                         solve();                         grid[y][x] = 0;                     }                 }                 return;             }         }     }     return grid; }  /* * prints 'undefined' when there are only a few blanks (0's) in the array * and is loading way longer than python if there are many blanks like in the example * array above */ console.log(solve()); </code></pre> <p>Do Python and JS treat the return statement differently? Is something else the problem? Thank you for help!</p>"	2020-12-17 15:38:51.513 UTC	65416836	"<p>Not really solved, but I found a solution to the undefined problem:</p> <p>As some others have mentioned, it is the bare return: If you replace it with a return grid it will give you the array.</p> <p>The next problem is, that the grid doesn't get solved correctly</p> <p>I tried commenting out your grid[y][x] = 0, which gave me better results but still not a solved grid:</p> <p>with grid[y][x] = 0:</p> <pre><code>[ [1,7,2,0,0,0,0,0,0], [0,0,0,0,0,0,0,1,0], [0,0,0,5,1,4,0,9,0], [0,3,0,9,0,5,0,8,0], [0,2,7,8,0,1,5,6,0], [0,5,0,4,0,2,0,7,0], [0,0,0,7,4,9,0,3,0], [0,0,0,0,0,0,0,2,0], [4,8,6,0,0,0,0,0,0]]; </code></pre> <p>without grid[y][x] = 0:</p> <pre><code>[ [1,7,2,3,9,8,4,5,6], [5,4,9,2,6,7,8,1,3], [3,6,8,5,1,4,2,9,7], [6,3,4,9,7,5,1,8,2], [9,2,7,8,3,1,5,6,4], [8,5,1,4,0,2,0,7,0], [0,0,0,7,4,9,0,3,0], [0,0,0,0,0,0,0,2,0], [4,8,6,0,0,0,0,0,0]]; </code></pre> <p>I also tried giving the grid as function param through all the functions like solve(grid_to_solve), but that didn't change things for me</p> <p>I hope this will get you on the right track though</p>"			2020-12-22 22:49:19.337 UTC
65343782	javascript|python|recursion	Recursion working in Python but not in JavaScript	"<p>I'm new to Python, and for one of my first projects, I made a script for solving a given <a href=""https://en.wikipedia.org/wiki/Sudoku"" rel=""nofollow noreferrer"">Sudoku puzzle</a>. My script uses recursion to solve the puzzle. I tried to &quot;translate&quot; it to JavaScript to implement it on a website, but that didn't work. In the following you can find my Python and JS code.</p> <p><strong>Python</strong></p> <pre><code>import numpy as np sudoku = [[1,7,2,0,0,0,0,0,0],             [0,0,0,0,0,0,0,1,0],             [0,0,0,5,1,4,0,9,0],             [0,3,0,9,0,5,0,8,0],             [0,2,7,8,0,1,5,6,0],             [0,5,0,4,0,2,0,7,0],             [0,0,0,7,4,9,0,3,0],             [0,0,0,0,0,0,0,2,0],             [4,8,6,0,0,0,0,0,0]]  def isPossible(x,y,n):     global sudoku     for row in range(9):         if sudoku[row][x] == n:             return False     for col in range(9):         if sudoku[y][col] == n:             return False     x0 = (x//3)*3     y0 = (y//3)*3     for a in range(3):         for b in range(3):             if sudoku[y0+a][x0+b] == n:                 return False     return True  def solve():     global sudoku     for y in range(9):         for x in range(9):             if sudoku[y][x] == 0:                 for n in range(1,10):                     if isPossible(x,y,n):                         sudoku[y][x] = n                         solve()                         sudoku[y][x] = 0                 return     print(np.matrix(sudoku))  solve() #prints the solved puzzle </code></pre> <p><strong>JS</strong></p> <pre><code>let grid = [[1,7,2,0,0,0,0,0,0],     [0,0,0,0,0,0,0,1,0],     [0,0,0,5,1,4,0,9,0],     [0,3,0,9,0,5,0,8,0],     [0,2,7,8,0,1,5,6,0],     [0,5,0,4,0,2,0,7,0],     [0,0,0,7,4,9,0,3,0],     [0,0,0,0,0,0,0,2,0],     [4,8,6,0,0,0,0,0,0]];  function isPossible(x,y,n){     for(let i = 0; i &lt; 9; i++){         if(grid[y][i] === n){             return false;         }         if(grid[i][x] === n){             return false;         }     }     for(let i = 0; i &lt; 3; i++){         for(let j = 0; j &lt; 3; j++){             if(grid[Math.floor(y/3)*3+i][Math.floor(x/3)*3+j] === n){                 return false;             }         }     }     return true; }  function solve() {     for(let y = 0; y &lt; 9; y++){         for(let x = 0; x &lt; 9; x++){             if(grid[y][x] === 0){                 for(let n = 1; n &lt; 10; n++){                     if(isPossible(x, y, n)){                         grid[y][x] = n;                         solve();                         grid[y][x] = 0;                     }                 }                 return;             }         }     }     return grid; }  /* * prints 'undefined' when there are only a few blanks (0's) in the array * and is loading way longer than python if there are many blanks like in the example * array above */ console.log(solve()); </code></pre> <p>Do Python and JS treat the return statement differently? Is something else the problem? Thank you for help!</p>"	2020-12-17 15:38:51.513 UTC	65426322	"<p>Your code is a fairly faithful translation of the Python, except for one thing.  You change Python's <code>print</code> call into a <code>return grid</code> statement.  The problem is that the way your loops are structured, we are never actually returning the completed grid, in either Python or JS.  If you replace that line with <code>console.log(grid)</code>, you will print the return just as does the Python code.</p> <p>I would probably code a Sudoku solver quite differently, without depending upon a global grid, passing it through the functions and returning something.  But if you want as faithful a translation of the Python as possible, I would write a <code>range</code> helper function to use with <code>for-of</code>.  (I would also write a simple formatting function to replace <code>np.matrix</code>.)  This would do it:</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-js lang-js prettyprint-override""><code>const range = (min, max) =&gt;    max == undefined ? range (0, min) : [...Array(max - min)].map((_, i) =&gt; i + min)  const matrix = (grid) =&gt;   grid .map (row =&gt; row .join (' ')) .join ('\n')  function isPossible (x, y, n) {   for (let row of range (9)) {     if (sudoku [y] [row] === n) {       return false     }   }   for (let col of range (9)) {     if (sudoku [col] [x] === n) {       return false;     }   }   let x0 = Math.floor (x / 3) * 3   let y0 = Math.floor (y / 3) * 3   for (let a of range (3)) {     for (let b of range (3)) {       if (sudoku [y0 + a] [x0 + b] === n) {         return false       }     }   }   return true }  function solve() {   for (let y of range (9)) {     for (let x of range (9)){       if (sudoku [y] [x] === 0){         for (let n of range (1, 10)) {           if (isPossible (x, y, n)) {             sudoku [y] [x] = n             solve ()             sudoku [y] [x] = 0           }         }         return       }     }   }   //************************************************************   console .log (matrix (sudoku)); // This is the important change!   //************************************************************ }  let sudoku = [   [1,7,2,0,0,0,0,0,0],   [0,0,0,0,0,0,0,1,0],   [0,0,0,5,1,4,0,9,0],   [0,3,0,9,0,5,0,8,0],   [0,2,7,8,0,1,5,6,0],   [0,5,0,4,0,2,0,7,0],   [0,0,0,7,4,9,0,3,0],   [0,0,0,0,0,0,0,2,0],   [4,8,6,0,0,0,0,0,0] ]   solve()</code></pre> </div> </div> </p> <p>(No critique is intended of your changes to <code>isPossible</code>; they should work fine.  This simply attempts to be as close to the Python as the differing syntaxes allow.)</p> <p>But again, yours will print the result with only that single change.</p> <p>So, no it has nothing to do with how Python and JS <code>return</code> works.  It's that you changed a <code>print</code> into a <code>return</code>.</p>"			2020-12-23 14:56:28.127 UTC
65361184	javascript|python|jupyter|scrape	Python web scraping with requests and beautiful soup blocked by needing javascript	"<p>I am trying to scrape text from a website. I use the simple code: requests.get(url_here). My code has worked until recently. Now, when I use requests, instead of getting the site's text, I get a message saying:</p> <p>&quot;The site requires JavaScript to be enabled! The browser you're using doesn't support JavaScript, or has JavaScript turned off.&quot;</p> <p>I have verified that my browser does have javascript enabled. Is there a way around this?</p> <p>Working in Python with a Jupyter notebook on a Mac, for reference.</p>"	2020-12-18 17:15:40.39 UTC	65361396	"<p>Here is a small article that was written by me. It is a very basic web scraping of the BookMyShow website. I hope it will work for you.</p> <p><a href=""https://medium.com/analytics-vidhya/introduction-to-web-scraping-258d5f117357"" rel=""nofollow noreferrer"">Introduction to Web Scraping</a></p>"			2020-12-18 17:31:39.333 UTC
65379178	javascript|python|linux|selenium-chromedriver	"""JavaScript is not available"" (Python, Selenium, Chromedriver and Ubuntu)"	"<p>I am trying to scrape some data from a webpage (Twitter). When I run my program on my computer (Windows 10), it works fine. But when I try to run it on a Linux server, the html that I get from the webpage says:</p> <pre><code>&lt;h1&gt;JavaScript is not available.&lt;/h1&gt;  &lt;p&gt;We've detected that JavaScript is disabled in this browser. Please enable JavaScript or switch to a supported browser to continue using twitter.com. You can see a list of supported browsers in our Help Center.&lt;/p&gt; </code></pre> <p>My code is the following:</p> <pre><code>browser_path = '/usr/bin/chromedriver' chrome_options = Options() chrome_options.add_argument(&quot;--disable-extensions&quot;) chrome_options.add_argument(&quot;--disable-gpu&quot;) chrome_options.add_argument(&quot;--headless&quot;) chrome_options.add_argument(&quot;--enable-javascript&quot;) browser = webdriver.Chrome(executable_path = browser_path, options=chrome_options) </code></pre> <p>Can anyone help me to find the problem and fix it please? Thank you very much in advance</p>"	2020-12-20 11:00:46.127 UTC	65379488	"<p>I don't think chrome supports chromedriver anymore, try scraping on FireFox with using FireFox's geckodriver</p>"			2020-12-20 11:41:49.307 UTC
65392050	javascript|python|flask|apexcharts	Passing a python list to Javascript list for Apexcharts	"<p>Im passing my python list to a html element and reading it with JS, but i get this error below.</p> <pre><code>    var test = document.querySelector('#my_variable').value     document.write(test)      var options = {       series: [{         name: &quot;Desktops&quot;,         data: test </code></pre> <p><a href=""https://i.stack.imgur.com/zBX8q.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/zBX8q.png"" alt=""enter image description here"" /></a></p> <p><a href=""https://i.stack.imgur.com/1E71b.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/1E71b.png"" alt=""enter image description here"" /></a></p> <p><a href=""https://i.stack.imgur.com/h9mXb.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/h9mXb.png"" alt=""enter image description here"" /></a></p>"	2020-12-21 11:36:02.407 UTC	65392749	"<p>When you move data between different programming languages, you use some kind of intermediary. When working with JavaScript, it's almost impossible to avoid using JSON, as that's it's native intermediary. You can use it in many more places, but that's beside the point.</p> <p>Python also natively supports JSON with it's <a href=""https://docs.python.org/3/library/json.html"" rel=""nofollow noreferrer"">json module</a>. You should convert any data you have to a Python dictionary or list, which you can then turn into a JSON string using the module.</p> <p>You can then pass that string to the frontend, from where you can parse it with <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON"" rel=""nofollow noreferrer"">JavaScript's JSON</a>, which should solve your problem, or at the very least get you closer to a solution.</p>"			2020-12-21 12:26:09.27 UTC
65403964	javascript|python	Wish to Know Better Strategy for Fetching Multiple URLS Javascript + Python	"<p>I have bunch of urls to fetch. I wish to know which one would be better strategy for speed and good User experience.</p> <p>Strategy:</p> <ol> <li>Using Javascript (fetch or XHR). All urls will be fetched on client side.</li> <li>Send only one fetch/XHR (calling python in JS) to python and get all the URL's data in python and send back the response to client.</li> </ol> <p>Please let me know which one would be better strategy.</p> <p>Thank you, Namratha Patil.</p>"	2020-12-22 06:07:01.323 UTC	65404063	<p>You can <code>priorities</code> your data loading on may factors like:</p> <blockquote> <p>Whether the data is required in first fold to render elements and similar factors. if you go with 2nd strategy if will delay the loading and you will have bad user experience.</p> </blockquote>			2020-12-22 06:19:39.387 UTC
65403964	javascript|python	Wish to Know Better Strategy for Fetching Multiple URLS Javascript + Python	"<p>I have bunch of urls to fetch. I wish to know which one would be better strategy for speed and good User experience.</p> <p>Strategy:</p> <ol> <li>Using Javascript (fetch or XHR). All urls will be fetched on client side.</li> <li>Send only one fetch/XHR (calling python in JS) to python and get all the URL's data in python and send back the response to client.</li> </ol> <p>Please let me know which one would be better strategy.</p> <p>Thank you, Namratha Patil.</p>"	2020-12-22 06:07:01.323 UTC	65403974	"<p>The network requests are computationally expensive, so batching and sending only one request is almost always preferable.</p>"			2020-12-22 06:08:18.973 UTC
65409548	python|selenium|automation|modal-dialog|popup	Python selenium code seems to wait after calling javascript that display modal dialog box	"<p>I'm using Python and Selenium to write an automation script in Internet Explorer.</p> <p>When the web page throws up some kind of modal dialog box, the Python code stops running and just waits for some action to be taken on the popup.  After you press the &quot;yes&quot; or &quot;no&quot; button, then the Python code continues.</p> <p>I believe the underlying Javascript function that is getting called (saveClicked()) is generating the popup box using this line of code: var result=window.showModalDialog('whatever....')</p> <p>Does anyone know how to handle this in Selenium? I want my code to click &quot;ok&quot; in this window or to just accept it. I tried right-clicking on the window to look at source code, etc. but those options are not given to me...the only options are &quot;move/close&quot;.</p> <p>I've looked to see if there is some kind of default IE capability in Selenium that will just automatically accept all modal dialog boxes but haven't found any. I also thought of maybe wrapping the call to the Javascript function with something that would somehow send a keystroke to the alert.  I'm open to anything!</p> <p>Here is the code:  It never moves past the .execute_script line...it just sits there waiting.</p> <pre><code>print('Saving')  # I have to do this because I can't get the handle to the save button # using any of the known Selenium methods but calling the JS works driver.execute_script('saveClicked();')  print('Test') driver.switch_to().alert().send_keys(Keys.ENTER) </code></pre> <p>The code just STOPS after the Javascript is executed and never moves to the print('test') line or any other code I put there.</p> <p>Any python selenium code suggestions to solve this would be greatly appreciated.</p>"	2020-12-22 13:27:41.363 UTC	65410230	"<p>one way: you can try to use <code>Alert</code> to manage popups</p> <pre><code>Alert(driver).accept() </code></pre> <p>otherwise you can see the active window or tab with:</p> <pre><code>#get current window handle p = driver.current_window_handle  #get windows chwd = driver.window_handles  driver.switch_to.window(chwd[1])  </code></pre> <p>reference: <a href=""https://selenium-python.readthedocs.io/api.html#module-selenium.webdriver.common.alert"" rel=""nofollow noreferrer"">https://selenium-python.readthedocs.io/api.html#module-selenium.webdriver.common.alert</a></p>"			2020-12-22 14:14:25.787 UTC
65409548	python|selenium|automation|modal-dialog|popup	Python selenium code seems to wait after calling javascript that display modal dialog box	"<p>I'm using Python and Selenium to write an automation script in Internet Explorer.</p> <p>When the web page throws up some kind of modal dialog box, the Python code stops running and just waits for some action to be taken on the popup.  After you press the &quot;yes&quot; or &quot;no&quot; button, then the Python code continues.</p> <p>I believe the underlying Javascript function that is getting called (saveClicked()) is generating the popup box using this line of code: var result=window.showModalDialog('whatever....')</p> <p>Does anyone know how to handle this in Selenium? I want my code to click &quot;ok&quot; in this window or to just accept it. I tried right-clicking on the window to look at source code, etc. but those options are not given to me...the only options are &quot;move/close&quot;.</p> <p>I've looked to see if there is some kind of default IE capability in Selenium that will just automatically accept all modal dialog boxes but haven't found any. I also thought of maybe wrapping the call to the Javascript function with something that would somehow send a keystroke to the alert.  I'm open to anything!</p> <p>Here is the code:  It never moves past the .execute_script line...it just sits there waiting.</p> <pre><code>print('Saving')  # I have to do this because I can't get the handle to the save button # using any of the known Selenium methods but calling the JS works driver.execute_script('saveClicked();')  print('Test') driver.switch_to().alert().send_keys(Keys.ENTER) </code></pre> <p>The code just STOPS after the Javascript is executed and never moves to the print('test') line or any other code I put there.</p> <p>Any python selenium code suggestions to solve this would be greatly appreciated.</p>"	2020-12-22 13:27:41.363 UTC	65412327	<p>Try:</p> <pre><code>message = &quot;saveClicked()&quot;  # or any other of your messages  driver.execute_script(f&quot;alert(\&quot;{message}\&quot;);&quot;) driver.switch_to.alert.accept() </code></pre>			2020-12-22 16:29:43.133 UTC
65428535	javascript|python|python-3.x|dynamic-programming	Why does this solution work in Javascript but not in Python? (Dynamic programming)	"<p>I'm following this tutorial about dynamic programming and I'm struggling to implement memoization in the following problem:</p> <p>*Write a function called <code>canSum(targetSum, numbers)</code> that returns <code>True</code> only if the numbers in the array can sum to the target sum. All the numbers in the array are positive integers and you can use them more than once for the solution.</p> <p>Example:</p> <p><code>canSum(7, [2, 4]) -&gt; False</code> because you can't form 7 by adding 2 and 4. *</p> <p>My brute force solution was the following one:</p> <pre><code>def canSum(targetSum, numbers):     if targetSum == 0:         return True     if targetSum &lt; 0:         return False      for n in numbers:         remainder = targetSum - n         if canSum(remainder, numbers):             return True      return False   print(canSum(7, [2, 3])) # True print(canSum(7, [5, 3, 4, 7])) # True print(canSum(7, [2, 4])) # False print(canSum(8, [2, 3, 5])) # True </code></pre> <p>Works well, but it'd be faster if we memoized the solutions of the remainders (this is explained at minute 1:28:03 in the video). I did the following with Python, which is exactly what the instructor is doing, but it only returns <code>True</code> and I can't figure out why...</p> <pre><code>def canSum(targetSum, numbers, memo={}):     if targetSum in memo:         return memo[targetSum]     if targetSum == 0:         return True     if targetSum &lt; 0:         return False      for n in numbers:         remainder = targetSum - n         if canSum(remainder, numbers, memo):             memo[targetSum] = True             return True      memo[targetSum] = False     return False   print(canSum(7, [2, 3])) print(canSum(7, [5, 3, 4, 7])) print(canSum(7, [2, 4])) print(canSum(8, [2, 3, 5])) # All of them return True </code></pre>"	2020-12-23 17:34:29.63 UTC	65429179	"<p>Thanks to the article shared by @Jared Smith I was able to figure it out.</p> <p>The problem is caused by how python handles default arguments. From the article:</p> <blockquote> <p>In Python, when passing a mutable value as a default argument in a function, the default argument is mutated anytime that value is mutated.</p> </blockquote> <p>My <code>memo</code> dictionary was being mutated every call. So I simply changed <code>memo=None</code> and added a check to see if it was the first call of the function:</p> <pre><code>def canSum(targetSum, numbers, memo=None):     if memo == None:         memo = {}      if targetSum in memo:         return memo[targetSum]     if targetSum == 0:         return True     if targetSum &lt; 0:         return False      for n in numbers:         remainder = targetSum - n         if canSum(remainder, numbers, memo):             memo[targetSum] = True             return True      memo[targetSum] = False     return False   print(canSum(7, [2, 3])) # True print(canSum(7, [5, 3, 4, 7])) # True print(canSum(7, [2, 4])) # False print(canSum(8, [2, 3, 5])) # True print(canSum(3000, [7, 14])) # False -&gt; Works fast with large inputs! </code></pre>"			2020-12-23 18:29:38.647 UTC
65428535	javascript|python|python-3.x|dynamic-programming	Why does this solution work in Javascript but not in Python? (Dynamic programming)	"<p>I'm following this tutorial about dynamic programming and I'm struggling to implement memoization in the following problem:</p> <p>*Write a function called <code>canSum(targetSum, numbers)</code> that returns <code>True</code> only if the numbers in the array can sum to the target sum. All the numbers in the array are positive integers and you can use them more than once for the solution.</p> <p>Example:</p> <p><code>canSum(7, [2, 4]) -&gt; False</code> because you can't form 7 by adding 2 and 4. *</p> <p>My brute force solution was the following one:</p> <pre><code>def canSum(targetSum, numbers):     if targetSum == 0:         return True     if targetSum &lt; 0:         return False      for n in numbers:         remainder = targetSum - n         if canSum(remainder, numbers):             return True      return False   print(canSum(7, [2, 3])) # True print(canSum(7, [5, 3, 4, 7])) # True print(canSum(7, [2, 4])) # False print(canSum(8, [2, 3, 5])) # True </code></pre> <p>Works well, but it'd be faster if we memoized the solutions of the remainders (this is explained at minute 1:28:03 in the video). I did the following with Python, which is exactly what the instructor is doing, but it only returns <code>True</code> and I can't figure out why...</p> <pre><code>def canSum(targetSum, numbers, memo={}):     if targetSum in memo:         return memo[targetSum]     if targetSum == 0:         return True     if targetSum &lt; 0:         return False      for n in numbers:         remainder = targetSum - n         if canSum(remainder, numbers, memo):             memo[targetSum] = True             return True      memo[targetSum] = False     return False   print(canSum(7, [2, 3])) print(canSum(7, [5, 3, 4, 7])) print(canSum(7, [2, 4])) print(canSum(8, [2, 3, 5])) # All of them return True </code></pre>"	2020-12-23 17:34:29.63 UTC	65429205	"<p>You saving mechanism have bug.</p> <p>When you call function first time:</p> <pre><code>print(canSum(7, [2, 3])) </code></pre> <p>This call will return true and it will create key in dictionary with value true( 7 : true).<br /> This is the reason why it doesnt work</p> <p>Now we will check 3rd call:</p> <pre><code>print(canSum(7, [2, 4])) </code></pre> <p>First thing your function is doing is checking if number 7 is in dictionary:</p> <pre><code>if targetSum in memo:     return memo[targetSum] </code></pre> <p>And because from 1st call you alredy have number 7 in dictionary , it will search it and return its value - and from 1st call , value for number 7 is <strong>True</strong></p> <p>This is dictionary before and after first call.</p> <pre><code>{}                                    # before first call {1: False, 3: True, 5: True, 7: True} # after first call </code></pre> <p>After first call , this dictionary will return True for every time you call function with number 7.<br /> And because Python share default argument (it is explained in comment by Jared Smith), every call will return True for number 7</p> <p>How to fix this ? You must save both targetSum and nums into dictionary and test for both values.</p> <p>There are two ways to do this:</p> <p>1st way: Encapsulate targetSum and nums into tuple and use that tuple as key.<br /> This is how will that dict will look</p> <pre><code>{   (7, (2, 3)) : True,   (7, (5, 3, 4, 7)) : True,   (7, (2, 4)) : False } </code></pre> <p>This is implementation of this:</p> <pre><code>keyTuple = (targetSum, tuple(numbers)) if keyTuple in memo:     return memo[keyTuple]  if targetSum == 0:     return True if targetSum &lt; 0:     return False  for n in numbers:     remainder = targetSum - n     if canSum(remainder, numbers, memo):         memo[keyTuple] = True         return True  memo[keyTuple] = False return False </code></pre> <p>You must also convert list into tuple , because python doesnt allow lists as keys for dictionaries.</p> <p>Second way is use dictionary of dictionaries. Something like this.</p> <pre><code>{  7: {    (2,3): True,    (5, 3, 4, 7): True    (2,4): False  }  } </code></pre> <p>This is implementation :</p> <pre><code>def canSum(targetSum, numbers, memo={}): numbersTuple = tuple(numbers)  if targetSum in memo:     targetDict = memo[targetSum]     if numbersTuple in targetDict:         return targetDict[numbersTuple] else:     memo[targetSum] = {}  if targetSum == 0:     return True if targetSum &lt; 0:     return False  for n in numbers:     remainder = targetSum - n     if canSum(remainder, numbers, memo):         targetDict = memo[targetSum]         targetDict[numbersTuple] = True         return True  targetDict = memo[targetSum] targetDict[numbersTuple] = False return False </code></pre> <p>If you dont understand something , write comment for me :)</p>"			2020-12-23 18:31:38.253 UTC
65457709	javascript|python|graphing	Modify python array using graphical interaction (Bokeh or Javascript)	"<p>I have a 1-D numpy array eg.[1,0,6,3,2,1,6,4,3,2,1] which I have been able to graphically display as a histogram graph using the Bokeh Library.</p> <p>I would like to be able to modify the array using graphical interaction.</p> <p>Ideally I would like to be able to shift 1 value at a time.</p> <p>Any ideas would be appreciated :)</p> <p><a href=""https://i.stack.imgur.com/8zMBE.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/8zMBE.png"" alt=""Example"" /></a> <a href=""https://i.stack.imgur.com/An4yj.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/An4yj.png"" alt=""enter image description here"" /></a></p> <pre><code>import numpy as np import pandas as pd from bokeh.models import ColumnDataSource, Grid, LinearAxis, Plot, Quad,Range1d,HoverTool, Panel, Tabs,Legend, LegendItem,FixedTicker,NumeralTickFormatter,SingleIntervalTicker from bokeh.plotting import figure from bokeh.embed import components from bokeh.io import curdoc, show  #------------------------------------------------------------------------------------------------- # Create Data #------------------------------------------------------------------------------------------------- Values= np.random.randint(0,6000,800)   def Values_to_Bins(Values, Bin_size): #takes in a numpy array of values, and the Bin size     Min_Value = np.amin(Values)     Max_Value =np.amax(Values)     bins = np.arange(Min_Value, Max_Value + 2 * (Bin_size), Bin_size)  # Define bin edges     hist_array, edges = np.histogram(Values,bins=bins)  # Create 2 arrays, hist_array represents the bin counts, edges is the bin edges     return hist_array,edges #Returns the histogram array, and edges # ------------------------------------------------------------------------------------------------- # STEP X: Create Bokeh Histogram Plots # ------------------------------------------------------------------------------------------------- hist_array,edges = Values_to_Bins(Values, 15)  # Create a Pandas Dataframe  Bokeh_Bins = pd.DataFrame({'Values': hist_array, 'left': edges[:-1], 'right': edges[1:]}) Max_Initial_Bin = Bokeh_Bins['Values'].max()  # Create a column showing the extent of each interval Bokeh_Bins['Bin_interval'] = ['%d to %d ms' % (left, right) for left, right in                               zip(Bokeh_Bins['left'], Bokeh_Bins['right'])]  tick_vals = np.arange(Max_Initial_Bin + 1)  # Convert dataframe to column data source src1 = ColumnDataSource(Bokeh_Bins)  plot = figure(y_range=Range1d(start=0, end=Max_Initial_Bin), sizing_mode=&quot;scale_width&quot;, width=3000, height=600,               title=&quot;Want to create interactive Histogram data&quot;,               x_axis_label=&quot;Time (ms)&quot;,               y_axis_label=&quot;Number of occurances&quot;) plot.yaxis.ticker = FixedTicker(ticks=list(tick_vals))  plot.quad(bottom=0, top='Values', left='left',           right='right', source=src1, fill_color=&quot;#939393&quot;,           line_color='black', fill_alpha=0.5,           hover_fill_alpha=1.0, hover_fill_color='#00E400')  # Add hover tool for when mouse is over data hover1 = HoverTool(tooltips=[('Timeframe', '@Bin_interval'), ('Count', '@Values')]) plot.add_tools(hover1) original_script, original_div = components(plot) show(plot) </code></pre>"	2020-12-26 15:05:46.073 UTC	65466424	"<p>For making interaction modification with <code>Boken</code>, you can add a <code>Widgets</code> like <code>sliders</code> and others in which any modification made with these widgets will fire the corresponding call back functions. you can find good information at the following link:</p> <pre><code>https://docs.bokeh.org/en/latest/docs/user_guide/interaction/widgets.html </code></pre> <p>in that link, you will find plenty of examples in python.</p> <p>and of course, welcome other support, I would give.</p>"			2020-12-27 13:47:29.407 UTC
65457709	javascript|python|graphing	Modify python array using graphical interaction (Bokeh or Javascript)	"<p>I have a 1-D numpy array eg.[1,0,6,3,2,1,6,4,3,2,1] which I have been able to graphically display as a histogram graph using the Bokeh Library.</p> <p>I would like to be able to modify the array using graphical interaction.</p> <p>Ideally I would like to be able to shift 1 value at a time.</p> <p>Any ideas would be appreciated :)</p> <p><a href=""https://i.stack.imgur.com/8zMBE.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/8zMBE.png"" alt=""Example"" /></a> <a href=""https://i.stack.imgur.com/An4yj.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/An4yj.png"" alt=""enter image description here"" /></a></p> <pre><code>import numpy as np import pandas as pd from bokeh.models import ColumnDataSource, Grid, LinearAxis, Plot, Quad,Range1d,HoverTool, Panel, Tabs,Legend, LegendItem,FixedTicker,NumeralTickFormatter,SingleIntervalTicker from bokeh.plotting import figure from bokeh.embed import components from bokeh.io import curdoc, show  #------------------------------------------------------------------------------------------------- # Create Data #------------------------------------------------------------------------------------------------- Values= np.random.randint(0,6000,800)   def Values_to_Bins(Values, Bin_size): #takes in a numpy array of values, and the Bin size     Min_Value = np.amin(Values)     Max_Value =np.amax(Values)     bins = np.arange(Min_Value, Max_Value + 2 * (Bin_size), Bin_size)  # Define bin edges     hist_array, edges = np.histogram(Values,bins=bins)  # Create 2 arrays, hist_array represents the bin counts, edges is the bin edges     return hist_array,edges #Returns the histogram array, and edges # ------------------------------------------------------------------------------------------------- # STEP X: Create Bokeh Histogram Plots # ------------------------------------------------------------------------------------------------- hist_array,edges = Values_to_Bins(Values, 15)  # Create a Pandas Dataframe  Bokeh_Bins = pd.DataFrame({'Values': hist_array, 'left': edges[:-1], 'right': edges[1:]}) Max_Initial_Bin = Bokeh_Bins['Values'].max()  # Create a column showing the extent of each interval Bokeh_Bins['Bin_interval'] = ['%d to %d ms' % (left, right) for left, right in                               zip(Bokeh_Bins['left'], Bokeh_Bins['right'])]  tick_vals = np.arange(Max_Initial_Bin + 1)  # Convert dataframe to column data source src1 = ColumnDataSource(Bokeh_Bins)  plot = figure(y_range=Range1d(start=0, end=Max_Initial_Bin), sizing_mode=&quot;scale_width&quot;, width=3000, height=600,               title=&quot;Want to create interactive Histogram data&quot;,               x_axis_label=&quot;Time (ms)&quot;,               y_axis_label=&quot;Number of occurances&quot;) plot.yaxis.ticker = FixedTicker(ticks=list(tick_vals))  plot.quad(bottom=0, top='Values', left='left',           right='right', source=src1, fill_color=&quot;#939393&quot;,           line_color='black', fill_alpha=0.5,           hover_fill_alpha=1.0, hover_fill_color='#00E400')  # Add hover tool for when mouse is over data hover1 = HoverTool(tooltips=[('Timeframe', '@Bin_interval'), ('Count', '@Values')]) plot.add_tools(hover1) original_script, original_div = components(plot) show(plot) </code></pre>"	2020-12-26 15:05:46.073 UTC	65559095	"<p>Each bar in the histogram corresponds to a set of data points. You need some rule (pick one at random? the smallest? the largest?) to move. Then when you move it to another bin, you also need to choose the value at which to set it (the bin center? left or right edge?  somewhere uniformly in the bin).</p> <p>Once you have made those choices, it shouldn't be too hard to implement a callback where that implements the following pseudocode.</p> <pre><code>   [bin_edges, bin_counts, data_map] = histogram(data)    [bin, y] = picked_bin() # This returns the value of your 1st mouse click    [newbin, newy] = set_bin() # This returns the value of your 2nd mouse click    possible_points = bin_edges[data_map] == x    old_datum_ind = pick_one(data, possible_points)    data[old_datum_ind] = assign_new_value(newx) </code></pre> <p>The key info is that <code>data_map</code> which is the same length as data but is the index that maps each datum in data to a bin. This lets you easily find out the data points corresponding to each bin.</p>"			2021-01-04 07:32:46.277 UTC
65461940	python|python-re	Python regex cuts off javascript variable after first semicolon	"<p>How can I the entire content of the variable, so that getvar() returns <code>&quot;hello; this should be included&quot;</code> instead of <code>&quot;hello</code>? How would I change the regex pattern to make it work?</p> <pre><code>import re  def getvar(string, variable):     return re.findall('var ' + variable + ' = (.*?);', string)[0]  print(getvar(&quot;&quot;&quot;&lt;script&gt;var first_variable = &quot;hello; this should be included&quot;;&lt;/script&gt;&quot;&quot;&quot;, 'first_variable')) </code></pre>"	2020-12-27 00:21:21.513 UTC	65462007	"<p>In the example you've provided, we can get that grouping by slightly altering the Regex you've provided.</p> <pre><code>def getvar(string, variable): return re.findall('var ' + variable + ' = (.*);', string)[0] </code></pre> <p>This will return <code>&quot;hello; this should be included&quot;</code> Although it is important to remember that this method will fail if the string you provide does not find a match.</p>"			2020-12-27 00:34:01.077 UTC
65473447	javascript|python|django	How to pass python string to javascript as string in Django?	"<p>I have a python string which is javascript code and I want to pass this string to javascript as string too.</p> <p>My idea is to pass python string to javascript string and then use <strong>eval()</strong> function in javascript to turn that string to actual code and execute it.</p> <pre class=""lang-py prettyprint-override""><code>def login(request):     success = '''       window.location = '{% url 'home' %}';       # some other codes     '''     return render(request, &quot;app/login.html&quot;, {'success': success}) </code></pre> <pre class=""lang-js prettyprint-override""><code>var code = &quot;{{success}}&quot; console.log(code) // return Uncaught SyntaxError: Invalid or unexpected token </code></pre> <p>I have also tried pass the string as json like this</p> <pre class=""lang-py prettyprint-override""><code>def login(request):     success = '''       window.location = '{% url 'home' %}';       # some other codes     '''     success = json.dumps(success)     return render(request, &quot;app/login.html&quot;, {'success': success}) </code></pre> <pre class=""lang-js prettyprint-override""><code>var code = JSON.parse(&quot;{{success|safe}}&quot;); console.log(code) //return Uncaught SyntaxError: missing ) after argument list </code></pre> <p>Last thing that I have tried is</p> <pre class=""lang-py prettyprint-override""><code>def login(request):     success = '''       window.location = '{% url 'home' %}';       # some other codes     '''     return render(request, &quot;app/login.html&quot;, {'success': success}) </code></pre> <pre class=""lang-js prettyprint-override""><code>&lt;h3 id=&quot;success_id&quot; hidden&gt;{{success}}&lt;/h3&gt;  &lt;script&gt;  var code = $(&quot;#success_id&quot;).text(); console.log(code) //return window.location = &quot;{% url 'home' %}&quot;  // if i do this var code = &quot;window.location = '{% url 'home' %}'&quot;; console.log(code) // return window.location = /app/home/  // I want it to return the url like /app/home &lt;/script&gt; </code></pre> <p>How can I do this?</p>"	2020-12-28 05:43:27.95 UTC	65474710	"<p>Ok in essence what you want to do is using Django to pass data to js?</p> <p>That has to to do with Django creating a Json Response which the JavaScript will then make a request , in essence you are working with some API.</p> <p>your view code where you wrote the render function won't need that anymore...</p> <p>Something like</p> <pre><code>JsonResponse({'success':success})   </code></pre> <p>will be needed , after importing the JsonResponse from 'django.http'</p> <p>Then at the js file, you will have to use Ajax to call that url with it's required method to get the data needed.</p> <p>in your script tag , you will then need something like this</p> <pre><code>const xhr= new XMLHttpRequest () xhr.open('django_url', 'method') xhr.onload = function () {       const msg = xhr.response.success } xhr.send()  </code></pre> <p>If you are familiar with fetch or axios you can as well use any library of your choice.</p> <p>the django_url refers to the url that connects that view the method refers to the http_method, either a 'GET' or 'POST' (most commonly used) .</p>"			2020-12-28 08:21:38.083 UTC
65475959	javascript|python|xpath|html-table|urllib2	How to pull the table data that is generated with javascript from a website using Python?	"<p>My goal is to get only the data from a specific table in a website. If possible, opened website could be run on the background preventing to pop-up.</p> <p>I have tried <a href=""https://stackoverflow.com/a/8960386/2402577"">Get page generated with Javascript in Python</a> answer to apply, but it dumps all the data in the site rather than only the table. My best option is to parse it from there. As alternative I have tried <a href=""https://stackoverflow.com/a/10556133/2402577"">How to extract tables from websites in Python</a> answer but returned list object is empty.</p> <hr /> <p>As an example, I want to pull table (given information under the <code>Symbol Size Entry_Price Mark_Price PNL</code>) that is located at the bottom of the page from <a href=""https://www.binance.com/en/futuresng-activity/leaderboard/7E32B49490355C9FCCAA709A1D364AA6?tradeType=PERPETUAL"" rel=""nofollow noreferrer"">this site</a>.</p> <p>How can I achive this? While achieving it can the opened browser open on the background preventing the focus to itself?</p>"	2020-12-28 10:11:51.077 UTC	65476157	"<p>you can use <code>BeuatifulSoup or bs4 with requests</code> for example:</p> <pre><code>import requests from bs4 import BeautifulSoup   r=requests.get(&quot;&quot;) #url over here this will not open the browser soup = BeautifulSoup(r.text, 'html.parser') for table in soup.find_all('table'):     print(table) </code></pre> <p>This code will print all the tables and then you can see the data and use if statements to come to a conclusion.</p>"			2020-12-28 10:25:25.747 UTC
65475959	javascript|python|xpath|html-table|urllib2	How to pull the table data that is generated with javascript from a website using Python?	"<p>My goal is to get only the data from a specific table in a website. If possible, opened website could be run on the background preventing to pop-up.</p> <p>I have tried <a href=""https://stackoverflow.com/a/8960386/2402577"">Get page generated with Javascript in Python</a> answer to apply, but it dumps all the data in the site rather than only the table. My best option is to parse it from there. As alternative I have tried <a href=""https://stackoverflow.com/a/10556133/2402577"">How to extract tables from websites in Python</a> answer but returned list object is empty.</p> <hr /> <p>As an example, I want to pull table (given information under the <code>Symbol Size Entry_Price Mark_Price PNL</code>) that is located at the bottom of the page from <a href=""https://www.binance.com/en/futuresng-activity/leaderboard/7E32B49490355C9FCCAA709A1D364AA6?tradeType=PERPETUAL"" rel=""nofollow noreferrer"">this site</a>.</p> <p>How can I achive this? While achieving it can the opened browser open on the background preventing the focus to itself?</p>"	2020-12-28 10:11:51.077 UTC	65476140	"<p>This code prints all HTML tables starting with index 0, 1, and so on...</p> <pre><code>tables1 = pd.read_html('https://www.binance.com/en/futuresng-activity/leaderboard/7E32B49490355C9FCCAA709A1D364AA6?tradeType=PERPETUAL')  tables1[0]  #or #tables1[1] #or #tables[2] </code></pre>"			2020-12-28 10:24:18.667 UTC
