14124757	javascript	JavaScript equivalent to Python's import?	"<blockquote>   <p><strong>Possible Duplicate:</strong><br>   <a href=""https://stackoverflow.com/questions/950087/include-javascript-file-inside-javascript-file"">Include JavaScript file inside JavaScript file?</a>  </p> </blockquote>    <p>Is there any way to simply import a JavaScript library into a JavaScript file?</p>  <p>In Python, you can simply do this:</p>  <pre><code>import math </code></pre>  <p>Is there anything similar in JavaScript?</p>"	2013-01-02 15:40:13.3 UTC	14124856	"<p>You can have a look at this question (and the answers as well...) : <a href=""https://stackoverflow.com/questions/950087/include-javascript-file-inside-javascript-file"">How do I include a JavaScript file in another JavaScript file?</a></p>  <p>I especially like the <a href=""http://api.jquery.com/jQuery.getScript/"" rel=""nofollow noreferrer"">getScript()</a> function of jQuery : </p>  <pre><code>$.getScript(""my_lovely_script.js"", function(){    alert(""Script loaded and executed."");    // here you can use anything you defined in the loaded script }); </code></pre>"			2013-01-02 15:45:44.453 UTC
14124757	javascript	JavaScript equivalent to Python's import?	"<blockquote>   <p><strong>Possible Duplicate:</strong><br>   <a href=""https://stackoverflow.com/questions/950087/include-javascript-file-inside-javascript-file"">Include JavaScript file inside JavaScript file?</a>  </p> </blockquote>    <p>Is there any way to simply import a JavaScript library into a JavaScript file?</p>  <p>In Python, you can simply do this:</p>  <pre><code>import math </code></pre>  <p>Is there anything similar in JavaScript?</p>"	2013-01-02 15:40:13.3 UTC	14124791	"<p>In today's vanilla javascript, no, you can't do that.</p>  <p>But in a future version, a similar feature will probably be available. <a href=""http://wiki.ecmascript.org/doku.php?id=harmony%3amodules"" rel=""nofollow"">Modules are discussed from a long time</a>. And as a Python programmer, you might be interested by <a href=""http://css.dzone.com/articles/exciting-future-javascript-0"" rel=""nofollow"">this article</a> too.</p>  <p>Today you may</p>  <ul> <li>use one of the many frameworks enabling this kind of import, like <a href=""http://requirejs.org/"" rel=""nofollow"">require.js</a>.</li> <li>dynamically add a <code>&lt;script&gt;</code> element to your page (yes, it's ugly)</li> <li>fetch it using ajax and evaluating it (it's uglier)</li> </ul>  <p>But...</p>  <p>if you always import the same files, you should consider concatenating them (and minifying them), as the number of requested files is one of the main elements to consider when optimizing the performances of your site. </p>"			2013-01-02 15:42:04.163 UTC
14179988	javascript|python|unicode	"Is there a Javascript equivalent for Python's ""u"" Unicode prefix?"	"<p>I have a string that could look something like this: <code>\u1234hello\u1234\u1234</code>. I'd like to convert all the Unicode fragments of the string into their actual characters.</p>  <p>In Python, I'd just stick a <code>u</code> beforehand to specify that it's a <a href=""http://docs.python.org/2/tutorial/introduction.html#unicode-strings"" rel=""nofollow"">Unicode string</a> but how can I do this in Javascript?</p>  <p>Cheers</p>  <p>Gausie</p>"	2013-01-06 06:42:04.823 UTC	14180007	"<p>In JavaScript, all strings are Unicode. No <code>u</code> prefix is necessary, and all <code>\u</code> escapes will be recognized.</p>"			2013-01-06 06:44:23.61 UTC
14208166	javascript|python|qt|pyqt	How to put result of JavaScript function into python variable. PyQt	"<p>I want to make a function in PyQt evaluateJavaScript() (or may be similar one) and than display  a result of evaluated function. Real function will be much bigger, and it might not be a string.</p>  <p>I'm only interesting in how to create a function inside PyQt code and than get the result into python variable.</p>  <p>To be more clear I will give you an example: that's the js that I want to type in after <code>loadFinished</code> on <a href=""http://jquery.com"">http://jquery.com</a>:</p>  <pre><code>w = document.getElementsByTagName('p')[0]; w.innerHTML </code></pre>  <p>If I do it in browser console, I' will get an output:</p>  <pre><code>""jQuery is a fast and concise JavaScript Library ...... blah blah blah"" </code></pre>  <p>And I want to store this output in a variable.</p>  <pre><code>#!/usr/bin/env python  from PyQt4.QtCore import * from PyQt4.QtGui import * from PyQt4.QtWebKit import * import os, sys, signal from urllib2 import urlopen  class GBot(QWebView):      def __init__(self):         QWebView.__init__(self)         self.setPage(BrowserSettings())         #self.jquery = get_jquery()         self.load(QUrl('http://jquery.com'))         self.frame = self.page().currentFrame()      def _loadFinished(self, ok):         doc = self.frame.documentElement()         #doc.evaluateJavaScript(self.jquery)         r = doc.evaluateJavaScript('''w = document.getElementsByTagName('p')[0]; w.innerHTML''')         print r #want to do something like this   if __name__ == '__main__':     app = QApplication(sys.argv)     bot = GBot()     bot.show()     if signal.signal(signal.SIGINT, signal.SIG_DFL):         sys.exit(app.exec_())     app.exec_() </code></pre>"	2013-01-08 04:22:18.183 UTC	14213401	"<p>In this example first I create a <code>myWindow</code> javascript object by passing <code>self</code> to the main frame, then call <code>evaluateJavaScript</code> when <code>loadFinished</code>:</p>  <pre><code>#!/usr/bin/env python #-*- coding:utf-8 -*-  from PyQt4 import QtCore, QtGui, QtWebKit    getJsValue = """"""  w = document.getElementsByTagName('p')[0]; myWindow.showMessage(w.innerHTML); """"""    class myWindow(QtWebKit.QWebView):       def __init__(self, parent=None):         super(myWindow, self).__init__(parent)          self.page().mainFrame().addToJavaScriptWindowObject(""myWindow"", self)          self.loadFinished.connect(self.on_loadFinished)          self.load(QtCore.QUrl('http://jquery.com'))      @QtCore.pyqtSlot(str)       def showMessage(self, message):         print ""Message from website:"", message      @QtCore.pyqtSlot()     def on_loadFinished(self):         self.page().mainFrame().evaluateJavaScript(getJsValue)   if __name__ == ""__main__"":     import sys      app = QtGui.QApplication(sys.argv)     app.setApplicationName('myWindow')      main = myWindow()     main.show()      sys.exit(app.exec_()) </code></pre>"			2013-01-08 10:54:40.047 UTC
14261306	javascript|python|json|python-2.7|html-parsing	Issue with extracting data from a javascript structure on a website using beautiful soup in Python	"<p>I am trying to scrape data from a website which uses Javascript structure to load the data. I used solution to this question <a href=""https://stackoverflow.com/questions/14121788/issue-with-html-tags-while-scraping-data-using-beautiful-soup"">Issue with html tags while scraping data using beautiful soup</a> to accomplish that. After, getting the JSON data dictionary I iterated over it to successfully get the device name and price data.</p>  <p>Code mentioned in the solution of above mentioned question is actually extracting data from a window having device name and price with its attribute mentioned in code as <code>window.rates</code>.</p>  <p><strong>Problem:</strong> If you look at the structure of website, there are 3 parts in it. </p>  <ol> <li>1st part contains window with plan name and its other details</li> <li>2nd part contains window with device name and price (this is the window from which I am currently scraping data)</li> <li><strong>3rd Part contains Plan Name, Device Name, Price and its Monthly prices</strong></li> </ol>  <p><strong>I want to extract data from the third part as I want all 4 fields(Plan name, device name, price, monthly price)</strong>. I am able to scrape data from 1st &amp; 2nd part using solution to above mentioned question though.</p>  <p>Now, <strong>I am not able to find the javascript which is loading the data in 3rd part</strong>, also the attribute(Eg. window.rates for 2nd part) which I will have to use to get the JSON dictionary of data for 3rd part.</p>  <p>Also, data in 3rd part of website changes as we scroll the windows in 2nd part.</p>  <p>P.S: I tried printing all the scripts running on the page to find out the script which is loading the data in 3rd part but it was not of any help.</p>  <p>Please help me in solving this issue.</p>"	2013-01-10 15:26:03.49 UTC	14265229	"<p>You provided a link to your previous question that mentions the site you're interested in:</p>  <p><a href=""http://www.vodafone.de/privat/tarife/red-smartphone-tarife.html"" rel=""nofollow"">http://www.vodafone.de/privat/tarife/red-smartphone-tarife.html</a></p>  <p>You just have to look at the code.</p>  <p>Say you select ""Red M"" as the plan and ""Samsung Galaxy SIII Blau (Blue) / 16 GB. The bottom section will display:</p>  <h2>Detail Items</h2>  <h3>Einmalige Kosten (One-time costs)</h3>  <ol> <li>Anschlusspreis (Activation Charge): 29.99</li> <li><p>Einmalzahlung (Onetime Payment) Smartphone: 9.90</p>  <h3>Monatliche Kosten (Monthly Charges)</h3></li> <li><p>Red M 59.99</p></li> <li>24 x 10 % Rabatt (discount) -6.00</li> <li><p>24 x 5 Euro Smartphone-Rabatt -5.00</p></li> <li><p>Also one of three 10.00/month discounts are available for being a student, young, or handicapped. </p></li> </ol>  <p>You need to parse (maybe using Python's JSON module) these JavaScript assignments: </p>  <pre><code>window.phones window.rates window.discounts window.goodies window.promotions </code></pre>  <p>I'll walk you through the data structures. You'll have to write the code yourself.</p>  <p><code>windows.phones</code>, contains this entry (keeping with our example):</p>  <pre><code>window.phones = {     sku1224225:{         name:""Samsung Galaxy SIII Blau 16 GB"",         image:""/images/m1057472_300599.jpg"",         deliveryTime:""Lieferbar innerhalb 48 Stunden"",         sku1444275:{p:""prod1334441"",e:""49.90""}, // ""Vodafone Red S""         sku1444283:{p:""prod1334441"",e:""9.90""},  // ""Vodafone Red M""         sku1444291:{p:""prod1334441"",e:""9.90""},  // ""Vodafone Red Premium""         sku1444286:{p:""prod1334441"",e:""9.90""},  // ""Vodafone Red L""         sku1104261:{p:""prod1334441"",e:""99.90""}  // ""Vodafone Basic 100""     },     // . . . } </code></pre>  <p>I've added comments to show the plan names. </p>  <p>Here we see Detail Item 2.</p>  <p>The SKUs listed here are plan sub-SKUs defined in <code>window.rates</code>. For ""Red M"" we have:</p>  <pre><code>window.rates = {     sku1444279:{         label:""Vodafone Red M"",         propId:""prod1564453"",         subsku:{             sku1444283:{    // ""Samsung Galaxy SIII Blau 16 GB"", etc.                 monthlyChargest:""59.99"",                 activationCharge:""29.99"",                 discounts:[                     ""sku140988"",    // ""Ich bin 18-25 Jahre jung"" (-10)                     ""sku140989"",    // ""Ich habe einen Schwerbehindertenausweis"" (-10)                     ""sku140990""     // ""Ich bin Student und jünger als 30"" (-10)                 ],                 promotions:[""27""],  // ""24 x 5 Euro Smartphone-Rabatt"" (-5)                 Goodies:[                     ""prod1674486""   // ""24 x 10 % Rabatt"" (-6)                 ]             },             // more subskus here . . .         }     },     // . . . } </code></pre>  <p>Again I've added comments for the linked data. Note, many devices can link to the same subsku.</p>  <p>We see Detail Items 1 &amp; 3 and links to Items 4, 5, and 6.</p>  <p><code>Goodies</code> links to <code>windows.goodies</code> via <code>prod</code> number:</p>  <pre><code>window.goodies = {     prod1674486:{         SkuId:""prod1674486"",         Name:""24 x 10 % Rabatt"",         Value:""-6"",         Type:""absolute"",         DurationInMonth:""24""     },     // . . . } </code></pre>  <p>Which gives us Detail Item 4.</p>  <p><code>window.rates</code> also links to <code>windows.promotions</code> via the <code>subsku</code>'s <code>promotions</code> list: </p>  <pre><code>window.promotions = {     27:{         promotionId:""27"",         promotionName:""24 x 5 Euro Smartphone-Rabatt"",         promotionValue:""-5"",         Type:""absolute"",         duration_in_months:""24"",         deeplinkParameter:""""     },     // . . . } </code></pre>  <p>Which gives us Detail Item 5.</p>  <p><code>windows.discounts</code> contains the special discounts for Detail Item 6:</p>  <pre><code>window.discounts = {     sku140988:{         SkuId:""sku140988"",         Name:""Ich bin 18-25 Jahre jung"",         Type:""absolute"",         DurationInMonth:""24"",         Value:{             sku1444295:""-10"",   // ""Vodafone Red Premium""             sku1444279:""-10"",   // ""Vodafone Red M""             sku1444290:""-20""}   // ""Vodafone Red L""     },     sku140989:{         SkuId:""sku140989"",         Name:""Ich habe einen Schwerbehindertenausweis"",         Type:""absolute"",         DurationInMonth:""24"",         Value:{             sku1444295:""-10"",   // ""Vodafone Red Premium""             sku1444279:""-10"",   // ""Vodafone Red M""             sku1444290:""-20""}   // ""Vodafone Red L""     },     sku140990:{         SkuId:""sku140990"",         Name:""Ich bin Student und jünger als 30"",         Type:""absolute"",         DurationInMonth:""24"",         Value:{             sku1444295:""-10"",   // ""Vodafone Red Premium""             sku1444279:""-10"",   // ""Vodafone Red M""             sku1444290:""-20""}   // ""Vodafone Red L""     } }; </code></pre>  <p>The proper discount amount is selected by plan major SKU (via the SKUs listed under <code>value</code>).</p>  <p>And that's it. Just parse these 5 objects into Python objects and you'll have all the data you need.</p>"			2013-01-10 18:54:22.93 UTC
14298619	javascript|python|ajax	communicate javascript with python	"<p>Well, I have a web site created with HTML and javascript. I want that this web page stores some data entered by the visitors in a form to a text file in the web server where the web page is located. My web server only supports python and perl scripting languages and for ""sentimental"" reasons I don't wish to change to another web server.</p>  <p>The code in the client side it's more or less clear for me, it would use javascript with AJAX xmlhttp class to post the data to the server but I don't know how to compose a python script that reads the received data, processes it and stores it in a text file. Can anyone please post some sample code?</p>  <p>I've already spend some days searching info but I get lost with what I read because often require to install something called frameworks. But as the web server supports python shouldn't this already be installed in the remote server and isn't it as simple as uploading a <code>myScript.py</code> in the web server?</p>"	2013-01-12 22:28:51.203 UTC	14298971	"<p>If your web-server supports only CGI then write simple CGI script. Doc for getting raw post from the reqquest: <a href=""http://docs.python.org/2.7/library/cgi.html#using-the-cgi-module"" rel=""nofollow"">http://docs.python.org/2.7/library/cgi.html#using-the-cgi-module</a> Thread where someone is putting together something looking like a code needed by you: <a href=""http://bytes.com/topic/python/answers/42058-cgi-getting-raw-post-data"" rel=""nofollow"">http://bytes.com/topic/python/answers/42058-cgi-getting-raw-post-data</a> </p>"			2013-01-12 23:18:14.377 UTC
14327647	javascript|python	Python while loop conversion to Javascript	"<p>How would I convert the following:</p> <pre class=""lang-py prettyprint-override""><code>while True:     # do something     time.sleep(2) </code></pre> <p>into JavaScript?</p>"	2013-01-14 22:07:31.14 UTC	14327697	"<pre><code>setInterval(function() {   console.log('do something'); }, 2000); </code></pre>  <p><a href=""http://jsfiddle.net/rS9bH/"" rel=""nofollow"">http://jsfiddle.net/rS9bH/</a></p>"			2013-01-14 22:11:33.977 UTC
14327647	javascript|python	Python while loop conversion to Javascript	"<p>How would I convert the following:</p> <pre class=""lang-py prettyprint-override""><code>while True:     # do something     time.sleep(2) </code></pre> <p>into JavaScript?</p>"	2013-01-14 22:07:31.14 UTC	14327689	"<p>You would not, as JavaScript does not sleep - it is synchronous and event-based. Yet, you can schedule functions to be executed later in time via <a href=""https://developer.mozilla.org/en-US/docs/DOM/window.setTimeout"" rel=""nofollow""><code>setTimeout</code></a> and <a href=""https://developer.mozilla.org/en-US/docs/DOM/window.setInterval"" rel=""nofollow""><code>setInterval</code></a>:</p>  <pre><code>var timerid = setInterval(function() {     // do something     // instead of ""break"", you'd use ""clearTimeout(timerid)"" }, 2000); </code></pre>  <hr>  <p>For your ajax progress bar, I'd recommend the following which does not fire requests strictly each 2s, but waits for them to return:</p>  <pre><code>function getUpdate() {     myAjax(…, function onAjaxSuccess(result) { // an async event as well         // show(result)         if (!result.end)             setTimeout(getUpdate, 2000);     }); } getUpdate(); </code></pre>"			2013-01-14 22:10:51.033 UTC
14419082	javascript|python|templates|pyramid	How can I insert javascript source files into my pyramid python application and use them in my template?	"<p>I have redefined this question from the original a bit to make it more fundamental to the question at hand. The relevant parts of my filesystem are as follows. </p>  <pre><code>env     tutorial         tutorial             templates                 view.pt             static                 myjava.js             views.py             __init__.py </code></pre>  <p>Right now my view.pt template has</p>  <pre><code>&lt;script type=""text/javascript"" src=""/static/myjava.js""&gt;&lt;/script&gt; </code></pre>  <p>Then in my <code>__init__.py</code>, I have </p>  <pre><code>config.add_static_view(name='static',path='env/tutorial/tutorial/static') </code></pre>  <p>And finally, the myjava.js file itself is very simple: </p>  <pre><code>document.write(""hello from the javascript file"") </code></pre>  <p>I am trying to follow this document: <a href=""http://docs.pylonsproject.org/projects/pyramid/en/latest/narr/assets.html"" rel=""nofollow"">http://docs.pylonsproject.org/projects/pyramid/en/latest/narr/assets.html</a></p>  <p>but right now none of the text is showing up. I feel like the problem lies in the paths i am giving it. </p>  <p>Some ideas I have had: in the config.add_static_view, the name='static' is confusing. I want users to be able to visit the url www.domain.com/firstpage, where firstpage is the result of a template that uses a javascript file resource (a file in the static folder). I am worried that these static assets are only for urls that start with www.domain.com/static/... Is this a valid concern? How can I tell the config.add_static_view function to serve the static resources for any views rendered from the view.pt template? </p>  <p>Edit: here is what worked:</p>  <p>in the template, use src=""${request.static_url('tutorial:static/myjava.js')}""</p>  <p>then in the <strong>init</strong>.py use config.add_static_view(name='static',path='tutorial:static/')</p>"	2013-01-19 21:28:08.67 UTC	14420135	"<p>Was reading the <a href=""http://docs.pylonsproject.org/projects/pyramid/en/latest/narr/assets.html"" rel=""nofollow"">docs here</a> and it looks like when you call <code>add_static_view</code> it changes the path of the file? To quote the docs: </p>  <blockquote>   <p>this means that you wish to serve the files that live in /var/www/static as sub-URLs of the /static URL prefix. Therefore, the file /var/www/static/foo.css will be returned when the user visits your application’s URL /static/foo.css.</p> </blockquote>  <p>In your case, since you're  calling <code>env/tutorial/tutorial/static</code> ""static"", you might want to try <code>src=""static/Three.js""&gt;</code> instead</p>"			2013-01-19 23:43:14.05 UTC
14419082	javascript|python|templates|pyramid	How can I insert javascript source files into my pyramid python application and use them in my template?	"<p>I have redefined this question from the original a bit to make it more fundamental to the question at hand. The relevant parts of my filesystem are as follows. </p>  <pre><code>env     tutorial         tutorial             templates                 view.pt             static                 myjava.js             views.py             __init__.py </code></pre>  <p>Right now my view.pt template has</p>  <pre><code>&lt;script type=""text/javascript"" src=""/static/myjava.js""&gt;&lt;/script&gt; </code></pre>  <p>Then in my <code>__init__.py</code>, I have </p>  <pre><code>config.add_static_view(name='static',path='env/tutorial/tutorial/static') </code></pre>  <p>And finally, the myjava.js file itself is very simple: </p>  <pre><code>document.write(""hello from the javascript file"") </code></pre>  <p>I am trying to follow this document: <a href=""http://docs.pylonsproject.org/projects/pyramid/en/latest/narr/assets.html"" rel=""nofollow"">http://docs.pylonsproject.org/projects/pyramid/en/latest/narr/assets.html</a></p>  <p>but right now none of the text is showing up. I feel like the problem lies in the paths i am giving it. </p>  <p>Some ideas I have had: in the config.add_static_view, the name='static' is confusing. I want users to be able to visit the url www.domain.com/firstpage, where firstpage is the result of a template that uses a javascript file resource (a file in the static folder). I am worried that these static assets are only for urls that start with www.domain.com/static/... Is this a valid concern? How can I tell the config.add_static_view function to serve the static resources for any views rendered from the view.pt template? </p>  <p>Edit: here is what worked:</p>  <p>in the template, use src=""${request.static_url('tutorial:static/myjava.js')}""</p>  <p>then in the <strong>init</strong>.py use config.add_static_view(name='static',path='tutorial:static/')</p>"	2013-01-19 21:28:08.67 UTC	14528837	"<p>Your javascript link, in the template, should be something like <code>src=""${request.static_url('tutorial:static/myjava.js')}""</code></p>  <p>This allows your application to be more easily relocated.</p>  <p>This also uses the appropriate asset specification, using the name of the package,  ""tutorial"", a colon, then a path relative to the location of the ""tutorial"" package, which in your case the package is at <code>env/tutorial/tutorial</code>.</p>  <p>Edited:  I forgot about the Configurator object.</p>  <p>Here, you want to use a similar asset specification such as <code>config.add_static_view('static', 'tutorial:static/')</code>.</p>  <p>You can make different static views for different directories as well, like:  <code>config.add_static_view('images', 'tutorial:images/')</code></p>  <p>When you do things like this, you can move the root of your application to another location, allowing you to have <code>http://mysite.com/stable/</code> and <code>http://mysite.com/devel/</code> having accesses to <code>/</code> be rewritten to <code>/stable/</code>.</p>  <p>The static views can be called from any template with code like <code>${request.static_url('tutorial:images/icons/favicon.ico')}</code></p>"			2013-01-25 19:15:57.723 UTC
14465947	javascript|python|django	Incorporating Python code in a JavaScript web application	"<p>I am primarily a Java and Python developer and I recently picked up JavaScript in order to design an application I am currently working on. In order to design the application, I would like to incorporate some necessary Python code into the JavaScript framework. However, I am not quite sure how to do this. The specific script I would like to implement is a file writing script in Python that takes some variables generated from the JavaScript and writes a file containing the information and formatted in some way to fit a particular text file format. Code below. I have also used PHP in the application. Is it possible to use Django to incorporate the Python code (I have never used Django before) or some other way? Thanks.</p>  <p>Python: </p>  <pre><code> newfile = open(newfile.txt, ""w"")  newfile.write(""New File"")  newfile.close() </code></pre>"	2013-01-22 18:56:30.213 UTC	14466551	"<p>Note: for a fully clientside solution, see Aaron's answer.  </p>  <hr>  <p>You can make a call to a serverside script in order to generate the file.</p>  <p>This is done using ajax (making asynchronous calls from the client to the server)</p>  <p>You can do this <a href=""http://www.b-list.org/weblog/2006/jul/31/django-tips-simple-ajax-example-part-1/"" rel=""nofollow"">with Django</a></p>  <p>Here's a list of <a href=""https://code.djangoproject.com/wiki/AJAX"" rel=""nofollow"">Django Ajax resources</a></p>  <p>Or you can do it separately, there are plenty of resources online for Ajax</p>  <h3>About Javascripts file API</h3>  <p>Some other people have suggested using Javascript's file writing API, but assuming I'm understanding you correctly and you're writing browser code (not Node.js) I would recommend against it.  Those APIs are not yet widely supported.  Here's a list of supported browsers for that API: <a href=""http://caniuse.com/#feat=filesystem"" rel=""nofollow"">http://caniuse.com/#feat=filesystem</a></p>"			2013-01-22 19:31:28.297 UTC
14465947	javascript|python|django	Incorporating Python code in a JavaScript web application	"<p>I am primarily a Java and Python developer and I recently picked up JavaScript in order to design an application I am currently working on. In order to design the application, I would like to incorporate some necessary Python code into the JavaScript framework. However, I am not quite sure how to do this. The specific script I would like to implement is a file writing script in Python that takes some variables generated from the JavaScript and writes a file containing the information and formatted in some way to fit a particular text file format. Code below. I have also used PHP in the application. Is it possible to use Django to incorporate the Python code (I have never used Django before) or some other way? Thanks.</p>  <p>Python: </p>  <pre><code> newfile = open(newfile.txt, ""w"")  newfile.write(""New File"")  newfile.close() </code></pre>"	2013-01-22 18:56:30.213 UTC	14466383	"<p>ok, for web applications, support for python is going to be based on whether or not the browser has python support either provided as a plugin or built in to the browser. it probably isn't a good idea to rely on this being the case for most people who view the application. If you do, its just a matter of including the script in a <code>&lt;SCRIPT type=""text/x-python"" src=""path-to-your-pyfile.py""&gt;</code> tag in the html. As an alternative, javascript, thanks to html5 now has support to write to files with both text and binary data. See the file api <a href=""http://www.w3.org/TR/file-writer-api/"" rel=""nofollow"">here</a>.</p>  <p>if there there is a problem with using the file api, you can always create a link to a file for the user to save from javascript using data URIs like so:</p>  <p>data:text/plain;base64,aGVsbG8gZnJvbSBhIGRhdGEgdXJpISEh</p>  <p>here is an example of an html file that generates files on the fly from javascript note i rolled my own base64 encoder but there are many js libraries available for this.</p>  <pre><code>&lt;!DOCTYPE html PUBLIC ""-//W3C//DTD HTML 4.01 Transitional//EN"" ""http://www.w3.org/TR/html4/loose.dtd""&gt; &lt;html&gt; &lt;head&gt; &lt;meta http-equiv=""Content-Type"" content=""text/html; charset=UTF-8""&gt; &lt;title&gt;&lt;/title&gt; &lt;SCRIPT type=""text/javascript"" &gt; var BASE_64_ALPHABET =//for encoding base64 [  'A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z',  'a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z',  '0','1','2','3','4','5','6','7','8','9','+','/' ]; var BASE_64_PAD = '='; function valueAt(source,index) {     var result = null;      if(source.charAt)         result = source.charAt(index);     else          result = source[index];      if(result.charCodeAt)         result = result.charCodeAt(0);      if(result === null | result === undefined)         return 0;      return result; } function toBase64(data, offset, length) {     var padSize = (3-(length % 3));      if(padSize == 3 &amp;&amp; length != 0)         padSize = 0;      var bufferSize = ((4*(length-(length%3)))/3); + padSize;     var buffer = new Array(bufferSize);      var iterationLimit = length + (length % 3) - 1;      var octetMask = 0xFF;     var sextetMask = 0x3F;      for(var sourceIndex=0,destinationIndex=0;sourceIndex&lt;iterationLimit;sourceIndex+=3,destinationIndex+=4)     {         var readBlock =         (             ((valueAt(data, offset+sourceIndex) &amp; octetMask) &lt;&lt; 16) |             ((valueAt(data, offset+sourceIndex+1) &amp; octetMask) &lt;&lt; 8) |             (valueAt(data, offset+sourceIndex+2) &amp; octetMask)         );          buffer[destinationIndex] = BASE_64_ALPHABET[(readBlock &gt;&gt;&gt; 18) &amp; sextetMask];         buffer[destinationIndex+1] = BASE_64_ALPHABET[(readBlock &gt;&gt;&gt; 12) &amp; sextetMask];         buffer[destinationIndex+2] = BASE_64_ALPHABET[(readBlock &gt;&gt;&gt; 6) &amp; sextetMask];         buffer[destinationIndex+3] = BASE_64_ALPHABET[readBlock &amp; sextetMask];     }     for(var i = 0; i &lt; padSize; i++)         buffer[buffer.length - 1 - i] = BASE_64_PAD;      return buffer.join(""""); }  function makeDataURI() {     var data = document.getElementById(""datasource"").value;     var mime = document.getElementById(""mimesource"").value;     alert(""data:""+mime+"";base64,""+toBase64(data,0,data.length)); }  &lt;/SCRIPT&gt; &lt;/head&gt; &lt;body&gt; &lt;INPUT id=""datasource"" type=""text"" value=""enter your file data here""&gt;&lt;/INPUT&gt; &lt;INPUT id=""mimesource"" type=""text"" value=""enter your mime type here""&gt;&lt;/INPUT&gt; &lt;INPUT type=""button"" onclick=""makeDataURI();"" value=""Generate URI""&gt;&lt;/INPUT&gt; &lt;/body&gt; &lt;/html&gt; </code></pre>"			2013-01-22 19:23:21.173 UTC
14529849	python|selenium|screen-scraping|beautifulsoup	Python Scraping JavaScript using Selenium and Beautiful Soup	"<p>I'm trying to scrape a JavaScript enables page using BS and Selenium.  I have the following code so far. It still doesn't somehow detect the JavaScript (and returns a null value). In this case I'm trying to scrape the Facebook comments in the bottom. (Inspect element shows the class as postText)<br> Thanks for the help!</p>  <pre><code>from selenium import webdriver   from selenium.common.exceptions import NoSuchElementException   from selenium.webdriver.common.keys import Keys   import BeautifulSoup  browser = webdriver.Firefox()   browser.get('http://techcrunch.com/2012/05/15/facebook-lightbox/')   html_source = browser.page_source   browser.quit()  soup = BeautifulSoup.BeautifulSoup(html_source)   comments = soup(""div"", {""class"":""postText""})   print comments </code></pre>"	2013-01-25 20:27:15.767 UTC	22573716	"<p>There are some mistakes in your code that are fixed below. However, the class ""postText"" must exist elsewhere, since it is not defined in the original source code. My revised version of your code was tested and is working on multiple websites.</p>  <pre><code>from selenium import webdriver   from selenium.common.exceptions import NoSuchElementException   from selenium.webdriver.common.keys import Keys   from bs4 import BeautifulSoup  browser = webdriver.Firefox()   browser.get('http://techcrunch.com/2012/05/15/facebook-lightbox/')   html_source = browser.page_source   browser.quit()  soup = BeautifulSoup(html_source,'html.parser')   #class ""postText"" is not defined in the source code comments = soup.findAll('div',{'class':'postText'})   print comments </code></pre>"			2014-03-22 05:04:18.357 UTC
14531109	javascript|python|forms|button	Javascript/Python - Trouble Clicking Button	"<p>I'm using Python's module Spynner for creating a Social Network application, one of the features is being able to create a Tumblr account directly in the application without loading a web browser. Using the ability to run javascript code in the browser, I'm attempting to click a dynamic button, except any idea I use doesn't seem to click it at all. The button's code looks like this, nice and simple.</p>  <pre><code>&lt;button id=""signup_forms_submit""&gt;         &lt;span class=""account_btn""&gt;Démarrer&lt;/span&gt;         &lt;span class=""birthday_btn""&gt;Suivant&lt;/span&gt;         &lt;span class=""captcha_btn""&gt;&lt;span&gt;Terminé !&lt;/span&gt;&lt;/span&gt;         &lt;span class=""login_btn""&gt;Connexion&lt;/span&gt; &lt;/button&gt; </code></pre>  <p>I've tried the following with no results, the button just won't click.</p>  <pre><code>browser.runjs(""""""$(document.elementFromPoint(393, 373)).click();  """""") browser.runjs(""""""$('.account_btn').click();"""""") browser.click(""input[id=signup_forms_submit]"", wait_load=True,  timeout=30) </code></pre>  <p>I'm honestly stuck. Any help is apprecieated.</p>"	2013-01-25 22:07:48.293 UTC	27764206	"<p>Set confirm callback before clicking an element:</p>  <p><a href=""https://pythonhosted.org/spynner/spynner.browser.Browser-class.html#set_javascript_confirm_callback"" rel=""nofollow"">https://pythonhosted.org/spynner/spynner.browser.Browser-class.html#set_javascript_confirm_callback</a></p>"			2015-01-04 09:36:54.743 UTC
14575271	javascript|python|selenium|selenium-webdriver|beautifulsoup	Python Selenium WebDriver JavaScript Table Iteration	"<p>I've been playing with Beautiful Soup for awhile and it works great minus the javascript limitations. I am trying to use Selenium to bridge the gap in my toolbox. The site I am trying to scrape is <a href=""http://www.5dimes.eu/livelines/livelines.aspx"" rel=""nofollow noreferrer"">http://www.5dimes.eu/livelines/livelines.aspx</a></p>  <p>**I should mentioned I am in windows and can't get QTWebKit to work which I've been told is an option as well.</p>  <p>The site requires you to click a checkbox in order for the table(s) to preview. Once I was able to get the table to preview, I assumed I was in the clear but alas no.</p>  <p>I tried to use </p>  <pre><code>driver = webdriver.Chrome() page = driver.get(""http://www.5dimes.eu/livelines/livelines.aspx"") driver.find_element_by_xpath(""//*[@id='l_26']"").click() html_source = driver.page_source </code></pre>  <p>and was able to get the page to in fact click a link but the html_source didn't have the table data.</p>  <p>Several issues followed on testing.</p>  <ol> <li><p>The xpath id changes daily based on how many things are posted. One day it was 26 the next day it was 27 etc. Is there an alternate way to navigate to this checkbox either via class or text name?</p></li> <li><p>Once the table is displayed, how can I extract this data?</p></li> </ol>  <p>I noticed in the class info that it mentioned a ""hidden"" attribute</p>  <pre><code>&lt;div id=""divLoading"" style=""width: 100%; text-align: center;"" class=""Hidden""&gt;         &lt;img id=""imgLoading"" src=""images/scanning.gif""&gt;     &lt;/div&gt; </code></pre>  <p>Could that be the source of the issue? Any help would be greatly appreciated</p>"	2013-01-29 03:37:25.893 UTC	14577216	"<p>Try something like this </p>  <pre><code>   L= find_elements(By.XPATH,""//div[@id='divl_25']/table/tbody/tr/td[1]""); </code></pre>  <p>It will return list of WebElements contains same locator.(i.e., first td of your table content)</p>  <p>For getting second td content you need to change the td index to two.</p>  <pre><code>   L= find_elements(By.XPATH,""//div[@id='divl_25']/table/tbody/tr/td[2]""); </code></pre>  <p>The above line will gives you all second td s in every row.</p>  <p>After getting list of WebElements iterate that list in loop and get text from each element. In this way you can get entire table data.</p>  <pre><code>for ele in L:         print ele.text; </code></pre>  <p>I hope this is useful to you.</p>  <p>P.S : I don't know much about python, selenium-python bindings.</p>"			2013-01-29 06:51:13.237 UTC
14582625	python|qt|pyqt4	Object tree in python vs DOM with Javascript	"<p>I am trying to do some python app (Pyside/Qt), and can't figure how to proceed object as argument to another function. With Javascript I can access to any object/element in DOM. Does I need to build my own object model in Python ? </p>  <p>See my <a href=""https://stackoverflow.com/questions/14546803/qt-and-python-how-to-find-objects-and-use-them"">example here</a>.</p>"	2013-01-29 10:18:09.603 UTC	14599094	"<p>I suppose you are asking how to traverse a Qt object tree. See <a href=""http://qt-project.org/doc/qt-4.8/qobject.html#details"" rel=""nofollow"">http://qt-project.org/doc/qt-4.8/qobject.html#details</a></p>  <blockquote>   <p>QObjects organize themselves in object trees. When you create a   QObject with another object as parent, the object will automatically   add itself to the parent's <a href=""http://qt-project.org/doc/qt-4.8/qobject.html#children"" rel=""nofollow"">children</a>() list. The parent takes ownership   of the object; i.e., it will automatically delete its children in its   destructor. You can look for an object by name and optionally type   using <a href=""http://qt-project.org/doc/qt-4.8/qobject.html#findChild"" rel=""nofollow"">findChild</a>() or <a href=""http://qt-project.org/doc/qt-4.8/qobject.html#findChildren"" rel=""nofollow"">findChildren</a>().</p> </blockquote>  <p>EDIT:<br> <code>QGraphicsItem</code>, however, is not a subclass of <code>QObject</code> and does not have an <code>objectName</code> property. If you need to access such objects by name, you must do it by yourself, for example using a Python <code>dict</code> with names as keys and objects as values.</p>"			2013-01-30 07:57:26.123 UTC
14595203	javascript|python|html|get	Access Python and JavaScript code from the same form submission	"<p>I'm writing a web application in Python.  I've got a form that takes as input two user-specified entries, one is a text field and the other is a selection.  Upon submission, I GET these entries and store them to the database, which later gets queried and posted up.  Anyway,  it takes JavaScript to grab the User's coordinates, which I need, and I've got the JavaScript embedded in my template and it's SUPPOSED to be inputting the coordinates to ""hidden"" input fields.  I can't seem to call and successfully retrieve those element's contents with the standard call (using GAE and Python)</p>  <pre><code>latitude = self.request.get(""latitude"") longitude = self.request.get(""longitude"") </code></pre>  <p>Here is the embedded JavaScript and form input elements:</p>  <pre><code>   &lt;script&gt;    function get_location()      {                             if (navigator.geolocation)      {                             navigator.geolocation.getCurrentPositon(showPosition);                             } else {                                     alert('It appears geolocation isnt enabled.');                             }                     }                     function showPosition(position)                             {                             $(""#latitude"").val(position.coords.latitude);                             $(""#longitude"").val(position.coords.longitude);                     }     &lt;/script&gt;      &lt;input type=""hidden"" name=""latitude"" id=""latitude"" /&gt;     &lt;input type=""hidden"" name=""longitude"" id=""longitude"" /&gt;     &lt;br&gt;     &lt;input type=""submit"" onclick=""get_location()"" value=""Update""&gt; </code></pre>  <p>FYI, this is all within the same form.  So, theoretically, this should be generating the latitude and longitude of the user and then passing those values to their respective input fields.  Is there any obvious reason this isn't working?  Thanks in advance.</p>"	2013-01-30 01:28:52.32 UTC	14597550	<p>Eliminating the function call from the submit button and utilizing the following worked out fine.</p>  <pre><code>    &lt;script&gt;     window.onload=get_location ;     &lt;/script&gt; &lt;/body&gt; </code></pre>			2013-01-30 05:51:24.707 UTC
14595203	javascript|python|html|get	Access Python and JavaScript code from the same form submission	"<p>I'm writing a web application in Python.  I've got a form that takes as input two user-specified entries, one is a text field and the other is a selection.  Upon submission, I GET these entries and store them to the database, which later gets queried and posted up.  Anyway,  it takes JavaScript to grab the User's coordinates, which I need, and I've got the JavaScript embedded in my template and it's SUPPOSED to be inputting the coordinates to ""hidden"" input fields.  I can't seem to call and successfully retrieve those element's contents with the standard call (using GAE and Python)</p>  <pre><code>latitude = self.request.get(""latitude"") longitude = self.request.get(""longitude"") </code></pre>  <p>Here is the embedded JavaScript and form input elements:</p>  <pre><code>   &lt;script&gt;    function get_location()      {                             if (navigator.geolocation)      {                             navigator.geolocation.getCurrentPositon(showPosition);                             } else {                                     alert('It appears geolocation isnt enabled.');                             }                     }                     function showPosition(position)                             {                             $(""#latitude"").val(position.coords.latitude);                             $(""#longitude"").val(position.coords.longitude);                     }     &lt;/script&gt;      &lt;input type=""hidden"" name=""latitude"" id=""latitude"" /&gt;     &lt;input type=""hidden"" name=""longitude"" id=""longitude"" /&gt;     &lt;br&gt;     &lt;input type=""submit"" onclick=""get_location()"" value=""Update""&gt; </code></pre>  <p>FYI, this is all within the same form.  So, theoretically, this should be generating the latitude and longitude of the user and then passing those values to their respective input fields.  Is there any obvious reason this isn't working?  Thanks in advance.</p>"	2013-01-30 01:28:52.32 UTC	14595219	"<p><code>getCurrentPosition()</code> is asynchronous.  It probably will not have completed before your form is submitted, thus the field values are not filled in.  </p>  <p>One way to solve that problem is to not submit your form until <code>getCurrentPosition()</code> has finished and has called <code>showPosition()</code>.  To do that, you would need to block the default form submission by returning <code>false</code> from <code>get_location()</code> and returning that return value in your onclick handler and then programmatically submit the form when <code>showPosition()</code> is called after the hidden location fields have been set.</p>  <p>Another way to solve that issue is to fill in the current position when the form is initially displayed and not wait until you're trying to submit it.</p>  <p>FYI, see <a href=""https://stackoverflow.com/questions/14594157/uncaught-referenceerror-lat-is-not-defined/14594292#14594292"">Uncaught ReferenceError: lat is not defined</a> for someone else having a similar problem today with the asynchronous nature of <code>getCurrentPosition()</code>.</p>"			2013-01-30 01:31:02.737 UTC
14635166	python	"Can python be integrated into HTML, JavaScript... Online?"	"<p>I have a python multiplayer game which I want to host online. So far I have only seen online games which use some kind of user downloaded library (such as a flash or the java runtime virtual box) of course, many gamers won't have python installed. For the game, it is using the multiplayer by the library socket, and the tcp protocol. I hope someone has some framework, or even just some links thats could help.</p>  <p>Thanks</p>"	2013-01-31 21:06:47.26 UTC	14635222	"<p>Does packaging your game is an option? If yes maybe <a href=""http://www.tidesdk.org/"" rel=""nofollow"">http://www.tidesdk.org/</a> will help. As far as I know it allow to include python runtime in installer.</p>  <p>Also I have seen python implementation in javascript - <a href=""http://www.skulpt.org/"" rel=""nofollow"">http://www.skulpt.org/</a></p>"			2013-01-31 21:10:06.13 UTC
14635166	python	"Can python be integrated into HTML, JavaScript... Online?"	"<p>I have a python multiplayer game which I want to host online. So far I have only seen online games which use some kind of user downloaded library (such as a flash or the java runtime virtual box) of course, many gamers won't have python installed. For the game, it is using the multiplayer by the library socket, and the tcp protocol. I hope someone has some framework, or even just some links thats could help.</p>  <p>Thanks</p>"	2013-01-31 21:06:47.26 UTC	14635213	"<p>This is just a thought, since I know nothing about your game, but have you heard of <a href=""https://www.djangoproject.com/"" rel=""nofollow"">Django</a>? It is a Python-based web framework.</p>  <p>This may not solve the graphical portion of your game, if it does not interface well with Flash, HTML5, or JavaScript. But this would allow you to reference your Python classes and game libraries directly in your webpage's framework.</p>"			2013-01-31 21:09:40.123 UTC
14663595	javascript|python|selenium	How to use Selenium to interact with javascript in python?	"<p>First I use python and selenium to load a website in firefox. Then I fill in a simple javascript type form. The site is poorly made but usually if I tell selenium to use (Keys.RETURN) then it will drop down a list of options. The problem is I don't know how to click on one of these because they didn't load with the web page. I tried using (Keys.ARROW_DOWN) to go through them but it still doesn't really work.</p>  <p>How can I interact with javascript through selenium using python?</p>  <p>Thanks.</p>  <p>P.S. I know almost nothing about javascript so if there is some way to do it, I still would be clueless on how to use javascript anyway...</p>"	2013-02-02 15:49:43.21 UTC	14663754	"<p>You might have to tell the browser to wait for a few milliseconds.</p>  <p>Some places to look:</p>  <p><a href=""https://stackoverflow.com/questions/11018796/clicking-on-a-javascript-link-on-firefox-with-selenium"">Clicking on a Javascript Link on Firefox with Selenium</a></p>  <p><a href=""http://seleniumhq.org/docs/04_webdriver_advanced.jsp"" rel=""nofollow noreferrer"">http://seleniumhq.org/docs/04_webdriver_advanced.jsp</a></p>"			2013-02-02 16:08:02.66 UTC
14702231	javascript|python|python-3.x|python-2.7|urllib2	Recursive decoding of URI component in python like javascript	"<p>I have a encoded URI component <code>""http://www.yelp.com/biz/carriage-house-caf%25C3%25A9-houston-2""</code>. I could able to convert this to <code>""http://www.yelp.com/biz/carriage-house-café-houston-2""</code> by applying decodeURIComponent function recursively as below</p>  <pre><code>function recursiveDecodeURIComponent(uriComponent){         try{             var decodedURIComponent = decodeURIComponent(uriComponent);             if(decodedURIComponent == uriComponent){                 return decodedURIComponent;             }             return recursiveDecodeURIComponent(decodedURIComponent);         }catch(e){             return uriComponent;         }     }     console.log(recursiveDecodeURIComponent(""http://www.yelp.com/biz/carriage-house-caf%25C3%25A9-houston-2"")) </code></pre>  <p>Outputs: <code>""http://www.yelp.com/biz/carriage-house-café-houston-2""</code>.</p>  <p>I would like to get the same in python. I tried the following:</p>  <pre><code>print urllib2.unquote(urllib2.unquote(urllib2.unquote(""http://www.yelp.com/biz/carriage-house-caf%25C3%25A9-houston-2"").decode(""utf-8""))) </code></pre>  <p>but I got <code>http://www.yelp.com/biz/carriage-house-cafÃ©-houston-2</code>. Instead of Expected character <code>é</code>, I got <code>'Ã©'</code> irrespective of any number of calling urllib2.unquote.</p>  <p>I am using python2.7.3, can anyone help me?</p>"	2013-02-05 07:28:56.017 UTC	14702873	"<p>I guess a simple loop should do the trick:</p>  <pre><code>uri = ""http://www.yelp.com/biz/carriage-house-caf%25C3%25A9-houston-2""  while True:     dec = urllib2.unquote(uri)     if dec == uri:         break     uri = dec  uri = uri.decode('utf8') print '%r' % uri   # u'http://www.yelp.com/biz/carriage-house-caf\xe9-houston-2' </code></pre>"			2013-02-05 08:16:24.54 UTC
14741284	javascript|python	passing arguments to python function by javascript	"<p>Since mostly a backend guy, I am not sure how can I achieve the following since it requires some interaction with the browser.</p>  <p>So, I have a the following things so far.</p>  <p>A communication protocol where server is in  python and client is in javascript code. Ultimately, I want my data to reach to that javascript code.</p>  <p>Now, this data is being captured from browser.</p>  <p>As a practice.. what I am trying to do is..  have two radio buttons on my browser and a submit button</p>  <pre><code>  *radio A   *radio B   * Submit </code></pre>  <p>Now, when the user presses submit, I somehow want to create a query ""user submitted: A (or B)"" and this query i am able to capture on python script.</p>  <p>I am at lost on how to do this.</p>  <p>My guess is that ""submit"" invokes a python script. But what if my python server is always on .. how do i parse that response from the click of browser to this python server?</p>"	2013-02-07 00:03:19.76 UTC	14741368	"<p>This is the way it usually works:</p>  <ol> <li>Client (browser) visits webpage and initiates request to server</li> <li>Server (in your case, Python) handles request and writes HTML response, including the radio-button form</li> <li>Client fills out form and hits Submit, triggering another request to the server</li> <li>Server handles the second request and writes another response (e.g. ""Purchase successful"", ""message posted"", etc.).</li> </ol>  <p>Note that the second request is a brand-new request. You may want some way of linking the first request to the second one unless the second request is anonymous. Some frameworks will do that for you, but if you are making the server from the ground up you'll want some kind of session mechanism to keep track of state.</p>  <p>To get the client to make the second request, the simplest is to add appropriate <code>action</code> and <code>method</code> attributes to the <code>form</code> element in your HTML. <code>action</code> specifies the URL to access for the form request, and <code>method</code> is either <code>GET</code> or <code>POST</code>. (More advanced usage, e.g. on this site, typically uses AJAX to make the submissions instead).</p>"			2013-02-07 00:11:49.193 UTC
14757611	javascript|jquery|python|django|json	Shodan JSON from python to javascript issue	"<p>I'm working with the Shodan API and I'm having issues while passing the received JSON to the template (django).</p>  <p>This is the Raw JSON structure:</p>  <pre><code>{""matches"": [{""city"": ""Montreal"", ""updated"": ""02.02.2013"", ""ip"": ""24.48.3.143"", ""longitude"": -73.5833, ""data"": ""HTTP/1.0 200 OK\r\nDate: Sat, 02 Feb 2013 00:41:53 GMT\r\nServer: Apache/1.3.42 (Unix) mod_auth_pam/1.1.1 DAV/1.0.3 mod_ssl/2.8.31 OpenSSL/0.9.8g\r\nSet-Cookie: iomega=174.79.246.153.26931359765713476; path=/\r\nCache-Control: no-cache\r\nConnection: close\r\nTransfer-Encoding: chunked\r\nContent-Type: text/html; charset=utf-8\r\n\r\n"", ""country_name"": ""Canada"", ""hostnames"": [], ""country_code"": ""CA"", ""country"": ""DEPRECATED: use country_name"", ""latitude"": 45.5, ""os"": ""Linux 2.6.x"", ""port"": 443}]} </code></pre>  <p>And this is the data structure I pass to the template:</p>  <pre><code>[{""city"": ""Montreal"", ""updated"": ""02.02.2013"", ""os"": ""Linux 2.6.x"", ""ip"": ""24.48.3.143"", ""longitude"": -73.5833, ""latitude"": 45.5, ""hostnames"": [], ""country_code"": ""CA"", ""country"": ""DEPRECATED: use country_name"", ""country_name"": ""Canada"", ""data"": ""HTTP/1.0 200 OK\r\nDate: Sat, 02 Feb 2013 00:41:53 GMT\r\nServer: Apache/1.3.42 (Unix) mod_auth_pam/1.1.1 DAV/1.0.3 mod_ssl/2.8.31 OpenSSL/0.9.8g\r\nSet-Cookie: iomega=174.79.246.153.26931359765713476; path=/\r\nCache-Control: no-cache\r\nConnection: close\r\nTransfer-Encoding: chunked\r\nContent-Type: text/html; charset=utf-8\r\n\r\n"", ""port"": 443}] </code></pre>  <p>As you can see there are a lot of special chars inside it wich mess up the conversion. Another issue is with ""hostnames"" child wich is a list of elements (if exist elements)...</p>  <p>Anyone knows how to handle this JSON file in js/jquery with the correct format? Regards.</p>  <p>EDIT: I was checking the output from my javascript and the special chars passed from the django view to the template are converted to html code and \r\n disapear causing the parsing error:</p>  <p>I compared both json files with: <a href=""http://json.parser.online.fr/"" rel=""nofollow"">http://json.parser.online.fr/</a></p>  <p>And the json received from shodan api and manipulated in the view works fine but not the JSON pased to the template.</p>"	2013-02-07 17:48:58.403 UTC	14758606	"<p>I found the problem, as I said in the question when I pass the JSON from the view to the template django converts characters used in JavaScript strings.</p>  <p>The solution is to add the escapejs tag to your variable in the template:</p>  <p>{{ JSON|escapejs}}</p>  <p>Here you can find the docs: <a href=""https://docs.djangoproject.com/en/dev/ref/templates/builtins/?from=olddocs#escapejs"" rel=""nofollow"">https://docs.djangoproject.com/en/dev/ref/templates/builtins/?from=olddocs#escapejs</a></p>"			2013-02-07 18:44:31.973 UTC
14816100	javascript|python|markov-chains	Convert text prediction script [Markov Chain] from javascript to python	"<p>i've been trying the last couple days to convert <a href=""http://blog.javascriptroom.com/2013/01/21/markov-chains/"" rel=""nofollow"">this js script</a> to python code.</p>  <p>My implementation (blindfull cp mostly, some minor fixes here and there) so far:</p>  <pre><code>import random class markov:     memory = {}     separator = ' '     order = 2      def getInitial(self):         ret = []         for i in range(0, self.order, 1):             ret.append('')         return ret      def breakText(self, txt, cb):         parts = txt.split(self.separator)         prev = self.getInitial()         def step(self):             cb(prev, self.next)             prev.shift()#Javascript function.             prev.append(self.next)         #parts.forEach(step) # - step is the function above.         cb(prev, '')      def learn(self, txt):         mem = self.memory         def learnPart(key, value):             if not mem[key]:                 mem[key] = []             mem[key] = value             return mem         self.breakText(txt, learnPart)      def step(self, state, ret):         nextAvailable = self.memory[state] or ['']         self.next = nextAvailable[random.choice(nextAvailable.keys())]         if not self.next:             return ret         ret.append(next)         nextState = state.slice(1)         return self.step(nextState, ret)      def ask(self, seed):         if not seed:             seed = self.genInitial()         seed = seed + self.step(seed, []).join(self.separator)         return seed </code></pre>  <p>Issues:</p>  <ol> <li><p>I have absolutely no knowledge of javascript.</p></li> <li><p>When i try to ""learn"" some text to a ""markov"" class object [e.g.: a=markov(); a.learn(""sdfg"");] i get the following error: ""TypeError: unhashable type: 'list'"", for the ""mem"" dictionary at the ""learnPart"" function, member of the ""learn"" function.</p>  <p>So my question so far is why does this exception [TypeError for a list object, falsely referring to a dictionary object (which is hashable)] occur?</p></li> </ol>  <p>thanks in advance for any suggestions, directions, points, help in general :D</p>"	2013-02-11 16:11:50.317 UTC	36954457	"<p>I kind of made a simplified version of the code:</p>  <pre><code>import re class Brain():     H = ''     def learn(self, txt):         self.H = txt     def ask(self,ask):         H=self.H         ask = re.compile(r""%s(.*)""%(ask),re.I|re.DOTALL)         m = ask.search(H)         print m.group(1) </code></pre>  <p>Here's the execution:</p>  <pre><code>&gt;&gt;&gt; import brain &gt;&gt;&gt; bob = brain.Brain() &gt;&gt;&gt; bob.learn('Mary had a little lamb' ) &gt;&gt;&gt; bob.ask('Mary had') 'a little lamb' </code></pre>  <p>I agree that this isn't exactly a Markov chain algorithm.But it has a few advantages:</p>  <p>i. You can supply <code>ask()</code> with raw text as shown above.</p>  <p>ii. It has a fewer lines of code.</p>  <p>iii. And hopefully, it is easier to understand.</p>"			2016-04-30 11:42:16.497 UTC
14816100	javascript|python|markov-chains	Convert text prediction script [Markov Chain] from javascript to python	"<p>i've been trying the last couple days to convert <a href=""http://blog.javascriptroom.com/2013/01/21/markov-chains/"" rel=""nofollow"">this js script</a> to python code.</p>  <p>My implementation (blindfull cp mostly, some minor fixes here and there) so far:</p>  <pre><code>import random class markov:     memory = {}     separator = ' '     order = 2      def getInitial(self):         ret = []         for i in range(0, self.order, 1):             ret.append('')         return ret      def breakText(self, txt, cb):         parts = txt.split(self.separator)         prev = self.getInitial()         def step(self):             cb(prev, self.next)             prev.shift()#Javascript function.             prev.append(self.next)         #parts.forEach(step) # - step is the function above.         cb(prev, '')      def learn(self, txt):         mem = self.memory         def learnPart(key, value):             if not mem[key]:                 mem[key] = []             mem[key] = value             return mem         self.breakText(txt, learnPart)      def step(self, state, ret):         nextAvailable = self.memory[state] or ['']         self.next = nextAvailable[random.choice(nextAvailable.keys())]         if not self.next:             return ret         ret.append(next)         nextState = state.slice(1)         return self.step(nextState, ret)      def ask(self, seed):         if not seed:             seed = self.genInitial()         seed = seed + self.step(seed, []).join(self.separator)         return seed </code></pre>  <p>Issues:</p>  <ol> <li><p>I have absolutely no knowledge of javascript.</p></li> <li><p>When i try to ""learn"" some text to a ""markov"" class object [e.g.: a=markov(); a.learn(""sdfg"");] i get the following error: ""TypeError: unhashable type: 'list'"", for the ""mem"" dictionary at the ""learnPart"" function, member of the ""learn"" function.</p>  <p>So my question so far is why does this exception [TypeError for a list object, falsely referring to a dictionary object (which is hashable)] occur?</p></li> </ol>  <p>thanks in advance for any suggestions, directions, points, help in general :D</p>"	2013-02-11 16:11:50.317 UTC	14817705	"<p><strong>The complex answer</strong></p>  <p>The issue here is that <code>learnPart</code> is trying to use the return value of getInitial, which is a list, as a key to a dictionary. Lists are mutable, and hence not hashable, which means they can't be used as keys to a dictionary.</p>  <p>You could try adding this line to <code>learnPart</code>:</p>  <pre><code>def learnPart(key, value):     key = tuple(key) #&lt;-----Try adding this line     if not mem[key]:         mem[key] = []     mem[key] = value     return mem </code></pre>  <p>But I do not think that will solve all the problems.</p>  <p><strong>The simple answer</strong></p>  <p>There are plenty of Markov Chain implementations written in Python out there. A quick search on Github yielded 168 projects: <a href=""https://github.com/search?l=Python&amp;q=markov+chain"" rel=""nofollow"">https://github.com/search?l=Python&amp;q=markov+chain</a></p>"			2013-02-11 17:41:34.163 UTC
14816100	javascript|python|markov-chains	Convert text prediction script [Markov Chain] from javascript to python	"<p>i've been trying the last couple days to convert <a href=""http://blog.javascriptroom.com/2013/01/21/markov-chains/"" rel=""nofollow"">this js script</a> to python code.</p>  <p>My implementation (blindfull cp mostly, some minor fixes here and there) so far:</p>  <pre><code>import random class markov:     memory = {}     separator = ' '     order = 2      def getInitial(self):         ret = []         for i in range(0, self.order, 1):             ret.append('')         return ret      def breakText(self, txt, cb):         parts = txt.split(self.separator)         prev = self.getInitial()         def step(self):             cb(prev, self.next)             prev.shift()#Javascript function.             prev.append(self.next)         #parts.forEach(step) # - step is the function above.         cb(prev, '')      def learn(self, txt):         mem = self.memory         def learnPart(key, value):             if not mem[key]:                 mem[key] = []             mem[key] = value             return mem         self.breakText(txt, learnPart)      def step(self, state, ret):         nextAvailable = self.memory[state] or ['']         self.next = nextAvailable[random.choice(nextAvailable.keys())]         if not self.next:             return ret         ret.append(next)         nextState = state.slice(1)         return self.step(nextState, ret)      def ask(self, seed):         if not seed:             seed = self.genInitial()         seed = seed + self.step(seed, []).join(self.separator)         return seed </code></pre>  <p>Issues:</p>  <ol> <li><p>I have absolutely no knowledge of javascript.</p></li> <li><p>When i try to ""learn"" some text to a ""markov"" class object [e.g.: a=markov(); a.learn(""sdfg"");] i get the following error: ""TypeError: unhashable type: 'list'"", for the ""mem"" dictionary at the ""learnPart"" function, member of the ""learn"" function.</p>  <p>So my question so far is why does this exception [TypeError for a list object, falsely referring to a dictionary object (which is hashable)] occur?</p></li> </ol>  <p>thanks in advance for any suggestions, directions, points, help in general :D</p>"	2013-02-11 16:11:50.317 UTC	17303943	"<p>Guy who wrote the article speaking. Glad you found it useful! Now, my first implementation of a Markov chain was actually in Python, so this answer will focus on how to write it in a more Pythonic way. I'll show how to go about making an order-2 Markov chain, since they're easy to talk about, but you can of course make it order-N with some modifications.</p>  <h3>Data Structures</h3>  <p>In js, the two prominent data structures are the generic object and the array (which is an extension to the generic object). In Python however, you have other options for more finely-grained control. Here're the major differences in the two implementations:</p>  <ul> <li><p>A state in our chain is really a tuple - an immutable, ordered structure, with a fixed amount of elements. We always want <code>n</code> elements (in this case, <code>n=2</code>) and their order has meaning.</p></li> <li><p>Manipulating the memory will be easier if we use a <a href=""http://docs.python.org/2/library/collections.html#collections.defaultdict"" rel=""nofollow noreferrer"">defaultdict</a> wrapping a list, so we can skip the ""checking if a state doesn't exist, and then doing X"", and instead just do X.</p></li> </ul>  <p>So, we stick a <code>from collections import defaultdict</code> at the top and change how <code>markov.memory</code> is defined:</p>  <pre><code>memory = defaultdict(list) </code></pre>  <p>Now we change <code>markov.getInitial</code> to return a tuple (remember this explains an order-2 chain):</p>  <pre><code>def getInitial(self):     return ('', '') </code></pre>  <p>(if you want to expand it further, you can use a really neat Python trick: <code>tuple([''] * 2)</code> will return the same thing. Instead of empty strings, you can use <code>None</code>)</p>  <p>We'll get to changing what uses <code>genInitial</code> in a bit.</p>  <h3>Yield and iteration</h3>  <p>A strong concept which doesn't exist in js (yet) but does exist in Python is the <code>yield</code> operator (<a href=""https://stackoverflow.com/questions/231767/the-python-yield-keyword-explained"">see this question</a> for great explanations).</p>  <p>Another feature of Python is its generic <code>for</code> loop. You can go over nearly anything quite easily, including generators (functions which use <code>yield</code>). Combining the two, and we can redefine <code>breakText</code>:</p>  <pre><code>def breakText(self, txt):     #our very own (ε,ε)     prev = self.getInitial()      for word in txt.split(self.separator):         yield prev, word         #will be explained in the next paragraph         prev = (prev[1], word)      #end-of-sentence, prev-&gt;ε     yield prev, '' </code></pre>  <p>The magic part above, <code>prev = (prev[1], word)</code> can be explained best by example:</p>  <pre><code>&gt;&gt;&gt; a = (0, 1) &gt;&gt;&gt; a (0, 1) &gt;&gt;&gt; a = (a[1], 2) &gt;&gt;&gt; a (1, 2) </code></pre>  <p>That's how we advance through the word list. And now we move up to what uses <code>breakText</code>, to the redefinition of <code>markov.learn</code>:</p>  <pre><code>def learn(self, txt):     for part in self.breakText(txt):         key = part[0]         value = part[1]          self.memory[key].append(value) </code></pre>  <p>Because our memory is a <code>defaultdict</code>, we don't have to worry about the key not existing.</p>  <h3>A pee break on the side of the road</h3>  <p>OK, we have half of the chain implemented, time to see it in action! What we have so far:</p>  <pre><code>from collections import defaultdict  class Markov:     memory = defaultdict(list)     separator = ' '      def learn(self, txt):         for part in self.breakText(txt):             key = part[0]             value = part[1]              self.memory[key].append(value)      def breakText(self, txt):         #our very own (ε,ε)         prev = self.getInitial()          for word in txt.split(self.separator):             yield prev, word             prev = (prev[1], word)          #end-of-sentence, prev-&gt;ε         yield (prev, '')      def getInitial(self):         return ('', '') </code></pre>  <p>(I changed the class name from <code>markov</code> to <code>Markov</code> because I cringe every time a class begins with a lowercase letter). I saved it as <code>brain.py</code> and loaded up Python.</p>  <pre><code>&gt;&gt;&gt; import brain &gt;&gt;&gt; bob = brain.Markov() &gt;&gt;&gt; bob.learn('Mary had a little lamb') &gt;&gt;&gt; bob.memory defaultdict(&lt;class 'list'&gt;, {('had', 'a'): ['little'], ('Mary', 'had'): ['a'], ('', ''): ['Mary'], ('little', 'lamb'): [''], ('a', 'little'): ['lamb'], ('', 'Mary'): ['had']}) </code></pre>  <p>Success! Let's look at the result more carefully, to see that we got it right:</p>  <pre><code>{ ('', ''): ['Mary'],   ('', 'Mary'): ['had'],   ('Mary', 'had'): ['a'],   ('a', 'little'): ['lamb'],   ('had', 'a'): ['little'],   ('little', 'lamb'): ['']} </code></pre>  <p><em>zips up</em> Ready to drive on? We still have to <em>use</em> this chain!</p>  <h3>Changing the <code>step</code> function</h3>  <p>We've already met what we need to remake <code>step</code>. We have the defaultdict, so we can use <code>random.choice</code> right away, and I can cheat a bit because I know the order of the chain. We can also get rid of the recursion (with some sorrow), if we see it as a function which takes a single step through the chain (my bad in the original article - a badly named function).</p>  <pre><code>def step(self, state):     choice = random.choice(self.memory[state] or [''])      if not choice:         return None      nextState = (state[1], choice)     return choice, nextState </code></pre>  <p>I regretfully added the <code>or ['']</code> because <code>random.choice</code> moans about empty lists. Finally, we move a larger portion of the logic to <code>ask</code> (the actual construction of the sentence):</p>  <pre><code>def ask(self, seed=False):     ret = []      if not seed:         seed = self.getInitial()      while True:         link = self.step(seed)          if link is None:             break          ret.append(link[0])         seed = link[1]      return self.separator.join(ret) </code></pre>  <p>Yes, a bit yucky. We could have given <code>step</code> a better name and made it a generator, but I'm late for a meeting with my pregnant wife who's about to give birth to a baby who left the stove on fire in my car that's being towed! I better hurry!</p>  <h3>The grand finale</h3>  <p>But first, a talk with bob:</p>  <pre><code>from collections import defaultdict import random  class Markov:     memory = defaultdict(list)     separator = ' '      def learn(self, txt):         for part in self.breakText(txt):             key = part[0]             value = part[1]              self.memory[key].append(value)      def ask(self, seed=False):         ret = []          if not seed:             seed = self.getInitial()          while True:             link = self.step(seed)              if link is None:                 break              ret.append(link[0])             seed = link[1]          return self.separator.join(ret)      def breakText(self, txt):         #our very own (ε,ε)         prev = self.getInitial()          for word in txt.split(self.separator):             yield prev, word             prev = (prev[1], word)          #end-of-sentence, prev-&gt;ε         yield (prev, '')      def step(self, state):         choice = random.choice(self.memory[state] or [''])          if not choice:             return None          nextState = (state[1], choice)         return choice, nextState      def getInitial(self):         return ('', '') </code></pre>  <p>And loading it up:</p>  <pre><code>&gt;&gt;&gt; import brain &gt;&gt;&gt; bob = brain.Markov() &gt;&gt;&gt; bob.learn('Mary had a little lamb') &gt;&gt;&gt; bob.ask() 'Mary had a little lamb' &gt;&gt;&gt; bob.learn('Mary had a giant crab') &gt;&gt;&gt; bob.ask(('Mary', 'had')) 'a giant crab' </code></pre>  <p>There is, of course, room for improvement and expanding on the concept. But it wouldn't be any fun if if I just gave you the answer.</p>  <p>Hopefully this will still help after 4 months.</p>"			2013-06-25 17:38:18.633 UTC
14820235	javascript|python|nfc	Python send to javascript	"<p>My question is really simpel, but I haven't found it yet.</p>  <p>I have a python script running on my server. This script reads NFC cards. (pyscard) Everytime when there is a card the cardID must send to a webpage. I have in index.html file on my localhost. </p>  <pre><code>&lt;head&gt;   &lt;title&gt;Hello!&lt;/title&gt; &lt;/head&gt;    &lt;script language=""JavaScript"" type=""text/javascript""&gt;    function card(Cardid){      alert(Cardid);    }    &lt;/script&gt; &lt;body&gt; &lt;/body&gt; &lt;/html&gt; </code></pre>  <p>There is a way to do it by selenium (driver.execute_script(command) ) Selenium is to heavy. Is there a other simple and light way to do this? </p>"	2013-02-11 20:25:43.627 UTC	14820394	"<p>If I got you right, you need to implement AJAX. Here is simpliest example <a href=""https://stackoverflow.com/questions/336866/how-to-implement-a-minimal-server-for-ajax-in-python"">How to implement a minimal server for AJAX in Python?</a></p>  <p>If you'll need something more complex — chose one of the python web frameworks (Flask or Django) and look for tutorials how to implement AJAX with them.</p>"			2013-02-11 20:35:41.083 UTC
14820235	javascript|python|nfc	Python send to javascript	"<p>My question is really simpel, but I haven't found it yet.</p>  <p>I have a python script running on my server. This script reads NFC cards. (pyscard) Everytime when there is a card the cardID must send to a webpage. I have in index.html file on my localhost. </p>  <pre><code>&lt;head&gt;   &lt;title&gt;Hello!&lt;/title&gt; &lt;/head&gt;    &lt;script language=""JavaScript"" type=""text/javascript""&gt;    function card(Cardid){      alert(Cardid);    }    &lt;/script&gt; &lt;body&gt; &lt;/body&gt; &lt;/html&gt; </code></pre>  <p>There is a way to do it by selenium (driver.execute_script(command) ) Selenium is to heavy. Is there a other simple and light way to do this? </p>"	2013-02-11 20:25:43.627 UTC	19394357	"<p>If you want to push cardId to webpage you need tot use something in between like socket.IO then on a listening channel pushing the data to all websocket clients. From there you can pass it to a function like yours.</p>  <p>The other way to do it is a bit more limiting. You can make Ajax call to python which reads current card holding data and use that id. But when another card is on the reader,you then have tot refresh to see the new cards data.</p>"			2013-10-16 02:39:56.823 UTC
14836820	javascript|python|cgi	"Client-side CGI, JavaScript / Python"	"<p>Is it possible to pass information from the client-side browser using JavaScript to a client-side Python script using Python CGI? I have done some light googling and everything points to server-side Python scripts receiving information from client-side browsers. I have a somewhat unique'ish project that would require the ability to pass this information locally from browser to a local script.</p>  <p>For example I would have a webpage with a table. In each cell in the table would be an image with a checkbox next to it. When I hit submit, the checked unique values from each checkbox that was checked would be pass to a local python script, from which further processing would occur.</p>  <p>Any thoughts on this? Thank you!</p>  <p>Edit - There is likely some confusion to as my oddball question, so a tad bit more clarification. My python script starts out by mounting and walking an NTFS volume, making a list of the path of every graphic file found. It then mounts a RAM disk. The python script then generates thumbnails of each image found. The python script then generates a ""master"" html page, and then dynamic ammounts of html pages to be used in an iframe. The HTML files and thumbnail files are stored in the RAM disk. The iframe pages contain the thumbnails in tables of all images found on the computer with check boxes next to each thumbnail. After all this information is generated the Python script then opens a browser calling that page in the RAM disk. The user is then supposed to check images of interest, the checked checkbox values are stored in an array. When the user has finished selecting all of their items, the user would submit. What I would like to then happen would be for the array values to be passed to the python script, then the python script would take each item referenced from the values in the array and hash them, then stick the thumbnails onto a PDF, 8 per page, each thumbnail with hash values of the original file, path and modified/accessed/created times from the OS. To generate the hash values of the local image files and get the MAC times I need to access the local machine with Python, as JS lives in it's little sandbox. Hope this makes sense!</p>"	2013-02-12 16:14:07.95 UTC	14836933	"<p>You can setup your own local server and connect browser to it. Something has to open connection and something has to listen for connections. So automatically your python client turns into server however it sounds. </p>  <p>Anyway, why you are not using just javascript? Most things can be done with lone js.</p>  <p><strong>UPDATE</strong>: </p>  <p>You can also just forget about html and javascript and make everything in python. Check <a href=""http://www.riverbankcomputing.com/software/pyqt/download"" rel=""nofollow"">PyQt4</a>, you can make pretty easly your own gui to check images with it.</p>"			2013-02-12 16:19:21.5 UTC
14853019	javascript|python|optimization|coffeescript	What is the best way to compare two lists in Javascript as you would do in Python?	"<p>I'm quite new with JavaScript but familiar with python. In Python I get this output:</p>  <pre><code>In [1]: [1,9,[5,4,2]] &gt; [1,9,[14,5,4]] Out[1]: False </code></pre>  <p>In JavaScript:</p>  <pre><code>&gt; [1,9,[5,4,2]] &gt; [1,9,[14,5,4]] true </code></pre>  <p>It seems that the arrays are converted into a string before the comparison.</p>  <p>Now i wanted to write a function by myself and walk through the array an compare each element. I came up with this coffeescript code:</p>  <pre><code>compare_list = (a, b)-&gt;     if typeof a == ""object"" and typeof b != ""object""         return 1     else if typeof a != ""object"" and typeof b == ""object""         return -1     else if typeof a != ""object"" and typeof b != ""object""         if a &gt; b             return 1         else if a &lt; b             return -1         else             return 0     else if typeof a == ""object"" and typeof b == ""object""         for i in [0...a.length]             if i &gt; (b.length-1)                 return 1             tmp = compare_list a[i], b[i]             if tmp != 0                 return tmp         if b.length &gt; a.length             return -1         return 0 </code></pre>  <p>It works this way but the <code>typeof a == ""object""</code> part looks not correct to me. Is there a simpler/better/more robust solution?</p>  <p>Thanks for your help.</p>"	2013-02-13 11:56:48.457 UTC	14854060	"<p>It's pretty ugly, but this seems to do the job:</p>  <pre><code>var compareLists = function compare(listA, listB) {     if (Array.isArray(listA)) {         if (Array.isArray(listB)) {             if (listA.length == 0) {                 if (listB.length == 0) {                     return 0;                 } else {                     return -1;                 }             } else {                 if (listB.length == 0) {                     return +1;                 } else {                     return compare(listA[0], listB[0]) ||                             compare(listA.slice(1), listB.slice(1));                 }             }         } else {             return -1; // arbitrary decision: arrays are smaller than scalars         }     } else {         if (Array.isArray(listB)) {             return +1; // arbitrary decision: scalars are larger than arrays         } else {             return listA &lt; listB ?  -1 : listA &gt; listB ? + 1 : 0;         }     } };  compareLists([1, 9, [5, 4, 2]], [1, 9, [14, 5, 4]]); // -1 compareLists([1, 9, [5, 4, 2]], [1, 9, [5, 4]]);     // +1 compareLists([1, 9, [5, 4, 2]], [1, 9, [5, 4, 2]]);  //  0 </code></pre>  <p>Depending upon your environment, you might want to shim <code>Array.isArray</code>:</p>  <pre><code>if (!Array.isArray) {     Array.isArray = function (obj) {         return Object.prototype.toString.call(obj) === ""[object Array]"";     }; } </code></pre>"			2013-02-13 12:53:16.723 UTC
14853019	javascript|python|optimization|coffeescript	What is the best way to compare two lists in Javascript as you would do in Python?	"<p>I'm quite new with JavaScript but familiar with python. In Python I get this output:</p>  <pre><code>In [1]: [1,9,[5,4,2]] &gt; [1,9,[14,5,4]] Out[1]: False </code></pre>  <p>In JavaScript:</p>  <pre><code>&gt; [1,9,[5,4,2]] &gt; [1,9,[14,5,4]] true </code></pre>  <p>It seems that the arrays are converted into a string before the comparison.</p>  <p>Now i wanted to write a function by myself and walk through the array an compare each element. I came up with this coffeescript code:</p>  <pre><code>compare_list = (a, b)-&gt;     if typeof a == ""object"" and typeof b != ""object""         return 1     else if typeof a != ""object"" and typeof b == ""object""         return -1     else if typeof a != ""object"" and typeof b != ""object""         if a &gt; b             return 1         else if a &lt; b             return -1         else             return 0     else if typeof a == ""object"" and typeof b == ""object""         for i in [0...a.length]             if i &gt; (b.length-1)                 return 1             tmp = compare_list a[i], b[i]             if tmp != 0                 return tmp         if b.length &gt; a.length             return -1         return 0 </code></pre>  <p>It works this way but the <code>typeof a == ""object""</code> part looks not correct to me. Is there a simpler/better/more robust solution?</p>  <p>Thanks for your help.</p>"	2013-02-13 11:56:48.457 UTC	14854658	"<p>This is basically the same algorithm avoiding the <code>typeof</code> operator and doing a little trick in the <code>for</code> loop to not check for the lengths of the arrays every time:</p>  <pre><code>cmp = (a, b) -&gt; (a &gt; b) - (a &lt; b)  cmpArray = (a, b)-&gt;   aIsArray = Array.isArray a   bIsArray = Array.isArray b    return cmp a, b if not aIsArray and not bIsArray   return -1       if not aIsArray and     bIsArray   return 1        if     aIsArray and not bIsArray    # Both are arrays.   len = Math.min a.length, b.length   for i in [0...len] by 1     if tmp = cmpArray a[i], b[i]       return tmp   a.length - b.length </code></pre>  <p>Unfortunately, CoffeeScript does not provide any sort of pattern matching. That would make this code much more DRY-er. You can fake a poor man's pattern matching using a <code>switch</code> statement if you want:</p>  <pre><code>cmpArray = (a, b)-&gt;   switch ""#{Array.isArray a},#{Array.isArray b}""     when 'false,false' then (a &gt; b) - (a &lt; b) # Compare primitives.     when 'false,true' then -1     when 'true,false' then 1     else       len = Math.min a.length, b.length       for i in [0...len] by 1         if tmp = cmpArray a[i], b[i]           return tmp       a.length - b.length </code></pre>  <p>But this is definitely not very idiomatic CoffeeScript. If CoffeeScript supported some kind of pattern matching, i'd definitely go for this kind of slution, as i think it reads very nicely being just a single expression and not relying (too much) on early returns.</p>"			2013-02-13 13:27:36.957 UTC
14853019	javascript|python|optimization|coffeescript	What is the best way to compare two lists in Javascript as you would do in Python?	"<p>I'm quite new with JavaScript but familiar with python. In Python I get this output:</p>  <pre><code>In [1]: [1,9,[5,4,2]] &gt; [1,9,[14,5,4]] Out[1]: False </code></pre>  <p>In JavaScript:</p>  <pre><code>&gt; [1,9,[5,4,2]] &gt; [1,9,[14,5,4]] true </code></pre>  <p>It seems that the arrays are converted into a string before the comparison.</p>  <p>Now i wanted to write a function by myself and walk through the array an compare each element. I came up with this coffeescript code:</p>  <pre><code>compare_list = (a, b)-&gt;     if typeof a == ""object"" and typeof b != ""object""         return 1     else if typeof a != ""object"" and typeof b == ""object""         return -1     else if typeof a != ""object"" and typeof b != ""object""         if a &gt; b             return 1         else if a &lt; b             return -1         else             return 0     else if typeof a == ""object"" and typeof b == ""object""         for i in [0...a.length]             if i &gt; (b.length-1)                 return 1             tmp = compare_list a[i], b[i]             if tmp != 0                 return tmp         if b.length &gt; a.length             return -1         return 0 </code></pre>  <p>It works this way but the <code>typeof a == ""object""</code> part looks not correct to me. Is there a simpler/better/more robust solution?</p>  <p>Thanks for your help.</p>"	2013-02-13 11:56:48.457 UTC	14854607	"<p>Let's make it minimalistic:</p>  <pre><code>function compare(a, b) {     if (a instanceof Array &amp;&amp; b instanceof Array) {         for (var r, i=0, l=Math.min(a.length, b.length); i&lt;l; i++)             if (r = compare(a[i], b[i]))                 return r;         return a.length - b.length;     } else // use native comparison algorithm, including ToPrimitive conversion         return (a &gt; b) - (a &lt; b); } </code></pre>  <p>(using <code>instanceof</code> for Array detection, see <a href=""http://perfectionkills.com/instanceof-considered-harmful-or-how-to-write-a-robust-isarray/"" rel=""nofollow"">this article</a> for discussion)</p>  <p>If you want to make objects always greater than primitives, you can change the last line to</p>  <pre><code>        return (typeof a===""object"")-(typeof b===""object"") || (a&gt;b)-(a&lt;b); </code></pre>"			2013-02-13 13:24:11.32 UTC
14853019	javascript|python|optimization|coffeescript	What is the best way to compare two lists in Javascript as you would do in Python?	"<p>I'm quite new with JavaScript but familiar with python. In Python I get this output:</p>  <pre><code>In [1]: [1,9,[5,4,2]] &gt; [1,9,[14,5,4]] Out[1]: False </code></pre>  <p>In JavaScript:</p>  <pre><code>&gt; [1,9,[5,4,2]] &gt; [1,9,[14,5,4]] true </code></pre>  <p>It seems that the arrays are converted into a string before the comparison.</p>  <p>Now i wanted to write a function by myself and walk through the array an compare each element. I came up with this coffeescript code:</p>  <pre><code>compare_list = (a, b)-&gt;     if typeof a == ""object"" and typeof b != ""object""         return 1     else if typeof a != ""object"" and typeof b == ""object""         return -1     else if typeof a != ""object"" and typeof b != ""object""         if a &gt; b             return 1         else if a &lt; b             return -1         else             return 0     else if typeof a == ""object"" and typeof b == ""object""         for i in [0...a.length]             if i &gt; (b.length-1)                 return 1             tmp = compare_list a[i], b[i]             if tmp != 0                 return tmp         if b.length &gt; a.length             return -1         return 0 </code></pre>  <p>It works this way but the <code>typeof a == ""object""</code> part looks not correct to me. Is there a simpler/better/more robust solution?</p>  <p>Thanks for your help.</p>"	2013-02-13 11:56:48.457 UTC	14854850	"<p>I had a go at implementing a JavaScript function <code>compareArrays</code> that behaves like array comparison in Python:</p>  <pre><code>function compareArrays(a, b) {     var aIsArray = Array.isArray(a),         bIsArray = Array.isArray(b),         cmp = 0;     if (!aIsArray || !bIsArray) {         throw new Error('Can\'t compare array to non-array: ' + a + ', ' + b);     }      _.find(a, function (aElem, index) {         var bElem = b[index];         if (Array.isArray(aElem) || Array.isArray(bElem)) {             cmp = compareArrays(aElem, bElem);         } else {             cmp = (aElem &gt; bElem) - (aElem &lt; bElem);         }          if (cmp !== 0) {             return true;         }     });      return cmp; } </code></pre>  <p>It uses <a href=""http://underscorejs.org/"" rel=""nofollow"">Underscore</a> to iterate over arrays, and recurses to handle nested arrays.</p>  <p>See my <a href=""http://jsfiddle.net/aknuds1/zQtfa/"" rel=""nofollow"">fiddle</a> which includes a primitive test suite.</p>  <h2>Test Results</h2>  <pre><code>[1,9,[5,4,2]] &lt; [1,9,[14,5,4]] [1,[1]] can't be compared to [1,1] [1,[2]] &gt; [1,[1]] [2] &gt; [1] [1] == [1] [] == [] </code></pre>"			2013-02-13 13:37:54.077 UTC
14853019	javascript|python|optimization|coffeescript	What is the best way to compare two lists in Javascript as you would do in Python?	"<p>I'm quite new with JavaScript but familiar with python. In Python I get this output:</p>  <pre><code>In [1]: [1,9,[5,4,2]] &gt; [1,9,[14,5,4]] Out[1]: False </code></pre>  <p>In JavaScript:</p>  <pre><code>&gt; [1,9,[5,4,2]] &gt; [1,9,[14,5,4]] true </code></pre>  <p>It seems that the arrays are converted into a string before the comparison.</p>  <p>Now i wanted to write a function by myself and walk through the array an compare each element. I came up with this coffeescript code:</p>  <pre><code>compare_list = (a, b)-&gt;     if typeof a == ""object"" and typeof b != ""object""         return 1     else if typeof a != ""object"" and typeof b == ""object""         return -1     else if typeof a != ""object"" and typeof b != ""object""         if a &gt; b             return 1         else if a &lt; b             return -1         else             return 0     else if typeof a == ""object"" and typeof b == ""object""         for i in [0...a.length]             if i &gt; (b.length-1)                 return 1             tmp = compare_list a[i], b[i]             if tmp != 0                 return tmp         if b.length &gt; a.length             return -1         return 0 </code></pre>  <p>It works this way but the <code>typeof a == ""object""</code> part looks not correct to me. Is there a simpler/better/more robust solution?</p>  <p>Thanks for your help.</p>"	2013-02-13 11:56:48.457 UTC	14853320	"<p>Trying to solve the same issue, I too only came up with a custom solution. <a href=""https://gist.github.com/ruxkor/2772234"" rel=""nofollow"">https://gist.github.com/ruxkor/2772234</a></p>  <p>As Javascript is using string coercion when comparing object, I think it is necessary to use a custom comparison function to simulate Python behavior.</p>"			2013-02-13 12:12:59.76 UTC
14919357	javascript|python|google-app-engine|facebook-login	GAE Python Javascript: How to insert response data from facebook login into the datastore?	"<p>So I finished linking the facebook login using the javascript sdk.</p>  <pre><code>&lt;script&gt;   window.fbAsyncInit = function() {     FB.init({         appId: '{{facebook_app_id}}',         channelUrl : '//localhost:8097/channel.html',         status: true,          cookie: true,         xfbml: true     });      FB.getLoginStatus(function(response) {       if (response.status === 'connected') {         // connected         alert(response.authResponse.userID);         FB.api('/me', function(response) {                   var userInfo = document.getElementById('user-info');                   userInfo.innerHTML = '&lt;img src=""https://graph.facebook.com/' + response.id + '/picture"" style=""margin-right:5px""/&gt;' + response.name;                 alert(response.name);                 document.getElementById('fb-root').appendChild(userInfo);                 });       } else if (response.status === 'not_authorized') {         // not_authorized         alert(""not_authorized"");       } else {         // not_logged_in         alert(""not_logged_in"");       }      });      FB.Event.subscribe('{% if current_user %}auth.logout{% else %}auth.login{% endif %}', function(response) {       {% if current_user %} window.location = ""/logout"" {% else %} window.location.reload(); {% endif %}     });   };   (function() {     var e = document.createElement('script');     e.type = 'text/javascript';     e.src = document.location.protocol + '//connect.facebook.net/en_US/all.js';     e.async = true;     document.getElementById('fb-root').appendChild(e);   }()); &lt;/script&gt; </code></pre>  <p>So,</p>  <p>How do you use javascript to pass arguments and insert data to the datastore securely. Example, Response.name.  Also in the facebook login. I realize they uses a token for the login response and it is also in their python facebook example datastore. However I created my own  login system, so I don't think I needed to use that token at all. Are there any risk for not using that token at all? </p>"	2013-02-17 08:38:45.143 UTC	14920336	"<p>Doing it with pure JavaScript is a bit harder, but you could use jQuery and more specifically the <a href=""http://api.jquery.com/jQuery.post/"" rel=""nofollow"">jQuery.post</a>. So by having the <code>id</code> and the <code>name</code> you could simply send this information back to your application like this:</p>  <pre><code>$.post(""/login/facebook/"", { id: response.id, name: response.name }) .done(function(data) {   alert(""Data Loaded: "" + data); }); </code></pre>  <p>On the backend side you should have a handler that would expect this kind kind of request in order to login that Facebook user.</p>  <p>The only problem as you can see here by doing that, is that anybody could make this POST request with any ID and Name and you wouldn't know if they actually real users or just trying to get into your system. That's why Facebook is using the access token, so you can send it back to your server and by using the <code>token</code>, the <code>App ID</code> and the <code>App Secret</code> you are able to retrieve the actual user.</p>  <p>On the next step, since you implemented your own login system, you should use session cookies to store the information regarding the currently logged in user, so you would be able to navigate through the site. Even though it's very doable to do it on your own, I would suggest you using some kind of framework that helps you with all that.</p>  <p>When we had a similar situation, after some research we concluded on using <a href=""http://flask.pocoo.org/"" rel=""nofollow"">Flask</a> because of the <a href=""http://flask.pocoo.org/docs/quickstart/#sessions"" rel=""nofollow"">Sessions</a> and later we found out that connecting Facebook wasn't that hard by using the the <a href=""http://pythonhosted.org/Flask-OAuth/"" rel=""nofollow"">Flask-OAuth</a> extension.</p>  <p>You can find a complete example using Flask, Sessions, Facebook Login and bunch of other things on one of my open source projects called <a href=""https://bitbucket.org/lipis/gae-init/src"" rel=""nofollow"">gae-init</a>.</p>"			2013-02-17 10:57:12.66 UTC
14922657	javascript|python|facebook|flask	Call Python function (Flask) from JavaScript file (melonJS) game on Facebook	"<p>I've looked through many topics on stackoverflow, github, Google and many more... and found many different answers although no simple answer.</p>  <p>I'm writing a Facebook game in JavaScript (using melonJS engine). The framework is Flask (Python).</p>  <p>What I am trying to do, is to have ability to send data between Python and JS code with no need to refresh the page (like database operations, email sending, etc.). I want the user just to see the game, choose options, play and the game does the rest.</p>  <p>While I have managed to see that something like below will work:</p>  <p>app.py</p>  <pre><code>def add(f,l,a):     g.db.execute('insert into persons (fname,lname,age) values (?, ?, ?)',             [f,l,a])     g.db.commit()  @app.route('/') def index():     cur = g.db.execute('select fname, lname, age from persons order by id desc')     entries = [dict(fname=row[0], lname=row[1], age=row[2]) for row in cur.fetchall()] return render_template('app.html',entries=entries,addtodb=add) </code></pre>  <p>app.html</p>  <pre><code>&lt;html xmlns=""http://www.w3.org/1999/xhtml"" xml:lang=""en"" lang=""en""&gt;  &lt;head&gt;     &lt;title&gt;THE GAME&lt;/title&gt;     &lt;meta http-equiv=""content-type"" content=""text/html;charset=utf-8"" /&gt;     &lt;meta name=""generator"" content=""Geany 1.22"" /&gt;      &lt;script type=""text/javascript"" src=""jquery-1.7.1.min.js""&gt;&lt;/script&gt;     &lt;script type=""text/javascript""&gt;     var adddb = '{{addtodb('Anne','Monk','12')}}';     &lt;/script&gt;  &lt;/head&gt;  &lt;body&gt; {{addtodb('Allie','Monk','78')}} &lt;ul class=entries&gt;         {% for entry in entries %}             &lt;li&gt;&lt;h2&gt;{{ entry.fname }} {{ entry.lname|safe }} &lt;/h2&gt; Age: {{ entry.age }}&lt;/li&gt;         {% else %}             &lt;li&gt;&lt;em&gt;Unbelievable. No entries here so far&lt;/em&gt;&lt;/li&gt;         {% endfor %} &lt;/ul&gt; &lt;/body&gt;  &lt;/html&gt; </code></pre>  <p>And both the {{addtodb}} will work. I just wonder how to send the function to file.js that will be only linked to the HTML (like jquery above), not put directly inside. The ""{{...}}"" will not work as I already checked. I suppose I have to find some module to Python or use AJAX maybe, except I have no idea where to start.</p>"	2013-02-17 15:25:11.53 UTC	14926139	"<p>You have to use AJAX. On the server side, you just need a URL that returns your data in JSON form. On the client side, I suggest you use jQuery for AJAX requests. Just request the data from the server with jQuery and render the data into the DOM.</p>"			2013-02-17 21:15:53.74 UTC
14922657	javascript|python|facebook|flask	Call Python function (Flask) from JavaScript file (melonJS) game on Facebook	"<p>I've looked through many topics on stackoverflow, github, Google and many more... and found many different answers although no simple answer.</p>  <p>I'm writing a Facebook game in JavaScript (using melonJS engine). The framework is Flask (Python).</p>  <p>What I am trying to do, is to have ability to send data between Python and JS code with no need to refresh the page (like database operations, email sending, etc.). I want the user just to see the game, choose options, play and the game does the rest.</p>  <p>While I have managed to see that something like below will work:</p>  <p>app.py</p>  <pre><code>def add(f,l,a):     g.db.execute('insert into persons (fname,lname,age) values (?, ?, ?)',             [f,l,a])     g.db.commit()  @app.route('/') def index():     cur = g.db.execute('select fname, lname, age from persons order by id desc')     entries = [dict(fname=row[0], lname=row[1], age=row[2]) for row in cur.fetchall()] return render_template('app.html',entries=entries,addtodb=add) </code></pre>  <p>app.html</p>  <pre><code>&lt;html xmlns=""http://www.w3.org/1999/xhtml"" xml:lang=""en"" lang=""en""&gt;  &lt;head&gt;     &lt;title&gt;THE GAME&lt;/title&gt;     &lt;meta http-equiv=""content-type"" content=""text/html;charset=utf-8"" /&gt;     &lt;meta name=""generator"" content=""Geany 1.22"" /&gt;      &lt;script type=""text/javascript"" src=""jquery-1.7.1.min.js""&gt;&lt;/script&gt;     &lt;script type=""text/javascript""&gt;     var adddb = '{{addtodb('Anne','Monk','12')}}';     &lt;/script&gt;  &lt;/head&gt;  &lt;body&gt; {{addtodb('Allie','Monk','78')}} &lt;ul class=entries&gt;         {% for entry in entries %}             &lt;li&gt;&lt;h2&gt;{{ entry.fname }} {{ entry.lname|safe }} &lt;/h2&gt; Age: {{ entry.age }}&lt;/li&gt;         {% else %}             &lt;li&gt;&lt;em&gt;Unbelievable. No entries here so far&lt;/em&gt;&lt;/li&gt;         {% endfor %} &lt;/ul&gt; &lt;/body&gt;  &lt;/html&gt; </code></pre>  <p>And both the {{addtodb}} will work. I just wonder how to send the function to file.js that will be only linked to the HTML (like jquery above), not put directly inside. The ""{{...}}"" will not work as I already checked. I suppose I have to find some module to Python or use AJAX maybe, except I have no idea where to start.</p>"	2013-02-17 15:25:11.53 UTC	14927561	"<p>The answer is ""AJAX"", but hopefully some simplified elaboration will help point you in the right direction:</p>  <p>You need to make some kind of JS event (clicking a link, clicking a button, an event firing in your game) trigger an asynchronous (i.e. doesn't wait for the server's response) or synchronous (i.e. wait to hear back) call to a Flask endpoint on the server (i.e. the route you set up) with a request. If you're creating a new entry, that's probably a POST request. Validate it on the server and save it to the database.</p>  <p>If you also want the page to reflect anything that happened as a result of the server's behavior with the database, your Flask endpoint needs to return a JSON response. Since you already generated the HTML and JS that's on the page, a function in the JS needs to be bound as an event listener so it is looking for that JSON response, then parses the JSON and executes whatever code you put in the function.</p>  <p>JQuery's ajax functionality does that all for you. <a href=""https://stackoverflow.com/questions/5004233/jquery-ajax-post-example"">Here is an example of a jQuery AJAX POST</a>. It doesn't matter that the example uses PHP; you parse the POST normally in your Flask view and return jsonify(data). <a href=""http://flask.pocoo.org/docs/api/#flask.jsonify"" rel=""nofollow noreferrer"">See docs on Flask.jsonify</a>.</p>"			2013-02-17 23:55:11.523 UTC
14981069	javascript|python|node.js|brython	How to compile Python with Brython to Javascript (to run with nodejs)?	"<p>How can I use <a href=""https://www.brython.info/"" rel=""nofollow noreferrer"">Brython</a> to compile Python to Javascript? I want to do this on my computer, so I can the run Javascript with nodejs, eg.</p> <pre><code>$ python hello.py Hello world $ brython hello.py -o hello.js $ node hello.js Hello world </code></pre> <p>The examples on the Brython website only explain how do this in the browser <a href=""http://www.brython.info/index_en.html"" rel=""nofollow noreferrer"">http://www.brython.info/index_en.html</a></p>"	2013-02-20 13:29:06.65 UTC	14981394	"<p>It seems they are very browser oriented, there is no command line option out of the box.</p>  <p>You can try to use their code youself from node.js, perhaps it will work easily. It seems the <code>$py2js(src, module)</code> function does the actual conversion so maybe you can just run it with the python code string as first parameter.</p>  <p>Another option is to use pyjs: <a href=""http://pyjs.org/"" rel=""noreferrer"">http://pyjs.org/</a>   which does something similar and has command line tool to do the conversion.</p>"			2013-02-20 13:45:34.36 UTC
14981069	javascript|python|node.js|brython	How to compile Python with Brython to Javascript (to run with nodejs)?	"<p>How can I use <a href=""https://www.brython.info/"" rel=""nofollow noreferrer"">Brython</a> to compile Python to Javascript? I want to do this on my computer, so I can the run Javascript with nodejs, eg.</p> <pre><code>$ python hello.py Hello world $ brython hello.py -o hello.js $ node hello.js Hello world </code></pre> <p>The examples on the Brython website only explain how do this in the browser <a href=""http://www.brython.info/index_en.html"" rel=""nofollow noreferrer"">http://www.brython.info/index_en.html</a></p>"	2013-02-20 13:29:06.65 UTC	31885725	"<p>It is possible to compile Python code to javascript and load it afterwards using import statement . See <a href=""https://github.com/brython-dev/brython/issues/222"" rel=""nofollow"">brython:ticket:222</a> for further details. You'll have to load brython js lib in advance because , in the end, Python semantics are quite different from Javascript's . You can include compiled .pyc.js code in .vfs.js files in order to speed up module import times.</p>  <p>Disclaimer : I'm a committer of Brython project .</p>"			2015-08-07 20:00:42.88 UTC
14981069	javascript|python|node.js|brython	How to compile Python with Brython to Javascript (to run with nodejs)?	"<p>How can I use <a href=""https://www.brython.info/"" rel=""nofollow noreferrer"">Brython</a> to compile Python to Javascript? I want to do this on my computer, so I can the run Javascript with nodejs, eg.</p> <pre><code>$ python hello.py Hello world $ brython hello.py -o hello.js $ node hello.js Hello world </code></pre> <p>The examples on the Brython website only explain how do this in the browser <a href=""http://www.brython.info/index_en.html"" rel=""nofollow noreferrer"">http://www.brython.info/index_en.html</a></p>"	2013-02-20 13:29:06.65 UTC	28382807	"<p>Brython has a console that runs in the browser, but not a compiler. It is meant for you to either import your python scripts into the html file, or write your python code into the html file. See pyjs if you wish a conversion tool before the page loads.</p>"			2015-02-07 13:41:07.823 UTC
14996414	jquery|python|ajax|cgi|raspberry-pi	Running Python CGI Scripts from Javascript and JQuery Mobile UI	"<p>The workflow I'm trying to accomplish is as follows.</p>  <ul> <li>There is a jQuery Mobile UI with a bunch of range slider elements.  Each one is for controlling a different function.</li> <li>When a user moves and releases any one of these sliders, a jQuery event should be triggered that makes an AJAX call (I don't care if it uses JSON, XML, POST, etc - fastest is best)</li> <li>The Ajax call contains info about what slider was moved, and what its new value is (ex: id=slider1, value=215)</li> <li>The Ajax executes a python script in the CGI bin that reads the ID and value and controls some hardware connected to my Raspberry Pi via Serial (the Raspberry pi also running the webserver).</li> </ul>  <p>I have a JQuery UI with a bunch of sliders.  Each slider code looks like this:</p>  <pre><code>&lt;div data-role=""fieldcontain""&gt;     &lt;fieldset data-role=""controlgroup""&gt;         &lt;div class=""rgbw_label""&gt;&lt;label for=""red_slider""&gt;             Red:         &lt;/label&gt;&lt;/div&gt;         &lt;input type=""range"" id=""red_slider"" name=""red_slider"" value=""0"" min=""0"" max=""255"" data-highlight=""true"" /&gt;     &lt;/fieldset&gt; &lt;/div&gt; </code></pre>  <p>There needs to be some accompanying JQuery that does something like this:</p>  <pre><code> $(document).ready(function () { $.ajax({     type: ""POST"",     url: ""cgi-bin/command.py"",     success: function (msg)     {         alert(""Data Saved: "" + msg);     }      });  }); </code></pre>  <p>Obviously two major things have to change about the JS.  First, it needs to execute when the slider is released (not on page load), and second it needs to actually pass the value of the slider to the Python script some how.  I set it up like this just to test.  When I load the page, this tester python script is executed correctly, and some hardware connected to the Raspberry Pi is controlled properly.  I know I should be using the <a href=""http://jquerymobile.com/demos/1.2.0/docs/forms/slider/events.html"" rel=""nofollow"">slidestop event</a>, but I can't get it to work.  I'm also not sure of what is the BEST way to send some variables to the python script.</p>  <p>My python script looks like this, right now:     #!/usr/bin/python</p>  <pre><code>import cgi  import serial ser = serial.Serial('/dev/ttyUSB0', 57600) ser.write(""Hello, this is a command!\n"")      # write a string ser.close() </code></pre>  <p>So, it's not looking for any kind of incoming data, it just gets called and writes some Serial data.  It should be able to receive data from the AJAX call, and adjust the Serial writing command based on the info it receives.  I need help getting that info into variables that I can work with.  I assume I should also pass back some kind of ""I'm done"" message back to the JavaScript calling function.</p>  <p>I'm looking forward to any insight that folks might have on either high level issues, or ways to solve more specific problems that I've listed here.</p>  <p>Thanks!</p>"	2013-02-21 07:05:32.84 UTC	15014298	"<p>How about the following:</p>  <pre><code>... &lt;link rel=""stylesheet"" href=""http://code.jquery.com/mobile/1.3.0/jquery.mobile-1.3.0.min.css""&gt; &lt;script src=""http://code.jquery.com/jquery-1.9.1.min.js""&gt;&lt;/script&gt; &lt;script src=""http://code.jquery.com/mobile/1.3.0/jquery.mobile-1.3.0.min.js""&gt;&lt;/script&gt; ... &lt;div data-role=""fieldcontain""&gt;     &lt;fieldset data-role=""controlgroup""&gt;         &lt;div class=""rgbw_label""&gt;&lt;label for=""red_slider""&gt;             Red:         &lt;/label&gt;&lt;/div&gt;         &lt;input type=""range"" id=""red_slider"" name=""red_slider"" class=""posting-slider"" data-slider-id=""1"" value=""0"" min=""0"" max=""255"" data-highlight=""true"" /&gt;     &lt;/fieldset&gt; &lt;/div&gt; </code></pre>  <p>With the following Javascript:</p>  <pre><code>$(document).ready(function() {     $('.posting-slider').on('slidestop', function(e) {         $.post('/server/script.py', { id: $(this).data('slider-id'), value: e.target.value }, function(data, textStatus, jqXHR) {             console.log('POSTed: ' + textStatus);         });     }); }); </code></pre>  <p>and finally, the python:</p>  <pre><code>import cgi form = cgi.FieldStorage()  import json  import serial ser = serial.Serial('/dev/ttyUSB0', 57600) ser.write(""Hello, this is a command for value %s from slider id %s!\n"" % (form[""id""], form[""value""]))      # write a string ser.close()  print ""Content-type: application/json"" print print(json.JSONEncoder().encode({""status"":""ok""})) </code></pre>"			2013-02-21 23:35:36.693 UTC
15031856	javascript|python|postgresql|flot	Converting postgresql timestamp to JavaScript timestamp in Python	"<p>I have a postgre database with a timestamp column and I have a REST service in Python that executes a query in the database and returns data to a JavaScript front-end to plot a graph using <code>flot</code>.</p>  <p>Now the problem I have is that <code>flot</code> can automatically handle the date using JavaScript's TIMESTAMP, but I don't know how to convert the Postgre timestamps to JavaScript TIMESTAMP (YES a timestamp, not a date stop editing if you don't know the answer) in Python. I don't know if this is the best approach (maybe the conversion can be done in JavaScript?). Is there a way to do this?</p>"	2013-02-22 19:33:00.947 UTC	15032100	"<p>You can't send a Python or Javascript ""datetime"" object over JSON. JSON only accepts more basic data types like Strings, Ints, and Floats.</p>  <p>The way I usually do it is send it as text, using Python's <code>datetime.isoformat()</code> then parse it on the Javascript side.</p>"			2013-02-22 19:48:01.207 UTC
15031856	javascript|python|postgresql|flot	Converting postgresql timestamp to JavaScript timestamp in Python	"<p>I have a postgre database with a timestamp column and I have a REST service in Python that executes a query in the database and returns data to a JavaScript front-end to plot a graph using <code>flot</code>.</p>  <p>Now the problem I have is that <code>flot</code> can automatically handle the date using JavaScript's TIMESTAMP, but I don't know how to convert the Postgre timestamps to JavaScript TIMESTAMP (YES a timestamp, not a date stop editing if you don't know the answer) in Python. I don't know if this is the best approach (maybe the conversion can be done in JavaScript?). Is there a way to do this?</p>"	2013-02-22 19:33:00.947 UTC	15032253	"<p>Use <a href=""http://www.postgresql.org/docs/9.0/static/functions-datetime.html#FUNCTIONS-DATETIME-EXTRACT"">date_part</a> or extract in postgres to return a timestamp.  </p>  <pre><code>select date_part('epoch',mydatefield)*1000 from table; </code></pre>  <p>Then you can just send that on over directly, noting that <code>epoch</code> is <em>seconds</em> since Jan 1, 1970, whereas JS wants <em>milliseconds</em>, thus the <code>*1000</code>.  If you need it to actually be a date, once you receive it in Javascript, you can convert it to a date by calling <code>new Date(timestamp_from_pg)</code>.</p>  <p>Note that flot can work off of timestamps as numbers, no need to actually create <code>Date</code> objects.</p>"			2013-02-22 19:57:36.523 UTC
15044521	javascript|python|geolocation|timezone	Javascript or Python - How do I figure out if it's night or day?	"<p><strong>any idea how I figure out if it's currently night/day or sunrise/dawn based on time and location of the user?</strong></p>  <p>I haven't found anything useful that I could use within either the client or backend.</p>  <p>What makes it tricky is the hour doesn't necessarily define if it is night and day, this depends pretty much on the year, month, day, hour and geo coordinates.</p>  <hr>  <p>For clarification... to emulate something like this.</p>  <p><img src=""https://i.stack.imgur.com/Kx9aT.jpg"" alt=""enter image description here""></p>  <hr>  <p><strong>A way to approximate this would be very useful as well.</strong></p>  <hr>  <p>Hope that someone can help!</p>"	2013-02-23 19:15:20.15 UTC	69662021	"<p>You can use prayer api wich contain all data with a great precision about sunset and sunrise and then compare them to the actual time by user localistation , <a href=""https://api.pray.zone/v2/times/today.json?longitude=39.81666564941406&amp;latitude=21.416667938232425&amp;elevation=333"" rel=""nofollow noreferrer"">Api Link</a></p> <p>You can use this function to determine if is it day or night with just longitude and latitude</p> <p><strong>CODE</strong></p> <pre class=""lang-py prettyprint-override""><code>from timezonefinder import TimezoneFinder import requests from datetime import datetime, timezone import pytz  def TimeEstimation(lat,lng):     '''function to check DAY/NIGHT for a particular localisation'''     obj = TimezoneFinder()     result = obj.timezone_at(lng=lng, lat=lat)     timezone =  pytz.timezone(result)     hour = str(datetime.now(timezone).hour)     minute = str(datetime.now(timezone).minute)          actual_time = datetime.strptime(hour+&quot;:&quot;+minute,'%H:%M')          #asking salat api to get sunset and sunrise time based on longitude and latitude          response = requests.get(&quot;https://api.pray.zone/v2/times/today.json?longitude=&quot;+str(lng)+&quot;&amp;latitude=&quot;+str(lat)+&quot;&amp;elevation=0&quot;)     api_data = response.json()     sunset = api_data.get(&quot;results&quot;).get(&quot;datetime&quot;)[0].get(&quot;times&quot;).get(&quot;Sunset&quot;)     sunset=datetime.strptime(sunset,'%H:%M')          sunrise = api_data.get(&quot;results&quot;).get(&quot;datetime&quot;)[0].get(&quot;times&quot;).get(&quot;Imsak&quot;)     sunrise=datetime.strptime(sunrise,'%H:%M')      if actual_time &gt;= sunset or actual_time &lt;= sunrise:         print(&quot;is night&quot;)         return(False)      else:         print(&quot;is day&quot;)         return(True) </code></pre>"			2021-10-21 12:30:55.46 UTC
15044521	javascript|python|geolocation|timezone	Javascript or Python - How do I figure out if it's night or day?	"<p><strong>any idea how I figure out if it's currently night/day or sunrise/dawn based on time and location of the user?</strong></p>  <p>I haven't found anything useful that I could use within either the client or backend.</p>  <p>What makes it tricky is the hour doesn't necessarily define if it is night and day, this depends pretty much on the year, month, day, hour and geo coordinates.</p>  <hr>  <p>For clarification... to emulate something like this.</p>  <p><img src=""https://i.stack.imgur.com/Kx9aT.jpg"" alt=""enter image description here""></p>  <hr>  <p><strong>A way to approximate this would be very useful as well.</strong></p>  <hr>  <p>Hope that someone can help!</p>"	2013-02-23 19:15:20.15 UTC	15044683	"<p>A concise description of an algorithm to calculate the sunrise and sunset is provided by the United States Naval Observatory, available here:</p>  <p><a href=""http://edwilliams.org/sunrise_sunset_algorithm.htm"" rel=""nofollow noreferrer"">http://edwilliams.org/sunrise_sunset_algorithm.htm</a></p>  <p>In addition to providing the date and location, you also need to select a Zenith angle (at which the sun will be considered to have ""risen"" or ""set"") - the page linked has several options.</p>  <hr>  <p><strong>Update</strong></p>  <p>Because the linked page is no longer available, I am quoting its text below.  Note that the formulae included are in a pseudo-code-like form, rather than JavaScript.</p>  <pre class=""lang-none prettyprint-override""><code>Source:     Almanac for Computers, 1990     published by Nautical Almanac Office     United States Naval Observatory     Washington, DC 20392  Inputs:     day, month, year:      date of sunrise/sunset     latitude, longitude:   location for sunrise/sunset     zenith:                Sun's zenith for sunrise/sunset       offical      = 90 degrees 50'       civil        = 96 degrees       nautical     = 102 degrees       astronomical = 108 degrees      NOTE: longitude is positive for East and negative for West         NOTE: the algorithm assumes the use of a calculator with the         trig functions in ""degree"" (rather than ""radian"") mode. Most         programming languages assume radian arguments, requiring back         and forth convertions. The factor is 180/pi. So, for instance,         the equation RA = atan(0.91764 * tan(L)) would be coded as RA         = (180/pi)*atan(0.91764 * tan((pi/180)*L)) to give a degree         answer with a degree input for L.   1. first calculate the day of the year      N1 = floor(275 * month / 9)     N2 = floor((month + 9) / 12)     N3 = (1 + floor((year - 4 * floor(year / 4) + 2) / 3))     N = N1 - (N2 * N3) + day - 30  2. convert the longitude to hour value and calculate an approximate time      lngHour = longitude / 15      if rising time is desired:       t = N + ((6 - lngHour) / 24)     if setting time is desired:       t = N + ((18 - lngHour) / 24)  3. calculate the Sun's mean anomaly      M = (0.9856 * t) - 3.289  4. calculate the Sun's true longitude      L = M + (1.916 * sin(M)) + (0.020 * sin(2 * M)) + 282.634     NOTE: L potentially needs to be adjusted into the range [0,360) by adding/subtracting 360  5a. calculate the Sun's right ascension      RA = atan(0.91764 * tan(L))     NOTE: RA potentially needs to be adjusted into the range [0,360) by adding/subtracting 360  5b. right ascension value needs to be in the same quadrant as L      Lquadrant  = (floor( L/90)) * 90     RAquadrant = (floor(RA/90)) * 90     RA = RA + (Lquadrant - RAquadrant)  5c. right ascension value needs to be converted into hours      RA = RA / 15  6. calculate the Sun's declination      sinDec = 0.39782 * sin(L)     cosDec = cos(asin(sinDec))  7a. calculate the Sun's local hour angle      cosH = (cos(zenith) - (sinDec * sin(latitude))) / (cosDec * cos(latitude))      if (cosH &gt;  1)        the sun never rises on this location (on the specified date)     if (cosH &lt; -1)       the sun never sets on this location (on the specified date)  7b. finish calculating H and convert into hours      if if rising time is desired:       H = 360 - acos(cosH)     if setting time is desired:       H = acos(cosH)      H = H / 15  8. calculate local mean time of rising/setting      T = H + RA - (0.06571 * t) - 6.622  9. adjust back to UTC      UT = T - lngHour     NOTE: UT potentially needs to be adjusted into the range [0,24) by adding/subtracting 24  10. convert UT value to local time zone of latitude/longitude      localT = UT + localOffset </code></pre>"			2013-02-23 19:31:47.123 UTC
15044521	javascript|python|geolocation|timezone	Javascript or Python - How do I figure out if it's night or day?	"<p><strong>any idea how I figure out if it's currently night/day or sunrise/dawn based on time and location of the user?</strong></p>  <p>I haven't found anything useful that I could use within either the client or backend.</p>  <p>What makes it tricky is the hour doesn't necessarily define if it is night and day, this depends pretty much on the year, month, day, hour and geo coordinates.</p>  <hr>  <p>For clarification... to emulate something like this.</p>  <p><img src=""https://i.stack.imgur.com/Kx9aT.jpg"" alt=""enter image description here""></p>  <hr>  <p><strong>A way to approximate this would be very useful as well.</strong></p>  <hr>  <p>Hope that someone can help!</p>"	2013-02-23 19:15:20.15 UTC	15044612	"<p><strong>Note to Python 3 users:</strong> I just tried the code below using Python 3.8.6 and it works in that version, too. I had to convert the <code>print</code> statements into <code>print()</code> function calls, but that was all.</p> <p>I noticed that the example implementation of <code>tzinfo</code> classes is different from what's in the Python 2 documentation, but using the example <code>tzinfo</code> classes in the <a href=""https://docs.python.org/3/_downloads/6b45dc135219d1404be49d606589a11d/tzinfo_examples.py"" rel=""nofollow noreferrer"">tzinfo_example.py</a> file referenced in the <a href=""https://docs.python.org/3/library/datetime.html#tzinfo-objects"" rel=""nofollow noreferrer"">latest documentation</a> worked just fine (but so did the older 2.x versions).</p> <p>You can download a Python 3 version of the <code>sunriseset.py</code> file shown below from <a href=""https://pastebin.com/2kqjZbM3"" rel=""nofollow noreferrer"">here</a>.</p> <hr /> <p>You can do as I did and use this public domain <a href=""http://web.archive.org/web/20130120173224/http://www.kortis.to/radix/python/code/Sun.py"" rel=""nofollow noreferrer"">Sun.py</a> module to compute the position of the sun relative to positions on the Earth. (<em><strong>Warning:</strong></em> it contains tab characters and assumes tabs are every 8 characters.) It's pretty old, but has continued to work well for me for many years. I made a few superficial modifications to it to be more up-to-date with Python 2.7, such as making the few classes in it new-style, but for the most part it's unchanged.</p> <p>Here's one module I created, called <code>sunriseset.py</code>, which shows how to use it to calculate the sunrise and sunset times for a specific location given its geographic coordinates and timezone. The referenced <code>timezone</code> module is an implementation of the <a href=""http://docs.python.org/2/library/datetime.html?highlight=tzinfo#datetime.tzinfo"" rel=""nofollow noreferrer""><code>tzinfo</code></a> abstract base class described in the <code>datetime</code> module's documentation on <a href=""http://docs.python.org/2/library/datetime.html?highlight=tzinfo#tzinfo-objects"" rel=""nofollow noreferrer""><code>tzinfo</code>objects</a>.</p> <pre><code># -*- coding: iso-8859-1 -*- import datetime import timezone  # concrete tzinfo subclass based on the Python docs import math from Sun import Sun  __all__ = ['getsuninfo', 'Place']  class Place(object):     def __init__(self, name, coords, tz=timezone.Pacific):         self.name = name        # string         self.coords = coords    # tuple (E/W long, N/S lat)         self.tz = tz            # tzinfo constant  def _hoursmins(hours):     &quot;&quot;&quot;Convert floating point decimal time in hours to integer hrs,mins&quot;&quot;&quot;     frac,h = math.modf(hours)     m = round(frac*60, 0)     if m == 60: # rounded up to next hour         h += 1; m = 0     return int(h),int(m)  def _ymd(date):     &quot;&quot;&quot;Return y,m,d from datetime object as tuple&quot;&quot;&quot;     return date.timetuple()[:3]  def getsuninfo(location, date=None):     &quot;&quot;&quot;Return local datetime of sunrise, sunset, and length of day in hrs,mins)&quot;&quot;&quot;     if date == None:         querydate = datetime.date.today()     else: # date given should be datetime instance         querydate = date      args = _ymd(querydate) + location.coords     utcrise, utcset = Sun().sunRiseSet(*args)     daylength = Sun().dayLength(*args)     hrs,mins = _hoursmins(daylength)      risehour, risemin = _hoursmins(utcrise)     sethour, setmin   = _hoursmins(utcset)      # convert times to timedelta values (ie from midnight utc of the date)     midnight = datetime.datetime(tzinfo=timezone.utc, *_ymd(querydate))     deltarise = datetime.timedelta(hours=risehour, minutes=risemin)     utcdatetimerise = midnight+deltarise     deltaset = datetime.timedelta(hours=sethour, minutes=setmin)     utcdatetimeset  = midnight+deltaset      # convert results from UTC time to local time of location     localrise = utcdatetimerise.astimezone(location.tz)     localset  = utcdatetimeset.astimezone(location.tz)      return localrise, localset, hrs, mins  if __name__ == &quot;__main__&quot;:     import datetime, timezone      def unittest(location, testdate):         risetime, settime, hrs, mins = getsuninfo(location, testdate)          print &quot;Location:&quot;, location.name         print &quot;Date:&quot;, testdate.strftime(&quot;%a %x&quot;)         print risetime.strftime(&quot;Sunrise %I:%M %p&quot;), settime.strftime(&quot;- Sunset %I:%M %p (%Z)&quot;)         print &quot;daylight: %d:%02d&quot; % (hrs,mins)         print      place = Place(&quot;My House&quot;, (-121.990278, 47.204444), timezone.Pacific)      # test dates just before and after DST transitions     print &quot;pre 2007&quot;     print &quot;=========&quot;     unittest(place, datetime.date(2006, 4, 1))     unittest(place, datetime.date(2006, 4, 2))     unittest(place, datetime.date(2006, 10, 28))     unittest(place, datetime.date(2006, 10, 29))      print &quot;2007&quot;     print &quot;=========&quot;     unittest(place, datetime.date(2007, 3, 10))     unittest(place, datetime.date(2007, 3, 11))     unittest(place, datetime.date(2007, 11, 3))     unittest(place, datetime.date(2007, 11, 4)) </code></pre>"			2013-02-23 19:25:17.26 UTC
15044521	javascript|python|geolocation|timezone	Javascript or Python - How do I figure out if it's night or day?	"<p><strong>any idea how I figure out if it's currently night/day or sunrise/dawn based on time and location of the user?</strong></p>  <p>I haven't found anything useful that I could use within either the client or backend.</p>  <p>What makes it tricky is the hour doesn't necessarily define if it is night and day, this depends pretty much on the year, month, day, hour and geo coordinates.</p>  <hr>  <p>For clarification... to emulate something like this.</p>  <p><img src=""https://i.stack.imgur.com/Kx9aT.jpg"" alt=""enter image description here""></p>  <hr>  <p><strong>A way to approximate this would be very useful as well.</strong></p>  <hr>  <p>Hope that someone can help!</p>"	2013-02-23 19:15:20.15 UTC	16405311	"<p><strong><a href=""http://rhodesmill.org/pyephem/index.html"">PyEphem</a></strong> can be used to calculate the time to the next sunrise and sunset. Building upon <a href=""http://scienceoss.com/calculate-sunrise-and-sunset-with-pyephem/"">a blog post I found</a> and <a href=""http://rhodesmill.org/pyephem/rise-set.html"">the documentation of rise-set</a>, your problem can be solved as follows. Lets assume I am your user, and my location is <a href=""http://en.wikipedia.org/wiki/Oldenburg"">Oldenburg (Oldb), Germany</a>.</p>    <pre><code>import ephem  user = ephem.Observer() user.lat = '53.143889'    # See wikipedia.org/Oldenburg user.lon = '8.213889'     # See wikipedia.org/Oldenburg user.elevation = 4        # See wikipedia.org/Oldenburg user.temp = 20            # current air temperature gathered manually user.pressure = 1019.5    # current air pressure gathered manually  next_sunrise_datetime = user.next_rising(ephem.Sun()).datetime() next_sunset_datetime = user.next_setting(ephem.Sun()).datetime()  # If it is daytime, we will see a sunset sooner than a sunrise. it_is_day = next_sunset_datetime &lt; next_sunrise_datetime print(""It's day."" if it_is_day else ""It's night."")  # If it is nighttime, we will see a sunrise sooner than a sunset. it_is_night = next_sunrise_datetime &lt; next_sunset_datetime print(""It's night."" if it_is_night else ""It's day."") </code></pre>  <h2>Notes</h2>  <ul> <li>For some reason <code>lat</code> and <code>lon</code> need to be strings but ephem does not complain if they are floats.</li> <li>For best results, you might want to get the current air temperature and air pressure.</li> </ul>  <h2>Prerequisites</h2>  <p>This should work with at least Python 2.7 (with <code>pip-2.7 install pyephem</code>) and Python 3.2 (with <code>pip-3.2 install ephem</code>).</p>  <p>Make sure to have a network time protocol client running on the system. E.g. on Debian Linux:</p>  <pre><code>$ sudo apt-get install ntp $ sudo /etc/init.d/ntp start </code></pre>  <p>Make sure to have the correct timezone set on your system. E.g. on Debian Linux:</p>  <pre><code>$ sudo dpkg-reconfigure tzdata </code></pre>"			2013-05-06 18:56:24.4 UTC
15076773	javascript|python	String sequence similarity / difference ratio in javascript and python	"<p>Say I had a reference string</p>  <p>""abcdabcd""</p>  <p>and a target string</p>  <p>""abcdabEd""</p>  <p>Is there a simple way in javascript and python to get the string sequence similarity ratio?</p>  <p>Example:</p>  <p>""abcdabcd"" differs from ""abcdabEd"" by the character ""E"" so the ratio of similarity is high but less than 1.0</p>  <p>""bcdabcda"" differs from ""abcdabEd"" greatly because every character at a specific string index is different so the similarity ratio is 0.0</p>  <p>note that the similarity ratio is not how many similar characters are in each string but how similar the sequences are from each other</p>  <p>therefore code like </p>  <pre><code># python - incorrect for this problem  difflib.SequenceMatcher(None, ""bcdabcda"", ""abcdabEd"").ratio() </code></pre>  <p>would be wrong</p>"	2013-02-25 21:25:23.38 UTC	15077476	"<p>You can use this general formula, it works with strings or arrays of objects with the same <em>or different lengths</em>:</p>  <p>similarity=#common/(sqrt(nx*ny));</p>  <p>where #common are the common occurrences (in this case the number of matching characters);<br /> nx is the length of the array of objects x (or the string called x);<br /> ny is the length of the array of objects y (or the string called y).</p>  <p>If the length of the strings is the same that formula reduces to the simple case:</p>  <p>similarity=#common/n;<br /> where: n=nx=ny.</p>  <p>In python this formula for similarity of strings (considering the order of characters, as you want) can be written as:</p>  <pre><code>from math import sqrt  def similarity(x, y):     n=min(len(x), len(y))     common=0     for i in range(n):         if (x[i]==y[i]):             common+=1     return common/sqrt(len(x)*len(y)) </code></pre>  <p>and in javascript it's analogous.</p>"			2013-02-25 22:10:08.943 UTC
15076773	javascript|python	String sequence similarity / difference ratio in javascript and python	"<p>Say I had a reference string</p>  <p>""abcdabcd""</p>  <p>and a target string</p>  <p>""abcdabEd""</p>  <p>Is there a simple way in javascript and python to get the string sequence similarity ratio?</p>  <p>Example:</p>  <p>""abcdabcd"" differs from ""abcdabEd"" by the character ""E"" so the ratio of similarity is high but less than 1.0</p>  <p>""bcdabcda"" differs from ""abcdabEd"" greatly because every character at a specific string index is different so the similarity ratio is 0.0</p>  <p>note that the similarity ratio is not how many similar characters are in each string but how similar the sequences are from each other</p>  <p>therefore code like </p>  <pre><code># python - incorrect for this problem  difflib.SequenceMatcher(None, ""bcdabcda"", ""abcdabEd"").ratio() </code></pre>  <p>would be wrong</p>"	2013-02-25 21:25:23.38 UTC	15076979	"<p>how bout </p>  <pre><code>float(sum([a==b for a,b in zip(my_string1,my_string2)]))/len(my_string1)    &gt;&gt;&gt; s1,s2 = ""abcdabcd"",""abcdabEd"" &gt;&gt;&gt; print float(sum([a==b for a,b in zip(s1,s2)]))/len(s1) 0.875 </code></pre>"			2013-02-25 21:38:15.107 UTC
15117891	python|perl|www-mechanize|javascript-engine	Javascript engine to parse and run Javascript web page (perl/python)	"<p>I have been trying since long to parse and run javascript webpages using python(2.4). Unfortunately I cannot use qt,webkit so most of the python based headless browsers are ruled out. I however recently found out WWW::Scripter in perl(using perl 5.8.8) which also seems to be a scripting engine for javascript. I also installed the javascript plugin required to run it.</p>  <pre><code>use WWW::Scripter; $w = new WWW::Scripter; $w-&gt;use_plugin('JavaScript');  # packaged separately $w-&gt;get('some javascript website'); print $w-&gt;content; </code></pre>  <p>Well it prints lots and lots of errors and eventually terminates and the output does not seem to be anywhere close to expected. I tried this for 3-4 sites but same result. By expected output I mean the source code as can be seen from the inspect element from a google chrome browser.  Any idea what I am doing wrong with the perl scripter? Secondly any quick alternative way of getting a javascript engine running to parse the websites in python2.4 or perl (or even ruby, constraint being cant use qt) Hopeful I could present my problem without confusing a lot.</p>  <p>EDIT: First few lines of errors:</p>  <pre><code>Day too big - 52263 &gt; 24855 Sec too small - 52263 &lt; 74752 Sec too big - 52263 &gt; 11647 Day too big - 52263 &gt; 24855 Sec too small - 52263 &lt; 74752 Sec too big - 52263 &gt; 11647 &lt;&gt;&lt;/&gt; at /usr/lib/perl5/site_perl/5.8.8/HTML/DOM/Element.pm line 320.  at /usr/lib/perl5/site_perl/5.8.8/HTML/DOM/Element.pm line 320.         HTML::DOM::Element::getAttribute('HTML::DOM::Element::Input=HASH(0xcc309f0)', 'checked') called at /usr/lib/perl5/site_perl/5.8.8/HTML/DOM/Element.pm line 379         HTML::DOM::Element::_attr('HTML::DOM::Element::Input=HASH(0xcc309f0)', 'checked') called at /usr/lib/perl5/site_perl/5.8.8/HTML/DOM/Element/Form.pm line 965         HTML::DOM::Element::Input::defaultChecked('HTML::DOM::Element::Input=HASH(0xcc309f0)') called at /usr/lib/perl5/site_perl/5.8.8/HTML/DOM/Element/Form.pm line 975         HTML::DOM::Element::Input::checked('HTML::DOM::Element::Input=HASH(0xcc309f0)') called at /usr/lib/perl5/site_perl/5.8.8/JE.pm line 1719         JE::__ANON__('JE::Object::Proxy=REF(0xcb53f44)', undef) called at /usr/lib/perl5/site_perl/5.8.8/JE/Object.pm line 385         JE::Object::prop('JE::Object::Proxy=REF(0xcb53f44)', 'checked') called at /usr/lib/perl5/site_perl/5.8.8/JE/LValue.pm line 91         JE::LValue::get('JE::LValue=ARRAY(0xcc4eac8)') called at /usr/lib/perl5/site_perl/5.8.8/JE/Code.pm line 1197         JE::Code::Expression::eval('JE::Code::Expression=ARRAY(0xc5fa87c)') called at /usr/lib/perl5/site_perl/5.8.8/JE/Code.pm line 1377         JE::Code::Expression::_eval_term('JE::Code::Expression=ARRAY(0xc5fa87c)') called at /usr/lib/perl5/site_perl/5.8.8/JE/Code.pm line 1150         JE::Code::Expression::eval('JE::Code::Expression=ARRAY(0xc5fa78c)') called at /usr/lib/perl5/site_perl/5.8.8/JE/Code.pm line 349         JE::Code::Statement::eval('JE::Code::Statement=ARRAY(0xc5e50e8)') called at /usr/lib/perl5/site_perl/5.8.8/JE/Code.pm line 186         eval {...} called at /usr/lib/perl5/site_perl/5.8.8/JE/Code.pm line 157         JE::Code::execute('JE::Code=HASH(0xcb4a5c0)', 'WWW::Scripter::Plugin::JavaScript::JE=REF(0xa7c76e8)', 'JE::Scope=ARRAY(0xcb4fc7c)', 2) called at /usr/lib/perl5/site_perl/5.8.8/JE/Object/Function.pm line 486         JE::Object::Function::apply('JE::Object::Function=REF(0xcb4aaac)', 'WWW::Scripter::Plugin::JavaScript::JE=REF(0xa7c76e8)') called at /usr/lib/perl5/site_perl/5.8.8/JE/Object/Function.pm line 351         JE::Object::Function::call('JE::Object::Function=REF(0xcb4aaac)') called at /usr/lib/perl5/site_perl/5.8.8/JE/Code.pm line 1287         JE::Code::Expression::eval('JE::Code::Expression=ARRAY(0xc607808)') called at /usr/lib/perl5/site_perl/5.8.8/JE/Code.pm line 1377         JE::Code::Expression::_eval_term('JE::Code::Expression=ARRAY(0xc607808)') called at /usr/lib/perl5/site_perl/5.8.8/JE/Code.pm line 1182         JE::Code::Expression::eval('JE::Code::Expression=ARRAY(0xc5a0798)') called at /usr/lib/perl5/site_perl/5.8.8/JE/Code.pm line 1377         JE::Code::Expression::_eval_term('JE::Code::Expression=ARRAY(0xc5a0798)') called at /usr/lib/perl5/site_perl/5.8.8/JE/Code.pm line 1150         JE::Code::Expression::eval('JE::Code::Expression=ARRAY(0xc5a0600)') called at /usr/lib/perl5/site_perl/5.8.8/JE/Code.pm line 349         JE::Code::Statement::eval('JE::Code::Statement=ARRAY(0xc3abbc0)') called at /usr/lib/perl5/site_perl/5.8.8/JE/Code.pm line 186         eval {...} called at /usr/lib/perl5/site_perl/5.8.8/JE/Code.pm line 157 </code></pre>  <p>Thanks</p>"	2013-02-27 17:01:27 UTC	15121066	"<p>In case it may be of any use:  <a href=""http://phantomjs.org"" rel=""nofollow noreferrer"" title=""jsPhantom"">jsPhantom</a> is a <em>single file</em> headless webkit (no installation). I used it several times (just put the exe next to perl), and put it to work. Next version (1.9) (March/April?) is expected to handle stdin to simplify piping.</p>  <p>Code example of interacting between Perl and PhantomJs via temp-files in <a href=""https://stackoverflow.com/questions/9409106/generating-html-canvas-image-data-server-side/14791639#14791639"">This answer</a></p>"			2013-02-27 19:51:20.607 UTC
15166234	javascript|python|date|screen-scraping	Python to read Javascript Date	"<p>I am using BeautifulSoup to get data from a webpage.  The webpage provides a date, which I see when I open the page in Firefox.  However, when I view page source there is no date, just some javascript that generates the date.  I see there are some related questions on here, I see references to ajax and json, I am just an amaeteur programmer though and remain confused here.  Here is some of the HTML code which has the javascript code in it with the date I need.</p>  <pre><code>&lt;div class=""match-details""&gt;   &lt;p class=""floatleft""&gt;     BARCLAYS PREMIER LEAGUE       &lt;span&gt;       &lt;script type=""text/javascript""&gt;         (function(){         var d = new Date(1345489200000);          var year = d.getFullYear();         var month = d.getMonth() + 1;         var day = d.getDate();         var minutes = d.getMinutes();         var hours = d.getHours();                                                  if (minutes &lt; 10) { minutes = '0' + minutes; }         var dmy = [day, month, year];         var hm = [hours, minutes];         if (SITE_EDITION == 'us/en') {             var dmy = [month, day, year];             }         var matches_local = dmy.join('/') + "" "" + hm.join(':');          matches_local += ""&lt;span class='live-red'&gt;*&lt;/span&gt;"";          document.write(matches_local);         })();                                                              &lt;/script&gt;     &lt;/span&gt;    &lt;/p&gt; &lt;/div&gt; </code></pre>"	2013-03-01 20:22:38.533 UTC	15166371	"<p><code>BeautifulSoup</code> is an HTML processing library.  You need a HTML + Javascript processing library.</p>  <p>Read up on this Question : <a href=""https://stackoverflow.com/questions/1916711/programmatic-python-browser-with-javascript"">Programmatic Python Browser with JavaScript</a></p>  <p>As that QA states...you basically either need to use a real browser -- via Selenium -- or use a python browser that supports javascript -- like Spynner.</p>"			2013-03-01 20:32:14.26 UTC
15206153	javascript|python|json|serialization|pickle	Python-like pickling of full Javascript objects	"<p>Is there any serialization framework for Javascript which would retain class and reference information like Python pickles? I.e. one could directly take a prototypial inherited class instance (not just JSON-like data) and serialize it like::</p>  <pre><code> // Somehow add serialization metadata to classes first  obj = new MyObject();  obj.referred = new MyObject2();  pickle = serializer.dump(obj) // Provides byte stream of the serialized object   </code></pre>  <p>The serializer could take care of </p>  <ul> <li><p>Encoding class information in the pickle - this should be somehow customizable due to different JS class systems in existence</p></li> <li><p>Automatically follow and serialize referred objects</p></li> <li><p>Provide hooks to add custom encoders/decoders for values (dates being the most common case) </p></li> </ul>  <p>This would making internal storing and transferring of complex data structures little bit easier. I am hoping to use this in a game engine. Like with pickles, the deserialization of data would not be possible without the orignal Javascript code providing the class definitions.</p>  <p>What kind of such frameworks exist for Javascript already exist or I am going to need to roll-out a custom system?</p>"	2013-03-04 16:23:40.3 UTC	15219032	"<p>Check out <a href=""http://msgpack.org/"" rel=""nofollow"">msgpack</a>.  While I have not used it for JavaScript objects, the example seems to imply that it will work for objects and not just JSONs.  An added bonus: it's one of the fastest implementations that I've ever used for serialization.</p>"			2013-03-05 08:28:45.617 UTC
15206153	javascript|python|json|serialization|pickle	Python-like pickling of full Javascript objects	"<p>Is there any serialization framework for Javascript which would retain class and reference information like Python pickles? I.e. one could directly take a prototypial inherited class instance (not just JSON-like data) and serialize it like::</p>  <pre><code> // Somehow add serialization metadata to classes first  obj = new MyObject();  obj.referred = new MyObject2();  pickle = serializer.dump(obj) // Provides byte stream of the serialized object   </code></pre>  <p>The serializer could take care of </p>  <ul> <li><p>Encoding class information in the pickle - this should be somehow customizable due to different JS class systems in existence</p></li> <li><p>Automatically follow and serialize referred objects</p></li> <li><p>Provide hooks to add custom encoders/decoders for values (dates being the most common case) </p></li> </ul>  <p>This would making internal storing and transferring of complex data structures little bit easier. I am hoping to use this in a game engine. Like with pickles, the deserialization of data would not be possible without the orignal Javascript code providing the class definitions.</p>  <p>What kind of such frameworks exist for Javascript already exist or I am going to need to roll-out a custom system?</p>"	2013-03-04 16:23:40.3 UTC	15219462	"<p>It doesn't fit perfectly but you can try to use <a href=""https://github.com/sithmel/occamsrazor.js"" rel=""nofollow"">occamsrazor.js</a> . Doing this you can use JSON serialization:</p>  <pre><code>// this is your costructor function function Circle(attrs){     this.radius = attrs.radius; } Circle.prototype.area = function (){     return this.radius*this.radius*Math.PI; } Circle.prototype.perimeter = function (){     return 2*this.radius*Math.PI; }  // this is a validator function hasRadius(obj){     return radius in obj; }  // this is your factory function objFactory = occamsrazor().addContructor(hasRadius, Circle);  // this is your deserialized object var json = '{""radius"": 10}';  // circle now is a full fledged object var circle = objFactory(JSON.parse(json)); </code></pre>  <p>The drawback is that you don't get a snapshot of an object like using pickle, you recreate a new object. But it may be convenient in some circunstances.</p>"			2013-03-05 08:52:59.027 UTC
15206153	javascript|python|json|serialization|pickle	Python-like pickling of full Javascript objects	"<p>Is there any serialization framework for Javascript which would retain class and reference information like Python pickles? I.e. one could directly take a prototypial inherited class instance (not just JSON-like data) and serialize it like::</p>  <pre><code> // Somehow add serialization metadata to classes first  obj = new MyObject();  obj.referred = new MyObject2();  pickle = serializer.dump(obj) // Provides byte stream of the serialized object   </code></pre>  <p>The serializer could take care of </p>  <ul> <li><p>Encoding class information in the pickle - this should be somehow customizable due to different JS class systems in existence</p></li> <li><p>Automatically follow and serialize referred objects</p></li> <li><p>Provide hooks to add custom encoders/decoders for values (dates being the most common case) </p></li> </ul>  <p>This would making internal storing and transferring of complex data structures little bit easier. I am hoping to use this in a game engine. Like with pickles, the deserialization of data would not be possible without the orignal Javascript code providing the class definitions.</p>  <p>What kind of such frameworks exist for Javascript already exist or I am going to need to roll-out a custom system?</p>"	2013-03-04 16:23:40.3 UTC	60353897	"<p><a href=""https://github.com/nodeca/js-yaml"" rel=""nofollow noreferrer"">js-yaml</a> with dump (i.e. dangerousDump) and load (i.e. dangerousLoad). I think YAML is implemented in most languages.</p>  <p>Otherwise, you have to provide how-to serialize / deserialize for JSON.stringify (replacer) and JSON.parse (reviver).</p>  <p>I made a library based that that <a href=""https://github.com/patarapolw/any-serialize"" rel=""nofollow noreferrer"">https://github.com/patarapolw/any-serialize</a>, and tested for Date, RegExp, Set, Function, Class constructor, Infinity, NaN, BigInt, Symbol, Undefined.</p>  <p>For custom Class instances, you will have to provide how-to.</p>"			2020-02-22 15:52:01.937 UTC
15206153	javascript|python|json|serialization|pickle	Python-like pickling of full Javascript objects	"<p>Is there any serialization framework for Javascript which would retain class and reference information like Python pickles? I.e. one could directly take a prototypial inherited class instance (not just JSON-like data) and serialize it like::</p>  <pre><code> // Somehow add serialization metadata to classes first  obj = new MyObject();  obj.referred = new MyObject2();  pickle = serializer.dump(obj) // Provides byte stream of the serialized object   </code></pre>  <p>The serializer could take care of </p>  <ul> <li><p>Encoding class information in the pickle - this should be somehow customizable due to different JS class systems in existence</p></li> <li><p>Automatically follow and serialize referred objects</p></li> <li><p>Provide hooks to add custom encoders/decoders for values (dates being the most common case) </p></li> </ul>  <p>This would making internal storing and transferring of complex data structures little bit easier. I am hoping to use this in a game engine. Like with pickles, the deserialization of data would not be possible without the orignal Javascript code providing the class definitions.</p>  <p>What kind of such frameworks exist for Javascript already exist or I am going to need to roll-out a custom system?</p>"	2013-03-04 16:23:40.3 UTC	29827519	"<p>Here's a few:</p>  <p>Jason: Full disclosure: I made this one. But I use it, and it is my top recommendations for complete javascript serialization. You'll probably experience a lot less pain using this one than any of the other ones, and I would be ecstatic to make additions to the library if it doesn't fit your needs! Prototype/constructor information, multiple references to the same object, has hooks for user-defined types. Saves copy of prototype unless you explicitly add the prototype to the 'constants' list, in which case it uses the already-existing prototype when rebuilding. Has JSON-style replacer and ways of referencing objects that will exist at the time of parsing. Serializes Date, RegExp, null, NaN, Infinity, -Infinity, function, DOM Element, Event, and normal objects. Still not a tried and tested library, but if it doesn't work for you, you can email me and I'll try to fix it. <a href=""https://github.com/johnlarson/Jason"" rel=""nofollow"">https://github.com/johnlarson/Jason</a></p>  <p>ResurrectJS: Prototype/constructor information, multiple references to the same object, no hooks. Uses 'constructor' property to get constructor, and there are certain restrictions with namespaces of constructors, which you can get around with a custom namespace resolver. Has JSON-style replacer. Serializes Date, RegExp, DOM Elements, NaN, Infinity, -Infinity, and normal objects. More mature and more tested by usage than Jason, but harder to use correctly. <a href=""https://github.com/skeeto/resurrect-js"" rel=""nofollow"">https://github.com/skeeto/resurrect-js</a></p>  <p>SnapShot: I haven't tried this one. It looks promising, but was last updated 3 years ago. No automatic prototype/constructor information, as far as I can tell, but it has a hook api for defining custom serialization/deserialization behavior similar to JSON's toJSON and fromJSON. Handles multiple references to the same object. No JSON-style replacer, as far as I can tell. Serializes Date, RegExp, null, and function. <a href=""https://github.com/mixu/snapshot"" rel=""nofollow"">https://github.com/mixu/snapshot</a></p>  <p>JASON: Another promising library I haven't tried that was last updated 3 years ago. I don't know whether it does prototype/constructors. Handles multiple reference to same object. As far as I know, it doesn't have hooks. I don't know whether it has a JSON-style replacer. Serializes 'Dates, RegExps, Booleans, etc.' and 'all JS primitives, including undefined'. <a href=""https://github.com/xk/JASON"" rel=""nofollow"">https://github.com/xk/JASON</a></p>"			2015-04-23 15:08:50.397 UTC
15206153	javascript|python|json|serialization|pickle	Python-like pickling of full Javascript objects	"<p>Is there any serialization framework for Javascript which would retain class and reference information like Python pickles? I.e. one could directly take a prototypial inherited class instance (not just JSON-like data) and serialize it like::</p>  <pre><code> // Somehow add serialization metadata to classes first  obj = new MyObject();  obj.referred = new MyObject2();  pickle = serializer.dump(obj) // Provides byte stream of the serialized object   </code></pre>  <p>The serializer could take care of </p>  <ul> <li><p>Encoding class information in the pickle - this should be somehow customizable due to different JS class systems in existence</p></li> <li><p>Automatically follow and serialize referred objects</p></li> <li><p>Provide hooks to add custom encoders/decoders for values (dates being the most common case) </p></li> </ul>  <p>This would making internal storing and transferring of complex data structures little bit easier. I am hoping to use this in a game engine. Like with pickles, the deserialization of data would not be possible without the orignal Javascript code providing the class definitions.</p>  <p>What kind of such frameworks exist for Javascript already exist or I am going to need to roll-out a custom system?</p>"	2013-03-04 16:23:40.3 UTC	15659581	"<p>You might want to look at <a href=""https://github.com/hunterloftis/cryo"" rel=""nofollow"">hunterloftis/cryo</a>. From the readme:</p>  <blockquote>   <p>Built for node.js and browsers. Cryo is inspired by Python's pickle and works similarly to JSON.stringify() and JSON.parse(). Cryo.stringify() and Cryo.parse() improve on JSON in these circumstances:</p>      <ul>   <li>Undefined</li>   <li>Date</li>   <li>Infinity</li>   <li>Object references</li>   <li>Attached properties</li>   <li>Functions</li>   <li>DOM Nodes</li>   </ul> </blockquote>  <p>There is a brief discussion with the author at <a href=""http://www.reddit.com/r/programming/comments/15w269/cryo_freeze_and_thaw_javascript_objects_including/"" rel=""nofollow"">r/programming</a>. </p>  <p>The source is straightforward, no magic.</p>  <p>I haven't tried it yet.</p>"			2013-03-27 13:06:54.09 UTC
15206153	javascript|python|json|serialization|pickle	Python-like pickling of full Javascript objects	"<p>Is there any serialization framework for Javascript which would retain class and reference information like Python pickles? I.e. one could directly take a prototypial inherited class instance (not just JSON-like data) and serialize it like::</p>  <pre><code> // Somehow add serialization metadata to classes first  obj = new MyObject();  obj.referred = new MyObject2();  pickle = serializer.dump(obj) // Provides byte stream of the serialized object   </code></pre>  <p>The serializer could take care of </p>  <ul> <li><p>Encoding class information in the pickle - this should be somehow customizable due to different JS class systems in existence</p></li> <li><p>Automatically follow and serialize referred objects</p></li> <li><p>Provide hooks to add custom encoders/decoders for values (dates being the most common case) </p></li> </ul>  <p>This would making internal storing and transferring of complex data structures little bit easier. I am hoping to use this in a game engine. Like with pickles, the deserialization of data would not be possible without the orignal Javascript code providing the class definitions.</p>  <p>What kind of such frameworks exist for Javascript already exist or I am going to need to roll-out a custom system?</p>"	2013-03-04 16:23:40.3 UTC	15371960	"<p><a href=""http://nanodeath.github.com/HydrateJS/"" rel=""nofollow"">http://nanodeath.github.com/HydrateJS/</a> (blog article at <a href=""http://blog.maxaller.name/2011/01/hydratejs-smarter-javascript-serialization"" rel=""nofollow"">http://blog.maxaller.name/2011/01/hydratejs-smarter-javascript-serialization</a>) seems to fit some of your requirements, judging in particular by <a href=""https://github.com/nanodeath/HydrateJS/blob/master/spec/HydrateSpec.js"" rel=""nofollow"">https://github.com/nanodeath/HydrateJS/blob/master/spec/HydrateSpec.js</a></p>"			2013-03-12 20:56:18.237 UTC
15209386	javascript|python|dictionary	Convert Javascript dictionary to python dictionary	"<p>Somewhere in my Django app, I make an Ajax call to my view</p>  <pre><code>$.post(""/metrics"", {   'program': 'AWebsite',   'marketplace': 'Japan',   'metrics': {'pageLoadTime': '1024'} }); </code></pre>  <p>in my python code, I have got </p>  <pre><code>@require_POST def metrics(request):     program = request.POST.get('program', '')     marketplace = request.POST.get('marketplace', '')     metrics = request.POST.get('metrics', '')     reportMetrics(metrics, program, marketplace) </code></pre>  <p>the <code>metrics()</code> function in python is supposed to call <code>reportMetrics()</code> with these parameters which are then supposed to go in a log file. But In my log file, I do not see the 'pageLoadTime' value - probably because it is being passed in as a dictionary. In future I need to add more items to this, so it needs to remain a dictionary (and not a string like first two). </p>  <p>Whats the easiest way to convert this incoming javascript dictionary to python dictionary?</p>"	2013-03-04 19:23:14.483 UTC	15209461	"<p>Send the javascript dictionary as json and import the python <code>json</code> module to pull it back out. You'll use json.loads(jsonString).</p>  <p><strong>Edit - Added example</strong></p>  <pre><code>$.post(""/metrics"", {    data: JSON.stringify({       'program': 'AWebsite',       'marketplace': 'Japan',       'metrics': {'pageLoadTime': '1024'}    }) }); </code></pre>  <p>Then on the python side</p>  <pre><code>import json def metrics(request):     data = json.loads(request.POST.get('data'))     program = data.get('program','')     marketplace = data.get('marketplace','')     metrics = data.get('metrics','') </code></pre>  <p>I don't really have a good way of testing this right now, but I believe it should work. You may also have to do some checking if a field is blank, but I believe <code>.get()</code> will handle that for you.</p>"			2013-03-04 19:27:16.803 UTC
15218649	python|web-applications|heroku	build steps for javascript/css in heroku python app	"<p>I'm working on a Heroku app built in Python, and I can't find a recommended way to add a step to deployment for concatenating/processing/minifying JavaScript and CSS assets. For example, I might like to use tools like r.js or less.</p>  <p>I've seen something called ""collectstatic"" that Heroku knows to run for Django apps, but my application is using web.py, not Django.</p>  <p>One less-than-perfect approach would be to use these tools locally, on my development machine, to produce combined/compressed static assets. I could then check those compiled files into the git repository and push them to Heroku.</p>  <p>Is there any support for this kind of step built in to Heroku? What is the best way of handling javascript/css files for Heroku web apps in Python?</p>"	2013-03-05 08:05:01.62 UTC	15227844	"<p>I would generally recommend your less than perfect approach, especially if you have a small number of files.</p>  <p>Simplicity is always better than functionality.</p>"			2013-03-05 15:36:05.183 UTC
15218649	python|web-applications|heroku	build steps for javascript/css in heroku python app	"<p>I'm working on a Heroku app built in Python, and I can't find a recommended way to add a step to deployment for concatenating/processing/minifying JavaScript and CSS assets. For example, I might like to use tools like r.js or less.</p>  <p>I've seen something called ""collectstatic"" that Heroku knows to run for Django apps, but my application is using web.py, not Django.</p>  <p>One less-than-perfect approach would be to use these tools locally, on my development machine, to produce combined/compressed static assets. I could then check those compiled files into the git repository and push them to Heroku.</p>  <p>Is there any support for this kind of step built in to Heroku? What is the best way of handling javascript/css files for Heroku web apps in Python?</p>"	2013-03-05 08:05:01.62 UTC	15226868	"<p>Using the <a href=""https://github.com/ddollar/heroku-buildpack-multi/"" rel=""nofollow"">buildpack-multi</a>, Heroku lets you run multiple buildpacks. You can either create our own buildpack that only does the asset compilation that you need or find one that already does it and layer it on top of the Python buildpack with buildpack-multi.</p>"			2013-03-05 14:52:34.13 UTC
15225142	javascript|django	javascript (or Django/Python): detect if touch screen	<p>How can I detect whether a user is using a touch screen? This can be in Python/Django or in javascript.</p>	2013-03-05 13:34:53.79 UTC	15225233	<pre><code>function is_touch_device() {   return !!('ontouchstart' in window)       || !!('onmsgesturechange' in window); }; </code></pre>			2013-03-05 13:39:22.807 UTC
15227018	python|cgi	Javascript with python cgi not giving expected results	"<p>In the below Python CGI script, I am using javascript function for changing the picture on click. But apparently it doesn't seems to work. I am following the example from <a href=""http://www.w3schools.com/js/tryit.asp?filename=tryjs_lightbulb"" rel=""nofollow"">w3 schools js example</a>. So I just want to conform, is it possible to use the javascript inside Python CGI script.</p>  <p>If same example has to be done in Python, what should be the approach.</p>  <pre><code>#!/usr/bin/env python  import cgi  print """"""print ""Content-type: text/html; charset=utf-8 &lt;!DOCTYPE html&gt; &lt;html&gt; &lt;body&gt; &lt;script&gt; function changeImage() { element=document.getElementById('myimage') if (element.src.match(""bulbon""))   {   element.src=""../pic_bulboff.gif"";   } else   {   element.src=""../pic_bulbon.gif"";   } } &lt;/script&gt;  &lt;img id=""myimage"" onclick=""changeImage()"" src=""../pic_bulboff.gif"" width=""100"" height=""180""&gt;  &lt;p&gt;Click the light bulb to turn on/off the light&lt;/p&gt;  &lt;/body&gt; &lt;/html&gt;  """""" </code></pre>"	2013-03-05 14:59:53.723 UTC	15227424	"<p>Yes, you can send javascript inside the HTML via a python CGI scrpit. You have to change the initial part of the string that you are sending to:</p>  <pre><code>print """"""Content-type: text/html; charset=utf-8\n\n &lt;!DOCTYPE html&gt; ... </code></pre>  <p><strong>EDIT</strong> to add the following comments:</p>  <p>There were two problems in your code:</p>  <p>the 1st, you had to remove the part 'print ""', because you were already printing a string;</p>  <p>the 2nd, it is a specification of CGI that it must have ""\n\n"" separating the header, eg. ""content-type: text/html; charset=utf-8\n\n"" from the following part eg. ""..."", (in fact as you had one implicit ""\n"", it would be enough to add just one more...).</p>"			2013-03-05 15:18:18.05 UTC
15315867	javascript|jquery|python	how read data in python script called from javascript post	"<p>I would like to pass data from a javascript to a python script called test.py, when the button is clicked.</p>  <p>The web page contains the following script:</p>  <pre><code>&lt;script&gt; $(document).ready(function(){   $(""button"").click(function(){     $.post(""/cgi-bin/test.py"",    { name: ""Zara"" };     });   }); }); &lt;/script&gt;  &lt;button type=""submit""&gt;Run&lt;/button&gt; </code></pre>  <p>Here is the test.py that runs in the same server of the web page:</p>  <pre><code>#!/usr/python print('Content-Type: text/html; charset=utf-8\n') import sys file = open('/var/www/cgi-bin/temp.txt','w') file.write(sys.argv[1]) file.close() </code></pre>  <p>I expected that the temp.txt contains the name Zara. But temp.txt is empty.</p>  <p>So my question is:</p>  <p>How the python script gets the argument name from javascript? Can I use sys.argv or i need another python library?</p>"	2013-03-09 20:59:57.913 UTC	15317244	"<p>JavaScript sends a regular HTTP Post request and the python script can parse it as a <a href=""http://docs.python.org/2/library/cgi.html"" rel=""nofollow"">regular CGI script</a>:</p>  <pre><code>#!/usr/python import cgi print('Content-Type: text/html; charset=utf-8\n') form = cgi.FieldStorage()  if 'name' in form:     with open('/var/www/cgi-bin/temp.txt','w') as file:         file.write(form['name']) </code></pre>"			2013-03-09 23:44:10.847 UTC
15319844	python|selenium	Python webrowser emulator with executing javascript	"<p>Recently time, i must write bots for some sites (registration, posting and parsing). I do this with  <a href=""http://grablib.org"" rel=""nofollow"">grablib</a>, but now, i must write bot for site on JS. I see many variants such as Selenium and forks*?* of it.</p>  <p>But I need multithreading, and, as I understood, Selenium opens a browser and I do not need. I have to work in the 80-120 flows on Linux server.</p>  <p>Which tool I choose and what to read? Thank you.</p>"	2013-03-10 07:11:13.047 UTC	15320777	"<p>Selenium /can/ use a browser, but can also use HTMLUnit as a backend. This question has some good info: <a href=""https://stackoverflow.com/questions/4618373/how-do-i-use-the-htmlunit-driver-with-selenium-from-python"">How do I use the HTMLUnit driver with Selenium from Python?</a></p>"			2013-03-10 09:30:44.943 UTC
15319844	python|selenium	Python webrowser emulator with executing javascript	"<p>Recently time, i must write bots for some sites (registration, posting and parsing). I do this with  <a href=""http://grablib.org"" rel=""nofollow"">grablib</a>, but now, i must write bot for site on JS. I see many variants such as Selenium and forks*?* of it.</p>  <p>But I need multithreading, and, as I understood, Selenium opens a browser and I do not need. I have to work in the 80-120 flows on Linux server.</p>  <p>Which tool I choose and what to read? Thank you.</p>"	2013-03-10 07:11:13.047 UTC	15321374	"<p>There is a Browser called <a href=""http://phantomjs.org/"" rel=""nofollow"">PhantomJS</a> which may serve your needs.</p>"			2013-03-10 10:45:43.517 UTC
15321431	javascript|python|variables|jinja2	"How to pass a list from Python, by Jinja2 to JavaScript"	"<p>Let's say I have a Python variable:</p>  <pre><code>list_of_items = ['1','2','3','4','5'] </code></pre>  <p>and I pass it to Jinja by rendering HTML, and I also have a function in JavaScript called <code>somefunction(variable)</code>. I am trying to pass each item of <code>list_of_items</code>. I tried something like this:</p>  <pre><code>{% for item in list_of_items %} &lt;span onclick=""somefunction({{item}})""&gt;{{item}}&lt;/span&gt;&lt;br&gt; {% endfor %} </code></pre>  <p>Is it possible to pass a list from Python to JavaScript or should I pass each item from list one by one in a loop? How can I do this?</p>"	2013-03-10 10:54:07.973 UTC	49904420	"<p>To add up on the selected answer, I have been testing a new option that is working too using jinja2 and flask:</p>  <pre class=""lang-py prettyprint-override""><code>@app.route('/') def my_view():     data = [1, 2, 3, 4, 5]     return render_template('index.html', data=data) </code></pre>  <p>The template:</p>  <pre class=""lang-html prettyprint-override""><code>&lt;script&gt;     console.log( {{ data | tojson }} ) &lt;/script&gt; </code></pre>  <p>the output of the rendered template:</p>  <pre class=""lang-html prettyprint-override""><code>&lt;script&gt;     console.log( [1, 2, 3, 4] ) &lt;/script&gt; </code></pre>  <p>The <code>safe</code> could be added but as well like <code>{{ data | tojson | safe }}</code> to avoid html escape but it is working without too.</p>"			2018-04-18 16:14:10.807 UTC
15321431	javascript|python|variables|jinja2	"How to pass a list from Python, by Jinja2 to JavaScript"	"<p>Let's say I have a Python variable:</p>  <pre><code>list_of_items = ['1','2','3','4','5'] </code></pre>  <p>and I pass it to Jinja by rendering HTML, and I also have a function in JavaScript called <code>somefunction(variable)</code>. I am trying to pass each item of <code>list_of_items</code>. I tried something like this:</p>  <pre><code>{% for item in list_of_items %} &lt;span onclick=""somefunction({{item}})""&gt;{{item}}&lt;/span&gt;&lt;br&gt; {% endfor %} </code></pre>  <p>Is it possible to pass a list from Python to JavaScript or should I pass each item from list one by one in a loop? How can I do this?</p>"	2013-03-10 10:54:07.973 UTC	71664138	"<p>you can do it</p> <pre><code>&lt;tbody&gt;     {% for proxy in proxys %}             &lt;tr&gt;                 &lt;td id={{proxy.ip}}&gt;{{proxy.ip}}&lt;/td&gt;                 &lt;td id={{proxy.port}}&gt;{{proxy.port}}&lt;/td&gt;                 &lt;td&gt;{{proxy.protocol}}&lt;/td&gt;                 &lt;td&gt;{{proxy.speed}}&lt;/td&gt;                 &lt;td&gt;{{proxy.type}}&lt;/td&gt;                 &lt;td&gt;{{proxy.city}}&lt;/td&gt;                 &lt;td&gt;{{proxy.verify_time}}&lt;/td&gt;                 &lt;td&gt;                     &lt;button type=&quot;button&quot; class=&quot;btn btn-default&quot; aria-label=&quot;Left Align&quot;&gt;                         &lt;span class=&quot;glyphicon glyphicon-paste&quot; aria-hidden=&quot;true&quot; onclick=&quot;copyProxy('{{proxy.ip}}', '{{proxy.port}}')&quot;&gt;&lt;/span&gt;                     &lt;/button&gt;                 &lt;/td&gt;             &lt;/tr&gt;         {% endfor %}     &lt;/tbody&gt; &lt;/table&gt; </code></pre>"			2022-03-29 14:41:47.947 UTC
15321431	javascript|python|variables|jinja2	"How to pass a list from Python, by Jinja2 to JavaScript"	"<p>Let's say I have a Python variable:</p>  <pre><code>list_of_items = ['1','2','3','4','5'] </code></pre>  <p>and I pass it to Jinja by rendering HTML, and I also have a function in JavaScript called <code>somefunction(variable)</code>. I am trying to pass each item of <code>list_of_items</code>. I tried something like this:</p>  <pre><code>{% for item in list_of_items %} &lt;span onclick=""somefunction({{item}})""&gt;{{item}}&lt;/span&gt;&lt;br&gt; {% endfor %} </code></pre>  <p>Is it possible to pass a list from Python to JavaScript or should I pass each item from list one by one in a loop? How can I do this?</p>"	2013-03-10 10:54:07.973 UTC	22157700	"<p>I had a similar problem using Flask, but I did not have to resort to JSON. I just passed a list <code>letters = ['a','b','c']</code> with <code>render_template('show_entries.html', letters=letters)</code>, and set </p>  <pre><code>var letters = {{ letters|safe }} </code></pre>  <p>in my javascript code. Jinja2 replaced <code>{{ letters }}</code> with <code>['a','b','c']</code>, which javascript interpreted as an array of strings.</p>"			2014-03-03 21:20:51.943 UTC
15321431	javascript|python|variables|jinja2	"How to pass a list from Python, by Jinja2 to JavaScript"	"<p>Let's say I have a Python variable:</p>  <pre><code>list_of_items = ['1','2','3','4','5'] </code></pre>  <p>and I pass it to Jinja by rendering HTML, and I also have a function in JavaScript called <code>somefunction(variable)</code>. I am trying to pass each item of <code>list_of_items</code>. I tried something like this:</p>  <pre><code>{% for item in list_of_items %} &lt;span onclick=""somefunction({{item}})""&gt;{{item}}&lt;/span&gt;&lt;br&gt; {% endfor %} </code></pre>  <p>Is it possible to pass a list from Python to JavaScript or should I pass each item from list one by one in a loop? How can I do this?</p>"	2013-03-10 10:54:07.973 UTC	53952147	"<p>You can do this with Jinja's <a href=""http://jinja.pocoo.org/docs/2.10/templates/#tojson"" rel=""noreferrer""><code>tojson</code></a> filter, which</p>  <blockquote>   <p>Dumps a structure to JSON so that it’s safe to use in <code>&lt;script&gt;</code> tags [and] in any place in HTML with the notable exception of double quoted attributes.</p> </blockquote>  <p>For example, in your Python, write:</p>  <pre><code>some_template.render(list_of_items=list_of_items) </code></pre>  <p>... or, in the context of a Flask endpoint:</p>  <pre><code>return render_template('your_template.html', list_of_items=list_of_items) </code></pre>  <p>Then in your template, write this:</p>  <pre><code>{% for item in list_of_items %} &lt;span onclick='somefunction({{item | tojson}})'&gt;{{item}}&lt;/span&gt;&lt;br&gt; {% endfor %} </code></pre>  <p>(Note that the <code>onclick</code> attribute is <em>single</em>-quoted. This is necessary since <code>|tojson</code> escapes <code>'</code> characters but not <code>""</code> characters in its output, meaning that it can be safely used in single-quoted HTML attributes but not double-quoted ones.)</p>  <p>Or, to use <code>list_of_items</code> in an inline script instead of an HTML attribute, write this:</p>  <pre><code>&lt;script&gt; const jsArrayOfItems = {{list_of_items | tojson}}; // ... do something with jsArrayOfItems in JavaScript ... &lt;/script&gt; </code></pre>  <p>DON'T use <code>json.dumps</code> to JSON-encode variables in your Python code and pass the resulting JSON text to your template. This will produce incorrect output for some string values, and will expose you to XSS if you're trying to encode user-provided values. This is because Python's built-in <code>json.dumps</code> doesn't escape characters like <code>&lt;</code> and <code>&gt;</code> (which need escaping to safely template values into inline <code>&lt;script&gt;</code>s, as noted at <a href=""https://html.spec.whatwg.org/multipage/scripting.html#restrictions-for-contents-of-script-elements"" rel=""noreferrer"">https://html.spec.whatwg.org/multipage/scripting.html#restrictions-for-contents-of-script-elements</a>) or single quotes (which need escaping to safely template values into single-quoted HTML attributes).</p>  <p>If you're using Flask, note that Flask injects a custom <a href=""http://flask.pocoo.org/docs/1.0/templating/#standard-filters"" rel=""noreferrer""><code>tojson</code></a> filter instead of using Jinja's version. However, everything written above still applies. The two versions behave almost identically; Flask's just <a href=""https://github.com/pallets/flask/pull/2623#issuecomment-363701560"" rel=""noreferrer"">allows for some app-specific configuration</a> that isn't available in Jinja's version.</p>"			2018-12-27 23:54:26.913 UTC
15321431	javascript|python|variables|jinja2	"How to pass a list from Python, by Jinja2 to JavaScript"	"<p>Let's say I have a Python variable:</p>  <pre><code>list_of_items = ['1','2','3','4','5'] </code></pre>  <p>and I pass it to Jinja by rendering HTML, and I also have a function in JavaScript called <code>somefunction(variable)</code>. I am trying to pass each item of <code>list_of_items</code>. I tried something like this:</p>  <pre><code>{% for item in list_of_items %} &lt;span onclick=""somefunction({{item}})""&gt;{{item}}&lt;/span&gt;&lt;br&gt; {% endfor %} </code></pre>  <p>Is it possible to pass a list from Python to JavaScript or should I pass each item from list one by one in a loop? How can I do this?</p>"	2013-03-10 10:54:07.973 UTC	41521192	"<p>I can suggest you a javascript oriented approach which makes it easy to work with javascript files in your project.</p>  <p>Create a javascript section in your jinja template file and place all variables you want to use in your javascript files in a window object:</p>  <p>Start.html</p>  <pre><code>... {% block scripts %} &lt;script type=""text/javascript""&gt; window.appConfig = {     debug: {% if env == 'development' %}true{% else %}false{% endif %},     facebook_app_id: {{ facebook_app_id }},     accountkit_api_version: '{{ accountkit_api_version }}',     csrf_token: '{{ csrf_token }}' } &lt;/script&gt; &lt;script type=""text/javascript"" src=""{{ url_for('static', filename='app.js') }}""&gt;&lt;/script&gt; {% endblock %} </code></pre>  <p>Jinja will replace values and our appConfig object will be reachable from our other script files:</p>  <p>App.js</p>  <pre><code>var AccountKit_OnInteractive = function(){     AccountKit.init({         appId: appConfig.facebook_app_id,         debug: appConfig.debug,         state: appConfig.csrf_token,         version: appConfig.accountkit_api_version     }) } </code></pre>  <p>I have seperated javascript code from html documents with this way which is easier to manage and seo friendly.</p>"			2017-01-07 11:58:13.987 UTC
15321431	javascript|python|variables|jinja2	"How to pass a list from Python, by Jinja2 to JavaScript"	"<p>Let's say I have a Python variable:</p>  <pre><code>list_of_items = ['1','2','3','4','5'] </code></pre>  <p>and I pass it to Jinja by rendering HTML, and I also have a function in JavaScript called <code>somefunction(variable)</code>. I am trying to pass each item of <code>list_of_items</code>. I tried something like this:</p>  <pre><code>{% for item in list_of_items %} &lt;span onclick=""somefunction({{item}})""&gt;{{item}}&lt;/span&gt;&lt;br&gt; {% endfor %} </code></pre>  <p>Is it possible to pass a list from Python to JavaScript or should I pass each item from list one by one in a loop? How can I do this?</p>"	2013-03-10 10:54:07.973 UTC	15322060	"<p>To pass some context data to javascript code, you have to serialize it in a way it will be ""understood"" by javascript (namely JSON). You also need to mark it as safe using the <code>safe</code> Jinja filter, to prevent your data from being htmlescaped.</p>  <p>You can achieve this by doing something like that:</p>  <h3>The view</h3>  <pre><code>import json  @app.route('/') def my_view():     data = [1, 'foo']     return render_template('index.html', data=json.dumps(data)) </code></pre>  <h3>The template</h3>  <pre><code>&lt;script type=""text/javascript""&gt;     function test_func(data) {         console.log(data);     }     test_func({{ data|safe }}) &lt;/script&gt; </code></pre>  <h2>Edit - exact answer</h2>  <p>So, to achieve exactly what you want (loop over a list of items, and pass them to a javascript function), you'd need to serialize every item in your list separately. Your code would then look like this:</p>  <h3>The view</h3>  <pre><code>import json  @app.route('/') def my_view():     data = [1, ""foo""]     return render_template('index.html', data=map(json.dumps, data)) </code></pre>  <h3>The template</h3>  <pre><code>{% for item in data %}     &lt;span onclick=someFunction({{ item|safe }});&gt;{{ item }}&lt;/span&gt; {% endfor %} </code></pre>  <h2>Edit 2</h2>  <p>In my example, I use <code>Flask</code>, I don't know what framework you're using, but you got the idea, you just have to make it fit the framework you use.</p>  <h2>Edit 3 (Security warning)</h2>  <p><strong>NEVER EVER DO THIS WITH USER-SUPPLIED DATA, ONLY DO THIS WITH TRUSTED DATA!</strong></p>  <p>Otherwise, you would expose your application to XSS vulnerabilities!</p>"			2013-03-10 12:11:24.113 UTC
15321431	javascript|python|variables|jinja2	"How to pass a list from Python, by Jinja2 to JavaScript"	"<p>Let's say I have a Python variable:</p>  <pre><code>list_of_items = ['1','2','3','4','5'] </code></pre>  <p>and I pass it to Jinja by rendering HTML, and I also have a function in JavaScript called <code>somefunction(variable)</code>. I am trying to pass each item of <code>list_of_items</code>. I tried something like this:</p>  <pre><code>{% for item in list_of_items %} &lt;span onclick=""somefunction({{item}})""&gt;{{item}}&lt;/span&gt;&lt;br&gt; {% endfor %} </code></pre>  <p>Is it possible to pass a list from Python to JavaScript or should I pass each item from list one by one in a loop? How can I do this?</p>"	2013-03-10 10:54:07.973 UTC	59242956	"<p>Make some invisible HTML tags like <code>&lt;label&gt;, &lt;p&gt;, &lt;input&gt;</code> etc. and name its id, and the class name is a pattern so that you can retrieve it later.</p>  <p>Let you have two lists maintenance_next[] and maintenance_block_time[] of the same length, and you want to pass these two list's data to javascript using the flask. So you take some invisible label tag and set its tag name is a pattern of list's index and set its class name as value at index.</p>  <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-html lang-html prettyprint-override""><code>{% for i in range(maintenance_next|length): %} &lt;label id=""maintenance_next_{{i}}"" name=""{{maintenance_next[i]}}"" style=""display: none;""&gt;&lt;/label&gt; &lt;label id=""maintenance_block_time_{{i}}"" name=""{{maintenance_block_time[i]}}"" style=""display: none;""&gt;&lt;/label&gt; {% endfor%}</code></pre> </div> </div> </p>  <p>Now you can retrieve the data in javascript using some javascript operation like below -</p>  <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-js lang-js prettyprint-override""><code>&lt;script&gt; var total_len = {{ total_len }};   for (var i = 0; i &lt; total_len; i++) {     var tm1 = document.getElementById(""maintenance_next_"" + i).getAttribute(""name"");     var tm2 = document.getElementById(""maintenance_block_time_"" + i).getAttribute(""name"");          //Do what you need to do with tm1 and tm2.          console.log(tm1);     console.log(tm2); } &lt;/script&gt;</code></pre> </div> </div> </p>"			2019-12-09 05:22:39.953 UTC
15344100	javascript|python|html	Passing values from Python to JavaScript	"<p>For a research project we are developing a system in python which takes raw data from a real time sensor and applies different DSP filters to it. So far so good. The other part of the system should be the plotting of the data and the access to some controllers for modifying the sample rate and other parameters. The last days I have been trying to use HTML5 + javascript as the technology to do the data plotting; I am using d3.js for the graphics and mimic.js to implement the xmlrpc protocol to communicate the python side with the HTML file. After a lot of tweaking i ALMOST managed to communicate both parts of the system. However, I ran into the 'Cross origin request' error (I am using chrome). </p>  <p>After that I have been thinking of some other strategies in order to communicate python with the GUI:</p>  <ol> <li><p>Using a SimpleHTTPServer. However, I need to have a SimpleXMLRPCServer running so I can register the function (register_function) to pass the value. Is there a way to implement a xmlrpc within a SimpleHTTPServer?</p></li> <li><p>I have been thinking about using json but I am not sure if this is the best way to go as the data streaming will be quite big  and fast(4 channels with constant updates).</p></li> </ol>  <p>So after all this testing I really would appreciate a piece of advice: </p>  <ol> <li><p>Is if feasible to have such HTML5 GUI? is it efficient for plotting such amounts of data?</p></li> <li><p>if so, what would be a realistic strategy to implement a communication between Python and HTML/js?</p></li> <li><p>Is xmlrpc the best protocol to use?</p></li> </ol>"	2013-03-11 16:51:56.693 UTC	17010260	"<ol> <li>Yep. Also you can use some JavaScript charts libraries. Such as <a href=""http://amcharts.com"" rel=""nofollow"">amCharts</a>, <a href=""http://www.highcharts.com/"" rel=""nofollow"">highcharts</a>, <a href=""http://code.google.com/p/flot/"" rel=""nofollow"">plot</a>.</li> <li>Really, JSON is better.</li> <li>XMLRPC isn't very light. See p.2 :) </li> </ol>"			2013-06-09 13:45:19.573 UTC
15472072	javascript	Get time in javascript like python time.time()	<p>In python I can use <code>time.time()</code> to get this:</p>  <pre><code>time = time.time() time = 1362914221 </code></pre>  <p>How do I get this in java-script?</p>  <pre><code>time = ???? </code></pre>	2013-03-18 08:00:17.423 UTC	15472425	<p>Just like this:</p>  <pre><code>var time = +new Date; </code></pre>			2013-03-18 08:27:36.88 UTC
15472072	javascript	Get time in javascript like python time.time()	<p>In python I can use <code>time.time()</code> to get this:</p>  <pre><code>time = time.time() time = 1362914221 </code></pre>  <p>How do I get this in java-script?</p>  <pre><code>time = ???? </code></pre>	2013-03-18 08:00:17.423 UTC	15472086	"<p>You can use</p>  <pre><code>time = (new Date()).getTime() / 1000; </code></pre>  <p>See <a href=""https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Date/getTime"">getTime() on the MDN</a>.</p>"			2013-03-18 08:01:01.243 UTC
15483230	javascript|python|prototype	In Python can you do prototyping of string functions like in JavaScript	"<p>In JavaScript you can do this to add a trim function to the existing prototype functions</p>  <pre><code>String.prototype.trim = function() {     return this.replace(/^\s+|\s+$/g,""""); </code></pre>  <p>Then you can do stuff like this to access those functions.</p>  <pre><code>trimmed = myString.trim(); </code></pre>  <p>And you have yourself a trimmed string.  </p>  <p>In python I know how to list the prototype functions of a string by doing this:</p>  <pre><code>print dir(myString) </code></pre>  <p>But how can I add a prototype function in Python?</p>"	2013-03-18 17:35:43.98 UTC	15483271	"<p>First, Python has a class-based object system, not a prototype-based system like JavaScript.</p>  <p>Adding methods (or other attributes) a class or an instance is pretty easy:</p>  <pre><code>FooClass.method = my_method foo_instance.method = my_method </code></pre>  <p>However, it doesn't work with many ""built-in"" types (actual builtins, and those defines in C extensions). And <code>str</code> is one of them.</p>  <p>So, you can't do this.</p>  <hr>  <p>However, it's very easy to build a subclass of almost any type:</p>  <pre><code>class MyStringType(str):     def trim(self):         # your implementation here </code></pre>  <p>You will probably need a custom <code>__init__</code> method, and likely a custom <code>__new__</code>. Also make sure to change all methods that would return a <code>str</code> to instead return a <code>MyStringType</code>.</p>  <hr>  <p>Another way to do it is through delegation:</p>  <pre><code>class MyStringType(object):     def __init__(self, *args, **kwargs):         self.s = str(*args, **kwargs)     def trim(self):         # your implementation here </code></pre>  <p>This way, you will be forced to explicitly forward every method you want from <code>str</code>, instead of getting them automatically. But often that's better anyway. Especially considering how simply you can do it, by either implementing a custom <code>__getattr__</code>, or programmaticaly building the forwarding methods (in <code>__init__</code> or class-wide).</p>  <hr>  <p>But the simplest solution is… just don't do it. What's wrong with having a <code>trim</code> function that takes a <code>str</code> parameter?</p>  <p>The nice thing about doing it that way is that your <code>trim</code> function can take <em>any string-like object</em>. For example, your <code>trim</code> function (written as a wrapper around <code>r.replace</code> on some compiled regex <code>r</code>) will work with both <code>unicode</code> and <code>bytes</code> (one of which is a synonym for <code>str</code> in 2.x, the other in 3.x… but if you can handle both, that doesn't matter), and with a PyObjC <code>NSString</code> wrapper or a pywin32 <code>BSTR</code> wrapper, and so on. A <code>find</code>-type method will even work on <code>mmap</code> regions. Why restrict it to only work on <code>str</code>?</p>  <p>That kind of ""duck typing"" is central to the Python way of doing things. If your code has no reason to care about the actual type of an object, you shouldn't go out of your way to care about it.</p>"			2013-03-18 17:38:22.137 UTC
15559854	jquery|python|api|node.js|cheerio	Python's equivalent to Javascript's jQuery or Node's cheerio?	<p>I'm looking for a library that has a similar API and usage as jQuery or Cheerio. </p>  <p><strong>My use case is:</strong> parsing an HTML file for any script or link tags containing javascript/css file references. </p>	2013-03-21 23:06:41.19 UTC	15559876	"<p>Although <a href=""https://pypi.python.org/pypi/pyquery"" rel=""nofollow"">pyQuery</a> is the jQuery equivalent, <strong>judging by your use case</strong> I think maybe something like <a href=""http://www.crummy.com/software/BeautifulSoup/"" rel=""nofollow"">BeautifulSoup</a> could be better suited for what you're looking to do.</p>  <p>The following is taken from the official Beautiful Soup website:</p>  <blockquote>   <p>Beautiful Soup is a Python library designed for quick turnaround   projects like screen-scraping. Three features make it powerful:</p>      <ol>   <li><p>Beautiful Soup provides a few simple methods and Pythonic idioms for   navigating, searching, and modifying a parse tree: a toolkit for   dissecting a document and extracting what you need. It doesn't take   much code to write an application</p></li>   <li><p>Beautiful Soup automatically converts incoming documents to Unicode   and outgoing documents to UTF-8. You don't have to think about   encodings, unless the document doesn't specify an encoding and   Beautiful Soup can't autodetect one. Then you just have to specify the   original encoding.</p></li>   <li><p>Beautiful Soup sits on top of popular Python parsers like lxml and   html5lib, allowing you to try out different parsing strategies or   trade speed for flexibility.</p></li>   </ol>      <p>Beautiful Soup parses anything you give it, and does the tree   traversal stuff for you. You can tell it ""Find all the links"", or   ""Find all the links of class externalLink"", or ""Find all the links   whose urls match ""foo.com"", or ""Find the table heading that's got bold   text, then give me that text.""</p> </blockquote>"			2013-03-21 23:09:11.543 UTC
15559854	jquery|python|api|node.js|cheerio	Python's equivalent to Javascript's jQuery or Node's cheerio?	<p>I'm looking for a library that has a similar API and usage as jQuery or Cheerio. </p>  <p><strong>My use case is:</strong> parsing an HTML file for any script or link tags containing javascript/css file references. </p>	2013-03-21 23:06:41.19 UTC	15559873	"<p>Python equivalent for jQuery is <a href=""https://pypi.python.org/pypi/pyquery"">pyQuery</a>. Under that link you can find usage examples.  You can also visit <a href=""https://github.com/gawel/pyquery"">PyQuery on GitHub</a>.</p>"			2013-03-21 23:08:44.54 UTC
15587572	javascript|python|firefox|llvm|pypy	Tools for compiling Python / Boo / Ruby like syntax to C / C++ / LLVM / Javascript (using JS ArrayBuffer for speed)	"<p>I'm trying to automatically compile / convert code written with Pythonic semantics into native and fast Javascript code.</p>  <p>What tools can do this, with nice debugging support possible like with Java etc?</p>  <p>Has anyone done this?</p>  <p><strong>Why?</strong></p>  <p>I'm trying to write some visualisation code with a complex main loop, a timeline, some physics simulation, and some complex interaction. I.E: it IS an actual CPU bound problem.</p>  <p>Writing with Javascript and testing in it's browser environment is harder to debug than say, Java, .NET or Python running in a decent IDE. But for doing actual large scale web development with complex client side code, it's necessary to at least compile to Javascript, if not directly write in it.</p>  <p><strong>Background: Recent advances</strong></p>  <p>Emscripten allows compiling C/C++ to Javascript, that can run with increasing efficiency in the browser due to ArrayBuffer's typed array support and new browser JS engines, as <a href=""http://asmjs.org/"">ASM.js</a> and <a href=""http://jlongster.com/Compiling-LLJS-to-asm.js,-Now-Available-""><strong><em>LLJS</em></strong></a> take advantage of Mozilla's recent speed improvements (that other venders will likely soon follow).</p>  <p><a href=""http://Altjs.org""><strong><em>Altjs.org</em></strong></a> has a laundry list of Javascript alternaltives, but doesn't yet focus on the recent speed improvements or nice semantics specifically but it is becoming common place for people to code for browsers with better tools. Emscripten in particular has <a href=""https://github.com/kripken/emscripten/wiki""><em>loads of amazing demos</em></a>.</p>  <p><strong>Possible options already considered:</strong></p>  <ul> <li>Shedskin - Currently I have tried getting Shedskin working but I have limited C++/C skills (Emscripten only exposes a C API for the Boehm inspired garbage collector it uses, and Shedskin needs a C++ garbage collection class for it's objects, which doesn't exist yet).</li> <li>Unladen Swallow / RPython, to LLVM - have not been able to setup correctly on Ubuntu yet</li> <li>Boo to Java then to LLVM (not been able to setup on my Ubuntu system yet)</li> </ul>  <p><strong>Additional constraints:</strong></p>  <ul> <li>I need to use this on my Ubuntu system.</li> <li>The compiled Javascript should probably be less than 1 MB</li> <li>Debugging in the native language which is also cross compiled, should still be possible, allowing taking advantage of existing debug tools.</li> </ul>  <p><em>""This process of constructing instruction tables should be very fascinating. There need be no real danger of it ever becoming a drudge, for any processes that are quite mechanical may be turned over to the machine itself.""</em> -- Alan M. Turing, 1946</p>"	2013-03-23 13:55:31.637 UTC	15611637	"<p>You want a high level dynamic language that compiles down to efficient low level JavaScript? There is no such thing. If dynamic languages were fast we would not need asm.js in the first place.</p>  <p>If you want to write code that compiles to efficient JavaScript your will have to learn a lower level language. The reason why Emscripten is fast is because it compiles from a low level language (C/C++) that allows for greater compiler optimization than regular JavaScript. That is also the reason why asm.js and LLVM can be faster. They get their speed from not have dynamic types, garbage collection (this specifically is what makes it possible to use ArrayBuffer for memory) and other high-level features.</p>  <p>Bottom line is. There exists no tools for compiling a language with Pythonic semantics into native and fast Javascript code. And depending on what you mean by semantics it is unlikely that such a thing will appear since Python is a slow language in itself.</p>  <p>The best option right now for generating fast JavaScript is Emscripten. You could also consider LLJS or writing fast JavaScript by hand (Chrome has debugging tools for this).</p>  <p>Also, considering the title of your question you are very concerned about syntax. You should not be. When choosing the right language for the job the syntax is one of the least important factors.</p>"			2013-03-25 09:36:45.817 UTC
15587572	javascript|python|firefox|llvm|pypy	Tools for compiling Python / Boo / Ruby like syntax to C / C++ / LLVM / Javascript (using JS ArrayBuffer for speed)	"<p>I'm trying to automatically compile / convert code written with Pythonic semantics into native and fast Javascript code.</p>  <p>What tools can do this, with nice debugging support possible like with Java etc?</p>  <p>Has anyone done this?</p>  <p><strong>Why?</strong></p>  <p>I'm trying to write some visualisation code with a complex main loop, a timeline, some physics simulation, and some complex interaction. I.E: it IS an actual CPU bound problem.</p>  <p>Writing with Javascript and testing in it's browser environment is harder to debug than say, Java, .NET or Python running in a decent IDE. But for doing actual large scale web development with complex client side code, it's necessary to at least compile to Javascript, if not directly write in it.</p>  <p><strong>Background: Recent advances</strong></p>  <p>Emscripten allows compiling C/C++ to Javascript, that can run with increasing efficiency in the browser due to ArrayBuffer's typed array support and new browser JS engines, as <a href=""http://asmjs.org/"">ASM.js</a> and <a href=""http://jlongster.com/Compiling-LLJS-to-asm.js,-Now-Available-""><strong><em>LLJS</em></strong></a> take advantage of Mozilla's recent speed improvements (that other venders will likely soon follow).</p>  <p><a href=""http://Altjs.org""><strong><em>Altjs.org</em></strong></a> has a laundry list of Javascript alternaltives, but doesn't yet focus on the recent speed improvements or nice semantics specifically but it is becoming common place for people to code for browsers with better tools. Emscripten in particular has <a href=""https://github.com/kripken/emscripten/wiki""><em>loads of amazing demos</em></a>.</p>  <p><strong>Possible options already considered:</strong></p>  <ul> <li>Shedskin - Currently I have tried getting Shedskin working but I have limited C++/C skills (Emscripten only exposes a C API for the Boehm inspired garbage collector it uses, and Shedskin needs a C++ garbage collection class for it's objects, which doesn't exist yet).</li> <li>Unladen Swallow / RPython, to LLVM - have not been able to setup correctly on Ubuntu yet</li> <li>Boo to Java then to LLVM (not been able to setup on my Ubuntu system yet)</li> </ul>  <p><strong>Additional constraints:</strong></p>  <ul> <li>I need to use this on my Ubuntu system.</li> <li>The compiled Javascript should probably be less than 1 MB</li> <li>Debugging in the native language which is also cross compiled, should still be possible, allowing taking advantage of existing debug tools.</li> </ul>  <p><em>""This process of constructing instruction tables should be very fascinating. There need be no real danger of it ever becoming a drudge, for any processes that are quite mechanical may be turned over to the machine itself.""</em> -- Alan M. Turing, 1946</p>"	2013-03-23 13:55:31.637 UTC	17797837	"<p>Since you mentioned <a href=""http://code.google.com/p/shedskin/"" rel=""nofollow"">shedskin</a> yourself, I would imaging that you can share some of your experience (and explain what exactly in your opinion shedskin is missing, except that its input is a restricted python grammar). I could also assume that Cython/Pyrex are not acceptable (due too grammar restrictions).</p>  <p>If shedskin is too much in alpha stage for you, then you might be looking for something like <a href=""https://github.com/numba"" rel=""nofollow"">Numba</a> project, which includes a compiler of dynamic python into LLVM as well as llvm-py which allows to link LLVM exposed bytecode similar as ctypes allows to link shared-libraries and build LLVM IR compilers.</p>  <p>Here is a cut from the <a href=""http://jakevdp.github.io/blog/2012/08/24/numba-vs-cython/"" rel=""nofollow"">blog</a> where it is shown how one can use Numba as JIT for numpy (incl. performance comparison with equivalent Cython code):</p>  <pre><code>import numpy as np from numba import double from numba.decorators import jit  @jit(arg_types=[double[:,:], double[:,:]]) def pairwise_numba(X, D):     M = X.shape[0]     N = X.shape[1]     for i in range(M):         for j in range(M):             d = 0.0             for k in range(N):                 tmp = X[i, k] - X[j, k]                 d += tmp * tmp             D[i, j] = np.sqrt(d) </code></pre>  <p>Emscripten should allow you to expose and call your python -> llvm -> JS code as described here: <a href=""https://github.com/kripken/emscripten/wiki/Interacting-with-code"" rel=""nofollow"">https://github.com/kripken/emscripten/wiki/Interacting-with-code</a></p>"			2013-07-22 21:35:03.797 UTC
15614787	javascript|python	Javascript/python design assistance	"<p>I'm running an external website that harvests data from an iframe on our internal company intranet. This part is written in Javascript and is working. However, now I need access to the data the js is harvesting to process it further in python. It is not an option to process in Javascript as well as that is technically not possible. </p>  <p>I would appreciate some pointers on where to go from here? How do I get the javascript data into my python scripts?</p>"	2013-03-25 12:19:50.733 UTC	15628961	"<p>You will need to use an AJAX call to pass the javascript data to your server on the backend for python to process, The best way to do this is to encode your data in a JSON Object and pass it in an AJAX call:</p>  <pre><code>json_obj = {your:[data]}; $.ajax{     url: [url of webservice/action],     type: ""POST"",     data: json_obj,     dataType: ""json"",     success: function(result) {      //Write your code here     } } //Note that this does run asynchronously, so the code that follows this will not wait for the ajax call to finish </code></pre>  <p>Python has a nifty module, <strong>json</strong>, that you can use to decode JSON objects into Python Objects using:</p>  <pre><code>import json  data_obj = json.loads(json_data_string) </code></pre>  <p>This will put the json string you assembled in your javascript then passed to python with AJAX into a Python structure (dictionary or list, depending on how your object was built) for easy python processing.</p>  <p>You can then pass a JSON string back by using the dumps() function:</p>  <pre><code>data_str = json.dumps(data_obj) </code></pre>  <p>Sources:</p>  <ul> <li><a href=""http://docs.python.org/2/library/json.html"" rel=""nofollow"">Python JSON module documentation</a></li> <li><a href=""http://www.intelligrape.com/blog/2010/06/11/jquery-send-json-object-with-an-ajax-request/"" rel=""nofollow"">AJAX Examples</a></li> </ul>"			2013-03-26 03:37:35.643 UTC
15623388	python|selenium|firebug|web-scraping|selenium-webdriver	Using selenium with python to extract javascript-generated HTML? Firebug?	"<p>Python noobie here.</p>  <p>What I have is a data harvesting problem. I'm on this website, and when I inspect the element that I want with Firebug, it shows the source containing the information I need. However the regular source code (without Firebug) doesn't give me this info. This means I also can't get the data with the normal selenium HTML grabbing, either. </p>  <p>I'm wondering if there is a way that selenium can grab this data like Firebug does -- I'm guessing this is HTML that is generated after the page loads with javascript or jquery. </p>  <p>Here is a picture: <a href=""http://i.imgur.com/CXLOHYx.png"" rel=""nofollow"">http://i.imgur.com/CXLOHYx.png</a></p>  <p>You can see that the info I want is 'greyed out', unlike most of the other HTML there. Maybe that is a good clue as to what kind of data that really is.</p>"	2013-03-25 19:45:28.017 UTC	15624933	"<p>Try to use the following code and see if it works.</p>  <pre><code>import selenium.webdriver.support.ui  element = WebDriverWait(driver, 10).until(         lambda driver : driver.find_element_by_xpath(""fImageMap &gt; area:nth-child(2)"") ) </code></pre>"			2013-03-25 21:16:55.147 UTC
15845676	javascript|python|arrays	Mimic JavaScript arrays in Python	"<p>In Python, is it possible to mimic JavaScript arrays (i. e., arrays that expand automatically when values are added outside the array's range)? In JavaScript, arrays expand automatically when a value is assigned outside of an array's index, but in Python, they do not:</p>  <pre><code>theArray = [None] * 5 theArray[0] = 0 print(theArray) theArray[6] = 0 '''This line is invalid. Python arrays don't expand automatically, unlike JavaScript arrays.''' </code></pre>  <p>This would be valid in JavaScript, and I'm trying to mimic it in Python:</p>  <pre><code>var theArray = new Array(); theArray[0] = 0; console.log(theArray); theArray[6] = 0; //the array expands automatically in JavaScript, but not in Python </code></pre>"	2013-04-06 00:30:26.697 UTC	15845859	"<p>I can't think of a native way this is implemented. Saying that, it wouldn't be a bad idea to just create a function that does what you expect. Instead of using <code>my_list[index] = value</code>, you could use something like:</p>  <pre><code>def insertWithAutoFill(the_list, index, new_item):     if index &gt;= len(the_list):         for i in range(len(the_list), index):              the_list.append(None)         the_list.append(new_item)     else:         the_list[index] = new_item </code></pre>  <p>And you'd call it like:</p>  <pre><code>my_list = [1, 2, 3] insertWithAutoFill(my_list, 6, 23) </code></pre>  <p>With the <code>my_list</code> now containing:</p>  <pre><code>[1, 2, 3, None, None, None, 23] </code></pre>  <p>You might have to adjust some things to make sure certain things are checked properly and <code>index</code> is being used properly. This was minorly tested and worked in specific cases, but it's not guaranteed to be perfect :)</p>"			2013-04-06 00:59:08.097 UTC
15845676	javascript|python|arrays	Mimic JavaScript arrays in Python	"<p>In Python, is it possible to mimic JavaScript arrays (i. e., arrays that expand automatically when values are added outside the array's range)? In JavaScript, arrays expand automatically when a value is assigned outside of an array's index, but in Python, they do not:</p>  <pre><code>theArray = [None] * 5 theArray[0] = 0 print(theArray) theArray[6] = 0 '''This line is invalid. Python arrays don't expand automatically, unlike JavaScript arrays.''' </code></pre>  <p>This would be valid in JavaScript, and I'm trying to mimic it in Python:</p>  <pre><code>var theArray = new Array(); theArray[0] = 0; console.log(theArray); theArray[6] = 0; //the array expands automatically in JavaScript, but not in Python </code></pre>"	2013-04-06 00:30:26.697 UTC	15845900	"<p>If you really need you can define such structure:</p>  <pre><code>class ExpandingList(list):     def __setitem__(self, key, value):         try:             list.__setitem__(self, key, value)         except IndexError:             self.extend((key - len(self)) * [None] + [value])  &gt;&gt;&gt; a = ExpandingList() &gt;&gt;&gt; a[1] = 4 &gt;&gt;&gt; a [None, 4] &gt;&gt;&gt; a[4] = 4 &gt;&gt;&gt; a [None, 4, None, None, 4] </code></pre>  <p>Integrating it with other python features might be tricky (negative indexing, slicing).</p>"			2013-04-06 01:04:47.167 UTC
15845676	javascript|python|arrays	Mimic JavaScript arrays in Python	"<p>In Python, is it possible to mimic JavaScript arrays (i. e., arrays that expand automatically when values are added outside the array's range)? In JavaScript, arrays expand automatically when a value is assigned outside of an array's index, but in Python, they do not:</p>  <pre><code>theArray = [None] * 5 theArray[0] = 0 print(theArray) theArray[6] = 0 '''This line is invalid. Python arrays don't expand automatically, unlike JavaScript arrays.''' </code></pre>  <p>This would be valid in JavaScript, and I'm trying to mimic it in Python:</p>  <pre><code>var theArray = new Array(); theArray[0] = 0; console.log(theArray); theArray[6] = 0; //the array expands automatically in JavaScript, but not in Python </code></pre>"	2013-04-06 00:30:26.697 UTC	15846015	"<p><a href=""https://stackoverflow.com/a/15845900/1615483"">zch has already given a great answer</a>, but I'll post this to show you how to copy behaviour for the <strong>get</strong>, too</p>  <pre><code>class MyList(list):     @property     def length(self): # for the example bracket notation         return len(self)     def __getitem__(self, key): # Fix GET         try: # assume permission             return list.__getitem__(self, key)         except (IndexError, TypeError): # ""ask forgiveness""             pass # using pass to save indents as try was a return         if key == 'length': # example bracket notation for length getter             return self.length         try: # JavaScript doesn't care about number type and accepts             key = int(key) # strings, too, but Python req.s integers             return list.__getitem__(self, int(key))         except (IndexError, ValueError):             pass         return None     def __setitem__(self, key, value): # Fix SET         try:             list.__setitem__(self, key, value)             return value # copy return behaviour         except (IndexError, TypeError):             pass         try:             key = int(key) # force int         except ValueError:             return # fail quietly?         if key &lt; 0: # still throw for bad key             raise IndexError()         self.extend((key - len(self)) * [None]) # fill gap with None         self.append(value) # append new value         return value # copy return behaviour  &gt;&gt;&gt; a = MyList() &gt;&gt;&gt; a[0] = 1 &gt;&gt;&gt; a[2] = 1 &gt;&gt;&gt; (a, a[3]) ([1, None, 1], None) &gt;&gt;&gt; (a.length, a['length']) (3, 3) </code></pre>"			2013-04-06 01:25:19.723 UTC
15854257	python|web-applications	Using python to get web pages containing JavaScript	<p>I am new to python. As part of writing a module to scrape URLs I noticed that what I get using the python requests module could be different from what I get if I load the URL in a browser. This is because the page could contain JS code which is executed and the result is hat I see in the browser. </p>  <p>My questions -  1. how do I deal with such sites. </p>  <ol> <li><p>Is python or any other module limited to just getting static pages or pages completely rendered on the server side? </p></li> <li><p>How to deal with pages that do an Ajax style queries to load pages? </p></li> </ol>  <p>I am assuming that there probably isn't a library for this and I have to do something on my own. I hope I don't have to build in something like webkit into my code :)</p>  <p>Thanks for any help.</p>	2013-04-06 18:02:52.133 UTC	15854598	"<p>You could use</p>  <ul> <li><a href=""http://code.google.com/p/pyv8/"" rel=""nofollow noreferrer"">http://code.google.com/p/pyv8/</a></li> <li><a href=""http://code.google.com/p/python-spidermonkey/"" rel=""nofollow noreferrer"">http://code.google.com/p/python-spidermonkey/</a></li> </ul>  <p>and a related question: <a href=""https://stackoverflow.com/questions/8049520/web-scraping-javascript-page-with-python"">Web-scraping JavaScript page with Python</a></p>"			2013-04-06 18:38:23.077 UTC
15854257	python|web-applications	Using python to get web pages containing JavaScript	<p>I am new to python. As part of writing a module to scrape URLs I noticed that what I get using the python requests module could be different from what I get if I load the URL in a browser. This is because the page could contain JS code which is executed and the result is hat I see in the browser. </p>  <p>My questions -  1. how do I deal with such sites. </p>  <ol> <li><p>Is python or any other module limited to just getting static pages or pages completely rendered on the server side? </p></li> <li><p>How to deal with pages that do an Ajax style queries to load pages? </p></li> </ol>  <p>I am assuming that there probably isn't a library for this and I have to do something on my own. I hope I don't have to build in something like webkit into my code :)</p>  <p>Thanks for any help.</p>	2013-04-06 18:02:52.133 UTC	15854364	"<p>You can look into something that either simulates a browser, like <a href=""https://pypi.python.org/pypi/mechanize/0.2.5"" rel=""nofollow"">mechanize</a>, or actually drives a browser, like <a href=""https://pypi.python.org/pypi/selenium/2.31.0"" rel=""nofollow"">selenium</a>, which should report the html you see after the javascript runs.</p>  <p>This should be what you need to do with Selenium, but it's been a while:</p>  <pre><code>from selenium import webdriver  br = WebDriver.Ie() #or .Firefox() or .Chrome() (but not on x64) br.get(r'http://google.com') html = br.page_source </code></pre>  <p>for html comparison, it's at least different:</p>  <pre><code>from requests import get r = get(r'http://google.com') print r.content[:100] &gt;&gt;&gt;&lt;!doctype html&gt;&lt;html itemscope=""itemscope"" itemtype=""http://schema.org/WebPage""&gt;&lt;head&gt;&lt;meta itemprop' print html[:100] &gt;&gt;&gt;&lt;html itemtype=""http://schema.org/WebPage"" itemscope=""itemscope""&gt;&lt;head&gt;&lt;meta http-equiv=""X-UA-Compat </code></pre>"			2013-04-06 18:13:42.413 UTC
15896526	javascript|python|forms|button|mechanize	Python post form with button javascript	"<p>I try to post ads in a website.<br> We have 2 forms ,the first form ask me information of ads and is ok i submit them but in second form, to submit i have a button (input) with javacript,</p>  <pre><code>onclick=""action_cmd('delete')"" </code></pre>  <p>I use mechanize and python .</p>  <p>The code javascript is :</p>  <pre><code>function action_cmd(action){ var hidden = document.getElementById(""div_cmd""); hidden.innerHTML += ""&lt;&gt;input type=\""hidden\"" name=\""cmd\"" value=\"""" + action + ""\""&gt;""; document.form_ads_action.submit(); } </code></pre>  <p>The code python :<br> for first form i add the information.</p>  <pre><code>br.open(""link"") br.select_form(nr=0) br.submit() </code></pre>  <p>is ok for first.</p>  <p>for second form:</p>  <pre><code>br.select_form(nr=0) br.submit() </code></pre>  <p>doesn't work.</p>  <p>The code HTML :</p>  <pre><code>form name=""ads_action"" action=""link"" method=""post"" enctype=""multipart/form-data""&gt; input type=""image"" name=""back"" id=""back"" value=""Back""   onClick=""action_cmd('back');""&gt; input type=""image"" name=""continue"" id=""continue"" value=""Val""onClick=""action_cmd('delete')""&gt; </code></pre>  <p>Pls help me</p>"	2013-04-09 08:05:34.73 UTC	15943891	"<p>You have the same form number:</p>  <pre><code>br.select_form(nr=0) br.submit() </code></pre>  <p>If it's different form on the same page, then it should be:</p>  <pre><code>br.select_form(nr=1) br.submit() </code></pre>  <p>Or if you want to specifically select the second form, you can do that by name:</p>  <pre><code>br.select_form(name = ""ads_action"") br.submit() </code></pre>"			2013-04-11 08:19:58.917 UTC
15902494	java|javascript|python	JavaScript or Python to pull IP address from block data	"<p>I am trying to filter through a bunch of jiberish text in a google spreadsheet, and pull just the IP address and store them so I can compare them later. IE user puts in </p>  <pre><code>""Summary: unauthorized ms-rdp traffic Notes:  SRC_IP: 211.238.202.137   91.212.144.2   92.66.145.194   121.229.128.42   81.162.195.34   81.88.125.86    213.42.28.188   85.21.42.240   94.56.89.117   177.55.40.14   219.69.14.40 SRC_Port: SRC_Country: US KR IL CN CZ AE RU BR TW DST_IP: MANY DST_Port: DST_Country: US Campus_Agency:"" </code></pre>  <p>the script stores all the scr_ip address's and later if needs be the user can type in an IP address like 211.238.202.137 and it will return a statement that verifies the IP is in or not in, the list. I have tried if statements and had no luck, I have been trying different variations and I think this is just a little over my skill set. Closest I have come was it pulled the IP address but sorted them by value so they didn't match the originals</p>"	2013-04-09 12:54:17.527 UTC	15902629	"<pre><code>import re  text = """"""Summary: unauthorized ms-rdp traffic Notes:  SRC_IP: 211.238.202.137   91.212.144.2   92.66.145.194   121.229.128.42   81.162.195.34   81.88.125.86    213.42.28.188   85.21.42.240   94.56.89.117   177.55.40.14   219.69.14.40 SRC_Port: SRC_Country: US KR IL CN CZ AE RU BR TW DST_IP: MANY DST_Port: DST_Country: US Campus_Agency:""""""  """"""This will store all the ips in the text variable in a list called ips"""""" ips = re.findall('(\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})', text, re.DOTALL)  ipEntered = raw_input('Please enter an IP: ') if ipEntered in ips:     print 'The IP you entered is in the list.' else:     print 'The IP you entered is not in the list.' </code></pre>"			2013-04-09 13:00:01.183 UTC
15902494	java|javascript|python	JavaScript or Python to pull IP address from block data	"<p>I am trying to filter through a bunch of jiberish text in a google spreadsheet, and pull just the IP address and store them so I can compare them later. IE user puts in </p>  <pre><code>""Summary: unauthorized ms-rdp traffic Notes:  SRC_IP: 211.238.202.137   91.212.144.2   92.66.145.194   121.229.128.42   81.162.195.34   81.88.125.86    213.42.28.188   85.21.42.240   94.56.89.117   177.55.40.14   219.69.14.40 SRC_Port: SRC_Country: US KR IL CN CZ AE RU BR TW DST_IP: MANY DST_Port: DST_Country: US Campus_Agency:"" </code></pre>  <p>the script stores all the scr_ip address's and later if needs be the user can type in an IP address like 211.238.202.137 and it will return a statement that verifies the IP is in or not in, the list. I have tried if statements and had no luck, I have been trying different variations and I think this is just a little over my skill set. Closest I have come was it pulled the IP address but sorted them by value so they didn't match the originals</p>"	2013-04-09 12:54:17.527 UTC	15902604	"<p>A quick regular expression that pulls out all ip-address-like text:</p>  <pre><code>import re  ipaddress = re.compile(r'\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}')  addresses = ipaddress.findall(inputtext) if '211.238.202.137' in addresses:     print 'We have a match!' </code></pre>  <p>For your example text, the <code>.findall()</code> call returns:</p>  <pre><code>&gt;&gt;&gt; ipaddress.findall(inputtext) ['211.238.202.137', '91.212.144.2', '92.66.145.194', '121.229.128.42', '81.162.195.34', '81.88.125.86', '213.42.28.188', '85.21.42.240', '94.56.89.117', '177.55.40.14', '219.69.14.40'] </code></pre>"			2013-04-09 12:59:09.54 UTC
15916823	javascript|python|selenium|selenium-rc	Selenium RC / Python / JavaScript .aspx / Loop Statement	"<p>I have been teaching myself Python over the last few months. My first project is a browser driver test case using the Selenium RC web driving framework (Not importing webdriver in my project though, so as not to confuse). Basically, my test case needs to hook into a refresh loop of a '.aspx' page that is written in JavaScript and HTML. This loop constantly refreshes this <code>.aspx</code> page until a <code>sel.is_text_present(""foo"")</code> condition is satisfied. After refreshing until the defined 'text' appears the script is supposed to <code>click</code> a JavaScript button that appears along with the <code>is_text_present</code> string. Upon executing the script Firefox opens and directs itself to the specific page and enters its <code>refresh loop</code>, but when the text appears (i.e. the <code>.aspx</code> page changes its state and loads a JavaScript table with a JavaScript button) the script doesn't execute the other branch of the loop. Here is a snippet of code which shows the logic I have implemented:</p>  <pre><code>i = sel.is_text_present(""Schedule"")    #text that the test case is 'waiting' for while i != True:     print i     print ""Waiting for job...""     sel.refresh() else:                     print ""Job found...""     sel.click(""id=Select"")     sel.wait_for_page_to_load(""30000"")     sel.click(""id=1"")     sel.wait_for_page_to_load(""30000"")     print ""Success!""     test_py_s_f_t_c()    #calls this function again to repeat the test case </code></pre>  <p>Does the logic of my loop statement instruct Firefox to refresh until it detects a string of text and then upon detecting this string to click a button? Is it possible to have wildcards in the button id if the name of the button is dynamic and changes? </p>"	2013-04-10 04:15:02.87 UTC	15916962	"<p>I have only used selenium through the c# API, but you can try to use xpath in your click function</p>  <p>sel.click(""//input[contains(@id,'partialId')]""); or button depending on the type of html you're using</p>"			2013-04-10 04:29:10.31 UTC
15916823	javascript|python|selenium|selenium-rc	Selenium RC / Python / JavaScript .aspx / Loop Statement	"<p>I have been teaching myself Python over the last few months. My first project is a browser driver test case using the Selenium RC web driving framework (Not importing webdriver in my project though, so as not to confuse). Basically, my test case needs to hook into a refresh loop of a '.aspx' page that is written in JavaScript and HTML. This loop constantly refreshes this <code>.aspx</code> page until a <code>sel.is_text_present(""foo"")</code> condition is satisfied. After refreshing until the defined 'text' appears the script is supposed to <code>click</code> a JavaScript button that appears along with the <code>is_text_present</code> string. Upon executing the script Firefox opens and directs itself to the specific page and enters its <code>refresh loop</code>, but when the text appears (i.e. the <code>.aspx</code> page changes its state and loads a JavaScript table with a JavaScript button) the script doesn't execute the other branch of the loop. Here is a snippet of code which shows the logic I have implemented:</p>  <pre><code>i = sel.is_text_present(""Schedule"")    #text that the test case is 'waiting' for while i != True:     print i     print ""Waiting for job...""     sel.refresh() else:                     print ""Job found...""     sel.click(""id=Select"")     sel.wait_for_page_to_load(""30000"")     sel.click(""id=1"")     sel.wait_for_page_to_load(""30000"")     print ""Success!""     test_py_s_f_t_c()    #calls this function again to repeat the test case </code></pre>  <p>Does the logic of my loop statement instruct Firefox to refresh until it detects a string of text and then upon detecting this string to click a button? Is it possible to have wildcards in the button id if the name of the button is dynamic and changes? </p>"	2013-04-10 04:15:02.87 UTC	15917101	"<p>Looking purely on the logic, it is incorrect. As you are not checking the existence of the text after the refresh.</p>  <p>You could write it this way.</p>  <pre><code>i = sel.is_text_present(""Schedule"")    #text that the test case is 'waiting' for  while i != True:     print i     print ""Waiting for job...""     sel.refresh()     i = sel.is_text_present(""Schedule"")    #text that the test case is 'waiting' for  print ""Job found..."" </code></pre>"			2013-04-10 04:42:50.98 UTC
15926979	javascript|python|string|substring	javascript shorthand for python a[1:]	"<p>So I have a string in javascript</p>  <pre><code>var s=""may the force""; </code></pre>  <p>and I just want the <code>the force</code> part, in python I can just do <code>s[4:]</code>, so are there  any <strong>equivalents</strong> in javascript?</p>"	2013-04-10 13:17:21.077 UTC	15940578	"<p>You can simply do:</p>  <pre><code>var s = ""may the force""; var res = s.slice(4); </code></pre>"			2013-04-11 04:04:51.84 UTC
15926979	javascript|python|string|substring	javascript shorthand for python a[1:]	"<p>So I have a string in javascript</p>  <pre><code>var s=""may the force""; </code></pre>  <p>and I just want the <code>the force</code> part, in python I can just do <code>s[4:]</code>, so are there  any <strong>equivalents</strong> in javascript?</p>"	2013-04-10 13:17:21.077 UTC	15927045	"<p>You can do <a href=""https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/String/substr"" rel=""nofollow""><code>substr</code></a> or <a href=""https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/String/substring"" rel=""nofollow""><code>substring</code></a></p>  <pre><code>//substr var tf1 = s.substr(4);  //substring var tf2 = s.substring(4); </code></pre>"			2013-04-10 13:20:36.273 UTC
15926979	javascript|python|string|substring	javascript shorthand for python a[1:]	"<p>So I have a string in javascript</p>  <pre><code>var s=""may the force""; </code></pre>  <p>and I just want the <code>the force</code> part, in python I can just do <code>s[4:]</code>, so are there  any <strong>equivalents</strong> in javascript?</p>"	2013-04-10 13:17:21.077 UTC	15950792	"<p>In the newest implementations of JavaScript, there is a similar shorthand notation, but be warned, it is <em>not yet cross-browser compatible</em>, as it is only supported in browsers with the newest implementations of JavaScript.</p>  <pre><code>var s = 'happy'; s[3]; // ""p"" </code></pre>  <p>I came across this on the <strong>Mozilla Developer Network</strong> while browsing. Wish I saved the link.</p>"			2013-04-11 14:00:56.647 UTC
15926979	javascript|python|string|substring	javascript shorthand for python a[1:]	"<p>So I have a string in javascript</p>  <pre><code>var s=""may the force""; </code></pre>  <p>and I just want the <code>the force</code> part, in python I can just do <code>s[4:]</code>, so are there  any <strong>equivalents</strong> in javascript?</p>"	2013-04-10 13:17:21.077 UTC	15927038	"<p>You could use:</p>  <pre><code>var s = ""may the force""; var t = s.substring(4);  alert(t); //alerts ""the force"" </code></pre>  <p>Check this <a href=""http://jsfiddle.net/SiCurious/YDV65/"" rel=""noreferrer""><strong>Fiddle</strong></a></p>"			2013-04-10 13:20:11.64 UTC
16017040	javascript|python	"Python to JavaScript with sum, map and lambda"	"<p>I'm not familiar with Python, and I'm trying to convert a function to JavaScript, but I can't quite figure out what this line does:</p>  <pre><code>maxnum = sum(map(lambda x: x[1], tsweights)) </code></pre>  <p>where <code>tsweights</code> = <code>[['5', 61], ['6', 61], ['7', 61], ... ]</code>.</p>  <p>I have no idea how this works and it would be great if someone could help out.</p>  <p>Full function: <a href=""http://pastebin.com/PZqRAz0Z"" rel=""nofollow"">http://pastebin.com/PZqRAz0Z</a></p>"	2013-04-15 13:55:06.98 UTC	16017097	"<p>That function can be rewritten like so:</p>  <pre><code>sum = 0 for item in tsweights:     sum += item[1] </code></pre>  <p>If <code>tsweights</code> = <code>[['5', 61], ['6', 61], ['7', 61], ... ]</code>, then the function will return <code>61 + 61 + 61 + ...</code>.</p>"			2013-04-15 13:58:22.15 UTC
16017040	javascript|python	"Python to JavaScript with sum, map and lambda"	"<p>I'm not familiar with Python, and I'm trying to convert a function to JavaScript, but I can't quite figure out what this line does:</p>  <pre><code>maxnum = sum(map(lambda x: x[1], tsweights)) </code></pre>  <p>where <code>tsweights</code> = <code>[['5', 61], ['6', 61], ['7', 61], ... ]</code>.</p>  <p>I have no idea how this works and it would be great if someone could help out.</p>  <p>Full function: <a href=""http://pastebin.com/PZqRAz0Z"" rel=""nofollow"">http://pastebin.com/PZqRAz0Z</a></p>"	2013-04-15 13:55:06.98 UTC	16017079	"<p>Let's start with some hints.</p>  <p><code>lambda x: x[1]</code> is just an anonymous function which does the same thing as this:</p>  <pre><code>function foo(x) {     return x[1]; } </code></pre>  <p><code>map()</code> is equivalent to <a href=""https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Array/map"" rel=""nofollow""><code>Array.map</code></a>. I think you can figure out what <code>sum()</code> does.</p>  <p>Relevant Python docs:</p>  <ul> <li><a href=""http://docs.python.org/2/reference/expressions.html#lambda"" rel=""nofollow""><code>lambda</code></a></li> <li><a href=""http://docs.python.org/2/library/functions.html#map"" rel=""nofollow""><code>map()</code></a></li> <li><a href=""http://docs.python.org/2/library/functions.html#sum"" rel=""nofollow""><code>sum()</code></a></li> </ul>"			2013-04-15 13:57:13.357 UTC
16017040	javascript|python	"Python to JavaScript with sum, map and lambda"	"<p>I'm not familiar with Python, and I'm trying to convert a function to JavaScript, but I can't quite figure out what this line does:</p>  <pre><code>maxnum = sum(map(lambda x: x[1], tsweights)) </code></pre>  <p>where <code>tsweights</code> = <code>[['5', 61], ['6', 61], ['7', 61], ... ]</code>.</p>  <p>I have no idea how this works and it would be great if someone could help out.</p>  <p>Full function: <a href=""http://pastebin.com/PZqRAz0Z"" rel=""nofollow"">http://pastebin.com/PZqRAz0Z</a></p>"	2013-04-15 13:55:06.98 UTC	16017116	"<p>It's similar to this in JavaScript...</p>  <pre><code>var tsweights = [['5', 61], ['6', 61], ['7', 61], ... ]; var maxnum = 0; for (var i in tsweights) {     maxnum += tsweights[i][1]; } </code></pre>"			2013-04-15 13:59:07.077 UTC
16017040	javascript|python	"Python to JavaScript with sum, map and lambda"	"<p>I'm not familiar with Python, and I'm trying to convert a function to JavaScript, but I can't quite figure out what this line does:</p>  <pre><code>maxnum = sum(map(lambda x: x[1], tsweights)) </code></pre>  <p>where <code>tsweights</code> = <code>[['5', 61], ['6', 61], ['7', 61], ... ]</code>.</p>  <p>I have no idea how this works and it would be great if someone could help out.</p>  <p>Full function: <a href=""http://pastebin.com/PZqRAz0Z"" rel=""nofollow"">http://pastebin.com/PZqRAz0Z</a></p>"	2013-04-15 13:55:06.98 UTC	16017214	"<p>Just to add to Matt Ball's answer:</p>  <pre><code> var tsweights = [['5', 61], ['6', 61], ['7', 61], ... ]      , maxnum = tsweights.map(function(x){ return x[1] })                      .reduce(function( p, c ){ return p+c }) </code></pre>  <p>as JavaScript doesn't have the sum function.</p>  <p>Or using new arrow functions from es:</p>  <pre><code> var tsweights =  [['5', 61], ['6', 61], ['7', 61], ... ]    , maxnum = tsweights.map( x =&gt; x[1] ).reduce ( (p,c) =&gt; p+c ) </code></pre>"			2013-04-15 14:02:54.213 UTC
16024420	javascript|python|html|arguments	Webpage with Javascript executing Python script with arguments	"<p>I have three files in the same directory. One is a python script, which takes argumenet. One is a html page with javascript. And the last one is a source .wav file.</p>  <pre><code>./myfolder/sound_manipulation.py ./myfolder/volume_slider.html ./myfolder/the_song.wav </code></pre>  <p>The sound_manipulation.py file can be executed like:</p>  <pre><code>python sound_manipulation.py -v 50 </code></pre>  <p>and it generates a new wav file, new_song.wav, based on the_song.wav, but only has 50% of the original volume level.</p>  <p>On the other hand, the volume_slider.html contains a slider goes from 0 to 100%, and a button calling an onclick javascript function, update_vol();</p>  <p>So far, the update_vol() alerts the value of the slider, and that's all.</p>  <pre><code>function update_vol() {     var vol = document.getElementById('vol_slider').value;     alert(vol); } </code></pre>  <p>But I want the update_vol() to actually execute the python script using the vol.</p>  <p>How can I make that happen?</p>  <p>Also, when the ""python sound_manipulation.py -v 50"" is executed, how can I return the location of the new_song.wav back to volume_slider.html?</p>  <p>Please help. Thanks!</p>"	2013-04-15 20:44:54.04 UTC	16024540	"<p>Hm, well, I guess you're out of luck. Browser scripts <em>can't</em> execute anything (so no Python script) on your system. As I'm sure you can imagine, this could present a huge security risk -- that's exactly how much trouble Microsoft's ActiveX got into.</p>  <p>I'm assuming you want to create a graphical interface for that script, so alternatively you could :</p>  <ul> <li>Do a JavaScript equivalent of your Python script if you absolutely need HTML</li> <li>Or create an interface in QT, GTK or the like. Python can easily do that, by the way!</li> </ul>"			2013-04-15 20:54:06.07 UTC
16024420	javascript|python|html|arguments	Webpage with Javascript executing Python script with arguments	"<p>I have three files in the same directory. One is a python script, which takes argumenet. One is a html page with javascript. And the last one is a source .wav file.</p>  <pre><code>./myfolder/sound_manipulation.py ./myfolder/volume_slider.html ./myfolder/the_song.wav </code></pre>  <p>The sound_manipulation.py file can be executed like:</p>  <pre><code>python sound_manipulation.py -v 50 </code></pre>  <p>and it generates a new wav file, new_song.wav, based on the_song.wav, but only has 50% of the original volume level.</p>  <p>On the other hand, the volume_slider.html contains a slider goes from 0 to 100%, and a button calling an onclick javascript function, update_vol();</p>  <p>So far, the update_vol() alerts the value of the slider, and that's all.</p>  <pre><code>function update_vol() {     var vol = document.getElementById('vol_slider').value;     alert(vol); } </code></pre>  <p>But I want the update_vol() to actually execute the python script using the vol.</p>  <p>How can I make that happen?</p>  <p>Also, when the ""python sound_manipulation.py -v 50"" is executed, how can I return the location of the new_song.wav back to volume_slider.html?</p>  <p>Please help. Thanks!</p>"	2013-04-15 20:44:54.04 UTC	16024570	"<p>the simplest and crudest one-time cgi script might solve your problem.</p>  <p>set up a cgi script/environment to just get <code>volume</code> value from user / then use <code>subprocess</code> module to process the .wav file and send it back to user. if you need anything more than that, build your own web app.</p>  <pre><code>import cgi import subprocess import sys form = cgi.FieldStorage() volume = form.getfirst('volume') #read from form 'volume'  subprocess.call(['python', 'sound_manipulation.py', '-v', volume])  with open('new_song.wav', 'rb') as wav_file:     print(""Content-Type: audio/wav\n"")     sys.stdout.write(wav_file.read()) </code></pre>"			2013-04-15 20:56:51.203 UTC
16040367	javascript|python|cryptography|pycrypto|cryptojs	Strange issue with AES CTR mode with Python and Javascript	"<p>I'm trying to decrypt a ciphertext created by CryptoJS using PyCrypto. I am using AES-256-CTR, with a 12-byte random prefix and 4-byte counter. So far, I've had limited success. <a href=""https://stackoverflow.com/questions/15837463/is-aes-ctr-in-cryptojs-compatible-with-pycrypto"">Please read this previous post</a> where I made a first attempt.</p>  <p>This works in Javascript:</p>  <ol> <li>Install the CryptoCat extension </li> <li>Run CryptoCat</li> <li>Fire up the developer console (F12 in Chrome/Firefox)</li> <li>Run these lines of code</li> </ol>  <hr>  <pre><code>key = 'b1df40bc2e4a1d4e31c50574735e1c909aa3c8fda58eca09bf2681ce4d117e11'; msg = 'LwFUZbKzuarvPR6pmXM2AiYVD2iL0/Ww2gs/9OpcMy+MWasvvzA2UEmRM8dq4loB\ndfPaYOe65JqGQMWoLOTWo1TreBd9vmPUZt72nFs='; iv = 'gpG388l8rT02vBH4'; opts = {mode: CryptoJS.mode.CTR, iv: CryptoJS.enc.Base64.parse(iv), padding: CryptoJS.pad.NoPadding}; CryptoJS.AES.decrypt(msg, CryptoJS.enc.Hex.parse(key), opts).toString(CryptoJS.enc.Utf8); </code></pre>  <p>Expected output: <code>""Hello, world!ImiAq7aVLlmZDM9RfhDQgPp0CrAyZE0lyzJ6HDq4VoUmIiKUg7i2xpTSPs28USU8""</code>.</p>  <hr>  <p>Here is a script I wrote in Python that partially(!) decrypts the ciphertext:</p>  <pre><code>import struct import base64 import Crypto.Cipher.AES import Crypto.Util.Counter  def bytestring_to_int(s):     r = 0     for b in s:         r = r * 256 + ord(b)     return r  class IVCounter(object):     def __init__(self, prefix="""", start_val=0):         self.prefix = prefix         self.first = True         self.current_val = start_val      def __call__(self):         if self.first:             self.first = False         else:             self.current_val += 1          postfix = struct.pack(""&gt;I"", self.current_val)         n = base64.b64decode(self.prefix) + postfix         return n  def decrypt_msg(key, msg, iv):     k = base64.b16decode(key.upper())     ctr = IVCounter(prefix=iv)     #ctr = Crypto.Util.Counter.new(32, prefix=base64.b64decode(iv), initial_value=0, little_endian=False)     aes = Crypto.Cipher.AES.new(k, mode=Crypto.Cipher.AES.MODE_CTR, counter=ctr)     plaintext = aes.decrypt(base64.b64decode(msg))     return plaintext  if __name__ == ""__main__"":         #original:         key = 'b1df40bc2e4a1d4e31c50574735e1c909aa3c8fda58eca09bf2681ce4d117e11'         msg = 'LwFUZbKzuarvPR6pmXM2AiYVD2iL0/Ww2gs/9OpcMy+MWasvvzA2UEmRM8dq4loB\ndfPaYOe65JqGQMWoLOTWo1TreBd9vmPUZt72nFs='         iv = 'gpG388l8rT02vBH4'          decrypted = decrypt_msg(key, msg, iv)         print ""Decrypted message:"", repr(decrypt_msg(key, msg, iv))         print decrypted </code></pre>  <p>The output is:</p>  <p><code>'Hello, world!Imi\xfb+\xf47\x04\xa0\xb1\xa1\xea\xc0I\x03\xec\xc7\x13d\xcf\xe25&gt;l\xdc\xbd\x9f\xa2\x98\x9f$\x13a\xbb\xcb\x13</code>\xd2#\xc9T\xf4|\xd8\xcb<code>aO)\x94\x9aq&lt;\xa7\x7f\x14\x11\xb5\xb0\xb6\xb5GQ\x92'</code></p>  <p>The problem is, only the <strong>first 16 bytes</strong> of the output match the first 16 bytes of the expected output!</p>  <p><code>Hello, world!ImiAq7aVLlmZDM9RfhDQgPp0CrAyZE0lyzJ6HDq4VoUmIiKUg7i2xpTSPs28USU8</code></p>  <p>When I modify the script to do this:</p>  <pre><code>def __init__(self, prefix="""", start_val=1): </code></pre>  <p>and</p>  <pre><code>self.current_val += 0 #do not increment </code></pre>  <p>which makes the counter output the same value (<code>\x00\x00\x00\x01</code>) every time it is called, the plaintext is:</p>  <pre><code>\xf2?\xaf:=\xc0\xfd\xbb\xdf\xf6h^\x9f\xe8\x16I\xfb+\xf47\x04\xa0\xb1\xa1\xea\xc0I\x03\xec\xc7\x13dQgPp0CrAyZE0lyzJ\xa8\xcd!?h\xc9\xa0\x8b\xb6\x8b\xb3_*\x7f\xf6\xe8\x89\xd5\x83H\xf2\xcd'\xc5V\x15\x80k] </code></pre>  <p>where the 2nd block of 16 bytes (dQgPp0CrAyZE0lyzJ) matches the expected output.</p>  <p>When I set the counter to emit <code>\x00\x00\x00\x02</code> and <code>\x00\x00\x00\x03</code>, I get similar results- subsequent 16-byte blocks are revealed. The only exception is that with 0s, the first 32 bytes are revealed.</p>  <pre><code>All 0s: reveals first 32 bytes. 'Hello, world!ImiAq7aVLlmZDM9RfhD\xeb=\x93&amp;b\xaf\xaf\x8d\xc9\xdeA\n\xd2\xd8\x01j\x12\x97\xe2i:%}G\x06\x0f\xb7e\x94\xde\x8d\xc83\x8f@\x1e\xa0!\xfa\t\xe6\x91\x84Q\xe3' All 1s: reveals next 16 bytes. ""\xf2?\xaf:=\xc0\xfd\xbb\xdf\xf6h^\x9f\xe8\x16I\xfb+\xf47\x04\xa0\xb1\xa1\xea\xc0I\x03\xec\xc7\x13dQgPp0CrAyZE0lyzJ\xa8\xcd!?h\xc9\xa0\x8b\xb6\x8b\xb3_*\x7f\xf6\xe8\x89\xd5\x83H\xf2\xcd'\xc5V\x15\x80k]"" All 2s: reveals next 16 bytes. 'l\xba\xcata_2e\x044\xb2J\xe0\xf0\xd7\xc8e\xae\x91yX?~\x7f1\x02\x93\x17\x93\xdf\xd2\xe5\xcf\xe25&gt;l\xdc\xbd\x9f\xa2\x98\x9f$\x13a\xbb\xcb6HDq4VoUmIiKUg7i\x17P\xe6\x06\xaeR\xe8\x1b\x8d\xd7Z\x7f""' All 3s: reveals next 13 bytes. 'I\x92\\&amp;\x9c]\xa9L\xb1\xb6\xbb`\xfa\xbet;@\x86\x07+\xa5=\xe5V\x84\x80\x9a=\x89\x91q\x16\xea\xca\xa3l\x91\xde&amp;\xb6\x17\x1a\x96\x0e\t/\x188\x13`\xd2#\xc9T\xf4|\xd8\xcb`aO)\x94\x9a2xpTSPs28USU8' </code></pre>  <p>If you concat the ""correct"" blocks, you'll get the expected plaintext:</p>  <pre><code>Hello, world!ImiAq7aVLlmZDM9RfhDQgPp0CrAyZE0lyzJ6HDq4VoUmIiKUg7i2xpTSPs28USU8 </code></pre>  <p>This is really strange. I am definitely doing something wrong on the Python end as things can be decrypted, but not all in one go. If anyone can help, I would be really grateful. Thank you.</p>"	2013-04-16 14:57:24.453 UTC	16057351	"<p>Fixed. I simply made the counter start with 0 twice. Does anyone know if this is a vulnerability?</p>  <pre><code>import struct import base64 import Crypto.Cipher.AES import Crypto.Util.Counter import pdb  def bytestring_to_int(s):     r = 0     for b in s:         r = r * 256 + ord(b)     return r  class IVCounter(object):     def __init__(self, prefix="""", start_val=0):         self.prefix = prefix         self.zeroth = True         self.first = False         self.current_val = start_val      def __call__(self):         if self.zeroth:             self.zeroth = False             self.first = True         elif self.first:             self.first = False         else:             self.current_val += 1          postfix = struct.pack(""&gt;I"", self.current_val)         n = base64.b64decode(self.prefix) + postfix         return n  def decrypt_msg(key, msg, iv):     k = base64.b16decode(key.upper())     ctr = IVCounter(prefix=iv)     #ctr = Crypto.Util.Counter.new(32, prefix=base64.b64decode(iv), initial_value=0, little_endian=False)     aes = Crypto.Cipher.AES.new(k, mode=Crypto.Cipher.AES.MODE_CTR, counter=ctr)     plaintext = aes.decrypt(base64.b64decode(msg))     return plaintext  if __name__ == ""__main__"":         #original:         key = 'b1df40bc2e4a1d4e31c50574735e1c909aa3c8fda58eca09bf2681ce4d117e11'         msg = 'LwFUZbKzuarvPR6pmXM2AiYVD2iL0/Ww2gs/9OpcMy+MWasvvzA2UEmRM8dq4loB\ndfPaYOe65JqGQMWoLOTWo1TreBd9vmPUZt72nFs='         iv = 'gpG388l8rT02vBH4'          decrypted = decrypt_msg(key, msg, iv)         print ""Decrypted message:"", repr(decrypt_msg(key, msg, iv))         print decrypted </code></pre>"			2013-04-17 10:12:08.3 UTC
16040367	javascript|python|cryptography|pycrypto|cryptojs	Strange issue with AES CTR mode with Python and Javascript	"<p>I'm trying to decrypt a ciphertext created by CryptoJS using PyCrypto. I am using AES-256-CTR, with a 12-byte random prefix and 4-byte counter. So far, I've had limited success. <a href=""https://stackoverflow.com/questions/15837463/is-aes-ctr-in-cryptojs-compatible-with-pycrypto"">Please read this previous post</a> where I made a first attempt.</p>  <p>This works in Javascript:</p>  <ol> <li>Install the CryptoCat extension </li> <li>Run CryptoCat</li> <li>Fire up the developer console (F12 in Chrome/Firefox)</li> <li>Run these lines of code</li> </ol>  <hr>  <pre><code>key = 'b1df40bc2e4a1d4e31c50574735e1c909aa3c8fda58eca09bf2681ce4d117e11'; msg = 'LwFUZbKzuarvPR6pmXM2AiYVD2iL0/Ww2gs/9OpcMy+MWasvvzA2UEmRM8dq4loB\ndfPaYOe65JqGQMWoLOTWo1TreBd9vmPUZt72nFs='; iv = 'gpG388l8rT02vBH4'; opts = {mode: CryptoJS.mode.CTR, iv: CryptoJS.enc.Base64.parse(iv), padding: CryptoJS.pad.NoPadding}; CryptoJS.AES.decrypt(msg, CryptoJS.enc.Hex.parse(key), opts).toString(CryptoJS.enc.Utf8); </code></pre>  <p>Expected output: <code>""Hello, world!ImiAq7aVLlmZDM9RfhDQgPp0CrAyZE0lyzJ6HDq4VoUmIiKUg7i2xpTSPs28USU8""</code>.</p>  <hr>  <p>Here is a script I wrote in Python that partially(!) decrypts the ciphertext:</p>  <pre><code>import struct import base64 import Crypto.Cipher.AES import Crypto.Util.Counter  def bytestring_to_int(s):     r = 0     for b in s:         r = r * 256 + ord(b)     return r  class IVCounter(object):     def __init__(self, prefix="""", start_val=0):         self.prefix = prefix         self.first = True         self.current_val = start_val      def __call__(self):         if self.first:             self.first = False         else:             self.current_val += 1          postfix = struct.pack(""&gt;I"", self.current_val)         n = base64.b64decode(self.prefix) + postfix         return n  def decrypt_msg(key, msg, iv):     k = base64.b16decode(key.upper())     ctr = IVCounter(prefix=iv)     #ctr = Crypto.Util.Counter.new(32, prefix=base64.b64decode(iv), initial_value=0, little_endian=False)     aes = Crypto.Cipher.AES.new(k, mode=Crypto.Cipher.AES.MODE_CTR, counter=ctr)     plaintext = aes.decrypt(base64.b64decode(msg))     return plaintext  if __name__ == ""__main__"":         #original:         key = 'b1df40bc2e4a1d4e31c50574735e1c909aa3c8fda58eca09bf2681ce4d117e11'         msg = 'LwFUZbKzuarvPR6pmXM2AiYVD2iL0/Ww2gs/9OpcMy+MWasvvzA2UEmRM8dq4loB\ndfPaYOe65JqGQMWoLOTWo1TreBd9vmPUZt72nFs='         iv = 'gpG388l8rT02vBH4'          decrypted = decrypt_msg(key, msg, iv)         print ""Decrypted message:"", repr(decrypt_msg(key, msg, iv))         print decrypted </code></pre>  <p>The output is:</p>  <p><code>'Hello, world!Imi\xfb+\xf47\x04\xa0\xb1\xa1\xea\xc0I\x03\xec\xc7\x13d\xcf\xe25&gt;l\xdc\xbd\x9f\xa2\x98\x9f$\x13a\xbb\xcb\x13</code>\xd2#\xc9T\xf4|\xd8\xcb<code>aO)\x94\x9aq&lt;\xa7\x7f\x14\x11\xb5\xb0\xb6\xb5GQ\x92'</code></p>  <p>The problem is, only the <strong>first 16 bytes</strong> of the output match the first 16 bytes of the expected output!</p>  <p><code>Hello, world!ImiAq7aVLlmZDM9RfhDQgPp0CrAyZE0lyzJ6HDq4VoUmIiKUg7i2xpTSPs28USU8</code></p>  <p>When I modify the script to do this:</p>  <pre><code>def __init__(self, prefix="""", start_val=1): </code></pre>  <p>and</p>  <pre><code>self.current_val += 0 #do not increment </code></pre>  <p>which makes the counter output the same value (<code>\x00\x00\x00\x01</code>) every time it is called, the plaintext is:</p>  <pre><code>\xf2?\xaf:=\xc0\xfd\xbb\xdf\xf6h^\x9f\xe8\x16I\xfb+\xf47\x04\xa0\xb1\xa1\xea\xc0I\x03\xec\xc7\x13dQgPp0CrAyZE0lyzJ\xa8\xcd!?h\xc9\xa0\x8b\xb6\x8b\xb3_*\x7f\xf6\xe8\x89\xd5\x83H\xf2\xcd'\xc5V\x15\x80k] </code></pre>  <p>where the 2nd block of 16 bytes (dQgPp0CrAyZE0lyzJ) matches the expected output.</p>  <p>When I set the counter to emit <code>\x00\x00\x00\x02</code> and <code>\x00\x00\x00\x03</code>, I get similar results- subsequent 16-byte blocks are revealed. The only exception is that with 0s, the first 32 bytes are revealed.</p>  <pre><code>All 0s: reveals first 32 bytes. 'Hello, world!ImiAq7aVLlmZDM9RfhD\xeb=\x93&amp;b\xaf\xaf\x8d\xc9\xdeA\n\xd2\xd8\x01j\x12\x97\xe2i:%}G\x06\x0f\xb7e\x94\xde\x8d\xc83\x8f@\x1e\xa0!\xfa\t\xe6\x91\x84Q\xe3' All 1s: reveals next 16 bytes. ""\xf2?\xaf:=\xc0\xfd\xbb\xdf\xf6h^\x9f\xe8\x16I\xfb+\xf47\x04\xa0\xb1\xa1\xea\xc0I\x03\xec\xc7\x13dQgPp0CrAyZE0lyzJ\xa8\xcd!?h\xc9\xa0\x8b\xb6\x8b\xb3_*\x7f\xf6\xe8\x89\xd5\x83H\xf2\xcd'\xc5V\x15\x80k]"" All 2s: reveals next 16 bytes. 'l\xba\xcata_2e\x044\xb2J\xe0\xf0\xd7\xc8e\xae\x91yX?~\x7f1\x02\x93\x17\x93\xdf\xd2\xe5\xcf\xe25&gt;l\xdc\xbd\x9f\xa2\x98\x9f$\x13a\xbb\xcb6HDq4VoUmIiKUg7i\x17P\xe6\x06\xaeR\xe8\x1b\x8d\xd7Z\x7f""' All 3s: reveals next 13 bytes. 'I\x92\\&amp;\x9c]\xa9L\xb1\xb6\xbb`\xfa\xbet;@\x86\x07+\xa5=\xe5V\x84\x80\x9a=\x89\x91q\x16\xea\xca\xa3l\x91\xde&amp;\xb6\x17\x1a\x96\x0e\t/\x188\x13`\xd2#\xc9T\xf4|\xd8\xcb`aO)\x94\x9a2xpTSPs28USU8' </code></pre>  <p>If you concat the ""correct"" blocks, you'll get the expected plaintext:</p>  <pre><code>Hello, world!ImiAq7aVLlmZDM9RfhDQgPp0CrAyZE0lyzJ6HDq4VoUmIiKUg7i2xpTSPs28USU8 </code></pre>  <p>This is really strange. I am definitely doing something wrong on the Python end as things can be decrypted, but not all in one go. If anyone can help, I would be really grateful. Thank you.</p>"	2013-04-16 14:57:24.453 UTC	16047516	"<p>When using crypto mode <code>CryptoJS.mode.CTR</code> (where CTR stands for counter) the Initailization vector together with a counter is encrypted and then applied to the data to encrypt. This is done for each block of data you encrypt.</p>  <p>You explain that different parts of the message are decrypted correctly, when you apply different values to <code>start_val</code>, so I suspect that the counter is simply not correctly increased with each decrypt of a block. </p>  <p>Take a look at <a href=""http://en.wikipedia.org/wiki/Block_cipher_modes_of_operation#Counter_.28CTR.29"" rel=""nofollow"">Block Cipher Mode: CTR at wikipedia</a></p>  <p><strong>Caution:</strong> Please note that when using the CTR mode, the combination of the initialization vector + the counter should never be repeated.</p>"			2013-04-16 21:33:36.86 UTC
16040367	javascript|python|cryptography|pycrypto|cryptojs	Strange issue with AES CTR mode with Python and Javascript	"<p>I'm trying to decrypt a ciphertext created by CryptoJS using PyCrypto. I am using AES-256-CTR, with a 12-byte random prefix and 4-byte counter. So far, I've had limited success. <a href=""https://stackoverflow.com/questions/15837463/is-aes-ctr-in-cryptojs-compatible-with-pycrypto"">Please read this previous post</a> where I made a first attempt.</p>  <p>This works in Javascript:</p>  <ol> <li>Install the CryptoCat extension </li> <li>Run CryptoCat</li> <li>Fire up the developer console (F12 in Chrome/Firefox)</li> <li>Run these lines of code</li> </ol>  <hr>  <pre><code>key = 'b1df40bc2e4a1d4e31c50574735e1c909aa3c8fda58eca09bf2681ce4d117e11'; msg = 'LwFUZbKzuarvPR6pmXM2AiYVD2iL0/Ww2gs/9OpcMy+MWasvvzA2UEmRM8dq4loB\ndfPaYOe65JqGQMWoLOTWo1TreBd9vmPUZt72nFs='; iv = 'gpG388l8rT02vBH4'; opts = {mode: CryptoJS.mode.CTR, iv: CryptoJS.enc.Base64.parse(iv), padding: CryptoJS.pad.NoPadding}; CryptoJS.AES.decrypt(msg, CryptoJS.enc.Hex.parse(key), opts).toString(CryptoJS.enc.Utf8); </code></pre>  <p>Expected output: <code>""Hello, world!ImiAq7aVLlmZDM9RfhDQgPp0CrAyZE0lyzJ6HDq4VoUmIiKUg7i2xpTSPs28USU8""</code>.</p>  <hr>  <p>Here is a script I wrote in Python that partially(!) decrypts the ciphertext:</p>  <pre><code>import struct import base64 import Crypto.Cipher.AES import Crypto.Util.Counter  def bytestring_to_int(s):     r = 0     for b in s:         r = r * 256 + ord(b)     return r  class IVCounter(object):     def __init__(self, prefix="""", start_val=0):         self.prefix = prefix         self.first = True         self.current_val = start_val      def __call__(self):         if self.first:             self.first = False         else:             self.current_val += 1          postfix = struct.pack(""&gt;I"", self.current_val)         n = base64.b64decode(self.prefix) + postfix         return n  def decrypt_msg(key, msg, iv):     k = base64.b16decode(key.upper())     ctr = IVCounter(prefix=iv)     #ctr = Crypto.Util.Counter.new(32, prefix=base64.b64decode(iv), initial_value=0, little_endian=False)     aes = Crypto.Cipher.AES.new(k, mode=Crypto.Cipher.AES.MODE_CTR, counter=ctr)     plaintext = aes.decrypt(base64.b64decode(msg))     return plaintext  if __name__ == ""__main__"":         #original:         key = 'b1df40bc2e4a1d4e31c50574735e1c909aa3c8fda58eca09bf2681ce4d117e11'         msg = 'LwFUZbKzuarvPR6pmXM2AiYVD2iL0/Ww2gs/9OpcMy+MWasvvzA2UEmRM8dq4loB\ndfPaYOe65JqGQMWoLOTWo1TreBd9vmPUZt72nFs='         iv = 'gpG388l8rT02vBH4'          decrypted = decrypt_msg(key, msg, iv)         print ""Decrypted message:"", repr(decrypt_msg(key, msg, iv))         print decrypted </code></pre>  <p>The output is:</p>  <p><code>'Hello, world!Imi\xfb+\xf47\x04\xa0\xb1\xa1\xea\xc0I\x03\xec\xc7\x13d\xcf\xe25&gt;l\xdc\xbd\x9f\xa2\x98\x9f$\x13a\xbb\xcb\x13</code>\xd2#\xc9T\xf4|\xd8\xcb<code>aO)\x94\x9aq&lt;\xa7\x7f\x14\x11\xb5\xb0\xb6\xb5GQ\x92'</code></p>  <p>The problem is, only the <strong>first 16 bytes</strong> of the output match the first 16 bytes of the expected output!</p>  <p><code>Hello, world!ImiAq7aVLlmZDM9RfhDQgPp0CrAyZE0lyzJ6HDq4VoUmIiKUg7i2xpTSPs28USU8</code></p>  <p>When I modify the script to do this:</p>  <pre><code>def __init__(self, prefix="""", start_val=1): </code></pre>  <p>and</p>  <pre><code>self.current_val += 0 #do not increment </code></pre>  <p>which makes the counter output the same value (<code>\x00\x00\x00\x01</code>) every time it is called, the plaintext is:</p>  <pre><code>\xf2?\xaf:=\xc0\xfd\xbb\xdf\xf6h^\x9f\xe8\x16I\xfb+\xf47\x04\xa0\xb1\xa1\xea\xc0I\x03\xec\xc7\x13dQgPp0CrAyZE0lyzJ\xa8\xcd!?h\xc9\xa0\x8b\xb6\x8b\xb3_*\x7f\xf6\xe8\x89\xd5\x83H\xf2\xcd'\xc5V\x15\x80k] </code></pre>  <p>where the 2nd block of 16 bytes (dQgPp0CrAyZE0lyzJ) matches the expected output.</p>  <p>When I set the counter to emit <code>\x00\x00\x00\x02</code> and <code>\x00\x00\x00\x03</code>, I get similar results- subsequent 16-byte blocks are revealed. The only exception is that with 0s, the first 32 bytes are revealed.</p>  <pre><code>All 0s: reveals first 32 bytes. 'Hello, world!ImiAq7aVLlmZDM9RfhD\xeb=\x93&amp;b\xaf\xaf\x8d\xc9\xdeA\n\xd2\xd8\x01j\x12\x97\xe2i:%}G\x06\x0f\xb7e\x94\xde\x8d\xc83\x8f@\x1e\xa0!\xfa\t\xe6\x91\x84Q\xe3' All 1s: reveals next 16 bytes. ""\xf2?\xaf:=\xc0\xfd\xbb\xdf\xf6h^\x9f\xe8\x16I\xfb+\xf47\x04\xa0\xb1\xa1\xea\xc0I\x03\xec\xc7\x13dQgPp0CrAyZE0lyzJ\xa8\xcd!?h\xc9\xa0\x8b\xb6\x8b\xb3_*\x7f\xf6\xe8\x89\xd5\x83H\xf2\xcd'\xc5V\x15\x80k]"" All 2s: reveals next 16 bytes. 'l\xba\xcata_2e\x044\xb2J\xe0\xf0\xd7\xc8e\xae\x91yX?~\x7f1\x02\x93\x17\x93\xdf\xd2\xe5\xcf\xe25&gt;l\xdc\xbd\x9f\xa2\x98\x9f$\x13a\xbb\xcb6HDq4VoUmIiKUg7i\x17P\xe6\x06\xaeR\xe8\x1b\x8d\xd7Z\x7f""' All 3s: reveals next 13 bytes. 'I\x92\\&amp;\x9c]\xa9L\xb1\xb6\xbb`\xfa\xbet;@\x86\x07+\xa5=\xe5V\x84\x80\x9a=\x89\x91q\x16\xea\xca\xa3l\x91\xde&amp;\xb6\x17\x1a\x96\x0e\t/\x188\x13`\xd2#\xc9T\xf4|\xd8\xcb`aO)\x94\x9a2xpTSPs28USU8' </code></pre>  <p>If you concat the ""correct"" blocks, you'll get the expected plaintext:</p>  <pre><code>Hello, world!ImiAq7aVLlmZDM9RfhDQgPp0CrAyZE0lyzJ6HDq4VoUmIiKUg7i2xpTSPs28USU8 </code></pre>  <p>This is really strange. I am definitely doing something wrong on the Python end as things can be decrypted, but not all in one go. If anyone can help, I would be really grateful. Thank you.</p>"	2013-04-16 14:57:24.453 UTC	16065600	"<p>There are a couple problems here. First, the message is not a multiple of the block size, and you're not using padding. And second -- and the most crucial to this issue -- is that the IV is also not the correct size. It should be 16 bytes, but you only have 12. Probably both implementations should fail with an exception, and in the next major revision of CryptoJS, this will be the case.</p>  <p>Here's what happens due to this mistake: When the counter increments for the first time, it tries to increment the undefined value, because the last byte of the IV is missing. Undefined + 1 is NaN, and NaN | 0 is 0. That's how you end up getting 0 twice.</p>"			2013-04-17 16:41:29.657 UTC
16073626	python|selenium	How can I get html content written by JavaScript with Selenium/Python	"<p>I'm doing web-crawling with Selenium and I want to get an element(such as a link) written by JavaScript after Selenium simulating clicking on a fake link.</p>  <p>I tried get_html_source(), but it doesn't include the content written by JavaScript.</p>  <p>Code I've written:</p>  <pre><code>    def test_comment_url_fetch(self):         sel = self.selenium          sel.open(""/rmrb"")         url = sel.get_location()         #print url         if url.startswith('http://login'):             sel.open(""/rmrb"")         i = 1         while True:             try:                 if i == 1:                     sel.click(""//div[@class='WB_feed_type SW_fun S_line2']/div/div/div[3]/div/a[4]"")                      print ""click""                 else:                     XPath = ""//div[@class='WB_feed_type SW_fun S_line2'][%d]/div/div/div[3]/div/a[4]""%i                     sel.click(XPath)                     print ""click""             except Exception, e:                 print e                 break             i += 1         html = sel.get_html_source()         html_file = open(""tmp\\foo.html"", 'w')         html_file.write(html.encode('utf-8'))         html_file.close() </code></pre>  <p>I use a while-loop to click a series of fake links which trigger js-actions to show extra content, and that content is what I want. But sel.get_html_source() didn't give what I want.</p>  <p>Anybody may help? Thanks a lot.</p>"	2013-04-18 02:42:30.313 UTC	16073649	"<p>You would need to use a browser engine which can execute Javascript, such as <a href=""http://phantomjs.org/"" rel=""nofollow noreferrer"">PhantomJS</a>. Javascript's changes are only visible to clients which can execute Javascript and provide a DOM/Runtime for events to be fired.</p>  <p>Also very close in relation to: <a href=""https://stackoverflow.com/questions/10136319/executing-javascript-from-python"">Executing Javascript from Python</a></p>"			2013-04-18 02:45:48.98 UTC
16073626	python|selenium	How can I get html content written by JavaScript with Selenium/Python	"<p>I'm doing web-crawling with Selenium and I want to get an element(such as a link) written by JavaScript after Selenium simulating clicking on a fake link.</p>  <p>I tried get_html_source(), but it doesn't include the content written by JavaScript.</p>  <p>Code I've written:</p>  <pre><code>    def test_comment_url_fetch(self):         sel = self.selenium          sel.open(""/rmrb"")         url = sel.get_location()         #print url         if url.startswith('http://login'):             sel.open(""/rmrb"")         i = 1         while True:             try:                 if i == 1:                     sel.click(""//div[@class='WB_feed_type SW_fun S_line2']/div/div/div[3]/div/a[4]"")                      print ""click""                 else:                     XPath = ""//div[@class='WB_feed_type SW_fun S_line2'][%d]/div/div/div[3]/div/a[4]""%i                     sel.click(XPath)                     print ""click""             except Exception, e:                 print e                 break             i += 1         html = sel.get_html_source()         html_file = open(""tmp\\foo.html"", 'w')         html_file.write(html.encode('utf-8'))         html_file.close() </code></pre>  <p>I use a while-loop to click a series of fake links which trigger js-actions to show extra content, and that content is what I want. But sel.get_html_source() didn't give what I want.</p>  <p>Anybody may help? Thanks a lot.</p>"	2013-04-18 02:42:30.313 UTC	16074063	"<p>Since I usually do post-processing on the fetched nodes I run JavaScript directly in the browser with <code>execute_script</code>. For example to get all a-tags:</p>  <pre><code>js_code = ""return document.getElementsByTagName('a')"" your_elements = sel.execute_script(js_code) </code></pre>  <p>Edit: <code>execute_script</code> and <code>get_eval</code> are equivalent except that <code>get_eval</code> performs an implicit return, in <code>execute_script</code> it has to be stated explicitly.</p>"			2013-04-18 03:38:49.733 UTC
16073626	python|selenium	How can I get html content written by JavaScript with Selenium/Python	"<p>I'm doing web-crawling with Selenium and I want to get an element(such as a link) written by JavaScript after Selenium simulating clicking on a fake link.</p>  <p>I tried get_html_source(), but it doesn't include the content written by JavaScript.</p>  <p>Code I've written:</p>  <pre><code>    def test_comment_url_fetch(self):         sel = self.selenium          sel.open(""/rmrb"")         url = sel.get_location()         #print url         if url.startswith('http://login'):             sel.open(""/rmrb"")         i = 1         while True:             try:                 if i == 1:                     sel.click(""//div[@class='WB_feed_type SW_fun S_line2']/div/div/div[3]/div/a[4]"")                      print ""click""                 else:                     XPath = ""//div[@class='WB_feed_type SW_fun S_line2'][%d]/div/div/div[3]/div/a[4]""%i                     sel.click(XPath)                     print ""click""             except Exception, e:                 print e                 break             i += 1         html = sel.get_html_source()         html_file = open(""tmp\\foo.html"", 'w')         html_file.write(html.encode('utf-8'))         html_file.close() </code></pre>  <p>I use a while-loop to click a series of fake links which trigger js-actions to show extra content, and that content is what I want. But sel.get_html_source() didn't give what I want.</p>  <p>Anybody may help? Thanks a lot.</p>"	2013-04-18 02:42:30.313 UTC	16073933	"<p>Can't you just call the browser object inside your selenium environment? For example: </p>  <pre><code>self.browser.find_elements_by_tag_name(""div"") </code></pre>  <p>Should return you an array of divs. You can also find by class, id, and so on.</p>  <p><strong>Edit</strong> Below is the code to create your 'browser' object.</p>  <pre><code>from selenium import webdriver #The browser object self.browser = webdriver.Firefox() #I Use firefox, but can do chrome, IE, and safari i believe </code></pre>  <p>Then you should be able to do as shown above with the <code>find_elements_by_tag_name</code>.</p>"			2013-04-18 03:23:21.803 UTC
16092879	javascript|python|database|json|wxpython	Multi-OS text-based database with an engine for Python and JavaScript	"<p>This is probably a far fetch, but maybe someone knows a good solution for it.</p>  <p><strong>Introduction</strong></p>  <p>I'm currently making an application in Python with the new wxPython 2.9, which has the new <code>html2</code> library, which will inherit the native browser of each OS (Safari/IE/Firefox/Konquerer/~), which is really great.</p>  <p><strong>Goal/Purpose</strong></p>  <p>What I'm currently aiming for is to process large chunks of data and analyze it super fast with Python (currently about 110.000 entries, turning out in about 1.500.000 to 2.250.000 results in a dictionary). This works very fast and is also dynamic, so it will only do that first big fetch once (takes about 2-4 seconds only) and afterwards just keeps listening if new data gets created on the disc.</p>  <p>So far, so good. Now with the new wxPython <code>html2</code> library I'm making the new GUI. It's mainly made to display pages, so what I have made now is a model in a <code>/html/</code> folder (with HTML/CSS/jQuery) and it will dynamically look for a JSON files (jQuery fetching), which is practically a complete dump of the massive dictionaries that the Python script is making in the background (daemon) in a parallel thread.</p>  <p>JavaScript doesn't seem to have issues with reading a big JSON file and because everything is (and stays) local it doesn't really incur slowness or anything. Also the CPU and memory usage is very low.</p>  <p><strong>Conclusion</strong></p>  <p>But here comes the bottleneck. From the JavaScript point of view, the handling of the big JSON file is not really a joyride. I have todo a lot of searching and matching for all the data I need to get, and also creates a lot of redundant re-looping through the same big chunks of entries.</p>  <p><strong>Question</strong></p>  <p>I'm wondering if there is any kind of ""engine"" that is implemented for both Python and JavaScript that can handle jSON files, or maybe other text-based files as a database. Meaning you can really have a MySQL-like structure (not meant by full extend of course), where you at least can define a table structure which hold the data and you do reads/write/updates on methodically.</p>  <p>The app I'm currently developing is multi-OS based (at least Ubuntu, OS X and Windows XP+). I also really don't want to create more clutter than using wxPython (for distribution/dependency sakes) to use an extension database (like I could run a MySQL server on localhost), so purely keep it inside my Python distro's folder. This is also to prevent writing massive code (checks) checking if the user has already got servers/databases in use that might collide with what my app I would then install.</p>  <hr>  <p><em><strong>Final Notes</em></strong></p>  <p>I'm kind of aiming to build some kind of API myself too for future projects to make this way of development standard for my Python scripts that need a GUI. Now that wxPython can more easily embrace the modern browser technologies; there seems to be no limit anymore to building super fast, dynamic and responsive graphical Python apps.</p>"	2013-04-18 20:54:11.287 UTC	16121092	"<p>Kind of got something figured out, through running a CGI HTTP server and letting Python in there fetch SQLite queries for JavaScript's AJAX calls. Here's a small demo (only tested on OS X):</p>  <p><em><strong>Folder structure</em></strong></p>  <pre><code>main.py cgi/index.py data/ html/index.html html/scripts/jquery.js html/scripts/main.js html/styles/main.css </code></pre>  <p><strong>Python server (main.py)</strong></p>  <pre><code>### CGI Server ### import CGIHTTPServer import BaseHTTPServer  class Handler(CGIHTTPServer.CGIHTTPRequestHandler):     cgi_directories = ['/cgi']      # Mute the messages in the shell     def log_message(self, format, *args):         return  httpd = BaseHTTPServer.HTTPServer(('', 61350), Handler) #httpd.serve_forever() thread = threading.Thread(name='CGIHTTPServer', target=httpd.serve_forever) thread.setDaemon(True) thread.start()  #### TEST SQLLite #### # Make the database file if it doesn't exist if not os.path.exists('data/sqlite.db'):     db_file = open('data/sqlite.db', 'w')     db_file.write('')     db_file.close() import sqlite3 conn = sqlite3.connect('data/sqlite.db') cursor = conn.cursor() cursor.execute('CREATE TABLE info(id INTEGER UNIQUE PRIMARY KEY, name VARCHAR(75), folder_name VARCHAR(75))') cursor.execute('INSERT INTO info VALUES(null, ""something1"", ""something1_name"")') cursor.execute('INSERT INTO info VALUES(null, ""something2"", ""something1_name"")') conn.commit() </code></pre>  <p><strong>Python SQLite processor (cgi/index.py) (demo is purely for SELECT, needs more dynamic)</strong></p>  <pre><code>#!/usr/bin/env python import cgi import json import sqlite3 print 'Content-Type: text/json\n\n'  ### Fetch GET-data ### form = cgi.FieldStorage() obj = {}  ### SQLite fetching ### query = form.getvalue('query', 'ERROR') output = ''  if query == 'ERROR':     output = 'WARNING! No query was given!' else:     # WARNING: The path probably needs `../data/sqlite.db` if PYTHONPATH is not defined     conn = sqlite3.connect('data/sqlite.db')     cursor = conn.cursor()     cursor.execute(query)     # TODO: Add functionality/detect if it's a SELECT, INSERT/UPDATE (then we need to conn.commit() )     result = cursor.fetchall()      if len(result) &gt; 0:         output = []          for row in result:             buff = []              for entry in row:                 buff.append(entry)              output.append(buff)     else:         output = 'WARNING! No results found'  obj = output  ### Return the data in jSON (map) format for JavaScript print json.dumps(obj) </code></pre>  <p><strong>JavaScript (html/scripts/main.js)</strong></p>  <pre><code>'use strict'; $(document).ready(function() {     // JSON data read test     var query = 'SELECT * FROM test';      $.ajax({         url: 'http://127.0.0.1:61350/cgi/index.py?query=' + query,         success: function(data) {             lg(data);         },         error: function() {             lg('Something went wrong while fetching the query.');         }     }); }); </code></pre>  <p>And that wraps it up. The console output in the browser is;</p>  <pre><code>[     [1, ""something1"", ""something1_name""],     [2, ""something2"", ""something2_name""] ] </code></pre>  <p>With this methodology you could let Python and JavaScript read/write in the same database, while Python keeps doing its system tasks (daemon) and update the database entries, whilst JavaScript can keep checking for new data.</p>  <p>This method could probably also add room for listeners and other means of communication between the both.</p>  <p>The <code>main.py</code> will instantly stop running because of the daemon. This is because of my wxPython script after it that keeps the daemon (server) alive until the application stops. If someone else wants to use this code for the future; just make sure the server-code runs after the SQLite initiation and unquote <code>httpd.serve_forever()</code> to keep it running.</p>"			2013-04-20 13:52:40.32 UTC
16092879	javascript|python|database|json|wxpython	Multi-OS text-based database with an engine for Python and JavaScript	"<p>This is probably a far fetch, but maybe someone knows a good solution for it.</p>  <p><strong>Introduction</strong></p>  <p>I'm currently making an application in Python with the new wxPython 2.9, which has the new <code>html2</code> library, which will inherit the native browser of each OS (Safari/IE/Firefox/Konquerer/~), which is really great.</p>  <p><strong>Goal/Purpose</strong></p>  <p>What I'm currently aiming for is to process large chunks of data and analyze it super fast with Python (currently about 110.000 entries, turning out in about 1.500.000 to 2.250.000 results in a dictionary). This works very fast and is also dynamic, so it will only do that first big fetch once (takes about 2-4 seconds only) and afterwards just keeps listening if new data gets created on the disc.</p>  <p>So far, so good. Now with the new wxPython <code>html2</code> library I'm making the new GUI. It's mainly made to display pages, so what I have made now is a model in a <code>/html/</code> folder (with HTML/CSS/jQuery) and it will dynamically look for a JSON files (jQuery fetching), which is practically a complete dump of the massive dictionaries that the Python script is making in the background (daemon) in a parallel thread.</p>  <p>JavaScript doesn't seem to have issues with reading a big JSON file and because everything is (and stays) local it doesn't really incur slowness or anything. Also the CPU and memory usage is very low.</p>  <p><strong>Conclusion</strong></p>  <p>But here comes the bottleneck. From the JavaScript point of view, the handling of the big JSON file is not really a joyride. I have todo a lot of searching and matching for all the data I need to get, and also creates a lot of redundant re-looping through the same big chunks of entries.</p>  <p><strong>Question</strong></p>  <p>I'm wondering if there is any kind of ""engine"" that is implemented for both Python and JavaScript that can handle jSON files, or maybe other text-based files as a database. Meaning you can really have a MySQL-like structure (not meant by full extend of course), where you at least can define a table structure which hold the data and you do reads/write/updates on methodically.</p>  <p>The app I'm currently developing is multi-OS based (at least Ubuntu, OS X and Windows XP+). I also really don't want to create more clutter than using wxPython (for distribution/dependency sakes) to use an extension database (like I could run a MySQL server on localhost), so purely keep it inside my Python distro's folder. This is also to prevent writing massive code (checks) checking if the user has already got servers/databases in use that might collide with what my app I would then install.</p>  <hr>  <p><em><strong>Final Notes</em></strong></p>  <p>I'm kind of aiming to build some kind of API myself too for future projects to make this way of development standard for my Python scripts that need a GUI. Now that wxPython can more easily embrace the modern browser technologies; there seems to be no limit anymore to building super fast, dynamic and responsive graphical Python apps.</p>"	2013-04-18 20:54:11.287 UTC	16093641	"<p>Why not just stick the data into a SQLite database and then have both Python and Javascript hit that? See also <a href=""https://stackoverflow.com/questions/8811783/convert-json-to-sqlite-in-python-how-to-map-json-keys-to-database-columns-prop"">Convert JSON to SQLite in Python - How to map json keys to database columns properly?</a></p>  <p>Sqlite is included with in all modern versions of Python. You'll have to check out the SQLite website for its limitations</p>"			2013-04-18 21:45:09.923 UTC
16107680	javascript|dictionary	Javascript equivalent of Python's dict.setdefault?	"<p>In Python, for a dictionary <code>d</code>,</p>  <pre><code>d.setdefault('key', value) </code></pre>  <p>sets <code>d['key'] = value</code> if <code>'key'</code> was not in <code>d</code>, and otherwise leaves it as it is.</p>  <p>Is there a clean, idiomatic way to do this on a Javascript object, or does it require an <code>if</code> statement?</p>"	2013-04-19 15:04:09.2 UTC	32957358	"<p>There is nothing built-in, but this function will do it:</p>  <pre><code>function setDefault(obj, prop, deflt) {   return obj.hasOwnProperty(prop) ? obj[prop] : (obj[prop] = deflt); } </code></pre>  <p>If <code>obj</code> will only contain non-falsy values, <code>obj[prop] || (obj[prop] = deflt)</code> is a fine simple alternative (but <code>deflt</code> will override anything falsy). This has the added advantage that <code>deflt</code> will only get evaluated when its value is needed, so it's OK for it to be an expensive expression.</p>"			2015-10-05 20:29:21.827 UTC
16107680	javascript|dictionary	Javascript equivalent of Python's dict.setdefault?	"<p>In Python, for a dictionary <code>d</code>,</p>  <pre><code>d.setdefault('key', value) </code></pre>  <p>sets <code>d['key'] = value</code> if <code>'key'</code> was not in <code>d</code>, and otherwise leaves it as it is.</p>  <p>Is there a clean, idiomatic way to do this on a Javascript object, or does it require an <code>if</code> statement?</p>"	2013-04-19 15:04:09.2 UTC	16107725	"<p>It's basically like using an <code>if</code> statement, but shorter:</p>  <pre><code>d.key || (d.key = value); </code></pre>  <p>Or</p>  <pre><code>d.key = d.key || value; </code></pre>  <p>Update: as @bobtato noted, if the property is already set to the value <code>false</code> it would overwrite it, so a better way would be:</p>  <pre><code>!d.key &amp;&amp; d.key !== false &amp;&amp; (d.key = value); </code></pre>  <p>Or, to do it as he suggested (just the shorthanded version):</p>  <pre><code>'key' in d || (d.key = value);  // including overwriting null values:  ('key' in d &amp;&amp; d.key !== null) || (d.key = value); </code></pre>"			2013-04-19 15:06:40.07 UTC
16107680	javascript|dictionary	Javascript equivalent of Python's dict.setdefault?	"<p>In Python, for a dictionary <code>d</code>,</p>  <pre><code>d.setdefault('key', value) </code></pre>  <p>sets <code>d['key'] = value</code> if <code>'key'</code> was not in <code>d</code>, and otherwise leaves it as it is.</p>  <p>Is there a clean, idiomatic way to do this on a Javascript object, or does it require an <code>if</code> statement?</p>"	2013-04-19 15:04:09.2 UTC	16107876	<pre><code>a={} key='3' value = 2 a[key] = a[key] == undefined ? value : a[key]  ## a = {'3': 2 } </code></pre>			2013-04-19 15:13:34.79 UTC
16107680	javascript|dictionary	Javascript equivalent of Python's dict.setdefault?	"<p>In Python, for a dictionary <code>d</code>,</p>  <pre><code>d.setdefault('key', value) </code></pre>  <p>sets <code>d['key'] = value</code> if <code>'key'</code> was not in <code>d</code>, and otherwise leaves it as it is.</p>  <p>Is there a clean, idiomatic way to do this on a Javascript object, or does it require an <code>if</code> statement?</p>"	2013-04-19 15:04:09.2 UTC	16108755	"<pre><code>if (!('key' in d)) d.key = value; </code></pre>  <p>or</p>  <pre><code>'key' in d || (d.key = value); </code></pre>  <p>(The last one uses <a href=""https://stackoverflow.com/questions/1930499/does-a-javascript-if-statement-with-multiple-conditions-test-all-of-them"">the short-circuit behavior of conditional expressions</a>.)</p>  <hr>  <p>""<code>d.key || (d.key = value)</code>"" suggested in the other answer is buggy: if an element exists but evaluates to <code>false</code> (<a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean#Description"" rel=""noreferrer""><code>false</code>, <code>null</code>, <code>0</code>, <code>-0</code>, <code>""""</code>, <code>undefined</code>, <code>NaN</code></a>), it will be silently overwritten.</p>  <ul> <li><p>While this might be intended, it's most probably not intended for <em>all</em> of the aforementioned cases. So in such a case, check for the values separately:</p>  <pre><code>if (!('key' in d) || d.key === null) d.key = value; </code></pre></li> </ul>"			2013-04-19 15:58:42.89 UTC
16107680	javascript|dictionary	Javascript equivalent of Python's dict.setdefault?	"<p>In Python, for a dictionary <code>d</code>,</p>  <pre><code>d.setdefault('key', value) </code></pre>  <p>sets <code>d['key'] = value</code> if <code>'key'</code> was not in <code>d</code>, and otherwise leaves it as it is.</p>  <p>Is there a clean, idiomatic way to do this on a Javascript object, or does it require an <code>if</code> statement?</p>"	2013-04-19 15:04:09.2 UTC	64608915	<p>Nowadays you can also do <code>d.key ??= value</code></p>			2020-10-30 13:05:39.497 UTC
16107680	javascript|dictionary	Javascript equivalent of Python's dict.setdefault?	"<p>In Python, for a dictionary <code>d</code>,</p>  <pre><code>d.setdefault('key', value) </code></pre>  <p>sets <code>d['key'] = value</code> if <code>'key'</code> was not in <code>d</code>, and otherwise leaves it as it is.</p>  <p>Is there a clean, idiomatic way to do this on a Javascript object, or does it require an <code>if</code> statement?</p>"	2013-04-19 15:04:09.2 UTC	28662547	"<p>It's not recommended and is never a good idea to augment the built-in classes.  Instead, it's better to create your own implementations of built-in classes, a lot like the YUI library does (YArray, etc).  However, I'm going to contradict that, because I often find that implementing useful short cuts like this are a benefit to writing clean maintainable code:</p>  <pre><code>if (undefined === Object.prototype.setdefault) {     Object.prototype.setdefault = function(key, def) {         if (! this.hasOwnProperty(key)) {             this[key] = def;         }         return this[key];     }; } </code></pre>  <p>So let's see it in action...</p>  <pre><code>var a = {};  a.setdefault('mylist', []).push(1); a.setdefault('mylist', []).push(2);  console.log(a.mylist.toString());     1,2 </code></pre>  <p>As has been pointed out, it's never a good idea to employ <code>thing = thing || defaultThing</code> because it only tests non-typed equality of <code>true</code>, or <code>thing == true</code>.  As opposed to typed equality: <code>thing === true</code> or <code>thing !== undefined</code>.  So the only way to properly code <code>setdefault</code> in an inline way would be to use this snippet everywhere:</p>  <pre><code>/* null == thing is equivalent to... */ if (undefined !== thing &amp;&amp; null !== thing) {     thing = defaultThing; } /* ...but it's not explicit and linters don't like it! */ </code></pre>  <p>But as I already said, this just adds bloat to your code and is prone to errors acquired from ""copy-and-paste"" syndrome.</p>"			2015-02-22 19:58:22.36 UTC
16128232	python|django|weather-api	"Weather API, Python or JavaScript"	<p>I am trying to get weather API working. But how can I just get the C° and weather icon; nothing else?</p>	2013-04-21 05:25:24.633 UTC	16136122	"<p>You can use Metwit <a href=""http://metwit.com/developers/"" rel=""nofollow"">weather api</a>.<br> If you can implement them client-side: 200 request/day (ip based throttling) no authentication required. Worldwide coverage, JSON and REST compliant. You can register for extra API calls for free and if you still need it to call them server side the basic plan is pretty cheap.</p>  <p>Here a little example in jQuery: <a href=""http://jsbin.com/isukam/1"" rel=""nofollow"">http://jsbin.com/isukam/1</a> that use our <a href=""http://metwit.com/developers/docs/resources/weather/"" rel=""nofollow"">weather resource</a>.</p>  <p>Full disclosure: I own this sweet piece of API.</p>"			2013-04-21 20:56:26.02 UTC
16128232	python|django|weather-api	"Weather API, Python or JavaScript"	<p>I am trying to get weather API working. But how can I just get the C° and weather icon; nothing else?</p>	2013-04-21 05:25:24.633 UTC	16128314	"<p>Once you have installed <a href=""http://code.google.com/p/python-weather-api/"" rel=""nofollow noreferrer"">pywapi</a> with pip, open a ipython shell and explore what <code>pywapi</code> can do. Here's an example which actually gives you what you want:-</p>  <pre><code>In [1]: import pywapi  In [2]: pywapi. pywapi.GOOGLE_CITIES_URL                   pywapi.YAHOO_WEATHER_URL                   pywapi.get_weather_from_weather_com        pywapi.urlopen pywapi.GOOGLE_COUNTRIES_URL                pywapi.getText                             pywapi.get_weather_from_yahoo              pywapi.wind_beaufort_scale pywapi.NOAA_WEATHER_URL                    pywapi.get_cities_from_google              pywapi.minidom                             pywapi.wind_direction pywapi.URLError                            pywapi.get_countries_from_google           pywapi.quote                               pywapi.xml_get_attrs pywapi.WEATHER_COM_URL                     pywapi.get_everything_from_yahoo           pywapi.re                                  pywapi.xml_get_ns_yahoo_tag pywapi.YAHOO_WEATHER_NS                    pywapi.get_weather_from_noaa               pywapi.sys                                 pywapi.yield_all_country_city_codes_yahoo  In [2]: pywapi.get_weather_from_yahoo? Type:       function String Form:&lt;function get_weather_from_yahoo at 0x10daeb9b0&gt; File:       /Users/calvin/.virtualenvs/myweather/lib/python2.7/site-packages/pywapi.py Definition: pywapi.get_weather_from_yahoo(location_id, units='metric') Docstring: Fetches weather report from Yahoo! Weather  Parameters:   location_id: A five digit US zip code or location ID. To find your location ID,   browse or search for your city from the Yahoo! Weather home page (http://weather.yahoo.com/)   The weather ID is in the URL for the forecast page for that city. You can also get   the location ID by entering your zip code on the home page. For example, if you   search for Los Angeles on the Weather home page, the forecast page for that city   is http://weather.yahoo.com/forecast/USCA0638.html. The location ID is USCA0638.    units: type of units. 'metric' for metric and '' for non-metric   Note that choosing metric units changes all the weather units to metric,   for example, wind speed will be reported as kilometers per hour and   barometric pressure as millibars.  Returns:   weather_data: a dictionary of weather data that exists in XML feed.   See http://developer.yahoo.com/weather/#channel  In [3]: pywapi.get_weather_from_yahoo('USCA0638') Out[3]: {'astronomy': {'sunrise': u'6:16 am', 'sunset': u'7:28 pm'},  'atmosphere': {'humidity': u'67',   'pressure': u'1013.7',   'rising': u'1',   'visibility': u'16.09'},  'condition': {'code': u'33',   'date': u'Sat, 20 Apr 2013 9:46 pm PDT',   'temp': u'18',   'text': u'Fair',   'title': u'Conditions for Los Angeles, CA at 9:46 pm PDT'},  'forecasts': [{'code': u'31',    'date': u'20 Apr 2013',    'day': u'Sat',    'high': u'26',    'low': u'15',    'text': u'Clear'},   {'code': u'32',    'date': u'21 Apr 2013',    'day': u'Sun',    'high': u'26',    'low': u'14',    'text': u'Sunny'},   {'code': u'34',    'date': u'22 Apr 2013',    'day': u'Mon',    'high': u'22',    'low': u'13',    'text': u'Mostly Sunny'},   {'code': u'30',    'date': u'23 Apr 2013',    'day': u'Tue',    'high': u'21',    'low': u'14',    'text': u'Partly Cloudy'},   {'code': u'30',    'date': u'24 Apr 2013',    'day': u'Wed',    'high': u'19',    'low': u'13',    'text': u'Partly Cloudy'}],  'geo': {'lat': u'34.05', 'long': u'-118.23'},  'html_description': u'\n[![][5]][5]&lt;br /&gt;\n&lt;b&gt;Current Conditions:&lt;/b&gt;&lt;br /&gt;\nFair, 18 C&lt;BR /&gt;\n&lt;BR /&gt;&lt;b&gt;Forecast:&lt;/b&gt;&lt;BR /&gt;\nSat - Clear. High: 26 Low: 15&lt;br /&gt;\nSun - Sunny. High: 26 Low: 14&lt;br /&gt;\nMon - Mostly Sunny. High: 22 Low: 13&lt;br /&gt;\nTue - Partly Cloudy. High: 21 Low: 14&lt;br /&gt;\nWed - Partly Cloudy. High: 19 Low: 13&lt;br /&gt;\n&lt;br /&gt;\n&lt;a href=""http://us.rd.yahoo.com/dailynews/rss/weather/Los_Angeles__CA/*http://weather.yahoo.com/forecast/USCA0638_c.html""&gt;Full Forecast at Yahoo! Weather&lt;/a&gt;&lt;BR/&gt;&lt;BR/&gt;\n(provided by &lt;a href=""http://www.weather.com"" &gt;The Weather Channel&lt;/a&gt;)&lt;br/&gt;\n',  'link': u'http://us.rd.yahoo.com/dailynews/rss/weather/Los_Angeles__CA/*http://weather.yahoo.com/forecast/USCA0638_c.html',  'location': {'city': u'Los Angeles', 'country': u'US', 'region': u'CA'},  'title': u'Yahoo! Weather - Los Angeles, CA',  'units': {'distance': u'km',   'pressure': u'mb',   'speed': u'km/h',   'temperature': u'C'},  'wind': {'chill': u'18', 'direction': u'0', 'speed': u'0'}} </code></pre>  <p>As you can see in the results, you can get the weather icon in <code>html_description</code> (<a href=""http://l.yimg.com/a/i/us/we/52/33.gif"" rel=""nofollow noreferrer"">http://l.yimg.com/a/i/us/we/52/33.gif</a>) and the <code>temp</code>.  Since the results returned to you is everything, you will need to extract/access it like you would do with a python dictionary.</p>  <p><strong>UPDATE</strong></p>  <ol> <li>Go to <a href=""http://weather.yahoo.com/"" rel=""nofollow noreferrer"">http://weather.yahoo.com/</a> and type in your zip code (or your city).</li> <li>If there is more than one choice, pick the one you want.</li> <li>Locate the link ""extended forecast"" under ""6-10 day"" column. Click it.</li> <li>Look at the URL address bar and the numbers there is your city's zip code.</li> </ol>  <p><strong>ALL CITY CODE</strong></p>  <p>Here's the function that helps you get all country, city codes</p>  <pre><code>In [4]: pywapi.yield_all_country_city_codes_yahoo? Type:       function String Form:&lt;function yield_all_country_city_codes_yahoo at 0x10daebaa0&gt; File:       /Users/calvin/.virtualenvs/myweather/lib/python2.7/site-packages/pywapi.py Definition: pywapi.yield_all_country_city_codes_yahoo(country_code, cities) Docstring: Yield all cities codes for a specific country.  Parameters:   country_code: A four letter code of the necessary country. For example 'GMXX' or 'FRXX'.   cities: The number of cities to yield  Returns:   country_city_codes: A generator containing the city codes </code></pre>"			2013-04-21 05:42:09.493 UTC
16128552	webforms|python-3.3	fill out a webform that uses javascript with python	"<p>i am trying to fill out a webform using a python program by submitting specific values. the problem is it uses javascript. i will post an example of the value i want to fill. </p>  <pre><code>fo.addVariable(""email"",""email@yahoo.com"") fo.addVariable(""age"",""19"") fo.addVariable(""gender"",""M"") fo.addVariable(""line"",""hello"") </code></pre>  <p>that is an example of the value on the page. what i want to do is submit a value to that and change it. what i am currently attempting is this:</p>  <pre><code>data = urllib.parse.urlencode({""line"": ""hello"", ""age"": ""50"", ""email"":  ""email@yahoo.com"", ""gender"": ""M""}).encode() resp = urlreq.urlopen(""http://url.com/update"", data)  </code></pre>  <p>this usually works for most webforms. but for this one it will not.</p>"	2013-04-21 06:23:45.653 UTC	16129271	"<p>In python 2.7, urllib has no attribute urllib.parse and a .encode() function  at the end is unnecessary.</p>  <p>I think what you should be writing is </p>  <pre><code>data = urllib.urlencode({""line"": ""hello"", ""age"": ""50"", ""email"":  ""email@yahoo.com"", ""gender"": ""M""}) </code></pre>"			2013-04-21 08:23:10.79 UTC
16136988	python|selenium|scrapy	Using Selenium Python bindings for javascript link	"<p>I'm trying to use Scrapy to parse a relatively simple set of webpages. The main page has a bunch of links that look like:</p>  <pre><code>&lt;a name='LINK1$17' id='LINK1$17' tabindex='145' href=""javascript:hAction_win0(document.win0,'LINK1$17', 0, 0, 'International Relations', false, true);""  class='SSSAZLINK'&gt;International Relations&lt;/a&gt; </code></pre>  <p>Clicking that link loads up the second page on which some of the details I'm scraping appear. I do need to start on that first page because it serves as an index of all these things I'm scraping. How do I use selenium to run that javascript action? I've tried:</p>  <pre><code>import webdriver driver = webdriver.Firefox() driver.execute_script(""javascript:hAction_win0(document.win0,'LINK1$17', 0, 0, 'International Relations', false, true);"") </code></pre>  <p>That did not work. Is there an easy way to ""click"" the link and get what appears?</p>"	2013-04-21 22:42:43.903 UTC	16500943	"<p>Turns out I was using the right function. The following call works:</p>  <pre><code>driver.execute_script(""hAction_win0(document.win0,'LINK1$17', 0, 0, 'International Relations', false, true);"") </code></pre>  <p>I just had to remove the ""javascript:"" at the beginning.</p>"			2013-05-11 19:29:58.503 UTC
16145567	javascript|python|string-formatting	Alternative string formatter in Python for Javascript	"<p>In Python there is a string fromatter like;</p>  <pre><code>&gt;&gt;&gt; print 'Name :%s Surname :%s'%('Ahmet','DAL') Name :Ahmet Surname :DAL </code></pre>  <p>Are there any <strong>native</strong> string formating method in Javascript, which has simple usage as Python has?</p>  <p><strong>Edited:</strong> There are methods which is using external library like ""sprintf"", etc. But I'm just curious, Is there a <strong>native</strong> method in Javascript?</p>  <p>Thank You!</p>"	2013-04-22 11:02:50.413 UTC	16146007	"<p>No, there is no a native string formatting method in Javascript like <code>str.format</code> in Python.</p>"			2013-04-22 11:24:50.393 UTC
16145567	javascript|python|string-formatting	Alternative string formatter in Python for Javascript	"<p>In Python there is a string fromatter like;</p>  <pre><code>&gt;&gt;&gt; print 'Name :%s Surname :%s'%('Ahmet','DAL') Name :Ahmet Surname :DAL </code></pre>  <p>Are there any <strong>native</strong> string formating method in Javascript, which has simple usage as Python has?</p>  <p><strong>Edited:</strong> There are methods which is using external library like ""sprintf"", etc. But I'm just curious, Is there a <strong>native</strong> method in Javascript?</p>  <p>Thank You!</p>"	2013-04-22 11:02:50.413 UTC	16145622	"<p>You can use Javascript's <a href=""http://www.diveintojavascript.com/projects/javascript-sprintf"" rel=""nofollow"">sprintf</a>.</p>  <p>The <code>sprintf</code> equivalent example you provided will be:</p>  <pre><code>sprintf('Name: %1$s Surname :%2$s', 'Ahmet','DAL'); </code></pre>  <p>You can also change the arguments' order:</p>  <pre><code>sprintf('Name: %2$s Surname :%1$s', 'DAL', 'Ahmet'); </code></pre>  <p>It is open source and you can download it <a href=""https://github.com/alexei/sprintf.js"" rel=""nofollow"">here</a>.</p>"			2013-04-22 11:06:06.657 UTC
16154847	javascript|python|functional-programming|reshape|fold	Correct use of a fold or reduce function to long-to-wide data in python or javascript?	"<p>Trying to learn to think like a functional programmer a little more---I'd like to transform a data set with what I think is either a fold or a reduce operation.  In R, I would think of this as a reshape operation, but I'm not sure how to translate that thinking.</p> <p>My data is a json string that looks like this:</p> <pre><code>s =  '[ {&quot;query&quot;:&quot;Q1&quot;, &quot;detail&quot; : &quot;cool&quot;, &quot;rank&quot;:1,&quot;url&quot;:&quot;awesome1&quot;}, {&quot;query&quot;:&quot;Q1&quot;, &quot;detail&quot; : &quot;cool&quot;, &quot;rank&quot;:2,&quot;url&quot;:&quot;awesome2&quot;}, {&quot;query&quot;:&quot;Q1&quot;, &quot;detail&quot; : &quot;cool&quot;, &quot;rank&quot;:3,&quot;url&quot;:&quot;awesome3&quot;}, {&quot;query&quot;:&quot;Q#2&quot;, &quot;detail&quot; : &quot;same&quot;, &quot;rank&quot;:1,&quot;url&quot;:&quot;newurl1&quot;}, {&quot;query&quot;:&quot;Q#2&quot;, &quot;detail&quot; : &quot;same&quot;, &quot;rank&quot;:2,&quot;url&quot;:&quot;newurl2&quot;}, {&quot;query&quot;:&quot;Q#2&quot;, &quot;detail&quot; : &quot;same&quot;, &quot;rank&quot;:3,&quot;url&quot;:&quot;newurl3&quot;} ]' </code></pre> <p>I'd like to turn it into something like this, where query is the master key defining the 'row', nesting the unique &quot;rows&quot; corresponding to the &quot;rank&quot; values and &quot;url&quot; fields:</p> <pre><code>'[ { &quot;query&quot; : &quot;Q1&quot;,     &quot;results&quot; : [         {&quot;rank&quot; : 1, &quot;url&quot;: &quot;awesome1&quot;},         {&quot;rank&quot; : 2, &quot;url&quot;: &quot;awesome2&quot;},         {&quot;rank&quot; : 3, &quot;url&quot;: &quot;awesome3&quot;}             ]}, { &quot;query&quot; : &quot;Q#2&quot;,     &quot;results&quot; : [         {&quot;rank&quot; : 1, &quot;url&quot;: &quot;newurl1&quot;},         {&quot;rank&quot; : 2, &quot;url&quot;: &quot;newurl2&quot;},         {&quot;rank&quot; : 3, &quot;url&quot;: &quot;newurl3&quot;},             ]} ]' </code></pre> <p>I know I can iterate through, but I suspect there is a functional operation that does this transformation, right?</p> <p>Would also be curious to know how to get to something more like this, Version2:</p> <pre><code>'[ { &quot;query&quot; : &quot;Q1&quot;,     &quot;Common to all results&quot; : [         {&quot;detail&quot; : &quot;cool&quot;}     ],     &quot;results&quot; : [         {&quot;rank&quot; : 1, &quot;url&quot;: &quot;awesome1&quot;},         {&quot;rank&quot; : 2, &quot;url&quot;: &quot;awesome2&quot;},         {&quot;rank&quot; : 3, &quot;url&quot;: &quot;awesome3&quot;}             ]}, { &quot;query&quot; : &quot;Q#2&quot;,     &quot;Common to all results&quot; : [         {&quot;detail&quot; : &quot;same&quot;}     ],     &quot;results&quot; : [         {&quot;rank&quot; : 1, &quot;url&quot;: &quot;newurl1&quot;},         {&quot;rank&quot; : 2, &quot;url&quot;: &quot;newurl2&quot;},         {&quot;rank&quot; : 3, &quot;url&quot;: &quot;newurl3&quot;}             ]} ]' </code></pre> <p>In this second version, I'd like to take all data repeating under the same query, and shove it into an &quot;other stuff&quot; container, where all the items unique under &quot;rank&quot; would be in the &quot;results&quot; container.</p> <p>I'm working on json objects in mongodb, and can use either python or javascript to try out this transform.</p> <p>Any advice, such as the proper name for this transformation, what might be the fastest way to do this on a large data set, is appreciated!</p> <h1>EDIT</h1> <p>Incorporating @abarnert's excellent solution below, trying to get my Version2 above for anyone else working on the same kind of problem, requiring bifurcating some keys under one level, other keys under another...</p> <p>Here's what I tried:</p> <pre><code>from functools import partial groups = itertools.groupby(initial, operator.itemgetter('query')) def filterkeys(d,mylist):     return {k: v for k, v in d.items() if k in mylist}  results = ((key, map(partial(filterkeys, mylist=['rank','url']),group)) for key, group in groups) other_stuff = ((key, map(partial(filterkeys, mylist=['detail']),group)) for key, group in groups)  ??? </code></pre> <p>Oh no!</p>"	2013-04-22 19:10:54.4 UTC	16155213	"<p>I know this isn't the fold-style solution you were asking for, but I would do this with <code>itertools</code>, which is just as functional (unless you think Haskell is less functional than Lisp…), and also probably the most pythonic way to solve this.</p>  <p>The idea is to think of your sequence as a lazy list, and apply a chain of lazy transformations to it until you get the list you want.</p>  <p>The key step here is <a href=""http://docs.python.org/2/library/itertools.html#itertools.groupby"" rel=""nofollow""><code>groupby</code></a>:</p>  <pre><code>&gt;&gt;&gt; initial = json.loads(s) &gt;&gt;&gt; groups = itertools.groupby(initial, operator.itemgetter('query')) &gt;&gt;&gt; print([key, list(group) for key, group in groups]) [('Q1',   [{'detail': 'cool', 'query': 'Q1', 'rank': 1, 'url': 'awesome1'},    {'detail': 'cool', 'query': 'Q1', 'rank': 2, 'url': 'awesome2'},    {'detail': 'cool', 'query': 'Q1', 'rank': 3, 'url': 'awesome3'}]),  ('Q#2',   [{'detail': 'same', 'query': 'Q#2', 'rank': 1, 'url': 'newurl1'},    {'detail': 'same', 'query': 'Q#2', 'rank': 2, 'url': 'newurl2'},    {'detail': 'same', 'query': 'Q#2', 'rank': 3, 'url': 'newurl3'}])] </code></pre>  <p>You can see how close we are already, in just one step. </p>  <p>To restructure each key, group pair into the dict format you want:</p>  <pre><code>&gt;&gt;&gt; groups = itertools.groupby(initial, operator.itemgetter('query')) &gt;&gt;&gt; print([{""query"": key, ""results"": list(group)} for key, group in groups]) [{'query': 'Q1',   'results': [{'detail': 'cool',                'query': 'Q1',                'rank': 1,                'url': 'awesome1'},               {'detail': 'cool',                'query': 'Q1',                'rank': 2,                'url': 'awesome2'},               {'detail': 'cool',                'query': 'Q1',                'rank': 3,                'url': 'awesome3'}]},  {'query': 'Q#2',   'results': [{'detail': 'same',                'query': 'Q#2',                'rank': 1,                'url': 'newurl1'},               {'detail': 'same',                'query': 'Q#2',                'rank': 2,                'url': 'newurl2'},               {'detail': 'same',                'query': 'Q#2',                'rank': 3,                'url': 'newurl3'}]}] </code></pre>  <p>But wait, there's still those extra fields you want to get rid of. Easy:</p>  <pre><code>&gt;&gt;&gt; groups = itertools.groupby(initial, operator.itemgetter('query')) &gt;&gt;&gt; def filterkeys(d): ...     return {k: v for k, v in d.items() if k in ('rank', 'url')} &gt;&gt;&gt; filtered = ((key, map(filterkeys, group)) for key, group in groups) &gt;&gt;&gt; print([{""query"": key, ""results"": list(group)} for key, group in filtered]) [{'query': 'Q1',   'results': [{'rank': 1, 'url': 'awesome1'},               {'rank': 2, 'url': 'awesome2'},               {'rank': 3, 'url': 'awesome3'}]},  {'query': 'Q#2',   'results': [{'rank': 1, 'url': 'newurl1'},               {'rank': 2, 'url': 'newurl2'},               {'rank': 3, 'url': 'newurl3'}]}] </code></pre>  <p>The only thing left to do is to call <code>json.dumps</code> instead of <code>print</code>.</p>  <hr>  <p>For your followup, you want to take all values that are identical across every row with the same <code>query</code> and group them into <code>otherstuff</code>, and then list whatever remains in the <code>results</code>.</p>  <p>So, for each group, first we want to get the common keys. We can do this by iterating the keys of any member of the group (anything that's not in the first member can't be in all members), so:</p>  <pre><code>def common_fields(group):     def in_all_members(key, value):         return all(member[key] == value for member in group[1:])     return {key: value for key, value in group[0].items() if in_all_members(key, value)} </code></pre>  <p>Or, alternatively… if we turn each member into a <code>set</code> of key-value pairs, instead of a dict, we can then just <code>intersect</code> them all. And this means we finally get to use <code>reduce</code>, so let's try that:</p>  <pre><code>def common_fields(group):     return dict(functools.reduce(set.intersection, (set(d.items()) for d in group))) </code></pre>  <p>I think the conversion back and forth between <code>dict</code> and <code>set</code> may make this less readable, and it also means that your values have to be hashable (not a problem for you sample data, since the values are all strings)… but it's certainly more concise.</p>  <p>This will, of course, always include <code>query</code> as a common field, but we'll deal with that later. (Also, you wanted <code>otherstuff</code> to be a <code>list</code> with one <code>dict</code>, so we'll throw an extra pair of brackets around it).</p>  <p>Meanwhile, <code>results</code> is the same as above, except that <code>filterkeys</code> filters out all of the common fields, instead of filtering out everything but <code>rank</code> and <code>url</code>. Putting it together:</p>  <pre><code>def process_group(group):     group = list(group)     common = dict(functools.reduce(set.intersection, (set(d.items()) for d in group)))     def filterkeys(member):         return {k: v for k, v in member.items() if k not in common}     results = list(map(filterkeys, group))     query = common.pop('query')     return {'query': query,             'otherstuff': [common],             'results': list(results)} </code></pre>  <p>So, now we just use that function:</p>  <pre><code>&gt;&gt;&gt; groups = itertools.groupby(initial, operator.itemgetter('query')) &gt;&gt;&gt; print([process_group(group) for key, group in groups]) [{'otherstuff': [{'detail': 'cool'}],   'query': 'Q1',   'results': [{'rank': 1, 'url': 'awesome1'},               {'rank': 2, 'url': 'awesome2'},               {'rank': 3, 'url': 'awesome3'}]},  {'otherstuff': [{'detail': 'same'}],   'query': 'Q#2',   'results': [{'rank': 1, 'url': 'newurl1'},               {'rank': 2, 'url': 'newurl2'},               {'rank': 3, 'url': 'newurl3'}]}] </code></pre>  <p>This obviously isn't as trivial as the original version, but hopefully it all still makes sense. There are only two new tricks. First, we have to iterate over <code>groups</code> multiple times (once to find the common keys, and then again to extract the remaining keys)</p>"			2013-04-22 19:30:59.497 UTC
16189295	python|selenium-webdriver	Call a Javascript function in Python - Selenium	"<p>I have this HTML code I'm proccesing/scrapping with a python script:</p>  <pre><code>&lt;a href=""javascript:VerMapa('AVDA. DE AMERICA, 2  -33880 POLA DE ALLANDE','RODRIGUEZ-PELAEZ PEÑA, ANA MARIA','AVDA. DE AMERICA, 2  -33880','33880','ALLANDE','183','178')""&gt;&lt;img src=""../../Fijos/Img/VerMapa.jpg"" alt="""" width=""25"" height=""24"" border=""0""&gt;&amp;nbsp;&lt;br&gt;Ver Mapa&lt;/a&gt; </code></pre>  <p>This is the definition of the function:</p>  <pre><code>function VerMapa(direccion,farmacia,domicilio,CP,municipio, numeroOficina,identidad) {     window.open(""googleMaps.aspDir=""+direccion+""&amp;Far=""+farmacia+""&amp;Dom=""+domicilio+""&amp;CP=""+CP+""&amp;Mun=""+municipio+""&amp;NO=""+numeroOficina+""&amp;Id=""+identidad+""&amp;"",'Lista','toolbar=no, menubar=no, scrollbars=yes,resizable=yes,status=yes,screenX=50,top=50,width=740,height=530'); } </code></pre>  <p>I need to make a call to <code>VerMapa('AVDA. DE AMERICA, 2  -33880 POLA DE ALLANDE','RODRIGUEZ-PELAEZ PEÑA, ANA MARIA','AVDA. DE AMERICA, 2  -33880','33880','ALLANDE','183','178')</code> javascript function in the href attribute and get the HTML code returned.</p>  <p>I have checked spider-monkey and PyV8 but I think they can't help me here. spider-monkey is clear  telling you can´t call a javascript defined function.</p>  <p>I'm now trying with Selenium, but I don't know how I can get the source code back to python.</p>  <p>By know I just have implemented a test script and managed to load the requested page in a browser window.</p>  <pre><code>from selenium import webdriver browser = webdriver.Firefox() browser.get(""http://www.farmasturias.org/GESCOF/cms/Guardias/FarmaciaBuscar.asp?IdMenu=111"") htmlCode = browser.execute_script(""return VerMapa('AVDA. DE AMERICA, 2  -33880 POLA DE ALLANDE','RODRIGUEZ-PELAEZ PEÑA, ANA MARIA','AVDA. DE AMERICA, 2  -33880','33880','ALLANDE','183','178')"") print htmlCode; </code></pre>  <p>1.- I am not getting anything in htmlCode var. ¿How can I get back the source code  generated by the javascript function? I have taken the syntax from this post <a href=""https://stackoverflow.com/questions/5585343/getting-the-return-value-of-javascript-code-in-selenium/5585345#5585345"">Getting the return value of Javascript code in Selenium</a></p>  <p>2.- Is there any way to use Selenium without opening any browser window?</p>"	2013-04-24 10:12:39.417 UTC	16866678	"<p>The <code>VerMapa</code> function doesn't have a return. That's why your <code>htmlCode</code> variable doesn't show anything.</p>  <p>To get the source of the new window, first call <code>VerMapa</code>, then switch to the new window, then get the source.</p>  <pre><code># get all open windows handles = set(broswer.window_handles)  # remove the current window from the set handles.remove(browser.current_window_handle)  # switch to the other window browser.switch_to_window(handles.pop())  # get the source of that window htmlCode = browser.page_source </code></pre>"			2013-05-31 22:01:47.7 UTC
16218123	javascript|python|nltk	"Javascript+Python: sending array to Python script, returning result to Javascript"	"<p>I would like to set up a webpage that takes a number of Facebook status updates via the Javascript API and sorts them into an array. Then I'd like to send this array to a Python script, which can specifically do language analysis with <a href=""http://nltk.org/"" rel=""nofollow"">NLTK.</a> After I get a suitable result in Python, I'd like to return the result from that script to Javascript for displaying to the user, etc. Does this sound possible? </p>"	2013-04-25 14:54:55.223 UTC	16219557	"<p>Calling a service from Javascript is a very common problem. One way of solving it is to write a specific type of website known as a Webservice which would make the process flow something like...</p>  <ul> <li>Javascript uses Ajax (Asynchronous Javascript and XML) to send an HTTP Request to your Webservice containing the information you want to process.</li> <li>The Webservice receives the request and performs the requested processing (eg by invoking the NLTK)</li> <li>The resulting data is sent back over the same Http connection</li> <li>A javascript function is called and passed the results of the data</li> </ul>  <p>The easiest way to send a request is using <a href=""http://jquery.com/"" rel=""nofollow"">jQuery</a>. The easiest way to format the data to be passed back and forth is JSON (JavaScript Object Notation).</p>  <p>An example call would look something like this...</p>  <pre><code>$.json({   url: ""/url/of/Webservice"",   data: {          ""SomeKey"": ""SomeValue"",          ""SomeList"": [""Item1"", ""Item2"", ""Item3""]          /*... etc */         } }).done(function(response) {   //Assuming a response that looks like this: {""Result"": ""Some Result""}   alert(""The Webservice said: "" + response.Result); }); </code></pre>  <p>It's up to you how you'd implement the Webservice. If you want to use Python, <a href=""https://www.djangoproject.com/"" rel=""nofollow"">Django</a> is one of many good frameworks to get you started</p>"			2013-04-25 16:01:48.603 UTC
16218123	javascript|python|nltk	"Javascript+Python: sending array to Python script, returning result to Javascript"	"<p>I would like to set up a webpage that takes a number of Facebook status updates via the Javascript API and sorts them into an array. Then I'd like to send this array to a Python script, which can specifically do language analysis with <a href=""http://nltk.org/"" rel=""nofollow"">NLTK.</a> After I get a suitable result in Python, I'd like to return the result from that script to Javascript for displaying to the user, etc. Does this sound possible? </p>"	2013-04-25 14:54:55.223 UTC	16218152	"<p>Yes, totally. Check out Google App Engine to build this sort of functionality. In particular check out these links:</p>  <p>NLTK on App Engine: <a href=""https://stackoverflow.com/questions/1286301/using-the-python-nltk-2-0b5-on-the-google-app-engine"">Using the Python NLTK (2.0b5) on the Google App Engine</a> and <a href=""http://code.google.com/p/nltk-gae/"" rel=""nofollow noreferrer"">http://code.google.com/p/nltk-gae/</a></p>  <p>Facebook API on App Engine: <a href=""https://developers.google.com/appengine/articles/shelftalkers"" rel=""nofollow noreferrer"">https://developers.google.com/appengine/articles/shelftalkers</a></p>  <p>I assume that you want to make it interactive because you mentioned the word ""user"".</p>"			2013-04-25 14:56:39.64 UTC
16247157	javascript|python|google-app-engine	passing javascript to python in GAE	<p>I am planning to run an app in GAE that initializes the Facebook login sequence in Javascript and passes the access token to a Python script to do server-side work. The javascript looks something like this</p>  <pre><code>// Additional init code here          FB.login(         function(response) {             if (response.authResponse) {                 var access_token =   FB.getAuthResponse()['accessToken'];                 console.log('Access Token = '+ access_token); </code></pre>  <p>What would be the easiest way to pass access_token to a Python class (say named fbProcessor) that is imported in main.py? </p>	2013-04-27 00:46:10.287 UTC	16247214	"<p>Since the javascript is executed on the front end (client's browser) you can't really ""pass"" the access_token to python.  You COULD make a http (AJAX) request from javascript to your python app with the access_token.</p>  <p>I think that if you are making a request to python you could just use facebook's <a href=""https://github.com/pythonforfacebook/facebook-sdk"" rel=""nofollow"">python SDK</a> to retrieve the information (including access token) for the current FB authenticated user... IDK the benefits of either way</p>  <p>the python facebook SDK has google app engine example's</p>  <blockquote>   <p>If you are using the module within a web application with the   JavaScript SDK, you can also use the module to use Facebook for login,   parsing the cookie set by the JavaScript SDK for logged in users. For   example, in Google AppEngine, you could get the profile of the logged   in user with:</p> </blockquote>  <pre><code>user = facebook.get_user_from_cookie(self.request.cookies, key, secret) if user:     graph = facebook.GraphAPI(user[""access_token""])     profile = graph.get_object(""me"")     friends = graph.get_connections(""me"", ""friends"") </code></pre>  <blockquote>   <p>You can see a full AppEngine example application in   examples/appengine.</p> </blockquote>"			2013-04-27 00:54:58.077 UTC
16280011	google-app-engine|google-maps-api-3|google-maps-markers|jinja2	Passing Googlemap API V. 3 Markers from Python to Javascript via Jinja2	"<p>I have a list in a GSQL database of markers that I wish to send to javascript so that they can be displayed on a google map.  In effect, I pass a python list, which looks something like:</p>  <pre><code>[[50.1142, .12231, ""MarkerName""], [49.131, -.12232, ""MarkerName2""], [48.131, -.12232, ""MarkerName3""]] </code></pre>  <p>Via a jinja2 template, as the variable 'maplist.'  </p>  <p>My javascript looks like this on the template:</p>  <pre><code>&lt;script type=""text/javascript""&gt;         $(document).ready(function () {                           var latitude = parseFloat(""51.515252"");                           var longitude = parseFloat(""-0.189852"");                           var latlngPos = new google.maps.LatLng(latitude, longitude);                           // Set up options for the Google map                           var myOptions = {                           zoom: 10,                           center: latlngPos,                           mapTypeId: google.maps.MapTypeId.ROADMAP                           };                           // Define the map                           map = new google.maps.Map(document.getElementById(""map""), myOptions);                            });      function addMarker(lat, lng, name){             var point = new google.maps.LatLng(lat, lng);             var marker = new google.maps.Marker({position: point,                                                 map: map,                                                 title: name                                                 });                              };          &lt;/script&gt; </code></pre>  <p>I loop through the list like so:</p>  <pre><code>    {% for marker in maplist %}     &lt;script type=""text/javascript""&gt;     addMarker(parseFloat('{{marker.1}}'),parseFloat('{{marker.2}}'),'{{marker.0}}');     &lt;/script&gt;     {% endfor %} </code></pre>  <p>However, none of the markers show up on the map.  I am not at all confident that my approach is the best, but I had seen it done here: <a href=""https://stackoverflow.com/questions/13042679/parsing-dictionary-from-gae-python-to-create-marker-objects-in-javascript-gmap"">Parsing dictionary from GAE python to create marker objects in javascript / GMaps api</a>, and it made sense to me.  Perhaps JSON is a better approach, in which case I would very much appreciate any salient examples (am basically a total Javscript-neophyte)  </p>"	2013-04-29 13:34:26.237 UTC	16282903	"<p>You're trying to access list indices using object notation. Better to create an array of JSON objects:</p>  <pre><code>[{'lat': 123.3, 'lng': 234.5, 'name': ""Foo""}] </code></pre>  <p>And then in your template: </p>  <pre><code>{{marker.lat}} {{marker.lng}} </code></pre>  <p>Additionally, it seems overly complex to create a new script tag for each data point. Why not just create some variable in the main script tag from which to access all the data. Like this:</p>  <pre><code>&lt;script type=""text/javascript""&gt;     var data = {{data}}     $(document).ready(function () {                       var latitude = parseFloat(""51.515252"");                       var longitude = parseFloat(""-0.189852"");                       var latlngPos = new google.maps.LatLng(latitude, longitude);                       // Set up options for the Google map                       var myOptions = {                       zoom: 10,                       center: latlngPos,                       mapTypeId: google.maps.MapTypeId.ROADMAP                       };                       // Define the map                       map = new google.maps.Map(document.getElementById(""map""), myOptions);                       data.forEach(function(p) {                           var point = new google.maps.LatLng(p.lat, p.lng);                           var marker = new google.maps.Marker({position: point,                                             map: map,                                             title: p.name                                             });                               })                       });       &lt;/script&gt; </code></pre>"			2013-04-29 15:50:22.807 UTC
16286512	javascript|python|html|cocos2d-iphone|cross-platform	Easiest way to wrap a canvas tag + javascript in a Python program?	"<p>I'm creating a cross-platform game using cocos2d-javascript and would like to create a PC version that looks native. I understand that with little modification, I can have my cocos2d-javascript program run in a browser, but I'd like to have the program run in its own (non-browser) window, be able to create multiple windows, have native access to the filesystem without going through browser security controls, etc. Essentially, I'd like to have my Python program provide a javascript engine along with a canvas tag that cocos2d-html5 could run on. A very stripped down browser, if you will. </p>  <p>My question is, what's the simplest way to accomplish this, in a cross-platform (i.e. PC, Mac, and Linux) manner? I can use python-spidermonkey or python-v8 for the javascript engine, but I'm unsure how best to provide a canvas tag that can be drawn on. </p>"	2013-04-29 19:18:59.007 UTC	16286888	"<p>If you're looking for the simplest in terms of ""least code for me to write"", it's actually easier to embed a full browser, than to write a stripped-down browser from scratch.</p>  <p>So, the simplest solution is probably to use a <a href=""http://qt-project.org/doc/qt-4.8/qwebview.html"" rel=""nofollow""><code>QWebView</code></a>.</p>  <p>Under the covers, this is about as far from simple (or ""stripped-down"") as you can get: you're using a powerful, complicated cross-platform GUI library that has a deeply-integrated WebKit wrapper that exposes custom objects for things like URLs and even web pages all the way up to the object model.</p>  <p>But from your code, it's just a matter of sticking a web view into a window, creating an HTML page with a <code>canvas</code> tag and your JS app, and hooking everything up.</p>  <p>One downside is the learning curve. Qt is big, and you're going to have to learn at least the basic concepts before you can do anything useful. Fortunately, if you've done ObjC programming, signals-and-slots, the QObject model, etc. should all feel pretty familiar… but not exactly the same.</p>  <p>The other downside is distribution. You either need to require Qt and PySide (or PyQt) along with Python (which is a heavy requirement, unless you only care about linux users), or learn the ins and outs of packaging <code>PySide</code> up with <code>cx_freeze</code>/<code>py2exe</code>/<code>py2app</code>/etc.</p>  <hr>  <p>Talking to the canvas or the JS code from outside is ridiculously easy. The <code>QWebView</code> contains a <code>QWebPage</code>, which contains a <code>QWebFrame</code>, which is a complete DOM made up of <code>QWebElement</code> wrappers:</p>  <pre><code>frame = view.page().mainFrame() canvas = frame.findFirstElement(""#cocos-canvas') </code></pre>  <p>You can then call <code>evaluateJavaScript</code> on the DOM itself or on any of the elements, in the same way you find familiar from ObjC's WebKit wrapper.</p>  <p>For going the other way, while you <em>can</em> do the same tricks of injecting JS or evaluating function definitions that call back to your code, you can also just attach <code>QAction</code>s to a web page, which you can then hook up the same way you do with normal actions (menu items, button clicks, etc.). And of course JS can trigger them just as easily as a user can.</p>  <p>Or you can expose any <code>QObject</code> subclass directly to JS by calling <a href=""http://qt-project.org/doc/qt-4.8/qwebframe.html#addToJavaScriptWindowObject"" rel=""nofollow""><code>addToJavaScriptWindow</code></a>, which allows your JS code to call methods on the object, including methods that attach callbacks. See <a href=""http://qt-project.org/doc/qt-4.8/qtwebkit-bridge.html"" rel=""nofollow"">The QtWebKit Bridge</a> for details.</p>"			2013-04-29 19:41:25.233 UTC
16338582	javascript|jquery|python|ajax	python code from javascript using ajax	"<p>I have seen this topic: <a href=""https://stackoverflow.com/questions/11703660/ajax-request-to-python-script"">ajax request to python script</a> where they were trying to do exactly what I need but there is one information missing.</p>  <p><code>$.post('myPythonFile.py',{data},                       function(result){                           //TODO                       }             ); </code> </p>  <p>Now my problem is: how do I call a certain function which is inside myPythonFile.py? Is there a way to specify the name of the function and to give it my input data? Thank you very much for your time.</p>"	2013-05-02 12:54:05.143 UTC	16338729	"<p><code>Ajax</code> calls making <code>HTTP</code> requests,so you need to have a <code>HTTP server</code> which handles your requests  as it is seen in the other question. (There is CGI which provide HTTP request handling). In Python you can use DJango, Bottle, CGI etc to have HTTP request handling. to call python function from javascript.</p> <h1>Edited :</h1> <p>in your <code>url.py</code> you should define your api url;</p> <pre><code>(r'^myAPI', 'myAPI'), </code></pre> <p>and on this url you should have a web API in <code>views.py</code>. It can be like ;</p> <pre><code>def myAPI(request):     callYourFunction(); </code></pre> <p>and you can call it from Javascript now. You can use JQuery for AJAX request;</p> <pre><code> $.ajax({             type:&quot;GET&quot;,             url:&quot;/myAPI&quot;,             contentType:&quot;application/json; charset=utf-8&quot;,             success:function (data) {                  },             failure:function (errMsg) {             }         }); </code></pre> <p>The <code>HTTP</code> method type does not matter, if you only wanna run a <code>Python</code> script. If you wanna send data from <code>javascript</code> to <code>Python</code> you can send the data as <code>JSON</code> to Python as <code>POST</code> method.</p>"			2013-05-02 13:02:26.603 UTC
16451849	python|django|json|simplejson|dajax	Serialization of python (django) data to javascript	"<p>I'm trying to return data to javascript using json.dumps in order to show data to the user.</p>  <p>Dajax call when button is pressed: <code>Dajaxice.chamber.ATableUpdate(TableUpdate);</code></p>  <p>My ajax function:</p>  <pre><code>@dajaxice_register def ATableUpdate(request):     mean = [[900, 2.1],[1000, -20.4],[1100, -15.4],[1200, -30.5]]     numpy.savetxt(""table_mean.txt"", mean)     mean2 = numpy.loadtxt(""table_mean.txt"")     return json.dumps({""mean"": mean}) </code></pre>  <p>If I return the value mean as shown, it all works, but if instead I return mean2 (the same values read from a file with numpy) it does not work, and gives the error: ""Is not JSON serializable""</p>  <p>The code is simply to pull data from file and show the data to the user in a table.  The file is updated with values from sensors connected to the system.</p>  <p>Any ideas on how to serialize my numpy data? Or how to return an array to my html without using javascript and only using djangos template?</p>  <p>HTML class to print table in</p>  <pre><code>&lt;div class=""box_result_inner""&gt; &lt;table cellspacing=""0px"" cellpadding=""1px"" border=""1px"" id=""tablehtml""&gt; &lt;/table&gt;   &lt;/div&gt; </code></pre>  <p>Javascript</p>  <pre><code>function TableUpdate(data){     var col=data.mean[0].length;     var row=data.mean.length;     buffer='';     for(var r = 0; r &lt; row; r++){         buffer += ""&lt;tr&gt;"";         for(var c = 0; c &lt; col ; c++){             buffer += ""&lt;td&gt;"" + data.mean[r][c] + ""&lt;/td&gt;"";         }         buffer += ""&lt;/tr&gt;"";     }     document.getElementById(""tablehtml"").innerHTML = buffer;  } </code></pre>  <p><strong>Update</strong> Unfortunately <em>list</em> didn't work for me as it added <em>array</em> in front of every row, however, got it working with:</p>  <pre><code>with open(""chamber/control/data/table_mean.txt"", 'wb') as fp:     json.dump(mean, fp)  with open(""chamber/control/data/table_mean.txt"", 'rb') as fp:     mean2 = json.load(fp)  return json.dumps({""mean"": mean2}) </code></pre>"	2013-05-08 23:24:24.43 UTC	16452250	"<p>The Python JSON module can only handle certain native Python types listed <a href=""http://docs.python.org/2/library/json.html#encoders-and-decoders"" rel=""nofollow"">here</a>.</p>  <p>The <a href=""http://docs.scipy.org/doc/numpy/reference/generated/numpy.loadtxt.html"" rel=""nofollow""><code>numpy.loadtxt</code></a> function returns an <code>array</code> type and so is not serializable.</p>  <p>Instead, convert the <code>array</code> to a <code>list</code>, then convert to JSON:</p>  <pre><code>mean2 = list(numpy.loadtxt(""table_mean.txt"")) return json.dumps({""mean"": mean}) </code></pre>  <p>This operation may be expensive depending on the size of the <code>numpy</code> array.</p>"			2013-05-09 00:06:53.957 UTC
16491005	javascript|python|ajax|google-app-engine	AJAX Post to store JSON with Python and javascript	"<p>I have been having problems with getting AJAX to post JSON correctly. The application is intended to be hosted on Google App Engine. But what I have does not post data.</p>  <p>Python </p>  <pre><code> mainPage = """"""     &lt;html&gt;     html is included in my python file.     &lt;/html&gt;     """"""       class JSONInterface(webapp2.RequestHandler):     def post(self):         name =self.request.get('name')         nickname =self.request.get('nickname')          callback = self.request.get('callback')         if len(name) &gt; 0 and len(nickname) &gt;0:             newmsg = Entry(name=name, nickname=nickname)             newmsg.put()         if len(name)&gt;0:             self.response.out.write(getJSONMessages(callback))         else:             self.response.out.write(""something didnt work"")      def get(self):         callback = self.request.get('callback')         self.response.out.write(getJSONMessages(callback)) </code></pre>  <p>This handler is meant to handle the Ajax calls from the web app. I am unsure if I need javascript to be associated with my main page in order to do so, as I haven't found information on it yet with my searches.</p>  <p>Javascript</p>  <pre><code>$(document).ready( function() {      $(""#post"").bind('click', function(event){            var name = $(""#name"").val();            var nickname = $(""#nickname"").val();              postData = {name: name, nickname: nickname, callback: ""newMessage""};          $.ajax({             type: ""POST"",             url: ""http://localhost:27080/json"",             data: postData,             dataType: ""json"",             done: function() {                 // Clear out the posted message...                 $(""#nickname"").val('');             },             fail: function(e) {                 confirm(""Error"", e.message);             }         });         // prevent default posting of form (since we're making an Ajax call)...         event.preventDefault();     }); </code></pre>  <p>The Javascript for the post</p>  <p>Can someone advise me on how I could resolve the problem I am having. Thanks for the time and help. </p>"	2013-05-10 21:21:48.843 UTC	16493331	"<p>Did you ask the same question yesterday and then delete it?  I swear I just answered the same question.</p>  <p>You're not sending your <code>data</code> as a JSON string.  If you want to send as JSON, you need to encode <code>data</code> as a JSON string, or else you're just sending it as a query string.</p>  <pre><code>data: JSON.stringify(postdata), </code></pre>  <p>HOWERVER, your request handler is actually processing the request properly as query string instead of JSON, so you probably don't want to do that.</p>"			2013-05-11 03:01:33.82 UTC
16491005	javascript|python|ajax|google-app-engine	AJAX Post to store JSON with Python and javascript	"<p>I have been having problems with getting AJAX to post JSON correctly. The application is intended to be hosted on Google App Engine. But what I have does not post data.</p>  <p>Python </p>  <pre><code> mainPage = """"""     &lt;html&gt;     html is included in my python file.     &lt;/html&gt;     """"""       class JSONInterface(webapp2.RequestHandler):     def post(self):         name =self.request.get('name')         nickname =self.request.get('nickname')          callback = self.request.get('callback')         if len(name) &gt; 0 and len(nickname) &gt;0:             newmsg = Entry(name=name, nickname=nickname)             newmsg.put()         if len(name)&gt;0:             self.response.out.write(getJSONMessages(callback))         else:             self.response.out.write(""something didnt work"")      def get(self):         callback = self.request.get('callback')         self.response.out.write(getJSONMessages(callback)) </code></pre>  <p>This handler is meant to handle the Ajax calls from the web app. I am unsure if I need javascript to be associated with my main page in order to do so, as I haven't found information on it yet with my searches.</p>  <p>Javascript</p>  <pre><code>$(document).ready( function() {      $(""#post"").bind('click', function(event){            var name = $(""#name"").val();            var nickname = $(""#nickname"").val();              postData = {name: name, nickname: nickname, callback: ""newMessage""};          $.ajax({             type: ""POST"",             url: ""http://localhost:27080/json"",             data: postData,             dataType: ""json"",             done: function() {                 // Clear out the posted message...                 $(""#nickname"").val('');             },             fail: function(e) {                 confirm(""Error"", e.message);             }         });         // prevent default posting of form (since we're making an Ajax call)...         event.preventDefault();     }); </code></pre>  <p>The Javascript for the post</p>  <p>Can someone advise me on how I could resolve the problem I am having. Thanks for the time and help. </p>"	2013-05-10 21:21:48.843 UTC	16492634	"<p>For starters, the ajax call is pretty close.  The full path </p>  <pre><code>""http:://localhost:27080/json"" </code></pre>  <p>is not necessary, the relative path will work, but that is not the problem.</p>  <p>Your callback, as it stands, will work as 'success':</p>  <pre><code>success: function(response) {             alert(response);              // Clear out the posted message...             $(""#nickname"").val('');         } </code></pre>  <p>However, this callback is being phased out in favor of <a href=""https://stackoverflow.com/questions/8840257/jquery-ajax-handling-continue-responses-success-vs-done"">other methods</a>.  'Done' should be chained like so:</p>  <pre><code> $.ajax({         type: ""POST"",         url: ""/json"",         data: postData,         dataType: ""json""                 }).done(function(data){         console.log(data);     }); </code></pre>  <p>Also, there might be problems on the server. If you use some logging, you will see that the data is indeed being sent to the server.</p>  <pre><code>import json ## we'll get to this below import logging class JSONInterface(webapp2.RequestHandler): def post(self):     name = self.request.get('name')     logging.info(name) ## will print the value of 'name' </code></pre>  <p>Unless your python function getJSONMessages(callback) is returning a json object, your callback will not be called, even after you add the response parameter. In your python code:</p>  <pre><code>import json import logging class JSONInterface(webapp2.RequestHandler):     def post(self):         callback = self.request.get('callback')         logging.info(callback) # will print correctly         self.response.out.write(json.dumps(callback))  </code></pre>  <p>Using the <a href=""http://docs.python.org/2/library/json.html"" rel=""nofollow noreferrer"">json.dumps method</a> encodes the passing object to json, which is what your ajax object is looking for.</p>"			2013-05-11 00:38:38.083 UTC
16515915	javascript|python|firefox|selenium|scrapy	"How can I detect if a page massively uses Javascript with Python, Scrapy and Selenium?"	"<p>I wrote a Scrapy spider to process Javascript content on webpages with the help of Selenium. However, I realized that this spider is significantly slower than a common Scrapy Crawler. For this reason I want to combine two spiders: The common <code>CrawlSpider</code> for getting all resources and a Selenium Spider just for pages which extensively use Javascript. I created  a pipleline step that tries to detect if a webpage requires Javascript and massively uses it. So far  my ideas for the processing step failed:</p>  <ul> <li>Some pages use the common <code>&lt;noscript&gt;</code> tag.</li> <li>Some pages print an alert message e.g. <code>&lt;div class=""yt-alert-message"" &gt;</code>.</li> <li>...</li> </ul>  <p>There are so many diverse ways to indicate that a page requires Javascript! </p>  <ul> <li><strong>Do you know a standardized way how I can 'detect' pages which extensively use  Javascript?</strong></li> </ul>  <p>Note: I only want to process pages with my Selenium Spider where it is really necessary as the spider is significantly slower and some pages only use it for a nice design.</p>"	2013-05-13 06:20:55.923 UTC	16741882	"<p>You can get all JavaScript from the script tags, add it all up, and check that the length isn't more than whatever amount you think constitutes ""massive"" JavaScript.  </p>  <pre><code># get all script tags scripts = browser.find_elements_by_tag_name(""script"")  # create a string to add all the JS content to javaScriptChars = """";     # create an list to store urls for external scripts urls = list()  # for each script on the page... for script in scripts      # get the src     url = script.get_attribute(""scr"")      # if script is external (has a 'src' attribute)...     if url.__len__() &gt; 0:          # add the url to the list (will access it later)         urls.append(url)      else:          # the script is inline - so just get the text inside         javaScriptChars = javaScriptChars + script.getAttribute(""textContent"");  # for each external url found above... for url in urls      # open the script     driver.get(url)      # add the content to our string     javaScriptChars = javaScriptChars + driver.page_source  # check if the string is longer than some threshold you choose                               if javaScriptChars.__len__() &gt; 50000:      # JS contains more than 5000 characters </code></pre>  <p>The number is arbitrary. I guess less than 50000 characters of JS might not actually be ""a lot"" because The page might not be calling every function every time. That will likely depend somewhat on what the user does. </p>  <p>But if you can assume a well-designed site is only including necessary scripts, then the number of characters could still be a relevant indicator of how much JS it runs. </p>"			2013-05-24 18:58:52.707 UTC
16540998	javascript|python|dynamic|duck-typing	javascript: implement something like python's __getattribute__?	"<p>Is there a way to implement in javascript the functionality of python's __getattribute__() (or __getattr__())? That is, a method which is called whenever an object is called with method name or property name which cannot be resolved?</p>  <p>For example, a mechanism to implement any of the following:</p>  <pre><code># Python's method syntax  o.Name(args) # o.__getattr__('Name') is called and returns               # a function which is called with args # Alternative method syntax o.Name(args) # o.__getattr__('Name', args) is called and returns a value  # Properties syntax o.Name = v  # o.__getattr__('Name', v) is called v = o.Name  # o.__getattr__('Name') is called and returns a value </code></pre>  <p>I'm most interested in the method syntax, but the property syntax would be a nice bonus. Thanks!</p>"	2013-05-14 10:38:11.493 UTC	16541194	"<pre><code>a = {    attr1 : 0,   attr2 : 2 }  // Object {attr1: 0, attr2: 2}  function get(obj, attr) {   return obj[attr]; }  get(a, 'attr2');  // 2 </code></pre>  <p>Another approach is to have the method inside the object:</p>  <pre><code>a = {    attr1 : 0,   attr2 : 2,   myfunc: function(args) {     alert(args);   },   get   : function(attr) {     return this[attr];   } }  // Object {attr1: 0, attr2: 2, get: function}  a.get('attr2');  // 2 </code></pre>  <p>if what you get is function you can call it straight away <code>a.get('myfunc')('myarg')</code> alerts <code>myarg</code></p>"			2013-05-14 10:48:02.573 UTC
16540998	javascript|python|dynamic|duck-typing	javascript: implement something like python's __getattribute__?	"<p>Is there a way to implement in javascript the functionality of python's __getattribute__() (or __getattr__())? That is, a method which is called whenever an object is called with method name or property name which cannot be resolved?</p>  <p>For example, a mechanism to implement any of the following:</p>  <pre><code># Python's method syntax  o.Name(args) # o.__getattr__('Name') is called and returns               # a function which is called with args # Alternative method syntax o.Name(args) # o.__getattr__('Name', args) is called and returns a value  # Properties syntax o.Name = v  # o.__getattr__('Name', v) is called v = o.Name  # o.__getattr__('Name') is called and returns a value </code></pre>  <p>I'm most interested in the method syntax, but the property syntax would be a nice bonus. Thanks!</p>"	2013-05-14 10:38:11.493 UTC	16609819	"<p>As pointed out by @thg435 the issue was discussed in a narrower scope at <a href=""https://stackoverflow.com/questions/2266789/is-there-an-equivalent-of-the-nosuchmethod-feature-for-properties-or-a-way"">Is there an equivalent of the __noSuchMethod__ feature for properties, or a way to implement it in JS?</a> but the answer from there applies here.</p>  <p>An appropriate API for doing this in javascript is in the making, called <a href=""http://wiki.ecmascript.org/doku.php?id=harmony:proxies"" rel=""nofollow noreferrer"">ECMAScript Harmony Proxies</a> which may have been replaced recently with <a href=""http://wiki.ecmascript.org/doku.php?id=harmony:direct_proxies"" rel=""nofollow noreferrer"">Direct Proxy</a>. This API is not yet supported cross-platform, but it may work for some platform, such as recent firefox and chrome.</p>"			2013-05-17 13:04:42.547 UTC
16595653	javascript|python|api|v8	How to read javascript values from python with PyV8	"<p>I've implemented PyV8 into Python. I have an example javascript file that looks like this:</p>  <h2>main-js.js:</h2>  <pre><code>var numOne = 1+2; var numTwo = 3+1; var numThree = 5; </code></pre>  <p>How do I read each variable into Python with PyV8? So far I've opened and read the file with this: ctxt.eval(open(""main-js.js"").read()). But i don't know how to grab each variable from the file. This is hard to find due to the lack of documentation with pyv8</p>"	2013-05-16 19:17:10.4 UTC	16595900	"<p>The <code>JSContext</code> object has a <code>locals</code> attribute which is a dictionary of the context's local variables. So, you want <code>ctxt.locals[""numOne""]</code> and so on.</p>  <p>Another way to do it: <code>eval()</code> has a return value, which is the value of the last statement evaluated. So you could also execute a JavaScript statement that evaluates the variables you're interested in. In this case you could just create a JavaScript array of them, which you can then unpack into the Python variables you want. You could do this by appending the statement to the code you read from the file, or just execute a separate <code>eval()</code> for it:</p>  <pre><code>with PyV8.JSContext() as ctxt:     with open(""main-js.js"") as jsfile:         ctxt.eval(jsfile.read())     numOne, numTwo, numThree = ctxt.eval(""[numOne, numTwo, numThree]"") </code></pre>"			2013-05-16 19:31:24.51 UTC
16608296	javascript|python|websocket	WebSocket javascript client and python server. Retrieving garbage in output	"<p>I am trying to send string/text data from browser client to python server and simply print it out. I have followed several examples on the internet, and all are the same: by using <code>javascript</code></p>  <pre><code>web_socket.send(""text to be sent"")  </code></pre>  <p>and (python)</p>  <pre><code>data = web_socket.recv(1024) print data  </code></pre>  <p>they receive what they want, what is clear and nice printout ""text to be sent"" on server site.</p>  <p>You can find my <code>.html</code> and <code>.py</code> below:</p>  <pre><code>&lt;!DOCTYPE html&gt;  &lt;html lang=""en""&gt; &lt;head&gt;     &lt;title&gt;Test&lt;/title&gt;     &lt;script src=""jquery.js""&gt;&lt;/script&gt;       &lt;script type=""application/javascript""&gt;         var ws;          function init() {             var servermsg = document.getElementById(""servermsg"");             ws = new WebSocket(""ws://127.0.0.1:9877/"");             ws.onopen = function(){                 servermsg.innerHTML = servermsg.innerHTML + ""&lt;br&gt;Server connected"";             };             ws.onmessage = function(e){                 servermsg.innerHTML = servermsg.innerHTML + ""&lt;br&gt;&lt;&lt; Recieved data: "" + e.data;             };             ws.onclose = function(){                 servermsg.innerHTML = servermsg.innerHTML + ""&lt;br&gt;Server disconnected"";             };         }         function postmsg(){             var text = document.getElementById(""message"").value;             ws.send(text);             servermsg.innerHTML = servermsg.innerHTML + ""&lt;br&gt;&gt;&gt; Data sent: "" + text;         }         //$(function(){         //    var text = document.getElementById(""message"").value;         //    ws.send(text);         //    servermsg.innerHTML = servermsg.innerHTML + ""&lt;br&gt;Sent: "" + text;                     //});       &lt;/script&gt; &lt;/head&gt; &lt;body onload=""init();""&gt;     &lt;form action="""" onSubmit=""postmsg();return false;""&gt;         &lt;input type=""text"" name=""message"" value="""" id=""message""&gt;         &lt;input type=""submit"" name=""submit"" value="""" id=""submit""&gt;     &lt;/form&gt;     &lt;div id=""servermsg""&gt;&lt;h1&gt;Message log:&lt;/h1&gt;&lt;/div&gt; &lt;/body&gt;  &lt;/html&gt; </code></pre>  <p>Server:</p>  <pre><code>#!/usr/bin/env python  import socket import threading import struct import hashlib import base64  PORT = 9877 _address = """"  def create_handshake_resp(handshake): final_line = """" lines = handshake.splitlines() for line in lines:     parts = line.partition("": "")     if parts[0] == ""Sec-WebSocket-Key"":         key = parts[2]   magic = '258EAFA5-E914-47DA-95CA-C5AB0DC85B11'  accept_key = base64.b64encode(hashlib.sha1(key+magic).digest())  return (     ""HTTP/1.1 101 Switching Protocols\r\n""     ""Upgrade: WebSocket\r\n""     ""Connection: Upgrade\r\n""     ""Sec-WebSocket-Accept: "" + accept_key + ""\r\n\r\n"")   def handle(s, addr): data = s.recv(1024) response = create_handshake_resp(data) s.sendto(response, addr) lock = threading.Lock() while 1:     print ""Waiting for data from"", addr     data = s.recv(1024)     print ""Done""     if not data:         print ""No data""         break      print 'Data from', addr, ':', data  print 'Client closed:', addr lock.acquire() clients.remove(s) lock.release() s.close()  def start_server(): print 'STARTING SERVER...' s = socket.socket() s.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1) s.bind(('', PORT)) s.listen(1) print 'SERVER STARTED' while 1:     conn, addr = s.accept()     print 'NEW CONNECTION ['+str(len(clients))+'], connected by ', addr     clients.append(conn)     threading.Thread(target = handle, args = (conn, addr)).start()  clients = [] start_server() </code></pre>  <p>And server printout (when input was like ""AA"", or ""ABC""):</p>  <pre><code>STARTING SERVER... SERVER STARTED NEW CONNECTION [0], connected by  ('127.0.0.1', 43877) Waiting for data from ('127.0.0.1', 43877) Done Data from ('127.0.0.1', 43877) : ����w�q Waiting for data from ('127.0.0.1', 43877) Done Data from ('127.0.0.1', 43877) : ��)B�h Waiting for data from ('127.0.0.1', 43877) </code></pre>"	2013-05-17 11:50:03.763 UTC	38413496	"<p>The problem with the junk data was the javascript code sends the masked data and you must unmask it on the server side and the server sendes the unmasked data to client side.To solve this problem see my git-hub page   [][1]<a href=""https://github.com/mohanbe/web-chat"" rel=""nofollow"">https://github.com/mohanbe/web-chat</a></p>"			2016-07-16 16:58:41.027 UTC
16608296	javascript|python|websocket	WebSocket javascript client and python server. Retrieving garbage in output	"<p>I am trying to send string/text data from browser client to python server and simply print it out. I have followed several examples on the internet, and all are the same: by using <code>javascript</code></p>  <pre><code>web_socket.send(""text to be sent"")  </code></pre>  <p>and (python)</p>  <pre><code>data = web_socket.recv(1024) print data  </code></pre>  <p>they receive what they want, what is clear and nice printout ""text to be sent"" on server site.</p>  <p>You can find my <code>.html</code> and <code>.py</code> below:</p>  <pre><code>&lt;!DOCTYPE html&gt;  &lt;html lang=""en""&gt; &lt;head&gt;     &lt;title&gt;Test&lt;/title&gt;     &lt;script src=""jquery.js""&gt;&lt;/script&gt;       &lt;script type=""application/javascript""&gt;         var ws;          function init() {             var servermsg = document.getElementById(""servermsg"");             ws = new WebSocket(""ws://127.0.0.1:9877/"");             ws.onopen = function(){                 servermsg.innerHTML = servermsg.innerHTML + ""&lt;br&gt;Server connected"";             };             ws.onmessage = function(e){                 servermsg.innerHTML = servermsg.innerHTML + ""&lt;br&gt;&lt;&lt; Recieved data: "" + e.data;             };             ws.onclose = function(){                 servermsg.innerHTML = servermsg.innerHTML + ""&lt;br&gt;Server disconnected"";             };         }         function postmsg(){             var text = document.getElementById(""message"").value;             ws.send(text);             servermsg.innerHTML = servermsg.innerHTML + ""&lt;br&gt;&gt;&gt; Data sent: "" + text;         }         //$(function(){         //    var text = document.getElementById(""message"").value;         //    ws.send(text);         //    servermsg.innerHTML = servermsg.innerHTML + ""&lt;br&gt;Sent: "" + text;                     //});       &lt;/script&gt; &lt;/head&gt; &lt;body onload=""init();""&gt;     &lt;form action="""" onSubmit=""postmsg();return false;""&gt;         &lt;input type=""text"" name=""message"" value="""" id=""message""&gt;         &lt;input type=""submit"" name=""submit"" value="""" id=""submit""&gt;     &lt;/form&gt;     &lt;div id=""servermsg""&gt;&lt;h1&gt;Message log:&lt;/h1&gt;&lt;/div&gt; &lt;/body&gt;  &lt;/html&gt; </code></pre>  <p>Server:</p>  <pre><code>#!/usr/bin/env python  import socket import threading import struct import hashlib import base64  PORT = 9877 _address = """"  def create_handshake_resp(handshake): final_line = """" lines = handshake.splitlines() for line in lines:     parts = line.partition("": "")     if parts[0] == ""Sec-WebSocket-Key"":         key = parts[2]   magic = '258EAFA5-E914-47DA-95CA-C5AB0DC85B11'  accept_key = base64.b64encode(hashlib.sha1(key+magic).digest())  return (     ""HTTP/1.1 101 Switching Protocols\r\n""     ""Upgrade: WebSocket\r\n""     ""Connection: Upgrade\r\n""     ""Sec-WebSocket-Accept: "" + accept_key + ""\r\n\r\n"")   def handle(s, addr): data = s.recv(1024) response = create_handshake_resp(data) s.sendto(response, addr) lock = threading.Lock() while 1:     print ""Waiting for data from"", addr     data = s.recv(1024)     print ""Done""     if not data:         print ""No data""         break      print 'Data from', addr, ':', data  print 'Client closed:', addr lock.acquire() clients.remove(s) lock.release() s.close()  def start_server(): print 'STARTING SERVER...' s = socket.socket() s.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1) s.bind(('', PORT)) s.listen(1) print 'SERVER STARTED' while 1:     conn, addr = s.accept()     print 'NEW CONNECTION ['+str(len(clients))+'], connected by ', addr     clients.append(conn)     threading.Thread(target = handle, args = (conn, addr)).start()  clients = [] start_server() </code></pre>  <p>And server printout (when input was like ""AA"", or ""ABC""):</p>  <pre><code>STARTING SERVER... SERVER STARTED NEW CONNECTION [0], connected by  ('127.0.0.1', 43877) Waiting for data from ('127.0.0.1', 43877) Done Data from ('127.0.0.1', 43877) : ����w�q Waiting for data from ('127.0.0.1', 43877) Done Data from ('127.0.0.1', 43877) : ��)B�h Waiting for data from ('127.0.0.1', 43877) </code></pre>"	2013-05-17 11:50:03.763 UTC	16612199	"<p>I'm working on something similar myself. The Websocket protocol mandates that the client sends all its data using a mask. This is why you see 'garbage' - it's the masked text.</p> <p><a href=""https://www.rfc-editor.org/rfc/rfc6455#section-5"" rel=""nofollow noreferrer"">https://www.rfc-editor.org/rfc/rfc6455#section-5</a></p> <blockquote> <p>&quot;a client MUST mask all frames that it sends to the server&quot;</p> </blockquote> <p>Read section 5 of the protocol and all will become clear. The browser (ie the client) is just implementing the protocol as it should (when you call ws.send). You need to do your bit.</p> <p>Note also that when the sever sends data to the client it must NOT mask. But it still has to supply other info before the actual data (type, length etc).</p>"			2013-05-17 14:59:46.187 UTC
16608296	javascript|python|websocket	WebSocket javascript client and python server. Retrieving garbage in output	"<p>I am trying to send string/text data from browser client to python server and simply print it out. I have followed several examples on the internet, and all are the same: by using <code>javascript</code></p>  <pre><code>web_socket.send(""text to be sent"")  </code></pre>  <p>and (python)</p>  <pre><code>data = web_socket.recv(1024) print data  </code></pre>  <p>they receive what they want, what is clear and nice printout ""text to be sent"" on server site.</p>  <p>You can find my <code>.html</code> and <code>.py</code> below:</p>  <pre><code>&lt;!DOCTYPE html&gt;  &lt;html lang=""en""&gt; &lt;head&gt;     &lt;title&gt;Test&lt;/title&gt;     &lt;script src=""jquery.js""&gt;&lt;/script&gt;       &lt;script type=""application/javascript""&gt;         var ws;          function init() {             var servermsg = document.getElementById(""servermsg"");             ws = new WebSocket(""ws://127.0.0.1:9877/"");             ws.onopen = function(){                 servermsg.innerHTML = servermsg.innerHTML + ""&lt;br&gt;Server connected"";             };             ws.onmessage = function(e){                 servermsg.innerHTML = servermsg.innerHTML + ""&lt;br&gt;&lt;&lt; Recieved data: "" + e.data;             };             ws.onclose = function(){                 servermsg.innerHTML = servermsg.innerHTML + ""&lt;br&gt;Server disconnected"";             };         }         function postmsg(){             var text = document.getElementById(""message"").value;             ws.send(text);             servermsg.innerHTML = servermsg.innerHTML + ""&lt;br&gt;&gt;&gt; Data sent: "" + text;         }         //$(function(){         //    var text = document.getElementById(""message"").value;         //    ws.send(text);         //    servermsg.innerHTML = servermsg.innerHTML + ""&lt;br&gt;Sent: "" + text;                     //});       &lt;/script&gt; &lt;/head&gt; &lt;body onload=""init();""&gt;     &lt;form action="""" onSubmit=""postmsg();return false;""&gt;         &lt;input type=""text"" name=""message"" value="""" id=""message""&gt;         &lt;input type=""submit"" name=""submit"" value="""" id=""submit""&gt;     &lt;/form&gt;     &lt;div id=""servermsg""&gt;&lt;h1&gt;Message log:&lt;/h1&gt;&lt;/div&gt; &lt;/body&gt;  &lt;/html&gt; </code></pre>  <p>Server:</p>  <pre><code>#!/usr/bin/env python  import socket import threading import struct import hashlib import base64  PORT = 9877 _address = """"  def create_handshake_resp(handshake): final_line = """" lines = handshake.splitlines() for line in lines:     parts = line.partition("": "")     if parts[0] == ""Sec-WebSocket-Key"":         key = parts[2]   magic = '258EAFA5-E914-47DA-95CA-C5AB0DC85B11'  accept_key = base64.b64encode(hashlib.sha1(key+magic).digest())  return (     ""HTTP/1.1 101 Switching Protocols\r\n""     ""Upgrade: WebSocket\r\n""     ""Connection: Upgrade\r\n""     ""Sec-WebSocket-Accept: "" + accept_key + ""\r\n\r\n"")   def handle(s, addr): data = s.recv(1024) response = create_handshake_resp(data) s.sendto(response, addr) lock = threading.Lock() while 1:     print ""Waiting for data from"", addr     data = s.recv(1024)     print ""Done""     if not data:         print ""No data""         break      print 'Data from', addr, ':', data  print 'Client closed:', addr lock.acquire() clients.remove(s) lock.release() s.close()  def start_server(): print 'STARTING SERVER...' s = socket.socket() s.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1) s.bind(('', PORT)) s.listen(1) print 'SERVER STARTED' while 1:     conn, addr = s.accept()     print 'NEW CONNECTION ['+str(len(clients))+'], connected by ', addr     clients.append(conn)     threading.Thread(target = handle, args = (conn, addr)).start()  clients = [] start_server() </code></pre>  <p>And server printout (when input was like ""AA"", or ""ABC""):</p>  <pre><code>STARTING SERVER... SERVER STARTED NEW CONNECTION [0], connected by  ('127.0.0.1', 43877) Waiting for data from ('127.0.0.1', 43877) Done Data from ('127.0.0.1', 43877) : ����w�q Waiting for data from ('127.0.0.1', 43877) Done Data from ('127.0.0.1', 43877) : ��)B�h Waiting for data from ('127.0.0.1', 43877) </code></pre>"	2013-05-17 11:50:03.763 UTC	33041835	"<p>To send a message from server side to websocket client you need to do as follows:</p>  <pre><code>message = bytearray([0b10000001, len(original_msg)])  for byte in bytearray(original_msg):      message.append(byte) </code></pre>  <p>See a stable server to client unidirectional socket library at <a href=""https://github.com/westial/SingleSocket"" rel=""nofollow"">https://github.com/westial/SingleSocket</a></p>"			2015-10-09 15:15:40.08 UTC
16613352	javascript|python	How do you unpack javascript using jsbeautifier in python?	"<p>I have this javascript code which I want to unpack and beautify, it looks similar to this:</p>  <pre><code>eval(function(p,a,c,k,e,r){e=String;if('0'.replace(0,e)==0){while(c--)r[e(c)]=k[c];k=[function(e){return r[e]||e}];e=function(){return'^$'};c=1};while(c--)if(k[c])p=p.replace(new RegExp('\\b'+e(c)+'\\b','g'),k[c]);return p}('document.body.innerHTML=""&lt;iframe width=\'100%\' scrolling=\'no\' height=\'2500\' frameborder=\'0\' src=\'http://www.exmaple.com\'&gt;"";',[],1,''.split('|'),0,{})) </code></pre>  <p>When I put this into jsbeautifier.org I get:</p>  <pre><code>document.body.innerHTML = ""&lt;iframe width='100%' scrolling='no' height='2500' frameborder='0' src='http://www.example.com'&gt;""; </code></pre>  <p>But when I try and use the python library (using jsbeautifier.beautify) it doesn't seem to unpack properly:</p>  <pre><code>print al(function (p, a, c, k, e, r) {     e = String;     if ('0'.replace(0, e) == 0) {         while (c--) r[e(c)] = k[c];         k = [             function (e) {                 return r[e] || e             }         ];         e = function () {             return '^$'         };         c = 1     };     while (c--) if (k[c]) p = p.replace(new RegExp('\\b' + e(c) + '\\b', 'g'), k[c]);     return p }('document.body.innerHTML=""&lt;iframe width=\'100%\' scrolling=\'no\' height=\'2500\' frameborder=\'0\' src=\'http://www.example.com\'&gt;"";', [], 1, ''.split('|'), 0, {})); </code></pre>  <p>What am I doing wrong?</p>  <p>EDIT: Python code is:</p>  <pre><code>import jsbeautifier #script needs to have '\n' at the beginning otherwise jsbeautifier throws an error script = """"""\neval(function(p,a,c,k,e,r){e=String;if('0'.replace(0,e)==0){while(c--)r[e(c)]=k[c];k=[function(e){return r[e]||e}];e=function(){return'^$'};c=1};while(c--)if(k[c])p=p.replace(new RegExp('\\b'+e(c)+'\\b','g'),k[c]);return p}('document.body.innerHTML=""&lt;iframe width=\'100%\' scrolling=\'no\' height=\'2500\' frameborder=\'0\' src=\'http://www.example.com\'&gt;"";',[],1,''.split('|'),0,{}))"""""" jsbeautifier.beautify(script) </code></pre>"	2013-05-17 15:55:34.407 UTC	27992001	"<p>You should import this module:</p>  <pre><code>import jsbeautifier.unpackers.packer as packer unpack = packer.unpack(some_packed_code) </code></pre>  <p>I have tested this in Windows 32bit, jsbeautifier 1.54.</p>"			2015-01-16 20:08:24.867 UTC
16613352	javascript|python	How do you unpack javascript using jsbeautifier in python?	"<p>I have this javascript code which I want to unpack and beautify, it looks similar to this:</p>  <pre><code>eval(function(p,a,c,k,e,r){e=String;if('0'.replace(0,e)==0){while(c--)r[e(c)]=k[c];k=[function(e){return r[e]||e}];e=function(){return'^$'};c=1};while(c--)if(k[c])p=p.replace(new RegExp('\\b'+e(c)+'\\b','g'),k[c]);return p}('document.body.innerHTML=""&lt;iframe width=\'100%\' scrolling=\'no\' height=\'2500\' frameborder=\'0\' src=\'http://www.exmaple.com\'&gt;"";',[],1,''.split('|'),0,{})) </code></pre>  <p>When I put this into jsbeautifier.org I get:</p>  <pre><code>document.body.innerHTML = ""&lt;iframe width='100%' scrolling='no' height='2500' frameborder='0' src='http://www.example.com'&gt;""; </code></pre>  <p>But when I try and use the python library (using jsbeautifier.beautify) it doesn't seem to unpack properly:</p>  <pre><code>print al(function (p, a, c, k, e, r) {     e = String;     if ('0'.replace(0, e) == 0) {         while (c--) r[e(c)] = k[c];         k = [             function (e) {                 return r[e] || e             }         ];         e = function () {             return '^$'         };         c = 1     };     while (c--) if (k[c]) p = p.replace(new RegExp('\\b' + e(c) + '\\b', 'g'), k[c]);     return p }('document.body.innerHTML=""&lt;iframe width=\'100%\' scrolling=\'no\' height=\'2500\' frameborder=\'0\' src=\'http://www.example.com\'&gt;"";', [], 1, ''.split('|'), 0, {})); </code></pre>  <p>What am I doing wrong?</p>  <p>EDIT: Python code is:</p>  <pre><code>import jsbeautifier #script needs to have '\n' at the beginning otherwise jsbeautifier throws an error script = """"""\neval(function(p,a,c,k,e,r){e=String;if('0'.replace(0,e)==0){while(c--)r[e(c)]=k[c];k=[function(e){return r[e]||e}];e=function(){return'^$'};c=1};while(c--)if(k[c])p=p.replace(new RegExp('\\b'+e(c)+'\\b','g'),k[c]);return p}('document.body.innerHTML=""&lt;iframe width=\'100%\' scrolling=\'no\' height=\'2500\' frameborder=\'0\' src=\'http://www.example.com\'&gt;"";',[],1,''.split('|'),0,{}))"""""" jsbeautifier.beautify(script) </code></pre>"	2013-05-17 15:55:34.407 UTC	21167679	"<p>jsbeautifier is broken. Use node-js (or phantomJS) instead. Working example code below:</p>  <pre><code>import subprocess import StringIO  data = r""""""eval(function(p,a,c,k,e,r){e=String;if('0'.replace(0,e)==0){while(c--)r[e(c)]=k[c];k=[function(e){return r[e]||e}];e=function(){return'^$'};c=1};while(c--)if(k[c])p=p.replace(new RegExp('\\b'+e(c)+'\\b','g'),k[c]);return p}('document.body.innerHTML=""&lt;iframe width=\'100%\' scrolling=\'no\' height=\'2500\' frameborder=\'0\' src=\'http://www.exmaple.com\'&gt;"";',[],1,''.split('|'),0,{}))""""""  data = 'console.log' + data[4:] p = subprocess.Popen(['node'], stdin=subprocess.PIPE, stdout=subprocess.PIPE) stdout, stderr = p.communicate(data) print stdout </code></pre>"			2014-01-16 16:42:41.75 UTC
16613352	javascript|python	How do you unpack javascript using jsbeautifier in python?	"<p>I have this javascript code which I want to unpack and beautify, it looks similar to this:</p>  <pre><code>eval(function(p,a,c,k,e,r){e=String;if('0'.replace(0,e)==0){while(c--)r[e(c)]=k[c];k=[function(e){return r[e]||e}];e=function(){return'^$'};c=1};while(c--)if(k[c])p=p.replace(new RegExp('\\b'+e(c)+'\\b','g'),k[c]);return p}('document.body.innerHTML=""&lt;iframe width=\'100%\' scrolling=\'no\' height=\'2500\' frameborder=\'0\' src=\'http://www.exmaple.com\'&gt;"";',[],1,''.split('|'),0,{})) </code></pre>  <p>When I put this into jsbeautifier.org I get:</p>  <pre><code>document.body.innerHTML = ""&lt;iframe width='100%' scrolling='no' height='2500' frameborder='0' src='http://www.example.com'&gt;""; </code></pre>  <p>But when I try and use the python library (using jsbeautifier.beautify) it doesn't seem to unpack properly:</p>  <pre><code>print al(function (p, a, c, k, e, r) {     e = String;     if ('0'.replace(0, e) == 0) {         while (c--) r[e(c)] = k[c];         k = [             function (e) {                 return r[e] || e             }         ];         e = function () {             return '^$'         };         c = 1     };     while (c--) if (k[c]) p = p.replace(new RegExp('\\b' + e(c) + '\\b', 'g'), k[c]);     return p }('document.body.innerHTML=""&lt;iframe width=\'100%\' scrolling=\'no\' height=\'2500\' frameborder=\'0\' src=\'http://www.example.com\'&gt;"";', [], 1, ''.split('|'), 0, {})); </code></pre>  <p>What am I doing wrong?</p>  <p>EDIT: Python code is:</p>  <pre><code>import jsbeautifier #script needs to have '\n' at the beginning otherwise jsbeautifier throws an error script = """"""\neval(function(p,a,c,k,e,r){e=String;if('0'.replace(0,e)==0){while(c--)r[e(c)]=k[c];k=[function(e){return r[e]||e}];e=function(){return'^$'};c=1};while(c--)if(k[c])p=p.replace(new RegExp('\\b'+e(c)+'\\b','g'),k[c]);return p}('document.body.innerHTML=""&lt;iframe width=\'100%\' scrolling=\'no\' height=\'2500\' frameborder=\'0\' src=\'http://www.example.com\'&gt;"";',[],1,''.split('|'),0,{}))"""""" jsbeautifier.beautify(script) </code></pre>"	2013-05-17 15:55:34.407 UTC	30639240	<p>I think that the /n in the beginning of the string avoid the unpacker to detect the Js as packed. try to do jsbeautifier.beautify(script.strip())</p>			2015-06-04 08:51:48.89 UTC
16626086	javascript|python	Are there any python libraries that can safely interpret obfusticated javascript strings?	"<p>I want to be able de-obfusticate javascript strings in python where the javascript code maybe malicious. Are there any libraries available to do this? </p>  <p>I started to build my own but I quickly realised it was a much bigger undertaking then I first realised. To do it properly not only do I have to safely map all the javascript string functions to python ones (including regex), I'd also have to deal with arrays, loops, variables relevant to the loop, etc.</p>  <p>EDIT: here's an example of what I mean</p>  <pre><code>str1 = 'sdfhsjkdfhIdhgjkdfNgjkdfhgjkdfPdhfgkdfjUhdfjkghdfkgjTdfhgjkdfgf'; str2 = str1.replace(/[a-z]/g, ''); </code></pre>  <p>str2 should equal ""INPUT""</p>  <p>And here's another example:</p>  <pre><code>arr = ['-', 'M', '1', 'a', 'a', 'l', 's', 'i', 'r', 'c', 'f', 'i', '#', 'o', '[', 'u', '$', 's']; str = """" for (i=1; i&lt;arr.length; i+=2) {   str = str + arr[i]; } </code></pre>  <p>str should be ""Malicious""</p>"	2013-05-18 15:47:26.05 UTC	16626110	"<p>A good option is <a href=""https://github.com/einars/js-beautify/tree/master/python"" rel=""nofollow"">JSBeautifier</a>, which can handle most free obfuscators (actually, any obfuscator I know). There is an option to <code>eval</code> the Javascript using Rhino, but it's blacklisted by default (being unsafe).</p>  <p>Disclosure: I coauthored JSBeautifier, specifically I wrote the Python deobfuscation architecture. By the way, if you find some JS that JSBeautifier cannot handle, consider opening an issue on the project bugtracker :)</p>"			2013-05-18 15:50:15.5 UTC
16643360	javascript|python|compilation|exec|eval	javascript equivalent of python's compile and exec	"<p>In python, one can take a string containing python code, compile it and run the resulting code with exec.</p>  <p>Can something similar be done with javascript (any implementation is good). My objective is to get something like javascript's eval but faster.</p>  <p>Thank you</p>"	2013-05-20 05:53:41.34 UTC	57427574	"<p>JS <code>eval()</code> is similar to Python function <code>eval()</code>. Using <code>eval()</code>, we can use HTML and JS together to create very simple JavaScript editor as the following:</p>  <pre><code>&lt;!DOCTYPE html&gt; &lt;head&gt; &lt;title&gt;JavaScript Editor&lt;/title&gt; &lt;script&gt; function runCode() {    var code = document.getElementById('txtCode').value;    eval(code); } &lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;textarea id = ""txtCode"" cols = ""50"" rows = ""5""&gt;alert(""hello"");&lt;/textarea&gt; &lt;input type = ""button"" value = ""Run"" onClick=""runCode();""/&gt; &lt;/body&gt; &lt;/html&gt; </code></pre>  <p>If you copy and paste the code above and run it, it would produce the alert of ""hello"" in the browser. You can change the code in the text area with your JavaScript code.</p>"			2019-08-09 09:52:05.663 UTC
16643360	javascript|python|compilation|exec|eval	javascript equivalent of python's compile and exec	"<p>In python, one can take a string containing python code, compile it and run the resulting code with exec.</p>  <p>Can something similar be done with javascript (any implementation is good). My objective is to get something like javascript's eval but faster.</p>  <p>Thank you</p>"	2013-05-20 05:53:41.34 UTC	16647539	"<p>Because of the dynamic nature of javascript, you can't really easily compile it to a lower-level language. That's why spidermonkey, V8 etc are just-in-time (JIT) compilers - they use runtime type information to partially compile fragments, sometimes more efficiently than an ahead-of-time compiler would.</p>  <p>Maybe you want to check out the closure compiler? <a href=""https://developers.google.com/closure/compiler/"" rel=""nofollow"">https://developers.google.com/closure/compiler/</a></p>"			2013-05-20 10:29:40.287 UTC
16710608	python|selenium	Scraping a dynamically/Javascript generated website with Python/Selenium	"<p>I'm trying to scrape this website:</p>  <p><a href=""http://stats.uis.unesco.org/unesco/TableViewer/tableView.aspx?ReportId=210"" rel=""nofollow"">http://stats.uis.unesco.org/unesco/TableViewer/tableView.aspx?ReportId=210</a></p>  <p>using Python and Selenium (see code below). The content is dynamically generated, and apparently data which is not visible in the browser is not loaded. I have tried making the browser window larger, and scrolling to the bottom of the page. Enlarging the window gets me all the data I want in the horizontal direction, but there is still plenty of data to scrape in the vertical direction. The scrolling appears not to work at all.</p>  <p>Does anyone have any bright ideas about how to do this?</p>  <p>Thanks!</p>  <pre><code>from selenium import webdriver import time  url = ""http://stats.uis.unesco.org/unesco/TableViewer/tableView.aspx?ReportId=210"" driver = webdriver.Firefox() driver.get(url) driver.set_window_position(0, 0) driver.set_window_size(100000, 200000) driver.execute_script(""window.scrollTo(0, document.body.scrollHeight);"")  time.sleep(5) # wait to load  soup = BeautifulSoup(driver.page_source)  table = soup.find(""table"", {""id"":""DataTable""})  ### get data thead = table.find('tbody') loopRows = thead.findAll('tr') rows = [] for row in loopRows: rows.append([val.text.encode('ascii', 'ignore') for val in  row.findAll(re.compile('td|th'))]) with open(""body.csv"", 'wb') as test_file:   file_writer = csv.writer(test_file)   for row in rows:       file_writer.writerow(row) </code></pre>"	2013-05-23 09:46:23.947 UTC	16783002	"<p>You can do the scrolling by</p>  <pre><code>self.driver.find_element_by_css_selector(""html body.TVTableBody table#pageTable tbody tr td#cell4 table#MainTable tbody tr td#vScrollTD img[onmousedown='imgClick(this.sbar.visible,this,event);']"").click() </code></pre>  <p>It seems like once you can scroll the scraping should be pretty standard unless I'm missing something</p>"			2013-05-28 02:33:00.853 UTC
16710608	python|selenium	Scraping a dynamically/Javascript generated website with Python/Selenium	"<p>I'm trying to scrape this website:</p>  <p><a href=""http://stats.uis.unesco.org/unesco/TableViewer/tableView.aspx?ReportId=210"" rel=""nofollow"">http://stats.uis.unesco.org/unesco/TableViewer/tableView.aspx?ReportId=210</a></p>  <p>using Python and Selenium (see code below). The content is dynamically generated, and apparently data which is not visible in the browser is not loaded. I have tried making the browser window larger, and scrolling to the bottom of the page. Enlarging the window gets me all the data I want in the horizontal direction, but there is still plenty of data to scrape in the vertical direction. The scrolling appears not to work at all.</p>  <p>Does anyone have any bright ideas about how to do this?</p>  <p>Thanks!</p>  <pre><code>from selenium import webdriver import time  url = ""http://stats.uis.unesco.org/unesco/TableViewer/tableView.aspx?ReportId=210"" driver = webdriver.Firefox() driver.get(url) driver.set_window_position(0, 0) driver.set_window_size(100000, 200000) driver.execute_script(""window.scrollTo(0, document.body.scrollHeight);"")  time.sleep(5) # wait to load  soup = BeautifulSoup(driver.page_source)  table = soup.find(""table"", {""id"":""DataTable""})  ### get data thead = table.find('tbody') loopRows = thead.findAll('tr') rows = [] for row in loopRows: rows.append([val.text.encode('ascii', 'ignore') for val in  row.findAll(re.compile('td|th'))]) with open(""body.csv"", 'wb') as test_file:   file_writer = csv.writer(test_file)   for row in rows:       file_writer.writerow(row) </code></pre>"	2013-05-23 09:46:23.947 UTC	16712106	"<p>This will get you as far as autosaving the entire csv to disk, but I haven't found a robust way to determine when the download is complete:</p>  <pre><code>import os import contextlib import selenium.webdriver as webdriver import csv import time  url = ""http://stats.uis.unesco.org/unesco/TableViewer/tableView.aspx?ReportId=210"" download_dir = '/tmp' fp = webdriver.FirefoxProfile() fp.set_preference(""browser.download.dir"", download_dir) # 2 means ""use the last folder specified for a download"" fp.set_preference(""browser.download.folderList"", 2) fp.set_preference(""browser.download.manager.showWhenStarting"", False) fp.set_preference(""browser.helperApps.neverAsk.saveToDisk"", ""application/x-csv"")  # driver = webdriver.Firefox(firefox_profile=fp) with contextlib.closing(webdriver.Firefox(firefox_profile=fp)) as driver:     driver.get(url)     driver.execute_script(""onDownload(2);"")     csvfile = os.path.join(download_dir, 'download.csv')      # Wait for the download to complete     time.sleep(10)     with open(csvfile, 'rb') as f:         for line in csv.reader(f, delimiter=','):             print(line) </code></pre>  <hr>  <p><strong>Explanation:</strong></p>  <p>Point your browser to <code>url</code>. You'll see there is an <code>Actions</code> menu with an option to <code>Download report data...</code> and a suboption entitled <code>""Comma-delimited ASCII format (*.csv)""</code>. If you inspect the HTML for these words you'll find</p>  <pre><code>""Comma-delimited ASCII format (*.csv)"","""",""javascript:onDownload(2);"" </code></pre>  <p>So it follows naturally that you might try getting <code>webdriver</code> to execute the JavaScript function call <code>onDownload(2)</code>. We can do that with</p>  <pre><code>driver.execute_script(""onDownload(2);"") </code></pre>  <p>but normally another window will then pop up asking if you want save the file. To automate the saving-to-disk, I used the method described in <a href=""http://selenium-python.readthedocs.org/en/latest/faq.html#how-to-auto-save-files-using-custom-firefox-profile"" rel=""nofollow"">this FAQ</a>. The tricky part is finding the correct MIME type to specify on this line:</p>  <pre><code>fp.set_preference(""browser.helperApps.neverAsk.saveToDisk"", ""application/x-csv"") </code></pre>  <p>The <code>curl</code> method described in the FAQ does not work here since we do not have a url for the csv file. However, <a href=""http://watirmelon.com/2011/09/07/determining-file-mime-types-to-autosave-using-firefox-watir-webdriver/"" rel=""nofollow"">this page</a> describes another way to find the MIME type: Use a Firefox browser to open the save dialog. Check the checkbox saying ""Do this automatically for files like this"". Then inspect the last few lines of <code>~/.mozilla/firefox/*/mimeTypes.rdf</code> for the most recently added description:</p>  <pre><code>  &lt;RDF:Description RDF:about=""urn:mimetype:handler:application/x-csv""                    NC:alwaysAsk=""false""                    NC:saveToDisk=""true""&gt;     &lt;NC:externalApplication RDF:resource=""urn:mimetype:externalApplication:application/x-csv""/&gt;   &lt;/RDF:Description&gt; </code></pre>  <p>This tells us the mime type is <code>""application/x-csv""</code>. Bingo, we are in business.</p>"			2013-05-23 10:54:53.34 UTC
16740546	javascript|django|templates|object	Passing Python Objects to JavaScript through Django Template Variable	"<p>I have been able to pass primitive types such as integers like <a href=""https://stackoverflow.com/a/298793/807089"">this</a>, but I would like to pass more complicated objects, such as some the Django models that I have created. What is the correct way of doing this?</p>"	2013-05-24 17:28:22.707 UTC	35781753	"<p>I know I'm a little late to the party but I've stumbled upon this question in my own work.</p>  <p>This is the code that worked for me.</p>  <p>This is in my views.py file. </p>  <pre><code>from django.shortcuts import render from django.http import HttpResponse from .models import Model  #This is the django module which allows the Django object to become JSON from django.core import serializers  # Create your views here. def posts_home(request):     json_data = serializers.serialize(""json"",Model.objects.all())         context = {     ""json"" : json_data,     }     return render(request, ""HTMLPage.html"",context) </code></pre>  <p>Then when I'm accessing the data in my html file it looks like this:</p>  <pre><code>&lt;script type = 'text/javascript'&gt;     var data = {{json|safe}}     data[0][""fields""].ATTRIBUTE &lt;/script&gt; </code></pre>  <p>data is a list of JSON objects so I'm accessing the first one so that's why it's data[0]. Each JSON object has three properties: “pk”, “model” and “fields”. The ""fields"" attribute are the fields from your database. This information is found here: <a href=""https://docs.djangoproject.com/es/1.9/topics/serialization/#serialization-formats-json"" rel=""nofollow"">https://docs.djangoproject.com/es/1.9/topics/serialization/#serialization-formats-json</a></p>"			2016-03-03 19:54:35.613 UTC
16740546	javascript|django|templates|object	Passing Python Objects to JavaScript through Django Template Variable	"<p>I have been able to pass primitive types such as integers like <a href=""https://stackoverflow.com/a/298793/807089"">this</a>, but I would like to pass more complicated objects, such as some the Django models that I have created. What is the correct way of doing this?</p>"	2013-05-24 17:28:22.707 UTC	16741129	"<p>For Django model instances in particular, you can <a href=""https://docs.djangoproject.com/en/1.5/topics/serialization/"" rel=""nofollow noreferrer"">serialize</a> them into JSON and use the serialized value in your template context.</p>  <p>From there, you can simply do:</p>  <pre><code>var myObject = eval('(' + '{{ serialized_model_instance }}' + ')'); </code></pre>  <p>or</p>  <pre><code>var myObject = JSON.parse('{{ serialized_model_instance }}'); </code></pre>  <p>if using <a href=""https://github.com/douglascrockford/JSON-js"" rel=""nofollow noreferrer"">JSON-js</a> (which is safer).</p>  <p>For Python objects in general see <a href=""https://stackoverflow.com/questions/3768895/python-how-to-make-a-class-json-serializable"">How to make a class JSON serializable</a></p>"			2013-05-24 18:09:10.17 UTC
16823558	javascript|python-2.7|rsa|pycrypto|pidcrypt	RSA communication between Javascript and Python	"<p>I am working on a prototype, so it needs to use RSA between a Chrome Extension and a Python Server. </p>  <p>So far I was planning on using <a href=""https://sourceforge.net/projects/pidcrypt/"" rel=""nofollow"">https://sourceforge.net/projects/pidcrypt/</a> and <a href=""https://www.dlitz.net/"" rel=""nofollow"">https://www.dlitz.net/</a>. However, while I can get decrypt and encrypt to work as per the documentation, I cannot get one to decrypt each other's message. </p>  <p>Can someone please, either suggest libraries that interoperate or let me know if I am doing something wrong with this libraries? </p>  <p>From what I worked out, pidder uses RSA PKCS#1 encryption-style padding (type 2). From googling, I sort of worked out that it is the type that PyCrypto calls PKCS1_OAEP. I am not too sure, but I have tried the standard and the other one two. </p>  <p>Help would be really appreciated! </p>"	2013-05-29 20:50:28.207 UTC	16835346	"<p>The Javascript library (pidCrypt) uses PKCS#1 v1.5 for RSA encryption, not OAEP.</p>  <p>That is supported by PyCrypto (see <a href=""https://www.dlitz.net/software/pycrypto/api/current/Crypto.Cipher.PKCS1_v1_5-module.html"" rel=""nofollow"">here</a>). This is the example for encryption:</p>  <pre><code>from Crypto.Cipher import PKCS1_v1_5 from Crypto.PublicKey import RSA from Crypto.Hash import SHA  message = 'To be encrypted' h = SHA.new(message)  key = RSA.importKey(open('pubkey.der').read()) cipher = PKCS1_v1_5.new(key) ciphertext = cipher.encrypt(message+h.digest()) </code></pre>  <p>And decryption:</p>  <pre><code>from Crypto.Hash import SHA from Crypto import Random  key = RSA.importKey(open('privkey.der').read())  dsize = SHA.digest_size sentinel = Random.new().read(15+dsize)      # Let's assume that average data length is 15  cipher = PKCS1_v1_5.new(key) message = cipher.decrypt(ciphertext, sentinel)  digest = SHA.new(message[:-dsize]).digest() if digest==message[-dsize:]:                # Note how we DO NOT look for the sentinel      print ""Encryption was correct."" else:      print ""Encryption was not correct."" </code></pre>  <p>Note that PKCS#1 v1.5 encryption scheme is know to be <strong>badly</strong> broken.</p>"			2013-05-30 11:48:34.02 UTC
16823558	javascript|python-2.7|rsa|pycrypto|pidcrypt	RSA communication between Javascript and Python	"<p>I am working on a prototype, so it needs to use RSA between a Chrome Extension and a Python Server. </p>  <p>So far I was planning on using <a href=""https://sourceforge.net/projects/pidcrypt/"" rel=""nofollow"">https://sourceforge.net/projects/pidcrypt/</a> and <a href=""https://www.dlitz.net/"" rel=""nofollow"">https://www.dlitz.net/</a>. However, while I can get decrypt and encrypt to work as per the documentation, I cannot get one to decrypt each other's message. </p>  <p>Can someone please, either suggest libraries that interoperate or let me know if I am doing something wrong with this libraries? </p>  <p>From what I worked out, pidder uses RSA PKCS#1 encryption-style padding (type 2). From googling, I sort of worked out that it is the type that PyCrypto calls PKCS1_OAEP. I am not too sure, but I have tried the standard and the other one two. </p>  <p>Help would be really appreciated! </p>"	2013-05-29 20:50:28.207 UTC	16824056	"<p>Would it be possible to use a HTTPS ajax connection instead? That way, you have end to end encryption without needing to worry about it yourself.</p>"			2013-05-29 21:22:55.63 UTC
16826304	python|robotframework	Can Not execute Python .py file using RobotFramework like Javascript	"<p>Has anyone found a method for executing their .py files from the Robot Framework like you can for JS? </p>  <p>RobotFramework: </p>  <blockquote>   <p>Executes the given JavaScript code.</p>      <p>code may contain multiple statements and the return value of last   statement is returned by this keyword.</p>      <p>code may be divided into multiple cells in the test data. In that   case, the parts are catenated together without adding spaces.</p>      <p>If code is an absolute path to an existing file, the JavaScript to   execute will be read from that file. Forward slashes work as a path   separator on all operating systems. The functionality to read the code   from a file was added in SeleniumLibrary 2.5.</p>      <p>Note that, by default, the code will be executed in the context of the   Selenium object itself, so this will refer to the Selenium object. Use   window to refer to the window of your application, e.g.   window.document.getElementById('foo').</p>      <p>Example: Execute JavaScript   window.my_js_function('arg1', 'arg2')   Execute JavaScript    ${CURDIR}/js_to_execute.js</p> </blockquote>  <p>It's bs that I can't run my .py files this way...</p>"	2013-05-30 00:59:25.33 UTC	16847883	"<p>The Execute Javascript extension isn't a part of RobotFramework, it's something added by the Selenium integration, it would therefore follow that you can't use Selenium to execute a .py file.</p>  <p>That said, RobotFramework is written in Python and can obviously be extended with a Python script.</p>  <p>Can you clear up what you're actually trying to achieve here though? My concern is that if you're using a .py file in your test state to validate your code, isn't that introducing an uncertainty that means that what you're testing is not the same as the code that gets executed when you release your project?</p>  <p>A bit more detail would help a lot here!</p>"			2013-05-31 00:11:14.483 UTC
16852885	javascript|html|ipython|ipython-notebook	IPython: Adding Javascript scripts to IPython notebook	"<p>As a part of a project, I need to embedd some javascripts inside an IPython module. This is what I want to do:</p>  <pre><code>from IPython.display import display,Javascript Javascript('echo(""sdfds"");',lib='/home/student/Gl.js') </code></pre>  <p>My Gl.js looks like this</p>  <pre><code>function echo(a){ alert(a); } </code></pre>  <p>Is there some way so that I can embed ""Gl.js"" and other such external scripts inside the notebook, such that I dont have to include them as 'lib' argument everytime I try to execute some Javascript code which requires to that library.</p>"	2013-05-31 08:21:33.05 UTC	68753377	"<p>You can use <a href=""http://n-riesco.github.io/ijavascript/"" rel=""nofollow noreferrer"">IJavascript</a> (a Javascript kernel for Jupyter notebooks).</p>"			2021-08-12 07:36:49.653 UTC
16852885	javascript|html|ipython|ipython-notebook	IPython: Adding Javascript scripts to IPython notebook	"<p>As a part of a project, I need to embedd some javascripts inside an IPython module. This is what I want to do:</p>  <pre><code>from IPython.display import display,Javascript Javascript('echo(""sdfds"");',lib='/home/student/Gl.js') </code></pre>  <p>My Gl.js looks like this</p>  <pre><code>function echo(a){ alert(a); } </code></pre>  <p>Is there some way so that I can embed ""Gl.js"" and other such external scripts inside the notebook, such that I dont have to include them as 'lib' argument everytime I try to execute some Javascript code which requires to that library.</p>"	2013-05-31 08:21:33.05 UTC	69029975	"<p>I was interested in calling JavaScript from a Jupyter code (Python) cell to process strings, and have the processed string output in the (same) code cell output; thanks to <a href=""https://stackoverflow.com/questions/48248987/inject-execute-js-code-to-ipython-notebook-and-forbid-its-further-execution-on-p"">Inject/execute JS code to IPython notebook and forbid its further execution on page reload</a> and <a href=""https://stackoverflow.com/questions/55773592/why-cannot-python-call-javascript-from-within-a-python-function"">Why cannot python call Javascript() from within a python function?</a> now I have this example:</p> <pre class=""lang-py prettyprint-override""><code>from IPython.display import display, Javascript, Markdown as md, HTML  def js_convert_str_html(instring_str):     js_convert = &quot;&quot;&quot;         &lt;div id=&quot;_my_special_div&quot;&gt;&lt;/div&gt;         &lt;script&gt;         var myinputstring = '{0}';         function do_convert_str_html(instr) {{             return instr.toUpperCase();         }}         document.getElementById(&quot;_my_special_div&quot;).textContent = do_convert_str_html(myinputstring);         &lt;/script&gt;     &quot;&quot;&quot;.format(instring_str)     return HTML(js_convert)  jsobj = js_convert_str_html(&quot;hello world&quot;) display(jsobj) </code></pre> <p>Note that the JavaScript-processed string does not get returned to Python <em>per se</em>; rather, the JavaScript itself creates its own div, and adds the result of the string conversion to it.</p>"			2021-09-02 12:07:18.32 UTC
16852885	javascript|html|ipython|ipython-notebook	IPython: Adding Javascript scripts to IPython notebook	"<p>As a part of a project, I need to embedd some javascripts inside an IPython module. This is what I want to do:</p>  <pre><code>from IPython.display import display,Javascript Javascript('echo(""sdfds"");',lib='/home/student/Gl.js') </code></pre>  <p>My Gl.js looks like this</p>  <pre><code>function echo(a){ alert(a); } </code></pre>  <p>Is there some way so that I can embed ""Gl.js"" and other such external scripts inside the notebook, such that I dont have to include them as 'lib' argument everytime I try to execute some Javascript code which requires to that library.</p>"	2013-05-31 08:21:33.05 UTC	31750982	"<p>As a very short-term solution, you can make use of the IPython <code>display()</code> and <code>HTML()</code> functions to inject some JavaScript into the page.</p>  <pre><code>from IPython.display import display, HTML js = ""&lt;script&gt;alert('Hello World!');&lt;/script&gt;"" display(HTML(js)) </code></pre>  <p>Although I <strong>do not recommend</strong> this over the official <code>custom.js</code> method, I do sometimes find it useful to quickly test something or to dynamically generate a small JavaScript snippet.</p>"			2015-07-31 16:31:31.337 UTC
16852885	javascript|html|ipython|ipython-notebook	IPython: Adding Javascript scripts to IPython notebook	"<p>As a part of a project, I need to embedd some javascripts inside an IPython module. This is what I want to do:</p>  <pre><code>from IPython.display import display,Javascript Javascript('echo(""sdfds"");',lib='/home/student/Gl.js') </code></pre>  <p>My Gl.js looks like this</p>  <pre><code>function echo(a){ alert(a); } </code></pre>  <p>Is there some way so that I can embed ""Gl.js"" and other such external scripts inside the notebook, such that I dont have to include them as 'lib' argument everytime I try to execute some Javascript code which requires to that library.</p>"	2013-05-31 08:21:33.05 UTC	53779330	"<p>For some reason, I have problems with IPython.display.Javascript.  Here is my alternative, which can handle both importing external .js files and running custom code:</p>  <pre><code>from IPython.display import display, HTML  def javascript(*st,file=None):     if len(st) == 1 and file is None:         s = st[0]     elif len(st) == 0 and file is not None:         s = open(file).read()     else:         raise ValueError('Pass either a string or file=.')     display(HTML(""&lt;script type='text/javascript'&gt;"" + s + ""&lt;/script&gt;"")) </code></pre>  <p>Usage is as follows:</p>  <pre><code>javascript('alert(""hi"")') javascript(file='Gl.js') javascript('echo(""sdfds"")') </code></pre>"			2018-12-14 11:57:45.017 UTC
16852885	javascript|html|ipython|ipython-notebook	IPython: Adding Javascript scripts to IPython notebook	"<p>As a part of a project, I need to embedd some javascripts inside an IPython module. This is what I want to do:</p>  <pre><code>from IPython.display import display,Javascript Javascript('echo(""sdfds"");',lib='/home/student/Gl.js') </code></pre>  <p>My Gl.js looks like this</p>  <pre><code>function echo(a){ alert(a); } </code></pre>  <p>Is there some way so that I can embed ""Gl.js"" and other such external scripts inside the notebook, such that I dont have to include them as 'lib' argument everytime I try to execute some Javascript code which requires to that library.</p>"	2013-05-31 08:21:33.05 UTC	21615038	"<p>I've been fighting with this problem for several days now, here's something that looks like it works; buyer beware though, this is a minimal working solution and it's neither pretty nor optimal - a nicer solution would be very welcome!</p>  <p>First, in <code>.ipython/&lt;profile&gt;/static/custom/myScript.js</code>, we do some require.js magic:</p>  <pre><code>define(function(){      var foo = function(){             console.log('bar');         }      return {         foo : foo     } }); </code></pre>  <p>Copy this pattern for as many functions as you like.  Then, in <code>.ipython/&lt;profile&gt;/static/custom/custom.js</code>, drag those out into something persistent:</p>  <pre><code>$([IPython.events]).on('notebook_loaded.Notebook', function(){      require(['custom/myScript'], function(custom){         window.foo = custom.foo;     } );  }); </code></pre>  <p>Yes, I am a horrible person for throwing stuff on the window object, namespace things as you deem appropriate.  But now in the notebook, a cell like</p>  <pre><code>%%javascript  foo(); </code></pre>  <p>should do exactly what it looks like it should, without the user having to explicitly import your JS.  I would love to see a simpler solution for this (plz devs can we plz have <code>$.getScript('/static/custom/util.js');</code> in <code>custom.js</code> to load up a bunch of global JS functions) - but this is the best I've got for now.  This singing and dancing aside, HUGE ups to the IPython notebook team, this is an awesome platform!</p>"			2014-02-06 22:03:29.533 UTC
16852885	javascript|html|ipython|ipython-notebook	IPython: Adding Javascript scripts to IPython notebook	"<p>As a part of a project, I need to embedd some javascripts inside an IPython module. This is what I want to do:</p>  <pre><code>from IPython.display import display,Javascript Javascript('echo(""sdfds"");',lib='/home/student/Gl.js') </code></pre>  <p>My Gl.js looks like this</p>  <pre><code>function echo(a){ alert(a); } </code></pre>  <p>Is there some way so that I can embed ""Gl.js"" and other such external scripts inside the notebook, such that I dont have to include them as 'lib' argument everytime I try to execute some Javascript code which requires to that library.</p>"	2013-05-31 08:21:33.05 UTC	47414836	"<h2>Embedding D3 in an IPython Notebook</h2>  <ul> <li><a href=""https://blog.thedataincubator.com/2015/08/embedding-d3-in-an-ipython-notebook/"" rel=""noreferrer"">https://blog.thedataincubator.com/2015/08/embedding-d3-in-an-ipython-notebook/</a></li> </ul>  <p>To summarize the code.</p>  <p>Import the script:</p>  <pre><code>%%javascript require.config({   paths: {       d3: '//cdnjs.cloudflare.com/ajax/libs/d3/3.4.8/d3.min'   } }); </code></pre>  <p>Add an element like this:</p>  <pre><code>%%javascript element.append(""&lt;div id='chart1'&gt;&lt;/div&gt;""); </code></pre>  <p>Or this:</p>  <pre><code>from IPython.display import Javascript #runs arbitrary javascript, client-side Javascript(""""""            window.vizObj={};            """""".format(df.to_json())) </code></pre>  <h2>IPython Notebook: Javascript/Python Bi-directional Communication</h2>  <ul> <li><a href=""http://jakevdp.github.io/blog/2013/06/01/ipython-notebook-javascript-python-communication/"" rel=""noreferrer"">http://jakevdp.github.io/blog/2013/06/01/ipython-notebook-javascript-python-communication/</a></li> </ul>  <p>A more extensive post explaining how to access Python variables in JavaScript and vice versa.</p>"			2017-11-21 13:54:24.363 UTC
16852885	javascript|html|ipython|ipython-notebook	IPython: Adding Javascript scripts to IPython notebook	"<p>As a part of a project, I need to embedd some javascripts inside an IPython module. This is what I want to do:</p>  <pre><code>from IPython.display import display,Javascript Javascript('echo(""sdfds"");',lib='/home/student/Gl.js') </code></pre>  <p>My Gl.js looks like this</p>  <pre><code>function echo(a){ alert(a); } </code></pre>  <p>Is there some way so that I can embed ""Gl.js"" and other such external scripts inside the notebook, such that I dont have to include them as 'lib' argument everytime I try to execute some Javascript code which requires to that library.</p>"	2013-05-31 08:21:33.05 UTC	16853609	"<p>Not out of the box by installing a package, at least for now.  The way to do it is to use <code>custom.js</code> and jQuery <code>getScript</code> to inject the js into the notebook. </p>  <p>I explicitly stay vague on how to do it, as it is a dev feature changing from time to time. </p>  <p>What you should know is that the <code>static</code> folder in user profile is <code>merged</code> with webserver static assets allowing you to access any file that are in this folder by asking for the right url.</p>  <p>Also this question has been asked a few hours ago on IPython weekly video ""<a href=""http://www.youtube.com/watch?v=9tel25TGqws&amp;feature=youtu.be"" rel=""nofollow"">lab meeting</a>"" broadcasted live and disponible on youtube (you might have a longer answer), I've opened  discussion with the author of the question <a href=""https://github.com/wolever/browsercast/issues/7"" rel=""nofollow"">here</a></p>"			2013-05-31 09:02:52.69 UTC
16863773	python|selenium	Python Selenium Javascript Link Click Fails to Execute	"<p>I am using Selenium for Python with the PhantomJS Ghost Driver in order to click links which have Javascript in the href, such as the links from <a href=""https://structuredginniemaes.ginnienet.com/Download/"" rel=""nofollow"">this</a> link.  I can get the link just fine as an element, but when I try to click it, things go wrong.  Here's some code (note - url is a list, where the first element is the Jscript link and the second is the link text)</p>  <pre><code>def get_jscript_down(self,url):     driver = webdriver.PhantomJS()     print(self.exact_url)     driver.get(self.exact_url)     elements = driver.find_elements_by_tag_name(""a"")     for ele in elements:         if ele.text == url[1].encode(""utf-8"").replace(""  "","" ""):             break     ele.click()     print(""Cannot yet download %s"" % url)      return False </code></pre>  <p>Everything works as I need it to except for ele.click().  When I execute that, I get an ugly looking WebDriverException.</p>  <p><code> selenium.common.exceptions.WebDriverException: Message: u'Error Message => \'Click failed: ReferenceError: Can\'t find variable: __doPostBack\'\n caused by Request => {""headers"":{""Accept"":""application/json"",""Accept-Encoding"":""identity"",""Connection"":""close"",""Content-Length"":""81"",""Content-Type"":""application/json;charset=UTF-8"",""Host"":""127.0.0.1:34441"",""User-Agent"":""Python-urllib/2.6""},""httpVersion"":""1.1"",""method"":""POST"",""post"":""{\""sessionId\"": \""71c20b50-ca21-11e2-a03c-f58c49e5a1bc\"", \""id\"": \"":wdc:1370025577147\""}"",""url"":""/click"",""urlParsed"":{""anchor"":"""",""query"":"""",""file"":""click"",""directory"":""/"",""path"":""/click"",""relative"":""/click"",""port"":"""",""host"":"""",""password"":"""",""user"":"""",""userInfo"":"""",""authority"":"""",""protocol"":"""",""source"":""/click"",""queryKey"":{},""chunks"":[""click""]},""urlOriginal"":""/session/71c20b50-ca21-11e2-a03c-f58c49e5a1bc/element/%3Awdc%3A1370025577147/click""}' ; Screenshot: available via screen  </code></p>  <p>I'm not really sure why this click is failing.  As far as I have read, I should be okay using click in that way.  Below is the relevant portion of the stack trace (from right before things start breaking to the end)</p>  <pre> line 283, in get_jscript_down     ele.click()   File ""/usr/local/lib/python2.6/dist-packages/selenium/webdriver/remote/webelement.py"", line 54, in click     self._execute(Command.CLICK_ELEMENT)   File ""/usr/local/lib/python2.6/dist-packages/selenium/webdriver/remote/webelement.py"", line 228, in _execute     return self._parent.execute(command, params)   File ""/usr/local/lib/python2.6/dist-packages/selenium/webdriver/remote/webdriver.py"", line 165, in execute     self.error_handler.check_response(response)   File ""/usr/local/lib/python2.6/dist-packages/selenium/webdriver/remote/errorhandler.py"", line 158, in check_response     raise exception_class(message, screen, stacktrace) </pre>  <p>Any ideas will be much appreciated.  I'm fairly stumped.</p>"	2013-05-31 18:41:51.3 UTC	68529527	"<p>The problem is that the <code>ele.click()</code> is not in the loop.</p> <p>Try this:</p> <pre><code>def get_jscript_down(self,url):     try:         driver = webdriver.PhantomJS()     except:         print(&quot;[ERROR] Your Browser Have a problem&quot;)     print(self.exact_url)     try:         driver.get(self.exact_url)     except:         print(&quot;[ERROR] Check Your Internet Connection , Cannot Open \&quot;{0}\&quot;&quot;.format(self.exact_url))     try:         elements = driver.find_elements_by_tag_name(&quot;a&quot;)     except:         print(&quot;[ERROR] Cannot Find Elements&quot;)     for elem in elements:         if elem.text == url[1].encode(&quot;utf-8&quot;).replace(&quot;  &quot;,&quot; &quot;):             break         else:             elem.click()     print(&quot;Cannot yet download {0}&quot;.format(url))     return False </code></pre>"			2021-07-26 12:07:19.527 UTC
16863773	python|selenium	Python Selenium Javascript Link Click Fails to Execute	"<p>I am using Selenium for Python with the PhantomJS Ghost Driver in order to click links which have Javascript in the href, such as the links from <a href=""https://structuredginniemaes.ginnienet.com/Download/"" rel=""nofollow"">this</a> link.  I can get the link just fine as an element, but when I try to click it, things go wrong.  Here's some code (note - url is a list, where the first element is the Jscript link and the second is the link text)</p>  <pre><code>def get_jscript_down(self,url):     driver = webdriver.PhantomJS()     print(self.exact_url)     driver.get(self.exact_url)     elements = driver.find_elements_by_tag_name(""a"")     for ele in elements:         if ele.text == url[1].encode(""utf-8"").replace(""  "","" ""):             break     ele.click()     print(""Cannot yet download %s"" % url)      return False </code></pre>  <p>Everything works as I need it to except for ele.click().  When I execute that, I get an ugly looking WebDriverException.</p>  <p><code> selenium.common.exceptions.WebDriverException: Message: u'Error Message => \'Click failed: ReferenceError: Can\'t find variable: __doPostBack\'\n caused by Request => {""headers"":{""Accept"":""application/json"",""Accept-Encoding"":""identity"",""Connection"":""close"",""Content-Length"":""81"",""Content-Type"":""application/json;charset=UTF-8"",""Host"":""127.0.0.1:34441"",""User-Agent"":""Python-urllib/2.6""},""httpVersion"":""1.1"",""method"":""POST"",""post"":""{\""sessionId\"": \""71c20b50-ca21-11e2-a03c-f58c49e5a1bc\"", \""id\"": \"":wdc:1370025577147\""}"",""url"":""/click"",""urlParsed"":{""anchor"":"""",""query"":"""",""file"":""click"",""directory"":""/"",""path"":""/click"",""relative"":""/click"",""port"":"""",""host"":"""",""password"":"""",""user"":"""",""userInfo"":"""",""authority"":"""",""protocol"":"""",""source"":""/click"",""queryKey"":{},""chunks"":[""click""]},""urlOriginal"":""/session/71c20b50-ca21-11e2-a03c-f58c49e5a1bc/element/%3Awdc%3A1370025577147/click""}' ; Screenshot: available via screen  </code></p>  <p>I'm not really sure why this click is failing.  As far as I have read, I should be okay using click in that way.  Below is the relevant portion of the stack trace (from right before things start breaking to the end)</p>  <pre> line 283, in get_jscript_down     ele.click()   File ""/usr/local/lib/python2.6/dist-packages/selenium/webdriver/remote/webelement.py"", line 54, in click     self._execute(Command.CLICK_ELEMENT)   File ""/usr/local/lib/python2.6/dist-packages/selenium/webdriver/remote/webelement.py"", line 228, in _execute     return self._parent.execute(command, params)   File ""/usr/local/lib/python2.6/dist-packages/selenium/webdriver/remote/webdriver.py"", line 165, in execute     self.error_handler.check_response(response)   File ""/usr/local/lib/python2.6/dist-packages/selenium/webdriver/remote/errorhandler.py"", line 158, in check_response     raise exception_class(message, screen, stacktrace) </pre>  <p>Any ideas will be much appreciated.  I'm fairly stumped.</p>"	2013-05-31 18:41:51.3 UTC	17893076	"<p>I got the same error when clicking ""Privatperson"" on <a href=""http://dustin.no"" rel=""nofollow"">this page</a>. The button has id 'btnSelectB2C'. What I ended up doing was using submit on the element:</p>  <pre><code>driver.find_element(:id, 'btnSelectB2C').submit </code></pre>  <p>(This is Ruby code, but I assume it should be trivial to adapt if it is applicable in your case.)</p>"			2013-07-27 00:35:02.947 UTC
16892223	javascript|python	sha1 function in Javascript to python	"<p>How to convert the following js to python?</p>  <pre><code>function sha1(str1,raw) {     var hexcase = 0;     var chrsz   = 8;     str1 = utf16to8(str1);      function utf16to8(str)      {         var out, i, len, c;          out = """";         len = str.length;         for(i = 0; i &lt; len; i++)          {             c = str.charCodeAt(i);             if ((c &gt;= 0x0001) &amp;&amp; (c &lt;= 0x007F))              {                 out += str.charAt(i);             }              else if (c &gt; 0x07FF)              {                 out += String.fromCharCode(0xE0 | ((c &gt;&gt; 12) &amp; 0x0F));                 out += String.fromCharCode(0x80 | ((c &gt;&gt;  6) &amp; 0x3F));                 out += String.fromCharCode(0x80 | ((c &gt;&gt;  0) &amp; 0x3F));             }              else              {                 out += String.fromCharCode(0xC0 | ((c &gt;&gt;  6) &amp; 0x1F));                 out += String.fromCharCode(0x80 | ((c &gt;&gt;  0) &amp; 0x3F));             }         }         return out;     }      function hex_sha1(s)     {         return binb2hex(core_sha1(str2binb(s),s.length * chrsz));     }      function str_sha1(s)     {         return binb2str(core_sha1(str2binb(s),s.length * chrsz));     }      function binb2hex(binarray)      {         var hex_tab = hexcase ? ""0123456789ABCDEF"" : ""0123456789abcdef"";         var str = """";         for(var i = 0; i &lt; binarray.length * 4; i++)          {             str += hex_tab.charAt((binarray[i&gt;&gt;2] &gt;&gt; ((3 - i%4)*8+4)) &amp; 0xF) +                     hex_tab.charAt((binarray[i&gt;&gt;2] &gt;&gt; ((3 - i%4)*8 )) &amp; 0xF);         }         return str;     }      function binb2str(bin)      {         var str = """";         var mask = (1 &lt;&lt; chrsz) - 1;         for(var i = 0; i &lt; bin.length * 32; i += chrsz)             str += String.fromCharCode((bin[i&gt;&gt;5] &gt;&gt;&gt; (32 - chrsz - i%32)) &amp; mask);         return str;     }      function str2binb(str2)      {         var bin = Array();         var mask = (1 &lt;&lt; chrsz) - 1;         for(var i = 0; i &lt; str2.length * chrsz; i += chrsz)             bin[i&gt;&gt;5] |= (str2.charCodeAt(i / chrsz) &amp; mask) &lt;&lt; (32 - chrsz - i%32);         return bin;     }      function safe_add(x, y)      {         var lsw = (x &amp; 0xFFFF) + (y &amp; 0xFFFF);         var msw = (x &gt;&gt; 16) + (y &gt;&gt; 16) + (lsw &gt;&gt; 16);         return (msw &lt;&lt; 16) | (lsw &amp; 0xFFFF);     }      function rol(num, cnt)      {         return (num &lt;&lt; cnt) | (num &gt;&gt;&gt; (32 - cnt));     }      function sha1_ft(t, b, c, d)      {         if(t &lt; 20)              return (b &amp; c) | ((~b) &amp; d);         if(t &lt; 40)              return b ^ c ^ d;         if(t &lt; 60)              return (b &amp; c) | (b &amp; d) | (c &amp; d);         return b ^ c ^ d;     }      function sha1_kt(t)      {         return (t &lt; 20) ? 1518500249 : (t &lt; 40) ? 1859775393 : (t &lt; 60) ? -1894007588 : -899497514;     }      function core_sha1(x, len)      {         x[len &gt;&gt; 5] |= 0x80 &lt;&lt; (24 - len % 32);         x[((len + 64 &gt;&gt; 9) &lt;&lt; 4) + 15] = len;          var w = Array(80);         var a = 1732584193;         var b = -271733879;         var c = -1732584194;         var d = 271733878;         var e = -1009589776;          for(var i = 0; i &lt; x.length; i += 16)          {             var olda = a;             var oldb = b;             var oldc = c;             var oldd = d;             var olde = e;              for(var j = 0; j &lt; 80; j++)              {                 if(j &lt; 16)                      w[j] = x[i + j];                 else                      w[j] = rol(w[j-3] ^ w[j-8] ^ w[j-14] ^ w[j-16], 1);                 var t = safe_add(safe_add(rol(a, 5), sha1_ft(j, b, c, d)), safe_add(safe_add(e, w[j]), sha1_kt(j)));                 e = d;                 d = c;                 c = rol(b, 30);                 b = a;                 a = t;             }              a = safe_add(a, olda);             b = safe_add(b, oldb);             c = safe_add(c, oldc);             d = safe_add(d, oldd);             e = safe_add(e, olde);         }         return Array(a, b, c, d, e);     }      if (raw == true)     {         return str_sha1(str1);     }     else     {         return hex_sha1(str1);     } } </code></pre>"	2013-06-03 07:52:26.23 UTC	16892721	"<p>The standard library <a href=""http://docs.python.org/2/library/hashlib.html"" rel=""nofollow"">hashlib</a> module includes sha1:</p>  <pre><code>&gt;&gt;&gt; import hashlib &gt;&gt;&gt; h = hashlib.sha1(""lkjlkjlkj"") &gt;&gt;&gt; h.digest() ""N]\x96\xb3:a^6\xa9A}.\x92\xea\xf6\xaa\x19'b{"" &gt;&gt;&gt; h.hexdigest() '4e5d96b33a615e36a9417d2e92eaf6aa1927627b' </code></pre>"			2013-06-03 08:29:47.73 UTC
16894903	javascript|python|text|lines	Aggregate text field from several lines (javascript/python)	"<p>First of all, I want you to know that I am relatively new at coding and I have superficial knowledge of Python and Javascript only.</p>  <p>I have this huge txt containing names and names of teams where data is structured as follows:</p>  <pre><code>Name1, Surname1  Team1                   Team2                   Team3 Name2, Surname2  Team2                   Team4 Name3, Surname3  Team1                   Team5 </code></pre>  <p>Ideally, I would like to extract my data searching by Team# and returning the name of the people belonging to it. </p>  <p>Eg. I need components of team1 and team2. My new txt output should look like this:</p>  <pre><code>Team1, Name1, Surname1, Name3, Surname3 Team2, Name1, Surname1, Name2, Surname2 </code></pre>  <p>Thank you very much for your help</p>"	2013-06-03 10:42:53.173 UTC	16896353	"<p>A Python version could look this:</p>  <pre><code>fobj_in = io.StringIO(""""""Name1, Surname1  Team1                   Team2                   Team3 Name2, Surname2  Team2                   Team4 Name3, Surname3  Team1                   Team5"""""")  fobj_out = io.StringIO()  from collections import defaultdict  teams = defaultdict(list)  for line in fobj_in:     items = line.split()     if len(items) == 3:         name = items[:2]         team = items[2]     else:         team = items[0]     teams[team].append(name)  for team_name in sorted(teams.keys()):     fobj_out.write(team_name + ', ')     for name in teams[team_name][:-1]:         fobj_out.write('{} {}, '.format(name[0], name[1]))     name = teams[team_name][-1]     fobj_out.write('{} {}\n'.format(name[0], name[1]))   fobj_out.seek(0) print(fobj_out.read()) </code></pre>  <p>Output:</p>  <pre><code>Team1, Name1, Surname1, Name3, Surname3 Team2, Name1, Surname1, Name2, Surname2 Team3, Name1, Surname1 Team4, Name2, Surname2 Team5, Name3, Surname3 </code></pre>  <p>Just do this to read from and write to an actual file:</p>  <pre><code>fobj_in = open('in_file.txt') fobj_out = open('out_file.txt', 'w') </code></pre>  <h1>EDIT</h1>  <p><em>Note</em>: The sample data seem to contain no case that woud result in multiple names on one line in the output.</p>  <p>With <a href=""https://www.dropbox.com/s/sl3tu7m77gei987/sample.txt"" rel=""nofollow"">this input data</a>, we need to change the code:</p>  <pre><code>from collections import defaultdict teams = defaultdict(list) for line in fobj_in:     if not line.strip():         continue     items = [entry.strip() for entry in line.split('\t') if entry]     if len(items) == 2:         name = items[0]         team = items[1]     else:         team = items[0]     teams[team].append(name) for team_name in sorted(teams.keys()):     fobj_out.write(team_name + ', ')     for name in teams[team_name][:-1]:         fobj_out.write('{}, '.format(name))     name = teams[team_name][-1]     fobj_out.write('{}\n'.format(name)) </code></pre>  <p>The resulting file content looks like this:</p>  <pre><code>""Décore ta vie"" (2003), Boilard, Naggy ""Mouki"" (2010), Boileau, Sonia A chacun sa place (2011), Boinem, Victor Emmanuel Absence (2009) (V), Boillat, Patricia C.A.L.L.E. (2005), Boillat, Patricia Comment devenir un trou de cul et enfin plaire aux femmes (2004), Boire, Roger Couleur de peau: Miel (2012), Boileau, Laurent Hergé:Les aventures de Tintin (2004), Boillot, Olivier Isola, là dove si parla la lingua di Bacco (2011)  (co-director), Boillat, Patricia L'île (2011), Boillot, Olivier La beauté fatale et féroce... (1996), Boire, Roger Last Call Indian (2010), Boileau, Sonia Le Temple Oublié (2005), Boillot, Olivier Le pied tendre (1988), Boire, Roger Legit (2006), Boinski, James W. Nubes (2010), Boira, Francisco Questions nationales (2009), Boire, Roger Reconciling Rwanda (2007), Boiko, Patricia Soviet Gymnasts (1955), Boikov, Vladimir The Corporal's Diary (2008) (V)  (head director), Boiko, Patricia Un gars ben chanceux (1977), Boire, Roger </code></pre>"			2013-06-03 12:06:56.667 UTC
16996061	javascript|python|json|web.py	"suppose output python list as javascript list in html, but the char ""&#39;"" is printed"	"<p>I have a python list: categoriesPython, which is ['Firefox 2.0', 'Firefox 3.0', 'Firefox 3.5', 'Firefox 3.6', 'Firefox 4.0'], I did(I am using web.py):</p>  <pre><code>data: {        name: 'Firefox versions',        categories: $categoriesPython,        version: [0.20, 0.83, 1.58, 13.12, 5.43]       } </code></pre>  <p>I expected to get:</p>  <pre><code>data: {        name: 'Firefox versions',        categories: ['Firefox 2.0', 'Firefox 3.0', 'Firefox 3.5', 'Firefox 3.6', 'Firefox 4.0'],        version: [0.20, 0.83, 1.58, 13.12, 5.43]       } </code></pre>  <p>However, I got:</p>  <pre><code>data: {        name: 'Firefox versions',        categories: [&amp;#39;Firefox 2.0&amp;#39;, &amp;#39;Firefox 3.0&amp;#39;, &amp;#39;Firefox 3.5&amp;#39;, &amp;#39;Firefox 3.6&amp;#39;, &amp;#39;Firefox 4.0&amp;#39;],        version: [0.20, 0.83, 1.58, 13.12, 5.43]       } </code></pre>  <p>1. Because data is Json format, there cannot be have any assign value, for example:</p>  <pre><code>    data: {        name: 'Firefox versions',        categorieData.push('$categoriesPython');        categories: categorieData,        version: [0.20, 0.83, 1.58, 13.12, 5.43]       } </code></pre>  <p>also, I do not want to convert python list to javascript list, because the list have more than 200 value, if convert, there must be have more than 200 categorieData.push('$categoriesPython');, the code will be redundant. </p>  <p>How can I get the expected result?</p>"	2013-06-08 04:31:03.423 UTC	16996097	"<p>From the docs on <a href=""http://webpy.org/docs/0.3/templetor#filtering"" rel=""nofollow"">Filtering</a> it would appear that </p>  <pre><code>$:categoriesPython </code></pre>  <p>might do the trick</p>  <blockquote>   <p>By default, Templetor uses web.websafe filter to do HTML-encoding.</p>      <p>render.hello(""1 &lt; 2"") ""Hello 1 &lt; 2"" </p>      <p>To turnoff filter use : after $. For example:  </p>      <p>The following will not be html escaped. $:form.render()</p> </blockquote>"			2013-06-08 04:36:54.793 UTC
17054441	python|html|cgi	Use value from javascript on html page to execute python script	<p>I have a problem. I have a project that involves sending a value from a web page to a web server and using that value to generate a voltage by commanding a digital to analog converter. For the server side I am using a Python script that works very well and I have created a simple web page in which I can enter the value wanted. But the link between them is missing. I am trying to understand CGI scripts to use them for parsing the value from the web page to the Python script but with no luck. Does anyone have any other ideas or can anyone explain CGI for beginners? Thank you.</p>	2013-06-11 21:49:26.803 UTC	17054897	"<p>Here is a simple Python script that pipes the output of a locally executed command (<code>dir</code> on a Windows computer in this case) via a web request (using the excellent <a href=""http://webpy.org/"" rel=""nofollow"">web.py</a> library):</p>  <pre><code>import web from subprocess import check_output  urls = (     '/', 'index' ) app = web.application(urls, globals())  class index:     def GET(self):         return '&lt;pre&gt;'+check_output('dir', shell=True)+'&lt;/pre&gt;'  if __name__ == ""__main__"":     app.run() </code></pre>"			2013-06-11 22:27:11.86 UTC
17064051	javascript|python|node.js|cython|emscripten	Compiling trivial python program to javascript using cython and emscripten on mac	"<p><strong>I am trying to generate javascript from python using cython and emscripten.</strong></p>  <p><code>hello.py</code>: </p>  <pre><code>print 'Hello world.' </code></pre>  <p>Then I compile this to c using cython</p>  <pre><code>&gt;&gt;&gt; cython --embed hello.py -v </code></pre>  <p>This generates a <code>hello.c</code> file which I compile with</p>  <pre><code>&gt;&gt;&gt; gcc hello.c -I/usr/include/python2.7/ -lpython2.7 </code></pre>  <p>This works for gcc or clang. When I execute <code>./a.out</code> I get the expected output</p>  <pre><code>&gt;&gt;&gt; ./a.out &gt;&gt;&gt; Hello world </code></pre>  <p>next I want to compile <code>hello.c</code> to javascript using emscripten</p>  <pre><code>&gt;&gt;&gt; emcc hello.c -I/usr/include/python2.7/ -lpython2.7 </code></pre>  <p>I get</p>  <pre><code>&gt;&gt;&gt; WARNING  emcc: -I or -L of an absolute path encountered.  &gt;&gt;&gt; If this is to a local system header/library, it may cause problems  &gt;&gt;&gt; (local system files make sense for compiling natively on your system,  &gt;&gt;&gt; but not necessarily to JavaScript) &gt;&gt;&gt; clang: warning: argument unused during compilation: '-nostdinc++' </code></pre>  <p>It still generates a <code>a.out.js</code> file which I try to run in node.js</p>  <pre><code>&gt;&gt;&gt; node a.out.js </code></pre>  <p>I get a reference error </p>  <pre><code>&gt;&gt;&gt; ReferenceError: _Py_SetProgramName is not defined </code></pre>  <p>I tried changing the generated javscript a little bit, but basically I think all the <code>_Py_</code> functions are not defined.</p>  <p>Does anyone have any experience with this, or any suggested fixes?</p>"	2013-06-12 11:15:00.297 UTC	73186651	"<p>Pyodide has finally (many years later) properly solved this problem.  See <a href=""https://pyodide.org/en/stable/"" rel=""nofollow noreferrer"">https://pyodide.org/en/stable/</a>   Many of the components of Pyodide are written partly using Cython.</p>"			2022-07-31 20:20:54.313 UTC
17064051	javascript|python|node.js|cython|emscripten	Compiling trivial python program to javascript using cython and emscripten on mac	"<p><strong>I am trying to generate javascript from python using cython and emscripten.</strong></p>  <p><code>hello.py</code>: </p>  <pre><code>print 'Hello world.' </code></pre>  <p>Then I compile this to c using cython</p>  <pre><code>&gt;&gt;&gt; cython --embed hello.py -v </code></pre>  <p>This generates a <code>hello.c</code> file which I compile with</p>  <pre><code>&gt;&gt;&gt; gcc hello.c -I/usr/include/python2.7/ -lpython2.7 </code></pre>  <p>This works for gcc or clang. When I execute <code>./a.out</code> I get the expected output</p>  <pre><code>&gt;&gt;&gt; ./a.out &gt;&gt;&gt; Hello world </code></pre>  <p>next I want to compile <code>hello.c</code> to javascript using emscripten</p>  <pre><code>&gt;&gt;&gt; emcc hello.c -I/usr/include/python2.7/ -lpython2.7 </code></pre>  <p>I get</p>  <pre><code>&gt;&gt;&gt; WARNING  emcc: -I or -L of an absolute path encountered.  &gt;&gt;&gt; If this is to a local system header/library, it may cause problems  &gt;&gt;&gt; (local system files make sense for compiling natively on your system,  &gt;&gt;&gt; but not necessarily to JavaScript) &gt;&gt;&gt; clang: warning: argument unused during compilation: '-nostdinc++' </code></pre>  <p>It still generates a <code>a.out.js</code> file which I try to run in node.js</p>  <pre><code>&gt;&gt;&gt; node a.out.js </code></pre>  <p>I get a reference error </p>  <pre><code>&gt;&gt;&gt; ReferenceError: _Py_SetProgramName is not defined </code></pre>  <p>I tried changing the generated javscript a little bit, but basically I think all the <code>_Py_</code> functions are not defined.</p>  <p>Does anyone have any experience with this, or any suggested fixes?</p>"	2013-06-12 11:15:00.297 UTC	17064237	"<p>To make it works I think you need whole Python compiled by <code>emcc</code> to JavaScript to have proper libraries compiled into code that <code>node.js</code> can handle. Otherwise binary libraries you have remain intact. You cannot mix that.</p>  <p>In fact <code>emcc</code> informs you about it with the warning if you read it carefully.</p>  <p>You need to find out how to <code>cross-compile</code> Python into javascript prior to compiling your own scripts. This is done already, because I saw it on <a href=""http://repl.it/"" rel=""nofollow"">repl.it</a>.</p>"			2013-06-12 11:25:18.807 UTC
17064051	javascript|python|node.js|cython|emscripten	Compiling trivial python program to javascript using cython and emscripten on mac	"<p><strong>I am trying to generate javascript from python using cython and emscripten.</strong></p>  <p><code>hello.py</code>: </p>  <pre><code>print 'Hello world.' </code></pre>  <p>Then I compile this to c using cython</p>  <pre><code>&gt;&gt;&gt; cython --embed hello.py -v </code></pre>  <p>This generates a <code>hello.c</code> file which I compile with</p>  <pre><code>&gt;&gt;&gt; gcc hello.c -I/usr/include/python2.7/ -lpython2.7 </code></pre>  <p>This works for gcc or clang. When I execute <code>./a.out</code> I get the expected output</p>  <pre><code>&gt;&gt;&gt; ./a.out &gt;&gt;&gt; Hello world </code></pre>  <p>next I want to compile <code>hello.c</code> to javascript using emscripten</p>  <pre><code>&gt;&gt;&gt; emcc hello.c -I/usr/include/python2.7/ -lpython2.7 </code></pre>  <p>I get</p>  <pre><code>&gt;&gt;&gt; WARNING  emcc: -I or -L of an absolute path encountered.  &gt;&gt;&gt; If this is to a local system header/library, it may cause problems  &gt;&gt;&gt; (local system files make sense for compiling natively on your system,  &gt;&gt;&gt; but not necessarily to JavaScript) &gt;&gt;&gt; clang: warning: argument unused during compilation: '-nostdinc++' </code></pre>  <p>It still generates a <code>a.out.js</code> file which I try to run in node.js</p>  <pre><code>&gt;&gt;&gt; node a.out.js </code></pre>  <p>I get a reference error </p>  <pre><code>&gt;&gt;&gt; ReferenceError: _Py_SetProgramName is not defined </code></pre>  <p>I tried changing the generated javscript a little bit, but basically I think all the <code>_Py_</code> functions are not defined.</p>  <p>Does anyone have any experience with this, or any suggested fixes?</p>"	2013-06-12 11:15:00.297 UTC	17064442	"<p>You will need to compile the embedabble python library <code>-lpython2.7</code> to javacsript too so that it is available for your javacsript program.</p>  <p>Thankfully, the work to do this has already been done in <a href=""https://github.com/replit/empythoned"">empythoned</a>. Which provides an embedded python compiled to Javascript. </p>  <p>You should be able to use empythoned to provide the missing <code>_Py_SetProgramName</code></p>"			2013-06-12 11:34:43.143 UTC
17075713	javascript|python|html|google-app-engine	html & javascript to use Python variables in GAE	"<p>The code bellow is a part of a Google App Engine project I am building with Python. I am taking input of x and y(not seen here), and printing it here as a table with its x,y coordinate as the text in the table. Additionally, I need to make it so that when you click on a cell of the table, it calls a function which will return a string for it to pop up with. For simplicity at this time it's just the X and Y again.<br> So in short, I need a way to pass a variable from Python to HTML so it can be passed to javascript. How can I do that? </p>  <pre><code>def testFunc(self, x, y):         return str(x) + "" , "" + str(y)     def drawTable(self, row , col):         write = self.response.write         write(row)         write(col)          write(""&lt;html&gt;&lt;body&gt;&lt;script&gt; function tableInfo() { alert(\""""+ self.testFunc(x, y)+""""\"");}&lt;/script&gt;&lt;table&gt;"")         for y in range(row):             write(""&lt;tr&gt;"")             for x in range(col):                 cell = ""&lt;td bgcolor=\""#00FF00\"" onclick = \""tableInfo(x, y)\""&gt;"" + str(x) + "" "" + str(y) + ""&lt;/td&gt;""                 if x % 2 == 0:                     cell = ""&lt;td bgcolor=\""#FF0000\"" onclick = \""tableInfo(x, y)\""&gt;"" + str(x) + "" "" + str(y) + ""&lt;/td&gt;""                 write(cell)             write(""&lt;/tr&gt;"")             write(""&lt;/table&gt;&lt;/body&gt;&lt;/html&gt;"")   </code></pre>"	2013-06-12 21:31:01.567 UTC	17075855	"<p>You can write Javascript, substituting values from Python:</p>  <pre><code>write(""""""&lt;html&gt;&lt;head&gt;     &lt;script&gt;     var x = %d, y = %d;     &lt;/script&gt;     &lt;/head&gt;"""""" % (x, y)) </code></pre>  <p>Now you can use <code>x</code> and <code>y</code> in other Javascript code.</p>"			2013-06-12 21:41:30.073 UTC
17085796	javascript|python|web-scraping|web-crawler|mechanize-python	Python scraper mechanize/javascript	"<p>I have to scrape all info for former US governors from <a href=""http://www.nga.org/cms/FormerGovBios"" rel=""nofollow"">this site</a>. However, to read out the results and then follow the links, I need to access the different results pages, or, preferably, simply set the results limit shown per page to the maximum of 100 (I don't think there are more than 100 results for each state). However, the page info seems to use javascript, is not part of a form and it seems I cannot access it as a control.</p>  <p>Any info on how to proceed? I am pretty new to python, only use it for tasks like this from time to time. This is some simple code which iterates through the main form.</p>  <pre><code>import mechanize import lxml.html import csv  site = ""http://www.nga.org/cms/FormerGovBios"" output = csv.writer(open(r'output.csv','wb')) br = mechanize.Browser()  response = br.open(site) br.select_form(name=""governorsSearchForm"") states = br.find_control(id=""states-field"", type=""select"").items for pos, item in enumerate(states[1:2]):      statename = str([label.text for label in item.get_labels()])     print pos, item.name, statename, len(states)     br.select_form(name=""governorsSearchForm"")     br[""state""] = [item.name]     response = br.submit(name=""submit"", type=""submit"")     # now set page limit to 100, get links and descriptions\     # and follow each link to get information     for form in br.forms():         print ""Form name:"", form.name         print form, ""\n""     for link in br.links():         print link.text, link.url </code></pre>"	2013-06-13 11:19:23.127 UTC	17093410	"<p>I would do that with phantomjs <a href=""http://phantomjs.org/"" rel=""nofollow"">http://phantomjs.org/</a> (javascript) see <a href=""https://github.com/ariya/phantomjs/wiki/Page-Automation"" rel=""nofollow"">https://github.com/ariya/phantomjs/wiki/Page-Automation</a></p>"			2013-06-13 17:29:48.26 UTC
17085796	javascript|python|web-scraping|web-crawler|mechanize-python	Python scraper mechanize/javascript	"<p>I have to scrape all info for former US governors from <a href=""http://www.nga.org/cms/FormerGovBios"" rel=""nofollow"">this site</a>. However, to read out the results and then follow the links, I need to access the different results pages, or, preferably, simply set the results limit shown per page to the maximum of 100 (I don't think there are more than 100 results for each state). However, the page info seems to use javascript, is not part of a form and it seems I cannot access it as a control.</p>  <p>Any info on how to proceed? I am pretty new to python, only use it for tasks like this from time to time. This is some simple code which iterates through the main form.</p>  <pre><code>import mechanize import lxml.html import csv  site = ""http://www.nga.org/cms/FormerGovBios"" output = csv.writer(open(r'output.csv','wb')) br = mechanize.Browser()  response = br.open(site) br.select_form(name=""governorsSearchForm"") states = br.find_control(id=""states-field"", type=""select"").items for pos, item in enumerate(states[1:2]):      statename = str([label.text for label in item.get_labels()])     print pos, item.name, statename, len(states)     br.select_form(name=""governorsSearchForm"")     br[""state""] = [item.name]     response = br.submit(name=""submit"", type=""submit"")     # now set page limit to 100, get links and descriptions\     # and follow each link to get information     for form in br.forms():         print ""Form name:"", form.name         print form, ""\n""     for link in br.links():         print link.text, link.url </code></pre>"	2013-06-13 11:19:23.127 UTC	17276406	<p>Note that the <code>select</code> element on that page changes the <code>window.location</code>.</p>  <p>I think you can contruct an appropriate URI to load the page simply by replacing <code>$('#pageSizeSelector....-..-..-..-....').val()</code> with the value you need.</p>			2013-06-24 13:13:44.307 UTC
17085796	javascript|python|web-scraping|web-crawler|mechanize-python	Python scraper mechanize/javascript	"<p>I have to scrape all info for former US governors from <a href=""http://www.nga.org/cms/FormerGovBios"" rel=""nofollow"">this site</a>. However, to read out the results and then follow the links, I need to access the different results pages, or, preferably, simply set the results limit shown per page to the maximum of 100 (I don't think there are more than 100 results for each state). However, the page info seems to use javascript, is not part of a form and it seems I cannot access it as a control.</p>  <p>Any info on how to proceed? I am pretty new to python, only use it for tasks like this from time to time. This is some simple code which iterates through the main form.</p>  <pre><code>import mechanize import lxml.html import csv  site = ""http://www.nga.org/cms/FormerGovBios"" output = csv.writer(open(r'output.csv','wb')) br = mechanize.Browser()  response = br.open(site) br.select_form(name=""governorsSearchForm"") states = br.find_control(id=""states-field"", type=""select"").items for pos, item in enumerate(states[1:2]):      statename = str([label.text for label in item.get_labels()])     print pos, item.name, statename, len(states)     br.select_form(name=""governorsSearchForm"")     br[""state""] = [item.name]     response = br.submit(name=""submit"", type=""submit"")     # now set page limit to 100, get links and descriptions\     # and follow each link to get information     for form in br.forms():         print ""Form name:"", form.name         print form, ""\n""     for link in br.links():         print link.text, link.url </code></pre>"	2013-06-13 11:19:23.127 UTC	17276935	"<p>You can use <a href=""http://en.wikipedia.org/wiki/PySide"" rel=""nofollow"">PySide</a> that is a binding for <a href=""http://qt-project.org/wiki/QtWebKit"" rel=""nofollow"">QtWebKit</a>. With QtWebKit you can retrieve a page that uses Javascript and parse it once Javascript has populated the html. So you don't need to know about Javascript. Other alternatives are <a href=""http://docs.seleniumhq.org/"" rel=""nofollow"">Selenium</a> and <a href=""http://phantomjs.org/"" rel=""nofollow"">PhantomJS</a>.</p>"			2013-06-24 13:39:38.23 UTC
17085796	javascript|python|web-scraping|web-crawler|mechanize-python	Python scraper mechanize/javascript	"<p>I have to scrape all info for former US governors from <a href=""http://www.nga.org/cms/FormerGovBios"" rel=""nofollow"">this site</a>. However, to read out the results and then follow the links, I need to access the different results pages, or, preferably, simply set the results limit shown per page to the maximum of 100 (I don't think there are more than 100 results for each state). However, the page info seems to use javascript, is not part of a form and it seems I cannot access it as a control.</p>  <p>Any info on how to proceed? I am pretty new to python, only use it for tasks like this from time to time. This is some simple code which iterates through the main form.</p>  <pre><code>import mechanize import lxml.html import csv  site = ""http://www.nga.org/cms/FormerGovBios"" output = csv.writer(open(r'output.csv','wb')) br = mechanize.Browser()  response = br.open(site) br.select_form(name=""governorsSearchForm"") states = br.find_control(id=""states-field"", type=""select"").items for pos, item in enumerate(states[1:2]):      statename = str([label.text for label in item.get_labels()])     print pos, item.name, statename, len(states)     br.select_form(name=""governorsSearchForm"")     br[""state""] = [item.name]     response = br.submit(name=""submit"", type=""submit"")     # now set page limit to 100, get links and descriptions\     # and follow each link to get information     for form in br.forms():         print ""Form name:"", form.name         print form, ""\n""     for link in br.links():         print link.text, link.url </code></pre>"	2013-06-13 11:19:23.127 UTC	17300978	"<p>I solve this problem with selenium. It is complete firefox(or another) browser, which you can manipulate in code.</p>"			2013-06-25 15:07:28.2 UTC
17085796	javascript|python|web-scraping|web-crawler|mechanize-python	Python scraper mechanize/javascript	"<p>I have to scrape all info for former US governors from <a href=""http://www.nga.org/cms/FormerGovBios"" rel=""nofollow"">this site</a>. However, to read out the results and then follow the links, I need to access the different results pages, or, preferably, simply set the results limit shown per page to the maximum of 100 (I don't think there are more than 100 results for each state). However, the page info seems to use javascript, is not part of a form and it seems I cannot access it as a control.</p>  <p>Any info on how to proceed? I am pretty new to python, only use it for tasks like this from time to time. This is some simple code which iterates through the main form.</p>  <pre><code>import mechanize import lxml.html import csv  site = ""http://www.nga.org/cms/FormerGovBios"" output = csv.writer(open(r'output.csv','wb')) br = mechanize.Browser()  response = br.open(site) br.select_form(name=""governorsSearchForm"") states = br.find_control(id=""states-field"", type=""select"").items for pos, item in enumerate(states[1:2]):      statename = str([label.text for label in item.get_labels()])     print pos, item.name, statename, len(states)     br.select_form(name=""governorsSearchForm"")     br[""state""] = [item.name]     response = br.submit(name=""submit"", type=""submit"")     # now set page limit to 100, get links and descriptions\     # and follow each link to get information     for form in br.forms():         print ""Form name:"", form.name         print form, ""\n""     for link in br.links():         print link.text, link.url </code></pre>"	2013-06-13 11:19:23.127 UTC	17311222	"<p>Ok this is a screwball approach.  Playing around with the different search setting I found that the number of results to display is in the url. So I changed it to 3000 per page, thus it all fits on 1 page.</p>  <p><a href=""http://www.nga.org/cms/FormerGovBios?begincac77e09-db17-41cb-9de0-687b843338d0=0&amp;higherOfficesServed=&amp;lastName=&amp;sex=Any&amp;honors=&amp;submit=Search&amp;state=Any&amp;college=&amp;party=&amp;inOffice=Any&amp;biography=&amp;race=Any&amp;birthState=Any&amp;religion=&amp;militaryService=&amp;firstName=&amp;nbrterms=Any&amp;warsServed=&amp;&amp;pagesizecac77e09-db17-41cb-9de0-687b843338d0=3000"" rel=""nofollow"">http://www.nga.org/cms/FormerGovBios?begincac77e09-db17-41cb-9de0-687b843338d0=0&amp;higherOfficesServed=&amp;lastName=&amp;sex=Any&amp;honors=&amp;submit=Search&amp;state=Any&amp;college=&amp;party=&amp;inOffice=Any&amp;biography=&amp;race=Any&amp;birthState=Any&amp;religion=&amp;militaryService=&amp;firstName=&amp;nbrterms=Any&amp;warsServed=&amp;&amp;pagesizecac77e09-db17-41cb-9de0-687b843338d0=3000</a></p>  <p>After it lodes which does take a while I'd right click and go to view page source. Copy that into a text file on my computer. Then I can scrape the info I need from the file without going to the server and having to process the javascript.</p>  <p>May I recommend <a href=""http://www.crummy.com/software/BeautifulSoup/bs4/doc/"" rel=""nofollow"" title=""BeautifulSoup"">""BeautifulSoup""</a> for getting around in the html file. </p>"			2013-06-26 03:49:52.957 UTC
17102767	javascript|python|bit-manipulation	Replicating Javascript bitwise operation in Python	"<p>I'm trying to replicate a simple bitwise Javascript operation in Python.</p>  <p>[Javascript]</p>  <pre><code>&gt; 0xA867Df55   2825379669 &gt; 0xA867Df55 ^ 0   -1469587627 </code></pre>  <p>[Python]</p>  <pre><code>&gt;&gt;&gt; 0xA867DF55 2825379669L &gt;&gt;&gt; 0xA867DF55 ^ 0 2825379669L </code></pre>  <p>Having read the following:</p>  <p><a href=""https://stackoverflow.com/questions/14898998/bitwise-or-in-ruby-vs-javascript"">Bitwise OR in ruby vs javascript</a></p>  <p>it sounds like the issue here is that 0xA867Df55 (2825379669) in Javascript is larger than the largest signed 32-bit int (2147483647), which is causing an unexpected Javascript result.</p>  <p>The mail then goes on to suggest:</p>  <p>""If for some reason you wanted to reproduce that in Ruby, you would AND your number with 1FFFFFFFF so you're only operating on the least significant 32 bits and then OR it by 0 (which does nothing but would give you the same result).""</p>  <p>But if I try this:</p>  <pre><code>&gt;&gt;&gt; (0xA867DF55 &amp; 0x1FFFFFFF) ^ 0 141025109L </code></pre>  <p>I simply need to replicate the Javascript behaviour in Python. Can anyone suggest an appropriate bitwise operation ?</p>  <p>Thanks.</p>"	2013-06-14 06:56:21.663 UTC	17102895	"<p>How about converting from uint32 to int32.  </p>  <pre><code>import struct print struct.unpack('i', struct.pack('I', 0xA867Df55))[0] </code></pre>  <p><strong>OUTPUT</strong>  </p>  <pre><code>-1469587627 </code></pre>  <p>Or as @Ashwini suggests:</p>  <pre><code>import ctypes print ctypes.c_int(0xA867DF55 ^ 0).value </code></pre>  <p><strong>OUTPUT</strong>  </p>  <pre><code>-1469587627 </code></pre>"			2013-06-14 07:04:25.83 UTC
17118714	javascript|python	Escaping JavaScript Strings in Python	"<p>I have a Python script that builds some JavaScript to send down to the browser in a JSON envelope. I'd like to escape the JavaScript strings and delimit them with single quotes. I can't use <code>json.dumps</code> because it uses double quotes as delimiters like the JSON spec requires.</p>  <p>Is there a JavaScript String escape method in Python?</p>  <p>Example</p>  <pre><code>def logIt(self, str):     #todo: need to escape str here     cmd = ""console.log('%(text)s');"" % { 'text': str}     json.dumps({ ""script"": cmd }) </code></pre>  <p>So <code>logIt('example text')</code> should return something like this:</p>  <pre><code>{   ""script"": ""console.log('example text');"" } </code></pre>"	2013-06-14 23:31:06.24 UTC	17118733	"<p><code>json.dumps</code> is that escaping function - it takes any value, and makes it a valid javascript literal.</p>  <pre><code>def logIt(self, str):     cmd = ""console.log({0});"".format(json.dumps(str))     json.dumps({ ""script"": cmd }) </code></pre>  <p>Producing:</p>  <pre><code>&gt;&gt;&gt; print logIt('example text') { ""script"": ""console.log(\""example text\"");"" } &gt;&gt;&gt; print logIt('example ""quoted"" text') { ""script"": ""console.log(\""example \\\""quoted\\\"" text\"");"" } </code></pre>  <hr>  <p>Or:</p>  <pre><code>import string import json import functools  quote_swap = functools.partial(     string.translate, table=string.maketrans('\'""', '""\'') )  def encode_single_quoted_js_string(s):     return quote_swap(json.dumps(quote_swap(s))) </code></pre>"			2013-06-14 23:33:07.72 UTC
17145116	javascript|python|django	How to use following python dictionary in template using javascript?	"<p>I have a Python dictionary like this:</p>  <pre><code>{'test_data': ['reads_1.fq', 'reads_2.fq'], 'test_data/new_directory': ['ok.txt'], 'hello': ['ok.txt'], 'hello/hi/hey': ['b.txt']} </code></pre>  <p>I want to use this in the template(Django) to create a tree structure like:</p>  <pre><code>test_data  reads_1.fq  reads_2.fq  test_data/new_directory  ok.txt  hello  ok.txt  hello/hi/hey  b.txt </code></pre>  <p>How can this be done using javascript? Thanks</p>"	2013-06-17 10:14:44.887 UTC	17145245	"<p>Convert the dictionary to json first in your view and use javascript to work directly on the json (instead of using django's template language to try and format javascript)</p>  <pre><code># In your view somewhere import json  def my_view(request):     ...     return render_to_response('my_template.html',{ 'my_json': json.dumps(my_dict) }, context_instance=RequestContext(request)) </code></pre>  <p>and in your template: </p>  <pre><code>&lt;script&gt;      obj = {{ my_json|safe }};      for (var prop in obj){  // Iterating through an object          console.log(prop);          for(i=0, i &lt; obj[prop].length, i++){  // Iterating through the list for each key               console.log(obj[prop][i]);          }      } &lt;/script&gt; </code></pre>"			2013-06-17 10:22:37.077 UTC
17192308	javascript|python|audio	Autotune / Python / Javascript	"<p>I want to develop a ""I'm T-Pain app"" for mobile devices. The input is my voice, and the output is my voice auto-tuned. </p>  <p>I've found an example on Github of what i'm looking for <a href=""https://github.com/ederwander/PyAutoTune"" rel=""nofollow"">PyAutoTune</a>.</p>  <p>Unfortunately it is developed in Python, but I also found Skulpt, which enables me to write Python in Javascript. Do you think it's possible to produce the Autotune effect this way? </p>  <p>I'm using Icenium, I have to develop my application with HTML/CSS/Javascript.</p>  <p>So I wonder if Skulpt will allow me to do this project with Javascript or is it a too limited tool?</p>"	2013-06-19 13:19:14.31 UTC	17193841	"<p>Ok, so the python stuff is just exposing and using C symbols. So Skulpt is no help in what you want to achieve.</p>  <p>Then, you've got really few options, that leads to lot of work:</p>  <ul> <li>rewrite the whole <code>PyAutoTune</code> C libraries in Javascript from scratch. It'll be helpful to figure out complicated algorithms, but that's <strong>a lot</strong> of work ;</li> <li>fork the <code>PyAutoTune</code> C libraries, so you remove everything that is python related. Then either <ul> <li>you compile these libraries with emscripten to embed them in your firefox browser, and though I don't know how to do it, get symbols from the emscripten compiled stuff so you can call the C function from a Javascript you'll have to write (somehow equivwalent to <code>FromFileAutoTune.py</code>) or</li> <li>you use the native C code execution extension from chrome (I don't remember its name), export all symbols so you can use them from a javascript code you've written.</li> </ul></li> </ul>  <p>I never done that kind of stuff, I just know that is possible... But both features are under heavy development by chrome and mozilla developers, and may lack good documentation, especially if you're a beginner.</p>"			2013-06-19 14:24:03.547 UTC
17192308	javascript|python|audio	Autotune / Python / Javascript	"<p>I want to develop a ""I'm T-Pain app"" for mobile devices. The input is my voice, and the output is my voice auto-tuned. </p>  <p>I've found an example on Github of what i'm looking for <a href=""https://github.com/ederwander/PyAutoTune"" rel=""nofollow"">PyAutoTune</a>.</p>  <p>Unfortunately it is developed in Python, but I also found Skulpt, which enables me to write Python in Javascript. Do you think it's possible to produce the Autotune effect this way? </p>  <p>I'm using Icenium, I have to develop my application with HTML/CSS/Javascript.</p>  <p>So I wonder if Skulpt will allow me to do this project with Javascript or is it a too limited tool?</p>"	2013-06-19 13:19:14.31 UTC	17192989	"<p>The library is written in C; it is an extension to Python. If your platform does not allow C programs, I'm afraid you are out of luck.</p>  <p>If you are able to compile C code or somehow translate it to Javascript, you could avoid the Python bindings (PyAutoTuner.c) altogether and work with the original library from <a href=""http://tombaran.info/autotalent.html"" rel=""nofollow"">http://tombaran.info/autotalent.html</a></p>"			2013-06-19 13:48:25.387 UTC
17195096	javascript|python|ruby|node.js|opalrb	Languages compiling/interpreting to Javascript (such as Ruby/Python/Coffescript)	"<p>Newbie self-learner diving into web development here.  My goal is to learn how to build web-apps.  Three quick questions:  </p>  <ol> <li><p>Ruby and Python seem to have offshoots that compile their respective code to Javascript (i.e. Opal/Pyjamas).  If I can get an understanding of the DOM, i.e. the DOM, do I have to even learn the full language of Javascript or can I just rely on Ruby/Python compiling to JS?</p></li> <li><p>Everyone seems to be talking about node.js allowing for javascript on both the browser and server.  Does that mean that if I know Javascript and use Node, I don't need python or ruby for web dev?</p></li> <li><p>If node.js allows for server/client side javascript, couldn't someone just learn something like Coffeescript or Typescript and throw python, ruby or php aside?</p></li> </ol>"	2013-06-19 15:20:48.803 UTC	17195327	"<ol> <li><p>You shouldn't even need to understand the syntax of Javascript. Just an understanding of the DOM should suffice. Having said that, all the DOM examples will be in JS syntax, so reading them will be tricky. Being able to debug the transpiled javascript is also usefulo</p></li> <li><p>Correct. You can write a server an client with javascript in all the places</p></li> <li><p>Also correct. This is probably a better option, as these languages map more closely to the underlying javascript.</p></li> </ol>"			2013-06-19 15:31:56.007 UTC
17203055	jquery|python|api|callback|getjson	Trouble retrieving JSON from python script via $.getJSON in javascript	"<p>Right now, I'm trying to access data from the education.com API. However, I'm still unable to do so.</p>  <p>Basically, from what I understand, I'm supposed to use this python script to suppress the cross domain restriction for browsers. The python script is called getData.py, and I'm using the following code. Verbatim: </p>  <pre><code>#!/usr/bin/python   # Import modules for CGI handling  import cgi, cgitb  import urllib2   # Create instance of FieldStorage  form = cgi.FieldStorage()   #download data from request parameter 'url'  print ""Content-type:text/xml\r\n\r\n""  url = form.getvalue(""url"")  callback = form.getvalue(""callback"") req = urllib2.Request(url)  response = urllib2.urlopen(req)  data = response.read()  print callback + ""("" + data+ "")"" </code></pre>  <p>Then, I need to call the python script in my JavaScript/jQuery code through the $.getJSON. My professor said I need to pass the url of education API, and the call back to this script. I'm unsure as to how I would do this. How would I do this? What is my callback? This is my jquery code. I removed my key from the url for privacy. It is replaced by the word <strong>mykey</strong>. </p>  <pre><code>$.getJSON(""getData.py"", { url: ""http://api.education.com/service/service.php? f=schoolSearch&amp;key=mykey&amp;sn=sf&amp;v=4&amp;city=Atlanta&amp;state=ga&amp;Re sf=json""}, function(data) {   console.log(data); }); }); </code></pre>"	2013-06-19 23:33:56.04 UTC	17204680	"<p>Serialize the retrieved data as json.</p>  <pre><code>#!/usr/bin/python   # Import modules for CGI handling  import cgi, cgitb  import urllib2  import json  # Create instance of FieldStorage  form = cgi.FieldStorage()   #download data from request parameter 'url'  print ""Content-type:text/javascript\r\n\r\n""  url = form.getvalue(""url"")  callback = form.getvalue(""callback"") req = urllib2.Request(url)  response = urllib2.urlopen(req)  try:     data = response.read()      print callback + ""("" + json.dumps(data)+ "")"" finally:     response.close() </code></pre>  <p>Include <code>callback=?</code> in url. (<a href=""http://api.jquery.com/jQuery.getJSON/"" rel=""nofollow"">http://api.jquery.com/jQuery.getJSON/</a>)</p>  <pre><code>&lt;html&gt;     &lt;head&gt;         &lt;script src=""//ajax.googleapis.com/ajax/libs/jquery/1.10.1/jquery.min.js""&gt;&lt;/script&gt;         &lt;script type=""text/javascript""&gt;             var jsonp_url = ""cgi-bin/getData.py"";             var url = ""http://api.education.com/service/service.php?f=schoolSearch&amp;key=mykey&amp;sn=sf&amp;v=4&amp;city=Atlanta&amp;state=ga&amp;Resf=json"";             $.getJSON(jsonp_url + '?callback=?', {                 url: url             }, function(data) {                 console.log(data);                 $('body').text(data);             });         &lt;/script&gt;     &lt;/head&gt;      &lt;body&gt;     &lt;/body&gt; &lt;html&gt; </code></pre>"			2013-06-20 03:11:26.517 UTC
17245926	javascript|python|selenium|screen-scraping|web-crawler	Screen scraping with Selenium in Python: links constructed by Javascript	"<p>I'm building a webcrawler using Selenium and Python and I've run into a bit of a snag. The crawler works by finding all the links using </p>  <p><code>ListlinkerHref = self.browser.find_elements_by_xpath(""//*[@href]"")</code></p>  <p>and iterating over ListlinkerHref. This works great for classic links with an href attribute. However, a quick look at the source code for the homepage of www.primitiveworldproductions.com between lines 110 and 135 (approximately) shows a bunch of links built using Javascript with no href attributes in sight.</p>  <p>I know next to nothing about Javascript and I looked through the Selenium docs, but I can't find a way to detect those links. Is there a robust, all-encompassing way to find all links in the source code, including those constructed by Javascript without href attributes? Note that my crawler doesn't work by clicking on links (it just adds them to a list to be opened later) and the crawler needs to be able to crawl any site, without regard to the specifics. Is this possible?</p>  <p>EDIT:</p>  <p>Here are the first few lines from the part of the source code in question.</p>  <pre><code>var n111 = menuMgr.createMenu(""ref111"");  n111.addItem(""126"", ""Staff Bios"", ""/staff.aspx"", [""systems/nlsmenu/img/submenuovr.gif"",""systems/nlsmenu/img/submenuovr.gif""], true, null, ""ref126"");  var n112 = menuMgr.createMenu(""ref112"");  n112.addItem(""146"", ""Promotional Video"", ""/PromotionalVideo.aspx"", [""systems/nlsmenu/img/submenuovr.gif"",""systems/nlsmenu/img/submenuovr.gif""], true, null, ""ref146"");  n112.addItem(""120"", ""Video for Social Media"", ""/vsm.aspx"", [""systems/nlsmenu/img/submenuovr.gif"",""systems/nlsmenu/img/submenuovr.gif""], true, null, ""ref120"");  n112.addItem(""147"", ""Live Webcasting and Event Video"", ""/Webcasting.aspx"", [""systems/nlsmenu/img/submenuovr.gif"",""systems/nlsmenu/img/submenuovr.gif""], true, null, ""ref147""); </code></pre>"	2013-06-21 23:55:38.61 UTC	17262154	"<p>If you click with right-button of the mouse on any item in the menu and then choose ""inspect element"" you'll see HTML code that was generated with JavaScript. You'll see that menu items on  primitiveworldproductions.com have no href attribute and the link's target loads on the onclick event. I am afraid there is no simple method to extract links from this menu.</p>"			2013-06-23 15:14:48.257 UTC
17256415	javascript|python|selenium|webdriver	Python and Selenium: What's a good way to access links hidden in dropdown menus built by Javascript?	"<p>I'm building a webcrawler in Python using Selenium. Below is the function that searches for links. It works fine, except for the part that's commented out. The idea is to hover over each link that was found on the page being examined, and if that hovering action reveals more links (like in a dropdown menu built with Javascript, for example), then add those links using a recursive call to getLinksFromHTML (the ""if code != 1"" part is just there to make sure there's only one recursive call).</p>  <p>However, the recursive call doesn't pick up any new links when I test it on a page that has links inside JS dropdown menus (the page I'm looking at is <a href=""http://wilmingtontaxesandaccounting.com"" rel=""nofollow"">http://wilmingtontaxesandaccounting.com</a>). All visible links are picked up fine. </p>  <p>What can I do so that Selenium sees those dropdown links? I need a general solution, i.e., no specific element IDs or anything else page-specific harcoded into the code. Thanks for reading!</p>  <pre><code>def getLinksFromHTML(currUrl, code):      ListlinkerHref = browser.find_elements_by_xpath(""//*[@href]"")     links1 = []     links2 = []      for link in ListlinkerHref:         url = link.get_attribute(""href"")          #hov = ActionChains(browser).move_to_element(link)         #hov.perform()         #if code != 1:             #links1 = self.getLinksFromHTML(currUrl, 1)          if url not in links1:             links2.append(url)      return links1 + links2   </code></pre>"	2013-06-22 23:44:52.387 UTC	17257967	"<p>It turns out the reason it wasn't working was that I was using a Firefox driver. Apparently with Firefox, move_to_element doesn't actually hover on the element, it just ""focuses"" there. When I switched to a Chrome driver, it actually hovered over the menu items and showed the submenus. (Note the actual function has some errors in it, but that's not the point of this question.)</p>  <p>TL;DR: If you're using Selenium Webdriver and you want to hover over links to reveal content like submenus, use Chrome and not Firefox.</p>"			2013-06-23 05:26:26.033 UTC
17377791	javascript|python|google-app-engine	how to pass variable from python app to client javascript on google app engine	"<p>Does anyone know how to pass data from server code (written in python and run on google app engine) to client javascript? </p>  <p>I know how to do that for php and javascript: In php, make json-formatted variable and I can call the variable in javascript using something like: </p>  <pre><code>&lt;script&gt; var data = &lt;?php varname_in_php ?&gt;; &lt;/script&gt; </code></pre>  <p>How can I achieve the same thing for applications using google app engine ? </p>  <p>I am trying to implement some application which will parses some statistical data using Python, and then pass the data to javascript for plot. </p>  <p>Thanks in advance!</p>"	2013-06-29 07:22:14.447 UTC	17377845	"<p>You need to use a <a href=""https://developers.google.com/appengine/docs/python/gettingstartedpython27/templates"" rel=""nofollow"">templating system</a>.  Django and Jinja2, which are included with Google App Engine, are both straightforward and make this kind of task pretty easy.  Have a look at <a href=""http://jinja.pocoo.org/"" rel=""nofollow"">this</a> and it should be fairly clear how to do pass variables through <code>script</code> tags using Jinja2.</p>  <p>Quick example, assuming you've passed <code>data</code> into your Jinja2 template:</p>  <pre><code>&lt;script&gt; var jdata = new Array(); {% for entry in data %}    jdata.push({{ entry }}); {% endfor %} &lt;/script&gt; </code></pre>"			2013-06-29 07:30:27.857 UTC
17377791	javascript|python|google-app-engine	how to pass variable from python app to client javascript on google app engine	"<p>Does anyone know how to pass data from server code (written in python and run on google app engine) to client javascript? </p>  <p>I know how to do that for php and javascript: In php, make json-formatted variable and I can call the variable in javascript using something like: </p>  <pre><code>&lt;script&gt; var data = &lt;?php varname_in_php ?&gt;; &lt;/script&gt; </code></pre>  <p>How can I achieve the same thing for applications using google app engine ? </p>  <p>I am trying to implement some application which will parses some statistical data using Python, and then pass the data to javascript for plot. </p>  <p>Thanks in advance!</p>"	2013-06-29 07:22:14.447 UTC	17379248	"<p>If your using webapp2 you could just us the json lib, and do a </p>  <p><code>self.request.write(json.dumps(some_data))</code> in a get handler.</p>  <p>and remember to set your content type to <code>application/json</code></p>  <p>Much simpler than having to use a templating system to just send json.</p>  <p>You client can perform a simple request on the handler.. If your using jquery you would use <a href=""http://api.jquery.com/jQuery.getJSON/"" rel=""nofollow"">http://api.jquery.com/jQuery.getJSON/</a> for instance.</p>"			2013-06-29 10:31:11.307 UTC
17380315	javascript|python	"Splat operators in JavaScript, equivalent to *args and **kwargs in Python?"	"<p>I use Python a lot, and I am just quickly learning JavaScript right now (or should I say re-learning). So, I wanted to ask, what is the equivalent of <code>*args</code> and <code>**kwargs</code> in JavaScript?</p>"	2013-06-29 12:44:54.293 UTC	19938175	"<p>I found a good solution here: <a href=""http://readystate4.com/2008/08/17/javascript-argument-unpacking-converting-an-array-into-a-list-of-arguments/"">http://readystate4.com/2008/08/17/javascript-argument-unpacking-converting-an-array-into-a-list-of-arguments/</a></p>  <p>Basically, use <code>function.apply(obj, [args])</code> instead of <code>function.call</code>. apply takes an array as the 2nd arg and 'splats' it for you.</p>"			2013-11-12 19:28:36.86 UTC
17380315	javascript|python	"Splat operators in JavaScript, equivalent to *args and **kwargs in Python?"	"<p>I use Python a lot, and I am just quickly learning JavaScript right now (or should I say re-learning). So, I wanted to ask, what is the equivalent of <code>*args</code> and <code>**kwargs</code> in JavaScript?</p>"	2013-06-29 12:44:54.293 UTC	58543182	"<p>For those who might be slightly lost about *args and **kwargs magic variables read <a href=""http://book.pythontips.com/en/latest/args_and_kwargs.html"" rel=""nofollow noreferrer"">http://book.pythontips.com/en/latest/args_and_kwargs.html</a></p> <p>Summary: *args and **kwargs are just conventional ways of writing the magic variables. You could just say * and ** or *var and **vars. That said lets talk about the JavaScript equivalent in 2019.</p> <p>*args in python represents a JavaScript Array e.g. [&quot;one&quot;, &quot;two&quot;, &quot;three&quot;] to pass that into a python function you would just define the function as def function_name(*args): meaning this function accepts &quot;arrays&quot; or &quot;list if you wish&quot; to call that you would simply use function function_name([&quot;one&quot;, &quot;two&quot;, &quot;three&quot;]):</p> <p>same thing in JavaScript can be done by using :</p> <pre><code>function func(x,y,z){   ... } let args = [&quot;one&quot;, &quot;two&quot;, &quot;three&quot;];  func(...args)  **or more dynamically as**   function func(inputs&lt;T&gt;:Array){     for(index in inputs){        console.log(inputs[index]);    } } let args = [&quot;one&quot;, &quot;two&quot;, &quot;three&quot;];  func(args) </code></pre> <p>Have a look at <a href=""https://codeburst.io/a-simple-guide-to-destructuring-and-es6-spread-operator-e02212af5831"" rel=""nofollow noreferrer"">https://codeburst.io/a-simple-guide-to-destructuring-and-es6-spread-operator-e02212af5831</a></p> <p>**kwargs on the other hand represent just an array of key value pairs(objects) that's it. Thus **kwargs e.g is [{&quot;length&quot;: 1, &quot;height&quot;: 2}, {&quot;length&quot;:3, &quot;height&quot;: 4}]</p> <p>in python to define a function accepting array of objects you just say def function_name(**kwargs): then to call that you can do function_name( [{&quot;length&quot;: 1, &quot;height&quot;: 2}, {&quot;length&quot;:3, &quot;height&quot;: 4}]):</p> <p>similarly in JS</p> <pre><code>const kwargs = [{&quot;length&quot;: 1, &quot;height&quot;: 2}, {&quot;length&quot;:3, &quot;height&quot;: 4}]  function func(obj1, obj2){   ... }  func(...kwargs);  **or more dynamically as:**  const kwargs = [{&quot;length&quot;: 1, &quot;height&quot;: 2}, {&quot;length&quot;:3, &quot;height&quot;: 4}]  function func(obj){   for(const [key, value] of Object.entries(obj)){     console.log(key, &quot;: &quot;, value)  }  func(kwargs); </code></pre>"			2019-10-24 14:07:18.037 UTC
17380315	javascript|python	"Splat operators in JavaScript, equivalent to *args and **kwargs in Python?"	"<p>I use Python a lot, and I am just quickly learning JavaScript right now (or should I say re-learning). So, I wanted to ask, what is the equivalent of <code>*args</code> and <code>**kwargs</code> in JavaScript?</p>"	2013-06-29 12:44:54.293 UTC	25537539	"<p>ECMAScript 6 will have <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/rest_parameters"" rel=""nofollow"">rest parameters</a> which do the same thing as the splat operator.</p>"			2014-08-27 21:50:45.407 UTC
17380315	javascript|python	"Splat operators in JavaScript, equivalent to *args and **kwargs in Python?"	"<p>I use Python a lot, and I am just quickly learning JavaScript right now (or should I say re-learning). So, I wanted to ask, what is the equivalent of <code>*args</code> and <code>**kwargs</code> in JavaScript?</p>"	2013-06-29 12:44:54.293 UTC	28653071	"<p>ES6 added a spread operator to JavaScript.</p>  <pre><code>function choose(choice, ...availableChoices) {     return availableChoices[choice]; }  choose(2, ""one"", ""two"", ""three"", ""four""); // returns ""three"" </code></pre>"			2015-02-22 00:24:09.753 UTC
17380315	javascript|python	"Splat operators in JavaScript, equivalent to *args and **kwargs in Python?"	"<p>I use Python a lot, and I am just quickly learning JavaScript right now (or should I say re-learning). So, I wanted to ask, what is the equivalent of <code>*args</code> and <code>**kwargs</code> in JavaScript?</p>"	2013-06-29 12:44:54.293 UTC	17380331	"<p>The nearest equivalent is the <a href=""http://javascriptweblog.wordpress.com/2011/01/18/javascripts-arguments-object-and-beyond/"" rel=""noreferrer""><code>arguments</code> pseudo-array</a>.</p>"			2013-06-29 12:46:17.997 UTC
17380315	javascript|python	"Splat operators in JavaScript, equivalent to *args and **kwargs in Python?"	"<p>I use Python a lot, and I am just quickly learning JavaScript right now (or should I say re-learning). So, I wanted to ask, what is the equivalent of <code>*args</code> and <code>**kwargs</code> in JavaScript?</p>"	2013-06-29 12:44:54.293 UTC	17381144	"<p>The closest idiom for <code>*args</code> would be</p>  <pre><code>function func (a, b /*, *args*/) {     var star_args = Array.prototype.slice.call (arguments, func.length);     /* now star_args[0] is the first undeclared argument */ } </code></pre>  <p>taking advantage of the fact that <code>Function.length</code> is the number of arguments given in the function definition.</p>  <p>You could package this up in a little helper routine like</p>  <pre><code>function get_star_args (func, args) {     return Array.prototype.slice.call (args, func.length); } </code></pre>  <p>and then do</p>  <pre><code>function func (a, b /*, *args*/) {     var star_args = get_star_args (func, arguments);     /* now star_args[0] is the first undeclared argument */ } </code></pre>  <p>If you're in the mood for syntactic sugar, write a function which transforms one function into another one which is called with required and optional arguments, and passes the required arguments along, with any additional optional arguments as an array in final position:</p>  <pre><code>function argsify(fn){     return function(){         var args_in   = Array.prototype.slice.call (arguments); //args called with         var required  = args_in.slice (0,fn.length-1);     //take first n            var optional  = args_in.slice (fn.length-1);       //take remaining optional         var args_out  = required;                          //args to call with         args_out.push (optional);                          //with optionals as array         return fn.apply (0, args_out);     }; } </code></pre>  <p>Use this as follows:</p>  <pre><code>// original function function myfunc (a, b, star_args) {      console.log (a, b, star_args[0]); // will display 1, 2, 3 }  // argsify it var argsified_myfunc = argsify (myfunc);  // call argsified function argsified_myfunc (1, 2, 3); </code></pre>  <p>Then again, you could just skip all this mumbo jumbo if you are willing to ask the caller to pass the optional arguments as an array to start with:</p>  <pre><code>myfunc (1, 2, [3]); </code></pre>  <p>There is really no analogous solution for <code>**kwargs</code>, since JS has no keyword arguments. Instead, just ask the caller to pass the optional arguments in as an object:</p>  <pre><code>function myfunc (a, b, starstar_kwargs) {     console.log (a, b, starstar_kwargs.x); }  myfunc (1, 2, {x:3}); </code></pre>  <h2>ES6 Update</h2>  <p>For completeness, let me add that ES6 solves this problem with the rest parameter feature. See <a href=""https://stackoverflow.com/questions/28421404/javascript-meaning/28421548"">Javascript - &#39;...&#39; meaning</a></p>"			2013-06-29 14:18:09.117 UTC
17381178	javascript|python	Python dir() equivalent in JavaScript?	"<p>What I loved about Python was that if you wanted to know something about a particular module, you could just go something like this:</p>  <pre><code>dir(django.auth.models) </code></pre>  <p>and it would give you all the things inside of <code>models</code>, is there something similar to this in JavaScript?</p>"	2013-06-29 14:23:40.277 UTC	55479191	"<p>I don´t know if doesn´t have this option in 2013, but today we have:</p>  <pre><code>console.dir(variable) </code></pre>  <p>ps: This answer is for those fall here after a googling 'python dir in javascript' (like me! by the way).</p>"			2019-04-02 16:08:12.117 UTC
17381178	javascript|python	Python dir() equivalent in JavaScript?	"<p>What I loved about Python was that if you wanted to know something about a particular module, you could just go something like this:</p>  <pre><code>dir(django.auth.models) </code></pre>  <p>and it would give you all the things inside of <code>models</code>, is there something similar to this in JavaScript?</p>"	2013-06-29 14:23:40.277 UTC	17381218	"<p>If you do <code>console.log(variable)</code> in javascript, you'll see information about that variable in your browser's debugging console. If the variable is an object for example, you'll see it's attributes.</p>"			2013-06-29 14:28:19.453 UTC
17381178	javascript|python	Python dir() equivalent in JavaScript?	"<p>What I loved about Python was that if you wanted to know something about a particular module, you could just go something like this:</p>  <pre><code>dir(django.auth.models) </code></pre>  <p>and it would give you all the things inside of <code>models</code>, is there something similar to this in JavaScript?</p>"	2013-06-29 14:23:40.277 UTC	17381209	"<p>You could use <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/keys""><code>Object.keys()</code></a>, e.g.:</p>  <pre><code>&gt; Object.keys(window) [""top"", ""window"", ""location"", ""external"", ""chrome"", ""Intl"", ""v8Intl"", ""document"", ""$"", ""jQuery"", ""MSIsPlayback"", ""i"", ""prepareEditor"", ""StackExchange"", ""scriptSrc"", ""careers_adurl"", ""careers_cssurl"", ""careers_leaderboardcssurl"", ""careers_companycssurl"", ""careers_adselector"", ""_gaq"", ""_qevents"", ""jQuery171008060155878774822"", ""__qc"", ""quantserve"", ""uh"", ""_gat"", ""gaGlobal"", ""gauth"", ""genuwine"", ""moveScroller"", ""styleCode"", ""sanitizeAndSplitTags"", ""initTagRenderer"", ""showFadingHelpText"", ""initFadingHelpText"", ""profileLink"", ""EventEmitter"", ""votesCast"", ""tagRendererRaw"", ""tagRenderer"", ""ytCinema"", ""IN_GLOBAL_SCOPE"", ""prettyPrintOne"", ""prettyPrint"", ""PR_SHOULD_USE_CONTINUATION"", ""PR"", ""Markdown"", ""apiCallbacks""] </code></pre>"			2013-06-29 14:27:36.78 UTC
17381392	javascript|python|string	Alternative of triple quoted string in Javascript as Python has	"<p>Python has triple quoted string which provides free text input. There is no need next line character to define next line. Here is an example;</p>  <pre><code> hello = """"""              This string is bounded by triple double quotes (3 times "").         Unescaped newlines in the string are retained, though \         it is still possible\nto use all normal escape sequences.              Whitespace at the beginning of a line is         significant.  If you need to include three opening quotes         you have to escape at least one of them, e.g. \"""""".              This string ends in a newline.         """""" </code></pre>  <p>So I have a text in HTML  which consist of paragraphs. I can do spaces between paragraphs with  but I think if javascript has a functionality like Python's triple quoted string, I can generate paragraphs with it.</p>  <p>Is there a alternative free text usage in Javascript like Python has, or can you advice a Javascript library which is doing this?</p>  <p>Thank You!</p>"	2013-06-29 14:45:20.617 UTC	17381447	"<p>When python stores the string like that, it's strictly a list of characters and the triple quotes tell it not to modify anything.</p>  <p>For your html, if I understand right you probably have the slightly different problem that you want to automatically add all the html tags like <code>&lt;p&gt;...&lt;/p&gt;</code> in and around your paragraphs? Perhaps a more suitable way to think about doing this would be using a simpler markup language like <a href=""http://en.wikipedia.org/wiki/Markdown"" rel=""nofollow"">markdown</a> that you can then convert to fully formed html. Actually, this is how (for instance) stackoverflow posts work - you use the simple markup syntax to write the paragraphs and then they are transformed to html with all the tags in place. This has the advantage that it does more than just the paragraph tags, you can also denote italic text, links, images etc.</p>  <p>I'm not sure what the best way would be for your particular purpose, but <a href=""https://github.com/evilstreak/markdown-js"" rel=""nofollow"">here</a> is a javascript markdown library that might be useful. Or if you just want to convert static text you could just use a service like this <a href=""http://daringfireball.net/projects/markdown/dingus"" rel=""nofollow"">online converter</a>.</p>"			2013-06-29 14:51:54.173 UTC
17426822	javascript|python|selenium|mechanize|jython	Form filling and pressing javascript buttons in python	"<p>I want to automate form filling on a website with information of certain parameters that will return products based on the parameters I enter. I tried using mechanize in python but it does not support javascript and it seems like in order to navigate the entire process of filling in parameters requires pressing some buttons that seem like javascript objects. For instance the Guided Selection button: </p>  <pre><code>    &lt;a onclick=""_gaq.push([&amp;#39;_trackEvent&amp;#39;, &amp;#39;Navigation Menu&amp;#39;, &amp;#39;Click&amp;#39;, &amp;#39;Guided Selection Link&amp;#39;]);"" id=""ctl00_NavigationMenu_ConfigureLink"" href=""javascript:__doPostBack(&amp;#39;ctl00$NavigationMenu$ConfigureLink&amp;#39;,&amp;#39;&amp;#39;)""&gt;Guided Selection&lt;/a&gt;&lt;/li&gt; </code></pre>  <p>I also tried using selenium but I do not want to create a new instance of a browser. Any python based suggestions? Perhaps jython? Thanks a lot!</p>"	2013-07-02 13:24:42.57 UTC	17427862	"<p>My recommendation would be to simply capture the form information using a tool like firebug. And then ""replay"" the request (whether it's GET or POST) through Python. Here is a snippet for a POST request.</p>  <pre><code>import urllib import urllib2  url = 'http://www.someserver.com/cgi-bin/register.cgi' values = {'name' : 'Michael Foord',           'location' : 'Northampton',           'language' : 'Python' }  data = urllib.urlencode(values) req = urllib2.Request(url, data) response = urllib2.urlopen(req) the_page = response.read() </code></pre>  <p>In fire bug you can get the <code>url</code> and <code>values</code> from under the console tab.</p>  <p><img src=""https://i.stack.imgur.com/SAJJI.png"" alt=""enter image description here""></p>  <p>This probably won't work if you are doing automated form discovery.</p>"			2013-07-02 14:11:23.013 UTC
17449558	javascript|python|sqlalchemy|bnf	Parsing and constructing filtering queries similiar to SQL WHERE clause in Python/JavaScript	"<p>I am building a query engine for a database which is pulling data from SQL and other sources. For normal use cases the users can use  a web form where the use can specify filtering parameters with select and ranged inputs. But for advanced use cases, I'd like to to specify a filtering equation box where the users could type</p>  <ul> <li><p>AND, OR</p></li> <li><p>Nested parenthesis</p></li> <li><p>variable names</p></li> <li><blockquote>   <p>, &lt;, =, != operators</p> </blockquote></li> </ul>  <p>So the filtering equation could look something like:</p>  <pre><code> ((age &gt; 50) or (weight &gt; 100)) and diabetes='yes' </code></pre>  <p>Then this input would be parsed, input errors detected (non-existing variable name, etc) and SQL Alchemy queries built based on it.</p>  <p>I saw an earlier post about the similar problem <a href=""https://stackoverflow.com/a/1395854/315168"">https://stackoverflow.com/a/1395854/315168</a> </p>  <p>There seem to exist several language and mini-language parsers for Python <a href=""http://navarra.ca/?p=538"" rel=""nofollow noreferrer"">http://navarra.ca/?p=538</a></p>  <p>However, does there exist any package which would be out of the box solution or near solution for my problem? If not what would be the simplest way to construct such query parser and constructor in Python? </p>"	2013-07-03 13:37:53.98 UTC	24131413	"<p>Have a look at <a href=""https://github.com/dfilatov/jspath"" rel=""nofollow"">https://github.com/dfilatov/jspath</a></p>  <p>It's similar to xpath, so the syntax isn't as familiar as SQL, but it's powerful over hierarchical data.</p>"			2014-06-10 01:13:41.463 UTC
17449558	javascript|python|sqlalchemy|bnf	Parsing and constructing filtering queries similiar to SQL WHERE clause in Python/JavaScript	"<p>I am building a query engine for a database which is pulling data from SQL and other sources. For normal use cases the users can use  a web form where the use can specify filtering parameters with select and ranged inputs. But for advanced use cases, I'd like to to specify a filtering equation box where the users could type</p>  <ul> <li><p>AND, OR</p></li> <li><p>Nested parenthesis</p></li> <li><p>variable names</p></li> <li><blockquote>   <p>, &lt;, =, != operators</p> </blockquote></li> </ul>  <p>So the filtering equation could look something like:</p>  <pre><code> ((age &gt; 50) or (weight &gt; 100)) and diabetes='yes' </code></pre>  <p>Then this input would be parsed, input errors detected (non-existing variable name, etc) and SQL Alchemy queries built based on it.</p>  <p>I saw an earlier post about the similar problem <a href=""https://stackoverflow.com/a/1395854/315168"">https://stackoverflow.com/a/1395854/315168</a> </p>  <p>There seem to exist several language and mini-language parsers for Python <a href=""http://navarra.ca/?p=538"" rel=""nofollow noreferrer"">http://navarra.ca/?p=538</a></p>  <p>However, does there exist any package which would be out of the box solution or near solution for my problem? If not what would be the simplest way to construct such query parser and constructor in Python? </p>"	2013-07-03 13:37:53.98 UTC	54855727	"<p>I don't know if this is still relevant to you, but here is my answer:</p>  <p>Firstly I have created a class that does exactly what you need. You may find it here:  <a href=""https://github.com/snow884/filter_expression_parser/"" rel=""nofollow noreferrer"">https://github.com/snow884/filter_expression_parser/</a> It takes a list of dictionaries as an input + filter query and returns the filtered results. You just have to define the list of fields that are allowed plus functions for checking the format of the constants passed as a part of filter expression.</p>  <p>The filter expression it ingests has to have the following format:</p>  <p>(time > 45.34) OR (((user_id eq 1) OR (date gt '2019-01-04')) AND (username ne 'john.doe'))</p>  <p>or just </p>  <p>username ne 'john123'</p>  <p>Secondly it was foolish of me to even create this code because dataframe.query(...) from pandas already does almost exactly what you need: <a href=""https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.query.html"" rel=""nofollow noreferrer"">https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.query.html</a></p>"			2019-02-24 19:34:52.85 UTC
17520122	javascript|python|rsa	Convert one javascript rsa to python	"<p>I got javascript like the code paste below, and i want to convert it to python. The thinking is get rsakey and encrypt password. And the get key and constrct RSA part is good i think. any ideasss?</p>  <p>My python code is:</p>  <pre><code>rsakey = get_raskey()  # build RSA encoder mod = long(rsakey.get('publickey_mod'), 16) exp = long(rsakey.get('publickey_exp'), 16) timestamp = rsakey.get('timestamp') rsa = RSA.construct((mod, exp))  # encrypted password, mechanism comes from steam web js en_passwd = str(rsa.encrypt(self.passwd, '')[0]) en_passwd = base64.b64encode(en_passwd) </code></pre>  <p>Javascript code is:</p>  <pre><code>var RSAPublicKey = function($modulus_hex, $encryptionExponent_hex) {     this.modulus = new BigInteger( $modulus_hex, 16);     this.encryptionExponent = new BigInteger( $encryptionExponent_hex, 16); }  var Base64 = {     base64: ""ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/="",     encode: function($input) {         if (!$input) {             return false;         }         var $output = """";         var $chr1, $chr2, $chr3;         var $enc1, $enc2, $enc3, $enc4;         var $i = 0;         do {             $chr1 = $input.charCodeAt($i++);             $chr2 = $input.charCodeAt($i++);             $chr3 = $input.charCodeAt($i++);             $enc1 = $chr1 &gt;&gt; 2;             $enc2 = (($chr1 &amp; 3) &lt;&lt; 4) | ($chr2 &gt;&gt; 4);             $enc3 = (($chr2 &amp; 15) &lt;&lt; 2) | ($chr3 &gt;&gt; 6);             $enc4 = $chr3 &amp; 63;             if (isNaN($chr2)) $enc3 = $enc4 = 64;             else if (isNaN($chr3)) $enc4 = 64;             $output += this.base64.charAt($enc1) + this.base64.charAt($enc2) + this.base64.charAt($enc3) + this.base64.charAt($enc4);         } while ($i &lt; $input.length);         return $output;     },     decode: function($input) {         if(!$input) return false;         $input = $input.replace(/[^A-Za-z0-9\+\/\=]/g, """");         var $output = """";         var $enc1, $enc2, $enc3, $enc4;         var $i = 0;         do {             $enc1 = this.base64.indexOf($input.charAt($i++));             $enc2 = this.base64.indexOf($input.charAt($i++));             $enc3 = this.base64.indexOf($input.charAt($i++));             $enc4 = this.base64.indexOf($input.charAt($i++));             $output += String.fromCharCode(($enc1 &lt;&lt; 2) | ($enc2 &gt;&gt; 4));             if ($enc3 != 64) $output += String.fromCharCode((($enc2 &amp; 15) &lt;&lt; 4) | ($enc3 &gt;&gt; 2));             if ($enc4 != 64) $output += String.fromCharCode((($enc3 &amp; 3) &lt;&lt; 6) | $enc4);         } while ($i &lt; $input.length);         return $output;      } };  var Hex = {     hex: ""0123456789abcdef"",     encode: function($input) {         if(!$input) return false;         var $output = """";         var $k;         var $i = 0;         do {             $k = $input.charCodeAt($i++);             $output += this.hex.charAt(($k &gt;&gt; 4) &amp;0xf) + this.hex.charAt($k &amp; 0xf);         } while ($i &lt; $input.length);         return $output;     },     decode: function($input) {         if(!$input) return false;         $input = $input.replace(/[^0-9abcdef]/g, """");         var $output = """";         var $i = 0;         do {             $output += String.fromCharCode(((this.hex.indexOf($input.charAt($i++)) &lt;&lt; 4) &amp; 0xf0) | (this.hex.indexOf($input.charAt($i++)) &amp; 0xf));         } while ($i &lt; $input.length);         return $output;     } };  var RSA = {      getPublicKey: function( $modulus_hex, $exponent_hex ) {         return new RSAPublicKey( $modulus_hex, $exponent_hex );     },      encrypt: function($data, $pubkey) {         if (!$pubkey) return false;         $data = this.pkcs1pad2($data,($pubkey.modulus.bitLength()+7)&gt;&gt;3);         if(!$data) return false;         $data = $data.modPowInt($pubkey.encryptionExponent, $pubkey.modulus);         if(!$data) return false;         $data = $data.toString(16);         return Base64.encode(Hex.decode($data));     },      pkcs1pad2: function($data, $keysize) {         if($keysize &lt; $data.length + 11)             return null;         var $buffer = [];         var $i = $data.length - 1;         while($i &gt;= 0 &amp;&amp; $keysize &gt; 0)             $buffer[--$keysize] = $data.charCodeAt($i--);         $buffer[--$keysize] = 0;         while($keysize &gt; 2)             $buffer[--$keysize] = Math.floor(Math.random()*254) + 1;         $buffer[--$keysize] = 2;         $buffer[--$keysize] = 0;         return new BigInteger($buffer);     } } </code></pre>  <p>And Javascript is call like:</p>  <pre><code>var pubKey = RSA.getPublicKey( results.publickey_mod, results.publickey_exp ); var encryptedPassword = RSA.encrypt( form.elements['password'].value, pubKey );  </code></pre>"	2013-07-08 06:11:11.697 UTC	17520616	"<p>Let me guess, you try to encrypt data in javascript within browser and decrypt it in python at server side, right? If so, you have to use a <strong>PRIVATE</strong> key corresponding to the key used for encrypting to decrypt it.  <p>RSA is an asymmetry algorithm and its uses different key for encoding and decoding.</p>"			2013-07-08 06:50:45.993 UTC
17581728	javascript|python|function|arguments	python version of javascript's arguments object - does it exist?	"<p>In JavaScript each function has a special <code>arguments</code> predefined objects which holds information about arguments passed to the function call, e.g.</p>  <pre><code>function test() {   var args = Array.prototype.slice.call(arguments);   console.log(args); } </code></pre>  <p>arguments can be easily dumped to a standard array:</p>  <pre><code>test() // []  test(1,2,3) // [1, 2, 3]  test(""hello"", 123, {}, [], function(){}) // [""hello"", 123, Object, Array[0], function] </code></pre>  <p>I know that in Python I can use standard arguments, positional arguments and keyword arguments (just like defined <a href=""http://symfony-world.blogspot.com/2013/07/python-positional-arguments-and-keyword.html"" rel=""nofollow"">here</a>) to manage dynamic parameter number - but is there anything similar to <code>arguments</code> object in Python?</p>"	2013-07-10 22:03:29.25 UTC	17581860	"<p>It doesnt exist as is in python but you can call locals() as the first thing in the function and at that point it should only have the arguments</p>  <pre><code>&gt;&gt;&gt; def f(a,b): ...    args = locals() ...    for arg, value in args.items(): ...        print arg, value ...    return a*b ... </code></pre>"			2013-07-10 22:14:06.433 UTC
17590598	javascript|jquery|json	JavaScript getting JSON string from Python server	"<p>I'm not a JavaScript programmer, and I'm trying to dabble in jquery.</p>  <p>I know that if I have string in the form:</p>  <p><code>var myList=[{""Tank1"": 45000, ""Tank2"": -10}, {""Tank1"": 200, ""Tank2"": 435}]</code> </p>  <p>the javascript code which I've copied can read it, and use it.</p>  <p>My question, is how do I get the same list as a variable ""myList"", when it comes from JSON. My python server code outputs JSON as:</p>  <pre><code>[{""Tank1"": 45000, ""Tank2"": -10}, {""Tank1"": 200, ""Tank2"": 435}]     </code></pre>  <p>Could someone show me how I can read this into javascript as a variable ""myList"", please?  Do I also need any specific .js libraries?</p>"	2013-07-11 10:06:49.487 UTC	17590639	"<p>You can use <a href=""http://api.jquery.com/jQuery.parseJSON/"" rel=""nofollow"">$.parseJSON</a> function to make it json object using jQuery.</p>  <pre><code>$.parseJSON('[{""Tank1"": 45000, ""Tank2"": -10}, {""Tank1"": 200, ""Tank2"": 435}]'); </code></pre>  <p>OR</p>  <pre><code>$.parseJSON(varibleContainingJsonString); </code></pre>"			2013-07-11 10:09:01.437 UTC
17610014	javascript|python|sl4a	Equivalent of sys.exit() of Python in JavaScript	<p>I m using SL4A to execute Python/Javascripts in Android. Can anyone let me know the equivalent of <code>sys.exit()</code> of Python in JavaScript? Thanks!</p>	2013-07-12 07:46:21.253 UTC	17610433	"<p>You can do this:</p>  <pre><code>throw ""stop execution""; </code></pre>"			2013-07-12 08:12:08.287 UTC
17624151	python|telnetlib|mozrepl	How to read Mozrepl Javascript result into a Python Variable?	"<p>With Mozrepl addon in Firefox and Python I do:</p>  <pre><code>&gt;&gt;&gt; import telnetlib &gt;&gt;&gt; tn = telnetlib.Telnet(r'127.0.0.1', 4242, 5) &gt;&gt;&gt; tn.read_eager() '\nWelcome to MozRepl.\n\n - If you get stuck at the ""' &gt;&gt;&gt; tn.read_until(""repl&gt; "") ...snip... &gt;&gt;&gt; tn.write(r'alert(window.content.location.href)'+""\n"") </code></pre>  <p>and I get an alert box with the URL of the active tab. But how do I read that URL into a python variable? Something like <code>tn.write(r';var zz = window.content.location.href'+ ""\n"")</code> but that doesn't get it into python. </p>  <p>I would be grateful for help. </p>"	2013-07-12 21:18:35.85 UTC	29401022	"<p>This can be done using the <a href=""https://pypi.python.org/pypi/mozrepl"" rel=""nofollow"">pymozrepl</a> module.</p>  <pre><code>&gt;&gt;&gt; import mozrepl &gt;&gt;&gt; repl = mozrepl.Mozrepl() &gt;&gt;&gt;  &gt;&gt;&gt; repl.execute('alert(window.content.location.href)') &gt;&gt;&gt;  &gt;&gt;&gt; #or &gt;&gt;&gt; from mozrepl.type import Raw &gt;&gt;&gt; repl.execute('alert')(Raw('window.content.location.href')) &gt;&gt;&gt;  &gt;&gt;&gt; #or &gt;&gt;&gt; repl.execute('alert')(repl.execute('window').content.location.href) &gt;&gt;&gt;  &gt;&gt;&gt; #or &gt;&gt;&gt; repl.execute('alert')(repl.execute('window.content.location.href')) &gt;&gt;&gt;  &gt;&gt;&gt; #pymozrepl module also can get javascript value. &gt;&gt;&gt; repl.execute('repl._name') 'repl' </code></pre>"			2015-04-01 21:18:23.09 UTC
17624151	python|telnetlib|mozrepl	How to read Mozrepl Javascript result into a Python Variable?	"<p>With Mozrepl addon in Firefox and Python I do:</p>  <pre><code>&gt;&gt;&gt; import telnetlib &gt;&gt;&gt; tn = telnetlib.Telnet(r'127.0.0.1', 4242, 5) &gt;&gt;&gt; tn.read_eager() '\nWelcome to MozRepl.\n\n - If you get stuck at the ""' &gt;&gt;&gt; tn.read_until(""repl&gt; "") ...snip... &gt;&gt;&gt; tn.write(r'alert(window.content.location.href)'+""\n"") </code></pre>  <p>and I get an alert box with the URL of the active tab. But how do I read that URL into a python variable? Something like <code>tn.write(r';var zz = window.content.location.href'+ ""\n"")</code> but that doesn't get it into python. </p>  <p>I would be grateful for help. </p>"	2013-07-12 21:18:35.85 UTC	19370818	<p>Bit late in answering but hopefully useful...</p>  <p>You just read from the telnet connection again and mozrepl's output will be there. Be sure to watch out for newlines returned and quoted strings.</p>			2013-10-14 23:19:57.32 UTC
17633637	javascript|python|json	Python json dump not read by javascript JSON.parse	"<p>I am trying to read a json file generated through <code>json.dump</code> module in python and reading it in a javascript using <code>JSON.parse</code>. However, for some of the json dumps the javascript is throwing an exception for invalid literal. Does anyone know why this might happen or what should I do to prevent this?</p>  <blockquote>   <p>Browsers: Chrome/Firefox; python ver: 2.7</p> </blockquote>  <p>EDIT1: based on the comment supplying some code</p>  <p>1) json dumped using</p>  <pre><code>import json json.dump(&lt;python-dict&gt;, open(&lt;filename&gt;,'w'), encoding='utf-8')`` </code></pre>  <p>2) Code read using</p>  <ul> <li><code>d3.json</code> Output: a syntax error is thrown before the callback is called. </li> <li><code>JSON.parse</code> Outputs: invalid json</li> </ul>  <p>EDIT2: it may be relevant , the json dump is pretty large , around 24M uncompressed.</p>"	2013-07-13 19:45:20.197 UTC	19145569	"<p>Just for the sake of completing the circle I found out the problem and the corresponding fix.</p>  <p>Firstly the problem:</p>  <p>The problem wasn't about <code>not closing the file</code> as some answers suggested or about the size being too big (as I thought initially). The problem was that  my data before the <code>json.dump</code> part contained NAN's and by default <code>json.dump</code> (see <a href=""http://docs.python.org/2/library/json.html#basic-usage"" rel=""nofollow noreferrer"">json documentation</a>) either allow nan's to be 'serialized' or throws an error (when 'allow_nan=False'). However, according to ECMA-262 NAN's are not allowed and hence the jquery json read was failing to read the dump.</p>  <p>The solution:</p>  <p>Use <code>simplejson</code> and use <code>ignore_nan</code> with it. The corrected code snippet should be </p>  <pre><code>import simplejson simplejson.dump(&lt;python-dict&gt;, open(&lt;filename&gt;,'w'), encoding='utf-8', ignore_nan=True) </code></pre>  <p>Credits: <a href=""https://stackoverflow.com/questions/6601812/sending-nan-in-json"">sending NaN in json</a></p>"			2013-10-02 19:48:51.847 UTC
17633637	javascript|python|json	Python json dump not read by javascript JSON.parse	"<p>I am trying to read a json file generated through <code>json.dump</code> module in python and reading it in a javascript using <code>JSON.parse</code>. However, for some of the json dumps the javascript is throwing an exception for invalid literal. Does anyone know why this might happen or what should I do to prevent this?</p>  <blockquote>   <p>Browsers: Chrome/Firefox; python ver: 2.7</p> </blockquote>  <p>EDIT1: based on the comment supplying some code</p>  <p>1) json dumped using</p>  <pre><code>import json json.dump(&lt;python-dict&gt;, open(&lt;filename&gt;,'w'), encoding='utf-8')`` </code></pre>  <p>2) Code read using</p>  <ul> <li><code>d3.json</code> Output: a syntax error is thrown before the callback is called. </li> <li><code>JSON.parse</code> Outputs: invalid json</li> </ul>  <p>EDIT2: it may be relevant , the json dump is pretty large , around 24M uncompressed.</p>"	2013-07-13 19:45:20.197 UTC	17633750	"<p>You're not closing the file, which will likely result in an incomplete file when you're trying to read that again.</p>  <p>How about</p>  <pre><code>with open(filename, ""w"") as outfile:     json.dump(myobject, outfile) </code></pre>"			2013-07-13 20:01:35.137 UTC
17635415	javascript|python|html	Render a webpage (includes some javascripts) in Python	"<p>I'm new in programming with Python. I just want to create a little webcrawler. I already created my idea in C# but my Raspberry Pi doesn't support the Mono project in the right way (There is a long theard about a special problem, which is still not solved and this for about a year now). Because of this I need to code it in Python. I want a simple application which opens a website, waits some seconds till the JavaScript changes some stuff on the website (some simple links) then it needs to find a specific link by his id. When it finds the link, it needs to visit / click the link so that I can see the source code of the new website for other works later. Perhaps you guys could help me out with some links? I already searched by my self but I couldn't find anything what could help me directly. Thank you all!</p>"	2013-07-14 00:26:50.473 UTC	17635452	"<p>You need <a href=""https://pypi.python.org/pypi/selenium"" rel=""nofollow"">Selenium</a> with Python.</p>"			2013-07-14 00:33:03.977 UTC
17635542	javascript|python	How to scrape data generated by javascript using python	"<p>I want to scrape the Number of participants of the following news. The url is <a href=""http://news.sina.com.cn/c/2013-07-11/175827642839.shtml"" rel=""nofollow"">http://news.sina.com.cn/c/2013-07-11/175827642839.shtml</a> And I want to get the Number 820. It is generated by javascript. How can I get that number using simple way?</p>"	2013-07-14 00:50:26.35 UTC	17635609	"<p>You could analize javascript code and do the same in python.  Or you can use <a href=""http://selenium.googlecode.com/git/docs/api/py/index.html"" rel=""nofollow"">Selenium</a> in Python.</p>  <p><strong>edit:</strong></p>  <p>Here example from selenium page changed to do what you need.</p>  <p>It open browser (firefox), wait 5 second (to load page) and get text</p>  <pre><code>#!/usr/bin/python  import selenium from selenium import webdriver from selenium.common.exceptions import NoSuchElementException from selenium.webdriver.common.keys import Keys import time  browser = webdriver.Firefox() # Get local session of firefox browser.get(""http://news.sina.com.cn/c/2013-07-11/175827642839.shtml "") # Load page time.sleep(5) # Let the page load try:     element = browser.find_element_by_xpath(""//span[contains(@class,'f_red')]"") # get element on page     print element.text # get element text except NoSuchElementException:     assert 0, ""can't find f_red"" browser.close() </code></pre>"			2013-07-14 01:02:19.897 UTC
17641006	javascript|html|python-2.7|websocket	How do I use web sockets in javascript/html5 to communicate with python	"<p>I'm having issue's with trying to communicate between python and javascript using WebSockets.</p>  <p>This is my python server (ws.py) which just prints out any data it receives and resends it to the client :</p>  <pre><code>#!/usr/bin/env python  # Echo server program import socket  HOST = ''    PORT = 50007 s = socket.socket(socket.AF_INET, socket.SOCK_STREAM) s.bind((HOST, PORT)) s.listen(1) conn, addr = s.accept() print 'Connected by', addr while 1:    data = conn.recv(1024)    if not data: break    print 'Data recieved =', data    conn.sendall(data) conn.close() </code></pre>  <p>This works fine with netcat using <code>nc localhost 50007</code> but when I try using my html/Javascript client I get a connection but the server doesn't receive the message I just get the follow:</p>  <pre><code>Connected by ('127.0.0.1', 62264) Data recieved = GET / HTTP/1.1 Upgrade: websocket Connection: Upgrade Host: localhost:50007 Origin: http://localhost Pragma: no-cache Cache-Control: no-cache Sec-WebSocket-Key: 6hxDWShxMnFxwGYAWym+eg== Sec-WebSocket-Version: 13 Sec-WebSocket-Extensions: x-webkit-deflate-frame User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/28.0.1500.71 Safari/537.36 Cookie: SQLiteManager_currentLangue=2 </code></pre>  <p>and this is what I get the the console in Chrome:</p>  <pre><code>WebSocket connection to 'ws://localhost:50007/' failed:  basicWSoc.html:7 Error Logged: [object Event]  </code></pre>  <p>This is my web client (basicWSoc.html)</p>  <pre><code>&lt;!DOCTYPE HTML&gt; &lt;html&gt; &lt;head&gt; &lt;script type=""text/javascript""&gt;   function WebSocketTest()   {     var connection=new WebSocket(""ws://localhost:50007"");     connection.onopen = function () {       connection.send('Hello, Server!!'); //send a message to server once connection is opened.     };     connection.onerror = function (error) {       console.log('Error Logged: ' + error); //log errors     };     connection.onmessage = function (e) {       console.log('Received From Server: ' + e.data); //log the received message     }; } &lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;div id=""sse""&gt;    &lt;a href=""javascript:WebSocketTest()""&gt;Run WebSocket&lt;/a&gt; &lt;/div&gt; &lt;/body&gt; &lt;/html&gt; </code></pre>  <p>Now I am still a novice in python and Web sockets are completely new to me so I may be over looking the obvious....</p>  <p>Any Help would be greatly appreciated </p>"	2013-07-14 15:54:35.307 UTC	17651885	"<p>Thanks to @SLaks who pointed out to me that I was using TCP sockets as apposed to Web Sockets. I changed my Python service to use the <a href=""http://www.tornadoweb.org/en/stable/"" rel=""nofollow"">Tornado</a> Library which implemented web sockets and this allowed me to connect to my web client and successfully communicate between them</p>"			2013-07-15 10:18:44.753 UTC
17667050	javascript|python|html|package|web-scraping	How to extract such text from javascript sentences in a html file by python	"<p>I'm new to web-scraping coding. I'm using python to parse the html files and the package I'm using is BeautifulSoup. Now I want to extract the certain numbers like the <code>1</code> in <code>$mwidgetHelper.setTitle('Posts (1)')</code>, the <code>1</code> in <code>$mwidgetHelper.setTitle('Notes (1)')</code>, and the text like the <code>user_638166_451203</code> in <code>hover_boxes.hoverize_link('user_638166_451203', 'user_profile')</code> under the <code>&lt;script&gt;</code> tag in this html file. The question is I'm not sure which methods I should use to parse these elements. The codes are below:</p>  <pre><code>&lt;script&gt;        newDiv = document.createElement(""div"");       newDiv.id = $mwidgetManager.getTitleId();       newDiv.className = 'mw_title widget_title ' + $mwidgetManager.getTitleId();       newDiv.innerHTML = ""About Me"";       $p('ppwt_1').appendChild(newDiv);        $mwidgetHelper.setTitle('About kk');       $mwidgetManager.nextApp();        newDiv = document.createElement(""div"");       newDiv.id = $mwidgetManager.getTitleId();       newDiv.className = 'mw_title widget_title ' + $mwidgetManager.getTitleId();       newDiv.innerHTML = ""Status"";       $p('ppwt_11').appendChild(newDiv);        $mwidgetHelper.setTitle('Posts (1)');       $mwidgetHelper.setSubtitle('&lt;a href=\""/user_posts/list/9\""&gt;See All&lt;\/a&gt;');       $mwidgetManager.nextApp();         $mwidgetHelper.setTitle('Notes (1)');       $mwidgetHelper.setSubtitle('&lt;a href=\""/notes/list/9\""&gt;See All&lt;\/a&gt;');       //&lt;![CDATA[           hover_boxes.hoverize_link('user_638166_451203', 'user_profile');      //]]&gt;  &lt;/script&gt; </code></pre>  <p>Thanks!</p>"	2013-07-16 02:29:56.157 UTC	17667370	"<p>Beautiful Soup is best used to parse an HTML tree, not JavaScript source code. Looking at the source code, I feel that JavaScript <strong>does</strong> alter the DOM, so you can use Beautiful Soup to scrape the changes in HTML by inspecting the required elements.</p>  <p>EDIT: Here's how to parse the required HTML. Right-click on the element you want to parse in Chrome and select ""Inspect Element"". The HTML for the corresponding on-screen element should now be highlighted. You can then use the element attributes (id, class etc) to scrape the data using Beautiful Soup.</p>  <p>Hope this helps. If you have further doubts, don't hesitate to ask.</p>"			2013-07-16 03:08:46.097 UTC
17753591	javascript|python|pdf|data-visualization	Data Visualization: Best tools to generate simple charts in PDF with Javascript or Python	"<p>I'm building an app that will talk to a real estate API to fetch info about housing within a certain area. Then for each query it will generate a PDF doc based on the returned data that has two simple charts, a bar chart and line chart. </p>  <p>I'm wondering if it's worth paying for something like FusionCharts or if there's a free library to work with. I'm a fairly novice programmer who mainly works in JS/jQuery and Python. I'm pretty much new to Data Visualization. </p>"	2013-07-19 19:00:26.747 UTC	17760309	"<p>You can try <a href=""http://alignedleft.com/tutorials/d3/making-a-bar-chart/"" rel=""nofollow"">D3.js</a> to create all kind of charts in client side rather than generating chart in server  side. You are also working with an API, so D3.js will be very useful. If you are a Python lover, you can use d3 via the <a href=""https://github.com/mikedewar/d3py"" rel=""nofollow"">d3py library</a>. And you can generate pdfs in javascript via <a href=""http://parall.ax/products/jspdf"" rel=""nofollow"">jsPDF</a>.</p>"			2013-07-20 08:25:48.183 UTC
17778972	javascript|django|browser|python-2.7|client	JavaScript is enabled in client browser in django or in python?	"<p>I am trying to find a solution to detect if clients brower has javascript enabled or not. Is there a way to check whether JavaScript is enabled in the client browser, in django if possible or in python?</p>"	2013-07-22 02:12:53.18 UTC	32660783	"<p>The right approach is to degrade gracefully, but that is not always possible especially with web app.  Use a <code>&lt;noscript&gt;</code> tag to tell the user to re-enable javascript.</p>  <p>If you need a solution through django, set a cookie using JS and try to read it in the second request. If you dont see the cookie then JS is not enabled.  However, as a first request it can't be detected.</p>"			2015-09-18 20:48:23.433 UTC
17778972	javascript|django|browser|python-2.7|client	JavaScript is enabled in client browser in django or in python?	"<p>I am trying to find a solution to detect if clients brower has javascript enabled or not. Is there a way to check whether JavaScript is enabled in the client browser, in django if possible or in python?</p>"	2013-07-22 02:12:53.18 UTC	17778994	"<p>Unfortunately, you can't do this unless trying a second request. There's no way to know this before actually interacting with the browser itself.</p>  <p>The closest I can think of is trying to set a cookie and store this information for future visits.</p>  <p>Hope it helps.</p>"			2013-07-22 02:15:51.437 UTC
17779000	javascript|python|webforms|mechanize	Python Mechanize: Web Forms with Javascript	"<p>I am trying to upload information through a form using Python.  I would share the form but it is password protected (I have permission to access it though).  I have been using mechanize but have encountered a problem.</p>  <p>The page that I am uploading to actually consists of a number of forms, which are accessed by tabs at the top of the page.  These tabs are set up using Javascript.  When I access the URL of the page, I can see the form for the first tab using mechanize, but I do not know how to change tabs.</p>  <p>This is a snippet I got with Firebug:</p>  <pre><code>&lt;form id=""frmEntityEdit"" enctype=""multipart/form-data"" onsubmit=""javascript:return  WebForm_OnSubmit();"" action=""entityEditProducts.aspx? EntityFilterID=239&amp;EntityName=Category&amp;iden=6751"" method=""post"" name=""frmEntityEdit""&gt; </code></pre>  <p>Also, when I change tabs, value for ""TabStrip1_SelectedNode"" cycles through ""p0"", ""p1"", ""p2"", etc.</p>  <pre><code>&lt;input id=""TabStrip1_Data"" type=""hidden"" name=""TabStrip1_Data""&gt; &lt;input id=""TabStrip1_Properties"" type=""hidden"" name=""TabStrip1_Properties""&gt; &lt;input id=""TabStrip1_SelectedNode"" type=""hidden"" value=""p0"" name=""TabStrip1_SelectedNode""&gt; &lt;input id=""TabStrip1_ScrollData"" type=""hidden"" value=""0"" name=""TabStrip1_ScrollData""&gt; </code></pre>  <p>I would like to be able to switch tabs, so that I can fill out all the forms.</p>  <p>Thanks in advance for the help.  Let me know if you need more information.</p>"	2013-07-22 02:16:33.143 UTC	17779579	"<p>mechanize doesn't evaluate javascript. The easiest way that I've seen to do it is by using Selenium, which will open a browser on your computer and communicate with python. </p>  <p>I answered a similar question <a href=""https://stackoverflow.com/questions/17768460/mechanize-not-showing-fb-messages-form/17769190#17769190"">here</a>.</p>"			2013-07-22 03:40:13.17 UTC
17819347	javascript|jquery|python|string	Formatting strings in Javascript - Translating function from python to javascript	"<p>How do you format strings in Javascript? I wrote python code and I'm trying to translate it to javascript but I'm not too sure how</p>  <p>Python code:</p>  <pre><code>def conv(t):     return '%02d:%02d:%02d.%03d' % (         t / 1000 / 60 / 60,         t / 1000 / 60 % 60,         t / 1000 % 60 + 12,         t % 1000) </code></pre>  <p>Does javascript/jquery let you do something similar to this? And if so, how?</p>  <p>Thanks!</p>"	2013-07-23 19:29:11.61 UTC	17820040	"<p>the closest i could come up with to your python code:</p>  <pre><code>   function conv(t){     t= [          t / 1000 / 60 / 60,         t / 1000 / 60 % 60,         t / 1000 % 60 ,          t % 1000 ].map( Math.floor );          t[2]=t[2]+"".""+( t.pop() + ""0000"").slice(0,3);       return t.join("":"").replace(/\b(\d)\b/g,""0$1"");    }  //test it out: new Date(12345678).toISOString().split(""T"")[1].slice(0,-1); // == 03:25:45.678  conv(12345678); // == 03:25:45.678 </code></pre>  <p>pardon if it's not correct, i don't know python, but this seems like what you're trying to do...</p>"			2013-07-23 20:06:36.777 UTC
17819347	javascript|jquery|python|string	Formatting strings in Javascript - Translating function from python to javascript	"<p>How do you format strings in Javascript? I wrote python code and I'm trying to translate it to javascript but I'm not too sure how</p>  <p>Python code:</p>  <pre><code>def conv(t):     return '%02d:%02d:%02d.%03d' % (         t / 1000 / 60 / 60,         t / 1000 / 60 % 60,         t / 1000 % 60 + 12,         t % 1000) </code></pre>  <p>Does javascript/jquery let you do something similar to this? And if so, how?</p>  <p>Thanks!</p>"	2013-07-23 19:29:11.61 UTC	17819410	"<p>What you're referring to is basically a <code>printf</code> / <code>String.Format</code>-like operation. Unfortunately, JavaScript currently does not have any built-in way of doing this (which is too bad, really).</p>  <p>There are, of course, many libraries that give this kind of functionality.</p>  <p><a href=""http://www.diveintojavascript.com/projects/javascript-sprintf"" rel=""nofollow noreferrer"">Here's one of them (sprintf)</a> which follows the <code>printf</code> syntax, and <a href=""https://stackoverflow.com/a/4673436/716118"">here's another one</a> which uses the <code>format</code> syntax.</p>"			2013-07-23 19:32:17.26 UTC
17824583	javascript|python|html|bottle	Passing Variables Between Javascript and Python	"<p>I am attempting to pass the value of an integer from within a javascript function to a server side python script.  I have tried to find a way to pass this value directly from the javascript to python but have not yet been successful, so instead I have tried to create a hidden element which contains the value of my int within my html form with the javascript function.  Then using the action 'POST' with the Python Bottle framework I have tried to copy the value to my python script.  However, the int is being processed as being of NoneType, rather than an int, and so I cannot use it within the processing script.  The part of my JS function which creates the element with the int named instance is as follows</p>  <pre><code>function newItem(){   instance++;    var oldInput = document.getElementById(""itemInfo"");   var parent = oldInput.parentNode;   var newDiv = document.createElement(""div"");    var item = document.createElement(""INPUT"");   var qty = document.createElement(""INPUT"");   var color = document.createElement(""INPUT"");   var count = document.createElement(""HIDDEN"");    item.name = ""item"" + instance;   qty.name = ""qty"" + instance;   color.name = ""color"" + instance;   count.value = instance;   newDiv.appendChild(item);   newDiv.appendChild(qty);   newDiv.appendChild(color);   newDiv.appendChild(count); </code></pre>  <p>The HTML form with the 'POST' method </p>  <pre><code>&lt;form method =""post"" class=""form"" action = ""/newguest"" method = 'post'&gt;    Name: &lt;input type=""text"" name=""name""/&gt;      &lt;p&gt;Item: &lt;input type=""text"" name=""item""/&gt;     Qty: &lt;input type=""text"" name=""qty""/&gt;    Color: &lt;input type=""text"" name=""color""/&gt;&lt;/p&gt;    &lt;div class=""itemInfo"" id=""itemInfo""&gt;&lt;/div&gt;     &lt;input type =""button"" value=""Add Item"" onclick=""newItem();""/&gt;      &lt;p&gt;Phone: &lt;input type=""text"" name=""phone""/&gt;    Email: &lt;input type=""text"" name=""email""/&gt;    Artwork: &lt;input type=""file"" name=""file""/&gt;    &lt;p&gt;Quote: &lt;input type=""text"" name=""quote""/&gt;&lt;/p&gt;  &lt;/p&gt;    &lt;p&gt;Notes: &lt;textarea cols=""40"" rows=""10""&gt;&lt;/textarea&gt;  &lt;/p&gt;    &lt;input type=""submit"" value='Add Order'/&gt;  &lt;/form&gt; </code></pre>  <p>And finally the python script on the server side</p>  <pre><code> @bottle.route('/newguest', method = 'POST') def insert_newguest():     name = bottle.request.forms.get(""name"")     email = bottle.request.forms.get(""email"")     item = bottle.request.forms.get(""item"")     qty = bottle.request.forms.get(""qty"")     color = bottle.request.forms.get(""color"")     count = bottle.request.forms.get(count)     itemDict = dict()     qtyDict = dict()     colorDict = dict()     for num in range(1, count):      itemkey = ""item"" + str(num)     qtyKey = ""qyt"" + str(num)     colorKey = ""color"" + str(num)     itemDict[itemKey]= bottle.request.forms.get(""item""+str(num))     qtyDict[qtyKey] = bottle.request.forms.get(""qty""+str(num))     colorDict[colorKey] = bottle.request.forms.get(""color""+str(num)) </code></pre>  <p>When attempting to add information with the 'POST' method, I receive the following error:</p>  <p><img src=""https://i.stack.imgur.com/pzlaJ.png"" alt=""enter image description here""></p>"	2013-07-24 03:13:48.59 UTC	17826013	"<p>You are probably getting this message because your hidden field hasn't been created correctly.  </p>  <ul> <li><p>Firstly, I can't see you actually adding the <code>newDiv</code> to the DOM in your code above.  </p></li> <li><p>Secondly - is the HTML form you have provided hard coded? If so then why are you hardcoding a form and then creating the fields again in javascript? This seems a bit weird.  </p></li> <li><p>Thirdly and most importantly, as a hidden field is just an <code>&lt;input&gt;</code>, you need to replace</p>  <pre><code>var count = document.createElement(""HIDDEN""); </code></pre>  <p>With:</p>  <pre><code>var count = document.createElement(""INPUT""); count.setAttribute('type', 'hidden'); count.setAttribute('name', 'count'); count.setAttribute('value', my_count_variable); </code></pre></li> </ul>  <p>See <a href=""https://stackoverflow.com/questions/1000795/create-a-hidden-field-in-javascript"">this answer</a> and an example <a href=""http://jsfiddle.net/zG6GL/"" rel=""nofollow noreferrer"">jsFiddle</a>.  Now when you submit the form your <code>count</code> field should be populated in the Python script.  </p>  <p>As an aside, this kind of request is often handled by AJAX.  The idea is the same its just that you don't need to refresh the browser to send your count to the Python server.  You can see an example of <a href=""https://stackoverflow.com/questions/8567114/how-to-make-an-ajax-call-without-jquery"">how to do this without jQuery here</a>.</p>"			2013-07-24 05:39:08.18 UTC
17839493	javascript|python|python-2.7|flask	referring to specific parts of a python dictionary in javascript	"<p>I made a program which parses data and then does a python <code>json.dumps()</code> with it. Next, in my javascript, I did a jQuery <code>getJSON()</code> with this data. Before I did the <code>json.dumps()</code> with my data, I split it into three list because I didn't know how to deal with the data in js. The data is structured like this:</p>  <pre><code>Key: (value1, value2) </code></pre>  <p>I simply need to refer to those individual 'columns' in my javascript separately. I feel like it might be more efficient to just do the <code>dumps()</code> with the python dictionary but I don't know how to refer to it as I want in the javascript. Obviously it's important that the data stay ""grouped""</p>  <p>How would I go about doing that?</p>"	2013-07-24 16:14:44.65 UTC	17842238	"<p>Here's a full example that I have used in a mapping project. Javascript loads data via Ajax from the flask application.</p>  <p>The JQuery ajax method is very similar to the getJSON method.</p>  <pre><code>#ajax method to retreive well data for dynamic well values, x_pos, y_pos, substance concentration @app.route('/getWellData', methods=['GET', 'POST']) def getWellData():     #get all samples with that date     date_collected = request.args.get('date_collected')     site_id = request.args.get('site_id')     site_map_id = request.args.get('site_map_id')     substance_id = request.args.get('substance_id')      well_results = wellSubstanceDataBySite(         site_id=site_id,         site_map_id=site_map_id,         date_collected=date_collected,         substance_id=substance_id)      #return json to updateMarks ajax javascript function     return json.dumps(well_results) </code></pre>  <p>Javascript:</p>  <pre><code>//call the ajax endpoint for getWellData to return position, values, etc $.ajax({     dataType: ""json"",     url: '/getWellData',     data: data,     success: function(data){          //iterate over each value in the data array and append it as div element to the .landmarks div         $.each(data, function(well_id, well){              //create the mark element, must be all mashed into one line, wont work with multiple lines             //sutract depth_of_water (well.value) from well.top_of_casing             var goundwater_elevation_val = well.top_of_casing - well.value             var mark = '&lt;div class=""item mark"" id=""well-' + well_id + '"" data-id=""' + well_id + '"" data-position=""' + well.xpos + "","" + well.ypos + '"" data-value=""' + goundwater_elevation_val.toFixed(4) + '"" data-show-at-zoom=""0""&gt;&lt;div&gt;&lt;div class=""text""&gt;&lt;input class=""well-checkboxes"" type=""checkbox"" name=""enable-well-' + well_id + '"" checked style=""margin:3px;""&gt;&lt;strong&gt;' + goundwater_elevation_val.toFixed(4) + '&lt;/strong&gt;&lt;/div&gt;&lt;img src=""/static/jquery-image-viewer/example/images/mark.png"" width=""50px"" height=""50px"" alt=""Permanent Mark"" /&gt;&lt;/div&gt;&lt;/div&gt;';             if (well.value != 0) {                 //append the new mark to the .landmarks div                 $('.landmarks').append(mark);             }          });          //refresh all landmarks to plot the new landmarks on the map with the smoothZoom API         $('#sitemap').smoothZoom('refreshAllLandmarks');     } }); </code></pre>"			2013-07-24 18:39:50.68 UTC
17866654	javascript|prototype-programming	Replicating python's __call__ in javascript?	"<p>I want to replicate instantiating a callable class <strong>without</strong> using the module pattern. </p>  <p>The following is my best attempt at this. However, it uses <code>__proto__</code> which I'm not sure about. Can this be done without <code>__proto__</code>? </p>  <pre><code>function classcallable(cls) {     /*      * Replicate the __call__ magic method of python and let class instances      * be callable.      */     var new_cls = function () {         var obj = Object.create(cls.prototype);         // create callable         // we use func.__call__ because call might be defined in         // init which hasn't been called yet.         var func = function () {             return func.__call__.apply(func, arguments);         };         func.__proto__ = obj;         // apply init late so it is bound to func and not cls         cls.apply(func, arguments);         return func;     }     new_cls.prototype = cls.prototype;     return new_cls  } </code></pre>"	2013-07-25 19:05:33.01 UTC	20022319	"<h2>Proxy</h2>  <p>If you are against using <code>__proto__</code> or anything related to it but still want the inheritability, you could make use of <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy"" rel=""noreferrer"">Proxies</a>.</p>  <pre><code>var ObjectCallable_handler = {     get: function get(self, key) {         if (self.hasOwnProperty(key)) {             return self[key];         } else { return self.__inherit__[key]; }     },     apply: function apply(self, thisValue, args) {         return (self.__call__ || self.__inherit__.__call__).apply(self, args);     } };  function ObjectCallable(cls) {     var p = new Proxy(function() { }, ObjectCallable_handler);     p.__inherit__ = cls;     return p; } </code></pre>  <h3>Pros</h3>  <ul> <li>Maintains inheritability.</li> <li>Does not involve a traditional prototype chain.</li> <li><a href=""http://wiki.ecmascript.org/doku.php?id=harmony%3adirect_proxies"" rel=""noreferrer"">ES6 draft</a>.</li> </ul>  <h3>Cons</h3>  <ul> <li><a href=""http://kangax.github.io/es5-compat-table/es6/#Proxies"" rel=""noreferrer"">Currently supported</a> only by Firefox >=24.</li> </ul>  <hr>  <h2>setPrototypeOf</h2>  <p>If the lack of support for Proxies dismays you, you could try a <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/setPrototypeOf"" rel=""noreferrer""><code>setPrototypeOf</code></a> polyfill instead.</p>  <pre><code>Object.setPrototypeOf = Object.setPrototypeOf || function (obj, proto) {     obj.__proto__ = proto;     return obj; }  function ObjectCallable(cls) {     var f = function() { return f.__call__.apply(f, arguments); };     Object.setPrototypeOf(f, cls);     return f; } </code></pre>  <h3>Pros</h3>  <ul> <li>Likely to work the best right now and in the future.</li> <li><a href=""http://wiki.ecmascript.org/doku.php?id=harmony%3aspecification_drafts"" rel=""noreferrer"">ES6 draft</a>.</li> </ul>  <h3>Cons</h3>  <ul> <li>Makes use of the non-standard <code>__proto__</code> through the polyfill and <em>will</em> require testing across the engines/browsers you want to support.</li> <li><code>setPrototypeOf</code> is <a href=""http://kangax.github.io/es5-compat-table/es6/#Object.setPrototypeOf"" rel=""noreferrer"">not currently implemented</a> in any browser.</li> </ul>  <hr>  <h2>copy</h2>  <p>This is the simplest solution with the least amount of functionality, but it's guaranteed to work almost anywhere. Create a new function and clone an object's properties onto it.</p>  <pre><code>function ObjectCallable(cls) {     var f = function() { return f.__call__.apply(f, arguments); }, k;     for (k in cls) {         f[k] = cls[k];     }     return f; } </code></pre>  <h3>Pros</h3>  <ul> <li>Works virtually everywhere.</li> </ul>  <h3>Cons</h3>  <ul> <li>Does not maintain any semblance of an inheritance or prototype structure whatsoever.</li> </ul>  <hr>  <h2>Conclusion</h2>  <p>What you want to do with replicating Python's <code>__call__</code> functionality in JavaScript will require either more time as ES6 develops and becomes implemented in more engines or relying on non-standard functionality such as <code>__proto__</code>.</p>"			2013-11-16 18:50:00.97 UTC
17898198	java|javascript|python|word|word-processor	"Separate japanese words in python, javascript or java?"	"<p><em>Background: I'm gonna attempt to make a list of the most used words/kanji on different message boards on 2ch.net so that japanese learners quckly can participate in online discussion and thus become motivated to continue.</em></p>  <p>I'm looking for a way to separate words, but it's not as simple as in english. Words can either be one kanji or consist of multiple, like ""巨人"" (giant) or ""人"" (human), and there are no spaces either.</p>  <p>So I probably need to have some japanese word processing library, and I only know python, javascript and java. (I prefer python)</p>"	2013-07-27 13:13:10.197 UTC	17898305	"<p>I searched for ""natural language processor"" for japanese and found this</p>  <p><a href=""https://jprocessing.readthedocs.org/en/latest/"" rel=""nofollow"">https://jprocessing.readthedocs.org/en/latest/</a></p>  <p>and it seems to be what I was looking for.</p>"			2013-07-27 13:24:43.913 UTC
17901156	javascript|python|pyyaml	Fastest way to convert JavaScript object/array to Python dict/list	"<p>I'm trying to parse the code of JavaScript objects that hold huge JavaScript arrays and convert it to a Python dictionary with lists.</p>  <p>At the moment I'm using PyYaml, but that didn't work directly, as it can't handle consecutive commas (e.g. it breaks on '[,,,0,]' with: <em>expected the node content, but found ','</em>). So I substituted these out, but this is all very slow. I'm wondering if any of you know of a better and faster way to do this. JSON decode doesn't work as JavaScript code isn't JSON valid either.</p>  <p>This is the code I'm using, explained above, with js_obj as example:</p>  <pre><code>js_obj = ""{index: '37',data: [, 1, 2, 3,,,]}""  def repl(match):     content = re.sub("" "", """",match.group(0))     length = len(content) - 1     result = ''     if content[0] == '[':         result = '[""""'         length -= 1      after = ','     if content[-1] == ']':         length -= 1         after += '""""]'      return result + (',""""' * length) + after  py_dict = yaml.load(re.sub('\[? *(, *)+\]?', repl, js_obj)) </code></pre>"	2013-07-27 18:38:54.557 UTC	17901467	"<p>You probably should write data from JavaScript using JSON, and then read it into Python in JSON.  YAML is OK, but I tend to prefer JSON over YAML; JSON is more consistent.</p>  <p>If you must parse the JavaScript, you might want to look into pyparsing or similar.</p>"			2013-07-27 19:10:56.107 UTC
17938891	javascript|python|mechanize	Data extraction by Python from a dynamic javascript page	"<p>I have to extract the data from the table from the following website:</p>  <pre><code>http://www.mcxindia.com/SitePages/indexhistory.aspx </code></pre>  <p>When I click on GO, I get a table appended to the page dynamically. I want export those data from the page to a csv file(which I know how to handle), but the source code does not contain any data points.</p>  <p>I have tried looking into the javascript code, when I inspect the elements after the table is generated, I get the data points, but not in the source. I am using mechanize in Python.</p>  <p>I think it is because the page is getting loaded dynamically. What should I do/use?</p>"	2013-07-30 05:25:21.61 UTC	45038771	"<p>The best thing I personally do while dealing dynamic web pages is use PyQt webkit and try to mimic as a browser, and then pass the URL to the browser and finally getting the HTML after all Javascripts are rendered. </p>  <p>Example Code-</p>  <pre><code>import sys from PyQt4.QtGui import QApplication from PyQt4.QtCore import QUrl from PyQt4.QtWebKit import QWebPage import bs4 as bs     class Client(QWebPage):     def __init__(self, url):         self.app = QApplication(sys.argv)         QWebPage.__init__(self)         self.loadFinished.connect(self.on_page_load)         self.mainFrame().load(QUrl(url))         self.app.exec()      def on_page_load(self):         self.app.quit()   url = //your URL client_response = Client(url) source = client_response.mainFrame().toHtml() soup = bs.BeautifulSoup(source, ""lxml"") // BeautifulSoup stuff </code></pre>"			2017-07-11 15:28:48.043 UTC
17938891	javascript|python|mechanize	Data extraction by Python from a dynamic javascript page	"<p>I have to extract the data from the table from the following website:</p>  <pre><code>http://www.mcxindia.com/SitePages/indexhistory.aspx </code></pre>  <p>When I click on GO, I get a table appended to the page dynamically. I want export those data from the page to a csv file(which I know how to handle), but the source code does not contain any data points.</p>  <p>I have tried looking into the javascript code, when I inspect the elements after the table is generated, I get the data points, but not in the source. I am using mechanize in Python.</p>  <p>I think it is because the page is getting loaded dynamically. What should I do/use?</p>"	2013-07-30 05:25:21.61 UTC	18130624	"<p>This worked!!! </p>  <pre><code>import httplib  import urllib  import urllib2  from BeautifulSoup import BeautifulSoup import mechanize br = mechanize.Browser() br.set_handle_robots(False) br.addheaders = [('User-agent', 'Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.0.1) Gecko/2008071615 Fedora/3.0.1-1.fc9 Firefox/3.0.1')] url = 'http://www.mcxindia.com/SitePages/indexhistory.aspx' br.open(url) response = br.response().read() br.select_form(nr=0) br.set_all_readonly(False) br.form['mTbFromDate']='08/01/2013' br.form['mTbToDate']='08/08/2013' response = br.submit(name='mBtnGo').read() print response </code></pre>"			2013-08-08 15:55:42.173 UTC
17938891	javascript|python|mechanize	Data extraction by Python from a dynamic javascript page	"<p>I have to extract the data from the table from the following website:</p>  <pre><code>http://www.mcxindia.com/SitePages/indexhistory.aspx </code></pre>  <p>When I click on GO, I get a table appended to the page dynamically. I want export those data from the page to a csv file(which I know how to handle), but the source code does not contain any data points.</p>  <p>I have tried looking into the javascript code, when I inspect the elements after the table is generated, I get the data points, but not in the source. I am using mechanize in Python.</p>  <p>I think it is because the page is getting loaded dynamically. What should I do/use?</p>"	2013-07-30 05:25:21.61 UTC	17940348	"<p>To avoid using javascript aware transports you need to:</p>  <ol> <li>Install web debugger into your browser.</li> <li>Goto that page. Press F12 to open debugger. Reload page.</li> <li>Analyze contents of 'network' tab. Usually ajax pages downloads data as html fragments or as json. Just look into <code>response</code> tabs of each request made after pressing 'GO' and you will find familiar data.</li> <li>Now you can create simple <code>urllib/urllib2</code> downloader for that url.</li> <li>parse that data and convert to csv.</li> </ol>  <p><a href=""http://www.mcxindia.com/SitePages/indexhistory.aspx"" rel=""nofollow"">http://www.mcxindia.com/SitePages/indexhistory.aspx</a> sends <code>POST</code> request with search parameters on each 'GO' and recieves html fragment you need to parse and convert into csv.</p>  <p>So if to simulate that <code>POST</code> - you dont need no new browser window.</p>"			2013-07-30 07:02:48.773 UTC
17938891	javascript|python|mechanize	Data extraction by Python from a dynamic javascript page	"<p>I have to extract the data from the table from the following website:</p>  <pre><code>http://www.mcxindia.com/SitePages/indexhistory.aspx </code></pre>  <p>When I click on GO, I get a table appended to the page dynamically. I want export those data from the page to a csv file(which I know how to handle), but the source code does not contain any data points.</p>  <p>I have tried looking into the javascript code, when I inspect the elements after the table is generated, I get the data points, but not in the source. I am using mechanize in Python.</p>  <p>I think it is because the page is getting loaded dynamically. What should I do/use?</p>"	2013-07-30 05:25:21.61 UTC	17939049	"<p>mechanize doesn't/can't evaluate javascript. The easiest way that I've seen to evaluate javascript is by using Selenium, which will open a browser on your computer and communicate with python.</p>  <p>I answered a similar question <a href=""https://stackoverflow.com/questions/17768460/mechanize-not-showing-fb-messages-form/17769190#17769190"">here</a></p>"			2013-07-30 05:39:33.68 UTC
17938891	javascript|python|mechanize	Data extraction by Python from a dynamic javascript page	"<p>I have to extract the data from the table from the following website:</p>  <pre><code>http://www.mcxindia.com/SitePages/indexhistory.aspx </code></pre>  <p>When I click on GO, I get a table appended to the page dynamically. I want export those data from the page to a csv file(which I know how to handle), but the source code does not contain any data points.</p>  <p>I have tried looking into the javascript code, when I inspect the elements after the table is generated, I get the data points, but not in the source. I am using mechanize in Python.</p>  <p>I think it is because the page is getting loaded dynamically. What should I do/use?</p>"	2013-07-30 05:25:21.61 UTC	17939959	"<p>I agreed Matthew Wesly comment. We will get the dynamic page using Selenium, iMacro like a addons. It captures the dynamic pages response based on our recording. It also has the JS script capability.</p>  <p>I think thought, for easy extraction we will go for normal Content Fetch logic using urllib2 and urllib packages.</p>  <p>First get the page 'viewstate' parameter. i.e Get all hidden element information from the home page and pass the form information as like the JS script does.</p>  <p>And also pass Content-Type key value exactly. Here your response is in the form of ""text/plain; charset=utf-8"".</p>"			2013-07-30 06:41:51.637 UTC
17953552	python|sqlite|static-site	"I have a static website built using HTML, CSS and Javascript. How do I integrate this with a SQLite3 database accessed with the Python API?"	"<p>Title question says it all. I was trying to figure out how I could go about integrating the database created by sqlite3 and communicate with it through Python from my website. </p>  <p>If any further information is required about the development environment, please let me know. </p>"	2013-07-30 17:29:57.21 UTC	18099967	"<p>It looks like your needs has changed and you are going into direction where static web site is not sufficient any more. Firstly, I would pick appropriate Python framework for your needs. if static website was sufficient until recently Django can be perfect for you. Next I would suggest describing your DB schema for ORM used in chosen framework. I see no point in querying your DB using SQL until you would have a specific reason. And finally, I would start using static content of your website as templates, replacing places where dynamic data is required. Django internal template language can be easily used that way. If not, Jinja2 also could be good. My advise is base on many assumptions, as your question is quite open and undefined. Anyway, I think it would be the best way to start transition period from static to dynamic.</p>"			2013-08-07 09:41:17.99 UTC
17953552	python|sqlite|static-site	"I have a static website built using HTML, CSS and Javascript. How do I integrate this with a SQLite3 database accessed with the Python API?"	"<p>Title question says it all. I was trying to figure out how I could go about integrating the database created by sqlite3 and communicate with it through Python from my website. </p>  <p>If any further information is required about the development environment, please let me know. </p>"	2013-07-30 17:29:57.21 UTC	18132138	"<p>I'm not sure if you are using JQuery at all but you should use AJAX to make calls to the python api. </p>  <p>Jquery Method: <a href=""http://api.jquery.com/jQuery.ajax/"" rel=""nofollow"">http://api.jquery.com/jQuery.ajax/</a></p>  <pre><code>$.ajax({  type: ""POST"", //OR GET  url: yourapiurl,  data: datatosend,  success: success, //Callback when request is successful that contains the SQlite data  dataType: dataType }); </code></pre>  <p>Javascript Method: <a href=""http://www.w3schools.com/ajax/ajax_xmlhttprequest_send.asp"" rel=""nofollow"">http://www.w3schools.com/ajax/ajax_xmlhttprequest_send.asp</a></p>  <pre><code>xmlhttp=new XMLHttpRequest(); xmlhttp.open(""POST"",yourapiurl,true); xmlhttp.send(); </code></pre>  <p>The responseText attribute of the XMLHttpRequest be populated with the SQlite  data from the api</p>"			2013-08-08 17:20:15.073 UTC
17953552	python|sqlite|static-site	"I have a static website built using HTML, CSS and Javascript. How do I integrate this with a SQLite3 database accessed with the Python API?"	"<p>Title question says it all. I was trying to figure out how I could go about integrating the database created by sqlite3 and communicate with it through Python from my website. </p>  <p>If any further information is required about the development environment, please let me know. </p>"	2013-07-30 17:29:57.21 UTC	18004374	"<p>Use XMLHttpRequest (<a href=""https://en.wikipedia.org/wiki/XMLHttpRequest"" rel=""nofollow"">https://en.wikipedia.org/wiki/XMLHttpRequest</a>) to call your python script and put the results back in your webpage.</p>"			2013-08-01 20:55:19.53 UTC
17958732	javascript|jquery|python|ajax|json	get json data from python to javascript	"<p>I am trying to access json data sent from python script. In my python script I am sending data to my Ajax success function in the following format:</p>  <pre><code>def main(): """"""Create instance of FieldStorage""""""  dat = cgi.FieldStorage( keep_blank_values = True )   Start_date = ""07/01/2013"" dc = ['las','sjc'] sys = ""All""    result = [{""startdate"":Start_date,""datacenter"":dc,""system"":sys}]  res = json.dumps(result)  print res </code></pre>  <p>Now in the javascript I am trying to access the individual values of my Json but I get a message saying ""undefined"" in console.log. But the data is printing correctly, I am not able to access individual objects of my JSON. </p>  <pre><code>             $.ajax({                     type: 'get',                     url: '/cgi-bin/worlddata.py',                     data: $(form).serialize(),                       success: function(data, status) {                         var response = JSON.parse(data);                       console.log(""THe json is ""+response.datacenter); //prints undefined                       console.log(""result is ""+data); // prints result is [{""startdate"": ""07/01/2013"", ""system"": ""All"", ""datacenter"": [""las"", ""sjc""]}]                        console.log(""The status is ""+status); // prints The status is success                       console.log(data.datacenter); // prints undefined </code></pre>  <p>My question how to access response.message or data.message? Can somebody please point out what I am doing wrong? </p>"	2013-07-30 22:40:50.717 UTC	17958772	"<p>Try using jquery's getJSON function.</p>  <pre><code>$.getJSON('/cgi-bin/worlddata.py', {     $(form).serialize() }).success(data, status) {    success stuff goes here }); </code></pre>  <p>Also, if you want to use ajax I believe you have to set dataType: ""json"" as well.</p>"			2013-07-30 22:43:54.777 UTC
17958732	javascript|jquery|python|ajax|json	get json data from python to javascript	"<p>I am trying to access json data sent from python script. In my python script I am sending data to my Ajax success function in the following format:</p>  <pre><code>def main(): """"""Create instance of FieldStorage""""""  dat = cgi.FieldStorage( keep_blank_values = True )   Start_date = ""07/01/2013"" dc = ['las','sjc'] sys = ""All""    result = [{""startdate"":Start_date,""datacenter"":dc,""system"":sys}]  res = json.dumps(result)  print res </code></pre>  <p>Now in the javascript I am trying to access the individual values of my Json but I get a message saying ""undefined"" in console.log. But the data is printing correctly, I am not able to access individual objects of my JSON. </p>  <pre><code>             $.ajax({                     type: 'get',                     url: '/cgi-bin/worlddata.py',                     data: $(form).serialize(),                       success: function(data, status) {                         var response = JSON.parse(data);                       console.log(""THe json is ""+response.datacenter); //prints undefined                       console.log(""result is ""+data); // prints result is [{""startdate"": ""07/01/2013"", ""system"": ""All"", ""datacenter"": [""las"", ""sjc""]}]                        console.log(""The status is ""+status); // prints The status is success                       console.log(data.datacenter); // prints undefined </code></pre>  <p>My question how to access response.message or data.message? Can somebody please point out what I am doing wrong? </p>"	2013-07-30 22:40:50.717 UTC	17958789	"<p>You are serializing an array containing an object; on the python side [] is superfluous. Remove them and then in javascript you can access the values as result.system, result.startdate and result.datacenter</p>  <pre><code>result = {""startdate"": Start_date,""datacenter"": dc,""system"": sys} print json.dumps(result) </code></pre>  <p>And then</p>  <pre><code>var response = JSON.parse(data); console.log(""The json startdate is "" + response.startdate); //prints undefined </code></pre>"			2013-07-30 22:45:09.58 UTC
17964654	javascript|python|regex	Python string.replace equivalent (from Javascript)	"<p>I am trying to pick up python and as someone coming from Javascript I haven't really been able to understand python's regex package re</p>  <p>What I am trying to do is something I have done in javascript to build a very very simple templating ""engine"" (I understand AST is the way to go for anything more complex):</p>  <p>In javascript: </p>  <pre><code>var rawString =    ""{{prefix_HelloWorld}}   testing this. {{_thiswillNotMatch}} \    {{prefix_Okay}}"";  rawString.replace(    /\{\{prefix_(.+?)\}\}/g,    function(match, innerCapture){      return ""One To Rule All""; }); </code></pre>  <p>In Javascript that will result in:</p>  <blockquote>   <p>""One To Rule All   testing this. {{_thiswillNotMatch}}        One To   Rule All""</p> </blockquote>  <p>And the function will get called twice with: </p>  <pre><code>   innerCapture === ""HelloWorld""    match ==== ""{{prefix_HelloWorld}}"" </code></pre>  <p>and: </p>  <pre><code>   innerCapture === ""Okay""    match ==== ""{{prefix_Okay}}"" </code></pre>  <p>Now, in python I have tried looking up docs on the re package</p>  <pre><code>import re </code></pre>  <p>Have tried doing something along the lines of:  </p>  <pre><code>match = re.search(r'pattern', string) if match:   print match.group()   print match.group(1) </code></pre>  <p>But it really doesn't make sense to me and doesn't work. For one, I'm not clear on what this group() concept means? And how am I to know if there is match.group(n)... group(n+11000)?</p>  <p>Thanks!</p>"	2013-07-31 07:53:08.413 UTC	17965386	"<p>I think you want to substitute all occurrences of {{prefix_*}} where * is basically anything. If so, this code works and is simple. </p>  <pre><code> pattern = ""\{\{prefix_.*?\}\}""  re.sub(pattern, ""One To Rule All"", rawString) </code></pre>  <p>Cheers!</p>"			2013-07-31 08:33:57.69 UTC
17964654	javascript|python|regex	Python string.replace equivalent (from Javascript)	"<p>I am trying to pick up python and as someone coming from Javascript I haven't really been able to understand python's regex package re</p>  <p>What I am trying to do is something I have done in javascript to build a very very simple templating ""engine"" (I understand AST is the way to go for anything more complex):</p>  <p>In javascript: </p>  <pre><code>var rawString =    ""{{prefix_HelloWorld}}   testing this. {{_thiswillNotMatch}} \    {{prefix_Okay}}"";  rawString.replace(    /\{\{prefix_(.+?)\}\}/g,    function(match, innerCapture){      return ""One To Rule All""; }); </code></pre>  <p>In Javascript that will result in:</p>  <blockquote>   <p>""One To Rule All   testing this. {{_thiswillNotMatch}}        One To   Rule All""</p> </blockquote>  <p>And the function will get called twice with: </p>  <pre><code>   innerCapture === ""HelloWorld""    match ==== ""{{prefix_HelloWorld}}"" </code></pre>  <p>and: </p>  <pre><code>   innerCapture === ""Okay""    match ==== ""{{prefix_Okay}}"" </code></pre>  <p>Now, in python I have tried looking up docs on the re package</p>  <pre><code>import re </code></pre>  <p>Have tried doing something along the lines of:  </p>  <pre><code>match = re.search(r'pattern', string) if match:   print match.group()   print match.group(1) </code></pre>  <p>But it really doesn't make sense to me and doesn't work. For one, I'm not clear on what this group() concept means? And how am I to know if there is match.group(n)... group(n+11000)?</p>  <p>Thanks!</p>"	2013-07-31 07:53:08.413 UTC	17964739	"<p>Python's <code>re.sub</code> function is just like JavaScript's <code>String.prototype.replace</code>:</p>  <pre><code>import re  def replacer(match):     return match.group(1).upper()  rawString = ""{{prefix_HelloWorld}}   testing this. {{_thiswillNotMatch}} {{prefix_Okay}}"" result = re.sub(r'\{\{prefix_(.+?)\}\}', replacer, rawString) </code></pre>  <p>And the result:</p>  <pre><code>'HELLOWORLD   testing this. {{_thiswillNotMatch}} OKAY' </code></pre>  <p>As for the groups, notice how your replacement function accepts a <code>match</code> argument and an <code>innerCapture</code> argument. The first argument is <code>match.group(0)</code>. The second one is <code>match.group(1)</code>.</p>"			2013-07-31 07:57:59.19 UTC
17964654	javascript|python|regex	Python string.replace equivalent (from Javascript)	"<p>I am trying to pick up python and as someone coming from Javascript I haven't really been able to understand python's regex package re</p>  <p>What I am trying to do is something I have done in javascript to build a very very simple templating ""engine"" (I understand AST is the way to go for anything more complex):</p>  <p>In javascript: </p>  <pre><code>var rawString =    ""{{prefix_HelloWorld}}   testing this. {{_thiswillNotMatch}} \    {{prefix_Okay}}"";  rawString.replace(    /\{\{prefix_(.+?)\}\}/g,    function(match, innerCapture){      return ""One To Rule All""; }); </code></pre>  <p>In Javascript that will result in:</p>  <blockquote>   <p>""One To Rule All   testing this. {{_thiswillNotMatch}}        One To   Rule All""</p> </blockquote>  <p>And the function will get called twice with: </p>  <pre><code>   innerCapture === ""HelloWorld""    match ==== ""{{prefix_HelloWorld}}"" </code></pre>  <p>and: </p>  <pre><code>   innerCapture === ""Okay""    match ==== ""{{prefix_Okay}}"" </code></pre>  <p>Now, in python I have tried looking up docs on the re package</p>  <pre><code>import re </code></pre>  <p>Have tried doing something along the lines of:  </p>  <pre><code>match = re.search(r'pattern', string) if match:   print match.group()   print match.group(1) </code></pre>  <p>But it really doesn't make sense to me and doesn't work. For one, I'm not clear on what this group() concept means? And how am I to know if there is match.group(n)... group(n+11000)?</p>  <p>Thanks!</p>"	2013-07-31 07:53:08.413 UTC	25277726	"<p>If you will be using the same pattern more than once (such as in a loop), then this is better:</p>  <pre><code>pattern = re.compile(""\{\{prefix_.*?\}\}"") # ... later ... pattern.sub(""One To Rule All"", rawString) </code></pre>"			2014-08-13 03:49:30.363 UTC
17974114	javascript|python|mongodb|bottle	Display JSON in Javascript from Python Bottle	"<p>I am trying to access a mongodb record within a javascript function to display the document on a webpage.  Using the Bottle framework with pymongo, I have tried to first encode the mongodb document as a JSON object to pass to my javascript function.</p>  <pre><code>@bottle.route('/view/&lt;_id&gt;', method = 'GET') def show_invoice(_id):     client = pymongo.MongoClient(""mongodb://localhost"")     db = client.orders     collection = db.myorders     from bson.objectid import ObjectId     result = collection.find_one({'_id': ObjectId(_id)})     temp = json.dumps(result,default=json_util.default)     print ""temp: "" + temp      return bottle.template('invoice', rows = temp) </code></pre>  <p>When I try to display the document within my HTML page with the javascript function, nothing happens.  However, when I call the variable, rows, that I am trying to pass as {{rows}} within the body of the HTML it does display.  It seems it is only the JS function that does not display anything.  </p>  <pre><code>    &lt;!DOCTYPE html&gt;  &lt;html&gt;   &lt;head&gt;     &lt;head&gt;     &lt;title&gt;Invoice Report&lt;/title&gt;     &lt;script type=""text/javascript""&gt;     function fillTable()     {       var obj = {{rows}};       document.write(obj);      }     &lt;/script&gt;    &lt;/head&gt;   &lt;/head&gt;   &lt;body onload=""fillTable()""&gt;      &lt;div class=""invoice""&gt;      &lt;/div&gt;      &lt;h4&gt;Rows from body&lt;/h4&gt; {{rows}}    &lt;/body&gt;  &lt;/html&gt; </code></pre>  <p>I tried to use jQuery to deserialize the JSON object rows with the function</p>  <pre><code>jQuery.parseJSON(rows); </code></pre>  <p>and even as     jQuery.parseJSON({{rows}});</p>  <p>I also tried to make the variable unescaped everywhere possible as {{!rows}} So does anybody see what I am doing wrong? How do I take a mongodb document with pymongo, and use bottle to display it on a webpage? I realize that similar questions have been asked, but I can't seem to get anything I have found to work in my particular situation.</p>"	2013-07-31 15:07:08.077 UTC	17978813	"<p>The issue isn't with bottle rendering your json, it's with using <code>document.write()</code>.</p>  <p>Open a new tab in your browser, and point it to the url: 'about:blank'.  This will give you a blank webpage.  Now, right click and open your developer tools.  Try running <code>document.write('Stuff');</code> from that context.  You shouldn't see any changes to the page.</p>  <p>Instead try:</p>  <pre><code>var body = document.getElementsByTagName(""body"")[0]; body.innerHTML = ""Stuff""; </code></pre>  <p>and note the difference.</p>  <p>There are of course, many other ways to achieve this effect, but this is the simplest without any requirements on external javascript libraries.</p>"			2013-07-31 19:07:09.827 UTC
17974114	javascript|python|mongodb|bottle	Display JSON in Javascript from Python Bottle	"<p>I am trying to access a mongodb record within a javascript function to display the document on a webpage.  Using the Bottle framework with pymongo, I have tried to first encode the mongodb document as a JSON object to pass to my javascript function.</p>  <pre><code>@bottle.route('/view/&lt;_id&gt;', method = 'GET') def show_invoice(_id):     client = pymongo.MongoClient(""mongodb://localhost"")     db = client.orders     collection = db.myorders     from bson.objectid import ObjectId     result = collection.find_one({'_id': ObjectId(_id)})     temp = json.dumps(result,default=json_util.default)     print ""temp: "" + temp      return bottle.template('invoice', rows = temp) </code></pre>  <p>When I try to display the document within my HTML page with the javascript function, nothing happens.  However, when I call the variable, rows, that I am trying to pass as {{rows}} within the body of the HTML it does display.  It seems it is only the JS function that does not display anything.  </p>  <pre><code>    &lt;!DOCTYPE html&gt;  &lt;html&gt;   &lt;head&gt;     &lt;head&gt;     &lt;title&gt;Invoice Report&lt;/title&gt;     &lt;script type=""text/javascript""&gt;     function fillTable()     {       var obj = {{rows}};       document.write(obj);      }     &lt;/script&gt;    &lt;/head&gt;   &lt;/head&gt;   &lt;body onload=""fillTable()""&gt;      &lt;div class=""invoice""&gt;      &lt;/div&gt;      &lt;h4&gt;Rows from body&lt;/h4&gt; {{rows}}    &lt;/body&gt;  &lt;/html&gt; </code></pre>  <p>I tried to use jQuery to deserialize the JSON object rows with the function</p>  <pre><code>jQuery.parseJSON(rows); </code></pre>  <p>and even as     jQuery.parseJSON({{rows}});</p>  <p>I also tried to make the variable unescaped everywhere possible as {{!rows}} So does anybody see what I am doing wrong? How do I take a mongodb document with pymongo, and use bottle to display it on a webpage? I realize that similar questions have been asked, but I can't seem to get anything I have found to work in my particular situation.</p>"	2013-07-31 15:07:08.077 UTC	17974336	<p>You can't have both an 'src' attribute and javascript code in the same  tag. Place the  fillTable function within a new script tag.</p>			2013-07-31 15:18:02.657 UTC
18089666	javascript|python|html|postgresql-9.1	Javascript Python-Postgres	"<p>I'm building a public database of scientific data. </p>  <p>By now I have a postgres 9.1 database running on a machine, and I've been using psycopg2 to interact from python 2.7. </p>  <p>At the other hand, I'm working on a Boilerplate html interface. </p>  <p>The question is, how to build the interaction between the webpage and the python/postgres database?  which library should I use ?</p>  <p>Thanks in advance</p>"	2013-08-06 20:18:44.823 UTC	18090132	"<p>What you're looking for is a web framework. Finding the right one is a hard choice and source of lots of discussions. Have a look at this list: <a href=""http://wiki.python.org/moin/WebFrameworks"" rel=""nofollow"">http://wiki.python.org/moin/WebFrameworks</a></p>"			2013-08-06 20:44:52.453 UTC
18160848	javascript|python|timestamp|utc|gmt	Python vs Javascript DateTime	"<p>I'm trying to convert a Javascript API call to Python.  The working javascript code works fine, generating a timestamp like this:</p> <pre><code>var curdate = new Date(); var gmtstring = curdate.toGMTString(); var utc = Date.parse(gmtstring) / 1000; </code></pre> <p>This result (this number of seconds since the epoch) is subsequently hashed and used in the API call, but this is the relevant section. If anyone can let me know the correct way to convert this it would be much appreciated.</p> <p>Here's some details on the different results from the different methods:</p> <h2>Javascript(Valid API Result)</h2> <pre><code>var curdate = new Date(2013, 7, 10); var gmtstring = curdate.toGMTString(); var utc = Date.parse(gmtstring) / 1000; </code></pre> <p><strong>Result: 1376089200</strong></p> <h2>Python (Invalid API Result)</h2> <pre><code>from datetime import datetime import calendar  d = datetime(2013, 8, 10) calendar.timegm(d.utctimetuple()) </code></pre> <p><strong>Result: 1376092800</strong></p> <p>I'm clearly missing something, can anyone enlighten me on this?</p> <h2>Update</h2> <p>I had originally made a mistake in my examples, as Javascript uses 0 based dates and Python's dates are 1-based.</p> <p>Jonathon kindly explained the difference in the values is different due to a Python defaulting to UTC where as Javascript is defaulting to the local timezone.  In my case this is GMT, which is the one required by the API.  I now just need to get this result in Python.</p> <h2>Answer</h2> <p>The solution was a mismatch of the timezones being provided.  Though I'm still having issues with the third party api, I am at least now getting the correct times.</p> <p>This can probably be cleaned up:</p> <pre><code>from datetime import datetime import calendar import time import pytz  def GenerateTimeStamp(d):     europe = pytz.timezone('Europe/London')     d = europe.localize(d)     tuple = d.utctimetuple()     timestamp = int(time.mktime(tuple))     return timestamp </code></pre> <p>Just provide a datetime:</p> <pre><code>GenerateTimeStamp(datetime(2013, 8, 10)) </code></pre> <p>or</p> <pre><code>GenerateTimeStamp(datetime.utcnow()) </code></pre> <p>As a side note, if you're trying this out and want to install pytz<a href=""http://pytz.sourceforge.net/"" rel=""nofollow noreferrer"">1</a> using pip, you'll can get it using the pre tag<a href=""https://github.com/pypa/pip/issues/974"" rel=""nofollow noreferrer"">2</a>:</p> <pre><code>pip install --pre pytz </code></pre>"	2013-08-10 10:07:09.863 UTC	18160989	"<p>In addition to Jonathan's answer above, I might recommend this on the python side:</p>  <pre><code> d = datetime(2013, 8, 10)  d.strftime(""%s"") </code></pre>  <p>That will return: '1376107200'</p>"			2013-08-10 10:27:16.863 UTC
18160848	javascript|python|timestamp|utc|gmt	Python vs Javascript DateTime	"<p>I'm trying to convert a Javascript API call to Python.  The working javascript code works fine, generating a timestamp like this:</p> <pre><code>var curdate = new Date(); var gmtstring = curdate.toGMTString(); var utc = Date.parse(gmtstring) / 1000; </code></pre> <p>This result (this number of seconds since the epoch) is subsequently hashed and used in the API call, but this is the relevant section. If anyone can let me know the correct way to convert this it would be much appreciated.</p> <p>Here's some details on the different results from the different methods:</p> <h2>Javascript(Valid API Result)</h2> <pre><code>var curdate = new Date(2013, 7, 10); var gmtstring = curdate.toGMTString(); var utc = Date.parse(gmtstring) / 1000; </code></pre> <p><strong>Result: 1376089200</strong></p> <h2>Python (Invalid API Result)</h2> <pre><code>from datetime import datetime import calendar  d = datetime(2013, 8, 10) calendar.timegm(d.utctimetuple()) </code></pre> <p><strong>Result: 1376092800</strong></p> <p>I'm clearly missing something, can anyone enlighten me on this?</p> <h2>Update</h2> <p>I had originally made a mistake in my examples, as Javascript uses 0 based dates and Python's dates are 1-based.</p> <p>Jonathon kindly explained the difference in the values is different due to a Python defaulting to UTC where as Javascript is defaulting to the local timezone.  In my case this is GMT, which is the one required by the API.  I now just need to get this result in Python.</p> <h2>Answer</h2> <p>The solution was a mismatch of the timezones being provided.  Though I'm still having issues with the third party api, I am at least now getting the correct times.</p> <p>This can probably be cleaned up:</p> <pre><code>from datetime import datetime import calendar import time import pytz  def GenerateTimeStamp(d):     europe = pytz.timezone('Europe/London')     d = europe.localize(d)     tuple = d.utctimetuple()     timestamp = int(time.mktime(tuple))     return timestamp </code></pre> <p>Just provide a datetime:</p> <pre><code>GenerateTimeStamp(datetime(2013, 8, 10)) </code></pre> <p>or</p> <pre><code>GenerateTimeStamp(datetime.utcnow()) </code></pre> <p>As a side note, if you're trying this out and want to install pytz<a href=""http://pytz.sourceforge.net/"" rel=""nofollow noreferrer"">1</a> using pip, you'll can get it using the pre tag<a href=""https://github.com/pypa/pip/issues/974"" rel=""nofollow noreferrer"">2</a>:</p> <pre><code>pip install --pre pytz </code></pre>"	2013-08-10 10:07:09.863 UTC	18160883	"<p>For JavaScript Dates, the <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date""><code>month</code> argument is 0 - 11</a>. So, for August, you'll want to pass <code>7</code>.</p>  <blockquote>   <p>Integer value representing the month, beginning with 0 for January to 11 for December.</p> </blockquote>  <p>They also have different default timezones, with Python defaulting to UTC while JavaScript defaults to the user's ""<em>local</em>"" timezone.</p>  <p>You can use <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/UTC""><code>Date.UTC()</code></a>, which returns the timestamp, for the equivalent in JavaScript.</p>  <pre><code>var utc = Date.UTC(2013, 7, 10) / 1000; // 1376092800 </code></pre>  <hr>  <p>Side note: You can use <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/getTime""><code>getTime()</code></a> to get the timestamp of a <code>Date</code>.</p>  <pre><code>var curdate = new Date(2013, 7, 10); var utc = curdate.getTime() / 1000; </code></pre>"			2013-08-10 10:11:22.913 UTC
18160848	javascript|python|timestamp|utc|gmt	Python vs Javascript DateTime	"<p>I'm trying to convert a Javascript API call to Python.  The working javascript code works fine, generating a timestamp like this:</p> <pre><code>var curdate = new Date(); var gmtstring = curdate.toGMTString(); var utc = Date.parse(gmtstring) / 1000; </code></pre> <p>This result (this number of seconds since the epoch) is subsequently hashed and used in the API call, but this is the relevant section. If anyone can let me know the correct way to convert this it would be much appreciated.</p> <p>Here's some details on the different results from the different methods:</p> <h2>Javascript(Valid API Result)</h2> <pre><code>var curdate = new Date(2013, 7, 10); var gmtstring = curdate.toGMTString(); var utc = Date.parse(gmtstring) / 1000; </code></pre> <p><strong>Result: 1376089200</strong></p> <h2>Python (Invalid API Result)</h2> <pre><code>from datetime import datetime import calendar  d = datetime(2013, 8, 10) calendar.timegm(d.utctimetuple()) </code></pre> <p><strong>Result: 1376092800</strong></p> <p>I'm clearly missing something, can anyone enlighten me on this?</p> <h2>Update</h2> <p>I had originally made a mistake in my examples, as Javascript uses 0 based dates and Python's dates are 1-based.</p> <p>Jonathon kindly explained the difference in the values is different due to a Python defaulting to UTC where as Javascript is defaulting to the local timezone.  In my case this is GMT, which is the one required by the API.  I now just need to get this result in Python.</p> <h2>Answer</h2> <p>The solution was a mismatch of the timezones being provided.  Though I'm still having issues with the third party api, I am at least now getting the correct times.</p> <p>This can probably be cleaned up:</p> <pre><code>from datetime import datetime import calendar import time import pytz  def GenerateTimeStamp(d):     europe = pytz.timezone('Europe/London')     d = europe.localize(d)     tuple = d.utctimetuple()     timestamp = int(time.mktime(tuple))     return timestamp </code></pre> <p>Just provide a datetime:</p> <pre><code>GenerateTimeStamp(datetime(2013, 8, 10)) </code></pre> <p>or</p> <pre><code>GenerateTimeStamp(datetime.utcnow()) </code></pre> <p>As a side note, if you're trying this out and want to install pytz<a href=""http://pytz.sourceforge.net/"" rel=""nofollow noreferrer"">1</a> using pip, you'll can get it using the pre tag<a href=""https://github.com/pypa/pip/issues/974"" rel=""nofollow noreferrer"">2</a>:</p> <pre><code>pip install --pre pytz </code></pre>"	2013-08-10 10:07:09.863 UTC	18160878	"<p><code>new Date(2013, 8, 10)</code> in javascript means September/10/2013.</p>  <p><code>datetime(2013, 8, 10)</code> in Python means August/10/2013.</p>  <p>You're comparing two different dates.</p>  <h2>Local time vs UTC</h2>  <p>Results may differ (timezone for my system: Asia/Seoul).</p>  <p><strong>javascript</strong></p>  <pre><code>&gt; new Date(2013, 7, 10) / 1000 1376060400 &gt; Date.UTC(2013, 7, 10) / 1000 1376092800 </code></pre>  <p><strong>Python</strong></p>  <pre><code>&gt;&gt;&gt; import calendar &gt;&gt;&gt; import datetime &gt;&gt;&gt; import time &gt;&gt;&gt; time.mktime(datetime.datetime(2013, 8, 10).timetuple()) 1376060400.0 &gt;&gt;&gt; calendar.timegm(datetime.datetime(2013, 8, 10).timetuple()) 1376092800 </code></pre>  <p>See <a href=""https://stackoverflow.com/questions/2956886/python-calendar-timegm-vs-time-mktime"">Python - calendar.timegm() vs. time.mktime()</a></p>"			2013-08-10 10:11:12.037 UTC
18233433	javascript|python|json|connection|request	connecting python to javascript for two-direction communication	"<p>I would like to serve queries from a javascript code by python. But I am not experienced in this field at all. What I would like to build is something like this:</p>  <blockquote>   <p><strong>1. request.js</strong>:</p> </blockquote>  <pre><code>open_connection('server.py'); for (var i=0; i&lt;10; i++)     document.write(request_next_number()); close_connection('server.py') </code></pre>  <blockquote>   <p><strong>2. server.py</strong></p> </blockquote>  <pre><code>x = 0 while connected:     if request:         send(x)         x = x + 1 </code></pre>  <p>I heard about JSON, but don't know if I should use it. (?) </p>  <p>Could you please give me some code examples or guides how to implement the two files above?</p>"	2013-08-14 13:42:19.447 UTC	18238175	"<p>What you need is a socket server on the <code>python</code> end and a client/request server on the javascript end.</p>  <p>For the python server side, refer to <a href=""http://docs.python.org/2/library/socketserver.html"" rel=""noreferrer""><code>SocketServer</code></a>, (example taken from there as well), one thing you have to make sure is to have the socket go past <code>NAT</code> (possibly port forwarding). One other alternative is <a href=""http://twistedmatrix.com/trac/"" rel=""noreferrer""><code>Twisted</code></a> which is a very powerful framework, i believe it has functionality to send data through <code>NAT</code>. </p>  <pre><code>import SocketServer  class MyTCPHandler(SocketServer.BaseRequestHandler):     """"""     The RequestHandler class for our server.      It is instantiated once per connection to the server, and must     override the handle() method to implement communication to the     client.     """"""      def handle(self):         # self.request is the TCP socket connected to the client         self.data = self.request.recv(1024).strip()         print ""{} wrote:"".format(self.client_address[0])         print self.data         # just send back the same data, but upper-cased         self.request.sendall(self.data.upper())  if __name__ == ""__main__"":     HOST, PORT = ""localhost"", 9999      # Create the server, binding to localhost on port 9999     server = SocketServer.TCPServer((HOST, PORT), MyTCPHandler)      # Activate the server; this will keep running until you     # interrupt the program with Ctrl-C     server.serve_forever() </code></pre>  <p>On the <code>JavaScript</code> there are many frameworks that allow socket connections, here are a few</p>  <ul> <li><a href=""http://socket.io/"" rel=""noreferrer""><code>Socket IO</code></a></li> </ul>  <p>Example:</p>  <pre><code>&lt;script src=""/socket.io/socket.io.js""&gt;&lt;/script&gt; &lt;script&gt;   var socket = io.connect('http://localhost');   socket.on('news', function (data) {     console.log(data);     socket.emit('my other event', { my: 'data' });   }); &lt;/script&gt; </code></pre>  <ul> <li>You can even use <a href=""http://www.html5rocks.com/en/tutorials/websockets/basics/"" rel=""noreferrer""><code>HTML5 Web Sockets</code></a></li> </ul>  <p>Example:</p>  <pre><code>var connection = new WebSocket('ws://IPAddress:Port'); connection.onopen = function () {   connection.send('Ping'); // Send the message 'Ping' to the server }; </code></pre>  <ul> <li><p>Also, take a look at a part of this book , Chapter 22 of <code>Javascript: The Definitive Guide</code> , <a href=""https://www.inkling.com/read/javascript-definitive-guide-david-flanagan-6th/chapter-22/web-sockets"" rel=""noreferrer"">https://www.inkling.com/read/javascript-definitive-guide-david-flanagan-6th/chapter-22/web-sockets</a></p></li> <li><p>Finally, take a look at <a href=""http://code.google.com/p/jssockets/"" rel=""noreferrer""><code>jssockets</code></a></p></li> </ul>  <p>Example:</p>  <pre><code>_jssocket.setCallBack(event, callback); _jssocket.connect(ip,port); _jssocket.write(message); _jssocket.disconnect(); </code></pre>  <p>Hope this help!</p>"			2013-08-14 17:18:29.91 UTC
18233433	javascript|python|json|connection|request	connecting python to javascript for two-direction communication	"<p>I would like to serve queries from a javascript code by python. But I am not experienced in this field at all. What I would like to build is something like this:</p>  <blockquote>   <p><strong>1. request.js</strong>:</p> </blockquote>  <pre><code>open_connection('server.py'); for (var i=0; i&lt;10; i++)     document.write(request_next_number()); close_connection('server.py') </code></pre>  <blockquote>   <p><strong>2. server.py</strong></p> </blockquote>  <pre><code>x = 0 while connected:     if request:         send(x)         x = x + 1 </code></pre>  <p>I heard about JSON, but don't know if I should use it. (?) </p>  <p>Could you please give me some code examples or guides how to implement the two files above?</p>"	2013-08-14 13:42:19.447 UTC	38507195	"<p>An example with Web Socket that i have used to transfer image to a web server and stream my screen.</p>  <p><strong>stream.html</strong></p>  <pre><code>&lt;!DOCTYPE HTML&gt; &lt;meta charset = utf-8&gt;  &lt;html&gt;     &lt;header&gt;         &lt;title&gt;Stream&lt;/title&gt;         &lt;script type=""text/javascript"" src=""js/request.js""&gt;&lt;/script&gt;     &lt;/header&gt;     &lt;body onload=""doLoad()""&gt;         &lt;div id=""canvasWrapper""&gt;             &lt;canvas id=""display""&gt;&lt;/canvas&gt;         &lt;/div&gt;     &lt;/body&gt; &lt;/html&gt; </code></pre>  <p><strong>request.js</strong></p>  <pre><code>var disp; var dispCtx; var im; var ws;  function doLoad() {     disp = document.getElementById(""display"");     dispCtx = disp.getContext(""2d"");     im = new Image();     im.onload = function() {     disp.setAttribute(""width"", im.width);     disp.setAttribute(""height"", im.height);     dispCtx.drawImage(this, 0, 0);   };     im.src = ""img/img_not_found.png"";     ws = new WebSocket(""ws://127.0.0.1:50007"");     ws.onmessage = function (evt) {         im.src = ""data:image/png;base64,"" + evt.data;     } } </code></pre>  <p><strong>server.py</strong></p>  <pre><code>from autobahn.twisted.websocket import WebSocketServerProtocol, WebSocketServerFactory import base64 import sys from twisted.python import log from twisted.internet import reactor  class MyServerProtocol(WebSocketServerProtocol):      def onConnect(self, request):         print(""Client connecting: {}"".format(request.peer))      def onOpen(self):         print(""WebSocket connection open."")          def hello():             with open(""/var/www/html/img/image.png"", ""rb"") as image_file:                 encoded_string = base64.b64encode(image_file.read())             self.sendMessage(encoded_string.encode('utf8'))             self.factory.reactor.callLater(0.2, hello)          # start sending messages every 20ms ..         hello()      def onMessage(self, payload, isBinary):         if isBinary:             print(""Binary message received: {} bytes"".format(len(payload)))         else:             print(""Text message received: {}"".format(payload.decode('utf8')))          # echo back message verbatim         self.sendMessage(payload, isBinary)      def onClose(self, wasClean, code, reason):         print(""WebSocket connection closed: {}"".format(reason))   if __name__ == '__main__':     log.startLogging(sys.stdout)      factory = WebSocketServerFactory(u""ws://127.0.0.1:50007"")     factory.protocol = MyServerProtocol     # factory.setProtocolOptions(maxConnections=2)      # note to self: if using putChild, the child must be bytes...      reactor.listenTCP(50007, factory)     reactor.run() </code></pre>  <p>You will need <strong>autobahn</strong> (you can install it with <code>pip install autobahn</code>)</p>"			2016-07-21 14:37:29.97 UTC
18283510	javascript|jquery|python|ajax	How to pass an array of integers as a parameter from javascript to python?	"<p>I have a javascript code that obtains the value of several checked boxes and inserts their value (integers) into an array:</p>  <pre><code>var my_list = $('.item:checked').map(function(){return $(this).attr('name');}).get(); </code></pre>  <p>I want to pass this javascript array to a python function as a paramter. This is how I am doing it right now, with ajax and jQuery:</p>  <pre><code>$.ajax({     url : ""{{tg.url('/foo/bar')}}"",     data : {             my_list: JSON.stringify(my_list),         ...     }, </code></pre>  <p>On the python side, I have this code, to get the parameters:</p>  <pre><code>item_list = get_paramw(kw, 'my_list', unicode) </code></pre>  <p>This works, but I am not receiving the array as an array of integers, but as a single string containing the ""["", ""]"", "","" and """""" symbols, which I would have to parse and isn't the most elegant way of dealing with this whole situation I think.</p>  <p>How should it be done to receive a javascript array of integers as an array of integers in python (not as a string)?</p>"	2013-08-16 23:29:17.277 UTC	18284065	"<p>The <em>proper</em> way to send multiple values for one key is</p>  <pre><code>data: {     my_list: my_list, }, traditional: true ... </code></pre>  <p>Suppose <code>my_list = [ 1, 2, 3 ]</code>, this results a query string / POST data </p>  <pre><code>my_list=1&amp;my_list=2&amp;my_list=3 </code></pre>  <p>Without the <code>traditional</code> flag, the result would be</p>  <pre><code>my_list[]=1&amp;my_list[]=2&amp;my_list[]=3 </code></pre>  <p>Which of course works, but in TurboGears you need to access it as <code>my_list[]</code>.</p>  <p>On the other hand, I am not sure if the TG keyword argument passing work with multiple values; if you get a single value in kw, you can use <code>request.getall('foo')</code> to return all the <code>foo</code> keys as a list (possibly an empty list).</p>"			2013-08-17 00:53:32.703 UTC
18283510	javascript|jquery|python|ajax	How to pass an array of integers as a parameter from javascript to python?	"<p>I have a javascript code that obtains the value of several checked boxes and inserts their value (integers) into an array:</p>  <pre><code>var my_list = $('.item:checked').map(function(){return $(this).attr('name');}).get(); </code></pre>  <p>I want to pass this javascript array to a python function as a paramter. This is how I am doing it right now, with ajax and jQuery:</p>  <pre><code>$.ajax({     url : ""{{tg.url('/foo/bar')}}"",     data : {             my_list: JSON.stringify(my_list),         ...     }, </code></pre>  <p>On the python side, I have this code, to get the parameters:</p>  <pre><code>item_list = get_paramw(kw, 'my_list', unicode) </code></pre>  <p>This works, but I am not receiving the array as an array of integers, but as a single string containing the ""["", ""]"", "","" and """""" symbols, which I would have to parse and isn't the most elegant way of dealing with this whole situation I think.</p>  <p>How should it be done to receive a javascript array of integers as an array of integers in python (not as a string)?</p>"	2013-08-16 23:29:17.277 UTC	18283629	"<p>The easiest way to send simple arbitrarily-structured data from Javascript to Python is JSON. You've already got the Javascript side of it, in that <code>JSON.stringify(my_list)</code>. All you need is the Python side. And it's one line of code:</p>  <pre><code>item_list_json = get_paramw(kw, 'my_list', unicode) item_list = json.loads(item_list_json) </code></pre>  <p>If <code>item_list</code> in your JS code were the Javascript array of numbers <code>[1, 2, 3, 4]</code>, <code>item_list</code> in your Python code would be the Python list of ints <code>[1, 2, 3, 4]</code>.</p>  <p>(Well, you also have to <code>import json</code> at the top of your script, so I guess it's two lines.)</p>"			2013-08-16 23:47:04.807 UTC
18366231	javascript|python|ajax|json|pull	advantages of different ways of python javascript (pull) communication	"<p>I am into implementing a pull communication between my javascript client and python server. I have wasted my last two weeks struggling with websockets and socketing, but now I decided to give it up. </p>  <p>I am looking for the most convenient way to implement python-javascript communication where the client sends requests to the server, to which the server can answer. I have seen lots of ways, some of which:</p>  <ul> <li>ajax</li> <li>json</li> <li>socket, etc</li> </ul>  <p>I would love to hear your opinion on the advantages of the different possibilities. ( If you also have some great tutorials which I can use to get started, I would really appreciate them. )</p>"	2013-08-21 19:39:44.917 UTC	18366613	"<p>It seems you are a little bit confused on definitions and technologies, so let me start of by clarifying some defitintions (rough descriptions, not exact):</p>  <ul> <li>JSON: A format to pack data structures (like arrays) into a string and to retrieve the data. It is one the most used formats to submit actual data but is by itself not capable of transmitting data: It is only the data itself</li> <li>AJAX: The dominant technology for sending requests to a server without reloading the complete page. AJAX works through the HTTP protocol and sends the same headers as would be sent if you would send the same request by visiting the page (Exception: Headers that are special to AJAX, depends on library etc.). By itself AJAX is the technology to submit the data but is not the data itself. However, it can, for example, submit form data encoded in the usual URL encoding. But it can also send JSON data</li> <li>Sockets: The definition of a socket is very broad and general. Normally, it describes a low layer like TCP (below HTTP in hierarchy) but since you are describing JS + Python I would assume you mean browser - client communication. In that case there is WebSocket. I have not worked with that technology yet but from what I hear it allows arbitrary connections etc. For a normal use case way to advanced.</li> </ul>  <p>These are the technologies you mention. Additionally, I would like to mention two more:</p>  <ul> <li>XML: Like JSON, but a different format. XML has various advantages and disadvantages. From my point of view the biggest advantage is that it more flexible and on complex structures easier to understand than JSON. But this flexibility comes with the disadvantage that it is harder to learn.</li> <li>JSONP: Similar to AJAX in that it is used for communication but as the name states, it submits JSON data (I think...). Has the advantage of allowing cross-domain requests (also advanced stuff).</li> </ul>  <p>Since your question is not that precise, I will answer it (like assumed above) in the Web context: JavaScript is run from the browser and the server is a web application written in Python.</p>  <p>For this I would recommend a combination of JSON &amp; AJAX: JSON is natively available in both JavaScript and Python and libraries like jQuery offer easy interfaces to data recieved via JSON. I recommend AJAX for the same reason: It's easy to use, integrated in most JavaScript libraries and needs no work on the server side whatsoever: For the server there is just a request to handle.</p>  <p>Example on the server side:</p>  <pre><code># Request comes in: data = json.loads(request_body) # Do calculations output = json.dumps(out_data) send_response(output) </code></pre>  <p>On the client side, you could plain JavaScript or <a href=""http://jquery.com/"" rel=""nofollow"">jQuery</a> for sending the request and handling the response.</p>"			2013-08-21 20:03:08.697 UTC
18368058	javascript|python|web-scraping|beautifulsoup	How can I parse Javascript variables using python?	"<p>The problem: A website I am trying to gather data from uses Javascript to produce a graph. I'd like to be able to pull the data that is being used in the graph, but I am not sure where to start. For example, the data might be as follows:</p>  <pre><code>var line1= [[""Wed, 12 Jun 2013 01:00:00 +0000"",22.4916114807,""2 sold""], [""Fri, 14 Jun 2013 01:00:00 +0000"",27.4950008392,""2 sold""], [""Sun, 16 Jun 2013 01:00:00 +0000"",19.5499992371,""1 sold""], [""Tue, 18 Jun 2013 01:00:00 +0000"",17.25,""1 sold""], [""Sun, 23 Jun 2013 01:00:00 +0000"",15.5420341492,""2 sold""], [""Thu, 27 Jun 2013 01:00:00 +0000"",8.79045295715,""3 sold""], [""Fri, 28 Jun 2013 01:00:00 +0000"",10,""1 sold""]]; </code></pre>  <p>This is pricing data (Date, Price, Volume). I've found another question here - <a href=""https://stackoverflow.com/questions/13298201/parsing-variable-data-out-of-a-javascript-tag-using-python"">Parsing variable data out of a js tag using python</a> - which suggests that I use JSON and BeautifulSoup, but I am unsure how to apply it to this particular problem because the formatting is slightly different. In fact, in this problem the code looks more like python than any type of JSON dictionary format.</p>  <p>I suppose I could read it in as a string, and then use XPATH and some funky string editing to convert it, but this seems like too much work for something that is already formatted as a Javascript variable. </p>  <p>So, what can I do here to pull this type of organized data from this variable while using python? (I am most familiar with python and BS4)</p>"	2013-08-21 21:31:04.417 UTC	18368600	"<p>Okay, so there are a few ways to do it, but I ended up simply using a regular expression to find everything between <code>line1=</code> and <code>;</code></p>  <pre><code>#Read page data as a string pageData = sock.read() #set p as regular expression p = re.compile('(?&lt;=line1=)(.*)(?=;)') #find all instances of regular expression in pageData parsed = p.findall(pageData) #evaluate list as python code =&gt; turn into list in python newParsed = eval(parsed[0]) </code></pre>  <p>Regex is nice when you have good coding, but is this method better (EDIT: or worse!) than any of the other answers here?</p>  <p>EDIT: I ultimately used the following:</p>  <pre><code>#Read page data as a string pageData = sock.read() #set p as regular expression p = re.compile('(?&lt;=line1=)(.*)(?=;)') #find all instances of regular expression in pageData parsed = p.findall(pageData) #load as JSON instead of using evaluate to prevent risky execution of unknown code newParsed = json.loads(parsed[0]) </code></pre>"			2013-08-21 22:14:20.273 UTC
18368058	javascript|python|web-scraping|beautifulsoup	How can I parse Javascript variables using python?	"<p>The problem: A website I am trying to gather data from uses Javascript to produce a graph. I'd like to be able to pull the data that is being used in the graph, but I am not sure where to start. For example, the data might be as follows:</p>  <pre><code>var line1= [[""Wed, 12 Jun 2013 01:00:00 +0000"",22.4916114807,""2 sold""], [""Fri, 14 Jun 2013 01:00:00 +0000"",27.4950008392,""2 sold""], [""Sun, 16 Jun 2013 01:00:00 +0000"",19.5499992371,""1 sold""], [""Tue, 18 Jun 2013 01:00:00 +0000"",17.25,""1 sold""], [""Sun, 23 Jun 2013 01:00:00 +0000"",15.5420341492,""2 sold""], [""Thu, 27 Jun 2013 01:00:00 +0000"",8.79045295715,""3 sold""], [""Fri, 28 Jun 2013 01:00:00 +0000"",10,""1 sold""]]; </code></pre>  <p>This is pricing data (Date, Price, Volume). I've found another question here - <a href=""https://stackoverflow.com/questions/13298201/parsing-variable-data-out-of-a-javascript-tag-using-python"">Parsing variable data out of a js tag using python</a> - which suggests that I use JSON and BeautifulSoup, but I am unsure how to apply it to this particular problem because the formatting is slightly different. In fact, in this problem the code looks more like python than any type of JSON dictionary format.</p>  <p>I suppose I could read it in as a string, and then use XPATH and some funky string editing to convert it, but this seems like too much work for something that is already formatted as a Javascript variable. </p>  <p>So, what can I do here to pull this type of organized data from this variable while using python? (I am most familiar with python and BS4)</p>"	2013-08-21 21:31:04.417 UTC	18368449	"<p>The following makes a few assumptions such as knowing how the page is formatted, but a way of getting your example into memory on <em>Python</em> is like this</p>  <pre><code># example data data = 'foo bar foo bar foo bar foo bar\r\nfoo bar foo bar foo bar foo bar \r\nvar line1=\r\n[[""Wed, 12 Jun 2013 01:00:00 +0000"",22.4916114807,""2 sold""],\r\n[""Fri, 14 Jun 2013 01:00:00 +0000"",27.4950008392,""2 sold""],\r\n[""Sun, 16 Jun 2013 01:00:00 +0000"",19.5499992371,""1 sold""],\r\n[""Tue, 18 Jun 2013 01:00:00 +0000"",17.25,""1 sold""],\r\n[""Sun, 23 Jun 2013 01:00:00 +0000"",15.5420341492,""2 sold""],\r\n[""Thu, 27 Jun 2013 01:00:00 +0000"",8.79045295715,""3 sold""],\r\n[""Fri, 28 Jun 2013 01:00:00 +0000"",10,""1 sold""]];\r\nfoo bar foo bar foo bar foo bar\r\nfoo bar foo bar foo bar foo bar' # find your variable's start and end x = data.find('line1=') + 6 y = data.find(';', x) # so you can get just the relevant bit interesting = data[x:y].strip() # most dangerous step! don't do this on unknown sources parsed = eval(interesting) # maybe you'd want to use JSON instead, if the data has the right syntax from json import loads as JSON parsed = JSON(interesting) # now parsed is your data </code></pre>"			2013-08-21 22:01:22.937 UTC
18368058	javascript|python|web-scraping|beautifulsoup	How can I parse Javascript variables using python?	"<p>The problem: A website I am trying to gather data from uses Javascript to produce a graph. I'd like to be able to pull the data that is being used in the graph, but I am not sure where to start. For example, the data might be as follows:</p>  <pre><code>var line1= [[""Wed, 12 Jun 2013 01:00:00 +0000"",22.4916114807,""2 sold""], [""Fri, 14 Jun 2013 01:00:00 +0000"",27.4950008392,""2 sold""], [""Sun, 16 Jun 2013 01:00:00 +0000"",19.5499992371,""1 sold""], [""Tue, 18 Jun 2013 01:00:00 +0000"",17.25,""1 sold""], [""Sun, 23 Jun 2013 01:00:00 +0000"",15.5420341492,""2 sold""], [""Thu, 27 Jun 2013 01:00:00 +0000"",8.79045295715,""3 sold""], [""Fri, 28 Jun 2013 01:00:00 +0000"",10,""1 sold""]]; </code></pre>  <p>This is pricing data (Date, Price, Volume). I've found another question here - <a href=""https://stackoverflow.com/questions/13298201/parsing-variable-data-out-of-a-javascript-tag-using-python"">Parsing variable data out of a js tag using python</a> - which suggests that I use JSON and BeautifulSoup, but I am unsure how to apply it to this particular problem because the formatting is slightly different. In fact, in this problem the code looks more like python than any type of JSON dictionary format.</p>  <p>I suppose I could read it in as a string, and then use XPATH and some funky string editing to convert it, but this seems like too much work for something that is already formatted as a Javascript variable. </p>  <p>So, what can I do here to pull this type of organized data from this variable while using python? (I am most familiar with python and BS4)</p>"	2013-08-21 21:31:04.417 UTC	18368478	"<p>Assuming you have a python variable with a javascript line/block as a string like<code>""var line1 = [[a,b,c], [d,e,f]];""</code>, you could use the following few lines of code.</p>  <pre><code>&gt;&gt;&gt; code = """"""var line1 = [['a','b','c'], ['d','e','f'], ['g','h','i']];"""""" &gt;&gt;&gt; python_readable_code = code.strip(""var ;"") &gt;&gt;&gt; exec(python_readable_code) &gt;&gt;&gt; print(line1) [['a', 'b', 'c'], ['d', 'e', 'f'], ['g', 'h', 'i']] </code></pre>  <p><code>exec()</code> Will run the code that is formatted as a string. In this case it will set the variable <code>line1</code> to a list with lists.</p>  <p>And than you could use something like this:</p>  <pre><code>for list in line1:     print(list[0], list[1], list[2])     # Or do something else with those values, like save them to a file </code></pre>"			2013-08-21 22:03:44.89 UTC
18368058	javascript|python|web-scraping|beautifulsoup	How can I parse Javascript variables using python?	"<p>The problem: A website I am trying to gather data from uses Javascript to produce a graph. I'd like to be able to pull the data that is being used in the graph, but I am not sure where to start. For example, the data might be as follows:</p>  <pre><code>var line1= [[""Wed, 12 Jun 2013 01:00:00 +0000"",22.4916114807,""2 sold""], [""Fri, 14 Jun 2013 01:00:00 +0000"",27.4950008392,""2 sold""], [""Sun, 16 Jun 2013 01:00:00 +0000"",19.5499992371,""1 sold""], [""Tue, 18 Jun 2013 01:00:00 +0000"",17.25,""1 sold""], [""Sun, 23 Jun 2013 01:00:00 +0000"",15.5420341492,""2 sold""], [""Thu, 27 Jun 2013 01:00:00 +0000"",8.79045295715,""3 sold""], [""Fri, 28 Jun 2013 01:00:00 +0000"",10,""1 sold""]]; </code></pre>  <p>This is pricing data (Date, Price, Volume). I've found another question here - <a href=""https://stackoverflow.com/questions/13298201/parsing-variable-data-out-of-a-javascript-tag-using-python"">Parsing variable data out of a js tag using python</a> - which suggests that I use JSON and BeautifulSoup, but I am unsure how to apply it to this particular problem because the formatting is slightly different. In fact, in this problem the code looks more like python than any type of JSON dictionary format.</p>  <p>I suppose I could read it in as a string, and then use XPATH and some funky string editing to convert it, but this seems like too much work for something that is already formatted as a Javascript variable. </p>  <p>So, what can I do here to pull this type of organized data from this variable while using python? (I am most familiar with python and BS4)</p>"	2013-08-21 21:31:04.417 UTC	18368535	"<p>If your format really is just one or more <code>var foo = [JSON array or object literal];</code>, you can just write a dotall regex to extract them, then parse each one as JSON. For example:</p>  <pre><code>&gt;&gt;&gt; j = '''var line1= [[""Wed, 12 Jun 2013 01:00:00 +0000"",22.4916114807,""2 sold""], [""Fri, 14 Jun 2013 01:00:00 +0000"",27.4950008392,""2 sold""], [""Sun, 16 Jun 2013 01:00:00 +0000"",19.5499992371,""1 sold""], [""Tue, 18 Jun 2013 01:00:00 +0000"",17.25,""1 sold""], [""Sun, 23 Jun 2013 01:00:00 +0000"",15.5420341492,""2 sold""], [""Thu, 27 Jun 2013 01:00:00 +0000"",8.79045295715,""3 sold""], [""Fri, 28 Jun 2013 01:00:00 +0000"",10,""1 sold""]];\s*$''' &gt;&gt;&gt; values = re.findall(r'var.*?=\s*(.*?);', j, re.DOTALL | re.MULTILINE) &gt;&gt;&gt; for value in values: ...     print(json.loads(value)) [[['Wed, 12 Jun 2013 01:00:00 +0000', 22.4916114807, '2 sold'],   ['Fri, 14 Jun 2013 01:00:00 +0000', 27.4950008392, '2 sold'],   ['Sun, 16 Jun 2013 01:00:00 +0000', 19.5499992371, '1 sold'],   ['Tue, 18 Jun 2013 01:00:00 +0000', 17.25, '1 sold'],   ['Sun, 23 Jun 2013 01:00:00 +0000', 15.5420341492, '2 sold'],   ['Thu, 27 Jun 2013 01:00:00 +0000', 8.79045295715, '3 sold'],   ['Fri, 28 Jun 2013 01:00:00 +0000', 10, '1 sold']]] </code></pre>  <p>Of course this makes a few assumptions:</p>  <ul> <li>A semicolon at the end of the line must be an actual statement separator, not the middle of a string. This should be safe because JS doesn't have Python-style multiline strings.</li> <li>The code actually does have semicolons at the end of each statement, even though they're optional in JS. Most JS code has those semicolons, but it obviously isn't guaranteed.</li> <li>The array and object literals really are JSON-compatible. This definitely isn't guaranteed; for example, JS can use single-quoted strings, but JSON can't. But it does work for your example.</li> <li>Your format really is this well-defined. For example, if there might be a statement like <code>var line2 = [[1]] + line1;</code> in the middle of your code, it's going to cause problems.</li> </ul>  <p>Note that if the data might contain JavaScript literals that aren't all valid JSON, but are all valid Python literals (which isn't likely, but isn't impossible, either), you can use <code>ast.literal_eval</code> on them instead of <code>json.loads</code>. But I wouldn't do that unless you know this is the case.</p>"			2013-08-21 22:08:33.517 UTC
18375035	javascript|python	Passing string from IronPython to Javascript	"<p>I am new to Javascript and I have no idea how to get a simple string, which contains a path that changes, from my Pythonscript.</p>  <p>It is a local script so I dont have the possibility to write down a file and import it with Javascript or use a webserver to pass the data.</p>  <p>My Pythonscript sends commands to the Javascript. Both scripts work independent as long as I pass the path manually which is pretty annoying.</p>  <p>I am looking for something simple like in Bash and Python</p>  <p>Bash:  <code>export myPath = 'myString'</code></p>  <p>Python:  <code>import os<br> myPath = os.environ['myPath']</code></p>  <p>Thanks in advance</p>"	2013-08-22 08:16:14.88 UTC	18375101	"<p>Encode the data as JSON and output it into a JavaScript section, e.g.:</p>  <pre><code>&lt;script type=""text/javascript""&gt; var jsPath=&lt;?python import json; print json.dumps(myPath) ?&gt; &lt;/script&gt; </code></pre>  <p>Except use the actual syntax for inline Python that your engine uses.</p>"			2013-08-22 08:20:10.037 UTC
18383008	python|flask|server-sent-events	"Python Flask, how to detect a SSE client disconnect from front end Javascript"	"<p>Maybe this is a problem in Flask, there is no way to handle disconnection event on the server side.</p>  <p>In Response class, there is a method named ""call_on_close"", where we can add a function without argument, e.g. on_close(), it will be fired when the response object's close method called, but this doesn't happen when I call EventSource.close() from the client side in Javascript.</p>  <p>code on server side:</p>  <pre><code>from flask import Response r = Response(stream(), ...) r.call_on_close(on_close) return r   def on_close():   print ""response is closed!""  def stream():   ...  # subscribe to redis   for message in pubsub.listen():     ....     yield 'data: %s\n\n' % message </code></pre>  <p>on client side: add unload handler to page with SSE</p>  <pre><code>$(window).unload(   function() {     sse.close();   } } </code></pre>  <p>Anything is wrong?</p>  <p>Any suggestions or solution with code is appreciated!</p>  <p>Thanks in advance!</p>"	2013-08-22 14:15:28.227 UTC	56188220	"<p>The generator receives a <code>GeneratorExit</code> exception, and that's when you know it will exit. For example:</p>  <pre><code>def stream():     try:         i = 0         while True:             yield 'Hello {}!'.format(i)             i += 1             time.sleep(1)     finally:         # Called after a GeneratorExit, cleanup here         i = 0   @app.route('/messages') def messages():     return Response(stream(), content_type='text/event-stream') </code></pre>  <p>Will yield a infinite stream of <code>""Hello!""</code>, and you will know when it's done, where you can run cleanup code. If your generator blocks the thread, it will need to be unblocked in some way (maybe pushing a dummy item) so that the generator can be closed.</p>"			2019-05-17 14:13:16.097 UTC
18383008	python|flask|server-sent-events	"Python Flask, how to detect a SSE client disconnect from front end Javascript"	"<p>Maybe this is a problem in Flask, there is no way to handle disconnection event on the server side.</p>  <p>In Response class, there is a method named ""call_on_close"", where we can add a function without argument, e.g. on_close(), it will be fired when the response object's close method called, but this doesn't happen when I call EventSource.close() from the client side in Javascript.</p>  <p>code on server side:</p>  <pre><code>from flask import Response r = Response(stream(), ...) r.call_on_close(on_close) return r   def on_close():   print ""response is closed!""  def stream():   ...  # subscribe to redis   for message in pubsub.listen():     ....     yield 'data: %s\n\n' % message </code></pre>  <p>on client side: add unload handler to page with SSE</p>  <pre><code>$(window).unload(   function() {     sse.close();   } } </code></pre>  <p>Anything is wrong?</p>  <p>Any suggestions or solution with code is appreciated!</p>  <p>Thanks in advance!</p>"	2013-08-22 14:15:28.227 UTC	60134305	"<p>To extend on @Lonami's answer, a <code>yield</code> is required when working with a nonblocking function that returns data</p>  <pre class=""lang-py prettyprint-override""><code>def stream():     try:         pubsub = red.pubsub()         pubsub.subscribe('chat')         #for message in pubsub.listen():#This doesn't work because it's blocking         while True:             message = pubsub.get_message()              if not message:                 # The yield is necessary for this to work!                 # In my case I always send JSON encoded data                 # An empty response might work, too.                 yield ""data: {}\n\n""                 sleep(0.1)                 continue              # If the nonblocking get_message() returned something, proceed normally             yield 'data: %s\n\n' % message[""data""]     finally:         print(""CLOSED!"")         # Your closing logic here (e.g. marking the user as offline in your database)   @app.route('/messages') def messages():     return Response(stream(), content_type='text/event-stream') </code></pre>"			2020-02-09 07:10:47 UTC
18383008	python|flask|server-sent-events	"Python Flask, how to detect a SSE client disconnect from front end Javascript"	"<p>Maybe this is a problem in Flask, there is no way to handle disconnection event on the server side.</p>  <p>In Response class, there is a method named ""call_on_close"", where we can add a function without argument, e.g. on_close(), it will be fired when the response object's close method called, but this doesn't happen when I call EventSource.close() from the client side in Javascript.</p>  <p>code on server side:</p>  <pre><code>from flask import Response r = Response(stream(), ...) r.call_on_close(on_close) return r   def on_close():   print ""response is closed!""  def stream():   ...  # subscribe to redis   for message in pubsub.listen():     ....     yield 'data: %s\n\n' % message </code></pre>  <p>on client side: add unload handler to page with SSE</p>  <pre><code>$(window).unload(   function() {     sse.close();   } } </code></pre>  <p>Anything is wrong?</p>  <p>Any suggestions or solution with code is appreciated!</p>  <p>Thanks in advance!</p>"	2013-08-22 14:15:28.227 UTC	19735172	"<p>I've had a similar problem with Rails Live Controllers. The problem is that the framework doesn't seem to detect that the connection is closed until it attempts to send an Event to the client. </p>  <p>One approach is to send periodic ""heartbeat"" events to the client. I'm presently using this successfully on my Rails project with an interval of 60 seconds. I have a separate thread that ""emits"" these heartbeats into Redis, that my controller has subscribed to.</p>  <p>An alternative to the threaded approach, is to wrap the Redis pubsub block with a timeout (again, say 60 seconds). And then send the heartbeat event to the client - followed by another pubsub call. The downside to this approach, is you may miss an event while you're not subscribed. </p>  <p>There's more on the threading approach here: <a href=""https://stackoverflow.com/questions/18970458/redis-actioncontrollerlive-threads-not-dying"">Redis + ActionController::Live threads not dying</a></p>"			2013-11-01 20:48:54.63 UTC
18424758	javascript|python|flask	How to make javascript work with python on Flask?	"<p>i'm trying to build a dynamic list on Flask. Everyone who loads the page will see this list and can add or remove items from it. If something is added or removed, everybody receives this update. </p>  <p>I'm using Javascript to do some local processing on the list's items and Python to store it (in a singleton way) on the Flask server.</p>  <p>I want to have sure that there is consistency between items on python's list object and what javascript shows on the page, so i think the best option is make it read items from the python's list.</p>  <p>How can i make Javascript read items in this Python's list?</p>"	2013-08-25 01:20:45.073 UTC	18424936	"<p>What you're looking for is AJAX. You can use this to query your server without reloading the page in the browser. When the page loads, you should grab a time object (using javascript) then every time someone commits their changes to Flask, record their time object along with the new contents. If the time object &lt; the current, you'll need to compare the difference.</p>  <p>As far as reading items from a python list...you're going to need to figure out how you're returning the data from flask. If I were you, I would use the json module to encode your python data in json objects (similar to dictionaries) then return that to the calling browser; the reason is that json is a javascript native type.</p>  <p>You could also return a string and parse it on the client side.</p>  <p>Anyway, you can figure that out. </p>  <p><a href=""http://flask.pocoo.org/docs/patterns/jquery/"" rel=""nofollow"">Flask and AJAX</a></p>  <p><a href=""http://docs.python.org/2/library/json.html"" rel=""nofollow"">JSON module</a></p>  <p><a href=""http://api.jquery.com/jQuery.ajax/"" rel=""nofollow"">jQuery.ajax</a></p>"			2013-08-25 01:56:59.383 UTC
18435723	javascript|python|html|bottle	What is the order of execution between python code and javascript code in html	"<p>I am using bottle framework to dynamically list a link for editing a task, rows is a collection of tuple with multiple (id, task, status) logically the code below should give the first link </p>  <pre><code>http://localhost:8217/edit/1 </code></pre>  <p>second link</p>  <pre><code>http://localhost:8217/edit/2 </code></pre>  <p>so on and forth</p>  <p>but all the link are </p>  <pre><code>http://localhost:8217/edit/5 </code></pre>  <p>therefore I suspect this has to do with the order the code is executed, any hint would be much appreciated</p>  <pre><code>&lt;p&gt;The open items are as follows:&lt;/p&gt; &lt;table border=""1""&gt; %for row in rows:     &lt;tr&gt;     %for col in row:         &lt;td&gt;{{col}}&lt;/td&gt;        %end     &lt;script language=""javascript""&gt;         var number = ""http://localhost:8217/edit/"";         var key = {{row[0]}};         console.log(key);     &lt;/script&gt;     &lt;td&gt;         &lt;a href="""" onClick=""location.href=number +key;return false"";&gt;Editing&lt;/a&gt;      &lt;/td&gt;     &lt;/tr&gt; %end &lt;/table&gt; </code></pre>"	2013-08-26 02:16:05.95 UTC	18435744	"<p>Python code runs on the <strong>server</strong>; Javascript code runs on the client.<br> Therefore, Javascript code can only run after the Python code finishes.</p>  <hr>  <p>However, this has nothing to do with your problem.</p>  <p>HTML tags do not create local variable scopes; all of your rows share the same <code>key</code> variable.</p>  <p>By the time you click the link, <code>key</code> will always have the last value (since all of the JS has already executed).</p>  <p>You should build an <code>href</code> attribute in server-side code instead.</p>"			2013-08-26 02:21:08.81 UTC
18435723	javascript|python|html|bottle	What is the order of execution between python code and javascript code in html	"<p>I am using bottle framework to dynamically list a link for editing a task, rows is a collection of tuple with multiple (id, task, status) logically the code below should give the first link </p>  <pre><code>http://localhost:8217/edit/1 </code></pre>  <p>second link</p>  <pre><code>http://localhost:8217/edit/2 </code></pre>  <p>so on and forth</p>  <p>but all the link are </p>  <pre><code>http://localhost:8217/edit/5 </code></pre>  <p>therefore I suspect this has to do with the order the code is executed, any hint would be much appreciated</p>  <pre><code>&lt;p&gt;The open items are as follows:&lt;/p&gt; &lt;table border=""1""&gt; %for row in rows:     &lt;tr&gt;     %for col in row:         &lt;td&gt;{{col}}&lt;/td&gt;        %end     &lt;script language=""javascript""&gt;         var number = ""http://localhost:8217/edit/"";         var key = {{row[0]}};         console.log(key);     &lt;/script&gt;     &lt;td&gt;         &lt;a href="""" onClick=""location.href=number +key;return false"";&gt;Editing&lt;/a&gt;      &lt;/td&gt;     &lt;/tr&gt; %end &lt;/table&gt; </code></pre>"	2013-08-26 02:16:05.95 UTC	18435856	"<p>The ""problem"" is in your javascript. It's not really a problem though, it's just the way the javascript event loop works. The short answer, is that when your browser is reading the rendered template, it loads the <code>onClick</code> events into the event queue, but doesn't actually call them. Only after it's done processing the page, does it start going through the event queue and reading them one-by-one. But at this point, all the <code>&lt;script&gt;</code> tags in your page have processed, and the current value of <code>key</code> will be the last value it had from the loop, presumably <code>5</code> in the examples you gave. As the browser handles the events from the event queue, it will just assign the current value of <code>key</code> to the <code>onClick</code> handle, which is why they all get the value 5.</p>  <p>One possible fix is to use a closure to take a ""snapshot"" of the current value of <code>key</code> as the script tags are read. To create the closure I will use a self-invoking function, but there are other ways to do this:</p>  <pre><code>var key = (function() {     return {{row[0]}}; )(); </code></pre>  <p>This is actually a very common problem, so you might want to look around for a more thorough explanation. A good starting point is the subsection ""The infamous loop problem"" here: <a href=""http://robertnyman.com/2008/10/09/explaining-javascript-scope-and-closures/"" rel=""nofollow"">Javascript Scope and Closures</a></p>"			2013-08-26 02:40:06.12 UTC
18502095	javascript|python|closures	Python closure vs javascript closure	"<p>The following closure function works fine in javascript.</p>  <pre><code>function generateNextNumber(startNumber) {     var current = startNumber;     return function(){         return current += 1;     } }  var getNextNumber = generateNextNumber(10); for (var i = 0; i &lt; 10; i++) {     console.log(getNextNumber()); } </code></pre>  <p>I tried to do the same in Python</p>  <pre><code>def generateNextNumber(startNumber):     current = startNumber     def tempFunction():         current += 1         return current     return tempFunction  getNextNumber = generateNextNumber(10) for i in range(10):     print (getNextNumber()) </code></pre>  <p>I get the following error</p>  <pre><code>Traceback (most recent call last):   File ""/home/thefourtheye/Desktop/Test1.py"", line 10, in &lt;module&gt;     print (getNextNumber())   File ""/home/thefourtheye/Desktop/Test1.py"", line 4, in tempFunction     current += 1 UnboundLocalError: local variable 'current' referenced before assignment </code></pre>  <p>When I printed the <code>vars()</code> and <code>locals()</code> inside <code>tempFunction</code>, they confirm that <code>current</code> is present.</p>  <pre><code>({'current': 10}, {'current': 10}) </code></pre>  <p>But when I modified the program a little like this</p>  <pre><code>def generateNextNumber(startNumber):     current = {""Number"" : startNumber}     def tempFunction():         current[""Number""] += 1         return current[""Number""]     return tempFunction </code></pre>  <p>it works. I can't reason why this works. Can anyone explain please?</p>"	2013-08-29 04:04:02.66 UTC	18502139	"<p>Python decides what a function's local variables are by defining that any variable a function contains an assignment for is local unless declared <code>nonlocal</code> or <code>global</code>. Thus,</p>  <pre><code>current += 1 </code></pre>  <p>creates a local variable named <code>current</code> that hides the nonlocal variable. If you're on Python 2, the standard solution (besides trying not to do this) is to make <code>current</code> a 1-element list and use</p>  <pre><code>current[0] += 1 </code></pre>  <p>For reference, ""trying not to do this"" might look something like the following:</p>  <pre><code>class Counter(object):     def __init__(self):         self.count = 0     def __call__(self):         self.count += 1         return self.count c = Counter() c()  # Returns 1 c()  # Returns 2 </code></pre>"			2013-08-29 04:10:23.583 UTC
18502095	javascript|python|closures	Python closure vs javascript closure	"<p>The following closure function works fine in javascript.</p>  <pre><code>function generateNextNumber(startNumber) {     var current = startNumber;     return function(){         return current += 1;     } }  var getNextNumber = generateNextNumber(10); for (var i = 0; i &lt; 10; i++) {     console.log(getNextNumber()); } </code></pre>  <p>I tried to do the same in Python</p>  <pre><code>def generateNextNumber(startNumber):     current = startNumber     def tempFunction():         current += 1         return current     return tempFunction  getNextNumber = generateNextNumber(10) for i in range(10):     print (getNextNumber()) </code></pre>  <p>I get the following error</p>  <pre><code>Traceback (most recent call last):   File ""/home/thefourtheye/Desktop/Test1.py"", line 10, in &lt;module&gt;     print (getNextNumber())   File ""/home/thefourtheye/Desktop/Test1.py"", line 4, in tempFunction     current += 1 UnboundLocalError: local variable 'current' referenced before assignment </code></pre>  <p>When I printed the <code>vars()</code> and <code>locals()</code> inside <code>tempFunction</code>, they confirm that <code>current</code> is present.</p>  <pre><code>({'current': 10}, {'current': 10}) </code></pre>  <p>But when I modified the program a little like this</p>  <pre><code>def generateNextNumber(startNumber):     current = {""Number"" : startNumber}     def tempFunction():         current[""Number""] += 1         return current[""Number""]     return tempFunction </code></pre>  <p>it works. I can't reason why this works. Can anyone explain please?</p>"	2013-08-29 04:04:02.66 UTC	18503395	"<p>Python assumes that all variables in a function are local.  This is to avoid accidental use of a global variable of the same name, or in an enclosing scope.  In some important way, this difference is consequence of the fact that in Python local variable declaration is automatic/implicit while in JavaScript it is not (you have to use <code>var</code>).  Solutions:</p>  <h3>Use a <code>global</code> declaration</h3>  <pre><code>def generateNextNumber(startNumber):     global current     current= startNumber     def tempFunction():         global current         current += 1         return current      return tempFunction </code></pre>  <p>Valid in some cases, but in yours only one instance of <code>tempFunction</code> could be active at the same time.</p>  <h3>Use a function attribute</h3>  <pre><code>def generateNextNumber(startNumber):     def tempFunction():         tempFunction.current += 1         return tempFunction.current     tempFunction.current= startNumber     return tempFunction </code></pre>  <p>Uses the fact that functions are objects (and thus can have attributes), that they are instantiated when they are declared, and that they become local to the enclosing function (or module, in which case they are really global).  This also works because the name <code>tempFunction</code> is used for the first time inside its own definition with a ""member access"" <code>.</code> operator and thus not assumed local.  Something similar happens with the ""call"" <code>()</code>, and ""element access"" <code>[]</code> operators.  The later case explains why your code works.</p>  <h3>Force the name to be assumed non-local</h3>  <pre><code>def generateNextNumber(startNumber):     current= type(""OnTheFly"",(),{})()     current.value= startNumber     def tempFunction():         current.value += 1         return current.value     return tempFunction </code></pre>  <p>This was already explained in the previous section.  By using the member access operator <code>.</code> we are saying ""<code>current</code> already exists"", and thus it's searched in the enclosing scope.  In this particular case, we are creating a class using the <code>type</code> function and immediately creating an instance of it (with the second set of parantheses).  Instead of a general object, we could have also used a list or a dictionary.  The second case was a very common solution.</p>  <h3>Use a function object</h3>  <pre><code>def generateNextNumber(startNumber):     class TempFunction:         def __call__(self):             self.current += 1             return self.current     tempFunction= TempFunction()     tempFunction.current= startNumber     return tempFunction </code></pre>  <p>Any object whose class has a <strong>call</strong> method <strong>is</strong> a function and thus can be called with the function call operator <code>()</code>.  This is extremely related to the two previous cases.</p>  <h3>Use a <code>nonlocal</code> declaration</h3>  <pre><code>def generateNextNumber(startNumber):     current= startNumber     def tempFunction():         nonlocal current         current += 1         return current     return tempFunction </code></pre>  <p>In the same way that <code>global</code> means... well, global, <code>nonlocal</code> means ""in the immediately preceding scope"".  Valid in Python 3 and maybe later versions of Python 2.</p>  <h3>Use generators</h3>  <pre><code>def generateNextNumber(current):     while True :         current+= 1         yield current </code></pre>  <p>This is probably the most ""Pythonic"" way to approach not the general problem of nonlocal variable access, but the specific case you used to explain it.  I couldn't finish without mentioning it.  You need to call it with a minor change, though:</p>  <pre><code>getNextNumber = generateNextNumber(10) for i in range(10):     print (getNextNumber.next()) </code></pre>  <p>When driving a <code>for</code> the call to <code>next()</code> is implicit (but the generator can not be infinite as in my example).</p>"			2013-08-29 06:05:17.937 UTC
18508769	javascript|python|meteor	How to execute a Python script from server side Javascript	"<p>There are a number of answers in relation to how one can execute a Python script from the client side. I am interested in finding out if it is possible to execute the script from the server side and check if the execution has finished successfully. Let say that I'm using <a href=""http://www.meteor.com/"" rel=""nofollow"">Meteor</a> stack which uses JavaScript on both sides and there are a bunch of Python script tasks that needs to be triggered from backend.</p>"	2013-08-29 10:41:52.193 UTC	18509704	"<p>Meteor runs within a NodeJS container. Hence you should be able to use a package like <a href=""https://github.com/mgutz/execSync"" rel=""nofollow"">execSync</a> to do this task for you.</p>"			2013-08-29 11:27:47.59 UTC
18508769	javascript|python|meteor	How to execute a Python script from server side Javascript	"<p>There are a number of answers in relation to how one can execute a Python script from the client side. I am interested in finding out if it is possible to execute the script from the server side and check if the execution has finished successfully. Let say that I'm using <a href=""http://www.meteor.com/"" rel=""nofollow"">Meteor</a> stack which uses JavaScript on both sides and there are a bunch of Python script tasks that needs to be triggered from backend.</p>"	2013-08-29 10:41:52.193 UTC	18510963	"<p>If you need python scripts at you project the most common way is to connect python and meteor through message queue. For example on meteor occured action which should trigger some python script. You send message to queue for python. Python listening queue and when get your message starts task. After task is done, python should send message to queue, maybe with results of task or else.</p>  <pre><code>//Meteor server side var amqp = Meteor.require('amqp'); var connection = amqp.createConnection(amqpCredentials); var Fiber = Npm.require(""fibers"");  connection.on('ready', function(){     connection.queue(queueName, {autoDelete: false}, function(queue){        console.log(' [*] Waiting for messages. To exit press CTRL+C')        queue.subscribe(function(msg){           console.log("" [x] Received %s"", msg.data.toString('utf-8'));           var msg = EJSON.parse(msg.data);           if(msg.type === 'news'){             Fiber(function(){News.insert(msg.data).run()});           }       });   }); </code></pre>  <p>});</p>  <p>At the python's side you should run tasks and add listener of queue. You can read about RabbitMq and python client at official documentation <a href=""http://www.rabbitmq.com/tutorials/tutorial-two-python.html"" rel=""nofollow"">RabbitMQ tutor</a></p>"			2013-08-29 12:25:21.473 UTC
18508769	javascript|python|meteor	How to execute a Python script from server side Javascript	"<p>There are a number of answers in relation to how one can execute a Python script from the client side. I am interested in finding out if it is possible to execute the script from the server side and check if the execution has finished successfully. Let say that I'm using <a href=""http://www.meteor.com/"" rel=""nofollow"">Meteor</a> stack which uses JavaScript on both sides and there are a bunch of Python script tasks that needs to be triggered from backend.</p>"	2013-08-29 10:41:52.193 UTC	18511262	"<p>You can do it simply with a command line invokation, the same way as in any Node application:</p>  <pre><code>var exec = Npm.require('child_process').exec; var Fiber = Npm.require('fibers');   new Fiber(function(){   exec(""python command"", function (error, stdout, stderr) {     ...   }); }).run(); </code></pre>"			2013-08-29 12:39:23.77 UTC
18576447	javascript|python|multithreading|selenium	"Selenium, python, clicking on a javascript link regularly?"	"<p>what should be right way to click on a javascript generated link on a regular time interval using python and selenium bindings? should it be using a thread? </p>  <p>as i would need to continue to process the input data, i need to refresh/reset a timer to continue to receive data, clicking on this given link to do this refresh (and this link is html directly generated by javascript).</p>  <p>best regards</p>"	2013-09-02 15:18:38.31 UTC	18696133	"<p>You don't need thread to do this.</p>  <p>Use javascript function <a href=""https://developer.mozilla.org/en-US/docs/Web/API/window.setInterval"" rel=""nofollow""><code>setInterval</code></a> to continuously click the link.</p>  <p>For example:</p>  <pre><code>import time  from selenium import webdriver  driver = webdriver.Firefox() driver.get('http://jsfiddle.net/falsetru/4UxgK/show/')  # Click the link every 3000 ms. driver.execute_script('''     // argument passed from Python can be accessed by `arguments` array.     var link = arguments[0];     var timer = setInterval(function() {         link.click();     }, 3000); ''', driver.find_element_by_id('activity'))  while True:     data = driver.find_element_by_id('counter').text     print(data)     time.sleep(1) </code></pre>  <p><strong>NOTE</strong></p>  <p>If you get error like follow, upgrade <a href=""https://pypi.python.org/pypi/selenium"" rel=""nofollow""><code>selenium</code></a> to recent version. I experienced following error with <em>Firefox 23.0</em> + <em>selenium 2.32.0</em>. Error was gone with <em>selenium 2.35.0</em>.</p>  <pre><code>Traceback (most recent call last):   File ""t2.py"", line 12, in &lt;module&gt;     print driver.execute_script('''return 1 + 2;''')   File ""/usr/local/lib/python2.7/dist-packages/selenium/webdriver/remote/webdriver.py"", line 397, in execute_script     {'script': script, 'args':converted_args})['value']   File ""/usr/local/lib/python2.7/dist-packages/selenium/webdriver/remote/webdriver.py"", line 165, in execute     self.error_handler.check_response(response)   File ""/usr/local/lib/python2.7/dist-packages/selenium/webdriver/remote/errorhandler.py"", line 158, in check_response     raise exception_class(message, screen, stacktrace) selenium.common.exceptions.WebDriverException: Message: u'waiting for evaluate.js load failed' ; Stacktrace:      at r (file:///tmp/tmpm1sJhH/extensions/fxdriver@googlecode.com/components/driver_component.js:8360)     at fxdriver.Timer.prototype.runWhenTrue/g (file:///tmp/tmpm1sJhH/extensions/fxdriver@googlecode.com/components/driver_component.js:392)     at fxdriver.Timer.prototype.setTimeout/&lt;.notify (file:///tmp/tmpm1sJhH/extensions/fxdriver@googlecode.com/components/driver_component.js:386)  </code></pre>  <h2>Alternative: using thread</h2>  <pre><code>import threading import time  from selenium import webdriver  driver = webdriver.Firefox() driver.get('http://jsfiddle.net/falsetru/4UxgK/show/')  def click_loop(link, interval):     while True:         link.click()         time.sleep(interval)  link = driver.find_element_by_id('activity') threading.Thread(target=click_loop, args=(link, 3)).start()  while True:     data = driver.find_element_by_id('counter').text     print(data)     time.sleep(1) </code></pre>"			2013-09-09 10:24:07.443 UTC
18615524	python|regex|arrays|json	Get valid python list from string (javascript array)	"<p>I'm trying to get the valid python list from the response of a server like you can see below:</p>  <blockquote>   <p>window.__search.list=[{""order"":""1"",""base"":""LAW"",""n"":""148904"",""access"":{""css"":""avail_yes"",""title"":""\u042   2\u0435\u043a\u0441\u0442\u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d""},""title"":""\""\u0410\u0440\u0431\u0438\u0442\u0440\u0430\u0436\u043d\u044b\u0439\u043f\u0440\u043e\u0446\u0435\u0441\u0441\u0443\u0430\u043b\u044c\u043d\u044b\u0439\u043a\u043e\u0434\u0435\u043a\u0441\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u043e\u0439\u0424\u0435\u0434\u0435\u0440\u0430\u0446\u0438\u0438\"" \u043e\u0442 24.07.2002 N 95-\u0424\u0417 (\u0440\u0435\u0434. \u043e\u0442 02.07.2013) (\u0441 \u0438\u0437\u043c. \u0438 \u0434\u043e\u043f.,\u0432\u0441\u0442\u0443\u043f\u0430 \u044e\u0449\u0438\u043c\u0438\u0432 \u0441\u0438\u043b\u0443 \u0441 01.08.2013)""}, ... }];</p> </blockquote>  <p>I did it through cutting off ""window.__search.list="" and "";"" from the string using <code>data = json.loads(re.search(r""(?=\[)(.*?)\s*(?=\;)"", url).group(1))</code> and then it was looked like standard JSON:</p>  <blockquote>   <p>[{u'access': {u'css': u'avail_yes', u'title': u'\u0422\u0435\u043a\u0441\u0442\u0434\u043e\u043a\u04   43\u043c\u0435\u043d\u0442\u0430 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d'},u'title': u'""\u0410\u0440\u0431\u0438\u0442\u0440\u0430\u0436\u043d\u044b\u0439\u043f\u0440\u043e\u0446\u0435\u0441\u0441\u0443\u0430\u043b\u044c\u043d\u044b\u0439\u043a\u043e\u0434\u0435\u043a\u0441\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u043e\u0439\u0424\u0435\u0434\u0435\u0440\u0430\u0446\u0438\u0438"" \u043e\u0442 24.07.2002 N 95-\u0424\u0417 (\u04   40\u0435\u0434. \u043e\u0442 02.07.2013) (\u0441 \u0438\u0437\u043c. \u0438 \u0434\u043e   \u043f.,\u0432\u0441\u0442\u0443\u043f\u0430\u044e\u0449\u0438\u043c\u0438 \u0432 \u0441   \u0438\u043b\u0443 \u0441 01.08.2013)', u'base': u'LAW', u'order': u'1', u'n': u'148904'}, ... }]</p> </blockquote>  <p>But sometimes, during iterating an others urls I get an error like this:</p>  <pre><code>File ""/Developer/Python/test.py"", line 123, in order_search     data = json.loads(re.search(r""(?=\[)(.*?)\s*(?=\;)"", url).group(1)) File ""/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/json/__init__.py"", line 326, in loads     return _default_decoder.decode(s) File ""/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/json/decoder.py"", line 366, in decode     obj, end = self.raw_decode(s, idx=_w(s, 0).end()) File ""/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/json/decoder.py"", line 382, in raw_decode     obj, end = self.scan_once(s, idx) ValueError: Invalid \uXXXX escape: line 1 column 20235 (char 20235) </code></pre>  <p>How can I fix it, or maybe there's an another way to get valid JSON (desirable using native libraries)?</p>"	2013-09-04 13:41:51.317 UTC	18615843	"<p>What about:</p>  <pre><code>response = response.strip() #get rid of whitespaces response = response[response.find(""[""):] #trim everything before the first '[' if response[-1:] == "";"": #if last char == "";""     response = response[:-1] #trim it </code></pre>  <p>Seems like a big overkill to do this with regex.</p>"			2013-09-04 13:55:51.847 UTC
18615524	python|regex|arrays|json	Get valid python list from string (javascript array)	"<p>I'm trying to get the valid python list from the response of a server like you can see below:</p>  <blockquote>   <p>window.__search.list=[{""order"":""1"",""base"":""LAW"",""n"":""148904"",""access"":{""css"":""avail_yes"",""title"":""\u042   2\u0435\u043a\u0441\u0442\u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d""},""title"":""\""\u0410\u0440\u0431\u0438\u0442\u0440\u0430\u0436\u043d\u044b\u0439\u043f\u0440\u043e\u0446\u0435\u0441\u0441\u0443\u0430\u043b\u044c\u043d\u044b\u0439\u043a\u043e\u0434\u0435\u043a\u0441\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u043e\u0439\u0424\u0435\u0434\u0435\u0440\u0430\u0446\u0438\u0438\"" \u043e\u0442 24.07.2002 N 95-\u0424\u0417 (\u0440\u0435\u0434. \u043e\u0442 02.07.2013) (\u0441 \u0438\u0437\u043c. \u0438 \u0434\u043e\u043f.,\u0432\u0441\u0442\u0443\u043f\u0430 \u044e\u0449\u0438\u043c\u0438\u0432 \u0441\u0438\u043b\u0443 \u0441 01.08.2013)""}, ... }];</p> </blockquote>  <p>I did it through cutting off ""window.__search.list="" and "";"" from the string using <code>data = json.loads(re.search(r""(?=\[)(.*?)\s*(?=\;)"", url).group(1))</code> and then it was looked like standard JSON:</p>  <blockquote>   <p>[{u'access': {u'css': u'avail_yes', u'title': u'\u0422\u0435\u043a\u0441\u0442\u0434\u043e\u043a\u04   43\u043c\u0435\u043d\u0442\u0430 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d'},u'title': u'""\u0410\u0440\u0431\u0438\u0442\u0440\u0430\u0436\u043d\u044b\u0439\u043f\u0440\u043e\u0446\u0435\u0441\u0441\u0443\u0430\u043b\u044c\u043d\u044b\u0439\u043a\u043e\u0434\u0435\u043a\u0441\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u043e\u0439\u0424\u0435\u0434\u0435\u0440\u0430\u0446\u0438\u0438"" \u043e\u0442 24.07.2002 N 95-\u0424\u0417 (\u04   40\u0435\u0434. \u043e\u0442 02.07.2013) (\u0441 \u0438\u0437\u043c. \u0438 \u0434\u043e   \u043f.,\u0432\u0441\u0442\u0443\u043f\u0430\u044e\u0449\u0438\u043c\u0438 \u0432 \u0441   \u0438\u043b\u0443 \u0441 01.08.2013)', u'base': u'LAW', u'order': u'1', u'n': u'148904'}, ... }]</p> </blockquote>  <p>But sometimes, during iterating an others urls I get an error like this:</p>  <pre><code>File ""/Developer/Python/test.py"", line 123, in order_search     data = json.loads(re.search(r""(?=\[)(.*?)\s*(?=\;)"", url).group(1)) File ""/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/json/__init__.py"", line 326, in loads     return _default_decoder.decode(s) File ""/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/json/decoder.py"", line 366, in decode     obj, end = self.raw_decode(s, idx=_w(s, 0).end()) File ""/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/json/decoder.py"", line 382, in raw_decode     obj, end = self.scan_once(s, idx) ValueError: Invalid \uXXXX escape: line 1 column 20235 (char 20235) </code></pre>  <p>How can I fix it, or maybe there's an another way to get valid JSON (desirable using native libraries)?</p>"	2013-09-04 13:41:51.317 UTC	18685047	"<p>Probably, your regular expression has found char ';' somewhere in the middle of a response, and because of this you get an error, because, using your regular expression, you might have received an incomplete, cropped response, and that's why you could not convert it into JSON.</p>  <p>Yes, I agree with user RickyA that sometimes using a native tools, a code will easier to read than trying to make up RegEx. But here, I'd rather to use exactly regular expression, something like this:</p>  <pre><code>data = re.search(r'(?=\[)(.*?)[\;]*$', response).group(1) </code></pre>  <blockquote> <pre><code>/(?=\[)(.*?)[\;]*$/ (?=\[) Positive Lookahead \[ Literal [ 1st Capturing group (.*?) . 0 to infinite times [lazy] Any character (except newline) Char class [\;] 0 to infinite times [greedy] matches: \; The character ; $ End of string </code></pre> </blockquote>  <p>I believe you meant that  the variable '<strong>url</strong>' means a response from a server, then maybe better to use name of variable '<strong>response</strong>' instead of '<strong>url</strong>'.</p>  <p>And, if you've some troubles with using RegEx, I advise you to use an editor of regular expressions, like <a href=""http://regex101.com"" rel=""nofollow"">RegEx 101</a>.This is the online regular expression editor, which explains each block of inputted expression.</p>"			2013-09-08 14:47:54.78 UTC
18679835	javascript|python|html|cookies	"Cookies, JavaScript, Python, Browsing-but-not-really"	"<p>Before, I think I danced around the bush, because I wasn't clear on the ethics of prancing around someone's website with python. I saw one answer on the stackoverflow that was close to what I needed, but it got deleted because ticketmaster.com requested for that to happen.  But, I'll put those reservations aside.</p>  <p>I want to automatically grab a bunch of prices from a grocery store website.  I began my project somewhat new and rusty with python.  I grabbed the URLfiles as a human from my browser sessions and ran a bunch of loops to extract the data I wanted (a lot of '.find').  The problem was, I was, at the time, searching (.find()) the html files which I had downloaded manually.  When I switched my code over to using ""urlopen"" I ran into a problem I didn't immediately recognize.</p>  <p>This page, for example, shows two different things depending on what your browsing status is.</p>  <pre><code>http://www.hannaford.com/thumbnail/Produce/Fruits/pc/28546/46815.uts?displayAll=true </code></pre>  <p>And I suppose it ought to, because in a business like this, products and prices could be very sensitive to geography.  </p>  <p>My idea has been to start the 'Python-ing' at this page where I already know the store I want to select:     www.hannaford.com/custserv/store_detail.jsp?viewStoreId=21026</p>  <p>and I have this form in particular:   </p>  <pre><code>&lt;form action=""/custserv/save_user_store.cmd""      method=""post"" name=""selectThisStoreForm""      onsubmit=""return StoreLocator.change.store(this,false,false,21026);""         &gt;         &lt;input type='hidden' name='form_state' value='selectThisStoreForm'/&gt;         &lt;input name=""storeId"" type=""hidden"" value=""21026""/&gt;&lt;p class=""browseStoreLink""&gt;     &lt;a href=""javascript:void(0);""          onclick=""this.form.submit();""          class=""altLink""         &gt;         &lt;input class=""shopNow"" type=""image"" src=""/assets/hf/assets/images/buttons/btn_shopNow.gif"" border=""0"" alt=""Shop Now""/&gt;     &lt;/a&gt;     &lt;/p&gt; &lt;/form&gt; </code></pre>  <p>So I have the onsubmit sending a JS function to a page that isnt meant to be seen by humans.</p>  <p>Chrome says I have always 10 cookies when I am in a session with hannaford.  7 from ""hannaford.com"" and 3 from ""www.hannaford.com"".</p>  <p>So, just flailing a little bit:</p>  <pre><code>sesh = requests.Session() Params = {'selectThisStoreForm':''} url = ""http://www.hannaford.com/custserv/save_user_store.cmd"" sesh.post(url,param=Params)  urlopen(urlFRUITS,cookies=sesh.cookies)#?? </code></pre>  <p>I am getting cookies out of Sessions.  I am not getting the number of them that Chrome says it does get.  I am also not able to "".find"" the tags I want to find in each of these pages.</p>"	2013-09-08 02:32:42.08 UTC	18680346	"<p>There is no need to use <code>urllib.urlopen</code> just use <code>sesh.get([url])</code>, the cookies will automatically be sent. You are also not sending the right parameters for the form, try:</p>  <pre><code>params = { 'form_state' : 'selectThisStoreForm', 'storeid' : '21026' } sesh.post('http://www.hannaford.com/custserv/save_user_store.cmd', params=params) resp = sesh.get(urlFRUITS) </code></pre>  <p>Alternatively, You could try the <code>requests</code> library and the <code>Session</code> object, it automatically manages cookies, e.g.:</p>  <pre><code>&gt;&gt;&gt; import requests &gt;&gt;&gt; s = requests.Session() &gt;&gt;&gt; r = s.get('http://www.THEWEBSITE.com/custserv/locate_store.cmd') &gt;&gt;&gt; print r.status_code 200 &gt;&gt;&gt; for c in s.cookies: &gt;&gt;&gt;     print c &lt;Cookie JSESSIONID=&lt;ID&gt; for www.THEWEBSITE.com/&gt; &lt;Cookie PIPELINE_SESSION_ID=&lt;ID&gt; for www.THEWEBSITE.com/&gt; &gt;&gt;&gt; payload = { 'form_state' : 'selectThisStoreForm', 'storeId' : '62012' }  &gt;&gt;&gt; r = s.post('http://www.THEWEBSITE.com/custserv/save_user_store.cmd', data=payload) &gt;&gt;&gt; print r.status_code 200 &gt;&gt;&gt; for c in s.cookies: &gt;&gt;&gt;    print c &lt;Cookie JSESSIONID=&lt;ID&gt; for www.THEWEBSITE.com/&gt; &lt;Cookie PIPELINE_SESSION_ID=&lt;ID&gt; for www.THEWEBSITE.com/&gt; &lt;Cookie USER_SESSION_VALIDATE_COOKIE=false for www.THEWEBSITE.com/&gt; </code></pre>  <p>Without knowing exactly what you are doing, I would try the <code>requests.Session</code> object.</p>"			2013-09-08 04:13:58.497 UTC
18707212	javascript|python|selenium-webdriver	Need some advice on using JavaScript with Python/Selenium WebDriver	"<p>I've been searching stackoverflow for an answer to this question all day. I'm trying to use Selenium WebDriver to click into an iframe and fill the fields on a registration form. Since Python on its own returns the error ""Unable to locate element"", I'm now trying to use JavaScript to get into the field.</p>  <p>The new error is ""raise exception_class(message, screen, stacktrace) selenium.common.exceptions.WebDriverException: Message: u'document.getElementById(...) is null' ;""</p>  <p>Any advice on what I'm doing wrong?</p>  <pre><code>from selenium import webdriver from selenium.common.exceptions import TimeoutException from selenium.webdriver.support.ui import WebDriverWait # available since 2.4.0 from selenium.webdriver.support import expected_conditions as EC # available since 2.26.0  import string import random def id_generator(size=6, chars=string.ascii_uppercase):      return ''.join(random.choice(chars) for x in xrange(size))  # Create a new instance of the Firefox driver driver = webdriver.Firefox()  driver.get(""http://bostinno.streetwise.co"")  driver.find_element_by_link_text(""Sign-up"").click()  WebDriverWait(driver, 30)  driver.execute_script(""document.getElementById('User_firstName').click()"")  type(id_generator()) </code></pre>"	2013-09-09 21:20:08.78 UTC	18708523	"<p>This should be possible with Selenium API <code>switchto()</code>, which wouldn't require any JavaScript. It might look something like this:</p>  <pre><code># move into the iframe iframe = driver.find_elements_by_tag_name('iframe')[0] driver.switch_to_frame(iframe)  # interact with your element inside the iframe driver.find_element_by_link_text(""Sign-up"").click() driver.find_element_by_id(""User_firstName"").click()  # do any other steps you need...  # move back out of iframe driver.switch_to_default_content() </code></pre>"			2013-09-09 23:20:26.16 UTC
18789381	javascript|jquery|ipython-notebook	Javascript to scroll an iPython Notebook cell to the top of the window	"<p>I'm using iPython to present to my class. I know about converting to Reveal.js slideshows but I don't want to do that because I want to be able to edit the cells live in answer to questions.</p>  <p>It is working OK just moving from cell to cell but it would be so much smoother if I could hit a key to move to the next cell <strong>and</strong> scroll the window so the cell is at the top.</p>  <p>I'm sure this must be possible by adding a bit of javascript to custom.js but before I dive in, I thought I would ask if anyone had already done something similar. </p>"	2013-09-13 14:56:19.1 UTC	18790213	"<p>have a look <a href=""https://github.com/ipython-contrib/IPython-notebook-extensions"" rel=""nofollow"">here</a> <code>slidemode</code> extension in <code>slidemode</code> folder. If you saw some scipy talk, this is what Fernando Perez/ Paul Ivanov and some other people use.</p>"			2013-09-13 15:38:20.297 UTC
18803466	javascript|python|google-app-engine|pyv8	Is there any alternative to implement javascript`s onClick() function in pure python?	"<p>In short: I'm looking is to get the img src value onClick() &amp; pass that selected image to a python function to work with PIL</p>  <p>say, <code>var i = getElementById(""image-id"").src pass this to python def whatever(): img = src var from js fun</code></p>  <p>Is it possible? I know this can be done >>> </p>  <pre><code>def post(self):     val = self.request.get(""name_of_the_txt_field_to_get"")     self.request.write(""val"")  </code></pre>  <p>but I want the variable to a be an image SRC with a onClick(); button function, and I want to pass this SRC value to the python function as a variable.</p>  <p>I'm aware that js is client side &amp; python is server side, So I'm looking to pass the value to another URL say from <code>http://localserver</code> to <code>http://localserver/image</code></p>  <p>I've been finding a solution to it &amp; I did came across some options:<a href=""https://github.com/atsepkov/RapydScript"" rel=""nofollow"">https://github.com/atsepkov/RapydScript</a> (but it's a python to javascript compiler &amp; I'll need to compile it)</p>  <p>another one is the good old <a href=""http://code.google.com/p/pyv8/"" rel=""nofollow"">http://code.google.com/p/pyv8/</a> but I can't figure it out &amp; </p>  <p>this one seems to be pretty interesting <a href=""https://github.com/fergalwalsh/pico"" rel=""nofollow"">PICO</a> &amp; I think would get the job done, however I can't figure it on how do I run it on GAE </p>  <p>workspace: GAE for python with Jinja2 Template.</p>"	2013-09-14 15:46:34.783 UTC	18935198	"<p>I'm assuming you're asking about Javascript because you're running something in a web browser.  And when you run something in a browser, I assume you want things to run in any browser.</p>  <p>In which case, the answer is no, there isn't.</p>  <p>Browsers can execute Javascript.  They don't execute python.  So you will need to execute Javascript in the browser, make some sort of HTTP request to your server, and process the request in python.  There's libraries like pico that generate wrappers so you have to write less code, but it does the same thing in the background.</p>  <p>You could write some sort of plugin for browsers that can execute python.  It's been done: <a href=""https://wiki.python.org/moin/WebBrowserProgramming"" rel=""nofollow"">https://wiki.python.org/moin/WebBrowserProgramming</a></p>  <p>But you'll be limited to a subset of browsers who have the appropriate plugin installed.</p>"			2013-09-21 16:58:25.973 UTC
18803466	javascript|python|google-app-engine|pyv8	Is there any alternative to implement javascript`s onClick() function in pure python?	"<p>In short: I'm looking is to get the img src value onClick() &amp; pass that selected image to a python function to work with PIL</p>  <p>say, <code>var i = getElementById(""image-id"").src pass this to python def whatever(): img = src var from js fun</code></p>  <p>Is it possible? I know this can be done >>> </p>  <pre><code>def post(self):     val = self.request.get(""name_of_the_txt_field_to_get"")     self.request.write(""val"")  </code></pre>  <p>but I want the variable to a be an image SRC with a onClick(); button function, and I want to pass this SRC value to the python function as a variable.</p>  <p>I'm aware that js is client side &amp; python is server side, So I'm looking to pass the value to another URL say from <code>http://localserver</code> to <code>http://localserver/image</code></p>  <p>I've been finding a solution to it &amp; I did came across some options:<a href=""https://github.com/atsepkov/RapydScript"" rel=""nofollow"">https://github.com/atsepkov/RapydScript</a> (but it's a python to javascript compiler &amp; I'll need to compile it)</p>  <p>another one is the good old <a href=""http://code.google.com/p/pyv8/"" rel=""nofollow"">http://code.google.com/p/pyv8/</a> but I can't figure it out &amp; </p>  <p>this one seems to be pretty interesting <a href=""https://github.com/fergalwalsh/pico"" rel=""nofollow"">PICO</a> &amp; I think would get the job done, however I can't figure it on how do I run it on GAE </p>  <p>workspace: GAE for python with Jinja2 Template.</p>"	2013-09-14 15:46:34.783 UTC	18803747	"<p>You could use jQuery to do an AJAX POST to <code>http://localserver/image</code>:</p>  <pre><code>$(document).ready(function() {     $(""img"").click(function() {         var request = $.ajax({             url: ""/image"",             type: ""POST"",             data: {imageSrc : $(this).attr(""src"")}         });          request.done(function(msg) {             alert(""Request succeeded: "" + msg );         });          request.fail(function(jqXHR, textStatus) {             alert( ""Request failed: "" + textStatus );         });     }); }); </code></pre>  <p>See also: <a href=""https://stackoverflow.com/questions/9436534/ajax-tutorial-for-post-and-get"">Ajax tutorial for post and get</a></p>"			2013-09-14 16:18:18.547 UTC
18809962	javascript|python|web-scraping|mechanize	Follow a javascript link with mechanize and python	"<p>I'm doing some web scraping and the project is almost done, except for I need to click a javascript link and I can't work out how to with Python and mechanize.</p>  <p>On one of the pages, a list of javascript links appear and I want to follow them in turn, scrape some data, and repeat. I know mechanize doesn't work with javascript but does anyone know a workaround? Here's the code I use to isolate the links:</p>  <pre><code>for Auth in iterAuths:      Auth = str(Auth.contents[0]).strip()      br.find_link(text=Auth) </code></pre>  <p>now if I do <code>br.follow_link(text=Auth)</code>, I get an error <code>urllib2.URLError: &lt;urlopen error unknown url type: javascript&gt;</code>. </p>  <p>If I do <code>print br.click_link(text=Auth')</code>, it prints as <code>Request for javascript:SendThePage('5660')</code></p>  <p>I just need to get through the javascript link. Can anyone help?</p>"	2013-09-15 07:25:49.453 UTC	18810039	"<p>When I needed to do something similar, I looked at the links I was trying to follow.</p>  <p>Some of them were static links generated with javascript. They were predictable/consistent enough that I could manually generate a list before hand.</p>  <p>Others were just constructed URLs with parameters. These too could be analyzed before hand and generated python-side and passed as a request instead of a ""click on this link.""</p>  <p>If you need to actually execute the javascript, you could run a PyV8 + Mechanize hybrid. I've been playing with this a bit and it seems pretty cool. PyV8 bridges Python with the V8 Javascript engine allowing you to create JS environments and execute arbitrary code. It does a great job going back and forth between the two languages.</p>  <p>I don't have any sample code, but one of these 3 solutions will work for you :) Good luck!</p>"			2013-09-15 07:36:10.843 UTC
18835414	javascript|python|arrays|json|flask	How to access an array (JSON) in the front-end JavaScript that was passed by Python (Flask)?	"<p>I'm a real noobie using the Flask framework (and client-server generally), so bear with me. I have a basic HTML template file with a bit of Flask (uses the {% ... %} notation) passing in a JSON object from a python file. Right now, as a simple sanity check it's outputting the content of <code>motifs</code> (an array of arrays) as separate lines (<code>&lt;li&gt;</code>) in an unordered list (<code>&lt;ul&gt;</code>). </p>  <p>What I want it to do instead is use the <code>motifs</code> array of arrays in a JavaScript script as data for a visualization I'm trying to do. I tried mingling the Flask script into a JavaScript <code>&lt;script&gt;</code> tag that iterates out a JavaScript array, but got an error that the script tag didn't like the Flask notation (<code>Uncaught SyntaxError: Unexpected token }</code>. So how do I get the Flask script to cough up the array for use in a JavaScript script? I realize I may be misunderstanding some things here (perhaps the nature of JSONs?). I'd be grateful for any nudges in the right direction. Thanks!</p>  <p>Below I've included my html template with the Flask script creating the unordered list, I've also included my failed attempt to use the Flask script in a <code>&lt;script&gt;</code> tag. So how do I successfully access the array (JSON) in a JavaScript?</p>  <p>index.html (a template file - simplified here for clarity):</p>  <pre><code>&lt;!DOCTYPE html&gt; &lt;head&gt; &lt;title&gt;&lt;/title&gt; &lt;/head&gt; &lt;body&gt;  &lt;p&gt;Here are some motifs:&lt;/p&gt;     &lt;ul&gt;         {% for motif in motifs %}         &lt;li&gt;{{motif}}&lt;/li&gt;         {% endfor %}     &lt;/ul&gt; &lt;script&gt;one of a few js scripts&lt;/script&gt; &lt;/body&gt; &lt;/html&gt; </code></pre>  <p>The output of the above file looks like this (missing the bullet points which didn't copy):</p>  <p>Here are some motifs:</p>  <p>{'gene1': 1, 'gene2': 1, 'gene3': 7, 'gene4': 7, 'gene5': 1}</p>  <p>{'gene1': 7, 'gene2': 4, 'gene3': 10, 'gene4': 5, 'gene5': 2}</p>  <p>{'gene1': 7, 'gene2': 1, 'gene3': 8, 'gene4': 5, 'gene5': 8}</p>  <p>{'gene1': 2, 'gene2': 4, 'gene3': 6, 'gene4': 1, 'gene5': 9}</p>  <p>{'gene1': 3, 'gene2': 8, 'gene3': 2, 'gene4': 7, 'gene5': 8}</p>  <p>{'gene1': 1, 'gene2': 5, 'gene3': 1, 'gene4': 9, 'gene5': 5}</p>  <p>{'gene1': 3, 'gene2': 5, 'gene3': 6, 'gene4': 10, 'gene5': 9}</p>  <p>{'gene1': 2, 'gene2': 10, 'gene3': 7, 'gene4': 5, 'gene5': 10}</p>  <p>{'gene1': 5, 'gene2': 5, 'gene3': 10, 'gene4': 10, 'gene5': 5}</p>  <p>{'gene1': 10, 'gene2': 4, 'gene3': 4, 'gene4': 6, 'gene5': 4}</p>  <p>Below is my failed attempt to access in a <code>&lt;script&gt;</code> the array (JSON object) passed by Flask:</p>  <pre><code>&lt;script&gt; var motifValuesArray = []; var index = 0; // an iterator to assign indexes in the javascript array {% for motif in motifs %}     motifValuesArray[index] = {motif};     console.log(motifValuesArray[index]); {% endfor %}         &lt;/script&gt; </code></pre>"	2013-09-16 19:07:04.667 UTC	18835721	<p>Use <code>json.dumps</code> to make sure that your motif dictionaries are proper JSON.</p>  <pre><code>try:    import simplejson as json except:   import json  ...  motifValuesArray[index] = {{json.dumps(motif)}}; </code></pre>			2013-09-16 19:26:13.037 UTC
18835414	javascript|python|arrays|json|flask	How to access an array (JSON) in the front-end JavaScript that was passed by Python (Flask)?	"<p>I'm a real noobie using the Flask framework (and client-server generally), so bear with me. I have a basic HTML template file with a bit of Flask (uses the {% ... %} notation) passing in a JSON object from a python file. Right now, as a simple sanity check it's outputting the content of <code>motifs</code> (an array of arrays) as separate lines (<code>&lt;li&gt;</code>) in an unordered list (<code>&lt;ul&gt;</code>). </p>  <p>What I want it to do instead is use the <code>motifs</code> array of arrays in a JavaScript script as data for a visualization I'm trying to do. I tried mingling the Flask script into a JavaScript <code>&lt;script&gt;</code> tag that iterates out a JavaScript array, but got an error that the script tag didn't like the Flask notation (<code>Uncaught SyntaxError: Unexpected token }</code>. So how do I get the Flask script to cough up the array for use in a JavaScript script? I realize I may be misunderstanding some things here (perhaps the nature of JSONs?). I'd be grateful for any nudges in the right direction. Thanks!</p>  <p>Below I've included my html template with the Flask script creating the unordered list, I've also included my failed attempt to use the Flask script in a <code>&lt;script&gt;</code> tag. So how do I successfully access the array (JSON) in a JavaScript?</p>  <p>index.html (a template file - simplified here for clarity):</p>  <pre><code>&lt;!DOCTYPE html&gt; &lt;head&gt; &lt;title&gt;&lt;/title&gt; &lt;/head&gt; &lt;body&gt;  &lt;p&gt;Here are some motifs:&lt;/p&gt;     &lt;ul&gt;         {% for motif in motifs %}         &lt;li&gt;{{motif}}&lt;/li&gt;         {% endfor %}     &lt;/ul&gt; &lt;script&gt;one of a few js scripts&lt;/script&gt; &lt;/body&gt; &lt;/html&gt; </code></pre>  <p>The output of the above file looks like this (missing the bullet points which didn't copy):</p>  <p>Here are some motifs:</p>  <p>{'gene1': 1, 'gene2': 1, 'gene3': 7, 'gene4': 7, 'gene5': 1}</p>  <p>{'gene1': 7, 'gene2': 4, 'gene3': 10, 'gene4': 5, 'gene5': 2}</p>  <p>{'gene1': 7, 'gene2': 1, 'gene3': 8, 'gene4': 5, 'gene5': 8}</p>  <p>{'gene1': 2, 'gene2': 4, 'gene3': 6, 'gene4': 1, 'gene5': 9}</p>  <p>{'gene1': 3, 'gene2': 8, 'gene3': 2, 'gene4': 7, 'gene5': 8}</p>  <p>{'gene1': 1, 'gene2': 5, 'gene3': 1, 'gene4': 9, 'gene5': 5}</p>  <p>{'gene1': 3, 'gene2': 5, 'gene3': 6, 'gene4': 10, 'gene5': 9}</p>  <p>{'gene1': 2, 'gene2': 10, 'gene3': 7, 'gene4': 5, 'gene5': 10}</p>  <p>{'gene1': 5, 'gene2': 5, 'gene3': 10, 'gene4': 10, 'gene5': 5}</p>  <p>{'gene1': 10, 'gene2': 4, 'gene3': 4, 'gene4': 6, 'gene5': 4}</p>  <p>Below is my failed attempt to access in a <code>&lt;script&gt;</code> the array (JSON object) passed by Flask:</p>  <pre><code>&lt;script&gt; var motifValuesArray = []; var index = 0; // an iterator to assign indexes in the javascript array {% for motif in motifs %}     motifValuesArray[index] = {motif};     console.log(motifValuesArray[index]); {% endfor %}         &lt;/script&gt; </code></pre>"	2013-09-16 19:07:04.667 UTC	18839780	"<p>So the reason your <code>&lt;script&gt;</code> attempt <a href=""http://jinja.pocoo.org/docs/"" rel=""nofollow noreferrer"">failed is because you're attempting to run jinja2 code</a> (the templating engine that comes with flask by default) in the web browser. <a href=""http://www.w3.org/TR/html401/interact/scripts.html"" rel=""nofollow noreferrer"">The web browser doesn't have a python interpreter let alone a templating engine that is built on top of python.</a></p>  <p>With that being said there are several ways in which you can get a JSON array from flask to the client. <a href=""https://stackoverflow.com/questions/9579721/convert-html-table-to-array-in-javascript"">Probably the simplest way is to pass the array as straight HTML and parse the html.</a> But that's not very slick and can be very slow if your array gets very large.</p>  <p><a href=""https://stackoverflow.com/questions/11178426/how-can-i-pass-data-from-python-flask-framework-to-javascript"">Just to be thorough, this SO answer goes through how to do things straight from jinja2.</a></p>  <p>For my example I'm going to create a javascript function which is called on page load. This javascript function makes an ajax call to the flask application, receives a array in a JSON format, and finally parses the object to return the array.</p>  <p>Javascript</p>  <pre><code>$(document).ready(function() {     var request = $.ajax({         type: ""POST"",         url: ""/example_array/"",         data: {""name"":""""}, // if you wanted to specifiy what list then pass an actual name         dataType: ""html""     });      request.done(function(JSON_array) {         array_data = JSON.parse(JSON_array)[""array""]         //from here you have your array to play with     }); }); </code></pre>  <p>flask file</p>  <pre><code>from flask import jsonify  @app.route(""/example_array/"") def example():     list = get_list() # however you get your list data, put it here     return jsonify(array=list)  @app.route(""/"") def index():      return render_template(""home_page.html"") </code></pre>"			2013-09-17 01:12:17.087 UTC
18851728	javascript|jquery|python|ajax|flask-wtforms	JavaScript/jQuery and Python Ajax force an error	"<p>I am using WTF flask forms to render elements into my report criteria template. Once the user fills the the form and hits enter a post request is made to the corresponding view and the flask form is validated. If there is a validation error then I need to flash the error and return the report criteria template with fields highlighted with error otherwise I need to display the report results. The issue is if there is a validation error then the template returned from the view needs to be loaded into a <code>&lt;div&gt;</code> which is not same as the <code>&lt;div&gt;</code> in which I needs to display the results. Also how do I force an error from my view.</p>  <p>I have the following ajax call at the moment, but for some reason if validation fails it doesnt do anything, whereas if validation passes and there are results returned from the call then it works fine</p>  <pre><code>function loadReport() {     $.ajax({         url: &lt;endpoint&gt;,         dataType: 'text/html',                      success: function(data) {                 $(""#reportResults_placeholder"").html(data);         },         error: function (request, status, error) {             $(""#reportCriteria_placeholder"").html(data);         }     }); } </code></pre>"	2013-09-17 13:47:46.78 UTC	18851759	"<p>Try</p>  <p>change</p>  <pre><code> error: function (request, status, error) {                 $(""#reportCriteria_placeholder"").html(data); //change data to error             } </code></pre>  <p>to</p>  <pre><code> error: function (request, status, error) {                 $(""#reportCriteria_placeholder"").html(error); //change data to error             } </code></pre>"			2013-09-17 13:49:15.867 UTC
18869519	javascript|python|json	Javascript and Python JSON - variable is not defined	"<p>For example if you have the following JSON object(remove the semicolon for python):</p>  <pre><code>values = {     a: 1,     b: {         c: 2,         d: { e: 3 }     },     f: 4,     g: 5    }; </code></pre>  <p>If you try to print <code>values</code> in JS, it will work fine. But in Python it will return an error <code>NameError: name 'a' is not defined</code> which means these variables aren't defined and needs to be set as strings.</p>  <p>Lets say I need to load it into python without manually converting these undefined variables to string. I tried <code>json.loads</code> but it didn't work. Any other built-in functions to do this work? It seems in JS it automatically treats them as strings if they are not defined or just ignores the fact that they are defined or not?</p>  <p>Any explanation?</p>"	2013-09-18 10:14:12.357 UTC	18869581	"<blockquote>   <p>I tried json.loads but it didn't work.</p> </blockquote>  <p>That's because what you've quoted isn't <a href=""http://json.org"" rel=""nofollow"">JSON</a>, it's a JavaScript object initializer being assigned to something (probably a variable).</p>  <p>Here's the equivalent JSON:</p>  <pre><code>{     ""a"": 1,     ""b"": {         ""c"": 2,         ""d"": { ""e"": 3 }     },     ""f"": 4,     ""g"": 5    } </code></pre>  <p>Items of note:</p>  <ul> <li>No variable, no <code>=</code></li> <li>The top level must be an object (e.g., <code>{...}</code>) or an array (e.g., <code>[...]</code>).</li> <li>Property names (keys) must be in double quotes</li> <li>Strings must be in double quotes (you don't have any strings in your example, but if you did, single quotes&nbsp;&mdash; for instance&nbsp;&mdash; wouldn't be valid)</li> <li>No <code>;</code> at the end</li> </ul>"			2013-09-18 10:17:07.793 UTC
18881042	javascript|python|xmlhttprequest|flask|uwsgi	Flask Python String Not Returning Back To Javascript XMLHttpRequest call	"<p>I have a Javacscript XMLHttpRequest call which calls python app.py(using flask). The python script myapp.py returns ""Hello World"". I see in Chromium Debug that is is returning ""hello world"". But it's not being return to the Javascript XMLHttpRequest in the responsetext value. </p>  <p>Here is my javascript code:</p>  <pre><code>function foo() {     var xml = new XMLHttpRequest();     xml.open(""GET"", ""/myapp/web.py"", true);     xml.send(null);     var text = xml.responseText;     alert(text);  } </code></pre>  <p>Here is the python script:</p>  <pre><code>flask python # cat myapp.py from flask import Flask app = Flask(__name__)   @app.route('/', defaults={'path': ''}) @app.route('/&lt;path:path&gt;') def catch_all(path):     return ""hello world""  #@app.route('/') def hello_world():     return 'Hello World!'  if __name__ == '__main__':     app.run() </code></pre>"	2013-09-18 19:47:07.663 UTC	18882261	"<p>You need to use a callback function to get the data due to the asynchronous nature of JavaScript.</p>  <pre><code>function ajaxSuccess () {     alert(this.responseText); }  function foo() {     var xml = new XMLHttpRequest();     xml.open(""GET"", ""/myapp/web.py"", true);     xml.send(null);     xml.onload = ajaxSuccess; } </code></pre>"			2013-09-18 20:59:58.203 UTC
18881042	javascript|python|xmlhttprequest|flask|uwsgi	Flask Python String Not Returning Back To Javascript XMLHttpRequest call	"<p>I have a Javacscript XMLHttpRequest call which calls python app.py(using flask). The python script myapp.py returns ""Hello World"". I see in Chromium Debug that is is returning ""hello world"". But it's not being return to the Javascript XMLHttpRequest in the responsetext value. </p>  <p>Here is my javascript code:</p>  <pre><code>function foo() {     var xml = new XMLHttpRequest();     xml.open(""GET"", ""/myapp/web.py"", true);     xml.send(null);     var text = xml.responseText;     alert(text);  } </code></pre>  <p>Here is the python script:</p>  <pre><code>flask python # cat myapp.py from flask import Flask app = Flask(__name__)   @app.route('/', defaults={'path': ''}) @app.route('/&lt;path:path&gt;') def catch_all(path):     return ""hello world""  #@app.route('/') def hello_world():     return 'Hello World!'  if __name__ == '__main__':     app.run() </code></pre>"	2013-09-18 19:47:07.663 UTC	18960244	"<p>try  :</p>  <pre><code>function foo() {     var xml = new XMLHttpRequest();     xml.onreadystatechange() {         var text = xml.responseText;         alert(text);     }     xml.open(""GET"", ""/myapp/web.py"", true);     xml.send(null); } </code></pre>"			2013-09-23 13:16:35.457 UTC
18881042	javascript|python|xmlhttprequest|flask|uwsgi	Flask Python String Not Returning Back To Javascript XMLHttpRequest call	"<p>I have a Javacscript XMLHttpRequest call which calls python app.py(using flask). The python script myapp.py returns ""Hello World"". I see in Chromium Debug that is is returning ""hello world"". But it's not being return to the Javascript XMLHttpRequest in the responsetext value. </p>  <p>Here is my javascript code:</p>  <pre><code>function foo() {     var xml = new XMLHttpRequest();     xml.open(""GET"", ""/myapp/web.py"", true);     xml.send(null);     var text = xml.responseText;     alert(text);  } </code></pre>  <p>Here is the python script:</p>  <pre><code>flask python # cat myapp.py from flask import Flask app = Flask(__name__)   @app.route('/', defaults={'path': ''}) @app.route('/&lt;path:path&gt;') def catch_all(path):     return ""hello world""  #@app.route('/') def hello_world():     return 'Hello World!'  if __name__ == '__main__':     app.run() </code></pre>"	2013-09-18 19:47:07.663 UTC	28313111	<p>I believe that you have been solve this problem. A way to solve this problem is that you should check the xml.readyState==4 &amp;&amp; xml.status == 200</p>			2015-02-04 03:41:14.7 UTC
18936253	javascript|python|google-app-engine	How to make python invoke a JavaScript function?	"<p>I am rather new at this, so please cut me some slack.</p>  <p>I am working in a web application using google app engine. My server runs using Python, and when the user visits my ""/"" page, the server gets some HTML source code from a website and places it into a variable called <code>html_code</code>. </p>  <p>Now I would like to pass the <code>html_code</code> variable to the client so he can analyze it using JavaScript. Is this possible? How can I achieve this? Please provide examples if possible.</p>  <p>Thanks in advance, Pedro.</p>"	2013-09-21 18:44:38.353 UTC	18937126	"<p>I assume you want to send a piece of html to a browser that won't disrupt the existing layout and functioning of the page, but still take place in DOM (hence be accessible from JS). In that case you may consider a hidden/invisible iframe.</p>"			2013-09-21 20:14:03.48 UTC
18936253	javascript|python|google-app-engine	How to make python invoke a JavaScript function?	"<p>I am rather new at this, so please cut me some slack.</p>  <p>I am working in a web application using google app engine. My server runs using Python, and when the user visits my ""/"" page, the server gets some HTML source code from a website and places it into a variable called <code>html_code</code>. </p>  <p>Now I would like to pass the <code>html_code</code> variable to the client so he can analyze it using JavaScript. Is this possible? How can I achieve this? Please provide examples if possible.</p>  <p>Thanks in advance, Pedro.</p>"	2013-09-21 18:44:38.353 UTC	18937900	"<p>Note, the following is very very quick and dirty way of getting something to the client side. </p>  <p>Based upon <a href=""https://developers.google.com/appengine/docs/python/gettingstartedpython27/introduction"" rel=""nofollow"">https://developers.google.com/appengine/docs/python/gettingstartedpython27/introduction</a> the following makes use of webapp2 and jinja2. ""html_code"" would be available for usage within a file named index.html. How you render / surface the fetched document is up to you, but as has been previously mentioned an iframe would probably work well in this situation.</p>  <pre><code>import os from google.appengine.api import urlfetch import webapp2 import jinja2  JINJA_ENVIRONMENT = jinja2.Environment(     loader=jinja2.FileSystemLoader(os.path.dirname(__file__)),     extensions=['jinja2.ext.autoescape'])  class MainHandler(webapp2.RequestHandler):     def get(self):         html_code = urlfetch.fetch('http://stackoverflow.com/questions/18936253/how-to-make-python-invoke-a-javascript-function')         template_values = {             'html_code': html_code.content         }         template = JINJA_ENVIRONMENT.get_template('index.html')         self.response.write(template.render(template_values))  app = webapp2.WSGIApplication([     ('/', MainHandler) ], debug=True) </code></pre>"			2013-09-21 21:37:01.57 UTC
19063553	python|web-scraping	python download xls javascript	"<p>I'm trying to download an .xls file from a page such as this through a POST request and I've tried using urllib2, requests, etc. but I think the file is accessed through a javascript function.</p>  <p>My code is:</p>  <pre><code>import urllib2  url= 'http://www.inegi.org.mx/est/contenidos/espanol/proyectos/censos/ce2009/saic/exportar.asp?Cuadro=INEGI.+Censos+Econ%C3%B3micos+2009.+Resultados+definitivos&amp;Censo=2009&amp;Nacional=&amp;vcampo=H001A&amp;Sector=23&amp;c=17166&amp;Genera=1&amp;formato=Hoja+de+C%C3%A1lculo+Excel%28.xls%29&amp;Modelo=SCIAN&amp;Grupo=AA&amp;Municipio=01001' obj = urllib2.urlopen(url) file = '/home/j/Dropbox/School/RA/download.xls' output = open(file, 'wb') output.write(obj.read()) output.close() </code></pre>  <p>Doesn't seem to give me what I want. I know that on the page using firebug, the javascript function     document.exporta.submit() generates the .xls file, but I have no idea how to save it using python. I've searched just about everywhere to no avail. Thanks so much!</p>"	2013-09-28 05:08:14.01 UTC	19063609	"<p>This URL redirects you to a second page with a form that is submitted through Javascript. You need to analyze the content of the second form and extract its parameters in order to automatize the download using the parameters. Fetching the URL above does not help you here. Tools like 'mechanize' may help you to automatize the fetching of the file.</p>  <p>This is the form to be submitted:</p>  <pre><code>&lt;form name=""exporta"" method=""post"" action=""/lib/exporta/exporta.aspx"" target=""_self""&gt;  &lt;input type=""hidden"" name=""to_display"" value=""entidad,municipio,codigo,H001A ""&gt; &lt;input type=""hidden"" name=""Lc_encabeza"" value="" Entidad federativa\Municipios\Codigo\PERSONAL OCUPADO TOTAL\ ""&gt; &lt;input type=""hidden"" name=""lc_formato"" value=""Hoja de Cálculo Excel(.xls)""&gt;       &lt;input type=""hidden"" name=""lc_piepagina"" value=""Nota:  CONFIDENCIALIDAD DE LOS DATOS PROPORCIONADOS CON FINES ESTAD?STICOS LA COLUMNA UNIDADES ECON?MICAS SE ENCUENTRA INHIBIDA EN VARIOS RENGLONES, MOSTRANDO UN ASTERISCO (*). ESTO SE DEBE A QUE LA LEY DEL SISTEMA NACIONAL DE INFORMACION ESTAD?STICA Y GEOGR?FICA, EN VIGOR, EN SUS ART?CULOS 37, 38, 42 Y 47 ESTABLECE LA CONFIDENCIALIDAD DE LA INFORMACI?N. EL ART?CULO 37 SE?ALA QUE: ''LOS DATOS QUE PROPORCIONEN PARA FINES ESTAD?STICOS LOS INFORMANTES DEL SISTEMA A LAS UNIDADES EN T?RMINOS DE LA PRESENTE LEY, SER?N ESTRICTAMENTE CONFIDENCIALES Y BAJO NINGUNA CIRCUNSTANCIA PODR?N UTILIZARSE PARA OTRO FIN QUE NO SEA EL ESTAD?STICO..''; MIENTRAS QUE EL ART?CULO 38 CITA TEXTUALMENTE: '' LOS DATOS E INFORMES QUE LOS INFORMANTES DEL SISTEMA PROPORCIONEN PARA FINES ESTAD?STICOS Y QUE PROVENGAN DE REGISTROS ADMINISTRATIVOS, SER?N  MANEJADOS OBSERVANDO LOS PRINCIPIOS DE CONFIDENCIALIDAD Y RESERVA, POR LO QUE NO PODR?N DIVULGARSE EN NING?N CASO EN FORMA NOMINATIVA O INDIVIDUALIZADA, NI HAR?N PRUEBA ANTE AUTORIDAD JUDICAL O ADMINISTRATIVA, INCLUYENDO LA FISCAL, EN JUICIO O FUERA DE ?L..''. EL ART?CULO 42 HACE REFERENCIA A LA POSIBILIDAD DE DENUNCIAR LA VIOLACI?N A LOS YA MENCIONADOS PRINCIPIOS DE CONFIDENCIALIDAD Y RESERVA; MIENTRAS QUE EL ART?CULO 47 DICTA QUE: '' LA INFORMACI?N NO QUEDA SUJETA A LA LEY FEDERAL DE TRANSPARENCIA Y ACCESO A LA INFORMACI?N P?BLICA GUBERNAMENTAL..''.\Fuente: INEGI - Censos Econ&amp;oacute;micos 2009. Resultados definitivos\""&gt;      &lt;input type=""hidden"" name=""lc_piecuadro"" value=""Fuente: INEGI. Censos Econ&amp;oacute;micos 2009. Resultados definitivos"" &gt;  &lt;input type=""hidden"" name=""Lc_sql"" value=""Select a.entidad + ' ' + b.descrip as entidad,a.municipio + ' ' + c.descrip as municipio,a.codigo + ' ' + d.descrip as codigo, H001A  from (Select entidad,municipio,codigo,clave,H001A  from saic.saic_2009_23 where ((entidad=01 ) AND (municipio=001  ) AND (codigo=23))  AND (substring(clave,1,2)= 'NG' OR len(clave)=0)  ) a, saic.entidad_2009 b, saic.municipios_2009 c , saic.renrp d where a.entidad = b.codigo  and (a.entidad =substring(c.codigo,1,2) and  a.municipio = substring(c.codigo,3,3))  and (a.codigo = d.codigo and d.clasif = 'B')  order by  a.entidad, a.municipio,a.codigo"" &gt; &lt;input type=""hidden"" name=""Lc_conexion"" value=""Provider=sqloledb;Data Source=INTERNET\BD02;Initial catalog=SAIC;User id=internet.consulta;Pwd=ProdBD8;"" &gt; &lt;input type=""hidden"" name=""lc_titulo"" value=""INEGI. CENSOS ECONóMICOS 2009. RESULTADOS DEFINITIVOS"" &gt;   &lt;/form&gt; </code></pre>  <p>Oh great, it contains SQL queries.</p>"			2013-09-28 05:20:32.347 UTC
19073476	javascript|python|django|dajaxice|dajax	"Django, Dajax and Javascript - onclick not calling python method"	"<p>I've been at an issue after attempting to implement Dajax into my Django project.</p>  <p>At a certain point during the installation and usage instructions of the Dajax website, I was instructed to call a method in ajax.py as such:</p>  <pre><code>&lt;button type=""button"" onclick=""Dajaxice.MyProject.MyApp.say_hello(Dajax_process)""&gt;Dajax&lt;/button&gt; </code></pre>  <p>But when I try to click said button, there is no response at all. It acts like a null button.</p>  <p>I'm still trying to figure out how Dajax would even recognize my say_hello function like this... but that's probably how Dajax is used.</p>  <p>I have my say_hello method implemented as follows:</p>  <pre><code>from dajaxice.decorators import dajaxice_register from dajax.core import Dajax  @dajaxice_register def say_hello(req):     print ""DAJAX""     dajax = Dajax()     dajax.alert(""Hello World!"")     return dajax.json() </code></pre>  <p>At first glance, I believed that it was problem with not finding the method at all. I'm still not 100 % sure if that is the reason. But it could be.</p>  <p>Does anyone have any suggestions as to what I should look for?</p>  <p>I have all the instructions on the page: <a href=""http://django-dajax.readthedocs.org/en/latest/installation.html#installing-dajax"" rel=""nofollow"">http://django-dajax.readthedocs.org/en/latest/installation.html#installing-dajax</a> </p>  <p>Thanks,  David</p>"	2013-09-29 01:20:30.757 UTC	19849825	"<p>Currently leaped this hurdle myself. </p>  <p>Couple things to make sure of:</p>  <ol> <li>Download and install jquery, and put it somewhere you can call it. I put it in a static folder within my app: /my_site/example_app/static/js/jquery-2.0.3.js</li> <li><p>You will need to load that in your HTML Head view using:</p>  <p><code>&lt;script type=""text/javascript"" src=""{{ STATIC_URL }}js/jquery-2.0.3.js""&gt;&lt;/script&gt;</code></p></li> <li><p>You will also need to make sure to call the dajax jquery core using:</p>  <p><code>&lt;script type=""text/javascript"" src=""{{ STATIC_URL }}dajax/jquery.dajax.core.js""&gt;&lt;/script&gt;</code></p></li> <li><p>Next, before your run your server to test run</p>  <p>manage.py collectstatic</p></li> <li><p>This will copy everything django needs from Dajax/Dajaxice. I installed both of these into my normal Python2.7 lib, django pulls them from there and copies them to the needed folder.</p></li> </ol>  <p>This should get you going... I'm not expert here, but these steps helped to remedy my issue. </p>  <p>Also, if your copying code from Dajax's website, dont forget to change the app root in the onclick calls....</p>  <pre><code>    &lt;input type=""button"" value=""callback!"" onclick=""Dajaxice.*EXAMPLE-APP-NAME*.saybye(my_js_callback);""&gt; </code></pre>  <p>You'll need to change that from the above to ""polls"" or ""example""... whatever the name of the app that runs that code is. </p>"			2013-11-08 01:06:46.007 UTC
19076194	python-2.7|selenium|selenium-webdriver	Selenium with Python - how to find element on dynamic Javascript form?	"<p>I'm trying to automate searches on <a href=""http://matrix.itasoftware.com/"" rel=""nofollow"">http://matrix.itasoftware.com/</a>, and I'm having trouble locating the element on the fields I'm planning to use - the form the website uses is generated via Javascript AFAIK. I'm stumped on the first field: under the Multi-city tab, under Flight 1, on the ""Departing from"" field.</p>  <p>Using Selenium IDE, I managed to locate the ID for this particular field: <code>ita_form_multislice_MultiSliceRow_0_origin</code>, but testing this out returns an error ""NoSuchElementException"".</p>  <p>My code:</p>  <pre><code>flight1_origin = driver.find_element_by_id(""ita_form_multislice_MultiSliceRow_0_origin"") </code></pre>  <p>The website generates the form via Javascript, so it's difficult to locate the actual IDs and everything via normal means. Any ideas guys?</p>"	2013-09-29 08:58:51.893 UTC	19076504	"<p>My guess is that you are not on the tab.  That element does not actually get appended to the DOM until the tab gets clicked.</p>  <p>Add this to your script before trying to find the departing from field.</p>  <pre><code>driver.find_element_by_id(""ita_layout_TabContainer_0_tablist_ita_form_multislice_MultiSliceForm_0"").click() </code></pre>"			2013-09-29 09:38:24.163 UTC
19090429	javascript|c++|python|qt	how to invoke C++ functions from Javascript using QT/python?	"<p>I have an embedded system, whose GUI is developed using html. Inside, HTML, I am writing javascripts. Now, How can I invoke a C++ functions - middleware from Javascript using QT? I heard QT is the easiest way to invoke C++ functions from Javascript. Is there any example, that calls the C++ function from JAVA SCRIPT. I am completely new to python, Does python provides this functionality? Examples do help me. Please explain me via example. Additionally, the internal mechanism - to invoke C++ from Javascript will be helpful. Please ignore my python part, If I am sounding odd. As I am completely new to python. I really don't its power.</p>  <p>Let's say, I have the  middleware in CPP - for the demonstration purpose only one file. </p>  <pre><code>#include ""stdio.h""  class Sample {   private:     int net_value;   public:     Sample()   {      printf(""constructor called\r\n"");    }     void set_value()   {     net_value = 10;    }   }; </code></pre>  <p>I have compiled this as following.</p>  <p>gcc -c -fPIC sample.cpp </p>  <p>gcc --shared sample.o  -o libmysample.so</p>  <p>Now, my HTML FILE.</p>  <pre><code>&lt;html&gt;  &lt;head&gt;   &lt;script type=""text/javascript""&gt; function calculate()  {  alert('You clicked the top text');  }  function functionTwo()  { alert('You clicked the bottom text');   }   &lt;/script&gt;  &lt;/head&gt; &lt;body&gt;  &lt;form action=""http://136.170.195.17/cgi-bin/jordan_cgi.cgi""&gt; &lt;h1&gt; Enter the First Equation &lt;/h1&gt; &lt;input type=text name=val1 size=1&gt; X  + &lt;input type=text name=val2 size=1&gt; Y  + &lt;input type=text name=val3 size=1&gt; Z = &lt;input type=text name=val4 size=1&gt; &lt;h1&gt; Enter the Second Equation &lt;/h1&gt; &lt;input type=text name=val11 size=1&gt; X  + &lt;input type=text name=val12 size=1&gt; Y  + &lt;input type=text name=val13 size=1&gt; Z = &lt;input type=text name=val14 size=1&gt;  &lt;h1&gt; Enter the Third Equation &lt;/h1&gt; &lt;input type=text name=va2l1 size=1&gt; X  + &lt;input type=text name=va2l2 size=1&gt; Y  + &lt;input type=text name=va2l3 size=1&gt; Z = &lt;input type=text name=va2l4 size=1&gt; &lt;br&gt; &lt;br&gt; &lt;div&gt;&lt;input type=""submit"" value=""Compute!""&gt;&lt;/div&gt; &lt;/form&gt;    &lt;/body&gt; &lt;/html&gt; </code></pre>  <p>Now, my interest is to invoke the void set_value() from the JAVASCRIPT Function.</p>  <p>function calculate()      { </p>  <pre><code>  /** First instantiate Sample class and then invoke the set_value  ---&gt; Here I want to invoke set_value() -&gt; remember the set_value is in the   .so file.  **/  alert('You clicked the top text');  } </code></pre>  <p>How can I do achieve the above task? This example can be elaborated further for Callback part. This way, it becomes handy to call a C++ function to register callback and others. Please exemplify this?</p>"	2013-09-30 09:12:40.61 UTC	19090733	"<p>Use inline C++ code in your javascript, a method cpp2js(code {, callback}) is provided in the file cpp2js.js. Include this file in your webpage:</p>  <pre><code>&lt;script type='text/javascript' src=""cpp2js.js""&gt;&lt;/script&gt;  </code></pre>  <p><a href=""http://www.speqmath.com/tutorials/cpp2js/index.html"" rel=""nofollow"">Inline C++ functions in Javascript</a></p>"			2013-09-30 09:26:56.73 UTC
19135442	python|python-2.7|selenium	Unable to type into text field of Javascript form with Selenium / Python (element not interactable)	"<p>I'm using Selenium and coding with Python.</p>  <p>I'm trying to do the following: for a flight search website, under Flight 1's 'Enter routing code' text box, type 'AA'</p>  <p>This is the code that I have at the moment:</p>  <pre><code>flight1_routing = driver.find_element_by_xpath("".//*[@id='ita_form_location_RouteLanguageTextBox_0']"") flight1_routing.clear() flight1_origin.send_keys(""AA"") </code></pre>  <p>But instead, I get this error message: ""invalid element state: Element is not currently interactable and may not be manipulated"". How can this be with a regular text field that is also not an autocomplete field, AFAIK?</p>"	2013-10-02 11:03:07.72 UTC	19136519	"<p>Did you click into the correct tab first &amp; enable advanced routing codes?? e.g.</p>  <pre><code>#Go to right tab driver.find_element_by_css_selector(""div#ta_layout_TabContainer_0_tablist_ita_form_multislice_MultiSliceForm_0 &gt; span"").click() #Enable routing driver.find_element_by_css_selector(""a.itaToggleLink"").click()  #note I seem to get a different id to the one you're using, assuming its dynamic numbering so handling all cases #if you know how the dynamic numbering works youmay be able to deduce a single id that will work for your test case #Instead I'm going for finding all elements matching a pattern then searching through them, assuming only one will be visible flight1_routings = driver.find_elements_by_css_selector(""input[id^='ita_form_location_RouteLanguageTextBox_']"") #probably better finding it then using it separately, but I was feeling lazy sorry. for route in flight1_routings:     if route.is_displayed():         route.clear()         route.send_keys(""AA"") </code></pre>  <p>Also you can probably skip the .clear() call as it looks like the box starts with no text to overwrite.</p>  <p>Edit: Updated the enable routing toggling to handle not knowing the id, the class name stays the same, should work. Handling finding the input despite variable id as suggested by foo bar with the css selector, just then iterating over that list and checking if its on top</p>"			2013-10-02 12:06:50.613 UTC
19135442	python|python-2.7|selenium	Unable to type into text field of Javascript form with Selenium / Python (element not interactable)	"<p>I'm using Selenium and coding with Python.</p>  <p>I'm trying to do the following: for a flight search website, under Flight 1's 'Enter routing code' text box, type 'AA'</p>  <p>This is the code that I have at the moment:</p>  <pre><code>flight1_routing = driver.find_element_by_xpath("".//*[@id='ita_form_location_RouteLanguageTextBox_0']"") flight1_routing.clear() flight1_origin.send_keys(""AA"") </code></pre>  <p>But instead, I get this error message: ""invalid element state: Element is not currently interactable and may not be manipulated"". How can this be with a regular text field that is also not an autocomplete field, AFAIK?</p>"	2013-10-02 11:03:07.72 UTC	19135812	"<p>if you get <code>Element is not currently interactable</code> check if the element is not disabled and its visible. if you want to <code>hack</code> it execute <code>JS</code> to enable it. </p>  <p>i visited the homepage <code>id ita_form_location_RouteLanguageTextBox_0</code> doesnt exist also under flight one there's no <code>Enter routing code</code>. i can see the text box saying <code>airport city or city name</code></p>  <p>Also if you have the id prefer to use <code>find_element_by_id</code> if not try to use <code>css selector</code> if you can rather than <code>xpath</code>. Its much cleaner.</p>  <p><em><strong>Update</em></strong> </p>  <p>here's a working script:</p>  <p>As recomended above, the <code>elements</code> selected are not <code>visible</code>. what is actualy done, is that there's 5-6 different <code>elements</code> all hidden and when you click on show advanced route it picks 2 random ones and makes them visible. </p>  <p>So the <code>id</code> is not always the same. If you use the same id you will get a hidden <code>element</code> some times(because it picks random ids) so <code>selenium</code> is not able to deal with it. i made a selector that gets the 2 hidden <code>elements</code> </p>  <pre><code>from selenium import webdriver import selenium.webdriver.support.ui as ui  driver = webdriver.Firefox() driver.get(""http://matrix.itasoftware.com/"") #click on the multi tab tab = driver.find_element_by_id(""ita_layout_TabContainer_0_tablist_ita_form_multislice_MultiSliceForm_0"").click() #click on the advanced routes advanced_routing=ui.WebDriverWait(driver, 10).until(      lambda driver : driver.find_element_by_id(""sites_matrix_layout_RouteLanguageToggleLink_1"") ) advanced_routing.click() #get all visible elements with id like ita_form_location_RouteLanguageTextBox. its similar to regex ita_form_location_RouteLanguageTextBox.* element = ui.WebDriverWait(driver, 10).until(         lambda driver : driver.find_elements_by_css_selector(""[id*=ita_form_multislice_MultiSliceRow] [id*=ita_form_location_RouteLanguageTextBox]"") ) element[0].send_keys(""foo"") element[1].send_keys(""bar"")  import time time.sleep(20) </code></pre>"			2013-10-02 11:25:50.29 UTC
19189565	python|prototype|extend|objective-c-category	Python equivalent to Objective-C categories or extending JavaScript prototype?	"<p>I'd like to add functionality to the <code>set</code> data type of Python. In Objective-C I might use a category like so:</p>  <pre><code>@implementation Set (CirrostratusAdditions) - (Set *)modifiedSet;{return self;} @end </code></pre>  <p>Or in JavaScript like so:</p>  <pre><code>Set.prototype.modifiedSet = function(){}; </code></pre>  <p>Is it possible to append functionality to existing classes in Python. If so, what is this concept called within Python runtime and where might I best get acquainted with the concept?</p>"	2013-10-04 19:47:53.53 UTC	19189615	"<p>You can't do this in Python, and you probably shouldn't; it's not very Pythonic.</p>  <p>What you can do, however, is extend the bulitin type and add methods to that.</p>"			2013-10-04 19:51:33.313 UTC
19197050	javascript|python|selenium|upload|webdriver	Upload image python selenium javascript	"<p>i need your help to upload image with selenium python  I have a form </p>  <pre><code>                            &lt;div class=""none upload_no_autosubmit"" id=""upload_image_base_pack""&gt;                             &lt;div class=""labelform inputfile""&gt;Choose&lt;/div&gt;                             &lt;div class=""lbcinputfile""&gt;                             &lt;input type=""file"" name=""image0"" id=""image0"" class=""input_file""&gt;                             &lt;/div&gt;                              &lt;div class=""clear""&gt;&lt;/div&gt;                             &lt;div class=""lbcinputfile_submit""&gt;                             &lt;input type=""submit"" class=""button-upload"" value=""add"" onclick=""return disabled_onsubmit_photosupCheck('#image0', 'upload_image_base_pack');""&gt;                             &lt;/div&gt;                             &lt;div class=""clear""&gt;&lt;/div&gt;                             &lt;/div&gt;                             &lt;div class=""message info right no_autosubmit"" id=""message_upload_image_base_pack""&gt; </code></pre>  <p>I use selenium with python and i want upload image file with this </p>  <p>driver.execute_script(""return disabled_onsubmit_photosupCheck('c:/1bo.jpg', 'upload_image_base_pack')"")</p>  <p>pls help tks </p>  <hr>  <p>don't work</p>  <pre><code>driver.execute_script(""document.querySelector('#image0').setAttribute('value', 'c:/1bo.jpg', 'upload_image_base_pack')"") input_element = driver.find_element_by_css_selector(""input[name='image0']"") input_element.send_keys(""c:/1bo.jpg"") driver.find_element_by_css_selector(""input[type='submit']"").click() </code></pre>"	2013-10-05 11:04:07.563 UTC	23615346	"<p>Try something like:</p>  <pre><code>def test_TC1(self):         driver = self.driver         driver.find_element_by_xpath(""//div/form/table/tbody/tr[2]/td[2]/input"").clear()         driver.find_element_by_xpath(""//div/form/table/tbody/tr[2]/td[2]/input"").send_keys(""C:\\FILE.xml"") </code></pre>  <p>From my experience you don't need click, but only <em>send_keys</em>.</p>"			2014-05-12 17:34:20.927 UTC
19197050	javascript|python|selenium|upload|webdriver	Upload image python selenium javascript	"<p>i need your help to upload image with selenium python  I have a form </p>  <pre><code>                            &lt;div class=""none upload_no_autosubmit"" id=""upload_image_base_pack""&gt;                             &lt;div class=""labelform inputfile""&gt;Choose&lt;/div&gt;                             &lt;div class=""lbcinputfile""&gt;                             &lt;input type=""file"" name=""image0"" id=""image0"" class=""input_file""&gt;                             &lt;/div&gt;                              &lt;div class=""clear""&gt;&lt;/div&gt;                             &lt;div class=""lbcinputfile_submit""&gt;                             &lt;input type=""submit"" class=""button-upload"" value=""add"" onclick=""return disabled_onsubmit_photosupCheck('#image0', 'upload_image_base_pack');""&gt;                             &lt;/div&gt;                             &lt;div class=""clear""&gt;&lt;/div&gt;                             &lt;/div&gt;                             &lt;div class=""message info right no_autosubmit"" id=""message_upload_image_base_pack""&gt; </code></pre>  <p>I use selenium with python and i want upload image file with this </p>  <p>driver.execute_script(""return disabled_onsubmit_photosupCheck('c:/1bo.jpg', 'upload_image_base_pack')"")</p>  <p>pls help tks </p>  <hr>  <p>don't work</p>  <pre><code>driver.execute_script(""document.querySelector('#image0').setAttribute('value', 'c:/1bo.jpg', 'upload_image_base_pack')"") input_element = driver.find_element_by_css_selector(""input[name='image0']"") input_element.send_keys(""c:/1bo.jpg"") driver.find_element_by_css_selector(""input[type='submit']"").click() </code></pre>"	2013-10-05 11:04:07.563 UTC	19197374	"<p>Use the webdriver methods to find the correct input element, enter the file name, and click the submit button. Like this:</p>  <pre><code>input_element = driver.find_element_by_css_selector(""input[name='image0']"") input_element.send_keys(""c:/1bo.jpg"") driver.find_element_by_css_selector(""input[type='submit']"").click() </code></pre>  <p>However: Because that site uses the file chooser and you can't interact with that dialog via Selenium (as far as I know) you will have to set the value of the input with javascript. So something like this should work:</p>  <pre><code>driver.execute_script('document.querySelector(""#image0"").setAttribute(""value"", ""c:/1bo.jpg"")') driver.find_element_by_css_selector(""input[type='submit']"").click() </code></pre>"			2013-10-05 11:38:47.327 UTC
19217587	javascript|python|callback|bind	Python alternative to Javascript function.bind()?	"<p>In Javascript, one might write</p>  <pre><code>var ids = ['item0', 'item1', 'item2', 'item3']; // variable length function click_callback(number, event) {     console.log('this is: ', number); } for (var k = 0; k &lt; ids.length; k += 1) {     document.getElementById(ids[k]).onclick = click_callback.bind(null, k); } </code></pre>  <p>So I can pass to the callback function the value of <code>k</code> at the time it is registered even though it has changed by the time the function is called.</p>  <p>Does Python have a way to do something equivalent?</p>  <hr>  <p>The specific situation is this (but I prefer a general answer):</p>  <p>I have a variable number of matplotlib plots (one for each coordinate). Each has a SpanSelector, which was for some reason designed to only pass the two limit points to the callback function. However, they all have the same callback function. So I have:</p>  <pre><code>def span_selected(min, max): </code></pre>  <p>but I need</p>  <pre><code>def span_selected(which_coordinate, min, max): </code></pre>  <p>At the time of registering the callback, I of course know the coordinate, but I need to know it when the function is called. In Javascript, I would do something like </p>  <pre><code>callback = span_selected.bind(null, coordinate) </code></pre>  <p>What would I do in Python?</p>"	2013-10-07 05:23:47.153 UTC	19217678	"<p>Turned out it was already answered here: <a href=""https://stackoverflow.com/questions/3188048/how-to-bind-arguments-to-given-values-in-python-functions"">How to bind arguments to given values in Python functions?</a></p>  <p>The solution is:</p>  <pre><code>from functools import partial def f(a,b,c):     print a,b,c bound_f = partial(f,1) bound_f(2,3) </code></pre>  <p>Full credits to <a href=""https://stackoverflow.com/users/267781/matth"">MattH</a>.</p>  <p>EDIT: so in the example, instead of</p>  <pre><code>callback = span_selected.bind(null, coordinate) </code></pre>  <p>use</p>  <pre><code>callback = partial(span_selected, coordinate) </code></pre>"			2013-10-07 05:31:39.983 UTC
19254178	javascript|python|function|ffi	calling javascript in python?	"<p>essentially I am writing something based off of python and I would like to, in python, be able to get the result of a javascript function.</p>  <p>Lets say <code>function.js</code> has a bunch of functions inside it</p>  <p>If I have some python code, in it I would like to be able to do something like the following:</p>  <pre><code>val = some_js_function(param1,param2,...paramn) </code></pre>  <p>now <code>some_js_function</code> would be a function from the <code>function.js</code> file. This would set the variable <code>val</code> in my Python code to the result of that JS function.</p>  <p><strong>How could I go about doing this? Or do I have to rawCode a FFI for javascript myself.</strong> </p>"	2013-10-08 17:17:40.41 UTC	19254257	"<p>You could start a subprocess that calls ""node function.js"" or any other interpreter.</p>"			2013-10-08 17:22:24.657 UTC
19254178	javascript|python|function|ffi	calling javascript in python?	"<p>essentially I am writing something based off of python and I would like to, in python, be able to get the result of a javascript function.</p>  <p>Lets say <code>function.js</code> has a bunch of functions inside it</p>  <p>If I have some python code, in it I would like to be able to do something like the following:</p>  <pre><code>val = some_js_function(param1,param2,...paramn) </code></pre>  <p>now <code>some_js_function</code> would be a function from the <code>function.js</code> file. This would set the variable <code>val</code> in my Python code to the result of that JS function.</p>  <p><strong>How could I go about doing this? Or do I have to rawCode a FFI for javascript myself.</strong> </p>"	2013-10-08 17:17:40.41 UTC	19254263	"<p>You can take a look at some java script interpreter that has support for python. You can take a look at Rhino, Google's V8 (<a href=""https://code.google.com/p/pyv8/"" rel=""nofollow"">pyV8</a>), or even <a href=""https://code.google.com/p/pynarcissus/"" rel=""nofollow"">pynarcissus</a>. </p>  <p>Example from <code>pyV8</code>,</p>  <pre><code>&gt;&gt;&gt; import PyV8 &gt;&gt;&gt; ctxt = PyV8.JSContext()          # create a context with an implicit global object &gt;&gt;&gt; ctxt.enter()                     # enter the context (also support with statement) &gt;&gt;&gt; ctxt.eval(""1+2"")   </code></pre>"			2013-10-08 17:22:51.46 UTC
19275527	javascript|python|google-chrome|opencv|websocket	how to handle blob sent via javascript through websocket back at the python server?	"<p>i have to process the image back at the python server with Opencv . the blob goes to the python server but i could not figure out how to convert this blob back into image with openCV</p>  <pre><code> //this is my javascript function to send image converted to blob,  //back to my python server          function () {               ctx.drawImage(video, 0, 0, 320, 240);             var data = canvas.get()[0].toDataURL('image/jpeg', 1.0);              newblob = dataURItoBlob(data);              ws.send(newblob);              } </code></pre>  <p>this is my python backend handling </p>  <pre><code>class EchoServerProtocol(WebSocketServerProtocol):         def onMessage(self, msg, binary):          img = # here the code to convert blob into the image          blur = cv2.blur(img, (5, 5))          hsv = cv2.cvtColor(blur, cv2.COLOR_BGR2HSV)          msg = hsv          print ""the image:"", msg          #conver the image back to blob and reply back to the websocket          #havent written the code for this part yet          self.sendMessage(msg, binary) </code></pre>  <p>please help me figure this out</p>"	2013-10-09 14:55:28.75 UTC	34537473	<p>Check out how this blob is getting made and then reverse engineer it </p>			2015-12-30 21:24:41.433 UTC
19324294	javascript|python	Equivalent of Python's KeyError exception in JavaScript?	"<p>I am trying to access a certain member in a JavaScript object. In order to do this, I need to try out a couple of key values.</p>  <p>For example, <code>Object['text/html']</code> which will give me an export link for a HTML document. However, not every object of this type will have a <code>text/html</code> key pair value.</p>  <p>In Python I would solve this problem using a Try-Catch block, with the <code>KeyError</code> exception. If I can do something similar in javascript, as in use an exception in a Try-Catch block, that would be great.</p>  <p>However, if alternatives exists instead of try catch blocks, that do achieve the same end goal, I would like to know about them as well.</p>  <h1>EDIT:</h1>  <p>I would prefer to use an exception over using functions. I do this because the <code>text/html</code> key might not be there, but it <em>should</em> be there. An exception seems more appropriate for this scenario</p>"	2013-10-11 17:47:44.35 UTC	73074926	"<h3>Read this!</h3> <p>The accepted answer <strong>is correct</strong> however omits some points.</p> <h3>1) Accessing nested object</h3> <p>Like someone pointed out in the comment, Javascript returns <code>undefined</code> when the key doesn't exists in the object.</p> <p>However, if you need to access an object inside an object (or an Array, or a function), well this break.</p> <pre><code>let a = {}; let userName = 'js' let data = a.response[userName];  </code></pre> <p>Cuz you will received actually a <code>TypeError</code>, basically because we are trying to read a property of undefined, which doesn't have any.</p> <pre><code>VM187:2 Uncaught TypeError: Cannot read properties of undefined (reading 'js')     at &lt;anonymous&gt;:2:22 </code></pre> <h3>2 Answering the question</h3> <p>The Python principle <a href=""https://stackoverflow.com/questions/12265451/ask-forgiveness-not-permission-explain"">&quot;Ask forgiveness not permission&quot; - explain</a> is actually for the most part working well in Javascript (and PHP, you didn't ask but well..). There are for sure some difference, or some situation where the difference is important, but <strong>for most use cases is the same</strong></p> <p>So this is how you would do it:</p> <pre><code>try {     let data = a.key1.key2['whatever'].nested.damn.object;     console.log(data) } catch (error) {     let data = &quot;noope&quot;;      console.log(data);  }   </code></pre> <p>As you can see, in Javascript you don't really care about the error type, (for the most part, sure other situation you should case). Is almost like anything is in a Python's</p> <pre><code>try:    a = &quot;hello&quot; + 1 + {} + [] # crazy stuff here except BaseException as bleh:    print(str(bleh)) </code></pre> <h3>Documentatin</h3> <ul> <li><a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Working_with_Objects#objects_and_properties"" rel=""nofollow noreferrer"">MDN Working with objects</a></li> <li><a href=""https://stackoverflow.com/q/455338/13903942"">How do I check if an object has a key in JavaScript? [duplicate]</a></li> </ul>"			2022-07-22 03:49:42.537 UTC
19324294	javascript|python	Equivalent of Python's KeyError exception in JavaScript?	"<p>I am trying to access a certain member in a JavaScript object. In order to do this, I need to try out a couple of key values.</p>  <p>For example, <code>Object['text/html']</code> which will give me an export link for a HTML document. However, not every object of this type will have a <code>text/html</code> key pair value.</p>  <p>In Python I would solve this problem using a Try-Catch block, with the <code>KeyError</code> exception. If I can do something similar in javascript, as in use an exception in a Try-Catch block, that would be great.</p>  <p>However, if alternatives exists instead of try catch blocks, that do achieve the same end goal, I would like to know about them as well.</p>  <h1>EDIT:</h1>  <p>I would prefer to use an exception over using functions. I do this because the <code>text/html</code> key might not be there, but it <em>should</em> be there. An exception seems more appropriate for this scenario</p>"	2013-10-11 17:47:44.35 UTC	19324445	"<p>Javascript doesn't generate an exception when reading or writing a property that doesn't exist.  When reading it, it just returns <code>undefined</code>.  When writing it, it just creates the property.</p>  <p>You could create your own function that tests to see if the property exists and throws an exception if it does not (but you'd have to call that function whenever), but JS doesn't make an exception out of that on it's own like you are asking for.</p>  <hr>  <p>If you want to test if a key exists on an object in javascript, you can use this construct with the <code>in</code> operator:</p>  <pre><code>var obj = {}; var key = ""test"";  if (key in obj) {     // key exists } else {     // key doesn't exist } </code></pre>  <hr>  <p>If you try to read a key that doesn't exist, you will get <code>undefined</code> as the value.</p>  <pre><code>var obj = {}; var value = obj.test;  alert(value === undefined); </code></pre>  <p>The <code>in</code> operator does a better job of telling you whether the key exists that testing for <code>undefined</code> because <code>undefined</code> is a legal value for a key that exists.</p>  <hr>  <p>In many cases, where you control the values that the keys have and a key that is present will never have a falsey value, you can also just check if the key has a truthy value:</p>  <pre><code>var obj = {}; var obj.test = ""hello"";  if (obj.test) {     // key exists and has a truthy value } </code></pre>  <hr>  <p>If you want to make sure that the object itself has the property and not any prototype that it is inheriting from, then you can do this:</p>  <pre><code>var obj = {}; var obj.test = ""hello"";  if (obj.hasOwnProperty(test)) {     // key exists on the object itself (not only on the prototype) } </code></pre>"			2013-10-11 17:57:31.007 UTC
19332926	javascript|python|django|google-app-engine	Retrieving variable from Javascript function in python Appengine	"<p>I am very new to all of the web technologies involved in this question, so please bear with me :) I am currently busy with my first appengine project. What I am trying to do is manipulate a value produced within a JS function (which is in my .html file) using python code. My problem is, I don't know how to <em>""pick it up""</em>.</p>  <pre><code>function createSomething(some, thing) {     var something = some + thing; //I need to retrieve that ""something"" value  } </code></pre>  <p>To elaborate a little, I am able to retrieve things that have been entered through an HTML form:</p>  <pre><code>&lt;textarea name=""content"" rows=""3"" cols=""60""&gt;&lt;/textarea&gt; &lt;input type=""submit"" value=""Submit Something""&gt; </code></pre>  <p>By using python code that looks like this:</p>  <pre><code>entry.content = self.request.get('content') </code></pre>  <p>But how would one go about doing something similar with a value which is produced within some JS function? (I am using python + django + html + js on appengine, to just try out the basics)</p>"	2013-10-12 10:01:14.71 UTC	19334138	"<p>You would have to send the value of <code>something</code> to the server-side via a GET or POST request, depending on your needs. If you're trying to do that without reloading the page, you'll need to use an Ajax request. Your Python code on the server side has no way of accessing a client-side value unless you send the client-side value to the server. Something similar to:</p>  <pre><code># your-javascript-file.js or a script block on your page  function createSomething(some, thing) {     if (some !== undefined &amp;&amp; thing !== undefined) {         $.POST('/a-django-url-pattern/', {'something': some + thing},             function(responseData) {             // do something else with the responseData, etc         });     } }  # your Django view def your_view_function(request):     if request.method == 'POST':         something = request.POST.get('something')         if something:             # do whatever      return render(request, 'a-template.html') </code></pre>"			2013-10-12 12:23:09.863 UTC
19354369	javascript|python	python list of tuples to javascript array of arrays	"<p>I have a list of tuples in python</p>  <pre><code>[('abc','state','fsf',val), ('pqr','state','efg',val2)] </code></pre>  <p>I want to convert them into javascript array of arrays. </p>  <p>I tried this </p>  <pre><code>jdump = json.dumps(lis_of_tup) #in python  and tried  JSON.stringify(name) alert(name + ' ' + typeof(name)) // this is returning a string  </code></pre>  <p>When I called split on name and caled item[0] its giving me 'abc' instead of <code>('abc','state','fsf',val)</code></p>"	2013-10-14 06:09:55.227 UTC	19354394	"<p>In python, I do</p>  <pre><code>data = [('abc','state','fsf', ""val""), ('pqr','state','efg', ""val2"")] import json print json.dumps(data) </code></pre>  <p><strong>Output</strong></p>  <pre><code>[[""abc"", ""state"", ""fsf"", ""val""], [""pqr"", ""state"", ""efg"", ""val2""]] </code></pre>  <p>And then I do this in javascript</p>  <pre><code>data ='[[""abc"", ""state"", ""fsf"", ""val""], [""pqr"", ""state"", ""efg"", ""val2""]]' arrayOfArrays = JSON.parse(data); console.log(arrayOfArrays); </code></pre>  <p>and this gives</p>  <pre><code>[ [ 'abc', 'state', 'fsf', 'val' ],   [ 'pqr', 'state', 'efg', 'val2' ] ] </code></pre>  <p>which is an array of arrays and when I do</p>  <pre><code>console.log(arrayOfArrays[0]); </code></pre>  <p>it gives </p>  <pre><code>[ 'abc', 'state', 'fsf', 'val' ] </code></pre>"			2013-10-14 06:12:47.143 UTC
19368715	javascript|python|json	Convert utf string ftom python to javascript dictionary	"<p>I am trying to pass value from Python ta Javascript (simple JSON) but when I try I cannot create, probably because u' for UTF in python</p>  <pre><code>{'username': u'Tester1', 'age': 0L} </code></pre>  <p>How to convert this string to javascript dictionary ? I have tried JSON.parse, eval(""("" + json + "")"") but it didn't work</p>"	2013-10-14 20:27:46.21 UTC	19368736	"<p>You are passing a Python object instead of JSON.</p>  <p>On the Python side, convert this to JSON first:</p>  <pre><code>import json  json_value = json.dumps(python_object) </code></pre>  <p>Demo:</p>  <pre><code>&gt;&gt;&gt; import json &gt;&gt;&gt; python_object = {'username': u'Tester1', 'age': 0L} &gt;&gt;&gt; print json.dumps(python_object) {""username"": ""Tester1"", ""age"": 0} </code></pre>  <p>The latter you can load into JavaScript with <code>JSON.parse()</code>.</p>"			2013-10-14 20:29:00.32 UTC
19388807	javascript|syntax|d3.js	Odd JavaScript Syntax that looks like a Python tuple	"<p>I'm doing some work with D3.js and am looking at tweaking a version of one of the built-in mapping projections. I'm looking through the source code and have found the function definition below which uses a syntax I'm not familiar with:   </p>  <pre><code>function albersUsa(coordinates) {   var x = coordinates[0], y = coordinates[1];   point = null;   (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);   return point; } </code></pre>  <p>Specifically, how is <code>(lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);</code> evaluated?</p>  <p>If you need more context, this example occurs at line 3257 of the D3 source, which can be found here: <a href=""https://github.com/mbostock/d3/blob/master/d3.js"" rel=""nofollow"">https://github.com/mbostock/d3/blob/master/d3.js</a></p>"	2013-10-15 18:48:32.7 UTC	19388914	"<p><code>||</code> in JavaScript is the fallback operator.  A simple example is:</p>  <pre><code>var a = true || 1; // evaluates to true var a = false || 1; // evaluates to 1 var a = 'x' || 1; // evaluates to true </code></pre>  <p>If the left side evaluates to a <em>truthy</em> value, the result is the left side and the right side is not evaluated.  You can extend it further as they did here by passing in a list of arguments in parenthesis.  In this case, if each item on the left evaluates to truthy, the right side will not be evaluated.  And as you can see, you can chain as many of these statements together as you like.</p>"			2013-10-15 18:55:08.557 UTC
19388807	javascript|syntax|d3.js	Odd JavaScript Syntax that looks like a Python tuple	"<p>I'm doing some work with D3.js and am looking at tweaking a version of one of the built-in mapping projections. I'm looking through the source code and have found the function definition below which uses a syntax I'm not familiar with:   </p>  <pre><code>function albersUsa(coordinates) {   var x = coordinates[0], y = coordinates[1];   point = null;   (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);   return point; } </code></pre>  <p>Specifically, how is <code>(lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);</code> evaluated?</p>  <p>If you need more context, this example occurs at line 3257 of the D3 source, which can be found here: <a href=""https://github.com/mbostock/d3/blob/master/d3.js"" rel=""nofollow"">https://github.com/mbostock/d3/blob/master/d3.js</a></p>"	2013-10-15 18:48:32.7 UTC	19388865	"<p>That's shorthand for</p>  <pre><code>lower48point(x, y); if (!point) {   alaskaPoint(x, y);   if (!point) {     hawaiiPoint(x, y);   } } </code></pre>  <p>The three functions must alter the value of the relatively-global variable ""point"".  The <code>||</code> version uses comma operators to carry out two expressions and exploits the side-effects.</p>  <p>Personally I would not feel good about myself for writing that code.</p>"			2013-10-15 18:51:21.55 UTC
19390543	javascript|python|django|flask	Python tool to compile/include HTML in Javascript	"<p>I have a set of HTML files that I'd like to bundle into and access from Javascript.</p>  <p>For my Rails project I use the haml_coffee_assets gem. This gem generates a Javascript JST object that includes my templates. I can refer to a template, in Javascript, using</p>  <pre><code>JST['template_name']() </code></pre>  <p>This approach is very convenient because I can have a standalone Javascript file that includes everything.</p>  <p>Are there such tools for Python projects? A stand-alone tool? Something for Flask? Something for Django? I can write a stand-alone tool easily, but it'd be nice if something has already done this. Quick google search didn't return anything.</p>  <p>Thanks.</p>"	2013-10-15 20:34:55.657 UTC	19391707	"<p>I believe what you are looking is called <a href=""http://webassets.readthedocs.org/en/latest/"" rel=""nofollow"">webassets</a>. There is also a wrapper for Flask called <a href=""http://elsdoerfer.name/docs/flask-assets/"" rel=""nofollow"">Flask-Assets</a>.</p>"			2013-10-15 21:47:02.617 UTC
19444848	javascript|python|web-applications|flask	Server-side(python) and client-side(javascript) design and interaction	"<p>I am building a web application with Python on Flask and javascript. YouTube Data API (python) and YouTube player API(javascript) are used.</p>  <p>Although I have developed a few web applications already, deciding whether some logic should work from the server or client is still quite vague to me. When I learn from this example, I would have a more solid understanding regarding this matter.</p>  <p>I am using Youtube Data API from the server in Python to retrieve the most related video to the user's search query.</p>  <p><strong>my_app.py</strong> (on Flask)</p>  <pre><code>@app.route('/') def main():   """"""finds the most relevant video's id using YouTube Data API""""""   search_param = request.args.get('video_search')   video_id = search_video(search_param)   return render_template(""index.html"", video_id=video_id) </code></pre>  <p><strong>index.html</strong></p>  <pre><code>&lt;iframe width=""560"" height=""315"" src=""//www.youtube.com/embed/{{ video_id }}?autoplay=1"" frameborder=""0"" allowfullscreen&gt;&lt;/iframe&gt; </code></pre>  <p>The above works great. However, I want more control over the YouTube player. Instead of manually embeding the video like provided, I decide to use YouTube Player API in javascript.</p>  <p><strong>index.html with javascript</strong></p>  <pre><code>var player; function onYouTubeIframeAPIReady() {     player = new YT.Player('iframe-player', { //inserts into 'iframe-player'         width: '640',         height: '390',         //videoId: 'M7lc1UVf-VE', &lt;&lt;&lt;&lt;&lt; PAY ATTENTION TO THIS PART         events: {             'onReady': onPlayerReady, //onPlayaerReady will fire when onReady executes             'onStateChange': onPlayerStateChange //onPlayerStateChange will fire when onStateChange executes         }     }); } </code></pre>  <p>This is the relevant javascript code. I need to pass a video_id in order to use YouTube Player API in javascript. For the current logic to work, the flow should be like below:</p>  <ol> <li>user searches for a video</li> <li>server: finds a video and returns <code>video_id</code> </li> <li>client: using <code>video_id</code> returned from the server, loads the player and plays the video.</li> </ol>  <p><strong>First question:</strong> However, isn't it impossible to do that? Javascript functions are loaded before the server returns anything. It would be impossible to pass a value from a server method to a javascript function. Am I correct?</p>  <p><strong>Second question:</strong> In this case, is it better not to use Python at all and do everything from the client side using only javascript?</p>  <p><strong>Third question:</strong> Would this return error?</p>  <pre><code>&lt;div id=""my_video_id""&gt;{{video_id}}&lt;/div&gt; &lt;script&gt;   var video_id = $(""#my_video_id"") &lt;/script&gt; </code></pre>  <p>Thank you. I tried my best to explain the problem. I would appreciate any help.</p>"	2013-10-18 08:20:23.593 UTC	19452409	"<p>You're passing the video id to the <code>index.html</code> template, so just use it inside your Javascript.</p>  <p>For example in the <code>index.html</code> template and inside a script tag holding your Javascript add the video id using <code>{{ video_id }}</code>:</p>  <pre><code>&lt;script&gt; var player; function onYouTubeIframeAPIReady() {     player = new YT.Player('iframe-player', {         width: '640',         height: '390',         videoId: '{{ video_id }}',         events: {             'onReady': onPlayerReady,             'onStateChange': onPlayerStateChange         }     }); } &lt;/script&gt; </code></pre>  <p>If this is not what you want you can use Ajax to get the video ID without reloading the page.</p>"			2013-10-18 14:39:49.57 UTC
19474185	javascript|python	Sending javascript form data in python (post request)?	"<p>I'm very new to python and I'm trying to 'select' a radio button that is within a survey on a website. I really have no idea where to start with the python code. I believe the survey is in javascript and when the submit button is clicked, it sends the data to the server running the survey. The code I got from the survey radiobutton is as follows </p>  <pre><code>&lt;input type=""radio"" class=""sg-input sg-input-radio"" name=""sgE-1416699-3-2"" id=""sgE-1416699-3-2-10002"" value=""10002"" title=""Name of RadioButton""&gt; </code></pre>  <p>The code I have of the submit button is here</p>  <pre><code>&lt;input type=""submit"" class=""sg-button sg-submit-button"" id=""sg_SubmitButton"" name=""sGizmoSubmitButton"" data-domain=""www.surveygizmo.com"" value=""Vote""&gt; </code></pre>  <p>Any help on  how this is to be done will be greatly appreciated. Thanks.</p>"	2013-10-20 05:17:38.39 UTC	19534303	"<p>Suppose you have these params:</p>  <pre><code>sgE-1416699-3-2 = 10002 more_param = param_value </code></pre>  <p>Then prepare:</p>  <pre><code>from urllib import urlopen, urlencode data = {'sgE-1416699-3-2':'10002', 'more_param':'param_value'} encodeddata = urlencode(data) url = 'http://surveygizmo.com' </code></pre>  <p>Now, to make a GET request:</p>  <pre><code>r = urlopen(""{0}?{1}"".format(url, encodeddata)) </code></pre>  <p>To make a POST request:</p>  <pre><code>r = urlopen(url, encodeddata) </code></pre>  <p>Read the response:</p>  <pre><code>r.read() </code></pre>"			2013-10-23 06:25:08.803 UTC
19495099	javascript|python	Converting codes from Javascript to Python	"<p>I have few codes in Javascript that I want to convert in Python</p>  <p>First JS</p>  <pre><code>if (var1.charCodeAt(var2) % 2) var3 = 1; </code></pre>  <p>Python code</p>  <pre><code>if (ord(var1[var2])) % 2): var3 = 1: </code></pre>  <p>JS</p>  <pre><code>var4.push(String.fromCharCode(parseInt(var5.substr(var1, 2), 36) - var3)); </code></pre>  <p>Python</p>  <pre><code>var4.append(chr(int(var5[var1: 2], 36) - var3)) </code></pre>  <p>JS</p>  <pre><code>    for (var1 = 0; var1 &lt; var2.length; var1 += 2) { </code></pre>  <p>Python</p>  <pre><code>var1 = 0 while (var1 &lt; len(arr1)):     var1+= 2  </code></pre>  <p>Could someone correct me here please. Not quite getting the codes clearly.</p>"	2013-10-21 12:53:37.74 UTC	19495733	"<p>The third snippet can be converted as follows:</p>  <pre><code>for var1 in range(0, len(arr1), 2):     ... </code></pre>"			2013-10-21 13:21:55.14 UTC
19495099	javascript|python	Converting codes from Javascript to Python	"<p>I have few codes in Javascript that I want to convert in Python</p>  <p>First JS</p>  <pre><code>if (var1.charCodeAt(var2) % 2) var3 = 1; </code></pre>  <p>Python code</p>  <pre><code>if (ord(var1[var2])) % 2): var3 = 1: </code></pre>  <p>JS</p>  <pre><code>var4.push(String.fromCharCode(parseInt(var5.substr(var1, 2), 36) - var3)); </code></pre>  <p>Python</p>  <pre><code>var4.append(chr(int(var5[var1: 2], 36) - var3)) </code></pre>  <p>JS</p>  <pre><code>    for (var1 = 0; var1 &lt; var2.length; var1 += 2) { </code></pre>  <p>Python</p>  <pre><code>var1 = 0 while (var1 &lt; len(arr1)):     var1+= 2  </code></pre>  <p>Could someone correct me here please. Not quite getting the codes clearly.</p>"	2013-10-21 12:53:37.74 UTC	19495860	"<p>You should check your indices... charAt function in Javascript seems to be 1-based, while Python treat strings as arrays, so it's always 0-based.</p>  <p>For instance: <code>var1 = 'abcdefghijklmnopqrstuvwxyz'; var2 = 13</code>. </p>  <p>JS <code>var1.charAt(var2)</code> yields <code>'n'</code>, while Python <code>var[var2]</code> yields <code>'o'</code>.</p>  <p>Also, review how string slicing differs to one another. JS <code>substr</code> takes start and length as arguments, but Python works with start and end positions.</p>"			2013-10-21 13:27:36.827 UTC
19495099	javascript|python	Converting codes from Javascript to Python	"<p>I have few codes in Javascript that I want to convert in Python</p>  <p>First JS</p>  <pre><code>if (var1.charCodeAt(var2) % 2) var3 = 1; </code></pre>  <p>Python code</p>  <pre><code>if (ord(var1[var2])) % 2): var3 = 1: </code></pre>  <p>JS</p>  <pre><code>var4.push(String.fromCharCode(parseInt(var5.substr(var1, 2), 36) - var3)); </code></pre>  <p>Python</p>  <pre><code>var4.append(chr(int(var5[var1: 2], 36) - var3)) </code></pre>  <p>JS</p>  <pre><code>    for (var1 = 0; var1 &lt; var2.length; var1 += 2) { </code></pre>  <p>Python</p>  <pre><code>var1 = 0 while (var1 &lt; len(arr1)):     var1+= 2  </code></pre>  <p>Could someone correct me here please. Not quite getting the codes clearly.</p>"	2013-10-21 12:53:37.74 UTC	19495657	"<p>Mistake:</p>  <pre><code>if (ord(var1[var2])) % 2: #too much parentheses, fixed.     var3 = 1 #: &lt;- What's this? Also, mind your indentation. </code></pre>  <p>Also, about the last one:</p>  <pre><code>var1 = 0 while (var1 &lt; len(arr1)):      var1+= 2  </code></pre>  <p>That's fine, congratulations. But i would prefer to do it this way:</p>  <pre><code>for var1 in range(0, len(arr1), 2):     #do something </code></pre>  <p>That should do it.</p>  <p><strong>Edit</strong> Turns out there isn't really that much mistakes. About the second one, the <code>36</code> is the base number of the string to be converted. </p>"			2013-10-21 13:18:30.637 UTC
19506753	javascript|python|variables|web.py	"In webpy, how can I assign a javascript value to a python variable?"	"<p>I'm looking for a simple way to assign a value held by a javascript variable to a python variable in a webpy template. I have an int value held by a js variable that I want to use to get an element of a python array. For example (if I want $list[0] in a template): </p>  <pre><code>&lt;script&gt; ... foo = 0 $i = foo        ??? (doesn't work...) return $list[ foo ]    ??? (doesn't work...) ... &lt;/script&gt; </code></pre>  <p>Sorry if that isn't as clear as I hope it is. I've tried a ton of different ways to do this, and I can't seem to make it work. Thanks!!!</p>"	2013-10-21 23:51:39.48 UTC	19507352	"<p>To expand on Pointy's answer, what you are asking for does not make sense because web pages code is run in a certain order, and you are trying to make it run backwards.</p>  <ol> <li><p>The webserver (python) gets a request. It uses templates to construct a response for that request, and returns and HTML page and sends it to the client. At this point, generally, the python code is done running.</p></li> <li><p>The client (browser) gets the web page. It loads all the other resources it needs to display it, and then runs the javascript.</p></li> </ol>  <p>The javascript and python, therefore, are running on different computers at different times. The solution to your problem is probably going to be a little more complicated then you were hoping for: you have to <a href=""https://stackoverflow.com/questions/247483/http-get-request-in-javascript"">make a server request from javascript</a> to get the data from the server after the page is loaded on the client, and then manually <a href=""https://stackoverflow.com/questions/7545232/jquery-how-add-an-element-to-dom"">add it to the DOM</a>.</p>"			2013-10-22 01:01:24.637 UTC
19626474	python|performance|python-2.7|compression|readability	Can Python code be compressed like Javascript?	"<p>I am wondering if Python code can be compressed/non-human readable like Javascript can. I know indentions are important in Python, and it's core philosophy is readability, but is there, by any chance, a method that allows compressed Python code? Python 2.7, by the way.</p>"	2013-10-28 02:49:27.123 UTC	19626707	"<p>Unlike javascript which is usually executed by browsers and we must provide raw javascript source code.</p>  <p>You don't have to ship python codes, you can ship compiled binary files. There are many tool to do the work e.g. <a href=""http://www.py2exe.org/"" rel=""nofollow"">py2exe</a>, <a href=""http://www.pyinstaller.org/"" rel=""nofollow"">Pyinstaller</a>, <a href=""http://cx-freeze.sourceforge.net/"" rel=""nofollow"">cx_Freeze</a>. Clients also benefit because they don't need to install Python or even know anything about Python.</p>  <p>Though the compiled Python code are easier to be decompiled comparing to java, c, c++ codes, but better than compressed source code.</p>"			2013-10-28 03:20:43.08 UTC
19626474	python|performance|python-2.7|compression|readability	Can Python code be compressed like Javascript?	"<p>I am wondering if Python code can be compressed/non-human readable like Javascript can. I know indentions are important in Python, and it's core philosophy is readability, but is there, by any chance, a method that allows compressed Python code? Python 2.7, by the way.</p>"	2013-10-28 02:49:27.123 UTC	19626573	"<p><a href=""http://doughellmann.com/2009/01/pymotw-compileall.html"" rel=""nofollow"">http://doughellmann.com/2009/01/pymotw-compileall.html</a> the delete then source .py files</p>"			2013-10-28 03:01:56.567 UTC
19626474	python|performance|python-2.7|compression|readability	Can Python code be compressed like Javascript?	"<p>I am wondering if Python code can be compressed/non-human readable like Javascript can. I know indentions are important in Python, and it's core philosophy is readability, but is there, by any chance, a method that allows compressed Python code? Python 2.7, by the way.</p>"	2013-10-28 02:49:27.123 UTC	19626560	"<p>There are a few different approaches you can take here.</p>  <p>Python does in fact offer opportunities for minification in the form of <code>;</code>. A little known and little used (thankfully) syntactical element in python is that multiple expressions can be written on one line if <code>;</code> is used.</p>  <p>For instance:</p>  <pre><code> if x &gt; y:      x += y      print y  else:      y += x      print x </code></pre>  <p>Could be compressed to:</p>  <pre><code> if x&gt;y:x+=y;print y;  else:y+=x;print x; </code></pre>  <p>There are tons of examples of this, you can also remove comments, and obfuscate simple code further with ternary operators. The <code>;</code> gets rid of a ton of whitespace, but there are lots of smaller optimizations that can be made.</p>  <p>For some examples of libraries that do this for you, see <a href=""http://mnfy.readthedocs.org/en/latest/#a-note-about-version-numbers-and-python-version-compatibility"" rel=""nofollow"">here</a>, <a href=""https://github.com/astrand/pyobfuscate"" rel=""nofollow"">here</a>, or <a href=""http://code.activestate.com/recipes/576704-python-code-minifier/"" rel=""nofollow"">here</a>.</p>  <p>Keep in mind that none of these are going to completely obfuscate your code to the point that it can't be recovered. Any sufficiently motivated person will be able to reverse-engineer your source code, even if undocumented, from this. </p>  <p>This remains true even if you only distribute <code>.pyo</code> or <code>.pyc</code> files. Python bytecode is usually not much smaller than the source code used to generate it, and can for the most part be easily reverse-engineered. Do not make the mistake of thinking that distributing a <code>.pyc</code> will completely secure your source code. </p>  <p>EDIT: If you are looking to package these as standalone binary executables, you might want to take a look at <a href=""http://cx-freeze.sourceforge.net/"" rel=""nofollow"">cx_Freeze</a>. It could be closer to what you are looking for and much harder if not impossible to reverse-engineer.</p>"			2013-10-28 03:00:09.823 UTC
19715026	django|django-admin|python-requests	How do I upload a file to a Django admin page that uses javascript/jQuery (using python requests?)	"<p>I am trying to upload a video through the django admin site using python requests. I am logging in just fine:</p>  <pre><code>import requests  login_url = ""http://127.0.0.1:8000/admin"" client = requests.client() csrftoken = client.cookies['csrftoken']  login_data = {'username': 'username', 'password': 'password',               'this_is_the_login_form': '1',               'csrfmiddlewaretoken': csrftoken              }  r = client.post(login_url, data=login_data) </code></pre>  <p>After logging in I pull the page where I will upload a (video) file:</p>  <pre><code>target_url = ""http://127.0.0.1:8000/admin/product/700/"" r = client.get(target_url) </code></pre>  <p>In the HTML I have a script(That is not being pulled in with the .get() request) to listen when a file has been uploaded:</p>  <pre><code>var object_id = 700; $(document).ready(function() {     // Upload button handler     $('.file').on('change', handleFileSelect);     ... </code></pre>  <p>I have tried setting the file to the object I'm trying to upload, and making another get request hoping the file argument will be set, thus make the script fire and start the upload process.</p>  <pre><code>&lt;input id=""file"" class=""file"" type=""file"" name=""file""&gt;   data = {'file': open('file.flv', 'rb')} r = client.get(target_url, data=data) </code></pre>  <p>How do I make a request to the target_url, pull down the upload script, and make the upload script fire in order to upload the file?</p>"	2013-10-31 19:27:02.653 UTC	19715201	"<p>The upload script runs in Javascript and it needs a browser (client-side). Since you are doing the process from python (server-side), the Javascript won't run.</p>  <p>What I'd do is to use Firebug in the browser, and inspect the request that is sent when you actually upload the file (also reading the Javascript function may help understanding what a client browser normally does in order to upload that file).</p>  <p>You then can use python-requests to do an equivalent POST from python (including all necessary parameters). Note, however, that since you are sending a file, you may need to post a ""multipart-encoded"" file: <a href=""http://www.python-requests.org/en/latest/user/quickstart/#post-a-multipart-encoded-file"" rel=""nofollow"">http://www.python-requests.org/en/latest/user/quickstart/#post-a-multipart-encoded-file</a> .</p>"			2013-10-31 19:39:02.24 UTC
19738920	javascript|python|selenium|beautifulsoup	"Python Selenium, scraping webpage javascript table"	"<p>I am going to scrap the javascript tables inside below link.  <a href=""http://data2.7m.cn/history_Matches_Data/2009-2010/92/en/index.shtml"" rel=""nofollow"">http://data2.7m.cn/history_Matches_Data/2009-2010/92/en/index.shtml</a></p>  <pre><code>import codecs import lxml.html as lh from lxml import etree import requests from selenium import webdriver import urllib2 from bs4 import BeautifulSoup  URL = 'http://data2.7m.cn/history_Matches_Data/2009-2010/92/en/index.shtml' profile = webdriver.FirefoxProfile() profile.set_preference('network.http.max-connections', 30) profile.update_preferences() browser = webdriver.Firefox(profile) browser.get(URL) content = browser.page_source soup = BeautifulSoup(''.join(content)) </code></pre>  <p>When I get the contents of the webpage, then I need to know the number of round of soccer matches in that particular league.</p>  <p>Below codes has only found out the only table, may I know how to get all 38 soccer matches' tables? Thank you.</p>  <pre><code># scrap the round of soccer matches soup.findAll('td', attrs={'class': 'lsm2'})  # print the soccer matches' result of default round, but there have 38 rounds (id from s1 to s38) print soup.find(""div"", {""id"": ""Match_Table""}).prettify() </code></pre>"	2013-11-02 04:21:19.747 UTC	19886401	"<pre><code># ============================================================ import codecs import lxml.html as lh from lxml import etree import requests from selenium import webdriver import urllib2 from bs4 import BeautifulSoup from pandas import DataFrame, Series import html5lib  URL = 'http://data2.7m.cn/history_Matches_Data/2009-2010/92/en/index.shtml' profile = webdriver.FirefoxProfile() profile.set_preference('network.http.max-connections', 30) profile.update_preferences() browser = webdriver.Firefox(profile) browser.get(URL)  content = browser.page_source soup = BeautifulSoup(''.join(content)) # num = soup.findAll('td', attrs={'class': 'lsm2'}) # num = soup.findAll('table')[2].findAll('td')[37].text # soup.findAll('table',attrs={'class':'e_run_tb'})      num1 = soup.findAll('table')[2].findAll('tr')     for i in range(1,len(num1)+1):         for j in range(1,len(num1[i-1])+1):             # click button on website             clickme = browser.find_element_by_xpath('//*[@id=""e_run_tb""]/tbody/tr'+'['+str(i)+']'+'/td'+'['+str(j)+']')             clickme.click()              content = browser.page_source             soup = BeautifulSoup(''.join(content))              table = soup.find('div', attrs={'class': 'e_matches'})             rows = table.findAll('tr') #           for tr in rows: #             cols = tr.findAll('td') #             for td in cols: #                    text = td.find(text=True) #                    print text, #                print             for tr in rows[5:16]: #from row 5 to 16                 cols = tr.findAll('td')                 for td in cols:                     text = td.find(text=True)                     print text,                 print             print </code></pre>"			2013-11-10 04:48:29.703 UTC
19738920	javascript|python|selenium|beautifulsoup	"Python Selenium, scraping webpage javascript table"	"<p>I am going to scrap the javascript tables inside below link.  <a href=""http://data2.7m.cn/history_Matches_Data/2009-2010/92/en/index.shtml"" rel=""nofollow"">http://data2.7m.cn/history_Matches_Data/2009-2010/92/en/index.shtml</a></p>  <pre><code>import codecs import lxml.html as lh from lxml import etree import requests from selenium import webdriver import urllib2 from bs4 import BeautifulSoup  URL = 'http://data2.7m.cn/history_Matches_Data/2009-2010/92/en/index.shtml' profile = webdriver.FirefoxProfile() profile.set_preference('network.http.max-connections', 30) profile.update_preferences() browser = webdriver.Firefox(profile) browser.get(URL) content = browser.page_source soup = BeautifulSoup(''.join(content)) </code></pre>  <p>When I get the contents of the webpage, then I need to know the number of round of soccer matches in that particular league.</p>  <p>Below codes has only found out the only table, may I know how to get all 38 soccer matches' tables? Thank you.</p>  <pre><code># scrap the round of soccer matches soup.findAll('td', attrs={'class': 'lsm2'})  # print the soccer matches' result of default round, but there have 38 rounds (id from s1 to s38) print soup.find(""div"", {""id"": ""Match_Table""}).prettify() </code></pre>"	2013-11-02 04:21:19.747 UTC	19738987	<p>The easiest thing might me to use Selenium to click the <code>lsm2</code> links from 2-38 (since 1 is present to start) and then scrape the tables with id <code>Match_Table</code> after each click--accumulating your results as you go.</p>			2013-11-02 04:37:14.327 UTC
19742689	javascript|python	Why can't Javascript give accurate results for scientific calculations compared to python	"<p>I tried performing Modular Exponentiation in Javascript to verify an algorithm and was shocked to find that <strong>Javascript was not giving accurate results compared to Python</strong>, Why is it so. I think it has something to do with the way Javascript handles datatypes(as Text), But I would like to know more about it and I know the purpose why both the langs were designed.</p>  <p><img src=""https://i.stack.imgur.com/snPtH.png"" alt=""Modular Exponentiation result comparison in .js and .py""></p>"	2013-11-02 14:02:22.147 UTC	19742818	"<p>The <code>pow()</code> function <em>in Python</em> returns an integer result for integer inputs:</p>  <pre><code>&gt;&gt;&gt; pow(17, 22) 1174562876521148458974062689L </code></pre>  <p>This is <em>not the same function</em> as what <code>Math.pow()</code> gives you, which uses floating point results:</p>  <pre><code>&gt; Math.pow(17, 22)   1.1745628765211486e+27 </code></pre>  <p>The equivalent function in Python is <a href=""http://docs.python.org/2/library/math.html#math.pow""><code>math.pow()</code></a>:</p>  <pre><code>&gt;&gt;&gt; import math &gt;&gt;&gt; math.pow(17, 22) 1.1745628765211484e+27 </code></pre>  <p>and suffers from the same limitations, albeit subtly different in actual result:</p>  <pre><code>&gt;&gt;&gt; math.pow(17, 22) % 21 3.0 </code></pre>  <p>JavaScript only has the Number type, which limits JS arithmetic to float precision, <em>always</em>, while Python's support for a memory-bound integer type gives it more scope for precision.</p>"			2013-11-02 14:15:52.547 UTC
19742689	javascript|python	Why can't Javascript give accurate results for scientific calculations compared to python	"<p>I tried performing Modular Exponentiation in Javascript to verify an algorithm and was shocked to find that <strong>Javascript was not giving accurate results compared to Python</strong>, Why is it so. I think it has something to do with the way Javascript handles datatypes(as Text), But I would like to know more about it and I know the purpose why both the langs were designed.</p>  <p><img src=""https://i.stack.imgur.com/snPtH.png"" alt=""Modular Exponentiation result comparison in .js and .py""></p>"	2013-11-02 14:02:22.147 UTC	19742813	"<p>It gets a bit clearer, when you look at the intermediary results before the modulo operation first:</p>  <pre class=""lang-js prettyprint-override""><code>&gt; Math.pow(17, 22) 1.1745628765211486e+27 </code></pre>  <pre class=""lang-py prettyprint-override""><code>&gt;&gt;&gt; pow(17, 22) 1174562876521148458974062689 </code></pre>  <p>As you can see, the Python result has a lot more digits than the JavaScript result. This is due to how each language handles numbers or integers.</p>  <p>Python has an <a href=""http://docs.python.org/3/reference/datamodel.html#index-9""><code>int</code> type</a>, which is basically unlimited: <em>“These represent numbers in an unlimited range, subject to available (virtual) memory only.”</em> So as long as you have memory available, the integers that can be represented with this type can be as big as you want—without any loss in precision.</p>  <p>Enter JavaScript and the ECMA standard. Unlike Python and other languages, we only have a single type responsible for all numeric types: <code>Number</code>. This type holds integers and decimals without any differentiation. They are internally represented as <a href=""http://en.wikipedia.org/wiki/Double-precision_floating-point_format"">double precision floating point numbers</a>. As such, they are subject to those restrictions, allowing only a certain amount of precision for big numbers. Hence, the best you can get for <code>17^22</code> is the above result, with the rest of the precision lost in the process.</p>  <hr>  <p>If you are not too focused on performance, you could write your own <code>pow</code> function that additional takes a third parameter to apply a modulo operation to the result, similar to how Python’s <a href=""http://docs.python.org/3/library/functions.html#pow""><code>pow</code></a> does.</p>  <pre class=""lang-js prettyprint-override""><code>function modpow (base, exponent, modulo) {     var result = base;     while (exponent &gt; 1 ) {         result = (result * base) % modulo;         exponent--;     }     return result; } </code></pre>  <p>Of course, this is a lot less efficient than the internal <code>pow</code> and only works for integer exponents, but at least it would solve your job correctly:</p>  <pre class=""lang-js prettyprint-override""><code>&gt; modpow(17, 22, 21) 4 </code></pre>"			2013-11-02 14:15:24.247 UTC
19745157	javascript|python|regex|json|python-2.6	Parse javascript object declaration which doesn't use strings for property names (using python and BeautifulSoup)	"<p>I'm doing something very similar to what <a href=""https://stackoverflow.com/questions/13298201/parsing-variable-data-out-of-a-javascript-tag-using-python"">this user was doing</a>: trying to load a javascript object declaration into a python dictionary. However, unlike that user, the property names aren't enclosed in quotes.</p>  <pre><code>&gt;&gt;&gt; simplejson.loads('{num1: 1383241561141, num2: 1000}') Traceback (most recent call last):   File ""&lt;stdin&gt;"", line 1, in &lt;module&gt;   File ""/Users/lalalal/site-packages/simplejson/__init__.py"", line 385, in loads     return _default_decoder.decode(s)   File ""/Users/lalalal/site-packages/simplejson/decoder.py"", line 402, in decode     obj, end = self.raw_decode(s, idx=_w(s, 0).end())   File ""/Users/lalalal/site-packages/simplejson/decoder.py"", line 418, in raw_decode     obj, end = self.scan_once(s, idx) simplejson.decoder.JSONDecodeError: Expecting property name: line 1 column 1 (char 1) </code></pre>  <p>It'd be just splendid if I had the correct JSON notation:</p>  <pre><code>&gt;&gt;&gt; simplejson.loads('{""num1"": 1383241561141, ""num2"": 1000}') {'num1': 1383241561141, 'num2': 1000} </code></pre>  <p>But, I don't. How can I work around this? Maybe it comes down to something as simple as a regex?</p>  <p><em>Edit</em>: <a href=""https://stackoverflow.com/a/14122300/691859"">This regex</a> that Martijn wrote has me halfway there, it just doesn't work if I have trailing whitespace after the braces which happens in some of my example data, e.g. <code>{  num1: 1383241561141, num2: 1000}'</code></p>"	2013-11-02 18:15:52.587 UTC	19745205	"<p>Some libraries like <a href=""https://code.google.com/p/rson"" rel=""nofollow"">RSON</a> support parsing the so-called ""relaxed"" JSON notation.</p>  <p>Depending on the actual keys, and if you don't care about the security implications (never use this on external input), <code>eval</code> may give you a functioning dictionary as well.</p>"			2013-11-02 18:20:02.547 UTC
19745157	javascript|python|regex|json|python-2.6	Parse javascript object declaration which doesn't use strings for property names (using python and BeautifulSoup)	"<p>I'm doing something very similar to what <a href=""https://stackoverflow.com/questions/13298201/parsing-variable-data-out-of-a-javascript-tag-using-python"">this user was doing</a>: trying to load a javascript object declaration into a python dictionary. However, unlike that user, the property names aren't enclosed in quotes.</p>  <pre><code>&gt;&gt;&gt; simplejson.loads('{num1: 1383241561141, num2: 1000}') Traceback (most recent call last):   File ""&lt;stdin&gt;"", line 1, in &lt;module&gt;   File ""/Users/lalalal/site-packages/simplejson/__init__.py"", line 385, in loads     return _default_decoder.decode(s)   File ""/Users/lalalal/site-packages/simplejson/decoder.py"", line 402, in decode     obj, end = self.raw_decode(s, idx=_w(s, 0).end())   File ""/Users/lalalal/site-packages/simplejson/decoder.py"", line 418, in raw_decode     obj, end = self.scan_once(s, idx) simplejson.decoder.JSONDecodeError: Expecting property name: line 1 column 1 (char 1) </code></pre>  <p>It'd be just splendid if I had the correct JSON notation:</p>  <pre><code>&gt;&gt;&gt; simplejson.loads('{""num1"": 1383241561141, ""num2"": 1000}') {'num1': 1383241561141, 'num2': 1000} </code></pre>  <p>But, I don't. How can I work around this? Maybe it comes down to something as simple as a regex?</p>  <p><em>Edit</em>: <a href=""https://stackoverflow.com/a/14122300/691859"">This regex</a> that Martijn wrote has me halfway there, it just doesn't work if I have trailing whitespace after the braces which happens in some of my example data, e.g. <code>{  num1: 1383241561141, num2: 1000}'</code></p>"	2013-11-02 18:15:52.587 UTC	19745694	"<p>one simple way to do it in js:</p>  <pre><code>'{num1: 1383241561141, num2: 1000}'   // the string   .trim()                             // remove whitespace   .slice(1,-1)                        // remove endcap braces   .trim()                             // remove whitespace   .split(/\s*,\s*/).map(function(a){  // loop through each comma section names as a      var p=a.split(/\s*:\s*/);        // split section into key/val segments      this[p[0]]=p[1];                 // assign val to collection under key      return this;                     // return collection },{})[0];                             // grab the return once (same on each index) </code></pre>  <p>This routine returns a live object that stringifys like this:</p>  <pre><code>{     ""num1"": ""1383241561141"",     ""num2"": ""1000"" } </code></pre>  <p>note the string numbers, you can loop through the object again and Number(val) those keys back to real numbers if need be.</p>"			2013-11-02 19:03:53.173 UTC
19775725	javascript|python-2.7|pyjamas	converting python script into javascript code using Pyjs	"<p>I am trying to convert python script into a javascript code using the Pyjs.  I have taken look at the Pyjs documentation, but I am still not quite sure how to make it happen...can someone guide me through?</p>  <p>thank you, </p>"	2013-11-04 19:42:09.29 UTC	19802826	"<p>Have you looked at the pyjs examples? They're going to be your best resource...</p>  <p><a href=""http://pyjs.org/examples/"" rel=""nofollow"">http://pyjs.org/examples/</a></p>"			2013-11-06 02:13:50.077 UTC
19788352	javascript|python|cython|emscripten	How compile function written in python to JavaScript (emscripten)?	"<p>I have a simple function written in python which I want to port to javascript.</p>  <p>I have compiled python 2.7 into a .so library, so thats not the issue.</p>  <p>The problem I'm having is that after I compile my program with cython, the function names get all scrambled up, which means I don't know how to preserve the functions when i run emcc.</p>  <p>Does anybody have any experience compiling python programs to js with emscripten?</p>  <p>Any information would be appreciated.</p>  <p>Note: I want to preserve the exact functionality to that of python, I don't want something that translates a python program into javascript.</p>"	2013-11-05 11:53:03.697 UTC	19827878	"<p>This other question, with an accepted answer, complains about the same issue: Cython mangling function names and making it difficult to access from C++: <a href=""https://stackoverflow.com/questions/13810815/embed-python-function-in-c"">Embed python function in C++</a></p>  <p>The accepted answer states that Cython isn't meant for this sort of thing at all, suggesting you can't do what you want in this fashion:</p>  <blockquote>   <p>You're not going to be able to get the interoperation you want that way. If you open and inspect hello.c you won't find ""static int say_hello"" anywhere in there. Cython is designed for letting Python use C libraries, not letting C libraries use python.</p> </blockquote>  <p>The not-accepted next answer suggest that specifying <code>public</code> will not mangle the function name, although he also mentions linking problems.</p>  <pre><code># (in the generated C file hello.c) __PYX_EXTERN_C DL_IMPORT(...) say_hello(...); </code></pre>  <p>Worth a shot, but please consider the other options in the comments if it fails.</p>"			2013-11-07 04:13:59.113 UTC
19851002	javascript|python|functional-programming|sml	Javascript vs Python with respect to Python 'map()' function	"<p>In Python there is a function called <code>map</code> that allows you to go: <code>map(someFunction, [x,y,z])</code> and go on down that list applying the function.  Is there a javascript equivalent to this function?</p>  <p>I am just learning Python now, and although I have been told javascript is functional language, I can see that I have been programming in a non-functional javascript style. As a general rule, can javascript be utilized as a functional language as effectively as Python can? Does it have similar tricks like the <code>map</code> function above? </p>  <p>I've also just begun an SML course and am wondering how much of what I learn will be applicable to javascript as well.</p>"	2013-11-08 03:18:46.233 UTC	19851221	"<p>You can also use <a href=""http://underscorejs.org/#map"" rel=""nofollow"">underscore.js</a> which adds tons of nice functionalists with only 4k size.</p>  <pre><code>_.map([1, 2, 3], function(num){ return num * 3; }); //=&gt; [3, 6, 9] </code></pre>"			2013-11-08 03:43:16.837 UTC
19851002	javascript|python|functional-programming|sml	Javascript vs Python with respect to Python 'map()' function	"<p>In Python there is a function called <code>map</code> that allows you to go: <code>map(someFunction, [x,y,z])</code> and go on down that list applying the function.  Is there a javascript equivalent to this function?</p>  <p>I am just learning Python now, and although I have been told javascript is functional language, I can see that I have been programming in a non-functional javascript style. As a general rule, can javascript be utilized as a functional language as effectively as Python can? Does it have similar tricks like the <code>map</code> function above? </p>  <p>I've also just begun an SML course and am wondering how much of what I learn will be applicable to javascript as well.</p>"	2013-11-08 03:18:46.233 UTC	19851017	"<p>Sure! JavaScript doesn't have a lot of higher-order functions <em>built-in</em>, but <code>map</code> is one of the few that <em>is</em> built-in:</p>  <pre><code>var numbers = [1, 2, 3]; var incrementedNumbers = numbers.map(function(n) { return n + 1 }); console.log(incrementedNumbers);  // =&gt; [2, 3, 4] </code></pre>  <p>It might be worthwhile to note that <code>map</code> hasn't been around forever, so some rather old browsers might not have it, but it's easy enough to implement a shim yourself.</p>"			2013-11-08 03:20:20.923 UTC
19851990	javascript|python|json|hash	"how to hash a ""json"" nested dictionary identically in Python and JavaScript?"	"<p>What's the best way to consistently hash an object/dictionary that's limited to what JSON can represent, in both JavaScript and Python?  What about in many different languages?</p>  <p>Of course there are hash functions implemented consistently in many different languages that take a string, but to hash an object you have to convert it to a string representation first.</p>  <p>I want a hash function that will always return the same value for the same dictionary in any language, but the JSON spec doesn't guarantee anything about the order of keys in the serialized representation.</p>  <p>Do <code>json.dumps()</code> and <code>JSON.stringify()</code> behave identically?  How would you verify this?</p>  <p>If not, is there a serialization format with libraries in many languages (I'm practically interested in Python and JavaScript but also curious about all languages) that doesn't require any additional processing by the caller to produce consistent results?</p>"	2013-11-08 05:06:27.57 UTC	19852062	"<p>JSON is a well-defined language for representing the state of objects. The functions do not behave <em>identically</em>, but they do behave <em>equivalently</em>. </p>  <p>For instance:</p>  <pre><code>json.dumps({'hello':'goodbye', 123: 456}) </code></pre>  <p>May produce either:</p>  <pre><code>{""hello"":""goodbye"", ""123"": 456} </code></pre>  <p>or </p>  <pre><code>{""123"": 456, ""hello"":""goodbye""} </code></pre>  <p>And if you pass in the <code>indent</code> parameter then you get even more possibilities for different results.</p>  <p>Most languages if they do not already have a built-in way to handle JSON (e.g. Python &amp; JS) then they'll have a 3rd party utility that is perfectly sufficient (see Newtonsoft JSON library for .NET)</p>  <p>Each language that I'm aware of will produce valid JSON, which means that it can be parsed by each other language that provides a JSON parser.</p>"			2013-11-08 05:14:00.043 UTC
19851990	javascript|python|json|hash	"how to hash a ""json"" nested dictionary identically in Python and JavaScript?"	"<p>What's the best way to consistently hash an object/dictionary that's limited to what JSON can represent, in both JavaScript and Python?  What about in many different languages?</p>  <p>Of course there are hash functions implemented consistently in many different languages that take a string, but to hash an object you have to convert it to a string representation first.</p>  <p>I want a hash function that will always return the same value for the same dictionary in any language, but the JSON spec doesn't guarantee anything about the order of keys in the serialized representation.</p>  <p>Do <code>json.dumps()</code> and <code>JSON.stringify()</code> behave identically?  How would you verify this?</p>  <p>If not, is there a serialization format with libraries in many languages (I'm practically interested in Python and JavaScript but also curious about all languages) that doesn't require any additional processing by the caller to produce consistent results?</p>"	2013-11-08 05:06:27.57 UTC	19852075	"<p>I would split this into two problems.</p>  <ol> <li>How do you get the same serialized string in both JavaScript and Python?</li> <li>Which byte array hash function should you use? It must be an established algorithm with identical implementations in both JavaScript and Python.</li> </ol>  <p>Use (1) to get two strings, then UTF8 encode, then use (2) to get hashes.</p>  <p>Since (2) is straightforward, I'll only address (1).</p>  <p>There are multiple facets to the problem of making sure the two JSON strings you generate are identical.</p>  <ul> <li>You'll want to used unformatted JSON (no extraneous spaces, tabs, or newlines).</li> <li>null values must be treated identically. Some serializers will by default throw away a dictionary key-value pair if the value is null.</li> <li>Ordering of key-value pairs within a dictionary must be consistent.</li> <li>JSON number serialization should be consistent. For example, you can't have integer one serialize as <code>1</code>  on one side and <code>1.0</code> on the other. (This probably won't be as big of an issue however.)</li> <li>The string encoding should be the same for both.  JSON allows serialization to Unicode text, only mandating that <code>""</code> and <code>\</code> be backslash-escaped in JSON strings. Most serializers do more than necessary, however, and reduce almost all Unicode characters to the <code>\uXXXX</code> equivalent. See <a href=""http://json.org/"" rel=""nofollow"">json.org</a> for the details on JSON string encoding. One way to remove all ambiguity is to only escape when absolutely necessary.</li> </ul>  <p>You'll want to make sure all of these are matched between JavaScript and Python. Most JSON serialization libraries I've used provide configuration hooks for all of the things I mention in the list above. Unfortunately, I'm not very familiar with the JavaScript or Python libraries.</p>"			2013-11-08 05:14:45.873 UTC
19851990	javascript|python|json|hash	"how to hash a ""json"" nested dictionary identically in Python and JavaScript?"	"<p>What's the best way to consistently hash an object/dictionary that's limited to what JSON can represent, in both JavaScript and Python?  What about in many different languages?</p>  <p>Of course there are hash functions implemented consistently in many different languages that take a string, but to hash an object you have to convert it to a string representation first.</p>  <p>I want a hash function that will always return the same value for the same dictionary in any language, but the JSON spec doesn't guarantee anything about the order of keys in the serialized representation.</p>  <p>Do <code>json.dumps()</code> and <code>JSON.stringify()</code> behave identically?  How would you verify this?</p>  <p>If not, is there a serialization format with libraries in many languages (I'm practically interested in Python and JavaScript but also curious about all languages) that doesn't require any additional processing by the caller to produce consistent results?</p>"	2013-11-08 05:06:27.57 UTC	67075545	"<p>I thought I might attempt a practical example.</p> <p>In javascript I did:</p> <pre><code>import stringify from 'json-stable-stringify' import sha256 from 'simple-sha256'  hash_str = sha256(stringify({'hello':'goodbye', '123': 456})) // hash_str = 72804f4e0847a477ee69eae4fbf404b03a6c220bacf8d5df34c964985acd473f </code></pre> <p><code>json-stable-stringify</code> guarantees a sorted json. <code>sha256</code> allows for nodejs / browser compatibility.</p> <p>In python 3.8 I did:</p> <pre><code>import hashlib import json  hash_str = hashlib.sha256(json.dumps({'hello':'goodbye', '123': 456}, sort_keys=True, separators=(',', ':')).encode(&quot;utf-8&quot;)).hexdigest() # hash_str = 72804f4e0847a477ee69eae4fbf404b03a6c220bacf8d5df34c964985acd473f  </code></pre> <p>I haven't yet done extensive testing but with the json objects I've tried, it has successfully matched.</p>"			2021-04-13 13:10:12.15 UTC
19884900	javascript|python|templates|jinja2	How to pass dictionary from Jinja2 (using Python) to Javascript?	"<p>How to pass dictionary from Jinja2 (using Python) to Javascript ? I have dictionary in Python and when I render template I need to use that dictionary with Javascript, I passed from Python </p>  <pre><code>template = JINJA_ENVIRONMENT.get_template('sm.html') self.response.write(template.render(values=values)) </code></pre>  <p>but how to store them in Javascript variable inside html page.</p>"	2013-11-10 00:35:30.097 UTC	19884920	"<p>You want to store it as <a href=""http://docs.python.org/2/library/json.html"" rel=""nofollow"">Json</a>. This is javascript's native format, so you can pass that directly to a variable.</p>"			2013-11-10 00:38:33.783 UTC
19884900	javascript|python|templates|jinja2	How to pass dictionary from Jinja2 (using Python) to Javascript?	"<p>How to pass dictionary from Jinja2 (using Python) to Javascript ? I have dictionary in Python and when I render template I need to use that dictionary with Javascript, I passed from Python </p>  <pre><code>template = JINJA_ENVIRONMENT.get_template('sm.html') self.response.write(template.render(values=values)) </code></pre>  <p>but how to store them in Javascript variable inside html page.</p>"	2013-11-10 00:35:30.097 UTC	19884922	"<p>Use the <code>json</code> module to turn the Python data into JSON data; JSON is a subset of JavaScript <sup>*</sup> and does fine as a JavaScript literal:</p>  <pre><code>import json  js_value = json.dumps(python_value) </code></pre>  <p>and render the <code>js_value</code> in the template.</p>  <p>If you need the JSON data to be <em>HTML safe</em> too, you'll need to add some replacements:</p>  <pre><code>js_value = (json.dumps(python_value)     .replace(u'&lt;', u'\\u003c')     .replace(u'&gt;', u'\\u003e')     .replace(u'&amp;', u'\\u0026')     .replace(u""'"", u'\\u0027')) </code></pre>  <hr>  <p><sup>*</sup>JSON allows for <a href=""http://timelessrepo.com/json-isnt-a-javascript-subset"" rel=""nofollow noreferrer"">U+2028 and U+2029 characters</a> which JavaScript literals can't contain, but the <code>json.dumps()</code> function escapes all non-ASCII codepoints by default, so provided you don't disable <code>ensure_ascii</code> you are fine.</p>"			2013-11-10 00:38:49.81 UTC
19886791	python	How do Python developers manage Javascript/CSS library dependencies?	"<p>Coming from C#, management of -all- dependencies was done using NuGet. In Python, PIP is used to manage python packages. Is there any de facto standard for managing Javascript and CSS library dependencies?</p>"	2013-11-10 06:01:50.703 UTC	19893301	"<p>well javascript and css are their own languages ... so just use that(NuGet) to manage your js/css ... python jquery is the same as .net jquery ...  if you are just looking for a javascript package manager then JAM works i think <a href=""http://jamjs.org/"" rel=""nofollow"">http://jamjs.org/</a> ... </p>  <p>bower.io also seems to be a sort of manager for css/js  ... but the python bit was misleading ... these have nothing to do with python specifically ...</p>"			2013-11-10 18:20:43.653 UTC
19886791	python	How do Python developers manage Javascript/CSS library dependencies?	"<p>Coming from C#, management of -all- dependencies was done using NuGet. In Python, PIP is used to manage python packages. Is there any de facto standard for managing Javascript and CSS library dependencies?</p>"	2013-11-10 06:01:50.703 UTC	19887048	"<p>python is the language, I guess you mean some web platform like django. however, there is no javascript / css management tool at part of the platform.</p>"			2013-11-10 06:46:11.57 UTC
19886791	python	How do Python developers manage Javascript/CSS library dependencies?	"<p>Coming from C#, management of -all- dependencies was done using NuGet. In Python, PIP is used to manage python packages. Is there any de facto standard for managing Javascript and CSS library dependencies?</p>"	2013-11-10 06:01:50.703 UTC	21332548	"<p>In the Python world, <a href=""http://www.fanstatic.org"" rel=""nofollow"">Fanstatic</a> is probably the most widely used (framework-agnostic) solution for that purpose.</p>"			2014-01-24 12:19:23.863 UTC
19890726	javascript|python|google-app-engine|google-bigquery	I can't get json data in code javascript for google chart (project Python Hello Dashboard sample)	"<p>Python Hello Dashboard sample I can't run this project. This project has some problems,in file index.html:  I can't get variables data type JSON (dict)for DataTable.</p>  <pre><code>geodata = {{ data }} // error geodata=""{{data}}"" //it is String not type JSON      </code></pre>  <p>accrue cause errors line google.visualization.DataTable(geodata) Please help me!</p>  <pre><code>&lt;script type='text/javascript'&gt;  google.load('visualization', '1', {'packages':    ['geochart']});  google.setOnLoadCallback(drawMarkersMap);   geodata = {{ data }} // error   function drawMarkersMap() {    if (! geodata) return;    var data = new google.visualization.DataTable(geodata);     var options = {      region: 'US',      displayMode: 'region',      resolution: 'provinces',      width: '800'    };     var chart = new google.visualization.GeoChart(      document.getElementById('chart_div'));    chart.draw(data, options); }; &lt;/script&gt; </code></pre>  <p>it in this link: <a href=""https://developers.google.com/bigquery/articles/dashboard#downloadinstalllibraries"" rel=""nofollow"">https://developers.google.com/bigquery/articles/dashboard#downloadinstalllibraries</a></p>"	2013-11-10 14:16:23.68 UTC	19891047	"<p>You need to read the tutorial more thoroughly.</p>  <p><code>{{ data }}</code> is a template <em>placeholder</em>, it is not itself JSON (and nowhere close to valid). Further in the tutorial the placeholder is filled in when rendering the template:</p>  <pre><code>@decorator.oauth_required def get(self):     data = { 'data': self._bq2geo(bq.Query(QUERY, BILLING_PROJECT_ID)),              'query': QUERY }     template = os.path.join(os.path.dirname(__file__), 'index.html')     self.response.out.write(render(template, data)) </code></pre>  <p>The <code>data</code> key in the <code>data</code> dictionary provides the value to be filled in; the <code>self._bq2geo()</code> method generates the JSON value:</p>  <pre><code>def _bq2geo(self, bqdata):     """"""geodata output for region maps must be in the format region, value.        Assume the BigQuery query output is in this format and get names from schema.     """"""     logging.info(bqdata)     columnNameGeo = bqdata['schema']['fields'][0]['name']     columnNameVal = bqdata['schema']['fields'][1]['name']     logging.info(""Column Names=%s, %s"" % (columnNameGeo, columnNameVal))     geodata = { 'cols': ({'id':columnNameGeo,'label':columnNameGeo,'type':'string'},       {'id':columnNameVal, 'label':columnNameVal, 'type':'number'})}     geodata['rows'] = [];     logging.info(geodata)     for row in bqdata['rows']:         newrow = ({'c':[]})         newrow['c'].append({'v': 'US-'+row['f'][0]['v']})         newrow['c'].append({'v':row['f'][1]['v']})         geodata['rows'].append(newrow)     logging.info('FINAL GEODATA---')     logging.info(geodata)     return json.dumps(geodata) </code></pre>  <p>The method returns a JSON value, which replaces the <code>{{ data }}</code> placeholder string.</p>"			2013-11-10 14:44:36.67 UTC
19896527	javascript|python|selenium	Combine Python String With Javascript Value	"<pre><code>self.br.execute_script(""document.getElementById('ctl00_phMainContent_KeywordForm_ControlPanel_txtKeywords').value = 'keywordurl';"") </code></pre>  <p>I use selenium in python, I have the following code which executes Javascript. The part of keyworurl is a python string list of around 1300 lines. But when I use that code it will write ""keywordurl"" and not what the keywordurl represents in python... any ideas? If it was possible to do "" + keywordurl + "" or something?</p>"	2013-11-10 23:22:32.18 UTC	19896619	"<p>It is possible to do string addition in python :p . It is better to use str.format though:</p>  <pre><code>&gt;&gt;&gt; print ""Hello {}!"".format(""World"") ""Hello World!"" </code></pre>  <p>Since it sounds like you have a list of 1300 strings, it would probably be a good idea to use list.join on it first, to turn it into a giant string.</p>  <pre><code>&gt;&gt;&gt; print """".join([""1"", ""2"", ""3""]) '123' </code></pre>"			2013-11-10 23:33:20.35 UTC
19896527	javascript|python|selenium	Combine Python String With Javascript Value	"<pre><code>self.br.execute_script(""document.getElementById('ctl00_phMainContent_KeywordForm_ControlPanel_txtKeywords').value = 'keywordurl';"") </code></pre>  <p>I use selenium in python, I have the following code which executes Javascript. The part of keyworurl is a python string list of around 1300 lines. But when I use that code it will write ""keywordurl"" and not what the keywordurl represents in python... any ideas? If it was possible to do "" + keywordurl + "" or something?</p>"	2013-11-10 23:22:32.18 UTC	19896636	"<p>Use Python string formatting:</p>  <pre><code>for keywordurl in open(""textfile.txt"").readlines():     self.br.execute_script( ""document.getElementById('ctl00_phMainContent_KeywordForm_ControlPanel_txtKeywords').value = '%s';"" % keywordurl ) </code></pre>  <p>The <code>%s</code>-specifier is replaced with a string, that follows the  <code>%</code>-Operator.</p>  <p>More detailed information: <a href=""http://docs.python.org/2/library/stdtypes.html#string-formatting"" rel=""nofollow"">http://docs.python.org/2/library/stdtypes.html#string-formatting</a></p>"			2013-11-10 23:35:33.627 UTC
19897183	python|selenium	Python Selenium - How to click on a javascript button	"<p>I am new to Python and Selenium. I have the following code for a button on my site and I am unable to click on it using </p>  <pre><code> driver.find_element_by_id(""AddToBasket"").click() </code></pre>  <p>or</p>  <pre><code>driver.find_element_by_xpath(""//a[@id='AddToCartButton']"").click() </code></pre>  <p>Hovering over the button just displays <code>javascript:void(0)</code></p>  <p>So here is my Code  </p>  <pre><code>&lt;div class=""add""&gt;     &lt;a href=""javascript:void(0)"" id=""AddToBasket"" class=""addtobtn addtobag""&gt;       &lt;span&gt;Add to cart&lt;/span&gt;     &lt;/a&gt; </code></pre>  <p>Thanks.</p>"	2013-11-11 00:44:22.997 UTC	20042185	"<pre><code>from selenium.webdriver.common.action_chains import ActionChains self.driver = webdriver.Firefox() # You need a mouse to hover the span elements here self.mouse = webdriver.ActionChains(self.driver)      # You need get the span element from its xpath: value = 'Add to cart' span_xpath = '//span[contains(text(), ""' + value + '"")]' span_element = driver.find_element_by_xpath(span_xpath)  # Then you hover on span element by mouse and click on it: self.mouse.move_to_element(span_element).click().perform() </code></pre>"			2013-11-18 07:18:35.08 UTC
19905149	javascript|python|html|python-2.7|python-imaging-library	Python/JavaScript/HTML create a computer network diagram dynamically	"<p>I want to create a computer network diagram dynamically on UI, with the network diagram having switches, routers and other devices and these devices are connected with links and i need to label these links at both ends of the devices being connected by a particular link.</p>  <p>I am open to creating this image from backend, I have python for backend, with any image creation library. Though i would still prefer if there is any way to do it with any JS module, if available. In python i came across one library PIL.</p>  <p>Could you please point me to any JS modules that can help me do this, or any python module which would best suite the requirement.</p>  <p>Thanks in advance.</p>"	2013-11-11 11:24:22.253 UTC	19905480	"<p>You may want to take a look at the <a href=""http://raphaeljs.com"" rel=""nofollow"">RaphaelJS Javascript library</a>, which uses SVG under the covers. Their website have an example with a graph which may be a good starting point to your diagram creation code: <a href=""http://raphaeljs.com/graffle.html"" rel=""nofollow"">http://raphaeljs.com/graffle.html</a> That's what I'd recommend for doing it in the client side.</p>  <p>If you actually were to do in the backend with Python, you could look for a solution using <a href=""http://www.graphviz.org/"" rel=""nofollow"">GraphViz</a> under the covers, maybe <a href=""https://code.google.com/p/python-graph/wiki/Example"" rel=""nofollow"">python-graph</a> or <a href=""https://code.google.com/p/pydot/"" rel=""nofollow"">pydot</a>.</p>"			2013-11-11 11:42:25.277 UTC
20019690	javascript|ipython	"How to access ""current cell output area"" with JavaScript in IPython Web notebook?"	"<p>In the IPython Web notebook, I'm writing code that returns a JavaScript display object, that will display output in the cell output area.</p>  <p>What's the preferred idiom for the JavaScript code to reference ""the current cell's output area"", in a way that doesn't overlap things if there are multiple JavaScript output cells in the notebook?</p>  <p>(I realize that IPython JavaScript support is a work in progress).</p>"	2013-11-16 14:41:57.957 UTC	20020566	"<p>You cannot easily get access to the output area, but when javascript is executed, it is in a namespace where a hidden div bind to a local variable named <del><code>container</code></del> <code>element</code>  exist and is <strong>in</strong> the output area. <del>you can <code>.show()</code></del>  it and inject html in it it will appear where you expect it to. </p>  <p>See for example <a href=""http://nbviewer.ipython.org/6131622"" rel=""nofollow"">http://nbviewer.ipython.org/6131622</a></p>  <p>UPDATE IPython 2.0 and above.</p>  <p>Starting with IPython 2.0 you should access the DOM via a local variable named <code>element</code> in which you can append whatever you like. This tag is invisible when empty and will be automatically shown when not empty (it use a css <code>:empty</code> pseudo selector to apply <code>display:none</code> css rule).</p>  <p>For compatibility reason the old methods might still work for IPython version 2.0.</p>"			2013-11-16 16:06:05.57 UTC
20028735	javascript|python	"Javascript bitwise operator ""<<"", "">>>"" to Python"	<p>Below are some javascript codes</p>  <pre><code>a &gt;&gt;&gt; (c -= 8)) % 256 a = (a &lt;&lt; 6) + f </code></pre>  <p>Is there any shortcut equivalent codes for those lines in Python?</p>	2013-11-17 08:28:40.07 UTC	20028760	"<p>Yes, there is. <a href=""https://wiki.python.org/moin/BitwiseOperators"" rel=""nofollow"">Python Bitwise Operators</a>.</p>  <p>From the Docs:</p>  <blockquote>   <p>The Operators:</p>      <p><strong>x &lt;&lt; y</strong></p>      <p>Returns x with the bits shifted to the left by y places (and new bits   on the right-hand-side are zeros). This is the same as multiplying x   by 2**y.</p>      <p><strong>x >> y</strong></p>      <p>Returns x with the bits shifted to the right by y places. This is the   same as //'ing x by 2**y.</p>      <p><strong>x &amp; y</strong></p>      <p>Does a ""bitwise and"". Each bit of the output is 1 if the corresponding   bit of x AND of y is 1, otherwise it's 0.</p>      <p><strong>x | y</strong></p>      <p>Does a ""bitwise or"". Each bit of the output is 0 if the corresponding   bit of x AND of y is 0, otherwise it's 1.</p>      <p><strong>~ x</strong></p>      <p>Returns the complement of x - the number you get by switching each 1   for a 0 and each 0 for a 1. This is the same as -x - 1.</p>      <p><strong>x ^ y</strong></p>      <p>Does a ""bitwise exclusive or"". Each bit of the output is the same as   the corresponding bit in x if that bit in y is 0, and it's the   complement of the bit in x if that bit in y is 1.</p> </blockquote>"			2013-11-17 08:32:33.35 UTC
20028735	javascript|python	"Javascript bitwise operator ""<<"", "">>>"" to Python"	<p>Below are some javascript codes</p>  <pre><code>a &gt;&gt;&gt; (c -= 8)) % 256 a = (a &lt;&lt; 6) + f </code></pre>  <p>Is there any shortcut equivalent codes for those lines in Python?</p>	2013-11-17 08:28:40.07 UTC	20028765	<p>There is no zero filled right shift operator <code>&gt;&gt;&gt;</code> in python and we can not use short hand assignment operator in expressions (like <code>c -= 8</code>). So it can be written like this</p>  <pre><code>(a &gt;&gt; (c - 8)) % 256 a = (a &lt;&lt; 6) + f </code></pre>			2013-11-17 08:33:39.273 UTC
20068215	javascript|python|functional-programming|higher-order-functions	Write pure and functional code in Python using the concept higher-order functions like in JavaScript	"<p>How would one use higher-order functions (functions returning other functions) in Python?</p>  <p>This is my JavaScript example, whose programming concept I would like to use in Python as well. Let's say, for example, that I would like to wrap a string in an HTML element. In JavaScript, it would look like this:</p>  <pre><code>var wrapInElement = function(ele) {     return function(inp) {         return ""&lt;"" + ele + ""&gt;"" + inp + ""&lt;/"" + ele + ""&gt;"";     }; }; </code></pre>  <p>And then I would use it like this:</p>  <pre><code>var names = [""Mike"", ""Tony"", ""John""]; names.map(wrapInElement(""p"")); </code></pre>  <p>How could this look like in Python? Is there a way to write functions that return customized functions like in the example above? One could also write a class in Python that accomplishes this task but wouldn't that be too much for such a basic task?</p>"	2013-11-19 09:51:43.853 UTC	20068336	"<p>In python, functions are first-class citizens, just like in javascript:</p>  <pre><code>def adder(n):     def add_func(x):         return x + n     return add_func  add3 = adder(3) print map(add3, [1,2,3])  # [4, 5, 6] </code></pre>  <p>This is not the only option, for example <code>adder</code> can also be written as:</p>  <pre><code>def adder(n):     return lambda x: x + n </code></pre>  <p>Note that functional style is not quite pythonic, when possible, we prefer comprehensions and generators over high-order functions:</p>  <pre><code>wrapped = [""&lt;p&gt;{}&lt;/p&gt;"".format(name) for name in names] </code></pre>"			2013-11-19 09:57:47.487 UTC
20068215	javascript|python|functional-programming|higher-order-functions	Write pure and functional code in Python using the concept higher-order functions like in JavaScript	"<p>How would one use higher-order functions (functions returning other functions) in Python?</p>  <p>This is my JavaScript example, whose programming concept I would like to use in Python as well. Let's say, for example, that I would like to wrap a string in an HTML element. In JavaScript, it would look like this:</p>  <pre><code>var wrapInElement = function(ele) {     return function(inp) {         return ""&lt;"" + ele + ""&gt;"" + inp + ""&lt;/"" + ele + ""&gt;"";     }; }; </code></pre>  <p>And then I would use it like this:</p>  <pre><code>var names = [""Mike"", ""Tony"", ""John""]; names.map(wrapInElement(""p"")); </code></pre>  <p>How could this look like in Python? Is there a way to write functions that return customized functions like in the example above? One could also write a class in Python that accomplishes this task but wouldn't that be too much for such a basic task?</p>"	2013-11-19 09:51:43.853 UTC	20078366	"<p>Your JavaScript example can be rewritten (arguably more cleanly) using <a href=""http://documentcloud.github.io/underscore/#partial"" rel=""nofollow"">partial application</a>:</p>  <pre><code>// depends on `_` -- see link above function wrapInElement(ele, inp) {     return ""&lt;"" + ele + ""&gt;"" + inp + ""&lt;/"" + ele + ""&gt;""; };  var f = _.partial(wrapInElement, ""p"")  ... then use f as a normal function ... </code></pre>  <p>And pretty much the same way in Python:</p>  <pre><code>from functools import partial  def wrap_in_element(ele, inp):     return ""&lt;%s&gt;%s&lt;/%s&gt;"" % (ele, inp, ele)  f = partial(wrap_in_element, ""p"")  ... then use f as a normal function ... </code></pre>  <p>While yes, one can use higher-order functions in both Python and JavaScript, if you find yourself <em>returning</em> functions in order to roll-your-own partial application mechanism, you should realize that this ugliness (which appears in both languages' examples) is not necessary thanks to the awesome libraries out there.</p>"			2013-11-19 17:44:44.087 UTC
20229554	javascript|python|google-app-engine|angularjs	saving javascript/angularjs null as python none using google app engine as datastore	"<p>I have a form which I save by calling a webservice using $http.get in angularjs.  If one of the input fields does not contain anything, the value is saved as null. And when I reload the page, the input field contains ""null"" replacing my placeholder-text. An example of one of my input fields is:</p>  <pre><code>&lt;input placeholder=""Notes"" type=""text"" ng-model=""notes""&gt; </code></pre>  <p>How do I save a null-value in a form, that does not overwrite the placeholder-text ?</p>  <p>thanks</p>  <p>Thomas</p>"	2013-11-26 22:42:49.587 UTC	20236781	<p>This should be handled in the read (server side) handler(get request to read).</p>			2013-11-27 07:55:24.183 UTC
20235516	javascript|jquery|python|html|flask	Passing variables from Flask (python) into a Javascript file separate from the HTML file	"<p>I know that you can simply call a variable from Flask by including <code>return render_template('index.html', variable=newvariable)</code> in the Python file and</p>  <pre><code>&lt;script&gt; var JSVAR = '{{ newvariable }}'; &lt;/script&gt; </code></pre>  <p>in the index.html file. But what if I want to pass that variable onto a purely Javascript file that's included within the index.html file? I'm thinking I need to create an HTML 'variable' of sorts using the id parameter then use jQuery to call it, but I can't figure out the syntax.</p>  <p>Any ideas?</p>"	2013-11-27 06:33:52.863 UTC	20235573	"<p>Exposing a function and making an ajax call to it isn't a bad way to go. That approach comes with the benefit of leaving a clear trail of function calls for maintainers.</p>  <p><a href=""http://api.jquery.com/jQuery.ajax/"" rel=""nofollow"">http://api.jquery.com/jQuery.ajax/</a></p>  <p><a href=""http://flask.pocoo.org/docs/patterns/jquery/"" rel=""nofollow"">http://flask.pocoo.org/docs/patterns/jquery/</a></p>  <p>The second link has a more detailed description, but the general idea is you have a Flask app set up to handle requests from the browser, and in that application you set up a method that can have requests sent to it that will take care of passing your variable back out to the js client.</p>  <p>In the js script you then make an ajax call to that method's url, and have a callback function that processes the response. This approach can do some really, really cool things.</p>  <p>If you're not familiar with ajax, it might be useful to Google some tutorials. This one is half way decent as an overview: <a href=""http://www.tutorialspoint.com/ajax/ajax_in_action.htm"" rel=""nofollow"">http://www.tutorialspoint.com/ajax/ajax_in_action.htm</a></p>"			2013-11-27 06:38:34.213 UTC
20235516	javascript|jquery|python|html|flask	Passing variables from Flask (python) into a Javascript file separate from the HTML file	"<p>I know that you can simply call a variable from Flask by including <code>return render_template('index.html', variable=newvariable)</code> in the Python file and</p>  <pre><code>&lt;script&gt; var JSVAR = '{{ newvariable }}'; &lt;/script&gt; </code></pre>  <p>in the index.html file. But what if I want to pass that variable onto a purely Javascript file that's included within the index.html file? I'm thinking I need to create an HTML 'variable' of sorts using the id parameter then use jQuery to call it, but I can't figure out the syntax.</p>  <p>Any ideas?</p>"	2013-11-27 06:33:52.863 UTC	46740412	"<p>Just came across this same issue, here is what I did</p>  <pre><code>from jinja2.environment import Template  def render_js():     file_content = open(path_to_jsfile, 'r').read()     template = Template(file_content)     return template.render(arg1='value1', arg2='value2') </code></pre>"			2017-10-14 02:58:39.84 UTC
20352479	javascript|python|json|web-services|jquery	send json object through javascript to python web service	"<p>I am trying to send a json object from javascript to a python webservice. But the service always treats it as a string. Below are the client and server side codes:</p>  <p>CLIENT SIDE:</p>  <pre><code>$(""#button"").click(function () {         $.ajax({             type: ""POST"",             url: ""http://localhost:8079/add"",             data: JSON.stringify([{'account_template': {                     'external_id': 'l10n_harec.a' + $(""input[id$=Text2]"").val(),                     'name': $(""input[id$=Text1]"").val(),                     'code': $(""input[id$=Text2]"").val(),                     'type': $(""select[id$=accountType]"").val(),                     'reconcile': $(""input[id$=Checkbox1]"").val()                 }, 'account_account': {                     'code': $(""input[id$=Text2]"").val(),                     'name': $(""input[id$=Text1]"").val(),                     'type': $(""select[id$=accountType]"").val(),                     'active': 'True',                     'reconcile': $(""input[id$=Checkbox1]"").val()                 }             }]),             dataType: ""json"",         });     }); </code></pre>  <p>SERVER SIDE:</p>  <pre><code>class add:             def POST(self):         i = web.input()         print i </code></pre>  <p>I can see the following on server side as a result:</p>  <p></p>  <p>Can anyone tel what is wrong here?</p>"	2013-12-03 13:27:12.737 UTC	20352598	"<p>I don't know what module you're using, but i expect it to always be passed as a string. If you expect a dictionary, you can use <a href=""http://docs.python.org/2/library/json.html#json.loads"" rel=""nofollow""><code>json.loads</code></a> to do that:</p>  <pre><code>import json i = json.loads(web.data()) print type(i) </code></pre>"			2013-12-03 13:33:45.85 UTC
20380697	javascript|python|web|screen-scraping	Web scraping a page with Javascript using Python	"<p>I am trying to scrape a web page that is a list of urls using Python. I can scrape the first page with no problem using Python and beautiful soup, however if the the url list is long it continues on a second page using the following JavaScript.</p>  <p>href=""javascript:__doPostBack('WQResultGridView','Page$2')</p>  <p>I don't know how to get to the second page.</p>"	2013-12-04 16:28:30.757 UTC	20380892	"<p>I guess this call would be translated into an http (post, as the name suggests) request.</p>  <p>look at firebug's 'net' tab for how that request is structured and run the same request using python.</p>  <p>another, more generic way to handle this would be to load the page and run the javascript it holds using a tool like <a href=""http://phantomjs.org/"" rel=""nofollow"">http://phantomjs.org/</a></p>"			2013-12-04 16:36:48.333 UTC
20441075	javascript|python|d3.js	Same data structure returned from javascript and python behaves differently in d3.js	"<p>When I am using this data structure from a javascript source file:</p>  <pre><code>var data = [{'x': 100, 'y': '65'},    {'x': 122, 'y': '57'},    {'x': 144, 'y': '101'},    {'x': 166, 'y': '87'},    {'x': 188, 'y': '8'},    {'x': 210, 'y': '180'},    {'x': 232, 'y': '132'},    {'x': 257, 'y': '190'},    {'x': 276, 'y': '210'},    {'x': 298, 'y': '150'}] </code></pre>  <p>and <code>alert</code> the data in my main file it shows:</p>  <pre><code>[object Object],[object Object],[object Object],[object Object],[object Object],[object Object],[object Object],[object Object],[object Object],[object Object] </code></pre>  <p>also it works fine with :</p>  <pre><code>alert(d3.max(data,function(d) { return d.count;})) </code></pre>  <p>But when I using a python as a source file and returns this :</p>  <pre><code> data = [{'x': 100, 'y': '65'},    {'x': 122, 'y': '57'},    {'x': 144, 'y': '101'},    {'x': 166, 'y': '87'},    {'x': 188, 'y': '8'},    {'x': 210, 'y': '180'},    {'x': 232, 'y': '132'},    {'x': 257, 'y': '190'},    {'x': 276, 'y': '210'},    {'x': 298, 'y': '150'}]  abc=json.dumps(data) print data </code></pre>  <p>The alert shows also the same:</p>  <pre><code>[object Object],[object Object],[object Object],[object Object],[object Object],[object Object],[object Object],[object Object],[object Object],[object Object] </code></pre>  <p>But this does not work:</p>  <pre><code>alert(d3.max(data,function(d) { return d.count;})) </code></pre>  <p>Here is my entire code</p>  <pre><code>function add_py() {  var count = $( ""#count"" ).val();     $.ajax({         type: ""get"",         url: ""abc.py"",         data: {'count': count},         datatype:""script"",         async: false,         success: function(response) {         var data= JSON.parse(response);          showGraph(data);         }, // success closed         error:function(xhr,err)         {             alert(""Error connecting to server, please contact system administator."");         }     })//ajax closed }   function  showGraph(de)  {   alert(de)    var mySVG = d3.select(""body"").append(""svg"");    mySVG  .attr(""width"", 500)  .attr(""height"", 500);    var heightScale = d3.scale.linear() .domain([0, 963]) .range([0, 400]);    alert(d3.max(de,function(d) { return d.count;}))   var heightScale = d3.scale.linear()   .domain([0, d3.max(de,function(d) { return d.count;})])   .range([0, 400]);    var myBars = mySVG.selectAll('circle') .data(de) .enter() .append('svg:circle');    myBars .attr('r',20);    myBars .attr('cx',function(d,i) {return (i * 22) + 100;}) .attr('cy',function(d,i) {return 400 - heightScale(d.count);});    } </code></pre>  <p>I understand a data from js and from python file may behave differently , but how to make python data working same like js data. Thanks in advance.</p>"	2013-12-07 11:57:58.683 UTC	20441305	"<p>I don't get exactly how are you mixing JavaScript and Python, I'll just assume you are trying to load the <code>data</code> object as a string from a Python program (perhaps via a server?). In this case, you need to parse the string and convert it to a JSON object (i.e., an internal JavaScript object) by doing this:</p>  <pre><code>data = JSON.parse(data) </code></pre>  <p>in your main file.</p>  <p>EDIT: also make sure that your Python program is outputting your dictionary as a valid JSON format, just <code>print</code>ing it won't work, you need something like <code>json.dumps(data)</code>.</p>"			2013-12-07 12:22:07.13 UTC
20448322	javascript|python|cookies|mechanize-python	How does one simulate the setting of a cookie by a javascript function in python mechanize?	"<p>I am trying to use python mechanize to login into and to step through a web site whose initial page has a warning that one must click on and acknowledge in order to be able to proceed to the login page. Clicking on the link activates a javascript function that sets a cookie and sends you to the login page.</p>  <p>The html for the warning is</p>  <pre><code>&lt;a id='has-seen-warning' class='button' href='/login/'&gt;I Agree&lt;/a&gt; </code></pre>  <p>and the javascript that sets the cookie is the following:</p>  <pre><code>&lt;script&gt;     $(function(){         var agreed_to_cookie = 'agreed_to_notice';         $('#has-seen-warning').click(function(){             $.cookie(agreed_to_cookie, 'True', {expires: 365, path:'/', secure: true});         });     }); &lt;/script&gt; </code></pre>  <p>Schematically, my python code looks as follows:</p>  <pre><code>import mechanize br = mechanize.Browser() url = ""https:/blah.blah/login"" # Call login page first time br.open(url) # but get request to agree to notice. # Set the cookie br.set_cookie(""agreed_to_cookie=True; expires=Sunday, 08-Dec-13 23:12:40 GMT"")  # call the log in page again br.open(url) </code></pre>  <p>How should I set the cookie so that it appears that I have read and clicked on the warning?</p>"	2013-12-08 00:11:09.317 UTC	20475641	"<p>You've replicated <code>Set-Cookie</code> string wrong. Try this</p>  <pre><code>// TODO: replace expiration date with your own br.set_cookie(""agreed_to_notice=True; path=/; expires=Sunday, 08-Dec-14 23:12:40 GMT; secure"") </code></pre>"			2013-12-09 16:31:47.573 UTC
20485779	javascript|python	Python vs javascript lists	"<p>I'm coming to javascript from a python background and wanted to ask about how to interpret some code i see.</p>  <p>In Python, I can get the following code/output:</p>  <p><strong>Python Code:</strong></p>  <pre><code>myarray = [""a"",""b"", ""c""] for item in myarray:    print (item) </code></pre>  <p><strong>Python Output</strong></p>  <pre><code>a b c </code></pre>  <p>In Javascript, this gives me something different:</p>  <p><strong>Javascript Code:</strong></p>  <pre><code>var myarray = [""a"",""b"",""c""] for(var item in myarray){   console.log(item) } </code></pre>  <p><strong>Javascript Output:</strong></p>  <pre><code>""0"" ""1"" ""2"" </code></pre>  <p>It's this interpretation that's confusing me. In python, the for loop naturally reads ""for every item in myarray, print item"". However in the Javascript version, it prints out ""0"", ""1"", ""2"". To get it correct, I would need to change the code to be:</p>  <pre><code>var myarray = [""a"",""b"",""c""] for(var item in myarray){   console.log(myarray[item]) } </code></pre>  <p>I wanted to ask what is the logic behind this as (at least to me, it doesn't seem as clear)? Also, why would my first way print the items out as strings?</p>  <p>Thank you for your help!</p>"	2013-12-10 03:58:48.123 UTC	20485922	"<p>A for...in loop does not iterate over non–enumerable properties. Objects created from built–in constructors like Array and Object have inherited non–enumerable properties from Object.prototype and String.prototype that are not enumerable, such as String's indexOf method or Object's toString method. The loop will iterate over all enumerable properties of the object itself and those the object inherits from its constructor's prototype (properties closer to the object in the prototype chain override prototypes' properties).</p>  <p>A for...in loop iterates over the properties of an object in an arbitrary order (see the delete operator for more on why one cannot depend on the seeming orderliness of iteration, at least in a cross-browser setting). If a property is modified in one iteration and then visited at a later time, its value in the loop is its value at that later time. A property that is deleted before it has been visited will not be visited later. Properties added to the object over which iteration is occurring may either be visited or omitted from iteration. In general it is best not to add, modify or remove properties from the object during iteration, other than the property currently being visited. There is no guarantee whether or not an added property will be visited, whether a modified property (other than the current one) will be visited before or after it is modified, or whether a deleted property will be visited before it is deleted.</p>"			2013-12-10 04:10:59.693 UTC
20485779	javascript|python	Python vs javascript lists	"<p>I'm coming to javascript from a python background and wanted to ask about how to interpret some code i see.</p>  <p>In Python, I can get the following code/output:</p>  <p><strong>Python Code:</strong></p>  <pre><code>myarray = [""a"",""b"", ""c""] for item in myarray:    print (item) </code></pre>  <p><strong>Python Output</strong></p>  <pre><code>a b c </code></pre>  <p>In Javascript, this gives me something different:</p>  <p><strong>Javascript Code:</strong></p>  <pre><code>var myarray = [""a"",""b"",""c""] for(var item in myarray){   console.log(item) } </code></pre>  <p><strong>Javascript Output:</strong></p>  <pre><code>""0"" ""1"" ""2"" </code></pre>  <p>It's this interpretation that's confusing me. In python, the for loop naturally reads ""for every item in myarray, print item"". However in the Javascript version, it prints out ""0"", ""1"", ""2"". To get it correct, I would need to change the code to be:</p>  <pre><code>var myarray = [""a"",""b"",""c""] for(var item in myarray){   console.log(myarray[item]) } </code></pre>  <p>I wanted to ask what is the logic behind this as (at least to me, it doesn't seem as clear)? Also, why would my first way print the items out as strings?</p>  <p>Thank you for your help!</p>"	2013-12-10 03:58:48.123 UTC	20486248	<p>Try this -:</p>  <pre><code>for(item in myarray){   console.log(myarray[item]) } </code></pre>  <p><code>item</code> will get index of <code>myarray</code>.</p>			2013-12-10 04:40:57.043 UTC
20485779	javascript|python	Python vs javascript lists	"<p>I'm coming to javascript from a python background and wanted to ask about how to interpret some code i see.</p>  <p>In Python, I can get the following code/output:</p>  <p><strong>Python Code:</strong></p>  <pre><code>myarray = [""a"",""b"", ""c""] for item in myarray:    print (item) </code></pre>  <p><strong>Python Output</strong></p>  <pre><code>a b c </code></pre>  <p>In Javascript, this gives me something different:</p>  <p><strong>Javascript Code:</strong></p>  <pre><code>var myarray = [""a"",""b"",""c""] for(var item in myarray){   console.log(item) } </code></pre>  <p><strong>Javascript Output:</strong></p>  <pre><code>""0"" ""1"" ""2"" </code></pre>  <p>It's this interpretation that's confusing me. In python, the for loop naturally reads ""for every item in myarray, print item"". However in the Javascript version, it prints out ""0"", ""1"", ""2"". To get it correct, I would need to change the code to be:</p>  <pre><code>var myarray = [""a"",""b"",""c""] for(var item in myarray){   console.log(myarray[item]) } </code></pre>  <p>I wanted to ask what is the logic behind this as (at least to me, it doesn't seem as clear)? Also, why would my first way print the items out as strings?</p>  <p>Thank you for your help!</p>"	2013-12-10 03:58:48.123 UTC	20485818	"<p>Your JavaScript code shows a means of iterating an Array that should rarely be used. You should use a <code>for</code> statement. </p>  <pre><code>var myarray = [""a"",""b"",""c""] for(var i = 0; i &lt; myarray.length; i++){   console.log(i, myarray[i]) } </code></pre>  <p>The reason is that <code>for-in</code> is a general property enumerator. It includes all properties of the object, both owned and inherited, and isn't constrained to numeric indices. As such, it will include all owned or inherted enumerable properties that you may have included.</p>  <p>Additionally, <code>for-in</code> makes no guarantees of the order of enumeration. Therefore, you can't be certain that you'll get a desired ascending sequence.</p>  <hr>  <p>All keys of Objects in JavaScript are strings, and Arrays are just another type of Object. That's why <code>for-in</code> gives you strings for its keys, and that's why a <code>for-in</code> works on Arrays.</p>  <p>Typically the <code>for-in</code> would be used for Objects, as in:</p>  <pre><code>var myobject = {     foo: ""bar"",     baz: ""buz"" }  for (var p in myobject) {     console.log(p, myobject[p]); } </code></pre>  <hr>  <p>So yes it ""works"", in the sense that the <code>for-in</code> statement doesn't reject the Array object. But if the goal is to have an iteration of numeric indices in a predictable sequence, then <code>for-in</code> just isn't the right tool.</p>  <hr>  <p>If you're simply after a nicer syntax, ECMAScript 5 added several Array iteration methods that accept a callback function that is invoked for each existing member.</p>  <p>The <code>.forEach()</code> method is one example.</p>  <pre><code>myarray.forEach(function(item, i) {     console.log(item, i); }); </code></pre>"			2013-12-10 04:02:31.667 UTC
20575139	javascript|python|prompt	JavaScript prompt in Python	"<p>How can I replicate a JS prompt in Python? I've been trying to do this -- go through a course on one programming language and replicate the code in another language (the only two I'm very good at are JavaScript and Python, so those are the two I've been working with). I looked around on Google and on StackOverflow, but I haven't really found anything that answers the question that I have.</p>  <p>I want to replicate this:</p>  <pre><code>var candy = prompt(""What's your favorite candy?"",  ""Type your favorite candy here.""); </code></pre>  <p>in Python, but make it as Pythonic as possible and if at all possible not have to import anything, ESPECIALLY not Tkinter. </p>  <p>JavaScript:</p>  <pre><code>var candy = prompt(""What's your favorite candy?"",  ""Type your favorite candy here."");  switch(candy)  { case 'licorice':     console.log(""Gross!"");     break; case 'gum':     console.log(""I like gum."");     break; case 'beets':     console.log(""...Is that even a candy?"");     break; default:     console.log(""Please tell us your favorite candy""); } </code></pre>  <p>Python - throws <code>EOFError</code> on line 1 in Sublime (?); works in Terminal. This means that there must be something wrong. I was using <code>if</code>/<code>elif</code>/<code>else</code> statements, <code>print</code>, and <code>break</code>. </p>  <p>I could be messing that up as well. Beginner mistakes and whatnot. </p>"	2013-12-13 20:10:52.323 UTC	20575280	"<p>There isn't really a way to replicate the JavaScript prompt in Python. The only way to get any kind of GUI is to use Tkinter or something similar. As Oscar said though you can use: </p>  <pre><code>var candy = raw_input(""What's Your Favorite Candy?"") </code></pre>  <p>This will give the user a text prompt on screen, not a pop-up type of prompt like in JavaScript.</p>"			2013-12-13 20:19:29.31 UTC
20590671	javascript|python|ajax|google-app-engine	Call python function with javascript and display returned string on web page	"<p>I have a simple appengine/python application that allows the user to click a button to display a random-generated sentence. So far, I have pieced together the main python file as follows:</p>  <pre><code>import jinja2 import os import webapp2 import generator  # My random sentence generator module; its make_sentence() function returns a string  class MainPage(webapp2.RequestHandler):        def get(self):           template = jinja_environment.get_template('main.html')           self.response.out.write(template.render(dict(sentence = generator.make_sentence())))    jinja_environment = jinja2.Environment(       loader=jinja2.FileSystemLoader(os.path.dirname(__file__))   )    application = webapp2.WSGIApplication([       ('/', MainPage),   ], debug=True) </code></pre>  <p>In main.html:</p>  <pre><code>   &lt;!DOCTYPE html&gt;    &lt;html&gt;      &lt;head&gt;        &lt;meta name=""viewport"" content=""width=device-width, initial-scale=1.0""&gt;        &lt;link rel=""stylesheet"" href=""//netdna.bootstrapcdn.com/bootstrap/3.0.2/css/bootstrap.min.css""&gt;        &lt;link rel=""stylesheet"" href=""css/custom.css""&gt;        &lt;title&gt;Random Sentence Generator&lt;/title&gt;      &lt;/head&gt;      &lt;body&gt;       &lt;div class=""jumbotron""&gt;         &lt;p class=""lead""&gt;{{ sentence }}&lt;/p&gt;         &lt;a class=""btn-lg btn-info"" onclick=""makeSentence();return false;"" href=""#""&gt;Generate sentence!&lt;/a&gt;       &lt;/div&gt;        &lt;script&gt;             function makeSentence(){             location.reload();          }       &lt;/script&gt;       &lt;script src=""http://code.jquery.com/jquery.js""&gt;&lt;/script&gt;       &lt;script src=""//netdna.bootstrapcdn.com/bootstrap/3.0.2/js/bootstrap.min.js""&gt;&lt;/script&gt;     &lt;/body&gt;   &lt;html&gt; </code></pre>  <p>In case it will be important for the question, here is app.yaml as well:</p>  <pre><code>   application: sentence-generator    version: 1    runtime: python27    api_version: 1    threadsafe: true     handlers:    - url: /css      static_dir: css    - url: /.*     script: sengen.application    libraries:   - name: jinja2     version: latest </code></pre>  <p>This works okay (in fact, one can try it out <a href=""http://sentence-generator.appspot.com/"" rel=""nofollow noreferrer"">here</a> :-) ), but I would like to be able to generate a new sentence without refreshing the page each time. </p>  <p>From <a href=""https://stackoverflow.com/questions/15151133/execute-a-python-script-on-button-click"">this question</a>, it looks like I can use Ajax for this. But I'm not sure how to put it all together. I'm thinking I can replace the contents of <code>makeSentence()</code> with something like the top answer in the previous link, but I'm not sure how to incorporate the ""response"" with what I display on the web page.</p>"	2013-12-15 02:45:15.747 UTC	20590964	"<p>You are on the right track. Instead of calling location.reload(), you can use ajax to get the output and put it in the paragraph instead. To begin with, put an identifier to the paragraph where you place your sentence:</p>  <pre><code> &lt;p id=""sen1"" class=""lead""&gt;{{ sentence }}&lt;/p&gt; </code></pre>  <p>Now all that remains is using AJAX to get your current page output and display it in sen1. You can do something like this in makeSentence. (This will alert the response of your main page reload in ajax. You might want to extract the infomation you need from it.)</p>  <pre><code>    function makeSentence() {      $.ajax({           url:'http://sentence-generator.appspot.com'        }      )      .done(function(data) {          alert(data);          })     .fail(function(){         alert('error');         })     .always(function(){         //alert('always');         })         ;     } </code></pre>"			2013-12-15 03:43:14.37 UTC
20639880	javascript|python|encryption	Encode in Python and decrypt in Javascript	"<p>I've searched for this, there are lots of hits, but I can't find one that is neither complete (pulls all the bits together) nor says its a bad idea, use HTTP. I've tried lots of things based on the hits I've found, but I can't get it to work.</p>  <p>The target problem is to AES encrypt textual data at one place, send it to a web API where it is stored in a database, then retrieve from the database via another API and decode it in the browser. This is not for security in transmission, it is so that, if the originator and the receiver know the key and IV, then it can be stored without the server knowing what the real content is.</p>  <p>The originator code is python, and the web API is python, so to make life easier initially, I'm storing the content unencrypted in the database. I've done AES encrypt/decrypt in python before, so that's not an issue. What I'm trying to do is encrypt in python as the content comes out of the database, transmit it, then decrypt in javascript. I've been using the python 'from Crypto.Cipher import AES' code, and javascript CryptoJS implementation from code.google.com</p>  <p>I'm happy at this stage to write the key and the IV into the code, distribution isn't really a problem as the originator and the client browser are effectively the same system.</p>  <p>I've not added any code because I think it would be more trouble than its worth at this stage.</p>  <p>Thanks in advance!</p>  <p>OK, some code. On the server python(3) side:</p>  <pre><code>text = 'This is a message' key = 'This is a key123' iv = 'This is an IV456' text += (16 - len(text) % 16) * ' '  # Pad to 16 chars, spaces are OK here aes = AES.new(key, AES.MODE_CBC, iv) enc = base64.b64encode(aes.encrypt(text)).decode() print(enc) </code></pre>  <p>enc is passed along with other data, JSON encoded, as the response to an AJAX request. On the client javascript side:</p>  <pre><code>enc = /* from JSON */ ; console.log(enc) ; key = 'This is a key123'; iv  = 'This is an IV456'; text = CryptoJS.AES.decrypt(Base64.decode(enc), key,            { iv: iv, mode: CryptoJS.mode.CBC })) ; console.log(text) </code></pre>  <p>The python print(enc) and the javascript console.log(env) are the same, so I know the b64'd encoded data is coming over OK. The console.log(text) (in Chrome) shows as </p>  <pre><code>l.WordArray.t.extend.init { ... }' </code></pre>  <p>and not 'This is a message'. So why not!</p>"	2013-12-17 16:45:18.297 UTC	20644581	"<p><strong>Solved, but another mystery</strong></p>  <p>I used the code from this gist:</p>  <p><a href=""https://gist.github.com/andres-erbsen/1307675"" rel=""nofollow"">https://gist.github.com/andres-erbsen/1307675</a></p>  <p>But: this uses code from <a href=""http://crypto-js.googlecode.com/files/"" rel=""nofollow"">http://crypto-js.googlecode.com/files/</a>... which is not what you get from the download at <a href=""https://code.google.com/p/crypto-js/downloads/list"" rel=""nofollow"">https://code.google.com/p/crypto-js/downloads/list</a>. The gist code uses Crypto.xxxx names; the download code uses CryptoJS.xxxx names. The gist is 2 years old, has CryptoJS replaced Crypto maybe?</p>"			2013-12-17 21:01:51.283 UTC
20646688	serial-port|arduino	Javascript to Python to serial	"<p>I need a solution to my problem. I'm building a arduino robot which I plan to connect to Openwrt router. The plan is to control the robot over browser. I have running python and pyserial on my router and a webserver. The first option is to use php to serial(i have done it before turning leds on and off) the problem with that solution is that I cant just hold the button/key so the motor is turning I can only press the button and order the motors to turn some distance then again but no continuous motion. Hope you understand what I mean, if Im wrong please correct me. </p>  <p>So the other plan is to use Javascript to detect when the key is pressed with the keydown event something like this </p>  <pre><code>    function checkKey(e) { switch (e.keyCode) { case 40:     //alert('down');     $('#cube').animate({         top: ""+=20px""     })     break; case 38:     //alert('up');     $('#cube').animate({         top: ""-=20px""     })     break; case 37:     //alert('left');     $('#cube').animate({         left: ""-=20px""     })     break; case 39:     //alert('right');     $('#cube').animate({         left: ""+=20px""     })     break; default:     alert('???'); } }  $(document).on(""keyup"", function() { $(""#cube"").stop(true); });   if ($.browser.mozilla) {     $(document).keydown(checkKey); } else { $(document).keydown(checkKey); }  </code></pre>  <p><a href=""http://jsfiddle.net/LjGRe/"" rel=""nofollow"">http://jsfiddle.net/LjGRe/</a> but the problem here is that I dont know how to send the variable from javascript to python. </p>  <p>Please if there is a solution to my problem point me to it. Thank you.</p>"	2013-12-17 23:18:41.103 UTC	20662065	"<p>javascript is client-side, phyton is server side, so you need to send a form every time you want to communicate the data. As you can see that is really slow, as an http call have to be made for every request. Infact http protocol is not good fore real time purpoise.</p>  <p>You can write custom server/client protocol over TCP or UDP, as those protocol give almost-real time response, because with TCP you start a connection and keep alive it, and UDP is connection-less. Then, you can use socket in http page (it is what ajax do) but it reque a lot of skill to keep it smooth and functional.</p>"			2013-12-18 15:27:57.157 UTC
20802108	javascript|python|forms|get|python-requests	How to submit a javascript-form using Python requests library?	"<p>I want to get some price quotes from a bitcoin exchange called bitonic(.nl). On their frontpage they´ve got a little form on which you can fill in either an amount in Bitcoins or in Euros. If you fill in the bitcoin field the Euro-field gets updated, and if you enter an amount in Euros the Bitcoin-field gets updated (probably using javascript).</p>  <p>I now want to use the Python requests library to fill in the form and read out the resulting quote. I know how to request a page with requests (<code>r = requests.get('http://bitconic.nl')</code>), and I know you can do a similar thing using <code>requests.post()</code>. The problem is now that I don't know how to fill in this form and read out the result when the form is filled in using javascript.</p>  <p>Does anybody have any idea how I could do this? All tips are welcome!</p>"	2013-12-27 14:07:52.517 UTC	20802297	"<p>You can also download bitcoin quotes from here for free:</p>  <pre><code>http://www.quandl.com/markets/bitcoin </code></pre>  <p>The data is updated daily for several exchanges and different currencies, and is very ""download"" friendly. No registration needed if you need less than 50 requests per day.</p>  <p>Here is an API description on how to get the data:</p>  <pre><code>http://www.quandl.com/help/api </code></pre>  <p>Getting bitcoin quotes in csv is as easy as:</p>  <pre><code>http://www.quandl.com/api/v1/datasets/BITCOIN/BTCDEEUR.csv </code></pre>  <p>Regards.</p>"			2013-12-27 14:22:03.063 UTC
20802108	javascript|python|forms|get|python-requests	How to submit a javascript-form using Python requests library?	"<p>I want to get some price quotes from a bitcoin exchange called bitonic(.nl). On their frontpage they´ve got a little form on which you can fill in either an amount in Bitcoins or in Euros. If you fill in the bitcoin field the Euro-field gets updated, and if you enter an amount in Euros the Bitcoin-field gets updated (probably using javascript).</p>  <p>I now want to use the Python requests library to fill in the form and read out the resulting quote. I know how to request a page with requests (<code>r = requests.get('http://bitconic.nl')</code>), and I know you can do a similar thing using <code>requests.post()</code>. The problem is now that I don't know how to fill in this form and read out the result when the form is filled in using javascript.</p>  <p>Does anybody have any idea how I could do this? All tips are welcome!</p>"	2013-12-27 14:07:52.517 UTC	20802202	"<p>I originally assumed that a simple form like this would not involve any HTTP request at all, and be done exclusively in (non-Ajax) Javascript. However, it does appear to make an HTTP request, so you <em>can</em> use <code>requests</code> to do the same thing.</p>  <pre><code>response = requests.post('https://bitonic.nl/json/', data={'part': 'rate_convert', 'check': 'euros', 'euros': 46}) print response.json() </code></pre>"			2013-12-27 14:16:41.653 UTC
