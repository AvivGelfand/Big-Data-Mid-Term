27917471	javascript|python|flask	Pass parameter with Python Flask in external Javascript	"<p>I use Python Flask for my website and I pass several parameters to Javascript. This is my code:</p>  <pre><code>from flask import Flask from flask import render_template  app = Flask(__name__)   @app.route(""/"") def index():      return render_template(""index.html"", param1=""Hello"")   &lt;html&gt;    &lt;head&gt;    &lt;/head&gt;    &lt;body&gt;       &lt;p&gt;Hello World&lt;/p&gt;    &lt;/body&gt;    &lt;script&gt;console.log({{param1}})&lt;/script&gt; &lt;/html&gt; </code></pre>  <p>With this way, it works without a problem. The example is a simplified of my own. But, if I want to have the script on an external file and call it like this:</p>  <pre><code>&lt;html&gt;    &lt;head&gt;    &lt;/head&gt;    &lt;body&gt;       &lt;p&gt;Hello World&lt;/p&gt;    &lt;/body&gt;    &lt;script src=""/static/js/myjs.js""&gt;&lt;/script&gt; &lt;/html&gt; </code></pre>  <p>And the <code>myjs.js</code> file is the <code>console.log({{param1}})</code>, then it doesn't work. So, is there any way to pass parameters in external Javascript files with Python Flask?</p>"	2015-01-13 08:08:05.943 UTC	40097389	"<p>I used a different way to load a javascript file specified in html page:</p>  <p>Firstly, I define some variables inside <code>&lt;head&gt;&lt;/head&gt;</code> tags, and so I call my javascript file:</p>  <pre><code>&lt;head&gt; ... &lt;script src=""/static/js/jquery.js""&gt;&lt;/script&gt; &lt;script  type=text/javascript&gt;     $(document).ready(function() {         $link_subcat = ""{{ url_for('load_subcategories') }}"";         $link_cat = ""{{ url_for('load_categories') }}"";     }); &lt;/script&gt;  &lt;script src=""{{ url_for('static', filename='finances.js') }}""&gt;&lt;/script&gt; ... </code></pre>  <p>This is my javascript file content:</p>  <pre><code>$(document).ready(function() {      $(""#category"").change(function() {         $.ajax({             type: ""POST"",             url: $link_subcat,             data: {cat: $(this).val()},             success: function(data) {                 $(""#subcategory"").html(data);             }         });     });      $(""input[name=type]"").change(function() {         $.ajax({             type: ""POST"",             url: $link_cat,             data: {type: $('input[name=""type""]:checked').val()},             success: function(data) {                 $(""#category"").html(data);             }         });     });  }); </code></pre>  <p>This approach works for me.</p>"			2016-10-17 23:49:59.1 UTC
27917471	javascript|python|flask	Pass parameter with Python Flask in external Javascript	"<p>I use Python Flask for my website and I pass several parameters to Javascript. This is my code:</p>  <pre><code>from flask import Flask from flask import render_template  app = Flask(__name__)   @app.route(""/"") def index():      return render_template(""index.html"", param1=""Hello"")   &lt;html&gt;    &lt;head&gt;    &lt;/head&gt;    &lt;body&gt;       &lt;p&gt;Hello World&lt;/p&gt;    &lt;/body&gt;    &lt;script&gt;console.log({{param1}})&lt;/script&gt; &lt;/html&gt; </code></pre>  <p>With this way, it works without a problem. The example is a simplified of my own. But, if I want to have the script on an external file and call it like this:</p>  <pre><code>&lt;html&gt;    &lt;head&gt;    &lt;/head&gt;    &lt;body&gt;       &lt;p&gt;Hello World&lt;/p&gt;    &lt;/body&gt;    &lt;script src=""/static/js/myjs.js""&gt;&lt;/script&gt; &lt;/html&gt; </code></pre>  <p>And the <code>myjs.js</code> file is the <code>console.log({{param1}})</code>, then it doesn't work. So, is there any way to pass parameters in external Javascript files with Python Flask?</p>"	2015-01-13 08:08:05.943 UTC	27926189	"<p>If you want to render a file with Jinja, you need to call <code>render_template</code> on it and pass it the desired values.  Just linking directly to a static file obviously doesn't do that.  One solution is to use Jinja's <a href=""http://jinja.pocoo.org/docs/dev/templates/#include"" rel=""noreferrer""><code>include</code></a> block.  This requires that 'myjs.js' is in the 'templates/js' folder, and will include it in the rendered template, passing all the templates context to the included template.</p>  <pre><code>&lt;script&gt;{% include 'js/myjs.js' %}&lt;/script&gt; </code></pre>  <p>The <strong>better</strong> solution is to not require rendering the js on every request, and instead passing parameters to js functions from your template.</p>  <pre class=""lang-html prettyprint-override""><code>&lt;script src=""{{ url_for('static', filename='js/myjs.js') }}""&gt;&lt;/script&gt; &lt;script&gt;     my_func({{ my_var|tojson }}); &lt;/script&gt; </code></pre>"			2015-01-13 15:56:57.9 UTC
27954723	javascript|python|selenium|beautifulsoup|python-requests	Clicking a Javascript link to make a post request in Python	"<p>I'm writing a webscraper/automation tool. This tool needs to use POST requests to submit form data. The final action uses this link:</p>  <pre><code>&lt;a id=""linkSaveDestination"" href='javascript:WebForm_DoPostBackWithOptions(new WebForm_PostBackOptions(""linkSaveDestination"", """", true, """", """", false, true))'&gt;Save URL on All Search Engines&lt;/a&gt; </code></pre>  <p>to submit data from this form:</p>  <pre><code>&lt;input name=""sem_ad_group__destination_url"" type=""text"" maxlength=""1024"" id=""sem_ad_group__destination_url"" class=""TextValueStyle"" style=""width:800px;""&gt; </code></pre>  <p>I've been using requests and BeautifulSoup. I understand that these libraries can't interact with Javascript, and people recommend Selenium. But as I understand it Selenium can't do POSTs. How can I handle this? Is it possible to do without opening an actual browser like Selenium does?</p>"	2015-01-15 00:02:58.37 UTC	27954747	"<p>With <code>selenium</code> you mimic the real-user interactions in a real browser - tell it to locate an input, write a text inside, click a button etc - high-level approach - you don't even need to know what is there under-the-hood, you see what a real user sees. The downside here is that there is a real browser involved which, at least, slows things down. You can though, automate a a <em>headless browser</em> (<a href=""https://code.google.com/p/selenium/source/browse/#git%2Fpy%2Fselenium%2Fwebdriver%2Fphantomjs"" rel=""nofollow""><code>PhantomJS</code></a>), or use a <a href=""http://en.wikipedia.org/wiki/Xvfb"" rel=""nofollow""><em><code>Xvfb</code> virtual framebuffe</em>r</a> if you don't have conditions to open up a browser with a UI. Example:</p>  <pre><code>from selenium import webdriver  driver = webdriver.PhantomJS() driver.get('url here')  button = driver.find_element_by_id('linkSaveDestination') button.click() </code></pre>  <p>With <code>requests+BeautifulSoup</code>, you are going down to the bare metal - using browser developer tools you research/analyze what requests are made to a server and mimic them in your code. Sometimes the way a page is constructed and requests made are too complicated to automate, or there are anti-web-scraping technique used.</p>  <p>There are pros &amp; cons about both approaches - which option to choose depends on many things.</p>"			2015-01-15 00:05:18.383 UTC
27954723	javascript|python|selenium|beautifulsoup|python-requests	Clicking a Javascript link to make a post request in Python	"<p>I'm writing a webscraper/automation tool. This tool needs to use POST requests to submit form data. The final action uses this link:</p>  <pre><code>&lt;a id=""linkSaveDestination"" href='javascript:WebForm_DoPostBackWithOptions(new WebForm_PostBackOptions(""linkSaveDestination"", """", true, """", """", false, true))'&gt;Save URL on All Search Engines&lt;/a&gt; </code></pre>  <p>to submit data from this form:</p>  <pre><code>&lt;input name=""sem_ad_group__destination_url"" type=""text"" maxlength=""1024"" id=""sem_ad_group__destination_url"" class=""TextValueStyle"" style=""width:800px;""&gt; </code></pre>  <p>I've been using requests and BeautifulSoup. I understand that these libraries can't interact with Javascript, and people recommend Selenium. But as I understand it Selenium can't do POSTs. How can I handle this? Is it possible to do without opening an actual browser like Selenium does?</p>"	2015-01-15 00:02:58.37 UTC	27955935	"<p>Yes. You can absolutely duplicate what the link is doing by just submitting a POST to the proper url (this is, in reality, eventually going to be the same thing that the javascript that fires when the link is clicked does).</p>  <p>You'll find the relevant section in the requests docs here: <a href=""http://docs.python-requests.org/en/latest/user/quickstart/#more-complicated-post-requests"" rel=""noreferrer"">http://docs.python-requests.org/en/latest/user/quickstart/#more-complicated-post-requests</a></p>  <p>So, that'll look something like this for your particular case:</p>  <pre><code>payload = {'sem_ad_group__destination_url': 'yourTextValueHere'} r = requests.post(""theActionUrlForTheFormHere"", data=payload) </code></pre>  <p>If you're having trouble figuring out what url it is actually be posted to, just monitor the network tab (in chrome dev tools) while you manually click the link yourself, you should be able to find the right request and pull any information off of that.</p>  <p>Good Luck!</p>"			2015-01-15 02:34:39.02 UTC
27967988	javascript|python|loops|for-loop|iterator	Is there a JavaScript equivalent to Python's for loops?	"<p>So I was dissapointed to find out that JavaScript's <code>for ( var in array/object)</code> was not equivalent to pythons <code>for var in list:</code>. </p>  <p>In JavaScript you are iterating over the indices themselves e.g. </p>  <pre><code>0,  1, 2, ...  </code></pre>  <p>where as with Python, you are iterating over the values pointed to by the indices e.g.  </p>  <pre><code>""string var at index 0"",  46,  ""string var at index 2"", [""array"",""of"",""values""], ... </code></pre>  <p>Is there a standard JavaScript equivalent to Python's looping mechanism?</p>  <h1>Disclaimer:</h1>  <blockquote>   <p>I am aware that the for (var in object) construct is meant to be used to iterate over keys in a dictionary and not generally over indices of an array. I am asking a specific question that pertains to use cases in which I do not care about order(or very much about speed) and just don't feel like using a while loop.</p> </blockquote>"	2015-01-15 16:18:29.42 UTC	27968182	"<p>for an array the most similar is the forEach loop (of course index is optional)</p>  <pre><code>[1,2,3,4,].forEach(function(value,index){   console.log(value);   console.log(index); }); </code></pre>  <p>So you will get the following output:</p>  <pre><code>1 0 2 1 3 2 4 3 </code></pre>"			2015-01-15 16:27:56.947 UTC
27967988	javascript|python|loops|for-loop|iterator	Is there a JavaScript equivalent to Python's for loops?	"<p>So I was dissapointed to find out that JavaScript's <code>for ( var in array/object)</code> was not equivalent to pythons <code>for var in list:</code>. </p>  <p>In JavaScript you are iterating over the indices themselves e.g. </p>  <pre><code>0,  1, 2, ...  </code></pre>  <p>where as with Python, you are iterating over the values pointed to by the indices e.g.  </p>  <pre><code>""string var at index 0"",  46,  ""string var at index 2"", [""array"",""of"",""values""], ... </code></pre>  <p>Is there a standard JavaScript equivalent to Python's looping mechanism?</p>  <h1>Disclaimer:</h1>  <blockquote>   <p>I am aware that the for (var in object) construct is meant to be used to iterate over keys in a dictionary and not generally over indices of an array. I am asking a specific question that pertains to use cases in which I do not care about order(or very much about speed) and just don't feel like using a while loop.</p> </blockquote>"	2015-01-15 16:18:29.42 UTC	27968439	"<p>I'm not sure I see MUCH difference. It's easy to access the value at a given index/key</p>  <pre><code>var list = [1,2,3,4,5];  // or...  var list = {a: 'foo', b: 'bar', c: 'baz'}; for (var item in list) console.log(list[item]); </code></pre>  <p>and as mentioned, you could use forEach for arrays or objects... heres an obj:</p>  <pre><code>var list = {a: 'foo', b: 'bar', c: 'baz'};   Object.keys(list).forEach(function(key, i) {     console.log('VALUE: \n' + JSON.stringify(list[key], null, 4)); }); </code></pre>"			2015-01-15 16:39:50.357 UTC
27967988	javascript|python|loops|for-loop|iterator	Is there a JavaScript equivalent to Python's for loops?	"<p>So I was dissapointed to find out that JavaScript's <code>for ( var in array/object)</code> was not equivalent to pythons <code>for var in list:</code>. </p>  <p>In JavaScript you are iterating over the indices themselves e.g. </p>  <pre><code>0,  1, 2, ...  </code></pre>  <p>where as with Python, you are iterating over the values pointed to by the indices e.g.  </p>  <pre><code>""string var at index 0"",  46,  ""string var at index 2"", [""array"",""of"",""values""], ... </code></pre>  <p>Is there a standard JavaScript equivalent to Python's looping mechanism?</p>  <h1>Disclaimer:</h1>  <blockquote>   <p>I am aware that the for (var in object) construct is meant to be used to iterate over keys in a dictionary and not generally over indices of an array. I am asking a specific question that pertains to use cases in which I do not care about order(or very much about speed) and just don't feel like using a while loop.</p> </blockquote>"	2015-01-15 16:18:29.42 UTC	27968364	"<p>In the next version of ECMAScript (ECMAScript6 aka Harmony) will be <a href=""http://tc39wiki.calculist.org/es6/for-of/"" rel=""noreferrer"">for-of construct</a>:</p>  <pre><code>for (let word of [""one"", ""two"", ""three""]) {   alert(word); } </code></pre>  <p><code>for-of</code> could be used to iterate over various objects, Arrays, Maps, Sets and custom iterable objects. In that sense it's very close to Python's <code>for-in</code>.</p>"			2015-01-15 16:36:25.07 UTC
28035906	python|selenium	Selenium Python Clicking Button on Javascript Popup Does Nothing	"<p>I have a relatively simple question.  I am trying to get a button to be clicked on a popup window that I believe is javascript with Selenium.  I ran the Selenium add on for Firefox and it gave me code, but it doesn't work.  The code is fairly long and all works just fine, but when it gets to this line:</p>  <pre><code>driver.find_element_by_id(""cancelExistingReservationButton"").click() </code></pre>  <p>It just waits and then it errors out with this message:</p>  <p>That button is on the screen, but it never gets clicked.  I know that the part of the code works that follows it, but I just can't get it to do anything with that line.</p>  <pre><code>    Traceback (most recent call last):   File ""C:/Users/Bradley/Desktop/testParkFare.py"", line 34, in test_park_fare     driver.find_element_by_id(""cancelExistingReservationButton"").click()   File ""C:\Python27\lib\site-packages\selenium\webdriver\remote\webelement.py"", line 65, in click     self._execute(Command.CLICK_ELEMENT)   File ""C:\Python27\lib\site-packages\selenium\webdriver\remote\webelement.py"", line 385, in _execute     return self._parent.execute(command, params)   File ""C:\Python27\lib\site-packages\selenium\webdriver\remote\webdriver.py"", line 171, in execute     response = self.command_executor.execute(driver_command, params)   File ""C:\Python27\lib\site-packages\selenium\webdriver\remote\remote_connection.py"", line 349, in execute     return self._request(command_info[0], url, body=data)   File ""C:\Python27\lib\site-packages\selenium\webdriver\remote\remote_connection.py"", line 380, in _request     resp = self._conn.getresponse()   File ""C:\Python27\lib\httplib.py"", line 1074, in getresponse     response.begin()   File ""C:\Python27\lib\httplib.py"", line 415, in begin     version, status, reason = self._read_status()   File ""C:\Python27\lib\httplib.py"", line 379, in _read_status     raise BadStatusLine(line)     BadStatusLine: '' </code></pre>  <p>Any help you could give would be really appreciated.</p>  <p>Here is the entirety of the code:</p>  <pre><code>from selenium import webdriver from selenium.webdriver.common.by import By from selenium.webdriver.common.keys import Keys from selenium.webdriver.support.ui import Select from selenium.webdriver.common.action_chains import ActionChains from selenium.webdriver.common.by import By from selenium.webdriver.support.ui import WebDriverWait from selenium.webdriver.support import expected_conditions as EC   from selenium.common.exceptions import NoSuchElementException from selenium.common.exceptions import NoAlertPresentException import unittest, time, re  class Test2(unittest.TestCase):     def setUp(self):         self.driver = webdriver.Firefox()         self.driver.maximize_window()         self.driver.implicitly_wait(60)         self.base_url = ""https://disneyworld.disney.go.com""         self.verificationErrors = []         self.accept_next_alert = True      def test_2(self):         driver = self.driver         driver.get(self.base_url + ""/dining/grand-floridian-resort-and-spa/1900-park-fare/"")         driver.find_element_by_xpath(""(//button[@type='button'])[2]"").click()         driver.find_element_by_link_text('27').click()         driver.find_element_by_css_selector(""div.select-toggle.hoverable"").click()         driver.find_element_by_id('diningAvailabilityForm-searchTime-0').click()         driver.find_element_by_css_selector(""#partySize-wrapper &gt; div.select-toggle.hoverable"").click()         driver.find_element_by_id(""partySize-3"").click()         driver.find_element_by_css_selector(""span.buttonText"").click()         availabletimes = driver.find_element_by_xpath('//*[@id=""timesContainer""]/div[2]').get_attribute(""innerHTML"")          availableTimesList = []          startpoint = availabletimes.find(""buttonText"")+12         endpoint = availabletimes.find(""span"", startpoint)-2          allwantedtimes = ['8:45 AM', '8:40 AM', '8:50 AM', '8:55 AM', '8:35 AM', '8:30 AM', '8:25 AM', '8:20 AM',                           '9:00 AM', '9:05 AM', '9:15 AM', '9:20 AM']          positions = [""//div[@id='timesContainer']/div[2]/a/span/span/span"",                      ""//div[@id='timesContainer']/div[2]/a[2]/span/span/span"",                      ""//div[@id='timesContainer']/div[2]/a[3]/span/span/span""]          while startpoint &gt; 500:             availableTimesList.append(availabletimes[startpoint: endpoint])             startpoint = availabletimes.find(""buttonText"", endpoint)+12             endpoint = availabletimes.find(""span"", startpoint)-2           if len(availableTimesList) &lt; 4:             for y in range(0, len(allwantedtimes)):                 if allwantedtimes[y] in availableTimesList:                     driver.find_element_by_xpath(positions[availableTimesList.index(allwantedtimes[y])]).click()                     driver.find_element_by_id(""loginPageUsername"").clear()                     driver.find_element_by_id(""loginPageUsername"").send_keys(""ourlogin"")                     driver.find_element_by_id(""loginPagePassword"").clear()                     driver.find_element_by_id(""loginPagePassword"").send_keys(""ourpassword"")                     driver.find_element_by_id(""loginPageSubmitButton"").click()                     print('We got here at least')                     element = WebDriverWait(driver, 10).until(EC.presence_of_element_located((By.ID, ""cancelExistingReservationButton"")))                     element.click()                     print('But never here')                     driver.find_element_by_id(""cancelExistingReservationButton"").click()                     driver.find_element_by_id(""continueWithExistingReservationButton"").click()                     driver.find_element_by_css_selector(""#guestSelectBox0-wrapper &gt; div.select-toggle.hoverable"").click()                     driver.find_element_by_css_selector(""#guestSelectBox0-2 &gt; span.rawOption"").click()                     driver.find_element_by_css_selector(""#guestSelectBox1-wrapper &gt; div.select-toggle.hoverable"").click()                     driver.find_element_by_css_selector(""#guestSelectBox1-3 &gt; span.rawOption"").click()                     driver.find_element_by_css_selector(""#guestSelectBox2-wrapper &gt; div.select-toggle.hoverable"").click()                     driver.find_element_by_css_selector(""#guestSelectBox2-4 &gt; span.rawOption"").click()                     driver.find_element_by_id(""done"").click()                     driver.find_element_by_id(""done"").click()                     driver.find_element_by_id(""mobilePhone"").clear()                     driver.find_element_by_id(""mobilePhone"").send_keys(""8659473353"")                     driver.find_element_by_id(""nextButton"").click()                     driver.find_element_by_css_selector(""span.rich-checkbox.unselected"").click()                     driver.find_element_by_id(""nextButton"").click()                     break            def is_element_present(self, how, what):         try: self.driver.find_element(by=how, value=what)         except NoSuchElementException, e: return False         return True      def is_alert_present(self):         try: self.driver.switch_to_alert()         except NoAlertPresentException, e: return False         return True      def close_alert_and_get_its_text(self):         try:             alert = self.driver.switch_to_alert()             alert_text = alert.text             if self.accept_next_alert:                 alert.accept()             else:                 alert.dismiss()             return alert_text         finally: self.accept_next_alert = True      def tearDown(self):         self.driver.quit()         self.assertEqual([], self.verificationErrors)  if __name__ == ""__main__"":     unittest.main() </code></pre>"	2015-01-20 00:30:57.773 UTC	28036145	"<pre><code>from selenium import webdriver from selenium.webdriver.common.by import By from selenium.webdriver.support.ui import WebDriverWait from selenium.webdriver.support import expected_conditions as EC  element = WebDriverWait(driver, 10).until(EC.presence_of_element_located((By.ID, ""cancelExistingReservationButton"")))  element.click() </code></pre>  <p>You could try this to make sure the button is loaded and ready to be clicked by Selenium.</p>"			2015-01-20 01:00:01.387 UTC
28035906	python|selenium	Selenium Python Clicking Button on Javascript Popup Does Nothing	"<p>I have a relatively simple question.  I am trying to get a button to be clicked on a popup window that I believe is javascript with Selenium.  I ran the Selenium add on for Firefox and it gave me code, but it doesn't work.  The code is fairly long and all works just fine, but when it gets to this line:</p>  <pre><code>driver.find_element_by_id(""cancelExistingReservationButton"").click() </code></pre>  <p>It just waits and then it errors out with this message:</p>  <p>That button is on the screen, but it never gets clicked.  I know that the part of the code works that follows it, but I just can't get it to do anything with that line.</p>  <pre><code>    Traceback (most recent call last):   File ""C:/Users/Bradley/Desktop/testParkFare.py"", line 34, in test_park_fare     driver.find_element_by_id(""cancelExistingReservationButton"").click()   File ""C:\Python27\lib\site-packages\selenium\webdriver\remote\webelement.py"", line 65, in click     self._execute(Command.CLICK_ELEMENT)   File ""C:\Python27\lib\site-packages\selenium\webdriver\remote\webelement.py"", line 385, in _execute     return self._parent.execute(command, params)   File ""C:\Python27\lib\site-packages\selenium\webdriver\remote\webdriver.py"", line 171, in execute     response = self.command_executor.execute(driver_command, params)   File ""C:\Python27\lib\site-packages\selenium\webdriver\remote\remote_connection.py"", line 349, in execute     return self._request(command_info[0], url, body=data)   File ""C:\Python27\lib\site-packages\selenium\webdriver\remote\remote_connection.py"", line 380, in _request     resp = self._conn.getresponse()   File ""C:\Python27\lib\httplib.py"", line 1074, in getresponse     response.begin()   File ""C:\Python27\lib\httplib.py"", line 415, in begin     version, status, reason = self._read_status()   File ""C:\Python27\lib\httplib.py"", line 379, in _read_status     raise BadStatusLine(line)     BadStatusLine: '' </code></pre>  <p>Any help you could give would be really appreciated.</p>  <p>Here is the entirety of the code:</p>  <pre><code>from selenium import webdriver from selenium.webdriver.common.by import By from selenium.webdriver.common.keys import Keys from selenium.webdriver.support.ui import Select from selenium.webdriver.common.action_chains import ActionChains from selenium.webdriver.common.by import By from selenium.webdriver.support.ui import WebDriverWait from selenium.webdriver.support import expected_conditions as EC   from selenium.common.exceptions import NoSuchElementException from selenium.common.exceptions import NoAlertPresentException import unittest, time, re  class Test2(unittest.TestCase):     def setUp(self):         self.driver = webdriver.Firefox()         self.driver.maximize_window()         self.driver.implicitly_wait(60)         self.base_url = ""https://disneyworld.disney.go.com""         self.verificationErrors = []         self.accept_next_alert = True      def test_2(self):         driver = self.driver         driver.get(self.base_url + ""/dining/grand-floridian-resort-and-spa/1900-park-fare/"")         driver.find_element_by_xpath(""(//button[@type='button'])[2]"").click()         driver.find_element_by_link_text('27').click()         driver.find_element_by_css_selector(""div.select-toggle.hoverable"").click()         driver.find_element_by_id('diningAvailabilityForm-searchTime-0').click()         driver.find_element_by_css_selector(""#partySize-wrapper &gt; div.select-toggle.hoverable"").click()         driver.find_element_by_id(""partySize-3"").click()         driver.find_element_by_css_selector(""span.buttonText"").click()         availabletimes = driver.find_element_by_xpath('//*[@id=""timesContainer""]/div[2]').get_attribute(""innerHTML"")          availableTimesList = []          startpoint = availabletimes.find(""buttonText"")+12         endpoint = availabletimes.find(""span"", startpoint)-2          allwantedtimes = ['8:45 AM', '8:40 AM', '8:50 AM', '8:55 AM', '8:35 AM', '8:30 AM', '8:25 AM', '8:20 AM',                           '9:00 AM', '9:05 AM', '9:15 AM', '9:20 AM']          positions = [""//div[@id='timesContainer']/div[2]/a/span/span/span"",                      ""//div[@id='timesContainer']/div[2]/a[2]/span/span/span"",                      ""//div[@id='timesContainer']/div[2]/a[3]/span/span/span""]          while startpoint &gt; 500:             availableTimesList.append(availabletimes[startpoint: endpoint])             startpoint = availabletimes.find(""buttonText"", endpoint)+12             endpoint = availabletimes.find(""span"", startpoint)-2           if len(availableTimesList) &lt; 4:             for y in range(0, len(allwantedtimes)):                 if allwantedtimes[y] in availableTimesList:                     driver.find_element_by_xpath(positions[availableTimesList.index(allwantedtimes[y])]).click()                     driver.find_element_by_id(""loginPageUsername"").clear()                     driver.find_element_by_id(""loginPageUsername"").send_keys(""ourlogin"")                     driver.find_element_by_id(""loginPagePassword"").clear()                     driver.find_element_by_id(""loginPagePassword"").send_keys(""ourpassword"")                     driver.find_element_by_id(""loginPageSubmitButton"").click()                     print('We got here at least')                     element = WebDriverWait(driver, 10).until(EC.presence_of_element_located((By.ID, ""cancelExistingReservationButton"")))                     element.click()                     print('But never here')                     driver.find_element_by_id(""cancelExistingReservationButton"").click()                     driver.find_element_by_id(""continueWithExistingReservationButton"").click()                     driver.find_element_by_css_selector(""#guestSelectBox0-wrapper &gt; div.select-toggle.hoverable"").click()                     driver.find_element_by_css_selector(""#guestSelectBox0-2 &gt; span.rawOption"").click()                     driver.find_element_by_css_selector(""#guestSelectBox1-wrapper &gt; div.select-toggle.hoverable"").click()                     driver.find_element_by_css_selector(""#guestSelectBox1-3 &gt; span.rawOption"").click()                     driver.find_element_by_css_selector(""#guestSelectBox2-wrapper &gt; div.select-toggle.hoverable"").click()                     driver.find_element_by_css_selector(""#guestSelectBox2-4 &gt; span.rawOption"").click()                     driver.find_element_by_id(""done"").click()                     driver.find_element_by_id(""done"").click()                     driver.find_element_by_id(""mobilePhone"").clear()                     driver.find_element_by_id(""mobilePhone"").send_keys(""8659473353"")                     driver.find_element_by_id(""nextButton"").click()                     driver.find_element_by_css_selector(""span.rich-checkbox.unselected"").click()                     driver.find_element_by_id(""nextButton"").click()                     break            def is_element_present(self, how, what):         try: self.driver.find_element(by=how, value=what)         except NoSuchElementException, e: return False         return True      def is_alert_present(self):         try: self.driver.switch_to_alert()         except NoAlertPresentException, e: return False         return True      def close_alert_and_get_its_text(self):         try:             alert = self.driver.switch_to_alert()             alert_text = alert.text             if self.accept_next_alert:                 alert.accept()             else:                 alert.dismiss()             return alert_text         finally: self.accept_next_alert = True      def tearDown(self):         self.driver.quit()         self.assertEqual([], self.verificationErrors)  if __name__ == ""__main__"":     unittest.main() </code></pre>"	2015-01-20 00:30:57.773 UTC	28047449	"<p>Let's change the logic here. First - log in, then open up the page and try making a reservation. Also, instead of <code>presence_of_element_located</code> you should use <a href=""http://selenium-python.readthedocs.org/en/latest/api.html#selenium.webdriver.support.expected_conditions.visibility_of_element_located"" rel=""nofollow""><code>visibility_of_element_located</code></a> expected condition:</p>  <pre><code># log in driver.get(self.base_url + '/login/') driver.find_element_by_id('loginPageUsername').send_keys('ourlogin') driver.find_element_by_id('loginPagePassword').send_keys('ourpassword') driver.find_element_by_id('loginPageSubmitButton').click()  driver.get(self.base_url + ""/dining/grand-floridian-resort-and-spa/1900-park-fare/"") driver.find_element_by_xpath(""(//button[@type='button'])[2]"").click() driver.find_element_by_link_text('27').click()  ...  if len(availableTimesList) &lt; 4:     for y in range(0, len(allwantedtimes)):         if allwantedtimes[y] in availableTimesList:             driver.find_element_by_xpath(positions[availableTimesList.index(allwantedtimes[y])]).click()             print('We got here at least')             element = WebDriverWait(driver, 10).until(EC.visibility_of_element_located((By.ID, ""cancelExistingReservationButton"")))             element.click()             print('But never here') </code></pre>"			2015-01-20 14:11:35.553 UTC
28051033	javascript|python|bit-manipulation|rounding|floor	JavaScript Zero Bitwise Left-Shift and Right-Shift Equivalent in Python?	"<p>In JavaScript, we can use bitwise left-shift and right-shift operators to truncate a float and round it down to the nearest integer.</p>  <p>Example:</p>  <pre><code>console.log(2.667 &lt;&lt; 0); //outputs 2 console.log(2.667 &gt;&gt; 0); //outputs 2 </code></pre>  <p>These bitwise operators also do the same thing:</p>  <pre><code>console.log(2.667 | 0); //outputs 2 console.log(0 | 2.667); //outputs 2 console.log(~~2.667); //outputs 2 </code></pre>  <p>In Python, however, the same operations return errors.</p>  <p>Is there any equivalent in Python -- using bitwise operators? Or must I use int() and floor division to achieve what I'm looking for?</p>"	2015-01-20 17:00:11.293 UTC	28051117	"<p>Bitwise operators don't work on python floats.  In fact, JS is the only language where I might expect that to work...  Frankly, the fact that they work on JS numbers is probably an artifact of the fact that JS doesn't actually have an <em>integer</em> type...</p>  <p>If you call <code>int</code> on your <code>float</code> and then use the bitwise operators in python everything should work out the same.  e.g.</p>  <pre><code>&gt;&gt;&gt; int(2.667) &lt;&lt; 0 2 </code></pre>  <p>Of course, if all you are trying to do is to truncate a float, you can just call <code>int</code> on it and all should be right with the world.</p>"			2015-01-20 17:04:50.553 UTC
28051033	javascript|python|bit-manipulation|rounding|floor	JavaScript Zero Bitwise Left-Shift and Right-Shift Equivalent in Python?	"<p>In JavaScript, we can use bitwise left-shift and right-shift operators to truncate a float and round it down to the nearest integer.</p>  <p>Example:</p>  <pre><code>console.log(2.667 &lt;&lt; 0); //outputs 2 console.log(2.667 &gt;&gt; 0); //outputs 2 </code></pre>  <p>These bitwise operators also do the same thing:</p>  <pre><code>console.log(2.667 | 0); //outputs 2 console.log(0 | 2.667); //outputs 2 console.log(~~2.667); //outputs 2 </code></pre>  <p>In Python, however, the same operations return errors.</p>  <p>Is there any equivalent in Python -- using bitwise operators? Or must I use int() and floor division to achieve what I'm looking for?</p>"	2015-01-20 17:00:11.293 UTC	28051125	<p>just cast the <code>float</code> to an int <code>int(2.667)</code> it will always floor/truncate the float once the float is non negative if you have negative numbers you  do want to floor not just truncate use math.floor .</p>  <pre><code>In [7]: int(2.667 ) Out[7]: 2  In [22]: from math import floor  In [23]: int(floor(-2.667 )) # just floor(-2.667 ) using python3 Out[23]: -3 </code></pre>			2015-01-20 17:05:22.007 UTC
28071071	encoding|hash|cryptography|cryptojs|cross-language	Generating a SHA256 hash in python and javascript leads to different results	"<p>I have a problem with encrypting plaintext.</p>  <p>What i am doing in Python:</p>  <pre class=""lang-py prettyprint-override""><code>def encrypt(plaintext):     import hashlib, base64      hashed = hashlib.sha256(plaintext).digest()     return base64.b64encode(hashed)  def main():     input_value = ""a""     output = encrypt(plaintext=input_value)     print output  if __name__ == ""__main__"":     main() </code></pre>  <p>Result in Python:</p>  <pre><code>ypeBEsobvcr6wjGzmiPcTaeG7/gUfE5yuYB3ha/uSLs= </code></pre>  <p>What I am doing in JS:</p>  <pre class=""lang-js prettyprint-override""><code>var result = ''; var plaintext = 'a';  if(plaintext != null &amp;&amp; plaintext != undefined) {     var hashed = CryptoJS.SHA256(plaintext);     result = hashed.toString(CryptoJS.Base64); }  alert(result); </code></pre>  <p>Result in JS:</p>  <pre><code>ca978112ca1bbdcafac231b39a23dc4da786eff8147c4e72b9807785afee48bb </code></pre>  <p>Does anyone have an idea what I am doing wrong?</p>  <p>Or is there a way to get the same encryption result in both languages?</p>  <p>By the way: It would be easier for me to change the python code, because I already have CryptoJS-encrypted values in my database.</p>"	2015-01-21 15:37:17.467 UTC	28072621	"<p>CryptoJS mostly doesn't throw errors. You're passing <code>undefined</code> into <code>hashed.toString(CryptoJS.Base64);</code>. Use <code>CryptoJS.enc.Base64</code>, because <code>CryptoJS.enc.Hex</code> is used by default.</p>  <p>But since you prefer to change python, I would suggest to do the hashing <a href=""https://docs.python.org/2/library/hashlib.html#hashlib.hash.hexdigest"" rel=""noreferrer"">this way</a>:</p>  <pre class=""lang-py prettyprint-override""><code>def encrypt(plaintext):     import hashlib, base64     return hashlib.sha256(plaintext).hexdigest() </code></pre>  <p>You should still change the JavaScript code to hex encoding for when CryptoJS changes the default behavior.</p>"			2015-01-21 16:53:11.6 UTC
28080079	ipython|ipython-notebook	Can I create an iPython notebook using JavaScript as the language in the cells?	<p>I love IPython to explain algorithms in python. But I want to do the same using javascript. Is it possible to write a notebook where I use javascript as the cell language?</p>	2015-01-22 01:50:37.91 UTC	28080386	"<p>You can use the <code>%%javascript</code> magic function for running javascript in IPython notebook. For example Paste the following code in a IPython cell and run it. You should see the output in your browser's javascript console.</p>  <pre><code>%%javascript console.log(""Hello World!"") </code></pre>  <p>For global variables, you can add an attribute to the <code>windows</code> object for  example, in a cell run the following code:</p>  <pre><code>%%javascript window.myvar = 12; </code></pre>  <p>In another cell, run the following code and check browser's javascript console. The variable's value should be printed.</p>  <pre><code>%%javascript console.log(myvar) </code></pre>  <p>Use the <code>element</code> variable for printing in the cell output area as shown below:</p>  <pre><code>%%javascript element.append(myvar) </code></pre>"			2015-01-22 02:30:24.8 UTC
28151584	javascript|python	This Javascript code not working with Python Flask	"<p><strong>This Javascript code is not working with my Python Flask code</strong>: I don't know, what the problem is, I am also using the library correctly.</p>  <pre><code>$(document).ready(function(){     $(""#name"").focusin(function(){         if(/^[a-z ,.'-]+$/.test($(this).val())){             $(this).css(""border-color"", ""#37ff00"");         }else{             $(this).css(""border-color"", ""red"");         }     });     $(""#er"").keyup(function(){         if(/^[0-9]+$/.test($(this).val())){             $(this).css(""border-color"", ""green"");         }else{             $(this).css(""border-color"", ""red"");         }     }); }) </code></pre>  <p><strong>Rendered Template</strong> comes after rendering flask code of python and it's correct I think, but script is not working</p>  <pre><code>&lt;!DOCTYPE HTML&gt; &lt;html&gt;     &lt;head&gt;         &lt;link rel= ""stylesheet"" href= ""style.css""&gt;         &lt;script src=""script.js"" &gt;&lt;/script&gt;           &lt;script src=""http://ajax.googleapis.com/ajax/libs/jquery/1.11.2/jquery.min.js""&gt;&lt;/script&gt;             &lt;/head&gt;     &lt;body&gt;         &lt;form id=""CSI"" &gt;              &lt;label for=""er""&gt;Enrollment No:&lt;/label&gt;             &lt;input id=""er"" name=""er"" type=""text""&gt;              &lt;label for=""name""&gt;Name:&lt;/label&gt;             &lt;input id=""name"" name=""name"" type=""text""&gt;          &lt;/form&gt;     &lt;/body&gt; &lt;html&gt; </code></pre>  <p><strong>CSS Used</strong>It is used it the form and I want it should be changes</p>  <pre><code>#CSI input {     padding:5px;     margin:5px;     width:200px;     height:20px; } #CSI input:focus {     outline:none;     border-color:blue;  } </code></pre>"	2015-01-26 14:04:15.947 UTC	46040702	"<p>As @Pointy points out (no pun inteneded), in order for your script to use jQuery, you need to include jQuery first, and then add your JavaScript files:</p>  <pre><code>&lt;script src=""jquery.js""&gt;&lt;/script&gt; &lt;script src=""script.js""&gt;&lt;/script&gt; </code></pre>"			2017-09-04 16:01:51.88 UTC
28269998	javascript|python|server	Interaction between Javascript and Python	"<p>Let's say I have set up a local server by typing <code>python -m SimpleHTTPServer</code> into the command line. In my directory, I have this <code>index.html</code> file which is an html form that receives a name from the user:</p>  <pre><code>&lt;!DOCTYPE html&gt; &lt;html&gt; &lt;body&gt; &lt;p&gt;Enter names in the fields, then click ""Submit"" to submit the form:&lt;/p&gt; &lt;form id=""frm1""&gt; First name: &lt;input type=""text"" name=""fname""&gt;&lt;br&gt; Last name: &lt;input type=""text"" name=""lname""&gt;&lt;br&gt;&lt;br&gt; &lt;input type=""button"" onclick=""myFunction()"" value=""Submit""&gt; &lt;/form&gt;  &lt;script&gt; function myFunction() {     document.getElementById(""frm1"").submit(); } &lt;/script&gt;  &lt;/body&gt; &lt;/html&gt; </code></pre>  <p>In the same directory, I have a Python file that needs to receive the input name from JavaScript. It is supposed to do some sort of analysis on it and maybe returns the new values back later. </p>  <p>I'd like to know how it is possible to pass the textual input over to the Python script.  </p>"	2015-02-02 01:33:26.183 UTC	28270060	"<p>You wouldn't use SimpleHTTPServer for that. Use <a href=""http://flask.pocoo.org/docs/0.10/quickstart/#the-request-object"" rel=""nofollow"">flask</a> in the simple case and <a href=""https://www.djangoproject.com"" rel=""nofollow"">Django</a> in the larger one. I'm assuming you're rather new to this sort of thing though, so maybe stick with flask for a few weeks, Django can be a bit overwhelming when you start out.</p>  <pre><code>@app.route('/', methods=['POST', 'GET']) def index():     if request.method == 'POST':         # Do stuff     return render_template('index.html') </code></pre>"			2015-02-02 01:43:30.107 UTC
28269998	javascript|python|server	Interaction between Javascript and Python	"<p>Let's say I have set up a local server by typing <code>python -m SimpleHTTPServer</code> into the command line. In my directory, I have this <code>index.html</code> file which is an html form that receives a name from the user:</p>  <pre><code>&lt;!DOCTYPE html&gt; &lt;html&gt; &lt;body&gt; &lt;p&gt;Enter names in the fields, then click ""Submit"" to submit the form:&lt;/p&gt; &lt;form id=""frm1""&gt; First name: &lt;input type=""text"" name=""fname""&gt;&lt;br&gt; Last name: &lt;input type=""text"" name=""lname""&gt;&lt;br&gt;&lt;br&gt; &lt;input type=""button"" onclick=""myFunction()"" value=""Submit""&gt; &lt;/form&gt;  &lt;script&gt; function myFunction() {     document.getElementById(""frm1"").submit(); } &lt;/script&gt;  &lt;/body&gt; &lt;/html&gt; </code></pre>  <p>In the same directory, I have a Python file that needs to receive the input name from JavaScript. It is supposed to do some sort of analysis on it and maybe returns the new values back later. </p>  <p>I'd like to know how it is possible to pass the textual input over to the Python script.  </p>"	2015-02-02 01:33:26.183 UTC	28270068	"<p>The basic framework is, HTML and javascript runs in the client, and python (SimpleHTTPServer) runs the in server.</p>  <p>So I think you need a <strong>form</strong> in your HTML, which will <strong>POST</strong> the user name to python server program.</p>  <p>Here is an example of python server: <a href=""http://www.acmesystems.it/python_httpserver"" rel=""nofollow"">http://www.acmesystems.it/python_httpserver</a> And here is example of <strong>form</strong> : <a href=""http://www.w3schools.com/html/html_forms.asp"" rel=""nofollow"">http://www.w3schools.com/html/html_forms.asp</a> . The <em>action</em> attribute must be set correctly for python program to be invoked.</p>"			2015-02-02 01:44:28.857 UTC
28283345	javascript|python|json|web.py	Passing data between python and javascript using JSON	"<p>I'm creating a web form.  Depending on the value of the first field I want to show different fields in the rest of the form.  I can use javascript to update the form:</p>  <pre><code>document.getElementById(""formdata"").innerHTML = HTML_string </code></pre>  <p>I'm using web.py.  The list of fields I need is stored in MongoDB and I'm using python to pull out the list.  Looks like I should be using JSON to pass the data from python to the browser.  There are lots of simple examples serving only JSON (like <a href=""https://gist.github.com/sirleech/5055971"" rel=""nofollow noreferrer"">https://gist.github.com/sirleech/5055971</a>) and the following almost exactly describes what I need: <a href=""https://stackoverflow.com/questions/7689695/passing-variables-between-python-and-javascript"">Passing variables between Python and Javascript</a>.  How can I use that data with JavaScript while still rendering a full HTML page?  Has anyone got any examples I can use to make a functioning web page?  And is it possible to call the python script when the field value is changed and pass the query reslts back to the browser without refreshing the page?</p>  <p>I'm not sure if what I am trying is the best way of doing this so I'm open to other suggestions.</p>  <p>Thanks,</p>  <p>Ger</p>"	2015-02-02 17:31:00.533 UTC	28284051	"<p>Typically, JSON is used to supply data, not markup. You typically already have HTML loaded and insert JSON data into DOM elements immediately after it is acquired. </p>  <p>Let's say you want to update a ""score"" element that's marked up like this:</p>  <pre><code>&lt;p&gt;My Score: &lt;span id='my_score'&gt;&lt;/span&gt;&lt;/p&gt; </code></pre>  <p>To do this, let's say your JSON ""score"" feed is hosted at /data/score. It returns JSON like this:</p>  <pre><code>{score: 5} </code></pre>  <p>If you were using jQuery, for example, you could request and update this value as follows:</p>  <pre><code>$.get('/data/score', function(data){     $('#my_score').html(data['score']); }); </code></pre>  <p>But that makes a lot of assumptions about what you're using and how it works. </p>"			2015-02-02 18:12:35.21 UTC
28289699	javascript|python|web-scraping|scrape	Python web scraping for javascript generated content	"<p>I am trying to use python3 to return the bibtex citation generated by <a href=""http://www.doi2bib.org/"" rel=""noreferrer"">http://www.doi2bib.org/</a>. The url's are predictable so the script can work out the url without having to interact with the web page. I have tried using selenium, bs4, etc but cant get the text inside the box.   </p>  <pre><code>url = ""http://www.doi2bib.org/#/doi/10.1007/s00425-007-0544-9"" import urllib.request from bs4 import BeautifulSoup text = BeautifulSoup(urllib.request.urlopen(url).read()) print(text) </code></pre>  <p>Can anyone suggest a way of returning the bibtex citation as a string (or whatever) in python?</p>"	2015-02-03 01:07:56.22 UTC	28289762	"<p>You don't need <code>BeautifulSoup</code> here. There is an <em>additional XHR request</em> sent to the server to fill out the bibtex citation, simulate it, for example, with <a href=""http://docs.python-requests.org/en/latest/""><code>requests</code></a>:</p>  <pre><code>import requests  bibtex_id = '10.1007/s00425-007-0544-9'  url = ""http://www.doi2bib.org/#/doi/{id}"".format(id=bibtex_id) xhr_url = 'http://www.doi2bib.org/doi2bib'  with requests.Session() as session:     session.get(url)      response = session.get(xhr_url, params={'id': bibtex_id})     print(response.content) </code></pre>  <p>Prints:</p>  <pre><code>@article{Burgert_2007,     doi = {10.1007/s00425-007-0544-9},     url = {http://dx.doi.org/10.1007/s00425-007-0544-9},     year = 2007,     month = {jun},     publisher = {Springer Science $\mathplus$ Business Media},     volume = {226},     number = {4},     pages = {981--987},     author = {Ingo Burgert and Michaela Eder and Notburga Gierlinger and Peter Fratzl},     title = {Tensile and compressive stresses in tracheids are induced by swelling based on geometrical constraints of the wood cell},     journal = {Planta} } </code></pre>  <hr>  <p>You can also solve it with <code>selenium</code>. The key trick here is to use an <a href=""http://selenium-python.readthedocs.org/en/latest/waits.html#explicit-waits"">Explicit Wait</a> to wait for the citation <a href=""http://selenium-python.readthedocs.org/en/latest/api.html#selenium.webdriver.support.expected_conditions.visibility_of_element_located"">to become visible</a>:</p>  <pre><code>from selenium import webdriver from selenium.webdriver.common.by import By from selenium.webdriver.support.ui import WebDriverWait from selenium.webdriver.support import expected_conditions as EC  driver = webdriver.Firefox() driver.get('http://www.doi2bib.org/#/doi/10.1007/s00425-007-0544-9')  element = WebDriverWait(driver, 10).until(EC.visibility_of_element_located((By.XPATH, '//pre[@ng-show=""bib""]'))) print(element.text)  driver.close() </code></pre>  <p>Prints the same as the above solution.</p>"			2015-02-03 01:14:25.52 UTC
28350797	python|mechanize	"ControlNotFoundError (ASP, Mechanize, Javascript, Python)"	"<p>I am receiving following response from the server </p>  <pre><code>ctrlDateTime%24txtSpecifyFromDate=05%2F02%2F2015&amp; ctrlDateTime%24rgApplicable=rdoApplicableFor&amp; ctrlDateTime%24txtSpecifyToDate=05%2F02%2F2015&amp; </code></pre>  <p>I am trying with</p>  <pre><code>br[""ctrlDateTime%24txtSpecifyFromDate""]=""05%2F02%2F2015""; br[""ctrlDateTime%24rgApplicable""]=""rdoApplicableFor""; br[""ctrlDateTime%24txtSpecifyToDate""]=""05%2F02%2F2015""; </code></pre>  <p>How can I fix ControlnotfoundError? Here is my code:</p>  <p>Any idea how to solve it?</p>  <pre><code>import mechanize import re  br = mechanize.Browser() br.addheaders = [('User-agent', 'Mozilla/5.0 (Windows NT 6.1; WOW64; rv:34.0) Gecko/20100101 Firefox/34.0')] response = br.open(""http://marketinformation.natgrid.co.uk    /gas/frmDataItemExplorer.aspx"")   br.select_form(nr=0)  br.set_all_readonly(False) mnext = re.search(""""""&lt;a id=""lnkNext"" href=""javascript:__doPostBack('(.*?)','(.*?)')""&gt;XML"""""", html)  br[""tvDataItem_ExpandState""]=""cccccccceennncennccccccccc""; br[""tvDataItem_SelectedNode""]=""""; br[""__EVENTTARGET""]=""lbtnCSVDaily""; br[""__EVENTARGUMENT""]=""""; br[""tvDataItem_PopulateLog""]=""""; br[""__VIEWSTATE""]=""%2FwEP.....SNIP....%2F90SB9E%3D""; br[""__VIEWSTATEGENERATOR""]=""B2D04314""; br[""__EVENTVALIDATION""]=""%2FwEW...SNIP...uPceSw%3D%3D""; br[""txtSearch""]=""""; br[""tvDataItemn11CheckBox""]=""on""; br[""tvDataItemn15CheckBox""]=""on""; br[""ctrlDateTime%24txtSpecifyFromDate""]=""05%2F02%2F2015""; br[""ctrlDateTime%24rgApplicable""]=""rdoApplicableFor""; br[""ctrlDateTime%24txtSpecifyToDate""]=""05%2F02%2F2015""; br[""btnViewData""]=""View+Data+for+Data+Items""; br[""hdnIsAddToList""]="""";  response = br.submit()  print(response.read()); </code></pre>  <p>Thanks in advance. P.</p>"	2015-02-05 17:54:42.193 UTC	28363949	"<p>This is solved in two steps: 1) I replaced %24 with '$'; 2) some of the parameters required a true parameter to be passed on and some to be passed on as ['',] </p>"			2015-02-06 10:43:36.957 UTC
28387186	javascript|python|python-2.7|url|javascript-injection	Javascript Injection with PYthon	"<p>I am attempting to use python to open up web pages, and the perform a javascript injection. The goal is to actually change the values of some forms (ex: putting data into a form) Currently the test program that I have written for opening up a page is:</p>  <pre><code>import urllib2 as u f = u.urlopen(""http://www.google.com"") print f.read() f.close() </code></pre>  <p>So now what I was thinking for the injection (in this case printing Hello world)</p>  <pre><code>import urllib2 as u f = u.urlopen(""http://www.google.com/javascript:alert(\"" hello world \"")"") print f.read() f.close() </code></pre>  <p>But when I run the code I recieve the following error:</p>  <pre><code>Traceback (most recent call last):   File ""c:\Sid\Rutgers\3 Semester\HackHerz\ChalupaCity\Sid\thefile.py"", line 12, in &lt;module&gt;     f = u.urlopen(""http://www.google.com/javascript:alert(\"" hello world \"")"")   File ""c:\Anaconda\lib\urllib2.py"", line 127, in urlopen     return _opener.open(url, data, timeout)   File ""c:\Anaconda\lib\urllib2.py"", line 410, in open response = meth(req, response)   File ""c:\Anaconda\lib\urllib2.py"", line 523, in http_response     'http', request, response, code, msg, hdrs)   File ""c:\Anaconda\lib\urllib2.py"", line 448, in error     return self._call_chain(*args)   File ""c:\Anaconda\lib\urllib2.py"", line 382, in _call_chain     result = func(*args)   File ""c:\Anaconda\lib\urllib2.py"", line 531, in http_error_default     raise HTTPError(req.get_full_url(), code, msg, hdrs, fp) HTTPError: HTTP Error 400: Bad Request </code></pre>  <p>So i decided to explore a bit. And I discovered that python is probably going to the URL of the name</p>  <pre><code>http://www.google.com/javascript:alert(\"" hello world \"") </code></pre>  <p>So I tried to separate into two lines</p>  <pre><code>f = u.urlopen(""http://www.google.com/"")  f.urlopen(""javascript:alert(\"" hello world \"")"") print f.read() f.close() </code></pre>  <p>But that doesn't work either.</p>  <p>How to go through with this? Ultimately I want to be able to change form data with Javascript.</p>"	2015-02-07 20:48:05.497 UTC	28387293	"<p>Possibly using <a href=""http://www.crummy.com/software/BeautifulSoup/bs4/doc/"" rel=""nofollow"">Beautiful Soup</a>?</p>  <p>You may also wish to look into urllib2 module or <a href=""http://docs.python-requests.org/en/latest/index.html"" rel=""nofollow"">requests</a> library to assist you.</p>  <p>Or you could try updating the HTTP headers with the desired post data before you reply to the server.</p>  <p>Good luck!</p>"			2015-02-07 20:58:01.983 UTC
28412348	javascript|python	Save Javascript variable value and read it in python	<p>I have 2 devices connected to my machine  with rs232 usb connection. One is listed as <code>ttyUSB0</code> and the other is <code>ttyUSB1</code>. In <code>findDevice</code> function I find one of them.</p>  <pre><code>device2 = port.comName; </code></pre>  <p>I have a python code to find the other one: </p>  <p>How can I use the result of <code>findDevice</code> in the python code to avoid doing the test for both <code>ttyUSB0</code> and <code>ttyUSB1</code>?</p>	2015-02-09 14:43:14.577 UTC	28412521	"<p>I don't know much about javascript but if you return a value from the function you can use <code>subprocess.check_output</code> to run the javascript from python using nodejs:</p>  <pre><code>from subprocess import check_output   res = check_output([""nodejs"",""path_to/test.js""]) </code></pre>  <p><code>test.js</code>:</p>  <pre><code>console.log(""Hello World""); </code></pre>  <p>Output:</p>  <pre><code>res = check_output([""nodejs"",""test.js""]) print(res) b'Hello World\n' </code></pre>"			2015-02-09 14:50:41.167 UTC
28423784	javascript|python|mechanize	How should I use this onclick(javascript) in Python	"<p>I'm first time to ask questions here and I'm new to Python.</p>  <p>I install the mechanize and BeautifulSoup to change some forms from a page.</p>  <p>Now, I use <code>br.submit()</code> to send the request , it doesn't work! </p>  <p>Is there any way to call the <code>onclick</code> function(javascript)?  </p>  <p>Here is the code about that button send data:</p>  <pre><code>&lt;div class=""go_btm w_a1""&gt; &lt;p class=""gogo""&gt;&lt;a href=""#"" onclick=""javascript:checkdata(document.mainform);"" onkeypress=""checkdata(document.mainform);""&gt;search&lt;/a&gt;&lt;/p&gt; &lt;p class=""gogo""&gt;&lt;a href=""#"" onclick=""reset();"" onkeypress=""reset();""&gt;cancel&lt;/a&gt;&lt;/p&gt; &lt;br class=""CLEAR"" /&gt; &lt;/div&gt; </code></pre>  <p><strong>UPDATE:</strong></p>  <p>Thank you for support the Selenium this tool.</p>  <p>But I have another problem. My code below:</p>  <p><code>for i in range(len(all_options)):     arr.append(all_options[i])</code><br> <code> count = 0 for option in arr:     print(""Value is: %s"" % option.get_attribute(""value""))     if count &gt; 1:         option.click()         string = u'search'         link2 = browser.find_element_by_link_text(string.encode('utf8'))         response = link2.click()         browser.back()     count = count + 1 </code></p>  <p>After I back to the same page,it answer me: </p>  <p><code> Traceback (most recent call last):   File ""C:\Users\pc2\Desktop\TEST.py"", line 44, in &lt;module&gt;     print(""Value is: %s"" % option.get_attribute(""value""))   File ""C:\Python27\lib\site-packages\selenium\webdriver\remote\webelement.py"", line 93, in get_attribute     resp = self._execute(Command.GET_ELEMENT_ATTRIBUTE, {'name': name})   File ""C:\Python27\lib\site-packages\selenium\webdriver\remote\webelement.py"", line 385, in _execute     return self._parent.execute(command, params)   File ""C:\Python27\lib\site-packages\selenium\webdriver\remote\webdriver.py"", line 173, in execute     self.error_handler.check_response(response)   File ""C:\Python27\lib\site-packages\selenium\webdriver\remote\errorhandler.py"", line 166, in check_response     raise exception_class(message, screen, stacktrace) StaleElementReferenceException: Message: stale element reference: element is not attached to the page document   (Session info: chrome=40.0.2214.111)   (Driver info: chromedriver=2.9.248315,platform=Windows NT 6.1 SP1 x86_64) </code></p>  <p>I can only click the select once.</p>  <p>Is that talk me my option in the array disappear?</p>  <p>How should I keep the variable(option) let next loop to click?</p>"	2015-02-10 03:50:52.31 UTC	28423813	"<p><code>mechanize</code> cannot handle javascript:</p>  <ul> <li><a href=""https://stackoverflow.com/questions/802225/how-do-i-use-mechanize-to-process-javascript"">How do I use Mechanize to process JavaScript?</a></li> </ul>  <p>Instead, you can <em>automate a real browser</em> via <a href=""http://selenium-python.readthedocs.org/"" rel=""nofollow noreferrer""><code>selenium</code></a>. Example:</p>  <pre><code>from selenium import webdriver  driver = webdriver.Firefox() driver.get('myurl')  link = driver.find_element_by_link_text('search') link.click() </code></pre>"			2015-02-10 03:54:08.79 UTC
28438630	javascript|jquery|python	python functions call in javascript autocomplete	"<p>this is my views.py </p>  <pre><code>from flask import Flask  app = Flask(__name__)  @app.route('/autocomplete')  *def get_contacts():*      cat_list = []     cat_list = contact.objects.all()     return dumps(cat_list) </code></pre>  <p>and this is my js</p>  <p>function showDialog() {</p>  <pre><code>$(""#dialog"").dialog(  {     width: 600,     height: 400,  });  $.ajax({     url:'{{url_for(""autocomplete"")}}' }).done(function(data){ $( ""#search"" ).autocomplete({             source: data         }); }); </code></pre>  <p>}</p>  <p>when I'm trying to run this i give the following error</p>  <p>GET <a href=""http://127.0.0.1:8000/share_win/%7B%7Burl_for(%22autocomplete%22)%7D%7D"" rel=""nofollow"">http://127.0.0.1:8000/share_win/%7B%7Burl_for(%22autocomplete%22)%7D%7D</a> 404 (NOT FOUND)</p>  <p>Any idea?</p>"	2015-02-10 18:02:32.587 UTC	35926683	"<p>I was getting this same error.</p>  <p>It worked when the javascript was in the html file ( base.html in my case), but not when it was in a separate file I called dgmain.js.</p>  <p>I put the javascript in my template (create_product.html) in the {% block scripts %} and it works there. </p>  <p>It seems like it needs to be in the template, not in a seperate .js file when jinja2 is being used. </p>"			2016-03-10 20:33:31.663 UTC
28438630	javascript|jquery|python	python functions call in javascript autocomplete	"<p>this is my views.py </p>  <pre><code>from flask import Flask  app = Flask(__name__)  @app.route('/autocomplete')  *def get_contacts():*      cat_list = []     cat_list = contact.objects.all()     return dumps(cat_list) </code></pre>  <p>and this is my js</p>  <p>function showDialog() {</p>  <pre><code>$(""#dialog"").dialog(  {     width: 600,     height: 400,  });  $.ajax({     url:'{{url_for(""autocomplete"")}}' }).done(function(data){ $( ""#search"" ).autocomplete({             source: data         }); }); </code></pre>  <p>}</p>  <p>when I'm trying to run this i give the following error</p>  <p>GET <a href=""http://127.0.0.1:8000/share_win/%7B%7Burl_for(%22autocomplete%22)%7D%7D"" rel=""nofollow"">http://127.0.0.1:8000/share_win/%7B%7Burl_for(%22autocomplete%22)%7D%7D</a> 404 (NOT FOUND)</p>  <p>Any idea?</p>"	2015-02-10 18:02:32.587 UTC	28438780	"<p>Your issue is coming from here:</p>  <pre><code>$.ajax({     url:'{{url_for(""autocomplete"")}}' }) </code></pre>  <p>The <code>url_for</code> method requires the name of the function for the desired route rather than physical route.</p>  <p>To fix this, you can either do: </p>  <pre><code>$.ajax({     url:'{{url_for(""get_contacts"")}}' }) </code></pre>  <p>or if your Javascript is in a JS file, then do the following:</p>  <pre><code>$.ajax({     url:'/autocomplete' }) </code></pre>"			2015-02-10 18:11:46.383 UTC
28472212	javascript|python|django	javascript didn't recognize python list	"<p>This my views.py</p>  <pre><code>from django.utils import simplejson from django.core import serializers  def get_contacts(request):     context = RequestContext(request)     cat_list = []          cat_list = contact.objects.all()         friend_list=serializers.serialize('json',cat_list)         return HttpResponse(friend_list,mimetype=""application/json"") </code></pre>  <p>and this is my js</p>  <pre><code>$.get('/share_win/get_contacts/', function(data) {     alert(data);     $(""#search"").autocomplete({         source: data     }); }).fail(function(error) {     alert('error'); }); </code></pre>  <p>And after running alert(data) it  types [object Object], ...[object Object], but it should print name1 not Object. Any idea ??</p>"	2015-02-12 08:01:37.743 UTC	28472895	"<p>For your alert i would say try this, But I seriously dont understand your code,</p>  <pre><code>$.get('/share_win/get_contacts/', function(e) {     alert(JSON.parse(e.data));     $(""#search"").autocomplete({         source: data     }); }).fail(function(error) {     alert('error'); }); </code></pre>"			2015-02-12 08:44:38.513 UTC
28472212	javascript|python|django	javascript didn't recognize python list	"<p>This my views.py</p>  <pre><code>from django.utils import simplejson from django.core import serializers  def get_contacts(request):     context = RequestContext(request)     cat_list = []          cat_list = contact.objects.all()         friend_list=serializers.serialize('json',cat_list)         return HttpResponse(friend_list,mimetype=""application/json"") </code></pre>  <p>and this is my js</p>  <pre><code>$.get('/share_win/get_contacts/', function(data) {     alert(data);     $(""#search"").autocomplete({         source: data     }); }).fail(function(error) {     alert('error'); }); </code></pre>  <p>And after running alert(data) it  types [object Object], ...[object Object], but it should print name1 not Object. Any idea ??</p>"	2015-02-12 08:01:37.743 UTC	28472326	"<p>I suppose that you want to return a list of strings instead of objects. If so then use <code>values_list()</code> method and use the <code>simplejson</code> to ""serialize"" this list:</p>  <pre><code>cat_list = contact.objects.all().values_list('name', flat=True) friend_list = simplejson.dumps(list(cat_list)) </code></pre>  <p>The <code>name</code> is the field in the <code>contact</code> model.</p>"			2015-02-12 08:09:19.783 UTC
28481533	java|python|html|parameter-passing	Passing parameters - Python to HTML with Javascript	"<p>I have a simple Python file which uses the QtWebkit.QWebView to display a google maps page.</p>  <p>This is done by calling the HTML which includes some java script.</p>  <p>What I don't know how to do is get the co-ordinates from Python to the java script in the HTML file.</p>  <p>Perhaps someone can point me in the right direction?</p>  <p>PYTHON:</p>  <pre><code>class MainWin(QDialog,MainFrm.Ui_MainWin):     def __init__(self, parent=None):         super(MainWin,self).__init__(parent)         self.setupUi(self)           self.lat = -25.723146         self.long = 28.267628         self.GMapWidget.load(""markers.html?"",coords = self.lat)    app = QApplication(sys.argv) frm=MainWin() frm.show() app.exec_() </code></pre>  <p><strong><em>HTML:</em></strong></p>  <pre><code>&lt;!DOCTYPE html&gt; &lt;html&gt;   &lt;head&gt;     &lt;style type=""text/css""&gt;       html, body, #map-canvas { height: 100%; margin: 0; padding: 0;}     &lt;/style&gt;     &lt;script type=""text/javascript""       src=""https://maps.googleapis.com/maps/api/js?key=AIzaSyCrRTR8nZX3m6g_nYbilamyKSBHx9QUdfw""&gt;     &lt;/script&gt;     &lt;!DOCTYPE html&gt; &lt;html&gt;   &lt;head&gt;     &lt;style type=""text/css""&gt;       html, body, #map-canvas { height: 100%; margin: 0; padding: 0;}     &lt;/style&gt;     &lt;script type=""text/javascript""       src=""https://maps.googleapis.com/maps/api/js?key=AIzaSyCrRTR8nZX3m6g_nYbilamyKSBHx9QUdfw""&gt;     &lt;/script&gt;     &lt;script type=""text/javascript""&gt;       lt = -25.723146       ln = 28.267628       function initialize() {         var mapOptions = {           center: { lat: lt, lng:  ln},           zoom: 8         };         var map = new google.maps.Map(document.getElementById('map-canvas'),             mapOptions);       }       google.maps.event.addDomListener(window, 'load', initialize);      &lt;/script&gt;   &lt;/head&gt;   &lt;body&gt; &lt;div id=""map-canvas""&gt;&lt;/div&gt;   &lt;/body&gt; &lt;/html&gt;   &lt;/head&gt;   &lt;body&gt; &lt;div id=""map-canvas""&gt;&lt;/div&gt;   &lt;/body&gt; &lt;/html&gt; </code></pre>"	2015-02-12 15:37:08.507 UTC	28483863	"<p>If you really need a real-time event communication system between your Python app and your JavaScript app, you can establish an <a href=""http://en.wikipedia.org/wiki/Server-sent_events"" rel=""nofollow"">SSE</a> or WebSocket connection between both. I am not sure if you want this additional complexity, though.</p>  <p>In case a static (one-time) parameter exchange is sufficient, you can work with templates. Make a template from your HTML file with placeholders for <code>lt</code> and <code>ln</code> values. <a href=""https://docs.python.org/2/library/string.html#string.Template"" rel=""nofollow""><code>string.Template</code></a> in the stdlib is useful here.</p>  <p>The template file (call it e.g. <code>""markers.html.tpl""</code>) content might then look like so:</p>  <pre><code>[...] &lt;script type=""text/javascript""&gt;   lt = $latitude   ln = $longitude  [...] </code></pre>  <p>Instead of simply loading the HTML file:</p>  <pre><code>self.GMapWidget.load(""markers.html?"",coords = self.lat) </code></pre>  <p>you first read the template, insert the values, write the new HTML file, and only then load the widget:</p>  <pre><code>from tempfile import NamedTemporaryFile from string import Template   with open(""markers.html.tpl"", ""rb"") as f:     tpl = Template(f.read().decode(""utf-8""))  htmlcontent = tpl.substitute(latitude=1.2, longitude=2.5)  with NamedTemporaryFile() as f:     f.write(htmlcontent.encode(""utf-8"")     self.GMapWidget.load(f.name) </code></pre>  <p>This is a naive, but reliable approach. Note that you ca re-use the template, so <code>tpl = Template(f.read().decode(""utf-8""))</code> is required only once, but can be followed by as many <code>tpl.substitute()</code> calls as you wish.</p>  <p>Apart from this, I am not aware of any particular interface between Python code and the WebKit component, for you do dynamically fiddle with the state of JavaScript variables.</p>"			2015-02-12 17:23:57.173 UTC
28499274	javascript|jquery|python|html|web-scraping	Scraping a javascript generated page using Python	"<p>I need to scarpe some information for <a href=""https://hasjob.co/"" rel=""nofollow"">https://hasjob.co/</a>, I can scrape some of the information by getting through the login page and scrape as usual, but most of information are generated by Javascript only when u scroll down to the bottom of the page.</p>  <p>Any solution using python??</p>  <pre><code>import mechanize import cookielib from bs4 import BeautifulSoup import html2text  import pprint  job = []  # Browser br = mechanize.Browser()  # Cookie Jar cj = cookielib.LWPCookieJar() br.set_cookiejar(cj)  # Browser options br.set_handle_equiv(True) br.set_handle_redirect(True) br.set_handle_referer(True) br.set_handle_robots(False) br.set_handle_refresh(mechanize._http.HTTPRefreshProcessor(), max_time=1)  br.addheaders = [('User-agent', 'Chrome')]  # The site we will navigate into, handling it's session br.open('https://auth.hasgeek.com/login')  # View available forms ##for f in br.forms(): ##    print f  # Select the second (index one) form (the first form is a search query box) br.select_form(nr=1)  # User credentials br.form['username'] = 'username' br.form['password'] = 'pass'  br.submit()  ##print(br.open('https://hasjob.co/').read())  r = br.open('https://hasjob.co/')   soup = BeautifulSoup(r)   for tag in soup.find_all('span',attrs={'class':'annotation bottom-right'}):      p = tag.text     job.append(p)   pp = pprint.PrettyPrinter(depth=6)  pp.pprint(job) </code></pre>"	2015-02-13 12:06:35.787 UTC	28499855	"<p>You could take a look at the python module PyV8, it is a python wrapper for the Google V8 javascript engine.</p>  <p>You could also try using ghostdriver via selenium, see example here: <a href=""https://stackoverflow.com/questions/21768554/selenium-with-ghostdriver-in-python-on-windows/24579327#24579327"">Selenium with GhostDriver in Python on Windows</a>. With selenium you have the option to run a visual browser instance in either Firefox or Chrome (via chromedriver) while you're getting things to work and then switch to PhantomJS (windowless browser) when your scraper is working. Note though that creating a full browser instance is propably a complete overkill, although it really depends on what you're doing. If you're not running it too frequently I guess it's fine, but normally selenium is used for browser testing and not for scraping.</p>"			2015-02-13 12:41:22.293 UTC
28499274	javascript|jquery|python|html|web-scraping	Scraping a javascript generated page using Python	"<p>I need to scarpe some information for <a href=""https://hasjob.co/"" rel=""nofollow"">https://hasjob.co/</a>, I can scrape some of the information by getting through the login page and scrape as usual, but most of information are generated by Javascript only when u scroll down to the bottom of the page.</p>  <p>Any solution using python??</p>  <pre><code>import mechanize import cookielib from bs4 import BeautifulSoup import html2text  import pprint  job = []  # Browser br = mechanize.Browser()  # Cookie Jar cj = cookielib.LWPCookieJar() br.set_cookiejar(cj)  # Browser options br.set_handle_equiv(True) br.set_handle_redirect(True) br.set_handle_referer(True) br.set_handle_robots(False) br.set_handle_refresh(mechanize._http.HTTPRefreshProcessor(), max_time=1)  br.addheaders = [('User-agent', 'Chrome')]  # The site we will navigate into, handling it's session br.open('https://auth.hasgeek.com/login')  # View available forms ##for f in br.forms(): ##    print f  # Select the second (index one) form (the first form is a search query box) br.select_form(nr=1)  # User credentials br.form['username'] = 'username' br.form['password'] = 'pass'  br.submit()  ##print(br.open('https://hasjob.co/').read())  r = br.open('https://hasjob.co/')   soup = BeautifulSoup(r)   for tag in soup.find_all('span',attrs={'class':'annotation bottom-right'}):      p = tag.text     job.append(p)   pp = pprint.PrettyPrinter(depth=6)  pp.pprint(job) </code></pre>"	2015-02-13 12:06:35.787 UTC	28516832	"<p>For some reason almost no one notices that Hasjob has an Atom feed and it's linked from the home page. Reading structured data from Hasjob using the <a href=""https://pypi.python.org/pypi/feedparser"" rel=""nofollow"">feedparser library</a> is as simple as:</p>  <pre><code>import feedparser feed = feedparser.parse('https://hasjob.co/feed') for job in feed.entries:     print job.title, job.link, job.published, job.content </code></pre>  <p>The feed used to be full 30 days, but that's now over 800 entries and a fair bit of load on the server, so I've cut it down to the last 24 hours of jobs. If you want a regular helping of jobs, just load from this URL at least once a day.</p>"			2015-02-14 14:55:33.917 UTC
28580973	javascript|python|django|splunk	Call a python script using only javascript or django	"<p>I'm using <code>splunk</code> and its framework that works only in javascript and Django.  I would like open an external file and edit it, but with javascript is impossible and I'm not sure that with Django. If anyone know, please tell me how do this.</p>  <p>So, I thought that I can call an external script from javascript or Django, in python for example, that opens my file to edit, and send the results at my javascript page.</p>  <p>The file to edit is stored in the a different subfolder than my javascript page, but both of them are in the same splunk_app folder:</p>  <p>Such as </p>  <pre><code>home/splunk/apps/name/django_template/file_java.js home/splunk/apps/name/django_template/script_that_edit.py home/splunk/apps/name/lookup/file_to_edit.csv  </code></pre>  <p>Thank you</p>"	2015-02-18 10:14:29.84 UTC	28606861	"<p>Thank you for your help, I'm trying to use the splunk binding, so I have take the three files: urls, views and mypage.html  So I have add the url: </p>  <pre><code>url(r'^mypage/$', 'mynewapp.views.myview', name='mypage'),  </code></pre>  <p>the render function:</p>  <pre><code>@render_to('mynewapp:mypage.html') @login_required def myview(request): with open(csvfile, ""r+"") as lines:          for line in lines:       file_data += line service = request.service return file_data </code></pre>  <p>and the mypage.html django code:</p>  <pre><code>{% for data in file_data %} {{ data }} {% endfor %} </code></pre>  <p>But there is something of wrong, but I don't understand what.</p>  <p>Instead of file_Data, I'm going to use a dictionary, but how can I Execute myscript python file using subprocess from mypage.html?</p>  <p>Thank you so much for your help.</p>"			2015-02-19 12:49:00.38 UTC
28580973	javascript|python|django|splunk	Call a python script using only javascript or django	"<p>I'm using <code>splunk</code> and its framework that works only in javascript and Django.  I would like open an external file and edit it, but with javascript is impossible and I'm not sure that with Django. If anyone know, please tell me how do this.</p>  <p>So, I thought that I can call an external script from javascript or Django, in python for example, that opens my file to edit, and send the results at my javascript page.</p>  <p>The file to edit is stored in the a different subfolder than my javascript page, but both of them are in the same splunk_app folder:</p>  <p>Such as </p>  <pre><code>home/splunk/apps/name/django_template/file_java.js home/splunk/apps/name/django_template/script_that_edit.py home/splunk/apps/name/lookup/file_to_edit.csv  </code></pre>  <p>Thank you</p>"	2015-02-18 10:14:29.84 UTC	28585684	"<p>Splunk is built on the django web framework. What you are trying to do is to execute code on the server side. To do that your will need to write your own view that will either </p>  <ol> <li>Execute your script python file using subprocess</li> <li>Embedding your code with the view</li> </ol>  <p>In vanilla django, assuming you have route the address to the correct view in your urls.py ,your views.py function should look like this : <a href=""https://docs.djangoproject.com/en/1.7/topics/http/views/"" rel=""nofollow"">https://docs.djangoproject.com/en/1.7/topics/http/views/</a></p>  <pre><code>from django.shortcuts import render ## function to return a response and render a html tempalte  def myView(request):     results = {} ## a dictionary to store your results/can be an array as well     ## your function here and store your data in results     with open('file.csv') as f:         ...         ...       return render(request, 'template.html', results )      ## you will be returning a javascript object call results </code></pre>  <p>and in your template you can either access them by the django template syntax </p>  <pre><code>{% for data in results %} &lt;p&gt;{{ data }}&lt;/p&gt; </code></pre>  <p>or you can store it in a variable </p>  <pre><code>var data = {{ results|safe }} </code></pre>  <p>Alternatively, splunk provide some bindings for doing your custom view. You can check out <a href=""http://dev.splunk.com/view/SP-CAAAEMP"" rel=""nofollow"">http://dev.splunk.com/view/SP-CAAAEMP</a></p>  <p>In principle it is the same. run your code within the function and return it as a dictionary .</p>  <pre><code>@render_to('your_app_name:pythondemo.html') @login_required def pythondemo_view(request):     file_data = ''      with open('file.csv') as f:        for line in f :             file_data += line      return file_data ##  </code></pre>  <p>this time you dont need to return a render becuase the splunk decorator will do it for you <code>@render_to</code></p>  <p>To do a subprocess, check out <a href=""http://pymotw.com/2/subprocess/"" rel=""nofollow"">http://pymotw.com/2/subprocess/</a></p>  <p>You might run in problems with file read/write/execution permissions problem, so I will strongly suggest that you place your code in the the request. </p>  <p>Either wise, since it is a python script, you can just wrap up your code in a function, and import it. For instance, </p>  <h2>in yourscripts.py</h2>  <pre><code>#!/usr/bin/env python def myFunction():     return 1 + 1  </code></pre>  <h2>and in your view.py do:</h2>  <pre><code>from youscripts import myFunction </code></pre>  <p>Let me know if you need any more help. You may need to ajdnust the code accordingly. If you want to call an external python script, do a subprocess command</p>"			2015-02-18 14:10:41.173 UTC
28592558	javascript|python|selenium|webdriver	How do I use python variable in a javascript?	"<p>I've been on a prowl looking for a way to access a non visible text field using selenium's webdriver. The only way i got it to work is using </p>  <pre><code>driver.execute_script(""document.getElementById('text_field').value+='XYZ'"") </code></pre>  <p>However, instead of using <code>XYZ</code>, I want to use python variables. </p>"	2015-02-18 19:47:51.067 UTC	28592634	"<p>If I am understanding the problem correctly you are trying to pass a <code>var</code>  instead of hard coded <code>XYZ</code></p>  <pre><code>driver.execute_script(""document.getElementById('text_field').value+='"" + var + ""'""); </code></pre>"			2015-02-18 19:51:40.073 UTC
28592558	javascript|python|selenium|webdriver	How do I use python variable in a javascript?	"<p>I've been on a prowl looking for a way to access a non visible text field using selenium's webdriver. The only way i got it to work is using </p>  <pre><code>driver.execute_script(""document.getElementById('text_field').value+='XYZ'"") </code></pre>  <p>However, instead of using <code>XYZ</code>, I want to use python variables. </p>"	2015-02-18 19:47:51.067 UTC	28592637	"<p>Unless I'm misisng something, one option is:</p>  <pre><code>driver.execute_script(""document.getElementById('text_field').value+='{0}'"".format(foo))  </code></pre>"			2015-02-18 19:51:51.75 UTC
28592558	javascript|python|selenium|webdriver	How do I use python variable in a javascript?	"<p>I've been on a prowl looking for a way to access a non visible text field using selenium's webdriver. The only way i got it to work is using </p>  <pre><code>driver.execute_script(""document.getElementById('text_field').value+='XYZ'"") </code></pre>  <p>However, instead of using <code>XYZ</code>, I want to use python variables. </p>"	2015-02-18 19:47:51.067 UTC	28595779	"<p>The normal way to pass variables to the JavaScript code you execute through Selenium is to just pass the variables to <code>execute_script</code>:</p>  <pre><code>foo = ""something"" driver.execute_script("""""" var foo = arguments[0]; document.getElementById('text_field').value += foo; """""", foo) </code></pre>  <p>You retrieve the argument on the JavaScript side through the <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/arguments"" rel=""noreferrer""><code>arguments</code> object</a>. You can do this because the code you pass to <code>execute_script</code> is wrapped in a function so what is executed is something like:</p>  <pre><code>function () {     var foo = arguments[0];     document.getElementById('text_field').value += foo; } </code></pre>  <p>and the function is called with the arguments that were passed to <code>execute_script</code>. The arguments are serialized automatically by Selenium.</p>  <p>Interpolating with <code>.format</code> or concatenating strings are fragile ways to do it. For instance if you do <code>'var foo = ""' + foo + '""'</code> this will break as soon as your <code>foo</code> variable has a double quote in it (same with <code>'var foo = ""{0}""'.format(foo)</code>). Using <code>json.dumps</code> is going to avoid this and will work in most cases but it does not take care of something like this:</p>  <pre><code>el = driver.find_element("".something"")  // Do stuff with el on the Python side.  driver.execute_script("""""" var el = arguments[0]; // Do something with el on the JavaScript side. """""") </code></pre>  <p>Selenium knows how to convert the Python object it gives you when you find an object to a DOM object on the JavaScript side. <code>json.dumps</code> does not do this.</p>"			2015-02-18 23:12:27.593 UTC
28592558	javascript|python|selenium|webdriver	How do I use python variable in a javascript?	"<p>I've been on a prowl looking for a way to access a non visible text field using selenium's webdriver. The only way i got it to work is using </p>  <pre><code>driver.execute_script(""document.getElementById('text_field').value+='XYZ'"") </code></pre>  <p>However, instead of using <code>XYZ</code>, I want to use python variables. </p>"	2015-02-18 19:47:51.067 UTC	28592656	"<p>You need to obtain a JavaScript string representation of your Python variable's value, and insert that into your JavaScript command. Fortunately, Python's <code>json</code> module will do this for you.</p>  <pre><code>from json import dumps  driver.execute_script(""document.getElementById('text_field').value+="" +                       dumps(my_python_variable)) </code></pre>  <p>I would be wary of just inserting the value into the quote marks as other answers have shown. What if the value already has quote marks in it, or special characters that need escaping? What if it's not a string at all? <code>json.dumps</code> will handle all the necessary formatting and escaping for you, appropriate to the type of your variable.</p>"			2015-02-18 19:53:11.46 UTC
28617115	javascript|python	Parsing Javascript variable to Python via Flask	"<p>I am currently working on a project that requires parsing variables from a javascript function every 5 ms to a python script that is running. I have an HTML server hosted with flask, but I can't seem to find a fairly simple way to get the variables into the python script. Here is the webpage I am trying to parse the data from: <a href=""http://www.html5rocks.com/en/tutorials/device/orientation/deviceorientationsample.html"" rel=""nofollow"">http://www.html5rocks.com/en/tutorials/device/orientation/deviceorientationsample.html</a></p>  <p>I plan on having that run from the flask server which will also run the car with the data returned from the javascript variables. Any advice on a fairly easy setup would be greatly appreciated!</p>"	2015-02-19 21:19:41.04 UTC	28617207	"<p>This is not going to work well if timing is important. The only way to get that data to the server code is with an HTTP request. Sending one every 5ms is not a good idea, and the request is not guaranteed to happen in a timely fashion.</p>  <p>This kind of quick back and forth is going to be best accomplished with websockets, in my opinion. Even then, 5ms is too quick to really accomplish something like this.</p>  <p>You may want to record the data in javascript and only send it to the server every x number of seconds using either websockets or AJAX.</p>"			2015-02-19 21:25:20.483 UTC
28642999	python|v8|pyv8	Converting Python objects to JavaScript for PyV8	"<p>I'm trying to pass Python data (lists, dicts, strings..., arbitrarily nested) to PyV8.</p>  <pre><code>class Global(object):     def __init__(self, data):         self.data = data ctx = PyV8.JSContext(Global([{'a':1}])) ctx.enter() res = ctx.eval('data.length') js_len = PyV8.convert(res) print js_len </code></pre>  <p>The code above prints None, presumably because the data object is not transformed to a JSArray and thus <code>data.length</code> evaluates to <code>undefined</code>. Is there a reliable way to do the necessary conversion in PyV8 other than using JSON?</p>"	2015-02-21 06:43:08.08 UTC	28652754	"<p>Apparently PyV8 doesn't correctly convert python lists to Javascript arrays, which leads <code>my_list.length</code> to return <code>undefined</code>, which is getting converted to None.</p>  <pre><code>ctx = PyV8.JSContext() ctx.enter() ctx.locals.a = [{'a':1}] print ctx.locals.a #&gt; [{'a': 1}] print ctx.eval(""a.length"") #&gt; None print ctx.eval(""a[0].a"") #&gt; 1 ctx.locals.blub = {'a':1} print ctx.eval(""blub.a"") #&gt; 1 print ctx.eval(""Object.keys(blub)"") #&gt; a ctx.locals.blub = {'a':[1,2,3]} print ctx.eval(""Object.keys(blub)"") #&gt; a print ctx.eval(""blub.a"") #&gt; [1, 2, 3] ctx.locals.blub2 = [{'a':[1,2,3]}] print ctx.eval(""blub2"") #&gt; [{'a': [1, 2, 3]}] print ctx.eval(""blub2.length"") #&gt; None print ctx.eval(""Array.isArray(blub2)"") #&gt; False print ctx.eval(""typeof(blub2)"") #&gt; object print ctx.eval(""blub2[0].a"") #&gt; [1, 2, 3] print ctx.eval(""typeof(blub.a)"") #&gt; object print ctx.eval(""Array.isArray(blub.a)"") #&gt; False </code></pre>  <p>The answer is to use <code>PyV8.JSArray(my_list)</code>. I've written the following helper functions for my project that deal with various little problems and make it easy to convert back and forth between python and js objects. These are targeted <a href=""https://stackoverflow.com/questions/28416300/error-installing-pyv8-from-source-on-ubuntu/28422675#28422675"">at a specific version of PyV8 however (which is the only version I can recommend, see discussion in the linked issues)</a>, so your results may vary if you use them as-is. Example usage:</p>  <pre><code>ctx.locals.blub3 = get_js_obj({'a':[1,2,3]}) ctx.locals.blub4 = get_js_obj([1,2,3]) ctx.eval(""blub3.a.length"") #&gt; 3 ctx.eval(""blub4.length"") #&gt; 3 </code></pre>  <p>And here are the functions.</p>  <pre><code>def access_with_js(ctx, route):     if len(route) == 0:         raise Exception(""route must have at least one element"")     accessor_string = route[0]     for elem in route[1:]:         if type(elem) in [str, unicode]:             accessor_string += ""['"" + elem + ""']""         elif type(elem) == int:             accessor_string += ""["" + str(elem) + ""]""         else:             raise Exception(""invalid element in route, must be text or number"")     return ctx.eval(accessor_string)  def get_py_obj(ctx, obj, route=[]):     def dict_is_empty(dict):         for key in dict:             return False         return True      def access(obj, key):         if key in obj:             return obj[key]         return None      cloned = None     if isinstance(obj, list) or isinstance(obj, PyV8.JSArray):         cloned = []         temp = str(access_with_js(ctx, route)) #working around a problem with PyV8 r429         num_elements = len(obj)         for index in range(num_elements):             elem = obj[index]             cloned.append(get_py_obj(ctx, elem, route + [index]))     elif isinstance(obj, dict) or isinstance(obj, PyV8.JSObject):         cloned = {}         for key in obj.keys():             cloned_val = None             if type(key) == int:                 #workaround for a problem with PyV8 where it won't let me access                 #objects with integer accessors                 val = None                 try:                     val = access(obj, str(key))                 except KeyError:                     pass                 if val == None:                     val = access(obj, key)                 cloned_val = get_py_obj(ctx, val, route + [key])             else:                 cloned_val = get_py_obj(ctx, access(obj, key), route + [key])             cloned[key] = cloned_val     elif type(obj) == str:         cloned = obj.decode('utf-8')     else:         cloned = obj     return cloned  def get_js_obj(ctx,obj):     #workaround for a problem with PyV8 where it will implicitely convert python lists to js objects     #-&gt; we need to explicitely do the conversion. see also the wrapper classes for JSContext above.     if isinstance(obj, list):         js_list = []         for entry in obj:             js_list.append(get_js_obj(ctx,entry))         return PyV8.JSArray(js_list)     elif isinstance(obj, dict):         js_obj = ctx.eval(""new Object();"") # PyV8.JSObject cannot be instantiated from Python         for key in obj.keys():              try:                 js_obj[key] = get_js_obj(ctx,obj[key])             except Exception, e:                 # unicode keys raise a Boost.Python.ArgumentError                  # which can't be caught directly:                 # https://mail.python.org/pipermail/cplusplus-sig/2010-April/015470.html                 if (not str(e).startswith(""Python argument types in"")):                     raise                 import unicodedata                 js_obj[unicodedata.normalize('NFKD', key).encode('ascii','ignore')] = get_js_obj(ctx,obj[key])         return js_obj     else:         return obj </code></pre>"			2015-02-21 23:42:08.653 UTC
28660281	javascript	Regular expressions in python to javascript	"<p>How to convert the regular expression in the function below which I have done in python to javascript?</p>  <pre><code>def data_validation(str):     r=re.compile('[0-9]{3}/[0-9]{2,3}')     if len(str)==7 or len(str)==6:         if r.match(str):             return True         else:             return False </code></pre>"	2015-02-22 16:33:12.387 UTC	28660358	"<p>I don't know python, but I guess the JavaScript equivalent is</p>  <pre><code>function data_validation(str) {     if (str.length == 7 || str.length == 6)         return /[0-9]{3}\/[0-9]{2,3}/.test(str); } </code></pre>"			2015-02-22 16:40:00.293 UTC
28660281	javascript	Regular expressions in python to javascript	"<p>How to convert the regular expression in the function below which I have done in python to javascript?</p>  <pre><code>def data_validation(str):     r=re.compile('[0-9]{3}/[0-9]{2,3}')     if len(str)==7 or len(str)==6:         if r.match(str):             return True         else:             return False </code></pre>"	2015-02-22 16:33:12.387 UTC	28660447	"<p>The following snippet matches the passed regex literal in javascript and returns false if it is not a match (incidentally your python function will not return a value when the string is not 6 or 7 characters in length).</p>  <p><div class=""snippet"" data-lang=""js"" data-hide=""false""> <div class=""snippet-code""> <pre class=""snippet-code-js lang-js prettyprint-override""><code>function data_validation(str) {   if ((str.length == 7) || (str.length == 6)) {     if (str.match(/[0-9]{3}\/[0-9]{2,3}/)) {       return true;     }   }   return false; }  alert(data_validation(""555/12"")); alert(data_validation(""hello""));</code></pre> </div> </div> </p>"			2015-02-22 16:47:08.137 UTC
28678872	javascript|python	Detect javascript console output with python	"<p>When I'm working in a javascript-heavy application I like to use Console.log() a lot for debugging. However, I want to ensure I've properly suppressed all console logging in production.</p>  <p>I'd like to create a python script to walk through a site and generate a list of pages that write something to the console. I know I could just have it rip through the javascript files before minimization and search for ""Console.Log"" but I'm often the analyst on a project and consequently don't have access to the codebase. We also have a ton of sites that haven't been touched in a while but could use a scan (great intern project :-) ).</p>  <p>Is this doable with python? </p>"	2015-02-23 16:49:10.04 UTC	28678939	"<p>What you can do is to use <a href=""http://selenium-python.readthedocs.org/"" rel=""nofollow noreferrer""><code>selenium</code> browser automation tool</a> and check the console logs:</p>  <pre><code>from selenium import webdriver from selenium.webdriver.common.desired_capabilities import DesiredCapabilities      capabilities = DesiredCapabilities.CHROME capabilities['loggingPrefs'] = { 'browser':'ALL' }  driver = webdriver.Chrome(desired_capabilities=capabilities)  driver.get('http://foo.com')  # print console log messages for entry in driver.get_log('browser'):     print entry </code></pre>  <p>Taken from <a href=""https://stackoverflow.com/questions/20907180/getting-console-log-output-from-chrome-with-selenium-python-api-bindings"">Getting console.log output from Chrome with Selenium Python API bindings</a>.</p>"			2015-02-23 16:52:23.013 UTC
28703697	javascript|python|arrays|dictionary	Parsing javaScript arrays in the Python dictionaries	"<p>So I have a public webpage that contains something like the following code:</p>  <pre><code>var arrayA = new Array(); arrayA[0] = new customItem(""1"",""Name1"",""description1"",1.000,2.000);arrayA[1] = new customItem(""2"",""Name2"",""description2"",4.000,8.000); </code></pre>  <p>What I want to do is to have Python to read this page and convert the data into 2 dictionaries with the name+description being the key.</p>  <p>i.e., </p>  <pre><code>dict1[""Name1Description1""] = 1.000  dict2[""Name1Description1""] = 2.000  dict1[""Name2Description2""] = 4.000  dict2[""Name2Description2""] = 8.000 </code></pre>  <p>Is there an easy way we could do this or we pretty much have to parse it as any other string? Obviously the array could be of any length.</p>  <p>Thanks!</p>"	2015-02-24 18:41:15.92 UTC	28704633	"<p>Yes, this is possible using regular expressions.</p>  <pre><code>import re  st = ''' var arrayA = new Array(); arrayA[0] = new customItem(""1"",""Name1"",""description1"",1.000,2.000);arrayA[1] = new customItem(""2"",""Name2"",""description2"",4.000,8.000); '''  dict1, dict2 = {}, {} matches = re.findall('\""(\d+)\"",\""(.*?)\"",\""(.*?)\"",(\d+.\d+),(\d+.\d+)', st, re.DOTALL) for m in matches:     key = m[1] + m[2]     dict1[key] = float(m[3])     dict2[key] = float(m[4])  print(dict1) print(dict2)  # {'Name1description1': 1.0, 'Name2description2': 4.0} # {'Name1description1': 2.0, 'Name2description2': 8.0} </code></pre>  <p>The logic of the regular expression is:</p>  <pre><code>\"" - Match a double quote \""(\d+)\"" - Match any number of digits contained in between two double quotes \""(.*?)\"" - Match any number of any characters contained between two double quotes (\d+.\d+) - Match any number of numbers with a dot followed by any number of numbers , - Match a comma </code></pre>  <p>So the regular expression will match the js string input with this expected pattern. But I assume the js is without spaces between the commas. You could first strip out of the commas and then run it.</p>"			2015-02-24 19:32:27.637 UTC
28711667	javascript|ipython-notebook|console.log	ipython %%javascript magic output into cell and console	"<p>How to adjust ipythons' <code>%%javascript</code> cell magic so that it  outputs both to output cell of ipython and to console of the browser as shown below<img src=""https://i.stack.imgur.com/hBort.png"" alt=""cellmagic""> </p>  <p>I don't want to use <code>alert()</code>. Furthermore, I tried to get similar behavior with nodejs using <code>%%script</code> magic</p>  <pre><code>%%script node console.log(""Hi"") </code></pre>  <p>But this is not what I need. </p>"	2015-02-25 05:14:47.78 UTC	30387274	"<p>Just came across this which got me part of the way there but as noted if you use only element.text() you only get the last one.  But you can use element.append() repeatedly in the same cell with the %%javascript and and all of the output will go to the following cell.  Just make sure to append a &lt;br&gt; if you want a carriage return.  Like for example</p>  <pre><code>function assert(cond,msg) {    if (!cond)    {      element.append(msg + ""&lt;br&gt;"");    } } </code></pre>"			2015-05-22 02:07:36.517 UTC
28711667	javascript|ipython-notebook|console.log	ipython %%javascript magic output into cell and console	"<p>How to adjust ipythons' <code>%%javascript</code> cell magic so that it  outputs both to output cell of ipython and to console of the browser as shown below<img src=""https://i.stack.imgur.com/hBort.png"" alt=""cellmagic""> </p>  <p>I don't want to use <code>alert()</code>. Furthermore, I tried to get similar behavior with nodejs using <code>%%script</code> magic</p>  <pre><code>%%script node console.log(""Hi"") </code></pre>  <p>But this is not what I need. </p>"	2015-02-25 05:14:47.78 UTC	28713427	<p>you have access to the output Dom node under the variable named <code>element</code> wrapped in jquery. So:</p>  <pre><code>%%javascript element.text('Hi') console.log('There') </code></pre>			2015-02-25 07:25:54.383 UTC
28765398	javascript|python|html|web-scraping|beautifulsoup	How to fetch data from a website using Python that is being populated by Javascript?	"<p>I want to fetch few data/values from  a website. I have used <code>beautifulsoup</code> for this and the fields are blank when I try to fetch them from my Python script, whereas when I am inspecting elements of the webpage I can clearly see the values are available in the table row data. When i saw the HTML Source I noticed its blank there too. I came up with a reason, the website is using <code>Javascript</code> to populate the values in their corresponding fields from its own database. If so then how can i fetch them using Python? </p>"	2015-02-27 12:42:35.74 UTC	28850142	"<p>Yes, you can scrape JS data, it just takes a bit more hacking. Anything a browser can do, python can do.</p>  <p>If you're using firebug, look at the <code>network</code> tab to see from which particular request your data is coming from. In chrome element inspection, you can find this information in a tab named <code>network</code>, too. Just hit ctrl-F to search the response content of the requests.</p>  <p>If you found the right request, the data might be embedded in JS code, in which case you'll have some regex parsing to do. If you're lucky, the format is xml or json, in which case you can just use the associated builtin parser.</p>"			2015-03-04 08:53:41.9 UTC
28765398	javascript|python|html|web-scraping|beautifulsoup	How to fetch data from a website using Python that is being populated by Javascript?	"<p>I want to fetch few data/values from  a website. I have used <code>beautifulsoup</code> for this and the fields are blank when I try to fetch them from my Python script, whereas when I am inspecting elements of the webpage I can clearly see the values are available in the table row data. When i saw the HTML Source I noticed its blank there too. I came up with a reason, the website is using <code>Javascript</code> to populate the values in their corresponding fields from its own database. If so then how can i fetch them using Python? </p>"	2015-02-27 12:42:35.74 UTC	28852463	<p>The Python binding for Selenium and phantomjs (if you want to use a headless browser as backend) are the appropriate tools for this job. </p>			2015-03-04 10:46:40.717 UTC
28767896	javascript|python|html|url|xss	How do I catch javascript code injection in URL using python?	"<p>How do I detect malformed URLs, or URLs with javascript injected in them</p>  <pre><code>'http://example.com/portal/image/user_male_portrait?img_id=755109&amp;t=1372243875358""&gt;&lt;script&gt;setTimeout(function () {document.body.innerHTML = \'&lt;img src=""http://images.example.com:9191/public/rickroll.gif"" style=""display: block; width: 100%""&gt;\'; }, 100);&lt;/script&gt;&lt;!--'  'http://example.com/portal/image/user_male_portrait?img_id=566203&amp;t=1350313911834' </code></pre>  <p>The first URL is malicious while the second one is not. I want to be able to flag the first one. I can use regex to match script tags I suppose but is this the way to do it with Python?</p>"	2015-02-27 14:53:16.273 UTC	28771807	"<p>It would be really hard to do a regular expression that would know if an URL is an attempt at script injection or not. To match the example you gave, searching for <code>&lt;script</code> would be enough.</p>  <p>But a <code>&lt;script&gt;</code> tag is not the only dangerous thing in HTML: consider for example the URL <code>http://example.com/portal/image/user_male_portrait?img_id=755109&amp;t=1372243875358"" onclick=""setTimeout(function () { document.body.innerHTML = '&lt;img src=""http://images.example.com:9191/public/rickroll.gif"" style=""display: block; width: 100%""&gt;'; }, 100);""</code>.  There is no <code>&lt;script&gt;</code> tag at all.</p>  <hr>  <p>All in all, the only thing really can do in regex is to reject any URL that matches</p>  <pre><code>(?i)^(?!\s*https?://)|[&lt;&gt;""'] </code></pre>  <p>That is reject any URL where there is <code>&lt;&gt;""'</code> in bare; and reject all URLs that start with anything else than the regex <code>https?://</code> (after all, even with the previous check, I could still do</p>  <pre><code>javascript:alert(Object.keys({gotcha:42})) </code></pre>  <hr>  <p>However, <em>if</em> this is a case of input sanitization, then do note that one can also always percent-encode <code>&lt;</code>, <code>&gt;</code>, <code>""</code> and <code>'</code> in <em>any</em> URL without damage, so maybe:</p>  <pre><code>url.replace('&lt;', '%3C').replace('&gt;', '%3E')\    .replace('""', '%22').replace(""'"", '%27') </code></pre>  <p>is a more sensible thing to do (along with checking that the <code>scheme</code> indeed is either <code>""http:""</code> or <code>""https:""</code>). Or use <code>urllib.parse.urlparse</code> to split the URL into components, then decode and re-encode it, and finally use <code>urllib.parse.urlunparse</code> to make it into a URL again.</p>"			2015-02-27 18:23:20.923 UTC
28785468	javascript	converting python code to javascript code	"<p>can somebody help for my code which is written in python, i want to write it in javascript but im in trouble, i dont know how. python code</p>  <pre><code>cities={} for line in open(""linnadkaugustega.txt"", ""r"", encoding=""UTF-8""):     m=line.strip().split()     abim=[word.split("":"") for word in m[1:]]     cities[m[0]]={}      for couple in abim:         cities[m[0]][couple[0]]=int(couple[1])  print(cities); </code></pre>  <p>and i tried in javascript but that doesen't work</p>  <pre><code>function tere(){     console.log(""Tere"");      $.get('read.txt', function(data) {          cities={};          var lines = (data.trim()).split();          abim=[var word.split("":"") for word in m[1:]]          cities[m[0]]={};          for var couple in abim              cities[m[0]][couple[0]]=couple[1];              console.log(cities);     }, 'text'); }  tere(); </code></pre>  <p>can somebody help me ?</p>"	2015-02-28 18:49:17.493 UTC	28786464	"<p>A few things:</p>  <ul> <li><a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/split"" rel=""nofollow""><code>.split()</code> in JS</a> does something different than <a href=""https://docs.python.org/2/library/stdtypes.html#str.split"" rel=""nofollow""><code>split</code> in python</a> when no separator is given. To split a line into words, you'll need to split on whitespaces explicitly</li> <li>you're missing the <code>for</code> loop over the lines of the file. Python uses the iterator syntax for reading from the file, in JavaScript an <a href=""https://en.wikipedia.org/wiki/Ajax_(programming)"" rel=""nofollow"">ajax request</a> loads the whole file and you'll need to split it in lines yourself.</li> <li>JavaScript does not have that <code>m[1:]</code> syntax, you'll need to use the <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/slice"" rel=""nofollow""><code>.slice()</code> method</a> instead</li> <li>JavaScript does not have array/list comprehensions. You will need to use an explicit loop, or the <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map"" rel=""nofollow""><code>map</code> method</a> of arrays</li> <li>your loop syntax is too pythonic. In JavaScript, <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/for"" rel=""nofollow""><code>for</code> loops</a> need parenthesis and an index variable.</li> </ul>  <p>So this should do (supposed you have the jQuery library loaded and it finds the file):</p>  <pre><code>$.get('read.txt', function(data) {     var cities = {};     var lines = data.split(""\n"");     for (var i=0; i&lt;lines.length; i++) {         var line = lines[i];         var m = line.trim().split(/\s+/);         var abim = m.slice(1).map(function(word) {             return word.split("":"");         });         var obj = cities[m[0]] = {};         for (var j=0; j&lt;abim.length; j++) {             var couple = abim[j];             obj[couple[0]] = couple[1];         }     }     console.log(cities); }, 'text'); </code></pre>"			2015-02-28 20:24:35.463 UTC
28785468	javascript	converting python code to javascript code	"<p>can somebody help for my code which is written in python, i want to write it in javascript but im in trouble, i dont know how. python code</p>  <pre><code>cities={} for line in open(""linnadkaugustega.txt"", ""r"", encoding=""UTF-8""):     m=line.strip().split()     abim=[word.split("":"") for word in m[1:]]     cities[m[0]]={}      for couple in abim:         cities[m[0]][couple[0]]=int(couple[1])  print(cities); </code></pre>  <p>and i tried in javascript but that doesen't work</p>  <pre><code>function tere(){     console.log(""Tere"");      $.get('read.txt', function(data) {          cities={};          var lines = (data.trim()).split();          abim=[var word.split("":"") for word in m[1:]]          cities[m[0]]={};          for var couple in abim              cities[m[0]][couple[0]]=couple[1];              console.log(cities);     }, 'text'); }  tere(); </code></pre>  <p>can somebody help me ?</p>"	2015-02-28 18:49:17.493 UTC	28785690	"<p>You have syntax issues translating from python to js. Heres how arrays work...</p>  <p>if you have an array litteral in javascript</p>  <pre><code>var cities = []; </code></pre>  <p>Then we would add to the array by calling push</p>  <pre><code>cities.push('Portland'); ... cities.push('New York'); </code></pre>  <p>we can then iterate over the array by calling forEach on the array object.</p>  <pre><code>cities.forEach(function (city, index){     //do work on each city     console.log(city); }); // Portland // New York </code></pre>"			2015-02-28 19:09:17.59 UTC
28788244	python|python-2.7|web-scraping	Scraping Javascript based websites with Python	"<p>I am trying to scrap data from here (using python 2.7):</p>  <p><a href=""http://financials.morningstar.com/valuation/earnings-estimates.html?t=AMD"" rel=""nofollow noreferrer"">http://financials.morningstar.com/valuation/earnings-estimates.html?t=AMD</a></p>  <p>When I right click and choose ""View Page Sources"" in Chrome browser, the content that I am looking for is not there. For example I am looking for ""Average Rating"". </p>  <p>I searched Stackoverflow and saw this question and answer: <a href=""https://stackoverflow.com/questions/11804497/python-3-web-scraping-and-javascript-oh-my"">Python 3, Web-scraping, and Javascript [Oh My]</a> But when I tried the main answer, I could not find any <code>XMLHttpRequest</code> function.</p>  <p>I appreciate any help on this.</p>"	2015-02-28 23:33:56.93 UTC	28788426	<p>It looks like the data you want is pulled from</p>  <pre><code>http://financials.morningstar.com/valuation/annual-estimate-list.action?&amp;t=XNAS:AMD&amp;region=usa&amp;culture=en-US&amp;cur=&amp;r=1425167484279.9668&amp;_=1425167484280 http://financials.morningstar.com/valuation/analyst-opinion-list.action?&amp;t=XNAS:AMD&amp;region=usa&amp;culture=en-US&amp;cur=&amp;r=1425167484282.3906&amp;_=1425167484282 http://financials.morningstar.com/valuation/forward-comparisons-list.action?&amp;t=XNAS:AMD&amp;region=usa&amp;culture=en-US&amp;cur=&amp;r=1425167484284.5396&amp;_=1425167484284 </code></pre>  <p>You should be able to scrape these urls directly.</p>			2015-02-28 23:56:39.233 UTC
28862093	javascript|python|firefox|selenium|selenium-webdriver	"For Python, getting WebDriverException: Message: u'[JavaScript Error: ""e is null"""	"<p>I've come across a scenario that seems to only fail on Firefox under certain conditions.  In my code...</p>  <pre><code>    driver.get(url('/Points/Inputs/'))     assertRowTrue(driver, 2, 11, ""True"") </code></pre>  <p>I'm receiving the error...</p>  <pre><code>E           WebDriverException: Message: u'[JavaScript Error: ""e is null"" {file:  ""file:///tmp/anonymous7279155570809486473webdriver-profile/extensions/fxdriver@ googlecode.com/components/command-processor.js"" line: 7854}]\'[JavaScript Error:  ""e is null"" {file: ""file:///tmp/anonymous7279155570809486473webdriver-profile/e xtensions/fxdriver@googlecode.com/components/command-processor.js"" line: 7854}]\ ' when calling method: [nsICommandProcessor::execute]\nBuild info: version: \'2. 43.0\', revision: \'597b76b\', time: \'2014-09-09 20:52:14\'\nSystem info: host:  \'8efca6f08729\', ip: \'172.17.0.3\', os.name: \'Linux\', os.arch: \'amd64\', o s.version: \'3.13.0-24-generic\', java.version: \'1.7.0_65\'\nDriver info: drive r.version: unknown' ; Screenshot: available via screen </code></pre>  <p>Looking around, this issue was mention and explained in a previous question <a href=""https://stackoverflow.com/questions/25212405/getting-javascript-error-e-is-null-when-using-assert-to-verify-javascript-ale?answertab=active#tab-top"">here</a>.  The problem with my particular scenario is that it's NOT the result of an Alert, so when I attempt close the alert...</p>  <pre><code>driver.switch_to_alert().dismiss() </code></pre>  <p>...I receive a <code>NoAlertPresentException</code>.  </p>  <p>Is there a way to get around this error when an Alert is not the culprit until Selenium gets around to fixing this issue?</p>  <h2>UPDATE (June 6, 2015)</h2>  <p>Trying the answer listed below worked for a while, but went back to the original error I was seeing.  Here's an example of a test I have that's failing.</p>  <p>Hey @alecxc.  Here's an example that fails.  I visit a specific web page to verify that a row [in a table] contains the information that I expected it to.  For this, I used my own definition <strong>assertRowTrue()</strong></p>  <p><code>assertRowTrue(driver, 2, 11, ""Online"")</code></p>  <p>The this def, I've created the code.</p>  <pre><code>def assertRowTrue(driver, row, column, value):     try:         WebDriverWait(driver, 30).until(             expected_conditions.text_to_be_present_in_element((By.XPATH, ""//tr[""+str(row)+""]/td[""+str(column)+""]/div""), value)         )     except TimeoutException:         raise Exception(""ERROR : VALUE NOT EQUAL TO EXPECTED VALUE \""""+value+""\"".  ACTUAL VALUE:  "", driver.find_element_by_xpath(""//tr[""+str(row)+""]/td[""+str(column)+""]/div"").text) </code></pre>  <p>..where <strong>row</strong> and <strong>column</strong> point to the location in the table &amp; <strong>value</strong> represents the value to expect there. On Firefox, it fails at the <strong>expected_condition()</strong> portion of the code.  Chrome, however, runs this code without any errors.</p>"	2015-03-04 18:27:30.307 UTC	28864507	<p>You are experiencing <strong>compatibility issues</strong> between <code>selenium</code> 2.43 and <code>firefox</code> 36.</p>  <p>The easiest option right now would be to <strong>upgrade selenium</strong> to 2.45:</p>  <pre><code>pip install --upgrade selenium </code></pre>			2015-03-04 20:42:59.01 UTC
28905975	python|selenium	Use Selenium to click javascript image in Python	"<p>I am trying to use Selenium to click on a javascript image on a webpage, but can't figure out how to do it.</p>  <p>The code I have so far is:</p>  <pre><code>from selenium import webdriver from selenium.webdriver.common.keys import Keys from selenium.webdriver.common.action_chains import ActionChains  driver = webdriver.Firefox() driver.get(""http://explorer.natureserve.org/servlet/NatureServe?init=Ecol"") assert ""NatureServe"" in driver.title #elem = driver.find_element_by_name("""") SciName = driver.find_element_by_name('nameSpec') SciName.send_keys(names) mouse = webdriver.ActionChains(driver) element = driver.find_element_by_name('nameCriteriaForm') mouse.move_to_element(span_element).click().perform() </code></pre>  <p>The last two lines are clearly wrong. What I want to select is located in the page source as:</p>  <pre><code>&lt;a href=""javascript:save_information('review.wmt')""&gt;&lt;img src="" http://explorer.natureserve.org/images/search_now.gif"" width=""77"" height=""17"" border=""0"" align=""absmiddle""&gt;&lt;/a&gt; </code></pre>  <p>It is located multiple times on the page and links to a gif.</p>"	2015-03-06 19:13:12.467 UTC	28906190	"<pre><code>from selenium import webdriver from selenium.webdriver.common.keys import Keys from selenium.webdriver.common.action_chains import ActionChains  driver = webdriver.Firefox() driver.get(""http://explorer.natureserve.org/servlet/NatureServe?init=Ecol"") SciName = driver.find_element_by_name('nameSpec') SciName.send_keys(names) SciName.submit() </code></pre>"			2015-03-06 19:28:28.193 UTC
28974838	javascript|python|asp.net|web-scraping|scrapy	Crawling through pages with PostBack data javascript Python Scrapy	"<p>I'm crawling through some directories with ASP.NET programming via Scrapy.</p>  <p>The pages to crawl through are encoded as such:</p>  <p><code>javascript:__doPostBack('ctl00$MainContent$List','Page$X')</code></p>  <p>where X is an int between 1 and 180.  The MainContent argument is always the same.  I have no idea how to crawl into these.  I would love to add something to the SLE rules as simple as <code>allow=('Page$')</code> or <code>attrs='__doPostBack'</code>, but my guess is that I have to be trickier in order to pull the info from the javascript ""link.""</p>  <p>If it's easier to ""unmask"" each of the absolute links from the javascript code and save those to a csv, then use that csv to load requests into a new scraper, that's okay, too.</p>"	2015-03-10 21:55:45.907 UTC	28976674	"<p>This kind of pagination is not that trivial as it may seem. It was an interesting challenge to solve it. There are several important notes about the solution provided below:</p>  <ul> <li>the idea here is to follow the pagination page by page passing around the current page in the <a href=""http://doc.scrapy.org/en/latest/topics/request-response.html#scrapy.http.Request.meta""><code>Request.meta</code> dictionary</a></li> <li>using a <a href=""http://doc.scrapy.org/en/latest/topics/spiders.html#scrapy.spider.Spider"">regular <code>BaseSpider</code></a> since there is some logic involved in the pagination </li> <li>it is important to provide <code>headers</code> pretending to be a real browser</li> <li>it is important to yield <a href=""http://doc.scrapy.org/en/latest/topics/request-response.html#scrapy.http.FormRequest""><code>FormRequest</code></a>s with<code>dont_filter=True</code> since we are basically making a <code>POST</code> request to the same URL but with different parameters</li> </ul>  <p>The code:</p>  <pre><code>import re  from scrapy.http import FormRequest from scrapy.spider import BaseSpider   HEADERS = {     'X-MicrosoftAjax': 'Delta=true',     'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_2) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2272.76 Safari/537.36' } URL = 'http://exitrealty.com/agent_list.aspx?firstName=&amp;lastName=&amp;country=USA&amp;state=NY'   class ExitRealtySpider(BaseSpider):     name = ""exit_realty""      allowed_domains = [""exitrealty.com""]     start_urls = [URL]      def parse(self, response):         # submit a form (first page)         self.data = {}         for form_input in response.css('form#aspnetForm input'):             name = form_input.xpath('@name').extract()[0]             try:                 value = form_input.xpath('@value').extract()[0]             except IndexError:                 value = """"             self.data[name] = value          self.data['ctl00$MainContent$ScriptManager1'] = 'ctl00$MainContent$UpdatePanel1|ctl00$MainContent$agentList'         self.data['__EVENTTARGET'] = 'ctl00$MainContent$List'         self.data['__EVENTARGUMENT'] = 'Page$1'          return FormRequest(url=URL,                            method='POST',                            callback=self.parse_page,                            formdata=self.data,                            meta={'page': 1},                            dont_filter=True,                            headers=HEADERS)      def parse_page(self, response):         current_page = response.meta['page'] + 1          # parse agents (TODO: yield items instead of printing)         for agent in response.xpath('//a[@class=""regtext""]/text()'):             print agent.extract()         print ""------""          # request the next page         data = {             '__EVENTARGUMENT': 'Page$%d' % current_page,             '__EVENTVALIDATION': re.search(r""__EVENTVALIDATION\|(.*?)\|"", response.body, re.MULTILINE).group(1),             '__VIEWSTATE': re.search(r""__VIEWSTATE\|(.*?)\|"", response.body, re.MULTILINE).group(1),             '__ASYNCPOST': 'true',             '__EVENTTARGET': 'ctl00$MainContent$agentList',             'ctl00$MainContent$ScriptManager1': 'ctl00$MainContent$UpdatePanel1|ctl00$MainContent$agentList',             '': ''         }          return FormRequest(url=URL,                            method='POST',                            formdata=data,                            callback=self.parse_page,                            meta={'page': current_page},                            dont_filter=True,                            headers=HEADERS) </code></pre>"			2015-03-11 00:45:37.91 UTC
29040499	javascript|python|bytearray	Python and Javascript	"<p>Have a problem. Have this code:</p>  <pre><code>response = bytearray(unichr(int(code)), 'UTF-8') </code></pre>  <p>It returns byte array from code, where code = int</p>  <p>Need similar code for javascript. I've tried:</p>  <pre><code>var arr = new Uint8Array(1); arr[0]=(+code).toString(16); </code></pre>  <p>Tried</p>  <pre><code>var arr = new Uint8Array(1); arr[0]=String.fromCharCode(code); </code></pre>  <p>Could you help me? Thanks a lot.</p>"	2015-03-13 19:31:05.967 UTC	32566859	"<p>Encoding and decoding strings is much easier if you are willing and able to use the <a href=""https://developer.mozilla.org/en-US/docs/Web/API/Encoding_API"" rel=""nofollow"">Encoding API</a> as shown in this code example.</p>  <p><div class=""snippet"" data-lang=""js"" data-hide=""false""> <div class=""snippet-code""> <pre class=""snippet-code-js lang-js prettyprint-override""><code>//Encoding var encoder = new TextEncoder(); var byteArray = new Uint8Array(encoder.encode(""ABCダチヂ""));  //Output: [65, 66, 67, 227, 131, 128, 227, 131, 129, 227, 131, 130] //         ^   ^   ^   ^              ^              ^ //         |   |   |   |              |              | // //         A   B   C   ダ             チ              ヂ console.log(byteArray);  //Decoding var decoder = new TextDecoder(); var decodedString = decoder.decode(byteArray);  //Output: ""ABCダチヂ"" console.log(decodedString);</code></pre> </div> </div> </p>"			2015-09-14 14:04:53.247 UTC
29059716	javascript|python|json	Parsing JSON string from python to Javascript	"<p>I am working on a terrarium controller project, at this moment I want to get the timeperiod of the lighting. In python I have a function called: getStatus() it returns a JSON string to Javascript, which will handle the data further. But it doesn't work. </p>  <p>Here's my python code:</p>  <pre><code>def getStatus ():     data=[[""HOUR_ON"", HOUR_ON],[""MINUTE_ON"", MINUTE_ON], [""HOUR_OFF"", HOUR_OFF], [""MINUTE_OFF"", MINUTE_OFF]]     return json.dumps(data) </code></pre>  <p>And overhere the Javascript:</p>  <pre><code>var alertFunction = function macroCallback(macro, args, light) {     alert(macro + "" returned with "" + light);     var obj = JSON.parse(light);     document.getElementById(""testSection"").innerHTML=""Light turns on at: ""+ obj[0].HOUR_ON+"":""+obj[0].MINUTE_ON + ""\n""+""Light goes out at: ""+obj[1].HOUR_OFF+"":""+obj[1].MINUTE_OFF;     alert(""after parsing: ""+obj[0]);     document.getElementById(""testSection"").innerHTML=light; } </code></pre>  <p>The string seems to be send back from the server and will be parsed correctly, only accessing the string doesn't work I get four times undefined in the innerHTML section.</p>  <p>I hope someone can help me out!</p>  <p>Greetings and thanks!</p>  <p>Marco</p>"	2015-03-15 10:44:05.11 UTC	29059783	"<p>You've saved array instead of object try:</p>  <pre><code>data=[{""HOUR_ON"": HOUR_ON},{""MINUTE_ON"": MINUTE_ON}, {""HOUR_OFF"": HOUR_OFF}, {""MINUTE_OFF"": MINUTE_OFF}] </code></pre>  <p>or better just one object:</p>  <pre><code>data={""HOUR_ON"": HOUR_ON, ""MINUTE_ON"": MINUTE_ON, ""HOUR_OFF"": HOUR_OFF, ""MINUTE_OFF"": MINUTE_OFF} </code></pre>"			2015-03-15 10:50:55.46 UTC
29059716	javascript|python|json	Parsing JSON string from python to Javascript	"<p>I am working on a terrarium controller project, at this moment I want to get the timeperiod of the lighting. In python I have a function called: getStatus() it returns a JSON string to Javascript, which will handle the data further. But it doesn't work. </p>  <p>Here's my python code:</p>  <pre><code>def getStatus ():     data=[[""HOUR_ON"", HOUR_ON],[""MINUTE_ON"", MINUTE_ON], [""HOUR_OFF"", HOUR_OFF], [""MINUTE_OFF"", MINUTE_OFF]]     return json.dumps(data) </code></pre>  <p>And overhere the Javascript:</p>  <pre><code>var alertFunction = function macroCallback(macro, args, light) {     alert(macro + "" returned with "" + light);     var obj = JSON.parse(light);     document.getElementById(""testSection"").innerHTML=""Light turns on at: ""+ obj[0].HOUR_ON+"":""+obj[0].MINUTE_ON + ""\n""+""Light goes out at: ""+obj[1].HOUR_OFF+"":""+obj[1].MINUTE_OFF;     alert(""after parsing: ""+obj[0]);     document.getElementById(""testSection"").innerHTML=light; } </code></pre>  <p>The string seems to be send back from the server and will be parsed correctly, only accessing the string doesn't work I get four times undefined in the innerHTML section.</p>  <p>I hope someone can help me out!</p>  <p>Greetings and thanks!</p>  <p>Marco</p>"	2015-03-15 10:44:05.11 UTC	29060008	"<p>Without changing your Python code, alter your javascript code to access the elements of the array using indices, not with attributes:</p>  <pre><code>var alertFunction = function macroCallback(macro, args, light) {     alert(macro + "" returned with "" + light);     var obj = JSON.parse(light);     document.getElementById(""testSection"").innerHTML=""Light turns on at: ""+ obj[0][1]+"":""+obj[1][1] + ""\n""+""Light goes out at: ""+obj[2][1]+"":""+obj[3][1];     alert(""after parsing: ""+obj[0]);     document.getElementById(""testSection"").innerHTML=light; } </code></pre>  <p>However, it would be better to follow <a href=""https://stackoverflow.com/a/29059783/21945"">jcubic's advice</a> and change your Python code to use a dictionary:</p>  <pre><code>def getStatus ():     data={""HOUR_ON"": HOUR_ON,           ""MINUTE_ON"": MINUTE_ON,           ""HOUR_OFF"": HOUR_OFF,           ""MINUTE_OFF"": MINUTE_OFF}     return json.dumps(data) </code></pre>  <p>For example this produces a JSON string like this:</p>  <pre><code>'{""HOUR_OFF"": 13, ""MINUTE_ON"": 30, ""MINUTE_OFF"": 20, ""HOUR_ON"": 12}' </code></pre>  <p>Also change your javascript to access the attributes of the object, which is much more readable:</p>  <pre><code>var alertFunction = function macroCallback(macro, args, light) {     alert(macro + "" returned with "" + light);     var obj = JSON.parse(light);     document.getElementById(""testSection"").innerHTML=""Light turns on at: ""+ obj.HOUR_ON + "":"" + obj.MINUTE_ON + ""\n"" + ""Light goes out at: ""+obj.HOUR_OFF+"":""+obj.MINUTE_OFF;     alert(""after parsing: ""+obj[0]);     document.getElementById(""testSection"").innerHTML=light; } </code></pre>"			2015-03-15 11:18:50.253 UTC
29138979	python|selenium|selenium-webdriver|web-scraping	Cannot select options with Python Selenium (javascript?)	"<p>I'm trying to automate the download process on this page: <a href=""https://cdr.ffiec.gov/public/PWS/DownloadBulkData.aspx"" rel=""nofollow"">https://cdr.ffiec.gov/public/PWS/DownloadBulkData.aspx</a></p>  <p>In particular, I want to be able to select any option in the ""Reporting Period End Date"" dropdown.</p>  <pre><code>&lt;select name=""ctl00$MainContentHolder$DatesDropDownList"" onchange=""javascript:setTimeout(&amp;#39;__doPostBack(\&amp;#39;ctl00$MainContentHolder$DatesDropDownList\&amp;#39;,\&amp;#39;\&amp;#39;)&amp;#39;, 0)"" id=""DatesDropDownList"" class=""valuelabel""&gt;         &lt;option selected=""selected"" value=""81""&gt;12/31/2014&lt;/option&gt;         &lt;option value=""80""&gt;09/30/2014&lt;/option&gt;         &lt;option value=""79""&gt;06/30/2014&lt;/option&gt;         &lt;option value=""78""&gt;03/31/2014&lt;/option&gt;         &lt;option value=""76""&gt;12/31/2013&lt;/option&gt;                 ... &lt;/select&gt; </code></pre>  <p>I tried the following in Selenium, but it returns an empty list:</p>  <pre><code>url = 'https://cdr.ffiec.gov/public/PWS/DownloadBulkData.aspx' driver = webdriver.Firefox() driver.get(url) date_field = driver.find_element_by_id(""DatesDropDownList"") Select(date_field).options </code></pre>  <p>I think the issue is the javascript in the select. What's the right way to do this?</p>"	2015-03-19 07:12:56.3 UTC	29139045	"<p>Your page functionality expects you to select a value from the first listbox :)</p>  <p>So select a value from ""Available Products"", then the date dropdown gets populated.</p>  <pre><code>browser = webdriver.Firefox() browser.get('https://cdr.ffiec.gov/public/PWS/DownloadBulkData.aspx')  list1 = Select(browser.find_element_by_id(""ListBox1"")) list1.select_by_visible_text(""Call Reports -- Single Period"")  date_field = Select(browser.find_element_by_id(""DatesDropDownList"")) date_field.select_by_visible_text(""03/31/2014"") </code></pre>"			2015-03-19 07:18:25.807 UTC
29145054	python|selenium|web-scraping|urllib2	Load web page in python AFTER JavaScripts executes	"<p>I am trting to get the definition of words in spanish (like a dictionary) based on what the user inputs. The idea would be:</p>  <pre><code>&gt;&gt;&gt; hola '1. interj. U. como salutación familiar.' </code></pre>  <p>I first tried with urllib2, but since the definition appeared after the execution of JS (makes sense duh) it didn't work. I also tried selenium, but from what I understood it has to open a navigator window, right? I need it to be like urllib2, invisible.</p>  <p>If you want to try, the page where I search the definition is <a href=""http://lema.rae.es/drae/?val=word"" rel=""nofollow"">http://lema.rae.es/drae/?val=word</a> where word is the word the user inputs.</p>  <p>Any thoughts, anyone?</p>"	2015-03-19 12:49:37.007 UTC	29150809	"<p>I might do it like <a href=""https://stackoverflow.com/a/29145467/1906307"">alecxe suggested</a>, but I'd use the URL that loads the definition itself. For instance, searching for <code>azul</code>:</p>  <pre><code>from selenium import webdriver  driver = webdriver.PhantomJS() driver.get('http://lema.rae.es/drae/srv/search?val=azul') print driver.find_element_by_css_selector(""body&gt;div"").text </code></pre>  <p>The URL that appears in the question loads a page that then loads the definition's URL in an <code>iframe</code> element. Loading the definition directly with the URL I show above saves some work and some complexity: the entire definition is contained in the first <code>div</code> child of <code>body</code>. Unfortunately, it does not remove the need for JavaScript.</p>  <p>Running the code above produces:</p>  <pre><code>azul. (Quizá alterac. del ár. hisp. lazawárd, este del ár. lāzaward, este del persa laǧvard o lažvard, y este del sánscr. rājāvarta, rizo del rey). 1. adj. Del color del cielo sin nubes. Es el quinto color del espectro solar. U. t. c. s. 2. m. El cielo, el espacio. U. m. en leng. poét. 3. m. Méx. Miembro del cuerpo de Policía. ~ de cobalto. [... etc ...] </code></pre>  <p>Note that I've not detected the need to use any wait mechanism to detect that the content of the page is ready. Looking at the page in a debugger a) I did not see any Ajax request and b) looking at the JavaScript and the page itself, it looks like what is served is an obfuscated page that the JavaScript then deobfuscates <em>synchronously</em>. So by the time <code>driver.get</code> returns, the content should be ready to be used.</p>"			2015-03-19 17:08:00.057 UTC
29145054	python|selenium|web-scraping|urllib2	Load web page in python AFTER JavaScripts executes	"<p>I am trting to get the definition of words in spanish (like a dictionary) based on what the user inputs. The idea would be:</p>  <pre><code>&gt;&gt;&gt; hola '1. interj. U. como salutación familiar.' </code></pre>  <p>I first tried with urllib2, but since the definition appeared after the execution of JS (makes sense duh) it didn't work. I also tried selenium, but from what I understood it has to open a navigator window, right? I need it to be like urllib2, invisible.</p>  <p>If you want to try, the page where I search the definition is <a href=""http://lema.rae.es/drae/?val=word"" rel=""nofollow"">http://lema.rae.es/drae/?val=word</a> where word is the word the user inputs.</p>  <p>Any thoughts, anyone?</p>"	2015-03-19 12:49:37.007 UTC	29145467	"<p>You can automate a headless <a href=""http://phantomjs.org/"" rel=""nofollow""><code>PhantomJS</code></a> browser through <code>selenium</code>:</p>  <pre><code>&gt;&gt;&gt; from selenium import webdriver &gt;&gt;&gt; &gt;&gt;&gt; driver = webdriver.PhantomJS() &gt;&gt;&gt; driver.get('http://lema.rae.es/drae/?val=word') &gt;&gt;&gt; &gt;&gt;&gt; description = driver.find_element_by_css_selector('div.field-content p.azul') &gt;&gt;&gt; print description.text El Diccionario de la lengua española (DRAE) es la obra de referencia de la Academia. La última edición es la 23.ª, publicada en octubre de 2014. Mientras se trabaja en la edición digital, que estará disponible próximamente, esta versión electrónica permite acceder al contenido de la 22.ª edición y las enmiendas incorporadas hasta 2012. </code></pre>"			2015-03-19 13:09:51.903 UTC
29150208	javascript	Why does Javascript freeze the computer but not C++ or Python?	"<p>For example, when executing <code>while(true)print(""o"");</code></p>  <p>Why does Javascript freeze the computer but not C++ or Python?</p>"	2015-03-19 16:38:33.13 UTC	29150236	"<p>For the most part (<a href=""https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/basic_usage"" rel=""nofollow"">web workers</a> aside) JavaScript is single-threaded. That means that the code you write is running in the UI thread - the same thread that processes user actions. If your code is long-running, then the UI becomes less responsive. In an example like the one you posted above, the UI won't be responsive <em>at all</em> because your code will continue to run until killed.</p>  <p>Languages that are multi-threaded allow developers to do longer-running work in other threads so that it doesn't block the UI. This comes with a trade-off of making the code (potentially) more complicated as it has to be robust enough to handle multi-threaded use.</p>"			2015-03-19 16:39:58.32 UTC
29175519	javascript|python|list	passing python list to javascript	"<p>I am trying to pass a python list to a javascript function, but it doesn't work... I think the Javascript function will see it as one long string. This is what I do:</p>  <pre><code>@webiopi.macro def calcSunriseSunsetOneYear():     o=ephem.Observer()     o.lat='51.21828'     o.long='3.94958'     s=ephem.Sun()     d=datetime.date.today()      t=timedelta(days=1)     d=d+t     o.date=d      riseTime=[]     setTime=[]     s.compute()     for x in range (0,365):         o.date=o.date+1         riseTime.append(str(ephem.localtime(o.next_rising(s))))         setTime.append(str(ephem.localtime(o.next_setting(s))))     return(json.dumps(riseTime)) </code></pre>  <p>This is the python data:</p>  <pre><code>[""2015-03-22 06:43:02.000006"", ""2015-03-23 06:40:46"", ""2015-03-24 06:38:31.000001"", ""2015-03-25 06:36:15.000002"", ""2015-03-26 06:33:59.000003"", ""2015-03-27 06:31:44.000004"", ""2015-03-28 06:29:28.000005"", ""2015-03-29 07:27:13.000006"", ""2015-03-30 07:24:57"", ""2015-03-31 07:22:42.000001"", ""2015-04-01 07:20:27.000002"", ""2015-04-02 07:18:13.000003"", ""2015-04-03 07:15:58.000004"", ""2015-04-04 07:13:44.000005"", ""2015-04-05 07:11:31.000006"", ""2015-04-06 07:09:17"", ""2015-04-07 07:07:04.000001"", ""2015-04-08 07:04:52.000002"", ""2015-04-09 07:02:40.000003"", ""2015-04-10 07:00:28.000004""] </code></pre>  <p>In Javascript I do this:</p>  <pre><code>var printChart = function macroCallBack(macro, args, chartInfo) {         document.getElementById(""chartInfo"").innerHTML=chartInfo;         var arLength=chartInfo.length;         console.log(""arLength is: "",arLength);         for (var i=0; i&lt;arLength; i++) {             console.log(chartInfo[i]);         }     } </code></pre>  <p>And the console prints every character of the python list on a seperate line, like this:</p>  <p>[ "" 2 0 1 5 etc...</p>  <p>I can't format the above console.log output, but every character is on a seperate line.</p>  <p>Also the length of the array is exactly the same as the length of the total string, so my conclusion is the python list is transformed to Javascript as one long string...</p>  <p>I hope someone can help me out!</p>"	2015-03-20 20:45:37.823 UTC	29175850	<p>You should look at JSON.stringify and JSON.parse javascript methods that will turn string into Javascript objects. Hope this helps</p>			2015-03-20 21:09:59.067 UTC
29175519	javascript|python|list	passing python list to javascript	"<p>I am trying to pass a python list to a javascript function, but it doesn't work... I think the Javascript function will see it as one long string. This is what I do:</p>  <pre><code>@webiopi.macro def calcSunriseSunsetOneYear():     o=ephem.Observer()     o.lat='51.21828'     o.long='3.94958'     s=ephem.Sun()     d=datetime.date.today()      t=timedelta(days=1)     d=d+t     o.date=d      riseTime=[]     setTime=[]     s.compute()     for x in range (0,365):         o.date=o.date+1         riseTime.append(str(ephem.localtime(o.next_rising(s))))         setTime.append(str(ephem.localtime(o.next_setting(s))))     return(json.dumps(riseTime)) </code></pre>  <p>This is the python data:</p>  <pre><code>[""2015-03-22 06:43:02.000006"", ""2015-03-23 06:40:46"", ""2015-03-24 06:38:31.000001"", ""2015-03-25 06:36:15.000002"", ""2015-03-26 06:33:59.000003"", ""2015-03-27 06:31:44.000004"", ""2015-03-28 06:29:28.000005"", ""2015-03-29 07:27:13.000006"", ""2015-03-30 07:24:57"", ""2015-03-31 07:22:42.000001"", ""2015-04-01 07:20:27.000002"", ""2015-04-02 07:18:13.000003"", ""2015-04-03 07:15:58.000004"", ""2015-04-04 07:13:44.000005"", ""2015-04-05 07:11:31.000006"", ""2015-04-06 07:09:17"", ""2015-04-07 07:07:04.000001"", ""2015-04-08 07:04:52.000002"", ""2015-04-09 07:02:40.000003"", ""2015-04-10 07:00:28.000004""] </code></pre>  <p>In Javascript I do this:</p>  <pre><code>var printChart = function macroCallBack(macro, args, chartInfo) {         document.getElementById(""chartInfo"").innerHTML=chartInfo;         var arLength=chartInfo.length;         console.log(""arLength is: "",arLength);         for (var i=0; i&lt;arLength; i++) {             console.log(chartInfo[i]);         }     } </code></pre>  <p>And the console prints every character of the python list on a seperate line, like this:</p>  <p>[ "" 2 0 1 5 etc...</p>  <p>I can't format the above console.log output, but every character is on a seperate line.</p>  <p>Also the length of the array is exactly the same as the length of the total string, so my conclusion is the python list is transformed to Javascript as one long string...</p>  <p>I hope someone can help me out!</p>"	2015-03-20 20:45:37.823 UTC	29176143	"<p>You are right, you are looping through a string. This is because json are strings. This makes it pretty easy to pass data between different programming languages as strings are data types implemented in almost every programming language. However since it are strings you need to decode the string to a usable format/object. In javascript you can use the method<code>JSON.parse()</code>. </p>  <p><a href=""http://jsfiddle.net/zg9dkzLb/"" rel=""nofollow"">jsfiddle demo</a></p>  <pre><code>var frompythonjsonstring ='[""2015-03-22 06:43:02.000006"", ""2015-03-23 06:40:46"", ""2015-03-24 06:38:31.000001"", ""2015-03-25 06:36:15.000002"", ""2015-03-26 06:33:59.000003"", ""2015-03-27 06:31:44.000004"", ""2015-03-28 06:29:28.000005"", ""2015-03-29 07:27:13.000006"", ""2015-03-30 07:24:57"", ""2015-03-31 07:22:42.000001"", ""2015-04-01 07:20:27.000002"", ""2015-04-02 07:18:13.000003"", ""2015-04-03 07:15:58.000004"", ""2015-04-04 07:13:44.000005"", ""2015-04-05 07:11:31.000006"", ""2015-04-06 07:09:17"", ""2015-04-07 07:07:04.000001"", ""2015-04-08 07:04:52.000002"", ""2015-04-09 07:02:40.000003"", ""2015-04-10 07:00:28.000004""]';  macroCallBack(frompythonjsonstring);  function macroCallBack (str) {         obj = JSON.parse(str)          for (var i=0; i&lt;obj.length; i++) {             console.log(obj[i]);         } } </code></pre>"			2015-03-20 21:32:43.197 UTC
29177737	javascript|regex	python to javascript regex	"<p>Can someone help me to fix this regex to use in javascript?</p>  <pre><code>(?&lt;!\\\\)#\\{{1,2} </code></pre>  <p>Regex tester said:</p>  <pre><code>SyntaxError: Invalid regular expression: /(?:((?&lt;!\\)#\{{1,2})|(.))/: Invalid group </code></pre>  <p>Thanks.</p>"	2015-03-21 00:13:01.08 UTC	29452768	"<p>maybe <code>/(?:((?!\\)#\{{1,2})|(.))/</code>. in python <code>negative lookback</code> is <code>(?&lt;!...)</code> but in javascript is <code>(?!...)</code> just remove <code>&lt;</code></p>"			2015-04-05 00:10:07.977 UTC
29183808	javascript|python|django	Pass array of dicts from python to Javascript	"<p>I am not able to access an array of dicts passed from python script to javascript. When I use the following code, there is no alert message popping up. What am I doing wrong here?</p>  <pre><code>errors = [1, 2] graphs = [{'A': 1}, {'B': 2}] return render(request, 'index.html', {'errors': errors, 'graphs': graphs})  # index.html &lt;script&gt; if ({{ graphs }}){     alert('Detected'); } if ({{ errors }}){     alert('Detected'); } &lt;/script&gt; </code></pre>  <p>I even tried converting this to json, but still same problem.</p>  <pre><code>mygraphs = json.dumps(graphs) return render(request, 'index.html', {'errors': errors, 'graphs': mygraphs}) </code></pre>  <p>I am able to access the array fine inside the HTML.</p>  <pre><code>{% for graph in graphs %}     &lt;li style=""color: red;""&gt;Element detected&lt;/li&gt; {% endfor %} </code></pre>  <p>prints out <code>Element detected</code> twice. But I am not able to do this inside the script.</p>"	2015-03-21 14:26:47.16 UTC	29183988	"<p>This should work</p>  <pre><code>if(""{{ graphs|safe }}""){     alert('Detected'); } </code></pre>  <p>Refer this <a href=""https://stackoverflow.com/questions/298772/django-template-variables-and-javascript"">Django Template Variables and Javascript</a></p>"			2015-03-21 14:44:19.223 UTC
29183808	javascript|python|django	Pass array of dicts from python to Javascript	"<p>I am not able to access an array of dicts passed from python script to javascript. When I use the following code, there is no alert message popping up. What am I doing wrong here?</p>  <pre><code>errors = [1, 2] graphs = [{'A': 1}, {'B': 2}] return render(request, 'index.html', {'errors': errors, 'graphs': graphs})  # index.html &lt;script&gt; if ({{ graphs }}){     alert('Detected'); } if ({{ errors }}){     alert('Detected'); } &lt;/script&gt; </code></pre>  <p>I even tried converting this to json, but still same problem.</p>  <pre><code>mygraphs = json.dumps(graphs) return render(request, 'index.html', {'errors': errors, 'graphs': mygraphs}) </code></pre>  <p>I am able to access the array fine inside the HTML.</p>  <pre><code>{% for graph in graphs %}     &lt;li style=""color: red;""&gt;Element detected&lt;/li&gt; {% endfor %} </code></pre>  <p>prints out <code>Element detected</code> twice. But I am not able to do this inside the script.</p>"	2015-03-21 14:26:47.16 UTC	29183907	<p>Django template replaces single quotes by <code>&amp;#39;</code> entity.  So add the <code>safe</code> filter to the <code>graphs</code> variable:</p>  <pre><code>if ({{ graphs|safe }}){     alert('Detected'); } </code></pre>			2015-03-21 14:37:46.373 UTC
29190812	python|regex|string	Python: parsing newlines in a javascript-generated html string	"<p>I have a certain URL which gives me a large JSON. I use a regex to extract the value of a specific attribute and store it in a Python string. This value that I capture is JavaScript-generated HTML and looks like</p>  <pre><code>&lt;ul class=\""ylist ylist-bordered search-results\""&gt;\n        \n        \n                        &lt;li class=\""yloca-search-result\""&gt;\n                        &lt;div class=\""search-result\"" data-key=\""ad_business:QaG0eB4HEXgkPIjOCw_3dA\""&gt;\n        &lt;div class=\""biz-listing-large\""&gt;\n            &lt;div class=\""main-attributes\""&gt;\n                &lt;div class=\""media-block media-block--12\""&gt;\n                    &lt;div class=\""media-avatar\""&gt;\n                                    &lt;div class=\""photo-box pb-90s\""&gt;\n                &lt;a href=\""/ </code></pre>  <p>all appearing on one line (as it does here). (Actually, the '&lt;' and '>' come as \u003c and \u003e but I use the Python <code>replace()</code> method to correct those.) What I'd like to do now is break it up into multiple lines so that the above becomes:</p>  <pre><code>&lt;ul class=\""ylist ylist-bordered search-results\""&gt; &lt;li class=\""yloca-search-result\""&gt; &lt;div class=\""search-result\"" data-key=\""ad_business:QaG0eB4HEXgkPIjOCw_3dA\""&gt; &lt;div class=\""biz-listing-large\""&gt; &lt;div class=\""main-attributes\""&gt; &lt;div class=\""media-block media-block--12\""&gt; &lt;div class=\""media-avatar\""&gt; &lt;div class=\""photo-box pb-90s\""&gt; &lt;a href=\""/ </code></pre>  <p>That is, I want to replace any stretch of white space and <code>'\n'</code>'s (possibly many as here) with an actual newline. I can't figure out how to do this. I expected that any normal text editor (I am using Sublime on Windows) would just convert the \n into new lines but I am getting that one line as you see above.</p>  <p>What do I do to my Python variable storing the first line above to get it to look like the second when I write it to a text file and open it in an editor?</p>"	2015-03-22 03:56:39.937 UTC	29191110	"<p>If you would not like to use <code>re</code>, you use simply do this:</p>  <pre><code>x = '&lt;ul class=\""ylist ylist-bordered search-results\""&gt;\n        \n        \n                        &lt;li class=\""yloca-search-result\""&gt;\n                        &lt;div class=\""search-result\"" data-key=\""ad_business:QaG0eB4HEXgkPIjOCw_3dA\""&gt;\n        &lt;div class=\""biz-listing-large\""&gt;\n            &lt;div class=\""main-attributes\""&gt;\n                &lt;div class=\""media-block media-block--12\""&gt;\n                    &lt;div class=\""media-avatar\""&gt;\n                                    &lt;div class=\""photo-box pb-90s\""&gt;\n                &lt;a href=\""/'  vals = x.split('\n') filtered_vals = [item.strip() for item in vals if item.strip() != """"] for item in filtered_vals:     print item </code></pre>"			2015-03-22 04:48:39.627 UTC
29210175	javascript|python|odoo|openerp-8|odoo-8	How do I call a python function from Javascript file in Odoo v8 in a newly created module?	<p>I have created a new module in <code>Odoo v8</code> and I want to call a python function defined in the controllers folder of the module from a JavaScript file defined in <code>static/src/js</code>. </p>  <p>I have tried the following:</p>  <p>1.</p>  <pre><code>function openerp_pos_models(instance){  var myModel = new instance.web.Model('my.model');  //code to call python method }); </code></pre>  <p>But on loading the page it shows <code>instance is not defined</code>.</p>  <p>2.</p>  <pre><code>var Users = new openerp.web.Model('res.users'); </code></pre>  <p>but this shows <code>Uncaught TypeError: Cannot read property 'Model' of undefined</code>.</p>	2015-03-23 12:26:03.543 UTC	48225574	"<p>Here is my conroller route function(call in init file):</p>  <pre><code>from odoo import http from odoo.http import request  class YourClassName(http.Controller):      @http.route('/your/route/url_here', type='json', auth=""user"", website=True)     def your_function_name(self, **kw):         send_data = kw.get('data')          // do something here.....          //return data whatever you want to return....         return data </code></pre>  <p>Here is my js file: </p>  <pre><code>odoo.define('igcc.export_view', function(require){      ""use strict""     var core = require('web.core');     var ajax = require('web.ajax');      var QWeb = core.qweb;     var _t = core._t;      $('.button_name_here').click(function(){         ajax.jsonRpc(""/your/route/url_here"", 'call', {'data':you_eant_to_send}).then(function (data) {             //on successfully return data         });     } }); </code></pre>"			2018-01-12 11:41:19.36 UTC
29210175	javascript|python|odoo|openerp-8|odoo-8	How do I call a python function from Javascript file in Odoo v8 in a newly created module?	<p>I have created a new module in <code>Odoo v8</code> and I want to call a python function defined in the controllers folder of the module from a JavaScript file defined in <code>static/src/js</code>. </p>  <p>I have tried the following:</p>  <p>1.</p>  <pre><code>function openerp_pos_models(instance){  var myModel = new instance.web.Model('my.model');  //code to call python method }); </code></pre>  <p>But on loading the page it shows <code>instance is not defined</code>.</p>  <p>2.</p>  <pre><code>var Users = new openerp.web.Model('res.users'); </code></pre>  <p>but this shows <code>Uncaught TypeError: Cannot read property 'Model' of undefined</code>.</p>	2015-03-23 12:26:03.543 UTC	29212446	"<p>You need to add your function calling into widgets.js file.</p>  <pre><code>module.VisitorWidget = module.PosBaseWidget.extend({     template: 'VisitorWidget',     init: function(parent, options){             options = options || {};             this._super(parent, options);             this.label   = options.label;     },     renderElement: function(){         var self = this;         var pos = self.pos;         var shop = this.pos.get('shop');         var counter = self.pos.get('visitorcounter');         var visitors = self.pos.get('visitors',[])         this.label = counter.toString();         this._super();         this.$el.click(function(){             self.pos.set('visitorcounter', counter + 1);             var date = new Date();             obj = { 'visitdate' : date,                     'count' : 1 ,                     'shop_id' : shop.id,             }             self.pos.get('visitors',[]).push(obj);             self.renderElement();         });     },     sync_visitors:function(){         var visitors = self.pos.get('visitors',[]);         (new instance.web.Model('shop.visitor.history')).get_func('sync_visitors')(visitors)             .fail(function(unused, event){                 event.preventDefault();                 return;             })             .done(function(){                 self.pos.set('visitors',[])             });     }, }); </code></pre>  <p>And this is my python function</p>  <p>def sync_visitors(self, cr, uid, visitors, context=None):         if not visitors:             return False</p>  <pre><code>    for visitor in visitors:         shop = visitor.get('shop_id',False)         visitdate = visitor['visitdate']         count = visitor['count']         vals = {                 'visitdate' : visitdate,                 'count' : count,                 'shop_id' : shop,         }         self.create(cr, uid, vals, context=context)      return True     </code></pre>  <p>And for same you need to create model into the models.js.</p>"			2015-03-23 14:11:01.69 UTC
29210175	javascript|python|odoo|openerp-8|odoo-8	How do I call a python function from Javascript file in Odoo v8 in a newly created module?	<p>I have created a new module in <code>Odoo v8</code> and I want to call a python function defined in the controllers folder of the module from a JavaScript file defined in <code>static/src/js</code>. </p>  <p>I have tried the following:</p>  <p>1.</p>  <pre><code>function openerp_pos_models(instance){  var myModel = new instance.web.Model('my.model');  //code to call python method }); </code></pre>  <p>But on loading the page it shows <code>instance is not defined</code>.</p>  <p>2.</p>  <pre><code>var Users = new openerp.web.Model('res.users'); </code></pre>  <p>but this shows <code>Uncaught TypeError: Cannot read property 'Model' of undefined</code>.</p>	2015-03-23 12:26:03.543 UTC	29945127	<p>The problem is : it's not 'web' but 'website' So now you have : </p>  <pre><code>var Users = new openerp.website.Model('res.users'); </code></pre>			2015-04-29 13:23:43.763 UTC
29222415	javascript|python|html|forms	Creating a html form and using javascript to access a python script within?	"<p>I created a python script that basically given a csv file that lists the students in a particular school and the subjects they are each taking, prints out the percent of people taking any given subject(s). </p>  <p>Now, I have to create a html form for the user to enter in the information, instead of just running prompts from the script. In essence, I would double click on the html file and then the form it displays would ask to choose a school from a drop down menu, and enter the subject(s) that I wanted to search for, then finally display the percent of people that for example are taking calculus and literature on the page when I click the submit button. It doesn't have to be on the internet or anything, just run from the html file. </p>  <p>My problem here however, is that I have only been programming for a little while, and my knowledge of Javascript is limited. I know how to create the form with HTML and CSS.</p>  <p>However how do I implement the Javascript to access the python code? And do I actually require a python web framework since I'm not putting this on the internet? If it would be easier, I am also considering re-writing the python script into Javascript(is that a better option?), but I want to know how to do it with the python script. </p>  <p>Basically, I'm not quite sure how to implement this and what languages I would need to do this, so can anyone give me an idea of how I could do this? </p>"	2015-03-23 23:36:13.583 UTC	29222628	"<p>You could go ahead an evaluate python in the browser (with <a href=""http://www.skulpt.org/"" rel=""nofollow"">Skulpt</a>), but it seems like a lot of overhead just so you can run a snippet of code.</p>  <p>Take it as an opportunity to learn some javascript!</p>"			2015-03-23 23:57:40.443 UTC
29231003	python|selenium|console	Excuting Javascript at browser console with selenium python	<p>I want to execute a code at firefox console with selenium . I am using python . Anyone know how ? </p>	2015-03-24 11:08:00.43 UTC	29237853	"<p>To execute some JavaScript in a way <em>similar</em> to what you'd do at the console, you can use the <code>execute_script</code> method. For instance, once you have your <code>WebDriver</code> instance stored in <code>driver</code>:</p>  <pre><code>driver.execute_script(""location.reload()"") </code></pre>  <p>would reload your current window. This is the same as if you'd typed <code>location.reload()</code> at the console. One difference between <code>execute_script</code> and the console is that <code>execute_script</code> executes the code inside a JavaScript function, which affects scoping. (e.g. <code>var foo = 1</code> at the console declares a <em>global</em> variable <code>foo</code>. In <code>execute_script</code> it would declare a <em>local</em> variable <code>foo</code>.)</p>  <p>Selenium does not provide facilities to <em>open</em> the console while Selenium is running.</p>"			2015-03-24 16:23:04.883 UTC
29351528	javascript|python|json|flask	"Calling Python function in Javascript, reading static files (Flask)"	"<p>I’m creating a d3 visualisation based on json files chosen by the user like this-</p>  <pre><code>d3.json(""/data"", function(error, graph) </code></pre>  <p>This is the app route in views.py</p>  <pre><code>    @app.route(""/data"") #the javascript will call this def data():         return(userInput.get_data()) #returns the return value of given function </code></pre>  <p>In forms, I have a userInput class, which contains a drop down list. This list consists of names of json files. json_fileCrew is the name of json file chosen by the user.</p>  <pre><code>json_fileCrew = SelectField(u""Filename"", choices=[(f, f) for f in filenamesCrew]) </code></pre>  <p>Within this class I have the get_data function:</p>  <pre><code>def get_data(json_fileCrew):         return send_from_directory (""/project/myproject/app/static/Crews"" , json_fileCrew) </code></pre>  <p>So, when the javascript calls /data it should return the json_fileCrew, but I get this error </p>  <pre><code>File ""\project\myproject\app\views.py"", line 34, in data     return(userInput.get_data()) #returns the return value of given function TypeError: get_data() missing 1 required positional argument: 'json_fileCrew' </code></pre>  <p>This is the full Traceback - </p>  <pre><code>Traceback (most recent call last):   File ""C:\Python34\lib\site-packages\flask\app.py"", line 1836, in __call__     return self.wsgi_app(environ, start_response)   File ""C:\Python34\lib\site-packages\flask\app.py"", line 1820, in wsgi_app     response = self.make_response(self.handle_exception(e))   File ""C:\Python34\lib\site-packages\flask\app.py"", line 1403, in handle_except ion     reraise(exc_type, exc_value, tb)   File ""C:\Python34\lib\site-packages\flask\_compat.py"", line 33, in reraise     raise value   File ""C:\Python34\lib\site-packages\flask\app.py"", line 1817, in wsgi_app     response = self.full_dispatch_request()   File ""C:\Python34\lib\site-packages\flask\app.py"", line 1477, in full_dispatch _request     rv = self.handle_user_exception(e)   File ""C:\Python34\lib\site-packages\flask\app.py"", line 1381, in handle_user_e xception     reraise(exc_type, exc_value, tb)   File ""C:\Python34\lib\site-packages\flask\_compat.py"", line 33, in reraise     raise value   File ""C:\Python34\lib\site-packages\flask\app.py"", line 1475, in full_dispatch _request     rv = self.dispatch_request()   File ""C:\Python34\lib\site-packages\flask\app.py"", line 1461, in dispatch_requ est     return self.view_functions[rule.endpoint](**req.view_args)   File ""\project\myproject\app\views.py"", line 34, in data     return(userInput.get_data()) #returns the return value of given function TypeError: get_data() missing 1 required positional argument: 'json_fileCrew' </code></pre>"	2015-03-30 16:33:43.413 UTC	29351568	<p>You have a method</p>  <pre><code>def get_data(json_fileCrew) </code></pre>  <p>but you're not calling it with the required argument</p>  <pre><code>return(userInput.get_data()) </code></pre>  <p>as the error is telling you</p>  <pre><code>TypeError: get_data() missing 1 required positional argument: 'json_fileCrew' </code></pre>			2015-03-30 16:35:47.737 UTC
29353398	javascript|python	How can I get next page javascript button using python	"<p>I'm using Python to get the next page referred with the following HTML code: </p>  <pre><code>&lt;td xmlns=""http://www.w3.org/1999/xhtml""  class=""rich-datascr-button"" onclick=""Event.fire(this, 'rich:datascroller:onscroll', {'page': 'next'});""&gt; &lt;br _moz_dirty="""" type=""_moz""/&gt;&lt;/td&gt; </code></pre>  <p>I've been trying different options, but none worked.</p>"	2015-03-30 18:20:30.08 UTC	29389217	"<p>I've been traying Selenium, splinter from Brouser and Mechanize. I have learnt that Mechanize is not the way.</p>  <p>lately I have been trying  something like this:</p>  <pre><code>from selenium import webdriver from selenium.common.exceptions import TimeoutException from selenium.webdriver.support.ui import WebDriverWait # available since 2.4.0 from selenium.webdriver.support import expected_conditions as EC # available since 2.26.0   # Create a new instance of the Firefox driver driver = webdriver.Firefox() driver.implicitly_wait(10) # go to the google home page driver.get(url)   element =driver.find_element_by_xpath(""//td[contains(.,'???')]"") print element </code></pre>  <p>The part of the table from the page I try to get is the one signaled by</p>  <pre><code>&lt;td class="" rich-datascr-button"" onclick=""Event.fire(this, 'rich:datascroller:onscroll', {'page': 'next'});""&gt;&lt;/td&gt; </code></pre>  <p>and the table in the page looks like:</p>  <pre><code>&lt;div class=""rich-datascr "" id=""tpForm:scroll2"" style="" "" align=""center""&gt; &lt;table border=""0"" cellpadding=""0"" cellspacing=""1"" class=""rich-dtascroller-table "" id=""tpForm:scroll2_table"" style=""text-align:center""&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td class=""rich-datascr-button-dsbld rich-datascr-button""&gt;&amp;#171;&amp;#171;&lt;/td&gt; &lt;td class=""rich-datascr-button-dsbld rich-datascr-button""&gt;&amp;#171;&lt;/td&gt; &lt;td class=""rich-datascr-button-dsbld rich-datascr-button""&gt;&lt;/td&gt; &lt;td class=""rich-datascr-act ""&gt;1&lt;/td&gt; &lt;td class=""rich-datascr-inact "" onclick=""Event.fire(this, 'rich:datascroller:onscroll', {'page': '2'});""&gt;2&lt;/td&gt; &lt;td class=""rich-datascr-inact "" onclick=""Event.fire(this, 'rich:datascroller:onscroll', {'page': '3'});""&gt;3&lt;/td&gt; &lt;td class=""rich-datascr-inact "" onclick=""Event.fire(this, 'rich:datascroller:onscroll', {'page': '4'});""&gt;4&lt;/td&gt; &lt;td class=""rich-datascr-inact "" onclick=""Event.fire(this, 'rich:datascroller:onscroll', {'page': '5'});""&gt;5&lt;/td&gt; &lt;td class=""rich-datascr-inact "" onclick=""Event.fire(this, 'rich:datascroller:onscroll', {'page': '6'});""&gt;6&lt;/td&gt; &lt;td class=""rich-datascr-inact "" onclick=""Event.fire(this, 'rich:datascroller:onscroll', {'page': '7'});""&gt;7&lt;/td&gt; &lt;td class=""rich-datascr-inact "" onclick=""Event.fire(this, 'rich:datascroller:onscroll', {'page': '8'});""&gt;8&lt;/td&gt; &lt;td class="" rich-datascr-button"" onclick=""Event.fire(this, 'rich:datascroller:onscroll', {'page': 'next'});""&gt;&lt;/td&gt; &lt;td class="" rich-datascr-button"" onclick=""Event.fire(this, 'rich:datascroller:onscroll', {'page': 'fastforward'});""&gt;&amp;#187;&lt;/td&gt; &lt;td class="" rich-datascr-button"" onclick=""Event.fire(this, 'rich:datascroller:onscroll', {'page': 'last'});""&gt;Last&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;script type=""text/javascript""&gt;new Richfaces.Datascroller('tpForm:scroll2', function(event){A4J.AJAX.Submit('tpForm',event,{'ignoreDupResponses':true,'implicitEventsQueue':'tpForm:scroll2','similarityGroupingId':'tpForm:scroll2','parameters':{'tpForm:scroll2':event.memo.page,'ajaxSingle':'tpForm:scroll2'} } ); return false;});&lt;/script&gt; &lt;/div&gt; </code></pre>  <p>What I wolud like is to obtain the next part of the table by code in Python to acces to the list of references of each part. I can figure out at thislast point using urlparse, BeautifulSoup and urllib2. My problem is get net page in the table.</p>"			2015-04-01 11:08:57.797 UTC
29366802	javascript|python|node.js|utf-8|python-rq	Python RQ queueing with JavaScript	"<p>I am trying to queue tasks for Python RQ using JavaScript. To do that I just monitored what RQ does with Redis. In particular it stores a pickled list indicating where to find the task to run including input args etc. Here I am using the example found on RQ's homepage. When storing the following string (pickled list):</p>  <pre><code>'\x80\x02(X\x1c\x00\x00\x00my_module.count_words_at_urlq\x01NU\x0fhttp://nvie.comq\x02\x85q\x03}q\x04tq\x05.' </code></pre>  <p>with JavaScript, it does something weird with the literals <code>\x80</code> and <code>\x85</code>. It replaces them with <code>\xc2\x80</code> and <code>\xc2\x85</code> and I am unable to figure out why and how to stop this behavior. The rest of the string gets funneled into Redis as expected. The additional literal hinders the rqworker, more specificly pickle, to function correctly.</p>  <pre><code>&gt; encodeURI('\x80\x02(X\x1c\x00\x00\x00my_module.count_words_at_urlq\x01NU\x0fhttp://nvie.comq\x02\x85q\x03}q\x04tq\x05.') '%C2%80%02(X%1C%00%00%00my_module.count_words_at_urlq%01NU%0Fhttp://nvie.comq%02%C2%85q%03%7Dq%04tq%05.'  &gt; decodeURI('\x80\x02(X\x1c\x00\x00\x00my_module.count_words_at_urlq\x01NU\x0fhttp://nvie.comq\x02\x85q\x03}q\x04tq\x05.') ' \u0002(X\u001c\u0000\u0000\u0000my_module.count_words_at_urlq\u0001NU\u000fhttp://nvie.comq \u0002q\u0003}q\u0004tq\u0005.' </code></pre>  <p>I am using node and node_redis.</p>"	2015-03-31 10:46:23.313 UTC	29412534	"<p>Found it out on my own. Python's pickle output string is in fact binary which is the common way to write and read files in Python. Javascript does not like that and ""fixes"" it. The solution is Javascript's buffer.</p>  <pre><code>&gt; new Buffer('\x80\x85', 'binary') &lt;Buffer 80 85&gt; </code></pre>  <p>whereas</p>  <pre><code>&gt; new Buffer('\x80\x85') &lt;Buffer c2 80 c2 85&gt; </code></pre>  <p>Just feed node_redis the buffer object, the ""correct"" representation of the serialized object will appear in redis and rqworker works as expected. Keep in mind that the 'binary' mode is in the process of being deprecated.</p>"			2015-04-02 12:04:53.15 UTC
29404856	javascript|python|web-scraping	How can I render JavaScript HTML to HTML in python?	"<p>I have looked around and only found solutions that render a URL to HTML. However I need a way to be able to render a webpage (That I already have, and that has JavaScript) to proper HTML.</p>  <p>Want: Webpage (with JavaScript) ---> HTML</p>  <p>Not: URL --> Webpage (with JavaScript) ---> HTML</p>  <p>I couldn't figure out how to make the other code work the way I wanted.</p>  <p>This is the code I was using that renders URLs: <a href=""http://webscraping.com/blog/Scraping-JavaScript-webpages-with-webkit/"" rel=""noreferrer"">http://webscraping.com/blog/Scraping-JavaScript-webpages-with-webkit/</a></p>  <p>For clarity, the code above takes a URL of a webpage that has some parts of the page rendered by JavaScript, so if I scrape the page normally using say urllib2 then I won't get all the links etc that are rendered as after the JavaScript.</p>  <p>However I want to be able to scrape a page, say again with urllib2, and then render that page and get the outcome HTML. (Different to the above code since it takes a URL as it's argument.</p>  <p>Any help is appreciated, thanks guys :)</p>"	2015-04-02 04:11:49.08 UTC	57508497	<p>try webdriver.Firefox().get('url')</p>			2019-08-15 10:47:43.9 UTC
29404856	javascript|python|web-scraping	How can I render JavaScript HTML to HTML in python?	"<p>I have looked around and only found solutions that render a URL to HTML. However I need a way to be able to render a webpage (That I already have, and that has JavaScript) to proper HTML.</p>  <p>Want: Webpage (with JavaScript) ---> HTML</p>  <p>Not: URL --> Webpage (with JavaScript) ---> HTML</p>  <p>I couldn't figure out how to make the other code work the way I wanted.</p>  <p>This is the code I was using that renders URLs: <a href=""http://webscraping.com/blog/Scraping-JavaScript-webpages-with-webkit/"" rel=""noreferrer"">http://webscraping.com/blog/Scraping-JavaScript-webpages-with-webkit/</a></p>  <p>For clarity, the code above takes a URL of a webpage that has some parts of the page rendered by JavaScript, so if I scrape the page normally using say urllib2 then I won't get all the links etc that are rendered as after the JavaScript.</p>  <p>However I want to be able to scrape a page, say again with urllib2, and then render that page and get the outcome HTML. (Different to the above code since it takes a URL as it's argument.</p>  <p>Any help is appreciated, thanks guys :)</p>"	2015-04-02 04:11:49.08 UTC	68142999	"<p>The module I use for doing so is <code>request_html</code>. The first time used it automatically downloads a chromium browser, then you can render any webpage(with JavaScript)</p> <p><code>requests_html</code> also supports <code>html parsing</code>.</p> <p>basically an alternative for <code>selenium</code></p> <p>example:</p> <pre><code>from requests_html import HTMLSession  session = HTMLSession()  r = session.get(URL)  r.html.render() # you can use r.html.render(sleep=1) if you want   </code></pre>"			2021-06-26 13:53:27.217 UTC
29404856	javascript|python|web-scraping	How can I render JavaScript HTML to HTML in python?	"<p>I have looked around and only found solutions that render a URL to HTML. However I need a way to be able to render a webpage (That I already have, and that has JavaScript) to proper HTML.</p>  <p>Want: Webpage (with JavaScript) ---> HTML</p>  <p>Not: URL --> Webpage (with JavaScript) ---> HTML</p>  <p>I couldn't figure out how to make the other code work the way I wanted.</p>  <p>This is the code I was using that renders URLs: <a href=""http://webscraping.com/blog/Scraping-JavaScript-webpages-with-webkit/"" rel=""noreferrer"">http://webscraping.com/blog/Scraping-JavaScript-webpages-with-webkit/</a></p>  <p>For clarity, the code above takes a URL of a webpage that has some parts of the page rendered by JavaScript, so if I scrape the page normally using say urllib2 then I won't get all the links etc that are rendered as after the JavaScript.</p>  <p>However I want to be able to scrape a page, say again with urllib2, and then render that page and get the outcome HTML. (Different to the above code since it takes a URL as it's argument.</p>  <p>Any help is appreciated, thanks guys :)</p>"	2015-04-02 04:11:49.08 UTC	29406276	"<p>You can <code>pip install selenium</code> from a command line, and then run something like:</p>  <pre><code>from selenium import webdriver from urllib2 import urlopen  url = 'http://www.google.com' file_name = 'C:/Users/Desktop/test.txt'  conn = urlopen(url) data = conn.read() conn.close()  file = open(file_name,'wt') file.write(data) file.close()  browser = webdriver.Firefox() browser.get('file:///'+file_name) html = browser.page_source browser.quit() </code></pre>"			2015-04-02 06:22:06.48 UTC
29411202	google-app-engine|python-2.7|callback	how to handle javascript callback return data in python	"<pre><code>var req = new XMLHttpRequest();  req.open('GET', '/Search?' + query, async);    if (async) {    req.onreadystatechange = function() {          if(req.readyState == 4 &amp;&amp; req.status == 200) {                 var response = null;                 try {                       response = JSON.parse(req.responseText);                      } catch (e) {                                  response = req.responseText;                                  }                      callback(response); </code></pre>  <p>This callback function returns values to my python code (I am using GAE with python 2.7).</p>  <pre><code>class KeywordSearchRPCHandler(webapp2.RequestHandler):      def __init__(self):         webapp2.RequestHandler.__init__(self)         self.methods = RPCMethods()     def get(self):         func = None         action = self.request.get('action')         if action:             if action[0] == '_':                 self.error(403) # access denied                 return             else:                 func = getattr(self.methods, action, None)         if not func:             self.error(404) # file not found             return          else :             args = ()             while True:                 key = 'arg%d' % len(args)                 val = self.request.get(key)                 #print val                 if val:                     args = (json.loads(val))                 else:                     break             result = func(*args)              self.response.out.write(json.dumps(result)) </code></pre>  <p>This is the code that handles the callback function.</p>  <p>I get the error <strong>init</strong>() takes exactly 1 argument (3 given)</p>  <p>Could you please help me modify my code.  Thanks a lot in advance.</p>"	2015-04-02 10:55:44.477 UTC	29413660	"<p>The init handler:</p>  <pre><code>class RPCHandler(webapp2.RequestHandler):     """""" Allows the functions defined in the RPCMethods class to be RPCed.""""""      def __init__(self, request, response):          super(RPCHandler, self).__init__(request, response)         self.methods = RPCMethods() </code></pre>  <p>But I do not understand your json.loads(val) in your GET, because you send a query string and not a json request.</p>  <p>Below is an example post, handling a json post:</p>  <pre><code>def post(self):      data = self.request.body     args = loads(data)      if 'action' not in args:         self.error(405)  # access denied         return      func = args['action']      if func[0] == '_':         self.error(403)  # access denied         return      func = getattr(self.methods, func, None)     if not func:         self.error(404)  # file not found         return      # action handler aanroepen     result = func(args)     self.response.out.write(json.dumps(result)) </code></pre>  <p>If you use a GET with a query string webapp2 will handle the request. From the docs:</p>  <pre><code># An iterable with all items in the MultiDict: # [('check', 'a'), ('check', 'b'), ('name', 'Bob')] self.request.GET.items() </code></pre>"			2015-04-02 13:02:12.137 UTC
29411202	google-app-engine|python-2.7|callback	how to handle javascript callback return data in python	"<pre><code>var req = new XMLHttpRequest();  req.open('GET', '/Search?' + query, async);    if (async) {    req.onreadystatechange = function() {          if(req.readyState == 4 &amp;&amp; req.status == 200) {                 var response = null;                 try {                       response = JSON.parse(req.responseText);                      } catch (e) {                                  response = req.responseText;                                  }                      callback(response); </code></pre>  <p>This callback function returns values to my python code (I am using GAE with python 2.7).</p>  <pre><code>class KeywordSearchRPCHandler(webapp2.RequestHandler):      def __init__(self):         webapp2.RequestHandler.__init__(self)         self.methods = RPCMethods()     def get(self):         func = None         action = self.request.get('action')         if action:             if action[0] == '_':                 self.error(403) # access denied                 return             else:                 func = getattr(self.methods, action, None)         if not func:             self.error(404) # file not found             return          else :             args = ()             while True:                 key = 'arg%d' % len(args)                 val = self.request.get(key)                 #print val                 if val:                     args = (json.loads(val))                 else:                     break             result = func(*args)              self.response.out.write(json.dumps(result)) </code></pre>  <p>This is the code that handles the callback function.</p>  <p>I get the error <strong>init</strong>() takes exactly 1 argument (3 given)</p>  <p>Could you please help me modify my code.  Thanks a lot in advance.</p>"	2015-04-02 10:55:44.477 UTC	29411335	"<p>Here is the documentation: <a href=""https://webapp-improved.appspot.com/api/webapp2.html#webapp2.RequestHandler"" rel=""nofollow"">Docs</a></p>  <p><code>webapp2.RequestHandler.__init__(request=None, response=None)</code> is the signature.</p>  <p>So add request and response as parameters to your init and you should be fine.</p>  <p>Change <code>def __init__ (self)</code> to <code>def __init__(self, request=None, response=None)</code>. This will fix the bug.</p>  <p>And you probably want to call <code>super</code> properly instead of calling <code>__init__</code> on the class here:  <code>webapp2.RequestHandler.__init__(self)</code></p>  <p>This should most likely be <code>super(KeywordSearchRPCHandler, self).__init__(request, response)</code> instead.</p>"			2015-04-02 11:02:36.887 UTC
29431903	javascript|python|ajax|alert	return data in javascript with Python	"<p>I am creating a website with Python, Javascript (JQuery) and AJAX. I know to execute a Python script with Ajax, but I don't know to return data to Javascript with Python.</p>  <p>For example, if there is a mistake in a form, I would like send an alert (""The mail is incorrect""). I know that with PHP, I can used echo ""something"" but I don't know how to take that with Python.</p>  <pre><code>def secure_mail(mail):     if mail == """":         error = ""the mail is empty""         print error </code></pre>  <p>Thank you for your help !</p>"	2015-04-03 12:06:01.35 UTC	29432037	"<p>In your ajax success message or error function defined in your ajax method you would want to receive back JSON data which will contain your specific error as determined by your Python backend.  </p>  <p>so in your python backend create a dictionary. </p>  <pre><code>import json returnValue = {'error': 'you messed up something'}  ## serialize to json string return json.dumps(returnValue) </code></pre>  <p>Than in your ajax method data.error would equal ""you messed up something""</p>  <p>Depending on your web framework of choice (django, flask) the concept of handling the request and returning a dictionary as a json string would be similar. </p>"			2015-04-03 12:15:26.077 UTC
29448705	javascript|python|html|python-2.7	"Python2.7: get html of website, href becomes ""javascript:void(0)"""	"<p>I'm sorry if this is a duplicate but I searched a little bit and found nothing, maybe I just didn't know what to search for.</p>  <p>I think the question tells you everything.</p>  <p>I use Python2.7 to get the html of a website. After that I want to store some data about that website (such as links etc) and download some Files on that Website (automated with python).</p>  <p>Now I'm facing the problem, that one of the links I want to download has the value: ""javascript:void(0)""</p>  <p>Here's my code: </p>  <pre><code>import urllib2 response = urllib2.urlopen('http://www.japanesepod101.com/2006/01/16/survival-phrases-5-taxi/') html = response.read() f = open(""Workfile"", ""w""); f.write(html) </code></pre>  <p>I don't want to go in to much details but when watching the html code of the Website I have this element: </p>  <pre><code>&lt;a class=""media-download"" download="""" data-trackme=""downloadaudio,33"" href=""http://media.libsyn.com/media/japanesepod101/029_S5_011606_jpod101.mp3"" data-mode=""audio""&gt;Download MP3&lt;span class=""download-tooltip"" style=""display: none;""&gt;&lt;span class=""corner""&gt;&lt;/span&gt;Right Click &amp;amp; 'Save As'&lt;/span&gt;&lt;/a&gt; </code></pre>  <p>In my File that's creted that element is this:</p>  <pre><code>&lt;a class=""media-download"" data-trackme=""downloadaudio,33"" href=""javascript:void(0)"" data-mode=""audio""&gt;Download MP3&lt;/a&gt; </code></pre>  <p>How can I get the link in my File?</p>  <p>For a beginner (me) with python &amp; websites it looks like the javascript functions weren't called (because it isn't opened in a Browser?), is that the case?</p>"	2015-04-04 16:23:40.18 UTC	29448780	"<p>You can use selenium which will help load the javascript functions and then provide you the final htmlpage</p>  <p>To install selenium </p>  <pre><code>pip install selenium </code></pre>  <p>Here is the solution.</p>  <pre><code>from selenium import webdriver  driver = webdriver.Firefox() driver.get('yoururl') htmlpage = driver.page_source outputfile = open('workfile','w') outputfile.write(htmlpage) outputfile.close() driver.close() </code></pre>"			2015-04-04 16:29:33.423 UTC
29472883	javascript|python|exception-handling	Why are using exceptions more acceptable in python than javascript	"<p>You can replace ""javascript"" with other languages here. Basically what I've found from reading is that python actively encourages the use of exceptions and a series of if tests to manage code. Often readability is cited as well as cleaner looking code when 'duck-typing'</p>  <p>However, often when working in javascript or some other languages, it seems that best practices suggest trying to 'code defensively' and cover as much as you can in if statements and return types in order to avoid using exceptions. The reason most often cited is because exceptions are a very expensive operation.</p>  <p>Here's an example: <a href=""https://stackoverflow.com/a/8987401/2668545"">https://stackoverflow.com/a/8987401/2668545</a></p>  <ul> <li>Does python face the same exceptions cost as javascript and the best practices are such because there's more emphasis about readability/debuggability than performance?</li> <li>Does python have a different way of handling exceptions than javascript or other languages that don't recommend using exceptions?</li> <li>Am I misinterpreting the advice?</li> <li>Or is it something else?</li> </ul>"	2015-04-06 14:05:36.75 UTC	29473910	"<p>My take on this would be that though Python is a dynamically typed language, it is strongly-typed at the same time, see <a href=""https://wiki.python.org/moin/Why%20is%20Python%20a%20dynamic%20language%20and%20also%20a%20strongly%20typed%20language"" rel=""nofollow"">the explanation here</a>. This means that if something goes wrong deep down the call hierarchy (like trying to convert an empty string to an integer, division by zero, etc.), the interpreter raises an interrupt that bubbles up the call graph.</p>  <p>Javascript and many other interpreted languages tend to gloss such things over and continue silently computing (rubbish) as long as possible. Essentially, the programmer has to defend against Javascript itself.</p>  <p>It is thus consistent when a user-defined Python module behaves in the same way as the standard library modules and the interpreter itself: achieve the expected result or raise an exception.</p>  <p>The advantages are:</p>  <ul> <li>Improved readability: the expected sequence of actions is not mixed with error handling.</li> <li>Extra polymorphism. It can be possible to pass any object as a function argument, and things will work out if the object has the properties/members used by the function. The programmer writing the function does not have to know in advance the exact type of the argument (dynamic typing). If something goes wrong, there will be a call trace to investigate. Defensive checks are likely to be too restrictive and not 100% bullet-proof at the same time.</li> </ul>  <p>The considerations of readability and extensibility are probably more important than the ones of performance.</p>"			2015-04-06 15:07:09.517 UTC
29581319	python|python-3.x|encryption|rsa|pycrypto	Use RSA to encrypt in JavaScript and decrypt in Python3	"<p>I'm developing a website using this JS plugin to encrypt some data and send it to the server: <a href=""https://github.com/travist/jsencrypt"" rel=""nofollow"">https://github.com/travist/jsencrypt</a></p>  <p>I'm running Python 3 with Django, the problem is I can't decrypt the data on the server. My code is:</p>  <p>JS Code:</p>  <pre><code>pkey = ""-----BEGIN PUBLIC KEY-----\ MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDeVs9mcWUtTgi93/KXMNA/IF7S\ oQcZAmKQueygoDp9XUM3xnxPb/6XNpJQII85Hxbljqs/xuPVtxo5ovyJ+XXIPV8+\ eG6kSDmr2C3NpBUtfoUeADC/1H1jy44T6stBgXGMwTPokhjvSyEbGpkgMGo74Rpq\ q1vHofh3KcPNoaYH4wIDAQAB\ -----END PUBLIC KEY-----"";   var encrypter = new JSEncrypt; encrypter.setPublicKey(pkey); encrypter.encrypt('Testing...'); </code></pre>  <p>And I get:</p>  <pre><code>""STg7Fnm6Y6cAgMXEt4SxP8rbMb/pFB2X9Y1z8pAOoCNO9y8XuhVmQuG/FRBSqM+3ge43x9kfYMideAUu69RothwEOYmNnVrfwqm7SLm3voEcSXCqst2S7prTmCvYW43WyAAUl0vNxV+7xsm/yciQ4XV+jZSKd3xidbWL1BTTUw8="" </code></pre>  <p>Python Code:</p>  <pre><code>from Crypto.PublicKey import RSA from Crypto.Cipher import PKCS1_OAEP from base64 import *   def decrypt(key, text):     if type(key) == str:         key = key.encode()     if type(text) == str:         text = text.encode()      rsakey = RSA.importKey(key)     rsakey = PKCS1_OAEP.new(rsakey)     d = rsakey.decrypt(text)     return d  text = ""STg7Fnm6Y6cAgMXEt4SxP8rbMb/pFB2X9Y1z8pAOoCNO9y8XuhVmQuG/FRBSqM+3ge43x9kfYMideAUu69RothwEOYmNnVrfwqm7SLm3voEcSXCqst2S7prTmCvYW43WyAAUl0vNxV+7xsm/yciQ4XV+jZSKd3xidbWL1BTTUw8=""  text = b64decode(text.encode())  with open('private.pem', 'rb') as f:     key = f.read() decrypt(key, text) </code></pre>  <p>And I get:</p>  <pre><code>Traceback (most recent call last):   File ""&lt;stdin&gt;"", line 1, in &lt;module&gt;   File ""/usr/local/lib/python3.2/dist-packages/Crypto/Cipher/PKCS1_OAEP.py"", line 227, in decrypt     raise ValueError(""Incorrect decryption."") ValueError: Incorrect decryption. </code></pre>  <p>The private key I'm using in this example is:</p>  <pre><code>-----BEGIN RSA PRIVATE KEY----- MIICWwIBAAKBgQCO9YbJ8Z+tW0ucnMdXGNzmcvWaaLRGsx5iUHslbZ1tjec63HDm 6Hr2hv56u5zytyF4Cd/0lBNRC9qf/1XlEFqeSRifsyHZpPfyZn0fbHWYLH8g5FE4 VqrMe79ubSVx2eGWwwaLvEO+yaO1AF/fxWT6Ir8AUikMFFAnX+fBaA3XIwIDAQAB AoGADxuniQP+CgYR8ZUoA+5eugQALLdQBgC7/0veF9CDyKYsf634SI7dH9yYXEQj jAsKgHMatfBIMlJ8YlhLrY+S4+r26goNEqygtqetJ6NuePKQQ8xEERP4icsaBpY7 WqeU6AZOMlyq8o+e4DMnuxGpf8UT+lLx1G9AmVJf3+6NONECQQDLX94BmW//48Y6 yg9wnO6TR1msrGd1PFRqyJ9eilj8chI2JxiHkhepiTlBU7eyjUv4aeE7U84mp3Zo AtPoiKmlAkEAs/OQM9IDttfgdS/yK6vZr1myNAbKOdv1rVId7MAspGHbN//gzb4s r4mZKsIAi+jaDhpMvYbUxJe9y5HAY3XTJwJAe3hcZEQvRv+WHaMG9KuR/EBZJQgW V4qlBZ9/gfokRD9M5yudLNF5JCh3Zj3ZTMGT2eEOKOKcScNpk4QD+yzdMQJAQlSM Gd3WyqXmMav7qwdMVStN2YmLLyqZ80oqh6MKkYkUgh7KYWwxEn84ux8JjojFH5+o G9BASzrXldrivIaozwJAVAHr9ON/altcDyh/OjkJff/3xXzHB3Zxvy4WykkO/PdF tOqpAnYso3mCsEQsCcrJCflkFmJuYsvu4+Tm4GiqVg== -----END RSA PRIVATE KEY----- </code></pre>  <p>If I try to decrypt it on JS it works as intended:</p>  <pre><code>private = ""-----BEGIN RSA PRIVATE KEY-----\ MIICWwIBAAKBgQCO9YbJ8Z+tW0ucnMdXGNzmcvWaaLRGsx5iUHslbZ1tjec63HDm\ 6Hr2hv56u5zytyF4Cd/0lBNRC9qf/1XlEFqeSRifsyHZpPfyZn0fbHWYLH8g5FE4\ VqrMe79ubSVx2eGWwwaLvEO+yaO1AF/fxWT6Ir8AUikMFFAnX+fBaA3XIwIDAQAB\ AoGADxuniQP+CgYR8ZUoA+5eugQALLdQBgC7/0veF9CDyKYsf634SI7dH9yYXEQj\ jAsKgHMatfBIMlJ8YlhLrY+S4+r26goNEqygtqetJ6NuePKQQ8xEERP4icsaBpY7\ WqeU6AZOMlyq8o+e4DMnuxGpf8UT+lLx1G9AmVJf3+6NONECQQDLX94BmW//48Y6\ yg9wnO6TR1msrGd1PFRqyJ9eilj8chI2JxiHkhepiTlBU7eyjUv4aeE7U84mp3Zo\ AtPoiKmlAkEAs/OQM9IDttfgdS/yK6vZr1myNAbKOdv1rVId7MAspGHbN//gzb4s\ r4mZKsIAi+jaDhpMvYbUxJe9y5HAY3XTJwJAe3hcZEQvRv+WHaMG9KuR/EBZJQgW\ V4qlBZ9/gfokRD9M5yudLNF5JCh3Zj3ZTMGT2eEOKOKcScNpk4QD+yzdMQJAQlSM\ Gd3WyqXmMav7qwdMVStN2YmLLyqZ80oqh6MKkYkUgh7KYWwxEn84ux8JjojFH5+o\ G9BASzrXldrivIaozwJAVAHr9ON/altcDyh/OjkJff/3xXzHB3Zxvy4WykkO/PdF\ tOqpAnYso3mCsEQsCcrJCflkFmJuYsvu4+Tm4GiqVg==\ -----END RSA PRIVATE KEY-----\ "" text = ""STg7Fnm6Y6cAgMXEt4SxP8rbMb/pFB2X9Y1z8pAOoCNO9y8XuhVmQuG/FRBSqM+3ge43x9kfYMideAUu69RothwEOYmNnVrfwqm7SLm3voEcSXCqst2S7prTmCvYW43WyAAUl0vNxV+7xsm/yciQ4XV+jZSKd3xidbWL1BTTUw8=""  encrypter.setPrivateKey(private); encrypter.decrypt(text); </code></pre>  <p>And I get:</p>  <pre><code>""Testing"" </code></pre>  <p>But I just can't make it work on Python.</p>  <p>What am I doing wrong?</p>"	2015-04-11 18:10:24.093 UTC	42196983	"<p>I had been using JSEncrypt JavaScript file to achieve conversation between JavaScript and Python using pycrypto however during encryption in JavaScript it uses a random pad in the function pkcs1pad2 which needed to be removed and it started working. It had been a hack but it worked out. Following are the lines are commented out from function pkcs1pad2(s,n)</p>  <pre><code>while(n &gt; 2) { // random non-zero pad     x[0] = 0;     while(x[0] == 0) rng.nextBytes(x);     ba[--n] = x[0];   }    ba[--n] = 2;   ba[--n] = 0; </code></pre>"			2017-02-13 05:05:26.243 UTC
29581319	python|python-3.x|encryption|rsa|pycrypto	Use RSA to encrypt in JavaScript and decrypt in Python3	"<p>I'm developing a website using this JS plugin to encrypt some data and send it to the server: <a href=""https://github.com/travist/jsencrypt"" rel=""nofollow"">https://github.com/travist/jsencrypt</a></p>  <p>I'm running Python 3 with Django, the problem is I can't decrypt the data on the server. My code is:</p>  <p>JS Code:</p>  <pre><code>pkey = ""-----BEGIN PUBLIC KEY-----\ MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDeVs9mcWUtTgi93/KXMNA/IF7S\ oQcZAmKQueygoDp9XUM3xnxPb/6XNpJQII85Hxbljqs/xuPVtxo5ovyJ+XXIPV8+\ eG6kSDmr2C3NpBUtfoUeADC/1H1jy44T6stBgXGMwTPokhjvSyEbGpkgMGo74Rpq\ q1vHofh3KcPNoaYH4wIDAQAB\ -----END PUBLIC KEY-----"";   var encrypter = new JSEncrypt; encrypter.setPublicKey(pkey); encrypter.encrypt('Testing...'); </code></pre>  <p>And I get:</p>  <pre><code>""STg7Fnm6Y6cAgMXEt4SxP8rbMb/pFB2X9Y1z8pAOoCNO9y8XuhVmQuG/FRBSqM+3ge43x9kfYMideAUu69RothwEOYmNnVrfwqm7SLm3voEcSXCqst2S7prTmCvYW43WyAAUl0vNxV+7xsm/yciQ4XV+jZSKd3xidbWL1BTTUw8="" </code></pre>  <p>Python Code:</p>  <pre><code>from Crypto.PublicKey import RSA from Crypto.Cipher import PKCS1_OAEP from base64 import *   def decrypt(key, text):     if type(key) == str:         key = key.encode()     if type(text) == str:         text = text.encode()      rsakey = RSA.importKey(key)     rsakey = PKCS1_OAEP.new(rsakey)     d = rsakey.decrypt(text)     return d  text = ""STg7Fnm6Y6cAgMXEt4SxP8rbMb/pFB2X9Y1z8pAOoCNO9y8XuhVmQuG/FRBSqM+3ge43x9kfYMideAUu69RothwEOYmNnVrfwqm7SLm3voEcSXCqst2S7prTmCvYW43WyAAUl0vNxV+7xsm/yciQ4XV+jZSKd3xidbWL1BTTUw8=""  text = b64decode(text.encode())  with open('private.pem', 'rb') as f:     key = f.read() decrypt(key, text) </code></pre>  <p>And I get:</p>  <pre><code>Traceback (most recent call last):   File ""&lt;stdin&gt;"", line 1, in &lt;module&gt;   File ""/usr/local/lib/python3.2/dist-packages/Crypto/Cipher/PKCS1_OAEP.py"", line 227, in decrypt     raise ValueError(""Incorrect decryption."") ValueError: Incorrect decryption. </code></pre>  <p>The private key I'm using in this example is:</p>  <pre><code>-----BEGIN RSA PRIVATE KEY----- MIICWwIBAAKBgQCO9YbJ8Z+tW0ucnMdXGNzmcvWaaLRGsx5iUHslbZ1tjec63HDm 6Hr2hv56u5zytyF4Cd/0lBNRC9qf/1XlEFqeSRifsyHZpPfyZn0fbHWYLH8g5FE4 VqrMe79ubSVx2eGWwwaLvEO+yaO1AF/fxWT6Ir8AUikMFFAnX+fBaA3XIwIDAQAB AoGADxuniQP+CgYR8ZUoA+5eugQALLdQBgC7/0veF9CDyKYsf634SI7dH9yYXEQj jAsKgHMatfBIMlJ8YlhLrY+S4+r26goNEqygtqetJ6NuePKQQ8xEERP4icsaBpY7 WqeU6AZOMlyq8o+e4DMnuxGpf8UT+lLx1G9AmVJf3+6NONECQQDLX94BmW//48Y6 yg9wnO6TR1msrGd1PFRqyJ9eilj8chI2JxiHkhepiTlBU7eyjUv4aeE7U84mp3Zo AtPoiKmlAkEAs/OQM9IDttfgdS/yK6vZr1myNAbKOdv1rVId7MAspGHbN//gzb4s r4mZKsIAi+jaDhpMvYbUxJe9y5HAY3XTJwJAe3hcZEQvRv+WHaMG9KuR/EBZJQgW V4qlBZ9/gfokRD9M5yudLNF5JCh3Zj3ZTMGT2eEOKOKcScNpk4QD+yzdMQJAQlSM Gd3WyqXmMav7qwdMVStN2YmLLyqZ80oqh6MKkYkUgh7KYWwxEn84ux8JjojFH5+o G9BASzrXldrivIaozwJAVAHr9ON/altcDyh/OjkJff/3xXzHB3Zxvy4WykkO/PdF tOqpAnYso3mCsEQsCcrJCflkFmJuYsvu4+Tm4GiqVg== -----END RSA PRIVATE KEY----- </code></pre>  <p>If I try to decrypt it on JS it works as intended:</p>  <pre><code>private = ""-----BEGIN RSA PRIVATE KEY-----\ MIICWwIBAAKBgQCO9YbJ8Z+tW0ucnMdXGNzmcvWaaLRGsx5iUHslbZ1tjec63HDm\ 6Hr2hv56u5zytyF4Cd/0lBNRC9qf/1XlEFqeSRifsyHZpPfyZn0fbHWYLH8g5FE4\ VqrMe79ubSVx2eGWwwaLvEO+yaO1AF/fxWT6Ir8AUikMFFAnX+fBaA3XIwIDAQAB\ AoGADxuniQP+CgYR8ZUoA+5eugQALLdQBgC7/0veF9CDyKYsf634SI7dH9yYXEQj\ jAsKgHMatfBIMlJ8YlhLrY+S4+r26goNEqygtqetJ6NuePKQQ8xEERP4icsaBpY7\ WqeU6AZOMlyq8o+e4DMnuxGpf8UT+lLx1G9AmVJf3+6NONECQQDLX94BmW//48Y6\ yg9wnO6TR1msrGd1PFRqyJ9eilj8chI2JxiHkhepiTlBU7eyjUv4aeE7U84mp3Zo\ AtPoiKmlAkEAs/OQM9IDttfgdS/yK6vZr1myNAbKOdv1rVId7MAspGHbN//gzb4s\ r4mZKsIAi+jaDhpMvYbUxJe9y5HAY3XTJwJAe3hcZEQvRv+WHaMG9KuR/EBZJQgW\ V4qlBZ9/gfokRD9M5yudLNF5JCh3Zj3ZTMGT2eEOKOKcScNpk4QD+yzdMQJAQlSM\ Gd3WyqXmMav7qwdMVStN2YmLLyqZ80oqh6MKkYkUgh7KYWwxEn84ux8JjojFH5+o\ G9BASzrXldrivIaozwJAVAHr9ON/altcDyh/OjkJff/3xXzHB3Zxvy4WykkO/PdF\ tOqpAnYso3mCsEQsCcrJCflkFmJuYsvu4+Tm4GiqVg==\ -----END RSA PRIVATE KEY-----\ "" text = ""STg7Fnm6Y6cAgMXEt4SxP8rbMb/pFB2X9Y1z8pAOoCNO9y8XuhVmQuG/FRBSqM+3ge43x9kfYMideAUu69RothwEOYmNnVrfwqm7SLm3voEcSXCqst2S7prTmCvYW43WyAAUl0vNxV+7xsm/yciQ4XV+jZSKd3xidbWL1BTTUw8=""  encrypter.setPrivateKey(private); encrypter.decrypt(text); </code></pre>  <p>And I get:</p>  <pre><code>""Testing"" </code></pre>  <p>But I just can't make it work on Python.</p>  <p>What am I doing wrong?</p>"	2015-04-11 18:10:24.093 UTC	29581422	"<p>jsencrypt depends on the jsbn library which doesn't provide OAEP, but only PKCS#1 v1.5 padding.</p>  <p>You have to use the same in python which PyCrypto provides. Simply use <code>PKCS1_v1_5</code> instead of <code>PKCS1_OAEP</code>.</p>  <hr>  <p>Note that PKCS#1 v1.5 padding shouldn't be used today anymore. I suggest you use the <a href=""https://github.com/digitalbazaar/forge/"" rel=""nofollow"">forge library</a> which provides an RSA implementation with OAEP.</p>"			2015-04-11 18:18:57.297 UTC
29581319	python|python-3.x|encryption|rsa|pycrypto	Use RSA to encrypt in JavaScript and decrypt in Python3	"<p>I'm developing a website using this JS plugin to encrypt some data and send it to the server: <a href=""https://github.com/travist/jsencrypt"" rel=""nofollow"">https://github.com/travist/jsencrypt</a></p>  <p>I'm running Python 3 with Django, the problem is I can't decrypt the data on the server. My code is:</p>  <p>JS Code:</p>  <pre><code>pkey = ""-----BEGIN PUBLIC KEY-----\ MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDeVs9mcWUtTgi93/KXMNA/IF7S\ oQcZAmKQueygoDp9XUM3xnxPb/6XNpJQII85Hxbljqs/xuPVtxo5ovyJ+XXIPV8+\ eG6kSDmr2C3NpBUtfoUeADC/1H1jy44T6stBgXGMwTPokhjvSyEbGpkgMGo74Rpq\ q1vHofh3KcPNoaYH4wIDAQAB\ -----END PUBLIC KEY-----"";   var encrypter = new JSEncrypt; encrypter.setPublicKey(pkey); encrypter.encrypt('Testing...'); </code></pre>  <p>And I get:</p>  <pre><code>""STg7Fnm6Y6cAgMXEt4SxP8rbMb/pFB2X9Y1z8pAOoCNO9y8XuhVmQuG/FRBSqM+3ge43x9kfYMideAUu69RothwEOYmNnVrfwqm7SLm3voEcSXCqst2S7prTmCvYW43WyAAUl0vNxV+7xsm/yciQ4XV+jZSKd3xidbWL1BTTUw8="" </code></pre>  <p>Python Code:</p>  <pre><code>from Crypto.PublicKey import RSA from Crypto.Cipher import PKCS1_OAEP from base64 import *   def decrypt(key, text):     if type(key) == str:         key = key.encode()     if type(text) == str:         text = text.encode()      rsakey = RSA.importKey(key)     rsakey = PKCS1_OAEP.new(rsakey)     d = rsakey.decrypt(text)     return d  text = ""STg7Fnm6Y6cAgMXEt4SxP8rbMb/pFB2X9Y1z8pAOoCNO9y8XuhVmQuG/FRBSqM+3ge43x9kfYMideAUu69RothwEOYmNnVrfwqm7SLm3voEcSXCqst2S7prTmCvYW43WyAAUl0vNxV+7xsm/yciQ4XV+jZSKd3xidbWL1BTTUw8=""  text = b64decode(text.encode())  with open('private.pem', 'rb') as f:     key = f.read() decrypt(key, text) </code></pre>  <p>And I get:</p>  <pre><code>Traceback (most recent call last):   File ""&lt;stdin&gt;"", line 1, in &lt;module&gt;   File ""/usr/local/lib/python3.2/dist-packages/Crypto/Cipher/PKCS1_OAEP.py"", line 227, in decrypt     raise ValueError(""Incorrect decryption."") ValueError: Incorrect decryption. </code></pre>  <p>The private key I'm using in this example is:</p>  <pre><code>-----BEGIN RSA PRIVATE KEY----- MIICWwIBAAKBgQCO9YbJ8Z+tW0ucnMdXGNzmcvWaaLRGsx5iUHslbZ1tjec63HDm 6Hr2hv56u5zytyF4Cd/0lBNRC9qf/1XlEFqeSRifsyHZpPfyZn0fbHWYLH8g5FE4 VqrMe79ubSVx2eGWwwaLvEO+yaO1AF/fxWT6Ir8AUikMFFAnX+fBaA3XIwIDAQAB AoGADxuniQP+CgYR8ZUoA+5eugQALLdQBgC7/0veF9CDyKYsf634SI7dH9yYXEQj jAsKgHMatfBIMlJ8YlhLrY+S4+r26goNEqygtqetJ6NuePKQQ8xEERP4icsaBpY7 WqeU6AZOMlyq8o+e4DMnuxGpf8UT+lLx1G9AmVJf3+6NONECQQDLX94BmW//48Y6 yg9wnO6TR1msrGd1PFRqyJ9eilj8chI2JxiHkhepiTlBU7eyjUv4aeE7U84mp3Zo AtPoiKmlAkEAs/OQM9IDttfgdS/yK6vZr1myNAbKOdv1rVId7MAspGHbN//gzb4s r4mZKsIAi+jaDhpMvYbUxJe9y5HAY3XTJwJAe3hcZEQvRv+WHaMG9KuR/EBZJQgW V4qlBZ9/gfokRD9M5yudLNF5JCh3Zj3ZTMGT2eEOKOKcScNpk4QD+yzdMQJAQlSM Gd3WyqXmMav7qwdMVStN2YmLLyqZ80oqh6MKkYkUgh7KYWwxEn84ux8JjojFH5+o G9BASzrXldrivIaozwJAVAHr9ON/altcDyh/OjkJff/3xXzHB3Zxvy4WykkO/PdF tOqpAnYso3mCsEQsCcrJCflkFmJuYsvu4+Tm4GiqVg== -----END RSA PRIVATE KEY----- </code></pre>  <p>If I try to decrypt it on JS it works as intended:</p>  <pre><code>private = ""-----BEGIN RSA PRIVATE KEY-----\ MIICWwIBAAKBgQCO9YbJ8Z+tW0ucnMdXGNzmcvWaaLRGsx5iUHslbZ1tjec63HDm\ 6Hr2hv56u5zytyF4Cd/0lBNRC9qf/1XlEFqeSRifsyHZpPfyZn0fbHWYLH8g5FE4\ VqrMe79ubSVx2eGWwwaLvEO+yaO1AF/fxWT6Ir8AUikMFFAnX+fBaA3XIwIDAQAB\ AoGADxuniQP+CgYR8ZUoA+5eugQALLdQBgC7/0veF9CDyKYsf634SI7dH9yYXEQj\ jAsKgHMatfBIMlJ8YlhLrY+S4+r26goNEqygtqetJ6NuePKQQ8xEERP4icsaBpY7\ WqeU6AZOMlyq8o+e4DMnuxGpf8UT+lLx1G9AmVJf3+6NONECQQDLX94BmW//48Y6\ yg9wnO6TR1msrGd1PFRqyJ9eilj8chI2JxiHkhepiTlBU7eyjUv4aeE7U84mp3Zo\ AtPoiKmlAkEAs/OQM9IDttfgdS/yK6vZr1myNAbKOdv1rVId7MAspGHbN//gzb4s\ r4mZKsIAi+jaDhpMvYbUxJe9y5HAY3XTJwJAe3hcZEQvRv+WHaMG9KuR/EBZJQgW\ V4qlBZ9/gfokRD9M5yudLNF5JCh3Zj3ZTMGT2eEOKOKcScNpk4QD+yzdMQJAQlSM\ Gd3WyqXmMav7qwdMVStN2YmLLyqZ80oqh6MKkYkUgh7KYWwxEn84ux8JjojFH5+o\ G9BASzrXldrivIaozwJAVAHr9ON/altcDyh/OjkJff/3xXzHB3Zxvy4WykkO/PdF\ tOqpAnYso3mCsEQsCcrJCflkFmJuYsvu4+Tm4GiqVg==\ -----END RSA PRIVATE KEY-----\ "" text = ""STg7Fnm6Y6cAgMXEt4SxP8rbMb/pFB2X9Y1z8pAOoCNO9y8XuhVmQuG/FRBSqM+3ge43x9kfYMideAUu69RothwEOYmNnVrfwqm7SLm3voEcSXCqst2S7prTmCvYW43WyAAUl0vNxV+7xsm/yciQ4XV+jZSKd3xidbWL1BTTUw8=""  encrypter.setPrivateKey(private); encrypter.decrypt(text); </code></pre>  <p>And I get:</p>  <pre><code>""Testing"" </code></pre>  <p>But I just can't make it work on Python.</p>  <p>What am I doing wrong?</p>"	2015-04-11 18:10:24.093 UTC	29581565	"<p>Using PKCS1_v1_5:</p> <pre><code>def decrypt(key, text):     if type(key) == str:         key = key.encode()     if type(text) == str:         text = text.encode()      rsakey = RSA.importKey(key)     rsakey = PKCS1_v1_5.new(rsakey)     d = rsakey.decrypt(text, 'bollox')     return d  &gt;&gt;&gt; decrypt(key, text) b'Testing' </code></pre>"			2015-04-11 18:32:40.773 UTC
29624611	javascript|python|html|django-views	"Django, JavaScript &Co. : Print on html a variable running on python file"	"<p>I write this simple example: I have a function <code>x = 100*Math.random()</code> that print a number every <code>t = 1000 ms</code>. Ok, it works.</p>  <p>My trouble is: <strong>how do I use/call an external python function (e.g. <code>x = counter.py</code>) instead of  <code>x = 100*Math.random()</code>?</strong></p>  <p><strong>somepage.html</strong></p>  <pre><code>    ...      &lt;script  src=""{% static 'jquery-1.11.2.js' %}""&gt;&lt;/script&gt;     &lt;script src=""{% static 'js/contaBIS.js' %}""&gt;&lt;/script&gt;     &lt;button type=""button"" class=""btn btn-success"" id=""start""&gt; START &lt;/button&gt;     &lt;p id =""A""&gt;&lt;/p&gt;     &lt;p id =""B""&gt;&lt;/p&gt;     ... </code></pre>  <p><strong>contaBIS.js</strong></p>  <pre><code>$(document).ready(function() { var x;                                       var t = 1000;       $('#start').click(function() {          $('#start')             .removeClass('btn-success')             .addClass('btn-warning disabled')             .text('WAIT');           var myVar=setInterval(function(){myTimer()},t);         function myTimer() {          document.getElementById(""A"").innerHTML=""something's working "";          x = 100*Math.random();         //just an example          document.getElementById(""B"").innerHTML= x ;         }  }); </code></pre>  <p><strong>counter.py</strong></p>  <pre><code>import time z = 0 def prova(z):       while z &lt; 10:         time.sleep(1)         z = z + 1         print(z)      // I see z only on Eclipse console     return z </code></pre>  <p>Ok, <a href=""https://stackoverflow.com/questions/28837217/django-create-a-changing-button-or-waiting-page/29120448#29120448"">HERE</a> I saw how to call an external function but I don't know how see its values on html.  Do I have to write another view to do it? how?!</p>  <p>I look at <a href=""https://stackoverflow.com/questions/12848286/print-the-value-of-a-variable-in-python-django"">print the value of a variable in Python/Django?</a> but it is not good for me. </p>"	2015-04-14 10:09:13.803 UTC	29965044	"<p>Ok <a href=""https://stackoverflow.com/questions/29921085/django-passing-value-from-form-to-view-without-saving-into-database"">I solved part of my issue</a> changing several things. I post another question to be more specific and because I can't delete this one. I quote it here, hoping it will be useful to people like me who has just started studying django: </p>  <blockquote>   <p>Clicking on a html button, I call views.stream_response which   ""activates"" views.stream_response_generator which ""activates""   stream.py and return a StreamingHttpResponse and I see a progressive   list every second up to n at /stream_response/:</p>  <pre><code>[1] [1, 2] [1, 2, 3] [1, 2, 3, 4] [1, 2, 3, 4, 5] [1, 2, 3, 4, 5, 6] [1, 2, 3, 4, 5, 6, 7] [1, 2, 3, 4, 5, 6, 7, 8] [1, 2, 3, 4, 5, 6, 7, 8, 9] [1, 2, 3, 4, 5, 6, 7, 8, 9, 10] </code></pre>      <p><strong>stream.py</strong></p>  <pre><code>import time              def streamx(n):     list = []       x=0     while len(list) &lt; n:               x = x + 1         time.sleep(1)         list.append(x)         yield ""&lt;div&gt;%s&lt;/div&gt;\n"" % list     return list </code></pre>      <p><strong>views.py</strong></p>  <pre><code>def stream_response(request):     n = 10         #I would like to take this value from a FORM on html     resp = StreamingHttpResponse( stream_response_generator(n))     return resp       def stream_response_generator(n):     res = stream.streamx(n)     return res </code></pre>      <p><strong>urls.py</strong></p>  <pre><code>... url(r'^homepage/provadata/$', views.provadata),     url(r'^stream_response/$', views.stream_response, name='stream_response'), ... </code></pre>      <p><strong>homepage/provadata.html</strong></p>  <pre><code>&lt;a href=""{% url 'stream_response' %}"" class=""btn btn-info"" role=""button"" id=""btnGo""&gt;GO&lt;/a&gt; </code></pre> </blockquote>"			2015-04-30 10:15:34.68 UTC
29624611	javascript|python|html|django-views	"Django, JavaScript &Co. : Print on html a variable running on python file"	"<p>I write this simple example: I have a function <code>x = 100*Math.random()</code> that print a number every <code>t = 1000 ms</code>. Ok, it works.</p>  <p>My trouble is: <strong>how do I use/call an external python function (e.g. <code>x = counter.py</code>) instead of  <code>x = 100*Math.random()</code>?</strong></p>  <p><strong>somepage.html</strong></p>  <pre><code>    ...      &lt;script  src=""{% static 'jquery-1.11.2.js' %}""&gt;&lt;/script&gt;     &lt;script src=""{% static 'js/contaBIS.js' %}""&gt;&lt;/script&gt;     &lt;button type=""button"" class=""btn btn-success"" id=""start""&gt; START &lt;/button&gt;     &lt;p id =""A""&gt;&lt;/p&gt;     &lt;p id =""B""&gt;&lt;/p&gt;     ... </code></pre>  <p><strong>contaBIS.js</strong></p>  <pre><code>$(document).ready(function() { var x;                                       var t = 1000;       $('#start').click(function() {          $('#start')             .removeClass('btn-success')             .addClass('btn-warning disabled')             .text('WAIT');           var myVar=setInterval(function(){myTimer()},t);         function myTimer() {          document.getElementById(""A"").innerHTML=""something's working "";          x = 100*Math.random();         //just an example          document.getElementById(""B"").innerHTML= x ;         }  }); </code></pre>  <p><strong>counter.py</strong></p>  <pre><code>import time z = 0 def prova(z):       while z &lt; 10:         time.sleep(1)         z = z + 1         print(z)      // I see z only on Eclipse console     return z </code></pre>  <p>Ok, <a href=""https://stackoverflow.com/questions/28837217/django-create-a-changing-button-or-waiting-page/29120448#29120448"">HERE</a> I saw how to call an external function but I don't know how see its values on html.  Do I have to write another view to do it? how?!</p>  <p>I look at <a href=""https://stackoverflow.com/questions/12848286/print-the-value-of-a-variable-in-python-django"">print the value of a variable in Python/Django?</a> but it is not good for me. </p>"	2015-04-14 10:09:13.803 UTC	29686928	"<p>The browser cannot execute any random code on the web server (where Django runs), it can only download pages.</p>  <p>My first bet is to create a Django view that actually runs counter.py and renders its output to something the browser can process.</p>  <p>On your viewer page you should include an AJAX call that gets the result of the beforementioned view.</p>  <p>Note that, however, that your counter.py doesn't store any state information, which means every time you run it, you will get the same output:</p>  <pre><code>0 1 2 3 4 5 6 7 8 9 </code></pre>  <p>All this rendered in 10 seconds, which is really poor response time for an AJAX call (in fact, for any page load).</p>"			2015-04-16 22:13:47.667 UTC
29694869	javascript|python|html|http|xbmc	Extract/decode Javascript variables from html into python	"<p>I'm trying to extract, with python, some javascript variables from an HTML site:</p>  <pre><code>&lt;script&gt; var nData = new Array(); var Data = ""5b7b......""; nData = CallInit(Data); ... ... &lt;/script&gt; </code></pre>  <p>I can see the content of ""nData"" in firebug (DOM Panel) without problem:</p>  <pre><code>[Object { height=""532"",  width=""1280"",  url=""https://example.org...8EDA4F3F5F395B9&amp;key=lh1"",  more...}, Object { height=""266"",  width=""640"",  url=""https://example.org...8EDA4F3F5F395B9&amp;key=lh1"",  more...}] </code></pre>  <p>The content of nData is an URL. How can i parse/extract the content of nData to python?  It's possible?</p>  <p>Thanks</p>"	2015-04-17 09:06:09.137 UTC	29695957	"<p>With the help of the python library <a href=""http://jeanphix.me/Ghost.py/"" rel=""nofollow"">Ghost.py</a> it should be possible to get a dynamic variable out of executed Javascript code.</p>  <p>I just tried it out with some <a href=""https://dl.dropboxusercontent.com/u/13991899/test/index.html"" rel=""nofollow"">small test site</a> and got a Javascript variable named <code>a</code> which I use on that page as a python object. I did the following:</p>  <ol> <li><p>Install Ghost.py with <code>pip install Ghost.py</code>.</p></li> <li><p>Install PySide (it's a prerequisite for Ghost.py) with <code>pip install PySide</code>.</p></li> <li><p>Use the following python code:</p>  <pre><code>from ghost import Ghost ghost = Ghost() ghost.open('https://dl.dropboxusercontent.com/u/13991899/test/index.html') js_variable, _ = ghost.evaluate('a', expect_loading=True) print js_variable </code></pre></li> </ol>  <p>You should be able to get your variable <code>nData</code> into the python variable <code>js_variable</code> by opening your site with <code>ghost.open</code> and then call <code>ghost.evaluate('nData')</code>.</p>"			2015-04-17 09:53:21.28 UTC
29707535	javascript|python|websocket|bson	Sending BSON from python to javascript over websockets	"<p>I have a python application that contains an Autobahn websocket server to send to an HTML5/javascript GUI.  I have been transferring data between them using JSON, but am now really starting to stress my bandwidth as I need to send arrays of 1000's of (single precision) 3D positions in some of my messages.  Writing each of those floats as text for JSON seems like an obvious waste when I could just in theory just send 4 bytes for each number. BSON seems like a much better idea, but I can't seem to get it working.</p>  <p>Here is the gist of my code:</p>  <pre class=""lang-py prettyprint-override""><code># Python side class BroadcastServerFactory(WebSocketServerFactory):     # ...     def broadcast_message(message):         bson_msg = bson.BSON.encode(msg)         prepared_msg = self.prepareMessage(bson_msg, isBinary=True)         for c in self.clients:             self.clients[c].sendPreparedMessage(prepared_msg) </code></pre>  <pre class=""lang-js prettyprint-override""><code>// Javascript side app.sock = new WebSocket('ws://127.0.0.1:9090'); app.sock.binaryType = ""arraybuffer""; // ... sock.onmessage = function(e) {     var msg = null;     try {         msg = BSON.deserialize(e.data);     }     catch(err) {         console.log('Failed to deserialize: ', err);     }     if(msg) app.onmessage(msg); }; </code></pre>  <p>Unfortunately, as soon as I get a message on the javascript side, my exception handler triggers with: </p>  <pre><code>Failed to deserialize:  Error: corrupt bson message {stack: (...), message: ""corrupt bson message""} </code></pre>  <p>I am using the browser build of the <a href=""https://github.com/mongodb/js-bson"" rel=""nofollow"">mongodb bson library</a> on the javascript side, and the <a href=""http://api.mongodb.org/python/current/api/bson/"" rel=""nofollow"">pymongo bson implementation</a> on the Python side.</p>"	2015-04-17 19:08:57.813 UTC	29711650	"<p>After much fiddling, I seem to have a working solution:</p>  <pre class=""lang-js prettyprint-override""><code>// Javascript side app.sock = new WebSocket('ws://127.0.0.1:9090'); app.sock.binaryType = ""blob""; // Changed from ""arraybuffer"" // ... sock.onmessage = function(e) {     try {         var reader = new FileReader();         reader.onload  = function() {             uint8Array  = new Uint8Array(this.result);             app.onmessage(BSON.deserialize(uint8Array));         }         reader.readAsArrayBuffer(e.data);      }     catch(err) {         console.log('Failed to deserialize: ', err);     } }; </code></pre>"			2015-04-18 00:55:15.33 UTC
29736102	javascript|python|utc	Convert Python UTC time stamp to local time in JavaScript	"<p>Im trying to convert a UTC timestamp generated with python to connecting clients local time. But, the time never converts correctly.</p>  <p><strong>Python</strong></p>  <pre><code>import time, datetime   utc_time = datetime.datetime.utcnow() utc_time = int(time.mktime(utc_time.timetuple())) * 1000 </code></pre>  <p><strong>JavaScript</strong></p>  <pre><code>function Time(time) {     var month = {}     month[0] = ""Jan"";     month[1] = ""Feb"";     month[2] = ""Mar"";     month[3] = ""Apr"";     month[4] = ""May"";     month[5] = ""Jun"";     month[6] = ""Jul"";     month[7] = ""Aug"";     month[8] = ""Sept"";     month[9] = ""Oct"";     month[10] = ""Nov"";     month[11] = ""Dec"";     day = {}     day[0] = ""Sunday"";     day[1] = ""Monday"";     day[2] = ""Tuesday"";     day[3] = ""Wednesday"";     day[4] = ""Thursday"";     day[5] = ""Friday"";     day[6] = ""Saturday"";     var b = new Date();     var d = new Date(time);     var c = d.getTime() + (b.getTimezoneOffset() * 60000);     var offset = -(b.getTimezoneOffset() /60);     var res = c + (3600000 * offset);     d.setTime(res);     var days = day[d.getDay()];     var mon = d.getMonth();     var year = d.getFullYear();     var hour = d.getHours();     var minute = d.getMinutes();     var seconds = d.getSeconds();     var date = d.getDate();     return days + ' - ' + month[mon] + '/' + date + '/' + year + "" - "" + hour + "":"" + minute + "":"" + seconds; } console.log(Time(1429490580*1000));  // time stamp generated: Sunday - Apr/19/2015  at 4:43PM </code></pre>  <p>Is my math wrong or is it something I did wrong on the python side?</p>"	2015-04-19 21:29:31.683 UTC	29737017	"<p>You timestamp is incorrect:</p>  <pre><code>import datetime utc_time = datetime.datetime.utcnow() timestamp = (utc_time - datetime.datetime(1970, 1, 1)).total_seconds() </code></pre>"			2015-04-19 23:15:57.61 UTC
29736102	javascript|python|utc	Convert Python UTC time stamp to local time in JavaScript	"<p>Im trying to convert a UTC timestamp generated with python to connecting clients local time. But, the time never converts correctly.</p>  <p><strong>Python</strong></p>  <pre><code>import time, datetime   utc_time = datetime.datetime.utcnow() utc_time = int(time.mktime(utc_time.timetuple())) * 1000 </code></pre>  <p><strong>JavaScript</strong></p>  <pre><code>function Time(time) {     var month = {}     month[0] = ""Jan"";     month[1] = ""Feb"";     month[2] = ""Mar"";     month[3] = ""Apr"";     month[4] = ""May"";     month[5] = ""Jun"";     month[6] = ""Jul"";     month[7] = ""Aug"";     month[8] = ""Sept"";     month[9] = ""Oct"";     month[10] = ""Nov"";     month[11] = ""Dec"";     day = {}     day[0] = ""Sunday"";     day[1] = ""Monday"";     day[2] = ""Tuesday"";     day[3] = ""Wednesday"";     day[4] = ""Thursday"";     day[5] = ""Friday"";     day[6] = ""Saturday"";     var b = new Date();     var d = new Date(time);     var c = d.getTime() + (b.getTimezoneOffset() * 60000);     var offset = -(b.getTimezoneOffset() /60);     var res = c + (3600000 * offset);     d.setTime(res);     var days = day[d.getDay()];     var mon = d.getMonth();     var year = d.getFullYear();     var hour = d.getHours();     var minute = d.getMinutes();     var seconds = d.getSeconds();     var date = d.getDate();     return days + ' - ' + month[mon] + '/' + date + '/' + year + "" - "" + hour + "":"" + minute + "":"" + seconds; } console.log(Time(1429490580*1000));  // time stamp generated: Sunday - Apr/19/2015  at 4:43PM </code></pre>  <p>Is my math wrong or is it something I did wrong on the python side?</p>"	2015-04-19 21:29:31.683 UTC	29736458	"<p>Your Javascript seems much more complicated than necessary, unless I'm misunderstanding your goal. Unix timestamp values are always UTC, and the base Date.toString() will output in the local client timezone by default. Manual conversion shouldn't be necessary unless you want an output format other than the standard ones provided.</p>  <pre><code>var ourDateTime = new Date(timestampFromServer); console.log(ourDateTime.toString()); </code></pre>"			2015-04-19 22:05:42.893 UTC
29825571	javascript|python	Javascript and Python variable differences	"<p>I've just started learning Javascript and used to Python previously.</p>  <p>Python variables work as a reference to, a 'block' in memory. Other aliases can point to block in memory and which is cleaned up by the garbage collection when there are no more references remaining which point to it.</p>  <p>However I'm not sure if this is the same in Javascript? Does Javascript use direct pointers, rather than references? So does javascript have the same shallow or deep copy  differences that Python does? (I've heard that JS may not have the concept of mutability or immutability, so this may not be the case).</p>  <p>Can anyone explain how Javascript variables work in detail as I can't picture this well?</p>  <p>Thanks. </p>  <p>PS I'm still pretty new to programming so apologies if my terminology is a bit wonky. </p>"	2015-04-23 13:52:11.847 UTC	29827825	"<p>Yes, javascript works in a similar way.</p>  <p>booleans, numbers, and strings are stored by value. So, in this code snippet, for example,</p>  <pre><code>var a = 122; var b = 122; </code></pre>  <p><code>a === b</code> will be true.</p>  <p>Everything else, however, is stored by reference and automatically garbage-collected as you described in your question. So, for example, in this code snippet,</p>  <pre><code>var a = [1, 2, 3, 4] var b = [1, 2, 3, 4] </code></pre>  <p><code>a === b</code> will be false.</p>  <p>Edit:</p>  <p>In Python, array and dictionary equality are by value, but class instances are equal only if they are the same instance. In javascript, an <code>Object</code> is basically a dictionary where the keys must be strings. Because Objects are used in javascript to fill the same role as class instances in Python (you'd be surprised at how well it works), Objects are equal only if they are the same Object. Arrays inherit from Object, so they are also by reference.</p>"			2015-04-23 15:22:24.677 UTC
29868301	javascript|python	Is there a Python 2 equivalent of Javascripts confirm() command?	"<p>Short version is simply the question.</p>  <p>Longer version: I am learning Javascript via Codecademy, while trying to relearn Python 2 at the same time. I just finished the Choose Your Own Adventure Story. </p>  <p>In the code below, I can figure out how to easily adjust everything to Python 2 besides the code except the confirm command in Line 2. </p>  <pre><code>// Check if the user is ready to play! confirm(""It's gametime!""); var age = prompt(""What's your age""); if (age &lt; 13) { console.log(""You're really young, but go play""); } else {     console.log(""You're old enough. Start playing""); } console.log(""You are at a Justin Bieber concert, and you hear this lyric 'Lace my shoes off, start racing.'""); console.log(""Suddenly, Bieber stops and says, 'Who wants to race me?'""); var userAnswer = prompt(""Do you want to race Bieber on stage?""); if (userAnswer === ""yes"") {     console.log(""You and Bieber start racing. It's neck and neck! You win by a shoelace!""); } else {     console.log(""Oh no! Bieber shakes his head and sings 'I set a pace, so I can race without pacing.'""); } var feedback = prompt(""Rate this game from 1-10""); if (feedback &gt; 8) {     console.log(""Thank you! We should race at the next concert!""); } else {     console.log(""I'll keep practicing coding and racing.""); }  </code></pre>  <p>I'd appreciate any help. Many thanks.</p>"	2015-04-25 17:15:46.617 UTC	29868515	"<p>If you're attempting to capture input from a user at the command line you would use the <a href=""https://docs.python.org/2/library/functions.html#raw_input"" rel=""nofollow"">raw_input</a> function:</p>  <pre><code>age = raw_input(""What's your age?\n"") </code></pre>"			2015-04-25 17:36:14.957 UTC
29950445	javascript|python|html|django	How to call/use data returned by python function in javascript?	"<p>I've defined a function in views.py like this</p>  <pre><code>def ma_fonction_bokeh(request, numero = None):     CDR_COMMON = settings.DBCON[settings.MONGO_CDRSTATS['CDR_COMMON']]     acc = CDR_COMMON.find()     donnees = [] # on initialise une liste     for i in acc:         if i['accountcode'] == numero:             donnees.append([calendar.timegm(i[""start_uepoch""].timetuple()), i[""duration""]])      data = simplejson.dumps(donnees)      return render(request,""frontend/mongraphe.html"", {""name"": numero, ""data"": data}) </code></pre>  <p>Then in the mongraphe.html file I've created a javascript code for a plot that I got from <a href=""http://www.highcharts.com/stock/demo/dynamic-update"" rel=""nofollow"">http://www.highcharts.com/stock/demo/dynamic-update</a>  What I want is to customize the plot with my own data which is returned by the function that I defined at first... so how can I do that? I've tried the ajax function but without result</p>"	2015-04-29 17:20:55.907 UTC	29955035	"<p>You can transfer data from your Python code to JavaScript in several ways.</p>  <p>The ""proper"" way is to create another endpoint which only returns the JSON data and then use an AJAX request (for example, <a href=""http://api.jquery.com/jquery.getjson/"" rel=""nofollow""><code>jQuery.getJSON(…)</code></a>) to request it.</p>  <p>A quicker way is to modify your template (<code>frontend/mongraphe.html</code>) to include the JSON data as a variable. Since you didn't specify what Python library you're using, I'm going to assume you're using something like Django. Here's what you would add to your template to make the data available in JavaScript:</p>  <pre><code>&lt;script&gt; var data = {{data}}; &lt;/script&gt; </code></pre>  <p>Make sure that you put the <code>&lt;script&gt;</code> tag above some place <em>before</em> you try to access the data. The <code>{{data}}</code> part will output the JSON string that you created in your Python script so that the final output will be something like <code>var data = {""hello"": ""world""};</code></p>  <p>Now you should be able to access the <code>data</code> variable in your JavaScript and put the data into the Highcharts.js chart.</p>"			2015-04-29 21:36:23.42 UTC
29966204	javascript|python|dom-events|keyboard-events|onkeydown	What is the equivalent for onkeydown and onkeyup (Javascript events) in python?	<p>There are events called 'onkeydown' and 'onkeyup' in Javascript. Can anyone please suggest the python equivalent of it?</p>	2015-04-30 11:12:02.387 UTC	29966394	"<p>Without any external library, python can't provide GUI features, such as events handling. Listening to an event such <code>onkeydown</code> or <code>onkeyup</code> is thus impossible with the python sdl.</p>  <p>If you really want to react to these events, you must use an external library providing event-driven operations, such as the <a href=""http://www.qt.io/developers/"" rel=""nofollow"">Qt</a> binding <a href=""http://www.riverbankcomputing.co.uk/software/pyqt/intro"" rel=""nofollow"">PyQt</a>, the <a href=""https://wiki.python.org/moin/TkInter"" rel=""nofollow"">TKinter</a> module, or other libraries.</p>"			2015-04-30 11:21:20.237 UTC
29999482	javascript|python|selenium|webdriver|phantomjs	Javascript alerts in Python + Selenium + PhantomJS script	"<p>I try to ""click"" Javascript alert for reboot confirmation in DSL modem with a Python script as follows:</p>  <pre><code>#!/usr/bin/env python  import selenium import time from selenium import webdriver  cap = {u'acceptSslCerts': True, u'applicationCacheEnabled': True, u'browserConnectionEnabled': True, u'browserName': u'phantomjs', u'cssSelectorsEnabled': True, u'databaseEnabled': False, u'driverName': u'ghostdriver', u'driverVersion': u'1.1.0', u'handlesAlerts': True, u'javascriptEnabled': True, u'locationContextEnabled': False, u'nativeEvents': True, u'platform': u'linux-unknown-64bit', u'proxy': {u'proxyType': u'direct'}, u'rotatable': False, u'takesScreenshot': True, u'version': u'1.9.8', u'webStorageEnabled': False}   driver = webdriver.PhantomJS('/usr/lib/node_modules/phantomjs/bin/phantomjs', desired_capabilities=cap) driver.get('http://username:passwd@192.168.1.254') sbtn = driver.find_element_by_id('reboto_btn') sbtn.click() time.sleep(4) al = driver.switch_to_alert()  print al.accept() </code></pre>  <p>However, I get exception pasted below even though I do set <code>handlesAlerts</code> in <code>desired_capabilities</code>. </p>  <p>How can I fix that? What's the reason for the exception?</p>  <p>Exception: </p>  <pre><code>--------------------------------------------------------------------------- WebDriverException                        Traceback (most recent call last) /usr/local/bin/pjs/asus_reboot.py in &lt;module&gt;() 36 #ipdb.set_trace() 37  ---&gt; 38 print al.accept() 39  40 #print al.text  /usr/local/venvs/asusreboot/local/lib/python2.7/site-packages/selenium/webdriver/common/alert.pyc in accept(self) 76         Alert(driver).accept() # Confirm a alert dialog. 77         """""" ---&gt; 78         self.driver.execute(Command.ACCEPT_ALERT) 79  80     def send_keys(self, keysToSend):  /usr/local/venvs/asusreboot/local/lib/python2.7/site-packages/selenium/webdriver/remote/webdriver.pyc in execute(self, driver_command, params) 173         response = self.command_executor.execute(driver_command, params) 174         if response: --&gt; 175             self.error_handler.check_response(response) 176             response['value'] = self._unwrap_value( 177                 response.get('value', None))  /usr/local/venvs/asusreboot/local/lib/python2.7/site-packages/selenium/webdriver/remote/errorhandler.pyc in check_response(self, response) 134             if exception_class == ErrorInResponseException: 135                 raise exception_class(response, value) --&gt; 136             raise exception_class(value) 137         message = '' 138         if 'message' in value:  WebDriverException: Message: Invalid Command Method - {""headers"":{""Accept"":""application/json"",""Accept-Encoding"":""identity"",""Connection"":""close"",""Content-Length"":""53"",""Content-Type"":""application/json;charset=UTF-8"",""Host"":""127.0.0.1:36590"",""User-Agent"":""Python-urllib/2.7""},""httpVersion"":""1.1"",""method"":""POST"",""post"":""{\""sessionId\"": \""fc97c240-f098-11e4-ae53-e17f38effd6c\""}"",""url"":""/accept_alert"",""urlParsed"":{""anchor"":"""",""query"":"""",""file"":""accept_alert"",""directory"":""/"",""path"":""/accept_alert"",""relative"":""/accept_alert"",""port"":"""",""host"":"""",""password"":"""",""user"":"""",""userInfo"":"""",""authority"":"""",""protocol"":"""",""source"":""/accept_alert"",""queryKey"":{},""chunks"":[""accept_alert""]},""urlOriginal"":""/session/fc97cea0-f098-11e4-ae53-e17f38eaad6c/accept_alert""} </code></pre>"	2015-05-02 07:06:37.54 UTC	32140515	"<p>As PhantomJs has no support for Alert boxes .you need to use executor for this.</p>  <pre><code>driver.execute_script(""window.confirm = function(msg) { return true; }""); </code></pre>"			2015-08-21 12:38:06.013 UTC
29999482	javascript|python|selenium|webdriver|phantomjs	Javascript alerts in Python + Selenium + PhantomJS script	"<p>I try to ""click"" Javascript alert for reboot confirmation in DSL modem with a Python script as follows:</p>  <pre><code>#!/usr/bin/env python  import selenium import time from selenium import webdriver  cap = {u'acceptSslCerts': True, u'applicationCacheEnabled': True, u'browserConnectionEnabled': True, u'browserName': u'phantomjs', u'cssSelectorsEnabled': True, u'databaseEnabled': False, u'driverName': u'ghostdriver', u'driverVersion': u'1.1.0', u'handlesAlerts': True, u'javascriptEnabled': True, u'locationContextEnabled': False, u'nativeEvents': True, u'platform': u'linux-unknown-64bit', u'proxy': {u'proxyType': u'direct'}, u'rotatable': False, u'takesScreenshot': True, u'version': u'1.9.8', u'webStorageEnabled': False}   driver = webdriver.PhantomJS('/usr/lib/node_modules/phantomjs/bin/phantomjs', desired_capabilities=cap) driver.get('http://username:passwd@192.168.1.254') sbtn = driver.find_element_by_id('reboto_btn') sbtn.click() time.sleep(4) al = driver.switch_to_alert()  print al.accept() </code></pre>  <p>However, I get exception pasted below even though I do set <code>handlesAlerts</code> in <code>desired_capabilities</code>. </p>  <p>How can I fix that? What's the reason for the exception?</p>  <p>Exception: </p>  <pre><code>--------------------------------------------------------------------------- WebDriverException                        Traceback (most recent call last) /usr/local/bin/pjs/asus_reboot.py in &lt;module&gt;() 36 #ipdb.set_trace() 37  ---&gt; 38 print al.accept() 39  40 #print al.text  /usr/local/venvs/asusreboot/local/lib/python2.7/site-packages/selenium/webdriver/common/alert.pyc in accept(self) 76         Alert(driver).accept() # Confirm a alert dialog. 77         """""" ---&gt; 78         self.driver.execute(Command.ACCEPT_ALERT) 79  80     def send_keys(self, keysToSend):  /usr/local/venvs/asusreboot/local/lib/python2.7/site-packages/selenium/webdriver/remote/webdriver.pyc in execute(self, driver_command, params) 173         response = self.command_executor.execute(driver_command, params) 174         if response: --&gt; 175             self.error_handler.check_response(response) 176             response['value'] = self._unwrap_value( 177                 response.get('value', None))  /usr/local/venvs/asusreboot/local/lib/python2.7/site-packages/selenium/webdriver/remote/errorhandler.pyc in check_response(self, response) 134             if exception_class == ErrorInResponseException: 135                 raise exception_class(response, value) --&gt; 136             raise exception_class(value) 137         message = '' 138         if 'message' in value:  WebDriverException: Message: Invalid Command Method - {""headers"":{""Accept"":""application/json"",""Accept-Encoding"":""identity"",""Connection"":""close"",""Content-Length"":""53"",""Content-Type"":""application/json;charset=UTF-8"",""Host"":""127.0.0.1:36590"",""User-Agent"":""Python-urllib/2.7""},""httpVersion"":""1.1"",""method"":""POST"",""post"":""{\""sessionId\"": \""fc97c240-f098-11e4-ae53-e17f38effd6c\""}"",""url"":""/accept_alert"",""urlParsed"":{""anchor"":"""",""query"":"""",""file"":""accept_alert"",""directory"":""/"",""path"":""/accept_alert"",""relative"":""/accept_alert"",""port"":"""",""host"":"""",""password"":"""",""user"":"""",""userInfo"":"""",""authority"":"""",""protocol"":"""",""source"":""/accept_alert"",""queryKey"":{},""chunks"":[""accept_alert""]},""urlOriginal"":""/session/fc97cea0-f098-11e4-ae53-e17f38eaad6c/accept_alert""} </code></pre>"	2015-05-02 07:06:37.54 UTC	30015333	"<p>In java, driver.switchTo().alert().accept(); will do the job. </p>  <p>I am not sure, why you are using ""print al.accept()"", probably are you trying to print text?  then alert.getText() will do in java, sorry if i am wrong, because i am sure in python.</p>  <p>Thank You, Murali <a href=""http://seleniumtrainer.com/"" rel=""nofollow"">http://seleniumtrainer.com/</a></p>"			2015-05-03 15:03:40.67 UTC
30088213	javascript|php|python	Send to Python script from PHP/JavaScript	"<p>I'm working on a project where I send data to an Arduino from an Apache running on a Raspberry Pi.</p>  <p>Sending data to the Arduino requires the Raspberry Pi to execute a Python script.</p>  <p>The controls are detected and acted upon in JavaScript.</p>  <p>I have found several ways to start the Python script from the JavaScript code. However, I can't find how I can then send data to the Python script from the JavaScript code so that the Python code can send data to the Arduino.</p>  <p>Any help is appreciated!</p>"	2015-05-06 21:47:19.557 UTC	30345991	"<p>I solved it using Flask, a Python framework.</p>  <p>Instead of the console.log(), it is now an ajax-function that calls a method in the Python code, where the serial port can stay open.</p>  <pre><code>$.ajax({     url: ""{{ url_for('move') }}"", // This is Flask code that call a Python function     method: ""POST"",     data: {         move: currentMove     },     success: function() {         console.log('move: ' + currentMove);     } }); </code></pre>"			2015-05-20 09:42:03.62 UTC
30088213	javascript|php|python	Send to Python script from PHP/JavaScript	"<p>I'm working on a project where I send data to an Arduino from an Apache running on a Raspberry Pi.</p>  <p>Sending data to the Arduino requires the Raspberry Pi to execute a Python script.</p>  <p>The controls are detected and acted upon in JavaScript.</p>  <p>I have found several ways to start the Python script from the JavaScript code. However, I can't find how I can then send data to the Python script from the JavaScript code so that the Python code can send data to the Arduino.</p>  <p>Any help is appreciated!</p>"	2015-05-06 21:47:19.557 UTC	30088448	"<p>Maybe you can write something in a file in your Rasperry Pi.</p>  <p>I found this on the Web : <a href=""http://jj09.net/interprocess-communication-python-java/"" rel=""nofollow"">interprocess python/java</a></p>"			2015-05-06 22:03:59.713 UTC
30146259	python|selenium	how to handle javascript alerts in selenium using python	"<p>So I there is this button I want to click and if it's the first time you've clicked it. A javascript alert popup will appear. I've been using firebug and just can't find where that javascript is located and I've tried </p>  <pre><code>if EC.alert_is_present:         driver.switch_to_alert().accept() else:     print(""no alert"") </code></pre>  <p>the above code works if there is an alert box but will throw an error if there is none. even though there is an else statement I've even tried </p>  <pre><code>   if EC.alert_is_present:             driver.switch_to_alert().accept()    elif not EC.alert_is_present:                print(""no alert"") </code></pre>  <p>it throws me this error</p>  <pre><code>selenium.common.exceptions.NoAlertPresentException: Message: No alert is present </code></pre>  <p>how do we get around this?</p>"	2015-05-09 23:50:03.083 UTC	30146662	"<p>This is how you do it:</p>  <pre><code>from selenium.common.exceptions import NoAlertPresentException try:     context.driver.switch_to.alert.accept() except NoAlertPresentException:     pass </code></pre>  <p>You can replace <code>pass</code> with a <code>print</code> statement if you wish. Note the use of <code>switch_to.alert</code> rather than <code>switch_to_alert()</code>. The latter has been deprecated for a while. In the version of Selenium I have here, I see this in its code:</p>  <pre><code>warnings.warn(""use driver.switch_to.alert instead"", DeprecationWarning) </code></pre>"			2015-05-10 01:10:44.987 UTC
30146259	python|selenium	how to handle javascript alerts in selenium using python	"<p>So I there is this button I want to click and if it's the first time you've clicked it. A javascript alert popup will appear. I've been using firebug and just can't find where that javascript is located and I've tried </p>  <pre><code>if EC.alert_is_present:         driver.switch_to_alert().accept() else:     print(""no alert"") </code></pre>  <p>the above code works if there is an alert box but will throw an error if there is none. even though there is an else statement I've even tried </p>  <pre><code>   if EC.alert_is_present:             driver.switch_to_alert().accept()    elif not EC.alert_is_present:                print(""no alert"") </code></pre>  <p>it throws me this error</p>  <pre><code>selenium.common.exceptions.NoAlertPresentException: Message: No alert is present </code></pre>  <p>how do we get around this?</p>"	2015-05-09 23:50:03.083 UTC	30146363	"<p>Use try catch and if the Alert is not present catch <code>NoAlertPresentException</code> exception:</p>  <pre><code>from selenium.common.exceptions import NoAlertPresentException  try:     driver.switch_to_alert().accept() except NoAlertPresentException as e:      print(""no alert"") </code></pre>"			2015-05-10 00:09:07.73 UTC
30277770	javascript|python|class|parsing|python-3.x	Parse Javascript To JSON Using Python 3	"<p>this is a very specific request, and for that i apologise, but i am at a loss for what to do..</p>  <p>for a javascript project i am working on i want to be able to parse javascript with python and i found this implementation`port of the original narcissus called pynarcissus:</p>  <p><a href=""https://github.com/jtolds/pynarcissus"" rel=""nofollow"">https://github.com/jtolds/pynarcissus</a></p>  <p>the problem for me is the information is buried in the python class structure.. something with which i am only vaguely competent.. and i want the output to be in JSON</p>  <p>i have tried to mine the data out but each time the JSON is invalid</p>  <p>my question is how would you go about doing something like this? i'd appreciate any specifics because the project contains nested classes of disparate types creating what seems to be a wholly unique problem</p>  <p>here are my attempts:</p>  <ul> <li><p>i took the return value for parse() and created a function that descends through the class structure returning values based on their type: 'str', 'int', 'bool', 'NoneType', 'list', 'dict', 'main.Node', 'main.Tokenizer', 'main.Object'; but the returned object is missing some properties in the classes, ie 'type', while retaining others like 'type_', also tokenizer always contains the same values</p></li> <li><p>i took the output of the str function that the program prints to stdout, removed the clear and copy functions and the tokenizer: [object Object], then tried to manually add in double quotes where necessary to make the output a valid JSON object.. a few problems here, first off ignoring the tokenizer object seems like i am missing out on vital information, and the other problem was that sometimes there is ""value"" : ""{"" and sometimes there is ""value"" : { .. }, after completing the work the JSON was invalid</p></li> <li><p>assuming the issue lied in the ""value"" : { .. } issue i resolved to add a new function identical the the str function but instead of printing just %s values, it would print \""%s\"" where necessary.. now, i could differentiate between ""value"": ""{"" and ""value"" : ""{ .. }"" but i would have to go through and manually remove the quotes around objects.. after doing so the JSON was invalid</p></li> <li><p>i've tried every copy'pasta solution for python class to json from the stacks but the nested aspect of the classes along with the changing types add complexity.. some properties lack a .<strong>dict</strong> even when the type is ""class 'dict'"" so the one'method'fits'all lambda solutions fail</p></li> </ul>"	2015-05-16 15:56:41.997 UTC	30291974	"<p>for posterity: once i massaged the code of pynarcissus to print json i found that the process fails on nested functions.. hilariously exactly the reason i stepped away from my homebrew method</p>  <p>in another thread(i) @firstfire suggested esprima and pyesprima</p>  <p>so i looked into the esprima suggestions, and after a bit of 2to3`ing and some more work returning valid json i got it working and so far it fits my needs perfectly</p>  <p>check out the issue, pull request, and fork:</p>  <p>issues : <a href=""https://github.com/int3/pyesprima/issues/1"" rel=""nofollow"">https://github.com/int3/pyesprima/issues/1</a></p>  <p>pr : <a href=""https://github.com/int3/pyesprima/pull/2"" rel=""nofollow"">https://github.com/int3/pyesprima/pull/2</a></p>  <p>fork : <a href=""https://github.com/ghissues/pyesprima"" rel=""nofollow"">https://github.com/ghissues/pyesprima</a></p>  <p>(i) <a href=""http://www.linuxquestions.org/questi....php?p=5364199"" rel=""nofollow"">http://www.linuxquestions.org/questi....php?p=5364199</a></p>  <p>the old answer::</p>  <p>closed the issue and added a pull request</p>  <p><a href=""https://github.com/jtolds/pynarcissus/issues/6"" rel=""nofollow"">https://github.com/jtolds/pynarcissus/issues/6</a></p>  <p>you can check out the fork if you got here by looking for a way to parse javascript to json in python 3</p>  <p><a href=""https://github.com/ghissues/pynarcissus"" rel=""nofollow"">https://github.com/ghissues/pynarcissus</a></p>"			2015-05-17 20:47:19.023 UTC
30347897	python|selenium-webdriver|webdriver	Python Webdriver how to handle a browser pop up. It is not an alert generated by JavaScript	"<p>I have come accross a pop up while my Python Webdriver script was executing. Scenario: User can click Add project button from the Admin page and enter a project name etc click Save. If the project already exists a pop up is shown to say project with this name already exists.</p>  <p>I want to close this pop up.  I have inspected the HTML and there is no on click JavaScript function to call the alert.  It is not a JavaScript alert. It is a pop up generated by GWT in the browser.<br> The dev uses GWT to develop the UI.</p>  <p>The HTML is:</p>  <pre><code>&lt;div class=""gwt-PopupPanel"" style=""visibility: visible; overflow: visible; position: absolute; left: 687px; top: 170px;""&gt;     &lt;div class=""popupContent""&gt;         &lt;div class=""GAT4PNUJO"" style=""position: relative;""&gt;             &lt;div style=""position: absolute; z-index: -32767; top: -20ex; width: 10em; height: 10ex; visibility: hidden;"" aria-hidden=""true""/&gt;             &lt;div style=""position: absolute; overflow: hidden; left: 0px; top: 0px; right: 0px; bottom: 0px;""&gt;                 &lt;div style=""position: absolute; left: 0px; top: 0px; right: 0px; bottom: 0px;""&gt;                     &lt;div class=""GAT4PNUPO GAT4PNUNO""&gt;                         &lt;div class=""gwt-Label GAT4PNUOO""&gt;Add Project&lt;/div&gt;                     &lt;/div&gt;                     &lt;div class=""GAT4PNUMO""&gt;                     &lt;div class=""gwt-HTML GAT4PNUIO GAT4PNUKO""&gt;An engine message has been returned. Original message: There is already a scv project with name 'test001'&lt;/div&gt;                     &lt;div class=""GAT4PNUHO GAT4PNULO""&gt;                 &lt;/div&gt;             &lt;/div&gt;         &lt;/div&gt;     &lt;/div&gt; </code></pre>  <p>Is there a way I can check if the pop up is shown and then click it in Python Webdriver?</p>  <p>I have read in another post someone mentioned to use Robot.  I think that is Java only.</p>  <p>I have tried </p>  <pre><code>alert = self.driver.switch_to_alert()        alert.accept()   </code></pre>  <p>just to check and prove it is not a JavaScript alert.  The error shown is  </p>  <blockquote>   <p>NoAlertPresentException: Message: No alert is active</p> </blockquote>"	2015-05-20 11:08:01.947 UTC	30353784	"<p>I have managed to solve this now.  I used the following code:</p>  <pre><code>self.driver.find_element_by_xpath(""//*[text()='OK']"").click() </code></pre>  <p>The Ok button is clicked on in IE and the pop up closes.  </p>"			2015-05-20 15:15:08.907 UTC
30347897	python|selenium-webdriver|webdriver	Python Webdriver how to handle a browser pop up. It is not an alert generated by JavaScript	"<p>I have come accross a pop up while my Python Webdriver script was executing. Scenario: User can click Add project button from the Admin page and enter a project name etc click Save. If the project already exists a pop up is shown to say project with this name already exists.</p>  <p>I want to close this pop up.  I have inspected the HTML and there is no on click JavaScript function to call the alert.  It is not a JavaScript alert. It is a pop up generated by GWT in the browser.<br> The dev uses GWT to develop the UI.</p>  <p>The HTML is:</p>  <pre><code>&lt;div class=""gwt-PopupPanel"" style=""visibility: visible; overflow: visible; position: absolute; left: 687px; top: 170px;""&gt;     &lt;div class=""popupContent""&gt;         &lt;div class=""GAT4PNUJO"" style=""position: relative;""&gt;             &lt;div style=""position: absolute; z-index: -32767; top: -20ex; width: 10em; height: 10ex; visibility: hidden;"" aria-hidden=""true""/&gt;             &lt;div style=""position: absolute; overflow: hidden; left: 0px; top: 0px; right: 0px; bottom: 0px;""&gt;                 &lt;div style=""position: absolute; left: 0px; top: 0px; right: 0px; bottom: 0px;""&gt;                     &lt;div class=""GAT4PNUPO GAT4PNUNO""&gt;                         &lt;div class=""gwt-Label GAT4PNUOO""&gt;Add Project&lt;/div&gt;                     &lt;/div&gt;                     &lt;div class=""GAT4PNUMO""&gt;                     &lt;div class=""gwt-HTML GAT4PNUIO GAT4PNUKO""&gt;An engine message has been returned. Original message: There is already a scv project with name 'test001'&lt;/div&gt;                     &lt;div class=""GAT4PNUHO GAT4PNULO""&gt;                 &lt;/div&gt;             &lt;/div&gt;         &lt;/div&gt;     &lt;/div&gt; </code></pre>  <p>Is there a way I can check if the pop up is shown and then click it in Python Webdriver?</p>  <p>I have read in another post someone mentioned to use Robot.  I think that is Java only.</p>  <p>I have tried </p>  <pre><code>alert = self.driver.switch_to_alert()        alert.accept()   </code></pre>  <p>just to check and prove it is not a JavaScript alert.  The error shown is  </p>  <blockquote>   <p>NoAlertPresentException: Message: No alert is active</p> </blockquote>"	2015-05-20 11:08:01.947 UTC	30350276	"<p>I had the same when trying to leave a page, a pop-up came and asked if I was sure I want to leave the page. I solved it with FF settings:</p>  <pre><code>webdriver.DesiredCapabilities.FIREFOX[""unexpectedAlertBehaviour""] = ""accept"" </code></pre>  <p>I then catch the exception and do what I want, which is leave the site. I hope this works for you too. You have to catch the exception, because it still causes the exception to come up and stop your code. </p>"			2015-05-20 12:54:08.393 UTC
30354985	javascript|python|cgi	Display python variable in javascript	"<p>I have a website using python and cgi.  The website currently runs a python script watching for changes in logic lines and prints the data to the website as new data comes in. This works fine. What I need is a way to remove the old data and replace it with new data. I have read that it is easy to update a div tag with some javascript.  However, I have only seen examples with a certain amount of time has passed or when a button is clicked. Neither of these are options for what I am doing.  I do not know javascript. </p>  <p>I see this link, but without any context, it means nothing to me.   <a href=""https://stackoverflow.com/questions/26683501/how-to-use-python-variable-in-javascript-getelementbyid"">How to use python variable in javascript getElementById()?</a></p>  <p>How can I accomplish this?  Thanks in advance!</p>"	2015-05-20 16:08:51.243 UTC	30356433	"<p>So I found this workaround.  I do not really like it. I create a text variable with javascript code in it and the number that needs to update.  Then I print that line.  As the number updates, I reprint that text variable.</p>  <pre><code>#! /usr/bin/env python import cgi import time import sys import json  print ""Content-type: text/html\n\n"" #&lt;meta http-equiv='refresh' content='5'&gt; print """""" &lt;head&gt;&lt;/head&gt; &lt;body&gt;     &lt;p id='p'&gt; &lt;/p&gt; """""" num = 19 #js = ""&lt;script&gt;document.getElementById('p').innerHTML = "" + str(num) + ""; &lt;/script&gt;"" js = ""&lt;script&gt;document.getElementById('p').innerHTML = "" + json.dumps(num) + ""; &lt;/script&gt;"" print js sys.stdout.flush() while num &lt; 22:     num += 1     time.sleep(1)     #js = ""&lt;script&gt;document.getElementById('p').innerHTML = "" + str(num) + ""; &lt;/script&gt;""     js = ""&lt;script&gt;document.getElementById('p').innerHTML = "" + json.dumps(num) + ""; &lt;/script&gt;""       print js     sys.stdout.flush()  print""""""  &lt;/body&gt; &lt;/html&gt;  """""" </code></pre>"			2015-05-20 17:24:33.643 UTC
30357776	java|javascript|html|embed	Embed html/javascript/css in java/c++/python	"<p>So, I have a fully functioning html/javascript/css web app, not sure if that's the right term, it works fine and dandy in a web browser.</p>  <p>The thing is I now have to move it <strong>OUT</strong> of a browser, <strong>OFFLINE</strong>, and to the ""desktop"", make it a standalone app. I would have to somehow wrap it in java/c++/python something, to make it run like that.</p>  <p>I really like Java since that is the language I know out of that list. I have looked into <a href=""https://developer.mozilla.org/en-US/docs/Mozilla/Projects/Rhino"" rel=""nofollow"">Rhino</a> &amp; <a href=""https://developer.mozilla.org/en-US/docs/Gecko/Embedding_Mozilla/Roll_your_own_browser"" rel=""nofollow"">Gecko</a>. I haven't really found anything that is a nice plug and play. Like here is my .html file now run with it. I assume it would have to be in a swing window or something too.</p>  <p>Any hints/help/comments?</p>"	2015-05-20 18:34:48.76 UTC	30401304	"<p>(As per request, I reposted my comment as an answer.)</p>  <p>The <a href=""http://atom.io/"" rel=""nofollow"">Atom</a> editor is built using only web technologies, and uses the <a href=""http://github.com/atom/electron"" rel=""nofollow"">Electron</a> framework (based on the Chromium browser) to run as a standalone application, with no external browser dependencies.</p>  <p><a href=""https://github.com/atom/electron/blob/master/docs/tutorial/application-distribution.md"" rel=""nofollow"">It looks very easy to set up something similar yourself</a>, and basically just requires you to put your files in a special directory. (Electron uses a lot of space, though, so it may not be practical for distributing applications below ~20 MB.)</p>"			2015-05-22 16:07:10.57 UTC
30357776	java|javascript|html|embed	Embed html/javascript/css in java/c++/python	"<p>So, I have a fully functioning html/javascript/css web app, not sure if that's the right term, it works fine and dandy in a web browser.</p>  <p>The thing is I now have to move it <strong>OUT</strong> of a browser, <strong>OFFLINE</strong>, and to the ""desktop"", make it a standalone app. I would have to somehow wrap it in java/c++/python something, to make it run like that.</p>  <p>I really like Java since that is the language I know out of that list. I have looked into <a href=""https://developer.mozilla.org/en-US/docs/Mozilla/Projects/Rhino"" rel=""nofollow"">Rhino</a> &amp; <a href=""https://developer.mozilla.org/en-US/docs/Gecko/Embedding_Mozilla/Roll_your_own_browser"" rel=""nofollow"">Gecko</a>. I haven't really found anything that is a nice plug and play. Like here is my .html file now run with it. I assume it would have to be in a swing window or something too.</p>  <p>Any hints/help/comments?</p>"	2015-05-20 18:34:48.76 UTC	30357976	<p>If you are really looking for an option where you just point at your current html and are off then you might just want to configure run a local web-server.  It changes almost nothing about how you are running your application except where it is being served from. </p>			2015-05-20 18:46:28.06 UTC
30364842	javascript|python|python-2.7|websocket	Reading From a WebSocket in Python (Data from Javascript WebSocket)	"<p>I'm having some issues decoding data sent over websockets from Chrome (JavaScript) to a python server (using low-level socket apis). I've handled the handshake properly, the <code>readyState</code> of the websocket is OPEN when I use <code>.send(...)</code>. I receive byte data (per the specs), but no matter how I try to decode it, it comes out as jibberish or triggers an exception. </p>  <p>javascript</p>  <pre><code>var we = new WebSocket(url); we.send(""string data""); </code></pre>  <p>python</p>  <pre><code>data = socket.recv(1024) # socket from sock.accept(...) #handle data </code></pre>  <p>I've tried <code>data.decode('utf-8')</code> as that seems like it would be the obvious solution (throws an error). I've tried stripping <code>\x80</code> and <code>\x81</code> (I think - I read it somewhere on StackOverflow), but it still throws an error...</p>  <p>I've tried base64 decoding - which I found in an answer here on SO (but that doesn't make sense so...)</p>  <p>Anything I'm missing?</p>"	2015-05-21 04:50:38.723 UTC	30365515	"<p>I'm not versed in WebSocket communication, but according to this <a href=""https://stackoverflow.com/a/8125509/66349"">answer</a>, the data is encoded (see the part on Receiving Messages)</p>  <pre><code>&gt;&gt;&gt; pkt = [int(x, 16) for x in '81:85:86:56:99:b4:ee:33:f5:d8:e9'.split(':')] &gt;&gt;&gt; pkt[0] # header should be 129 for text mode 129 &gt;&gt;&gt; len = pkt[1] &amp; 0b01111111 &gt;&gt;&gt; len 5 &gt;&gt;&gt; mask = pkt[2:6] &gt;&gt;&gt; data = pkt[6:] &gt;&gt;&gt; for i,c in enumerate(data): ...     print chr(c ^ mask[i % 4]) ... h e l l o </code></pre>  <p>Note, this is just an example of decoding your specific example data and does not take the full spec into account. For instance, the data length can be multiple bytes (so the position of the mask and data block may vary).</p>"			2015-05-21 05:48:29.427 UTC
30367591	javascript|d3.js|ipython	How to add external javascript file in Ipython notebook	"<p>I am trying to add cdn hosted d3.js to my Ipython notebook like this </p>  <p><img src=""https://i.stack.imgur.com/svY2d.png"" alt=""Ipython Notebook""></p>  <p>But when I load the notebook first time I get ""Javascript error adding output"", but if I run cell again it works properly. Am I doing something wrong? Thanks in advance.</p>"	2015-05-21 07:45:30.513 UTC	33046042	"<p>You're likely causing a race condition where the IPython interpreter can happily add your HTML snippet to the DOM in a split second, then also fires off the JavaScript command before the D3js script is loaded/processed. I'm not an expert on how the browser loads/executes JS, but there might be something different going on because you're doing it after the page has loaded.</p>  <p>Probably overkill, but you could use RequireJS (loaded anyways, as that's what Jupyter uses to manage libraries). Snippet adapted from <a href=""https://stackoverflow.com/questions/13464846/loading-bootstrap-from-cdn-with-require-js"">this question</a>:</p>  <p>First Cell:</p>  <pre><code>%%javascript requirejs.config({     paths: {          'd3': ['//cdnjs.cloudflare.com/ajax/libs/d3/3.5.6/d3'],      },                                         // strip .js ^, require adds it back }); </code></pre>  <p>Any cell that needs d3js, wrap the call (e.g. your <code>console.log(d3);</code>) in the following:</p>  <pre><code>require(['d3'], function(d3) {     console.log(d3);  // or whatever     return {}; }); </code></pre>  <p>A hackier solution might be to just add a <code>time.sleep(1)</code> between those two cells.</p>  <blockquote>   <p>As an aside, you don't need to <code>from IPython.display import HTML</code> to use the <code>%%html</code> cell magic.</p> </blockquote>"			2015-10-09 19:46:58.69 UTC
30475332	javascript|python|asp.net|web-scraping|spynner	Use Python Spynner to download a file with a JavaScript doPostBack link	"<p>I am having trouble getting Python Spynner to download a file from an ASP webpage  that has an anchor to <code>href=""javascript:__doPostBack('ProjectionBoard1$cmdCSV','')""</code>. </p>  <p><a href=""http://www.fangraphs.com/projections.aspx?pos=all&amp;stats=bat&amp;type=steamer&amp;team=0&amp;lg=all&amp;players=0"" rel=""nofollow"">Example ""Export Data""</a></p>  <p>Is there an easy way to do this? I have tried reverse engineering the JavaScript by analyzing the post request to no avail. If I execute the _doPostBack request in the console I get:</p>  <pre><code>Resource interpreted as Document but transferred with MIME type text/csv: ""http://www.fangraphs.com/leaders.aspx?pos=all&amp;stats=pit&amp;lg=all&amp;qual=0&amp;type=…son=2015&amp;month=0&amp;season1=2015&amp;ind=0&amp;team=18&amp;rost=0&amp;age=0&amp;filter=&amp;players=0"" </code></pre>"	2015-05-27 07:02:40.827 UTC	30626602	"<p>Python Spynner will automatically download the file associated with an anchor to href tag (or JavaScript directed download) and save it to the working directory when clicked. There are two options for targeting and clicking the link to download:</p>  <pre><code>b = spynner.Browser() b.click(""#someAnchorId"", wait_load=True) </code></pre>  <p>or use JQuery to target the link</p>  <pre><code>b = spynner.Browser() b.runjs(""jQuery('#someAnchorId').get(0).click()"") b.wait(1) </code></pre>"			2015-06-03 17:15:16.59 UTC
30495464	java|javascript|python	Crash testing with Javascript or python on Java	"<p>I need to 'crash test' a couple of Java applications with mainly Javascript. By crash test I mean I need to pass the Java class or method all different types of random inputs until it crashed then record it. But I have ran into the problem that I don't know the most efficient way to call a certain Java class or method from Javascript. Then I also do not know which scripting language would be better for the job, python or javascript. Both languages have to work offline and I don't know if I will have access to the command prompt / admin privileges to use the command line to call the classes or methods. So what do I do? <br> 2 Questions: <br> How do I call Java classes and Methods in Javascript? <br> Would python be better for this job?</p>"	2015-05-28 00:50:22.503 UTC	30495579	"<p>How do I call Java classes and Methods in Javascript? </p>  <p>Java runs in JVM, Javascript runs in Javascript engine like v8. so first you need a layer which Java and Javascript can both run in. For now there are some ways to run Javascript in JVM, these ways all provide interoperability between Javascript and Java. you can Google 'Javascript JVM' to go ahead. </p>  <p>Would python be better for this job?</p>  <p>'better' depends on much. for programming language,  I like Javascript. Javascript and the libraries mainly designed for web development, Python is more like a common programming language. also Python cloud run in JVM with help of JPython</p>"			2015-05-28 01:06:08.72 UTC
30610675	javascript|python|pandas	Python Pandas equivalent in JavaScript	"<p>With this CSV example:</p>  <pre><code>   Source,col1,col2,col3    foo,1,2,3    bar,3,4,5 </code></pre>  <p>The standard method I use Pandas is this:</p>  <ol> <li><p>Parse CSV</p></li> <li><p>Select columns into a data frame (<code>col1</code> and <code>col3</code>)</p></li> <li>Process the column (e.g. avarage the values of  <code>col1</code> and <code>col3</code>)</li> </ol>  <p>Is there a JavaScript library that does that like Pandas?</p>"	2015-06-03 04:08:42.6 UTC	50055338	"<p>Below is Python numpy and pandas</p>  <p>```</p>  <pre><code>import numpy as np import pandas as pd  data_frame = pd.DataFrame(np.random.randn(5, 4), ['A', 'B', 'C', 'D', 'E'], [1, 2, 3, 4])  data_frame[5] = np.random.randint(1, 50, 5)  print(data_frame.loc[['C', 'D'], [2, 3]])  # axis 1 = Y | 0 = X data_frame.drop(5, axis=1, inplace=True)  print(data_frame) </code></pre>  <p>```</p>  <p>The same can be achieved in JavaScript* [<strong>numjs works only with Node.js</strong>] But D3.js has much advanced Data file set options. Both numjs and Pandas-js still in works..</p>  <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""true""> <div class=""snippet-code""> <pre class=""snippet-code-js lang-js prettyprint-override""><code>import np from 'numjs'; import { DataFrame } from 'pandas-js';  const df = new DataFrame(np.random.randn(5, 4), ['A', 'B', 'C', 'D', 'E'], [1, 2, 3, 4])  // df /*            1         2         3         4 A  0.023126  1.078130 -0.521409 -1.480726 B  0.920194 -0.201019  0.028180  0.558041 C -0.650564 -0.505693 -0.533010  0.441858 D -0.973549  0.095626 -1.302843  1.109872 E -0.989123 -1.382969 -1.682573 -0.637132  */</code></pre> </div> </div> </p>"			2018-04-27 04:36:57.39 UTC
30610675	javascript|python|pandas	Python Pandas equivalent in JavaScript	"<p>With this CSV example:</p>  <pre><code>   Source,col1,col2,col3    foo,1,2,3    bar,3,4,5 </code></pre>  <p>The standard method I use Pandas is this:</p>  <ol> <li><p>Parse CSV</p></li> <li><p>Select columns into a data frame (<code>col1</code> and <code>col3</code>)</p></li> <li>Process the column (e.g. avarage the values of  <code>col1</code> and <code>col3</code>)</li> </ol>  <p>Is there a JavaScript library that does that like Pandas?</p>"	2015-06-03 04:08:42.6 UTC	57166246	"<p><a href=""https://stratodem.github.io/pandas.js-docs/#introduction"" rel=""nofollow noreferrer"">Pandas.js</a> at the moment is an experimental library, but seems very promising it uses under the hood immutable.js and NumpPy logic, both data objects series and DataFrame are there..</p> <p><strong>10-Feb-2021 Update</strong> as @jarthur mentioned it seems no update on this repo for last 4 years</p>"			2019-07-23 14:19:36.077 UTC
30610675	javascript|python|pandas	Python Pandas equivalent in JavaScript	"<p>With this CSV example:</p>  <pre><code>   Source,col1,col2,col3    foo,1,2,3    bar,3,4,5 </code></pre>  <p>The standard method I use Pandas is this:</p>  <ol> <li><p>Parse CSV</p></li> <li><p>Select columns into a data frame (<code>col1</code> and <code>col3</code>)</p></li> <li>Process the column (e.g. avarage the values of  <code>col1</code> and <code>col3</code>)</li> </ol>  <p>Is there a JavaScript library that does that like Pandas?</p>"	2015-06-03 04:08:42.6 UTC	64026315	"<p>@neversaint your wait is over. say welcome to <a href=""https://danfo.jsdata.org/"" rel=""noreferrer"">Danfo.js</a> which is pandas like Javascript library built on tensorflow.js and supports tensors out of the box. This means you can convert danfo data structure to Tensors. And you can do groupby, merging, joining, plotting and other data processing.</p>"			2020-09-23 10:50:26.663 UTC
30610675	javascript|python|pandas	Python Pandas equivalent in JavaScript	"<p>With this CSV example:</p>  <pre><code>   Source,col1,col2,col3    foo,1,2,3    bar,3,4,5 </code></pre>  <p>The standard method I use Pandas is this:</p>  <ol> <li><p>Parse CSV</p></li> <li><p>Select columns into a data frame (<code>col1</code> and <code>col3</code>)</p></li> <li>Process the column (e.g. avarage the values of  <code>col1</code> and <code>col3</code>)</li> </ol>  <p>Is there a JavaScript library that does that like Pandas?</p>"	2015-06-03 04:08:42.6 UTC	34564020	"<p>I think the closest thing are libraries like:</p>  <ul> <li><a href=""http://okfnlabs.org/recline/"" rel=""nofollow"">ReclineJS</a></li> <li><a href=""http://misoproject.com/dataset/"" rel=""nofollow"">Miso Project Dataset</a></li> </ul>  <p>Recline in particular has a Dataset object with a structure somewhat similar to Pandas data frames. It then allows you to connect your data with ""Views"" such as a data grid, graphing, maps etc. Views are usually thin wrappers around existing best of breed visualization libraries such as D3, Flot, SlickGrid etc.</p>  <p>Here's an example for Recline:</p>  <pre> // Load some data var dataset = recline.Model.Dataset({   records: [     { value: 1, date: '2012-08-07' },     { value: 5, b: '2013-09-07' }   ]   // Load CSV data instead   // (And Recline has support for many more data source types)   // url: 'my-local-csv-file.csv',   // backend: 'csv' });  // get an element from your HTML for the viewer var $el = $('#data-viewer');  var allInOneDataViewer = new recline.View.MultiView({   model: dataset,   el: $el }); // Your new Data Viewer will be live! </pre>"			2016-01-02 08:27:18.993 UTC
30610675	javascript|python|pandas	Python Pandas equivalent in JavaScript	"<p>With this CSV example:</p>  <pre><code>   Source,col1,col2,col3    foo,1,2,3    bar,3,4,5 </code></pre>  <p>The standard method I use Pandas is this:</p>  <ol> <li><p>Parse CSV</p></li> <li><p>Select columns into a data frame (<code>col1</code> and <code>col3</code>)</p></li> <li>Process the column (e.g. avarage the values of  <code>col1</code> and <code>col3</code>)</li> </ol>  <p>Is there a JavaScript library that does that like Pandas?</p>"	2015-06-03 04:08:42.6 UTC	47770009	"<p>Here is an dynamic approach assuming an existing header on line 1. The csv is loaded with <code>d3.js</code>. </p>  <pre><code>function csvToColumnArrays(csv) {      var mainObj = {},     header = Object.keys(csv[0]);      for (var i = 0; i &lt; header.length; i++) {          mainObj[header[i]] = [];     };      csv.map(function(d) {          for (key in mainObj) {             mainObj[key].push(d[key])         }      });              return mainObj;  }   d3.csv(path, function(csv) {      var df = csvToColumnArrays(csv);           }); </code></pre>  <p>Then you are able to access each column of the data similar an R, python or Matlab dataframe with <code>df.column_header[row_number]</code>.   </p>"			2017-12-12 10:11:53.053 UTC
30610675	javascript|python|pandas	Python Pandas equivalent in JavaScript	"<p>With this CSV example:</p>  <pre><code>   Source,col1,col2,col3    foo,1,2,3    bar,3,4,5 </code></pre>  <p>The standard method I use Pandas is this:</p>  <ol> <li><p>Parse CSV</p></li> <li><p>Select columns into a data frame (<code>col1</code> and <code>col3</code>)</p></li> <li>Process the column (e.g. avarage the values of  <code>col1</code> and <code>col3</code>)</li> </ol>  <p>Is there a JavaScript library that does that like Pandas?</p>"	2015-06-03 04:08:42.6 UTC	41605498	"<p>I've been working on a data wrangling library for JavaScript called data-forge. It's inspired by LINQ and Pandas.</p>  <p>It can be installed like this: </p>  <pre><code>npm install --save data-forge </code></pre>  <p>Your example would work like this:</p>  <pre><code>var csvData = ""Source,col1,col2,col3\n"" +     ""foo,1,2,3\n"" +     ""bar,3,4,5\n"";  var dataForge = require('data-forge'); var dataFrame =      dataForge.fromCSV(csvData)         .parseInts([ ""col1"", ""col2"", ""col3"" ])         ; </code></pre>  <p>If your data was in a CSV file you could load it like this:</p>  <pre><code>var dataFrame = dataForge.readFileSync(fileName)     .parseCSV()     .parseInts([ ""col1"", ""col2"", ""col3"" ])     ; </code></pre>  <p>You can use the <code>select</code> method to transform rows.</p>  <p>You can extract a column using <code>getSeries</code> then use the <code>select</code> method to transform values in that column.</p>  <p>You get your data back out of the data-frame like this:</p>  <pre><code>var data = dataFrame.toArray(); </code></pre>  <p>To average a column:</p>  <pre><code> var avg = dataFrame.getSeries(""col1"").average(); </code></pre>  <p>There is much more you can do with this.</p>  <p>You can find more documentation on <a href=""https://www.npmjs.com/package/data-forge"" rel=""noreferrer"">npm</a>.</p>"			2017-01-12 05:08:13.26 UTC
30610675	javascript|python|pandas	Python Pandas equivalent in JavaScript	"<p>With this CSV example:</p>  <pre><code>   Source,col1,col2,col3    foo,1,2,3    bar,3,4,5 </code></pre>  <p>The standard method I use Pandas is this:</p>  <ol> <li><p>Parse CSV</p></li> <li><p>Select columns into a data frame (<code>col1</code> and <code>col3</code>)</p></li> <li>Process the column (e.g. avarage the values of  <code>col1</code> and <code>col3</code>)</li> </ol>  <p>Is there a JavaScript library that does that like Pandas?</p>"	2015-06-03 04:08:42.6 UTC	43825646	"<p>This wiki will summarize and compare many <code>pandas</code>-like Javascript libraries.</p> <p>In general, you should check out the <code>d3</code> Javascript library. <code>d3</code> is very useful &quot;swiss army knife&quot; for handling data in Javascript, just like <code>pandas</code> is helpful for Python. You may see <code>d3</code> used frequently like <code>pandas</code>, even if <code>d3</code> is <em>not exactly a DataFrame/Pandas replacement</em> (i.e. <code>d3</code> doesn't have the same API; <code>d3</code> does not have <code>Series</code> / <code>DataFrame</code> classes with methods that match the <code>pandas</code> behavior)</p> <p><a href=""https://stackoverflow.com/a/30611208/1175496"">Ahmed's answer explains how d3 can be used</a>  to achieve some DataFrame functionality, and some of the libraries below were inspired by things like <a href=""http://learnjsdata.com/"" rel=""nofollow noreferrer"">LearnJsData</a> which uses <code>d3</code> and <code>lodash</code>.</p> <p>As for DataFrame-style data transformation (splitting, joining, group by etc) , here is a quick list of some of the Javascript libraries.</p> <p>Note some libraries are Node.js aka Server-side Javascript, some are browser-compatible aka client-side Javascript, and some are Typescript. So use the option that's right for you.</p> <ul> <li><a href=""https://danfo.jsdata.org/"" rel=""nofollow noreferrer"">danfo-js</a> (<a href=""https://danfo.jsdata.org/getting-started"" rel=""nofollow noreferrer"">browser-support AND NodeJS-support</a>) <ul> <li><p>From <a href=""https://stackoverflow.com/a/64026315/1175496"">Vignesh's answer</a></p> </li> <li><p>danfo (which is often imported and aliased as <code>dfd</code>); has a basic DataFrame-type data structure, with the ability to plot directly</p> </li> <li><p>Built by the <a href=""https://blog.tensorflow.org/2020/08/introducing-danfo-js-pandas-like-library-in-javascript.html#:%7E:text=Data%20Science%20Nigeria-,Danfo.,provides%20a%20similar%20interface%2FAPI."" rel=""nofollow noreferrer"">team at Tensorflow</a>: &quot;One of the main goals of Danfo.js is to bring data processing, machine learning and AI tools to JavaScript developers. ... Open-source libraries like Numpy and Pandas...&quot;</p> </li> <li><p><code>pandas</code> is built on top of <code>numpy</code>; likewise <code>danfo-js</code> is built on <code>tensorflow-js</code></p> </li> <li><p>please note danfo may <strong>not</strong> (yet?) support <a href=""https://github.com/javascriptdata/danfojs/issues/496"" rel=""nofollow noreferrer"">multi-column indexes</a></p> </li> </ul> </li> <li><a href=""https://stratodem.github.io/pandas.js-docs/#introduction"" rel=""nofollow noreferrer"">pandas-js</a> <ul> <li><strong>UPDATE</strong> The pandas-js repo has not been  updated in awhile</li> <li>From <a href=""https://stackoverflow.com/a/50055338/1175496"">STEEL</a> and <a href=""https://stackoverflow.com/a/57166246/1175496"">Feras</a>' answers</li> <li>&quot;pandas.js is an open source (experimental) library mimicking the Python pandas library. It relies on Immutable.js as the NumPy logical equivalent. The main data objects in pandas.js are, like in Python pandas, the Series and the DataFrame.&quot;</li> </ul> </li> <li><a href=""https://www.npmjs.com/package/dataframe-js"" rel=""nofollow noreferrer"">dataframe-js</a> <ul> <li>&quot;DataFrame-js provides an immutable data structure for javascript and datascience, the DataFrame, which allows to work on rows and columns with a sql and functional programming inspired api.&quot;</li> </ul> </li> <li><a href=""https://github.com/data-forge/data-forge-ts"" rel=""nofollow noreferrer"">data-forge</a> <ul> <li>Seen in <a href=""https://stackoverflow.com/a/41605498/1175496"">Ashley Davis' answer</a></li> <li>&quot;JavaScript data transformation and analysis toolkit inspired by Pandas and LINQ.&quot;</li> <li>Note the <a href=""https://github.com/data-forge/data-forge-js"" rel=""nofollow noreferrer"">old data-forge JS repository</a> is no longer maintained; now a new repository uses Typescript</li> </ul> </li> <li><a href=""https://www.npmjs.com/package/jsdataframe"" rel=""nofollow noreferrer"">jsdataframe</a> <ul> <li>&quot;Jsdataframe is a JavaScript data wrangling library inspired by data frame functionality in R and Python Pandas.&quot;</li> </ul> </li> <li><a href=""https://www.npmjs.com/package/dataframe"" rel=""nofollow noreferrer"">dataframe</a> <ul> <li>&quot;explore data by grouping and reducing.&quot;</li> </ul> </li> <li><a href=""https://sqlframes.com/"" rel=""nofollow noreferrer"">SQL Frames</a> <ul> <li>&quot;DataFrames meet SQL, in the Browser&quot;</li> <li>&quot;SQL Frames is a low code data management framework that can be directly embedded in the browser to provide rich data visualization and UX. Complex DataFrames can be composed using familiar SQL constructs. With its powerful built-in analytics engine, data sources can come in any shape, form and frequency and they can be analyzed directly within the browser. It allows scaling to big data backends by transpiling the composed DataFrame logic to SQL.&quot;</li> </ul> </li> </ul> <p>Then after coming to this question, checking other answers here and doing more searching, I found options like:</p> <ul> <li><a href=""https://arrow.apache.org/docs/js/"" rel=""nofollow noreferrer"">Apache Arrow in JS</a> <ul> <li>Thanks to user Back2Basics suggestion:</li> <li>&quot;Apache Arrow is a columnar memory layout specification for encoding vectors and table-like containers of flat and nested data. Apache Arrow is the emerging standard for large in-memory columnar data (Spark, <strong>Pandas</strong>, Drill, Graphistry, ...)&quot;</li> </ul> </li> <li><a href=""https://github.com/pola-rs/polars"" rel=""nofollow noreferrer"">polars</a> <ul> <li>Polars is a blazingly fast DataFrames library <em>implemented in Rust</em> using <a href=""https://arrow.apache.org/docs/format/Columnar.html"" rel=""nofollow noreferrer"">Apache Arrow Columnar Format</a> as memory model.</li> </ul> </li> <li><a href=""https://beta.observablehq.com/"" rel=""nofollow noreferrer"">Observable</a> <ul> <li>At first glance, seems like a <code>JS</code> alternative to the IPython/Jupyter <a href=""https://ipython.org/notebook.html"" rel=""nofollow noreferrer"">&quot;notebooks&quot;</a></li> <li>Observable's page promises: &quot;Reactive programming&quot;, a &quot;Community&quot;, on a &quot;Web Platform&quot;</li> <li>See 5 minute intro <a href=""https://beta.observablehq.com/@mbostock/five-minute-introduction"" rel=""nofollow noreferrer"">here</a></li> </ul> </li> <li><a href=""https://github.com/datopian/portal.js"" rel=""nofollow noreferrer"">portal.js</a> (formerly <code>recline</code>; from <a href=""https://stackoverflow.com/a/34564020/1175496"">Rufus' answer</a>) <ul> <li><strong>MAY BE OUTDATED:</strong> Does not use a &quot;DataFrame&quot; API</li> <li><strong>MAY BE OUTDATED:</strong> Instead emphasizes its &quot;Multiview&quot; (the UI) API,  (similar to jQuery/DOM model) which doesn't require jQuery but does require a browser! <a href=""http://okfnlabs.org/recline/demos/multiview/"" rel=""nofollow noreferrer"">More examples</a></li> <li><strong>MAY BE OUTDATED:</strong> Also emphasizes its <a href=""http://okfnlabs.org/recline/docs/"" rel=""nofollow noreferrer"">MVC-ish architecture</a>; including back-end stuff (i.e. database connections)</li> </ul> </li> <li><a href=""http://www.js-data.io/"" rel=""nofollow noreferrer"">js-data</a> <ul> <li>Really more of an <a href=""https://en.wikipedia.org/wiki/Object-relational_mapping"" rel=""nofollow noreferrer"">ORM</a>! Most of <a href=""http://api.js-data.io/"" rel=""nofollow noreferrer"">its modules</a> correspond to different data <strong>storage</strong> questions (<code>js-data-mongodb</code>, <code>js-data-redis</code>, <code>js-data-cloud-datastore</code>), sorting, filtering, etc.</li> <li>On plus-side does work on Node.js as a first-priority; &quot;Works in Node.js and in the Browser.&quot;</li> </ul> </li> <li><a href=""https://web.archive.org/web/20171213200500/http://misoproject.com/dataset/"" rel=""nofollow noreferrer"">miso</a> (another suggestion from <a href=""https://stackoverflow.com/a/34564020/1175496"">Rufus</a>) <ul> <li>Impressive backers like <a href=""http://www.guardian.co.uk/profile/guardian-interactive-department"" rel=""nofollow noreferrer"">Guardian</a> and <a href=""https://bocoup.com/"" rel=""nofollow noreferrer"">bocoup</a>.</li> </ul> </li> <li><a href=""https://github.com/agershun/alasql"" rel=""nofollow noreferrer"">AlaSQL</a> <ul> <li>&quot;AlaSQL&quot; is an open source SQL database for Javascript with a strong focus on query speed and data source flexibility for both relational data and schemaless data. It works in your browser, Node.js, and Cordova.&quot;</li> </ul> </li> <li>Some thought experiments: <ul> <li><a href=""https://www.garysieling.com/blog/scaling-a-dataframe-in-javascript"" rel=""nofollow noreferrer"">&quot;Scaling a DataFrame in Javascript&quot; - Gary Sieling</a></li> </ul> </li> </ul> <p>Here are the criteria we used to consider the above choices</p> <ul> <li>General Criteria <ul> <li>Language (NodeJS vs  browser JS vs Typescript)</li> <li>Dependencies (i.e. if it uses an underlying library / AJAX/remote API's)</li> <li>Actively supported (active user-base, active source repository, etc)</li> <li>Size/speed of JS library</li> </ul> </li> <li><em>Panda's criterias in its <a href=""http://pandas.pydata.org/pandas-docs/stable/comparison_with_r.html"" rel=""nofollow noreferrer"">R comparison</a></em> <ul> <li>Performance</li> <li>Functionality/flexibility</li> <li>Ease-of-use</li> </ul> </li> <li>Similarity to Pandas / Dataframe API's <ul> <li>Specifically hits on their <a href=""https://github.com/pandas-dev/pandas#main-features"" rel=""nofollow noreferrer"">main features</a></li> <li>Data-science emphasis</li> <li>Built-in visualization functions</li> <li>Demonstrated integration in combination with other tools like <code>Jupyter</code> (interactive notebooks), etc</li> </ul> </li> </ul>"			2017-05-06 21:40:35.117 UTC
30610675	javascript|python|pandas	Python Pandas equivalent in JavaScript	"<p>With this CSV example:</p>  <pre><code>   Source,col1,col2,col3    foo,1,2,3    bar,3,4,5 </code></pre>  <p>The standard method I use Pandas is this:</p>  <ol> <li><p>Parse CSV</p></li> <li><p>Select columns into a data frame (<code>col1</code> and <code>col3</code>)</p></li> <li>Process the column (e.g. avarage the values of  <code>col1</code> and <code>col3</code>)</li> </ol>  <p>Is there a JavaScript library that does that like Pandas?</p>"	2015-06-03 04:08:42.6 UTC	30611302	"<p>It's pretty easy to parse CSV in javascript because each line's already essentially a javascript array. If you load your csv into an array of strings (one per line) it's pretty easy to load an array of arrays with the values:</p>  <pre><code>var pivot = function(data){     var result = [];     for (var i = 0; i &lt; data.length; i++){         for (var j=0; j &lt; data[i].length; j++){             if (i === 0){                 result[j] = [];             }             result[j][i] = data[i][j];         }     }     return result; };  var getData = function() {     var csvString = $("".myText"").val();     var csvLines = csvString.split(/\n?$/m);      var dataTable = [];      for (var i = 0; i &lt; csvLines.length; i++){         var values;         eval(""values = ["" + csvLines[i] + ""]"");         dataTable[i] = values;     }      return pivot(dataTable); }; </code></pre>  <p>Then <code>getData()</code> returns a multidimensional array of values by column.</p>  <p>I've demonstrated this in a <a href=""http://jsfiddle.net/daiopowen/xn53u2t4/"" rel=""nofollow"">jsFiddle</a> for you.</p>  <p>Of course, you can't do it quite this easily if you don't trust the input - if there could be script in your data which eval might pick up, etc.</p>"			2015-06-03 05:11:33.573 UTC
30610675	javascript|python|pandas	Python Pandas equivalent in JavaScript	"<p>With this CSV example:</p>  <pre><code>   Source,col1,col2,col3    foo,1,2,3    bar,3,4,5 </code></pre>  <p>The standard method I use Pandas is this:</p>  <ol> <li><p>Parse CSV</p></li> <li><p>Select columns into a data frame (<code>col1</code> and <code>col3</code>)</p></li> <li>Process the column (e.g. avarage the values of  <code>col1</code> and <code>col3</code>)</li> </ol>  <p>Is there a JavaScript library that does that like Pandas?</p>"	2015-06-03 04:08:42.6 UTC	30611208	"<p><strong>Ceaveat</strong> The following is applicable only to d3 v3, and not the latest d4v4!</p>  <p>I am partial to <a href=""http://d3js.org/"" rel=""noreferrer"">d3.js</a>, and while it won't be a total replacement for Pandas, if you spend some time learning its paradigm, it should be able to take care of all your data wrangling for you. (And if you wind up wanting to display results in the browser, it's ideally suited to that.)</p>  <p>Example. My CSV file <code>data.csv</code>:</p>  <pre><code>name,age,color Mickey,65,black Donald,58,white Pluto,64,orange </code></pre>  <p>In the same directory, create an <code>index.html</code> containing the following:</p>  <pre><code>&lt;!DOCTYPE html&gt; &lt;html&gt;   &lt;head&gt;     &lt;meta charset=""utf-8""/&gt;     &lt;title&gt;My D3 demo&lt;/title&gt;      &lt;script src=""http://d3js.org/d3.v3.min.js"" charset=""utf-8""&gt;&lt;/script&gt;   &lt;/head&gt;   &lt;body&gt;        &lt;script charset=""utf-8"" src=""demo.js""&gt;&lt;/script&gt;   &lt;/body&gt; &lt;/html&gt; </code></pre>  <p>and also a <code>demo.js</code> file containing the following:</p>  <pre class=""lang-js prettyprint-override""><code>d3.csv('/data.csv',         // How to format each row. Since the CSV file has a header, `row` will be        // an object with keys derived from the header.        function(row) {          return {name : row.name, age : +row.age, color : row.color};        },         // Callback to run once all data's loaded and ready.        function(data) {          // Log the data to the JavaScript console          console.log(data);           // Compute some interesting results          var averageAge = data.reduce(function(prev, curr) {            return prev + curr.age;          }, 0) / data.length;           // Also, display it          var ulSelection = d3.select('body').append('ul');          var valuesSelection =              ulSelection.selectAll('li').data(data).enter().append('li').text(                  function(d) { return d.age; });          var totalSelection =              ulSelection.append('li').text('Average: ' + averageAge);        }); </code></pre>  <p>In the directory, run <code>python -m SimpleHTTPServer 8181</code>, and open <a href=""http://localhost:8181"" rel=""noreferrer"">http://localhost:8181</a> in your browser to see a simple listing of the ages and their average.</p>  <p>This simple example shows a few relevant features of d3:</p>  <ul> <li>Excellent support for ingesting online data (<a href=""https://github.com/mbostock/d3/wiki/CSV#csv"" rel=""noreferrer"">CSV</a>, TSV, JSON, etc.)</li> <li>Data wrangling smarts baked in</li> <li>Data-driven DOM manipulation (maybe the hardest thing to wrap one's head around): your data gets transformed into DOM elements.</li> </ul>"			2015-06-03 05:03:36.307 UTC
30615157	javascript|python	sending javascript command from python shell	"<p>I have a device, a board of four programmable electric sockets to be exact. The device's interface with the pc is through the TCP/IP port. The device has a web browser user interface, accessible at a local IP address. </p>  <p>There is Javascript code on the interface's HTML page which I reckon is making the webpage interactive and defining the behaviour of the page. Firstly, can I send Javascript commands from Python to switch the sockets using the web interface (if I have TCP/IP connection to the server opened from Python.) So, for that I would need to call a Javascript function in a Python shell. How to do that? Secondly, do I need <a href=""https://github.com/jedisct1/Simple-Comet-Server"" rel=""nofollow"">comet</a> in this case, because I need to push Javascript command to a particular IP and port from Python.</p>  <p>Here is my python code : </p>  <pre><code>import socket  import time  TCP_IP = 'xxx.xxx.y.zzz'  TCP_PORT = wwww  MESSAGE1 = ""xxx.xxx.y.zzz/"";  MESSAGE2 = ""javascript: ChangeState('1')""  s = socket.socket(socket.AF_INET, socket.SOCK_STREAM) s.connect((TCP_IP, TCP_PORT))  s.send(MESSAGE1) s.send(MESSAGE2)  s.close()  </code></pre>  <p>and this is the javascript function:</p>  <pre><code>function ChangeState(sn) {   f = document.forms.tForm;   ind = sn * 1 - 1;   f[""cte"" + sn].value = Math.abs(1 - sockstates[ind]);   f.submit(); } function ActivateDeactivate() {   f = document.forms.tForm2;   f[""activate""].value = actbtn;   f.submit(); } function TimerFunction() {   clearTimeout(timer);   if (trycon == 1 &amp;&amp; active == 1) {     document.location.href = ""xyz.html"";   } } function StartTimer() { timer = setTimeout(TimerFunction, period); } window.onload = function() {   for (i = 0; i &lt; 4; i++) {     if (sockstates[i] == 0) {       clsname = 'offstate';       str1 = 'OFF';       str2 = 'ON';     } else {       clsname = 'onstate';       str1 = 'ON';       str2 = 'OFF';     }     strhtml = '&lt;span class=""' + clsname + '""&gt;' + str1 +               '&lt;/span&gt;&amp;nbsp;&lt;a href=""javascript: ChangeState(\'' + (i + 1) +               '\')"" class=""onoffbtn""&gt;' + str2 + '&lt;/a&gt;';     el = document.getElementById('stCont' + i);     el.innerHTML = strhtml;   }   statA = '';   statB = '';   statC = '';   rmsg = '';   if (ipid != 0) {     statA = ""Registered - "";     tmpel = document.getElementById('regBtn');     tmpel.innerHTML = 'Login';   } else {     rmsg = ""Register to manage AB-xyz-LAN from Internet ( free service )"";   }   if (active == 1) {     statB = ""Activated - "";   } else {     statB = ""Not activated"";   }   if (active == 1) {     if (trycon == 1) {       statC = ""Trying to connect"";     } else if (serv == 1) {       statC = ""Connected"";     } else if (serv == 0) {       statC = ""Not connected"";     }   }   statAel = document.getElementById('statusA');   statAel.innerHTML = statA;   statBel = document.getElementById('statusB');   statBel.innerHTML = statB;   statCel = document.getElementById('statusC');   statCel.innerHTML = statC;   rmsgel = document.getElementById('regmsg');   rmsgel.innerHTML = rmsg;   actBtnEl = document.getElementById(""actBtn"");   if (actbtn == 1) {     actBtnEl.innerHTML = 'Activate';   } else {     actBtnEl.innerHTML = 'Deactivate';   }   regBtnEl = document.getElementById(""regBtn"");   regBtnEl.href = ""http://www.example.com/user/register.aspx?mac="" + mac;   if (warn == 1) {     alert(""Failed to connect. Please, check DNS server settings."");   }   if (warn == 2) {     alert(""Failed to activate. Please, check, that device is registered."");   }   StartTimer(); } </code></pre>"	2015-06-03 08:49:53.053 UTC	30677820	"<p>I would suggest using <a href=""http://www.seleniumhq.org/"" rel=""nofollow"">Selenium</a> and its <a href=""https://selenium-python.readthedocs.org/"" rel=""nofollow"">Python bindings</a>, which would allow you to control a browser instance from Python. This would enable you to click a button or call a Javascript function from your Python script.</p>  <p>Your script would include code like this:</p>  <pre><code>from selenium import webdriver from selenium.webdriver.common.keys import Keys  driver = webdriver.Firefox() driver.get(""http://xx.yy.zz"") elem = driver.find_element_by_name(""interesting_button"") elem.send_keys(Keys.RETURN) </code></pre>  <p>This will get you a solution. However, it's a bit hackish. The more elegant solution is to figure out what the Javascript functions are doing behind the scenes. They'll probably be calling other code, or sending a message to a listener. The manufacturer may have an API, which would allow you to use a Python library like <code>urllib</code> to call the API. Or, they may have specifications on how to communicate with the device by RS-232 (serial). I'd try a Google search for the device make/model with some of those keywords and see what comes up.</p>"			2015-06-06 00:52:58.237 UTC
30676488	javascript|performance|function	How to time functions in JavaScript similar to Python timeit	<p>How can I measure the execution time of functions in JavaScript? Preferably similar to Python timeit.</p>	2015-06-05 22:04:39.657 UTC	70147933	"<p>Looks like there is an npm module now <a href=""https://www.npmjs.com/package/timeit"" rel=""nofollow noreferrer"">https://www.npmjs.com/package/timeit</a></p>"			2021-11-28 22:15:35.143 UTC
30676488	javascript|performance|function	How to time functions in JavaScript similar to Python timeit	<p>How can I measure the execution time of functions in JavaScript? Preferably similar to Python timeit.</p>	2015-06-05 22:04:39.657 UTC	30676631	"<p>I haven't made a really deap search about it, but as far as I have searched, I haven't found anything. The simplest thing to do is, get time when the function starts, get time when it ends and substract one from the other(after using Date.parse to convert them in miliseconds) . It is certainly a naive solution but a working one.</p>"			2015-06-05 22:19:02.723 UTC
30676488	javascript|performance|function	How to time functions in JavaScript similar to Python timeit	<p>How can I measure the execution time of functions in JavaScript? Preferably similar to Python timeit.</p>	2015-06-05 22:04:39.657 UTC	30676697	"<p>There is no built in module equivalent to timeit.py but you can easily time the execution of code yourself. You should use performance.now() rather than Date.now() as it is more accurate.</p>  <p>From the MDN docs:</p>  <blockquote>   <p>The performance.now() method returns a DOMHighResTimeStamp, measured   in milliseconds, accurate to five thousandths of a millisecond (5   microseconds)</p> </blockquote>  <pre><code>var start = performance.now();  //do your things  var end = performance.now(); var duration = end - start; </code></pre>  <p>You could then use that to build your own timing library like this:</p>  <pre><code>function TimeIt() {     var self = this;      function howLong(iterations, testFunction) {         var results = [];         var total = 0;         for (var i = 0; i &lt; iterations; i++) {             var start = performance.now();             testFunction();             var end = performance.now();             var duration = end - start;             results.push(duration);             total += duration;         }         var result = {                 results : results,                 total : total,                 avg : total / results.length         }         return result;     }     self.howLong = howLong; } </code></pre>  <p>Which you would use like this:</p>  <pre><code>var timeit = new TimeIt();  var foo = function() { //do some things };  var result = timeit.howLong(1000, foo); console.log(""avg: "" + result.avg); console.log(""total: "" + result.total); </code></pre>"			2015-06-05 22:24:30.043 UTC
30682342	javascript|python|encryption|rsa	Translate JavaScript code of RSA encryption to Python	"<p>I have <a href=""https://code.google.com/p/pajhome/source/browse/trunk/crypt/md5/rsa/RSA.js?r=133"" rel=""nofollow"">this JavaScript code</a> to encrypt text using RSA, and I need one que generates the same encrypted message, but that works with Python.</p>  <p>JavaScript code I'm using:</p>  <pre><code>var key = new RSAKeyPair(         ""2f9ac975a8a20c1b108e678904b42aa1"",         """",         ""4a5670127da1fd4e2a51685faff367f9""         ); ... </code></pre>  <p>I'm having trouble finding an equivalent in Python because the parameter ""modulus"" present in the code builder in JavaScript, which I did not find in <a href=""http://stuvel.eu/files/python-rsa-doc/index.html"" rel=""nofollow"">Python-RSA library</a>.</p>  <p>I need to rewrite the JS code or is there some simpler alternative?</p>"	2015-06-06 11:35:10.587 UTC	30725300	"<p>Both private and public keys contain the <strong>modulus n</strong>. The public key contains the modulus and the <strong>encryption (public) exponent e</strong>, the private key contains the modulus and the <strong>decryption (private) exponent d</strong>.</p>  <p>So what you have to do is to simply extract the three values <strong>n, d, e</strong> from the keys. Presumably, the python module does that itself.</p>  <p>On how to find the modulus: <a href=""https://crypto.stackexchange.com/questions/18031/the-modulus-of-rsa-public-key"">https://crypto.stackexchange.com/questions/18031/the-modulus-of-rsa-public-key</a></p>  <p>General explanation of RSA:</p>  <p><a href=""http://en.wikipedia.org/wiki/RSA_%28cryptosystem%29"" rel=""nofollow noreferrer"">http://en.wikipedia.org/wiki/RSA_%28cryptosystem%29</a></p>"			2015-06-09 07:14:16.357 UTC
30713557	python|ios|appium	"appium ios python ""an error occured while executing user supplied javascript"""	"<p>I'm using a bit Appium (v1.3.7) to make nice tests! And I'm trying to have tests that runs on both Android and iOS. I'm testing directly on the phones not on simulators and using python to write tests.</p>  <p>I got a test to test if an ad banner is displayed and if I can click on it.</p>  <p>Simple enough on Android I open the application and navigate to the right place, then send a press event and assert that the elements of my application are no longer visible (since now we have the phone store openned at ""download application"" or something similar)</p>  <p>It's 2 lines:</p>  <pre><code>e1 = TouchAction(self.webdriver) e1.press(x=300, y=1200).release().perform() </code></pre>  <p>It's working on Android, but on iOS it returns the exception : ""an error occured while executing user supplied javascript"" whenever I call the perform action.</p>  <p>All of this is done in a native application if it can help. The rest of appium is working fine I can move into my application and all but since here my ads can be pretty random I only had the ""press where the ad should be"" solution.</p>  <p>Also fruitsrap keep failing whenever I launch a test. Might be linked even if I found out that it should not be used anymore (<a href=""https://github.com/appium/appium/issues/4501"" rel=""nofollow"">https://github.com/appium/appium/issues/4501</a>)</p>  <p>Do anyone knows what's happening in there?</p>"	2015-06-08 15:41:57.803 UTC	30733250	"<p>Figured what was wrong, the x and y positions were out of bound, the screen resolution of the phone was smaller than I thought.</p>  <p>It's working properly with in bound values. But the error message should be more explicit :)</p>"			2015-06-09 13:21:02.98 UTC
30725126	javascript|python|python-2.7|pyv8	Execute Javascript in python	<p>I have JS script that gets as a parameter another JS and unpack it (from eval(function) packers). I tried to run it using PyExecJs but it raise me errors like <code>execjs.RuntimeError: SyntaxError: Unexpected token ;</code></p>  <p>I tried to use PyV8 but I got a issues with install it.. Does anybody know another simple way to run JS through Python? </p>	2015-06-09 07:05:22.903 UTC	30725183	"<p>Maybe you can help <a href=""https://docs.python.org/2/library/subprocess.html"" rel=""nofollow"">subprocess</a>. This is not the best solution. Maybe you have a bug script? You can lay out a script?</p>"			2015-06-09 07:08:32.423 UTC
30742410	javascript|python	Python execute JavaScript on Website	"<p>I need to execute a JavaScript on a website, to perform a action. In fact, to buy something on Steam. Example: <br> I visit <a href=""http://steamcommunity.com/market/listings/238460/Rammy"" rel=""nofollow"">http://steamcommunity.com/market/listings/238460/Rammy</a> with my Webbrowser. <br>At the bottom of the page there are some buttons with Javascript on it.<br> For example they're bound to:<br><code>javascript:BuyMarketListing('listing',%20'428187075130762395',%20238460,%20'2',%20'41998256')</code></p>  <p>How can I execute these Script with Python?</p>"	2015-06-09 20:40:30.493 UTC	30742619	"<p>Assuming you're doing this legitimately for your own use, and not as some way to force someone else's browser to submit a purchase without their approval... have you tried just... well... clicking the button?</p>  <p>If you have some legitimate reason to be able to do this, well then Python isn't going to help you. Outputting JavaScript on your own browser to call that ""BuyMarketListing"" function won't work because you'd be trying to run a cross-browser script, and that's not allowed (unless you program it into a browser plugin or something and convince users to install it)... for good reason.</p>  <p>Alternatively, you could find out (if you dig around in Firebug or something) what URL the function is ultimately sending a POST/GET request to, but chances are there are protections in place to prevent that (also for good reason).</p>"			2015-06-09 20:53:42.423 UTC
30742410	javascript|python	Python execute JavaScript on Website	"<p>I need to execute a JavaScript on a website, to perform a action. In fact, to buy something on Steam. Example: <br> I visit <a href=""http://steamcommunity.com/market/listings/238460/Rammy"" rel=""nofollow"">http://steamcommunity.com/market/listings/238460/Rammy</a> with my Webbrowser. <br>At the bottom of the page there are some buttons with Javascript on it.<br> For example they're bound to:<br><code>javascript:BuyMarketListing('listing',%20'428187075130762395',%20238460,%20'2',%20'41998256')</code></p>  <p>How can I execute these Script with Python?</p>"	2015-06-09 20:40:30.493 UTC	30745867	"<p>You can use <a href=""https://pypi.python.org/pypi/mozrunner/6.7"" rel=""nofollow""><code>mozrunner</code></a> to run Firefox from python, then have it open a tab and return some results.</p>"			2015-06-10 02:02:31.687 UTC
30850973	javascript|python|json|flask	Flask - Getting JavaScript and Python to Communicate	"<p>I'm building a rather simple CRM using the Flask Python framework. I have a database of companies that we are interested in contacting. The user first inputs how many companies they would like to contact. The user is then redirected to this page:</p>  <p><img src=""https://i.stack.imgur.com/qumuL.png"" alt=""CRM First Screen""></p>  <p>Essentially for each row/company on this page, the user will click either the contact or don't contact radio button. </p>  <p><strong>What I am trying to accomplish</strong></p>  <p>Once the user clicks the 'Let the Magic Happen' button at the bottom, JavaScript runs through each row and sees which button is clicked. It then appends the database unique ID to one of two arrays, 'contact' and 'remove'. This information then gets passed along to python via getJSON, python captures the json data using request.args.get. </p>  <p>Finally, Python does one of two things:</p>  <ul> <li>for the companies in the remove array, it changes a bool value in the respective database instance</li> <li>for the companies in the contact array, it runs a separate function which uses SMTP to email that company</li> </ul>  <p><strong>Where I am getting hung up</strong></p>  <p>I can't seem to retrieve the json data in Python, I am trying to just do a simple print statement as of right now to show that I can pull in the data. </p>  <p>Also, would it be more efficient in terms of performance to have the javascript send each row to python individually or all at once in an array?</p>  <p><strong>Scripts</strong></p>  <p>app.py</p>  <pre><code>@app.route('/send_emails') def send_emails():   contact = request.args.get('contact')   remove = request.args.get('remove')    print contact   print remove    return ('', 204) #No need to return anything </code></pre>  <p>email.js</p>  <pre class=""lang-javascript prettyprint-override""><code>$('#batch-page .magic-button').click( function() {    //Iterate over each company row   $('#batch-page table tr.company-row').each(function(i, company){     company = $(company);     company_id = company.attr('class').split(' ')[1];      //Assign arrays for emailing and removing comapnies     var contact = [];     var remove = [];      //Check to see whether the contact or don't contact checkbox is checked     if(company.children('td.contact-company').children('input').is(':checked')) {       contact.push(company_id);     } else if (company.children('td.remove-company').children('input').is(':checked')) {       remove.push(company_id);     }      //Pass the data along to Python     $.getJSON('/send_emails', {       contact: contact,       remove: remove     });   });   $('div#batch-page').html('&lt;p&gt;Be patient, contacting companies!&lt;/p&gt;'); }); </code></pre>  <p>batch.html</p>  <pre class=""lang-html prettyprint-override""><code>  {% for company in companies %}     &lt;tr class=""company-row {{ company.id }}""&gt;       &lt;td class=""company-name""&gt;         &lt;p&gt;{{ company.company_name }}&lt;/p&gt;       &lt;/td&gt;       &lt;td class=""company-website""&gt;         &lt;div&gt;           &lt;a href=""{{ company.website }}"" target=""blank_""&gt;{{ company.website }}&lt;/a&gt;         &lt;/div&gt;       &lt;/td&gt;       &lt;td class=""company-email""&gt;         &lt;p&gt;{{ company.email_address }}&lt;/p&gt;       &lt;/td&gt;       &lt;td class=""contact-company""&gt;         &lt;input type=""checkbox"" class=""contact"" for='{{ company.id }}'&gt;       &lt;/td&gt;       &lt;td class=""remove-company""&gt;         &lt;input type=""checkbox"" class=""dont-contact"" for='{{ company.id }}'&gt;&lt;/td&gt;       &lt;td&gt;         &lt;a class=""btn btn-primary"" data-toggle=""collapse"" data-target=""#{{ company.id }}-info""&gt;Change Company Information&lt;/a&gt;       &lt;/td&gt;     &lt;/tr&gt;     &lt;tr class=""company-info-row""&gt;        &lt;td colspan=""6"" class=""hiddenRow""&gt;         &lt;div class=""accordion-body collapse"" id=""{{ company.id }}-info""&gt;           &lt;form action="""" id=""{{ company.id }}-edit-form"" method=""POST"" class=""update-company-form""&gt;             &lt;input type=""hidden"" name=""csrf_token"" value=""{{ csrf_token() }}"" /&gt;             &lt;div class=""col-md-4""&gt;               &lt;div class=""form-group""&gt;                 &lt;label for=""{{ company.id }}-company-name""&gt;Company Name&lt;/label&gt;                 &lt;input type=""text"" value=""{{ company.company_name }}"" id=""{{ company.id }}-company-name"" class=""form-control"" name=""company-name""&gt;                 &lt;label for=""{{ company.id }}-company-website""&gt;Company Website&lt;/label&gt;                 &lt;input type=""text"" value=""{{ company.website }}"" id=""{{ company.id }}-company-website"" class=""form-control"" name=""company-website""&gt;               &lt;/div&gt;             &lt;/div&gt;             &lt;div class=""col-md-4""&gt;               &lt;div class=""form-group""&gt;                 &lt;label for=""{{ company.id }}-email-address""&gt;Company Email&lt;/label&gt;                 &lt;input type=""text"" value=""{{ company.email_address }}"" id=""{{ company.id }}-email-address"" class=""form-control"" name=""company-email""&gt;               &lt;/div&gt;               &lt;div class=""form-group""&gt;                 &lt;input type=""submit"" form=""{{ company.id }}-edit-form"" class=""btn btn-default"" value=""Update""&gt;               &lt;/div&gt;             &lt;/div&gt;             &lt;div class=""col-md-4 ajax-message""&gt;               &lt;div&gt;                 &lt;i class=""fa fa-clock-o fa-2x""&gt;&lt;/i&gt;                 &lt;p style=""display: inline-block;""&gt;Date scraped on: {{ company.scraped_on }}&lt;/p&gt;               &lt;/div&gt;             &lt;/div&gt;           &lt;/form&gt;         &lt;/div&gt;       &lt;/td&gt;     &lt;/tr&gt;   {% endfor %} </code></pre>  <p><strong>Update #1</strong></p>  <p>Tried using the loads method from the json module to load in the request, I am getting the following error message:</p>  <pre><code>Traceback (most recent call last):   File ""/Library/Python/2.7/site-packages/flask/app.py"", line 1836, in __call__     return self.wsgi_app(environ, start_response)   File ""/Library/Python/2.7/site-packages/flask/app.py"", line 1820, in wsgi_app     response = self.make_response(self.handle_exception(e))   File ""/Library/Python/2.7/site-packages/flask/app.py"", line 1403, in handle_exception     reraise(exc_type, exc_value, tb)   File ""/Library/Python/2.7/site-packages/flask/app.py"", line 1817, in wsgi_app     response = self.full_dispatch_request()   File ""/Library/Python/2.7/site-packages/flask/app.py"", line 1477, in full_dispatch_request     rv = self.handle_user_exception(e)   File ""/Library/Python/2.7/site-packages/flask/app.py"", line 1381, in handle_user_exception     reraise(exc_type, exc_value, tb)   File ""/Library/Python/2.7/site-packages/flask/app.py"", line 1475, in full_dispatch_request     rv = self.dispatch_request()   File ""/Library/Python/2.7/site-packages/flask/app.py"", line 1461, in dispatch_request     return self.view_functions[rule.endpoint](**req.view_args)   File ""/Users/wyssuser/Desktop/dscraper/app.py"", line 82, in send_emails     content = json.loads(request.json)   File ""/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/json/__init__.py"", line 338, in loads     return _default_decoder.decode(s)   File ""/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/json/decoder.py"", line 365, in decode     obj, end = self.raw_decode(s, idx=_w(s, 0).end()) TypeError: expected string or buffer </code></pre>"	2015-06-15 17:07:27.14 UTC	38035690	<p>There is a typo:  <code>contacts = request.args.getList('contact')</code>.  I think you would have written <code>contacts = request.args.getlist('contact')</code>. </p>			2016-06-26 06:04:58.567 UTC
30850973	javascript|python|json|flask	Flask - Getting JavaScript and Python to Communicate	"<p>I'm building a rather simple CRM using the Flask Python framework. I have a database of companies that we are interested in contacting. The user first inputs how many companies they would like to contact. The user is then redirected to this page:</p>  <p><img src=""https://i.stack.imgur.com/qumuL.png"" alt=""CRM First Screen""></p>  <p>Essentially for each row/company on this page, the user will click either the contact or don't contact radio button. </p>  <p><strong>What I am trying to accomplish</strong></p>  <p>Once the user clicks the 'Let the Magic Happen' button at the bottom, JavaScript runs through each row and sees which button is clicked. It then appends the database unique ID to one of two arrays, 'contact' and 'remove'. This information then gets passed along to python via getJSON, python captures the json data using request.args.get. </p>  <p>Finally, Python does one of two things:</p>  <ul> <li>for the companies in the remove array, it changes a bool value in the respective database instance</li> <li>for the companies in the contact array, it runs a separate function which uses SMTP to email that company</li> </ul>  <p><strong>Where I am getting hung up</strong></p>  <p>I can't seem to retrieve the json data in Python, I am trying to just do a simple print statement as of right now to show that I can pull in the data. </p>  <p>Also, would it be more efficient in terms of performance to have the javascript send each row to python individually or all at once in an array?</p>  <p><strong>Scripts</strong></p>  <p>app.py</p>  <pre><code>@app.route('/send_emails') def send_emails():   contact = request.args.get('contact')   remove = request.args.get('remove')    print contact   print remove    return ('', 204) #No need to return anything </code></pre>  <p>email.js</p>  <pre class=""lang-javascript prettyprint-override""><code>$('#batch-page .magic-button').click( function() {    //Iterate over each company row   $('#batch-page table tr.company-row').each(function(i, company){     company = $(company);     company_id = company.attr('class').split(' ')[1];      //Assign arrays for emailing and removing comapnies     var contact = [];     var remove = [];      //Check to see whether the contact or don't contact checkbox is checked     if(company.children('td.contact-company').children('input').is(':checked')) {       contact.push(company_id);     } else if (company.children('td.remove-company').children('input').is(':checked')) {       remove.push(company_id);     }      //Pass the data along to Python     $.getJSON('/send_emails', {       contact: contact,       remove: remove     });   });   $('div#batch-page').html('&lt;p&gt;Be patient, contacting companies!&lt;/p&gt;'); }); </code></pre>  <p>batch.html</p>  <pre class=""lang-html prettyprint-override""><code>  {% for company in companies %}     &lt;tr class=""company-row {{ company.id }}""&gt;       &lt;td class=""company-name""&gt;         &lt;p&gt;{{ company.company_name }}&lt;/p&gt;       &lt;/td&gt;       &lt;td class=""company-website""&gt;         &lt;div&gt;           &lt;a href=""{{ company.website }}"" target=""blank_""&gt;{{ company.website }}&lt;/a&gt;         &lt;/div&gt;       &lt;/td&gt;       &lt;td class=""company-email""&gt;         &lt;p&gt;{{ company.email_address }}&lt;/p&gt;       &lt;/td&gt;       &lt;td class=""contact-company""&gt;         &lt;input type=""checkbox"" class=""contact"" for='{{ company.id }}'&gt;       &lt;/td&gt;       &lt;td class=""remove-company""&gt;         &lt;input type=""checkbox"" class=""dont-contact"" for='{{ company.id }}'&gt;&lt;/td&gt;       &lt;td&gt;         &lt;a class=""btn btn-primary"" data-toggle=""collapse"" data-target=""#{{ company.id }}-info""&gt;Change Company Information&lt;/a&gt;       &lt;/td&gt;     &lt;/tr&gt;     &lt;tr class=""company-info-row""&gt;        &lt;td colspan=""6"" class=""hiddenRow""&gt;         &lt;div class=""accordion-body collapse"" id=""{{ company.id }}-info""&gt;           &lt;form action="""" id=""{{ company.id }}-edit-form"" method=""POST"" class=""update-company-form""&gt;             &lt;input type=""hidden"" name=""csrf_token"" value=""{{ csrf_token() }}"" /&gt;             &lt;div class=""col-md-4""&gt;               &lt;div class=""form-group""&gt;                 &lt;label for=""{{ company.id }}-company-name""&gt;Company Name&lt;/label&gt;                 &lt;input type=""text"" value=""{{ company.company_name }}"" id=""{{ company.id }}-company-name"" class=""form-control"" name=""company-name""&gt;                 &lt;label for=""{{ company.id }}-company-website""&gt;Company Website&lt;/label&gt;                 &lt;input type=""text"" value=""{{ company.website }}"" id=""{{ company.id }}-company-website"" class=""form-control"" name=""company-website""&gt;               &lt;/div&gt;             &lt;/div&gt;             &lt;div class=""col-md-4""&gt;               &lt;div class=""form-group""&gt;                 &lt;label for=""{{ company.id }}-email-address""&gt;Company Email&lt;/label&gt;                 &lt;input type=""text"" value=""{{ company.email_address }}"" id=""{{ company.id }}-email-address"" class=""form-control"" name=""company-email""&gt;               &lt;/div&gt;               &lt;div class=""form-group""&gt;                 &lt;input type=""submit"" form=""{{ company.id }}-edit-form"" class=""btn btn-default"" value=""Update""&gt;               &lt;/div&gt;             &lt;/div&gt;             &lt;div class=""col-md-4 ajax-message""&gt;               &lt;div&gt;                 &lt;i class=""fa fa-clock-o fa-2x""&gt;&lt;/i&gt;                 &lt;p style=""display: inline-block;""&gt;Date scraped on: {{ company.scraped_on }}&lt;/p&gt;               &lt;/div&gt;             &lt;/div&gt;           &lt;/form&gt;         &lt;/div&gt;       &lt;/td&gt;     &lt;/tr&gt;   {% endfor %} </code></pre>  <p><strong>Update #1</strong></p>  <p>Tried using the loads method from the json module to load in the request, I am getting the following error message:</p>  <pre><code>Traceback (most recent call last):   File ""/Library/Python/2.7/site-packages/flask/app.py"", line 1836, in __call__     return self.wsgi_app(environ, start_response)   File ""/Library/Python/2.7/site-packages/flask/app.py"", line 1820, in wsgi_app     response = self.make_response(self.handle_exception(e))   File ""/Library/Python/2.7/site-packages/flask/app.py"", line 1403, in handle_exception     reraise(exc_type, exc_value, tb)   File ""/Library/Python/2.7/site-packages/flask/app.py"", line 1817, in wsgi_app     response = self.full_dispatch_request()   File ""/Library/Python/2.7/site-packages/flask/app.py"", line 1477, in full_dispatch_request     rv = self.handle_user_exception(e)   File ""/Library/Python/2.7/site-packages/flask/app.py"", line 1381, in handle_user_exception     reraise(exc_type, exc_value, tb)   File ""/Library/Python/2.7/site-packages/flask/app.py"", line 1475, in full_dispatch_request     rv = self.dispatch_request()   File ""/Library/Python/2.7/site-packages/flask/app.py"", line 1461, in dispatch_request     return self.view_functions[rule.endpoint](**req.view_args)   File ""/Users/wyssuser/Desktop/dscraper/app.py"", line 82, in send_emails     content = json.loads(request.json)   File ""/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/json/__init__.py"", line 338, in loads     return _default_decoder.decode(s)   File ""/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/json/decoder.py"", line 365, in decode     obj, end = self.raw_decode(s, idx=_w(s, 0).end()) TypeError: expected string or buffer </code></pre>"	2015-06-15 17:07:27.14 UTC	30901662	"<p>First of all <a href=""http://api.jquery.com/jquery.getjson/"" rel=""nofollow""><code>jQuery.getJSON()</code></a> issues a GET request using the <strong>JSON</strong> object you pass it as query parameters.</p>  <p>The problem here is that <code>jQuery.getJSON()</code> serializes the lists in a non traditional way. So if you looked at the request received sent by the browser it would look something like:</p>  <pre><code>http://example.com/?contact[]=me&amp;contact[]=others&amp;contact[]=hr&amp;remove[]=you&amp;remove[]=doug </code></pre>  <p>Now, Flask will parse that querystring into an args dict that has the keys <code>contact[]</code> and <code>remove[]</code> but since you're doing `request.args.get('contact'), you get nothing</p>  <p>The solution is to create the query parameters yourself before passing to <code>jQuery.getJSON()</code> like this. This can be done using <a href=""http://api.jquery.com/jquery.param/#jQuery-param-obj-traditional"" rel=""nofollow""><code>jQuery.param()</code></a>:</p>  <pre><code>//Assign arrays for emailing and removing companies var contact = [""me"", ""others"", ""hr""]; var remove = [""you"", ""doug""];  //Pass the data along to Python $.getJSON(     '/send_emails',     $.param({ contact: contact, remove: remove }, true) ); </code></pre>  <p>Note the <code>true</code> passed to <code>jQuery.param()</code>, it returns the querystring in the traditional format which looks like this:</p>  <pre><code>contact=me&amp;contact=others&amp;contact=hr&amp;remove=you&amp;remove=doug </code></pre>  <p>Now, you can retrieve your parameters in Flask using</p>  <pre><code>contacts = request.args.getList('contact') print(contacts) # ['me', 'others', 'hr']  </code></pre>"			2015-06-17 20:21:30.24 UTC
30850973	javascript|python|json|flask	Flask - Getting JavaScript and Python to Communicate	"<p>I'm building a rather simple CRM using the Flask Python framework. I have a database of companies that we are interested in contacting. The user first inputs how many companies they would like to contact. The user is then redirected to this page:</p>  <p><img src=""https://i.stack.imgur.com/qumuL.png"" alt=""CRM First Screen""></p>  <p>Essentially for each row/company on this page, the user will click either the contact or don't contact radio button. </p>  <p><strong>What I am trying to accomplish</strong></p>  <p>Once the user clicks the 'Let the Magic Happen' button at the bottom, JavaScript runs through each row and sees which button is clicked. It then appends the database unique ID to one of two arrays, 'contact' and 'remove'. This information then gets passed along to python via getJSON, python captures the json data using request.args.get. </p>  <p>Finally, Python does one of two things:</p>  <ul> <li>for the companies in the remove array, it changes a bool value in the respective database instance</li> <li>for the companies in the contact array, it runs a separate function which uses SMTP to email that company</li> </ul>  <p><strong>Where I am getting hung up</strong></p>  <p>I can't seem to retrieve the json data in Python, I am trying to just do a simple print statement as of right now to show that I can pull in the data. </p>  <p>Also, would it be more efficient in terms of performance to have the javascript send each row to python individually or all at once in an array?</p>  <p><strong>Scripts</strong></p>  <p>app.py</p>  <pre><code>@app.route('/send_emails') def send_emails():   contact = request.args.get('contact')   remove = request.args.get('remove')    print contact   print remove    return ('', 204) #No need to return anything </code></pre>  <p>email.js</p>  <pre class=""lang-javascript prettyprint-override""><code>$('#batch-page .magic-button').click( function() {    //Iterate over each company row   $('#batch-page table tr.company-row').each(function(i, company){     company = $(company);     company_id = company.attr('class').split(' ')[1];      //Assign arrays for emailing and removing comapnies     var contact = [];     var remove = [];      //Check to see whether the contact or don't contact checkbox is checked     if(company.children('td.contact-company').children('input').is(':checked')) {       contact.push(company_id);     } else if (company.children('td.remove-company').children('input').is(':checked')) {       remove.push(company_id);     }      //Pass the data along to Python     $.getJSON('/send_emails', {       contact: contact,       remove: remove     });   });   $('div#batch-page').html('&lt;p&gt;Be patient, contacting companies!&lt;/p&gt;'); }); </code></pre>  <p>batch.html</p>  <pre class=""lang-html prettyprint-override""><code>  {% for company in companies %}     &lt;tr class=""company-row {{ company.id }}""&gt;       &lt;td class=""company-name""&gt;         &lt;p&gt;{{ company.company_name }}&lt;/p&gt;       &lt;/td&gt;       &lt;td class=""company-website""&gt;         &lt;div&gt;           &lt;a href=""{{ company.website }}"" target=""blank_""&gt;{{ company.website }}&lt;/a&gt;         &lt;/div&gt;       &lt;/td&gt;       &lt;td class=""company-email""&gt;         &lt;p&gt;{{ company.email_address }}&lt;/p&gt;       &lt;/td&gt;       &lt;td class=""contact-company""&gt;         &lt;input type=""checkbox"" class=""contact"" for='{{ company.id }}'&gt;       &lt;/td&gt;       &lt;td class=""remove-company""&gt;         &lt;input type=""checkbox"" class=""dont-contact"" for='{{ company.id }}'&gt;&lt;/td&gt;       &lt;td&gt;         &lt;a class=""btn btn-primary"" data-toggle=""collapse"" data-target=""#{{ company.id }}-info""&gt;Change Company Information&lt;/a&gt;       &lt;/td&gt;     &lt;/tr&gt;     &lt;tr class=""company-info-row""&gt;        &lt;td colspan=""6"" class=""hiddenRow""&gt;         &lt;div class=""accordion-body collapse"" id=""{{ company.id }}-info""&gt;           &lt;form action="""" id=""{{ company.id }}-edit-form"" method=""POST"" class=""update-company-form""&gt;             &lt;input type=""hidden"" name=""csrf_token"" value=""{{ csrf_token() }}"" /&gt;             &lt;div class=""col-md-4""&gt;               &lt;div class=""form-group""&gt;                 &lt;label for=""{{ company.id }}-company-name""&gt;Company Name&lt;/label&gt;                 &lt;input type=""text"" value=""{{ company.company_name }}"" id=""{{ company.id }}-company-name"" class=""form-control"" name=""company-name""&gt;                 &lt;label for=""{{ company.id }}-company-website""&gt;Company Website&lt;/label&gt;                 &lt;input type=""text"" value=""{{ company.website }}"" id=""{{ company.id }}-company-website"" class=""form-control"" name=""company-website""&gt;               &lt;/div&gt;             &lt;/div&gt;             &lt;div class=""col-md-4""&gt;               &lt;div class=""form-group""&gt;                 &lt;label for=""{{ company.id }}-email-address""&gt;Company Email&lt;/label&gt;                 &lt;input type=""text"" value=""{{ company.email_address }}"" id=""{{ company.id }}-email-address"" class=""form-control"" name=""company-email""&gt;               &lt;/div&gt;               &lt;div class=""form-group""&gt;                 &lt;input type=""submit"" form=""{{ company.id }}-edit-form"" class=""btn btn-default"" value=""Update""&gt;               &lt;/div&gt;             &lt;/div&gt;             &lt;div class=""col-md-4 ajax-message""&gt;               &lt;div&gt;                 &lt;i class=""fa fa-clock-o fa-2x""&gt;&lt;/i&gt;                 &lt;p style=""display: inline-block;""&gt;Date scraped on: {{ company.scraped_on }}&lt;/p&gt;               &lt;/div&gt;             &lt;/div&gt;           &lt;/form&gt;         &lt;/div&gt;       &lt;/td&gt;     &lt;/tr&gt;   {% endfor %} </code></pre>  <p><strong>Update #1</strong></p>  <p>Tried using the loads method from the json module to load in the request, I am getting the following error message:</p>  <pre><code>Traceback (most recent call last):   File ""/Library/Python/2.7/site-packages/flask/app.py"", line 1836, in __call__     return self.wsgi_app(environ, start_response)   File ""/Library/Python/2.7/site-packages/flask/app.py"", line 1820, in wsgi_app     response = self.make_response(self.handle_exception(e))   File ""/Library/Python/2.7/site-packages/flask/app.py"", line 1403, in handle_exception     reraise(exc_type, exc_value, tb)   File ""/Library/Python/2.7/site-packages/flask/app.py"", line 1817, in wsgi_app     response = self.full_dispatch_request()   File ""/Library/Python/2.7/site-packages/flask/app.py"", line 1477, in full_dispatch_request     rv = self.handle_user_exception(e)   File ""/Library/Python/2.7/site-packages/flask/app.py"", line 1381, in handle_user_exception     reraise(exc_type, exc_value, tb)   File ""/Library/Python/2.7/site-packages/flask/app.py"", line 1475, in full_dispatch_request     rv = self.dispatch_request()   File ""/Library/Python/2.7/site-packages/flask/app.py"", line 1461, in dispatch_request     return self.view_functions[rule.endpoint](**req.view_args)   File ""/Users/wyssuser/Desktop/dscraper/app.py"", line 82, in send_emails     content = json.loads(request.json)   File ""/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/json/__init__.py"", line 338, in loads     return _default_decoder.decode(s)   File ""/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/json/decoder.py"", line 365, in decode     obj, end = self.raw_decode(s, idx=_w(s, 0).end()) TypeError: expected string or buffer </code></pre>"	2015-06-15 17:07:27.14 UTC	30851587	"<p>you need to get the json from the request,</p>  <pre><code>content = request.json </code></pre>  <p>Then using your favorite json parser parse the json into an object.</p>  <pre><code>obj = json.loads(content) </code></pre>  <p>To answer your question, ""would it be more efficient in terms of performance to have the javascript send each row to python individually or all at once in an array?"", it would be more efficient to send all of the data at once and return one return.</p>"			2015-06-15 17:42:09.56 UTC
30902898	javascript|python|ipython-notebook	IPython Notebook Javascript: retrieve content from JavaScript variables	"<p>Is there a way for a <strong>function</strong> (called by an IPython Notebook cell) to retrieve the content of a JavaScript variable (for example <code>IPython.notebook.notebook_path</code> which contains the path of the current notebook)?</p>  <p>The following works well when written directly within a cell (for example, based on <a href=""https://stackoverflow.com/a/23619544/758174"">this question</a> and its comments):</p>  <pre><code>from IPython.display import display,Javascript Javascript('IPython.notebook.kernel.execute(""mypath = "" + ""\'""+IPython.notebook.notebook_path+""\'"");') </code></pre>  <p>But that falls apart if I try to put it in a function:</p>  <pre><code># this doesn't work from IPython.display import display,Javascript def getname():     my_js = """"""     IPython.notebook.kernel.execute(""mypath = "" + ""\'""+IPython.notebook.notebook_path+""\'"");     """"""     Javascript(my_js)     return mypath </code></pre>  <p>(And yes, I've tried to make <code>global</code> the <code>mypath</code> variable, both from within the <code>my_js</code> script and from within the function. Also note: don't be fooled by possible leftover values in variables from previous commands; to make sure, use <code>mypath = None; del mypath</code> to reset the variable before calling the function, or restart the kernel.)</p>  <p>Another way to formulate the question is: ""what's the scope (time and place) of a variable set by <code>IPython.notebook.kernel.execute()</code>""?</p>  <p>I think it isn't an innocuous question, and is probably related to the mechanism that IPython uses to control its kernels and their variables and that I don't know much about.  The following experiment illustrate some aspect of that mechanism. The following works when done in two separate cells, but doesn't work if the two cells are merged:</p>  <p><strong>Cell [1]</strong>:</p>  <pre><code>my_out = None del my_out my_js = """""" IPython.notebook.kernel.execute(""my_out = 'hello world'""); """""" Javascript(my_js) </code></pre>  <p><strong>Cell [2]</strong>:</p>  <pre><code>print(my_out) </code></pre>  <p>This works and produces the expected <code>hello world</code>. But if you merge the two cells, it doesn't work (<code>NameError: name 'my_out' is not defined</code>).</p>"	2015-06-17 21:41:35.9 UTC	55422878	"<p>To add to the other great answers, there is a nuance of the browsers attempting to run the jupyter nb javascript magic on nb load. </p>  <p>To demonstrate: create and run the following cell:</p>  <pre><code>%%javascript  IPython.notebook.kernel.execute('1') </code></pre>  <p>Now save the notebook, close it and then re-open it. When you do that, under that cell suddenly you will see an error in red:</p>  <pre><code>Javascript error adding output! TypeError: Cannot read property 'execute' of null See your browser Javascript console for more details. </code></pre>  <p>That means the browser has parsed some js code and it tried to run it. This is the error in chrome, it will probably different in a different browser.</p>  <p>I have no idea why this jupyter javascript magic cell is being run on load and why jupyter notebook is not properly escaping things, but the browser sees some js code and so it runs it and it fails, because the notebook kernel doesn't yet exist!</p>  <p>So you must add a check that the object exists:</p>  <pre><code>%%javascript  if (IPython.notebook.kernel) {     IPython.notebook.kernel.execute('1') } </code></pre>  <p>and now there is no problem on load.</p>  <p>In my case, I needed to save the notebook and run an external script on it, so I ended up using this code:</p>  <pre><code>from IPython.display import display, Javascript def nb_auto_export():     display(Javascript(""if (IPython.notebook) { IPython.notebook.save_notebook() }; if (IPython.notebook.kernel) { IPython.notebook.kernel.execute('!./notebook2script.py  ' + IPython.notebook.notebook_name )}"")) </code></pre>  <p>and in the last cell of the notebook:</p>  <pre><code>nb_auto_export() </code></pre>"			2019-03-29 17:38:16.58 UTC
30902898	javascript|python|ipython-notebook	IPython Notebook Javascript: retrieve content from JavaScript variables	"<p>Is there a way for a <strong>function</strong> (called by an IPython Notebook cell) to retrieve the content of a JavaScript variable (for example <code>IPython.notebook.notebook_path</code> which contains the path of the current notebook)?</p>  <p>The following works well when written directly within a cell (for example, based on <a href=""https://stackoverflow.com/a/23619544/758174"">this question</a> and its comments):</p>  <pre><code>from IPython.display import display,Javascript Javascript('IPython.notebook.kernel.execute(""mypath = "" + ""\'""+IPython.notebook.notebook_path+""\'"");') </code></pre>  <p>But that falls apart if I try to put it in a function:</p>  <pre><code># this doesn't work from IPython.display import display,Javascript def getname():     my_js = """"""     IPython.notebook.kernel.execute(""mypath = "" + ""\'""+IPython.notebook.notebook_path+""\'"");     """"""     Javascript(my_js)     return mypath </code></pre>  <p>(And yes, I've tried to make <code>global</code> the <code>mypath</code> variable, both from within the <code>my_js</code> script and from within the function. Also note: don't be fooled by possible leftover values in variables from previous commands; to make sure, use <code>mypath = None; del mypath</code> to reset the variable before calling the function, or restart the kernel.)</p>  <p>Another way to formulate the question is: ""what's the scope (time and place) of a variable set by <code>IPython.notebook.kernel.execute()</code>""?</p>  <p>I think it isn't an innocuous question, and is probably related to the mechanism that IPython uses to control its kernels and their variables and that I don't know much about.  The following experiment illustrate some aspect of that mechanism. The following works when done in two separate cells, but doesn't work if the two cells are merged:</p>  <p><strong>Cell [1]</strong>:</p>  <pre><code>my_out = None del my_out my_js = """""" IPython.notebook.kernel.execute(""my_out = 'hello world'""); """""" Javascript(my_js) </code></pre>  <p><strong>Cell [2]</strong>:</p>  <pre><code>print(my_out) </code></pre>  <p>This works and produces the expected <code>hello world</code>. But if you merge the two cells, it doesn't work (<code>NameError: name 'my_out' is not defined</code>).</p>"	2015-06-17 21:41:35.9 UTC	37775879	"<p>I think the problem is related with Javascript being asynchronus while python is not. Normally you would think that the Javascript("""""" python cmd """""") command is executed, and then your print statment should work properly as expected. However, the Javascript command is fired but not executed. Most pobably it is executed after the cell 1 execution is fully completed.</p>  <p>I tried your example with sleep function. Did not help.</p>  <p>The asnyc problem can esaily be seen by adding an alert statement within my_js, but before kernel.execute line. The alert should be fired even before trying a python command execution. </p>  <p>But at the presence of print (my_out) statement within cell 1, you will again get the same error without any alerts. If you take the print line out, you will see the alert poping out within cell 1. But the varibale my_out is set afterwards.</p>  <pre><code>my_out = None del my_out my_js = """""" **alert (""about to execute python comand"");** IPython.notebook.kernel.execute(""my_out = 'hello world'""); """""" Javascript(my_js) </code></pre>  <p>There are other javascript utilities within notebook like IPython.display.display_xxx which varies from displaying video to text object, but even the text object option does not work.</p>  <p>Funny enough, I tested this with my webgl canvas application which displays objects on the HTML5 canvas; display.display_javascript(javascript object) works fine ( which is a looong html5 document) while the two pieces of words of output does not show up?! Maybe I should embed the output into canvas application somewhere, so it s displayed on the canvas :)</p>"			2016-06-12 15:19:32.09 UTC
30902898	javascript|python|ipython-notebook	IPython Notebook Javascript: retrieve content from JavaScript variables	"<p>Is there a way for a <strong>function</strong> (called by an IPython Notebook cell) to retrieve the content of a JavaScript variable (for example <code>IPython.notebook.notebook_path</code> which contains the path of the current notebook)?</p>  <p>The following works well when written directly within a cell (for example, based on <a href=""https://stackoverflow.com/a/23619544/758174"">this question</a> and its comments):</p>  <pre><code>from IPython.display import display,Javascript Javascript('IPython.notebook.kernel.execute(""mypath = "" + ""\'""+IPython.notebook.notebook_path+""\'"");') </code></pre>  <p>But that falls apart if I try to put it in a function:</p>  <pre><code># this doesn't work from IPython.display import display,Javascript def getname():     my_js = """"""     IPython.notebook.kernel.execute(""mypath = "" + ""\'""+IPython.notebook.notebook_path+""\'"");     """"""     Javascript(my_js)     return mypath </code></pre>  <p>(And yes, I've tried to make <code>global</code> the <code>mypath</code> variable, both from within the <code>my_js</code> script and from within the function. Also note: don't be fooled by possible leftover values in variables from previous commands; to make sure, use <code>mypath = None; del mypath</code> to reset the variable before calling the function, or restart the kernel.)</p>  <p>Another way to formulate the question is: ""what's the scope (time and place) of a variable set by <code>IPython.notebook.kernel.execute()</code>""?</p>  <p>I think it isn't an innocuous question, and is probably related to the mechanism that IPython uses to control its kernels and their variables and that I don't know much about.  The following experiment illustrate some aspect of that mechanism. The following works when done in two separate cells, but doesn't work if the two cells are merged:</p>  <p><strong>Cell [1]</strong>:</p>  <pre><code>my_out = None del my_out my_js = """""" IPython.notebook.kernel.execute(""my_out = 'hello world'""); """""" Javascript(my_js) </code></pre>  <p><strong>Cell [2]</strong>:</p>  <pre><code>print(my_out) </code></pre>  <p>This works and produces the expected <code>hello world</code>. But if you merge the two cells, it doesn't work (<code>NameError: name 'my_out' is not defined</code>).</p>"	2015-06-17 21:41:35.9 UTC	30909462	"<p>Okay, I found a way around the problem: call a Python function from Javascript and have it do all of what I need, rather than returning the name to ""above"" and work with that name there.</p>  <p>For context: my colleagues and I have many experimental notebooks; we experiment for a while and try various things (in a machine learning context). At the end of each variation/run, I want to save the notebook, copy it under a name that reflects the time, upload it to S3, strip it from its output and push it to git, log the filename, comments, and result scores into a DB, etc.  In short, I want to automatically keep track of all of our experiments.</p>  <p>This is what I have so far. At the bottom of my notebooks, I put:</p>  <pre><code>In [127]: import mymodule.utils.lognote as lognote           lognote.snap()  In [128]: # not to be run in the same shot as above           lognote.last Out[128]: {'file': '/data/notebook-snapshots/2015/06/18/20150618-004408-save-note-exp.ipynb',            'time': datetime.datetime(2015, 6, 18, 0, 44, 8, 419907)} </code></pre>  <p>And in a separate file, e.g. <code>mymodule/utils/lognote.py</code>:</p>  <pre><code># (...)  from datetime import datetime from subprocess import call from os.path import basename, join from IPython.display import display, Javascript  # TODO: find out where the topdir really is instead of hardcoding it _notebook_dir = '/data/notebook' _snapshot_dir = '/data/notebook-snapshots'  def jss():     return """"""     IPython.notebook.save_notebook();     IPython.notebook.kernel.execute(""import mymodule.utils.lognote as lognote"");     IPython.notebook.kernel.execute(""lognote._snap('"" + IPython.notebook.notebook_path + ""')"");     """""" def js():     return Javascript(jss())  def _snap(x):     global last     snaptime = datetime.now()     src = join(_notebook_dir, x)     dstdir = join(_snapshot_dir, '{}'.format(snaptime.strftime(""%Y/%m/%d"")))     dstfile = join(dstdir, '{}-{}'.format(snaptime.strftime(""%Y%m%d-%H%M%S""), basename(x)))     call([""mkdir"", ""-p"", dstdir])     call([""cp"", src, dstfile])     last = {         'time': snaptime,         'file': dstfile         }  def snap():     display(js()) </code></pre>"			2015-06-18 07:48:58.53 UTC
30902898	javascript|python|ipython-notebook	IPython Notebook Javascript: retrieve content from JavaScript variables	"<p>Is there a way for a <strong>function</strong> (called by an IPython Notebook cell) to retrieve the content of a JavaScript variable (for example <code>IPython.notebook.notebook_path</code> which contains the path of the current notebook)?</p>  <p>The following works well when written directly within a cell (for example, based on <a href=""https://stackoverflow.com/a/23619544/758174"">this question</a> and its comments):</p>  <pre><code>from IPython.display import display,Javascript Javascript('IPython.notebook.kernel.execute(""mypath = "" + ""\'""+IPython.notebook.notebook_path+""\'"");') </code></pre>  <p>But that falls apart if I try to put it in a function:</p>  <pre><code># this doesn't work from IPython.display import display,Javascript def getname():     my_js = """"""     IPython.notebook.kernel.execute(""mypath = "" + ""\'""+IPython.notebook.notebook_path+""\'"");     """"""     Javascript(my_js)     return mypath </code></pre>  <p>(And yes, I've tried to make <code>global</code> the <code>mypath</code> variable, both from within the <code>my_js</code> script and from within the function. Also note: don't be fooled by possible leftover values in variables from previous commands; to make sure, use <code>mypath = None; del mypath</code> to reset the variable before calling the function, or restart the kernel.)</p>  <p>Another way to formulate the question is: ""what's the scope (time and place) of a variable set by <code>IPython.notebook.kernel.execute()</code>""?</p>  <p>I think it isn't an innocuous question, and is probably related to the mechanism that IPython uses to control its kernels and their variables and that I don't know much about.  The following experiment illustrate some aspect of that mechanism. The following works when done in two separate cells, but doesn't work if the two cells are merged:</p>  <p><strong>Cell [1]</strong>:</p>  <pre><code>my_out = None del my_out my_js = """""" IPython.notebook.kernel.execute(""my_out = 'hello world'""); """""" Javascript(my_js) </code></pre>  <p><strong>Cell [2]</strong>:</p>  <pre><code>print(my_out) </code></pre>  <p>This works and produces the expected <code>hello world</code>. But if you merge the two cells, it doesn't work (<code>NameError: name 'my_out' is not defined</code>).</p>"	2015-06-17 21:41:35.9 UTC	58991519	"<p>I wrote a related question (<a href=""https://stackoverflow.com/questions/58881349/cannot-get-jupyter-notebook-to-access-javascript-variables?noredirect=1#comment104043596_58881349"">Cannot get Jupyter notebook to access javascript variables</a>) and came up with a hack that does the job. It uses the fact that the input(prompt) command in Python does block the execution loop and waits for user input. So I looked how this is processed on the Javascript side and inserted interception code there.</p>  <p>The interception code is:</p>  <pre class=""lang-py prettyprint-override""><code>import json from IPython.display import display, Javascript display(Javascript(""""""   const CodeCell = window.IPython.CodeCell;    CodeCell.prototype.native_handle_input_request = CodeCell.prototype.native_handle_input_request || CodeCell.prototype._handle_input_request   CodeCell.prototype._handle_input_request = function(msg) {     try {       // only apply the hack if the command is valid JSON       console.log(msg.content.prompt)       const command = JSON.parse(msg.content.prompt);       const kernel = IPython.notebook.kernel;       // return some value in the Javascript domain, depending on the 'command'.       // for now: specify a 5 second delay and return 'RESPONSE'       kernel.send_input_reply(eval(command[""eval""]))     } catch(err) {       console.log('Not a command',msg,err);       this.native_handle_input_request(msg);     }   } """""")) </code></pre>  <p>The interception code looks whether the input prompt is valid JSON, and in that case it executes an action depending on the <code>command</code> argument. In this case, it runs the commend[""eval""] javascript expression and returns the result. After running this cell, you can use:</p>  <pre class=""lang-py prettyprint-override""><code>notebook_path = input(json.dumps({""eval"":""IPython.notebook.notebook_path""})) </code></pre>  <p>Quite a hack, I must admit.</p>"			2019-11-22 09:47:04.753 UTC
30916727	javascript|python|selenium|selenium-webdriver|web-scraping	Python - javascript web scraping with selenium does not work properly	<p>I'm trying to scrape some data from one flight-searching web page. It is probably generated with Javascript. I've tried many approaches but nothing works so I've decided to try <strong>selenium</strong>. </p>  <pre><code>from selenium import webdriver  driver = webdriver.Firefox() driver.get('https://www.pelikan.sk/sk/flights/list?dfc=CVIE%20BUD%20BTS&amp;dtc=CMAD&amp;rfc=CMAD&amp;rtc=CVIE%20BUD%20BTS&amp;dd=2015-07-09&amp;rd=2015-07-14&amp;px=1000&amp;ns=0&amp;prc=&amp;rng=1&amp;rbd=0&amp;ct=0') print driver.page_source </code></pre>  <p>I though that it return final javascript-generated html code but I can't find there strings which are on this page when open it in browser. </p>  <p>Where could be the problem? What should I do to get those flights?</p>  <p>EDIT: I forgot to mention that the page is continualy loading new flights. So when you open it in a browser it shows some flights but it still loading other flights.</p>	2015-06-18 13:28:10.167 UTC	30916822	"<p>The page has quite a <em>dynamic nature</em> and you need to <a href=""https://selenium-python.readthedocs.org/waits.html#explicit-waits"" rel=""nofollow""><em>wait for the page to load</em></a>. Choose something that would indicate that a page and search results were loaded. For instance, wait until the loading image (with a pelican) becomes <a href=""https://selenium-python.readthedocs.org/api.html#selenium.webdriver.support.expected_conditions.invisibility_of_element_located"" rel=""nofollow"">invisible</a>:</p>  <pre><code>from selenium import webdriver from selenium.webdriver.support.wait import WebDriverWait from selenium.webdriver.common.by import By from selenium.webdriver.support import expected_conditions as EC   driver = webdriver.Firefox() driver.get(""https://www.pelikan.sk/sk/flights/list?dfc=CVIE%20BUD%20BTS&amp;dtc=CMAD&amp;rfc=CMAD&amp;rtc=CVIE%20BUD%20BTS&amp;dd=2015-07-09&amp;rd=2015-07-14&amp;px=1000&amp;ns=0&amp;prc=&amp;rng=1&amp;rbd=0&amp;ct=0"")  wait = WebDriverWait(driver, 60) wait.until(EC.invisibility_of_element_located((By.XPATH, '//img[contains(@src, ""loading"")]'))) wait.until(EC.invisibility_of_element_located((By.XPATH, u'//div[. = ""Poprosíme o trpezlivosť, hľadáme pre Vás ešte viac letov""]/preceding-sibling::img')))  print(driver.page_source) </code></pre>  <p>Here we are waiting for two pelicans to <s>fly away</s> disappear: a bigger one and a smaller one.</p>"			2015-06-18 13:32:51.283 UTC
30917163	javascript|python|html|web-scraping|beautifulsoup	How to get javascript output in python BeautifulSoup or any other module	"<p>In my attempt to make a scraper, I found a  website that uses javascript alot in its code, is it possible to retrieve the output of the script e.g.</p>  <pre><code>&lt;html&gt; &lt;head&gt; &lt;title&gt;Python&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;script type=""text/javascript"" src='test.js'&gt;&lt;/script&gt; &lt;p&gt; some stuff &lt;br&gt; more stuff &lt;br&gt; code &lt;br&gt; video &lt;br&gt; picture &lt;br&gt; movie &lt;br&gt; . &lt;br&gt; . &lt;br&gt; . &lt;br&gt; &lt;/p&gt; &lt;span&gt;Your Number is:  &lt;/span&gt; &lt;script type=""text/javascript""&gt;document.write(math(5, 10, 15));&lt;/script&gt; &lt;/body&gt; &lt;/html&gt; </code></pre>  <p>where ""test.js"" has:</p>  <pre><code>function math (a, b, c) {return a * b * c * c * a * b * c + a + b +c - a;} </code></pre>  <p>When I use BeautifulSoup it shows the code itself i.e:</p>  <pre><code>&lt;script type=""text/javascript""&gt;document.write(math(5, 10, 15));&lt;/script&gt; </code></pre>  <p>however i need to get ""Your Number is:  8437480"", i could get the text between span by using soup.span.get_text() however i cant get the number of the script.</p>"	2015-06-18 13:46:11.487 UTC	30917432	"<p>Beautifulsoup just can't execute javascript code. I suggest you to integrate something like <a href=""http://phantomjs.org/"" rel=""nofollow noreferrer"">PhantomJS</a> into your <strong>scraper</strong>. If you can drop python, you <strong>scraper</strong> in PhantomJS</p>"			2015-06-18 13:56:51.883 UTC
30970786	javascript|python|stream	How to stream data from python to javascript	"<p>I am looking for a way to stream data from python script to a javascript within a html file.</p>  <p>My data is stored in a large <code>csv</code> file which looks like:</p>  <pre><code>x1,x2,y1,y2 0.5,0.54,0.04,0.55 0.12,0.88,1.02,0.005 ... ... </code></pre>  <p>The python script must pre-process this data before sending it to javascript:</p>  <pre class=""lang-py prettyprint-override""><code>import csv  def send_data(filename):     with open(filename, ""rb"") as csvfile:         datareader = csv.reader(csvfile)         for row in datareader:             preprocessed = Do_something(row)             yield preprocessed </code></pre>  <p>The javascript should process the received data from the python script above. </p>"	2015-06-22 00:45:44.94 UTC	30970806	"<p>Without <em>knowing</em> more about your <em>exact</em> requirements you could do something like this using <a href=""https://github.com/circuits/circuits"" rel=""nofollow"">circuits</a>:</p>  <p><strong>Code:</strong> (<em>untested</em>)</p>  <pre><code>import csv  from circuits.web import Server, Controller  def Do_something(row):     return row  class Root(Controller):      def send_data(self, filename):         self.response.stream = True          with open(filename, ""rb"") as csvfile:             datareader = csv.reader(csvfile)             for row in datareader:                 preprocessed = Do_something(row)                 yield preprocessed   app = Server((""0.0.0.0"", 8000)) Root().register(app) app.run() </code></pre>  <p>Then requests to <a href=""http://localhost:8000/send_data/filename"" rel=""nofollow"">http://localhost:8000/send_data/filename</a> would result in a stream resolve of the entire csv file. This also <em>assumes</em> you actually want to serve up the csv file as a web response to some web application.</p>"			2015-06-22 00:49:23.597 UTC
30990129	javascript|python|encryption|pycrypto|cryptojs	Encrypt in python - decrypt in Javascript	"<p>I have need to simply encrypt some text in python and being able to decrypt in JavaScrypt.</p>  <p>So far I have in python:</p>  <pre><code>from Crypto import Random from Crypto.Cipher import AES import base64  BLOCK_SIZE = 16 key = ""1234567890123456"" # want to be 16 chars textToEncrypt = ""This is text to encrypt""  def encrypt(message, passphrase):     # passphrase MUST be 16, 24 or 32 bytes long, how can I do that ?     IV = Random.new().read(BLOCK_SIZE)     aes = AES.new(passphrase, AES.MODE_CFB, IV)     return base64.b64encode(aes.encrypt(message))  def decrypt(encrypted, passphrase):     IV = Random.new().read(BLOCK_SIZE)     aes = AES.new(passphrase, AES.MODE_CFB, IV)     return aes.decrypt(base64.b64decode(encrypted))  print encrypt( textToEncrypt, key ) </code></pre>  <p>this is producing text: <code>ZF9as5JII5TlqcB5tAd4sxPuBXd5TrgE</code></p>  <p>in JavaScript:</p>  <pre class=""lang-html prettyprint-override""><code>&lt;script src=""http://crypto-js.googlecode.com/svn/tags/3.1.2/build/rollups/aes.js""&gt;&lt;/script&gt; &lt;script&gt;     var decrypted = CryptoJS.AES.decrypt( ""ZF9as5JII5TlqcB5tAd4sxPuBXd5TrgE"", ""1234567890123456"");     console.log ( decrypted.toString( CryptoJS.enc.Utf8 ) ); &lt;/script&gt; </code></pre>  <p>however it does not produce original string (empty string instead). What I am doing wrong ?</p>  <p>Is it focusing on AES is a best idea - I will be happy if I have some kind of encryption that will blur data. </p>"	2015-06-22 21:28:55.75 UTC	39598361	"<p>(1 Year later but I hope this works for someone)</p>  <p>First of all, thanks Artjom B. your post helps me a lot. And Like OP, I have the same same problem Python server endonding and Javascript client decoding. This was my solution:</p>  <hr/>  <p><strong>Python 3.x</strong> (Server)</p>  <p>I used an excplicit <strong>PKCS7</strong> encode for padding, why? because I want to be sure Im using the same padding enconding and decoding, this is the link where I found it <a href=""http://programmerin.blogspot.com.co/2011/08/python-padding-with-pkcs7.html"" rel=""noreferrer"">http://programmerin.blogspot.com.co/2011/08/python-padding-with-pkcs7.html</a> .</p>  <p>Then, like Artjom B. said, be sure about your segment size, IV size and AES mode (CBC for me),</p>  <p>This is the code:</p>  <pre><code>def encrypt_val(clear_text):     master_key = '1234567890123456'      encoder = PKCS7Encoder()     raw = encoder.encode(clear_text)     iv = Random.new().read( 16 )     cipher = AES.new( master_key, AES.MODE_CBC, iv, segment_size=128 )     return base64.b64encode( iv + cipher.encrypt( raw ) )  </code></pre>  <p>Note than your are enconding on base64 the concatenation of IV and encryption data.</p>  <hr/>  <p><strong>Javascript</strong> (client)</p>  <pre><code>function decryptMsg (data) {     master_key = '1234567890123456';      // Decode the base64 data so we can separate iv and crypt text.     var rawData = atob(data);     // Split by 16 because my IV size     var iv = rawData.substring(0, 16);     var crypttext = rawData.substring(16);      //Parsers     crypttext = CryptoJS.enc.Latin1.parse(crypttext);     iv = CryptoJS.enc.Latin1.parse(iv);      key = CryptoJS.enc.Utf8.parse(master_key);      // Decrypt     var plaintextArray = CryptoJS.AES.decrypt(       { ciphertext:  crypttext},       key,       {iv: iv, mode: CryptoJS.mode.CBC, padding: CryptoJS.pad.Pkcs7}     );      // Can be Utf8 too     output_plaintext = CryptoJS.enc.Latin1.stringify(plaintextArray);     console.log(""plain text : "" + output_plaintext); } </code></pre>  <p>One of my main problem was keep in mind all kind of encoding and decoding data, for example, I didn't know that the master_key on client side was to be parse with Utf8.</p>"			2016-09-20 15:39:32.027 UTC
30990129	javascript|python|encryption|pycrypto|cryptojs	Encrypt in python - decrypt in Javascript	"<p>I have need to simply encrypt some text in python and being able to decrypt in JavaScrypt.</p>  <p>So far I have in python:</p>  <pre><code>from Crypto import Random from Crypto.Cipher import AES import base64  BLOCK_SIZE = 16 key = ""1234567890123456"" # want to be 16 chars textToEncrypt = ""This is text to encrypt""  def encrypt(message, passphrase):     # passphrase MUST be 16, 24 or 32 bytes long, how can I do that ?     IV = Random.new().read(BLOCK_SIZE)     aes = AES.new(passphrase, AES.MODE_CFB, IV)     return base64.b64encode(aes.encrypt(message))  def decrypt(encrypted, passphrase):     IV = Random.new().read(BLOCK_SIZE)     aes = AES.new(passphrase, AES.MODE_CFB, IV)     return aes.decrypt(base64.b64decode(encrypted))  print encrypt( textToEncrypt, key ) </code></pre>  <p>this is producing text: <code>ZF9as5JII5TlqcB5tAd4sxPuBXd5TrgE</code></p>  <p>in JavaScript:</p>  <pre class=""lang-html prettyprint-override""><code>&lt;script src=""http://crypto-js.googlecode.com/svn/tags/3.1.2/build/rollups/aes.js""&gt;&lt;/script&gt; &lt;script&gt;     var decrypted = CryptoJS.AES.decrypt( ""ZF9as5JII5TlqcB5tAd4sxPuBXd5TrgE"", ""1234567890123456"");     console.log ( decrypted.toString( CryptoJS.enc.Utf8 ) ); &lt;/script&gt; </code></pre>  <p>however it does not produce original string (empty string instead). What I am doing wrong ?</p>  <p>Is it focusing on AES is a best idea - I will be happy if I have some kind of encryption that will blur data. </p>"	2015-06-22 21:28:55.75 UTC	64545969	"<p>//First pip install pycryptodome -- (pycrypto is obsolete and gives issues) // pip install pkcs7</p> <pre><code>from Crypto import Random from Crypto.Cipher import AES import base64 from pkcs7 import PKCS7Encoder from app_settings.views import retrieve_settings # my custom settings  app_secrets = retrieve_settings(file_name='secrets');   def encrypt_data(text_data):                     #limit to 16 bytes because my encryption key was too long                     #yours could just be 'abcdefghwhatever'      encryption_key = app_secrets['ENCRYPTION_KEY'][:16];       #convert to bytes. same as bytes(encryption_key, 'utf-8')     encryption_key = str.encode(encryption_key);           #pad     encoder = PKCS7Encoder();     raw = encoder.encode(text_data) # Padding     iv = Random.new().read(AES.block_size ) #AES.block_size defaults to 16                                   # no need to set segment_size=BLAH     cipher = AES.new( encryption_key, AES.MODE_CBC, iv )      encrypted_text = base64.b64encode( iv + cipher.encrypt( str.encode(raw) ) )      return encrypted_text; </code></pre>"			2020-10-26 22:40:01.65 UTC
30990129	javascript|python|encryption|pycrypto|cryptojs	Encrypt in python - decrypt in Javascript	"<p>I have need to simply encrypt some text in python and being able to decrypt in JavaScrypt.</p>  <p>So far I have in python:</p>  <pre><code>from Crypto import Random from Crypto.Cipher import AES import base64  BLOCK_SIZE = 16 key = ""1234567890123456"" # want to be 16 chars textToEncrypt = ""This is text to encrypt""  def encrypt(message, passphrase):     # passphrase MUST be 16, 24 or 32 bytes long, how can I do that ?     IV = Random.new().read(BLOCK_SIZE)     aes = AES.new(passphrase, AES.MODE_CFB, IV)     return base64.b64encode(aes.encrypt(message))  def decrypt(encrypted, passphrase):     IV = Random.new().read(BLOCK_SIZE)     aes = AES.new(passphrase, AES.MODE_CFB, IV)     return aes.decrypt(base64.b64decode(encrypted))  print encrypt( textToEncrypt, key ) </code></pre>  <p>this is producing text: <code>ZF9as5JII5TlqcB5tAd4sxPuBXd5TrgE</code></p>  <p>in JavaScript:</p>  <pre class=""lang-html prettyprint-override""><code>&lt;script src=""http://crypto-js.googlecode.com/svn/tags/3.1.2/build/rollups/aes.js""&gt;&lt;/script&gt; &lt;script&gt;     var decrypted = CryptoJS.AES.decrypt( ""ZF9as5JII5TlqcB5tAd4sxPuBXd5TrgE"", ""1234567890123456"");     console.log ( decrypted.toString( CryptoJS.enc.Utf8 ) ); &lt;/script&gt; </code></pre>  <p>however it does not produce original string (empty string instead). What I am doing wrong ?</p>  <p>Is it focusing on AES is a best idea - I will be happy if I have some kind of encryption that will blur data. </p>"	2015-06-22 21:28:55.75 UTC	30990692	"<p>There are many problems with your Python code <em>and</em> CryptoJS code:</p>  <ul> <li><p>You use a random IV to encrypt some plaintext in Python. If you want to retrieve that plaintext, you need to use <strong>the same IV</strong> during decryption. The plaintext cannot be recovered without the IV. Usually the IV is simply prepended to the ciphertext, because it doesn't have to be secret. So you need to read the IV during decryption and not generate a new one.</p></li> <li><p>You use CBC mode in CryptoJS (default) instead of CFB mode. The mode has to be the same. The other tricky part is that CFB mode is parametrized with a segment size. PyCrypto uses by default 8-bit segments (CFB8), but CryptoJS is only implemented for fixed segments of 128-bit (CFB128). Since the PyCrypto version is variable, you need to change that.</p></li> <li><p>The CryptoJS <code>decrypt()</code> function expects as ciphertext either an OpenSSL formatted string or a CipherParams object. Since you don't have an OpenSSL formatted string, you have to convert the ciphertext into an object.</p></li> <li><p>The <code>key</code> for CryptoJS is expected to be a WordArray and not a string.</p></li> <li><p>Use the same padding. PyCrypto doesn't pad the plaintext if CFB8 is used, but padding is needed when CFB128 is used. CryptoJS uses PKCS#7 padding by default, so you only need to implement that padding in python.</p></li> </ul>  <p>Python code (for version 2):</p>  <pre><code>def pad(data):     length = 16 - (len(data) % 16)     return data + chr(length)*length  def unpad(data):     return data[:-ord(data[-1])]  def encrypt(message, passphrase):     IV = Random.new().read(BLOCK_SIZE)     aes = AES.new(passphrase, AES.MODE_CFB, IV, segment_size=128)     return base64.b64encode(IV + aes.encrypt(pad(message)))  def decrypt(encrypted, passphrase):     encrypted = base64.b64decode(encrypted)     IV = encrypted[:BLOCK_SIZE]     aes = AES.new(passphrase, AES.MODE_CFB, IV, segment_size=128)     return unpad(aes.decrypt(encrypted[BLOCK_SIZE:])) </code></pre>  <p>JavaScript code:</p>  <pre class=""lang-html prettyprint-override""><code>&lt;script src=""https://cdn.rawgit.com/CryptoStore/crypto-js/3.1.2/build/rollups/aes.js""&gt;&lt;/script&gt; &lt;script src=""https://cdn.rawgit.com/CryptoStore/crypto-js/3.1.2/build/components/mode-cfb-min.js""&gt;&lt;/script&gt; &lt;script&gt;     var base64ciphertextFromPython = ""..."";     var ciphertext = CryptoJS.enc.Base64.parse(base64ciphertextFromPython);      // split iv and ciphertext     var iv = ciphertext.clone();     iv.sigBytes = 16;     iv.clamp();     ciphertext.words.splice(0, 4); // delete 4 words = 16 bytes     ciphertext.sigBytes -= 16;      var key = CryptoJS.enc.Utf8.parse(""1234567890123456"");      // decryption     var decrypted = CryptoJS.AES.decrypt({ciphertext: ciphertext}, key, {       iv: iv,       mode: CryptoJS.mode.CFB     });     console.log ( decrypted.toString(CryptoJS.enc.Utf8)); &lt;/script&gt; </code></pre>  <hr>  <p><strong>Other considerations:</strong></p>  <p>It seems that you want to use a passphrase as a key. Passphrases are usually human readable, but keys are not. You can derive a key from a passphrase with functions such as PBKDF2, bcrypt or scrypt.</p>  <p>The code above is not fully secure, because it lacks authentication. Unauthenticated ciphertexts may lead to viable attacks and unnoticed data manipulation. Usually the an encrypt-then-MAC scheme is employed with a good MAC function such as HMAC-SHA256.</p>"			2015-06-22 22:10:33.697 UTC
30992029	javascript|python|selenium	Python Selenium: How to get text generated by JavaScript in input field	"<p>I have a problem in getting text from user name field in one of the forms on my webpage using Python &amp; Selenium.</p>  <p>I have a field that is populated by JS after selecting a User from a list:</p>  <pre><code>&lt;select id=""users"" onchange=""checkUser(document.getElementById('configpin'))"" ondblclick=""document.getElementById('users').size=1; showUser(document.getElementById('configpin'))"" onmouseout=""document.getElementById('users').size=1"" size=""1""&gt;&lt;option value=""1""&gt;1 User 1&lt;/option&gt;[...]&lt;/option&gt;&lt;/select&gt; </code></pre>  <p>The field:</p>  <pre><code>&lt;input name=""name1"" value="""" type=""text"" id=""name1"" onkeyup=""checkNameEntry('name1',20)"" onchange=""checkNameEntry('name1',20)"" onkeydown=""if(event.keyCode == 13) submitUser(document.getElementById('configpin'));""&gt; </code></pre>  <p>And I am trying to get the text displayed in that field, but it does not work. I was trying:</p>  <pre><code>uname = driver.find_element_by_id('name1').get_attribute('innerHTML') </code></pre>  <p>AND:</p>  <pre><code>uname = driver.find_element_by_id('name1').text </code></pre>  <p>but in both cases, all I get from it is an empty string. I expect this is a common problem and should have some obvious solution, but I can't find it.</p>"	2015-06-23 00:35:11.423 UTC	30994253	"<p>I analysed the web page source code a bit deeper, and it turned out, that JS actually called Ajax, and as I read in <a href=""https://stackoverflow.com/questions/11258207/unable-to-read-text-from-textbox-using-gettext-of-selenium-webdriver"">this thread</a>, you just use .get_attribute('value') to get the text. That seemed to me odd at first, because there is no attribute 'value' in html code, but it works.</p>"			2015-06-23 05:08:48.877 UTC
30992029	javascript|python|selenium	Python Selenium: How to get text generated by JavaScript in input field	"<p>I have a problem in getting text from user name field in one of the forms on my webpage using Python &amp; Selenium.</p>  <p>I have a field that is populated by JS after selecting a User from a list:</p>  <pre><code>&lt;select id=""users"" onchange=""checkUser(document.getElementById('configpin'))"" ondblclick=""document.getElementById('users').size=1; showUser(document.getElementById('configpin'))"" onmouseout=""document.getElementById('users').size=1"" size=""1""&gt;&lt;option value=""1""&gt;1 User 1&lt;/option&gt;[...]&lt;/option&gt;&lt;/select&gt; </code></pre>  <p>The field:</p>  <pre><code>&lt;input name=""name1"" value="""" type=""text"" id=""name1"" onkeyup=""checkNameEntry('name1',20)"" onchange=""checkNameEntry('name1',20)"" onkeydown=""if(event.keyCode == 13) submitUser(document.getElementById('configpin'));""&gt; </code></pre>  <p>And I am trying to get the text displayed in that field, but it does not work. I was trying:</p>  <pre><code>uname = driver.find_element_by_id('name1').get_attribute('innerHTML') </code></pre>  <p>AND:</p>  <pre><code>uname = driver.find_element_by_id('name1').text </code></pre>  <p>but in both cases, all I get from it is an empty string. I expect this is a common problem and should have some obvious solution, but I can't find it.</p>"	2015-06-23 00:35:11.423 UTC	30992244	"<p>maybe you have to find the element by name, like this:</p>  <pre><code>uname = driver.find_element_by_name('name1').text </code></pre>  <p>Check out here the official <a href=""http://selenium-python.readthedocs.org/en/latest/locating-elements.html"" rel=""nofollow"">documentation</a>.</p>"			2015-06-23 01:01:11.9 UTC
31011874	javascript|python|html|django	Django: How to keep JavaScript code separate in static folder when it uses a python variable	"<p>I have a bunch of canvases that needs to be rendered. I don't want put the JavaScript code in a python loop,  because I feel it's bad practice  </p>  <p><code>home.html</code></p>  <pre class=""lang-html prettyprint-override""><code>{% load staticfiles %}  &lt;head&gt;     &lt;script type=""text/javascript"" src=""{% static      'canvas/canvasrender.js'   %}""&gt;&lt;/script&gt;         &lt;/head&gt;  {% for canvas in user_canvas_set %}      &lt;canvas  class = ""canvas"" id=""{{canvas.id}}"" width=""400"" height=""200""      canvas_post= """"{{canvas.canvas_post}}"""" &gt;     Your browser does not support the HTML5 canvas tag.&lt;/canvas&gt;      **&lt;script&gt;     canvasrenderNP.canvaswrite(""{{canvas.id}}"",""{{canvas.canvas_post}}"")     &lt;/script&gt;**   {% endfor %} </code></pre>  <p>I made a custom function that returns an array of the users canvas ids, because I  use the canvas id as the id for the canvas element.</p>  <p><code>home.html</code></p>  <pre class=""lang-html prettyprint-override""><code>&lt;script&gt;         alert(""{{user_canvas_ids}}"") &lt;/script&gt; </code></pre>  <p>I get the desired output:</p>  <pre><code>[247, 248, 251, 252] </code></pre>  <p>Now when I put this in a static file</p>  <p><code>canvasrender.js</code></p>  <pre class=""lang-js prettyprint-override""><code>alert(""{{user_canvas_ids}}"") </code></pre>  <p>then load it into  <code>home.html</code></p>  <pre class=""lang-html prettyprint-override""><code>{% load staticfiles %}  &lt;head&gt;     &lt;script type=""text/javascript"" src=""{% static      'canvas/canvasrender.js'   %}""&gt;&lt;/script&gt;         &lt;/head&gt; </code></pre>  <p>output:</p>  <pre><code>""{{user_canvas_ids}}"" </code></pre>  <p>I am confused to as what is going on. I thought that the script tag inserts the js file in between the  ""<code>&lt;script&gt; &lt;/script&gt;</code>""</p>  <p>I know I can make a element like so and get the attribute, but I feel like that is not good practice, or is it fine?</p>  <pre class=""lang-html prettyprint-override""><code>&lt;p id=""canvas_ids"" canvas_ids =""{{user_canvas_ids}}""&gt; &lt;/p &gt; </code></pre>  <p>Is there anything else I can do so that I can avoid writing JavaScript code  in the HTML file?</p>  <p>Why this is not a duplicate question. It does not have anything about why the linked js file in the html page can not keep reference to the python variable. But if the JavaScript is coded in the html page it can </p>"	2015-06-23 19:32:57.767 UTC	31012804	"<p>As you mentioned in your own comment, you can save <code>user_canvas_id</code> in a js variable in <code>home.html</code> and access it in your js file. Something like this:</p>  <pre><code>&lt;head&gt;     &lt;script&gt;var user_canvas_id = ""{{ user_canvas_id }}""&lt;/script&gt;     &lt;script type=""text/javascript"" src=""{% static 'canvas/canvasrender.js' %}""&gt;&lt;/script&gt; &lt;/head&gt; </code></pre>"			2015-06-23 20:24:40.507 UTC
31011874	javascript|python|html|django	Django: How to keep JavaScript code separate in static folder when it uses a python variable	"<p>I have a bunch of canvases that needs to be rendered. I don't want put the JavaScript code in a python loop,  because I feel it's bad practice  </p>  <p><code>home.html</code></p>  <pre class=""lang-html prettyprint-override""><code>{% load staticfiles %}  &lt;head&gt;     &lt;script type=""text/javascript"" src=""{% static      'canvas/canvasrender.js'   %}""&gt;&lt;/script&gt;         &lt;/head&gt;  {% for canvas in user_canvas_set %}      &lt;canvas  class = ""canvas"" id=""{{canvas.id}}"" width=""400"" height=""200""      canvas_post= """"{{canvas.canvas_post}}"""" &gt;     Your browser does not support the HTML5 canvas tag.&lt;/canvas&gt;      **&lt;script&gt;     canvasrenderNP.canvaswrite(""{{canvas.id}}"",""{{canvas.canvas_post}}"")     &lt;/script&gt;**   {% endfor %} </code></pre>  <p>I made a custom function that returns an array of the users canvas ids, because I  use the canvas id as the id for the canvas element.</p>  <p><code>home.html</code></p>  <pre class=""lang-html prettyprint-override""><code>&lt;script&gt;         alert(""{{user_canvas_ids}}"") &lt;/script&gt; </code></pre>  <p>I get the desired output:</p>  <pre><code>[247, 248, 251, 252] </code></pre>  <p>Now when I put this in a static file</p>  <p><code>canvasrender.js</code></p>  <pre class=""lang-js prettyprint-override""><code>alert(""{{user_canvas_ids}}"") </code></pre>  <p>then load it into  <code>home.html</code></p>  <pre class=""lang-html prettyprint-override""><code>{% load staticfiles %}  &lt;head&gt;     &lt;script type=""text/javascript"" src=""{% static      'canvas/canvasrender.js'   %}""&gt;&lt;/script&gt;         &lt;/head&gt; </code></pre>  <p>output:</p>  <pre><code>""{{user_canvas_ids}}"" </code></pre>  <p>I am confused to as what is going on. I thought that the script tag inserts the js file in between the  ""<code>&lt;script&gt; &lt;/script&gt;</code>""</p>  <p>I know I can make a element like so and get the attribute, but I feel like that is not good practice, or is it fine?</p>  <pre class=""lang-html prettyprint-override""><code>&lt;p id=""canvas_ids"" canvas_ids =""{{user_canvas_ids}}""&gt; &lt;/p &gt; </code></pre>  <p>Is there anything else I can do so that I can avoid writing JavaScript code  in the HTML file?</p>  <p>Why this is not a duplicate question. It does not have anything about why the linked js file in the html page can not keep reference to the python variable. But if the JavaScript is coded in the html page it can </p>"	2015-06-23 19:32:57.767 UTC	31012342	"<blockquote>   <p>I am confused to as what is going on. I thought that the script tag inserts the js file in between the ""<code>&lt;script&gt; &lt;/script&gt;</code>""</p> </blockquote>  <p>Kinda, but this is done client-side, by the browser who has no idea about the special meaning of curly braces in Django templates.</p>  <p>And <code>static</code> in the context of Django means just that: That Django serves that file as-is, without running it through the template engine. (Which wouldn't help here anyway, as for the JavaScript file in isolation, the value of <code>user_canvas_ids</code> would be unknown, so the template engine couldn't substitute anything useful for it.)</p>"			2015-06-23 19:58:16.103 UTC
31039781	javascript|python	Integrate Python and Javascript	"<p>I have some JavaScript which talks through an outgoing web hook in Slack in order to read a Slack post, do some computation on it, and then post back as a bot.  I have this working fine, but I would like to store information in a database from these messages. (Basically, I would like to keep track of points and provide a point update to Slack).  </p>  <p>I have a Python script set up to talk to the database and that works fine in updating the database with the new point values etc.. My problem is trying to get the JavaScript talk to Python and Python talk to JavaScript... I need to pass two strings (name of person to get more points, and how many points to add) from JavaScript to Python and then pass one integer/string from Python to JavaScript. </p>  <p>I've been scouring the web for hours and I have come up with the fact from forums that it likely has something to do with cgi/JSON/AJAX/JQuery but I am getting lost in the execution.  Can anyone explain how to make these two talk?</p>"	2015-06-25 01:29:57.663 UTC	31040979	"<p>I haven't tried that myself but you should be able to write javascript data into a json file which can be read by Python via json module. </p>  <p><a href=""https://stackoverflow.com/questions/17027101/how-to-write-json-files-in-javascript"">how to write json files in javascript</a></p>  <p><a href=""http://pymotw.com/2/json/"" rel=""nofollow noreferrer"">http://pymotw.com/2/json/</a></p>"			2015-06-25 04:01:15.11 UTC
31039781	javascript|python	Integrate Python and Javascript	"<p>I have some JavaScript which talks through an outgoing web hook in Slack in order to read a Slack post, do some computation on it, and then post back as a bot.  I have this working fine, but I would like to store information in a database from these messages. (Basically, I would like to keep track of points and provide a point update to Slack).  </p>  <p>I have a Python script set up to talk to the database and that works fine in updating the database with the new point values etc.. My problem is trying to get the JavaScript talk to Python and Python talk to JavaScript... I need to pass two strings (name of person to get more points, and how many points to add) from JavaScript to Python and then pass one integer/string from Python to JavaScript. </p>  <p>I've been scouring the web for hours and I have come up with the fact from forums that it likely has something to do with cgi/JSON/AJAX/JQuery but I am getting lost in the execution.  Can anyone explain how to make these two talk?</p>"	2015-06-25 01:29:57.663 UTC	31040151	"<p>First of all, I don't have any experience using Slack, but I think that doesn't really matter. There are several pieces you need to put together for this to work. First, you have your Python script, which you say it works ok - I'm guessing the script works by manually running it from the terminal, so you need a way of <em>exposing</em> it to the internet.</p>  <p><strong>That's what you called <em>cgi</em>.</strong></p>  <p>There are many ways of doing this, but it basically boils down to having a web server with an <strong>endpoint</strong> that, when accessed, launches your script with the appropriate parameters and returns its output. As you seem familiar with Python, I'd advise you to take a look at <a href=""http://flask.pocoo.org/"" rel=""nofollow"">Flask</a>, a really easy to use microframework that will allow you to set up a small web application.  There are several ways of running your web application, particularly depending on what web server you're using. A quick Google search will show many tutorials about that matter.</p>  <p>Also, it's important that you properly format the messages sent from the backend to your web frontend and viceversa. <strong>That's why you've mentioned JSON</strong>. It's a great way of passing messages back and forth. You can easily convert Python objects (like <code>dicts</code>) to JSON using built-in and third party libraries.</p>  <p>In order to dynamically request and load information from the frontend without refreshing your website, you'll need some kind of <em>asynchronous</em> procedure. <strong>That's what AJAX is about</strong>. It's a mechanism of sending and receiving information asynchronously, so your website can keep going while the information is still to be received.</p>  <p>However, doing AJAX requests by hand in a cross-browser compatible way is a PITA, so <strong>you're better off using jQuery</strong> and it's AJAX-related functions.</p>  <p>So those would be the elements and step you should follow to make JavaScript talk to Python.</p>"			2015-06-25 02:18:45.107 UTC
31041670	jquery|python|ajax|django|post	"AJAX Post request from Javascript to Python (Django, views.py)"	"<p>I am trying to send a POST request from javascript to views.py using AJAX. However, I am getting a 403 Error stating that csrf token is not present. </p>  <p>In order to resolve this issue I followed <a href=""https://docs.djangoproject.com/en/1.8/ref/csrf/#ajax"" rel=""nofollow"">this link</a> and included the function in my javascript. However, I am confused as to what the next step should be. </p>  <p>Any assistance will be appreciated. Thanks!</p>"	2015-06-25 05:11:08.89 UTC	31042769	"<p>Simply add somewhere in your template:</p>  <pre><code>{% csrf_token %} </code></pre>  <p>Then in your js file should be smth like this:</p>  <pre><code>var csrf_token;  var sendSomeAjax = function(target) {     var requestUrl = $(target).data('url');      return $.ajax({         url: requestUrl,         type: 'post',         headers: {             'X-CSRFToken': csrf_token         },         dataType: 'json'         // also you can pass some 'data: ' here     }) };  $(function() {     csrf_token = $('input[name=""csrfmiddlewaretoken""]').val();      var target = $('.someSelectorWhereYouHavePassedDataUrlToYourView');     // for example in your template &lt;a href=""#"" data-url=""{% url 'app_url_namespace:view_url_name' %}""&lt;/a&gt;      sendSomeAjax(target).success(function(data) {         // do smth with data =)     }); }); </code></pre>"			2015-06-25 06:27:43.827 UTC
31057695	javascript|python|arrays|numpy	Is there anything similar to Python's numpy.apply_along_axis in Javascript?	<p>I need to translate a Python program into Javascript and I see numpy.apply_along_axis many times but do not know how to do that in Javascript. Please help!</p>	2015-06-25 18:10:27.417 UTC	31059624	"<p>There various ideas of how to create 'multidimensional arrays' in Javascript in this SO question from a few years back</p>  <p><a href=""https://stackoverflow.com/questions/7545641/javascript-multidimensional-array"">JavaScript multidimensional array</a></p>  <p>Basically all use nested arrays, the equivalent of Python nested lists.</p>  <p>You have to have some sort of multidimensional array to have a concept of 'axis'.  Inevitably some operations will be easier on the first level array than on the deepest level.  And there will be speed penalties.</p>  <p>And for a syntax that looks more like Python, consider Coffeescript</p>  <p><a href=""https://stackoverflow.com/questions/23597404/coffee-script-multidimensional-array-creation"">Coffee script multidimensional array creation</a></p>  <p>Packages like <code>underscore.js</code> and <code>lodash</code> have array/collection iterators and functions that can make operation on arrays  easier.  There are, for example, <code>zip</code> and <code>flatten</code> functions.</p>  <p><a href=""https://lodash.com/docs"" rel=""nofollow noreferrer"">https://lodash.com/docs</a></p>"			2015-06-25 19:56:27.693 UTC
31089252	javascript|python|arrays	Convert Python string to array in JavaScript	"<p>I have a JavaScript script which receives information from a Python server. The Python server outputs a list, which is converted to a string prior to being sent to the JavaScript script.</p>  <p>I'd like to be able to convert the received string into a form that can be indexed with JavaScript. Here's an example output string from the Python server:</p>  <pre><code>var Message = [['Word1A', 'Word1B'], ['Word2A', 'Word2B'], ['Word3A', 'Word3B']]; </code></pre>  <p>Given the above example, I'd like to be able to query the received string as as an indexed array:</p>  <pre><code>var x; for (x in Message) {     alert(x[0]}; </code></pre>  <p>The above example should return:</p>  <pre><code>Word1A Word2A Word3A </code></pre>  <p>What's the best way to go about this?</p>"	2015-06-27 13:18:59.107 UTC	31089273	"<p>You can simply use the <a href=""https://docs.python.org/3.5/library/json.html"" rel=""nofollow""><code>json</code></a> Python module</p>  <pre><code>reply = json.dumps(Message) </code></pre>  <p>to convert the array in a JSON formatted string.</p>  <p>Then on the client side you decode the JSON string with</p>  <pre><code>message = JSON.parse(msg); </code></pre>  <p>and you will get an array of 2-elements arrays</p>"			2015-06-27 13:22:01.763 UTC
31089252	javascript|python|arrays	Convert Python string to array in JavaScript	"<p>I have a JavaScript script which receives information from a Python server. The Python server outputs a list, which is converted to a string prior to being sent to the JavaScript script.</p>  <p>I'd like to be able to convert the received string into a form that can be indexed with JavaScript. Here's an example output string from the Python server:</p>  <pre><code>var Message = [['Word1A', 'Word1B'], ['Word2A', 'Word2B'], ['Word3A', 'Word3B']]; </code></pre>  <p>Given the above example, I'd like to be able to query the received string as as an indexed array:</p>  <pre><code>var x; for (x in Message) {     alert(x[0]}; </code></pre>  <p>The above example should return:</p>  <pre><code>Word1A Word2A Word3A </code></pre>  <p>What's the best way to go about this?</p>"	2015-06-27 13:18:59.107 UTC	31089367	"<p>This should work,</p>  <pre><code>var Message = [['Word1A', 'Word1B'], ['Word2A', 'Word2B'], ['Word3A', 'Word3B']]; var x; for (x in Message) {     alert(Message[x][0]); } </code></pre>  <p>Editing my answer as per you comments below which says the input would be  <code>""['Word1A', 'Word1B'], ['Word2A', 'Word2B'], ['Word3A', 'Word3B']""</code></p>  <p>Solution being,</p>  <pre><code>var Message = ""['Word1A', 'Word1B'], ['Word2A', 'Word2B'], ['Word3A', 'Word3B']""; var array = Message.replace(/,|[|]/g, """").split("" ""); for(var x = 0; x &lt; array.length -1; x=x+2){  alert(array[x].replace(""["","""").replace(""]"","""")); } </code></pre>  <p>I must add, this solution will work but I'm not that fluent with regex, so more optimal solution could be achieved. Hope it helps!</p>"			2015-06-27 13:32:56.347 UTC
31123800	javascript|python|json|flask|to-json	Python to Javascript JSON objects (Flask)	"<p>I am trying to create a simple Flask app where an array of integers is generated on the server and sent to the client. I want to view the array of integers in the console. Here is some sample (working) code in app.py:</p>  <pre><code>from flask import Flask, render_template, request, url_for  import random, json  app = Flask(__name__)  @app.route('/',  methods=['GET']) def form():     json_helper = {}     json_helper['randoms'] = [random.random() for _ in range(40)]     json_object = json.dumps(json_helper)     return render_template('sim0625.html', s_data=json_object)  if __name__ == '__main__':   app.run(debug=True) </code></pre>  <p>And here is a snippet of the Javascript frontend:</p>  <pre><code>&lt;script&gt;    var data_xyz = {{ s_data|tojson }};    var JSONObject = JSON.parse({{data_xyz}});   console.log(JSONObject.randoms);     &lt;/script&gt; </code></pre>  <p>Unfortunately, none of the javascript works on my webpage, and the error message shown is ""Uncaught SyntaxError: Unexpected token u"".</p>  <p>Can someone please explain how to fix this? Thanks. My guess is the JSON objects are becoming strings.</p>  <p>Note: The code from the front-end was adapted from this SO question: <a href=""https://stackoverflow.com/questions/10926965/extracting-data-from-json-object-in-jquery-or-js"">Extracting data from json object in jQuery or JS</a></p>"	2015-06-29 19:18:26.13 UTC	31124515	"<p>You're sending your JSON to the template through the variable <code>s_data</code>.</p>  <p>In the template, you're rendering that variable into a <em>JavaScript</em> variable called <code>data_xyz</code>. In the next line, you attempt to reference a Jinja variable instead of a JavaScript variable:</p>  <pre><code>var JSONObject = JSON.parse({{data_xyz}}); </code></pre>  <p>Change that to:</p>  <pre><code>var JSONObject = JSON.parse(data_xyz); </code></pre>"			2015-06-29 19:59:53.61 UTC
31127824	javascript|python	"What are Python's equivalent of Javascript's reduce(), map(), and filter()?"	"<p>What are Python's equivalent of the following (Javascript):</p>  <pre><code>function wordParts (currentPart, lastPart) {     return currentPart+lastPart; }  word = ['Che', 'mis', 'try']; console.log(word.reduce(wordParts)) </code></pre>  <p>and this:</p>  <pre><code>var places = [     {name: 'New York City', state: 'New York'},     {name: 'Oklahoma City', state: 'Oklahoma'},     {name: 'Albany', state: 'New York'},     {name: 'Long Island', state: 'New York'}, ]  var newYork = places.filter(function(x) { return x.state === 'New York'}) console.log(newYork) </code></pre>  <p>lastly, this:</p>  <pre><code>function greeting(name) {     console.log('Hello ' + name + '. How are you today?'); } names = ['Abby', 'Cabby', 'Babby', 'Mabby'];  var greet = names.map(greeting) </code></pre>  <p>Thanks all!</p>"	2015-06-30 00:49:17.377 UTC	72102499	"<p>It is worth noting that this question has been answered at face value above with the accepted answer, but as @David Ehrmann mentioned in a comment in the question, it is preferred to use comprehensions instead of <code>map</code> and <code>filter</code>.</p> <p>Why is that? As stated in &quot;Effective Python, 2nd Edition&quot; by Brett Slatkin pg. 108, &quot;Unless you're applying a single-argument function, list comprehensions are also clearer than the <code>map</code> built-in function for simple cases. <code>map</code> requires the creation of a <code>lambda</code> function for the computation, which is visually noisy.&quot; I would add the same goes for <code>filter</code>.</p> <p>e.g. let's say I want to map and filter over a list to return the square of the items in the list, but only the even ones (this is an example from the book).</p> <p>Using the accepted answer's method of using lambdas:</p> <pre class=""lang-py prettyprint-override""><code>arr = [1,2,3,4] even_squares = list(map(lambda x: x**2, filter(lambda x: x%2 == 0, arr))) print(even_squares) # [4, 16] </code></pre> <p>Using comprehensions:</p> <pre class=""lang-py prettyprint-override""><code>arr = [1,2,3,4] even_squares = [x**2 for x in arr if x%2 == 0] print(even_squares) # [4, 16] </code></pre> <p>So, along with others, I would advise using comprehensions instead of <code>map</code> and <code>filter</code>. This <a href=""https://stackoverflow.com/questions/1247486/list-comprehension-vs-map"">question</a> dives into it even further.</p> <p>As far as <code>reduce</code> goes, <code>functools.reduce</code> still seems like the proper option.</p>"			2022-05-03 16:22:43.2 UTC
31127824	javascript|python	"What are Python's equivalent of Javascript's reduce(), map(), and filter()?"	"<p>What are Python's equivalent of the following (Javascript):</p>  <pre><code>function wordParts (currentPart, lastPart) {     return currentPart+lastPart; }  word = ['Che', 'mis', 'try']; console.log(word.reduce(wordParts)) </code></pre>  <p>and this:</p>  <pre><code>var places = [     {name: 'New York City', state: 'New York'},     {name: 'Oklahoma City', state: 'Oklahoma'},     {name: 'Albany', state: 'New York'},     {name: 'Long Island', state: 'New York'}, ]  var newYork = places.filter(function(x) { return x.state === 'New York'}) console.log(newYork) </code></pre>  <p>lastly, this:</p>  <pre><code>function greeting(name) {     console.log('Hello ' + name + '. How are you today?'); } names = ['Abby', 'Cabby', 'Babby', 'Mabby'];  var greet = names.map(greeting) </code></pre>  <p>Thanks all!</p>"	2015-06-30 00:49:17.377 UTC	31127990	"<p>The first is:    </p>  <pre><code>from functools import * def wordParts (currentPart, lastPart):     return currentPart+lastPart;   word = ['Che', 'mis', 'try'] print(reduce(wordParts, word)) </code></pre>"			2015-06-30 01:09:48.673 UTC
31127824	javascript|python	"What are Python's equivalent of Javascript's reduce(), map(), and filter()?"	"<p>What are Python's equivalent of the following (Javascript):</p>  <pre><code>function wordParts (currentPart, lastPart) {     return currentPart+lastPart; }  word = ['Che', 'mis', 'try']; console.log(word.reduce(wordParts)) </code></pre>  <p>and this:</p>  <pre><code>var places = [     {name: 'New York City', state: 'New York'},     {name: 'Oklahoma City', state: 'Oklahoma'},     {name: 'Albany', state: 'New York'},     {name: 'Long Island', state: 'New York'}, ]  var newYork = places.filter(function(x) { return x.state === 'New York'}) console.log(newYork) </code></pre>  <p>lastly, this:</p>  <pre><code>function greeting(name) {     console.log('Hello ' + name + '. How are you today?'); } names = ['Abby', 'Cabby', 'Babby', 'Mabby'];  var greet = names.map(greeting) </code></pre>  <p>Thanks all!</p>"	2015-06-30 00:49:17.377 UTC	31127863	"<pre><code>reduce(function, iterable[, initializer])  filter(function, iterable)  map(function, iterable, ...) </code></pre>  <p><a href=""https://docs.python.org/2/library/functions.html"" rel=""nofollow"">https://docs.python.org/2/library/functions.html</a></p>"			2015-06-30 00:54:11.543 UTC
31127824	javascript|python	"What are Python's equivalent of Javascript's reduce(), map(), and filter()?"	"<p>What are Python's equivalent of the following (Javascript):</p>  <pre><code>function wordParts (currentPart, lastPart) {     return currentPart+lastPart; }  word = ['Che', 'mis', 'try']; console.log(word.reduce(wordParts)) </code></pre>  <p>and this:</p>  <pre><code>var places = [     {name: 'New York City', state: 'New York'},     {name: 'Oklahoma City', state: 'Oklahoma'},     {name: 'Albany', state: 'New York'},     {name: 'Long Island', state: 'New York'}, ]  var newYork = places.filter(function(x) { return x.state === 'New York'}) console.log(newYork) </code></pre>  <p>lastly, this:</p>  <pre><code>function greeting(name) {     console.log('Hello ' + name + '. How are you today?'); } names = ['Abby', 'Cabby', 'Babby', 'Mabby'];  var greet = names.map(greeting) </code></pre>  <p>Thanks all!</p>"	2015-06-30 00:49:17.377 UTC	31127962	"<p>They are all similar, Lamdba functions are often passed as a parameter to these functions in python. </p>  <p>Reduce: </p>  <pre><code> &gt;&gt;&gt; from functools import reduce  &gt;&gt;&gt; reduce( (lambda x, y: x + y), [1, 2, 3, 4]  10 </code></pre>  <p>Filter:</p>  <pre><code>&gt;&gt;&gt; list( filter((lambda x: x &lt; 0), range(-10,5))) [-10, -9, -8, -7, - 6, -5, -4, -3, -2, -1] </code></pre>  <p>Map: </p>  <pre><code>&gt;&gt;&gt; list(map((lambda x: x **2), [1,2,3,4])) [1,4,9,16] </code></pre>  <p><a href=""https://docs.python.org/2/library/functions.html"">Docs</a></p>"			2015-06-30 01:06:46.77 UTC
31198167	javascript|python|selenium|phantomjs	Injecting a JavaScript script using Selenium Driver + PhantomJS and handling the redirection correctly in Python	"<p><strong>My problem is:</strong></p>  <p>I have being developing a Python script that connects to an URL, and using the selenium driver I manage to inject a Javascript file, after this file executes the currently page is redirected. This's all done using selenium to handle Firefox:</p>  <pre><code>driver = webdriver.Firefox(); </code></pre>  <p>, but when I try to use PhantomJS as the browser, since it doesn't have any graphical interface: </p>  <pre><code>driver = webdriver.PhantomJS(); </code></pre>  <p>I can't handle the response properly. Still haven't found out if the driver is not injecting the script correctly or if it's an response handling problem. If someone has any ideas it'll be great to hear.</p>"	2015-07-03 03:55:02.813 UTC	31198223	"<p>I posted this on another question, but I think this will help:</p>  <p>After dealing with this same dilemma myself, I can wholeheartedly recommend using your preferred Selenium webkit (mine is Chrome) in conjunction with <a href=""https://en.wikipedia.org/wiki/Xvfb"" rel=""nofollow"">XVFB</a>.</p>  <p>XVFB allows you to heedlessly run a browser like Firefox, Chrome, etc. which basically eradicates all of the bugginess that inherently comes with using PhantomJS. While it’s definitely an awesome piece, it’s inner workings tend to have different interactions at times (I ran into issues for instance with not being able to TAB from one element to another like one can in any browser). If you are using Jenkins, there is an incredibly awesome Plugin which literally takes one click of a button. Otherwise, I’d definitely recommend checking <a href=""https://gist.github.com/addyosmani/5336747"" rel=""nofollow"">this</a> out.</p>  <p>Phantom is a real pain in the ass, so it's definitely worth circumventing it :)</p>  <p>Hope this helps!</p>"			2015-07-03 04:00:55.483 UTC
31216574	javascript|python|web2py	How to pass data from python to javascript in web2py	"<p>I see some relevant posts to my query.</p>  <p>Tornado is used in the below link <a href=""https://stackoverflow.com/questions/27307563/how-to-pass-variable-from-python-to-javascript"">How to pass variable from python to javascript</a></p>  <p>I know that it can be done using json but I am not clear how to implement it. In the web2py default controller I am returning a dictionary which contains the latitudes and longitudes.</p>  <pre><code>def index():     lat_long_list=[]     info1 = {'lat':'1.0032','long':'2.00003','name':'Akash'}     info2 = {'lat':'1.2312','long':'-1.0034','name':'Kalyan'}     lat_long_list.append(info1)     lat_long_list.append(info2)     return dict(lat_long_list=lat_long_list) </code></pre>  <p>In java script I want to iterate through the list of dictionaries and mark the points on the google maps. </p>  <p>I cannot say</p>  <pre><code>&lt;script&gt;  {{ for lat_long_rec in lat_long_list :}}  var name = {{=lat_long_rec['name']}}  {{ pass }} &lt;/script&gt; </code></pre>  <p>This fails. An alternative to handle this is to write the list into an xml and from javascript read the file but I dont want to achieve it this way as writing to file is non performant. Let me know how best this can achieved.</p>"	2015-07-04 03:21:20.963 UTC	31222202	<p>Convert the Python list to JSON and pass that to the view to insert in the Javascript code:</p>  <pre><code>    from gluon.serializers import json     return dict(lat_long_list=json(lat_long_list)) </code></pre>  <p>In the view:</p>  <pre><code>&lt;script&gt;     ...     var latLongList = {{=XML(lat_long_list)}}     ... &lt;/script&gt; </code></pre>			2015-07-04 15:18:59.263 UTC
31251560	azure-eventhub	Azure Event Hub's Python SDK and JavaScript SDK no longer working?	"<p>So I've been using Azure Event Hubs for about a year now via Python, C# and JavaScript. Recently (week and a half), Python and JavaScript stopped working, with post requests returning 40100 unauthorized. Is anyone else having this issue as well? Was there some kind of update in the way you have to send post requests into Azure Event Hubs? Nothing in any of my previous apps have changed.</p>  <p>Python Azure SDK: azure 0.10.2 <a href=""https://pypi.python.org/pypi/azure/0.10.2"" rel=""nofollow"">https://pypi.python.org/pypi/azure/0.10.2</a></p>  <p>JavaScript Azure Service Bus SDK <a href=""https://github.com/ddobric/ServiceBusJavaScriptSdk"" rel=""nofollow"">https://github.com/ddobric/ServiceBusJavaScriptSdk</a></p>  <p>I've tried creating Event Hubs on two separate Azure accounts, @hotmail and a corporate subscription. I've given every access, from Event Hub level send policy, to manage policy, to Service Bus level RootManagedAccess Keys. None of these work.</p>  <p>I just tested this app, and it too is no longer able to send to an Event Hub. It's a connect-the-dots MSDN application for TI Sensor Tags. <a href=""https://github.com/sudheshk/TISensorToEventHub_WindowsForm"" rel=""nofollow"">https://github.com/sudheshk/TISensorToEventHub_WindowsForm</a></p>"	2015-07-06 16:59:22.837 UTC	31299596	<p>From what I can tell a SAS update to Event Hubs broke the publishing connection to Event Hubs. Looks like it got fixed today. Everything is working as intended once again.</p>			2015-07-08 17:27:46.27 UTC
31260437	javascript|console.log	Python print vs Javascript console.log()	"<p>In Python:</p>  <pre class=""lang-py prettyprint-override""><code>print [1,2], '\n', [3,4] </code></pre>  <p>would print</p>  <pre class=""lang-none prettyprint-override""><code>[1,2] [3,4] </code></pre>  <p>In Javascript:</p>  <pre><code>console.log([1,2],'\n',[3,4]) </code></pre>  <p>prints</p>  <pre class=""lang-none prettyprint-override""><code>[1,2] '\n' [3,4] </code></pre>  <p>What is the equivalent Javascript statement to the above Python <code>print</code>?</p>"	2015-07-07 05:31:04.337 UTC	31260494	"<p>To be safe, just split it into multiple <code>console.log</code> calls.</p>"			2015-07-07 05:35:45.503 UTC
31260437	javascript|console.log	Python print vs Javascript console.log()	"<p>In Python:</p>  <pre class=""lang-py prettyprint-override""><code>print [1,2], '\n', [3,4] </code></pre>  <p>would print</p>  <pre class=""lang-none prettyprint-override""><code>[1,2] [3,4] </code></pre>  <p>In Javascript:</p>  <pre><code>console.log([1,2],'\n',[3,4]) </code></pre>  <p>prints</p>  <pre class=""lang-none prettyprint-override""><code>[1,2] '\n' [3,4] </code></pre>  <p>What is the equivalent Javascript statement to the above Python <code>print</code>?</p>"	2015-07-07 05:31:04.337 UTC	37749407	"<p>You are sending three arguments to console.log</p>  <pre><code>console.log([1,2],'\n',[3,4]) </code></pre>  <p>Because the first argument, <code>[1,2]</code> doesn't contain formatting elements (e.g. <code>%d</code>), each argument is passed through <a href=""https://nodejs.org/api/util.html#util_util_inspect_object_options"" rel=""noreferrer"">util.inspect()</a>. util.inspect is returning the string representation of <code>'\n'</code> which is not what you want. You want <code>'\n'</code> to be interpreted.</p>  <p>One solution is to concatenate all arguments into one string</p>  <pre><code>&gt; console.log([1,2]+'\n'+[3,4]); 1,2 3,4 </code></pre>  <p>Another is to use formatting elements as placeholders, which util.format will substitute with two array's converted values.</p>  <pre><code>&gt; console.log('%s\n%s', [1,2], [3,4]); 1,2 3,4 </code></pre>  <p>I assumed node.js here, but the result in Mozilla is identical.</p>"			2016-06-10 13:22:25.72 UTC
31260437	javascript|console.log	Python print vs Javascript console.log()	"<p>In Python:</p>  <pre class=""lang-py prettyprint-override""><code>print [1,2], '\n', [3,4] </code></pre>  <p>would print</p>  <pre class=""lang-none prettyprint-override""><code>[1,2] [3,4] </code></pre>  <p>In Javascript:</p>  <pre><code>console.log([1,2],'\n',[3,4]) </code></pre>  <p>prints</p>  <pre class=""lang-none prettyprint-override""><code>[1,2] '\n' [3,4] </code></pre>  <p>What is the equivalent Javascript statement to the above Python <code>print</code>?</p>"	2015-07-07 05:31:04.337 UTC	54896893	"<p>Use this: print ([1,2], ""\'\n'"", [3,4]) Here backslash denotes that \n and ' ' shouldn't perform it's operation and print as it is. Use a \ before \n and ' '</p>"			2019-02-27 01:59:13.653 UTC
31263176	javascript|python|css|configuration	"Is there a configuration system for Python, JavaScript, and CSS?"	"<p>I have a project that is mostly Python code but also contains some HTML, JavaScript, and CSS. Depending on the build-target, some things have to be configured across the source files (e.g. some values for constants). </p>  <p>Is there a nice tool/technique that allows me to configure Python, JavaScript, and CSS with <em>one</em> configuration file upon build time? The configurations I'm talking about are merely string substitutions and nothing fancy.</p>  <p>Since the project is mostly Python code, I'd probably prefer to use ini-style configuration files and <a href=""https://docs.python.org/2/library/configparser.html"" rel=""nofollow"">ConfigParser</a> for Python, and re-use the configuration file for the rest of the source files as well.</p>"	2015-07-07 08:12:44.73 UTC	31386621	"<p>Looks like <a href=""http://cmake.org"" rel=""nofollow"">Cmake</a> and the <a href=""http://www.cmake.org/cmake/help/v3.0/command/configure_file.html"" rel=""nofollow"">configure_file</a> command come pretty close to my requirements. Together with out-of-source builds it is pretty easy to deploy different configurations in different directories. It does not use ini-stytle configuration files, though.</p>"			2015-07-13 14:50:48.75 UTC
31265258	javascript|python|publish|pubnub	Is it possible in Pubnub to subscribe via javascript and publish via python	<p>I am developing a dashboard application with Pubnub and EON Charts. Since my raw data lives in openstack I have to use python ceilometer API to get the data and then I am publishing the data via python and I think I will have to subscribe via Javascript since EON library is in Javascript. My question is: Is that possible to publish via one framework and subscribe via another. Is there any example documentation regarding this?</p>	2015-07-07 09:50:29.243 UTC	31273568	"<p>Yes, it is very much possible. In fact, that is the advantage of using <a href=""http://www.pubnub.com"" rel=""nofollow"">PubNub</a>. You can take advantage of the fact that we support so many different platforms - <a href=""http://www.pubnub.com/developers/"" rel=""nofollow"">70+ SDKs</a> including iOS, Android, JavaScript, .NET, Java, Ruby, Python, PHP and many more. We have had so many examples of this. For instance, a Raspberry Pi(python) publishing sensor readings to a browser(Javascript) to visualize it using Eon.</p>  <p>Some examples you can look at are : </p>  <ul> <li><a href=""http://www.pubnub.com/blog/trigger-raspberry-pi-hue-leds-from-android-ui/"" rel=""nofollow"">Triggering Raspberry Pi Hue LEDs from Android UI</a></li> <li><a href=""http://www.pubnub.com/blog/remote-control-raspberry-pi-leds-from-a-web-browser-ui/"" rel=""nofollow"">Remote Control Raspberry Pi LEDs from a Web Browser UI</a></li> </ul>  <p>The basic idea is that you publish on a channel, and subscribe to that channel. As long as you send a message, irrespective of the language/platform you use, you will be able to receive it. It doesn't matter whether you are publishing/subscribing to/from a device, mobile or PC, as long as you use PubNub.</p>  <p>So in your example specifically, as you mentioned, you will be publishing the data using our <a href=""http://www.pubnub.com/docs/python/pubnub-python-sdk"" rel=""nofollow"">python SDK</a> and be using <a href=""http://www.pubnub.com/developers/eon/"" rel=""nofollow"">Eon</a> to subscribe, which is a Javascript library. Eon provides a very simple way to subscribe and create great realtime charts. </p>  <p>You can find a lot more examples on our <a href=""http://www.pubnub.com/blog/"" rel=""nofollow"">blog</a>.</p>"			2015-07-07 15:53:54.743 UTC
31279496	javascript|python|html|datatable	How to scrape a javascript table with python	"<p>I am trying to scrape the table from this page: <a href=""http://data.eastmoney.com/xg/xg/"" rel=""nofollow"">http://data.eastmoney.com/xg/xg/</a> There are 18 separate pages and the url does not change for each page.</p>  <p>How would I go about trying to scrape this data? I usually use BeautifulSoup to scrape HTML pages, but in this case the data does not come up in the HTML code, so I cannot use BeautifulSoup on the url to get the data I need.</p>  <p>Any suggestions would be much appreciated.</p>"	2015-07-07 21:21:30.433 UTC	31279638	"<p>Well looking at the source of that page it is just making a call to this url which seems to be returning a csv type file you can figure out how to process. </p>  <p><code>http://datainterface.eastmoney.com/EM_DataCenter/JS.aspx?type=NS&amp;sty=NSST&amp;st=12&amp;sr=-1&amp;p=1&amp;ps=50&amp;js=var%20IBnVRrwA={pages:%28pc%29,data:[%28x%29]}&amp;stat=1&amp;rt=47876809</code></p>  <p>The bottom line is you shouldn't need to scrape this table</p>  <p>Look at the <code>&amp;ps=50</code> value this is the limit, put that to something like <code>&amp;ps=5000</code> and you shouldn't need to from page to page.</p>  <p>the <code>&amp;js=var%20IBnVRrwA={pages:%28pc%29,data:[%28x%29]}</code> bit is the jsonp callback?</p>"			2015-07-07 21:30:47.303 UTC
31305484	javascript|python|random|mersenne-twister	How can I generate the same random number in JavaScript and Python?	"<p>In Python, if I use this code:</p>  <pre><code>import random random.seed(123) print(random.random()) </code></pre>  <p>The first random number will always be <code>0.052363598850944326</code>, since I'm giving it the same seed every time I run the program.</p>  <p>JavaScript doesn't have a built-in way to use seeds. I've tried out a JavaScript script called <a href=""https://gist.github.com/banksean/300494"" rel=""nofollow"">mersenne-twister.js</a>, since that's the type of PRNG that Python uses. But even if I use the same seed, I get a different result than I do in Python.</p>  <pre><code>var m = new MersenneTwister(123); m.genrand_int32(); </code></pre>  <p>That code will always return <code>0.6964691872708499</code> the first time that it's run.</p>  <p>How can I use a given seed to get the same random number in both Python and JavaScript?</p>"	2015-07-08 23:17:55.107 UTC	31305652	"<p>This library/plugin worked for me when I compared the Python output to the JavaScript output.</p>  <p><a href=""https://github.com/davidbau/seedrandom"" rel=""nofollow"">https://github.com/davidbau/seedrandom</a></p>"			2015-07-08 23:34:41.097 UTC
31305484	javascript|python|random|mersenne-twister	How can I generate the same random number in JavaScript and Python?	"<p>In Python, if I use this code:</p>  <pre><code>import random random.seed(123) print(random.random()) </code></pre>  <p>The first random number will always be <code>0.052363598850944326</code>, since I'm giving it the same seed every time I run the program.</p>  <p>JavaScript doesn't have a built-in way to use seeds. I've tried out a JavaScript script called <a href=""https://gist.github.com/banksean/300494"" rel=""nofollow"">mersenne-twister.js</a>, since that's the type of PRNG that Python uses. But even if I use the same seed, I get a different result than I do in Python.</p>  <pre><code>var m = new MersenneTwister(123); m.genrand_int32(); </code></pre>  <p>That code will always return <code>0.6964691872708499</code> the first time that it's run.</p>  <p>How can I use a given seed to get the same random number in both Python and JavaScript?</p>"	2015-07-08 23:17:55.107 UTC	47735632	"<p>If you don't need a cryptographically secure pseudorandom number generator, you could use something like this, using the decimals of sinus function.</p>  <p>In python:</p>  <pre><code>import math def simple_random(precision=10000):     i = 1     while 1:         x = math.sin(i) * precision         yield x - math.floor(x)         i += 1 </code></pre>  <p>In Javascript:</p>  <pre><code>var i = 1; function simple_random(precision=10000) {     x = Math.sin(i++) * precision;     return x - Math.floor(x); } </code></pre>  <p>If you want to vary seeds, you could use something like sin(a * i + b) rather than sin(i) or a * sin(i + b), it's up to you to find something good enough.</p>"			2017-12-10 03:36:13.417 UTC
31307147	javascript|python|html|forms|local	Sending data from JavaScript to Python LOCALLY	"<p>I am writing a program that opens an html form in a browser window.  From there, I need to get the data entered in the form and use it in python code.  This has to be done completely locally.  I do not have access to a webserver or I would be using PHP.  I have plenty of experience with Python but not as much experience with JavaScript and no experience with AJAX.  Please help!  If you need any more information to answer the question, just ask. All answers are greatly appreciated.</p>"	2015-07-09 02:35:13.263 UTC	31307321	<p>The browsers security model prevents sending data to local processes. Your options are:</p>  <ul> <li>Write a browser extension that calls a python script.</li> <li>Run a local webserver. Most Python web development frameworks have a simple one included.</li> </ul>			2015-07-09 02:54:21.923 UTC
31331508	javascript|python|django	Convert Javascript function to python	"<p>I have a function which takes values from two classes and maps it into an array. The array then gets pushed into a send email function.  </p>  <pre><code>    var p1 = document.getElementsByClassName('emailtest'),         email = [].map.call(p1, function(email) {             return email.value;         }).join(',');      var p2 = document.getElementsByClassName('reciptest'),         rname = [].map.call(p2, function(rname) {             return rname.value;         }).join(',');  var to = [];     var p3 = email.split(',');     var p4 = rname.split(',');      p3.forEach(function(em, i) {         var recipient = {             email: em,             name: null,             type: 'to'         };         if (p4.length &gt; i)             recipient = p4[i];          to.push(recipient);     }); </code></pre>  <p>How would I implement this in python and more specifically django ? I have a rough idea on splitting the strings but am not sure how to convert the last section p3.forEach(function(em, i) and to.push(recipient)</p>"	2015-07-10 02:29:40.287 UTC	31331561	"<p>Try this out:</p>  <pre><code>to = [] p3 = email.split(',') p4 = rname.split(',') for i,em in enumerate(p3):     recipient = {'email': em, 'name': None, 'type': to}     if len(p4) &gt; i:         recipient = p4[i]     to.append(recipient) </code></pre>"			2015-07-10 02:35:37.847 UTC
31336912	javascript|jquery|python|django	Post to Python view after Javascript validation in Django	"<p>I have a template that has a form with two input boxes. The problem is that I need to ensure that only one of either box has a filled value. That is, one text box should be empty. Since Django doesn't provide this kind of an OR mechanism, I am checking this through Javascript in the template:</p>  <pre><code>function validateData() {     if ($(""#email"").val() &amp;&amp; $(""#cellno"").val()){         alert(""Please Enter either E-Mail Address or Cell Number"");     } else {         alert(""Form submitted successfully"");         // redirect to view_2     } } </code></pre>  <p>The issue is that I want to send the data from the textbox to view_2. How can I send the value of the textbox and also perform the validation? Without the JS validation I could have simply added the url to the form action. </p>"	2015-07-10 09:13:53.127 UTC	31337137	"<p>I would say you should attach your function to the <code>submit</code> event and prevent submitting when validation fails.</p>  <p>Maybe something like this:</p>  <pre><code>$(""form"").submit(function(event) {     if ($(""#email"").val() &amp;&amp; $(""#cellno"").val()){         alert(""Please Enter either E-Mail Address or Cell Number"");         event.preventDefault(); // this prevents the submitting.     } else {         alert(""Form submitted successfully"");     } }); </code></pre>"			2015-07-10 09:24:00.11 UTC
31336912	javascript|jquery|python|django	Post to Python view after Javascript validation in Django	"<p>I have a template that has a form with two input boxes. The problem is that I need to ensure that only one of either box has a filled value. That is, one text box should be empty. Since Django doesn't provide this kind of an OR mechanism, I am checking this through Javascript in the template:</p>  <pre><code>function validateData() {     if ($(""#email"").val() &amp;&amp; $(""#cellno"").val()){         alert(""Please Enter either E-Mail Address or Cell Number"");     } else {         alert(""Form submitted successfully"");         // redirect to view_2     } } </code></pre>  <p>The issue is that I want to send the data from the textbox to view_2. How can I send the value of the textbox and also perform the validation? Without the JS validation I could have simply added the url to the form action. </p>"	2015-07-10 09:13:53.127 UTC	31337054	"<p>I'm not sure what you mean by 'Django doesn't provide this kind of or mechanism'. If you're using Django forms in your view, you can write a clean method that <a href=""https://docs.djangoproject.com/en/1.8/ref/forms/validation/#cleaning-and-validating-fields-that-depend-on-each-other"" rel=""nofollow"">validates fields that depend on each other</a>.</p>  <pre><code>class MyForm(forms.Form):     email = forms.EmailField(required=False)     cell = forms.CharField(required=False, max_length=20)      def clean(self):         cleaned_data = super(MyForm, self).clean()         if cleaned_data.get('email') and cleaned_data.get('cell'):             raise forms.ValidationError(""Please select either E-mail address or cell number, but not both"")         return cleaned_data </code></pre>"			2015-07-10 09:21:15.063 UTC
31353213	javascript|python	Does JavaScript support array/list comprehensions like Python?	<p>I'm practicing/studying both JavaScript and Python.  I'm wondering if Javascript has the equivalence to this type of coding.</p>  <p>I'm basically trying to get an array from each individual integer from the string for practice purposes.  I'm more proficient in Python than JavaScript</p>  <p>Python:</p>  <pre><code>string = '1234-5'  forbidden = '-'  print([int(i) for i in str(string) if i not in forbidden]) </code></pre>  <p>Does Javascript have something similar for me to do above?</p>	2015-07-11 03:49:29.81 UTC	50457584	"<p>JavaScript no longer supports array comprehensions.</p>  <p>I too was looking for the JavaScript equivalent.  Mozilla Developer's <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Array_comprehensions"" rel=""nofollow noreferrer"">Network indicates that this functionality is no longer supported.</a> The preferred syntax is referenced in the aforementioned link.</p>"			2018-05-21 22:56:36.44 UTC
31353213	javascript|python	Does JavaScript support array/list comprehensions like Python?	<p>I'm practicing/studying both JavaScript and Python.  I'm wondering if Javascript has the equivalence to this type of coding.</p>  <p>I'm basically trying to get an array from each individual integer from the string for practice purposes.  I'm more proficient in Python than JavaScript</p>  <p>Python:</p>  <pre><code>string = '1234-5'  forbidden = '-'  print([int(i) for i in str(string) if i not in forbidden]) </code></pre>  <p>Does Javascript have something similar for me to do above?</p>	2015-07-11 03:49:29.81 UTC	43968899	"<p>You could easily achieve this behavior using an application functor.</p>  <pre><code>Array.prototype.ap = function(xs) {   return this.reduce((acc, f) =&gt; acc.concat(xs.map(f)), [])  }   const result = [x =&gt; x +1].ap([2]) console.log(result) </code></pre>"			2017-05-14 21:19:01.353 UTC
31353213	javascript|python	Does JavaScript support array/list comprehensions like Python?	<p>I'm practicing/studying both JavaScript and Python.  I'm wondering if Javascript has the equivalence to this type of coding.</p>  <p>I'm basically trying to get an array from each individual integer from the string for practice purposes.  I'm more proficient in Python than JavaScript</p>  <p>Python:</p>  <pre><code>string = '1234-5'  forbidden = '-'  print([int(i) for i in str(string) if i not in forbidden]) </code></pre>  <p>Does Javascript have something similar for me to do above?</p>	2015-07-11 03:49:29.81 UTC	69942131	"<p>You could have a look at CoffeeScript. CoffeeScript adds missing features to java-script and allows you to write cleaner, more readable code. <a href=""https://coffeescript.org/#coffeescript-2"" rel=""nofollow noreferrer"">https://coffeescript.org/#coffeescript-2</a></p> <p>You write a .coffee file and the coffeScript-compiler compiles your coffee file into a JavaScript file. Because the translation into JavaScript happens by compiling, the script should not run any slower.</p> <p>So your code would look like the following in coffee script:</p> <pre class=""lang-coffee prettyprint-override""><code>string = '1234-5'  forbidden = '-'  alert(JSON.stringify(+i for i in string when i isnt forbidden)) </code></pre> <p>Honestly, this is even easier to read then the python counterpart. And it compiles quickly to the fallowing JavaScript:</p> <pre class=""lang-js prettyprint-override""><code>var forbidden, i, string;  string = '1234-5';  forbidden = '-';  alert(JSON.stringify((function() {   var j, len, results;   results = [];   for (j = 0, len = string.length; j &lt; len; j++) {     i = string[j];     if (i !== forbidden) {       results.push(+i);     }   }   return results; })())); </code></pre> <p>You don’t even need to install anything. On their website you can play around with it, and it will show you the translated JavaScript code.</p>"			2021-11-12 11:20:47.233 UTC
31353213	javascript|python	Does JavaScript support array/list comprehensions like Python?	<p>I'm practicing/studying both JavaScript and Python.  I'm wondering if Javascript has the equivalence to this type of coding.</p>  <p>I'm basically trying to get an array from each individual integer from the string for practice purposes.  I'm more proficient in Python than JavaScript</p>  <p>Python:</p>  <pre><code>string = '1234-5'  forbidden = '-'  print([int(i) for i in str(string) if i not in forbidden]) </code></pre>  <p>Does Javascript have something similar for me to do above?</p>	2015-07-11 03:49:29.81 UTC	31353232	"<p>Not directly, but it's not hard to replicate.</p>  <pre><code>var string = ""1234-5"";  var forbidden = ""-"";  string.split("""").filter(function(str){     if(forbidden.indexOf(str) &lt; 0) {         return str;     } }).forEach(function(letter) { console.log(letter);}); </code></pre>  <p>I guess more directly:</p>  <pre><code>for(var i=0 ; i &lt; str.length ; i++) {     if(forbidden.indexOf(str) &lt; 0) {         console.log(str[i]);     } } </code></pre>  <p>But there's no built in way to filter in your for loop.</p>"			2015-07-11 03:54:01.907 UTC
31353213	javascript|python	Does JavaScript support array/list comprehensions like Python?	<p>I'm practicing/studying both JavaScript and Python.  I'm wondering if Javascript has the equivalence to this type of coding.</p>  <p>I'm basically trying to get an array from each individual integer from the string for practice purposes.  I'm more proficient in Python than JavaScript</p>  <p>Python:</p>  <pre><code>string = '1234-5'  forbidden = '-'  print([int(i) for i in str(string) if i not in forbidden]) </code></pre>  <p>Does Javascript have something similar for me to do above?</p>	2015-07-11 03:49:29.81 UTC	31353251	"<p>Reading the code, I assume forbidden can have more than 1 character. I'm also assuming the output should be ""12345""</p>  <pre><code>var string = ""12=34-5"";  var forbidden = ""=-"";  console.log(string.split("""").filter(function(str){     return forbidden.indexOf(str) &lt; 0; }).join("""")) </code></pre>  <p>If the output is ""1"" ""2"" ""3"" ""4"" ""5"" on separate lines</p>  <pre><code>var string = ""12=34-5"";  var forbidden = ""=-"";  string.split("""").forEach(function(str){     if (forbidden.indexOf(str) &lt; 0) {         console.log(str);     } }); </code></pre>"			2015-07-11 03:58:41.99 UTC
31353213	javascript|python	Does JavaScript support array/list comprehensions like Python?	<p>I'm practicing/studying both JavaScript and Python.  I'm wondering if Javascript has the equivalence to this type of coding.</p>  <p>I'm basically trying to get an array from each individual integer from the string for practice purposes.  I'm more proficient in Python than JavaScript</p>  <p>Python:</p>  <pre><code>string = '1234-5'  forbidden = '-'  print([int(i) for i in str(string) if i not in forbidden]) </code></pre>  <p>Does Javascript have something similar for me to do above?</p>	2015-07-11 03:49:29.81 UTC	31353471	"<p>For ""completeness""-sake, here's a shorter regexp version.</p>  <pre><code>var str =  ""1234-5""; var ignore = ""-="";  console.log(str.replace(new RegExp(ignore.split("""").join(""|"")), """").split("""")); </code></pre>  <p>EDIT: To make sure that RegExp does not ""choke"" on special characters, <code>ignore</code> can be implemented as regexp literal, instead of a string:</p>  <pre><code>var str =  ""1234-5""; var ignore = /[\+=-]/; console.log(str.replace(ignore, """").split("""")); </code></pre>"			2015-07-11 04:37:28.06 UTC
31353213	javascript|python	Does JavaScript support array/list comprehensions like Python?	<p>I'm practicing/studying both JavaScript and Python.  I'm wondering if Javascript has the equivalence to this type of coding.</p>  <p>I'm basically trying to get an array from each individual integer from the string for practice purposes.  I'm more proficient in Python than JavaScript</p>  <p>Python:</p>  <pre><code>string = '1234-5'  forbidden = '-'  print([int(i) for i in str(string) if i not in forbidden]) </code></pre>  <p>Does Javascript have something similar for me to do above?</p>	2015-07-11 03:49:29.81 UTC	31353252	"<p><strong>Update:</strong> Array comprehensions were removed from the standard. Quoting <a href=""https://developer.mozilla.org/en-US/docs/Archive/Web/JavaScript/Array_comprehensions"" rel=""noreferrer"">MDN</a>:</p> <blockquote> <p>The array comprehensions syntax is non-standard and removed starting with Firefox 58. For future-facing usages, consider using Array.prototype.map, Array.prototype.filter, arrow functions, and spread syntax.</p> </blockquote> <p>See <a href=""https://stackoverflow.com/a/33873355/3583139"">this answer</a> for an example with <code>Array.prototype.map</code>:</p> <p><code>let emails = people.map(({ email }) =&gt; email);</code></p> <p><strong>Original answer:</strong></p> <p>Yes, JavaScript will support <a href=""https://developer.mozilla.org/en-US/docs/Archive/Web/JavaScript/Array_comprehensions"" rel=""noreferrer"">array comprehensions</a> in the upcoming EcmaScript version 7.</p> <p>Here's an <a href=""https://babeljs.io/repl/#?experimental=true&amp;evaluate=true&amp;loose=true&amp;spec=true&amp;code=%20%20%20%20var%20str%20%3D%20%20%221234-5%22%3B%0D%0A%20%20%20%20var%20ignore%20%3D%20%22-%22%3B%0D%0A%20%20%20%20%0D%0A%20%20%20%20console.log(%5Bfor%20(i%20of%20str)%20if%20(!ignore.includes(i))%20i%5D)%3B"" rel=""noreferrer"">example</a>.</p> <pre><code>var str =  &quot;1234-5&quot;; var ignore = &quot;-&quot;;  console.log([for (i of str) if (!ignore.includes(i)) i]); </code></pre>"			2015-07-11 03:58:47.14 UTC
31353213	javascript|python	Does JavaScript support array/list comprehensions like Python?	<p>I'm practicing/studying both JavaScript and Python.  I'm wondering if Javascript has the equivalence to this type of coding.</p>  <p>I'm basically trying to get an array from each individual integer from the string for practice purposes.  I'm more proficient in Python than JavaScript</p>  <p>Python:</p>  <pre><code>string = '1234-5'  forbidden = '-'  print([int(i) for i in str(string) if i not in forbidden]) </code></pre>  <p>Does Javascript have something similar for me to do above?</p>	2015-07-11 03:49:29.81 UTC	42227735	"<p>It does have a poor mans version</p>  <pre><code>const string = '1234-5'  const forbidden = '-'  print([int(i) for i in str(string) if i not in forbidden]) const result = string.split('').filter(char =&gt; char !== forbidden); console.log(result) </code></pre>  <p>In JS you can only iterate over single elements in array, so no extraction of multiple entries at a time like in Python.</p>  <p>For this particular case you should use a RegExp to filter the string though.</p>"			2017-02-14 13:43:08.55 UTC
31353213	javascript|python	Does JavaScript support array/list comprehensions like Python?	<p>I'm practicing/studying both JavaScript and Python.  I'm wondering if Javascript has the equivalence to this type of coding.</p>  <p>I'm basically trying to get an array from each individual integer from the string for practice purposes.  I'm more proficient in Python than JavaScript</p>  <p>Python:</p>  <pre><code>string = '1234-5'  forbidden = '-'  print([int(i) for i in str(string) if i not in forbidden]) </code></pre>  <p>Does Javascript have something similar for me to do above?</p>	2015-07-11 03:49:29.81 UTC	46573004	"<p>Given the question's Python code</p>  <pre><code>print([int(i) for i in str(string) if i not in forbidden]) </code></pre>  <p>this is the most <strong>direct</strong> translation to JavaScript (ES2015):</p>  <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-js lang-js prettyprint-override""><code>const string = '1234-5'; const forbidden = '-';  console.log([...string].filter(c =&gt; !forbidden.includes(c)).map(c =&gt; parseInt(c))); // result: [ 1, 2, 3, 4, 5 ]</code></pre> </div> </div> </p>  <p>Here is a comparison of the Python and JavaScript code elements being used: (Python -> Javascript):</p>  <ul> <li>print -> console.log</li> <li>iterate over characters in a string -> <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_operator"" rel=""noreferrer"">spread operator</a></li> <li>list comprehension 'if' -> <code>Array.filter</code></li> <li>list comprehension 'for' -> <code>Array.map</code></li> <li>substr in str? -> string.includes</li> </ul>"			2017-10-04 19:47:12.133 UTC
31357718	ipython|jupyter	IPython Javascript client API	"<p>Does IPython provide a Javascript client API for interfacing to a kernel server? </p>  <p>I had a look at <a href=""https://ipython.org/ipython-doc/dev/development/messaging.html"" rel=""nofollow"">https://ipython.org/ipython-doc/dev/development/messaging.html</a> which explains the wire protocol between a front-end and a kernel.</p>  <p>I would be interested in finding out how the current web client communicates with a kernel and in particular how I could leverage JavaScript in order to programmatically create new notebooks from my own custom web client</p>  <p>Thanks</p>"	2015-07-11 13:34:26.727 UTC	42418784	"<p>See <a href=""https://gist.github.com/disarticulate/d06069ff3e71cf828e5329beab8cb084"" rel=""nofollow noreferrer"">https://gist.github.com/disarticulate/d06069ff3e71cf828e5329beab8cb084</a></p>  <p>There you can see a nice example:</p>  <pre><code>// a very basic output handling var handle_output = function (data) {console.log(data);}  //callbacks is an object whose so special, it appears to only have been documented in //the source code, as no only google found me a link. //callbacks.iopub.output is used to get the data from execute var callbacks = {         iopub : {              output : handle_output,     } }  //execute anything you want; if a string value is returned //you can print it out and pass it to the callbacks  //(or do other things, no idea, it's poorly documented online  //(read the source F12-&gt;static/notebook/js/services/kernels/kernel.js) //kernel.js/Kernel.prototype.execute  var kernel = IPython.notebook.kernel; kernel.execute(""print(json.dumps(python_dict))"",callbacks) </code></pre>  <p>You can see the definition going to in /static/services/kernels/kernel.js</p>"			2017-02-23 14:38:57.467 UTC
31403321	javascript|python-2.7|pdf|acrobat	How can i use the Javascript in adobe Acrobat to run a Python Script?	"<p>I'm bit new to adobe acrobat JavaScript. I was wondering if it is possible to have a click button in the pdf, once i click it, it will run a JavaScript which will run a python code automatically? Thanks in advance.</p>"	2015-07-14 09:53:11.063 UTC	31418813	"<p>Not possible.</p>  <p>And that is good so, because allowing such things would be extremely unsafe.</p>"			2015-07-14 22:57:39.847 UTC
31436679	javascript|python|asp.net|web-scraping	"How to download a file from a link which is javascript enabled, in Python?"	"<p>I have a list of weblinks in a list. I want to go to every link in the list and download a file from the opened website which is another link on the opened page and is javascript enabled!</p>  <p>The list of weblinks are like this:</p>  <pre><code>['""http://www.energychoice.ohio.gov/ApplesToApplesComparision.aspx?Category=Electric&amp;TerritoryId=2&amp;RateCode=1""', ]  </code></pre>  <p>and more links similar to the shown are in the list. </p>  <p>I need to go to every link which will open a website and that would have the download file ""Export offers to XML"". This link is javascript enabled.</p>  <p>I am a newbie in Python. I am using python 2.7 on ubuntu.</p>  <p>Any help would be appreciated! </p>"	2015-07-15 17:05:09.407 UTC	31447688	"<ol> <li><p>Look at the link content for file download:</p>  <p><code>&lt;a id=""ctl00_ContentPlaceHolder1_lnkExportToExcel"" href=""javascript:__doPostBack(&amp;#39;ctl00$ContentPlaceHolder1$lnkExportToExcel&amp;#39;,&amp;#39;&amp;#39;)""&gt;Export offers to XML&lt;/a&gt;</code> Here comes the <strong>__doPostBack()</strong> js function. </p></li> <li>I've found this function in code:  <code>&lt;script type=""text/javascript""&gt; //&lt;![CDATA[ var theForm = document.forms['aspnetForm']; if (!theForm) {     theForm = document.aspnetForm; } function __doPostBack(eventTarget, eventArgument) {     if (!theForm.onsubmit || (theForm.onsubmit() != false)) {         theForm.__EVENTTARGET.value = eventTarget;         theForm.__EVENTARGUMENT.value = eventArgument;         theForm.submit();     } } //]]&gt; &lt;/script&gt; </code>   Where it's obviously the function submits a form. Form id is <strong>aspnetForm</strong>.</li> <li><p>I found this form in the code too:<code>&lt;form method=""post"" action=""ApplesToApplesComparision.aspx?Category=Electric&amp;amp;TerritoryId=2&amp;amp;RateCode=1"" id=""aspnetForm""&gt; &lt;div class=""aspNetHidden""&gt; &lt;input type=""hidden"" name=""__EVENTTARGET"" id=""__EVENTTARGET"" value="""" /&gt; &lt;input type=""hidden"" name=""__EVENTARGUMENT"" id=""__EVENTARGUMENT"" value="""" /&gt; &lt;input type=""hidden"" name=""__VIEWSTATE"" id=""__VIEWSTATE"" value=""qqEqj+MJZCXWWypTsbeT2OudaHSwkSmxn4MMtBuWopgD50psDlTzoVSH0gMVRNktX7EW7I2uWKnF9IzD8/BkloDdz+4OSdWS7MbiJaQ2KVBHoZCFqMN0IgLe82fkuPJxk/wf1h/ZWYjOwi5XRTLZEy4JKRc...</code></p>  <blockquote>   <p>Dealing with ASP.NET remember they <strong>try to save/handle state of HTTP requests in a special variable: <code>__VIEWSTATE</code></strong>. So each request (to and fro) this variable (input field in a form) is getting changed (increasing). Therefore it's vital to send requests thru this very form with <code>__VIEWSTATE</code>.   </p> </blockquote></li> <li><p>I recommend you to simulate a form in python, it having been loaded with parameters from a needed link and especially with parameter <code>__VIEWSTATE</code> from the real form of a scraped page. See below the shot with important info on the clicking a link and following form submit:<img src=""https://i.stack.imgur.com/0rMu2.png"" alt=""enter image description here""></p></li> </ol>"			2015-07-16 07:17:59.793 UTC
31442119	javascript|python|ajax|mechanize|mechanize-python	"Mechanize and Python, clicking href=""javascript:void(0);"" links and getting the response back"	"<p>I need to scrap some data from page, where I fill out the form (already did this with mechanize). The problem is, the page returns data on many pages, and I have troubles from getting the data from those pages. </p>  <p>There's no problem to get them from the first result page, since it displays already after the search - I simply submit the form and get the response. </p>  <p>I analyzed the source code of the results page and it seems it uses Java Script, RichFaces (some lib for JSF with ajax but I can be wrong since I am not a web expert).</p>  <p>However, I managed to figure out how to get to the remaining result pages. I need to click links which are in this form (<code>href=""javascript:void(0);""</code>, full code below):</p>  <pre><code>&lt;td class=""pageNumber""&gt;&lt;span class=""rf-ds "" id=""SomeSimpleForm:SomeSimpleTable:j_idt211:j_idt233""&gt;&lt;span class=""rf-ds-nmb-btn rf-ds-act "" id=""SomeSimpleForm:SomeSimpleTable:j_idt211:j_idt233_ds_1""&gt;1&lt;/span&gt;&lt;a class=""rf-ds-nmb-btn "" href=""javascript:void(0);"" id=""SomeSimpleForm:SomeSimpleTable:j_idt211:j_idt233_ds_2""&gt;2&lt;/a&gt;&lt;a class=""rf-ds-nmb-btn "" href=""javascript:void(0);"" id=""SomeSimpleForm:SomeSimpleTable:j_idt211:j_idt233_ds_3""&gt;3&lt;/a&gt;&lt;a class=""rf-ds-nmb-btn "" href=""javascript:void(0);"" id=""SomeSimpleForm:SomeSimpleTable:j_idt211:j_idt233_ds_4""&gt;4&lt;/a&gt;&lt;a class=""rf-ds-nmb-btn "" href=""javascript:void(0);"" id=""SomeSimpleForm:SomeSimpleTable:j_idt211:j_idt233_ds_5""&gt;5&lt;/a&gt;&lt;a class=""rf-ds-nmb-btn "" href=""javascript:void(0);"" id=""SomeSimpleForm:SomeSimpleTable:j_idt211:j_idt233_ds_6""&gt;6&lt;/a&gt;&lt;a class=""rf-ds-nmb-btn "" href=""javascript:void(0);"" id=""SomeSimpleForm:SomeSimpleTable:j_idt211:j_idt233_ds_7""&gt;7&lt;/a&gt;&lt;a class=""rf-ds-nmb-btn "" href=""javascript:void(0);"" id=""SomeSimpleForm:SomeSimpleTable:j_idt211:j_idt233_ds_8""&gt;8&lt;/a&gt;&lt;a class=""rf-ds-nmb-btn "" href=""javascript:void(0);"" id=""SomeSimpleForm:SomeSimpleTable:j_idt211:j_idt233_ds_9""&gt;9&lt;/a&gt;&lt;a class=""rf-ds-nmb-btn "" href=""javascript:void(0);"" id=""SomeSimpleForm:SomeSimpleTable:j_idt211:j_idt233_ds_10""&gt;10&lt;/a&gt;&lt;a class=""rf-ds-btn rf-ds-btn-next"" href=""javascript:void(0);"" id=""SomeSimpleForm:SomeSimpleTable:j_idt211:j_idt233_ds_next""&gt;»&lt;/a&gt;&lt;a class=""rf-ds-btn rf-ds-btn-last"" href=""javascript:void(0);"" id=""SomeSimpleForm:SomeSimpleTable:j_idt211:j_idt233_ds_l""&gt;»»»»&lt;/a&gt;  &lt;script type=""text/javascript""&gt;new RichFaces.ui.DataScroller(""SomeSimpleForm:SomeSimpleTable:j_idt211:j_idt233"",function(event,element,data){RichFaces.ajax(""SomeSimpleForm:SomeSimpleTable:j_idt211:j_idt233"",event,{""parameters"":{""SomeSimpleForm:SomeSimpleTable:j_idt211:j_idt233:page"":data.page} ,""incId"":""1""} )},{""digitals"":{""SomeSimpleForm:SomeSimpleTable:j_idt211:j_idt233_ds_9"":""9"",""SomeSimpleForm:SomeSimpleTable:j_idt211:j_idt233_ds_8"":""8"",""SomeSimpleForm:SomeSimpleTable:j_idt211:j_idt233_ds_7"":""7"",""SomeSimpleForm:SomeSimpleTable:j_idt211:j_idt233_ds_6"":""6"",""SomeSimpleForm:SomeSimpleTable:j_idt211:j_idt233_ds_5"":""5"",""SomeSimpleForm:SomeSimpleTable:j_idt211:j_idt233_ds_4"":""4"",""SomeSimpleForm:SomeSimpleTable:j_idt211:j_idt233_ds_3"":""3"",""SomeSimpleForm:SomeSimpleTable:j_idt211:j_idt233_ds_1"":""1"",""SomeSimpleForm:SomeSimpleTable:j_idt211:j_idt233_ds_10"":""10"",""SomeSimpleForm:SomeSimpleTable:j_idt211:j_idt233_ds_2"":""2""} ,""buttons"":{""right"":{""SomeSimpleForm:SomeSimpleTable:j_idt211:j_idt233_ds_next"":""next"",""SomeSimpleForm:SomeSimpleTable:j_idt211:j_idt233_ds_l"":""last""} } ,""currentPage"":1} )&lt;/script&gt;&lt;/span&gt;&lt;/td&gt; &lt;td class=""pageExport""&gt;&lt;script type=""text/javascript"" src=""/opi/javax.faces.resource/download.js?ln=js/component&amp;amp;b=""&gt;&lt;/script&gt;&lt;script type=""text/javascript""&gt; </code></pre>  <p>So I would like to ask if there's a way to click all the links and get all the pages using mechanize (note, that after <code>»</code> symbol there are more pages available)? I ask about answers for total dummies with web knowledge :) </p>"	2015-07-15 22:13:40.343 UTC	31491605	"<p>First of all, I would still stick to selenium since this is a quite ""javascript-heavy"" website. Note that you can use a headless browser (<a href=""http://phantomjs.org/"" rel=""nofollow noreferrer""><code>PhantomJS</code></a> or with a <a href=""https://stackoverflow.com/questions/6183276/how-do-i-run-selenium-in-xvfb"">virtual display</a>) if needed.</p>  <p>The idea here would be to paginate by 100 rows per page, click on the "">>"" link until it is not present on page, which would mean we've hit the last page and there are no more results to process. In order to make the solution reliable we need to use <a href=""https://selenium-python.readthedocs.org/waits.html#explicit-waits"" rel=""nofollow noreferrer"">Explicit Waits</a>: every time we proceed to a next page - wait for invisibility of the loading spinner.</p>  <p>Working implementation:</p>  <pre><code># -*- coding: utf-8 -*- from selenium.common.exceptions import NoSuchElementException from selenium.webdriver.common.by import By from selenium import webdriver from selenium.webdriver.support.select import Select from selenium.webdriver.support.wait import WebDriverWait from selenium.webdriver.support import expected_conditions as EC  driver = webdriver.Firefox() driver.maximize_window()  driver.get('https://polon.nauka.gov.pl/opi/aa/drh/zestawienie?execution=e1s1') wait = WebDriverWait(driver, 30)  # paginate by 100 select = Select(driver.find_element_by_id(""drhPageForm:drhPageTable:j_idt211:j_idt214:j_idt220"")) select.select_by_visible_text(""100"")  while True:     # wait until there is no loading spinner     wait.until(EC.invisibility_of_element_located((By.ID, ""loadingPopup_content_scroller"")))      current_page = driver.find_element_by_class_name(""rf-ds-act"").text     print(""Current page: %d"" % current_page)      # TODO: collect the results      # proceed to the next page     try:         next_page = driver.find_element_by_link_text(u""»"")         next_page.click()     except NoSuchElementException:         break </code></pre>"			2015-07-18 13:23:00.483 UTC
31442119	javascript|python|ajax|mechanize|mechanize-python	"Mechanize and Python, clicking href=""javascript:void(0);"" links and getting the response back"	"<p>I need to scrap some data from page, where I fill out the form (already did this with mechanize). The problem is, the page returns data on many pages, and I have troubles from getting the data from those pages. </p>  <p>There's no problem to get them from the first result page, since it displays already after the search - I simply submit the form and get the response. </p>  <p>I analyzed the source code of the results page and it seems it uses Java Script, RichFaces (some lib for JSF with ajax but I can be wrong since I am not a web expert).</p>  <p>However, I managed to figure out how to get to the remaining result pages. I need to click links which are in this form (<code>href=""javascript:void(0);""</code>, full code below):</p>  <pre><code>&lt;td class=""pageNumber""&gt;&lt;span class=""rf-ds "" id=""SomeSimpleForm:SomeSimpleTable:j_idt211:j_idt233""&gt;&lt;span class=""rf-ds-nmb-btn rf-ds-act "" id=""SomeSimpleForm:SomeSimpleTable:j_idt211:j_idt233_ds_1""&gt;1&lt;/span&gt;&lt;a class=""rf-ds-nmb-btn "" href=""javascript:void(0);"" id=""SomeSimpleForm:SomeSimpleTable:j_idt211:j_idt233_ds_2""&gt;2&lt;/a&gt;&lt;a class=""rf-ds-nmb-btn "" href=""javascript:void(0);"" id=""SomeSimpleForm:SomeSimpleTable:j_idt211:j_idt233_ds_3""&gt;3&lt;/a&gt;&lt;a class=""rf-ds-nmb-btn "" href=""javascript:void(0);"" id=""SomeSimpleForm:SomeSimpleTable:j_idt211:j_idt233_ds_4""&gt;4&lt;/a&gt;&lt;a class=""rf-ds-nmb-btn "" href=""javascript:void(0);"" id=""SomeSimpleForm:SomeSimpleTable:j_idt211:j_idt233_ds_5""&gt;5&lt;/a&gt;&lt;a class=""rf-ds-nmb-btn "" href=""javascript:void(0);"" id=""SomeSimpleForm:SomeSimpleTable:j_idt211:j_idt233_ds_6""&gt;6&lt;/a&gt;&lt;a class=""rf-ds-nmb-btn "" href=""javascript:void(0);"" id=""SomeSimpleForm:SomeSimpleTable:j_idt211:j_idt233_ds_7""&gt;7&lt;/a&gt;&lt;a class=""rf-ds-nmb-btn "" href=""javascript:void(0);"" id=""SomeSimpleForm:SomeSimpleTable:j_idt211:j_idt233_ds_8""&gt;8&lt;/a&gt;&lt;a class=""rf-ds-nmb-btn "" href=""javascript:void(0);"" id=""SomeSimpleForm:SomeSimpleTable:j_idt211:j_idt233_ds_9""&gt;9&lt;/a&gt;&lt;a class=""rf-ds-nmb-btn "" href=""javascript:void(0);"" id=""SomeSimpleForm:SomeSimpleTable:j_idt211:j_idt233_ds_10""&gt;10&lt;/a&gt;&lt;a class=""rf-ds-btn rf-ds-btn-next"" href=""javascript:void(0);"" id=""SomeSimpleForm:SomeSimpleTable:j_idt211:j_idt233_ds_next""&gt;»&lt;/a&gt;&lt;a class=""rf-ds-btn rf-ds-btn-last"" href=""javascript:void(0);"" id=""SomeSimpleForm:SomeSimpleTable:j_idt211:j_idt233_ds_l""&gt;»»»»&lt;/a&gt;  &lt;script type=""text/javascript""&gt;new RichFaces.ui.DataScroller(""SomeSimpleForm:SomeSimpleTable:j_idt211:j_idt233"",function(event,element,data){RichFaces.ajax(""SomeSimpleForm:SomeSimpleTable:j_idt211:j_idt233"",event,{""parameters"":{""SomeSimpleForm:SomeSimpleTable:j_idt211:j_idt233:page"":data.page} ,""incId"":""1""} )},{""digitals"":{""SomeSimpleForm:SomeSimpleTable:j_idt211:j_idt233_ds_9"":""9"",""SomeSimpleForm:SomeSimpleTable:j_idt211:j_idt233_ds_8"":""8"",""SomeSimpleForm:SomeSimpleTable:j_idt211:j_idt233_ds_7"":""7"",""SomeSimpleForm:SomeSimpleTable:j_idt211:j_idt233_ds_6"":""6"",""SomeSimpleForm:SomeSimpleTable:j_idt211:j_idt233_ds_5"":""5"",""SomeSimpleForm:SomeSimpleTable:j_idt211:j_idt233_ds_4"":""4"",""SomeSimpleForm:SomeSimpleTable:j_idt211:j_idt233_ds_3"":""3"",""SomeSimpleForm:SomeSimpleTable:j_idt211:j_idt233_ds_1"":""1"",""SomeSimpleForm:SomeSimpleTable:j_idt211:j_idt233_ds_10"":""10"",""SomeSimpleForm:SomeSimpleTable:j_idt211:j_idt233_ds_2"":""2""} ,""buttons"":{""right"":{""SomeSimpleForm:SomeSimpleTable:j_idt211:j_idt233_ds_next"":""next"",""SomeSimpleForm:SomeSimpleTable:j_idt211:j_idt233_ds_l"":""last""} } ,""currentPage"":1} )&lt;/script&gt;&lt;/span&gt;&lt;/td&gt; &lt;td class=""pageExport""&gt;&lt;script type=""text/javascript"" src=""/opi/javax.faces.resource/download.js?ln=js/component&amp;amp;b=""&gt;&lt;/script&gt;&lt;script type=""text/javascript""&gt; </code></pre>  <p>So I would like to ask if there's a way to click all the links and get all the pages using mechanize (note, that after <code>»</code> symbol there are more pages available)? I ask about answers for total dummies with web knowledge :) </p>"	2015-07-15 22:13:40.343 UTC	31491282	"<p>This works for me: it seems all the html is available in <code>page</code></p>  <pre><code>import time     from selenium import webdriver driver = webdriver.Firefox() driver.get('https://polon.nauka.gov.pl/opi/aa/drh/zestawienie')  next_id = 'drhPageForm:drhPageTable:j_idt211:j_idt233_ds_next'  pages = [] it = 0 while it &lt; 1795:     time.sleep(1)     it += 1     bad = True     while bad:         try:             driver.find_element_by_id(next_id).click()             bad = False          except:             print('retry')      page = driver.page_source      pages.append(page) </code></pre>  <p>Instead of first collecting and storing all html, you could also just query what you want, but you'll need <code>lxml</code> or <code>BeautifulSoup</code> for that.</p>  <p>EDIT: After running it indeed I noticed we got a mistake. It was simple to just catch the exception and retry.</p>"			2015-07-18 12:42:55.163 UTC
31492933	javascript|python|html|leaflet|folium	Simple HTML/Javascript page created by Python shows as blank	"<p>I was just following this <a href=""https://folium.readthedocs.org/en/latest/"" rel=""nofollow"">tutorial</a> about Folium - a Python library that makes web maps. The tutorial states that a web map can be created with only these three lines of Python code:</p>  <pre><code>import folium map_osm = folium.Map(location=[45.5236, -122.6750]) map_osm.create_map(path='osm.html') </code></pre>  <p><a href=""http://bl.ocks.org/wrobstory/5545719"" rel=""nofollow"">This</a> is how the osm.html should look like according to the tutorial.</p>  <p>However, the osm.html file is showing up as just a blank webpage on my browsers. </p>  <p>Here is the source code of my osm.html file if that helps:</p>  <pre><code>&lt;!DOCTYPE html&gt; &lt;head&gt;    &lt;meta http-equiv=""content-type"" content=""text/html; charset=UTF-8"" /&gt;    &lt;link rel=""stylesheet"" href=""//cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.3/leaflet.css"" /&gt;    &lt;script src=""//cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.3/leaflet.js""&gt;&lt;/script&gt;     &lt;script src=""//ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js""&gt;&lt;/script&gt;     &lt;link rel=""stylesheet"" href=""//maxcdn.bootstrapcdn.com/bootstrap/3.2.0/css/bootstrap.min.css""&gt;    &lt;link rel=""stylesheet"" href=""//maxcdn.bootstrapcdn.com/bootstrap/3.2.0/css/bootstrap-theme.min.css""&gt;    &lt;script src=""//maxcdn.bootstrapcdn.com/bootstrap/3.2.0/js/bootstrap.min.js""&gt;&lt;/script&gt;     &lt;link href=""//maxcdn.bootstrapcdn.com/font-awesome/4.1.0/css/font-awesome.min.css"" rel=""stylesheet""&gt;     &lt;link rel=""stylesheet"" href=""//rawgit.com/lvoogdt/Leaflet.awesome-markers/2.0/develop/dist/leaflet.awesome-markers.css""&gt;    &lt;script src=""//rawgithub.com/lvoogdt/Leaflet.awesome-markers/2.0/develop/dist/leaflet.awesome-markers.js""&gt;&lt;/script&gt;      &lt;link rel=""stylesheet"" href=""//cdnjs.cloudflare.com/ajax/libs/leaflet.markercluster/0.4.0/MarkerCluster.Default.css""&gt;    &lt;link rel=""stylesheet"" href=""//cdnjs.cloudflare.com/ajax/libs/leaflet.markercluster/0.4.0/MarkerCluster.css""&gt;    &lt;script src=""//cdnjs.cloudflare.com/ajax/libs/leaflet.markercluster/0.4.0/leaflet.markercluster-src.js""&gt;&lt;/script&gt;    &lt;script src=""//cdnjs.cloudflare.com/ajax/libs/leaflet.markercluster/0.4.0/leaflet.markercluster.js""&gt;&lt;/script&gt;     &lt;link rel=""stylesheet"" href=""//birdage.github.io/Leaflet.awesome-markers/dist/leaflet.awesome.rotate.css""&gt;          &lt;style&gt;        html, body {         width: 100%;         height: 100%;         margin: 0;         padding: 0;       }        #map {         position:absolute;         top:0;         bottom:0;         right:0;         left:0;       }     &lt;/style&gt; &lt;/head&gt;  &lt;body&gt;     &lt;div class=""folium-map"" id=""folium_62f4bc18e7a1444b908b0413335a38b1"" style=""width: 960px; height: 500px""&gt;&lt;/div&gt;     &lt;script&gt;          var base_tile = L.tileLayer('http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {           maxZoom: 18,           minZoom: 1,           attribution: 'Map data (c) &lt;a href=""http://openstreetmap.org""&gt;OpenStreetMap&lt;/a&gt; contributors'       });        var baseLayer = {         ""Base Layer"": base_tile       };        /*       addition of the wms layers       */          /*       addition of the tile layers       */         /*       list of layers to be added       */       var layer_list = {        };        /*       Bounding box.       */       var southWest = L.latLng(-90, -180),           northEast = L.latLng(90, 180),           bounds = L.latLngBounds(southWest, northEast);        /*       Creates the map and adds the selected layers       */       var map = L.map('folium_62f4bc18e7a1444b908b0413335a38b1', {                                        center:[20, 40],                                        zoom: 10,                                        maxBounds: bounds,                                        layers: [base_tile]                                      });        L.control.layers(baseLayer, layer_list).addTo(map);        //cluster group       var clusteredmarkers = L.markerClusterGroup();       //section for adding clustered markers        //add the clustered markers to the group anyway       map.addLayer(clusteredmarkers);                 &lt;/script&gt;  &lt;/body&gt; </code></pre>"	2015-07-18 15:56:47.14 UTC	31493225	"<p>In the HTML you posted, all of the <code>&lt;link&gt;</code> and <code>&lt;script&gt;</code> tags use <a href=""http://www.paulirish.com/2010/the-protocol-relative-url/"" rel=""nofollow"">protocol relative URLs</a>. </p>  <blockquote>   <p>If the browser is viewing that current page in through HTTPS, then it’ll request that asset with the HTTPS protocol, otherwise it’ll typically request it with HTTP.</p>      <p>Of course, if you’re viewing the file locally, it’ll try to request the file with the <code>file://</code> protocol.</p> </blockquote>  <p>I think you viewed the file locally, so the browser tried to find the non-existent script/CSS files on your computer. Simply adding <code>http:</code> before all the links would work.</p>"			2015-07-18 16:30:04.213 UTC
31492933	javascript|python|html|leaflet|folium	Simple HTML/Javascript page created by Python shows as blank	"<p>I was just following this <a href=""https://folium.readthedocs.org/en/latest/"" rel=""nofollow"">tutorial</a> about Folium - a Python library that makes web maps. The tutorial states that a web map can be created with only these three lines of Python code:</p>  <pre><code>import folium map_osm = folium.Map(location=[45.5236, -122.6750]) map_osm.create_map(path='osm.html') </code></pre>  <p><a href=""http://bl.ocks.org/wrobstory/5545719"" rel=""nofollow"">This</a> is how the osm.html should look like according to the tutorial.</p>  <p>However, the osm.html file is showing up as just a blank webpage on my browsers. </p>  <p>Here is the source code of my osm.html file if that helps:</p>  <pre><code>&lt;!DOCTYPE html&gt; &lt;head&gt;    &lt;meta http-equiv=""content-type"" content=""text/html; charset=UTF-8"" /&gt;    &lt;link rel=""stylesheet"" href=""//cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.3/leaflet.css"" /&gt;    &lt;script src=""//cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.3/leaflet.js""&gt;&lt;/script&gt;     &lt;script src=""//ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js""&gt;&lt;/script&gt;     &lt;link rel=""stylesheet"" href=""//maxcdn.bootstrapcdn.com/bootstrap/3.2.0/css/bootstrap.min.css""&gt;    &lt;link rel=""stylesheet"" href=""//maxcdn.bootstrapcdn.com/bootstrap/3.2.0/css/bootstrap-theme.min.css""&gt;    &lt;script src=""//maxcdn.bootstrapcdn.com/bootstrap/3.2.0/js/bootstrap.min.js""&gt;&lt;/script&gt;     &lt;link href=""//maxcdn.bootstrapcdn.com/font-awesome/4.1.0/css/font-awesome.min.css"" rel=""stylesheet""&gt;     &lt;link rel=""stylesheet"" href=""//rawgit.com/lvoogdt/Leaflet.awesome-markers/2.0/develop/dist/leaflet.awesome-markers.css""&gt;    &lt;script src=""//rawgithub.com/lvoogdt/Leaflet.awesome-markers/2.0/develop/dist/leaflet.awesome-markers.js""&gt;&lt;/script&gt;      &lt;link rel=""stylesheet"" href=""//cdnjs.cloudflare.com/ajax/libs/leaflet.markercluster/0.4.0/MarkerCluster.Default.css""&gt;    &lt;link rel=""stylesheet"" href=""//cdnjs.cloudflare.com/ajax/libs/leaflet.markercluster/0.4.0/MarkerCluster.css""&gt;    &lt;script src=""//cdnjs.cloudflare.com/ajax/libs/leaflet.markercluster/0.4.0/leaflet.markercluster-src.js""&gt;&lt;/script&gt;    &lt;script src=""//cdnjs.cloudflare.com/ajax/libs/leaflet.markercluster/0.4.0/leaflet.markercluster.js""&gt;&lt;/script&gt;     &lt;link rel=""stylesheet"" href=""//birdage.github.io/Leaflet.awesome-markers/dist/leaflet.awesome.rotate.css""&gt;          &lt;style&gt;        html, body {         width: 100%;         height: 100%;         margin: 0;         padding: 0;       }        #map {         position:absolute;         top:0;         bottom:0;         right:0;         left:0;       }     &lt;/style&gt; &lt;/head&gt;  &lt;body&gt;     &lt;div class=""folium-map"" id=""folium_62f4bc18e7a1444b908b0413335a38b1"" style=""width: 960px; height: 500px""&gt;&lt;/div&gt;     &lt;script&gt;          var base_tile = L.tileLayer('http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {           maxZoom: 18,           minZoom: 1,           attribution: 'Map data (c) &lt;a href=""http://openstreetmap.org""&gt;OpenStreetMap&lt;/a&gt; contributors'       });        var baseLayer = {         ""Base Layer"": base_tile       };        /*       addition of the wms layers       */          /*       addition of the tile layers       */         /*       list of layers to be added       */       var layer_list = {        };        /*       Bounding box.       */       var southWest = L.latLng(-90, -180),           northEast = L.latLng(90, 180),           bounds = L.latLngBounds(southWest, northEast);        /*       Creates the map and adds the selected layers       */       var map = L.map('folium_62f4bc18e7a1444b908b0413335a38b1', {                                        center:[20, 40],                                        zoom: 10,                                        maxBounds: bounds,                                        layers: [base_tile]                                      });        L.control.layers(baseLayer, layer_list).addTo(map);        //cluster group       var clusteredmarkers = L.markerClusterGroup();       //section for adding clustered markers        //add the clustered markers to the group anyway       map.addLayer(clusteredmarkers);                 &lt;/script&gt;  &lt;/body&gt; </code></pre>"	2015-07-18 15:56:47.14 UTC	31496523	"<p>The html files created by folium are designed to be viewed through the http protocol. As user880772 answered, they won't work if you open the file directly in your browser (<code>file://</code> method) unless you manually change all the relative urls into urls prepended with <code>http://</code>.</p>  <p>To proceed by viewing the file through http (without having to edit the html): in a terminal, in the directory containing the html file, run:</p>  <pre><code># Python 2.x python -m SimpleHTTPServer </code></pre>  <p>or</p>  <pre><code># Python 3.x python -m http.server </code></pre>  <p>Then visit <code>http://localhost:8000/</code> in your browser and navigate to the html file created by folium.</p>  <p>See <a href=""https://github.com/mrdoob/three.js/wiki/How-to-run-things-locally"" rel=""nofollow"">https://github.com/mrdoob/three.js/wiki/How-to-run-things-locally</a> for more information.</p>"			2015-07-18 23:23:30.753 UTC
31537946	javascript|jquery|ajax|json|python-2.7	Passing a string from Python to Javascript	"<p>I'm trying to pass a string from Python to Javascript via ajax POST request but i'm finding serious difficulties.</p>  <p>I've tried both with and without using JSON.</p>  <p>Here's the code</p>  <p><strong>JAVASCRIPT</strong></p>  <pre><code>$.ajax({     url: url, #url of the python server and file     type: ""POST"",     data: {'data1': ""hey""},     success: function (response) {         console.log("" response ----&gt; ""+JSON.parse(response));         console.log("" response no JSON ---&gt; "" +response);     },     error: function (xhr, errmsg, err) {         console.log(""errmsg"");     } }); </code></pre>  <p><strong>Python</strong></p>  <pre><code>import json print ""Access-Control-Allow-Origin: *""; if form.getvalue(""data1"") == ""hey"":       out = {'key': 'value', 'key2': 4}       print json.dumps(out) </code></pre>  <p>Result is a empty JSON. when i do something like JSON.parse in javascript I get a unexpected end of input error, and when i try to get the length of the response data the size I get is 0. I suppose that there should be some problems with the client server communication (I use a CGIHTTPServer) or maybe something wrong with the datatype that python or javascript expects.</p>  <p>I also tried without JSON, with something like Python </p>  <pre><code> print ""heyyyyy"" </code></pre>  <p>Javascript</p>  <pre><code> alert(response) //case of success </code></pre>  <p>but I also got an empty string.</p>  <p>Could you please give me some advices for handling this problem ?  Thanks a lot!</p>"	2015-07-21 11:35:24.183 UTC	31540893	"<p>You may want to compare the two snippets of code <a href=""https://stackoverflow.com/questions/5333632/cgihttprequesthandler-run-php-or-python-script-in-python"">CGIHTTPRequestHandler run php or python script in python</a> and <a href=""http://uthcode.blogspot.com/2009/03/simple-cgihttpserver-and-client-in.html"" rel=""nofollow noreferrer"">http://uthcode.blogspot.com/2009/03/simple-cgihttpserver-and-client-in.html</a>. </p>  <p>There isn't enough code to tell where your request handling code is but if it's in a class inheriting from <code>CGIHTTPRequestHandler</code> then you need to use <code>self.wfile.write(json.dumps(out))</code>, etc.</p>"			2015-07-21 13:45:27.563 UTC
31537946	javascript|jquery|ajax|json|python-2.7	Passing a string from Python to Javascript	"<p>I'm trying to pass a string from Python to Javascript via ajax POST request but i'm finding serious difficulties.</p>  <p>I've tried both with and without using JSON.</p>  <p>Here's the code</p>  <p><strong>JAVASCRIPT</strong></p>  <pre><code>$.ajax({     url: url, #url of the python server and file     type: ""POST"",     data: {'data1': ""hey""},     success: function (response) {         console.log("" response ----&gt; ""+JSON.parse(response));         console.log("" response no JSON ---&gt; "" +response);     },     error: function (xhr, errmsg, err) {         console.log(""errmsg"");     } }); </code></pre>  <p><strong>Python</strong></p>  <pre><code>import json print ""Access-Control-Allow-Origin: *""; if form.getvalue(""data1"") == ""hey"":       out = {'key': 'value', 'key2': 4}       print json.dumps(out) </code></pre>  <p>Result is a empty JSON. when i do something like JSON.parse in javascript I get a unexpected end of input error, and when i try to get the length of the response data the size I get is 0. I suppose that there should be some problems with the client server communication (I use a CGIHTTPServer) or maybe something wrong with the datatype that python or javascript expects.</p>  <p>I also tried without JSON, with something like Python </p>  <pre><code> print ""heyyyyy"" </code></pre>  <p>Javascript</p>  <pre><code> alert(response) //case of success </code></pre>  <p>but I also got an empty string.</p>  <p>Could you please give me some advices for handling this problem ?  Thanks a lot!</p>"	2015-07-21 11:35:24.183 UTC	31543525	"<p>I managed to solve the problem using the method HTTPResponse from the Django Framework.</p>  <p>Now it's something very similar to this</p>  <p>PYTHON (answering the client with a JSON)</p>  <pre><code>from django.http import HttpResponse ... data = {}  data['key1'] = 'value1'  data['key2'] = 'value2'  ..... response = HttpResponse(json.dumps(data), content_type = ""application/json"")       print response;  </code></pre>  <p>JAVASCRIPT (Retireving and reading JSON)</p>  <pre><code>success(response)       alert(JSON.stringify(response)); </code></pre>  <p>Or if I just want to send a String or an integer without JSON</p>  <p>PYTHON (no JSON)</p>  <pre><code>response = HttpResponse(""ayyyyy"", content_type=""text/plain"") print response </code></pre>  <p>JAVASCRIPT (Retrieving String or value)</p>  <pre><code>success: function (response) {     alert(response); </code></pre>  <p>This works very good, and it's very readable and simple in my opinion!</p>"			2015-07-21 15:33:56.88 UTC
31537946	javascript|jquery|ajax|json|python-2.7	Passing a string from Python to Javascript	"<p>I'm trying to pass a string from Python to Javascript via ajax POST request but i'm finding serious difficulties.</p>  <p>I've tried both with and without using JSON.</p>  <p>Here's the code</p>  <p><strong>JAVASCRIPT</strong></p>  <pre><code>$.ajax({     url: url, #url of the python server and file     type: ""POST"",     data: {'data1': ""hey""},     success: function (response) {         console.log("" response ----&gt; ""+JSON.parse(response));         console.log("" response no JSON ---&gt; "" +response);     },     error: function (xhr, errmsg, err) {         console.log(""errmsg"");     } }); </code></pre>  <p><strong>Python</strong></p>  <pre><code>import json print ""Access-Control-Allow-Origin: *""; if form.getvalue(""data1"") == ""hey"":       out = {'key': 'value', 'key2': 4}       print json.dumps(out) </code></pre>  <p>Result is a empty JSON. when i do something like JSON.parse in javascript I get a unexpected end of input error, and when i try to get the length of the response data the size I get is 0. I suppose that there should be some problems with the client server communication (I use a CGIHTTPServer) or maybe something wrong with the datatype that python or javascript expects.</p>  <p>I also tried without JSON, with something like Python </p>  <pre><code> print ""heyyyyy"" </code></pre>  <p>Javascript</p>  <pre><code> alert(response) //case of success </code></pre>  <p>but I also got an empty string.</p>  <p>Could you please give me some advices for handling this problem ?  Thanks a lot!</p>"	2015-07-21 11:35:24.183 UTC	31540635	"<p>Instead of <code>print json.dumps(out)</code> you should use <code>return json.dumps(out)</code></p>  <p>The <code>print</code> will only display it in python's console, just as <code>console</code> in javascript. </p>"			2015-07-21 13:35:24.42 UTC
31561937	python|html|beautifulsoup|extract	Remove text from HTML files but keep the javascript and structure using python	<p>There are many ways to extract text from html file but I'd like to do the opposite and have the text removed while the structure and javascript code stay intact.</p>  <p>For example Remove all <p>  <br> while keeping   </p>  <p>Is there an easy way to do this? Any help is greatly appreciated. Cheers</p>	2015-07-22 11:34:12.687 UTC	31562600	"<p>I would go with BeautifulSoup:</p>  <pre><code>from bs4 import BeautifulSoup from bs4.element import NavigableString from copy import copy  def strip_content(in_tag):     tag = copy(in_tag) # remove this line if you don't care about your input     if tag.name == 'script':         # Do no mess with scripts         return tag     # strip content from all children     children = [strip_content(child) for child in tag.children if not isinstance(child, NavigableString)]     # remove everything from the tag     tag.clear()     for child in children:         # Add back stripped children         tag.append(child)     return tag  def test(filename):     soup = BeautifulSoup(open(filename))     cleaned_soup = strip_content(soup)     print(cleaned_soup.prettify())  if __name__ == ""__main__"":     test(""myfile.html"") </code></pre>"			2015-07-22 12:04:25.74 UTC
31626396	javascript|python|html|web-scraping	Run Javascript with Python (onclick)	"<p>How could I run a javascript which I found in a html tag with python? </p>  <p>There is a tag in a html which contains javascript which is being run after click (onclick).</p>  <p>Here is the example:</p>  <pre><code>&lt;span id=""Handy2""&gt;     &lt;span class=""cust-type""&gt;0179... &lt;/span&gt;     &lt;a id=""dspphone2"" style=""cursor: pointer;"" class=""t-info"" onclick=""jQuery( Handy2 ).load( '/ajax/detail/displayphonenumber.php?coded=MDE3OS8gNjk2MTA5Mw--&amp;amp;adno=140305860&amp;amp;adsource=quoka+online&amp;amp;catid=36_3210' )"" data-trackl=""Detail 36_3210""&gt;         anzeigen     &lt;/a&gt; &lt;/span&gt; </code></pre>  <p>What should I do to run it and recieve the code which is visible after click on this button? </p>  <p>I'm using mostly BeautifulSoup. </p>  <p>EDIT: I know how to do that using Selenium but it is quite an overkill I think.</p>"	2015-07-25 12:22:43.333 UTC	31653620	"<p>This is just a small XHR Request, which returns in its response the phone number you are looking for. Try it yourself: <a href=""http://www.xxx.de/ajax/detail/displayphonenumber.php?coded=MDE3OS8gNjk2MTA5Mw--&amp;adno=140305860&amp;adsource=quoka+online&amp;catid=36_3210"" rel=""nofollow"">http://www.xxx.de/ajax/detail/displayphonenumber.php?coded=MDE3OS8gNjk2MTA5Mw--&amp;adno=140305860&amp;adsource=quoka+online&amp;catid=36_3210</a> I would use xpath selectors and regex for getting the values you search. Then replace the ';' with '&amp;' and request the new url.</p>"			2015-07-27 12:52:05.103 UTC
31626396	javascript|python|html|web-scraping	Run Javascript with Python (onclick)	"<p>How could I run a javascript which I found in a html tag with python? </p>  <p>There is a tag in a html which contains javascript which is being run after click (onclick).</p>  <p>Here is the example:</p>  <pre><code>&lt;span id=""Handy2""&gt;     &lt;span class=""cust-type""&gt;0179... &lt;/span&gt;     &lt;a id=""dspphone2"" style=""cursor: pointer;"" class=""t-info"" onclick=""jQuery( Handy2 ).load( '/ajax/detail/displayphonenumber.php?coded=MDE3OS8gNjk2MTA5Mw--&amp;amp;adno=140305860&amp;amp;adsource=quoka+online&amp;amp;catid=36_3210' )"" data-trackl=""Detail 36_3210""&gt;         anzeigen     &lt;/a&gt; &lt;/span&gt; </code></pre>  <p>What should I do to run it and recieve the code which is visible after click on this button? </p>  <p>I'm using mostly BeautifulSoup. </p>  <p>EDIT: I know how to do that using Selenium but it is quite an overkill I think.</p>"	2015-07-25 12:22:43.333 UTC	31656640	"<p>It is not possible to run the JavaScript from python direct.<br> The best you can do is run selenium and phantomJs for scrapping data. </p>  <p>below  link might help you.  <a href=""https://realpython.com/blog/python/headless-selenium-testing-with-python-and-phantomjs/"" rel=""nofollow"">https://realpython.com/blog/python/headless-selenium-testing-with-python-and-phantomjs/</a> </p>"			2015-07-27 15:04:35.917 UTC
31626396	javascript|python|html|web-scraping	Run Javascript with Python (onclick)	"<p>How could I run a javascript which I found in a html tag with python? </p>  <p>There is a tag in a html which contains javascript which is being run after click (onclick).</p>  <p>Here is the example:</p>  <pre><code>&lt;span id=""Handy2""&gt;     &lt;span class=""cust-type""&gt;0179... &lt;/span&gt;     &lt;a id=""dspphone2"" style=""cursor: pointer;"" class=""t-info"" onclick=""jQuery( Handy2 ).load( '/ajax/detail/displayphonenumber.php?coded=MDE3OS8gNjk2MTA5Mw--&amp;amp;adno=140305860&amp;amp;adsource=quoka+online&amp;amp;catid=36_3210' )"" data-trackl=""Detail 36_3210""&gt;         anzeigen     &lt;/a&gt; &lt;/span&gt; </code></pre>  <p>What should I do to run it and recieve the code which is visible after click on this button? </p>  <p>I'm using mostly BeautifulSoup. </p>  <p>EDIT: I know how to do that using Selenium but it is quite an overkill I think.</p>"	2015-07-25 12:22:43.333 UTC	31654052	"<p>You can't just run it in Python as it is already mentioned above, you need a JavaScript interpreter. As it seems to me that you just want to get the data that is loaded with this AJAX call you should do something like this (this is just a sample)</p>  <pre><code>import urllib2 html = urllib2.urlopen('http://your_site_name.com/ajax/detail/displayphonenumber.php?coded=MDE3OS8gNjk2MTA5Mw--&amp;adno=140305860&amp;adsource=quoka+online&amp;catid=36_3210').read() from BeautifulSoup import BeautifulSoup soup = BeautifulSoup(html) </code></pre>"			2015-07-27 13:12:26.297 UTC
31627399	javascript|python|html|forms	Run Javascript after downloading webpage Python	"<p>I'm trying to write a script that writes an input and presses a button on a webpage in order to send a request. </p>  <p>The issue is that the input and button are within a <code>&lt;script type=""text/template""&gt;</code> tag and are not rendered. </p>  <p>Furthermore, I believe the website sends off the information using AJAX and not a simple form so I can't just post the data myself. </p>  <p>How would I run the Javascript on the webpage as if I am looking at the webpage in the browser so I can input the data and click the button? Thanks</p>  <p>Below is the button which is not in a form:</p>  <pre><code>&lt;p&gt;&lt;button type=""button"" class=""btn go block submit""&gt;Click Me!&lt;/button&gt;&lt;/p&gt; </code></pre>"	2015-07-25 14:19:14.887 UTC	31627885	"<p>Try using  <a href=""https://selenium-python.readthedocs.org/"" rel=""nofollow"">Selenium/Python</a>, It's really simple and powerful browser automation tool.</p>"			2015-07-25 15:06:33.097 UTC
31703044	javascript|python|string	Python String.startswith() with a list of strings in Javascript	"<p>Python <a href=""https://docs.python.org/2/library/stdtypes.html#str.startswith"" rel=""nofollow noreferrer"">startswith()</a> allows me to test if a string starts with a tuple of strings as shown below, <strong>which is what I want to achieve with JavaScript</strong>:</p>  <pre><code>testvar = 'he', 'hi', 'no', 'ye' if my_string.startswith(testvar):     return True </code></pre>  <p>I have seen this SO <a href=""https://stackoverflow.com/questions/646628/how-to-check-if-a-string-startswith-another-string"">question</a> and it did not completely help in achieving this.</p>  <p>I need to have a JavaScript code that will do the same thing with the Python code above.</p>"	2015-07-29 14:13:27.383 UTC	31703219	"<p>Since they're all the same length you could just do:</p>  <pre><code>testvar = ['he', 'hi', 'no', 'ye'] return testvar.indexOf(my_string.substring(0,2)) &gt; -1 </code></pre>  <p>And some examples:</p>  <pre><code>// Examples: testvar = ['he', 'hi', 'no', 'ye'] my_string = 'hello' testvar.indexOf(my_string.substring(0,2)) &gt; -1 true  my_string = 'apples' testvar.indexOf(my_string.substring(0,2)) &gt; -1 false </code></pre>"			2015-07-29 14:20:35.13 UTC
31703044	javascript|python|string	Python String.startswith() with a list of strings in Javascript	"<p>Python <a href=""https://docs.python.org/2/library/stdtypes.html#str.startswith"" rel=""nofollow noreferrer"">startswith()</a> allows me to test if a string starts with a tuple of strings as shown below, <strong>which is what I want to achieve with JavaScript</strong>:</p>  <pre><code>testvar = 'he', 'hi', 'no', 'ye' if my_string.startswith(testvar):     return True </code></pre>  <p>I have seen this SO <a href=""https://stackoverflow.com/questions/646628/how-to-check-if-a-string-startswith-another-string"">question</a> and it did not completely help in achieving this.</p>  <p>I need to have a JavaScript code that will do the same thing with the Python code above.</p>"	2015-07-29 14:13:27.383 UTC	31703227	"<p>You can run a reduce operation over your array of tests to find if a variable starts with any of them.</p>  <pre><code>var testVar = ['he', 'hi', 'no', 'ye']; var myString = 'hello';  var startsWithAny = testVar.reduce(function (returnValue, currentTest) {   return returnValue || myString.startsWith(currentTest); });  if (startsWithAny) {   return true; } </code></pre>"			2015-07-29 14:21:01.2 UTC
31703044	javascript|python|string	Python String.startswith() with a list of strings in Javascript	"<p>Python <a href=""https://docs.python.org/2/library/stdtypes.html#str.startswith"" rel=""nofollow noreferrer"">startswith()</a> allows me to test if a string starts with a tuple of strings as shown below, <strong>which is what I want to achieve with JavaScript</strong>:</p>  <pre><code>testvar = 'he', 'hi', 'no', 'ye' if my_string.startswith(testvar):     return True </code></pre>  <p>I have seen this SO <a href=""https://stackoverflow.com/questions/646628/how-to-check-if-a-string-startswith-another-string"">question</a> and it did not completely help in achieving this.</p>  <p>I need to have a JavaScript code that will do the same thing with the Python code above.</p>"	2015-07-29 14:13:27.383 UTC	31703336	"<pre><code>var testvar = ['he','hi','no','ye']; var str = ""hello"";  for(i = 0; i &lt; testvar.length; i++) {    if (str.startsWith(testvar[i]) == true)             console.log(str+"" starts with: ""+testvar[i]); } </code></pre>"			2015-07-29 14:25:14.91 UTC
31703044	javascript|python|string	Python String.startswith() with a list of strings in Javascript	"<p>Python <a href=""https://docs.python.org/2/library/stdtypes.html#str.startswith"" rel=""nofollow noreferrer"">startswith()</a> allows me to test if a string starts with a tuple of strings as shown below, <strong>which is what I want to achieve with JavaScript</strong>:</p>  <pre><code>testvar = 'he', 'hi', 'no', 'ye' if my_string.startswith(testvar):     return True </code></pre>  <p>I have seen this SO <a href=""https://stackoverflow.com/questions/646628/how-to-check-if-a-string-startswith-another-string"">question</a> and it did not completely help in achieving this.</p>  <p>I need to have a JavaScript code that will do the same thing with the Python code above.</p>"	2015-07-29 14:13:27.383 UTC	31703220	"<p>All you need is a simple loop over an <em>Array</em> with one of the answers shown there,</p>  <pre class=""lang-js prettyprint-override""><code>var testvar = ['he', 'hi', 'no', 'ye'];  function startsWith2(haystack, needles) {     var i = needles.length;     while (i-- &gt; 0)         if (haystack.lastIndexOf(needles[i], 0) === 0)             return true;     return false; }  startsWith2('hello world', testvar); // true startsWith2('foo bar baz', testvar); // false </code></pre>  <hr>  <p>Similarly for <code>endsWith</code>;</p>  <pre><code>function endsWith2(haystack, needles) {     var i = needles.length, j, k = haystack.length;     while (i-- &gt; 0) {         j = k - needles[i].length;         if (j &gt;= 0 &amp;&amp; haystack.indexOf(needles[i], j) === j)             return true;     }     return false; } </code></pre>"			2015-07-29 14:20:35.75 UTC
31703044	javascript|python|string	Python String.startswith() with a list of strings in Javascript	"<p>Python <a href=""https://docs.python.org/2/library/stdtypes.html#str.startswith"" rel=""nofollow noreferrer"">startswith()</a> allows me to test if a string starts with a tuple of strings as shown below, <strong>which is what I want to achieve with JavaScript</strong>:</p>  <pre><code>testvar = 'he', 'hi', 'no', 'ye' if my_string.startswith(testvar):     return True </code></pre>  <p>I have seen this SO <a href=""https://stackoverflow.com/questions/646628/how-to-check-if-a-string-startswith-another-string"">question</a> and it did not completely help in achieving this.</p>  <p>I need to have a JavaScript code that will do the same thing with the Python code above.</p>"	2015-07-29 14:13:27.383 UTC	31703672	"<p>Since there has been many solutions for having an array passed as argument, I am gonna post a solution splat ""*"" style arguments:</p>  <pre><code>String.prototype.startsWithSplat = function(){    var args = Array.prototype.slice.call(arguments, 0, arguments.length);    var i;   var matched = false;   var self = this;   for(i = 0; i &lt; args.length; i++){     if(self.slice(0, args[i].length) == args[i]){       matched = true;       break;     }   }   return matched; } </code></pre>  <p>Then you can just call:</p>  <pre><code>my_string.startswith('he', 'hi', 'no', 'ye'); </code></pre>"			2015-07-29 14:39:21.353 UTC
31772438	javascript|python	How to call a javascript function using python script?	"<p>I am doing a web scraping project in which i stumbled upon a web page that has captcha. Now the thing is that the link that captcha is only shown when i hit refresh captcha button, which is in fact a  java-script function called refresh capthca. Here is the code of button :</p>  <pre><code>     &lt;a title=""Request a new validation code."" href=""javascript: refreshCaptcha();""      onclick=""#""&gt;      &lt;img src=""index.jpg"" border=""0"" style=""vertical-align:bottom;"" width=""23"" height=""22""&gt;&lt;/a&gt; </code></pre>  <p>How to call that function or click on that refresh captcha button using python script?</p>"	2015-08-02 13:37:13.723 UTC	31772539	"<p>If you have <a href=""http://nodejs.org/"" rel=""nofollow""><code>node</code></a> installed you can use the <a href=""https://docs.python.org/3.4/library/subprocess.html#module-subprocess"" rel=""nofollow""><code>subprocess</code></a> module</p>  <pre><code>from subprocess import call call(['node', '-e', 'JavaScript', 'code', 'here']) </code></pre>"			2015-08-02 13:49:59.27 UTC
31774349	javascript|python|python-3.x|beautifulsoup|python-requests	Python3 - I do not want to print the Javascript code with BeautifulSoup	"<p>I have this code:</p>  <pre><code>import requests from bs4 import BeautifulSoup url  = 'http://www.link.com' r = requests.get(url) soup = BeautifulSoup(r.content, 'html.parser') for x in (soup.find_all(True,text=re.compile(r'text on the page', re.I))): print (x, '\n') </code></pre>  <p>Now when I run it, it prints out some javascript which I do not know why (I want to see some text not some script). My questions is: How can I get rid of the javascript everytime I want to scrape data from the web?</p>  <p>Output:</p>  <pre><code>&lt;script type=""text/javascript""&gt; &lt;!-- function MM_swapImgRestore() { //v3.0 var i,x,a=document.MM_sr; for(i=0;a&amp;&amp;i&lt;a.length&amp;&amp;(x=a[i])&amp;&amp;x.oSrc;i++) x.src=x.oSrc; } function MM_preloadImages() { //v3.0   var d=document; if(d.images){ if(!d.MM_p) d.MM_p=new Array(); var i,j=d.MM_p.length,a=MM_preloadImages.arguments; for(i=0; i&lt;a.length; i++) if (a[i].indexOf(""#"")!=0){ d.MM_p[j]=new Image; d.MM_p[j++].src=a[i];}} }  function MM_findObj(n, d) { //v4.01 var p,i,x;  if(!d) d=document; if((p=n.indexOf(""?""))&gt;0&amp;&amp;parent.frames.length) { d=parent.frames[n.substring(p+1)].document; n=n.substring(0,p);} if(!(x=d[n])&amp;&amp;d.all) x=d.all[n]; for (i=0;!x&amp;&amp;i&lt;d.forms.length;i++)   x=d.forms[i][n]; for(i=0;!x&amp;&amp;d.layers&amp;&amp;i&lt;d.layers.length;i++) x=MM_findObj(n,d.layers[i].document); if(!x &amp;&amp; d.getElementById) x=d.getElementById(n); return x; }  function MM_swapImage() { //v3.0 var i,j=0,x,a=MM_swapImage.arguments; document.MM_sr=new Array; for(i=0;   i&lt;(a.length-2);i+=3) if ((x=MM_findObj(a[i]))!=null){document.MM_sr[j++]=x; if(!x.oSrc) x.oSrc=x.src; x.src=a[i+2];} } //--&gt; &lt;/script&gt;   &lt;td align=""left"" class=""template_title"" height=""50"" valign=""bottom"" width=""535""&gt;&lt;div style=""padding-bottom:9px;""&gt;4&lt;/div&gt;&lt;/td&gt;  </code></pre>"	2015-08-02 17:04:25.697 UTC	31774432	"<p><code>script</code> element is a legitimate element in the DOM. You can, though, tell <code>find_all()</code> not to return you <code>script</code> tags:</p>  <pre><code>soup.find_all(lambda elm: elm and elm.name != 'script', text=re.compile(r'text on the page', re.I)) </code></pre>"			2015-08-02 17:13:51.327 UTC
31823384	javascript|python|matlab|object|config	"Do Python and Matlab have the ""config object"" in Javascript to implement an object and initialize an instance?"	"<p>In Javascript, I noticed that there is a method to implement an object and initialize an instance. It seems very handy, and they seem calling it ""config object"".</p>  <pre><code>// Implement var Button = function(config) {     this.x = config.x || 0;     this.y = config.y || 0;     this.width = config.width || 150;     this.height = config.height || 50;     this.label = config.label || ""Click""; }; // Initialize var btn1 = new Button({x: 100, y: 100, label: ""Please click!""}); </code></pre>  <p>Is there any similar way to do this in Python and Matlab?</p>"	2015-08-05 04:20:23.227 UTC	31823726	"<p>What you are in fact referring to, is defining and constructing a <a href=""https://en.wikipedia.org/wiki/Class_(computer_programming)"" rel=""nofollow"">class</a>. That can be a bit of a mouthful. <a href=""http://www.jeffknupp.com/blog/2014/06/18/improve-your-python-python-classes-and-object-oriented-programming/"" rel=""nofollow"">This is a bit easier on the mind</a> and is written for Python. <a href=""http://www.mathworks.com/help/matlab/matlab_oop/getting-familiar-with-classes.html"" rel=""nofollow"">Here's the documentation</a> for classes in Matlab.</p>  <p>While Python, C++, Java and many other <a href=""https://en.wikipedia.org/wiki/Object-oriented_programming"" rel=""nofollow"">object-oriented programming languages</a> are fundamentally designed with classes, JavaScript doesn't have classes and all the <a href=""https://en.wikipedia.org/wiki/Inheritance_(object-oriented_programming)"" rel=""nofollow"">inheritance</a> that comes with them. In your example, you are simply defining a function that takes a <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Working_with_Objects"" rel=""nofollow"">JavaScript object</a> as its only argument, and assigns the object properties to a special containing object called <code>this</code>. In Python, <code>this</code> is called <code>self</code> instead, which is a much better term for it.</p>  <p>In a nutshell, a class is like a mold that when an object is constructed out of it, it retains some properties that are unique to itself (totally over-simplified)</p>  <p>Consider the following pseudo-code:</p>  <pre><code>class Person()     constructor(name)         self.name = name </code></pre>  <p>This is the mold. We can now initialize multiple instances of <code>Person</code>, each with different names.</p>  <pre><code>&gt;&gt;&gt; person1 = Person(""Tim"") &gt;&gt;&gt; person2 = Person(""Mary"") &gt;&gt;&gt; person1.name ""Tim"" &gt;&gt;&gt; person2.name ""Mary"" </code></pre>  <p>This way you can write common functionality for a <code>Person</code> such as a <code>talk</code> method.</p>  <pre><code>class Person():    constructor(name):        self.name = name     talk(message):        print(message) </code></pre>  <p>Now both Tim and Mary can talk to eachother</p>  <pre><code>&gt;&gt;&gt; person1.talk('Hello!') ""Hello"" &gt;&gt;&gt; person2.talk(""Greetings!"") ""Greetings!"" </code></pre>  <p>I highly recommend playing around in the <a href=""https://www.python.org/shell/"" rel=""nofollow"">Python shell</a>, or writing a few scripts and running them see how you define and initialize classes. Hopefully this will get the ball rolling for you.</p>"			2015-08-05 04:56:04.87 UTC
31863919	javascript|jquery|python|apache|permissions	Calling Python function with Javascript in MAMP	"<p>What I am trying to do is take a Python file (for now I have a simple test file that outputs some generic text) and have Javascript run it when a button is clicked. I want the output from the Python script to be logged to the console by Javascript.</p>  <p>I have set the httpd.conf file to ExecCGI and had it run Python files as .cgi files (see <a href=""http://www.editrocket.com/articles/python_apache_windows.html"" rel=""nofollow"">http://www.editrocket.com/articles/python_apache_windows.html</a>). I have also changed the permissions for the MAMP folder and all of its contents read/write for everybody just in case. However, when I try and make an Ajax call on my file I get a 500 internal server error. When I go to localhost:8888/cgi-bin I get a Forbidden Access error. For reference, my Javascript is in <code>MAMP/htdocs/WebScraper/</code> and my Python file is in <code>MAMP/cgi-bin/</code>.</p>  <p>Here is my Python file code:</p>  <pre><code>print(""Content-type: text/html"") print() print(""&lt;p&gt;Hello World&lt;/p&gt;"") </code></pre>  <p>and here is my Javascript file code:</p>  <pre><code>$(document).ready(function () {     $(""#submit"").click(function() {         $.ajax({             url: ""/cgi-bin/cgi_test.py"",             success: function(response) {                 console.log(response)             }         });     }); }); </code></pre>  <p>I know it is hitting the file because I am getting a 500 error instead of a 404, but I cannot for the life of me figure out how to make it work. Anybody have any ideas?</p>"	2015-08-06 19:07:42.157 UTC	31864805	"<p>Alright I figured it out, I needed to add a <code>\n</code> inside <code>print(""Content-type: text/html"")</code> to make it <code>print(""Content-type: text/html\n"")</code>. This is to separate the headers from the rest of the content or else the program doesn't know which is which.</p>"			2015-08-06 20:04:12.36 UTC
31888051	javascript|jquery|python|asynchronous	Is there a python module that automatically generates javascript code for asynchronous loading?	<p>I have a webapp that contains several more or less independent elements on each page. I would like that on certain pages certain elements by loaded asynchronously (to make server response faster). This can be done by loading these elements asynchronously with javascript. I was wondering is a python module exists which generates this javascript code automatically.</p>	2015-08-07 23:35:38.43 UTC	31888099	"<p><a href=""http://pyjs.org/"" rel=""nofollow"">pyjs</a> and <a href=""http://www.brython.info/"" rel=""nofollow"">brython</a> let you write some kinds of client-side code in Python. </p>"			2015-08-07 23:43:13.83 UTC
31892945	javascript|python|html|python-2.7|beautifulsoup	how to fetch javascript contents in python	"<p>I have a website that has data I want to fetch stored in a javascript. How do I fetch it?</p>  <p>The code is this :- <a href=""http://pastebin.com/zhdWT5HM"" rel=""nofollow"">http://pastebin.com/zhdWT5HM</a></p>  <p>I want to fetch from ""var playersData"" line. I want to fetch this thing :- ""playerId"":""showsPlayer"" (without quotes obviously). How do I do so?</p>  <p>I've tried beautiful soup. My current script looks like this</p>  <pre><code>q = requests.get('websitelink') soup = BeautifulSoup(q.text)  searching = soup.findAll('script',{'type':'text/javascript'}) for playerIdin searching:   x = playerId.find_all('var playersData', limit=1)   print x </code></pre>  <p>I'm getting [] as my output. I can't seem to figure out my problem here. Please help out guys and gals :)</p>"	2015-08-08 12:06:12.34 UTC	31894182	"<p><code>BeautifulSoup</code> would only help locating the desired <code>script</code> tag. Then, you would have multiple options: you can extract the desired data with a javascript parser, like <a href=""https://pypi.python.org/pypi/slimit"" rel=""nofollow""><code>slimit</code></a>, or use regular expressions:</p>  <pre><code>import re  from bs4 import BeautifulSoup  page = """""" &lt;script type=""text/javascript""&gt;             var logged = true;             var video_id = 59374;             var item_type = 'official';              var debug = false;             var baseUrl = 'http://www.example.com';             var base_url = 'http://www.example.com/';             var assetsBaseUrl = 'http://www.example.com/assets';             var apiBaseUrl = 'http://www.example.com/common';             var playersData = [{""playerId"":""showsPlayer"",""userId"":true,""solution"":""flash"",""playlist"":[{""itemId"":""5090"",""itemAK"":""Movie""}]]; &lt;/script&gt;&lt;script type=""text/javascript"" &gt; """""" soup = BeautifulSoup(page)  pattern = re.compile(r'""playerId"":""(.*?)""', re.MULTILINE | re.DOTALL) script = soup.find(""script"", text=pattern)  print pattern.search(script.text).group(1) </code></pre>  <p>Prints:</p>  <pre><code>showsPlayer </code></pre>"			2015-08-08 14:37:30.64 UTC
31932164	javascript|python|qt4	Python Qt4 Prevent JavaScript Alerts/Pop-ups	"<p>I'm automating some browser tests using Qt4. Since I need to inspect some JavaScript DOM elements I cannot just pull the source page as text since the JS needs to be loaded into a browser so the objects may be searched. </p>  <p>The issue is that if there is an alert in the HTML it pops up and prevents my script from continuing automatically. I've included a sample python script demonstrating the issue (although not the search part of my app). The browser object does not even need to show the page for the JS alert to execute on the ""page load"". Any way to prevent this or a suggested workaround using Qt4?</p>  <pre><code>#!/usr/bin/python  import sys  from PyQt4.QtGui import *   from PyQt4.QtCore import *   from PyQt4.QtWebKit import *    html = """"""  &lt;html&gt; &lt;frameset cols=""1%,99%""&gt; &lt;frame name=""frame1"" id=""frame1"" src=""""&gt; &lt;frame name='frame2' id='frame2' src='javascript:var testVar=""Prevent Me!""; alert(testVar);'&gt;  &lt;/frameset&gt; &lt;/html&gt;  """"""  app = QApplication(sys.argv) browser = QWebView() browser.setHtml(html) browser.close() </code></pre>"	2015-08-11 02:20:13.817 UTC	31952001	"<p>Two items: 1. Use QWebPage instead of QWebView() 2. Class must be overridden</p>  <pre><code>#!/usr/bin/python  import sys  from PyQt4.QtGui import *   from PyQt4.QtCore import *   from PyQt4.QtWebKit import *   class QWebPageOverride(QWebPage):     def javaScriptAlert(browser, frame, message):             """"""Notifies session for alert, then pass.""""""             print ""signal for javaScriptAlert (class) fired""  html = """"""  &lt;html&gt; &lt;frameset cols=""1%,99%""&gt; &lt;frame name=""frame1"" id=""frame1"" src=""""&gt; &lt;frame name='frame2' id='frame2' src='javascript:var testVar=""Prevent Me!""; alert(testVar);'&gt;  &lt;/frameset&gt; &lt;/html&gt;  """"""  app = QApplication(sys.argv) browser = QWebPageOverride() frame = browser.mainFrame() frame.setHtml(html) print ""No popup""  browser2 = QWebPage() frame2 = browser2.mainFrame() frame2.setHtml(html) print ""After Popup""  exit() </code></pre>"			2015-08-11 21:10:33.07 UTC
32007012	javascript|python|parse-platform|parse-cloud-code	Passing a parameter to a python function from javascript?	"<p>I'm trying to use Parse Cloud Code to run a python script. I'm passing a parameter, but I seem to be getting an error. I'm not 100% sure what the problem is, but it seems like I'm not composing the url correctly. Any help would be appreciated. </p>  <p>My python code looks like this:</p>  <pre><code># a function that makes a sentence more exciting def excited(sentence):    return sentence + '!!!' </code></pre>  <p>Here's my code in main.js:</p>  <pre><code>Parse.Cloud.define('testFunction', function(request, response) {     var someParam = request.params['testString'];     var url = 'http://mywebsite.com/test.py/excited&amp;sentence=' + someParam;     Parse.Cloud.httpRequest({         url: url,         success: function(httpResponse) {             console.log(httpResponse.headers);             console.log(httpResponse.text);             response.success();         }, error: function(httpResponse, error) {             console.error('Request failed with response code ' + httpResponse.status);         }     }); }); </code></pre>"	2015-08-14 09:41:25.563 UTC	32007555	"<p><strong>EDITED:</strong></p>  <p>Now I understand the problem better. You are trying to call a python method from Parse.Cloud javascript based service. Based on their tutorials, I think you probably wanted the other way round.</p>  <p>Parse.Cloud allows you to deploy some server-side code in javascript. Then you can make REST API calls from your mobile app to the server endpoints by using either python or curl or any other language or tool. While testing, you can just call the end points from python on your box.</p>  <p>So your server code (in cloud/main.js) should look like this:</p>  <pre><code>Parse.Cloud.define(""testFunction"", function(request, response) {   var excitedSentence = request.params.testString + ""!!!"";   response.success(excitedSentence); }); </code></pre>  <p>This code creates a REST API endpoint at <a href=""https://api.parse.com/1/functions/testFunction"" rel=""nofollow noreferrer"">https://api.parse.com/1/functions/testFunction</a> </p>  <p>Then you can call this API endpoint by using python (assuming you have Python installed on your box):</p>  <pre><code>import json,httplib connection = httplib.HTTPSConnection('api.parse.com', 443) connection.connect() connection.request('POST', '/1/functions/testFunction', json.dumps({        ""testString"": ""This is an example sentence""      }), {        ""X-Parse-Application-Id"": ""xxxxx_PUT_YOUR_ID_xxxxxxx"",        ""X-Parse-REST-API-Key"": ""xxxxxxxx_YOUR_KEY_xxxxxx"",        ""Content-Type"": ""application/json""      }) result = json.loads(connection.getresponse().read()) print result </code></pre>  <p>If you don't have python installed, you can call the API endpoint by going to the online dashboard.</p>  <ol> <li>Go to: Your App -> Core tab -> API Console.</li> <li>For endpoint, select post (this is important), and specify ""functions/testFunction"" in the text box.</li> <li>In request body, specify: {""testString"" : ""This is an example sentence""}</li> <li><p>Click ""Send Request"" and you should see the following output:</p>  <pre><code>""result"": ""This is an example sentence!!!"" </code></pre></li> </ol>  <p><a href=""https://i.stack.imgur.com/o4wht.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/o4wht.png"" alt=""enter image description here""></a></p>"			2015-08-14 10:09:29.897 UTC
32071232	javascript|python-2.7|selenium|selenium-webdriver	Selenium Python Execute JavaScript click link i get an error. I think my syntax is wrong	"<p>I am trying to click a link on our webpage.  The page is built from GWT. I am using the JavaScript execute in Selenium Python.</p>  <pre><code>self.driver.execute_script(""document.gElementById('tab_administration').click()"") </code></pre>  <p>I get the following error when i run my code:</p>  <pre><code>File ""C:\Python27\lib\site-packages\selenium\webdriver\remote\errorhandler.py"", line 181, in check_response raise exception_class(message, screen, stacktrace) WebDriverException: Message: JavaScript error </code></pre>  <p>My code snippet is:</p>  <pre><code>     def click_administration(self):         time.sleep(10)         #self.driver.find_element(By.ID, 'tab_administration').click()         self.driver.execute_script(""document.gElementById('tab_administration').click()"")         #wait = WebDriverWait(self.driver, 10)         #element = wait.until(EC.element_to_be_clickable((By.ID, 'tab_administration')))         #element.click()         return AdministrationPage(self.driver) </code></pre>  <p>Is my JavaScript call syntax incorrect?  Why is it failing?</p>  <p>In Firefox dev tools it works.  From the console window i enter this line of code: </p>  <pre><code>document.gElementById('tab_administration').click()""; </code></pre>  <p>I am trying driver.execute_script because when i try WebDriverWait(self.driver, 10) i get a TimeOut Exception.</p>  <p>Some help appreciated.  Thanks.</p>  <p>Riaz</p>"	2015-08-18 11:32:13.847 UTC	32071316	"<p>try this:</p>  <pre><code>self.driver.execute_script(""arguments[0].click()"", yourElement); </code></pre>"			2015-08-18 11:35:36.41 UTC
32104218	python|authentication|request	"Login to website, that require javascript with python"	"<p>I'm trying to login to this website/browsergame <a href=""http://ts8.travian.com/?lang=en"" rel=""nofollow"">Travian login</a>. I have been searching for some time now, tried different modules, but so far I haven't succeeded...</p>  <pre><code>import requests  # Fill in your details here to be posted to the login form. payload = { 'name': 'username', 'password': 'password' }  # Use 'with' to ensure the session context is closed after use. with requests.Session() as s: p = s.post('http://ts8.travian.com/dorf1.php', data=payload) # print the html returned or something more intelligent to see if it's a     successful login page. print(p.text)  # An authorised request. r = s.get('http://ts8.travian.com/statistiken.php') print(r.text)     # etc... </code></pre>  <p>When it prints out r.text, the html code looks like it failed.. Anyone see what I'm doing wrong?</p>"	2015-08-19 19:38:04.993 UTC	34384133	<p>You're not sending all the correct params that they are expecting. They expect more than just the user/pass.</p>  <p>Here's some of my code for params I've used with Delphi</p>  <pre><code>  PostData.Add('name='+Username);   PostData.Add('password='+Password);   PostData.Add('s1='+'login');   PostData.Add('w='+'1440:900'); //mod'd for example    PostData.Add('login='+'1398184793'); // mod'd for example </code></pre>			2015-12-20 18:08:00.413 UTC
32119475	javascript|python|json|django	Print complex python variable in javascript	"<p>I am trying to print in <code>console.log()</code> my <code>series</code> variable but no success so far. </p>  <pre><code>def multiple_series(res):     matrix = dict(res)     all_cat_keys = set(key[0] for key in matrix)     categories = sorted(all_cat_keys)     all_series_keys = set(key[1] for key in matrix)     series = [         {             'name': series_key,             'data': [                 [cat_key, matrix.get((cat_key, series_key), 0)]                 for cat_key in categories             ],         }         for series_key in all_series_keys     ]     return series </code></pre>  <p>I've tried using <code>json.dumps()</code> and the well known <code>console.log({{ series }})</code> but I get nothing.</p>  <p>I'd like to print the content of <code>name</code> and <code>data</code>. Can anyone help me ? I don't have much experience using JS. Thanks</p>"	2015-08-20 13:23:25.723 UTC	32119947	"<p>Iam not sure about your input data - but you are building the series list the wrong way. You should build you <code>series</code> list like that:</p>  <pre><code>def multiple_series(res):     matrix = dict(res)     all_cat_keys = set(key[0] for key in matrix)     categories = sorted(all_cat_keys)     all_series_keys = set(key[1] for key in matrix)      series = []     for series_key in all_series_keys:         dict_to_add = {'name': series_key}         data_information = []         for cat_key in categories:             data_information.append((cat_key, matrix.get((cat_key, series_key), 0)))         dict_to_add['data'] = data_information         series.append(dict_to_add)     return series </code></pre>"			2015-08-20 13:42:59.91 UTC
32119475	javascript|python|json|django	Print complex python variable in javascript	"<p>I am trying to print in <code>console.log()</code> my <code>series</code> variable but no success so far. </p>  <pre><code>def multiple_series(res):     matrix = dict(res)     all_cat_keys = set(key[0] for key in matrix)     categories = sorted(all_cat_keys)     all_series_keys = set(key[1] for key in matrix)     series = [         {             'name': series_key,             'data': [                 [cat_key, matrix.get((cat_key, series_key), 0)]                 for cat_key in categories             ],         }         for series_key in all_series_keys     ]     return series </code></pre>  <p>I've tried using <code>json.dumps()</code> and the well known <code>console.log({{ series }})</code> but I get nothing.</p>  <p>I'd like to print the content of <code>name</code> and <code>data</code>. Can anyone help me ? I don't have much experience using JS. Thanks</p>"	2015-08-20 13:23:25.723 UTC	32119935	"<p><code>console.log({{ series }})</code> can not work because <code>{{ series }}</code> gets evaluated to text. Therefore JS thinks it's a JS object.</p>  <p>Add quotes around the object to treat it as text and it should work:</p>  <pre><code>console.log(""{{ series }}""); </code></pre>"			2015-08-20 13:42:37.467 UTC
32154131	javascript|python|python-2.7|beautifulsoup	fetch same elements but different values from javascript using python	"<p>This is similar to my last <a href=""https://stackoverflow.com/questions/31892945/how-to-fetch-javascript-contents-in-python"">question</a>.</p>  <p>The thing is that the whole script looks like this :-<a href=""http://pastebin.com/1MyGGD9h"" rel=""nofollow noreferrer"">http://pastebin.com/1MyGGD9h</a></p>  <p>And as you can see the 'userId' elements are repeated. The python script fetches the first one and ignores the second result. How do I fetch both of them and use their values separately.? </p>  <p>What I think could be done is fetch one element at a time and use the values separately. But, I can't seem to get it work.</p>  <p>Right now, for fetching the script .. my code looks like this:-</p>  <pre><code>Import re  from bs4 import BeautifulSoup  page = """""" &lt;script type=""text/javascript""&gt;             var logged = true;             var video_id = 59374;             var item_type = 'official';              var debug = false;             var baseUrl = 'http://www.example.com';             var base_url = 'http://www.example.com/';             var assetsBaseUrl = 'http://www.example.com/assets';             var apiBaseUrl = 'http://www.example.com/common';             var playersData = [{""playerId"":""showsPlayer"",""userId"":true,""solution"":""flash"",""playlist"":[{""itemId"":""5090"",""itemAK"":""Movie""}]]; &lt;/script&gt;&lt;script type=""text/javascript"" &gt; """""" soup = BeautifulSoup(page)  pattern = re.compile(r'""userId"":""(.*?)""', re.MULTILINE | re.DOTALL) script = soup.find(""script"", text=pattern)  print pattern.search(script.text).group(1) </code></pre>  <p>Right now, it shows ""true"". But, I want both the values. That is.. TRUE and FALSE, form both the elements. Any idea.?</p>"	2015-08-22 08:40:42.553 UTC	32154582	"<p>There is only one <code>userid</code> in your question example but if there were two you should use <code>findall</code>, search will stop when it gets the  first match:</p>  <pre><code>a,b = pattern.findall(script.text) </code></pre>  <p>Your regex also seems incorrect, there are no double quotes areound the values:</p>  <pre><code>html=""""""&lt;script type=""text/javascript""&gt;         var logged = true;         var video_id = 59374;         var item_type = 'official';          var debug = false;         var baseUrl = 'http://www.example.com';         var base_url = 'http://www.example.com/';         var assetsBaseUrl = 'http://www.example.com/assets';         var apiBaseUrl = 'http://www.example.com/common';         var playersData =     [{""playerId"":""showsPlayer"",""userId"":true,""solution"":""flash"",""userId"":false    ,""playlist"":[{""itemId"":""5090"",""itemAK"":""Movie""}]]; &lt;/script&gt;&lt;script type=""text/javascript"" &gt;""""""   pattern = re.compile(r'""userId"":(.*?),')   print pattern.findall(page) ['true', 'false'] </code></pre>"			2015-08-22 09:37:49.993 UTC
32248102	javascript|jquery|python|ajax	Sending data from JavaScript to Python function locally with AJAX	"<p>I am trying to build a website where a user can enter text, which will be picked up via javascript, and sent to a python function where it will be posted to twitter. For the time being, the python function is being stored locally, along with the rest of the site. However, my AJAX isn't too great and I'm having a few issues. </p>  <p>I have written AJAX code which sends a POST request to the python function with the tweet, and the response is the entire python script. No connection is made to the socket my script is listening to. Below is the AJAX function and the python script. Any ideas what's going on?</p>  <p>Thanks in advance for any help!</p>  <pre><code>$(function(){     $('#PostTweet').on('click', function(e) {      var tweet = document.getElementById(""theTweet"").value;     var len = tweet.length;      if(len &gt; 140){         window.alert(""Tweet too long. Please remove some characters"");     }else{          callPython(tweet);     }           });  });  function callPython(tweet){  window.alert(""sending"");  $.ajax({  type: ""POST"",  url: ""tweet.py"",  data: tweet,  success: function(response){     window.alert(response);   }  }) } </code></pre>  <p>And the Python Script:</p>  <pre><code>from OAuthSettings import settings import twitter from socket import *  consumer_key = settings['consumer_key'] consumer_secret = settings['consumer_secret'] access_token_key = settings['access_token_key'] access_token_secret = settings['access_token_secret']  s = socket() s.bind(('', 9999)) s.listen(4) (ns, na) = s.accept()  def PostToTwits(data):        try:      api = twitter.Api(      consumer_key = consumer_key,      consumer_secret = consumer_secret,      access_token_key = access_token_key,      access_token_secret = access_token_secret)       api.PostUpdate(data)      makeConnection(s)    except twitter.TwitterError:      print 'Post Unsuccessful. Error Occurred'   def makeConnection(s):     while True:         print ""connected with: "" + str(na)        try:            data = ns.recv(4096)            print data            PostToTwits(data)        except:            ns.close()            s.close()            break  makeConnection(s) </code></pre>"	2015-08-27 11:24:30.543 UTC	32248649	"<p>You can totally write a simple web server using sockets, and indeed you've done so. But this approach will quickly get tedious for anything beyond a simple exercise. </p>  <p>For example, your code is restricted to handling a single request handler, which goes to the heart of your problem.</p>  <p>The url on the post request is wrong.  In your setup there is no notion of a url ""tweet.py"". That url would actually work if you were also serving the web page where the jquery lives from the same server (but you can't be).  </p>  <p>You have  to post to ""<a href=""http://localhost:9999"" rel=""nofollow"">http://localhost:9999</a>"" and you can have any path you want after:""<a href=""http://localhost:9999/foo"" rel=""nofollow"">http://localhost:9999/foo</a>"", ""<a href=""http://localhost:9999/boo"" rel=""nofollow"">http://localhost:9999/boo</a>"".  Just make sure you run the python script from the command line first, so the server is listening.</p>  <p>Also the difference between a get and a post request is part of the HTTP protocol which your simple server doesn't know anything about. This mainly means that it doesn't matter what verb you use on the ajax request. Your server listens for all HTTP verb types.</p>  <p>Lastly, I'm not seeing any data being returned to the client.  You need to do something like ns.sendall(""Some response"").  Tutorials for building a simple http server abound and show different ways of sending responses.</p>"			2015-08-27 11:52:15.337 UTC
32248102	javascript|jquery|python|ajax	Sending data from JavaScript to Python function locally with AJAX	"<p>I am trying to build a website where a user can enter text, which will be picked up via javascript, and sent to a python function where it will be posted to twitter. For the time being, the python function is being stored locally, along with the rest of the site. However, my AJAX isn't too great and I'm having a few issues. </p>  <p>I have written AJAX code which sends a POST request to the python function with the tweet, and the response is the entire python script. No connection is made to the socket my script is listening to. Below is the AJAX function and the python script. Any ideas what's going on?</p>  <p>Thanks in advance for any help!</p>  <pre><code>$(function(){     $('#PostTweet').on('click', function(e) {      var tweet = document.getElementById(""theTweet"").value;     var len = tweet.length;      if(len &gt; 140){         window.alert(""Tweet too long. Please remove some characters"");     }else{          callPython(tweet);     }           });  });  function callPython(tweet){  window.alert(""sending"");  $.ajax({  type: ""POST"",  url: ""tweet.py"",  data: tweet,  success: function(response){     window.alert(response);   }  }) } </code></pre>  <p>And the Python Script:</p>  <pre><code>from OAuthSettings import settings import twitter from socket import *  consumer_key = settings['consumer_key'] consumer_secret = settings['consumer_secret'] access_token_key = settings['access_token_key'] access_token_secret = settings['access_token_secret']  s = socket() s.bind(('', 9999)) s.listen(4) (ns, na) = s.accept()  def PostToTwits(data):        try:      api = twitter.Api(      consumer_key = consumer_key,      consumer_secret = consumer_secret,      access_token_key = access_token_key,      access_token_secret = access_token_secret)       api.PostUpdate(data)      makeConnection(s)    except twitter.TwitterError:      print 'Post Unsuccessful. Error Occurred'   def makeConnection(s):     while True:         print ""connected with: "" + str(na)        try:            data = ns.recv(4096)            print data            PostToTwits(data)        except:            ns.close()            s.close()            break  makeConnection(s) </code></pre>"	2015-08-27 11:24:30.543 UTC	32250802	"<p>you need a webserver so that your can make request via web browser.</p>  <p>you can web framework like flask or django or you can use webpy.</p>  <p>A simple example using webpy from their website</p>  <pre><code>import web  urls = (     '/(.*)', 'hello' ) app = web.application(urls, globals())  class hello:             def GET(self, name):         if not name:              name = 'World'         return 'Hello, ' + name + '!'  if __name__ == ""__main__"":     app.run() </code></pre>  <p>then you call url(your python function) from javascript.</p>"			2015-08-27 13:32:22.653 UTC
32248102	javascript|jquery|python|ajax	Sending data from JavaScript to Python function locally with AJAX	"<p>I am trying to build a website where a user can enter text, which will be picked up via javascript, and sent to a python function where it will be posted to twitter. For the time being, the python function is being stored locally, along with the rest of the site. However, my AJAX isn't too great and I'm having a few issues. </p>  <p>I have written AJAX code which sends a POST request to the python function with the tweet, and the response is the entire python script. No connection is made to the socket my script is listening to. Below is the AJAX function and the python script. Any ideas what's going on?</p>  <p>Thanks in advance for any help!</p>  <pre><code>$(function(){     $('#PostTweet').on('click', function(e) {      var tweet = document.getElementById(""theTweet"").value;     var len = tweet.length;      if(len &gt; 140){         window.alert(""Tweet too long. Please remove some characters"");     }else{          callPython(tweet);     }           });  });  function callPython(tweet){  window.alert(""sending"");  $.ajax({  type: ""POST"",  url: ""tweet.py"",  data: tweet,  success: function(response){     window.alert(response);   }  }) } </code></pre>  <p>And the Python Script:</p>  <pre><code>from OAuthSettings import settings import twitter from socket import *  consumer_key = settings['consumer_key'] consumer_secret = settings['consumer_secret'] access_token_key = settings['access_token_key'] access_token_secret = settings['access_token_secret']  s = socket() s.bind(('', 9999)) s.listen(4) (ns, na) = s.accept()  def PostToTwits(data):        try:      api = twitter.Api(      consumer_key = consumer_key,      consumer_secret = consumer_secret,      access_token_key = access_token_key,      access_token_secret = access_token_secret)       api.PostUpdate(data)      makeConnection(s)    except twitter.TwitterError:      print 'Post Unsuccessful. Error Occurred'   def makeConnection(s):     while True:         print ""connected with: "" + str(na)        try:            data = ns.recv(4096)            print data            PostToTwits(data)        except:            ns.close()            s.close()            break  makeConnection(s) </code></pre>"	2015-08-27 11:24:30.543 UTC	32248314	"<p>Your problem is that you are working with pure sockets which know nothing about HTTP protocol. Take a look at <a href=""http://flask.pocoo.org/"" rel=""nofollow"">Flask</a> or <a href=""http://bottlepy.org/docs/dev/index.html"" rel=""nofollow"">Bottle</a> web micro frameworks to see how to turn python script or function into web endpoint.  </p>"			2015-08-27 11:33:58.777 UTC
32261111	javascript|python|json|django|python-requests	Pass Python Requests (in Django views.py) Json Data to Javascript	"<p>I have this python code, which fetches json and parses it:</p>  <pre><code>from django.http import HttpResponse import json, requests  def find(request):     context = {}     platformUrl = 'https://www.igdb.com/api/v1/platforms'     platformReq = requests.get(platformUrl, headers={'Authorization': 'Token token=""1234""'})     platformData = json.loads(platformReq.text)     platformList = platformData['platforms']     print platformList </code></pre>  <p>It outputs this with the print statement:</p>  <blockquote>   <p>[{u'slug': u'saturn', u'id': 32, u'name': u'Sega Saturn'}, {u'slug': u'mac', u'id': 14, u'name': u'Mac'}, {u'slug': u'vc', u'id': 47, u'name': u'Virtual Console (Nintendo)'}</p> </blockquote>  <p>I would like to pass that data to javascript and have the ID and name from the json put in this javascript. (selectize.js) This would probably require some type of for loop, could be javascript, or even djangos?:</p>  <pre><code>    options: [     {id: 1, title: 'Spectrometer'},     {id: 2, title: 'Star Chart'},     {id: 3, title: 'Electrical Tape'} ] </code></pre>  <p>Thanks</p>  <p><strong>EDIT:</strong>  Following @satoru's link, I looked into it, and updated my code to this:</p>  <pre><code>    from django.http import HttpResponse import json, requests  def find(request):     context = {}     platformUrl = 'https://www.igdb.com/api/v1/platforms'     platformReq = requests.get(platformUrl, headers={'Authorization': 'Token token=""1234""'})     platformList = json.dumps(platformData)      print platformList     return render_to_response('find.html',{'platformList':platformList}) </code></pre>  <p>It now outputs this: </p>  <blockquote>   <p>{""platforms"": [{""slug"": ""saturn"", ""id"": 32, ""name"": ""Sega Saturn""}, {""slug"": ""mac"", ""id"": 14, ""name"": ""Mac""}, {""slug"": ""vc"", ""id"": 47, ""name"": ""Virtual Console (Nintendo)""}</p> </blockquote>  <p>How would I then pass that into javascript?</p>"	2015-08-27 23:35:55.893 UTC	32261811	"<p>If the API already return a JSON-encoded response, you can just use <code>platformReq.text</code>. After passing it to <code>render_to_response</code>, you have access to a JSON-encoded string in your template.</p>  <p>Now you can design your Javascript module to be configurable with an object, for example:</p>  <pre><code>&lt;script src=""my_module.js""&gt;&lt;/script&gt; &lt;script&gt;    MyModule.initialize({{ json_encoded }}) &lt;/script&gt; </code></pre>"			2015-08-28 01:04:56.927 UTC
32261111	javascript|python|json|django|python-requests	Pass Python Requests (in Django views.py) Json Data to Javascript	"<p>I have this python code, which fetches json and parses it:</p>  <pre><code>from django.http import HttpResponse import json, requests  def find(request):     context = {}     platformUrl = 'https://www.igdb.com/api/v1/platforms'     platformReq = requests.get(platformUrl, headers={'Authorization': 'Token token=""1234""'})     platformData = json.loads(platformReq.text)     platformList = platformData['platforms']     print platformList </code></pre>  <p>It outputs this with the print statement:</p>  <blockquote>   <p>[{u'slug': u'saturn', u'id': 32, u'name': u'Sega Saturn'}, {u'slug': u'mac', u'id': 14, u'name': u'Mac'}, {u'slug': u'vc', u'id': 47, u'name': u'Virtual Console (Nintendo)'}</p> </blockquote>  <p>I would like to pass that data to javascript and have the ID and name from the json put in this javascript. (selectize.js) This would probably require some type of for loop, could be javascript, or even djangos?:</p>  <pre><code>    options: [     {id: 1, title: 'Spectrometer'},     {id: 2, title: 'Star Chart'},     {id: 3, title: 'Electrical Tape'} ] </code></pre>  <p>Thanks</p>  <p><strong>EDIT:</strong>  Following @satoru's link, I looked into it, and updated my code to this:</p>  <pre><code>    from django.http import HttpResponse import json, requests  def find(request):     context = {}     platformUrl = 'https://www.igdb.com/api/v1/platforms'     platformReq = requests.get(platformUrl, headers={'Authorization': 'Token token=""1234""'})     platformList = json.dumps(platformData)      print platformList     return render_to_response('find.html',{'platformList':platformList}) </code></pre>  <p>It now outputs this: </p>  <blockquote>   <p>{""platforms"": [{""slug"": ""saturn"", ""id"": 32, ""name"": ""Sega Saturn""}, {""slug"": ""mac"", ""id"": 14, ""name"": ""Mac""}, {""slug"": ""vc"", ""id"": 47, ""name"": ""Virtual Console (Nintendo)""}</p> </blockquote>  <p>How would I then pass that into javascript?</p>"	2015-08-27 23:35:55.893 UTC	32261813	"<p>Check out this <a href=""https://pypi.python.org/pypi/django-jsonify/0.2.1"" rel=""nofollow"">template library</a> to convert your platform list to a JSON object from within the template</p>  <p>Example(Inside your template):</p>  <pre><code>    &lt;script src=""your_standalone_js.js""&gt;     &lt;script&gt;         var js_variable = {{platformList | jsonify }};         function_in_standalone_js(js_variable);     &lt;/script&gt; </code></pre>  <p>your_standalone_js.js:</p>  <pre><code>    var function_in_standalone_js = function(js_variable){         var options = js_variable['platforms'];         //What ever you need to do with options     }; </code></pre>"			2015-08-28 01:05:32.097 UTC
32273897	javascript|jquery|python|html	Pass Python array to javascript?	"<p>I'm new to HTML/javascript.  I'm running a local server, with an html/javascript file and a separate python script.  </p>  <p>Question: <strong>How do I pass a python array to javascript variable?</strong></p>  <p>Work so far:  I've written the array to file <code>data.txt</code>: </p>  <pre><code>1  32.1 2  10.0 </code></pre>  <p>but I could put it in JSON format if it's easier.</p>  <p><strong>Here's my progress so far</strong>: </p>  <pre><code>var x_pos = []; jQuery.get('http://127.0.0.1:8000/data/data.txt',function(data){  // ??? Code here ???  });  console.log(x_pos[0]) </code></pre>  <p>Note: if there is a much simpler way to do this, I'm open to suggestion.  Thanks.</p>"	2015-08-28 14:52:28.757 UTC	32274255	"<p>One of the solutions is use split. It splits the string.</p>  <pre><code>    var newData = [];     data = data.split('\n');     data.forEach(function(entry){       entry = entry.split(' ');       newData.push({         x : entry[0],         y : entry[1]       });     });     console.log(newData); </code></pre>"			2015-08-28 15:09:24.83 UTC
32273897	javascript|jquery|python|html	Pass Python array to javascript?	"<p>I'm new to HTML/javascript.  I'm running a local server, with an html/javascript file and a separate python script.  </p>  <p>Question: <strong>How do I pass a python array to javascript variable?</strong></p>  <p>Work so far:  I've written the array to file <code>data.txt</code>: </p>  <pre><code>1  32.1 2  10.0 </code></pre>  <p>but I could put it in JSON format if it's easier.</p>  <p><strong>Here's my progress so far</strong>: </p>  <pre><code>var x_pos = []; jQuery.get('http://127.0.0.1:8000/data/data.txt',function(data){  // ??? Code here ???  });  console.log(x_pos[0]) </code></pre>  <p>Note: if there is a much simpler way to do this, I'm open to suggestion.  Thanks.</p>"	2015-08-28 14:52:28.757 UTC	32274307	"<p>You need to use regular expressions to parse the text file. You cannot just use <code>JSON.parse()</code> on a string that isn't in json format.</p>  <p><a href=""http://plnkr.co/edit/39aBGgwvNI7Lem6eiefu?p=preview"" rel=""nofollow"">http://plnkr.co/edit/39aBGgwvNI7Lem6eiefu?p=preview</a></p>  <pre><code>$.get(""http://localhost/data.txt"", parse);  function parse(str) {     var lineBreak = /\r\n/g;     var space = /\s/g;     var tmp = str.split(lineBreak).map(function(l) {         var split = l.split(space);         return { key: split[0], val: split[1]  };     });     var data = JSON.stringify(tmp, null, 2);     $(""#data"").text(data); } </code></pre>"			2015-08-28 15:11:53.787 UTC
32273897	javascript|jquery|python|html	Pass Python array to javascript?	"<p>I'm new to HTML/javascript.  I'm running a local server, with an html/javascript file and a separate python script.  </p>  <p>Question: <strong>How do I pass a python array to javascript variable?</strong></p>  <p>Work so far:  I've written the array to file <code>data.txt</code>: </p>  <pre><code>1  32.1 2  10.0 </code></pre>  <p>but I could put it in JSON format if it's easier.</p>  <p><strong>Here's my progress so far</strong>: </p>  <pre><code>var x_pos = []; jQuery.get('http://127.0.0.1:8000/data/data.txt',function(data){  // ??? Code here ???  });  console.log(x_pos[0]) </code></pre>  <p>Note: if there is a much simpler way to do this, I'm open to suggestion.  Thanks.</p>"	2015-08-28 14:52:28.757 UTC	32274013	"<p>Just create a json structure for this and do a <code>JSON.parse(data)</code> after.</p>  <p>Here is your structure:</p>  <p><code>{x: [1,2,3,4], y:[32.1,10.0,76.3]}</code></p>"			2015-08-28 14:57:50.757 UTC
32273897	javascript|jquery|python|html	Pass Python array to javascript?	"<p>I'm new to HTML/javascript.  I'm running a local server, with an html/javascript file and a separate python script.  </p>  <p>Question: <strong>How do I pass a python array to javascript variable?</strong></p>  <p>Work so far:  I've written the array to file <code>data.txt</code>: </p>  <pre><code>1  32.1 2  10.0 </code></pre>  <p>but I could put it in JSON format if it's easier.</p>  <p><strong>Here's my progress so far</strong>: </p>  <pre><code>var x_pos = []; jQuery.get('http://127.0.0.1:8000/data/data.txt',function(data){  // ??? Code here ???  });  console.log(x_pos[0]) </code></pre>  <p>Note: if there is a much simpler way to do this, I'm open to suggestion.  Thanks.</p>"	2015-08-28 14:52:28.757 UTC	32274052	"<pre><code>var x_array = [];     var y_array = [];       jQuery.get('http://localhost/test/data.txt',function(data){     var lines = data.split(/\r\n|\n/g);     for (var i = 0; i &lt; lines.length; i++) {         line = lines[i].split(/\s+/g);         x_array.push(line[0]);         y_array.push(line[1]);     }     console.log(x_array);     console.log(y_array); }); </code></pre>"			2015-08-28 14:59:42.133 UTC
32273897	javascript|jquery|python|html	Pass Python array to javascript?	"<p>I'm new to HTML/javascript.  I'm running a local server, with an html/javascript file and a separate python script.  </p>  <p>Question: <strong>How do I pass a python array to javascript variable?</strong></p>  <p>Work so far:  I've written the array to file <code>data.txt</code>: </p>  <pre><code>1  32.1 2  10.0 </code></pre>  <p>but I could put it in JSON format if it's easier.</p>  <p><strong>Here's my progress so far</strong>: </p>  <pre><code>var x_pos = []; jQuery.get('http://127.0.0.1:8000/data/data.txt',function(data){  // ??? Code here ???  });  console.log(x_pos[0]) </code></pre>  <p>Note: if there is a much simpler way to do this, I'm open to suggestion.  Thanks.</p>"	2015-08-28 14:52:28.757 UTC	32273967	"<p>Use JSON instead. Then you can just parse it as</p>  <pre><code>jQuery.get('http://localhost/data.txt', function(data) {   var xy = JSON.parse(data); }); </code></pre>  <p>and use as</p>  <pre><code>alert(xy['1']); // or xy.propertyname if it is not-numeric </code></pre>  <p>Your data structure would be like </p>  <pre><code>{   ""1"": 32.1,   ""2"": 0 } </code></pre>"			2015-08-28 14:55:44.293 UTC
32284317	javascript|python	Send Python information to a JavaScript file	"<p>I am new to Python and JavaScript and (attempting) to use cola.js. My HTML form sends information to Python, which turns it into an array of dictionaries.</p>  <pre><code>Class_Name(ndb.Model):     class_title = ndb.JsonProperty() def post(self):     classname = self.request.get('classname') #user inputs 1 classname     prereq = self.request.get('prereq') #user inputs 1 prereq     new_dictionary = {}     new_dictionary [classname] = prereq     new_class = Class_Name(class_title = new_dictionary) #stores as a dictionary     new_class.put()      Class_data = Class_Name.query().fetch() #gets all instances of Class_Name     *** code that goes in b/w sends back to input form if want to add more classes, else, goes to below code          output = []         for a in Class_data:             jsonprop = a.class_title             extracted_output = json.dumps(jsonprop)             output.append(extracted_output)         template_vars= {'Class_data': output}         template = jinja2_environment.get_template('template/post.html')         self.response.write(template.render(template_vars)) </code></pre>  <p>This is my basic code so far. I want to use cola.js to turn my information into a graph, basically mapping out each class with its prerequisites. However, the cola.js format is a JavaScript file that looks like this:</p>  <pre><code>graph = {   nodes: [   {     id: 'A'   }, {     id: 'B'   }, {     id: 'C'   } ],  links: [   {     id: 1,     source: 'A',     target: 'B'   }, {     id: 2,     source: 'B',     target: 'C'   }, {     id: 3,     source: 'C',     target: 'A'   } ] }; </code></pre>  <p>Is there any way I can tell JavaScript to get my Python array, and enter the info into the JavaScript file like this?</p>  <pre><code>graph = {   nodes: [   {     id: 'Class1' **will put actual class name   }, {     id: 'Class2'   } ],  links: [   {     id: 1,     source: 'Class1',     target: 'prereq'   }, {     id: 2,     source: 'Class2',     target: 'prereq'   } ] }; </code></pre>  <p>This is a rough code for turning my Python information into the JavaScript format.</p>  <pre><code>nodes_array = [] nodes_dict = {} links_array = [] links_dict = {} graph_array = []  #loops through every element for a in Class_data:     jsonprop = a.class_title     extracted_output = json.loads(jsonprop)  for c_class, prereq in extracted_output.iteritems():     # for the links dictionary       counter_link = 1     # creates {'id':'class1'}     nodes_dict['id'] = c_class     #creates [ {'id':'class1'},  {'id':'class2'}]     nodes_array.append(nodes_dictionary)     # creates {'id': 'counter', 'source': 'class1', 'target': 'prereq'}     links_dictionary[id] = counter_link     counter_link++     links_dictionary[source] = c_class     links_dictionary[target] = prereq     # creates [{'id': 'counter', 'source': 'class1', 'target': 'prereq'}]     links_array.append(links_dictionary)     #creating the format --&gt; 'nodes': [  {id: class1}, {id:class2},  {id:class3} ]""     #creating the format --&gt; 'links': [  {id: 1, source :class2, target :class3} ]""     graph[nodes] = nodes_array     graph[links] = links_array </code></pre>"	2015-08-29 08:54:28.843 UTC	32286209	"<p>Your Python script can use <a href=""https://docs.python.org/3.4/library/json.html"" rel=""nofollow"">the <code>json</code> module</a> to write the graph to a file in a format that JavaScript understands.</p>  <p>If you do this in Python:</p>  <pre><code>import json  graph = {     'nodes': [ {'id': 'Class1'}, {'id': 'Class2'} ],     'links': [         { 'id': 1, 'source': 'Class1', 'target': 'prereq' },         { 'id': 2, 'source': 'Class2', 'target': 'prereq' }     ] }  with open('graph.js', 'w') as out_file:   out_file.write('var graph = %s;' % json.dumps(graph)) </code></pre>  <p>The result is a file named <code>graph.js</code>, containing this:</p>  <pre><code>var graph = {""links"": [{""target"": ""prereq"", ""source"": ""Class1"", ""id"": 1}, {""target"": ""prereq"", ""source"": ""Class2"", ""id"": 2}], ""nodes"": [{""id"": ""Class1""}, {""id"": ""Class2""}]}; </code></pre>  <p>If you load <code>graph.js</code> before loading your own JavaScript file, you can refer to the variable <code>graph</code> to use your graph.</p>"			2015-08-29 12:45:38.467 UTC
32318888	javascript|json|serialization|web2py	web2py: json serializer and javascript has problems with quotes around python string	"<p>I want a complex 2d list to be brought from python to javascript. Javascript handles the numbers and list syntax (brackets and commas) just fine, but it can't understand the quotes around a string. I have tried embedding the list directly to the code and converting it to json first, but neither works. I think problem is in that javascript somehow converts <code>""</code> to something else, I show what I mean in a minute.</p>  <p>But here's a sample code to reproduce the problem.</p>  <p>Action:</p>  <pre><code>def problem():     this_works = [[1,2,5,6.99],[24,55,6.8,124]]     this_does_not = [[""a"",5,6,7],[""b"",8,9,10]]     return dict(locals()) </code></pre>  <p>View:</p>  <pre><code>{{extend 'layout.html'}} {{from gluon.serializers import json}}  &lt;p id=""test_1""&gt;unchanged&lt;/p&gt; &lt;p id=""test_2""&gt;unchanged&lt;/p&gt; &lt;p id=""test_3""&gt;unchanged&lt;/p&gt;  &lt;script&gt;     var x;     x = {{=this_works}};     document.getElementById(""test_1"").innerHTML = x;      var y;     //y = {{=this_does_not}};     document.getElementById(""test_2"").innerHTML = y;      var z;     //z = {{=json(this_does_not)}};     document.getElementById(""test_3"").innerHTML = z;  &lt;/script&gt; </code></pre>  <p>If either of those two lines are uncommented, the code breaks. If you check the source code of the html, you can see that web2py changes <code>""</code> to something else:</p>  <pre><code>&lt;script&gt;     var x;     x = [[1, 2, 5, 6.99], [24, 55, 6.8, 124]];     document.getElementById(""test_1"").innerHTML = x;      var y;     //y = [[&amp;#x27;a&amp;#x27;, 5, 6, 7], [&amp;#x27;b&amp;#x27;, 8, 9, 10]];     document.getElementById(""test_2"").innerHTML = y;      var z;     //z = [[&amp;quot;a&amp;quot;, 5, 6, 7], [&amp;quot;b&amp;quot;, 8, 9, 10]];     document.getElementById(""test_3"").innerHTML = z;  &lt;/script&gt; </code></pre>"	2015-08-31 19:51:14.393 UTC	32319118	"<p>For security reasons, the web2py template engine escapes all text inserted in the template. To prevent this, you should use the <code>XML()</code> helper:</p>  <pre><code>y = {{=XML(this_does_not)}}; </code></pre>"			2015-08-31 20:06:30.3 UTC
32328282	javascript|python|string|slice	JavaScript equivalent of python string slicing	"<p>Is there a JavaScript equivalent to this Python method of string slicing?</p> <pre class=""lang-py prettyprint-override""><code>&gt;&gt;&gt; 'stackoverflow'[1:] 'tackoverflow' </code></pre> <p>I have tried:</p> <pre class=""lang-js prettyprint-override""><code>// this crashes console.log(&quot;stackoverflow&quot;.slice(1,));  // output doesn't print the last letter 'w' console.log(&quot;stackoverflow&quot;.slice(1, -1)); // tackoverflo </code></pre>"	2015-09-01 09:40:10.82 UTC	51859182	"<h1>SLICE</h1>  <blockquote>   <p>Slice is a JavaScript implementation of Python's awesome negative   indexing and extended slice syntax for arrays and strings. It uses ES6   proxies to allow for an intuitive double-bracket indexing syntax which   closely replicates how slices are constructed in Python. Oh, and it   comes with an implementation of Python's range method too!</p> </blockquote>  <p>I know a package that solves this exact problem.</p>  <p>It's called</p>  <p><a href=""https://i.stack.imgur.com/jI43k.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/jI43k.png"" alt=""enter image description here""></a></p>  <p>you can <strong>literally</strong> do with arrays and string whatever you do in python.</p>  <p>to install this package:</p>  <pre><code>yarn add slice // or npm install slice </code></pre>  <hr>  <p><h2>Simple use cases</h2> </p>  <p>check out <a href=""https://github.com/intoli/slice/blob/master/README.md"" rel=""nofollow noreferrer"">&rarr; the docs &larr;</a> for more. <a href=""https://i.stack.imgur.com/E9TrM.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/E9TrM.png"" alt=""enter image description here""></a></p>"			2018-08-15 12:58:19.397 UTC
32328282	javascript|python|string|slice	JavaScript equivalent of python string slicing	"<p>Is there a JavaScript equivalent to this Python method of string slicing?</p> <pre class=""lang-py prettyprint-override""><code>&gt;&gt;&gt; 'stackoverflow'[1:] 'tackoverflow' </code></pre> <p>I have tried:</p> <pre class=""lang-js prettyprint-override""><code>// this crashes console.log(&quot;stackoverflow&quot;.slice(1,));  // output doesn't print the last letter 'w' console.log(&quot;stackoverflow&quot;.slice(1, -1)); // tackoverflo </code></pre>"	2015-09-01 09:40:10.82 UTC	49152041	"<p>See <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/slice"" rel=""nofollow noreferrer""><code>Array.prototype.slice</code></a> and <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/slice"" rel=""nofollow noreferrer""><code>String.prototype.slice</code></a>.</p> <pre class=""lang-js prettyprint-override""><code>'1234567890'.slice(1, -1);            // String '1234567890'.split('').slice(1, -1);  // Array </code></pre> <hr /> <p>However, Python slices have steps:</p> <pre class=""lang-py prettyprint-override""><code>'1234567890'[1:-1:2] </code></pre> <p>But <code>*.prototype.slice</code> has no <code>step</code> parameter. To remedy this, I wrote <a href=""https://github.com/hustcc/slice.js"" rel=""nofollow noreferrer""><code>slice.js</code></a>. To install:</p> <pre class=""lang-sh prettyprint-override""><code>npm install --save slice.js </code></pre> <p>Example usage:</p> <pre class=""lang-js prettyprint-override""><code>import slice from 'slice.js';  // for array const arr = slice([1, '2', 3, '4', 5, '6', 7, '8', 9, '0']);  arr['2:5'];        // [3, '4', 5] arr[':-2'];        // [1, '2', 3, '4', 5, '6', 7, '8'] arr['-2:'];        // [9, '0'] arr['1:5:2'];      // ['2', '4'] arr['5:1:-2'];     // ['6', '4']  // for string const str = slice('1234567890'); str['2:5'];        // '345' str[':-2'];        // '12345678' str['-2:'];        // '90' str['1:5:2'];      // '24' str['5:1:-2'];     // '64' </code></pre>"			2018-03-07 12:31:13.097 UTC
32328282	javascript|python|string|slice	JavaScript equivalent of python string slicing	"<p>Is there a JavaScript equivalent to this Python method of string slicing?</p> <pre class=""lang-py prettyprint-override""><code>&gt;&gt;&gt; 'stackoverflow'[1:] 'tackoverflow' </code></pre> <p>I have tried:</p> <pre class=""lang-js prettyprint-override""><code>// this crashes console.log(&quot;stackoverflow&quot;.slice(1,));  // output doesn't print the last letter 'w' console.log(&quot;stackoverflow&quot;.slice(1, -1)); // tackoverflo </code></pre>"	2015-09-01 09:40:10.82 UTC	32328341	<p>Or you could use substr</p>  <pre><code>s2 = s1.substr(1); </code></pre>			2015-09-01 09:42:50.317 UTC
32328282	javascript|python|string|slice	JavaScript equivalent of python string slicing	"<p>Is there a JavaScript equivalent to this Python method of string slicing?</p> <pre class=""lang-py prettyprint-override""><code>&gt;&gt;&gt; 'stackoverflow'[1:] 'tackoverflow' </code></pre> <p>I have tried:</p> <pre class=""lang-js prettyprint-override""><code>// this crashes console.log(&quot;stackoverflow&quot;.slice(1,));  // output doesn't print the last letter 'w' console.log(&quot;stackoverflow&quot;.slice(1, -1)); // tackoverflo </code></pre>"	2015-09-01 09:40:10.82 UTC	32328334	<p>Simply use <code>s2.slice(1)</code> without the comma.</p>			2015-09-01 09:42:38.673 UTC
32328282	javascript|python|string|slice	JavaScript equivalent of python string slicing	"<p>Is there a JavaScript equivalent to this Python method of string slicing?</p> <pre class=""lang-py prettyprint-override""><code>&gt;&gt;&gt; 'stackoverflow'[1:] 'tackoverflow' </code></pre> <p>I have tried:</p> <pre class=""lang-js prettyprint-override""><code>// this crashes console.log(&quot;stackoverflow&quot;.slice(1,));  // output doesn't print the last letter 'w' console.log(&quot;stackoverflow&quot;.slice(1, -1)); // tackoverflo </code></pre>"	2015-09-01 09:40:10.82 UTC	32328350	"<p>just change</p>  <pre><code>console.log(s2.slice(1,-1)); </code></pre>  <p>for</p>  <pre><code>console.log(s2.slice(1,s2.length)); </code></pre>  <p>You can check further info on <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/slice"" rel=""nofollow"">MDN</a></p>  <p><div class=""snippet"" data-lang=""js"" data-hide=""false""> <div class=""snippet-code""> <pre class=""snippet-code-js lang-js prettyprint-override""><code>var s2 = ""stackoverflow""; alert(s2.slice(1, s2.length));</code></pre> </div> </div> </p>"			2015-09-01 09:43:11.17 UTC
32328282	javascript|python|string|slice	JavaScript equivalent of python string slicing	"<p>Is there a JavaScript equivalent to this Python method of string slicing?</p> <pre class=""lang-py prettyprint-override""><code>&gt;&gt;&gt; 'stackoverflow'[1:] 'tackoverflow' </code></pre> <p>I have tried:</p> <pre class=""lang-js prettyprint-override""><code>// this crashes console.log(&quot;stackoverflow&quot;.slice(1,));  // output doesn't print the last letter 'w' console.log(&quot;stackoverflow&quot;.slice(1, -1)); // tackoverflo </code></pre>"	2015-09-01 09:40:10.82 UTC	71977235	"<p>If you need the step argument here is a solution</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-js lang-js prettyprint-override""><code>Array.prototype.slice_ = function(start,end,step=1) {     return this.slice(start,end)         .reduce((acc, e, i) =&gt; i % step == 0          ? [...acc, e]          : acc, []);  } console.log([1,2,3,4,5,6,7,8,9,10].slice_(1, 10, 2))</code></pre> </div> </div> </p>"			2022-04-23 05:56:43.057 UTC
32350511	javascript|python	Send data from javascript to python	"<p>I use the below code to send data (GET) from python to javascript.</p>  <p>in javascript:</p>  <pre><code>$.get('http://localhost:5000/api/scan').success(function(res) {         obj = JSON.parse(res);         if(obj['channel'] == ""1""){         document.getElementById(""channelZero"").innerHTML = ""1"";         }}); </code></pre>  <p>in python:</p>  <pre><code>channels_str =  channels.getvalue() data['channel'] = channels_str return dumps(data) </code></pre>  <p>how can I send data from javascript to python?</p>"	2015-09-02 10:18:33.007 UTC	32350818	"<p>In case </p>  <pre><code>$.get('http://localhost:5000/api/scan').success(function(res) {     //your code }}); </code></pre>  <p>you request <strong>scan</strong>, but if you add ""?who=Masha"" you send a parameter <strong>who</strong> with a value <strong>""Masha""</strong> as <strong>get request</strong> parameter. </p>  <pre><code>$.get('http://localhost:5000/api/scan?who=Masha').success(function(res) {     //your code }}); </code></pre>  <p>Then if your python get response (typically <code>def do_GET(self):</code>)  has:</p>  <pre><code>data['channel'] = urlparse.parse_qs(urlparse.urlparse(self.path).query).get('who', None) </code></pre>  <hr>  <p>Note that you need to import <a href=""https://docs.python.org/2/library/urlparse.html"" rel=""nofollow"">urlparse</a> (In Python3, you'd use urllib.parse)</p>  <h2>    import urlparse</h2>  <p>From <a href=""http://www.w3schools.com/tags/ref_httpmethods.asp"" rel=""nofollow"">w3schools</a></p>  <blockquote>   <h1>The GET Method</h1>      <h3>Note that the query string (name/value pairs) is sent</h3>      <p>in the <strong>URL</strong> of a GET request:</p>  <pre><code>/test/demo_form.asp?name1=value1&amp;name2=value2  </code></pre>      <h3>Some other notes on GET requests:</h3>      <ul>   <li>GET requests can be cached</li>   <li>GET requests remain in the browser history</li>   <li>GET requests can be bookmarked</li>   <li>GET requests should never be used when dealing with sensitive data</li>   <li>GET requests have length restrictions</li>   <li>GET requests should be used only to retrieve data</li>   </ul> </blockquote>"			2015-09-02 10:33:24.77 UTC
32387549	javascript|python|properties	Python equivalent of JavaScript's `Object.defineProperty()`	"<p>As I transition from JavaScript to Python, I noticed I haven't figured out a way to add properties to the data type classes.  For example, in JavaScript, if I wanted to be able to type <code>arr.last</code> and have it return the last element in the array <code>arr</code>, or type <code>arr.last = 'foo'</code> and to set the last element to <code>'foo'</code>, I would use:</p>  <pre><code>Object.defineProperty(Array.prototype,'last',{     get:function(){         return this[this.length-1];     },     set:function(val){         this[this.length-1] = val;     } });  var list = ['a','b','c']; console.log(list.last); // ""c"" list.last = 'd'; console.log(list); // [""a"",""b"",""d""] </code></pre>  <p>However, in Python, I'm not sure how to do the equivalent of <code>Object.defineProperty(X.prototype,'propname',{get:function(){},set:function(){}});</code></p>  <p><strong>Note: I am <em>not</em> asking for how to do the specific example function, I am trying to be able to define a property with a <code>get</code> and <code>set</code> onto the primitive data types (str, int, float, list, dict, set, etc.)</strong></p>"	2015-09-04 00:45:45.297 UTC	34347426	"<p>In Python 2<sup>1</sup>, adding new attributes (aka member objects, including methods) to a new-style class (one that derives from <code>object</code>) is as easy as simply defining them:</p>  <pre class=""lang-py prettyprint-override""><code>class Foo(object):     def __init__(self):         self._value = ""Bar""  def get_value(self):     return self._value  def set_value(self, val):     self._value = val  def del_value(self):     del self._value  Foo.value = property(get_value, set_value, del_value) f = Foo()  print f.value f.value = ""Foo"" print f.value </code></pre>  <p>I use the <a href=""https://docs.python.org/2/library/functions.html#property"" rel=""nofollow noreferrer""><code>property</code></a> builtin that Dan D. mentioned in <a href=""https://stackoverflow.com/a/32387596/2508324"">his answer</a>, but this actually assigns the attribute <em>after</em> the class is created, like the question asks.</p>  <p><a href=""http://ideone.com/GNnxxZ"" rel=""nofollow noreferrer"">Online demo</a></p>  <p><sup>1: in Python 3, it's even simpler, since all classes are new-style classes</sup></p>"			2015-12-18 02:00:40.98 UTC
32387549	javascript|python|properties	Python equivalent of JavaScript's `Object.defineProperty()`	"<p>As I transition from JavaScript to Python, I noticed I haven't figured out a way to add properties to the data type classes.  For example, in JavaScript, if I wanted to be able to type <code>arr.last</code> and have it return the last element in the array <code>arr</code>, or type <code>arr.last = 'foo'</code> and to set the last element to <code>'foo'</code>, I would use:</p>  <pre><code>Object.defineProperty(Array.prototype,'last',{     get:function(){         return this[this.length-1];     },     set:function(val){         this[this.length-1] = val;     } });  var list = ['a','b','c']; console.log(list.last); // ""c"" list.last = 'd'; console.log(list); // [""a"",""b"",""d""] </code></pre>  <p>However, in Python, I'm not sure how to do the equivalent of <code>Object.defineProperty(X.prototype,'propname',{get:function(){},set:function(){}});</code></p>  <p><strong>Note: I am <em>not</em> asking for how to do the specific example function, I am trying to be able to define a property with a <code>get</code> and <code>set</code> onto the primitive data types (str, int, float, list, dict, set, etc.)</strong></p>"	2015-09-04 00:45:45.297 UTC	32387596	"<p>See the documentation of the <a href=""https://docs.python.org/2/library/functions.html#property"" rel=""nofollow""><code>property</code></a> function. It has examples. The following is the result of <code>print property.__doc__</code> under Python 2.7.3:</p>  <pre><code>property(fget=None, fset=None, fdel=None, doc=None) -&gt; property attribute  fget is a function to be used for getting an attribute value, and likewise fset is a function for setting, and fdel a function for del'ing, an attribute.  Typical use is to define a managed attribute x: class C(object):     def getx(self): return self._x     def setx(self, value): self._x = value     def delx(self): del self._x     x = property(getx, setx, delx, ""I'm the 'x' property."")  Decorators make defining new properties or modifying existing ones easy: class C(object):     @property     def x(self): return self._x     @x.setter     def x(self, value): self._x = value     @x.deleter     def x(self): del self._x </code></pre>"			2015-09-04 00:54:47.82 UTC
32387549	javascript|python|properties	Python equivalent of JavaScript's `Object.defineProperty()`	"<p>As I transition from JavaScript to Python, I noticed I haven't figured out a way to add properties to the data type classes.  For example, in JavaScript, if I wanted to be able to type <code>arr.last</code> and have it return the last element in the array <code>arr</code>, or type <code>arr.last = 'foo'</code> and to set the last element to <code>'foo'</code>, I would use:</p>  <pre><code>Object.defineProperty(Array.prototype,'last',{     get:function(){         return this[this.length-1];     },     set:function(val){         this[this.length-1] = val;     } });  var list = ['a','b','c']; console.log(list.last); // ""c"" list.last = 'd'; console.log(list); // [""a"",""b"",""d""] </code></pre>  <p>However, in Python, I'm not sure how to do the equivalent of <code>Object.defineProperty(X.prototype,'propname',{get:function(){},set:function(){}});</code></p>  <p><strong>Note: I am <em>not</em> asking for how to do the specific example function, I am trying to be able to define a property with a <code>get</code> and <code>set</code> onto the primitive data types (str, int, float, list, dict, set, etc.)</strong></p>"	2015-09-04 00:45:45.297 UTC	32387573	"<p>If I understood you correctly, you want to edit existing classes (add method) Check out this thread <a href=""https://stackoverflow.com/questions/962962/python-changing-methods-and-attributes-at-runtime"">Python: changing methods and attributes at runtime</a></p>"			2015-09-04 00:50:26.807 UTC
32454602	javascript|python|date|datetime|time	How make Javascript new Date().toUTCString() into Python	"<p>How I can get on python result as new Date().toUTCString() on Javascript?</p>  <p>on Javascript I make:</p>  <pre><code>new Date().toUTCString() ""Tue, 08 Sep 2015 09:45:32 GMT"" </code></pre>  <p>on Python</p>  <pre><code>import datetime # or time, or either date = ??? # some code print date # &gt;&gt;&gt; ""Tue, 08 Sep 2015 09:45:32 GMT"" </code></pre>"	2015-09-08 09:52:19.48 UTC	32454959	"<p>The time format looks similar to <a href=""https://docs.python.org/library/email.util.html#email.utils.formatdate"" rel=""nofollow noreferrer"">RFC 2822 format (used in emails)</a>:</p>  <pre><code>&gt;&gt;&gt; import email.utils &gt;&gt;&gt; email.utils.formatdate(usegmt=True) 'Tue, 08 Sep 2015 10:06:04 GMT' </code></pre>  <p>Or you can get any time format you want using <a href=""https://docs.python.org/3/library/datetime.html#strftime-strptime-behavior"" rel=""nofollow noreferrer""><code>datetime.strftime()</code></a>:</p>  <pre><code>&gt;&gt;&gt; from datetime import datetime, timezone &gt;&gt;&gt; d = datetime.now(timezone.utc) &gt;&gt;&gt; d datetime.datetime(2015, 9, 8, 10, 6, 4, tzinfo=datetime.timezone.utc) &gt;&gt;&gt; str(d) '2015-09-08 10:06:04+00:00' &gt;&gt;&gt; d.strftime('%a, %d %b %Y %H:%M:%S %Z') 'Tue, 08 Sep 2015 10:06:04 UTC' &gt;&gt;&gt; d.strftime('%a, %d %b %Y %H:%M:%S %z') 'Tue, 08 Sep 2015 10:06:04 +0000' </code></pre>  <p>where <a href=""https://stackoverflow.com/a/22330133/4279""><code>timezone.utc</code> is defined here</a>.</p>"			2015-09-08 10:09:03.11 UTC
32454602	javascript|python|date|datetime|time	How make Javascript new Date().toUTCString() into Python	"<p>How I can get on python result as new Date().toUTCString() on Javascript?</p>  <p>on Javascript I make:</p>  <pre><code>new Date().toUTCString() ""Tue, 08 Sep 2015 09:45:32 GMT"" </code></pre>  <p>on Python</p>  <pre><code>import datetime # or time, or either date = ??? # some code print date # &gt;&gt;&gt; ""Tue, 08 Sep 2015 09:45:32 GMT"" </code></pre>"	2015-09-08 09:52:19.48 UTC	32455019	<p>Try this..</p>  <pre><code>from datetime import datetime date = datetime.utcnow().ctime() print date # &gt;&gt;&gt; 'Tue Sep  8 10:10:22 2015' </code></pre>			2015-09-08 10:11:21.92 UTC
32454602	javascript|python|date|datetime|time	How make Javascript new Date().toUTCString() into Python	"<p>How I can get on python result as new Date().toUTCString() on Javascript?</p>  <p>on Javascript I make:</p>  <pre><code>new Date().toUTCString() ""Tue, 08 Sep 2015 09:45:32 GMT"" </code></pre>  <p>on Python</p>  <pre><code>import datetime # or time, or either date = ??? # some code print date # &gt;&gt;&gt; ""Tue, 08 Sep 2015 09:45:32 GMT"" </code></pre>"	2015-09-08 09:52:19.48 UTC	32455166	"<pre><code>    import datetime     date = datetime.datetime.utcnow().strftime(""%c"")     print date # &gt;&gt;&gt; 'Tue Sep  8 10:14:17 2015'` </code></pre>"			2015-09-08 10:19:32.867 UTC
32489601	javascript|python	"I have this python script, I'd rather use JavaScript"	"<p>I have this chunk of Python that I cobbled together from various sources (I am not a programmer or developer or even in any kind of technical trade, I just needed something to automate some processes).  This is not the actual specific script, but it's written and works the same way:</p>  <pre><code>import os os.system('cls')  from sys import argv  script, filename = argv  print ""MADLIBS!""  print ""If %r exists, it will be erased."" % filename print ""To abort, hit CTRL-C (^C)."" print ""To proceed, hit RETURN.""  raw_input(""?"")  os.system('cls')  print ""Opening file %r..."" % filename target = open(filename, 'w')  print ""Overwriting file %r."" % filename target.truncate()  analyst = raw_input(""Please enter the title of this madlib: "") appdate = raw_input(""Please enter your name: "") print  print ""Thank you.  Please enter the following information:"" print  verb    = raw_input(""   Enter a verb:           "") noun    = raw_input(""   Enter a noun:           "")   print ""Thank you.""   target.write(""&lt;!DOCTYPE html PUBLIC '-//W3C//DTD XHTML 1.0 Strict//EN' 'http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd'&gt;"") target.write(""\n"") target.write(""&lt;html xml:lang='en' xmlns='http://www.w3.org/1999/xhtml' lang='en'&gt;"") target.write(""\n"") target.write(""&lt;head&gt;"") target.write(""\n"") target.write(""&lt;meta http-equiv='content-type' content='text/html; charset=UTF-8'/&gt;"") target.write(""\n"") target.write(appdate) target.write(""'s Madlib story!"") target.write(""&lt;p&gt;"") target.write(""Go "") target.write(verb) target.write("" a "") target.write(noun) target.write(""."")  target.write(""&lt;p&gt;"") target.write(""&lt;p&gt;"") target.write(""&lt;p&gt;"")  target.write(""&lt;a href='javascript:window.print()' title='Send to printer'&gt;Send to printer&lt;/a&gt;&amp;nbsp;&amp;nbsp;"") target.write(""\n"") target.write("""") target.write(""\n"") target.write(""&lt;script language='VBScript'&gt;"") target.write(""\n"") target.write(""    Sub Window_Onload"") target.write(""\n"") target.write(""      window.opener = 'x'"") target.write(""\n"") target.write(""    End Sub"") target.write(""\n"") target.write(""&lt;/script&gt;"") target.write(""\n"") target.write("""") target.write(""\n"") target.write(""\n"")  target.write(""&lt;a href='javascript:self.close()' title='Close this window'&gt;Close this window&lt;/a&gt;"") target.write(""\n"")  target.write(""&lt;/body&gt;"") target.write(""\n"") target.write(""&lt;/html&gt;"")  target.close() os.system(filename) </code></pre>  <p>It creates an HTML document using input gathered from the user via Python.  It essentially does what I want it to do, but I'm starting to think Python is not the best route to get what I want here (I only created the script because I was curious about Python and wanted to try creating something).  Can anyone give any general advice on doing something similar using JavaScript (rather than Python) to gather user input <em>in</em> a browser window and display it <em>to</em> the browser window?  </p>  <p>I realize there is a certain amount of general clumsiness with the way the code is put together and it's not particularly elegant, but that's something I can deal with later.  For now, I'd just like a JavaScript version of it to work so I can tweak and refine it later. Any suggestions?</p>"	2015-09-09 21:39:43.663 UTC	32489717	"<p>This is about as basic as it gets in JavaScript. Here's a snippet with a rough translation of your code.</p>  <p><div class=""snippet"" data-lang=""js"" data-hide=""false""> <div class=""snippet-code""> <pre class=""snippet-code-js lang-js prettyprint-override""><code>var appdate = prompt(""Please enter your name:""); var verb = prompt(""Enter a verb:""); var noun = prompt(""Enter a noun:""); var story = appdate + ""'s Madlib story!&lt;p&gt;Go "" + verb + "" a "" + noun + "".""; document.getElementById(""madLib"").innerHTML = story;</code></pre> <pre class=""snippet-code-html lang-html prettyprint-override""><code>&lt;div id=""madLib""&gt; &lt;/div&gt;</code></pre> </div> </div> </p>"			2015-09-09 21:50:42.983 UTC
32512651	javascript|python|html	Trying to make an anchor open with javascript and python	"<p>First of all, sorry for any mistakes, I'm an extreme novice coder.</p>  <p>What I'm trying to do is open a link on a page (which is html generated by python), have it open in another window to an anchor. This anchor is a reversedisplay javascript, which means that I want to open the contents of where the anchor is.</p>  <p>The initial python/html link is as follows:</p>  <pre><code>print ""/&gt;TEXT HERE&lt;a value=\""mg-auto\"" onClick=\""Open('mg-auto')\"" href=\""http://LINKHERE/#mg-auto\"" target=\""_blank\""&gt;&lt;font title=\""mg-auto\"" &gt;(&lt;span class=\""tooltip\""&gt;?&lt;/span&gt;)&lt;/font&gt;&lt;/a&gt;"" </code></pre>  <p>which you would click to lead to this:</p>  <pre><code>&lt;a href=""javascript:ReverseDisplay('mg-auto')""&gt;mg-auto&lt;/a&gt; &lt;div id=""mg-auto"" style=""display:none;""&gt; TEXT HERE  &lt;hr /&gt; &lt;/div&gt; </code></pre>  <p>The javascript function to open the reverse display is this:</p>  <pre><code>function Open(d) { document.getElementById(d).style.display = ""block""; }  </code></pre>  <p>I have implemented this function in both the html and the python.</p>  <p>However, for some reason the anchor won't work at all. I fiddled around and discovered that a header + id like so:</p>  <pre><code>&lt;h3 id=""IDNAME""&gt;&lt;/h3&gt; </code></pre>  <p>will make a valid anchor, but the div + id like I have will not.However, I can't combine a header and the javascript function without breaking the html.</p>  <p>Does anyone know of a way to make an anchor work? I guess my biggest problem is no matter how I try to implement the id, when I try to link to the anchor it will not recognize the '#IDNAME'</p>"	2015-09-10 22:31:58.643 UTC	32513634	"<p>From what I can understand, you want someone clicking on the '(?)' to get a new window where the div that is <code>display=""none""</code> to start with gets <code>display=""block""</code>.</p>  <p>Putting '#mg-auto' after the link (a <em>fragment</em> or <em>hash</em>) will take you to the element with that id attribute when the page loads (it will jump-scroll to it if it is off screen). But the problem is that the <code>onClick=""Open('mg-auto')""</code> will get run <em>before</em> you follow the link, not after the new page loads in a new window. So in the new window the div still has <code>display=""none""</code>.</p>  <p>To run something when a page loads you can use the <code>window.onload</code> event, so all you then need is the hash. Check the code below.</p>  <pre><code>window.onload = function() {   // Check if hash exists   if(window.location.hash) {     // Remove the ""#"" from the hash     hash = window.location.hash.substr(1);     // Display element with id == hash     document.getElementById(hash).style.display = ""block"";   } } </code></pre>  <p>That code will run when everything on the page has been loaded.</p>  <p>PS: You can essentially put an id on any element (including div and headings) and have the hash of you url take you to it.</p>"			2015-09-11 00:23:51.94 UTC
32525613	javascript|python|ajax	execute python script from javascript	"<p>I am a newbie to python. I am working on a web app and trying to call a python script from a js script. I am using ajax to call the .py script as follows but I just keep getting the code returned in the response. For simplicity, I have reduced the computation in the python script - even the variable x is not being returned to the js file.</p>  <p>in js function</p>  <pre><code>  return $.ajax({     type: 'GET',     url: 'test.py',      success: function(response) {       console.log(response);     },     error: function(response) {       return console.error(response);     }   }); </code></pre>  <p>test.py</p>  <pre><code>#!/usr/bin/python  print(""Hello World"")  x = 2 return x </code></pre>  <p>The request succeeds because it moves inside success. response is the python code instead of 2. Thanks for your help!</p>"	2015-09-11 14:16:09.47 UTC	32525772	"<p>You have to use a so called application server to serve HTTP requests in Python. Look at this <a href=""https://docs.python.org/2/library/simplehttpserver.html"" rel=""nofollow"">one</a> or try to use some lightweight web frameworks like <a href=""http://flask.pocoo.org"" rel=""nofollow"">Flask</a>.</p>  <p>The simplest web application in the Flask will look like this (in example, put it to <code>app.py</code> file):</p>  <pre><code>from flask import Flask app = Flask(__name__)  @app.route(""/test.py"")  # consider to use more elegant URL in your JS def get_x():     x = 2     return x  if __name__ == ""__main__"":     # here is starting of the development HTTP server     app.run() </code></pre>  <p>Then you must start your server by doing:</p>  <pre><code>python app.py </code></pre>  <p>By default it'll start on <code>localhost:3000</code>. Hence, you have to change <code>url</code> in the JS code to <code>http://localhost:3000/test.py</code>.</p>  <p><strong>UPD:</strong> Also note that the listed web servers are not production-ready. To build the production-ready configuration you can use something like <a href=""https://www.digitalocean.com/community/tutorials/how-to-deploy-python-wsgi-applications-using-uwsgi-web-server-with-nginx"" rel=""nofollow"">uWSGI+nginx</a> binding.</p>"			2015-09-11 14:24:20.71 UTC
32535286	javascript|jquery|python|phantomjs	getting the javascript results in python list	"<p>I use this site to download required info about lat/ lon of districts of India.</p>  <pre><code>http://india.csis.u-tokyo.ac.jp/ </code></pre>  <p>Can I get all the districts of a give state using python? For e.g. if I choose State: maharashtra I get the list of districts like Akola, Raigarh in the next drop down list. I need that info as a python list.</p>  <p>I can see that a javascript function is called and it is getting the data from /api/ directory.</p>  <pre><code>function setDistrictList() {     var selected = """";     state = $(""#state_list"").val();     districts = {};     url = ""/api/getDistrictList""; </code></pre>  <p>Is it possible that I can get this list of districts programmatically using python?</p>  <p>update:</p>  <p>I have tried this function. But that returns the results and not the Java Script drop down list that I expect.</p>  <pre><code>def __getVillageMarkersFromWeb(self,query, state_code=None, district_code=None):     stateString = '""state"":""' + state_code + '""' if state_code is not None else """"     districtString = ',""district"":""' + district_code + '""' if district_code is not None else """"     f_param = '{' + stateString + districtString + '}'     params = urllib.urlencode({""q"":query,""f"":f_param})     url = ""http://india.csis.u-tokyo.ac.jp/geocode-cgi/census_ajax_json.cgi""     http = httplib2.Http()     response, markers_xml = http.request(url, ""POST"", params)     dom = minidom.parseString(markers_xml)     markers = dom.getElementsByTagName(""marker"")     return markers </code></pre>"	2015-09-12 04:52:13.047 UTC	32535341	"<p>You could, using <a href=""http://www.crummy.com/software/BeautifulSoup/"" rel=""nofollow"">BeautifulSoup</a>.</p>  <p>BeautifulSoup allows you to target elements with particular class/id after you've gotten the markup from a page using Requests/urllib/urllib2.</p>  <p>Then you can loop through your BS object and save each to your list.</p>  <p>If the content on a page is generated with JavaScript, <a href=""http://blog.rimthong.com/ghost-in-the-web-scraping-with-phantom-and-casper/"" rel=""nofollow"">PhantomJS</a> can emulate the JS before the markup is scraped.</p>"			2015-09-12 05:02:44.337 UTC
32569522	javascript|python|python-3.x|python-3.4	"Python 3.4, how to execute Javascript on a website and catch result? (like it appears in the browser)"	"<p>So I'm making this scraper program but I would need to catch information that doesn't show up in the source code. </p>  <p>Here is what it looks like in the source :</p>  <pre><code>&lt;td&gt;&lt;script&gt; &lt;type=""text/javascript""&gt;SCRIPT(""SUPERLONGVARIABLE"")&lt;/script&gt;&lt;/td&gt; </code></pre>  <p>And I'd like to be able to catch the result (which is just a short string of about 5 - 20 letters).</p>  <p>Any idea how I could do that? Not sure if the requests module can help me on this one.</p>  <p>Thanks in advance guys! :)</p>"	2015-09-14 16:25:17.45 UTC	32569948	"<p>Basically, you'd want to learn how to use selenium for python : <a href=""https://selenium-python.readthedocs.org/"" rel=""nofollow noreferrer"">link</a>.<br> By utilizing <code>driver.execute_script('foo')</code>, you can actually get the result of that execution.</p>  <p>For simliar answer, look at <a href=""https://stackoverflow.com/questions/5585343/getting-the-return-value-of-javascript-code-in-selenium/5585345#5585345"">this question</a> on so</p>"			2015-09-14 16:53:34.1 UTC
32588137	python	How can python convert javascript timeformat?	"<p>I found the time format below on kickstarter website:  </p>  <pre><code>2015-10-02T20:40:00-04:00 2015-10-19T19:02:40-04:00 2015-09-26T18:53:30-04:00 </code></pre>  <p>But I have no idea what's this format? Does it has timezone?</p>  <p>I use python, so I want to know how can I convert it to Python time format?</p>  <p>And I found a nodejs project (source code below) which can convert to string like <code>1441424612000</code>.</p>  <pre><code>timeEnd: function ($) {     var endTimeStr, date, endTimeInMillis;      endTimeStr = $('#project_duration_data').attr('data-end_time');     date = new Date(endTimeStr);     endTimeInMillis = date.getTime();      return endTimeInMillis; }, </code></pre>  <p>What is this time format? Can Python do this? </p>"	2015-09-15 14:02:29.307 UTC	32588317	"<pre><code>new Date('2015-10-02T20:40:00-04:00').getTime()  result 1443832800000 </code></pre>  <p>in python</p>  <pre><code>import datetime datetime.datetime.fromtimestamp(1443832800000/1000.0) datetime.datetime(2015, 10, 3, 3, 40) </code></pre>"			2015-09-15 14:11:07.963 UTC
32588137	python	How can python convert javascript timeformat?	"<p>I found the time format below on kickstarter website:  </p>  <pre><code>2015-10-02T20:40:00-04:00 2015-10-19T19:02:40-04:00 2015-09-26T18:53:30-04:00 </code></pre>  <p>But I have no idea what's this format? Does it has timezone?</p>  <p>I use python, so I want to know how can I convert it to Python time format?</p>  <p>And I found a nodejs project (source code below) which can convert to string like <code>1441424612000</code>.</p>  <pre><code>timeEnd: function ($) {     var endTimeStr, date, endTimeInMillis;      endTimeStr = $('#project_duration_data').attr('data-end_time');     date = new Date(endTimeStr);     endTimeInMillis = date.getTime();      return endTimeInMillis; }, </code></pre>  <p>What is this time format? Can Python do this? </p>"	2015-09-15 14:02:29.307 UTC	32589076	"<p>I deleted TZ format before parse</p>  <pre><code>from datetime import datetime  t1 = '2015-10-02T20:40:00-04:00' t2 = '2015-10-19T19:02:40-04:00' t3 = '2015-09-26T18:53:30-04:00'  date1 = datetime.strptime(t1.replace(' ', '')[:-6], '%Y-%m-%dT%H:%M:%S') date2 = datetime.strptime(t2.replace(' ', '')[:-6], '%Y-%m-%dT%H:%M:%S') date3 = datetime.strptime(t3.replace(' ', '')[:-6], '%Y-%m-%dT%H:%M:%S') print(date1) print(date2) print(date3)  timestamp1 = time.mktime(date1.timetuple()) timestamp2 = time.mktime(date2.timetuple()) timestamp3 = time.mktime(date3.timetuple()) print(timestamp1) print(timestamp2) print(timestamp3) </code></pre>  <p>You can probe here: <a href=""https://repl.it/BIOM/1"" rel=""nofollow"">https://repl.it/BIOM/1</a></p>"			2015-09-15 14:47:19.66 UTC
32588137	python	How can python convert javascript timeformat?	"<p>I found the time format below on kickstarter website:  </p>  <pre><code>2015-10-02T20:40:00-04:00 2015-10-19T19:02:40-04:00 2015-09-26T18:53:30-04:00 </code></pre>  <p>But I have no idea what's this format? Does it has timezone?</p>  <p>I use python, so I want to know how can I convert it to Python time format?</p>  <p>And I found a nodejs project (source code below) which can convert to string like <code>1441424612000</code>.</p>  <pre><code>timeEnd: function ($) {     var endTimeStr, date, endTimeInMillis;      endTimeStr = $('#project_duration_data').attr('data-end_time');     date = new Date(endTimeStr);     endTimeInMillis = date.getTime();      return endTimeInMillis; }, </code></pre>  <p>What is this time format? Can Python do this? </p>"	2015-09-15 14:02:29.307 UTC	32588337	"<p>If you have access to the <code>dateutil</code> package, your job is easy:</p>  <pre><code>&gt;&gt;&gt; import dateutil.parser &gt;&gt;&gt; dateutil.parser.parse('2015-09-26T18:53:30-04:00') datetime.datetime(2015, 9, 26, 18, 53, 30, tzinfo=tzoffset(None, -14400)) </code></pre>"			2015-09-15 14:12:08.15 UTC
32595130	javascript|python|html|canvas|websocket	javascript HTML5 canvas display from python websocket server	"<p>I created a websocket server that uses ZeroMQ4 to talk to a middleware. I also created a peice of Javascript to display information back from the middleware.</p>  <p>I know the Websocket server works and is able to send to the javascript as i tested with small string output.</p>  <p>So, I want to send an png image from the websocket server to Javascript, but the Javascript documentation of canvas is confusing and I haven't found a solid example good for a newbie with Javascript.</p>  <p>This is the Javascript I have so far it is able to input data in, but does not display any image.</p>  <pre><code>var canvas = document.getElementById('stage'); var context = canvas.getContext(""2d"");  function openWS(){     var websocket = new WebSocket(""ws://raptorweb1.no-ip.org:10000"");     websocket.binaryType = ""arraybuffer"";     websocket.onmessage = function(evt) { onMessage(evt) };     websocket.onerror = function(evt) { onError(evt) };     websocket.onopen = function(evt) { onOpen(evt) };     function onOpen(evt){         var luser = document.getElementById(""lusername"").value;         var ruser = document.getElementById(""rusername"").value;         var pwd = document.getElementById(""password"").value;         console.log(""Connecting.. "");         websocket.send(""SUB[00100]"" + luser);         websocket.send(""MESSAGE[00100]"" + ruser + ""[11111]"" + pwd);         console.log(""Connected."");     }      function onMessage(evt) {         console.log(""received: "" + evt.data);         drawImageBinary(evt.data);     }      function onError(evt) {         console.log(evt.data);     }       function drawImageBinary(blob) {         var bytes = new Uint8Array(blob);         // console.log('drawImageBinary (bytes.length): ' + bytes.length);         var imageData = context.createImageData(canvas.width, canvas.height);         for (var i=8; i&lt;imageData.data.length; i++) {             imageData.data[i] = bytes[i];         }         context.putImageData(imageData, 0, 0);         var img = document.createElement('img');         //img.height = canvas.height;         //img.width = canvas.width;         img.src = canvas.toDataURL();     } } </code></pre>  <p>this is the websocket server:</p>  <pre><code>clients = [] from SimpleWebSocketServer import WebSocket, SimpleWebSocketServer,     SimpleSSLWebSocketServer import zmq import zmq.auth from zmq.auth.thread import ThreadAuthenticator import sys import os import random import pygame from pygame.locals import * import base64 import string from threading import Thread def id_generator(size=10, chars=string.ascii_uppercase + string.digits):     return ''.join(random.choice(chars) for _ in range(size)) class SimpleChat(WebSocket):     def initZMQ(self):         file = sys.argv[0]         base_dir = os.path.dirname(file)         keys_dir = os.path.join(base_dir, 'certificates')         public_keys_dir = os.path.join(base_dir, 'public_keys')         secret_keys_dir = os.path.join(base_dir, 'private_keys')         self.context = zmq.Context()         self.socket = self.context.socket(zmq.DEALER)         client_secret_file = os.path.join(secret_keys_dir, ""client.key_secret"")         client_public, client_secret = zmq.auth.load_certificate(client_secret_file)         self.socket.curve_publickey = client_public         self.socket.curve_secretkey = client_secret         server_public_file = os.path.join(public_keys_dir, ""server.key"")         server_public, _ = zmq.auth.load_certificate(server_public_file)         self.socket.curve_serverkey = server_public         self.width = ""0""         self.height = ""0""     def ondata(self):         while True:             try:                 data = self.socket.recv()                 code, self.width = data.split('[55555]')                 data = self.socket.recv()                 code, self.height = data.split('[55555]')                 self.width = int(self.width)                 self.height = int(self.height)                 self.width = float(self.width /1.5)                 self.height = float(self.height /1.5)                 print (self.width, self.height)                 data = self.socket.recv()                    image = pygame.image.frombuffer(data, (int(self.width),int(self.height)),""RGB"")                 randname = id_generator()                 pygame.image.save(image,randname+"".png"")                 out = open(randname+"".png"",""rb"").read()                 self.sendMessage(out)                 print(""data sent"")                 os.remove(randname+"".png"")             except Exception as e:                 print (e)     def handleMessage(self):        try:            message = str(self.data)             protocode, msg = message.split(""[00100]"")            if protocode == (""SUB""):                print(""SUB"")                self.socket.setsockopt(zmq.IDENTITY, str(msg))                self.socket.connect(""tcp://127.0.0.1:9001"")                Thread(target=self.ondata).start()            elif protocode == (""MESSAGE""):                print(""MESSAGE"")                msg = str(msg)                ident, mdata = msg.split(""[11111]"")                msg = ('%sSPLIT%s' % (ident, mdata))                self.socket.send(str(msg))            else:                raise Exception        except Exception as e:            print (e)      def handleConnected(self):        print (self.address, 'connected')        clients.append(self)        self.initZMQ()       def handleClose(self):        clients.remove(self)        print (self.address, 'closed')        for client in clients:           client.sendMessage(self.address[0] + u' - disconnected')  server = SimpleWebSocketServer('', 10000, SimpleChat) server.serveforever() </code></pre>"	2015-09-15 20:34:07.59 UTC	32597427	"<p>I managed to solve this problem.</p>  <p>Turns out that my javascript and my python server were wrong.</p>  <p>this is the function that works for me when processing the message from the server: </p>  <pre><code>function onMessage(evt) {         var img = new Image();         img.src = ""data:image/png;base64,""+evt.data;         img.onload = function () {             context.drawImage(img,0,0);         } } </code></pre>  <p>I had to add a base64.b64encode on my server right before I send the picture.</p>"			2015-09-15 23:43:43.82 UTC
32645244	javascript|jquery|python|html|selenium	How do you click a javascript button using python selenium	"<p>I want to click this button on a webpage with selenium </p>  <p>heres the html for the button </p>  <pre><code>&lt;div class=""wdpv_vote_up ""&gt;   &lt;input value=""7787"" type=""hidden""&gt;   &lt;input class=""wdpv_blog_id"" value=""1"" type=""hidden""&gt; &lt;/div&gt; </code></pre>  <p>and heres the javascript for that </p>  <pre><code>function voteUp() {   if (!$(this).hasClass(""wdpv_disabled"")) {     doVote($(this), ""+1"");   }   return false; } </code></pre>  <p>I want to be able to click that button but I dont know how , anny idea's ?</p>  <p>heres the post I want to auto like <a href=""http://www.facesoffactorie.com/?entry=8856"" rel=""nofollow"">here</a></p>"	2015-09-18 06:29:45.57 UTC	32647524	"<p>Try clicking the div-Element directly, like this:</p>  <pre><code>driver.findElement(By.xpath(""contains(@class, 'wdpv_vote_up')"")).click(); </code></pre>  <p>I used xpath and contains, because your div-element's class attribute has a space included, don't know if this is a typo, or there might be other classes in the original code as well...</p>"			2015-09-18 08:38:29.75 UTC
32645900	javascript|python	How to scrape javascript webpage using python standard libs only	<p>I have to scrape a website that uses javascript to display content. I have to use standard libs only as I will run this script on a server where there is not any browser. I have found selenium but it requires a browser that in my case is not possible to install.</p>  <p>Any idea or solution?</p>	2015-09-18 07:07:59.33 UTC	32647005	"<p>You didn't mention anything about how the website is using javascript, but if it uses AJAX requests that are triggered after any kind of user interaction, you will need to use something like Selenium to automatize that behaviour. Here, you can find <a href=""http://www.6020peaks.com/2014/12/how-to-scrape-hidden-web-data-with-python/"" rel=""nofollow"">a short tutorial of how to scrape with Scrapy + Selenium</a>. This of course requires a browser previously installed in your machine.</p>"			2015-09-18 08:11:34.017 UTC
32645900	javascript|python	How to scrape javascript webpage using python standard libs only	<p>I have to scrape a website that uses javascript to display content. I have to use standard libs only as I will run this script on a server where there is not any browser. I have found selenium but it requires a browser that in my case is not possible to install.</p>  <p>Any idea or solution?</p>	2015-09-18 07:07:59.33 UTC	32646819	"<p>Have a look at Ghost.py <a href=""http://jeanphix.me/Ghost.py/"" rel=""nofollow"">http://jeanphix.me/Ghost.py/</a>. It doesn't require a browser.</p>  <pre><code>pip install Ghost.py  from ghost import Ghost ghost = Ghost() page, resources = ghost.open('http://stackoverflow.com/') </code></pre>"			2015-09-18 08:00:29.683 UTC
32680534	javascript|python|browser|beautifulsoup|python-requests	Python - Rebuild Javascript generated code using Requests Module	"<p>I'm facing a new problem. I'm writing a scraper for a website, usually for this kind of tasks I use selenium, but in this case I cannot use anything that simulate a web-browser.</p>  <p>Researching on StackOverflow, I read the best solution is to undestand what javascript did and rebuild the request over HTTP. Yeah, I understand well in theory, but don't know how to start, as I don't know well technologies involved. </p>  <p>In my specific case, some HTML is added to the page when the button is clicked. With developer tools I set a breakpoint on the 'click' event, but from here, I'm literally lost. </p>  <p>Anyone can link some resource and examples I can study? </p>"	2015-09-20 14:35:55.523 UTC	32680624	"<p>In most cases, it is enougth to analyze the ""network"" tab of the developer tools and see the requests that are fired when you hit that button you metioned.  </p>  <p>As you understand those requests, you will be able to implement your scraper to run similar requests and grab the relevant data.</p>"			2015-09-20 14:44:38.487 UTC
32718180	javascript|python	Avoid shouldInterruptJavaScript in PySide QT4 - Python	"<p>I am using PySide '1.2.2' and trying to avoid the msgbox alerting a potential javascript error, since it is due to the site being sizeable. I am using this code from this other answer: </p>  <p><a href=""https://stackoverflow.com/questions/6868286/override-shouldinterruptjavascript-in-qwebpage-with-pyside"">Override shouldInterruptJavaScript in QWebPage with PySide</a></p>  <pre><code>import sys from PySide import QtCore from PySide.QtGui import QApplication from PySide.QtWebKit import QWebPage  class QWebPageHeadless(QWebPage):     # FIXME: This is not working, the slot is not overriden!     @QtCore.Slot()     def shouldInterruptJavaScript(self):         print( 'not interrupting')         return False </code></pre>  <p>I have tried implementing the class above, and all sorts of derivatives of it, but with no success, it never gets to execute. Any thoughts on how to do this? Thank you</p>"	2015-09-22 13:27:26.57 UTC	32750497	"<p>I found the ""solution"". Forget about PySide and PyQt, you will just end up with headaches, use Selenium. Very easy to implement and powerful for this purpose. Works great!</p>"			2015-09-23 22:24:36.49 UTC
32810273	javascript|python|regex|python-2.7|beautifulsoup	Search a string in javascript using python	"<p>Following my previous question : <a href=""https://stackoverflow.com/questions/31892945/how-to-fetch-javascript-contents-in-python"">how to fetch javascript contents in python</a></p>  <p>I tried to make another script which fetches the data from a javascript. After getting the webpage contents of course.</p>  <p>But, it's just not showing up the content I want. I want to find ""content_id"" from the javascript of the page. This is the page :- <a href=""http://www.hulu.com/watch/815743"" rel=""nofollow noreferrer"">http://www.hulu.com/watch/815743</a></p>  <p>Here's what I have right now.</p>  <pre><code>import re import requests from bs4 import BeautifulSoup import os import fileinput   Link = 'http://www.hulu.com/watch/815743' q = requests.get(Link) soup = BeautifulSoup(q.text) #print soup subtitles = soup.findAll('script',{'type':'text/javascript'}) pattern = re.compile(r'""content_id"":""(.*?)""', re.MULTILINE | re.DOTALL) script = soup.find(""script"", text=pattern) print pattern.search(script.text).group(1) </code></pre>  <p>I get this error :</p>  <blockquote>   <p>AttributeError: 'NoneType' object has no attribute 'text'</p> </blockquote>  <p>Any idea how to solve this issue..?</p>"	2015-09-27 16:40:08.99 UTC	32812291	"<p>There are two problems in your regular expression pattern:</p>  <ul> <li>the <em>quotes are escaped with backslashes</em> in the script contents, take that into account</li> <li>there is a <em>whitespace after the colon</em></li> </ul>  <p>Here is the fixed version:</p>  <pre><code>pattern = re.compile(r'\\""content_id\\"":\s*\\""(.*?)\\""', re.MULTILINE | re.DOTALL) </code></pre>  <p>Works for me, getting <code>60585710</code> as a result.</p>  <p>FYI, here is the complete code that I'm executing:</p>  <pre><code>import re  import requests from bs4 import BeautifulSoup  Link = 'http://www.hulu.com/watch/815743' q = requests.get(Link) soup = BeautifulSoup(q.text)  pattern = re.compile(r'\\""content_id\\"":\s*\\""(.*?)\\""', re.MULTILINE | re.DOTALL) script = soup.find(""script"", text=pattern) print pattern.search(script.text).group(1) </code></pre>"			2015-09-27 20:04:47.127 UTC
32812015	javascript|python|ajax	JavaScript AJAX >> Python returning just Pythons code	"<p>When I try to execute Python code using JavaScript/AJAX, it does not show the response that I want, but the content of the Python file.</p>  <p>JS:</p>  <pre><code>ajax = new XMLHttpRequest() ajax.open(""POST"", ""calc.py"", false) ajax.send(null) alert(ajax.responseText) </code></pre>  <p>Python (calc.py):</p>  <pre><code>print ""Hello World!"" </code></pre>  <p><code>alert(ajax.responseText)</code> => 'print ""Hello World!""'</p>  <p>What did I do wrong?</p>  <p>EDIT: My ""server"" is basically just my laptop (elementaryOS x64 // Ubuntu) - Python and also PHP are installed, and It is being tested just on localhost.</p>"	2015-09-27 19:33:21.847 UTC	32812270	"<p>To better help you, we would need some server info. Your server seems to be set up to display .py as plain text but what you want is to display the python output. Flask and Django, maybe others, are frameworks for this purpose, and not too difficult to install and learn. Daniel's comments are dead on, ""...You need a web server that executes Python files, and some means (WSGI, CGI) of running it."" My personal favorite for this is Django, great documentation, but I hear good things about Flask also. </p>  <p>Try one of these frameworks and tutorial:</p>  <p>Link for Django: <a href=""https://docs.djangoproject.com/en/1.8/intro/install/"" rel=""nofollow"">https://docs.djangoproject.com/en/1.8/intro/install/</a></p>  <p>Link for Flask: <a href=""http://flask.pocoo.org/"" rel=""nofollow"">http://flask.pocoo.org/</a></p>  <p>Frameworks have a learning curve, but I have saved tons of time with Django in my projects. Good luck, and if you can tell us more about your server, someone may be able to get your set up running as you originally intended.</p>"			2015-09-27 20:02:30.3 UTC
32834344	javascript|python-2.7|browser|request	get the executed javascript content in python	"<p>Is there any way to get the executed javascript contents from a webpage? I have tried requests + BeautifulSoup, mechanize, these yield me with ""source code"" of the webpage and not the executed javascript. For example, this website :- <a href=""http://listen.tidal.com/login"">http://listen.tidal.com/login</a></p>  <p>As you can see, in the source code, there is un-execute JS, but, when you inspect the element, you'll see the executed code.</p>  <p>Now, is there any way I could get that EXECUTED code in python? Hints please, because I have tried emulating a browser using mechanize and it does the same like reuqests. Thank You</p>"	2015-09-29 01:39:58.44 UTC	32963816	"<p>Yes, you have to pick a tool that supports Javascript content, other to mechanics. Mechanics is only for static content like you already had observed. There are several, found by search words ""python alternative to mechanics"". I would test PhantomJS, if I had to pick one.</p>  <p><em>Also several others are found in the other answers linked in comments, just I wanted to leave these as comments due to avoid ""SO is not a pick your favorite tool recommending site"" problem and thus only the universal solution is mentioned. So, please do have a little search ;)</em></p>"			2015-10-06 07:09:36.123 UTC
32834344	javascript|python-2.7|browser|request	get the executed javascript content in python	"<p>Is there any way to get the executed javascript contents from a webpage? I have tried requests + BeautifulSoup, mechanize, these yield me with ""source code"" of the webpage and not the executed javascript. For example, this website :- <a href=""http://listen.tidal.com/login"">http://listen.tidal.com/login</a></p>  <p>As you can see, in the source code, there is un-execute JS, but, when you inspect the element, you'll see the executed code.</p>  <p>Now, is there any way I could get that EXECUTED code in python? Hints please, because I have tried emulating a browser using mechanize and it does the same like reuqests. Thank You</p>"	2015-09-29 01:39:58.44 UTC	33086239	"<p>Just to highlight - Python doesn't execute your Js code, but runtime does.  Here is an example of the python module that picks available runtime and evaluates code for you. </p>  <p><a href=""https://pypi.python.org/pypi/PyExecJS"" rel=""nofollow"">Look at PyExecJS</a>, here you can find some examples, but take into account that it might not contain any browser APIs like DOM, Html5 Api, etc. It's mostly based on js engine capabilities. </p>  <p>Another big question, what is the reason to evaluate code in the python? </p>"			2015-10-12 16:45:53.683 UTC
32834344	javascript|python-2.7|browser|request	get the executed javascript content in python	"<p>Is there any way to get the executed javascript contents from a webpage? I have tried requests + BeautifulSoup, mechanize, these yield me with ""source code"" of the webpage and not the executed javascript. For example, this website :- <a href=""http://listen.tidal.com/login"">http://listen.tidal.com/login</a></p>  <p>As you can see, in the source code, there is un-execute JS, but, when you inspect the element, you'll see the executed code.</p>  <p>Now, is there any way I could get that EXECUTED code in python? Hints please, because I have tried emulating a browser using mechanize and it does the same like reuqests. Thank You</p>"	2015-09-29 01:39:58.44 UTC	33048908	"<p>In fact, <a href=""https://en.wikipedia.org/wiki/JavaScript_engine"" rel=""nofollow noreferrer"">JavaScript engine</a> is needed for execution of javascript. Python is a language with its own interpreter(compiler!) to execute python code. These are two different technology. So if you want to execute javascript from python, python must have  api or sort of bindings that interacts with the engine executes javascript. Fortunately python has interactivity with several JS Engine for implementing web related works(testing etc.). This interoperable JS can be divided into two groups as below-</p>  <ol> <li>Browser <strong>without</strong> Graphical User Interface(GUI) aka <a href=""https://en.wikipedia.org/wiki/Headless_browser"" rel=""nofollow noreferrer"">Headless browser</a>: e.g. <a href=""http://phantomjs.org/"" rel=""nofollow noreferrer"">PhantomJS</a> a <strong>Webkit</strong> rendering engine based headless browser, <a href=""https://slimerjs.org/"" rel=""nofollow noreferrer"">SlimerJS</a> a <strong>Gecko</strong> rendering engine based headless browser for more see <a href=""https://stackoverflow.com/questions/18539491/headless-browser-and-scraping-solutions"">here</a>. You can interoperate with PhantomJS with <a href=""http://www.seleniumhq.org/"" rel=""nofollow noreferrer"">selenium</a> ( a glue between python and PhantomJS) or you can use <a href=""https://riverbankcomputing.com/software/pyqt/intro"" rel=""nofollow noreferrer"">PyQt</a> and use python to run JS like <a href=""https://stackoverflow.com/questions/16386622/beautifulsoup-returning-incorrect-text/16386765#16386765"">here</a>.</li> <li>Browser <strong>with</strong> Graphical User Interface(GUI): e.g. Firefox, Chromium, Safari etc. In this case also you can execute JS through <a href=""http://www.seleniumhq.org/"" rel=""nofollow noreferrer"">selenium</a> python.</li> </ol>  <p>Simple execution example of JS in selenium python as below-</p>  <pre><code>from selenium import webdriver #define driver- firefox, chrome  or phantomjs etc. driver = webdriver.Firefox() #Open the url driver.get('https://www.google.com') #see how javascript simple alert is being executed driver.execute_script(""alert('hello world');"") #close the driver  i.e. closing opened Firefox instance! driver.close() </code></pre>"			2015-10-10 00:16:21.177 UTC
32888967	javascript|python|selenium|infinite-scroll|quora	Infinite Scroll on Quora using Selenium in Python and Javascript	"<p>I try to handle the ""infinite scrolling"" in Quora website. I use selenium lib with Python after trying to use the send_keys methods i try to run Javascript command in order to scroll down the page.</p>  <p>It doesn't working when i run the code, but if i try to run in the firefox console it's work. How can i fix this problem? and it's possibile use PhantomJs?</p>  <pre><code>def scrapying(self):     print platform.system()          browser = webdriver.Firefox()         #browser = webdriver.PhantomJS(executable_path='/usr/local/bin/node_modules/phantomjs/lib/phantom/bin/phantomjs')      browser.get(""https://www.quora.com/C-programming-language"")     #browser.get(""https://answers.yahoo.com/dir/index?sid=396545660"")     time.sleep(10)      #elem = browser.find_element_by_class_name(""topic_page content contents main_content fixed_header ContentWrapper"")     no_of_pagedowns = 500      while no_of_pagedowns:         #elem.send_keys(Keys.SPACE)         browser.execute_script(""window.scrollTo(0, document.body.scrollHeight);"")         time.sleep(0.5)         no_of_pagedowns -= 1      browser.quit()       myClassObject = getFrom() myClassObject.scrapying() </code></pre>"	2015-10-01 13:33:42.197 UTC	40919604	"<p>I'm also not able to trigger the <em>infinite scroll</em> to work using this while using Firefox. The gist of the code works in the console, however:</p>  <pre><code>for i in range(0, 5):     self.driver.execute_script(""window.scrollTo(0, document.body.scrollHeight);"")     time.sleep(3) </code></pre>"			2016-12-01 20:16:52.56 UTC
32888967	javascript|python|selenium|infinite-scroll|quora	Infinite Scroll on Quora using Selenium in Python and Javascript	"<p>I try to handle the ""infinite scrolling"" in Quora website. I use selenium lib with Python after trying to use the send_keys methods i try to run Javascript command in order to scroll down the page.</p>  <p>It doesn't working when i run the code, but if i try to run in the firefox console it's work. How can i fix this problem? and it's possibile use PhantomJs?</p>  <pre><code>def scrapying(self):     print platform.system()          browser = webdriver.Firefox()         #browser = webdriver.PhantomJS(executable_path='/usr/local/bin/node_modules/phantomjs/lib/phantom/bin/phantomjs')      browser.get(""https://www.quora.com/C-programming-language"")     #browser.get(""https://answers.yahoo.com/dir/index?sid=396545660"")     time.sleep(10)      #elem = browser.find_element_by_class_name(""topic_page content contents main_content fixed_header ContentWrapper"")     no_of_pagedowns = 500      while no_of_pagedowns:         #elem.send_keys(Keys.SPACE)         browser.execute_script(""window.scrollTo(0, document.body.scrollHeight);"")         time.sleep(0.5)         no_of_pagedowns -= 1      browser.quit()       myClassObject = getFrom() myClassObject.scrapying() </code></pre>"	2015-10-01 13:33:42.197 UTC	32889379	"<p>One of the options would be to recursively <em><a href=""https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollIntoView"" rel=""nofollow"">scroll into view</a> of the last loaded post on a page</em>:</p>  <pre><code>from selenium import webdriver  driver = webdriver.Chrome() driver.get(""https://www.quora.com/C-programming-language"")  NUM_POSTS = 200 posts = driver.find_elements_by_css_selector(""div.pagedlist_item"")  while len(posts) &lt; NUM_POSTS:     driver.execute_script(""arguments[0].scrollIntoView();"", posts[-1])      posts = driver.find_elements_by_css_selector(""div.pagedlist_item"")      print(len(posts)) </code></pre>  <p>And it would scroll the page down until, at least, <code>NUM_POSTS</code> posts are loaded.</p>"			2015-10-01 13:52:46.22 UTC
32928474	javascript|c#|python|json|ajax	Parsing a JSON string in C# like javascript or python do	"<p>I am trying to make a program that needs to read JSON data from a give file. But the JSON files may be very complex. Here is the code i am using</p>  <pre><code>static void Main(string[] args) {     //step one: get a correct file path     string filepath = getFilePath(""Please write here the path to your file"");     //getFilePath is just a function I wrote to read user entry and automatically sanitize the string.     while (!File.Exists(filepath)) { filepath = getFilePath(""The file path appears to be wrong, please correct.""); }     //Setep 2: read the text of the file     string fileJSONString = File.ReadAllText(filepath);     //step 3: parse      object myDictionaryFromJSON = (new JavaScriptSerializer().DeserializeObject(fileJSONString));     object question1 = myDictionaryFromJSON.questions[0]; } </code></pre>  <p>The thing is that Visual Studio gives me a lot of erros. I have tried using <code>Dictionary</code> instead of <code>object</code>, but it still doesnt work the way I need it to work. For example, this would actually work on python.</p>  <pre><code>myDictionaryFromJSON = json.loads(JSONtext); question1 = myDictionaryFromJSON['questions'][0]; question1text = question1[""theQuestion""]; question1options = question1[""options""]; question1correctAnswer = question1[""correctAnswer""]; </code></pre>  <p>This is just an example. The thing is that Python and javascript can work with json perfectly, and are really good at converting JSON strings to dictionaries and objects. But C# is not working. I don't know what  to do. What could I do?</p>"	2015-10-03 23:20:30.117 UTC	32928723	"<p>I am assuming you are not using Json.NET. If this the case, then you should try it.</p>  <p>It has the following features:</p>  <ol> <li>LINQ to JSON</li> <li>The JsonSerializer for quickly converting your .NET objects to JSON and back again</li> <li>Json.NET can optionally produce well formatted, indented JSON for debugging or display</li> </ol>  <p>Look how fast Json.NET compared to JavaScriptSerializer:<a href=""http://i.stack.imgur.com/T77y2.png"" rel=""nofollow"">http://i.stack.imgur.com/T77y2.png</a></p>  <p>Example code for load json file in C#:</p>  <pre><code>JObject o1 = JObject.Parse(File.ReadAllText(@""c:\videogames.json""));  // read JSON directly from a file using (StreamReader file = File.OpenText(@""c:\videogames.json"")) using (JsonTextReader reader = new JsonTextReader(file)) {     JObject o2 = (JObject)JToken.ReadFrom(reader); } </code></pre>"			2015-10-04 00:00:30.593 UTC
32937590	python|python-2.7|beautifulsoup|python-requests	How to fake javascript enabled in Python requests/beautifulsoup	"<p>I'm trying to crawl a website which return an error message that your js is disabled and you might be a bot. I tried to see same behaviour in web browser and yes the same response, however if JavaScript is enabled it will not affect the original response, I mean original response is not dependent on JS. </p>  <p>So I was thinking if I can tell the web/http server that my JS is enabled and I'm not a BOT. is this possible in Python requests library, or any other python library for that matter?</p>  <p>And yeah I've set the <code>User-Agent</code> header, even all other headers, like <code>host</code>, <code>language</code>, <code>connection</code>, etc</p>"	2015-10-04 19:38:08.547 UTC	33120109	"<p>If the site is just checking whether javascript can be executed or not through executing some js, use selenium to get the page, and then use BeautifulSoup to parse the page that selenium got.</p>  <pre><code>from bs4 import BeautifulSoup from selenium import webdriver driver = webdriver.Firefox() driver.get('http://your-site/url')  html = driver.page_source soup = BeautifulSoup(html) ... </code></pre>"			2015-10-14 08:17:35.533 UTC
32974051	javascript|python|ipython|ipython-notebook	IPython notebook ~ Using javascript to run python code?	"<p>I am trying to execute python code through javascript directly:</p>  <ol> <li>I fire up IPython Notebook on Chrome</li> <li>Using chrome developer tools I open up the javascript console.</li> </ol>  <p>In the javascript consolde, I type: <code>IPython.notebook.kernel.execute(""2+2"")</code></p>  <p><a href=""https://i.stack.imgur.com/J7lg6.png"" rel=""noreferrer""><img src=""https://i.stack.imgur.com/J7lg6.png"" alt=""enter image description here""></a></p>  <p>But I get a strange output: <code>""6CEA73CC644648DDA978FDD6A913E519""</code></p>  <p>Is there any way to take advantage of all the IPython javascript functions available, to run python code from the javascript console as depicted in the image? I'm sure there's a way but I've been beating at it for way too long and thought I would post here.</p>  <p>(I need this to build an app on top of IPython)</p>  <p>Thanks in advance!</p>"	2015-10-06 15:37:33.597 UTC	71534269	"<p>In an effort to isolate a minimum viable implementation, I was able to get responses back from the IPython kernel in just a couple of steps using essentially the same approach as <a href=""https://stackoverflow.com/a/69578912/4376000"">ChrCury78</a>.</p> <p>Since I want to use the data returned from Python within Javascript, in these examples I just stored the message contents in a member on <code>console</code>. (Unlike what ChrCury78 did, where he pushed the result to the output of the notebook cell.) In my real extension, I'll probably just attach it to a name on <code>Jupyter</code>, or maybe an object of my own creation.</p> <pre class=""lang-js prettyprint-override""><code>&gt;&gt; Jupyter.notebook.kernel.comm_manager.register_target(&quot;mycomm&quot;, (comm, msg) =&gt; {comm.on_msg( m =&gt; {console.retval = m.content.data})}) &lt;- undefined &gt;&gt; Jupyter.notebook.kernel.execute(&quot;from ipykernel.comm import Comm; Comm(target_name='mycomm').send('FOO')&quot;) &lt;- &quot;{hex UID}&quot; &gt;&gt; console.retval &lt;- &quot;FOO&quot; </code></pre> <p>Multi-line Python code worked just fine, too; and, since I'd already imported <code>Comm</code>, I didn't need to import it again:</p> <pre><code>&gt;&gt; Jupyter.notebook.kernel.execute(&quot;l = []\nfor x in range(5):\n  l.append(x)\nComm(target_name='mycomm').send(l)&quot;) &lt;- &quot;{hex UID}&quot; &gt;&gt; console.retval &lt;- Array(5) [ 0, 1, 2, 3, 4 ] </code></pre> <p>If you want to keep the kernel namespace unpolluted afterward, you could add a <code>del Comm</code> to the end of the Python command.</p> <p>I'll definitely be writing wrapper functions of some kind for both of these operations.</p> <hr /> <p>This is with Python 3.9.11 and the following packages installed:</p> <pre><code>ipykernel                         6.9.2 ipython                           8.1.1 ipython-genutils                  0.2.0 ipywidgets                        7.7.0  jupyter                           1.0.0 jupyter-client                    7.1.2 jupyter-console                   6.4.3 jupyter-contrib-core              0.3.3 jupyter-contrib-nbextensions      0.5.1 jupyter-core                      4.9.2 jupyter-highlight-selected-word   0.2.0 jupyter-latex-envs                1.4.6 jupyter-nbextensions-configurator 0.4.1 jupyterlab-pygments               0.1.2 jupyterlab-widgets                1.1.0  </code></pre>"			2022-03-18 23:47:19.247 UTC
32974051	javascript|python|ipython|ipython-notebook	IPython notebook ~ Using javascript to run python code?	"<p>I am trying to execute python code through javascript directly:</p>  <ol> <li>I fire up IPython Notebook on Chrome</li> <li>Using chrome developer tools I open up the javascript console.</li> </ol>  <p>In the javascript consolde, I type: <code>IPython.notebook.kernel.execute(""2+2"")</code></p>  <p><a href=""https://i.stack.imgur.com/J7lg6.png"" rel=""noreferrer""><img src=""https://i.stack.imgur.com/J7lg6.png"" alt=""enter image description here""></a></p>  <p>But I get a strange output: <code>""6CEA73CC644648DDA978FDD6A913E519""</code></p>  <p>Is there any way to take advantage of all the IPython javascript functions available, to run python code from the javascript console as depicted in the image? I'm sure there's a way but I've been beating at it for way too long and thought I would post here.</p>  <p>(I need this to build an app on top of IPython)</p>  <p>Thanks in advance!</p>"	2015-10-06 15:37:33.597 UTC	69578912	"<p>After spending two days on it, here is the solution that worked for me.</p> <p>To run Python code I am simpy using 'Jupyter.notebook.kernel.execute'. To get the answer from it I found usefull information at this link: <a href=""https://jupyter-notebook.readthedocs.io/en/stable/comms.html"" rel=""nofollow noreferrer"">https://jupyter-notebook.readthedocs.io/en/stable/comms.html</a></p> <pre><code>from ipykernel.comm import Comm  js_input = [] #case willing to track  def func_edit(cobj,text):     my_comm = Comm(target_name=cobj) #this is the callback     my_comm.send('' if  text == '' else 'Return: ' + text)      global js_input     js_input.append(f'origin={cobj} text={text}')                from IPython.display import display, HTML html = &quot;&quot;&quot; &lt;script&gt;     var comm_name = &quot;this_control&quot;;     function fcalc(x)     {         // here I am passing to the Python function the value to edit and the address for getting the return value         IPython.notebook.kernel.execute(&quot;func_edit('&quot; + comm_name + &quot;','&quot; + x.value + &quot;')&quot;)     }     Jupyter.notebook.kernel.comm_manager.register_target(comm_name, function(comm, msg)          {           // comm is the frontend comm instance,  msg is the comm_open message, which can carry data              // Register handlers for later messages:             comm.on_msg(function(msg) {                  document.getElementById(&quot;out&quot;).value = msg.content.data;             });                          //comm.on_close(function(msg) {...});             //comm.send({'foo': 40}); what is it??         }); &lt;/script&gt; &lt;label for=&quot;in&quot;&gt;Input:&lt;/label&gt; &lt;input type=&quot;text&quot; id=&quot;in&quot; name=&quot;in&quot; oninput=&quot;fcalc(this)&quot;&gt; &lt;label for=&quot;out&quot;&gt;Out:&lt;/label&gt; &lt;input type=&quot;text&quot; id=&quot;out&quot;&gt; &quot;&quot;&quot; display(HTML(html)) </code></pre>"			2021-10-15 01:10:57.347 UTC
32974051	javascript|python|ipython|ipython-notebook	IPython notebook ~ Using javascript to run python code?	"<p>I am trying to execute python code through javascript directly:</p>  <ol> <li>I fire up IPython Notebook on Chrome</li> <li>Using chrome developer tools I open up the javascript console.</li> </ol>  <p>In the javascript consolde, I type: <code>IPython.notebook.kernel.execute(""2+2"")</code></p>  <p><a href=""https://i.stack.imgur.com/J7lg6.png"" rel=""noreferrer""><img src=""https://i.stack.imgur.com/J7lg6.png"" alt=""enter image description here""></a></p>  <p>But I get a strange output: <code>""6CEA73CC644648DDA978FDD6A913E519""</code></p>  <p>Is there any way to take advantage of all the IPython javascript functions available, to run python code from the javascript console as depicted in the image? I'm sure there's a way but I've been beating at it for way too long and thought I would post here.</p>  <p>(I need this to build an app on top of IPython)</p>  <p>Thanks in advance!</p>"	2015-10-06 15:37:33.597 UTC	52347011	"<p>You can call Python code execution from JavaScript with <code>Jupyter.notebook.kernel.execute()</code> function.</p>  <p>Depend on this <a href=""https://gist.github.com/craigsdennis/ddfaa99a6291f05fef879329821872ee"" rel=""noreferrer"">gist</a> from Craig Dennis you can insert this code in Jupyter cell and run it</p>  <pre><code>%%javascript window.executePython = function(python) {     return new Promise((resolve, reject) =&gt; {         var callbacks = {             iopub: {                 output: (data) =&gt; resolve(data.content.text.trim())             }         };         Jupyter.notebook.kernel.execute(`${python}`, callbacks);         }); }  function Log_out(r) { console.log(r); };  var code =  'for i in range(1,6):'+ '    print( ""#"" + str(i))';  window.executePython( code )     .then(result =&gt; Log_out(result)); // Log out </code></pre>  <p>Result would be output to browser javascript console.</p>"			2018-09-15 17:10:48.253 UTC
32974051	javascript|python|ipython|ipython-notebook	IPython notebook ~ Using javascript to run python code?	"<p>I am trying to execute python code through javascript directly:</p>  <ol> <li>I fire up IPython Notebook on Chrome</li> <li>Using chrome developer tools I open up the javascript console.</li> </ol>  <p>In the javascript consolde, I type: <code>IPython.notebook.kernel.execute(""2+2"")</code></p>  <p><a href=""https://i.stack.imgur.com/J7lg6.png"" rel=""noreferrer""><img src=""https://i.stack.imgur.com/J7lg6.png"" alt=""enter image description here""></a></p>  <p>But I get a strange output: <code>""6CEA73CC644648DDA978FDD6A913E519""</code></p>  <p>Is there any way to take advantage of all the IPython javascript functions available, to run python code from the javascript console as depicted in the image? I'm sure there's a way but I've been beating at it for way too long and thought I would post here.</p>  <p>(I need this to build an app on top of IPython)</p>  <p>Thanks in advance!</p>"	2015-10-06 15:37:33.597 UTC	33040249	"<p>Are you aware of this blogpost? <a href=""http://jakevdp.github.io/blog/2013/06/01/ipython-notebook-javascript-python-communication/"" rel=""nofollow"">http://jakevdp.github.io/blog/2013/06/01/ipython-notebook-javascript-python-communication/</a></p>  <p>I think the exact way he uses doesn't work anymore, but maybe it can get you a step forward</p>"			2015-10-09 14:00:36.987 UTC
33027078	javascript|python|web-scraping	Python Web Crawler for JavaScript Generated URLs	"<p>I am trying to use some Python web crawler to download about 3000 PDFs from a website. However, the URLs of those PDFs are generated by JavaScript function. So, I am wondering if there is any tutorial on how to achieve this?</p>  <p>For example, the URL linked to <code>Alberto European Hairspray (Aerosol) - All Variants</code> will be generated after clicking <code>onclick=""javascript:__doPostBack(&amp;#39;ctl00$placeBody$gridView$gridView&amp;#39;,&amp;#39;DocumentCenter.aspx?did={0}$0&amp;#39</code>. So the question is how to let the web crawler to get the computed URL. </p>  <pre><code>function __doPostBack(eventTarget, eventArgument) {     if (!theForm.onsubmit || (theForm.onsubmit() != false)) {         theForm.__EVENTTARGET.value = eventTarget;         theForm.__EVENTARGUMENT.value = eventArgument;         theForm.submit();     } } &lt;tbody&gt;     &lt;tr&gt;         &lt;td&gt;             &lt;input type=""image"" src=""App_Graphics/PDFDocument.gif"" alt=""MSDS"" onclick=""javascript:__doPostBack(&amp;#39;ctl00$placeBody$gridView$gridView&amp;#39;,&amp;#39;DocumentCenter.aspx?did={0}$0&amp;#39;);return false;"" /&gt;         &lt;/td&gt;         &lt;td&gt;&lt;a href=""javascript:__doPostBack(&amp;#39;ctl00$placeBody$gridView$gridView&amp;#39;,&amp;#39;MSDSDetail.aspx?did={0}$0&amp;#39;)""&gt;Alberto European Hairspray (Aerosol) - All Variants&lt;/a&gt;         &lt;/td&gt;         &lt;td&gt;Unilever PLC&lt;/td&gt;         &lt;td&gt;8131-01&lt;/td&gt;     &lt;/tr&gt;     &lt;tr class=""row-alternate""&gt;         &lt;td&gt;             &lt;input type=""image"" src=""App_Graphics/PDFDocument.gif"" alt=""MSDS"" onclick=""javascript:__doPostBack(&amp;#39;ctl00$placeBody$gridView$gridView&amp;#39;,&amp;#39;DocumentCenter.aspx?did={0}$1&amp;#39;);return false;"" /&gt;         &lt;/td&gt;         &lt;td&gt;&lt;a href=""javascript:__doPostBack(&amp;#39;ctl00$placeBody$gridView$gridView&amp;#39;,&amp;#39;MSDSDetail.aspx?did={0}$1&amp;#39;)""&gt;Alberto European Mousse (Aerosol) - All Variants&lt;/a&gt;         &lt;/td&gt;         &lt;td&gt;Unilever PLC&lt;/td&gt;         &lt;td&gt;8132-01&lt;/td&gt;     &lt;/tr&gt; &lt;/tbody&gt; </code></pre>"	2015-10-08 22:36:56.66 UTC	33033183	"<p>Another option is that you might use Selenium to <a href=""https://www.google.lv/search?sourceid=chrome-psyapi2&amp;ion=1&amp;espv=2&amp;ie=UTF-8&amp;q=selenium%20execute%20javascript&amp;oq=selenuim%20executer%20&amp;aqs=chrome.1.69i57j0l5.5923j0j7"" rel=""nofollow"">execute js</a> and get computed urls.</p>"			2015-10-09 08:12:17.14 UTC
33027078	javascript|python|web-scraping	Python Web Crawler for JavaScript Generated URLs	"<p>I am trying to use some Python web crawler to download about 3000 PDFs from a website. However, the URLs of those PDFs are generated by JavaScript function. So, I am wondering if there is any tutorial on how to achieve this?</p>  <p>For example, the URL linked to <code>Alberto European Hairspray (Aerosol) - All Variants</code> will be generated after clicking <code>onclick=""javascript:__doPostBack(&amp;#39;ctl00$placeBody$gridView$gridView&amp;#39;,&amp;#39;DocumentCenter.aspx?did={0}$0&amp;#39</code>. So the question is how to let the web crawler to get the computed URL. </p>  <pre><code>function __doPostBack(eventTarget, eventArgument) {     if (!theForm.onsubmit || (theForm.onsubmit() != false)) {         theForm.__EVENTTARGET.value = eventTarget;         theForm.__EVENTARGUMENT.value = eventArgument;         theForm.submit();     } } &lt;tbody&gt;     &lt;tr&gt;         &lt;td&gt;             &lt;input type=""image"" src=""App_Graphics/PDFDocument.gif"" alt=""MSDS"" onclick=""javascript:__doPostBack(&amp;#39;ctl00$placeBody$gridView$gridView&amp;#39;,&amp;#39;DocumentCenter.aspx?did={0}$0&amp;#39;);return false;"" /&gt;         &lt;/td&gt;         &lt;td&gt;&lt;a href=""javascript:__doPostBack(&amp;#39;ctl00$placeBody$gridView$gridView&amp;#39;,&amp;#39;MSDSDetail.aspx?did={0}$0&amp;#39;)""&gt;Alberto European Hairspray (Aerosol) - All Variants&lt;/a&gt;         &lt;/td&gt;         &lt;td&gt;Unilever PLC&lt;/td&gt;         &lt;td&gt;8131-01&lt;/td&gt;     &lt;/tr&gt;     &lt;tr class=""row-alternate""&gt;         &lt;td&gt;             &lt;input type=""image"" src=""App_Graphics/PDFDocument.gif"" alt=""MSDS"" onclick=""javascript:__doPostBack(&amp;#39;ctl00$placeBody$gridView$gridView&amp;#39;,&amp;#39;DocumentCenter.aspx?did={0}$1&amp;#39;);return false;"" /&gt;         &lt;/td&gt;         &lt;td&gt;&lt;a href=""javascript:__doPostBack(&amp;#39;ctl00$placeBody$gridView$gridView&amp;#39;,&amp;#39;MSDSDetail.aspx?did={0}$1&amp;#39;)""&gt;Alberto European Mousse (Aerosol) - All Variants&lt;/a&gt;         &lt;/td&gt;         &lt;td&gt;Unilever PLC&lt;/td&gt;         &lt;td&gt;8132-01&lt;/td&gt;     &lt;/tr&gt; &lt;/tbody&gt; </code></pre>"	2015-10-08 22:36:56.66 UTC	33027449	"<p>You can't. Use a JavaScript interpreter (<a href=""https://pypi.python.org/pypi/python-spidermonkey"" rel=""nofollow"">SpiderMonkey</a>, for example) to execute the code and then go ahead with HTML parsing. Using Qt's WebKit is a good approach also, but probably slower.</p>"			2015-10-08 23:13:35.987 UTC
33028218	javascript|ipython|jupyter	Set an ipython widget value from javascript?	"<p>Say that there is a ipywidget created in IPython notebook, like so:</p>  <pre><code>from ipywidgets import widgets i = widgets.IntText() </code></pre>  <p>Is there a way to set the value from Javascript? I suspect that I'll need to know some comm id of the widget. Or is there a better way to have a variable in Python that gets set from Javascript?</p>  <p>The use case is that I want to send a mouse click position (gotten via Javascript) position back to Python.</p>"	2015-10-09 00:49:06.337 UTC	69587913	"<p>you can use this nootebook if you can install jupyter proxy server</p> <p><a href=""https://github.com/gbrault/jpjwidgets"" rel=""nofollow noreferrer"">https://github.com/gbrault/jpjwidgets</a></p>"			2021-10-15 16:31:16.58 UTC
33028218	javascript|ipython|jupyter	Set an ipython widget value from javascript?	"<p>Say that there is a ipywidget created in IPython notebook, like so:</p>  <pre><code>from ipywidgets import widgets i = widgets.IntText() </code></pre>  <p>Is there a way to set the value from Javascript? I suspect that I'll need to know some comm id of the widget. Or is there a better way to have a variable in Python that gets set from Javascript?</p>  <p>The use case is that I want to send a mouse click position (gotten via Javascript) position back to Python.</p>"	2015-10-09 00:49:06.337 UTC	33045283	"<p>Thanks to SylvainCorlay and jasongrout on ipython gitter, they were able to talk me through this:</p>  <pre><code>clicked = function (evt, x_model, y_model) {     var e = evt.srcElement.farthestViewportElement || evt.target;     var dim = e.getBoundingClientRect();     var x = evt.clientX - dim.left;     var y = evt.clientY - dim.top;     var manager = IPython.WidgetManager._managers[0];     var model_prom = manager.get_model(x_model);     model_prom.then(function(model) {         model.set('value', Math.round(x));         model.save_changes();     });     model_prom = manager.get_model(y_model);     model_prom.then(function(model) {         model.set('value', Math.round(y));         model.save_changes();     }); };   </code></pre>  <p>Where onclick is called with the event, and the Python x.model_id and y.model_id.</p>"			2015-10-09 18:52:36.407 UTC
33028218	javascript|ipython|jupyter	Set an ipython widget value from javascript?	"<p>Say that there is a ipywidget created in IPython notebook, like so:</p>  <pre><code>from ipywidgets import widgets i = widgets.IntText() </code></pre>  <p>Is there a way to set the value from Javascript? I suspect that I'll need to know some comm id of the widget. Or is there a better way to have a variable in Python that gets set from Javascript?</p>  <p>The use case is that I want to send a mouse click position (gotten via Javascript) position back to Python.</p>"	2015-10-09 00:49:06.337 UTC	33043722	"<p>You can bind widget models on the JavaScript side using the ipython <code>jslink</code> widget.</p>  <pre><code>from ipywidgets import IntText, IntSlider, jslink from IPython.display import display  text, slider = IntText(), IntSlider() link = jslink((text, 'value'), (slider, 'value')) display(text, slider) </code></pre>  <p>If you want a pure JavaScript solution, you can address the widget model from the widget manager using the widget id.</p>"			2015-10-09 17:07:08.82 UTC
33117387	python|json|django|c3.js	"Converting Python data structures to JavaScript, including functions"	"<p>I'm creating charts for my Django app using C3.js. In my Django template, I have a JavaScript snippet like this:</p>  <pre><code>&lt;script&gt; var chart = c3.generate({{ chart_data|safe }}); &lt;/script&gt; </code></pre>  <p>In the view, I set up the chart using a Python data structure, which is converted to JSON before being rendered by the template:</p>  <pre><code>chart = {     'bindto': '#chart',     'data': {         'columns': [             ['data1', 30, 200, 100, 400, 150, 250],             ['data2', 50, 20, 10, 40, 15, 25]         ]     } } return render_to_response('chart.html', {'chart_data': json.dumps(chart)}) </code></pre>  <p>That works fine, and I get something like <a href=""http://c3js.org/gettingstarted.html#generate"" rel=""nofollow"">this example</a>.</p>  <p>For more complicated C3 charts, I need to be able to include JavaScript functions in the argument to c3.generate. (For example the <code>onclick</code> value in <a href=""http://c3js.org/samples/chart_donut.html"" rel=""nofollow"">this donut chart</a>.) But JSON doesn't support representing functions, and adding <code>'onclick': 'function (d, i) { ... };'</code> to the Python dict just results in a string when JSON encoded. Trying to subclass <code>json.JSONEncoder</code> seems fruitless, as what I need to output isn't valid JSON, it's actual JavaScript.</p>  <p>Is there a neat way of doing this? At the moment I'm doing a kludgy workaround, inserting the JavaScript function code into the result of <code>json.dumps()</code>.</p>"	2015-10-14 05:39:12.263 UTC	33138550	"<p>On reflection, I think what I'm asking is a case of approaching the problem the wrong way, or <a href=""http://homepage.ntlworld.com/jonathan.deboynepollard/FGA/put-down-the-chocolate-covered-banana.html"" rel=""nofollow"">using the wrong tools to solve the problem</a>.</p>  <p>The data structure given to <code>c3.generate()</code> contains two things:</p>  <ol> <li>configuration for how the data is structured and how the chart should look, and</li> <li>the actual data to be rendered in the chart.</li> </ol>  <p>There's no particular reason I need to have the configuration setup in the Django view code. With that realization, I can move the configuration (including the problematic ""onclick"" JavaScript function I wanted to add) to the template, and inject the data into a separate variable.</p>  <p>The template would be:</p>  <pre><code>&lt;script&gt; var columns = {{ chart_columns|safe }}; var chart = c3.generate({     bindto: '#chart',     data: {       columns: columns,       onclick: function (d, i) { /* ... */ }     } }); &lt;/script&gt; </code></pre>  <p>And the view code:</p>  <pre><code>chart = [     ['data1', 30, 200, 100, 400, 150, 250],     ['data2', 50, 20, 10, 40, 15, 25] ] return render_to_response('chart.html', {'chart_columns': json.dumps(chart)}) </code></pre>  <p>As well as solving my problem, this fits better with Django's Model-View-Template design.</p>"			2015-10-15 01:56:25.507 UTC
33161964	javascript|python|ecmascript-6	Javascript ES6 yield vs yield in python	<p>I have been working on Python and JS for some time and wanted understand the difference in behavior between the yield for generators in python vs in ES6</p>  <p>Using yield in python saves memory as it generates 1 item at a time . Is this the same for the yield in ES6?</p>	2015-10-16 03:13:06.447 UTC	33172269	"<p>The short answer is ""Yes.""</p>  <p>The simplified long answer is ""Yes, though generators have some overhead (fixed in the sense that it doesn't change with the number of items to be generated) that make the savings vanish when the number of items to be generated is small."" (but of course, in that case, the total cost is small enough that it rarely matters anyway)</p>  <p>Excessively complex caveat to the long answer:</p>  <p>CPython (the reference Python interpreter) does very little optimization of code; it can make small peephole optimizations in very limited circumstances (e.g. it can convert <code>1 + 2 + x</code> to <code>3 + x</code> in the byte code, but due to operator overloading and order of operations, it <em>can't</em> convert <code>x + 1 + 2</code> to <code>x + 3</code>, because it can't assume <code>x + 1</code> will return an <code>int</code>, and it can't know that addition is <a href=""https://en.wikipedia.org/wiki/Associative_property"" rel=""nofollow"">associative</a> for whatever type <code>x</code> turns out to be). So when you use a generator in CPython, it will always be executed as a generator at run time.</p>  <p>By contrast, on most modern browsers, the JavaScript engine uses <a href=""https://en.wikipedia.org/wiki/Just-in-time_compilation"" rel=""nofollow"">JIT-ing</a> to compile the JavaScript code down to native code; it can make <a href=""https://en.wikipedia.org/wiki/Adaptive_optimization"" rel=""nofollow"">speculative/adaptive optimizations</a> where it compiles to code that assumes specific types and values and falls back on interpreting the original JS only if the assumptions fail. Which means you can't actually say for sure what will be done in the case where your generator code is executed in a hot loop (where expensive analysis and optimization would be considered worthwhile for the long term savings).</p>  <p>If the JS engine determines that the generator is usually producing a small number of outputs that can be calculated ahead of time, that are usually fully consumed, that the generation process has no visible side-effects, and that it would be more efficient and not too memory intensive, it would be well within its rights to produce native code that doesn't actually create or run a generator, but instead produces an <code>Array</code> of outputs (or for stuff like numbers, perhaps an ES6 <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Typed_arrays"" rel=""nofollow"">typed array</a> to reduce memory usage). I have no insight into which JS engines, if any, might attempt to perform such an optimization, but given how rapidly state of the art has been changing for JS engines over the last seven years or so (the slowest commonly used modern JS engine is probably at least 10x faster than the fastest engine from Sept. 1, 2008, before <a href=""https://en.wikipedia.org/wiki/V8_%28JavaScript_engine%29"" rel=""nofollow"">V8</a> released), the optimizations that occur today could easily change tomorrow.</p>"			2015-10-16 13:54:02.927 UTC
33175188	javascript|python|html|beautifulsoup|screen-scraping	How to display in browser python output trough javascript?	"<p>Thanks to this script:</p>  <pre><code>import requests from bs4 import BeautifulSoup import urllib2 import sys   import urlparse import io  url = ""anUrl"" r = requests.get(url) soup = BeautifulSoup(r.text,'lxml') div = soup.find('div',id='content') print div.prettify().encode(sys.stdout.encoding, 'ignore') </code></pre>  <p>i've scraped some content that i want to print into another html page, trough javascript how can i handle the python output? Is it possible to print the content in the same way i've done in command line, with a browser page? I've got some encoding problems trying to do that.</p>"	2015-10-16 16:21:28.073 UTC	33175359	"<p>If you are trying to write the div to an HTML file, then you basically do just that. </p>  <pre><code>f = open('file.html', 'w') f.write(div) f.close() </code></pre>"			2015-10-16 16:32:14.143 UTC
33249579	javascript|python|clojure|functional-programming|reduce	"Javascript equivalent to Clojure's ""reductions"" or python's itertools.accumulate"	"<p>Is there a JavaScript equivalent to Clojure's ""reductions"" function or Python's <code>itertools.accumulate</code>? In other words, given an array <code>[x_0, x_1, x_2 ... x_n-1]</code> and a function <code>f(prev, next)</code>, it would return an array of length <code>n</code> with values:</p>  <p><code>[x_0, f(x_0, x_1), f(f(x_0, x_1), x_2)... f(f(f(...)), x_n)]</code></p>  <p>I'm simulating the desired behavior below:</p>  <pre><code>function accumsum(prev, next) {     last = prev[prev.length - 1] || 0;     prev.push(last + next);     return prev; }  var x = [1, 1, 1, 1]; var y = x.reduce(accumsum, []); var z = y.reduce(accumsum, []);  console.log(x); console.log(y); console.log(z); </code></pre>  <p>which displays:</p>  <pre><code>[ 1, 1, 1, 1 ] [ 1, 2, 3, 4 ] [ 1, 3, 6, 10 ] </code></pre>  <p>But I'm wondering if there is a way to write something simpler like</p>  <pre><code>[1, 1, 1, 1].reductions(function(prev, next) {return prev + next;}); </code></pre>  <p>If not, is there a more idiomatic way to do this in JavaScript than what I wrote?</p>"	2015-10-21 01:39:58.017 UTC	40315956	"<p>I wrote a stateless version</p>  <pre><code>function reductions(coll, reducer, init) {   if (!coll.length) {     return [init]   }   if (init === undefined) {     return reductions(_.drop(coll, 1), reducer, _.first(coll))   }   return [init].concat(reductions(_.drop(coll, 1), reducer, reducer(init, _.first(coll)))) } </code></pre>"			2016-10-29 04:12:34.633 UTC
33249579	javascript|python|clojure|functional-programming|reduce	"Javascript equivalent to Clojure's ""reductions"" or python's itertools.accumulate"	"<p>Is there a JavaScript equivalent to Clojure's ""reductions"" function or Python's <code>itertools.accumulate</code>? In other words, given an array <code>[x_0, x_1, x_2 ... x_n-1]</code> and a function <code>f(prev, next)</code>, it would return an array of length <code>n</code> with values:</p>  <p><code>[x_0, f(x_0, x_1), f(f(x_0, x_1), x_2)... f(f(f(...)), x_n)]</code></p>  <p>I'm simulating the desired behavior below:</p>  <pre><code>function accumsum(prev, next) {     last = prev[prev.length - 1] || 0;     prev.push(last + next);     return prev; }  var x = [1, 1, 1, 1]; var y = x.reduce(accumsum, []); var z = y.reduce(accumsum, []);  console.log(x); console.log(y); console.log(z); </code></pre>  <p>which displays:</p>  <pre><code>[ 1, 1, 1, 1 ] [ 1, 2, 3, 4 ] [ 1, 3, 6, 10 ] </code></pre>  <p>But I'm wondering if there is a way to write something simpler like</p>  <pre><code>[1, 1, 1, 1].reductions(function(prev, next) {return prev + next;}); </code></pre>  <p>If not, is there a more idiomatic way to do this in JavaScript than what I wrote?</p>"	2015-10-21 01:39:58.017 UTC	33294093	"<p>For posterity, if you're in a situation where you're using an older version of JavaScript, or don't have access to <a href=""http://underscorejs.org"" rel=""nofollow noreferrer"">Underscore</a>.</p>  <p>It's not difficult to implement from scratch and has some educational value.</p>  <p>Here's one way to do it:</p>  <pre><code>function reduce(a, fn, memo) {   var i;   for (i = 0; i &lt; a.length; ++i) {     if ( typeof memo === 'undefined' &amp;&amp; i === 0 ) memo = a[i];     else memo = fn(memo, a[i]);   }   return memo; } </code></pre>  <p>Also, other higher order functions can be written in terms of reduce, e.g. ""map"", shown here:</p>  <pre><code>function map(a, fn) {   return reduce(a, function(memo, x) {     return memo.concat(fn(a));   }, []); } </code></pre>  <p>for reference the equivalent imperative (and faster) version of map would be:</p>  <pre><code>function map2(a, fn) {   var newA = [], i;   for (i = 0; i &lt; a.length; ++i) {     newA.push(fn(a[i]));   }   return newA; } </code></pre>"			2015-10-23 02:49:46.873 UTC
33249579	javascript|python|clojure|functional-programming|reduce	"Javascript equivalent to Clojure's ""reductions"" or python's itertools.accumulate"	"<p>Is there a JavaScript equivalent to Clojure's ""reductions"" function or Python's <code>itertools.accumulate</code>? In other words, given an array <code>[x_0, x_1, x_2 ... x_n-1]</code> and a function <code>f(prev, next)</code>, it would return an array of length <code>n</code> with values:</p>  <p><code>[x_0, f(x_0, x_1), f(f(x_0, x_1), x_2)... f(f(f(...)), x_n)]</code></p>  <p>I'm simulating the desired behavior below:</p>  <pre><code>function accumsum(prev, next) {     last = prev[prev.length - 1] || 0;     prev.push(last + next);     return prev; }  var x = [1, 1, 1, 1]; var y = x.reduce(accumsum, []); var z = y.reduce(accumsum, []);  console.log(x); console.log(y); console.log(z); </code></pre>  <p>which displays:</p>  <pre><code>[ 1, 1, 1, 1 ] [ 1, 2, 3, 4 ] [ 1, 3, 6, 10 ] </code></pre>  <p>But I'm wondering if there is a way to write something simpler like</p>  <pre><code>[1, 1, 1, 1].reductions(function(prev, next) {return prev + next;}); </code></pre>  <p>If not, is there a more idiomatic way to do this in JavaScript than what I wrote?</p>"	2015-10-21 01:39:58.017 UTC	33249614	"<pre><code>var a = [1, 1, 1, 1]; var c = 0; a.map(function(x) { return c += x; }) // =&gt; [1, 2, 3, 4]  a.reduce(function(c, a) {   c.push(c[c.length - 1] + a);   return c; }, [0]).slice(1); // =&gt; [1, 2, 3, 4] </code></pre>  <p>I'd use the first one, personally.</p>  <p>EDIT:</p>  <blockquote>   <p>Is there a way of doing your first suggestion that doesn't require me to have a random global variable (c in this case) floating around? If I forgot to re-initialize c back to 0, the second time I wrote a.map(...) it would give the wrong answer.</p> </blockquote>  <p>Sure - you can encapsulate it.</p>  <pre><code>function cumulativeReduce(fn, start, array) {   var c = start;   return array.map(function(x) {     return (c = fn(c, x));   }); } cumulativeReduce(function(c, a) { return c + a; }, 0, [1, 1, 1, 1]); // =&gt; [1, 2, 3, 4] c // =&gt; ReferenceError - no dangling global variables </code></pre>"			2015-10-21 01:45:58.957 UTC
33259968	javascript|jquery|python	Python partial equivalent in Javascript / jQuery	"<p>What is the equivalent for Pythons <a href=""https://docs.python.org/2/library/functools.html#functools.partial"" rel=""noreferrer"">functools.partial</a> in Javascript or jQuery ?</p>"	2015-10-21 12:57:47.783 UTC	52127218	"<h2>ES6 solution</h2>  <p>Here is a simple solution that works for <code>ES6</code>. However, since javascript doesn't support named arguments, you won't be able to skip arguments when creating a partial.</p>  <pre><code>const partial = (func, ...args) =&gt; (...rest) =&gt; func(...args, ...rest); </code></pre>  <p><strong>Example</strong></p>  <pre><code>const greet = (greeting, person) =&gt; `${greeting}, ${person}!`; const greet_hello = partial(greet, ""Hello"");  &gt;&gt;&gt; greet_hello(""Universe""); ""Hello, Universe!"" </code></pre>"			2018-09-01 10:29:38.12 UTC
33259968	javascript|jquery|python	Python partial equivalent in Javascript / jQuery	"<p>What is the equivalent for Pythons <a href=""https://docs.python.org/2/library/functools.html#functools.partial"" rel=""noreferrer"">functools.partial</a> in Javascript or jQuery ?</p>"	2015-10-21 12:57:47.783 UTC	67194061	"<p>To have the <a href=""https://stackoverflow.com/a/30760236/2314626"">ES6 Solution</a> also support classes:</p> <pre class=""lang-js prettyprint-override""><code>const isClass = function (v) {   // https://stackoverflow.com/a/30760236/2314626   return typeof v === &quot;function&quot; &amp;&amp; /^\s*class\s+/.test(v.toString()); };  const partial = (func, ...args) =&gt; {   return (...rest) =&gt; {     if (isClass(func)) {       return new func(...args, ...rest);     }     return func(...args, ...rest);   }; }; </code></pre> <p>To use:</p> <pre class=""lang-js prettyprint-override""><code>class Test {   constructor(a, b, c) {     this.a = a;     this.b = b;     this.c = c;   } }  const partialClass = partial(Test, &quot;a&quot;); const instance = partialClass(2, 3); console.log(instance); </code></pre> <p>output:</p> <pre><code>➔ node tests/test-partial.js Test { a: 'a', b: 2, c: 3 } </code></pre>"			2021-04-21 10:31:17.733 UTC
33259968	javascript|jquery|python	Python partial equivalent in Javascript / jQuery	"<p>What is the equivalent for Pythons <a href=""https://docs.python.org/2/library/functools.html#functools.partial"" rel=""noreferrer"">functools.partial</a> in Javascript or jQuery ?</p>"	2015-10-21 12:57:47.783 UTC	71882569	"<p>Here's an example using <code>lodash</code>:</p> <pre class=""lang-js prettyprint-override""><code>const _ = require(&quot;lodash&quot;);  const greet = (greeting, person) =&gt; `${greeting}, ${person}!`; const greet_hello = _.partial(greet, &quot;Hello&quot;);  &gt; greet_hello('John') 'Hello, John!' </code></pre>"			2022-04-15 09:52:12.087 UTC
33259968	javascript|jquery|python	Python partial equivalent in Javascript / jQuery	"<p>What is the equivalent for Pythons <a href=""https://docs.python.org/2/library/functools.html#functools.partial"" rel=""noreferrer"">functools.partial</a> in Javascript or jQuery ?</p>"	2015-10-21 12:57:47.783 UTC	33261231	"<p>Something like this perhaps. It is a little bit tricky as javascript doesn't have named arguments like python, but this function comes pretty close.</p>  <p><div class=""snippet"" data-lang=""js"" data-hide=""false""> <div class=""snippet-code""> <pre class=""snippet-code-js lang-js prettyprint-override""><code>function partial() {   var args = Array.prototype.slice.call(arguments);   var fn = args.shift();   return function() {     var nextArgs = Array.prototype.slice.call(arguments);     // replace null values with new arguments     args.forEach(function(val, i) {       if (val === null &amp;&amp; nextArgs.length) {         args[i] = nextArgs.shift();       }     });     // if we have more supplied arguments than null values     // then append to argument list     if (nextArgs.length) {       nextArgs.forEach(function(val) {         args.push(val);       });     }     return fn.apply(fn, args);   } }  // set null where you want to supply your own arguments var hex2int = partial(parseInt, null, 16); document.write('&lt;pre&gt;'); document.write('hex2int(""ff"") = ' + hex2int(""ff"") + '\n'); document.write('parseInt(""ff"", 16) = ' + parseInt(""ff"", 16)); document.write('&lt;/pre&gt;');</code></pre> </div> </div> </p>"			2015-10-21 13:53:42.84 UTC
33315519	javascript|php|python|node.js|cgi	Pass Data from JavaScript to Python	"<p>I am constantly receiving data in JavaScript. I want to pass this data as input to Python program. How to implement this?</p>  <hr>  <p>Data will be received as <strong>string</strong> in <strong>JavaScript</strong> on my browser. I have written a <strong>Python</strong> program where <strong>I need this string</strong> to do certain things. So, how can I pass the string received by JavaScript in my browser to the Python program?</p>  <p>I tried using <code>exec</code> in <strong>PHP</strong> along with <code>raw_input()</code> in <strong>Python</strong>. However, it didn't work as expected.</p>  <p>Note - I will constantly be receiving string on my browser. Hence, I need to constantly pass the strings to the Python program. Any language will work for me as long as it's supported both on Linux and Windows.</p>"	2015-10-24 07:08:45.823 UTC	33317013	"<p>based on your information,it feels like you will be repeatedly call a function after setting the value in java script ,it will be better you create a simple rest-service and call it e.g: <a href=""http://www.dreamsyssoft.com/python-scripting-tutorial/create-simple-rest-web-service-with-python.php"" rel=""nofollow"">http://www.dreamsyssoft.com/python-scripting-tutorial/create-simple-rest-web-service-with-python.php</a>   </p>"			2015-10-24 10:15:10.477 UTC
33317582	javascript|python|postgresql	Run python or javascript file from postgres function?	"<p>How i can Run python or javascript file from postgres function ?</p>  <p>I have two postgres data base with totally different structure . </p>  <p>but i need to sync that two databases .</p>  <p>I will write the script that will read data from local data base and write into server data base in any language (python , java , javascript, node).</p>  <p>but the main problem is :</p>  <p>I do not know how to call that script from postgres procedure or function .</p>  <p>so the ques is :</p>  <p><strong>How we can call or run any script from postgres procedure ?</strong></p>"	2015-10-24 11:20:43.413 UTC	33317630	"<p>You can create a <a href=""http://www.postgresql.org/docs/9.1/static/plperl-funcs.html"" rel=""nofollow"">Perl Function</a> and in that call your script to sync the databases.</p>"			2015-10-24 11:26:31 UTC
33317582	javascript|python|postgresql	Run python or javascript file from postgres function?	"<p>How i can Run python or javascript file from postgres function ?</p>  <p>I have two postgres data base with totally different structure . </p>  <p>but i need to sync that two databases .</p>  <p>I will write the script that will read data from local data base and write into server data base in any language (python , java , javascript, node).</p>  <p>but the main problem is :</p>  <p>I do not know how to call that script from postgres procedure or function .</p>  <p>so the ques is :</p>  <p><strong>How we can call or run any script from postgres procedure ?</strong></p>"	2015-10-24 11:20:43.413 UTC	33318217	"<p>Use <code>plperl</code>, <code>plpython</code> or <code>pljava</code> and use the system utils of the language. I.e in plpython use <code>subprocess</code>, in java use <code>Runtime.getRuntime().exec</code> and so on:</p>  <p>For example in <code>plpython</code>:</p>  <pre><code>CREATE LANGUAGE plpythonu; -- create language if does not exist  CREATE OR REPLACE FUNCTION venue.test_execute()   RETURNS void AS   $BODY$   import subprocess   subprocess.call(['/path/to/script/test.py'])    $BODY$ LANGUAGE plpythonu;  SELECT venue.test_execute(); </code></pre>  <p><strong>CONSIDERATIONS</strong> </p>  <p>Actually you can launch a script from a Postgres function, but this is not the preferred way to synchronize data between databases. You probably will have issues related to absolute and relative paths to scripts and data, and file system permissions. Instead use a database function to export data in a known format and call your synchronize script from outside the database. Another options is use the <a href=""http://www.postgresql.org/docs/9.3/static/dblink.html"" rel=""nofollow noreferrer"">dblink</a> module.</p>"			2015-10-24 12:29:56.82 UTC
33334585	javascript|java|python|node.js|v8	Python ExecJS - JavaScript Engine - work with Python class	"<p>I'm trying to work with JavaScript engine in Python. </p>  <p>I need work with Python class in JavaScript and vice versa - use JavaScript code in Python. How can I do that?</p>  <p>In Java I have working code:</p>  <pre><code>package test.test;  import javax.script.Bindings; import javax.script.Invocable; import javax.script.ScriptEngine; import javax.script.ScriptEngineManager; import javax.script.ScriptException; import javax.script.SimpleBindings;  public class JavaScriptInJava {          public static void main(String[] args) throws ScriptException, NoSuchMethodException {                  ScriptEngineManager manager = new ScriptEngineManager();                 ScriptEngine engine = manager.getEngineByName(""JavaScript"");                  /* ----------------------------------------------------------------------- */                  // Work with Java class from JavaScript:                                String userScript =                                   ""user1.setName(\""Test User\"");                ""                                 + ""print( user1.getName() );                    "";                  Bindings bindings = new SimpleBindings();                 User u = new User();                 bindings.put(""user1"", u);                                engine.eval(userScript, bindings);                  // Work with Java class from JavaScript.                  /* ----------------------------------------------------------------------- */                  // Use JavaScript function in Java code:                 String math =                                   ""function addition(a, b) {                    ""                                 + ""             return a+b;                     ""                                 + ""}                                            ""                                 + ""                                             ""                                 + ""function substraction(a, b) {                ""                                 + ""             return a-b;                     ""                                 + ""}                                            ""                                 + ""                                             "";                  engine.eval(math);                  Invocable inv = (Invocable) engine;                  int a = 10;                 int b = 5;                 System.out.println(""A="" + a + "" B="" + b);                  Object aPlusB = inv.invokeFunction(""addition"", a, b);                 System.out.println(""A+B = "" + aPlusB);                  Object[] inputParams = {                                 new Integer(10),                                 b                                 };                 Object aMinusB = inv.invokeFunction(""substraction"", inputParams);                 System.out.println(""A-B = "" + aMinusB);                  int x = (Integer) aPlusB + 1;                 System.out.println(""aPlusB + 1 = "" + x);                  // Use JavaScript function in Java code.                  /* ----------------------------------------------------------------------- */                   } } </code></pre>  <h3>User.java</h3>  <pre><code>package test.test;  public class User {          private String name;          public User() {         }          public String getName() {                 return name;         }          public void setName(String name) {                 this.name = name;         } } </code></pre>  <p>How can I rewrite it to Python?</p>  <pre><code>import execjs execjs.runtime = 'Node'  class Clazz:     a = 10     b = 20     c = ""test""      def add(self):         return self.a + self.b  x = Clazz() print x.add()  ctx = execjs.compile(""""""     function add(x, y) {         return x + y;     } """""") print ctx.call(""add"", 1, 2) </code></pre>  <p>Using JavaScript function in Python is ok. But I can't use Python class/variable in JavaScript.</p>"	2015-10-25 20:15:37.293 UTC	33459065	<p>It is simply impossible to use Python class in JavaScript with PyExecJS. Please refer PyV8 or other Py-JS libraries.</p>			2015-11-01 03:58:50.04 UTC
33336080	javascript|python|translate	How to do python zip() in Javascript?	"<p>I have this function that I'm trying to translate to javascript.</p>  <pre><code>def pascal(n):     row = [1]     k = [0]     for x in range(max(n,0)):         print(row)         row=[l+r for l,r in zip(row+k,k+row)]     return n&gt;=1 </code></pre>  <p>I'm having troubles with <code>zip</code>. </p>  <p>I cant figure how to translate that.</p>  <p>Can anyone help?</p>"	2015-10-25 23:02:26.973 UTC	66769627	"<p>here is a JavaScript implementation for a python like zip function(generator) you can give multiple arrays of different lengths and it will zip them together</p> <pre><code>function* zip(...arrays) {     let max_len = 0;     for(let i of arrays){         if(i.length&gt;max_len){             max_len = i.length;         }     }     for (let i = 0; i &lt; Math.max(max_len); i++) {         let temp_arr = [];         for(let j of arrays){             temp_arr.push(j[i]);         }         yield temp_arr;     } } let arr1 = [1, 2, 3],     arr2 = [4, 5, 6, 7]; for (let i of zip(arr1, arr2)) {     console.log(i); } </code></pre>"			2021-03-23 18:59:41.223 UTC
33336080	javascript|python|translate	How to do python zip() in Javascript?	"<p>I have this function that I'm trying to translate to javascript.</p>  <pre><code>def pascal(n):     row = [1]     k = [0]     for x in range(max(n,0)):         print(row)         row=[l+r for l,r in zip(row+k,k+row)]     return n&gt;=1 </code></pre>  <p>I'm having troubles with <code>zip</code>. </p>  <p>I cant figure how to translate that.</p>  <p>Can anyone help?</p>"	2015-10-25 23:02:26.973 UTC	33336134	"<p>Here's my version of a <code>zip</code> function for JavaScript.</p>  <p>It doesn't have any error handling... but it'll take unlimited arrays as arguments, and will return them ""zipped"" as in Python (in this case, as an array of arrays).</p>  <p>If the arrays aren't all the same length, it will error out.</p>  <pre><code>function zip() {     var out = [];     for (var i = 0; i &lt; arguments[0].length; i++) {         var item = [];         for (var j in arguments) {             item.push(arguments[j][i]);         }         out.push(item);     }     return out; } </code></pre>  <p>Here's a fiddle demonstrating it (printing the results tothe console):</p>  <p><strong><a href=""http://jsfiddle.net/wfmbdn40/"" rel=""nofollow"">http://jsfiddle.net/wfmbdn40/</a></strong></p>"			2015-10-25 23:08:51.427 UTC
33336080	javascript|python|translate	How to do python zip() in Javascript?	"<p>I have this function that I'm trying to translate to javascript.</p>  <pre><code>def pascal(n):     row = [1]     k = [0]     for x in range(max(n,0)):         print(row)         row=[l+r for l,r in zip(row+k,k+row)]     return n&gt;=1 </code></pre>  <p>I'm having troubles with <code>zip</code>. </p>  <p>I cant figure how to translate that.</p>  <p>Can anyone help?</p>"	2015-10-25 23:02:26.973 UTC	33336919	"<p>I don't think emulating <code>zip</code> is the best approach here. It's pretty inefficient Python code in the first place, as it spends a lot of time creating those temporary lists just so <code>zip</code> can be used</p>  <pre><code>function pascal(n) {     row = [1]     for (var x = 0; x &lt; n; x++) {         console.log(row);         new_row = [1]         for (var k = 1; k &lt; row.length; k++) {             new_row.push(row[k-1] + row[k]);         }         new_row.push(1);         row = new_row;     } } </code></pre>"			2015-10-26 00:58:53.443 UTC
33336080	javascript|python|translate	How to do python zip() in Javascript?	"<p>I have this function that I'm trying to translate to javascript.</p>  <pre><code>def pascal(n):     row = [1]     k = [0]     for x in range(max(n,0)):         print(row)         row=[l+r for l,r in zip(row+k,k+row)]     return n&gt;=1 </code></pre>  <p>I'm having troubles with <code>zip</code>. </p>  <p>I cant figure how to translate that.</p>  <p>Can anyone help?</p>"	2015-10-25 23:02:26.973 UTC	33336151	"<p><a href=""https://docs.python.org/2/library/functions.html#zip"" rel=""nofollow"">Python's zip</a> takes a bunch of iterables and connects the nth element to the others. If you has two lists, <code>a</code> with <code>['a', 'b', 'c']</code> and <code>n</code> with <code>[1, 2, 3]</code>, the result of <code>zip(a, n)</code> would be <code>['a', 1]</code>, <code>['b', 2]</code>, <code>['c', 3]</code>.</p>"			2015-10-25 23:10:49.84 UTC
33383840	javascript|python|function|lexical	Is there a JavaScript equivalent of the Python pass statement that does nothing?	<p>I am looking for a JavaScript equivalent of the Python:</p> <p><code>pass</code> statement that does not run the function of the <code>...</code> notation?</p> <p><strong>Is there such a thing in JavaScript?</strong></p>	2015-10-28 05:53:58.833 UTC	63879496	"<p>In some cases <code>pass</code> can just be <code>;</code></p> <p>A real life example can be:</p> <pre><code>var j; for (j = i + 1; j &lt; binstrN.length &amp;&amp; binstrN[j] != 1; j++) { } let count = j - i; </code></pre> <p>is same as</p> <pre><code>var j; for (j = i + 1; j &lt; binstrN.length &amp;&amp; binstrN[j] != 1; j++); let count = j - i; </code></pre> <p>Here we are trying to move <code>j</code> to next '1', while <code>i</code> was already at a '1' before it, hence <code>count</code> gives the distance between first two '1's in the string binary string <code>binstrN</code></p>"			2020-09-14 07:01:58.027 UTC
33383840	javascript|python|function|lexical	Is there a JavaScript equivalent of the Python pass statement that does nothing?	<p>I am looking for a JavaScript equivalent of the Python:</p> <p><code>pass</code> statement that does not run the function of the <code>...</code> notation?</p> <p><strong>Is there such a thing in JavaScript?</strong></p>	2015-10-28 05:53:58.833 UTC	61111819	"<p>Javascript does not have a python <code>pass</code> equivalent, unfortunately.</p>  <p>For example, it is not possible in javascript to do something like this:</p>  <p><code>process.env.DEV ? console.log('Connected..') : pass</code></p>  <p>Instead, we must do this:</p>  <p><code>if (process.env.DEV) console.log('Connected..')</code></p>  <p>The advantage of using the <code>pass</code> statement, among others, is that in the course of the development process we can evolve from the above ternary operator example in this case without having to turn it into a full <code>if</code> statement.</p>"			2020-04-08 23:50:02.71 UTC
33383840	javascript|python|function|lexical	Is there a JavaScript equivalent of the Python pass statement that does nothing?	<p>I am looking for a JavaScript equivalent of the Python:</p> <p><code>pass</code> statement that does not run the function of the <code>...</code> notation?</p> <p><strong>Is there such a thing in JavaScript?</strong></p>	2015-10-28 05:53:58.833 UTC	69353182	"<p>An easy way for passing an if statement is entering a string. 'pass' is more readible.</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-js lang-js prettyprint-override""><code>if(true){ 'pass' }</code></pre> </div> </div> </p>"			2021-09-27 20:57:50.753 UTC
33383840	javascript|python|function|lexical	Is there a JavaScript equivalent of the Python pass statement that does nothing?	<p>I am looking for a JavaScript equivalent of the Python:</p> <p><code>pass</code> statement that does not run the function of the <code>...</code> notation?</p> <p><strong>Is there such a thing in JavaScript?</strong></p>	2015-10-28 05:53:58.833 UTC	37492104	"<p>I've found that I get an error with empty braces, instead I put a semicolon in there, basically the same thing:</p>  <pre><code>try { //something; } catch (err) { ; } </code></pre>"			2016-05-27 20:54:04.92 UTC
33383840	javascript|python|function|lexical	Is there a JavaScript equivalent of the Python pass statement that does nothing?	<p>I am looking for a JavaScript equivalent of the Python:</p> <p><code>pass</code> statement that does not run the function of the <code>...</code> notation?</p> <p><strong>Is there such a thing in JavaScript?</strong></p>	2015-10-28 05:53:58.833 UTC	65759759	"<p>I know this is a very old question but i guess that is also possible to do something like this. <br> You can declare a constant that contains a string (or something else).</p> <pre><code>const pass = 'pass'; </code></pre> <p><code>const pass = null;</code> may also be good.</p> <pre><code>if (condition) {    pass } else {    console.log('hi!'); } </code></pre> <p>However note also that this may be a better option.</p> <pre><code>if (condition) {} else {     console.log('cool!'); } </code></pre> <p>Python doesn't have brackets to determine where the blocks of code are like javascript, so an empty block throws error (that's why you put the <code>pass</code> statement in empty blocks). What i have done by answering this question is just creating a constant using it as if it was a statement. The concept is really near to python's substitution of pass with ellipsis. <br> Someone in python prefers to use <code>...</code> instead of <code>pass</code>.</p> <pre><code>if condition:     ... else:     print('Python!') </code></pre>"			2021-01-17 10:55:58.69 UTC
33383840	javascript|python|function|lexical	Is there a JavaScript equivalent of the Python pass statement that does nothing?	<p>I am looking for a JavaScript equivalent of the Python:</p> <p><code>pass</code> statement that does not run the function of the <code>...</code> notation?</p> <p><strong>Is there such a thing in JavaScript?</strong></p>	2015-10-28 05:53:58.833 UTC	65920244	<p>you could create a function that actually does nothing.</p> <pre><code>const pass = () =&gt; {} </code></pre> <pre><code>try {   pass() } else {   console.log('helloworld!') } </code></pre>			2021-01-27 13:32:39.73 UTC
33383840	javascript|python|function|lexical	Is there a JavaScript equivalent of the Python pass statement that does nothing?	<p>I am looking for a JavaScript equivalent of the Python:</p> <p><code>pass</code> statement that does not run the function of the <code>...</code> notation?</p> <p><strong>Is there such a thing in JavaScript?</strong></p>	2015-10-28 05:53:58.833 UTC	47091956	"<p>use <code>//pass</code> like python's <code>pass</code></p>  <p>like:</p>  <pre><code>if(condition){    //pass } </code></pre>  <p>This is equivalent to leaving the block with nothing in it, but is good for readability reasons.</p>  <p>reference from <a href=""https://eslint.org/docs/rules/no-empty"" rel=""noreferrer"">https://eslint.org/docs/rules/no-empty</a></p>"			2017-11-03 09:08:54.013 UTC
33383840	javascript|python|function|lexical	Is there a JavaScript equivalent of the Python pass statement that does nothing?	<p>I am looking for a JavaScript equivalent of the Python:</p> <p><code>pass</code> statement that does not run the function of the <code>...</code> notation?</p> <p><strong>Is there such a thing in JavaScript?</strong></p>	2015-10-28 05:53:58.833 UTC	64542084	"<p>If you want to just use the pass operator in a ternary operator or just in an if statement in JS, you can do this:</p> <pre><code>a === true &amp;&amp; console.log('okay') </code></pre> <p>You can use also use || operator but you should know that the || is the opposite of &amp;&amp;. Then if you want to use Pass in a function or a block in general as we do in Python like this:</p> <pre><code>def Func(): pass </code></pre> <p>In JS you should just leave the block empty as this:</p> <pre><code> if(){      console.log('ok')     }else{} </code></pre> <p>In the end, there are no braces in Python, so this is the main reason why we have a pass.</p>"			2020-10-26 17:28:55.333 UTC
33383840	javascript|python|function|lexical	Is there a JavaScript equivalent of the Python pass statement that does nothing?	<p>I am looking for a JavaScript equivalent of the Python:</p> <p><code>pass</code> statement that does not run the function of the <code>...</code> notation?</p> <p><strong>Is there such a thing in JavaScript?</strong></p>	2015-10-28 05:53:58.833 UTC	33383906	"<p>python's <a href=""http://docs.python.org/release/2.5.2/ref/pass.html"" rel=""noreferrer"">pass</a> is required for empty blocks.</p>  <pre><code>try:     # something except Exception:     pass </code></pre>  <p>In javascript you can simply catch an empty block</p>  <pre><code>try {     // some code } catch (e) {     // This here can be empty } </code></pre>"			2015-10-28 05:58:43.137 UTC
33383840	javascript|python|function|lexical	Is there a JavaScript equivalent of the Python pass statement that does nothing?	<p>I am looking for a JavaScript equivalent of the Python:</p> <p><code>pass</code> statement that does not run the function of the <code>...</code> notation?</p> <p><strong>Is there such a thing in JavaScript?</strong></p>	2015-10-28 05:53:58.833 UTC	33383865	"<p>Python's <code>pass</code> mainly exists because in Python whitespace matters within a block. In Javascript, the equivalent would be putting nothing within the block, i.e. <code>{}</code>.</p>"			2015-10-28 05:55:59.043 UTC
33454467	javascript|regex|python-3.x	python re match equivalent in javascript	"<p>In Python, you can use re.match(pattern,str) to get the matched groups through ""()"". For example, if I have:</p>  <pre><code>str = ""My name is Derek Last Name"" re.match(""My name is (.+)"",str).group(1) //output is ""Derek Last Name"" </code></pre>  <p>Is there a way to achieve the same functionality in Javascript?</p>  <p>Thanks</p>  <p>Derek</p>"	2015-10-31 17:29:14.04 UTC	33454535	"<p>You may use the match function.</p>  <pre><code>&gt; var str = ""My name is Derek Last Name"" undefined &gt; str.match(/My name is (.+)/)[1] 'Derek Last Name' </code></pre>"			2015-10-31 17:35:31.66 UTC
33684242	javascript|python-3.x|pyside	Getting javascript variable value into python from QWebView	"<p>In my application, I have a form on one side and google maps on the other side. To display google maps, I'm using their javascript api. The javascript is writing as a string and part of the html which gets gets called by QWebView. My objective is for the user to click and drag the pin. After the pin has stopped dragging, it would update 2 text boxes on the right side through qt which will populate with the latitude and longitude of the dropped pin. I am having trouble figuring out how to send the data between javascript and python. I am using python3 with pyside qt bindings.</p>  <p>Here is what I have so far.</p>  <pre><code>webView = QWebView() webView.setHtml(html) self.central_widget_grid.addWidget(webView,1,0) </code></pre>  <p>Html is a constant defined in another file</p>  <pre><code>#!/usr/bin/python  jscode = """"""     var map;     var marker;     function initMap() {         map = new google.maps.Map(document.getElementById('map'), {         center: {lat: 40.793697, lng: -77.8586},         zoom: 10         });          map.addListener('click', function(e) {             placeMarkerAndPanTo(e.latLng, map);         });     }      function placeMarkerAndPanTo(latLng, map) {       if (marker === undefined) {             marker = new google.maps.Marker({             position: latLng,             map: map,             title: ""Station Location"",             draggable: true           });           map.panTo(latLng);           marker.addListener('dragend', function() { draggedMarker(); });       }     }      function draggedMarker() {         alert(marker.getPosition());         statLoc.updateLoc(marker.getPosition().lat(), marker.getPosition().lng());      }      """"""  html = """"""&lt;!DOCTYPE html&gt;     &lt;html&gt;     &lt;head&gt;     &lt;meta name=""viewport"" content=""initial-scale=1.0, user-scalable=no"" /&gt;     &lt;style type=""text/css""&gt;       html { height: 100% }       body { height: 100%; margin: 0px; padding: 0px }       #map_canvas { height: 100% }     &lt;/style&gt;     &lt;script type=""text/javascript""       src=""http://maps.google.com/maps/api/js?sensor=false&amp;callback=initMap""&gt;     &lt;/script&gt;     &lt;script type=""text/javascript""&gt;"""""" + jscode +  """"""       &lt;/script&gt;     &lt;/head&gt;     &lt;body onload=""initMap();""&gt;         &lt;div id=""map"" style=""width:100%; height:100%""&gt;&lt;/div&gt;     &lt;/body&gt;     &lt;/html&gt;"""""" </code></pre>  <p>I have tried creating a class which holds the latitude and longitude and then passing that by calling addToJavaScriptWindowObject.</p>  <pre><code>class StationLocation(QObject):     latitude = 0.0     longitude = 0.0      def __init__(self):         super(StationLocation, self).__init__()      def updateLoc(self,lat,long):         self.latitude = lat         self.longitude = long         print(self.latitude, self.longitude) </code></pre>  <p>With the following changes to my webView</p>  <pre><code>    webView = QWebView()     webView.setHtml(html)      frame = webView.page().mainFrame()     frame.addToJavaScriptWindowObject('statLoc', self.station_location)      self.central_widget_grid.addWidget(webView, 1, 0) </code></pre>  <p>With that added. With the print statement inside StationLocations, I expect to see the latitude and longitude printed in the console every time that function is called. I can't find out why this isn't the case. </p>"	2015-11-13 00:59:38.27 UTC	33703888	"<p>There are two things you are doing wrong. Firstly, you need to wait until the page is loaded before adding the object. Secondly, the javascript must only call methods of the added object that are decorated as slots.</p>  <p>Below is a working demo. But one caveat: the PySide implementation of <code>addToJavaScriptWindowObject</code> is buggy. It should be possible to use <code>self</code> (i.e. the main window) as the added object, but when I try that with PySide, it hangs on exit for several seconds and then dumps core. For this reason, I used a proxy object in the demo - but with PyQt, the proxy wouldn't be needed.</p>  <pre><code>import sys from PySide import QtCore, QtGui, QtWebKit  html = ''' &lt;html&gt;&lt;head&gt; &lt;meta name=""viewport"" content=""initial-scale=1.0, user-scalable=no"" /&gt; &lt;style type=""text/css""&gt;     html { height: 100% }     body { height: 100%; margin: 0; padding: 0 }     #map { width: 100%; height: 100% } &lt;/style&gt; &lt;script src=""https://maps.googleapis.com/maps/api/js""&gt;&lt;/script&gt; &lt;script type=""text/javascript""&gt;     var map, marker     function initialize() {         map = new google.maps.Map(document.getElementById(""map""), {             center: {lat: 40.793697, lng: -77.8586},             zoom: 10         })         marker = new google.maps.Marker({             map: map,             position: map.getCenter(),             draggable: true         })         marker.addListener(""dragend"", function () {             var pos = marker.getPosition()             qt.showLocation(pos.lat(), pos.lng())             console.log(""dragend: "" + pos.toString())         })     }     google.maps.event.addDomListener(window, ""load"", initialize) &lt;/script&gt; &lt;/head&gt; &lt;body&gt;&lt;div id=""map""/&gt;&lt;/body&gt; &lt;/html&gt; '''  class WebPage(QtWebKit.QWebPage):     def javaScriptConsoleMessage(self, message, line, source):         if source:             print('line(%s) source(%s): %s' % (line, source, message))         else:             print(message)  class Proxy(QtCore.QObject):     @QtCore.Slot(float, float)     def showLocation(self, latitude, longitude):         self.parent().edit.setText('%s, %s' % (latitude, longitude))  class MainWindow(QtGui.QWidget):     def __init__(self, parent=None):         super(MainWindow, self).__init__(parent)         self.view = QtWebKit.QWebView(self)         self.view.setPage(WebPage(self))         self.edit = QtGui.QLineEdit(self)         layout = QtGui.QVBoxLayout(self)         layout.addWidget(self.view)         layout.addWidget(self.edit)         self.map = self.view.page().mainFrame()         self.map.loadFinished.connect(self.handleLoadFinished)         self.view.setHtml(html)         self._proxy = Proxy(self)      def handleLoadFinished(self, ok):         self.map.addToJavaScriptWindowObject('qt', self._proxy)  if __name__ == '__main__':      app = QtGui.QApplication(sys.argv)     window = MainWindow()     window.setGeometry(500, 300, 800, 600)     window.show()     sys.exit(app.exec_()) </code></pre>"			2015-11-14 00:40:35.06 UTC
33714815	javascript|python|html|cgi	Can you call a Python Function using a JavaScript function?	"<p>I've looked through the other questions in this website but none of them have the answers I'm looking for since most have code for jQuery, JSON, AJAX (if I can actually use it in the JavaScript function below, I'll use it), or try to download some files/programs/frameworks/packages to do it, like Flask, TkInter, or Django, none of I can use.</p>  <p>I need to do this without needing extra files.</p>  <p>So what I'm trying to do is get an HTML button called ""Delete"" to delete an image on another page called gallery.cgi on click and ""Cancel"" just redirects to gallery.cgi on click. main() does that but I can't call it in the HTML/JavaScript code. I need main() to only be called when ""Delete"" is clicked.</p>  <p>This is the function I'm trying to run in JavaScript, main() which uses a database file (for persistent storage) called test_shelf (stores images directory) and filename.db (stores filenames). Using this, it deletes the last image stored in the db files.</p>  <pre><code>import cgi, os import cgitb; cgitb.enable() import shelve  images = shelve.open('test_shelf.db', writeback = True) imageTitle = ""Armory"" # Title of image being deleted def main():     db = shelve.open('filename.db', writeback = True)     try:       if db['key']:         alist = db['key']           # read         _filename = alist[-1]           # last element of list         images.pop(_filename, None)         alist.remove(_filename)         db['key'] = alist           # writeback         if os.path.exists('pictures/' + _filename): # pictures is where I store the images, so I need to delete them.           os.remove('pictures/' + _filename)     finally:       db.close() </code></pre>  <p>This is the JavaScript function that I want to call the python function in.</p>  <pre><code>function deletePicture() {   // Call main() here, so only clicking ""Delete"" button can delete an image   location.href='gallery.cgi'; } </code></pre>  <p>And this is the code in HTML that calls deletePicture() OnClick. The button called Delete calls deletePicture() on click, which should call main() and it will delete the last image stored in db and then redirect to gallery.cgi.</p>  <pre><code>&lt;p&gt;Are you sure? You want to delete picture [ &lt;b&gt;"""""" print imageTitle print """"""&lt;/b&gt; ].&lt;/p&gt;   &lt;input type = ""button"" value = ""Delete"" onClick = ""return deletePicture()""/&gt;   &lt;input type = ""button"" value = ""Cancel"" onClick = ""location.href='gallery.cgi';""/&gt; </code></pre>  <p>Note that all of this is in the same file (delete.cgi), which is a Python CGI. All the HTML/JavaScript code is printed by python code. (I can't make another file (.py) that has the main() code and then call it in delete.cgi, I'm only allowed to use one .cgi file to perform delete.)</p>"	2015-11-14 23:55:59.633 UTC	33715601	"<p>I think you can call main by having your delete input connect to gallery.cgi/main/ and then executing os.environs['PATH'] as a method in the CGI file.</p>  <p>HTML:</p>  <pre><code>&lt;input type = ""button"" value = ""Delete"" onClick = ""location.href='gallery.cgi/main/'""/&gt; </code></pre>  <p>Python (something like):</p>  <pre><code>if os.environs['PATH']:     path = os.environs['PATH']     locals()[path]() </code></pre>  <p>You could also replace either of those inputs with a link and href, if this is the only function they perform. And you would also want to check whether os.environs['PATH'] is an available method to run.</p>"			2015-11-15 02:01:50.8 UTC
33715086	python|python-3.x|web-scraping|beautifulsoup	downloading data using python from a website that uses javascript to display information	"<p>I typically use the following template script to download data from a website:</p>  <pre><code>import urllib.request as web from bs4 import BeautifulSoup ... url_to_visit ='http://www.website-link-to-download-data' source_code =  web.urlopen(url_to_visit).read() source_code = ''.join(map(chr, source_code) source_code = source_code.split('\n') ## then further process the lines returned in `source_code` as needed </code></pre>  <p>But sometimes I come across very difficult sites. </p>  <p>Consider the site: <a href=""https://www.spice-indices.com/idp2/Main#home"" rel=""nofollow"">https://www.spice-indices.com/idp2/Main#home</a>. Suppose from the first table <code>Intraday Alerts - United States</code>, I want to download via Python script the information that is displayed when I click the <code>SP TMI</code> tab.</p>  <p>I looked at the output of the <code>splitSource</code> above, but I couldn't figure out how to extract the information I want. It seems to be using Javascript backend to display the information. Can someone give me any pointers or suggestions?</p>  <p>I am using Python 3.x.</p>"	2015-11-15 00:36:57.227 UTC	33716260	"<p>When you activate the ""SP TMI"" tab there is a POST request send to ""intraday-announcements.json"" endpoint - simulate that in your code and parse the JSON response.</p>  <p>Sample working code using <a href=""http://docs.python-requests.org/en/latest/"" rel=""nofollow""><code>requests</code></a>:</p>  <pre><code>import requests  with requests.Session() as session:     session.get(""https://www.spice-indices.com/idp2/Main#home"")      response = session.post(""https://www.spice-indices.com/idp2/intraday/effectivedate/11-14-2015/intraday-announcements.json"", data={         ""start"": ""0"",         ""limit"": ""10"",         ""indexKey"": ""SPUSA-TMI-USDUF--P-US----""     })      data = response.json()[""widget_data""]     for item in data:         print(item[""EVENT_NAME""]) </code></pre>  <p>Prints:</p>  <pre><code>Dividend Weekly Share Change Special Dividend Merger/Acquisition Merger/Acquisition Drop Merger/Acquisition Merger/Acquisition Drop Identifier Changes </code></pre>  <p>Note that the effective date is actually inside the URL, see the <code>11-14-2015</code> part.</p>"			2015-11-15 03:58:07.307 UTC
33716317	javascript|jquery|json	Parsing python json response in javascript	"<p>I am parsing json response in jquery. </p>  <p><code>console.log(response)</code> gives</p>  <pre><code>{""result"": [{""surprise"": ""24.79%""}, {""joy"": ""18.73%""}, {""anticipation"": ""14.61%""}, {""disgust"": ""10.54%""}, {""sadness"": ""8.75%""}, {""trust"": ""8.32%""}, {""anger"": ""8.12%""}, {""fear"": ""6.14%""}]} </code></pre>  <p>I trying to parse this json into variable like this:</p>  <pre><code>val res = JSON.parse(response); document.getElementById(""anger"").innerHTML = res['result'][6]['anger']; document.getElementById(""disgust"").innerHTML = res['result'][3]['disgust']; document.getElementById(""fear"").innerHTML = res['result'][7]['fear']; document.getElementById(""joy"").innerHTML = res['result'][1]['joy']; document.getElementById(""sadness"").innerHTML = res['result'][4]['sadness']; document.getElementById(""surprise"").innerHTML = res['result'][0]['surprise']; document.getElementById(""trust"").innerHTML = res['result'][5]['trust']; document.getElementById(""anticipation"").innerHTML = res['result'][2]['anticipation']; </code></pre>  <p>which gives</p>  <pre><code>Uncaught SyntaxError: Unexpected identifier </code></pre>  <p>at <code>val res = JSON.parse(response);</code></p>  <p>What mistake I am doing here?</p>"	2015-11-15 04:11:23.993 UTC	33716546	"<p>Change <code>val</code> to <code>var</code>:</p>  <p><div class=""snippet"" data-lang=""js"" data-hide=""false""> <div class=""snippet-code""> <pre class=""snippet-code-js lang-js prettyprint-override""><code>var response = '{""result"": [{""surprise"": ""24.79%""}, {""joy"": ""18.73%""}, {""anticipation"": ""14.61%""}, {""disgust"": ""10.54%""}, {""sadness"": ""8.75%""}, {""trust"": ""8.32%""}, {""anger"": ""8.12%""}, {""fear"": ""6.14%""}]}';   var res = JSON.parse(response); document.getElementById(""anger"").innerHTML = res['result'][6]['anger']; document.getElementById(""disgust"").innerHTML = res['result'][3]['disgust']; document.getElementById(""fear"").innerHTML = res['result'][7]['fear']; document.getElementById(""joy"").innerHTML = res['result'][1]['joy']; document.getElementById(""sadness"").innerHTML = res['result'][4]['sadness']; document.getElementById(""surprise"").innerHTML = res['result'][0]['surprise']; document.getElementById(""trust"").innerHTML = res['result'][5]['trust']; document.getElementById(""anticipation"").innerHTML = res['result'][2]['anticipation'];</code></pre> <pre class=""snippet-code-html lang-html prettyprint-override""><code>&lt;div id=""anger""&gt;&lt;/div&gt; &lt;div id=""disgust""&gt;&lt;/div&gt; &lt;div id=""fear""&gt;&lt;/div&gt; &lt;div id=""joy""&gt;&lt;/div&gt; &lt;div id=""sadness""&gt;&lt;/div&gt; &lt;div id=""surprise""&gt;&lt;/div&gt; &lt;div id=""trust""&gt;&lt;/div&gt; &lt;div id=""anticipation""&gt;&lt;/div&gt;</code></pre> </div> </div> </p>"			2015-11-15 04:50:54.667 UTC
33716317	javascript|jquery|json	Parsing python json response in javascript	"<p>I am parsing json response in jquery. </p>  <p><code>console.log(response)</code> gives</p>  <pre><code>{""result"": [{""surprise"": ""24.79%""}, {""joy"": ""18.73%""}, {""anticipation"": ""14.61%""}, {""disgust"": ""10.54%""}, {""sadness"": ""8.75%""}, {""trust"": ""8.32%""}, {""anger"": ""8.12%""}, {""fear"": ""6.14%""}]} </code></pre>  <p>I trying to parse this json into variable like this:</p>  <pre><code>val res = JSON.parse(response); document.getElementById(""anger"").innerHTML = res['result'][6]['anger']; document.getElementById(""disgust"").innerHTML = res['result'][3]['disgust']; document.getElementById(""fear"").innerHTML = res['result'][7]['fear']; document.getElementById(""joy"").innerHTML = res['result'][1]['joy']; document.getElementById(""sadness"").innerHTML = res['result'][4]['sadness']; document.getElementById(""surprise"").innerHTML = res['result'][0]['surprise']; document.getElementById(""trust"").innerHTML = res['result'][5]['trust']; document.getElementById(""anticipation"").innerHTML = res['result'][2]['anticipation']; </code></pre>  <p>which gives</p>  <pre><code>Uncaught SyntaxError: Unexpected identifier </code></pre>  <p>at <code>val res = JSON.parse(response);</code></p>  <p>What mistake I am doing here?</p>"	2015-11-15 04:11:23.993 UTC	33717301	"<p>First you need to change ""val"" to ""var"".  Then here's how I'd do this:</p>  <pre><code>res.result.forEach( function(elem){     for (var e in elem){         $('.' + e).html(elem[e]);     } }); </code></pre>  <p>Here's a fiddle: <a href=""https://jsfiddle.net/mckinleymedia/pc2q917f/"" rel=""nofollow"">https://jsfiddle.net/mckinleymedia/pc2q917f/</a></p>"			2015-11-15 07:07:34.22 UTC
33724821	javascript|python-3.x|maze	Python Maze Generation Script - Converting to Javascript: Differences in Maths?	"<p>I have a maze generator script in Python (3.4) that I am trying to convert to Javascript. The original Python script can be found below:</p>  <pre><code>import random  width = 10 height = 10 difficulty = 5  walls = [] maze = [0] * width  for i in range(height):     maze[i] = [0] * height  maze[0][1] = 1  walls.append([1, 1, 1])  print(random.random())  def addWalls():     walls.append([X + 1, Y, 1])     walls.append([X - 1, Y, 2])     walls.append([X, Y + 1, 3])     walls.append([X, Y - 1, 4])     maze[X][Y] = 1  while len(walls) &gt; 0:     if len(walls) &gt; difficulty:         current = len(walls) - round(random.random() * difficulty) - 1     else:         current = round(random.random() * (len(walls) - 1))      cell = walls[current]     walls.pop(current)      X = cell[0]     Y = cell[1]     Dir = cell[2]      if Dir == 1:         if X + 1 &lt; width and maze[X][Y] == 0 and maze[X + 1][Y] == 0 and maze[X + 1][Y - 1] == 0 and maze[X + 1][Y + 1] == 0 and maze[X][Y - 1] == 0 and maze[X][Y + 1] == 0:             addWalls()     elif Dir == 2:         if X - 1 &gt;  - 1 and maze[X][Y] == 0 and maze[X - 1][Y] == 0 and maze[X - 1][Y - 1] == 0 and maze[X - 1][Y + 1] == 0 and maze[X][Y - 1] == 0 and maze[X][Y + 1] == 0:             addWalls()     elif Dir == 3:         if Y + 1 &lt; height and maze[X][Y] == 0 and maze[X][Y + 1] == 0 and maze[X - 1][Y + 1] == 0 and maze[X + 1][Y + 1] == 0 and maze[X - 1][Y] == 0 and maze[X + 1][Y] == 0:             addWalls()     elif Dir == 4:         if Y - 1 &gt;  - 1 and maze[X][Y] == 0 and maze[X][Y - 1] == 0 and maze[X - 1][Y - 1] == 0 and maze[X + 1][Y - 1] == 0 and maze[X - 1][Y] == 0 and maze[X + 1][Y] == 0:             addWalls()  for y in range(0, height):     line = ''     for x in range(0, width):         if (maze[x][y] == 0):             line += '0'         else:             line += '1'     print(line) </code></pre>  <p>The script works as it should, however when trying to accomplish the same in Javascript, the maze seems to stop traversing. See the snippet below (0 = wall, 1 = open space in the maze):</p>  <p><div class=""snippet"" data-lang=""js"" data-hide=""false""> <div class=""snippet-code""> <pre class=""snippet-code-js lang-js prettyprint-override""><code>function newLevel(dimensions, difficulty) {    // create arrays   walls = [     [1, 1, 1]   ];   maze = [];    for (i = 0; i &lt; dimensions - 1; i++) {     maze[i] = [0];     for (j = 0; j &lt; dimensions - 1; j++) {       maze[i][j] = [0];     }   }    // set the cell (0; 1) as the exit   maze[0][1] = 1;    function addwalls() {     walls.push([X + 1, Y, 1]);     walls.push([X - 1, Y, 2]);     walls.push([X, Y + 1, 3]);     walls.push([X, Y - 1, 4]);     maze[X][Y] = 1;   }    while (walls.length &gt; 0) {     current = Math.round(Math.random() * (walls.length - 1));     if (walls.length &gt; difficulty) {       current = walls.length - Math.round(Math.random() * difficulty) - 1;     }     cell = walls[current];     walls.pop(current);      X = cell[0];     Y = cell[1];     Dir = cell[2];      if (Dir == 1 &amp;&amp; X + 1 &lt; dimensions &amp;&amp; maze[X][Y] == 0 &amp;&amp; maze[X + 1][Y] == 0 &amp;&amp; maze[X + 1][Y - 1] == 0 &amp;&amp; maze[X + 1][Y + 1] == 0 &amp;&amp; maze[X][Y - 1] == 0 &amp;&amp; maze[X][Y + 1] == 0) {       addwalls();     }     if (Dir == 2 &amp;&amp; X - 1 &gt; -1 &amp;&amp; maze[X][Y] == 0 &amp;&amp; maze[X - 1][Y] == 0 &amp;&amp; maze[X - 1][Y - 1] == 0 &amp;&amp; maze[X - 1][Y + 1] == 0 &amp;&amp; maze[X][Y - 1] == 0 &amp;&amp; maze[X][Y + 1] == 0) {       addwalls()     }     if (Dir == 3 &amp;&amp; Y + 1 &lt; dimensions &amp;&amp; maze[X][Y] == 0 &amp;&amp; maze[X][Y + 1] == 0 &amp;&amp; maze[X - 1][Y + 1] == 0 &amp;&amp; maze[X + 1][Y + 1] == 0 &amp;&amp; maze[X - 1][Y] == 0 &amp;&amp; maze[X + 1][Y] == 0) {       addwalls();     }     if (Dir == 4 &amp;&amp; Y - 1 &gt; -1 &amp;&amp; maze[X][Y] == 0 &amp;&amp; maze[X][Y - 1] == 0 &amp;&amp; maze[X - 1][Y - 1] == 0 &amp;&amp; maze[X + 1][Y - 1] == 0 &amp;&amp; maze[X - 1][Y] == 0 &amp;&amp; maze[X + 1][Y] == 0) {       addwalls();     }   }    cells = maze;    for (var row = 0; row &lt; maze.length; row++) {     for (var col = 0; col &lt; maze[row].length; col++) {       $('body').append(maze[row][col]);     }     $('body').append('&lt;br /&gt;');   }  }  $(document).ready(function() {   newLevel(30, 5); });</code></pre> <pre class=""snippet-code-html lang-html prettyprint-override""><code>&lt;script src=""https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js""&gt;&lt;/script&gt;  &lt;body&gt;  &lt;/body&gt;</code></pre> </div> </div> </p>  <p>Are there any major differences in the way that Maths is done between Python and Javascript?</p>  <p>Thanks</p>  <p>EDIT: Thank you very much for your support. Here is the working script:</p>  <pre><code>function newLevel(dimensions, difficulty) {    // create arrays   walls = [[1, 1, 1]];   maze = [];    for (i = 0; i &lt; dimensions; i++) {     maze[i] = [0];     for (j = 0; j &lt; dimensions; j++) {       maze[i][j] = [0];     }   }    // set the cell (0; 1) as the exit   maze[0][1] = 1;    function addwalls() {     walls.push([X + 1, Y, 1]);     walls.push([X - 1, Y, 2]);     walls.push([X, Y + 1, 3]);     walls.push([X, Y - 1, 4]);     maze[X][Y] = 1;   }    while (walls.length &gt; 0) {     current = Math.round(Math.random() * (walls.length - 1));     if (walls.length &gt; difficulty) {       current = walls.length - Math.round(Math.random() * difficulty) - 1;     }      cell = walls[current];     walls.splice(current, 1)[0];      X = cell[0];     Y = cell[1];     Dir = cell[2];      if (Dir == 1 &amp;&amp; X + 1 &lt; dimensions &amp;&amp; maze[X][Y] == 0 &amp;&amp; maze[X + 1][Y] == 0 &amp;&amp; maze[X + 1][Y - 1] == 0 &amp;&amp; maze[X + 1][Y + 1] == 0 &amp;&amp; maze[X][Y - 1] == 0 &amp;&amp; maze[X][Y + 1] == 0) {       addwalls();     }     if (Dir == 2 &amp;&amp; X - 1 &gt;  - 1 &amp;&amp; maze[X][Y] == 0 &amp;&amp; maze[X - 1][Y] == 0 &amp;&amp; maze[X - 1][Y - 1] == 0 &amp;&amp; maze[X - 1][Y + 1] == 0 &amp;&amp; maze[X][Y - 1] == 0 &amp;&amp; maze[X][Y + 1] == 0) {       addwalls()     }     if (Dir == 3 &amp;&amp; Y + 1 &lt; dimensions &amp;&amp; maze[X][Y] == 0 &amp;&amp; maze[X][Y + 1] == 0 &amp;&amp; maze[X - 1][Y + 1] == 0 &amp;&amp; maze[X + 1][Y + 1] == 0 &amp;&amp; maze[X - 1][Y] == 0 &amp;&amp; maze[X + 1][Y] == 0) {       addwalls();     }     if (Dir == 4 &amp;&amp; Y - 1 &gt;  - 1 &amp;&amp; maze[X][Y] == 0 &amp;&amp; maze[X][Y - 1] == 0 &amp;&amp; maze[X - 1][Y - 1] == 0 &amp;&amp; maze[X + 1][Y - 1] == 0 &amp;&amp; maze[X - 1][Y] == 0 &amp;&amp; maze[X + 1][Y] == 0) {       addwalls();     }   }   return cells; } </code></pre>"	2015-11-15 20:43:36.993 UTC	33726244	"<p>The difference is that, in python, pop appears to be able to remove any element from an array. In javascript, <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/pop"" rel=""nofollow"">pop</a> removes the <em>last</em> element of an array, and it takes no arguments. To remove an arbitrary element from an array in javscript, use <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/splice"" rel=""nofollow"">splice</a>, which can remove and add elements at a given index:</p>  <pre><code>cell = walls[current]; walls.pop(current); </code></pre>  <p>becomes</p>  <pre><code>cell = walls.splice(current, 1)[0]; </code></pre>  <p>What this does is it removes 1 element from the array walls starting at the index current. Splice returns an array of elements removed, so cell is the first element of that array.</p>"			2015-11-15 23:11:44.417 UTC
33724821	javascript|python-3.x|maze	Python Maze Generation Script - Converting to Javascript: Differences in Maths?	"<p>I have a maze generator script in Python (3.4) that I am trying to convert to Javascript. The original Python script can be found below:</p>  <pre><code>import random  width = 10 height = 10 difficulty = 5  walls = [] maze = [0] * width  for i in range(height):     maze[i] = [0] * height  maze[0][1] = 1  walls.append([1, 1, 1])  print(random.random())  def addWalls():     walls.append([X + 1, Y, 1])     walls.append([X - 1, Y, 2])     walls.append([X, Y + 1, 3])     walls.append([X, Y - 1, 4])     maze[X][Y] = 1  while len(walls) &gt; 0:     if len(walls) &gt; difficulty:         current = len(walls) - round(random.random() * difficulty) - 1     else:         current = round(random.random() * (len(walls) - 1))      cell = walls[current]     walls.pop(current)      X = cell[0]     Y = cell[1]     Dir = cell[2]      if Dir == 1:         if X + 1 &lt; width and maze[X][Y] == 0 and maze[X + 1][Y] == 0 and maze[X + 1][Y - 1] == 0 and maze[X + 1][Y + 1] == 0 and maze[X][Y - 1] == 0 and maze[X][Y + 1] == 0:             addWalls()     elif Dir == 2:         if X - 1 &gt;  - 1 and maze[X][Y] == 0 and maze[X - 1][Y] == 0 and maze[X - 1][Y - 1] == 0 and maze[X - 1][Y + 1] == 0 and maze[X][Y - 1] == 0 and maze[X][Y + 1] == 0:             addWalls()     elif Dir == 3:         if Y + 1 &lt; height and maze[X][Y] == 0 and maze[X][Y + 1] == 0 and maze[X - 1][Y + 1] == 0 and maze[X + 1][Y + 1] == 0 and maze[X - 1][Y] == 0 and maze[X + 1][Y] == 0:             addWalls()     elif Dir == 4:         if Y - 1 &gt;  - 1 and maze[X][Y] == 0 and maze[X][Y - 1] == 0 and maze[X - 1][Y - 1] == 0 and maze[X + 1][Y - 1] == 0 and maze[X - 1][Y] == 0 and maze[X + 1][Y] == 0:             addWalls()  for y in range(0, height):     line = ''     for x in range(0, width):         if (maze[x][y] == 0):             line += '0'         else:             line += '1'     print(line) </code></pre>  <p>The script works as it should, however when trying to accomplish the same in Javascript, the maze seems to stop traversing. See the snippet below (0 = wall, 1 = open space in the maze):</p>  <p><div class=""snippet"" data-lang=""js"" data-hide=""false""> <div class=""snippet-code""> <pre class=""snippet-code-js lang-js prettyprint-override""><code>function newLevel(dimensions, difficulty) {    // create arrays   walls = [     [1, 1, 1]   ];   maze = [];    for (i = 0; i &lt; dimensions - 1; i++) {     maze[i] = [0];     for (j = 0; j &lt; dimensions - 1; j++) {       maze[i][j] = [0];     }   }    // set the cell (0; 1) as the exit   maze[0][1] = 1;    function addwalls() {     walls.push([X + 1, Y, 1]);     walls.push([X - 1, Y, 2]);     walls.push([X, Y + 1, 3]);     walls.push([X, Y - 1, 4]);     maze[X][Y] = 1;   }    while (walls.length &gt; 0) {     current = Math.round(Math.random() * (walls.length - 1));     if (walls.length &gt; difficulty) {       current = walls.length - Math.round(Math.random() * difficulty) - 1;     }     cell = walls[current];     walls.pop(current);      X = cell[0];     Y = cell[1];     Dir = cell[2];      if (Dir == 1 &amp;&amp; X + 1 &lt; dimensions &amp;&amp; maze[X][Y] == 0 &amp;&amp; maze[X + 1][Y] == 0 &amp;&amp; maze[X + 1][Y - 1] == 0 &amp;&amp; maze[X + 1][Y + 1] == 0 &amp;&amp; maze[X][Y - 1] == 0 &amp;&amp; maze[X][Y + 1] == 0) {       addwalls();     }     if (Dir == 2 &amp;&amp; X - 1 &gt; -1 &amp;&amp; maze[X][Y] == 0 &amp;&amp; maze[X - 1][Y] == 0 &amp;&amp; maze[X - 1][Y - 1] == 0 &amp;&amp; maze[X - 1][Y + 1] == 0 &amp;&amp; maze[X][Y - 1] == 0 &amp;&amp; maze[X][Y + 1] == 0) {       addwalls()     }     if (Dir == 3 &amp;&amp; Y + 1 &lt; dimensions &amp;&amp; maze[X][Y] == 0 &amp;&amp; maze[X][Y + 1] == 0 &amp;&amp; maze[X - 1][Y + 1] == 0 &amp;&amp; maze[X + 1][Y + 1] == 0 &amp;&amp; maze[X - 1][Y] == 0 &amp;&amp; maze[X + 1][Y] == 0) {       addwalls();     }     if (Dir == 4 &amp;&amp; Y - 1 &gt; -1 &amp;&amp; maze[X][Y] == 0 &amp;&amp; maze[X][Y - 1] == 0 &amp;&amp; maze[X - 1][Y - 1] == 0 &amp;&amp; maze[X + 1][Y - 1] == 0 &amp;&amp; maze[X - 1][Y] == 0 &amp;&amp; maze[X + 1][Y] == 0) {       addwalls();     }   }    cells = maze;    for (var row = 0; row &lt; maze.length; row++) {     for (var col = 0; col &lt; maze[row].length; col++) {       $('body').append(maze[row][col]);     }     $('body').append('&lt;br /&gt;');   }  }  $(document).ready(function() {   newLevel(30, 5); });</code></pre> <pre class=""snippet-code-html lang-html prettyprint-override""><code>&lt;script src=""https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js""&gt;&lt;/script&gt;  &lt;body&gt;  &lt;/body&gt;</code></pre> </div> </div> </p>  <p>Are there any major differences in the way that Maths is done between Python and Javascript?</p>  <p>Thanks</p>  <p>EDIT: Thank you very much for your support. Here is the working script:</p>  <pre><code>function newLevel(dimensions, difficulty) {    // create arrays   walls = [[1, 1, 1]];   maze = [];    for (i = 0; i &lt; dimensions; i++) {     maze[i] = [0];     for (j = 0; j &lt; dimensions; j++) {       maze[i][j] = [0];     }   }    // set the cell (0; 1) as the exit   maze[0][1] = 1;    function addwalls() {     walls.push([X + 1, Y, 1]);     walls.push([X - 1, Y, 2]);     walls.push([X, Y + 1, 3]);     walls.push([X, Y - 1, 4]);     maze[X][Y] = 1;   }    while (walls.length &gt; 0) {     current = Math.round(Math.random() * (walls.length - 1));     if (walls.length &gt; difficulty) {       current = walls.length - Math.round(Math.random() * difficulty) - 1;     }      cell = walls[current];     walls.splice(current, 1)[0];      X = cell[0];     Y = cell[1];     Dir = cell[2];      if (Dir == 1 &amp;&amp; X + 1 &lt; dimensions &amp;&amp; maze[X][Y] == 0 &amp;&amp; maze[X + 1][Y] == 0 &amp;&amp; maze[X + 1][Y - 1] == 0 &amp;&amp; maze[X + 1][Y + 1] == 0 &amp;&amp; maze[X][Y - 1] == 0 &amp;&amp; maze[X][Y + 1] == 0) {       addwalls();     }     if (Dir == 2 &amp;&amp; X - 1 &gt;  - 1 &amp;&amp; maze[X][Y] == 0 &amp;&amp; maze[X - 1][Y] == 0 &amp;&amp; maze[X - 1][Y - 1] == 0 &amp;&amp; maze[X - 1][Y + 1] == 0 &amp;&amp; maze[X][Y - 1] == 0 &amp;&amp; maze[X][Y + 1] == 0) {       addwalls()     }     if (Dir == 3 &amp;&amp; Y + 1 &lt; dimensions &amp;&amp; maze[X][Y] == 0 &amp;&amp; maze[X][Y + 1] == 0 &amp;&amp; maze[X - 1][Y + 1] == 0 &amp;&amp; maze[X + 1][Y + 1] == 0 &amp;&amp; maze[X - 1][Y] == 0 &amp;&amp; maze[X + 1][Y] == 0) {       addwalls();     }     if (Dir == 4 &amp;&amp; Y - 1 &gt;  - 1 &amp;&amp; maze[X][Y] == 0 &amp;&amp; maze[X][Y - 1] == 0 &amp;&amp; maze[X - 1][Y - 1] == 0 &amp;&amp; maze[X + 1][Y - 1] == 0 &amp;&amp; maze[X - 1][Y] == 0 &amp;&amp; maze[X + 1][Y] == 0) {       addwalls();     }   }   return cells; } </code></pre>"	2015-11-15 20:43:36.993 UTC	33726269	"<p>There are a lot of tiny but easily neck-breaking differences between Python and JavaScript.</p>  <p>The loop in Python</p>  <pre><code>for i in range(10) </code></pre>  <p>rolls from 0 up to 9 in ten steps. You translated it into</p>  <pre><code>for (i = 0; i &lt; 10 - 1; i++) </code></pre>  <p>which rolls from 0 to 8 in nine steps (assuming the value of <code>height</code> is equal to <code>dimensions</code>).</p>  <p>You cannot choose which element to <code>pop</code> out of a JavaScript array you need <a href=""https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Global_Objects/Array/splice"" rel=""nofollow""><code>Array.splice()</code></a> to do so (or roll your own, of course).</p>  <p>Regarding the integer problem: JavaScript's <code>Number</code> object is a 64-bit floating point number, better known as an IEEE-754 binary64 double. That restricts the range of integers to <code>-2^53 &lt; x &lt; 2^53</code>. You can ""persuade"" the engine to handle some numbers <code>x</code> as signed integers by <code>x|0</code> and as unsigned integers as by <code>x&gt;&gt;&gt;0</code> but the automatic conversion tries to sneak in in every possible way, preferable the most unexpected ones.</p>"			2015-11-15 23:14:50.107 UTC
33747992	python|dictionary	javascript's _.where in python	"<p>At <a href=""http://underscorejs.org/"" rel=""nofollow"">http://underscorejs.org/</a>, there is an underscorejs utility <code>where</code>,</p>  <pre><code>_.where(listOfPlays, {author: ""Shakespeare"", year: 1611} </code></pre>  <p>which returns,</p>  <pre><code>[{title: ""Cymbeline"", author: ""Shakespeare"", year: 1611},  {title: ""The Tempest"", author: ""Shakespeare"", year: 1611}] </code></pre>  <p>How can i do this in python without using a <code>for in</code> iteration?</p>"	2015-11-17 02:10:49.673 UTC	33748827	"<p>The equivalent to <code>_.where</code> can be written in python in 1 line as a list comprehension, but it will use <code>for ... in</code> syntax :</p>  <pre><code>def where(elems, **kwargs):     """"""where(iterable, **filter_conditions) --&gt; filtered iterable""""""     return [el for el in elems if all(el.get(k) == v for k, v in kwargs.items())] </code></pre>  <p>Alternatively, use <code>filter</code> &amp; <code>map</code>to avoid using <code>for ... in</code>:</p>  <pre><code>def where(elems, **kwargs):     """"""where(iterable, **filter_conditions) --&gt; filter object""""""     def picker(elem):          return all(map(lambda x: elem.get(x[0]) == x[1], kwargs.items()))     return filter(picker, elems) </code></pre>  <p>On python 2, both versions of the <code>where</code> function are called as:</p>  <pre><code>where(listOfPlays, author='Shakespeare', year=1611) </code></pre>  <p>On python 3, the latter version needs to be wrapped in a list, because <code>filter</code> returns a filter object instead, i.e</p>  <pre><code>list(where(listOfPlays, author='Shakespeare', year=1611)) </code></pre>"			2015-11-17 03:48:45.49 UTC
33747992	python|dictionary	javascript's _.where in python	"<p>At <a href=""http://underscorejs.org/"" rel=""nofollow"">http://underscorejs.org/</a>, there is an underscorejs utility <code>where</code>,</p>  <pre><code>_.where(listOfPlays, {author: ""Shakespeare"", year: 1611} </code></pre>  <p>which returns,</p>  <pre><code>[{title: ""Cymbeline"", author: ""Shakespeare"", year: 1611},  {title: ""The Tempest"", author: ""Shakespeare"", year: 1611}] </code></pre>  <p>How can i do this in python without using a <code>for in</code> iteration?</p>"	2015-11-17 02:10:49.673 UTC	33748146	"<p>Note that <code>filter(function, iterable)</code> is equivalent to <code>[item for item in iterable if function(item)]</code></p>  <pre><code>def filter_by_dict(list_of_dicts, conditions):     def _check(item):         # returns True only if first is subset of second         # in python3 you should use items()         return conditions.viewitems() &lt;= item.viewitems()      return filter(_check, list_of_dicts)  TEST = [     {""title"": ""Cymbeline"", ""author"": ""Shakespeare"", ""year"": 1611},     {""title"": ""Otherr"", ""author"": ""Shakespeare"", ""year"": 1612},     {""title"": ""The Tempest"", ""author"": ""Shakespeare"", ""year"": 1611} ] print(filter_by_dict(TEST, {""author"": ""Shakespeare"", ""year"": 1611})) </code></pre>"			2015-11-17 02:29:21.723 UTC
33747992	python|dictionary	javascript's _.where in python	"<p>At <a href=""http://underscorejs.org/"" rel=""nofollow"">http://underscorejs.org/</a>, there is an underscorejs utility <code>where</code>,</p>  <pre><code>_.where(listOfPlays, {author: ""Shakespeare"", year: 1611} </code></pre>  <p>which returns,</p>  <pre><code>[{title: ""Cymbeline"", author: ""Shakespeare"", year: 1611},  {title: ""The Tempest"", author: ""Shakespeare"", year: 1611}] </code></pre>  <p>How can i do this in python without using a <code>for in</code> iteration?</p>"	2015-11-17 02:10:49.673 UTC	33748092	"<p>Personally I would like to use list comprehensions. However it does involve <code>for</code> and <code>in</code>:</p>  <pre><code>&gt;&gt;&gt; listOfPlays = [{'title': x, 'author': x, 'year': 1611} for x in ('Shakespeare', 'someone')] &gt;&gt;&gt; listOfPlays [{'author': 'Shakespeare', 'year': 1611, 'title': 'Shakespeare'}, {'author': 'someone', 'year': 1611, 'title': 'someone'}] &gt;&gt;&gt;  &gt;&gt;&gt; [x for x in listOfPlays if x['author'] == 'Shakespeare' and x['year'] == 1611] [{'author': 'Shakespeare', 'year': 1611, 'title': 'Shakespeare'}] </code></pre>  <p>Alternatively, you could use <a href=""https://docs.python.org/2/library/functions.html#filter"" rel=""nofollow""><code>filter</code></a>:</p>  <pre><code>&gt;&gt;&gt; filter(lambda x: x['author'] == 'Shakespeare' and x['year'] == 1611, listOfPlays) [{'author': 'Shakespeare', 'year': 1611, 'title': 'Shakespeare'}] </code></pre>  <p><strong>EDITED:</strong> Please notice that above examples are evaluated in Python 2. In Python 3 the built-in function <a href=""https://docs.python.org/3.6/library/functions.html#filter"" rel=""nofollow""><code>filter</code></a> returns an iterable instead of a list.</p>"			2015-11-17 02:21:54.853 UTC
33794965	javascript|python	What is the equivalent of Python's input() in Javascript?	"<p>I have looked for this, but haven't found anything similar. In Javascript, I want to know if there is a way to get user input, from say a text area, in the middle of a loop, such as with the input() function from python. Here is an example:</p>  <pre><code> def thing():     color = input(""Pick Red, Yellow or Blue"")     finished = False     previous = []     while finished == False:         if previous == []:             guess = ""red""             response = input(""Is your color red?"")             previous.append((guess, response))         elif len(previous) == 1:             response = input(""is your color blue?"")             if response == ""yes"":                 finished = True </code></pre>  <p>This example is not exactly what I am trying to do but basically, I want a way, for a user to be asked things, and for them to put an answer in a text area(HTML), and push a button, which continues a Javascript while loop with the newly received input, and formulates some other question, and so on, until some condition is reached to stop the loop.</p>  <p>Is this possible? Does something in JS mimic this?</p>"	2015-11-19 03:53:10.587 UTC	33795034	"<p>Good old <code>readline();</code></p>  <p><a href=""https://developer.mozilla.org/En/SpiderMonkey/Introduction_to_the_JavaScript_shell#readline()"" rel=""nofollow"">https://developer.mozilla.org/En/SpiderMonkey/Introduction_to_the_JavaScript_shell#readline()</a></p>  <p>If you want to get value from text area then use :</p>  <pre><code>&lt;script&gt; function myFunction() {     var x = document.getElementById(""myTextarea"").value; } &lt;/script&gt; </code></pre>"			2015-11-19 04:01:26.96 UTC
33797236	javascript|python|cryptography	JavaScript crypto hashing translation to Python 3	"<p>I am trying to make a Python 3 application to download weather data from my account at <a href=""http://www.osanywhereweather.com"" rel=""nofollow"">http://www.osanywhereweather.com</a>. I have found JavaScript source code that does exactly this at <a href=""https://github.com/zrrrzzt/osanywhereweather"" rel=""nofollow"">https://github.com/zrrrzzt/osanywhereweather</a>. I am assuming that the github code works. When inspecting the source of osanywhereweather.com, it seems to me that the github code resembles that very much.</p>  <p>I am new to Python 3 and I have never coded in JavaScript, and I know nothing about cryptographics. I have, however, done a fair share of coding over the last 35 or years, so I read code fairly well. I therefore thought it would be relatively easy to translate the github JavaScript code to Python 3. I was wrong, it seems. </p>  <p>The code of interest is the part of the code that hashes e-mail and password together with a ""challenge"" received from osanwhereweather.com in order to authenticate me.</p>  <p>I have not been able to test the JavaScript code, but as I said I think it compares well with the source of the osanywhereweather.com page. By analyzing the traffic in my web browser, I can see the information exchanged between osanywhereweather.com and my browser, so that I have got a consistent set of <code>challenge</code> and <code>saltedHash</code>.</p>  <p>When trying to create the same <code>saltedHash</code> based on the corresponding <code>challenge</code> with my Python 3 code, I get a different result.</p>  <p>I have tried internet searches to see if I can find out what I'm doing wrong, but to no avail. If anyone is proficient in JavaScript, Python and cryptographics and is able to point out what I'm doing wrong, I would indeed be grateful.</p>  <p>JavaScript code:</p>  <pre><code>'use strict';  var crypto = require('crypto');  function osaHash(email, password) {   var shasum = crypto.createHash('sha1').update(email);   var e = '$p5k2$2710$' + shasum.digest('hex').toString().substring(0, 8);   var res = crypto.pbkdf2Sync(password, e, 1e4, 32, 'sha256');   var r = res.toString('base64').replace(/\+/g, '.');    return e + '$' + r; }  function createHash(opts, callback) {    if (!opts) {     return callback(new Error('Missing required input: options'), null);   }    if (!opts.email) {     return callback(new Error('Missing required param: options.email'), null);   }    if (!opts.password) {     return callback(new Error('Missing required param: options.password'), null);   }    if (!opts.challenge) {     return callback(new Error('Missing required param: options.challenge'), null);   }    var hash = osaHash(opts.email, opts.password);   var hmac = crypto.createHmac('sha1', hash).update(opts.challenge);   var saltedHash = hmac.digest('hex');    return callback(null, saltedHash); }  module.exports = createHash; </code></pre>  <p>Python 3 code:</p>  <pre><code>import hmac import hashlib import base64  e_mail = 'me@mydomain.com' password = 'Secret'  ''' challenge is received from osanywhereweather.com ''' challenge = '15993b900f954e659a016cf073ef90c1'   shasum           = hashlib.new('sha1') shasum.update(e_mail.encode()) shasum_hexdigest = shasum.hexdigest() shasum_substring = shasum_hexdigest[0:8] e                = '$p5k2$2710$' + shasum_substring  res = hashlib.pbkdf2_hmac('sha256',password.encode(),e.encode(),10000,32) r = base64.b64encode(res,b'./') hashstr = str(e) + '$' + str(r)  hmac1 = hmac.new(challenge.encode(), hashstr.encode(), 'sha1') saltedHash = hmac1.hexdigest() </code></pre>"	2015-11-19 07:03:41.497 UTC	33804697	"<p>Based on falsetru's response, the following Python 3 code has been verified to work with the osanywhereweather.com site:</p>  <pre><code>import hmac import hashlib import base64  e_mail = 'me@mydomain.com' password = 'Secret'  ''' challenge is received from osanywhereweather.com ''' challenge = '15993b900f954e659a016cf073ef90c1'   shasum           = hashlib.new('sha1') shasum.update(e_mail.encode()) shasum_hexdigest = shasum.hexdigest() shasum_substring = shasum_hexdigest[0:8] e                = '$p5k2$2710$' + shasum_substring  res = hashlib.pbkdf2_hmac('sha256',password.encode(),e.encode(),10000,32) r = base64.b64encode(res,b'./') hashstr = str(e) + '$' + r.decode()  hmac1 = hmac.new(hashstr.encode(), challenge.encode(), 'sha1') saltedHash = hmac1.hexdigest() </code></pre>  <p>Thank you to falsetru!</p>"			2015-11-19 13:00:54.78 UTC
33797236	javascript|python|cryptography	JavaScript crypto hashing translation to Python 3	"<p>I am trying to make a Python 3 application to download weather data from my account at <a href=""http://www.osanywhereweather.com"" rel=""nofollow"">http://www.osanywhereweather.com</a>. I have found JavaScript source code that does exactly this at <a href=""https://github.com/zrrrzzt/osanywhereweather"" rel=""nofollow"">https://github.com/zrrrzzt/osanywhereweather</a>. I am assuming that the github code works. When inspecting the source of osanywhereweather.com, it seems to me that the github code resembles that very much.</p>  <p>I am new to Python 3 and I have never coded in JavaScript, and I know nothing about cryptographics. I have, however, done a fair share of coding over the last 35 or years, so I read code fairly well. I therefore thought it would be relatively easy to translate the github JavaScript code to Python 3. I was wrong, it seems. </p>  <p>The code of interest is the part of the code that hashes e-mail and password together with a ""challenge"" received from osanwhereweather.com in order to authenticate me.</p>  <p>I have not been able to test the JavaScript code, but as I said I think it compares well with the source of the osanywhereweather.com page. By analyzing the traffic in my web browser, I can see the information exchanged between osanywhereweather.com and my browser, so that I have got a consistent set of <code>challenge</code> and <code>saltedHash</code>.</p>  <p>When trying to create the same <code>saltedHash</code> based on the corresponding <code>challenge</code> with my Python 3 code, I get a different result.</p>  <p>I have tried internet searches to see if I can find out what I'm doing wrong, but to no avail. If anyone is proficient in JavaScript, Python and cryptographics and is able to point out what I'm doing wrong, I would indeed be grateful.</p>  <p>JavaScript code:</p>  <pre><code>'use strict';  var crypto = require('crypto');  function osaHash(email, password) {   var shasum = crypto.createHash('sha1').update(email);   var e = '$p5k2$2710$' + shasum.digest('hex').toString().substring(0, 8);   var res = crypto.pbkdf2Sync(password, e, 1e4, 32, 'sha256');   var r = res.toString('base64').replace(/\+/g, '.');    return e + '$' + r; }  function createHash(opts, callback) {    if (!opts) {     return callback(new Error('Missing required input: options'), null);   }    if (!opts.email) {     return callback(new Error('Missing required param: options.email'), null);   }    if (!opts.password) {     return callback(new Error('Missing required param: options.password'), null);   }    if (!opts.challenge) {     return callback(new Error('Missing required param: options.challenge'), null);   }    var hash = osaHash(opts.email, opts.password);   var hmac = crypto.createHmac('sha1', hash).update(opts.challenge);   var saltedHash = hmac.digest('hex');    return callback(null, saltedHash); }  module.exports = createHash; </code></pre>  <p>Python 3 code:</p>  <pre><code>import hmac import hashlib import base64  e_mail = 'me@mydomain.com' password = 'Secret'  ''' challenge is received from osanywhereweather.com ''' challenge = '15993b900f954e659a016cf073ef90c1'   shasum           = hashlib.new('sha1') shasum.update(e_mail.encode()) shasum_hexdigest = shasum.hexdigest() shasum_substring = shasum_hexdigest[0:8] e                = '$p5k2$2710$' + shasum_substring  res = hashlib.pbkdf2_hmac('sha256',password.encode(),e.encode(),10000,32) r = base64.b64encode(res,b'./') hashstr = str(e) + '$' + str(r)  hmac1 = hmac.new(challenge.encode(), hashstr.encode(), 'sha1') saltedHash = hmac1.hexdigest() </code></pre>"	2015-11-19 07:03:41.497 UTC	33798611	"<pre><code>hashstr = str(e) + '$' + str(r) </code></pre>  <p>In the above line, <code>str(r)</code> will give you: <code>""b'ZogTXTk8T72jy01H9G6Y0L7mjHHR7IG0VKMcWZUbVqQ='""</code>.</p>  <p>You need to use <code>r.decode()</code> to get <code>""ZogTXTk8T72jy01H9G6Y0L7mjHHR7IG0VKMcWZUbVqQ=""</code>.</p>  <pre><code>hashstr = str(e) + '$' + r.decode() </code></pre>  <p><strong>UPDATE 1</strong></p>  <p>Arugments to <a href=""https://docs.python.org/3/library/hmac.html#hmac.new"" rel=""nofollow""><code>hmac.new</code></a> should be fixed:</p>  <pre><code>hmac1 = hmac.new(hashstr.encode(), challenge.encode(), 'sha1') </code></pre>  <p><strong>UPDATE 2</strong></p>  <p><em>According to OP's comment, OP doesn't need to do the following.</em></p>  <p>Another thing is that, <code>crypto.pbkdf2Sync</code> seems does not respect <code>digest</code> argument. It seems always use <code>sha1</code> digest (At least in my system, NodeJS 0.10.25). So you need to specify <code>sha1</code> in python side:</p>  <pre><code>res = hashlib.pbkdf2_hmac('sha1', password.encode(), e.encode(), 10000, 32) </code></pre>"			2015-11-19 08:26:15.953 UTC
33818206	python|authentication|python-requests	Python login into a website with javascript form	"<p>I'm attempting to log into my school's website using Requests, but it doesn't get past the log in page and doesn't return the stuff in the password protected pages. All it does is return the HTML of the login page. Twill would not work as this page requires javascript. . The HTML login stuff is </p>  <pre><code>&lt;!--box content--&gt;  &lt;div id=""noscript"" class=""feedback-alert""&gt; To sign in to PowerSchool, you must use a browser that supports and has JavaScript enabled. &lt;/div&gt; &lt;fieldset id=""login-inputs"" class=""hide""&gt;      &lt;div&gt;           &lt;label&gt;Username&lt;/label&gt;           &lt;input type=""text"" id=""fieldAccount"" name=""account"" value="""" size=""39""  /&gt;     &lt;/div&gt;     &lt;div&gt;           &lt;label&gt;Password&lt;/label&gt;           &lt;input type=""password"" name=""pw"" value="""" size=""39""  /&gt;&lt;div id=""login-help""&gt;&lt;a href=""/public/account_recovery_begin.html""&gt;Having trouble signing in?&lt;/a&gt;&lt;/div&gt;     &lt;/div&gt;     &lt;div id=""translatorInput""&gt;           &lt;label&gt;Translator Sign In&lt;/label&gt;           &lt;input type=""password"" name=""translatorpw"" value="""" size=""39""  /&gt;     &lt;/div&gt;     &lt;div class=""button-row""&gt;     &lt;button type=""submit"" id=""btn-enter"" title=""Sign In To PowerSchool Parent Access"" value=""Enter"" border=""0"" &gt;Sign In&lt;/button&gt;     &lt;/div&gt; &lt;/fieldset&gt;     &lt;!-- box content--&gt; </code></pre>  <p>I've checked <a href=""https://stackoverflow.com/questions/11892729/how-to-log-in-to-a-website-using-pythons-requests-module"">this answer</a> </p>  <p>My current code is</p>  <pre><code>import requests payload = {     'account': 'username',     'pw': 'password' } with requests.Session() as s:     p = s.post('https://powerschool.-/public/home.html', data=payload)        print p.text      r = s.get('https://powerschool.-/guardian/studentsched.html')     print r.text </code></pre>  <p>but I can't seem to log into the page. My question is am I suppose to have a payload to press the 'submit' button or something? I've tried <code>'action' : 'login'</code> and stuff like that but none of it works. Also, I don't need a <code>translatorpw</code> so should I write <code>'translatorpw': ''</code> or just ignore that? Obviously I put my real username/password in the program on my laptop. Thanks in advance!</p>  <p>Edit: I just used Selenium and it worked very easily.</p>"	2015-11-20 02:52:23.683 UTC	44218325	"<p>Try setting up custom headers as some sites reject default requests agent</p>  <pre><code>    import requests       payload = {     'account': 'username',     'pw': 'password'      }       headers = {'User-Agent': 'Mozilla/5.0 (Windows NT 6.1; WOW64; rv:52.0) Gecko/20100101 Firefox/52.0'}       with requests.Session() as s:     p = s.post('https://powerschool.-/public/home.html', data=payload, headers=headers)        print p.text      r = s.get('https://powerschool.-/guardian/studentsched.html', headers=headers)     print r.text </code></pre>  <p>Check if there are any additional parameters that are being send with your post requests, if so send it in payload too.</p>"			2017-05-27 14:58:32.49 UTC
33856350	javascript|python	Python response to JavaScript	"<p>I have an AJAX request to my Python file like so</p>  <pre><code>$ajax({     type: ""post"",     url: "" name.py"",     data: { param: ""hello"" } }).done(function(obj){     alert(obj); }); </code></pre>  <p>I want to get that request from my Python file and send a response to it - ""world"".</p>  <p>But, I can't use the library Requests.</p>  <p>Please help me do this without using the library Requests</p>  <p>Can also use a different way in the JavaScript code.</p>"	2015-11-22 15:14:48.727 UTC	33856581	"<p>You don't need <code>requests</code> for that, you need an HTTP server.</p>  <p>Flask is a simple web framework, it embeds his own HTTP server.</p>  <p>Here is a basic example on how to answer an http request, using flask : </p>  <pre><code># main.py from flask import Flask app = Flask(__name__)  @app.route(""/"") def index():     return 'Hi'  @app.route(""/hello"") def hello():     return ""Hello World!""  if __name__ == ""__main__"":     app.run() </code></pre>  <p>Install flask using pip:</p>  <pre><code>python -m pip install flask </code></pre>  <p>Then simply run your application development server using python :</p>  <pre><code>python main.py </code></pre>  <p>And visit :</p>  <pre><code>http://[YOUR SERVER IP]/ and  http://[YOUR SERVER IP]/hello </code></pre>"			2015-11-22 15:35:23.587 UTC
33907756	javascript|python|xmlhttprequest	send data to a python cgi script for processing from browser using pure javascript	"<p>I have an html test file with the following</p>  <pre><code>&lt;!doctype html&gt; &lt;html lang=""en""&gt;     &lt;meta charset=""utf-8""&gt;     &lt;body&gt;         &lt;script type=""text/javascript""&gt;         var httprequest=new XMLHttpRequest();         httprequest.open(""POST"",""hello.cgi"",true);         httprequest.onload=function(){         if(httprequest.status==200){             alert("""");          }// end of if          }//end of onload          var content={""hello"":""world""};          httprequest.send(JSON.stringify(content));          alert(httprequest.responseText)           &lt;/script     &lt;/body&gt; &lt;/html&gt; &lt;/doctype&gt; </code></pre>  <p><strong>In this scenario I am trying to send the data {""hello"":""world""}; to a python cgi script</strong></p>  <p>This is my python script <strong>that works well with data submitted from a <code>&lt;form&gt;</code></strong> html tag</p>  <pre><code>#!/usr/bin/python try:     import sys     import cgi     import traceback     print(""Content-type: text/html\n\n"")     print ""&lt;h1&gt;YES&lt;/h1&gt;""     formData = cgi.FieldStorage()     print(formData)     print(s) except Exception as e:     print(e.message)     print(traceback.print_exc()) </code></pre>  <p>When I send the data <code>{""hello"":""world""}</code>, my browser alert box shows no data returned from the cgi script. </p>  <p>As reflected in the cgi script, I am trying to print ""YES"" and print the data that was sent from javascript.</p>  <p>I have found several questions relating to use of <code>$.ajax</code> to do this but haven't come across a method using <code>XMLHttpRequest()</code></p>  <p><strong>Question</strong></p>  <p><strong>How can I send data to a python cgi script for processing from my browser using pure javascript (no jquery)</strong></p>"	2015-11-25 02:56:48.483 UTC	33907932	"<p>The HTTP request you're performing happens on its own time. The call to <code>httprequest.send()</code> <strong>starts</strong> the operation, but that function call returns almost immediately, and definitely before the remote server has responded. This <em>asynchronous</em> behavior is a basic fact of life in JavaScript environments.</p>  <p>The whole reason for the ""onload"" callback is to make it possible for you to write code that happens when the HTTP request actually completes. The browser will invoke that function with the results <em>when the results become available</em>. That might be in 100 milliseconds, or 10 seconds; it all depends on the server and the network.</p>"			2015-11-25 03:18:45.053 UTC
33929956	javascript|python|xmlhttprequest	python cgi script prints object as a string when raw string is sent using javascript	"<p>I am using javascript to send the data <code>{""hello"":""world""};</code> to a python cgi script as follows (This script works)</p>  <pre><code>&lt;!doctype html&gt; &lt;html lang=""en""&gt; &lt;meta charset=""utf-8""&gt; &lt;head&gt;I am a header&lt;/head&gt; &lt;body&gt; &lt;script type=""text/javascript""&gt; var httprequest=new XMLHttpRequest(); httprequest.open(""POST"",""hello.cgi""); var content={""hello"":""world""}; httprequest.setRequestHeader('Content-Type', 'application/json; charset=UTF-8'); httprequest.send(JSON.stringify(content)); httprequest.onload=function(){ if(httprequest.status==200){ alert(""""); document.write(httprequest.responseText)}; }//end of onload &lt;/script&gt; &lt;/body&gt; &lt;script&gt; &lt;/script&gt; &lt;/html&gt; &lt;/doctype&gt; </code></pre>  <p>this is my python cgi script</p>  <pre><code>#!/usr/bin/python try:     import sys,os     import cgi     sys.stderr=sys.stdout     import traceback     print(""Content-type: text/html\n\n"")     print ""&lt;h1&gt;YES&lt;/h1&gt;""     formData = cgi.FieldStorage()     print((formData)) except Exception as e:     #print(e.message)     print(traceback.print_exc()) </code></pre>  <p><strong>This cgi script takes takes the javascript object convert it to a string, erases all contents in the html document and writes to the browser the following</strong></p>  <pre><code>  YES FieldStorage(None, None, '{""hello"":""world""}')  </code></pre>  <p><strong>Question 1</strong></p>  <p>I do <strong>not</strong> want this cgi script to write <code>'{""hello"":""world""}'</code> as a <strong>string</strong> in fieldstorage I want it to write the string as a dictionary <code>{""hello"":""world""}</code> /object</p>  <p><strong>Or is there a way in javascript to encode the javascript string to a GET or post format and send the output as if it is submitting a html <code>&lt;form&gt;</code> with the data to a python cgi script? will this solve this issue?</strong></p>"	2015-11-26 03:09:44.517 UTC	33949419	"<p>It appears that cgi.fieldstorage is primarily for receiving data from HTML form tags. Hence it is not the right tool for json strings</p>  <p>Here is how I solve this issue after some late night mental wrecking. I use json module in python</p>  <pre><code>#!/usr/bin/python try:     import sys,os,json     import cgi     sys.stderr=sys.stdout     import traceback     print(""Content-type: text/html\n\n"")     print ""&lt;h1&gt;YES&lt;/h1&gt;""     data=json.load(sys.stdin) #convert json string to python object (answer)     print ""&lt;script&gt;var t=""+str(json.dumps(data))+""&lt;/script&gt;"" # I can also take the string and put it in a html script     #print((formData)) except Exception as e:     print(e.message)     print(traceback.print_exc()) </code></pre>  <p>Afterwards I attempted calling my javascript object <code>t</code> in the browser and it worked as expected..what a relief...</p>"			2015-11-27 02:18:52.58 UTC
33964285	javascript|python|html|ajax|raspberry-pi	Python: Issue getting updating html created via JavaScript calls in browser	"<p>I am using Python to pull the HTML of a website to get satellite locations. Of course since I am not actually accessing the site via a browser I am not retrieving any html that would be populated by javascript calls.</p>  <pre><code>import urllib.request page = urllib.request.urlopen('http://n2yo.com/?s=20217') file = open(""textFile"", ""wb"") satelliteText = page.read() file.write(satelliteText) file.close() </code></pre>  <p>I've explored libraries like Windmill that literally run a browser so that you can get that javascript created html, but I am using a Raspberry Pi. I'd rather not install an additional browser. </p>  <p>Is there anyway that I can make the ajax get calls myself that the website is making and retrieve just the data I need?</p>"	2015-11-27 20:12:21.013 UTC	33964503	"<p>Looking at this source here: <a href=""http://www.n2yo.com/js/passes.js"" rel=""nofollow"">http://www.n2yo.com/js/passes.js</a> it appears that it is calling <a href=""http://www.n2yo.com/inc/all.php"" rel=""nofollow"">http://www.n2yo.com/inc/all.php</a> to get the data. By reading through passes.js carefully you should be able to figure out how to parse it.</p>"			2015-11-27 20:35:53.987 UTC
33968343	javascript|jquery|python|html|ajax	Call Python Script from Javascript	"<p>I am on a dreamhost server and have some HTML that calls some javascript when a button is pressed. I am trying to call a python script when this button is tapped.</p>  <p>First off, to my knowledge as I am on a shared host I cannot use AJAX as it is not supported, so I need to do this without AJAX. Right now I am trying to do a <code>XMLHttpRequest</code> which is working.</p>  <p>I also realize doing an <code>XMLHttpRequest</code> is not the best way since the files are both on the server there must be a way to just call the file directly? </p>  <p>So if someone call tell me how to call it directly or help me fix this error in the browser console that would be great.  Thanks for the help</p>  <p><strong>EDIT</strong></p>  <p>I have an HTML file when a user taps a button on this file it calls some javascript that is in the HTML file. This javascript currently makes a POST Request, to a python script that is on the same server and the HTML file.</p>  <p>What I want instead of making a post request to the python file that is on the server, I want to just directly call the python file, from the javascript that runs, when the button the clicked in the HTML file.</p>  <p>Both the HTML file which contains the javascript and the python file are on the same server. And I don't want the python to run in the browser, I want it to run in the background on the server.</p>  <p>How can I use the Javascript to call this python file?</p>"	2015-11-28 06:18:54.047 UTC	33968935	"<p>As far as I understand your question what you are looking to do is called a ""remote procedure call"", or some sort of Service Oriented Architecture (SOA).</p>  <p>You are on a right track in making a <code>POST</code> request to the server.</p>  <p>You can setup a middleware like flask, or cherrypy to run the script when you send a GET, PUT, POST ... request. And inside of the middleware controller you can call your script.</p>  <p>Basically you have started to create a RESTful api, and its a pretty standard way these days to run logic on the backend.</p>  <p>Some examples of different frameworks for doing url routing: </p>  <p>Python:</p>  <ul> <li>CherryPy: <a href=""http://docs.cherrypy.org/en/latest/tutorials.html#tutorial-9-data-is-all-my-life"" rel=""nofollow noreferrer"">http://docs.cherrypy.org/en/latest/tutorials.html#tutorial-9-data-is-all-my-life</a></li> <li>Flask: <a href=""http://flask.pocoo.org/docs/0.10/quickstart/"" rel=""nofollow noreferrer"">http://flask.pocoo.org/docs/0.10/quickstart/</a></li> <li>a longer list of lower level python: <a href=""http://wsgi.readthedocs.org/en/latest/libraries.html"" rel=""nofollow noreferrer"">http://wsgi.readthedocs.org/en/latest/libraries.html</a></li> </ul>  <p>NodeJs:</p>  <ul> <li>Express: <a href=""http://expressjs.com/guide/routing.html"" rel=""nofollow noreferrer"">http://expressjs.com/guide/routing.html</a></li> <li>Koa: <a href=""https://github.com/koajs/route"" rel=""nofollow noreferrer"">https://github.com/koajs/route</a></li> <li>Hapi: <a href=""http://hapijs.com/tutorials/routing"" rel=""nofollow noreferrer"">http://hapijs.com/tutorials/routing</a></li> </ul>  <p>Also very good is this question: <a href=""https://stackoverflow.com/questions/16626021/json-rest-soap-wsdl-and-soa-how-do-they-all-link-together"">JSON, REST, SOAP, WSDL, and SOA: How do they all link together</a></p>  <p>Another way that you could do this from the browser would be to use sockets, which opens a connection between the client and the server.</p>  <p>Inside the javscript you could use socketio:</p>  <pre><code>&lt;script src='/socket.io/socket.io.js'&gt;&lt;/script&gt; &lt;script&gt;     var socket = io();     socket.connect('http://localhost:8000')     socket.emit('run_a_script_event', {arg1: 'hello', arg2: 'world'}); &lt;/script&gt; </code></pre>  <p>And in your python code you could use the socketio client for python (<a href=""https://pypi.python.org/pypi/socketIO-client"" rel=""nofollow noreferrer"">https://pypi.python.org/pypi/socketIO-client</a>):</p>  <pre><code>from your_module import thescript from socketIO_client import SocketIO, LoggingNamespace  def run_a_script(*args):     print('arg1 and arg2', args)     thescript()  socketIO = SocketIO('localhost', 8000, LoggingNamespace) socketIO.on('run_a_script_event', run_a_script) </code></pre>  <p>Looks like there is also a version specifically for flask: <a href=""https://flask-socketio.readthedocs.org/en/latest/"" rel=""nofollow noreferrer"">https://flask-socketio.readthedocs.org/en/latest/</a></p>  <p>Or you could run the python directly in the browser by converting it to javascript with a transpiler:</p>  <ul> <li><a href=""http://www.skulpt.org/"" rel=""nofollow noreferrer"">http://www.skulpt.org/</a></li> </ul>  <p>Or you could use node javascript to spawn a child process which runs the python script:</p>  <ul> <li><a href=""https://stackoverflow.com/a/20973067/2026508"">https://stackoverflow.com/a/20973067/2026508</a></li> </ul>  <p>Or you can import the python script into node like: </p>  <ul> <li><a href=""https://stackoverflow.com/questions/21655552/use-of-node-python-to-execute-python-scripts-from-web-application-hosted-under-p"">Use of node-python to execute python scripts from web application hosted under python?</a></li> </ul>"			2015-11-28 07:41:23.837 UTC
33975305	javascript|python|python-3.x|selenium|xpath	Python selenium- Clicking a javascript link doesn't load the new page but shows the url	"<p>I'm very new to Python and using selenium for the first time. What I need: </p>  <ol> <li>open <a href=""http://www.kegg.jp/kegg-bin/get_htext?ban00001.keg"" rel=""nofollow"">http://www.kegg.jp/kegg-bin/get_htext?ban00001.keg</a></li> <li>click on the 4th downward arrow at the top <a href=""http://i.stack.imgur.com/3yrKP.jpg"" rel=""nofollow"">the one next to the check-box named ""one-click mode""</a></li> <li>get the html source for that page</li> </ol>  <p>What I tried: I tried clicking on the button using selenium and it reloaded the same page even though the url showed the next page. my code:</p>  <pre><code>driver.get(""http//www.kegg.jp/kegg-bin/get_htext?ban00001.keg"") mouse = webdriver.ActionChains(driver)                  elem=driver.find_element_by_xpath(""//img[@src='/Fig/get_htext/open.png']"") mouse.move_to_element(elem) driver.implicitly_wait(""5"") mouse.click().perform() </code></pre>  <p>I also tried to avoid clicking and directly fill the form that the button submits but it seems I'm filling the wrong xpath as it cannot find the element.</p>  <pre><code>elem=driver.find_element_by_xpath(""/body/form/input[@name='htext']"").send_keys('ban00001.keg') </code></pre>  <p>Can somebody tell me why the click did not work and how is my xpath wrong? But mainly, how can I accomplish my goal of opening the page. Please help. This is worth 10 college credits and I'm awfully behind on my project because of this!</p>"	2015-11-28 19:07:28.283 UTC	33975401	"<p>First of all, there are 4 almost identical arrows. Since you need the 4th one, I would use the <code>alt</code> attribute to distinguish the arrows:</p>  <pre><code>driver.find_element_by_xpath(""//img[@alt='4th Level']"") </code></pre>  <p>When you click the arrow, it takes time for the page to load - you need to wait for it. I'd wait for the main page grid to become visible via the <code>visibility_of_element_located</code> expected condition.</p>  <p>Complete working code:</p>  <pre><code>from selenium import webdriver from selenium.webdriver.common.by import By from selenium.webdriver.support import expected_conditions from selenium.webdriver.support.wait import WebDriverWait   driver = webdriver.Chrome() driver.get(""http://www.kegg.jp/kegg-bin/get_htext?ban00001.keg"")      # locating the 4th arrow arrow4 = driver.find_element_by_xpath(""//img[@alt='4th Level']"") arrow4.click()  # wait for the grid to become visible wait = WebDriverWait(driver, 10) wait.until(expected_conditions.visibility_of_element_located((By.ID, ""grid"")))  print(driver.page_source)  driver.quit() </code></pre>"			2015-11-28 19:17:45.957 UTC
34058330	javascript|jquery|python|ajax|flask	Passing Arguments from Javascript to Python Function	"<p>I am trying to execute/call a python method(with one parameter) from inside Ajax Call. But I am having trouble passing the parameter from Ajax Call to Python Function. I am using Flask to connect the two.</p>  <p>Updated Code:  Ajax Call(Javascript): </p>  <pre><code>$.ajax({     type: 'GET',     url: ""http://127.0.0.1:5000/get_result/"" + input.value,     dataType: ""text"",     success: function(response) {         output.value = response;         alert(response);     } }).done(function(data){         console.log(data); }); </code></pre>  <p>Python Code:</p>  <pre><code>from flask import Flask app = Flask(__name__)  @app.route(""/get_result/&lt;url&gt;"", methods=['GET', 'POST']) def get_result(url):     return ""Hello World""  if __name__ == ""__main__"":     app.run(debug = True) </code></pre>  <p>I have a backend Python Server running locally. But I am getting this as the error. (Running <a href=""http://127.0.0.1:5000/get_result/google.com"" rel=""nofollow"">http://127.0.0.1:5000/get_result/google.com</a> directly from browser shows me correct result, if it helps).</p>  <p>[Expected End Result: alertbox with message ""Hello World""]</p>  <p>Error: </p>  <pre><code>127.0.0.1 - - [03/Dec/2015 13:38:21] ""GET /get_result/google.com HTTP/1.1"" 200 - Error on request: Traceback (most recent call last):   File ""/usr/local/lib/python2.7/dist-packages/werkzeug/serving.py"", line 194, in run_wsgi     execute(self.server.app)   File ""/usr/local/lib/python2.7/dist-packages/werkzeug/serving.py"", line 185, in execute     write(data)   File ""/usr/local/lib/python2.7/dist-packages/werkzeug/serving.py"", line 153, in write     self.send_header(key, value)   File ""/usr/lib/python2.7/BaseHTTPServer.py"", line 401, in send_header     self.wfile.write(""%s: %s\r\n"" % (keyword, value)) IOError: [Errno 32] Broken pipe </code></pre>  <p>Can you please suggest a work around for this ?</p>  <p>Thanks,</p>"	2015-12-03 05:11:58.093 UTC	34088617	"<p>The above error stack trace was due to Cross Region Call. Implementing CORS resolved the issue.  Final Working Code: </p>  <p>Javascript Code: </p>  <pre><code>function buttonClick() {     makeCorsRequest('google.com'); }  // Create the XHR object. function createCORSRequest(method, url) {     var xhr = new XMLHttpRequest();     if (""withCredentials"" in xhr) {         // XHR for Chrome/Firefox/Opera/Safari.         xhr.open(method, url, true);     } else if (typeof XDomainRequest != ""undefined"") {         // XDomainRequest for IE.         xhr = new XDomainRequest();         xhr.open(method, url);     } else {         // CORS not supported.         xhr = null;     }     return xhr; }  // Make the actual CORS request. function makeCorsRequest(url) {     var tempURL = ""http://127.0.0.1:5000/get_result/"" + url     var xhr = createCORSRequest('GET', tempURL);     if (!xhr) {         alert('CORS not supported');         return;     }      // Response handlers.     xhr.onload = function() {         var text = xhr.responseText;         alert('Response from CORS request to ' + url + ': ' + text);     };      xhr.onerror = function() {         alert('Oops, there was an error making the request.');     };      xhr.send(); } </code></pre>  <p>Python Code:</p>  <pre><code>import flask from flask import Flask app = Flask(__name__)  @app.route(""/get_result/&lt;url&gt;"", methods=['GET', 'POST']) def get_result(url):     return ""Hello World""  @app.after_request def add_cors(resp):     """""" Ensure all responses have the CORS headers. This ensures any failures are also accessible         by the client. """"""     resp.headers['Access-Control-Allow-Origin'] = flask.request.headers.get('Origin', '*')     resp.headers['Access-Control-Allow-Credentials'] = 'true'     resp.headers['Access-Control-Allow-Methods'] = 'POST, OPTIONS, GET'     resp.headers['Access-Control-Allow-Headers'] = flask.request.headers.get(         'Access-Control-Request-Headers', 'Authorization')     # set low for debugging     if app.debug:         resp.headers['Access-Control-Max-Age'] = '1'     return resp   if __name__ == ""__main__"":     app.run(debug = True) </code></pre>"			2015-12-04 12:38:05.127 UTC
34058330	javascript|jquery|python|ajax|flask	Passing Arguments from Javascript to Python Function	"<p>I am trying to execute/call a python method(with one parameter) from inside Ajax Call. But I am having trouble passing the parameter from Ajax Call to Python Function. I am using Flask to connect the two.</p>  <p>Updated Code:  Ajax Call(Javascript): </p>  <pre><code>$.ajax({     type: 'GET',     url: ""http://127.0.0.1:5000/get_result/"" + input.value,     dataType: ""text"",     success: function(response) {         output.value = response;         alert(response);     } }).done(function(data){         console.log(data); }); </code></pre>  <p>Python Code:</p>  <pre><code>from flask import Flask app = Flask(__name__)  @app.route(""/get_result/&lt;url&gt;"", methods=['GET', 'POST']) def get_result(url):     return ""Hello World""  if __name__ == ""__main__"":     app.run(debug = True) </code></pre>  <p>I have a backend Python Server running locally. But I am getting this as the error. (Running <a href=""http://127.0.0.1:5000/get_result/google.com"" rel=""nofollow"">http://127.0.0.1:5000/get_result/google.com</a> directly from browser shows me correct result, if it helps).</p>  <p>[Expected End Result: alertbox with message ""Hello World""]</p>  <p>Error: </p>  <pre><code>127.0.0.1 - - [03/Dec/2015 13:38:21] ""GET /get_result/google.com HTTP/1.1"" 200 - Error on request: Traceback (most recent call last):   File ""/usr/local/lib/python2.7/dist-packages/werkzeug/serving.py"", line 194, in run_wsgi     execute(self.server.app)   File ""/usr/local/lib/python2.7/dist-packages/werkzeug/serving.py"", line 185, in execute     write(data)   File ""/usr/local/lib/python2.7/dist-packages/werkzeug/serving.py"", line 153, in write     self.send_header(key, value)   File ""/usr/lib/python2.7/BaseHTTPServer.py"", line 401, in send_header     self.wfile.write(""%s: %s\r\n"" % (keyword, value)) IOError: [Errno 32] Broken pipe </code></pre>  <p>Can you please suggest a work around for this ?</p>  <p>Thanks,</p>"	2015-12-03 05:11:58.093 UTC	34058498	"<p>According to the flask documentation, functions decorated with <code>@app.route</code> don't take a <code>url</code> parameter. That explains the error you're getting.</p>  <p>It looks like you need to also do</p>  <pre><code>from flask import request </code></pre>  <p>so that you can access the request in your function. See here: <a href=""http://flask.pocoo.org/docs/0.10/quickstart/#the-request-object"" rel=""nofollow"">http://flask.pocoo.org/docs/0.10/quickstart/#the-request-object</a></p>  <p>Once you do that you can access the data/query params sent over by the ajax call according to the docs here <a href=""http://flask.pocoo.org/docs/0.10/api/#incoming-request-data"" rel=""nofollow"">http://flask.pocoo.org/docs/0.10/api/#incoming-request-data</a></p>"			2015-12-03 05:27:56.487 UTC
34058330	javascript|jquery|python|ajax|flask	Passing Arguments from Javascript to Python Function	"<p>I am trying to execute/call a python method(with one parameter) from inside Ajax Call. But I am having trouble passing the parameter from Ajax Call to Python Function. I am using Flask to connect the two.</p>  <p>Updated Code:  Ajax Call(Javascript): </p>  <pre><code>$.ajax({     type: 'GET',     url: ""http://127.0.0.1:5000/get_result/"" + input.value,     dataType: ""text"",     success: function(response) {         output.value = response;         alert(response);     } }).done(function(data){         console.log(data); }); </code></pre>  <p>Python Code:</p>  <pre><code>from flask import Flask app = Flask(__name__)  @app.route(""/get_result/&lt;url&gt;"", methods=['GET', 'POST']) def get_result(url):     return ""Hello World""  if __name__ == ""__main__"":     app.run(debug = True) </code></pre>  <p>I have a backend Python Server running locally. But I am getting this as the error. (Running <a href=""http://127.0.0.1:5000/get_result/google.com"" rel=""nofollow"">http://127.0.0.1:5000/get_result/google.com</a> directly from browser shows me correct result, if it helps).</p>  <p>[Expected End Result: alertbox with message ""Hello World""]</p>  <p>Error: </p>  <pre><code>127.0.0.1 - - [03/Dec/2015 13:38:21] ""GET /get_result/google.com HTTP/1.1"" 200 - Error on request: Traceback (most recent call last):   File ""/usr/local/lib/python2.7/dist-packages/werkzeug/serving.py"", line 194, in run_wsgi     execute(self.server.app)   File ""/usr/local/lib/python2.7/dist-packages/werkzeug/serving.py"", line 185, in execute     write(data)   File ""/usr/local/lib/python2.7/dist-packages/werkzeug/serving.py"", line 153, in write     self.send_header(key, value)   File ""/usr/lib/python2.7/BaseHTTPServer.py"", line 401, in send_header     self.wfile.write(""%s: %s\r\n"" % (keyword, value)) IOError: [Errno 32] Broken pipe </code></pre>  <p>Can you please suggest a work around for this ?</p>  <p>Thanks,</p>"	2015-12-03 05:11:58.093 UTC	34058513	"<p>Revised Code: Ajax Call(Javascript):</p>  <pre><code>$.ajax({     type: 'GET',     url: ""http://127.0.0.1:5000/get_result/google.com"",     data: {field: input.value}, //passing some input here     dataType: ""text"",     success: function(response) {         output.value = response;         alert(response);     } }).done(function(data){         console.log(data); }); </code></pre>  <p>Python Code:</p>  <pre><code>from flask import Flask app = Flask(__name__)  @app.route(""/get_result/&lt;url&gt;"", methods=['GET', 'POST']) def get_result(url):     return ""Hello World""  if __name__ == ""__main__"":     app.run(debug = True) </code></pre>"			2015-12-03 05:29:06.567 UTC
34078422	javascript|python|html|flask	Javascript not loading on website with python	"<p>I'm making a website using python with the flask framework and I can't seem to get my javascript page to work with the html the same way I did with my external css file. I'm not sure where the error is occurring, whether it's in my html head (below) where i'm linking the javascript, in the javascript file or in the python file.</p>  <pre><code>&lt;head&gt;  &lt;meta charset=""UTF-8""&gt;  &lt;link rel = ""stylesheet"" type=""text/css"" href=""../static/HotelStyle.css""&gt;  &lt;title&gt; Hotel &lt;/title&gt;   &lt;script src=""http://code.jquery.com/jquery-1.9.1.js""&gt;&lt;/script&gt;  &lt;script src=""../static/hotel.js""&gt;&lt;/script&gt;  &lt;script type=""text/javascript""&gt;&lt;/script&gt; &lt;/head&gt; </code></pre>"	2015-12-03 23:43:26.453 UTC	34079453	"<p>if you've defined your static directory correctly for <em>flask</em> you should be able to use the correct url for your static files by using <code>url_for</code>. for example in this case it will be:</p>  <pre><code>&lt;head&gt; &lt;meta charset=""UTF-8""&gt; &lt;link rel = ""stylesheet"" type=""text/css"" href=""{{ url_for('static', filename='HotelStyle.css') }}""&gt; &lt;title&gt; Hotel &lt;/title&gt;  &lt;script src=""http://code.jquery.com/jquery-1.9.1.js""&gt;&lt;/script&gt; &lt;script src=""{{ url_for('static', filename='hotel.js') }}""&gt;&lt;/script&gt; &lt;script type=""text/javascript""&gt;&lt;/script&gt; &lt;/head&gt; </code></pre>"			2015-12-04 01:33:28.873 UTC
34110742	javascript|python|selenium	Having trouble referring Selenium to a javascript button. [python]	"<p>Writing a Python script to scrape email addresses from craigslist postings if a reply button exists.  However, I'm having trouble sending a click to the 'reply' javascript button on the craigslist posting page via Selenium.  Here's what I have:</p>  <pre><code>def clist():         i = 'http://sfbay.craigslist.org/eby/ret/5344993908.html'         driver.get(i)         reply = driver.find_element_by_class_name(""button.reply_button.js-only"")         reply.click() </code></pre>  <p>edit: I've also tried <code>driver.find_element_by_css_selector</code> with the same selector, and <code>driver.find_element_by_xpath</code> with xpath being <code>\\button</code>.  All throw similar errors.</p>  <p><strong>Actual Output:</strong></p>  <pre><code>selenium.common.exceptions.NoSuchElementException: Message: Unable to locate element: {""method"":""css selector"",""selector"":""button.reply_button.js-only""} </code></pre>  <p><strong>What I expect:</strong> for the script to actually click the reply button.</p>"	2015-12-05 20:54:01.697 UTC	34110842	"<p>There is only one button with class <code>reply_button</code>, so you can simplify the class selector.</p>  <pre><code>from selenium import webdriver browser = webdriver.Firefox()   def clist():     url = 'http://sfbay.craigslist.org/eby/ret/5344993908.html'     browser.get(url)     reply = browser.find_element_by_class_name('reply_button')     reply.click()  clist() </code></pre>"			2015-12-05 21:02:11.373 UTC
34122515	plotly	can plot.ly graph multiple surfaces using the javascript (not python) api?	"<p>Anyone know if there is a way to do a multiple-surface chart (and if so, how), such as the bottom one shown at <a href=""https://plot.ly/python/3d-surface-plots/"" rel=""nofollow"">https://plot.ly/python/3d-surface-plots/</a>, but using the javascript plot.ly api instead of the python one?</p>"	2015-12-06 20:45:00.507 UTC	34137105	"<p>To reproduce any plotly graph you see on the plotly cloud, append <code>.js</code> to the graph's URL:</p>  <p>e.g. <a href=""https://plot.ly/~PlotBot/685.js"" rel=""nofollow"">https://plot.ly/~PlotBot/685.js</a></p>"			2015-12-07 15:23:40.837 UTC
34122515	plotly	can plot.ly graph multiple surfaces using the javascript (not python) api?	"<p>Anyone know if there is a way to do a multiple-surface chart (and if so, how), such as the bottom one shown at <a href=""https://plot.ly/python/3d-surface-plots/"" rel=""nofollow"">https://plot.ly/python/3d-surface-plots/</a>, but using the javascript plot.ly api instead of the python one?</p>"	2015-12-06 20:45:00.507 UTC	34140489	"<p>This Codepen:</p>  <p><a href=""http://codepen.io/plotly/pen/GogNjj"" rel=""nofollow"">http://codepen.io/plotly/pen/GogNjj</a></p>  <p>Should be helpful.</p>  <p>HTML Code: </p>  <pre><code>&lt;html&gt; &lt;head&gt; &lt;script src=""http://cdn.plot.ly/plotly-latest.min.js""&gt;&lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;!-- Plotly chart will be drawn inside this DIV --&gt; &lt;div id=""example""&gt;&lt;/div&gt; &lt;script&gt;  z1 = [     [8.83,8.89,8.81,8.87,8.9,8.87],     [8.89,8.94,8.85,8.94,8.96,8.92],     [8.84,8.9,8.82,8.92,8.93,8.91],     [8.79,8.85,8.79,8.9,8.94,8.92],     [8.79,8.88,8.81,8.9,8.95,8.92],     [8.8,8.82,8.78,8.91,8.94,8.92],     [8.75,8.78,8.77,8.91,8.95,8.92],     [8.8,8.8,8.77,8.91,8.95,8.94],     [8.74,8.81,8.76,8.93,8.98,8.99],     [8.89,8.99,8.92,9.1,9.13,9.11],     [8.97,8.97,8.91,9.09,9.11,9.11],     [9.04,9.08,9.05,9.25,9.28,9.27],     [9,9.01,9,9.2,9.23,9.2],     [8.99,8.99,8.98,9.18,9.2,9.19],     [8.93,8.97,8.97,9.18,9.2,9.18] ];  z2 = []; for (var i=0;i&lt;z1.length;i++ ) {      z2_row = [];     for(var j=0;j&lt;z1[i].length;j++) {          z2_row.push(z1[i][j]+1);     }     z2.push(z2_row); }  z3 = [] for (var i=0;i&lt;z1.length;i++ ) {      z3_row = [];     for(var j=0;j&lt;z1[i].length;j++) {          z3_row.push(z1[i][j]-1);     }     z3.push(z3_row); } var data_z1 = {z: z1, type: 'surface'}; var data_z2 = {z: z2, showscale: false, opacity:0.9, type: 'surface'}; var data_z3 = {z: z3, showscale: false, opacity:0.9, type: 'surface'};    Plotly.newPlot('example', [data_z1, data_z2, data_z3]);  &lt;/script&gt;  &lt;/body&gt; &lt;/html&gt; </code></pre>"			2015-12-07 18:20:31.103 UTC
34156068	javascript|python|html|flask|jinja2	Python string to html javascript block with jinja2	"<p>I have a problem for passing a string to html page. Specifically in ""&lt; script>"" block. I using Python, Flask, Jinja2 ...</p>  <p><strong>In python I have something like this:</strong></p>  <pre><code>def foo():   return myString #""[{title: 'Treino 7-Corrida',start: '2015-12-08',color: '#d00000',textColor: '#00c028'}]"" </code></pre>  <p><strong>In html I have something like this:</strong><br></p>  <pre><code>&lt;html&gt; ... {{myString}} &lt;!-- jinja2 --&gt; ... &lt;script&gt; ... {{myString}}  &lt;!-- jinja2 --&gt; ... &lt;/script&gt; &lt;/html&gt; </code></pre>  <p><strong>Viewing source code I have this:</strong></p>  <pre><code>&lt;html&gt; ... [{title: 'Treino 7-Corrida',start: '2015-12-08',color: '#d00000',textColor: '#00c028'}] ... &lt;script&gt; ... [{title: &amp;#39;Treino 7-Corrida&amp;#39;,start: &amp;#39;2015-12-08&amp;#39;,color: &amp;#39;#d00000&amp;#39;,textColor: &amp;#39;#00c028&amp;#39;}] ... &lt;/script&gt; &lt;/html&gt; </code></pre>  <p>The question is:</p>  <p>What I do that script don't replace ' for code &amp;#39 ;?</p>"	2015-12-08 12:35:08.54 UTC	34157977	"<p>Because the variables are escaped, jinja2 autoescape is enabled for html.</p>  <p>You should try the <a href=""http://jinja.pocoo.org/docs/dev/templates/#safe"" rel=""nofollow""><code>safe</code></a> filter:</p>  <blockquote>   <p>Mark the value as safe which means that in an environment with automatic escaping enabled this variable will not be escaped.</p> </blockquote>  <p>so edit the html to this one:</p>  <pre><code>{{ myString | safe }} </code></pre>"			2015-12-08 14:08:03.69 UTC
34158737	javascript|jquery|python|ajax	GET return value from Python via Javascript Ajax	"<p>I'm trying to write a Javascript program which can get the return value of my Python program, I'm using Ajax. The connect between Js and Python succeeded, but when I use alert() function in Javascript to show what I got, It shows that it is always the whole Python code, not the return value I want. I tried several different Python programs, the returns are always the Python program itself. I need to get the return value, ({""a"":""15"",""b"":""17""} in this example).</p>  <p>Here is the Ajax part in Javascript:</p>  <pre><code>$.ajax({     type: ""get"",     url: ""http://localhost:8000/test.py"",     data: {a:""15"",b:""20""},     datatype: ""json"",     success: function(response){         var output = response;         alert(output);         //var getvalue = output.startdate;         //var xxx = parseInt(getvalue);     } }) </code></pre>  <p>Here is the Python program:</p>  <pre><code>import cgi, cgitb import json import sys  def TryAgain():     data = cgi.FieldStorage()     output = {""a"":""15"",""b"":""17""}     return output </code></pre>  <p>Here is the running result on website: <img src=""https://i.stack.imgur.com/HZr34.png"" alt=""http://i.stack.imgur.com/HZr34.png""></p>"	2015-12-08 14:44:03.2 UTC	34159208	"<p>So, it looks like the problem here is that you aren't actually <em>serving</em> python code, but rather the file where that code resides. Your server needs another layer sitting between the code and the request that lets it understand how to translate the request into a specific function to run.</p>  <p>Typically, the way python users handle this is by integrating their server code into a <em>web framework</em> like <a href=""http://flask.pocoo.org/"" rel=""nofollow noreferrer"">Flask</a> or <a href=""http://www.pylonsproject.org/projects/pyramid/about"" rel=""nofollow noreferrer"">Pyramid</a>.</p>  <p>If you're also using a webserver for HTML content (which I assume you are, given that the file was reachable at all), you may need to additionally investigate using one more layer, that tells the webserver when to send things to your web framework rather than trying to service them itself. <a href=""https://stackoverflow.com/questions/219110/how-python-web-frameworks-wsgi-and-cgi-fit-together"">This layer is called WSGI</a>, and most web frameworks will have specific guides with instructions on how to implement WSGI for your particular constellation of technologies.</p>"			2015-12-08 15:04:49.437 UTC
34197424	javascript|python|algorithm|dynamic-programming|rosalind	Javascript is giving a different answer to same algorithm in Python	"<p>I'm working on the Rosalind problem <a href=""http://rosalind.info/problems/fibd/"">Mortal Fibonacci Rabbits</a> and the website keeps telling me my answer is wrong when I use my algorithm written JavaScript. When I use the same algorithm in Python I get a different (and correct) answer.</p>  <p>The inconsistency only happens when the result gets large. For example <code>fibd(90, 19)</code> returns <code>2870048561233730600</code> in JavaScript but in Python I get <code>2870048561233731259</code>.</p>  <p>Is there something about numbers in JavaScript that give me a different answer or am making a subtle mistake in my JavaScript code?</p>  <p>The JavaScript solution:</p>  <pre class=""lang-js prettyprint-override""><code>function fibd(n, m) {     // Create an array of length m and set all elements to 0     var rp = new Array(m);     rp = rp.map(function(e) { return 0; });     rp[0] = 1;      for (var i = 1; i &lt; n; i++) {         // prepend the sum of all elements from 1 to the end of the array         rp.splice(0, 0, rp.reduce(function (e, s) { return s + e; }) - rp[0]);         // Remove the final element         rp.pop();     }      // Sum up all the elements     return rp.reduce(function (e, s) { return s + e; }); } </code></pre>  <p>The Python solution:</p>  <pre class=""lang-py prettyprint-override""><code>def fibd(n, m):     # Create an array of length m and set all elements to 0     rp = [0] * m     rp[0] = 1      for i in range(n-1):         # The sum of all elements from 1 the end and dropping the final element         rp = [sum(rp[1:])] + rp[:-1]      return sum(rp) </code></pre>"	2015-12-10 08:55:57.503 UTC	34198049	"<p>Just doing a bit of research, this article seems interesting. <a href=""http://www.2ality.com/2012/07/large-integers.html"">Javascript only supports 53bits integers.</a></p>  <p>The result given by Python is indeed out of the maximum safe range for JS. If you try to do </p>  <pre><code>parseInt('2870048561233731259') </code></pre>  <p>It will indeed return </p>  <pre><code>2870048561233731000 </code></pre>"			2015-12-10 09:27:51.237 UTC
34197424	javascript|python|algorithm|dynamic-programming|rosalind	Javascript is giving a different answer to same algorithm in Python	"<p>I'm working on the Rosalind problem <a href=""http://rosalind.info/problems/fibd/"">Mortal Fibonacci Rabbits</a> and the website keeps telling me my answer is wrong when I use my algorithm written JavaScript. When I use the same algorithm in Python I get a different (and correct) answer.</p>  <p>The inconsistency only happens when the result gets large. For example <code>fibd(90, 19)</code> returns <code>2870048561233730600</code> in JavaScript but in Python I get <code>2870048561233731259</code>.</p>  <p>Is there something about numbers in JavaScript that give me a different answer or am making a subtle mistake in my JavaScript code?</p>  <p>The JavaScript solution:</p>  <pre class=""lang-js prettyprint-override""><code>function fibd(n, m) {     // Create an array of length m and set all elements to 0     var rp = new Array(m);     rp = rp.map(function(e) { return 0; });     rp[0] = 1;      for (var i = 1; i &lt; n; i++) {         // prepend the sum of all elements from 1 to the end of the array         rp.splice(0, 0, rp.reduce(function (e, s) { return s + e; }) - rp[0]);         // Remove the final element         rp.pop();     }      // Sum up all the elements     return rp.reduce(function (e, s) { return s + e; }); } </code></pre>  <p>The Python solution:</p>  <pre class=""lang-py prettyprint-override""><code>def fibd(n, m):     # Create an array of length m and set all elements to 0     rp = [0] * m     rp[0] = 1      for i in range(n-1):         # The sum of all elements from 1 the end and dropping the final element         rp = [sum(rp[1:])] + rp[:-1]      return sum(rp) </code></pre>"	2015-12-10 08:55:57.503 UTC	34197812	"<p>I think Javascript only has a ""Number"" datatype, and this actually an IEEE double under the hood.  2,870,048,561,233,730,600 is too large to hold precisely in IEEE double, so it is approximated.  (Notice the trailing ""00"" - 17 decimal places is about right for double.)</p>  <p>Python on the other hand has bignum support, and will quite cheerfully deal with 4096 bit integers (for those that play around with cryptographic algorithms, this is a huge boon).</p>  <p>You <del>might</del> will be able to find a Javascript bignum library if you search - for example <a href=""http://silentmatt.com/biginteger/"">http://silentmatt.com/biginteger/</a></p>"			2015-12-10 09:17:53.607 UTC
34283806	javascript|python|json|django	Retrieving json objects from python (using Django) - Javascript	"<p>I have been poking around the web but have not been able to find an example which works for me. It seems as though it is a simple mistake as I have seen multiple examples that are very similar, but when I try following these I keep getting errors (mainly <code>SyntaxError: invalid property id</code>).</p>  <p>Python code (in Django view):</p>  <pre><code>my_dict = {'mykey' : 'myvar'} jtest = json.dumps(my_dict) context = {'form': form, 'test_dict' : jtest}  return render(request, ""browsefiles.html"", context) </code></pre>  <p>Javascript:</p>  <pre><code>&lt;script type=""text/javascript""&gt;   var data = {{ test_dict }}; &lt;/script&gt; </code></pre>  <p>Error:</p>  <p><code>SyntaxError: invalid property id</code></p>  <p>If someone could help me find what is causing this error that would be greatly appreciated. I would like to access the dictionary in the in the javascript code segment.</p>"	2015-12-15 08:01:20.93 UTC	34284058	"<p>Django will escape special characters in your page and the browser cannot recognize the object. You must mark it as safe for Django to leave it alone:</p>  <pre><code>&lt;script type=""text/javascript""&gt;   var data = {{ test_dict|safe }}; &lt;/script&gt; </code></pre>"			2015-12-15 08:19:40.55 UTC
34356179	javascript|python-2.7|integer-overflow	Javascript to python math translation	"<p>I have a java script function that I'm trying to replicate in python 2, and the java script is doing some kind of precision error wrap around (or something) which I'm having trouble understanding.  These are large numbers, but here's the example:</p>  <p>In javascript:</p>  <pre><code>a = 3141592751 b = 1234567890 result = (a*31) ^ b window.alert(result) </code></pre>  <p>Here, result = -447877661.  I'm assuming it's because of a bit limitation on storing large numbers and the related wrap around to a large negative number.</p>  <p>Using python 2:</p>  <pre><code>a = 3141592751 b = 1234567890 result = (a*31) ^ b print result </code></pre>  <p>Here, result = 98336370147, which is correct mathematically.</p>  <p>How can I replicate the functionality of the javascript code using python?  What is the wrap around point?  Thanks!</p>"	2015-12-18 12:54:07.067 UTC	34356320	"<p>The limit of a variable in javascript is-</p>  <pre><code>+/- 9007199254740991 i.e., 2^53 -1 </code></pre>  <p>One more thing to consider is that if you are dealing with bitwise operators and shift operators to get your job done, they operate on 32-bit ints, so in that case, the max safe integer is-</p>  <pre><code>2^31-1, or 2147483647 </code></pre>  <p>Hope it helps!</p>  <p>More reference - <a href=""https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Number/MAX_SAFE_INTEGER"" rel=""nofollow noreferrer"">MDN</a> and <a href=""https://stackoverflow.com/questions/307179/what-is-javascripts-highest-integer-value-that-a-number-can-go-to-without-losin"">StackOverflow</a></p>  <p>So, you may have to use this value to wrap your python code.</p>  <blockquote>   <p>Note : ^ symbol above represents power of.</p> </blockquote>"			2015-12-18 13:01:29.76 UTC
34356247	python	"Does ""or {}"" work in python like in javascript?"	"<p>This was my first code:</p>  <pre><code>def __init__(self, attrs=None):     if not attrs:         attrs = {}     attrs['data-select2-json'] = ""true"" </code></pre>  <p>Then I tried like in JavaScript:</p>  <pre><code>def __init__(self, attrs=None):     attrs = attrs or {}     attrs['data-select2-json'] = ""true"" </code></pre>  <p>It seems to work, but I'm wondering: does ""or {}"" work in python like in javascript? (hard times googling this!) and is it as fast as the simple ""<code>if</code>"" of my first code?</p>"	2015-12-18 12:58:02.387 UTC	34356352	"<p>Your first version is more readable for me, but if you insist using one liner, you can use this (from Python 2.5):</p>  <pre><code>    attrs = {} if attrs is None else attrs </code></pre>"			2015-12-18 13:02:57.547 UTC
34356247	python	"Does ""or {}"" work in python like in javascript?"	"<p>This was my first code:</p>  <pre><code>def __init__(self, attrs=None):     if not attrs:         attrs = {}     attrs['data-select2-json'] = ""true"" </code></pre>  <p>Then I tried like in JavaScript:</p>  <pre><code>def __init__(self, attrs=None):     attrs = attrs or {}     attrs['data-select2-json'] = ""true"" </code></pre>  <p>It seems to work, but I'm wondering: does ""or {}"" work in python like in javascript? (hard times googling this!) and is it as fast as the simple ""<code>if</code>"" of my first code?</p>"	2015-12-18 12:58:02.387 UTC	34356365	"<p>Yes, the JS-style assignment is valid Python. It stems for the concept of Truthiness in Python.</p>  <p>If you try <code>a = 0 or 5</code>, you'll find <code>a == 5</code> because <code>0</code> is Falsy, but <code>5</code> is Truthy. The <a href=""https://docs.python.org/2.4/lib/truth.html"" rel=""nofollow"">docs</a> outline what is Falsy.</p>  <p>You might be curious why <code>{}</code> is evaluating to a Truthy value in your code when the docs mention it is Falsy: it's because <code>or</code> and <code>and</code> will return an operand: namely, the last one.</p>  <p><code>a = 0 or None or {} or []</code> will bind <code>[]</code> to <code>a</code> because of this exception.</p>  <p>In your example, <code>None</code> is Falsy, but <code>{}</code> is bound because it is the last.</p>  <p>In short, when assigning with <code>or</code>, it will assign to the first Truthy value (or the last Falsy one in a string of Falsy values).</p>  <pre><code>&gt;&gt;&gt; class Foo: ...   def __init__(self, attrs=None): ...     if not attrs: ...         attrs = {} ...     print(attrs) ...  &gt;&gt;&gt; Foo(attrs={'1': '2'}) {'1': '2'} &lt;__main__.Foo instance at 0x1006e5b90&gt; &gt;&gt;&gt; Foo() {} &lt;__main__.Foo instance at 0x1006e59e0&gt; &gt;&gt;&gt; class Foo: ...   def __init__(self, attrs=None): ...     attrs = attrs or {} ...     print(attrs) ...  &gt;&gt;&gt; Foo(attrs={'1': '2'}) {'1': '2'} &lt;__main__.Foo instance at 0x1006e5bd8&gt; &gt;&gt;&gt; Foo() {} &lt;__main__.Foo instance at 0x1006e59e0&gt; </code></pre>  <p>Just a caveat, this is not incredibly Pythonic. Typically you'll see</p>  <pre><code>a = &lt;default&gt; if cond else a </code></pre>"			2015-12-18 13:03:56.063 UTC
34356247	python	"Does ""or {}"" work in python like in javascript?"	"<p>This was my first code:</p>  <pre><code>def __init__(self, attrs=None):     if not attrs:         attrs = {}     attrs['data-select2-json'] = ""true"" </code></pre>  <p>Then I tried like in JavaScript:</p>  <pre><code>def __init__(self, attrs=None):     attrs = attrs or {}     attrs['data-select2-json'] = ""true"" </code></pre>  <p>It seems to work, but I'm wondering: does ""or {}"" work in python like in javascript? (hard times googling this!) and is it as fast as the simple ""<code>if</code>"" of my first code?</p>"	2015-12-18 12:58:02.387 UTC	34356550	"<p>According to the <a href=""https://docs.python.org/2/reference/expressions.html#boolean-operations"" rel=""nofollow noreferrer"">documentation</a>:</p>  <blockquote>   <p>The expression <code>x or y</code> first evaluates <code>x</code>; if <code>x</code> is true, its value is   returned; otherwise, <code>y</code> is evaluated and the resulting value is   returned.</p> </blockquote>  <p>This means, that both of your codes does the same thing:</p>  <pre><code>if not attrs:     attrs = {} </code></pre>  <p>Evaluates <code>attrs</code>. When <code>attrs</code> is true - does nothing, otherwise assigns <code>{}</code> to <code>attrs</code></p>  <pre><code>attrs = attrs or {} </code></pre>  <p>Evaluates <code>attrs</code>. When <code>attrs</code> is true - assigns <code>attrs</code> to <code>attrs</code> (not sure about optimizations), otherwise assigns <code>{}</code> to <code>attrs</code></p>  <hr>  <p>In JavaScript operator <code>x || y</code> also returns <code>x</code> when <code>x</code> evaluates to true, <code>y</code> otherwise. Quote from the <a href=""http://www.ecma-international.org/publications/files/ECMA-ST/Ecma-262.pdf"" rel=""nofollow noreferrer"">standard</a>:</p>  <blockquote>   <p><code>LogicalORExpression</code> : <code>LogicalORExpression || LogicalANDExpression</code></p>      <ol>   <li>Let <code>lref</code> be the result of evaluating <code>LogicalORExpression</code>.</li>   <li>Let <code>lval</code> be <code>GetValue(lref)</code>.</li>   <li>Let <code>lbool</code> be <code>ToBoolean(lval)</code>.</li>   <li><a href=""https://stackoverflow.com/questions/12995554/what-does-returnifabrupt-mean-in-es6-draft""><code>ReturnIfAbrupt(lbool)</code></a>.</li>   <li>If <code>lbool</code> is true, return <code>lval</code>.</li>   <li>Let <code>rref</code> be the result of evaluating <code>LogicalANDExpression</code>.</li>   <li>Return <code>GetValue(rref)</code>.</li>   </ol> </blockquote>  <p>However, you should note <a href=""https://developer.mozilla.org/en-US/docs/Mozilla/Projects/SpiderMonkey/JSAPI_reference/JS%3A%3AToBoolean"" rel=""nofollow noreferrer"">conversions to boolean</a> in JavaScript:</p>  <pre><code>&gt; Boolean({}) true &gt; Boolean([]) true </code></pre>"			2015-12-18 13:13:57.427 UTC
34367078	javascript|python|web-scraping|pyqt4	Using python and PyQt4 to scrape data from mlb.com not rendering javascript	"<p>I am trying to render data from a certain page at <a href=""http://mlb.mlb.com/stats/sortable.jsp#elem=[object+Object]&amp;tab_level=child&amp;click_text=Sortable+Player+pitching&amp;game_type=%27R%27&amp;season=2015&amp;season_type=ANY&amp;league_code=%27MLB%27&amp;sectionType=sp&amp;statType=pitching&amp;page=1&amp;ts=1450474511146&amp;timeframe=&amp;position=%271%27&amp;playerType=ALL&amp;sortColumn=w&amp;sortOrder=%27desc%27&amp;extended=0"" rel=""nofollow"">MLB.com</a> that uses javascript to generate the html for useful data that I would like to scrape. I followed <a href=""https://impythonist.wordpress.com/2015/01/06/ultimate-guide-for-scraping-javascript-rendered-web-pages/"" rel=""nofollow"">this tutorial</a> on using pyqt4 to render the html, but no javascript is actually rendered and I just get back the same html that I would have gotten before!</p>  <p>Here is my code</p>  <pre><code># Importing from bs4 import BeautifulSoup from urllib.request import urlopen  # Importing stuff for parsing javascript import sys from PyQt4.QtGui import * from PyQt4.QtCore import * from PyQt4.QtWebKit import *  #basic function to get scrapy working url2 = ""removed due to size, link is above in post""  class Render(QWebPage):     def __init__(self, url):         self.app = QApplication(sys.argv)         QWebPage.__init__(self)         self.loadFinished.connect(self._loadFinished)         self.mainFrame().load(QUrl(url))         self.app.exec()      def _loadFinished(self, result):         self.frame = self.mainFrame()         self.app.quit()  r = Render(url2) result = r.frame.toHtml().encode('utf-8')  print(result) </code></pre>  <p>Note, that I removed the url in the code above, but it is the same url as the first link in this post. </p>  <p>When I run this code, I get the same html that I would get if I just got the page url with urllib2 and printed the source. What can I do to make this code work as I want it to?</p>  <p>Edit: Here is the end of my code that I took from the rest of the tutorial that throws an error:</p>  <pre><code>r = Render(url2) result = r.frame.toHtml() formattedResult = str(result.toAscii())  </code></pre>  <p>This code throws this error:</p>  <pre><code>AttributeError: 'str' object has no attribute 'toAscii' </code></pre>  <p>When I don't call the toAscii() and instead just call str(result) I get this error:</p>  <pre><code>UnicodeEncodeError: 'ascii' codec can't encode characters in position 21391-21393: ordinal not in range(128) </code></pre>"	2015-12-19 03:50:37.78 UTC	34367626	"<p>The total code at the bottom of the tutorial was wrong. You still need to process the page with lxml:</p>  <pre><code>#QString should be converted to string before processed by lxml formatted_result = str(result.toAscii())  #Next build lxml tree from formatted_result tree = html.fromstring(formatted_result)  #Now using correct Xpath we are fetching URL of archives archive_links = tree.xpath('//divass=""campaign""]/a/@href')  print archive_links </code></pre>  <p>The author simply didn't include the rest of the code at the end. </p>"			2015-12-19 05:32:33.863 UTC
34367078	javascript|python|web-scraping|pyqt4	Using python and PyQt4 to scrape data from mlb.com not rendering javascript	"<p>I am trying to render data from a certain page at <a href=""http://mlb.mlb.com/stats/sortable.jsp#elem=[object+Object]&amp;tab_level=child&amp;click_text=Sortable+Player+pitching&amp;game_type=%27R%27&amp;season=2015&amp;season_type=ANY&amp;league_code=%27MLB%27&amp;sectionType=sp&amp;statType=pitching&amp;page=1&amp;ts=1450474511146&amp;timeframe=&amp;position=%271%27&amp;playerType=ALL&amp;sortColumn=w&amp;sortOrder=%27desc%27&amp;extended=0"" rel=""nofollow"">MLB.com</a> that uses javascript to generate the html for useful data that I would like to scrape. I followed <a href=""https://impythonist.wordpress.com/2015/01/06/ultimate-guide-for-scraping-javascript-rendered-web-pages/"" rel=""nofollow"">this tutorial</a> on using pyqt4 to render the html, but no javascript is actually rendered and I just get back the same html that I would have gotten before!</p>  <p>Here is my code</p>  <pre><code># Importing from bs4 import BeautifulSoup from urllib.request import urlopen  # Importing stuff for parsing javascript import sys from PyQt4.QtGui import * from PyQt4.QtCore import * from PyQt4.QtWebKit import *  #basic function to get scrapy working url2 = ""removed due to size, link is above in post""  class Render(QWebPage):     def __init__(self, url):         self.app = QApplication(sys.argv)         QWebPage.__init__(self)         self.loadFinished.connect(self._loadFinished)         self.mainFrame().load(QUrl(url))         self.app.exec()      def _loadFinished(self, result):         self.frame = self.mainFrame()         self.app.quit()  r = Render(url2) result = r.frame.toHtml().encode('utf-8')  print(result) </code></pre>  <p>Note, that I removed the url in the code above, but it is the same url as the first link in this post. </p>  <p>When I run this code, I get the same html that I would get if I just got the page url with urllib2 and printed the source. What can I do to make this code work as I want it to?</p>  <p>Edit: Here is the end of my code that I took from the rest of the tutorial that throws an error:</p>  <pre><code>r = Render(url2) result = r.frame.toHtml() formattedResult = str(result.toAscii())  </code></pre>  <p>This code throws this error:</p>  <pre><code>AttributeError: 'str' object has no attribute 'toAscii' </code></pre>  <p>When I don't call the toAscii() and instead just call str(result) I get this error:</p>  <pre><code>UnicodeEncodeError: 'ascii' codec can't encode characters in position 21391-21393: ordinal not in range(128) </code></pre>"	2015-12-19 03:50:37.78 UTC	39499436	<p>I have found a solution. Instead of doing </p>  <pre><code>formattedResult = str(result.toAscii()) </code></pre>  <p>try with</p>  <pre><code>formattedResult = str(result.encode('utf-8')) </code></pre>  <p>It worked for me.</p>			2016-09-14 20:49:55.617 UTC
34417412	javascript|python|html|http|text	Python get URL contents when page requires JavaScript enabled	"<p>I am looking to get the contents of a text file hosted on my website using Python. The server requires JavaScript to be enabled on your browser. Therefore when I run:</p>  <pre><code>    import urllib2       target_url = ""http://09hannd.me/ai/request.txt""     data = urllib2.urlopen(target_url)  </code></pre>  <p>I receive a html page saying to enable JavaScript. I was wondering if there was a way of faking having JS enabled or something.</p>  <p>Thanks</p>"	2015-12-22 13:51:31.82 UTC	34417472	"<p>I would probably suggest tools like this. <a href=""https://github.com/niklasb/dryscrape"" rel=""nofollow noreferrer"">https://github.com/niklasb/dryscrape</a></p>  <p>Additionally you can see more info here: <a href=""https://stackoverflow.com/questions/8650999/using-python-with-selenium-to-scrape-dynamic-web-pages"">Using python with selenium to scrape dynamic web pages</a></p>"			2015-12-22 13:54:38.163 UTC
34417412	javascript|python|html|http|text	Python get URL contents when page requires JavaScript enabled	"<p>I am looking to get the contents of a text file hosted on my website using Python. The server requires JavaScript to be enabled on your browser. Therefore when I run:</p>  <pre><code>    import urllib2       target_url = ""http://09hannd.me/ai/request.txt""     data = urllib2.urlopen(target_url)  </code></pre>  <p>I receive a html page saying to enable JavaScript. I was wondering if there was a way of faking having JS enabled or something.</p>  <p>Thanks</p>"	2015-12-22 13:51:31.82 UTC	34417844	"<p><code>Selenium</code> is the way to go here, but there is another ""hacky"" option.</p>  <p>Based on this answer: <a href=""https://stackoverflow.com/a/26393257/2517622"">https://stackoverflow.com/a/26393257/2517622</a></p>  <pre><code>import requests  url = 'http://09hannd.me/ai/request.txt' response = requests.get(url, cookies={'__test': '2501c0bc9fd535a3dc831e57dc8b1eb0'}) print(response.content) # Output: find me a cafe nearby </code></pre>"			2015-12-22 14:15:36.31 UTC
34425673	javascript|python|ajax|google-app-engine	Passing variables from python to javascript	"<p>I am working on a web page with Google App Engine. It involves html, python, javascript and Ajax. </p>  <p>The workflow would be like this:</p>  <p>when someone introduces a value in an html box, it calls a javascript function:</p>  <pre><code> INPUT type=""text"" id=""busca"" name=""busca"" onblur=""SacarMapa()"" </code></pre>  <p>That will call this function:</p>  <pre><code>  function SacarMapa()   {   var lugar=document.getElementById(""busca"").value;     $.ajax(""/mapa"",     { ""type"": ""get"",         ""data"": {busca:lugar},         // usualmente post o get         ""success"": function(result) {             initMap(RESULT-A, RESULT-B);             },         ""error"": function(result) {             console.error(""Se ha producido un error: "", result);},         ""async"": true,})}; </code></pre>  <p>What i would need is RESULT-A and RESULT-B. This would come from the server side, where python is used:</p>  <pre><code>class MapHandler(SessionModule.BaseSessionHandler):    def get(self):       #Obtencion de datos       serviceurl = 'http://maps.googleapis.com/maps/api/geocode/json?'       address=self.request.get('busca')       self.response.out.write(""Busca es ""+address)       url = serviceurl + urllib.urlencode({'address': address})       uh = urllib.urlopen(url)       data = uh.read()       js = json.loads(str(data))       resultado = js['status']      if not resultado == ""ZERO_RESULTS"":         location = js['results'][0]['formatted_address']         latitud = js['results'][0]['geometry']['location']['lat']         longitud = js['results'][0]['geometry']['location']['lng'] </code></pre>  <p>So i would need to send ""latitud"" and ""longitud"" from the python code to javascript so that latitud would be RESULT-A and longitud RESULT-B</p>  <p>What would be the way to do this?</p>  <p>Thanks.</p>"	2015-12-22 22:42:50.8 UTC	34440728	"<p>SOLVED:</p>  <p>I finally did it this way:</p>  <p>(Python/server side)</p>  <pre><code>class MapHandler(webapp2.RequestHandler): def get(self):     #Obtencion de datos     serviceurl = 'http://maps.googleapis.com/maps/api/geocode/json?'     address=self.request.get('busca')     url = serviceurl + urllib.urlencode({'address': address})     uh = urllib.urlopen(url)     data = uh.read()     js = json.loads(str(data))     try:             location = js['results'][0]['formatted_address']             latitud = js['results'][0]['geometry']['location']['lat']             longitud = js['results'][0]['geometry']['location']['lng']             self.response.headers['Content-Type'] = 'application/json'             self.response.out.write (json.dumps({""exito"": 1, ""lat"": latitud, ""long"": longitud}))      except Exception as e:             self.response.out.write (json.dumps({""exito"":0})) </code></pre>  <p>Javascript:</p>  <pre><code>function SacarMapa() { var lugar=document.getElementById(""busca"").value; alert(""Buscaremos ""+lugar); debugger; $.ajax(""/mapa"",     { ""type"": ""get"",         ""data"": {busca:lugar},         ""dataType"": ""json"",         ""success"": function(datos) {             if (datos['exito'] == ""1"")             {                 initMap(datos['lat'], datos['long']);             }         },          ""error"": function(datos) {             debugger;             console.error(""Se ha producido un error: "", datos);},         ""async"": true,})}; </code></pre>  <p>I got pretty crazy with this, because i forgot putting the webapp2.RequestHandler in the header of the python class.</p>"			2015-12-23 17:18:46.043 UTC
34447529	javascript|python|json|twitter|d3.js	Python json.dump() to javascript JSON.parse()	"<p><strong>Problem Summary</strong>: can't parse through string that's formatted as a JSON object from .json file</p>  <p><strong>Long Version</strong>: I have some tweets I'm processing with Python where I create a json file I'm wanting to pass into d3.js and parse. I'm writing the tweets I get, into a file, so I have to serialize them with the <code>json.dump()</code> command in Python before I write them to a file. </p>  <p>Python</p>  <pre><code>def on_data(self, data):         f = open(""tweets.json"",""a"")         tweet = json.loads(data)          d = {                 ""created"": tweet[""created_at""],                 ""text"": tweet[""text""]         }          final_tweet = json.dumps(d)         f.write(final_tweet)         f.close()         return True </code></pre>  <p>However when I get the json file and try to grab it in my <code>d3.json(""tweets.json"")</code> it prints out the correct json format in the file:</p>  <pre><code>{    tweet:[            {""key"":""value""},            {""key"":""value""}   ] } </code></pre>  <p>but I cannot parse the data with the code I'm using because <code>console.log(JSON.parse(data))</code> does not print out any object value.</p>  <pre><code>d3.text(""tweets.json"", function(error, data){    if (error) return console.warn(error);   console.log(""hello3"");   console.log(JSON.parse(data)); }); </code></pre>  <p><strong>EDIT</strong> I edit the file that gets written to by manually adding braces at the top and bottom.</p>"	2015-12-24 05:07:52.987 UTC	34447644	"<p>Use this Json instead and check your Json data <a href=""https://jsonformatter.curiousconcept.com/"" rel=""nofollow"">here</a></p>  <pre><code>{    ""keys"":[     {""key"":""value""},     {""key"":""value""}   ] } </code></pre>"			2015-12-24 05:20:55.713 UTC
