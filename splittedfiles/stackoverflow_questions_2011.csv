4591318	javascript|python|templates|google-closure-templates	Templating system for both Python and Javascript?	"<p>A nice feature of Google's Soy templates is that you can use the same templates on the client (JS) and on the server (Java).</p>  <p>Currently I plan to render most pages client-side using Soy templates compiled to JS. However, my backend is written in Python (using Tornado), so I can't easily use the same templates server-side to generate emails or static pages.</p>  <p>I could render these soy templates using a separate Java component on the server side, or perhaps even get them working in node.js. Neither of those options seem particularly clean.</p>  <p>Are there any good templating engines that run both in JS and Python? Has anyone had good results with JSON-Template or Tenjin? Any other ideas?</p>"	2011-01-04 07:03:39.223 UTC	23042966	"<p>I realize this is a very old question but for the reference, it is now possible to compile Soy templates to Python code.</p>  <p><a href=""https://pypi.python.org/pypi/soy"" rel=""nofollow"">https://pypi.python.org/pypi/soy</a></p>"			2014-04-13 12:50:51.157 UTC
4591318	javascript|python|templates|google-closure-templates	Templating system for both Python and Javascript?	"<p>A nice feature of Google's Soy templates is that you can use the same templates on the client (JS) and on the server (Java).</p>  <p>Currently I plan to render most pages client-side using Soy templates compiled to JS. However, my backend is written in Python (using Tornado), so I can't easily use the same templates server-side to generate emails or static pages.</p>  <p>I could render these soy templates using a separate Java component on the server side, or perhaps even get them working in node.js. Neither of those options seem particularly clean.</p>  <p>Are there any good templating engines that run both in JS and Python? Has anyone had good results with JSON-Template or Tenjin? Any other ideas?</p>"	2011-01-04 07:03:39.223 UTC	6716248	"<p>Michael Kerrin has created a project called <a href=""http://pypi.python.org/pypi/pwt.jinja2js/"" rel=""noreferrer"">pwt.jinja2js</a> </p>  <p>Project description: </p>  <blockquote>   <p>pwt.jinja2js is an extension to the Jinja2 template engine that compiles valid Jinja2 templates containing macros to JavaScript. The JavaScript output can be included via script tags or can be added to the applications JavaScript.</p> </blockquote>  <p>As stated in the <a href=""http://packages.python.org/pwt.jinja2js/"" rel=""noreferrer"">documentation</a></p>  <blockquote>   <p>By slipping a switch we can produce Java Script that takes advantage of Closure Library and produces the following:</p> </blockquote>  <p>Jinja2:</p>  <pre><code>{% namespace ns1 %}  {% macro printusers(users) %} &lt;ul&gt; {% for user in users %}     &lt;li&gt;&lt;a href=""{{ user.url }}""&gt;{{ user.username }}&lt;/a&gt;&lt;/li&gt; {% endfor %} &lt;/ul&gt; {% endmacro %} </code></pre>  <p>Becomes:</p>  <pre><code>goog.provide('ns1');  goog.require('soy');  ns1.printusers = function(opt_data, opt_sb) {     var output = opt_sb || new soy.StringBuilder();     output.append('\n&lt;ul&gt;\n');     var userList = opt_data.users;     var userListLen = userList.length;     for (var userIndex = 0; userIndex &lt; userListLen; userIndex++) {         var userData = userList[userIndex];    output.append('\n   &lt;li&gt;&lt;a href=""', userData.url, '""&gt;', userData.username, '&lt;/a&gt;&lt;/li&gt;\n'); }     output.append('\n&lt;/ul&gt;\n');     if (!opt_sb) return output.toString(); } </code></pre>"			2011-07-16 08:20:31.833 UTC
4591318	javascript|python|templates|google-closure-templates	Templating system for both Python and Javascript?	"<p>A nice feature of Google's Soy templates is that you can use the same templates on the client (JS) and on the server (Java).</p>  <p>Currently I plan to render most pages client-side using Soy templates compiled to JS. However, my backend is written in Python (using Tornado), so I can't easily use the same templates server-side to generate emails or static pages.</p>  <p>I could render these soy templates using a separate Java component on the server side, or perhaps even get them working in node.js. Neither of those options seem particularly clean.</p>  <p>Are there any good templating engines that run both in JS and Python? Has anyone had good results with JSON-Template or Tenjin? Any other ideas?</p>"	2011-01-04 07:03:39.223 UTC	4591402	"<p>Mustache is a template engine that has been implemented in both Python and JavaScript (and many other languages).</p>  <p><a href=""http://mustache.github.com/"" rel=""noreferrer"">http://mustache.github.com/</a></p>"			2011-01-04 07:20:57.357 UTC
4629152	python|django|google-app-engine	Python timer similar to javascript timer	"<p>I want to create a dynamic timer on webpage in <strong>python</strong> like this code which is in Javascript:</p>  <pre><code>&lt;script language=""JavaScript"" type=""text/javascript""&gt; var seconds = 40;    var minutes = 01;    function timer() {seconds--;   if (seconds == -01) {    seconds = 59;    minutes = minutes - 1; }   else {    minutes = minutes; } if (seconds&lt;=9) { seconds = ""0"" + seconds; }  time = (minutes&lt;=9 ? ""0"" + minutes : minutes) +"":""+seconds; if (document.getElementById) { document.getElementById('timertable').innerHTML = time; } timeout=window.setTimeout(""timer();"", 1000); if (minutes == '00' &amp;&amp; seconds == '00') { seconds = ""00""; window.clearTimeout(timeout); } } window.onload = timer; &lt;/script&gt; </code></pre>  <p>Some of the conditions the timer must satisfy are: 1>Timer should not re-initialize its value once the other contents of the page reload 2>The duration for which the timer is supposed to run is coming from another HTML page on the basis of choice made by user Please note that I am using Django on google app engine. Please let me know if I am not clear.Thanks, Sunil</p>"	2011-01-07 18:55:03.563 UTC	4629426	"<p>I am still unsure about what you are trying to achieve.  </p>  <p>You may use cookies to store the timer state and initialize the timer following the values present in cookies.<br> W3School tutorial on cookies: <a href=""http://www.w3schools.com/JS/js_cookies.asp"" rel=""nofollow"">http://www.w3schools.com/JS/js_cookies.asp</a></p>  <p>If you have a timer which is set up at your server level, you may use an ajax view to fetch the inital time from server and another one to update time as the js timer progresses. You may decrease the requests frequency (maybe 1 per 5 seconds) with the cost of some time loss.</p>"			2011-01-07 19:24:56.6 UTC
4629152	python|django|google-app-engine	Python timer similar to javascript timer	"<p>I want to create a dynamic timer on webpage in <strong>python</strong> like this code which is in Javascript:</p>  <pre><code>&lt;script language=""JavaScript"" type=""text/javascript""&gt; var seconds = 40;    var minutes = 01;    function timer() {seconds--;   if (seconds == -01) {    seconds = 59;    minutes = minutes - 1; }   else {    minutes = minutes; } if (seconds&lt;=9) { seconds = ""0"" + seconds; }  time = (minutes&lt;=9 ? ""0"" + minutes : minutes) +"":""+seconds; if (document.getElementById) { document.getElementById('timertable').innerHTML = time; } timeout=window.setTimeout(""timer();"", 1000); if (minutes == '00' &amp;&amp; seconds == '00') { seconds = ""00""; window.clearTimeout(timeout); } } window.onload = timer; &lt;/script&gt; </code></pre>  <p>Some of the conditions the timer must satisfy are: 1>Timer should not re-initialize its value once the other contents of the page reload 2>The duration for which the timer is supposed to run is coming from another HTML page on the basis of choice made by user Please note that I am using Django on google app engine. Please let me know if I am not clear.Thanks, Sunil</p>"	2011-01-07 18:55:03.563 UTC	4629195	"<p>This isn't quite possible in python, as python is server side, and you are displaying user side data. You won't get around javascript in any way, either you will need the timer itself on the js side or you'd need ajax.</p>"			2011-01-07 18:59:27.41 UTC
4652559	javascript|object|inspect	"In Javascript, is their a way to inspect an objects methods and attributes such as Python's dir()?"	<p>In Javascript is their a way to inspect an objects methods and attributes such as Python's dir() ?</p>  <pre><code>dir(object) returns  object.height object.width object.compute_days_till_birthday()  etc..... </code></pre>	2011-01-10 23:08:26.837 UTC	4652615	"<p>Try using Chrome's console. If you log any sort of variable to it using <code>console.log()</code>, it lets you explore all of its methods and properties, including the prototype chain. This looks sort of like this:</p>  <p><img src=""https://i.stack.imgur.com/Iju8o.png"" alt=""alt text""></p>"			2011-01-10 23:15:49.727 UTC
4652559	javascript|object|inspect	"In Javascript, is their a way to inspect an objects methods and attributes such as Python's dir()?"	<p>In Javascript is their a way to inspect an objects methods and attributes such as Python's dir() ?</p>  <pre><code>dir(object) returns  object.height object.width object.compute_days_till_birthday()  etc..... </code></pre>	2011-01-10 23:08:26.837 UTC	4652622	"<p>JavaScript has the <code>for .. in</code> loop construct to help with this:</p>  <pre><code>for (var name in some_object) {     // some_object[name] is the value of the property } </code></pre>  <p>However, there are some pitfalls with this approach:</p>  <ol> <li>An object property can be of <em>any</em> type. If you need to filter the list you retrieve, you will need to use <code>typeof</code>.</li> <li><code>for .. in</code> will iterate over properties pulled out from the target object's prototype chain. If you want to process only properties defined on the target object itself, you should additionally test for <code>some_object.hasOwnProperty(name)</code>.</li> </ol>"			2011-01-10 23:16:22.867 UTC
4652559	javascript|object|inspect	"In Javascript, is their a way to inspect an objects methods and attributes such as Python's dir()?"	<p>In Javascript is their a way to inspect an objects methods and attributes such as Python's dir() ?</p>  <pre><code>dir(object) returns  object.height object.width object.compute_days_till_birthday()  etc..... </code></pre>	2011-01-10 23:08:26.837 UTC	4652578	<pre><code>for ( var prop in obj ) {    console.log( prop + ' is ' + obj[prop] ); } </code></pre>			2011-01-10 23:10:44.74 UTC
4652559	javascript|object|inspect	"In Javascript, is their a way to inspect an objects methods and attributes such as Python's dir()?"	<p>In Javascript is their a way to inspect an objects methods and attributes such as Python's dir() ?</p>  <pre><code>dir(object) returns  object.height object.width object.compute_days_till_birthday()  etc..... </code></pre>	2011-01-10 23:08:26.837 UTC	4652603	<p>Firebug had a similar function</p>  <pre><code>console.dir(obj) </code></pre>  <p>Or you can do one yourself</p>  <pre><code>var dir = ''; for (var i in obj) dir += 'obj[' + i + '] = ' + obj[i]; alert(dir);  </code></pre>			2011-01-10 23:14:35.007 UTC
4652559	javascript|object|inspect	"In Javascript, is their a way to inspect an objects methods and attributes such as Python's dir()?"	<p>In Javascript is their a way to inspect an objects methods and attributes such as Python's dir() ?</p>  <pre><code>dir(object) returns  object.height object.width object.compute_days_till_birthday()  etc..... </code></pre>	2011-01-10 23:08:26.837 UTC	4652607	"<p>Yes. You can use a <code>for..in</code> loop (section 12.6.4 of <a href=""http://www.ecma-international.org/publications/standards/Ecma-262.htm"" rel=""nofollow"">the spec</a>), which loops through the enumerable properties of both the object and its prototype (if it has one), like so:</p>  <pre><code>var name; for (name in obj) {     // `name` is each of the property names, as a string; get the value     // from obj[name]     alert(name + ""="" + obj[name]); } </code></pre>  <p>If you want to differentiate whether it's the object itself or its prototype that has the property, you can use <a href=""https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Object/hasOwnProperty"" rel=""nofollow""><code>obj.hasOwnProperty</code></a>:</p>  <pre><code>var name; for (name in obj) {     if (obj.hasOwnProperty(name)) {        // `name` is the name of a property this object has for itself     }     else {        // `name` is the name of a property the object inherits        // from its prototype     } } </code></pre>  <p>If you're using an implementation that supports some of the new <a href=""http://www.ecma-international.org/publications/standards/Ecma-262.htm"" rel=""nofollow"">ECMAScript 5</a> stuff, you can use <code>Object.keys</code> to get an array of all of its enumerable property names, but really that's just an array version of what <code>for..in</code> gives you (and <code>for..in</code> is supported by every implementation of JavaScript I've ever seen or you're likely to).</p>  <p>When I say an ""enumerable"" property: Most of the built-in properties of objects defined by the specification (like <code>length</code> on <code>Array</code> instances, or <code>getTime</code> on <code>Date</code> instances) are <em>non-enumerable</em> and don't show up in the list. Until the 5th edition of the spec, there was no standard way to define your <em>own</em> non-enumerable property, but as of the latest you can do that via <code>Object.defineProperty</code> / <code>Object.defineProperties</code> (sections 15.2.3.6 and 12.2.3.7 of the spec). That's not widely-supported yet.</p>"			2011-01-10 23:15:00.157 UTC
4661753	javascript|python	Executing JavaScript with Python without X	"<p>I want to parse a html-page that unfortunately requires JavaScript to show any content. In order to do so I use a small python-script that pulls the html-code of the page, but after that I have to execute the JavaScript in a DOM-context which seems pretty hard.</p>  <p>To make it even harder I want to use it in a server environment that has no X11-server.</p>  <p>Note: I already read about <a href=""http://code.google.com/p/pywebkitgtk/"" rel=""nofollow"">http://code.google.com/p/pywebkitgtk/</a> but it seems to need a X-server.</p>"	2011-01-11 19:30:01.58 UTC	7163401	"<p>I'm still trying to figure this out myself, so take my answer with a grain of salt.</p>  <p>So far, I found <a href=""http://blog.motane.lu/2009/06/18/pywebkitgtk-execute-javascript-from-python/"" rel=""nofollow"">http://blog.motane.lu/2009/06/18/pywebkitgtk-execute-javascript-from-python/</a>, which describes the use and the quirks of Pywebkitgtk by someone who has similar needs to what we do.</p>  <p>Later, however, the writer of that blogpost discovered that he can't get it to work with Xvbf, so he hunted some more and found a Qt webkit (possibly in Qt itself, if I understand correctly) <a href=""http://blog.motane.lu/2009/07/07/downloading-a-pages-content-with-python-and-webkit/"" rel=""nofollow"">http://blog.motane.lu/2009/07/07/downloading-a-pages-content-with-python-and-webkit/</a>.  Apparently it's a much better solution than PywebkitGTK.</p>  <p>Naturally, I'll be looking into the other solutions offered here--but I wanted to bring up the Qt solution, because to me, it seems the most likely candidate for what I want to do...and if not, then perhaps it will be for someone else, looking for an answer to this question! :-)</p>"			2011-08-23 15:18:50.893 UTC
4661753	javascript|python	Executing JavaScript with Python without X	"<p>I want to parse a html-page that unfortunately requires JavaScript to show any content. In order to do so I use a small python-script that pulls the html-code of the page, but after that I have to execute the JavaScript in a DOM-context which seems pretty hard.</p>  <p>To make it even harder I want to use it in a server environment that has no X11-server.</p>  <p>Note: I already read about <a href=""http://code.google.com/p/pywebkitgtk/"" rel=""nofollow"">http://code.google.com/p/pywebkitgtk/</a> but it seems to need a X-server.</p>"	2011-01-11 19:30:01.58 UTC	4661828	"<p>You could try using <a href=""http://en.wikipedia.org/wiki/Xvfb"" rel=""nofollow"">Xvfb</a> to have a fake frame buffer, so you won't need to run X11 (though it may be a dependency of Xvfb on your system). Most rendering engines don't have a headless mode, so something like Xvfb is necessary to run them. I used this technique successfully using XULRunner to navigate web pages, though not from python.</p>"			2011-01-11 19:39:40.747 UTC
4661753	javascript|python	Executing JavaScript with Python without X	"<p>I want to parse a html-page that unfortunately requires JavaScript to show any content. In order to do so I use a small python-script that pulls the html-code of the page, but after that I have to execute the JavaScript in a DOM-context which seems pretty hard.</p>  <p>To make it even harder I want to use it in a server environment that has no X11-server.</p>  <p>Note: I already read about <a href=""http://code.google.com/p/pywebkitgtk/"" rel=""nofollow"">http://code.google.com/p/pywebkitgtk/</a> but it seems to need a X-server.</p>"	2011-01-11 19:30:01.58 UTC	4661823	"<p>You can simulate a browser environment using <a href=""http://www.envjs.com/"" rel=""nofollow"">EnvJS</a>.  However, in order to make use of it, you will have to embed some kind of JavaScript runtime (e.g. <a href=""http://www.mozilla.org/rhino/"" rel=""nofollow"">Rhino</a>) in your program (or spawn one as an external process).</p>"			2011-01-11 19:38:46.057 UTC
4661753	javascript|python	Executing JavaScript with Python without X	"<p>I want to parse a html-page that unfortunately requires JavaScript to show any content. In order to do so I use a small python-script that pulls the html-code of the page, but after that I have to execute the JavaScript in a DOM-context which seems pretty hard.</p>  <p>To make it even harder I want to use it in a server environment that has no X11-server.</p>  <p>Note: I already read about <a href=""http://code.google.com/p/pywebkitgtk/"" rel=""nofollow"">http://code.google.com/p/pywebkitgtk/</a> but it seems to need a X-server.</p>"	2011-01-11 19:30:01.58 UTC	4661916	"<p>This might help: <a href=""http://code.google.com/p/pyv8/"" rel=""nofollow"">http://code.google.com/p/pyv8/</a></p>"			2011-01-11 19:50:18.23 UTC
4661753	javascript|python	Executing JavaScript with Python without X	"<p>I want to parse a html-page that unfortunately requires JavaScript to show any content. In order to do so I use a small python-script that pulls the html-code of the page, but after that I have to execute the JavaScript in a DOM-context which seems pretty hard.</p>  <p>To make it even harder I want to use it in a server environment that has no X11-server.</p>  <p>Note: I already read about <a href=""http://code.google.com/p/pywebkitgtk/"" rel=""nofollow"">http://code.google.com/p/pywebkitgtk/</a> but it seems to need a X-server.</p>"	2011-01-11 19:30:01.58 UTC	4661850	"<p>I use VNC or Xvfb for this purpose, combined with Firefox. After experimenting with the two, I settled on <a href=""http://www.tightvnc.com/"" rel=""nofollow"">XTightVNC</a>. We use it to create screenshots on demand for various test purposes. It's nice to use one of these because you're executing it in an actual browser, same as a user would be (though most users probably won't be using the same OS as your server).</p>  <p>The handy thing about using VNC is that you can connect remotely to set up and test the browser when needed.</p>"			2011-01-11 19:42:50.183 UTC
4698220	javascript|python|django|django-templates	Django Template - Convert a Python list into a JavaScript object	"<p>I am working on a Django / Python website. I have a page where I want to display a table of search results. The list of results is passed in to the template as normal.</p>  <p>I also want to make this list of objects accessible to the JavaScript code.</p>  <p>My first solution was just create another view that returned <a href=""http://en.wikipedia.org/wiki/JSON"" rel=""noreferrer"">JSON</a> format. But each page load required calling the query twice. So then I tried only downloading the data using the JSON view and printing the table using JavaScript.</p>  <p>But this is also not desirable as now the presentation layer is mixed into the JavaScript code.</p>  <p>Is there a way to create a JavaScript object from the Python list as the page is rendered?</p>"	2011-01-15 05:38:07.567 UTC	31589682	"<p>Look <a href=""https://stackoverflow.com/a/15592905/1981384"">this answer</a> too.</p>  <p>But it isn't highload way. You must:</p>  <p>a) Create JSON files, place to disk or S3. In case is JSON static</p>  <p>b) If JSON is dynamic. Generate JSON on separately url (like API) in your app.</p>  <p>And, load by JS directly in any case. For example: </p>  <p><code>$.ajax('/get_json_file.json')</code></p>  <p>P.S.: Sorry for my English.</p>"			2015-07-23 14:01:52.757 UTC
4698220	javascript|python|django|django-templates	Django Template - Convert a Python list into a JavaScript object	"<p>I am working on a Django / Python website. I have a page where I want to display a table of search results. The list of results is passed in to the template as normal.</p>  <p>I also want to make this list of objects accessible to the JavaScript code.</p>  <p>My first solution was just create another view that returned <a href=""http://en.wikipedia.org/wiki/JSON"" rel=""noreferrer"">JSON</a> format. But each page load required calling the query twice. So then I tried only downloading the data using the JSON view and printing the table using JavaScript.</p>  <p>But this is also not desirable as now the presentation layer is mixed into the JavaScript code.</p>  <p>Is there a way to create a JavaScript object from the Python list as the page is rendered?</p>"	2011-01-15 05:38:07.567 UTC	4698226	"<p>How about a filter that dumps a Python value to JSON? Here's a sample implementation:</p>  <p><a href=""http://djangosnippets.org/snippets/201/"" rel=""noreferrer"">http://djangosnippets.org/snippets/201/</a></p>  <p>Since a JSON value also happens to be a valid right-hand side for a Javascript assignment, you can simply put something like...</p>  <pre><code>var results = {{results|jsonify}}; </code></pre>  <p>inside your script.</p>"			2011-01-15 05:40:01.233 UTC
4698220	javascript|python|django|django-templates	Django Template - Convert a Python list into a JavaScript object	"<p>I am working on a Django / Python website. I have a page where I want to display a table of search results. The list of results is passed in to the template as normal.</p>  <p>I also want to make this list of objects accessible to the JavaScript code.</p>  <p>My first solution was just create another view that returned <a href=""http://en.wikipedia.org/wiki/JSON"" rel=""noreferrer"">JSON</a> format. But each page load required calling the query twice. So then I tried only downloading the data using the JSON view and printing the table using JavaScript.</p>  <p>But this is also not desirable as now the presentation layer is mixed into the JavaScript code.</p>  <p>Is there a way to create a JavaScript object from the Python list as the page is rendered?</p>"	2011-01-15 05:38:07.567 UTC	4699069	"<p><strong>Solution</strong></p>  <p>I created a custom template filter, see <em><a href=""http://docs.djangoproject.com/en/dev/howto/custom-template-tags/"" rel=""noreferrer"">custom template tags and filters</a></em>.</p>  <pre><code>from django.core.serializers import serialize from django.db.models.query import QuerySet from django.utils import simplejson from django.utils.safestring import mark_safe from django.template import Library  register = Library()  def jsonify(object):     if isinstance(object, QuerySet):         return mark_safe(serialize('json', object))     return mark_safe(simplejson.dumps(object))  register.filter('jsonify', jsonify) jsonify.is_safe = True    </code></pre>  <p>The calls to mark_safe are important. Otherwise Django will escape it.</p>  <p>In the template:</p>  <pre><code>//Without template filter (you'll need to serialise in the view) var data = jQuery.parseJSON('{{ json_data|safe }}'); alert(data.length);  //Using the template filter     var data2 = jQuery.parseJSON('{{ record_list|jsonify }}'); alert(data2.length); </code></pre>  <p>Note the single quotes around the template tag.</p>  <p>Although my next question would be - is it REALLY safe?</p>  <h2>Update</h2>  <p>An updated version working in django 1.8 of the above template tag that also handles being passed a flat values list, ie. values_list('myfield', flat=True):</p>  <pre><code>from django.core.serializers import serialize from django.db.models.query import QuerySet, ValuesListQuerySet from django.template import Library  import json  register = Library()  @register.filter( is_safe=True ) def jsonify(object):      if isinstance(object, ValuesListQuerySet):         return json.dumps(list(object))     if isinstance(object, QuerySet):         return serialize('json', object)     return json.dumps(object) </code></pre>"			2011-01-15 10:23:08.603 UTC
4698220	javascript|python|django|django-templates	Django Template - Convert a Python list into a JavaScript object	"<p>I am working on a Django / Python website. I have a page where I want to display a table of search results. The list of results is passed in to the template as normal.</p>  <p>I also want to make this list of objects accessible to the JavaScript code.</p>  <p>My first solution was just create another view that returned <a href=""http://en.wikipedia.org/wiki/JSON"" rel=""noreferrer"">JSON</a> format. But each page load required calling the query twice. So then I tried only downloading the data using the JSON view and printing the table using JavaScript.</p>  <p>But this is also not desirable as now the presentation layer is mixed into the JavaScript code.</p>  <p>Is there a way to create a JavaScript object from the Python list as the page is rendered?</p>"	2011-01-15 05:38:07.567 UTC	52651795	"<h1>New in Django 2.1: <code>json_script</code></h1>  <p>Django 2.1 introduced a new template tag: <a href=""https://docs.djangoproject.com/en/stable/ref/templates/builtins/#json-script"" rel=""noreferrer""><code>json_script</code></a>. It is almost exactly what you are looking for, it might be even better. It converts a Python value into JSON, wrapped in a <code>&lt;script&gt;</code> tag. So this template:</p>  <pre><code>{{ value|json_script:""foobar"" }} </code></pre>  <p>... would produce this:</p>  <pre><code>&lt;script id=""foobar"" type=""application/json""&gt;{""example"": ""example""}&lt;/script&gt; </code></pre>  <p>This is not a normal Javascript <code>&lt;script&gt;</code> tag, it doesn't run, it's just JSON. If you want to access the contents in your Javascript, you can do so like this:</p>  <pre><code>var value = JSON.parse(document.getElementById('foobar').textContent); </code></pre>  <p>This tag has been coded so that it is properly escaped, a string with <code>&lt;/script&gt;</code> in it won't break anything, for instance.</p>"			2018-10-04 16:45:50.283 UTC
4720342	javascript|python|urllib2	Python: Processing Javascript with urllib2?	"<p>I am coding a HTML scraper which gets values from a table on a website. I also need to grab the URL of an image, but the problem is this image is dynamically generated via javascript - and when i get contents of the website via urllib, the Javascript does not run or show in the resulting HTML.</p>  <p>Is there any way to enable Javascript to run on pages which are accessed via urllib?</p>"	2011-01-18 03:55:50.223 UTC	4721276	"<p>No, you'd need some sort of JS interpreter for that. There might be Python-Browser integrations to help parsing this kind of page.</p>"			2011-01-18 06:54:22.487 UTC
4737721	javascript|python|encryption|pgp	public private key solution for javascript and python	<p>I'm looking for a public private key solution that I can use with a javascript client and python backend. The aim is to send data encrypted from the client to the server... Are the any solutions? Thanks for hints.</p>	2011-01-19 16:17:12.593 UTC	4738545	"<p>Use SSL for your connections to the server. Probably the easiest way to do that is to use HTTP for communication and also to run a proxy (say, Apache) on the server that can do HTTPS and forwards requests to the actual server application.</p>"			2011-01-19 17:28:43.25 UTC
4765298	javascript|python	python and javascript with html generation	"<p>On a website that I manage, we have JSON files which contain page data. We then create the page using this JSON.</p>  <p>The data looks roughly like this (except a lot more complex).</p>  <pre><code>[   {""title"": ""Hello world"", ""content"": ""World, hello to you!""},   {""title"": ""Hello world Part II"", ""content"": ""The sequel to hello world.""},   ... ] </code></pre>  <p>This data is then parsed into HTML. Now, here lies the issue: we need two versions of the HTML.</p>  <p>One needs to be static, outputted in the format of <code>file-0.html</code> which would be formatted with a title of <code>Hello World</code> and content of <code>World, hello to you!</code> and <code>file-1.html</code> (title=<code>Hello World Part II</code>, content=<code>The sequel to hello world</code>).</p>  <p>The second needs to be just a plain page <code>file-all.html</code> which includes a JavaScript that pulls the JSON via AJAX when its needed and creates a container for each page which includes subpages that have the content/titles for everything in the JSON.</p>  <p>Right now, we use Python to generate the HTML for the <code>file-0.html</code> static pages, and then JavaScript for the AJAX pages. While this works, it means there is a lot of code duplication for a pretty small project—every time we want to change the class of the <code>&lt;h1&gt;</code> title is wrapped in, we have to change two places with slightly different syntax.</p>  <p>Is there any good way of fixing this issue, so that all the code for generating page (or as much as possible) is in one language? (This would probably have to be JavaScript, since bandwidth is an issue—we'd like to avoid transferring <code>HTML</code> via AJAX if possible.)</p>"	2011-01-22 00:31:32.413 UTC	4765350	"<p>You can use the server to render the page and grab that with an AJAX response. While this avoids code duplication, it might be less efficient since you have to query the server to render each page, rather than making the client do it themselves (this might not be too much of an issue, though). It shouldn't take up too much bandwidth, since it's just HTML (unless you're throwing in templates from all sorts of places). This approach, of course, only works if you're using a dynamic web site.</p>  <p>Alternatively, you can implement all the rendering logic in JavaScript and use something like <a href=""http://code.google.com/p/pyv8/"" rel=""nofollow"">PyV8</a> to run it from within Python. I question the efficiency (and sanity) of this, though.</p>"			2011-01-22 00:39:20.04 UTC
4765298	javascript|python	python and javascript with html generation	"<p>On a website that I manage, we have JSON files which contain page data. We then create the page using this JSON.</p>  <p>The data looks roughly like this (except a lot more complex).</p>  <pre><code>[   {""title"": ""Hello world"", ""content"": ""World, hello to you!""},   {""title"": ""Hello world Part II"", ""content"": ""The sequel to hello world.""},   ... ] </code></pre>  <p>This data is then parsed into HTML. Now, here lies the issue: we need two versions of the HTML.</p>  <p>One needs to be static, outputted in the format of <code>file-0.html</code> which would be formatted with a title of <code>Hello World</code> and content of <code>World, hello to you!</code> and <code>file-1.html</code> (title=<code>Hello World Part II</code>, content=<code>The sequel to hello world</code>).</p>  <p>The second needs to be just a plain page <code>file-all.html</code> which includes a JavaScript that pulls the JSON via AJAX when its needed and creates a container for each page which includes subpages that have the content/titles for everything in the JSON.</p>  <p>Right now, we use Python to generate the HTML for the <code>file-0.html</code> static pages, and then JavaScript for the AJAX pages. While this works, it means there is a lot of code duplication for a pretty small project—every time we want to change the class of the <code>&lt;h1&gt;</code> title is wrapped in, we have to change two places with slightly different syntax.</p>  <p>Is there any good way of fixing this issue, so that all the code for generating page (or as much as possible) is in one language? (This would probably have to be JavaScript, since bandwidth is an issue—we'd like to avoid transferring <code>HTML</code> via AJAX if possible.)</p>"	2011-01-22 00:31:32.413 UTC	4765513	<p>You have two good options:</p>  <ul> <li><p>Write the page generation logic in a template language like Mustache (http://mustache.github.com/).  Then you can compile those templates down to Python (for the server side) and Javascript (for the client).  The data consumed by both versions is the same and you only have to maintain one template definition.</p></li> <li><p>Write everything in Javascript and execute that JS on the server.  There are at least two good server-side JS engines: V8 and Apache Rhino.  </p></li> </ul>			2011-01-22 01:16:00.257 UTC
4806816	javascript|python|hyperlink|href	python goto link generated by javascript	"<p>everybody! i need to get some data from website, that generate its content with javascript. somehow, with ClientForm module help, i could authorize on the site and get needed data by passing needed form values to search lists. but than, i get a few pages of results. and i need to loop over that pages, saving them. but the point is that 'NEXT' page button looked like </p>  <pre><code>a onclick=""if(typeof jsfcljs == 'function') {                 jsfcljs(document.getElementById('nestedView:j_id_id8pc10'),                               {'nestedView:j_id_id8pc10:next':'nestedView:j_id_id8pc10:next'},                    '');            }            return false"" href=""#"" id=""nestedView:j_id_id8pc10:next""&gt;next </code></pre>  <p>how could i move on this link with python?</p>"	2011-01-26 16:10:24.817 UTC	4808553	"<p>maybe i can simulate a POST request (capture it from Live HTTP Headers in firefox, for example) and navigate on site such way? cause the main point is to get data...and steps to get it are similar (log in, fill 2 search forms, loop through results pages)</p>"			2011-01-26 18:42:32 UTC
4806816	javascript|python|hyperlink|href	python goto link generated by javascript	"<p>everybody! i need to get some data from website, that generate its content with javascript. somehow, with ClientForm module help, i could authorize on the site and get needed data by passing needed form values to search lists. but than, i get a few pages of results. and i need to loop over that pages, saving them. but the point is that 'NEXT' page button looked like </p>  <pre><code>a onclick=""if(typeof jsfcljs == 'function') {                 jsfcljs(document.getElementById('nestedView:j_id_id8pc10'),                               {'nestedView:j_id_id8pc10:next':'nestedView:j_id_id8pc10:next'},                    '');            }            return false"" href=""#"" id=""nestedView:j_id_id8pc10:next""&gt;next </code></pre>  <p>how could i move on this link with python?</p>"	2011-01-26 16:10:24.817 UTC	4807825	"<p>Your options are essentially:</p>  <ol> <li>Work out what the javascript is doing, and try to copy it in Python, so that the server sends you the same data. If you're not already using it, Firebug is the sort of thing you'll need.</li> <li>Use a browser control framework, such as Selenium RC, to interact with a browser using Python.</li> </ol>  <p>Generally, option 1 is more straightforward unless you're already familiar with using a framework to control a browser, or the javascript is really, horribly hard to follow.</p>  <p>Oh, and 3: Write a javascript+DOM engine in Python. (No, that's a joke. There's a reason one doesn't already exist.)</p>"			2011-01-26 17:34:27.727 UTC
4825509	javascript|python|regex|web-scraping|scraper	Extracting data from JavaScript (Python Scraper)	"<p>I'm currently using a fusion of urllib2, pyquery, and json to scrape a site, and now I find that I need to extract some data from JavaScript.  One thought would be to use a JavaScript engine (like V8), but that seems like overkill for what I need.  I would use regular expressions, but the expression for this seems way to complex.</p>  <p>JavaScript:</p>  <pre><code>(function(){DOM.appendContent(this, HTML(""&lt;html&gt;""));;}) </code></pre>  <p>I need to extract the <code>&lt;html&gt;</code>, but I'm not entirely sure how to do so.  The <code>&lt;html&gt;</code> itself can contain basically every character under the sun, so <code>[^""]</code> won't work.</p>  <p>Any thoughts?</p>"	2011-01-28 06:28:45.893 UTC	4825931	"<p>If every occurance of <code>""</code> inside the html code would be escaped by using <code>\""</code> (it is a JavaScript string after all), you could use</p>  <pre><code>HTML\(""((?:\\""|.)*?)""\) </code></pre>  <p>to get the parameter to HTML into the first capturing group.</p>  <p>Note that this Regex is not yet escaped to be a Javascript String itself.</p>"			2011-01-28 07:38:55.263 UTC
4825509	javascript|python|regex|web-scraping|scraper	Extracting data from JavaScript (Python Scraper)	"<p>I'm currently using a fusion of urllib2, pyquery, and json to scrape a site, and now I find that I need to extract some data from JavaScript.  One thought would be to use a JavaScript engine (like V8), but that seems like overkill for what I need.  I would use regular expressions, but the expression for this seems way to complex.</p>  <p>JavaScript:</p>  <pre><code>(function(){DOM.appendContent(this, HTML(""&lt;html&gt;""));;}) </code></pre>  <p>I need to extract the <code>&lt;html&gt;</code>, but I'm not entirely sure how to do so.  The <code>&lt;html&gt;</code> itself can contain basically every character under the sun, so <code>[^""]</code> won't work.</p>  <p>Any thoughts?</p>"	2011-01-28 06:28:45.893 UTC	4826560	"<p>Why regex? Can't you just use two substrings as you know how many characters you want to trim off the beginning and end?</p>  <pre><code>string[42:-7] </code></pre>  <p>As well as being quicker than a regex, it then doesn't matter if quotes inside <code>&lt;html&gt;</code> are escaped or not.</p>"			2011-01-28 09:17:59.427 UTC
4846861	javascript|jquery	"Does anyone find problems with python-slimmer, the javascript minifier?"	"<p>When I don't minify, my site works. When I run python slimmer's js minifier, I get ""unexpected"" errors all over the place.</p>  <p>My scripts are basically just Jquery plugsin...</p>  <p>Look at my scripts:</p>  <pre><code>&lt;script type=""text/javascript"" src=""http://s3.amazonaws.com/mosaic_media/js/jquery-1.4.4.js""&gt;&lt;/script&gt;  &lt;script type=""text/javascript"" src=""http://s3.amazonaws.com/mosaic_media/js/json2.js""&gt;&lt;/script&gt;  &lt;script type=""text/javascript"" src=""http://s3.amazonaws.com/mosaic_media/js/plugins/jquery-ui-1.8.7.custom/development-bundle/ui/jquery-ui-1.8.7.custom.js""&gt;&lt;/script&gt;  &lt;script type=""text/javascript"" src=""http://s3.amazonaws.com/mosaic_media/js/plugins/jquery-msdropdown/js/uncompressed.jquery.dd.js""&gt;&lt;/script&gt;  &lt;script type=""text/javascript"" src=""http://s3.amazonaws.com/mosaic_media/js/plugins/jquery.scrollTo-1.4.2/jquery.scrollTo.js""&gt;&lt;/script&gt;  &lt;script type=""text/javascript"" src=""http://s3.amazonaws.com/mosaic_media/js/plugins/jquery-masonry/jquery.masonry.js""&gt;&lt;/script&gt;  &lt;script type=""text/javascript"" src=""http://s3.amazonaws.com/mosaic_media/js/plugins/jquery-jeditable/jquery.jeditable.js""&gt;&lt;/script&gt;  &lt;script type=""text/javascript"" src=""http://s3.amazonaws.com/mosaic_media/js/plugins/jquery.growfield2.js""&gt;&lt;/script&gt;  &lt;script type=""text/javascript"" src=""http://s3.amazonaws.com/mosaic_media/js/plugins/jquery.placeholder.js""&gt;&lt;/script&gt;  &lt;script type=""text/javascript"" src=""http://s3.amazonaws.com/mosaic_media/js/plugins/jquery.color.js""&gt;&lt;/script&gt;  &lt;script type=""text/javascript"" src=""http://s3.amazonaws.com/mosaic_media/js/plugins/jquery.fancybox-1.3.4/fancybox/jquery.fancybox-1.3.4.js""&gt;&lt;/script&gt;  &lt;script type=""text/javascript"" src=""http://s3.amazonaws.com/mosaic_media/js/plugins/tipsy/src/javascripts/jquery.tipsy.js""&gt;&lt;/script&gt;  &lt;script type=""text/javascript"" src=""http://s3.amazonaws.com/mosaic_media/js/template/alertbar.js""&gt;&lt;/script&gt;  &lt;script type=""text/javascript"" src=""http://s3.amazonaws.com/mosaic_media/js/fileuploader.js"" type=""text/javascript""&gt;&lt;/script&gt;  </code></pre>  <p>Python-slimmer minified them, and now they don't work.</p>  <pre><code>Uncaught SyntaxError: Missing catch or finally after try json2.js:30Uncaught SyntaxError: Unexpected token . jquery-ui-1.8.7.custom.js:5Uncaught SyntaxError: Unexpected token . jquery.scrollTo.js:1Uncaught SyntaxError: Unexpected end of input jquery.masonry.js:1Uncaught SyntaxError: Unexpected end of input jquery.jeditable.js:1Uncaught SyntaxError: Unexpected end of input jquery.growfield2.js:1Uncaught SyntaxError: Unexpected end of input jquery.placeholder.js:1Uncaught SyntaxError: Unexpected end of input jquery.color.js:1Uncaught SyntaxError: Unexpected end of input jquery.fancybox-1.3.4.js:1Uncaught SyntaxError: Unexpected end of input jquery.tipsy.js:1Uncaught SyntaxError: Unexpected end of input alertbar.js:1Uncaught ReferenceError: $ is not defined fileuploader.js:2Uncaught SyntaxError: Unexpected token . detail.js:1Uncaught SyntaxError: Unexpected identifier </code></pre>"	2011-01-31 01:21:32.443 UTC	4846896	"<p>I recommend you take a look at webassets: <a href=""https://github.com/miracle2k/webassets"" rel=""nofollow"">https://github.com/miracle2k/webassets</a></p>  <p>It includes a YUI compressor filter so you can generate minified files.</p>"			2011-01-31 01:28:21.487 UTC
4856717	javascript|python|functional-programming|transpose	Javascript equivalent of Python's zip function	"<p>Is there a javascript equivalent of Python's zip function?  That is, given multiple arrays of equal lengths create an array of pairs.</p> <p>For instance, if I have three arrays that look like this:</p> <pre class=""lang-js prettyprint-override""><code>var array1 = [1, 2, 3]; var array2 = ['a','b','c']; var array3 = [4, 5, 6]; </code></pre> <p>The output array should be:</p> <pre class=""lang-js prettyprint-override""><code>var outputArray = [[1,'a',4], [2,'b',5], [3,'c',6]] </code></pre>"	2011-01-31 22:08:11.677 UTC	50027100	"<p>If you are fine with ES6:</p>  <pre><code>const zip = (arr,...arrs) =&gt;(                             arr.map(                               (v,i) =&gt; arrs.reduce((a,arr)=&gt;[...a, arr[i]], [v]))) </code></pre>"			2018-04-25 16:25:56.28 UTC
4856717	javascript|python|functional-programming|transpose	Javascript equivalent of Python's zip function	"<p>Is there a javascript equivalent of Python's zip function?  That is, given multiple arrays of equal lengths create an array of pairs.</p> <p>For instance, if I have three arrays that look like this:</p> <pre class=""lang-js prettyprint-override""><code>var array1 = [1, 2, 3]; var array2 = ['a','b','c']; var array3 = [4, 5, 6]; </code></pre> <p>The output array should be:</p> <pre class=""lang-js prettyprint-override""><code>var outputArray = [[1,'a',4], [2,'b',5], [3,'c',6]] </code></pre>"	2011-01-31 22:08:11.677 UTC	48293566	"<p>Modern ES6 example with a generator:</p>  <pre><code>function *zip (...iterables){     let iterators = iterables.map(i =&gt; i[Symbol.iterator]() )     while (true) {         let results = iterators.map(iter =&gt; iter.next() )         if (results.some(res =&gt; res.done) ) return         else yield results.map(res =&gt; res.value )     } } </code></pre>  <p>First, we get a list of iterables as <code>iterators</code>. This usually happens transparently, but here we do it explicitly, as we yield step-by-step until one of them is exhausted. We check if any of results (using the <code>.some()</code> method) in the given array is exhausted, and if so, we break the while loop.</p>"			2018-01-17 04:23:25.957 UTC
4856717	javascript|python|functional-programming|transpose	Javascript equivalent of Python's zip function	"<p>Is there a javascript equivalent of Python's zip function?  That is, given multiple arrays of equal lengths create an array of pairs.</p> <p>For instance, if I have three arrays that look like this:</p> <pre class=""lang-js prettyprint-override""><code>var array1 = [1, 2, 3]; var array2 = ['a','b','c']; var array3 = [4, 5, 6]; </code></pre> <p>The output array should be:</p> <pre class=""lang-js prettyprint-override""><code>var outputArray = [[1,'a',4], [2,'b',5], [3,'c',6]] </code></pre>"	2011-01-31 22:08:11.677 UTC	49035018	"<p>A variation of the <a href=""https://stackoverflow.com/a/48293566/989121"">lazy generator solution</a>:</p>  <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-js lang-js prettyprint-override""><code>function* iter(it) {     yield* it; }  function* zip(...its) {     its = its.map(iter);     while (true) {         let rs = its.map(it =&gt; it.next());         if (rs.some(r =&gt; r.done))             return;         yield rs.map(r =&gt; r.value);     } }  for (let r of zip([1,2,3], [4,5,6,7], [8,9,0,11,22]))     console.log(r.join())  // the only change for ""longest"" is some -&gt; every  function* zipLongest(...its) {     its = its.map(iter);     while (true) {         let rs = its.map(it =&gt; it.next());         if (rs.every(r =&gt; r.done))             return;         yield rs.map(r =&gt; r.value);     } }  for (let r of zipLongest([1,2,3], [4,5,6,7], [8,9,0,11,22]))     console.log(r.join())</code></pre> </div> </div> </p>  <p>And this is the python's classic ""n-group"" idiom <code>zip(*[iter(a)]*n)</code>:</p>  <pre><code>triples = [...zip(...Array(3).fill(iter(a)))] </code></pre>"			2018-02-28 17:08:53.75 UTC
4856717	javascript|python|functional-programming|transpose	Javascript equivalent of Python's zip function	"<p>Is there a javascript equivalent of Python's zip function?  That is, given multiple arrays of equal lengths create an array of pairs.</p> <p>For instance, if I have three arrays that look like this:</p> <pre class=""lang-js prettyprint-override""><code>var array1 = [1, 2, 3]; var array2 = ['a','b','c']; var array3 = [4, 5, 6]; </code></pre> <p>The output array should be:</p> <pre class=""lang-js prettyprint-override""><code>var outputArray = [[1,'a',4], [2,'b',5], [3,'c',6]] </code></pre>"	2011-01-31 22:08:11.677 UTC	48894868	"<p>This shaves a line off <a href=""https://stackoverflow.com/users/9180922/ddi"">Ddi</a>'s iterator-based answer:</p>  <pre><code>function* zip(...toZip) {   const iterators = toZip.map((arg) =&gt; arg[Symbol.iterator]());   const next = () =&gt; toZip = iterators.map((iter) =&gt; iter.next());   while (next().every((item) =&gt; !item.done)) {     yield toZip.map((item) =&gt; item.value);   } } </code></pre>"			2018-02-20 21:55:02.64 UTC
4856717	javascript|python|functional-programming|transpose	Javascript equivalent of Python's zip function	"<p>Is there a javascript equivalent of Python's zip function?  That is, given multiple arrays of equal lengths create an array of pairs.</p> <p>For instance, if I have three arrays that look like this:</p> <pre class=""lang-js prettyprint-override""><code>var array1 = [1, 2, 3]; var array2 = ['a','b','c']; var array3 = [4, 5, 6]; </code></pre> <p>The output array should be:</p> <pre class=""lang-js prettyprint-override""><code>var outputArray = [[1,'a',4], [2,'b',5], [3,'c',6]] </code></pre>"	2011-01-31 22:08:11.677 UTC	55648257	"<p>You can make utility function by using ES6.</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-js lang-js prettyprint-override""><code>console.json = obj =&gt; console.log(JSON.stringify(obj));  const zip = (arr, ...arrs) =&gt;   arr.map((val, i) =&gt; arrs.reduce((a, arr) =&gt; [...a, arr[i]], [val]));  // Example  const array1 = [1, 2, 3]; const array2 = ['a','b','c']; const array3 = [4, 5, 6];  console.json(zip(array1, array2));         // [[1,""a""],[2,""b""],[3,""c""]] console.json(zip(array1, array2, array3)); // [[1,""a"",4],[2,""b"",5],[3,""c"",6]]</code></pre> </div> </div> </p> <p>However, in above solution length of the first array defines the length of the output array.</p> <p>Here is the solution in which you have more control over it. It's bit complex but worth it.</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-js lang-js prettyprint-override""><code>function _zip(func, args) {   const iterators = args.map(arr =&gt; arr[Symbol.iterator]());   let iterateInstances = iterators.map((i) =&gt; i.next());   ret = []   while(iterateInstances[func](it =&gt; !it.done)) {     ret.push(iterateInstances.map(it =&gt; it.value));     iterateInstances = iterators.map((i) =&gt; i.next());   }   return ret; } const array1 = [1, 2, 3]; const array2 = ['a','b','c']; const array3 = [4, 5, 6];  const zipShort = (...args) =&gt; _zip('every', args);  const zipLong = (...args) =&gt; _zip('some', args);  console.log(zipShort(array1, array2, array3)) // [[1, 'a', 4], [2, 'b', 5], [3, 'c', 6]] console.log(zipLong([1,2,3], [4,5,6, 7])) // [ //  [ 1, 4 ], //  [ 2, 5 ], //  [ 3, 6 ], //  [ undefined, 7 ]]</code></pre> </div> </div> </p>"			2019-04-12 09:13:38.69 UTC
4856717	javascript|python|functional-programming|transpose	Javascript equivalent of Python's zip function	"<p>Is there a javascript equivalent of Python's zip function?  That is, given multiple arrays of equal lengths create an array of pairs.</p> <p>For instance, if I have three arrays that look like this:</p> <pre class=""lang-js prettyprint-override""><code>var array1 = [1, 2, 3]; var array2 = ['a','b','c']; var array3 = [4, 5, 6]; </code></pre> <p>The output array should be:</p> <pre class=""lang-js prettyprint-override""><code>var outputArray = [[1,'a',4], [2,'b',5], [3,'c',6]] </code></pre>"	2011-01-31 22:08:11.677 UTC	49705914	"<p>Along other Python-like functions, <a href=""https://www.npmjs.com/package/pythonic"" rel=""noreferrer""><code>pythonic</code></a> offers a <code>zip</code> function, with the extra benefit of returning a lazy evaluated <a href=""https://github.com/assister-ai/pythonic/blob/master/index.js#L1"" rel=""noreferrer""><code>Iterator</code></a>, similar to the behaviour of its <a href=""https://docs.python.org/3.8/library/functions.html#zip"" rel=""noreferrer"">Python counterpart</a>:</p>  <pre><code>import {zip, zipLongest} from 'pythonic';  const arr1 = ['a', 'b']; const arr2 = ['c', 'd', 'e']; for (const [first, second] of zip(arr1, arr2))     console.log(`first: ${first}, second: ${second}`); // first: a, second: c // first: b, second: d  for (const [first, second] of zipLongest(arr1, arr2))     console.log(`first: ${first}, second: ${second}`); // first: a, second: c // first: b, second: d // first: undefined, second: e  // unzip const [arrayFirst, arraySecond] = [...zip(...zip(arr1, arr2))]; </code></pre>  <p><strong><em>Disclosure</em></strong> I'm author and maintainer of Pythonic</p>"			2018-04-07 09:34:40.163 UTC
4856717	javascript|python|functional-programming|transpose	Javascript equivalent of Python's zip function	"<p>Is there a javascript equivalent of Python's zip function?  That is, given multiple arrays of equal lengths create an array of pairs.</p> <p>For instance, if I have three arrays that look like this:</p> <pre class=""lang-js prettyprint-override""><code>var array1 = [1, 2, 3]; var array2 = ['a','b','c']; var array3 = [4, 5, 6]; </code></pre> <p>The output array should be:</p> <pre class=""lang-js prettyprint-override""><code>var outputArray = [[1,'a',4], [2,'b',5], [3,'c',6]] </code></pre>"	2011-01-31 22:08:11.677 UTC	41397368	"<p>Python has two function to zip sequences: zip and itertools.zip_longest. An implementation in Javascript for the same functionality is this:</p> <p><strong>Implementation of Python`s zip on JS/ES6</strong></p> <pre><code>const zip = (...arrays) =&gt; {     const length = Math.min(...arrays.map(arr =&gt; arr.length));     return Array.from({ length }, (value, index) =&gt; arrays.map((array =&gt; array[index]))); }; </code></pre> <p>Results in:</p> <pre><code>console.log(zip(     [1, 2, 3, 'a'],     [667, false, -378, '337'],     [111],     [11, 221] )); </code></pre> <blockquote> <p>[ [ 1, 667, 111, 11 ] ]</p> </blockquote> <pre><code>console.log(zip(     [1, 2, 3, 'a'],     [667, false, -378, '337'],     [111, 212, 323, 433, '1111'] )); </code></pre> <blockquote> <p>[ [ 1, 667, 111 ],   [ 2, false, 212 ],   [ 3, -378, 323 ],   [ 'a', '337', 433 ] ]</p> </blockquote> <pre><code>console.log(zip(     [1, 2, 3, 'a'],     [667, false, -378, '337'],     [111],     [] )); </code></pre> <blockquote> <p>[]</p> </blockquote> <p><strong>Implementation of Python`s zip_longest on JS/ES6</strong></p> <p>(<a href=""https://docs.python.org/3.5/library/itertools.html?highlight=zip_longest#itertools.zip_longest"" rel=""nofollow noreferrer"">https://docs.python.org/3.5/library/itertools.html?highlight=zip_longest#itertools.zip_longest</a>)</p> <pre><code>const zipLongest = (placeholder = undefined, ...arrays) =&gt; {     const length = Math.max(...arrays.map(arr =&gt; arr.length));     return Array.from(         { length }, (value, index) =&gt; arrays.map(             array =&gt; array.length - 1 &gt;= index ? array[index] : placeholder         )     ); }; </code></pre> <p>Results:</p> <pre><code>console.log(zipLongest(     undefined,     [1, 2, 3, 'a'],     [667, false, -378, '337'],     [111],     [] )); </code></pre> <blockquote> <p>[ [ 1, 667, 111, undefined ],   [ 2, false, undefined, undefined ],<br /> [ 3, -378, undefined, undefined ],   [ 'a', '337', undefined, undefined ] ]</p> </blockquote> <pre><code>console.log(zipLongest(     null,     [1, 2, 3, 'a'],     [667, false, -378, '337'],     [111],     [] )); </code></pre> <blockquote> <p>[ [ 1, 667, 111, null ],   [ 2, false, null, null ],   [ 3, -378, null, null ],   [ 'a', '337', null, null ] ]</p> </blockquote> <pre><code>console.log(zipLongest(     'Is None',     [1, 2, 3, 'a'],     [667, false, -378, '337'],     [111],     [] )); </code></pre> <blockquote> <p>[ [ 1, 667, 111, 'Is None' ],   [ 2, false, 'Is None', 'Is None' ],<br /> [ 3, -378, 'Is None', 'Is None' ],   [ 'a', '337', 'Is None', 'Is None' ] ]</p> </blockquote>"			2016-12-30 13:50:42.18 UTC
4856717	javascript|python|functional-programming|transpose	Javascript equivalent of Python's zip function	"<p>Is there a javascript equivalent of Python's zip function?  That is, given multiple arrays of equal lengths create an array of pairs.</p> <p>For instance, if I have three arrays that look like this:</p> <pre class=""lang-js prettyprint-override""><code>var array1 = [1, 2, 3]; var array2 = ['a','b','c']; var array3 = [4, 5, 6]; </code></pre> <p>The output array should be:</p> <pre class=""lang-js prettyprint-override""><code>var outputArray = [[1,'a',4], [2,'b',5], [3,'c',6]] </code></pre>"	2011-01-31 22:08:11.677 UTC	70413421	"<p>Below is a fast and efficient way of doing this, using <a href=""https://github.com/vitaly-t/iter-ops"" rel=""nofollow noreferrer"">iter-ops</a> library, operator <a href=""https://vitaly-t.github.io/iter-ops/index.html#zip"" rel=""nofollow noreferrer"">zip</a>:</p> <pre class=""lang-js prettyprint-override""><code>const {pipe, zip} = require('iter-ops');  const i = pipe(array1, zip(array2, array3));  console.log(...i); //=&gt; [ 1, 'a', 4 ] [ 2, 'b', 5 ] [ 3, 'c', 6 ] </code></pre> <p>The library processes all inputs as iterables, so they are iterated over just once. And it can handle, in the same way, all types of iterable objects - <code>Iterable</code>, <code>AsyncIterable</code>, <code>Iterator</code>, <code>AsyncIterator</code>.</p> <hr /> <p>P.S. I'm the author of <a href=""https://github.com/vitaly-t/iter-ops"" rel=""nofollow noreferrer"">iter-ops</a>.</p>"			2021-12-19 16:46:02.887 UTC
4856717	javascript|python|functional-programming|transpose	Javascript equivalent of Python's zip function	"<p>Is there a javascript equivalent of Python's zip function?  That is, given multiple arrays of equal lengths create an array of pairs.</p> <p>For instance, if I have three arrays that look like this:</p> <pre class=""lang-js prettyprint-override""><code>var array1 = [1, 2, 3]; var array2 = ['a','b','c']; var array3 = [4, 5, 6]; </code></pre> <p>The output array should be:</p> <pre class=""lang-js prettyprint-override""><code>var outputArray = [[1,'a',4], [2,'b',5], [3,'c',6]] </code></pre>"	2011-01-31 22:08:11.677 UTC	7260572	"<p>Check out the library <a href=""http://underscorejs.org/"" rel=""noreferrer"">Underscore</a>.</p> <blockquote> <p>Underscore provides over 100 functions that support both your favorite workaday functional helpers: map, filter, invoke — as well as more specialized goodies: function binding, javascript templating, creating quick indexes, deep equality testing, and so on.</p> </blockquote> <p>– Say the people who made it</p> <p>I recently started using it specifically for the <a href=""http://underscorejs.org/#zip"" rel=""noreferrer""><code>zip()</code></a> function and it has left a great first impression.  I am using jQuery and CoffeeScript, and it just goes perfectly with them.  Underscore picks up right where they leave off and so far it hasn't let me down.  Oh by the way, it's only 3kb minified.</p> <p>Check it out:</p> <pre><code>_.zip(['moe', 'larry', 'curly'], [30, 40, 50], [true, false, false]); // returns [[&quot;moe&quot;, 30, true], [&quot;larry&quot;, 40, false], [&quot;curly&quot;, 50, false]] </code></pre>"			2011-08-31 16:53:42.207 UTC
4856717	javascript|python|functional-programming|transpose	Javascript equivalent of Python's zip function	"<p>Is there a javascript equivalent of Python's zip function?  That is, given multiple arrays of equal lengths create an array of pairs.</p> <p>For instance, if I have three arrays that look like this:</p> <pre class=""lang-js prettyprint-override""><code>var array1 = [1, 2, 3]; var array2 = ['a','b','c']; var array3 = [4, 5, 6]; </code></pre> <p>The output array should be:</p> <pre class=""lang-js prettyprint-override""><code>var outputArray = [[1,'a',4], [2,'b',5], [3,'c',6]] </code></pre>"	2011-01-31 22:08:11.677 UTC	62740850	"<p><strong>ES2020 shortest variant:</strong></p> <pre><code>function * zip(arr1, arr2, i = 0) {   while(arr1[i] || arr2[i]) yield [arr1[i], arr2[i++]].filter(x =&gt; !!x); }      [ ...zip(arr1, arr2) ]  // result </code></pre>"			2020-07-05 12:43:18.85 UTC
4856717	javascript|python|functional-programming|transpose	Javascript equivalent of Python's zip function	"<p>Is there a javascript equivalent of Python's zip function?  That is, given multiple arrays of equal lengths create an array of pairs.</p> <p>For instance, if I have three arrays that look like this:</p> <pre class=""lang-js prettyprint-override""><code>var array1 = [1, 2, 3]; var array2 = ['a','b','c']; var array3 = [4, 5, 6]; </code></pre> <p>The output array should be:</p> <pre class=""lang-js prettyprint-override""><code>var outputArray = [[1,'a',4], [2,'b',5], [3,'c',6]] </code></pre>"	2011-01-31 22:08:11.677 UTC	71977122	"<p>Here is my solution</p> <pre><code>let zip = (a, b) =&gt; (a.length &lt; b.length   ? a.map((e, i) =&gt; [e, b[i]])   : b.map((e, i) =&gt; [a[i], e])) </code></pre>"			2022-04-23 05:32:52.747 UTC
4856717	javascript|python|functional-programming|transpose	Javascript equivalent of Python's zip function	"<p>Is there a javascript equivalent of Python's zip function?  That is, given multiple arrays of equal lengths create an array of pairs.</p> <p>For instance, if I have three arrays that look like this:</p> <pre class=""lang-js prettyprint-override""><code>var array1 = [1, 2, 3]; var array2 = ['a','b','c']; var array3 = [4, 5, 6]; </code></pre> <p>The output array should be:</p> <pre class=""lang-js prettyprint-override""><code>var outputArray = [[1,'a',4], [2,'b',5], [3,'c',6]] </code></pre>"	2011-01-31 22:08:11.677 UTC	69488021	"<p>I'm not a javascript guy but I feel like many of these answers are trying to find the cutest and most clever solution using <code>Array.map</code> which is fine, but for someone like me that doesn't use javascript every day here are some alternatives that <em>might</em> possibly be a bit more readable.</p> <p>Maybe a way to avoid some <em>cute</em> and <em>clever</em> code would be:</p> <pre><code>function zip(a,b){     // pre-allocate an array to hold the results      rval=Array(Math.max(a.length, b.length));     for(i=0; i&lt;rval.length; i++){          rval[i]=[a[i],b[i]]      }     return rval } </code></pre> <p>If you like generators:</p> <pre><code>function* _zip(a,b){     len = Math.max(a.length, b.length) // handle different sized arrays     for(i=0; i&lt;len; i++) { yield [a[i],b[i]] } } </code></pre> <p>Or if you really want to use <code>Array.map</code>:</p> <pre><code>function map(a,b){     x = a.length &gt; b.length ? a : b // call map on the biggest array     return x.map((_,i)=&gt;[a[i],b[i]]) } </code></pre> <p>As I said, I'm not an everyday javascript guy so, these aren't going to be the most elegant solutions but they are readable to me.</p>"			2021-10-07 21:24:32.317 UTC
4856717	javascript|python|functional-programming|transpose	Javascript equivalent of Python's zip function	"<p>Is there a javascript equivalent of Python's zip function?  That is, given multiple arrays of equal lengths create an array of pairs.</p> <p>For instance, if I have three arrays that look like this:</p> <pre class=""lang-js prettyprint-override""><code>var array1 = [1, 2, 3]; var array2 = ['a','b','c']; var array3 = [4, 5, 6]; </code></pre> <p>The output array should be:</p> <pre class=""lang-js prettyprint-override""><code>var outputArray = [[1,'a',4], [2,'b',5], [3,'c',6]] </code></pre>"	2011-01-31 22:08:11.677 UTC	17907974	"<p>In addition to ninjagecko's excellent and comprehensive answer, all it takes to zip two JS-arrays into a ""tuple-mimic"" is:</p>  <pre><code>//Arrays: aIn, aOut Array.prototype.map.call( aIn, function(e,i){return [e, aOut[i]];}) </code></pre>  <p><strong>Explanation:</strong><br> Since Javascript doesn't have a <code>tuples</code> type, functions for tuples, lists and sets wasn't a high priority in the language specification.<br> Otherwise, similar behavior is accessible in a straightforward manner via <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map"" rel=""noreferrer"">Array map in JS >1.6</a>. (<code>map</code> is actually often implemented by JS engine makers in many >JS 1.4 engines, despite not specified).<br> The major difference to Python's <code>zip</code>, <code>izip</code>,... results from <code>map</code>'s functional style, since <code>map</code> requires a function-argument. Additionally it is a function of the <code>Array</code>-instance. One may use <code>Array.prototype.map</code> instead, if an extra declaration for the input is an issue.</p>  <p><strong>Example:</strong></p>  <pre><code>_tarrin = [0..constructor, function(){}, false, undefined, '', 100, 123.324,          2343243243242343242354365476453654625345345, 'sdf23423dsfsdf',          'sdf2324.234dfs','234,234fsf','100,100','100.100'] _parseInt = function(i){return parseInt(i);} _tarrout = _tarrin.map(_parseInt) _tarrin.map(function(e,i,a){return [e, _tarrout[i]]}) </code></pre>  <p><strong>Result:</strong></p>  <pre><code>//'('+_tarrin.map(function(e,i,a){return [e, _tarrout[i]]}).join('),\n(')+')' &gt;&gt; (function Number() { [native code] },NaN), (function (){},NaN), (false,NaN), (,NaN), (,NaN), (100,100), (123.324,123), (2.3432432432423434e+42,2), (sdf23423dsfsdf,NaN), (sdf2324.234dfs,NaN), (234,234fsf,234), (100,100,100), (100.100,100) </code></pre>  <p><strong>Related Performance:</strong></p>  <p>Using <code>map</code> over <code>for</code>-loops:</p>  <p>See: <a href=""https://stackoverflow.com/questions/10293378/what-is-the-most-efficient-way-of-merging-1-2-and-7-8-into-1-7-2-8/17910641#17910641"">What is the most efficient way of merging [1,2] and [7,8] into [[1,7], [2,8]]</a></p>  <p><img src=""https://i.stack.imgur.com/PMbz0.png"" alt=""zip tests""></p>  <p><strong>Note:</strong> the base types such as <code>false</code> and <code>undefined</code> do not posess a prototypal object-hierarchy and thus do not expose a <code>toString</code> function. Hence these are shown as empty in the output.<br> As <code>parseInt</code>'s second argument is the base/number radix, to which to convert the number to, and since <code>map</code> passes the index as the second argument to its argument-function, a wrapper function is used.</p>"			2013-07-28 11:58:58.01 UTC
4856717	javascript|python|functional-programming|transpose	Javascript equivalent of Python's zip function	"<p>Is there a javascript equivalent of Python's zip function?  That is, given multiple arrays of equal lengths create an array of pairs.</p> <p>For instance, if I have three arrays that look like this:</p> <pre class=""lang-js prettyprint-override""><code>var array1 = [1, 2, 3]; var array2 = ['a','b','c']; var array3 = [4, 5, 6]; </code></pre> <p>The output array should be:</p> <pre class=""lang-js prettyprint-override""><code>var outputArray = [[1,'a',4], [2,'b',5], [3,'c',6]] </code></pre>"	2011-01-31 22:08:11.677 UTC	4856837	"<p>The <a href=""http://mochi.github.com/mochikit/"" rel=""nofollow"">Mochikit</a> library provides this and many other Python-like functions. developer of Mochikit is also a Python fan, so it has the general style of Python, and also the wraps the async calls in a twisted-like framework.</p>"			2011-01-31 22:25:10.913 UTC
4856717	javascript|python|functional-programming|transpose	Javascript equivalent of Python's zip function	"<p>Is there a javascript equivalent of Python's zip function?  That is, given multiple arrays of equal lengths create an array of pairs.</p> <p>For instance, if I have three arrays that look like this:</p> <pre class=""lang-js prettyprint-override""><code>var array1 = [1, 2, 3]; var array2 = ['a','b','c']; var array3 = [4, 5, 6]; </code></pre> <p>The output array should be:</p> <pre class=""lang-js prettyprint-override""><code>var outputArray = [[1,'a',4], [2,'b',5], [3,'c',6]] </code></pre>"	2011-01-31 22:08:11.677 UTC	4856999	"<p>I took a run at this in pure JS wondering how the plugins posted above got the job done. Here's my result. I'll preface this by saying that I have no idea how stable this will be in IE and the like. It's just a quick mockup.</p>  <p><div class=""snippet"" data-lang=""js"" data-hide=""false""> <div class=""snippet-code""> <pre class=""snippet-code-js lang-js prettyprint-override""><code>init();  function init() {     var one = [0, 1, 2, 3];     var two = [4, 5, 6, 7];     var three = [8, 9, 10, 11, 12];     var four = zip(one, two, one);     //returns array     //four = zip(one, two, three);     //returns false since three.length !== two.length     console.log(four); }  function zip() {     for (var i = 0; i &lt; arguments.length; i++) {         if (!arguments[i].length || !arguments.toString()) {             return false;         }         if (i &gt;= 1) {             if (arguments[i].length !== arguments[i - 1].length) {                 return false;             }         }     }     var zipped = [];     for (var j = 0; j &lt; arguments[0].length; j++) {         var toBeZipped = [];         for (var k = 0; k &lt; arguments.length; k++) {             toBeZipped.push(arguments[k][j]);         }         zipped.push(toBeZipped);     }     return zipped; }</code></pre> </div> </div> </p>  <p>It's not bulletproof, but it's still interesting.</p>"			2011-01-31 22:46:55.83 UTC
4856717	javascript|python|functional-programming|transpose	Javascript equivalent of Python's zip function	"<p>Is there a javascript equivalent of Python's zip function?  That is, given multiple arrays of equal lengths create an array of pairs.</p> <p>For instance, if I have three arrays that look like this:</p> <pre class=""lang-js prettyprint-override""><code>var array1 = [1, 2, 3]; var array2 = ['a','b','c']; var array3 = [4, 5, 6]; </code></pre> <p>The output array should be:</p> <pre class=""lang-js prettyprint-override""><code>var outputArray = [[1,'a',4], [2,'b',5], [3,'c',6]] </code></pre>"	2011-01-31 22:08:11.677 UTC	4856738	"<p>Not built-in to Javascript itself. Some of the common Javascript frameworks (such as Prototype) provide an implementation, or you can write your own.</p>"			2011-01-31 22:11:47.197 UTC
4856717	javascript|python|functional-programming|transpose	Javascript equivalent of Python's zip function	"<p>Is there a javascript equivalent of Python's zip function?  That is, given multiple arrays of equal lengths create an array of pairs.</p> <p>For instance, if I have three arrays that look like this:</p> <pre class=""lang-js prettyprint-override""><code>var array1 = [1, 2, 3]; var array2 = ['a','b','c']; var array3 = [4, 5, 6]; </code></pre> <p>The output array should be:</p> <pre class=""lang-js prettyprint-override""><code>var outputArray = [[1,'a',4], [2,'b',5], [3,'c',6]] </code></pre>"	2011-01-31 22:08:11.677 UTC	52899511	"<p>You could reduce the array of arrays and map new array by taking the result of the index of the inner array.</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-js lang-js prettyprint-override""><code>var array1 = [1, 2, 3],     array2 = ['a','b','c'],     array3 = [4, 5, 6],     array = [array1, array2, array3],     transposed = array.reduce((r, a) =&gt; a.map((v, i) =&gt; (r[i] || []).concat(v)), []);  console.log(transposed);</code></pre> </div> </div> </p> <p>Fun with spread.</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-js lang-js prettyprint-override""><code>const     transpose = (r, a) =&gt; a.map((v, i) =&gt; [...(r[i] || []), v]),     array1 = [1, 2, 3],     array2 = ['a','b','c'],     array3 = [4, 5, 6],     transposed = [array1, array2, array3].reduce(transpose, []);  console.log(transposed);</code></pre> </div> </div> </p>"			2018-10-19 20:29:49.047 UTC
4856717	javascript|python|functional-programming|transpose	Javascript equivalent of Python's zip function	"<p>Is there a javascript equivalent of Python's zip function?  That is, given multiple arrays of equal lengths create an array of pairs.</p> <p>For instance, if I have three arrays that look like this:</p> <pre class=""lang-js prettyprint-override""><code>var array1 = [1, 2, 3]; var array2 = ['a','b','c']; var array3 = [4, 5, 6]; </code></pre> <p>The output array should be:</p> <pre class=""lang-js prettyprint-override""><code>var outputArray = [[1,'a',4], [2,'b',5], [3,'c',6]] </code></pre>"	2011-01-31 22:08:11.677 UTC	65848247	"<p>There is no equivalent function. If you have only a few arrays you should use a <code>for</code> loop to get an index and then use the index to access the arrays:</p> <pre class=""lang-js prettyprint-override""><code>var array1 = [1, 2, 3]; var array2 = ['a','b','c'];  for (let i = 0; i &lt; Math.min(array1.length, array2.length); i++) {     doStuff(array1[i], array2[i]); } </code></pre> <p>You can have an inner loop over the arrays if you have more.</p>"			2021-01-22 15:43:21.467 UTC
4856717	javascript|python|functional-programming|transpose	Javascript equivalent of Python's zip function	"<p>Is there a javascript equivalent of Python's zip function?  That is, given multiple arrays of equal lengths create an array of pairs.</p> <p>For instance, if I have three arrays that look like this:</p> <pre class=""lang-js prettyprint-override""><code>var array1 = [1, 2, 3]; var array2 = ['a','b','c']; var array3 = [4, 5, 6]; </code></pre> <p>The output array should be:</p> <pre class=""lang-js prettyprint-override""><code>var outputArray = [[1,'a',4], [2,'b',5], [3,'c',6]] </code></pre>"	2011-01-31 22:08:11.677 UTC	65845442	"<p>I have created a simple function to do so with a option to provide an zipper function</p> <pre><code>function zip(zipper, ...arrays) {     if (zipper instanceof Array) {         arrays.unshift(zipper)         zipper = (...elements) =&gt; elements     }      const length = Math.min(...arrays.map(array =&gt; array.length))     const zipped = []      for (let i = 0; i &lt; length; i++) {         zipped.push(zipper(...arrays.map(array =&gt; array[i])))     }      return zipped } </code></pre> <p><a href=""https://gist.github.com/AmrIKhudair/4b740149c29c492859e00f451832975b"" rel=""nofollow noreferrer"">https://gist.github.com/AmrIKhudair/4b740149c29c492859e00f451832975b</a></p>"			2021-01-22 12:43:41.04 UTC
4856717	javascript|python|functional-programming|transpose	Javascript equivalent of Python's zip function	"<p>Is there a javascript equivalent of Python's zip function?  That is, given multiple arrays of equal lengths create an array of pairs.</p> <p>For instance, if I have three arrays that look like this:</p> <pre class=""lang-js prettyprint-override""><code>var array1 = [1, 2, 3]; var array2 = ['a','b','c']; var array3 = [4, 5, 6]; </code></pre> <p>The output array should be:</p> <pre class=""lang-js prettyprint-override""><code>var outputArray = [[1,'a',4], [2,'b',5], [3,'c',6]] </code></pre>"	2011-01-31 22:08:11.677 UTC	64730630	"<p><strong>Original answer (see update below)</strong></p> <p>I modified <a href=""https://stackoverflow.com/users/13292744/flm"">flm</a>'s nifty <a href=""https://stackoverflow.com/a/62740850/93812"">answer</a> to take an arbitrary number of arrays:</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-js lang-js prettyprint-override""><code> function* zip(arrays, i = 0) {   while (i&lt;Math.min(...arrays.map(({length})=&gt;length))) {     yield arrays.map((arr, j) =&gt; arr[j &lt; arrays.length - 1 ? i : i++])   }  }</code></pre> </div> </div> </p> <p><strong>Updated answer</strong></p> <p>As pointed out by <a href=""https://stackoverflow.com/users/20954/tom-pohl"">Tom Pohl</a> this function can't deal with arrays with falsy values in. Here is an updated/improved version that can deal with any types and also unequal length arrays:</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-js lang-js prettyprint-override""><code> function* zip(arrays, i = 0) {       while (i&lt;Math.min(...arrays.map(arr=&gt;arr.length))) {         yield arrays.map((arr, j) =&gt; arr[j &lt; arrays.length - 1 ? i : i++])       }      }          const arr1 = [false,0,1,2] const arr2 = [100,null,99,98,97] const arr3 = [7,8,undefined,""monkey"",""banana""]  console.log(...zip([arr1,arr2,arr3]))</code></pre> </div> </div> </p>"			2020-11-07 17:43:00.257 UTC
4856717	javascript|python|functional-programming|transpose	Javascript equivalent of Python's zip function	"<p>Is there a javascript equivalent of Python's zip function?  That is, given multiple arrays of equal lengths create an array of pairs.</p> <p>For instance, if I have three arrays that look like this:</p> <pre class=""lang-js prettyprint-override""><code>var array1 = [1, 2, 3]; var array2 = ['a','b','c']; var array3 = [4, 5, 6]; </code></pre> <p>The output array should be:</p> <pre class=""lang-js prettyprint-override""><code>var outputArray = [[1,'a',4], [2,'b',5], [3,'c',6]] </code></pre>"	2011-01-31 22:08:11.677 UTC	10284006	"<p><strong>2016 update:</strong></p> <p>Here's a snazzier Ecmascript 6 version:</p> <pre><code>zip= rows=&gt;rows[0].map((_,c)=&gt;rows.map(row=&gt;row[c])) </code></pre> <p>Illustration equiv. to <em><strong>Python</strong></em>{<code>zip(*args)</code>}:</p> <pre><code>&gt; zip([['row0col0', 'row0col1', 'row0col2'],        ['row1col0', 'row1col1', 'row1col2']]); [[&quot;row0col0&quot;,&quot;row1col0&quot;],  [&quot;row0col1&quot;,&quot;row1col1&quot;],  [&quot;row0col2&quot;,&quot;row1col2&quot;]] </code></pre> <p>(and FizzyTea points out that ES6 has variadic argument syntax, so the following function definition will act like python, but see below for disclaimer... this will not be its own inverse so <code>zip(zip(x))</code> will not equal <code>x</code>; though as Matt Kramer points out <code>zip(...zip(...x))==x</code> (like in regular python <code>zip(*zip(*x))==x</code>))</p> <p>Alternative definition equiv. to <em><strong>Python</strong></em>{<code>zip</code>}:</p> <pre><code>&gt; zip = (...rows) =&gt; [...rows[0]].map((_,c) =&gt; rows.map(row =&gt; row[c])) &gt; zip( ['row0col0', 'row0col1', 'row0col2'] ,        ['row1col0', 'row1col1', 'row1col2'] );              // note zip(row0,row1), not zip(matrix) same answer as above </code></pre> <p>(Do note that the <code>...</code> syntax may have performance issues at this time, and possibly in the future, so if you use the second answer with variadic arguments, you may want to perf test it. That said it's been quite a while since it's been in the standard.)</p> <p>Make sure to note the addendum if you wish to use this on strings (perhaps there's a better way to do it now with es6 iterables).</p> <hr /> <p>Here's a oneliner:</p> <pre class=""lang-js prettyprint-override""><code>function zip(arrays) {     return arrays[0].map(function(_,i){         return arrays.map(function(array){return array[i]})     }); }  // &gt; zip([[1,2],[11,22],[111,222]]) // [[1,11,111],[2,22,222]]]  // If you believe the following is a valid return value: //   &gt; zip([]) //   [] // then you can special-case it, or just do //  return arrays.length==0 ? [] : arrays[0].map(...) </code></pre> <hr /> <p>The above assumes that the arrays are of equal size, as they should be. It also assumes you pass in a single list of lists argument, unlike Python's version where the argument list is variadic. <strong>If you want all of these</strong> &quot;features&quot;, see below. It takes just about 2 extra lines of code.</p> <p>The following will mimic Python's <code>zip</code> behavior on edge cases where the arrays are not of equal size, silently pretending the longer parts of arrays don't exist:</p> <pre class=""lang-js prettyprint-override""><code>function zip() {     var args = [].slice.call(arguments);     var shortest = args.length==0 ? [] : args.reduce(function(a,b){         return a.length&lt;b.length ? a : b     });      return shortest.map(function(_,i){         return args.map(function(array){return array[i]})     }); }  // &gt; zip([1,2],[11,22],[111,222,333]) // [[1,11,111],[2,22,222]]]  // &gt; zip() // [] </code></pre> <p>This will mimic Python's <code>itertools.zip_longest</code> behavior, inserting <code>undefined</code> where arrays are not defined:</p> <pre class=""lang-js prettyprint-override""><code>function zip() {     var args = [].slice.call(arguments);     var longest = args.reduce(function(a,b){         return a.length&gt;b.length ? a : b     }, []);      return longest.map(function(_,i){         return args.map(function(array){return array[i]})     }); }  // &gt; zip([1,2],[11,22],[111,222,333]) // [[1,11,111],[2,22,222],[null,null,333]]  // &gt; zip() // [] </code></pre> <p>If you use these last two version (variadic aka. multiple-argument versions), then zip is no longer its own inverse. To mimic the <code>zip(*[...])</code> idiom from Python, you will need to do <code>zip.apply(this, [...])</code> when you want to invert the zip function or if you want to similarly have a variable number of lists as input.</p> <hr /> <p><strong>addendum</strong>:</p> <p>To make this handle any iterable (e.g. in Python you can use <code>zip</code> on strings, ranges, map objects, etc.), you could define the following:</p> <pre class=""lang-js prettyprint-override""><code>function iterView(iterable) {     // returns an array equivalent to the iterable } </code></pre> <p>However if you write <code>zip</code> in the following <a href=""https://stackoverflow.com/a/13735425/711085"">way</a>, even that won't be necessary:</p> <pre class=""lang-js prettyprint-override""><code>function zip(arrays) {     return Array.apply(null,Array(arrays[0].length)).map(function(_,i){         return arrays.map(function(array){return array[i]})     }); } </code></pre> <p>Demo:</p> <pre><code>&gt; JSON.stringify( zip(['abcde',[1,2,3,4,5]]) ) [[&quot;a&quot;,1],[&quot;b&quot;,2],[&quot;c&quot;,3],[&quot;d&quot;,4],[&quot;e&quot;,5]] </code></pre> <p>(Or you could use a <code>range(...)</code> Python-style function if you've written one already. Eventually you will be able to use ECMAScript array comprehensions or generators.)</p>"			2012-04-23 15:58:42.35 UTC
4856717	javascript|python|functional-programming|transpose	Javascript equivalent of Python's zip function	"<p>Is there a javascript equivalent of Python's zip function?  That is, given multiple arrays of equal lengths create an array of pairs.</p> <p>For instance, if I have three arrays that look like this:</p> <pre class=""lang-js prettyprint-override""><code>var array1 = [1, 2, 3]; var array2 = ['a','b','c']; var array3 = [4, 5, 6]; </code></pre> <p>The output array should be:</p> <pre class=""lang-js prettyprint-override""><code>var outputArray = [[1,'a',4], [2,'b',5], [3,'c',6]] </code></pre>"	2011-01-31 22:08:11.677 UTC	13618399	"<p>Like @Brandon, I recommend <a href=""http://underscorejs.org"" rel=""nofollow"">Underscore</a>'s <a href=""http://underscorejs.org/#zip"" rel=""nofollow"">zip</a> function. However, it acts like <code>zip_longest</code>, appending <code>undefined</code> values as needed to return something the length of the longest input. </p>  <p>I used the <a href=""http://underscorejs.org/#mixin"" rel=""nofollow""><code>mixin</code></a> method to extend underscore with a <code>zipShortest</code>, which acts like Python's <code>zip</code>, based off of <a href=""http://underscorejs.org/docs/underscore.html#section-50"" rel=""nofollow"">the library's own source for <code>zip</code></a>. </p>  <p>You can add the following to your common JS code and then call it as if it were part of underscore: <code>_.zipShortest([1,2,3], ['a'])</code> returns <code>[[1, 'a']]</code>, for example.</p>  <pre><code>// Underscore library addition - zip like python does, dominated by the shortest list //  The default injects undefineds to match the length of the longest list. _.mixin({     zipShortest : function() {         var args = Array.Prototype.slice.call(arguments);         var length = _.min(_.pluck(args, 'length')); // changed max to min         var results = new Array(length);         for (var i = 0; i &lt; length; i++) {             results[i] = _.pluck(args, """" + i);         }         return results; }}); </code></pre>"			2012-11-29 03:34:15.247 UTC
4856717	javascript|python|functional-programming|transpose	Javascript equivalent of Python's zip function	"<p>Is there a javascript equivalent of Python's zip function?  That is, given multiple arrays of equal lengths create an array of pairs.</p> <p>For instance, if I have three arrays that look like this:</p> <pre class=""lang-js prettyprint-override""><code>var array1 = [1, 2, 3]; var array2 = ['a','b','c']; var array3 = [4, 5, 6]; </code></pre> <p>The output array should be:</p> <pre class=""lang-js prettyprint-override""><code>var outputArray = [[1,'a',4], [2,'b',5], [3,'c',6]] </code></pre>"	2011-01-31 22:08:11.677 UTC	67247411	"<p>A generator approach to pythons zip function.</p> <pre class=""lang-js prettyprint-override""><code>function* zip(...arrs){   for(let i = 0; i &lt; arrs[0].length; i++){     a = arrs.map(e=&gt;e[i])     if(a.indexOf(undefined) == -1 ){yield a }else{return undefined;}   } } // use as multiple iterators for( let [a,b,c] of zip([1, 2, 3, 4], ['a', 'b', 'c', 'd'], ['hi', 'hello', 'howdy', 'how are you']) )   console.log(a,b,c)  // creating new array with the combined arrays let outputArr = [] for( let arr of zip([1, 2, 3, 4], ['a', 'b', 'c', 'd'], ['hi', 'hello', 'howdy', 'how are you']) )   outputArr.push(arr) </code></pre>"			2021-04-24 21:05:17.63 UTC
4856717	javascript|python|functional-programming|transpose	Javascript equivalent of Python's zip function	"<p>Is there a javascript equivalent of Python's zip function?  That is, given multiple arrays of equal lengths create an array of pairs.</p> <p>For instance, if I have three arrays that look like this:</p> <pre class=""lang-js prettyprint-override""><code>var array1 = [1, 2, 3]; var array2 = ['a','b','c']; var array3 = [4, 5, 6]; </code></pre> <p>The output array should be:</p> <pre class=""lang-js prettyprint-override""><code>var outputArray = [[1,'a',4], [2,'b',5], [3,'c',6]] </code></pre>"	2011-01-31 22:08:11.677 UTC	55018291	"<h2>1. Npm Module: <code>zip-array</code></h2>  <p>I found an npm module that can be used as a javascript version of python <code>zip</code>:</p>  <p><strong>zip-array</strong> - A javascript equivalent of Python's zip function. Merges together the values of each of the arrays.</p>  <p><a href=""https://www.npmjs.com/package/zip-array"" rel=""nofollow noreferrer"">https://www.npmjs.com/package/zip-array</a></p>  <h2>2. <code>tf.data.zip()</code> in Tensorflow.js</h2>  <p>Another alternate choice is for Tensorflow.js users: if you need a <code>zip</code> function in python to work with tensorflow datasets in Javascript, you can use <code>tf.data.zip()</code> in Tensorflow.js. </p>  <p><strong>tf.data.zip()</strong> in Tensorflow.js documented at <a href=""https://js.tensorflow.org/api/latest/#data.zip"" rel=""nofollow noreferrer"">here</a></p>"			2019-03-06 08:07:02.33 UTC
4872170	javascript|try-catch	"Javascript try...catch...else...finally like Python, Java, Ruby, etc"	"<p>How can Javascript duplicate the four-part <code>try</code>-<code>catch</code>-<code>else</code>-<code>finally</code> execution model that other languages support?</p>  <p>A clear, brief summary is from the <a href=""http://docs.python.org/whatsnew/2.5.html#pep-341-unified-try-except-finally"" rel=""noreferrer"">Python 2.5 what's new</a>. In Javascript terms:</p>  <pre><code>// XXX THIS EXAMPLE IS A SYNTAX ERROR try {   // Protected-block } catch(e) {   // Handler-block } else {   // Else-block } finally {   // Final-block } </code></pre>  <p>The code in <strong>Protected-block</strong> is executed. If the code throws an exception, <strong>Handler-block</strong> is executed; If no exception is thrown, <strong>Else-block</strong> is executed.</p>  <p>No matter what happened previously, <strong>Final-block</strong> is executed once the code block is complete and any thrown exceptions handled. Even if there’s an error in <strong>Handler-block</strong> or <strong>Else-block</strong> and a new exception is raised, the code in <strong>Final-block</strong> is still run.</p>  <p>Note that cutting <strong>Else-block</strong> and pasting at the end of <strong>Protected-block</strong> is <em>wrong</em>. If an error happens in <strong>Else-block</strong>, it <em>must not</em> be handled by <strong>Handler-block</strong>.</p>"	2011-02-02 08:23:25.343 UTC	54509330	"<p>Here's another solution if the problem is the common one of not wanting the error callback to be called if there is an uncaught error thrown by the first callback. ... i.e. conceptually you want ... </p>  <pre><code>try {      //do block      cb(null, result); } catch(err) {     // err report     cb(err) } </code></pre>  <p>But an error in the success cb causes the problem of cb getting called a second time.  So instead I've started using</p>  <pre><code>try {      //do block      try {          cb(null, result);      } catch(err) {          // report uncaught error      } } catch(err) {     // err report     cb(err) } </code></pre>  <p>which is a variant on @cbarrick's solution.</p>"			2019-02-04 01:54:55.727 UTC
4872170	javascript|try-catch	"Javascript try...catch...else...finally like Python, Java, Ruby, etc"	"<p>How can Javascript duplicate the four-part <code>try</code>-<code>catch</code>-<code>else</code>-<code>finally</code> execution model that other languages support?</p>  <p>A clear, brief summary is from the <a href=""http://docs.python.org/whatsnew/2.5.html#pep-341-unified-try-except-finally"" rel=""noreferrer"">Python 2.5 what's new</a>. In Javascript terms:</p>  <pre><code>// XXX THIS EXAMPLE IS A SYNTAX ERROR try {   // Protected-block } catch(e) {   // Handler-block } else {   // Else-block } finally {   // Final-block } </code></pre>  <p>The code in <strong>Protected-block</strong> is executed. If the code throws an exception, <strong>Handler-block</strong> is executed; If no exception is thrown, <strong>Else-block</strong> is executed.</p>  <p>No matter what happened previously, <strong>Final-block</strong> is executed once the code block is complete and any thrown exceptions handled. Even if there’s an error in <strong>Handler-block</strong> or <strong>Else-block</strong> and a new exception is raised, the code in <strong>Final-block</strong> is still run.</p>  <p>Note that cutting <strong>Else-block</strong> and pasting at the end of <strong>Protected-block</strong> is <em>wrong</em>. If an error happens in <strong>Else-block</strong>, it <em>must not</em> be handled by <strong>Handler-block</strong>.</p>"	2011-02-02 08:23:25.343 UTC	40616512	"<p>I know the question is old and answers has already given but I think that my answer is the simplest to get an ""else"" in javascripts try-catch-block.</p>  <pre><code>var error = null; try {     /*Protected-block*/ } catch ( catchedError ) {     error = catchedError; //necessary to make it available in finally-block } finally {     if ( error ) {         /*Handler-block*/         /*e.g. console.log( 'error: ' + error.message );*/     } else {         /*Else-block*/     }     /*Final-block*/ } </code></pre>"			2016-11-15 17:52:10.78 UTC
4872170	javascript|try-catch	"Javascript try...catch...else...finally like Python, Java, Ruby, etc"	"<p>How can Javascript duplicate the four-part <code>try</code>-<code>catch</code>-<code>else</code>-<code>finally</code> execution model that other languages support?</p>  <p>A clear, brief summary is from the <a href=""http://docs.python.org/whatsnew/2.5.html#pep-341-unified-try-except-finally"" rel=""noreferrer"">Python 2.5 what's new</a>. In Javascript terms:</p>  <pre><code>// XXX THIS EXAMPLE IS A SYNTAX ERROR try {   // Protected-block } catch(e) {   // Handler-block } else {   // Else-block } finally {   // Final-block } </code></pre>  <p>The code in <strong>Protected-block</strong> is executed. If the code throws an exception, <strong>Handler-block</strong> is executed; If no exception is thrown, <strong>Else-block</strong> is executed.</p>  <p>No matter what happened previously, <strong>Final-block</strong> is executed once the code block is complete and any thrown exceptions handled. Even if there’s an error in <strong>Handler-block</strong> or <strong>Else-block</strong> and a new exception is raised, the code in <strong>Final-block</strong> is still run.</p>  <p>Note that cutting <strong>Else-block</strong> and pasting at the end of <strong>Protected-block</strong> is <em>wrong</em>. If an error happens in <strong>Else-block</strong>, it <em>must not</em> be handled by <strong>Handler-block</strong>.</p>"	2011-02-02 08:23:25.343 UTC	20506988	"<p>I know this is old, but here is a <strong>pure syntax solution</strong>, which I think is the proper way to go:</p>  <pre><code>try {     // Protected-block     try {         // Else-block     } catch (e) {         // Else-handler-block     } } catch(e) {     // Handler-block } finally {     // Final-block } </code></pre>  <p>The code in <strong>Protected-block</strong> is executed. If the code throws an error, <strong>Handler-block</strong> is executed; If no error is thrown, <strong>Else-block</strong> is executed.</p>  <p>No matter what happened previously, <strong>Final-block</strong> is executed once the code block is complete and any thrown errors handled. Even if there’s an error in <strong>Handler-block</strong> or <strong>Else-block</strong>, the code in <strong>Final-block</strong> is still run.</p>  <p>If an error is thrown in the <strong>Else-block</strong> it is <em>not</em> handled by the <strong>Handler-block</strong> but instead by the <strong>Else-handler-block</strong></p>  <p>And if you know that the <strong>Else-block</strong> will not throw:</p>  <pre><code>try {     // Protected-block     // Else-block } catch(e) {     // Handler-block } finally {     // Final-block } </code></pre>  <p>Moral of the story, don't be afraid to indent ;)</p>  <p><em>Note:</em> this works only if the <strong>Else-handler-block</strong> never throws.</p>"			2013-12-10 22:47:43.383 UTC
4872170	javascript|try-catch	"Javascript try...catch...else...finally like Python, Java, Ruby, etc"	"<p>How can Javascript duplicate the four-part <code>try</code>-<code>catch</code>-<code>else</code>-<code>finally</code> execution model that other languages support?</p>  <p>A clear, brief summary is from the <a href=""http://docs.python.org/whatsnew/2.5.html#pep-341-unified-try-except-finally"" rel=""noreferrer"">Python 2.5 what's new</a>. In Javascript terms:</p>  <pre><code>// XXX THIS EXAMPLE IS A SYNTAX ERROR try {   // Protected-block } catch(e) {   // Handler-block } else {   // Else-block } finally {   // Final-block } </code></pre>  <p>The code in <strong>Protected-block</strong> is executed. If the code throws an exception, <strong>Handler-block</strong> is executed; If no exception is thrown, <strong>Else-block</strong> is executed.</p>  <p>No matter what happened previously, <strong>Final-block</strong> is executed once the code block is complete and any thrown exceptions handled. Even if there’s an error in <strong>Handler-block</strong> or <strong>Else-block</strong> and a new exception is raised, the code in <strong>Final-block</strong> is still run.</p>  <p>Note that cutting <strong>Else-block</strong> and pasting at the end of <strong>Protected-block</strong> is <em>wrong</em>. If an error happens in <strong>Else-block</strong>, it <em>must not</em> be handled by <strong>Handler-block</strong>.</p>"	2011-02-02 08:23:25.343 UTC	4872175	"<p>Javascript does not have the syntax to support the no-exception scenario. The best workaround is nested <code>try</code> statements, similar to the ""legacy"" technique from <a href=""http://www.python.org/dev/peps/pep-0341/"" rel=""noreferrer"">PEP 341</a></p>  <pre><code>// A pretty-good try/catch/else/finally implementation. try {   var success = true;   try {     protected_code();   } catch(e) {     success = false;     handler_code({""exception_was"": e});   }   if(success) {     else_code();   } } finally {   this_always_runs(); } </code></pre>  <p>Besides readability, the only problem is the <code>success</code> variable. If <code>protected_code</code> sets <code>window.success = false</code>, this will not work. A less readable but safer way uses a function namespace:</p>  <pre><code>// A try/catch/else/finally implementation without changing variable bindings. try {   (function() {     var success = true;     try {       protected_code();     } catch(e) {       success = false;       handler_code({""exception_was"": e});     }     if(success) {       else_code();     }   })(); } finally {   this_always_runs(); } </code></pre>"			2011-02-02 08:24:02.3 UTC
4872170	javascript|try-catch	"Javascript try...catch...else...finally like Python, Java, Ruby, etc"	"<p>How can Javascript duplicate the four-part <code>try</code>-<code>catch</code>-<code>else</code>-<code>finally</code> execution model that other languages support?</p>  <p>A clear, brief summary is from the <a href=""http://docs.python.org/whatsnew/2.5.html#pep-341-unified-try-except-finally"" rel=""noreferrer"">Python 2.5 what's new</a>. In Javascript terms:</p>  <pre><code>// XXX THIS EXAMPLE IS A SYNTAX ERROR try {   // Protected-block } catch(e) {   // Handler-block } else {   // Else-block } finally {   // Final-block } </code></pre>  <p>The code in <strong>Protected-block</strong> is executed. If the code throws an exception, <strong>Handler-block</strong> is executed; If no exception is thrown, <strong>Else-block</strong> is executed.</p>  <p>No matter what happened previously, <strong>Final-block</strong> is executed once the code block is complete and any thrown exceptions handled. Even if there’s an error in <strong>Handler-block</strong> or <strong>Else-block</strong> and a new exception is raised, the code in <strong>Final-block</strong> is still run.</p>  <p>Note that cutting <strong>Else-block</strong> and pasting at the end of <strong>Protected-block</strong> is <em>wrong</em>. If an error happens in <strong>Else-block</strong>, it <em>must not</em> be handled by <strong>Handler-block</strong>.</p>"	2011-02-02 08:23:25.343 UTC	4872243	"<p>Extending the idea of jhs a little, the whole concept could be put inside a function, to provide even more readability:</p>  <pre><code>var try_catch_else_finally = function(protected_code, handler_code, else_code, finally_code) {   try {     var success = true;     try {       protected_code();     } catch(e) {       success = false;       handler_code({""exception_was"": e});     }     if(success) {       else_code();     }   } finally {     finally_code();   } }; </code></pre>  <p>Then we can use it like this (very similar to the python way):</p>  <pre><code>try_catch_else_finally(function() {   // protected block }, function() {   // handler block }, function() {   // else block }, function() {   // final-block }); </code></pre>"			2011-02-02 08:34:08.257 UTC
4974238	javascript|python|format	JavaScript equivalent of Python's format() function?	"<p>Python has this beautiful function to turn this:</p>  <pre><code>bar1 = 'foobar' bar2 = 'jumped' bar3 = 'dog'  foo = 'The lazy ' + bar3 + ' ' + bar2 ' over the ' + bar1 # The lazy dog jumped over the foobar </code></pre>  <p>Into this:</p>  <pre><code>bar1 = 'foobar' bar2 = 'jumped' bar3 = 'dog'  foo = 'The lazy {} {} over the {}'.format(bar3, bar2, bar1) # The lazy dog jumped over the foobar </code></pre>  <p>Does JavaScript have such a function? If not, how would I create one which follows the same syntax as Python's implementation?</p>"	2011-02-11 21:26:38.847 UTC	20162365	"<p>Looking for an answer for the same question, I just found this: <a href=""https://github.com/davidchambers/string-format"">https://github.com/davidchambers/string-format</a>, which is ""JavaScript string formatting inspired by Python’s <code>str.format()</code>"". It seem it's pretty much the same as python's <code>format()</code> function.</p>"			2013-11-23 12:37:09.583 UTC
4974238	javascript|python|format	JavaScript equivalent of Python's format() function?	"<p>Python has this beautiful function to turn this:</p>  <pre><code>bar1 = 'foobar' bar2 = 'jumped' bar3 = 'dog'  foo = 'The lazy ' + bar3 + ' ' + bar2 ' over the ' + bar1 # The lazy dog jumped over the foobar </code></pre>  <p>Into this:</p>  <pre><code>bar1 = 'foobar' bar2 = 'jumped' bar3 = 'dog'  foo = 'The lazy {} {} over the {}'.format(bar3, bar2, bar1) # The lazy dog jumped over the foobar </code></pre>  <p>Does JavaScript have such a function? If not, how would I create one which follows the same syntax as Python's implementation?</p>"	2011-02-11 21:26:38.847 UTC	56134091	"<p>Usando split:</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-js lang-js prettyprint-override""><code>String.prototype.format = function (args) {     var text = this     for(var attr in args){         text = text.split('${' + attr + '}').join(args[attr]);     }     return text };  json = {'who':'Gendry', 'what':'will sit', 'where':'in the Iron Throne'} text = 'GOT: ${who} ${what} ${where}';  console.log('context: ',json); console.log('template: ',text); console.log('formated: ',text.format(json));</code></pre> </div> </div> </p> <p>Usando Regex: <div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-js lang-js prettyprint-override""><code>String.prototype.format = function (args) {     var text = this     for(var attr in args){         var rgx = new RegExp('\\${' + attr + '}','g');         text = text.replace(rgx, args[attr]);     }     return text };  json = {'who':'Gendry', 'what':'will sit', 'where':'in the Iron Throne'} text = 'GOT: ${who} ${what} ${where}';  console.log('context: ',json); console.log('template: ',text); console.log('formated: ',text.format(json));</code></pre> </div> </div> </p>"			2019-05-14 15:37:33.42 UTC
4974238	javascript|python|format	JavaScript equivalent of Python's format() function?	"<p>Python has this beautiful function to turn this:</p>  <pre><code>bar1 = 'foobar' bar2 = 'jumped' bar3 = 'dog'  foo = 'The lazy ' + bar3 + ' ' + bar2 ' over the ' + bar1 # The lazy dog jumped over the foobar </code></pre>  <p>Into this:</p>  <pre><code>bar1 = 'foobar' bar2 = 'jumped' bar3 = 'dog'  foo = 'The lazy {} {} over the {}'.format(bar3, bar2, bar1) # The lazy dog jumped over the foobar </code></pre>  <p>Does JavaScript have such a function? If not, how would I create one which follows the same syntax as Python's implementation?</p>"	2011-02-11 21:26:38.847 UTC	54415860	"<p>For those looking for a simple ES6 solution. </p>  <p>First of all I'm providing a function instead of extending native String prototype because it is generally discouraged.</p>  <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-js lang-js prettyprint-override""><code>// format function using replace() and recursion  const format = (str, arr) =&gt; arr.length &gt; 1   ? format(str.replace('{}', arr[0]), arr.slice(1))   : (arr[0] &amp;&amp; str.replace('{}', arr[0])) || str  // Example usage  const str1 = 'The {} brown {} jumps over the {} dog'  const formattedString = formatFn(str1, ['quick','fox','lazy'])  console.log(formattedString)</code></pre> </div> </div> </p>"			2019-01-29 07:27:35.457 UTC
4974238	javascript|python|format	JavaScript equivalent of Python's format() function?	"<p>Python has this beautiful function to turn this:</p>  <pre><code>bar1 = 'foobar' bar2 = 'jumped' bar3 = 'dog'  foo = 'The lazy ' + bar3 + ' ' + bar2 ' over the ' + bar1 # The lazy dog jumped over the foobar </code></pre>  <p>Into this:</p>  <pre><code>bar1 = 'foobar' bar2 = 'jumped' bar3 = 'dog'  foo = 'The lazy {} {} over the {}'.format(bar3, bar2, bar1) # The lazy dog jumped over the foobar </code></pre>  <p>Does JavaScript have such a function? If not, how would I create one which follows the same syntax as Python's implementation?</p>"	2011-02-11 21:26:38.847 UTC	52934578	"<h2>tl;dr</h2>  <pre><code>foo = (a, b, c) =&gt; `The lazy ${a} ${b} over the ${c}` </code></pre>  <h2>Why template strings alone aren't enough</h2>  <p>ES6 <a href=""https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Template_literals"" rel=""noreferrer"">template strings</a> provide a feature quite similar to pythons string format. However, you have to know the variables before you construct the string:</p>  <pre><code>var templateString = `The lazy ${bar3} ${bar2} over the ${bar1}`; </code></pre>  <h2>Why format?</h2>  <p>Python's <code>str.format</code> allows you to specify the string <em>before</em> you even know which values you want to plug into it, like:</p>  <pre><code>foo = 'The lazy {} {} over the {}'  bar1 = 'foobar' bar2 = 'jumped' bar3 = 'dog'  foo.format(bar3, bar2, bar1) </code></pre>  <h2>Solution</h2>  <p>With an <a href=""https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Functions/Arrow_functions"" rel=""noreferrer"">arrow function</a>, we can elegantly wrap the template string for later use:</p>  <pre><code>foo = (a, b, c) =&gt; `The lazy ${a} ${b} over the ${c}`  bar1 = 'foobar'; bar2 = 'jumped'; bar3 = 'dog';  foo(bar3, bar2, bar1) </code></pre>  <p>Of course this works with a regular function as well, but the arrow function allows us to make this a one-liner. Both features are available in most browsers und runtimes: </p>  <ul> <li><a href=""https://caniuse.com/template-literals"" rel=""noreferrer"">Can I use template literals?</a></li> <li><a href=""https://caniuse.com/arrow-functions"" rel=""noreferrer"">Can I use arrow functions?</a></li> </ul>"			2018-10-22 17:19:06.673 UTC
4974238	javascript|python|format	JavaScript equivalent of Python's format() function?	"<p>Python has this beautiful function to turn this:</p>  <pre><code>bar1 = 'foobar' bar2 = 'jumped' bar3 = 'dog'  foo = 'The lazy ' + bar3 + ' ' + bar2 ' over the ' + bar1 # The lazy dog jumped over the foobar </code></pre>  <p>Into this:</p>  <pre><code>bar1 = 'foobar' bar2 = 'jumped' bar3 = 'dog'  foo = 'The lazy {} {} over the {}'.format(bar3, bar2, bar1) # The lazy dog jumped over the foobar </code></pre>  <p>Does JavaScript have such a function? If not, how would I create one which follows the same syntax as Python's implementation?</p>"	2011-02-11 21:26:38.847 UTC	60854051	"<p>If you (like me) only need the limited subset of python's format function for simple string replacement, and performance is not critical, a very simple 29-line pure-Javascript function may suffice. </p>  <p>Javascript call: <code>format(str, data)</code></p>  <p>Analogous python call: <code>str.format(**data)</code>, with the caveat that this javascript function, unlike Python's, does not throw an error if the string contains a varname that is not found in the provided data.</p>  <pre><code>/*  * format(str, data): analogous to Python's str.format(**data)  *  * Example:  *   let data = {  *     user: {  *       name: { first: 'Jane', last: 'Doe' }  *     },  *     email: 'jane@doe.com',  *     groups: [""one"",""two""]  *   };  *  *   let str = 'Hi {user.name.first} {user.name.last}, your email address is {email}, and your second group is {groups[1]}'  *   *   format(str, data)  *   =&gt; returns ""Hi Jane Doe, your email address is jane@doe.com, and your second group is two""  */  function format(str, data) {     var varnames = {};     function array_path(path, i) {         var this_k = '[' + i + ']';         if (!path.length)             return [this_k];         path = path.slice();         path[path.length - 1] += this_k;         return path;     }     function add_varnames(this_data, path) {         if (this_data.constructor == Array) {             for (var i = 0; i &lt; this_data.length; i++)                 add_varnames(this_data[i], array_path(path, i));         }         else if (this_data.constructor == Object) {             for (var k in this_data)                 add_varnames(this_data[k], path.concat(k));         }         else {             var varname = '{' + path.join('.') + '}';             varnames[varname] = String(this_data);         }     }     add_varnames(data, []);     for (var varname in varnames)         str = str.replace(varname, varnames[varname]);     return str; } </code></pre>"			2020-03-25 17:22:52.687 UTC
4974238	javascript|python|format	JavaScript equivalent of Python's format() function?	"<p>Python has this beautiful function to turn this:</p>  <pre><code>bar1 = 'foobar' bar2 = 'jumped' bar3 = 'dog'  foo = 'The lazy ' + bar3 + ' ' + bar2 ' over the ' + bar1 # The lazy dog jumped over the foobar </code></pre>  <p>Into this:</p>  <pre><code>bar1 = 'foobar' bar2 = 'jumped' bar3 = 'dog'  foo = 'The lazy {} {} over the {}'.format(bar3, bar2, bar1) # The lazy dog jumped over the foobar </code></pre>  <p>Does JavaScript have such a function? If not, how would I create one which follows the same syntax as Python's implementation?</p>"	2011-02-11 21:26:38.847 UTC	31248709	"<p>There is a way, but not exactly using format.  </p>  <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-js lang-js prettyprint-override""><code>var name = ""John""; var age = 19; var message = `My name is ${name} and I am ${age} years old`; console.log(message);</code></pre> </div> </div> </p>  <p>jsfiddle - <a href=""http://jsfiddle.net/fz7s8oko/"" rel=""noreferrer"">link</a></p>"			2015-07-06 14:38:35.947 UTC
4974238	javascript|python|format	JavaScript equivalent of Python's format() function?	"<p>Python has this beautiful function to turn this:</p>  <pre><code>bar1 = 'foobar' bar2 = 'jumped' bar3 = 'dog'  foo = 'The lazy ' + bar3 + ' ' + bar2 ' over the ' + bar1 # The lazy dog jumped over the foobar </code></pre>  <p>Into this:</p>  <pre><code>bar1 = 'foobar' bar2 = 'jumped' bar3 = 'dog'  foo = 'The lazy {} {} over the {}'.format(bar3, bar2, bar1) # The lazy dog jumped over the foobar </code></pre>  <p>Does JavaScript have such a function? If not, how would I create one which follows the same syntax as Python's implementation?</p>"	2011-02-11 21:26:38.847 UTC	25327583	"<p>This code allows you to specify exactly which brackets to replace with which strings. The brackets don't need to be in the same order as the arguments, and multiple brackets are possible. The format function takes an array of values as its parameter, with each key being one of the bracketed 'variables' which is replaced by its corresponding value.</p>  <pre><code>String.prototype.format = function (arguments) {     var this_string = '';     for (var char_pos = 0; char_pos &lt; this.length; char_pos++) {         this_string = this_string + this[char_pos];     }      for (var key in arguments) {         var string_key = '{' + key + '}'         this_string = this_string.replace(new RegExp(string_key, 'g'), arguments[key]);     }     return this_string; };  'The time is {time} and today is {day}, {day}, {day}. Oh, and did I mention that the time is {time}.'.format({day:'Monday',time:'2:13'}); //'The time is 2:13 and today is Monday, Monday, Monday. Oh, and did I mention that the time is 2:13.' </code></pre>"			2014-08-15 13:47:09.393 UTC
4974238	javascript|python|format	JavaScript equivalent of Python's format() function?	"<p>Python has this beautiful function to turn this:</p>  <pre><code>bar1 = 'foobar' bar2 = 'jumped' bar3 = 'dog'  foo = 'The lazy ' + bar3 + ' ' + bar2 ' over the ' + bar1 # The lazy dog jumped over the foobar </code></pre>  <p>Into this:</p>  <pre><code>bar1 = 'foobar' bar2 = 'jumped' bar3 = 'dog'  foo = 'The lazy {} {} over the {}'.format(bar3, bar2, bar1) # The lazy dog jumped over the foobar </code></pre>  <p>Does JavaScript have such a function? If not, how would I create one which follows the same syntax as Python's implementation?</p>"	2011-02-11 21:26:38.847 UTC	4974286	<p>JavaScript doesn't have such a function AFAIK.</p>  <p>You could create one by modifying the String class's prototype object to add a format() method which takes a variable number of arguments.</p>  <p>In the format method you'd have to get the String's instance value (the actual string) and then parse it for '{}' and insert the appropriate argument.</p>  <p>Then return the new string to the caller.</p>			2011-02-11 21:31:19.107 UTC
4974238	javascript|python|format	JavaScript equivalent of Python's format() function?	"<p>Python has this beautiful function to turn this:</p>  <pre><code>bar1 = 'foobar' bar2 = 'jumped' bar3 = 'dog'  foo = 'The lazy ' + bar3 + ' ' + bar2 ' over the ' + bar1 # The lazy dog jumped over the foobar </code></pre>  <p>Into this:</p>  <pre><code>bar1 = 'foobar' bar2 = 'jumped' bar3 = 'dog'  foo = 'The lazy {} {} over the {}'.format(bar3, bar2, bar1) # The lazy dog jumped over the foobar </code></pre>  <p>Does JavaScript have such a function? If not, how would I create one which follows the same syntax as Python's implementation?</p>"	2011-02-11 21:26:38.847 UTC	4974312	"<p>JavaScript does not have a string formatting function by default, although you can create your own or use one someone else has made (such as <a href=""http://www.diveintojavascript.com/projects/javascript-sprintf"" rel=""nofollow"">sprintf</a>)</p>"			2011-02-11 21:34:07.703 UTC
4974238	javascript|python|format	JavaScript equivalent of Python's format() function?	"<p>Python has this beautiful function to turn this:</p>  <pre><code>bar1 = 'foobar' bar2 = 'jumped' bar3 = 'dog'  foo = 'The lazy ' + bar3 + ' ' + bar2 ' over the ' + bar1 # The lazy dog jumped over the foobar </code></pre>  <p>Into this:</p>  <pre><code>bar1 = 'foobar' bar2 = 'jumped' bar3 = 'dog'  foo = 'The lazy {} {} over the {}'.format(bar3, bar2, bar1) # The lazy dog jumped over the foobar </code></pre>  <p>Does JavaScript have such a function? If not, how would I create one which follows the same syntax as Python's implementation?</p>"	2011-02-11 21:26:38.847 UTC	4974284	"<p>Taken from YAHOOs library:</p>  <pre><code>YAHOO.Tools.printf = function() {    var num = arguments.length;    var oStr = arguments[0];      for (var i = 1; i &lt; num; i++) {      var pattern = ""\\{"" + (i-1) + ""\\}"";      var re = new RegExp(pattern, ""g"");      oStr = oStr.replace(re, arguments[i]);    }    return oStr;  }  </code></pre>  <p>Call it like: </p>  <pre><code>bar1 = 'foobar' bar2 = 'jumped' bar3 = 'dog'  foo = YAHOO.Tools.printf('The lazy {0} {1} over the {2}', bar3, bar2, bar1);  </code></pre>"			2011-02-11 21:31:10.45 UTC
4974238	javascript|python|format	JavaScript equivalent of Python's format() function?	"<p>Python has this beautiful function to turn this:</p>  <pre><code>bar1 = 'foobar' bar2 = 'jumped' bar3 = 'dog'  foo = 'The lazy ' + bar3 + ' ' + bar2 ' over the ' + bar1 # The lazy dog jumped over the foobar </code></pre>  <p>Into this:</p>  <pre><code>bar1 = 'foobar' bar2 = 'jumped' bar3 = 'dog'  foo = 'The lazy {} {} over the {}'.format(bar3, bar2, bar1) # The lazy dog jumped over the foobar </code></pre>  <p>Does JavaScript have such a function? If not, how would I create one which follows the same syntax as Python's implementation?</p>"	2011-02-11 21:26:38.847 UTC	4974296	"<p>Here's my first attempt. Feel free to point out flaws.</p>  <p><strong>Example:</strong> <a href=""http://jsfiddle.net/wFb2p/5/"" rel=""nofollow"">http://jsfiddle.net/wFb2p/5/</a></p>  <pre><code>String.prototype.format = function() {     var str = this;     var i = 0;     var len = arguments.length;     var matches = str.match(/{}/g);     if( !matches || matches.length !== len ) {         throw ""wrong number of arguments"";     }     while( i &lt; len ) {         str = str.replace(/{}/, arguments[i] );         i++;     }     return str; }; </code></pre>  <hr>  <p><strong>EDIT:</strong> Made it a bit more efficient by eliminating the <code>.match()</code> call in the <code>while</code> statement.</p>  <p><strong>EDIT:</strong> Changed it so that the same error is thrown if you don't pass any arguments.</p>"			2011-02-11 21:31:54.443 UTC
4974238	javascript|python|format	JavaScript equivalent of Python's format() function?	"<p>Python has this beautiful function to turn this:</p>  <pre><code>bar1 = 'foobar' bar2 = 'jumped' bar3 = 'dog'  foo = 'The lazy ' + bar3 + ' ' + bar2 ' over the ' + bar1 # The lazy dog jumped over the foobar </code></pre>  <p>Into this:</p>  <pre><code>bar1 = 'foobar' bar2 = 'jumped' bar3 = 'dog'  foo = 'The lazy {} {} over the {}'.format(bar3, bar2, bar1) # The lazy dog jumped over the foobar </code></pre>  <p>Does JavaScript have such a function? If not, how would I create one which follows the same syntax as Python's implementation?</p>"	2011-02-11 21:26:38.847 UTC	4974690	"<p>Another approach, using the <a href=""https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/String/replace"" rel=""noreferrer""><code>String.prototype.replace</code></a> method, with a ""replacer"" function as second argument:</p>  <pre><code>String.prototype.format = function () {   var i = 0, args = arguments;   return this.replace(/{}/g, function () {     return typeof args[i] != 'undefined' ? args[i++] : '';   }); };  var bar1 = 'foobar',     bar2 = 'jumped',     bar3 = 'dog';  'The lazy {} {} over the {}'.format(bar3, bar2, bar1); // ""The lazy dog jumped over the foobar"" </code></pre>"			2011-02-11 22:25:07.59 UTC
4974238	javascript|python|format	JavaScript equivalent of Python's format() function?	"<p>Python has this beautiful function to turn this:</p>  <pre><code>bar1 = 'foobar' bar2 = 'jumped' bar3 = 'dog'  foo = 'The lazy ' + bar3 + ' ' + bar2 ' over the ' + bar1 # The lazy dog jumped over the foobar </code></pre>  <p>Into this:</p>  <pre><code>bar1 = 'foobar' bar2 = 'jumped' bar3 = 'dog'  foo = 'The lazy {} {} over the {}'.format(bar3, bar2, bar1) # The lazy dog jumped over the foobar </code></pre>  <p>Does JavaScript have such a function? If not, how would I create one which follows the same syntax as Python's implementation?</p>"	2011-02-11 21:26:38.847 UTC	61245737	"<p>My own srtipped down version of <a href=""https://stackoverflow.com/a/4974284/309917"">YAHOO's <code>printf</code></a> reported by PatrikAkerstrand:</p>  <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-js lang-js prettyprint-override""><code>function format() {    return [...arguments].reduce((acc, arg, idx) =&gt;      acc.replace(new RegExp(""\\{"" + (idx - 1) + ""\\}"", ""g""), arg)); }  console.log(   format('Confirm {1} want {0} beers', 3, 'you') );</code></pre> </div> </div> </p>"			2020-04-16 08:23:16.01 UTC
4974238	javascript|python|format	JavaScript equivalent of Python's format() function?	"<p>Python has this beautiful function to turn this:</p>  <pre><code>bar1 = 'foobar' bar2 = 'jumped' bar3 = 'dog'  foo = 'The lazy ' + bar3 + ' ' + bar2 ' over the ' + bar1 # The lazy dog jumped over the foobar </code></pre>  <p>Into this:</p>  <pre><code>bar1 = 'foobar' bar2 = 'jumped' bar3 = 'dog'  foo = 'The lazy {} {} over the {}'.format(bar3, bar2, bar1) # The lazy dog jumped over the foobar </code></pre>  <p>Does JavaScript have such a function? If not, how would I create one which follows the same syntax as Python's implementation?</p>"	2011-02-11 21:26:38.847 UTC	67524218	"<p>Simple implementation without using extra function</p> <pre><code>[bar1, bar2, bar3].reduce(   (str, val) =&gt; str.replace(/{}/, val),   'The lazy {} {} over the {}' ) </code></pre>"			2021-05-13 18:18:15.393 UTC
4974238	javascript|python|format	JavaScript equivalent of Python's format() function?	"<p>Python has this beautiful function to turn this:</p>  <pre><code>bar1 = 'foobar' bar2 = 'jumped' bar3 = 'dog'  foo = 'The lazy ' + bar3 + ' ' + bar2 ' over the ' + bar1 # The lazy dog jumped over the foobar </code></pre>  <p>Into this:</p>  <pre><code>bar1 = 'foobar' bar2 = 'jumped' bar3 = 'dog'  foo = 'The lazy {} {} over the {}'.format(bar3, bar2, bar1) # The lazy dog jumped over the foobar </code></pre>  <p>Does JavaScript have such a function? If not, how would I create one which follows the same syntax as Python's implementation?</p>"	2011-02-11 21:26:38.847 UTC	31017922	"<p>In the file</p>  <p><a href=""https://github.com/BruceSherwood/glowscript/blob/master/lib/glow/api_misc.js"" rel=""nofollow"">https://github.com/BruceSherwood/glowscript/blob/master/lib/glow/api_misc.js</a></p>  <p>is a function String.prototype.format = function(args) that fully implements the Python string.format() function, not limited simply to handling character strings.</p>"			2015-06-24 04:55:44.73 UTC
4974238	javascript|python|format	JavaScript equivalent of Python's format() function?	"<p>Python has this beautiful function to turn this:</p>  <pre><code>bar1 = 'foobar' bar2 = 'jumped' bar3 = 'dog'  foo = 'The lazy ' + bar3 + ' ' + bar2 ' over the ' + bar1 # The lazy dog jumped over the foobar </code></pre>  <p>Into this:</p>  <pre><code>bar1 = 'foobar' bar2 = 'jumped' bar3 = 'dog'  foo = 'The lazy {} {} over the {}'.format(bar3, bar2, bar1) # The lazy dog jumped over the foobar </code></pre>  <p>Does JavaScript have such a function? If not, how would I create one which follows the same syntax as Python's implementation?</p>"	2011-02-11 21:26:38.847 UTC	59352434	"<pre><code>String.prototype.format = function () {     var i=0,args=arguments,formats={         ""f"":(v,s,c,f)=&gt;{s=s||' ',c=parseInt(c||'0'),f=parseInt(f||'-1');v=f&gt;0?Math.floor(v).toString()+"".""+Math.ceil(v*Math.pow(10,f)).toString().slice(-f):(f==-1?v.toString():Math.floor(v).toString());return c&gt;v.length?s.repeat(c-v.length)+v:v;},         ""d"":(v,s,c,f)=&gt;{s=s||' ',c=parseInt(c||'0');v=Math.floor(v).toString();return c&gt;v.length?s.repeat(c-v.length)+v:v;},         ""s"":(v,s,c,f)=&gt;{s=s||' ',c=parseInt(c||'0');return c&gt;v.length?s.repeat(c-v.length)+v:v;},         ""x"":(v,s,c,f)=&gt;{s=s||' ',c=parseInt(c||'0');v=Math.floor(v).toString(16);return c&gt;v.length?s.repeat(c-v.length)+v:v;},         ""X"":(v,s,c,f)=&gt;{s=s||' ',c=parseInt(c||'0');v=Math.floor(v).toString(16).toUpperCase();return c&gt;v.length?s.repeat(c-v.length)+v:v;},     };     return this.replace(/{(\d+)?:?([0=-_*])?(\d+)?\.?(\d+)?([dfsxX])}/g, function () {         let pos = arguments[1]||i;i++;         return typeof args[pos] != 'undefined' ? formats[arguments[5]](args[pos],arguments[2],arguments[3],arguments[4]) : '';     }); }; </code></pre>"			2019-12-16 07:52:25.24 UTC
4974238	javascript|python|format	JavaScript equivalent of Python's format() function?	"<p>Python has this beautiful function to turn this:</p>  <pre><code>bar1 = 'foobar' bar2 = 'jumped' bar3 = 'dog'  foo = 'The lazy ' + bar3 + ' ' + bar2 ' over the ' + bar1 # The lazy dog jumped over the foobar </code></pre>  <p>Into this:</p>  <pre><code>bar1 = 'foobar' bar2 = 'jumped' bar3 = 'dog'  foo = 'The lazy {} {} over the {}'.format(bar3, bar2, bar1) # The lazy dog jumped over the foobar </code></pre>  <p>Does JavaScript have such a function? If not, how would I create one which follows the same syntax as Python's implementation?</p>"	2011-02-11 21:26:38.847 UTC	59352473	"<p>You can use template literals in JS,</p>  <pre><code>const bar1 = 'foobar' const bar2 = 'jumped' const bar3 = 'dog' foo = `The lazy ${bar3} ${bar2} over the ${bar1}` </code></pre>  <p>I think this was helpful.</p>"			2019-12-16 07:56:07.3 UTC
4974238	javascript|python|format	JavaScript equivalent of Python's format() function?	"<p>Python has this beautiful function to turn this:</p>  <pre><code>bar1 = 'foobar' bar2 = 'jumped' bar3 = 'dog'  foo = 'The lazy ' + bar3 + ' ' + bar2 ' over the ' + bar1 # The lazy dog jumped over the foobar </code></pre>  <p>Into this:</p>  <pre><code>bar1 = 'foobar' bar2 = 'jumped' bar3 = 'dog'  foo = 'The lazy {} {} over the {}'.format(bar3, bar2, bar1) # The lazy dog jumped over the foobar </code></pre>  <p>Does JavaScript have such a function? If not, how would I create one which follows the same syntax as Python's implementation?</p>"	2011-02-11 21:26:38.847 UTC	28669227	"<p>JS:</p>  <pre><code>String.prototype.format = function () {     var str = this;     for (var i = 0; i &lt; arguments.length; i++) {         str = str.replace('{' + i + '}', arguments[i]);     }     return str; }  bar1 = 'foobar'; bar2 = 'jumped'; bar3 = 'dog';  python_format = 'The lazy {2} {1} over the {0}'.format(bar1,bar2,bar3);  document.getElementById(""demo"").innerHTML = ""JavaScript equivalent of Python's format() function:&lt;br&gt;&lt;span id='python_str'&gt;"" + python_format + ""&lt;/span&gt;""; </code></pre>  <p>HTML:</p>  <pre><code>&lt;p id=""demo""&gt;&lt;/p&gt; </code></pre>  <p>CSS:</p>  <pre><code>span#python_str {     color: red;     font-style: italic; } </code></pre>  <p>OUTPUT:</p>  <blockquote>   <p>JavaScript equivalent of Python's format() function:</p>      <p>The lazy dog jumped over the foobar</p> </blockquote>  <p>DEMO:</p>  <p><a href=""https://jsfiddle.net/mitma/w7bcdqLj/embedded/result/"" rel=""nofollow"">jsFiddle</a></p>"			2015-02-23 08:03:31.83 UTC
4998566	python|webkit|gecko	Web crawler capable of interpreting Javascript in python for Windows	"<p>My ultimate goal is to build a web crawler capable of downloading all of the images on a webpage.  My understanding from the reading I've done is that I need to embed a rendering/layout engine such as Gecko or Webkit.  </p>  <p>Unfortunately, I'm running windows, so <a href=""http://www.velocityreviews.com/forums/t734935-ann-pywebkit-python-bindings-for-webkit-dom-alpha.html"" rel=""nofollow"">PyWebkit is out</a> and short learning C++ for Gecko or Java to use Rhino, I'm not sure where to turn. </p>  <p>Is there a reliable rendering engine with python bindings that will work in windows (64-bit, Windows 7)?  Is there an easy way to execute javascript within a python script on windows?</p>"	2011-02-14 23:34:35.093 UTC	4998622	"<p>You don't need Webkit to do that. All you need it an engine to run Javascript code, so take a look at <a href=""http://code.google.com/p/v8/"" rel=""nofollow"">Gogole V8</a> or <a href=""http://www.mozilla.org/js/spidermonkey/"" rel=""nofollow"">Mozilla SpiderMonkey</a>.</p>  <p>If you're prefer Python to build your crawler, you may want to use <a href=""http://code.google.com/p/pyv8/"" rel=""nofollow"">PyV8</a> as it provides all necessary bindings.</p>"			2011-02-14 23:41:08.7 UTC
5022447	javascript|python|date	Converting date from Python to Javascript	"<p>I'm having difficulty working with dates in Python and Javascript.</p>  <pre><code>&gt;&gt;&gt; d = date(2004, 01, 01) &gt;&gt;&gt; d datetime.date(2004, 1, 1) &gt;&gt;&gt; time.mktime(d.timetuple()) 1072944000.0 </code></pre>  <p>Then, in Javascript (data sent over Ajax):</p>  <pre><code>&gt;&gt;&gt; new Date(1072944000.0) Tue Jan 13 1970 02:02:24 GMT-0800 (PST) {} </code></pre>  <p>I'm confused. Shouldn't the Javascript date be the same as the one that I entered in Python? What am I doing wrong?</p>"	2011-02-16 21:39:31.67 UTC	14469780	"<p>Python:</p>  <pre><code>import datetime, time d = datetime.datetime.utcnow() for_js = int(time.mktime(d.timetuple())) * 1000 </code></pre>  <p>Then in JS:</p>  <pre><code>new Date({{ for_js }}); </code></pre>  <p>In Flask you can do:</p>  <pre><code>@app.template_filter('date_to_millis') def date_to_millis(d):     """"""Converts a datetime object to the number of milliseconds since the unix epoch.""""""     return int(time.mktime(d.timetuple())) * 1000 </code></pre>  <p>And then do:</p>  <pre><code>new Date({{ current_user.created|date_to_millis }}); </code></pre>"			2013-01-22 23:11:47.823 UTC
5022447	javascript|python|date	Converting date from Python to Javascript	"<p>I'm having difficulty working with dates in Python and Javascript.</p>  <pre><code>&gt;&gt;&gt; d = date(2004, 01, 01) &gt;&gt;&gt; d datetime.date(2004, 1, 1) &gt;&gt;&gt; time.mktime(d.timetuple()) 1072944000.0 </code></pre>  <p>Then, in Javascript (data sent over Ajax):</p>  <pre><code>&gt;&gt;&gt; new Date(1072944000.0) Tue Jan 13 1970 02:02:24 GMT-0800 (PST) {} </code></pre>  <p>I'm confused. Shouldn't the Javascript date be the same as the one that I entered in Python? What am I doing wrong?</p>"	2011-02-16 21:39:31.67 UTC	5022491	<p>Python is returning the time since the epoch in seconds. Javascript takes the time in milliseconds. Multiply the time by 1000 before passing it to <code>Date()</code> and you should get the expected result.</p>  <pre><code>new Date(1072944000.0 * 1000) </code></pre>			2011-02-16 21:43:20.74 UTC
5022447	javascript|python|date	Converting date from Python to Javascript	"<p>I'm having difficulty working with dates in Python and Javascript.</p>  <pre><code>&gt;&gt;&gt; d = date(2004, 01, 01) &gt;&gt;&gt; d datetime.date(2004, 1, 1) &gt;&gt;&gt; time.mktime(d.timetuple()) 1072944000.0 </code></pre>  <p>Then, in Javascript (data sent over Ajax):</p>  <pre><code>&gt;&gt;&gt; new Date(1072944000.0) Tue Jan 13 1970 02:02:24 GMT-0800 (PST) {} </code></pre>  <p>I'm confused. Shouldn't the Javascript date be the same as the one that I entered in Python? What am I doing wrong?</p>"	2011-02-16 21:39:31.67 UTC	5022488	"<p>Javascript's <code>Date()</code> takes milliseconds as an argument. Python's uses seconds. You have to multiply by 1,000.</p>"			2011-02-16 21:43:00.22 UTC
5128454	javascript|python|json	is json the answer to this: python program will talk and javascript will listen?	"<p>the same problem haunting me a month ago is still haunting me now. i know ive asked several questions regarding this on this site and i am truly sorry for that. your suggestions have all been excellent but the answer is still elusive. i now realize that this is a direct result of me not being able to phrase my question properly and for that i am sorry.</p>  <p>to give you guys a generalized view of things, here i go: the situation is like this, i have 2 server side scripts that i want to run.</p>  <ol> <li><p>a <strong>python program/script that continuously spouts some numbers</strong></p></li> <li><p><strong>based on the output from that python script, a javascript script will perform some action on a webpage</strong> (e.g., change background color, display alert message, change some text)</p></li> </ol>  <p>ive studied the replies to my previous posts and have found that what i want to accomplish is more or less accomplished by json. it is my understanding that json transforms 'program-specific' variables into a format that is more 'standard or general or global'.  two different programs therefore now have the means to 'talk' with each other because they are now speaking the same 'language'. </p>  <p>the problem is then this, how do i actually facilitate their communication? what is the 'cellphone' between these server side scripts? do they even need one?</p>  <p>thank you! </p>"	2011-02-26 17:18:14.27 UTC	5128524	"<p>I don't know Javascript or json, but... if you've ever seen an Unix-like operating system, you know about pipes. Like program1 | program2 | program3 ... Why don't you just connect Python and Javascript programs with pipes? The first one writes to stdout, and the next one reads from stdin. </p>"			2011-02-26 17:29:30.16 UTC
5128454	javascript|python|json	is json the answer to this: python program will talk and javascript will listen?	"<p>the same problem haunting me a month ago is still haunting me now. i know ive asked several questions regarding this on this site and i am truly sorry for that. your suggestions have all been excellent but the answer is still elusive. i now realize that this is a direct result of me not being able to phrase my question properly and for that i am sorry.</p>  <p>to give you guys a generalized view of things, here i go: the situation is like this, i have 2 server side scripts that i want to run.</p>  <ol> <li><p>a <strong>python program/script that continuously spouts some numbers</strong></p></li> <li><p><strong>based on the output from that python script, a javascript script will perform some action on a webpage</strong> (e.g., change background color, display alert message, change some text)</p></li> </ol>  <p>ive studied the replies to my previous posts and have found that what i want to accomplish is more or less accomplished by json. it is my understanding that json transforms 'program-specific' variables into a format that is more 'standard or general or global'.  two different programs therefore now have the means to 'talk' with each other because they are now speaking the same 'language'. </p>  <p>the problem is then this, how do i actually facilitate their communication? what is the 'cellphone' between these server side scripts? do they even need one?</p>  <p>thank you! </p>"	2011-02-26 17:18:14.27 UTC	5128601	"<p>I assume you mean: Python is on the web server, and Javascript is running in the client's web browser.</p>  <p>Because browsers are all different (IE6 is terrible, Chrome is great), there are a huge number of ways people found to ""hack"" this ""cellphone"" into place. These techniques are called AJAX and COMET techniques. There is no one ""cellphone"", but a whole bunch of them! Hopefully, you can find a library to select the right technique for the browser, and you just have to worry about the messages.</p>  <p>Comet is harder to do, but lets the server ""push"" messages to the client.</p>  <p>Ajax can be easier - you just periodically ""pull"" messages from the server.</p>  <p>Start with Ajax, then look at comet if you really need it. Just start by have the client (javascript) make a ""GET"" request, to see if the number has changed.</p>"			2011-02-26 17:43:22.553 UTC
5128454	javascript|python|json	is json the answer to this: python program will talk and javascript will listen?	"<p>the same problem haunting me a month ago is still haunting me now. i know ive asked several questions regarding this on this site and i am truly sorry for that. your suggestions have all been excellent but the answer is still elusive. i now realize that this is a direct result of me not being able to phrase my question properly and for that i am sorry.</p>  <p>to give you guys a generalized view of things, here i go: the situation is like this, i have 2 server side scripts that i want to run.</p>  <ol> <li><p>a <strong>python program/script that continuously spouts some numbers</strong></p></li> <li><p><strong>based on the output from that python script, a javascript script will perform some action on a webpage</strong> (e.g., change background color, display alert message, change some text)</p></li> </ol>  <p>ive studied the replies to my previous posts and have found that what i want to accomplish is more or less accomplished by json. it is my understanding that json transforms 'program-specific' variables into a format that is more 'standard or general or global'.  two different programs therefore now have the means to 'talk' with each other because they are now speaking the same 'language'. </p>  <p>the problem is then this, how do i actually facilitate their communication? what is the 'cellphone' between these server side scripts? do they even need one?</p>  <p>thank you! </p>"	2011-02-26 17:18:14.27 UTC	5128547	"<p>This probably isn't the answer that you are looking for, and without links to your previous posts, I don't have much to go on, but nonetheless...</p>  <p>javascript is client side. I can interpret your question 2 different ways... </p>  <ol> <li><p>Your python script is running on your computer, and you want a script to actually alter your current browser window. </p>  <p>Not too sure, but writing a browser plugin may be the answer here.</p></li> <li><p>Your python script is running on the server, and as a result of the script running, you want the display of your site to be changed for viewing persons. </p>  <p>In this case, you will could use ajax polling (or similar) on your site. Have your site be polling the server with ajax, call a server method that checks the output of the script (maybe written to a file?), and see if it has changed.</p></li> </ol>"			2011-02-26 17:35:27.367 UTC
5128454	javascript|python|json	is json the answer to this: python program will talk and javascript will listen?	"<p>the same problem haunting me a month ago is still haunting me now. i know ive asked several questions regarding this on this site and i am truly sorry for that. your suggestions have all been excellent but the answer is still elusive. i now realize that this is a direct result of me not being able to phrase my question properly and for that i am sorry.</p>  <p>to give you guys a generalized view of things, here i go: the situation is like this, i have 2 server side scripts that i want to run.</p>  <ol> <li><p>a <strong>python program/script that continuously spouts some numbers</strong></p></li> <li><p><strong>based on the output from that python script, a javascript script will perform some action on a webpage</strong> (e.g., change background color, display alert message, change some text)</p></li> </ol>  <p>ive studied the replies to my previous posts and have found that what i want to accomplish is more or less accomplished by json. it is my understanding that json transforms 'program-specific' variables into a format that is more 'standard or general or global'.  two different programs therefore now have the means to 'talk' with each other because they are now speaking the same 'language'. </p>  <p>the problem is then this, how do i actually facilitate their communication? what is the 'cellphone' between these server side scripts? do they even need one?</p>  <p>thank you! </p>"	2011-02-26 17:18:14.27 UTC	5128572	"<p>When 2 process need to communicate, they need to decide of a common/shared way to express things and a protocol to exchange those things.</p>  <p>In your case, since one of the processes is a browser, the protocol of choice is http. So the browser needs to do an http request or regular http request to your python process.</p>  <p>This python process Will need in Some way or another to be exposed via http.</p>  <p>There are several ways to build a web server in python. You should read this article : <a href=""http://fragments.turtlemeat.com/pythonwebserver.php"" rel=""nofollow"">http://fragments.turtlemeat.com/pythonwebserver.php</a> as a jumpstart.</p>  <p>Once you have this, your browser Will be able to issue HTTP GET requests to your server and your server can reply with a string.</p>  <p>This string can be whatever you like. Nevertheless if your answer contains structured data it can be a good start to use the XML notation or the json notation.</p>  <p>Json (stands for Javascript object notation) is very easy to use in javascript and this is why many people advised you to choose this notation.</p>  <p>I hope this will help you</p>  <p>Jérome wagner</p>"			2011-02-26 17:38:39.1 UTC
5128454	javascript|python|json	is json the answer to this: python program will talk and javascript will listen?	"<p>the same problem haunting me a month ago is still haunting me now. i know ive asked several questions regarding this on this site and i am truly sorry for that. your suggestions have all been excellent but the answer is still elusive. i now realize that this is a direct result of me not being able to phrase my question properly and for that i am sorry.</p>  <p>to give you guys a generalized view of things, here i go: the situation is like this, i have 2 server side scripts that i want to run.</p>  <ol> <li><p>a <strong>python program/script that continuously spouts some numbers</strong></p></li> <li><p><strong>based on the output from that python script, a javascript script will perform some action on a webpage</strong> (e.g., change background color, display alert message, change some text)</p></li> </ol>  <p>ive studied the replies to my previous posts and have found that what i want to accomplish is more or less accomplished by json. it is my understanding that json transforms 'program-specific' variables into a format that is more 'standard or general or global'.  two different programs therefore now have the means to 'talk' with each other because they are now speaking the same 'language'. </p>  <p>the problem is then this, how do i actually facilitate their communication? what is the 'cellphone' between these server side scripts? do they even need one?</p>  <p>thank you! </p>"	2011-02-26 17:18:14.27 UTC	5128561	"<p>If I understand what you're asking, the ""cellphone"" is TCP/IP. The javascript is not server-side; it runs on the client side, and alters what the client's browser displays based on json data that it downloads from the server -- data that in this case is generated by Python. </p>  <p>This question provides a relevant example, though it's a bit technical: <a href=""https://stackoverflow.com/questions/455580/json-datetime-between-python-and-javascript"">JSON datetime between Python and JavaScript</a></p>  <p>Here's a very basic tutorial that explains how to create a dynamic webpage using python and javascript. It doesn't appear to use json, but it should familiarize you with the fundamentals. Once you understand what's there, using json to transport more complicated data should be fairly straightforward. </p>  <p><a href=""http://kooneiform.wordpress.com/2010/02/28/python-and-ajax-for-beginners-with-webpy-and-jquery/"" rel=""nofollow noreferrer"">http://kooneiform.wordpress.com/2010/02/28/python-and-ajax-for-beginners-with-webpy-and-jquery/</a></p>"			2011-02-26 17:36:58.247 UTC
5168718	javascript|python|ruby|performance|language-design	"What blocks Ruby, Python to get Javascript V8 speed?"	"<p>Are there any Ruby / Python features that are blocking implementation of optimizations (e.g. <a href=""http://en.wikipedia.org/wiki/Inline_caching"">inline caching</a>) V8 engine has?</p>  <p>Python is co-developed by Google guys so it shouldn't be blocked by software patents. </p>  <p>Or this is rather matter of resources put into the V8 project by Google. </p>"	2011-03-02 14:20:15.45 UTC	5169238	"<p>Performance doesn't seem to be a major focus of the core Python developers, who seem to feel that ""fast enough"" is good enough, and that features that help programmers be more productive are more important than features that help computers run code faster. </p>  <p>Indeed, however, there was a (now abandoned) Google project, <a href=""http://code.google.com/p/unladen-swallow/"" rel=""noreferrer"">unladen-swallow</a>, to produce a faster Python interpreter compatible with the standard interpreter. <a href=""http://codespeak.net/pypy/dist/pypy/doc/"" rel=""noreferrer"">PyPy</a> is another project that intends to produce a faster Python. There is also <a href=""http://psyco.sourceforge.net/"" rel=""noreferrer"">Psyco</a>, the forerunner of PyPy, which can provide performance boosts to many Python scripts without changing out the whole interpreter, and <a href=""http://cython.org/"" rel=""noreferrer"">Cython</a>, which lets you write high-performance C libraries for Python using something very much like Python syntax.</p>"			2011-03-02 14:54:44.77 UTC
5168718	javascript|python|ruby|performance|language-design	"What blocks Ruby, Python to get Javascript V8 speed?"	"<p>Are there any Ruby / Python features that are blocking implementation of optimizations (e.g. <a href=""http://en.wikipedia.org/wiki/Inline_caching"">inline caching</a>) V8 engine has?</p>  <p>Python is co-developed by Google guys so it shouldn't be blocked by software patents. </p>  <p>Or this is rather matter of resources put into the V8 project by Google. </p>"	2011-03-02 14:20:15.45 UTC	5169259	"<p>A good part of it has to do with community. Python and Ruby for the most part have no corporate backing. No one gets paid to work on Python and Ruby full-time (and they especially don't get paid to work on CPython or MRI the whole time). V8, on the other hand, is backed by the most powerful IT company in the world.</p>  <p>Furthermore, V8 can be faster because the only thing that matters to the V8 people is the interpreter -- they have no standard library to work on, no concerns about language design. They just write the interpreter. That's it.</p>  <p>It has nothing to do with intellectual property law. Nor is Python co-developed by Google guys (its creator works there along with a few other committers, but they don't get paid to work on Python).</p>  <p>Another obstacle to Python speed is Python 3. Its adoption seems to be the main concern of the language developers -- to the point that they have frozen development of new language features until other implementations catch up.</p>  <p>On to the technical details, I don't know much about Ruby, but Python has a number of places where optimizations could be used (and Unladen Swallow, a Google project, started to implement these before biting the dust). <a href=""http://code.google.com/p/unladen-swallow/wiki/ProjectPlan"" rel=""noreferrer"">Here are some of the optimizations that they planned</a>. I could see Python gaining V8 speed in the future if a JIT a la PyPy gets implemented for CPython, but that does not seem likely for the coming years (the focus right now is Python 3 adoption, not a JIT).</p>  <p>Many also feel that Ruby and Python could benefit immensely from removing their respective <a href=""http://en.wikipedia.org/wiki/Global_Interpreter_Lock"" rel=""noreferrer"">global interpreter locks</a>.</p>  <p>You also have to understand that Python and Ruby are both much heavier languages than JS -- they provide far more in the way of standard library, language features, and structure. The class system of object-orientation alone adds a great deal of weight (in a good way, I think). I almost think of Javascript as a language designed to be embedded, like Lua (and in many ways, they are similar). Ruby and Python have a much richer set of features, and that expressiveness is usually going to come at the cost of speed.</p>"			2011-03-02 14:56:14.913 UTC
5168718	javascript|python|ruby|performance|language-design	"What blocks Ruby, Python to get Javascript V8 speed?"	"<p>Are there any Ruby / Python features that are blocking implementation of optimizations (e.g. <a href=""http://en.wikipedia.org/wiki/Inline_caching"">inline caching</a>) V8 engine has?</p>  <p>Python is co-developed by Google guys so it shouldn't be blocked by software patents. </p>  <p>Or this is rather matter of resources put into the V8 project by Google. </p>"	2011-03-02 14:20:15.45 UTC	5172833	"<blockquote>   <p>What blocks Ruby, Python to get Javascript V8 speed?</p> </blockquote>  <p>Nothing.</p>  <p>Well, okay: money. (And time, people, resources, but if you have money, you can buy those.)</p>  <p>V8 has a team of brilliant, highly-specialized, highly-experienced (and thus highly-paid) engineers working on it, that have decades of experience (I'm talking individually&nbsp;&ndash; collectively it's more like centuries) in creating high-performance execution engines for dynamic OO languages. They are basically the same people who also created the Sun HotSpot JVM (among many others).</p>  <p>Lars Bak, the lead developer, has been literally working on VMs for 25 years (and all of those VMs have lead up to V8), which is basically his entire (professional) life. Some of the people writing Ruby VMs aren't even 25 years old.</p>  <blockquote>   <p>Are there any Ruby / Python features that are blocking implementation of optimizations (e.g. inline caching) V8 engine has?</p> </blockquote>  <p>Given that at least IronRuby, JRuby, MagLev, MacRuby and Rubinius have either monomorphic (IronRuby) or polymorphic inline caching, the answer is obviously no.</p>  <p>Modern Ruby implementations already do a great deal of optimizations. For example, for certain operations, Rubinius's <code>Hash</code> class is faster than YARV's. Now, this doesn't sound terribly exciting until you realize that Rubinius's <code>Hash</code> class is implemented in 100% pure Ruby, while YARV's is implemented in 100% hand-optimized C.</p>  <p>So, at least in some cases, Rubinius can generate better code than GCC!</p>  <blockquote>   <p>Or this is rather matter of resources put into the V8 project by Google.</p> </blockquote>  <p>Yes. Not just Google. The lineage of V8's source code is 25 years old now. The people who are working on V8 also created the Self VM (to this day one of the fastest dynamic OO language execution engines ever created), the Animorphic Smalltalk VM (to this day one of the fastest Smalltalk execution engines ever created), the HotSpot JVM (the fastest JVM ever created, probably the fastest VM period) and OOVM (one of the most efficient Smalltalk VMs ever created).</p>  <p>In fact, Lars Bak, the lead developer of V8, worked on <em>every single one</em> of those, plus a few others.</p>"			2011-03-02 20:10:59.333 UTC
5168718	javascript|python|ruby|performance|language-design	"What blocks Ruby, Python to get Javascript V8 speed?"	"<p>Are there any Ruby / Python features that are blocking implementation of optimizations (e.g. <a href=""http://en.wikipedia.org/wiki/Inline_caching"">inline caching</a>) V8 engine has?</p>  <p>Python is co-developed by Google guys so it shouldn't be blocked by software patents. </p>  <p>Or this is rather matter of resources put into the V8 project by Google. </p>"	2011-03-02 14:20:15.45 UTC	28007045	"<p>Because JavaScript implementations need not care about backwards compatibility of their bindings.</p>  <p>Until recently the only users of the JavaScript implementations have been web browsers.  Due to security requirements, only the web browser vendors had the privilege to extend the functionality by writing bindings to the runtimes.  Thus there was no need keep the C API of the bindings backwards compatible, it was permissible to request the web browser developers update their source code as the JavaScript runtimes evolved; they were working together anyways.  Even V8, which was a latecomer to the game, and also lead by a very very experienced developer, have changed the API as it became better.</p>  <p>OTOH Ruby is used (mainly) on the server-side.  Many popular ruby extensions are written as C bindings (consider an RDBMS driver).  In other words, Ruby would have never succeeded without maintaining the compatibility.</p>  <p>Today, the difference still exist to some extent.  Developers using node.js are complaining that it is hard to keep their native extensions backwards compatible, as V8 changes the API over time (and that is one of the reasons node.js has been forked).  IIRC ruby is still taking a much more conservative approach in this respect.</p>"			2015-01-18 04:09:59.557 UTC
5168718	javascript|python|ruby|performance|language-design	"What blocks Ruby, Python to get Javascript V8 speed?"	"<p>Are there any Ruby / Python features that are blocking implementation of optimizations (e.g. <a href=""http://en.wikipedia.org/wiki/Inline_caching"">inline caching</a>) V8 engine has?</p>  <p>Python is co-developed by Google guys so it shouldn't be blocked by software patents. </p>  <p>Or this is rather matter of resources put into the V8 project by Google. </p>"	2011-03-02 14:20:15.45 UTC	27997687	"<p>As other people have mentioned, Python has a performant JIT compiler in the form of <a href=""http://pypy.org/"">PyPy</a>.</p>  <p>Making meaningful benchmarks is always subtle, but I happen to have a simple benchmark of <a href=""http://en.wikipedia.org/wiki/K-means_clustering"">K-means</a> written in different languages - you can find it <a href=""https://github.com/andreaferretti/kmeans"">here</a>. One of the constraints was that the various languages should all implement the same algorithm and should strive to be simple and idiomatic (as opposed to optimized for speed). I have written all the implementations, so I know I have not cheated, although I cannot claim for all languages that what I have written is idiomatic (I only have a passing knowledge of some of those).</p>  <p>I do not claim any definitive conclusion, but PyPy was among the fastest implementations I got, far better than Node. CPython, instead, was at the slowest end of the ranking.</p>"			2015-01-17 08:34:57.233 UTC
5168718	javascript|python|ruby|performance|language-design	"What blocks Ruby, Python to get Javascript V8 speed?"	"<p>Are there any Ruby / Python features that are blocking implementation of optimizations (e.g. <a href=""http://en.wikipedia.org/wiki/Inline_caching"">inline caching</a>) V8 engine has?</p>  <p>Python is co-developed by Google guys so it shouldn't be blocked by software patents. </p>  <p>Or this is rather matter of resources put into the V8 project by Google. </p>"	2011-03-02 14:20:15.45 UTC	28000307	"<h2>The statement is not exactly true</h2>  <p>Just like V8 is just an implementation for JS, CPython is just one implementation for Python. <a href=""http://www.cdotson.com/2014/08/nodejs-vs-python-vs-pypy-a-simple-performance-comparison/"" rel=""nofollow"">Pypy has performances matching V8's</a>.</p>  <p>Also, there the problem of perceived performance : since V8 is natively non blocking, Web dev leads to more performant projects because you save the IO wait. And V8 is mainly used for dev Web where IO is key, so they compare it to similar projects. But you can use Python in many, many other areas than web dev. And you can even use C extensions for a lot of tasks, such as scientific computations or encryption, and crunch data with blazing perfs.</p>  <p>But on the web, most popular Python and Ruby projects are blocking. Python, especially, has the legacy of the synchronous WSGI standard, and frameworks like the famous Django are based on it.</p>  <p>You can write asynchronous Python (like with Twisted, Tornado, gevent or asyncio) or Ruby. But it's not done often. The best tools are still blocking.</p>  <p>However, they are some reasons for why the default implementations in Ruby and Python are not as speedy as V8.</p>  <h2>Experience</h2>  <p>Like Jörg W Mittag pointed out, the guys working on V8 are VM geniuses. Python is dev by a bunch a passionate people, very good in a lot of domains, but are not as specialized in VM tuning.</p>  <h2>Resources</h2>  <p>The Python Software foundation has very little money : <a href=""http://pyfound.blogspot.fr/2012/01/psf-grants-over-37000-to-python.html"" rel=""nofollow"">less than 40k</a> in a year to invest in Python. This is kinda crazy when you think big players such as Google, Facebook or Apple are all using Python, but it's the ugly truth : most work is done for free. The language that powers Youtube and existed before Java has been handcrafted by volunteers. </p>  <p>They are smart and dedicated volunteers, but when they identify they need more juice in a field, they can't ask for 300k to hire a top notch specialist for this area of expertise. They have to look around for somebody who would do it for free.</p>  <p>While this works, it means you have to be very a careful about your priorities. Hence, now we need to look at :</p>  <h2>Objectives</h2>  <p>Even with the latest modern features, writing Javascript is terrible. You have scoping issues, very few collections, terrible string and array manipulation, almost no stdlist apart from date, maths and regexes, and no syntactic sugar even for very common operations.</p>  <p>But in V8, you've got speed.</p>  <p>This is because, speed was the main objective for Google, since it's a bottleneck for page rendering in Chrome.</p>  <p>In Python, usability is the main objective. Because it's almost never the bottleneck on the project. The scarce resource here is developer time. It's optimized for the developer.</p>"			2015-01-17 14:11:07.887 UTC
5168718	javascript|python|ruby|performance|language-design	"What blocks Ruby, Python to get Javascript V8 speed?"	"<p>Are there any Ruby / Python features that are blocking implementation of optimizations (e.g. <a href=""http://en.wikipedia.org/wiki/Inline_caching"">inline caching</a>) V8 engine has?</p>  <p>Python is co-developed by Google guys so it shouldn't be blocked by software patents. </p>  <p>Or this is rather matter of resources put into the V8 project by Google. </p>"	2011-03-02 14:20:15.45 UTC	28052710	"<p>V8 is fast due to the JIT, Crankshaft, the type inferencer and data-optimized code. Tagged pointers, NaN-tagging of doubles. And of course it does normal compiler optimizations in the middle. </p>  <p>The plain ruby, python and perl engines don't do neither of the those, just minor basic optimizations.</p>  <p>The only major vm which comes close is luajit, which doesn't even do type inference, constant folding, NaN-tagging nor integers, but uses similar small code and data structures, not as fat as the bad languages. And my prototype dynamic languages, potion and p2 have similar features as luajit, and outperform v8. With an optional type system, ""gradual typing"", you could easily outperform v8, as you can bypass crankshaft. See dart.</p>  <p>The known optimized backends, like pypy or jruby still suffer from various over-engineering techniques.</p>"			2015-01-20 18:34:31.467 UTC
5168718	javascript|python|ruby|performance|language-design	"What blocks Ruby, Python to get Javascript V8 speed?"	"<p>Are there any Ruby / Python features that are blocking implementation of optimizations (e.g. <a href=""http://en.wikipedia.org/wiki/Inline_caching"">inline caching</a>) V8 engine has?</p>  <p>Python is co-developed by Google guys so it shouldn't be blocked by software patents. </p>  <p>Or this is rather matter of resources put into the V8 project by Google. </p>"	2011-03-02 14:20:15.45 UTC	5967686	"<p>Because of different design priorities and use case goals I believe.</p>  <p>In general main purpose of scripting (a.k.a. dynamic) languages is to be a ""glue"" between calls of native functions. And these native functions shall a) cover most critical/frequently used areas and b) be as effective as possible.</p>  <p>Here is an example:  <a href=""https://stackoverflow.com/questions/5929267/jquery-sort-causing-ios-safari-to-freeze/"">jQuery sort causing iOS Safari to freeze</a>  The freeze there is caused by excessive use of get-by-selector calls. If get-by-selector would  be implemented in native code and effectively it will be no such problem at all.</p>  <p>Consider ray-tracer demo that is frequently used demo for V8 demonstration. In Python world it can be implemented in native code as Python provides all facilities for native extensions. But in V8 realm (client side sandbox) you have no other options rather than making VM to be [sub]effective as possible. And so the only option see ray-tracer implementation there is by using script code. </p>  <p>So different priorities and motivations.</p>  <p>In <a href=""http://www.terrainformatica.com/sciter/main.whtm"" rel=""nofollow noreferrer"">Sciter</a> I've made a test by implementing pretty much full jQurey core natively. On practical tasks like <a href=""http://www.terrainformatica.com/wp-content/uploads/2008/08/scide.png"" rel=""nofollow noreferrer"">ScIDE</a> (IDE made of HTML/CSS/Script) I believe such solution works significantly better then any VM optimizations.</p>"			2011-05-11 16:39:11.667 UTC
5168718	javascript|python|ruby|performance|language-design	"What blocks Ruby, Python to get Javascript V8 speed?"	"<p>Are there any Ruby / Python features that are blocking implementation of optimizations (e.g. <a href=""http://en.wikipedia.org/wiki/Inline_caching"">inline caching</a>) V8 engine has?</p>  <p>Python is co-developed by Google guys so it shouldn't be blocked by software patents. </p>  <p>Or this is rather matter of resources put into the V8 project by Google. </p>"	2011-03-02 14:20:15.45 UTC	5837725	"<p>I just ran across this question and there is also a big technical reason for the performance difference that wasn't mentioned.  Python has a very large ecosystem of powerful software extensions, but most of these extensions are written in C or other low-level languages for performance and are heavily tied to the CPython API. </p>  <p>There are lots of well-known techniques (JIT, modern garbage collector, etc) that could be used to speed up the CPython implementation but all would require substantial changes to the API, breaking most of the extensions in the process.  CPython would be faster, but a lot of what makes Python so attractive (the extensive software stack) would be lost.  Case in point, there are several faster Python implementations out there but they have little traction compared to CPython.</p>"			2011-04-29 21:46:35.463 UTC
5168718	javascript|python|ruby|performance|language-design	"What blocks Ruby, Python to get Javascript V8 speed?"	"<p>Are there any Ruby / Python features that are blocking implementation of optimizations (e.g. <a href=""http://en.wikipedia.org/wiki/Inline_caching"">inline caching</a>) V8 engine has?</p>  <p>Python is co-developed by Google guys so it shouldn't be blocked by software patents. </p>  <p>Or this is rather matter of resources put into the V8 project by Google. </p>"	2011-03-02 14:20:15.45 UTC	5960992	"<p>There's a lot more impetus to highly optimize JavaScript interpretors which is why we see so many resources being put into them between Mozilla, Google, and Microsoft. JavaScript has to be downloaded, parsed, compiled, and run in real time while a (usually impatient) human being is waiting for it, it has to run WHILE a person is interacting with it, and it's doing this in an uncontrolled client-end environment that could be a computer, a phone, or a toaster. It HAS to be efficient in order to run under these conditions effectively.</p>  <p>Python and Ruby are run in an environment controlled by the developer/deployer. A beefy server or desktop system generally where the limiting factor will be things like memory or disk I/O and not execution time. Or where non-engine optimizations like caching can be utilized. For these languages it probably does make more sense to focus on language and library feature set over speed optimization.</p>  <p>The side benefit of this is that we have two great high performance open source JavaScript engines that can and are being re-purposed for all manner of applications such as Node.js.</p>"			2011-05-11 07:56:46.427 UTC
5168718	javascript|python|ruby|performance|language-design	"What blocks Ruby, Python to get Javascript V8 speed?"	"<p>Are there any Ruby / Python features that are blocking implementation of optimizations (e.g. <a href=""http://en.wikipedia.org/wiki/Inline_caching"">inline caching</a>) V8 engine has?</p>  <p>Python is co-developed by Google guys so it shouldn't be blocked by software patents. </p>  <p>Or this is rather matter of resources put into the V8 project by Google. </p>"	2011-03-02 14:20:15.45 UTC	17427721	<p>Misleading question. V8 is a JIT (a just in time compiler) implementation of JavaScript and in its most popular non-browser implementation Node.js it is constructed around an event loop. CPython is not a JIT &amp; not evented. But these exist in Python most commonly in the PyPy project - a CPython 2.7 (and soon to be 3.0+) compatible JIT. And there are loads of evented server libraries like Tornado for example. Real world tests exist between PyPy running Tornado vs Node.js and the performance differences are slight.</p>			2013-07-02 14:05:05.663 UTC
5180438	javascript	Javascript equivilent of Python's include	"<p>I'm hunting for the equivalent of Python's import statement. </p>  <p>I'd love for the following to work:</p>  <pre><code>&lt;head&gt;           &lt;script type=""text/javascript"" src=""foo.js""&gt;&lt;/script&gt;     &lt;script type=""text/javascript""&gt;         function useBar(){             alert(foo.bar());         }     &lt;/script&gt; &lt;/head&gt; &lt;body&gt;     &lt;button type=""button"" onClick=""useBar();""&gt;Bar&lt;/button&gt; </code></pre>  <p>What would foo.js look like, and would I have to do anything additional in the html page to make it work?</p>"	2011-03-03 11:59:59.393 UTC	5180463	"<p><code>foo.js</code> contains a portion of js code (functions, objects, plain code). Whin this file was loaded throught <code>&lt;script type=""text/javascript"" source=""foo.js""&gt;&lt;/script&gt;</code> all of its code now available across page.</p>"			2011-03-03 12:03:07.513 UTC
5180438	javascript	Javascript equivilent of Python's include	"<p>I'm hunting for the equivalent of Python's import statement. </p>  <p>I'd love for the following to work:</p>  <pre><code>&lt;head&gt;           &lt;script type=""text/javascript"" src=""foo.js""&gt;&lt;/script&gt;     &lt;script type=""text/javascript""&gt;         function useBar(){             alert(foo.bar());         }     &lt;/script&gt; &lt;/head&gt; &lt;body&gt;     &lt;button type=""button"" onClick=""useBar();""&gt;Bar&lt;/button&gt; </code></pre>  <p>What would foo.js look like, and would I have to do anything additional in the html page to make it work?</p>"	2011-03-03 11:59:59.393 UTC	5180483	"<p>foo.js would be just a regular javascript file, with functions and/or variables, with no &lt;script&gt; tags, nothing else required.</p>"			2011-03-03 12:04:26.14 UTC
5180438	javascript	Javascript equivilent of Python's include	"<p>I'm hunting for the equivalent of Python's import statement. </p>  <p>I'd love for the following to work:</p>  <pre><code>&lt;head&gt;           &lt;script type=""text/javascript"" src=""foo.js""&gt;&lt;/script&gt;     &lt;script type=""text/javascript""&gt;         function useBar(){             alert(foo.bar());         }     &lt;/script&gt; &lt;/head&gt; &lt;body&gt;     &lt;button type=""button"" onClick=""useBar();""&gt;Bar&lt;/button&gt; </code></pre>  <p>What would foo.js look like, and would I have to do anything additional in the html page to make it work?</p>"	2011-03-03 11:59:59.393 UTC	5180477	"<p>You mean <code>python's import</code>, right?</p>  <p>If you want namespaces, you can do something like that in <code>foo.js</code>.</p>  <pre><code>var foo = {     bar: function() {      },     baz: function() {      } }; </code></pre>"			2011-03-03 12:04:13.497 UTC
5196408	javascript|python	How to interpret JavaScript with Python	"<p>It is possible to run JavaScript with Python? There are any library that makes this possible?</p>  <p>I need to execute some JavaScript, I know that this is possible with some Java libraries, but I prefer Python.</p>  <p>Can someone give me a clue on this?</p>  <p>Best Regards,</p>"	2011-03-04 16:18:13.5 UTC	5197083	"<p>Does it need to be CPython ? </p>  <p>And does the Javascript need a browser client environment ?</p>  <p>If not, you can probably call <a href=""http://www.mozilla.org/rhino/"" rel=""nofollow"">Rhino</a> from <a href=""http://jython.org/"" rel=""nofollow"">Jython</a>. </p>  <p>( Note also that Jython release is only at 2.5.2 )</p>"			2011-03-04 17:22:54.5 UTC
5196408	javascript|python	How to interpret JavaScript with Python	"<p>It is possible to run JavaScript with Python? There are any library that makes this possible?</p>  <p>I need to execute some JavaScript, I know that this is possible with some Java libraries, but I prefer Python.</p>  <p>Can someone give me a clue on this?</p>  <p>Best Regards,</p>"	2011-03-04 16:18:13.5 UTC	5629379	"<p>Yes you can execute JavaScript from Python. I find the easiest way is through Python's bindings to the webkit library - <a href=""http://webscraping.com/blog/Scraping-JavaScript-webpages-with-webkit/"" rel=""nofollow"">here is an example</a>. In my experience selenium and spidermonkey are harder to get working.</p>"			2011-04-12 01:21:47.627 UTC
5196408	javascript|python	How to interpret JavaScript with Python	"<p>It is possible to run JavaScript with Python? There are any library that makes this possible?</p>  <p>I need to execute some JavaScript, I know that this is possible with some Java libraries, but I prefer Python.</p>  <p>Can someone give me a clue on this?</p>  <p>Best Regards,</p>"	2011-03-04 16:18:13.5 UTC	5196684	"<p>Using spidermonkey would give you a tightier integration of your code, but as a workaround, you could make the javascript get run in a browser using Selenium remote-control:</p>  <p><a href=""http://seleniumhq.org/projects/remote-control/"" rel=""nofollow"">http://seleniumhq.org/projects/remote-control/</a> (there are ways of doing that without needing a ""physical"" display for the browser, using VNC servers, for example)</p>"			2011-03-04 16:43:58.643 UTC
5196408	javascript|python	How to interpret JavaScript with Python	"<p>It is possible to run JavaScript with Python? There are any library that makes this possible?</p>  <p>I need to execute some JavaScript, I know that this is possible with some Java libraries, but I prefer Python.</p>  <p>Can someone give me a clue on this?</p>  <p>Best Regards,</p>"	2011-03-04 16:18:13.5 UTC	5196426	"<p>You can check <a href=""http://code.google.com/p/python-spidermonkey/"" rel=""noreferrer"">spidermonkey</a></p>"			2011-03-04 16:19:38.18 UTC
5196408	javascript|python	How to interpret JavaScript with Python	"<p>It is possible to run JavaScript with Python? There are any library that makes this possible?</p>  <p>I need to execute some JavaScript, I know that this is possible with some Java libraries, but I prefer Python.</p>  <p>Can someone give me a clue on this?</p>  <p>Best Regards,</p>"	2011-03-04 16:18:13.5 UTC	13970886	"<p>If you already use PyQt and QWebView in it, displaying custom html, the function evaluateJavaScript of QWebFrame may be useful for you:</p>  <pre><code># Python def runJavaScriptText(self, jsText):    jsText = 'hello()'  # just to fit javascript example    self.webView.page().currentFrame().evaluateJavaScript(jsText)   // Javascript function hello() {     alert('hello'); }; </code></pre>"			2012-12-20 11:10:56.553 UTC
5202085	javascript|python|string|split	JavaScript equivalent of Python's rsplit	"<blockquote> <p>str.rsplit([sep[, maxsplit]])</p> <p>Return a list of the words in the string, using sep as the delimiter string. If maxsplit is given, at most maxsplit splits are done, the rightmost ones. If sep is not specified or None, any whitespace string is a separator. Except for splitting from the right, rsplit() behaves like split() which is described in detail below.</p> </blockquote> <p><a href=""http://docs.python.org/library/stdtypes.html#str.rsplit"" rel=""noreferrer"">http://docs.python.org/library/stdtypes.html#str.rsplit</a></p>"	2011-03-05 06:14:12.12 UTC	5202130	"<p>Assuming the semantics of JavaScript split are acceptable use the following</p>  <pre><code>String.prototype.rsplit = function (delimiter, limit) {   delimiter = this.split (delimiter || /s+/);   return limit ? delimiter.splice (-limit) : delimiter; }  </code></pre>"			2011-03-05 06:26:01.197 UTC
5202085	javascript|python|string|split	JavaScript equivalent of Python's rsplit	"<blockquote> <p>str.rsplit([sep[, maxsplit]])</p> <p>Return a list of the words in the string, using sep as the delimiter string. If maxsplit is given, at most maxsplit splits are done, the rightmost ones. If sep is not specified or None, any whitespace string is a separator. Except for splitting from the right, rsplit() behaves like split() which is described in detail below.</p> </blockquote> <p><a href=""http://docs.python.org/library/stdtypes.html#str.rsplit"" rel=""noreferrer"">http://docs.python.org/library/stdtypes.html#str.rsplit</a></p>"	2011-03-05 06:14:12.12 UTC	5202185	"<pre><code>String.prototype.rsplit = function(sep, maxsplit) {     var split = this.split(sep);     return maxsplit ? [ split.slice(0, -maxsplit).join(sep) ].concat(split.slice(-maxsplit)) : split; } </code></pre>  <p>This one functions more closely to the Python version</p>  <p>""blah,derp,blah,beep"".rsplit("","",1) // [ 'blah,derp,blah', 'beep' ]</p>"			2011-03-05 06:40:00.803 UTC
5202085	javascript|python|string|split	JavaScript equivalent of Python's rsplit	"<blockquote> <p>str.rsplit([sep[, maxsplit]])</p> <p>Return a list of the words in the string, using sep as the delimiter string. If maxsplit is given, at most maxsplit splits are done, the rightmost ones. If sep is not specified or None, any whitespace string is a separator. Except for splitting from the right, rsplit() behaves like split() which is described in detail below.</p> </blockquote> <p><a href=""http://docs.python.org/library/stdtypes.html#str.rsplit"" rel=""noreferrer"">http://docs.python.org/library/stdtypes.html#str.rsplit</a></p>"	2011-03-05 06:14:12.12 UTC	73604286	"<p>i think this is more &quot;equivalent&quot; until a bug is found, &quot;close&quot; is not acceptable for an answer.</p> <pre><code>String.prototype.rsplit = function(sep, maxsplit) {     var result = []     if ( (sep === undefined) ) {         sep = &quot; &quot;         maxsplit = 0     }      if (maxsplit === 0  )         return [this]      var data = this.split(sep)       if (!maxsplit || (maxsplit&lt;0) || (data.length==maxsplit+1) )         return data      while (data.length &amp;&amp; (result.length &lt; maxsplit)) {         result.push( data.pop() )     }     if (result.length) {         result.reverse()         if (data.length&gt;1) {             return [data.join(sep), result ]         }         return result     }     return [this] } </code></pre>"			2022-09-05 03:28:05.327 UTC
5202085	javascript|python|string|split	JavaScript equivalent of Python's rsplit	"<blockquote> <p>str.rsplit([sep[, maxsplit]])</p> <p>Return a list of the words in the string, using sep as the delimiter string. If maxsplit is given, at most maxsplit splits are done, the rightmost ones. If sep is not specified or None, any whitespace string is a separator. Except for splitting from the right, rsplit() behaves like split() which is described in detail below.</p> </blockquote> <p><a href=""http://docs.python.org/library/stdtypes.html#str.rsplit"" rel=""noreferrer"">http://docs.python.org/library/stdtypes.html#str.rsplit</a></p>"	2011-03-05 06:14:12.12 UTC	45587081	"<p>You can also use JS String functions <strong>split</strong> + <strong>slice</strong></p>  <p>Python:</p>  <p><code>'a,b,c'.rsplit(',' -1)[0]</code> will give you <code>'a,b'</code></p>  <p>Javascript:</p>  <p><code>'a,b,c'.split(',').slice(0, -1).join(',')</code> will also give you <code>'a,b'</code></p>"			2017-08-09 09:43:54.803 UTC
5207948	javascript|python|screen-scraping|mechanize|spidermonkey	Click on a javascript link within python?	"<p>I am navigating a site using python's mechanize module and having trouble clicking on a javascript link for next page.  I did a bit of reading and people suggested I need python-spidermonkey and DOMforms.  I managed to get them installed by I am not sure of the syntax to actually click on the link.</p>  <p>I can identify the code on the page as: </p>  <pre><code>&lt;a href=""javascript:__doPostBack('ctl00$MainContent$gvSearchResults','Page$2')""&gt;2&lt;/a&gt; </code></pre>  <p>Does anyone know how to click on it? or if perhaps there's another tool.</p>  <p>Thanks</p>"	2011-03-06 01:06:14.7 UTC	5207983	"<p>how about calling <code>__doPostBack('ctl00$MainContent$gvSearchResults','Page$'+pageid);</code> (javascript method, via python-spidermonkey)</p>"			2011-03-06 01:18:10.583 UTC
5207948	javascript|python|screen-scraping|mechanize|spidermonkey	Click on a javascript link within python?	"<p>I am navigating a site using python's mechanize module and having trouble clicking on a javascript link for next page.  I did a bit of reading and people suggested I need python-spidermonkey and DOMforms.  I managed to get them installed by I am not sure of the syntax to actually click on the link.</p>  <p>I can identify the code on the page as: </p>  <pre><code>&lt;a href=""javascript:__doPostBack('ctl00$MainContent$gvSearchResults','Page$2')""&gt;2&lt;/a&gt; </code></pre>  <p>Does anyone know how to click on it? or if perhaps there's another tool.</p>  <p>Thanks</p>"	2011-03-06 01:06:14.7 UTC	5218412	"<p>instead of struggling with python-spidermonkey try <a href=""http://www.pyside.org/docs/pyside/PySide/QtWebKit/index.html"" rel=""nofollow"">webkit's qt python bindings</a>.</p>  <p>Here is a <a href=""http://blog.sitescraper.net/2010/06/scraping-javascript-webpages-in-python.html"" rel=""nofollow"">full example to execute JavaScript and extract the final HTML</a>.</p>"			2011-03-07 10:18:32.293 UTC
5207948	javascript|python|screen-scraping|mechanize|spidermonkey	Click on a javascript link within python?	"<p>I am navigating a site using python's mechanize module and having trouble clicking on a javascript link for next page.  I did a bit of reading and people suggested I need python-spidermonkey and DOMforms.  I managed to get them installed by I am not sure of the syntax to actually click on the link.</p>  <p>I can identify the code on the page as: </p>  <pre><code>&lt;a href=""javascript:__doPostBack('ctl00$MainContent$gvSearchResults','Page$2')""&gt;2&lt;/a&gt; </code></pre>  <p>Does anyone know how to click on it? or if perhaps there's another tool.</p>  <p>Thanks</p>"	2011-03-06 01:06:14.7 UTC	5227031	"<p>I mainly use <a href=""http://htmlunit.sourceforge.net/"">HtmlUnit</a> under jython for these use cases. Also I published a simple article on the subject: <a href=""http://blog.databigbang.com/web-scraping-ajax-and-javascript-sites/"">Web Scraping Ajax and Javascript sites</a>.</p>"			2011-03-08 00:36:29.183 UTC
5228920	javascript|python	Use of python in javascript	"<p>All I'm looking for is a multi-platform python-independent way of, say, printing ""hi"" on the screen using Python, but in an HTML file</p>"	2011-03-08 05:59:11.533 UTC	5228936	"<p>I guess you might want to check out <a href=""http://www.skulpt.org/"" rel=""nofollow"">Skulpt</a> and <a href=""http://pyjs.org/"" rel=""nofollow"">Pyjamas</a>.</p>"			2011-03-08 06:01:39.687 UTC
5235602	javascript|python	Automation tool for testing python code and javascript	<p>Does anyone know any free automation testing tool for unit testing python code and javascript?</p>	2011-03-08 16:52:05.2 UTC	5235653	"<p>Try nose <a href=""http://code.google.com/p/python-nose/"" rel=""nofollow"">http://code.google.com/p/python-nose/</a></p>"			2011-03-08 16:56:13.757 UTC
5235602	javascript|python	Automation tool for testing python code and javascript	<p>Does anyone know any free automation testing tool for unit testing python code and javascript?</p>	2011-03-08 16:52:05.2 UTC	5237087	"<p>You will likely want to compose a number of testing frameworks together. Our team uses nose <a href=""http://code.google.com/p/python-nose/"" rel=""nofollow"">http://code.google.com/p/python-nose/</a> as pointed out by @Arbie. </p>  <p>We use nose to also run selenium <a href=""http://seleniumhq.org/"" rel=""nofollow"">http://seleniumhq.org/</a> tests with the python driver which is really the only way I know of to effectively test javascript that manipulates the DOM. Although I have high hopes for WebDriver as part of selenium 2 once it stabilizes. While using selenium we've had to Monkey Patch the python driver to make it more pythonic. Wrapping the python-selenium driver so it changes:</p>  <pre><code>selenium.doCommand('waitForElementPresent', 'selector') </code></pre>  <p>into:</p>  <pre><code>selenium.wait_for_element_present('selector') </code></pre>  <p>You can then use nose and selenium to run QUnit <a href=""http://docs.jquery.com/Qunit"" rel=""nofollow"">http://docs.jquery.com/Qunit</a> if you want to just test base javascript functions that don't necessarily change the DOM.</p>  <p>Example selenium integration:</p>  <pre><code>def setUp(self):     self.test_url = ""http://your_domain""     self.selenium = selenium(""localhost"", 4444, ""*firefox3"", self.test_url)     self.selenium.start()  def tearDown(self):     self.selenium.stop() </code></pre>"			2011-03-08 19:09:57.807 UTC
5281288	javascript|python|arrays	How to convert string variable from python into a javascript literal array?	"<p>I have tried to convert python string data separated by commas into a javascript array variable but the process does not seem to be working.</p>  <p>these are my current codes:</p>  <pre><code>    var tagstring = {{ tag_data }};     var availableTags = new Array();     var availableTags = tagstring.split("",""); </code></pre>  <p>I need the array to look something like this:</p>  <pre><code>var availableTags = [""Google App Engine"",""jQuery""]; </code></pre>  <p>Any ideas?</p>  <p>EDIT:</p>  <p>These are the working codes, thanks to the stackoverflow community :)</p>  <pre><code>    var tagstring = ""{{ tag_data }}"";     var availableTags = new Array();     var availableTags = tagstring.split("",""); </code></pre>  <p>Basically, even though the python variable is a string, it still needs to be specified as a string variable in javascript</p>"	2011-03-12 07:30:08.517 UTC	5281324	"<p>What does </p>  <pre><code>var tagstring = ""{{ tag_data }}""; var availableTags = tagstring.split("",""); </code></pre>  <p>produce?</p>  <p>By the way, this can further be collapsed into a one-liner.</p>  <pre><code>var availableTags = ""{{ tag_data }}"".split("",""); </code></pre>"			2011-03-12 07:38:45.823 UTC
5281288	javascript|python|arrays	How to convert string variable from python into a javascript literal array?	"<p>I have tried to convert python string data separated by commas into a javascript array variable but the process does not seem to be working.</p>  <p>these are my current codes:</p>  <pre><code>    var tagstring = {{ tag_data }};     var availableTags = new Array();     var availableTags = tagstring.split("",""); </code></pre>  <p>I need the array to look something like this:</p>  <pre><code>var availableTags = [""Google App Engine"",""jQuery""]; </code></pre>  <p>Any ideas?</p>  <p>EDIT:</p>  <p>These are the working codes, thanks to the stackoverflow community :)</p>  <pre><code>    var tagstring = ""{{ tag_data }}"";     var availableTags = new Array();     var availableTags = tagstring.split("",""); </code></pre>  <p>Basically, even though the python variable is a string, it still needs to be specified as a string variable in javascript</p>"	2011-03-12 07:30:08.517 UTC	5281534	"<p>The proper solution is not using any string functions - be it in python or javascript - but a JSON encoder:</p>  <pre><code>var availableTags = {{ json.dumps(elem.strip() for elem in tag_data.split(',')) }} </code></pre>  <p>Of course it would be much nicer if you had a list in python instead of a string...</p>"			2011-03-12 08:39:19.413 UTC
5281288	javascript|python|arrays	How to convert string variable from python into a javascript literal array?	"<p>I have tried to convert python string data separated by commas into a javascript array variable but the process does not seem to be working.</p>  <p>these are my current codes:</p>  <pre><code>    var tagstring = {{ tag_data }};     var availableTags = new Array();     var availableTags = tagstring.split("",""); </code></pre>  <p>I need the array to look something like this:</p>  <pre><code>var availableTags = [""Google App Engine"",""jQuery""]; </code></pre>  <p>Any ideas?</p>  <p>EDIT:</p>  <p>These are the working codes, thanks to the stackoverflow community :)</p>  <pre><code>    var tagstring = ""{{ tag_data }}"";     var availableTags = new Array();     var availableTags = tagstring.split("",""); </code></pre>  <p>Basically, even though the python variable is a string, it still needs to be specified as a string variable in javascript</p>"	2011-03-12 07:30:08.517 UTC	5281334	"<p>Assuming this is in a Django template, then this should work:</p>  <pre><code>var tagstring = ""{{ tag_data|escapejs }}""; </code></pre>  <p>I've added quotation marks (<code>""</code>) around the <code>tag_data</code>, since otherwise just the literal text in the string will be inserted into the Javascript; you want to construct a Javascript string that <em>contains</em> this value.</p>  <p>I've also used the <code>escapejs</code> tag to avoid problems with embedded backslashes, etc.</p>"			2011-03-12 07:40:08.737 UTC
5322239	javascript|python|cherrypy|genshi	how to access python object in javascript function?	"<p>that means now i am working on python with cherryypy and genshi framework with help of this i send python variable to html file using genshi but i want to access variable that variable in javascript function so how can i do?..</p>  <p>html file is:</p>  <pre><code>&lt;!DOCTYPE html&gt; &lt;html xmlns=""http://www.w3.org/1999/xhtml""       xmlns:xi=""http://www.w3.org/2001/XInclude""       xmlns:py=""http://genshi.edgewall.org/""&gt; &lt;head&gt;     &lt;title&gt;Home&lt;/title&gt;     &lt;script type=""text/javascript""&gt;         function setparent(val) {             document.getElementById(""tpar"").value=val;         }     &lt;/script&gt; &lt;/head&gt; &lt;body&gt;     &lt;div &gt;         &lt;table&gt;             &lt;div py:for=""user in users""&gt;                 &lt;tr&gt;                     &lt;td&gt;                         &lt;div title=""${user.userid}"" onclick=""setparent('${user.userid}')""&gt;${user.fname+"" ""+ user.lname}&lt;/div&gt;                         &lt;py:if test=""user.resource.__len__() &gt; 0""&gt;                             &lt;div&gt;                                 &lt;py:for each=""res in user.resource""&gt;                                     &lt;div&gt;&lt;a href=""""&gt;${user.resource[res]}&lt;/a&gt;&lt;/div&gt;                                 &lt;/py:for&gt;                             &lt;/div&gt;                         &lt;/py:if&gt;                     &lt;/td&gt;                 &lt;/tr&gt;             &lt;/div&gt;         &lt;/table&gt;     &lt;/div&gt; &lt;/body&gt; &lt;/html&gt; </code></pre>  <p>as  i want to access ""users"" variable of py into javascriptfunction</p>  <p>can u tell me this?</p>"	2011-03-16 07:32:37.05 UTC	5322258	<p>The proper way to pass values from python to javascript is - especially if they can contain more than just plain numbers or a very restricted charset (basically <code>[a-zA-Z0-9]</code> and non-quoting symbols) - running the value through a json encoder (<code>json.dumps(...)</code>) to ensure they do not break anything.</p>			2011-03-16 07:35:51.727 UTC
5327485	javascript|python|google-chrome	How can I execute a Python script from Javascript?	<p>I have written a module in python which performs some function.</p>  <p>I then created a Google Chrome extension which makes use of JSON and javascript.</p>  <p>Now when I click on the extension I want it to execute the python program which is stored on my hard disk and display the output on the browser again. </p>  <p>Is there a way in which I can do this??</p>	2011-03-16 15:21:32.513 UTC	5328172	<p>forgive me if i'm incorrect on infinite proportions. </p>  <p>I believe that JavaScript is executed in a sandboxed/ isolated environment. Therefore you cannot invoke a python interpreter* or any other executable residing on the system.</p>  <p>*unless the interpreter itself were written in javascript.</p>			2011-03-16 16:10:25.32 UTC
5327485	javascript|python|google-chrome	How can I execute a Python script from Javascript?	<p>I have written a module in python which performs some function.</p>  <p>I then created a Google Chrome extension which makes use of JSON and javascript.</p>  <p>Now when I click on the extension I want it to execute the python program which is stored on my hard disk and display the output on the browser again. </p>  <p>Is there a way in which I can do this??</p>	2011-03-16 15:21:32.513 UTC	5327549	"<p>Repeated : </p>  <p><a href=""https://stackoverflow.com/questions/1901093/calling-python-from-javascript"">Calling Python from JavaScript</a></p>  <p>Here you have some answers, Pyjamas is probably the best option in your case</p>"			2011-03-16 15:25:51.653 UTC
5327485	javascript|python|google-chrome	How can I execute a Python script from Javascript?	<p>I have written a module in python which performs some function.</p>  <p>I then created a Google Chrome extension which makes use of JSON and javascript.</p>  <p>Now when I click on the extension I want it to execute the python program which is stored on my hard disk and display the output on the browser again. </p>  <p>Is there a way in which I can do this??</p>	2011-03-16 15:21:32.513 UTC	25336537	<p>Probably a late reply but a possible solution is to make your python script act as a server and let the browser plugin interact with it.</p>			2014-08-16 03:00:14.053 UTC
5329942	javascript|python	Is it possible to send a URL from javascript running on the browser to the python program running on the client machine?	<p>Can I send the url of the page from the javascript to the python program running on the client machine ??</p>  <p>Also can I redirect the output of the python program to the javascript to be displayed on the browser?</p>	2011-03-16 18:25:34.343 UTC	5330014	<p>You can if you're running a server with Python.</p>  <p>Create a simple server with python and return json. The only requirement is that the python server must be started in order to except requests.</p>			2011-03-16 18:30:23.217 UTC
5329942	javascript|python	Is it possible to send a URL from javascript running on the browser to the python program running on the client machine?	<p>Can I send the url of the page from the javascript to the python program running on the client machine ??</p>  <p>Also can I redirect the output of the python program to the javascript to be displayed on the browser?</p>	2011-03-16 18:25:34.343 UTC	5332051	"<p>In case you want to use XMLHttpRequests you might run into problems that cross-domain requests are not permitted. See <a href=""http://en.wikipedia.org/wiki/XMLHttpRequest#Cross-domain_requests"" rel=""nofollow"">http://en.wikipedia.org/wiki/XMLHttpRequest#Cross-domain_requests</a> for details.  In case the 'send' action can be triggered by user input, e.g. clicking on a link or submitting a form, you can specify the Python server URL as the form action target or the href of the link.</p>"			2011-03-16 21:31:13.923 UTC
5338685	javascript|associative-array	How can I replicate Python's dict.items() in Javascript?	"<p>In Javascript I have a JSON object from which I want to process just the items:</p>  <pre><code>var json = {     itema: {stuff: 'stuff'},     itemb: {stuff: 'stuff'},     itemc: {stuff: 'stuff'},     itemd: {stuff: 'stuff'} } </code></pre>  <p>In Python I could do </p>  <pre><code>print json.items() [{stuff: 'stuff'},{stuff: 'stuff'},{stuff: 'stuff'},{stuff: 'stuff'}] </code></pre>  <p>Can I do this is js?</p>"	2011-03-17 11:58:33.487 UTC	5338708	"<p>Not sure what you want to do but I guess Json.stringify will do something like that. See <a href=""http://www.json.org/js.html"" rel=""nofollow"">http://www.json.org/js.html</a></p>"			2011-03-17 12:00:17.137 UTC
5338685	javascript|associative-array	How can I replicate Python's dict.items() in Javascript?	"<p>In Javascript I have a JSON object from which I want to process just the items:</p>  <pre><code>var json = {     itema: {stuff: 'stuff'},     itemb: {stuff: 'stuff'},     itemc: {stuff: 'stuff'},     itemd: {stuff: 'stuff'} } </code></pre>  <p>In Python I could do </p>  <pre><code>print json.items() [{stuff: 'stuff'},{stuff: 'stuff'},{stuff: 'stuff'},{stuff: 'stuff'}] </code></pre>  <p>Can I do this is js?</p>"	2011-03-17 11:58:33.487 UTC	5338762	"<p>You cannot do this the same way as in python without extending Object.prototype, which you don't want to do, because it is the path to misery.</p>  <p>You could create a helper function easily that could loop over the object and put the value into an array however, like this:</p>  <pre><code>function items(obj) {  var i, arr = [];  for(i in obj) {    arr.push(obj[i]);  }  return arr; } </code></pre>  <p>Ps: JSON is a data format, what you have is an object literal.</p>"			2011-03-17 12:05:38.553 UTC
5338685	javascript|associative-array	How can I replicate Python's dict.items() in Javascript?	"<p>In Javascript I have a JSON object from which I want to process just the items:</p>  <pre><code>var json = {     itema: {stuff: 'stuff'},     itemb: {stuff: 'stuff'},     itemc: {stuff: 'stuff'},     itemd: {stuff: 'stuff'} } </code></pre>  <p>In Python I could do </p>  <pre><code>print json.items() [{stuff: 'stuff'},{stuff: 'stuff'},{stuff: 'stuff'},{stuff: 'stuff'}] </code></pre>  <p>Can I do this is js?</p>"	2011-03-17 11:58:33.487 UTC	57234041	"<p>ubershmekel's answer makes use of lazy evaluation, compared to my answer below which uses eager evaluation. Lazy evaluation has many benefits which make it much more appropriate for performance reasons in some cases, but the transparency of eager evaluation can be a development speed boon that may make it preferable in other cases.</p>  <pre><code>const keys = Object.keys;  const values = object =&gt;   keys(object).map(key =&gt; object[key]);  const items = object =&gt;   keys(object).map(key =&gt; [key, object[key]])   obj = {a: 10, b: 20, c: 30};  keys(obj)   // [""a"", ""b"", ""c""] values(obj) // [10, 20, 30] items(obj)  // [[""a"", 10], [""b"", 20], [""c"", 30]]  items(obj).forEach(([k, v]) =&gt; console.log(k, v)) // a 10 // b 20 // c 30 </code></pre>"			2019-07-27 16:28:45.1 UTC
5338685	javascript|associative-array	How can I replicate Python's dict.items() in Javascript?	"<p>In Javascript I have a JSON object from which I want to process just the items:</p>  <pre><code>var json = {     itema: {stuff: 'stuff'},     itemb: {stuff: 'stuff'},     itemc: {stuff: 'stuff'},     itemd: {stuff: 'stuff'} } </code></pre>  <p>In Python I could do </p>  <pre><code>print json.items() [{stuff: 'stuff'},{stuff: 'stuff'},{stuff: 'stuff'},{stuff: 'stuff'}] </code></pre>  <p>Can I do this is js?</p>"	2011-03-17 11:58:33.487 UTC	42427918	"<p>In python <code>dict.items</code> returns a list of tuples containing both the keys and the values of the <code>dict</code>. Javascript doesn't have tuples, so it would have to be a nested array.</p>  <p>If you'll excuse me a little python code to show the difference.</p>  <pre><code>&gt;&gt;&gt; {1:2, 2:3}.items() [(1, 2), (2, 3)] &gt;&gt;&gt; {1:2, 2:3}.values() [2, 3] </code></pre>  <p>I see the accepted answer returns an array of the objects values, which is the equivalent of the python function <code>dict.values</code>. What is asked for is <code>dict.items</code>. To do this just loop and build up a nested array of 2 element arrays.</p>  <pre><code>function items(obj){      var ret = [];     for(v in obj){         ret.push(Object.freeze([v, obj[v]]));     }     return Object.freeze(ret); } </code></pre>  <p>I put the <code>Object.freeze</code> in to be pedantic and enforce that the returned value shouldn't be altered, to emulate the immutability of python tuples. Obviously it still works if you take it out.</p>  <p>It should be noted that doing this somewhat defeats the purpose of <code>items</code> in that it is used when iterating over the object in a linear rather than associative fashion and it avoids calculating the hash value to look up each element in the associative array. For small objects who cares but for large ones it might slow you down and there might be a more idiomatic way to do what you want in javascript.</p>  <p>Another newer way to do it is to use <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/entries"" rel=""nofollow noreferrer"">Object.entries()</a> which will do exactly what you want.</p>  <pre><code>Object.entries({1:1, 2:2, 3:3})       .forEach(function(v){           console.log(v)       }); </code></pre>  <p>The support is limited to those browser versions mentioned in the documentation.</p>"			2017-02-23 23:09:25.413 UTC
5338685	javascript|associative-array	How can I replicate Python's dict.items() in Javascript?	"<p>In Javascript I have a JSON object from which I want to process just the items:</p>  <pre><code>var json = {     itema: {stuff: 'stuff'},     itemb: {stuff: 'stuff'},     itemc: {stuff: 'stuff'},     itemd: {stuff: 'stuff'} } </code></pre>  <p>In Python I could do </p>  <pre><code>print json.items() [{stuff: 'stuff'},{stuff: 'stuff'},{stuff: 'stuff'},{stuff: 'stuff'}] </code></pre>  <p>Can I do this is js?</p>"	2011-03-17 11:58:33.487 UTC	55148600	"<p>Thanks to recent updates to JavaScript - we can solve this now:</p>  <pre><code>function items(iterable) {     return {         [Symbol.iterator]: function* () {             for (key in iterable) {                 yield [key, iterable[key]];             }         }     }; }  for (const [key, val] of items({""a"": 3, ""b"": 4, ""c"": 5})) {     console.log(key, val); } // a 3 // b 4 // c 5  for (const [key, val] of items([""a"", ""b"", ""c""])) {     console.log(key, val); } // 0 a // 1 b // 2 c </code></pre>"			2019-03-13 18:07:24.657 UTC
5367414	javascript|jquery|python	use javascript variable into python Block	"<p>I want to use JavaScript variable into python Block.</p>  <pre><code>&lt;script&gt; $(document).ready(function() {    $(""#WO_cpp_id"").change(function() {    id = this.selectedIndex;    ajax('{{=URL(r=request,f='get_CIs',vars={'CPP_Id':'#here I want to use id variable')}}', ['WO_cpp_id'], 'WO_ci_id'); }) .change(); }); &lt;/script&gt; </code></pre>  <p>Thanks in Advance</p>"	2011-03-20 08:13:41.953 UTC	5367421	"<p>That won't work. Python runs on the server before the page is ever rendered on the client; Javascript runs in the browser after the page is rendered. The <code>id</code> variable isn't even set when the Python code runs.</p>  <p>Instead, you should have your javascript code add the extra data you want to set to an existing query string (or by using the <code>data</code> attribute of jQuery's ajax options).</p>"			2011-03-20 08:17:11.207 UTC
5367414	javascript|jquery|python	use javascript variable into python Block	"<p>I want to use JavaScript variable into python Block.</p>  <pre><code>&lt;script&gt; $(document).ready(function() {    $(""#WO_cpp_id"").change(function() {    id = this.selectedIndex;    ajax('{{=URL(r=request,f='get_CIs',vars={'CPP_Id':'#here I want to use id variable')}}', ['WO_cpp_id'], 'WO_ci_id'); }) .change(); }); &lt;/script&gt; </code></pre>  <p>Thanks in Advance</p>"	2011-03-20 08:13:41.953 UTC	5367430	"<p>Your python code is running on the server. Your JavaScript code (as quoted) is running on the client. So you can't directly use a JavaScript variable in your Python code. What you do is <em>send</em> the data you want to send from the client to the server in any of several ways.</p>  <p>One of those ways is ""ajax"". This client-side code will send the contents of the variable <code>foo</code> to the server as a ""fooParameter"" parameter on a POST:</p>  <pre><code>var foo = ""This is some information""; $.ajax({     url: ""myscript.py"",     method: ""POST"",     data: {fooParameter: foo},     success: function(responseData) {         // Successful POST; do something with the response if you want     },     error: function(jxhr, statusText, err) {         // Error, handle it     } }); </code></pre>  <p>More in the <a href=""http://api.jquery.com/jQuery.ajax/"" rel=""nofollow"">jQuery docs</a> and <a href=""http://en.wikipedia.org/wiki/Ajax_%28programming%29"" rel=""nofollow"">the Wikipedia article on ajax</a>.</p>"			2011-03-20 08:19:00.8 UTC
5523747	javascript|python|namespaces|interactive|dir	Equivalent of Python's dir in Javascript	"<p>when I write Python code from the interpreter I can type <code>dir()</code> to have a list of names defined in the current scope. How can achieve to have the same information, programmatically, when I develop Javascript code from a browser using an interactive console like firebug, chrome console, etc?</p>"	2011-04-02 14:33:24.083 UTC	5524753	"<p>The global variables are kept in an easily accessible object (<code>window</code>) and so you can inspect/iterate over them easily. (Using something like the functions suggested by Glenjamin)</p>  <p>On the other hand, I don't know of any way to inspect local variables defined in functions or closures - if this is possible I'd at least guess it would be highly browser/console specific.</p>"			2011-04-02 17:37:54.45 UTC
5523747	javascript|python|namespaces|interactive|dir	Equivalent of Python's dir in Javascript	"<p>when I write Python code from the interpreter I can type <code>dir()</code> to have a list of names defined in the current scope. How can achieve to have the same information, programmatically, when I develop Javascript code from a browser using an interactive console like firebug, chrome console, etc?</p>"	2011-04-02 14:33:24.083 UTC	5523771	"<p>There are a couple of functions which do just this in the code for ChatZilla, you'll have to check the licence properly to see if you can just rip them out and use them wherever.</p>  <p>The relevant functions can be found at <a href=""http://hg.mozilla.org/chatzilla/file/59b46c0bf716/js/lib/utils.js#l136"" rel=""noreferrer"">http://hg.mozilla.org/chatzilla/file/59b46c0bf716/js/lib/utils.js#l136</a> <code>dumpObject</code> and <code>dumpObjectTree</code></p>"			2011-04-02 14:37:52.237 UTC
5523747	javascript|python|namespaces|interactive|dir	Equivalent of Python's dir in Javascript	"<p>when I write Python code from the interpreter I can type <code>dir()</code> to have a list of names defined in the current scope. How can achieve to have the same information, programmatically, when I develop Javascript code from a browser using an interactive console like firebug, chrome console, etc?</p>"	2011-04-02 14:33:24.083 UTC	11088041	"<p>There is <code>keys</code> method in <code>Object</code>, for example:</p> <pre><code>Object.keys(object) </code></pre> <p>But this return object's own properties and methods only.<br> To list all properties and methods of an object I know 2 possibilities:</p> <ol> <li><code>console.dir(object)</code> method in firebug console for Firefox and</li> <li><code>dir(object)</code> method in Google Chrome development tools.</li> </ol>"			2012-06-18 17:33:37.177 UTC
5523747	javascript|python|namespaces|interactive|dir	Equivalent of Python's dir in Javascript	"<p>when I write Python code from the interpreter I can type <code>dir()</code> to have a list of names defined in the current scope. How can achieve to have the same information, programmatically, when I develop Javascript code from a browser using an interactive console like firebug, chrome console, etc?</p>"	2011-04-02 14:33:24.083 UTC	67859180	"<h1>The Real Solution</h1> <p><strong>First</strong>, create a function that <em>lists</em> out all the <strong>properties</strong> of an object:</p> <pre><code>function dir(object) {     props = [];     for (prop in object) {         props.push(prop);     }     props.sort();     return props; } </code></pre> <p>Then, as easy as it is, call the function like <code>console.log(dir(console))</code></p>"			2021-06-06 12:34:06.493 UTC
5523747	javascript|python|namespaces|interactive|dir	Equivalent of Python's dir in Javascript	"<p>when I write Python code from the interpreter I can type <code>dir()</code> to have a list of names defined in the current scope. How can achieve to have the same information, programmatically, when I develop Javascript code from a browser using an interactive console like firebug, chrome console, etc?</p>"	2011-04-02 14:33:24.083 UTC	68437060	"<p>There are a couple of functions that you you can use to get the data that you need.</p> <h2 id=""object.keys-h6zh""><strong><code>Object.keys()</code></strong></h2> <p>This function will return all <em>enumerable</em>, <em>owned</em> properties that are <em>not</em> Symbols.</p> <pre><code>&gt; let person = {name: 'John Doe', age: 25, [Symbol('Test')] : 'value'} &gt; Object.keys(person); ['name'] // Note that the Symbol('Test') is not in the returned array! </code></pre> <h2 id=""object.getownpropertynames-5dcj""><strong><code>Object.getOwnPropertyNames()</code></strong></h2> <p>This function will return all properties that both <em>enumerable</em> and <em>non-enumerable</em> which are <em>not</em> Symbols.</p> <pre><code>&gt; Object.getOwnPropertyNames(Set) [ 'length', 'name', 'prototype' ] </code></pre> <p>Why is this function useful when we have <code>Object.keys()</code>?</p> <pre><code>&gt; Object.keys(Set) [] // Because keys doesn't give you non-enumerable properies </code></pre> <p>As an aside, why doesn't <code>Object.getOwnPropertyNames(Set)</code> doesn't give you the methods on <code>Set</code> like <code>add</code>, <code>has</code>, etc., ? Because they are on <code>Set.prototype</code>. <code>Object.getOwnPropertyNames(Set.prototype)</code> will yield a much better result.</p> <h2 id=""object.getownpropertysymbols-rphz""><strong><code>Object.getOwnPropertySymbols()</code></strong></h2> <p>This will return all the <em>owned</em> properties that are <code>Symbol</code>s in the Object you pass it to.</p> <pre><code>&gt; let person = {x: 10, Symbol('Test'): 'Test-value' }; &gt; Object.getOwnPropertySymbols(person); [Symbol(Test)] </code></pre> <h2 id=""reflect.ownkeys-k40b""><strong><code>Reflect.ownKeys()</code></strong></h2> <p>This will return all the <em>owned</em> properties that are <em>strings</em>/<em>Symbols</em> in the object you pass it to.</p> <pre><code>&gt; let person = {x: 1, [Symbol('Test')]: 'Test-value'}; &gt; Reflect.ownKeys(person); [ 'x', Symbol(Test) ] </code></pre> <h1 id=""bonus-88au""><strong>Bonus:</strong></h1> <h2 id=""object.getprototypeof-3ihv""><strong><code>Object.getPrototypeOf()</code></strong></h2> <p>This will return the <code>Prototype</code> of the Object that is passed to it.</p> <pre><code>&gt; let nameable = { name: 'name' }; &gt; let ageable = Object.create(nameable); &gt; ageable.age = 0; &gt; let person = Object.create(ageable); &gt; let proto_of_person = Object.getPrototypeOf(person); &gt; proto_of_person === ageable; true &gt; let proto_of_ageable = Object.getPrototypeOf(proto_of_person); &gt; proto_of_ageable === nameable true </code></pre> <p>Using this we can enumerate all the properties of an object and its prototype chain recursively.</p>"			2021-07-19 08:02:19.85 UTC
5523747	javascript|python|namespaces|interactive|dir	Equivalent of Python's dir in Javascript	"<p>when I write Python code from the interpreter I can type <code>dir()</code> to have a list of names defined in the current scope. How can achieve to have the same information, programmatically, when I develop Javascript code from a browser using an interactive console like firebug, chrome console, etc?</p>"	2011-04-02 14:33:24.083 UTC	66591992	"<p><strong>(just to see that list)</strong></p> <p>you can use the operator &quot;.&quot;, for example:</p> <pre><code>&gt; var a = &quot;asdfg&quot;; &gt; a. // -&gt; show the list </code></pre> <ul> <li>in the chrome console it will show you the list of options for autocompletion</li> <li>in node.js console you can do the same and press tab twice to see the list</li> </ul>"			2021-03-11 23:22:43.743 UTC
5523747	javascript|python|namespaces|interactive|dir	Equivalent of Python's dir in Javascript	"<p>when I write Python code from the interpreter I can type <code>dir()</code> to have a list of names defined in the current scope. How can achieve to have the same information, programmatically, when I develop Javascript code from a browser using an interactive console like firebug, chrome console, etc?</p>"	2011-04-02 14:33:24.083 UTC	46955463	"<p>well you can see object contains like its own properties only : By  it can work in any console not only google chrome web browser look for the img <a href=""https://i.stack.imgur.com/HWojh.png"" rel=""nofollow noreferrer"">enter image description here</a>  console.dir(obj); here link: <a href=""https://developers.google.com/web/tools/chrome-devtools/console/console-reference"" rel=""nofollow noreferrer"">https://developers.google.com/web/tools/chrome-devtools/console/console-reference</a></p>"			2017-10-26 13:19:19.523 UTC
5523747	javascript|python|namespaces|interactive|dir	Equivalent of Python's dir in Javascript	"<p>when I write Python code from the interpreter I can type <code>dir()</code> to have a list of names defined in the current scope. How can achieve to have the same information, programmatically, when I develop Javascript code from a browser using an interactive console like firebug, chrome console, etc?</p>"	2011-04-02 14:33:24.083 UTC	10329874	"<p>The Google Chrome developer tools console has a predefined dir: <a href=""https://developers.google.com/chrome-developer-tools/docs/console"" rel=""nofollow"">https://developers.google.com/chrome-developer-tools/docs/console</a></p>  <p>Firebug has console.dir: <a href=""http://getfirebug.com/logging"" rel=""nofollow"">http://getfirebug.com/logging</a></p>"			2012-04-26 08:36:56.293 UTC
5523747	javascript|python|namespaces|interactive|dir	Equivalent of Python's dir in Javascript	"<p>when I write Python code from the interpreter I can type <code>dir()</code> to have a list of names defined in the current scope. How can achieve to have the same information, programmatically, when I develop Javascript code from a browser using an interactive console like firebug, chrome console, etc?</p>"	2011-04-02 14:33:24.083 UTC	6166711	"<p>This may work for you, if you need a simple solution:</p>  <pre><code>function dir(object) {     stuff = [];     for (s in object) {         stuff.push(s);     }     stuff.sort();     return stuff; } </code></pre>"			2011-05-29 08:30:52.783 UTC
5606402	javascript|python|underscore.js	python string formatting in javascript	"<p>Is there a better way to do this?  I'm using the underscore js lib here, which is where the _. comes from.  I'm used to this sort of procedure to format strings in python and i'd like something simple for javascript without doing + + + + all the time.  This works, but it feels like i reinvented the wheel.</p>  <pre><code> function foo (iterable, string) {   var s = iterable.shift();   string = string.replace(""%s"",s);   return _.isEmpty(iterable) ? string : foo(iterable,string); };  foo(['sam','green','ham'],""%s likes %s eggs and %s.""); ""sam likes green eggs and ham."" </code></pre>"	2011-04-09 16:55:08.647 UTC	5607035	"<p>try out the <a href=""http://www.diveintojavascript.com/projects/javascript-sprintf"" rel=""nofollow"">sprintf</a> lib, specifically vsprintf.</p>  <pre><code>vsprintf('The first 4 letters of the english alphabet are: %s, %s, %s and %s', ['a', 'b', 'c', 'd']); </code></pre>"			2011-04-09 18:40:40.967 UTC
5675001	javascript|jquery|printf	sprintf() for JavaScript that behaves like Python's format (%)?	"<p>I need a JavaScript function (or jQuery plugin) for <code>printf</code>/<code>sprintf</code>. It needs to support named arguments (<code>""%(foo)s""</code>) and padding (<code>""%02d""</code>), <em>i.e.</em> the following format string should work:</p>  <pre><code>""%(amount)s.%(subunits)02d"" </code></pre>  <p>It only needs to support <code>s</code> and <code>d</code>, I don't care about all the other format strings (e.g. <code>f</code>, <code>x</code>, etc.). I don't need padding for strings/<code>s</code>, just <code>d</code>, I only need simple padding for <code>d</code>, e.g. <code>%2d</code>, <code>%3d</code>, <code>%04d</code>, etc.</p>"	2011-04-15 09:46:55.263 UTC	5676651	"<p>The PHPJS project has implemented a lot of PHP's functionality in Javascript. I can't imagine why they'd want to do that, but the fact remains that they have produced a <code>sprintf()</code> implementation which should satisfy your needs (or at least come close).</p>  <p>Code for it can be found here: <a href=""http://phpjs.org/functions/sprintf"" rel=""nofollow"">http://phpjs.org/functions/sprintf</a></p>"			2011-04-15 12:22:40.293 UTC
5675001	javascript|jquery|printf	sprintf() for JavaScript that behaves like Python's format (%)?	"<p>I need a JavaScript function (or jQuery plugin) for <code>printf</code>/<code>sprintf</code>. It needs to support named arguments (<code>""%(foo)s""</code>) and padding (<code>""%02d""</code>), <em>i.e.</em> the following format string should work:</p>  <pre><code>""%(amount)s.%(subunits)02d"" </code></pre>  <p>It only needs to support <code>s</code> and <code>d</code>, I don't care about all the other format strings (e.g. <code>f</code>, <code>x</code>, etc.). I don't need padding for strings/<code>s</code>, just <code>d</code>, I only need simple padding for <code>d</code>, e.g. <code>%2d</code>, <code>%3d</code>, <code>%04d</code>, etc.</p>"	2011-04-15 09:46:55.263 UTC	5675845	"<p>A previous question ""<a href=""https://stackoverflow.com/questions/610406/javascript-printf-string-format"">Javascript printf/string.format</a>"" has some good information.</p>  <p>Also, dive.into.javascript() has <a href=""http://www.diveintojavascript.com/projects/javascript-sprintf"" rel=""nofollow noreferrer"">a page</a> about <code>sprintf()</code>.</p>"			2011-04-15 11:14:19.487 UTC
5675001	javascript|jquery|printf	sprintf() for JavaScript that behaves like Python's format (%)?	"<p>I need a JavaScript function (or jQuery plugin) for <code>printf</code>/<code>sprintf</code>. It needs to support named arguments (<code>""%(foo)s""</code>) and padding (<code>""%02d""</code>), <em>i.e.</em> the following format string should work:</p>  <pre><code>""%(amount)s.%(subunits)02d"" </code></pre>  <p>It only needs to support <code>s</code> and <code>d</code>, I don't care about all the other format strings (e.g. <code>f</code>, <code>x</code>, etc.). I don't need padding for strings/<code>s</code>, just <code>d</code>, I only need simple padding for <code>d</code>, e.g. <code>%2d</code>, <code>%3d</code>, <code>%04d</code>, etc.</p>"	2011-04-15 09:46:55.263 UTC	35341628	"<p>Here one function</p>  <pre class=""lang-js prettyprint-override""><code>var sprintf = function(str) {   var args = arguments,     flag = true,     i = 1;    str = str.replace(/%s/g, function() {     var arg = args[i++];      if (typeof arg === 'undefined') {       flag = false;       return '';     }     return arg;   });   return flag ? str : ''; };  $(document).ready(function() {    var msg = 'the department';    $('#txt').html(sprintf('&lt;span&gt;Teamwork in &lt;/span&gt; &lt;strong&gt;%s&lt;/strong&gt;', msg));  }); </code></pre>  <pre class=""lang-html prettyprint-override""><code>&lt;script src=""https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js""&gt;&lt;/script&gt;  &lt;center id=""txt""&gt;&lt;/center&gt; </code></pre>"			2016-02-11 14:12:19.517 UTC
5687279	javascript|python|graph|canvas|render	Render graph in Python and Javascript	"<p>I am looking for libraries that can render graphs, PRETTY graphs. </p>  <p>I need to both render static images, preferably with python, and also to render them dynamically in the browser. A Canvas solution would be great, flash is acceptable too.</p>  <p>I googled around a little and found python-graph, but the images look quite ugly.</p>  <p>To clarify: I'm talking about graphs (http://en.wikipedia.org/wiki/Graph_theory), not charts.</p>"	2011-04-16 14:47:04.713 UTC	5687365	"<p>You can check out <a href=""http://code.google.com/p/pydot/"" rel=""nofollow noreferrer"">Pydot</a>, though the quality of the graphics might not be up to snuff.  What about invoking <a href=""http://raphaeljs.com/"" rel=""nofollow noreferrer"">raphael</a> in your webapp?  Not sure if people have done mathematical graphs, but the output certainly looks nice. <img src=""https://i.stack.imgur.com/ZKEBV.png"" alt=""enter image description here""></p>"			2011-04-16 15:01:38.607 UTC
5687279	javascript|python|graph|canvas|render	Render graph in Python and Javascript	"<p>I am looking for libraries that can render graphs, PRETTY graphs. </p>  <p>I need to both render static images, preferably with python, and also to render them dynamically in the browser. A Canvas solution would be great, flash is acceptable too.</p>  <p>I googled around a little and found python-graph, but the images look quite ugly.</p>  <p>To clarify: I'm talking about graphs (http://en.wikipedia.org/wiki/Graph_theory), not charts.</p>"	2011-04-16 14:47:04.713 UTC	5688408	"<p>We use <a href=""http://code.google.com/p/flot/"" rel=""nofollow"">flot</a> for the Internet Archives Open Library project and it works great. You can see a few of the graphs it's generated on the <a href=""http://openlibrary.org"" rel=""nofollow"">OpenLibrary front page</a>.</p>"			2011-04-16 17:51:47.807 UTC
5687279	javascript|python|graph|canvas|render	Render graph in Python and Javascript	"<p>I am looking for libraries that can render graphs, PRETTY graphs. </p>  <p>I need to both render static images, preferably with python, and also to render them dynamically in the browser. A Canvas solution would be great, flash is acceptable too.</p>  <p>I googled around a little and found python-graph, but the images look quite ugly.</p>  <p>To clarify: I'm talking about graphs (http://en.wikipedia.org/wiki/Graph_theory), not charts.</p>"	2011-04-16 14:47:04.713 UTC	5691839	"<p><a href=""http://processingjs.org/"" rel=""nofollow"">Processing.js</a>, a port of the <a href=""http://processing.org/"" rel=""nofollow"">Processing language</a>, is a very powerful JavaScript visualization library that can been used to generate graphs.</p>"			2011-04-17 06:03:33.65 UTC
5687279	javascript|python|graph|canvas|render	Render graph in Python and Javascript	"<p>I am looking for libraries that can render graphs, PRETTY graphs. </p>  <p>I need to both render static images, preferably with python, and also to render them dynamically in the browser. A Canvas solution would be great, flash is acceptable too.</p>  <p>I googled around a little and found python-graph, but the images look quite ugly.</p>  <p>To clarify: I'm talking about graphs (http://en.wikipedia.org/wiki/Graph_theory), not charts.</p>"	2011-04-16 14:47:04.713 UTC	5687797	"<p>Check out following:</p>  <ul> <li><a href=""http://code.google.com/p/canviz/"" rel=""nofollow"">canviz</a> - Graphviz graphs in JS</li> <li><a href=""http://code.google.com/p/pydot/"" rel=""nofollow"">pydot</a> - Graphviz for Python</li> <li><a href=""http://code.google.com/p/yapgvb/"" rel=""nofollow"">yapgvb</a> - Another alternative for Python</li> </ul>  <p>You should be able to use the same graph definition both in Python and JS. I hope those help. :)</p>"			2011-04-16 16:13:14.043 UTC
5690147	javascript|python|google-app-engine	"Calling a python method to fetch data, from a javascript function on the html page"	"<h3>Technologies being used</h3>  <ul> <li>Google app engine</li> <li>Django</li> <li>Python</li> <li>Jquery</li> </ul>  <h3>Details of the code and code excerpts</h3>  <p>I have a drop-down list (country) and a text-box (city) { the drop-down list and text-box are generated by a django-form} that get automatically populated by a GeoIp library</p>  <p>Image of how these UI elements look on the html page:</p>  <p><img src=""https://i.stack.imgur.com/jBOsS.png"" alt=""enter image description here""></p>  <ol> <li><p>Code excerpt that fills in the drop-down list and the text-box:</p>  <p><br>              // selecting users country and users city,          // the id for users country drop-down list is ""id_country_name""         // the id for users city text-box is id_city_name         $(function () {             $(""#id_country_name"").val(geoip_country_name());             $(""#id_city_name"").val(geoip_city());             // at this point the users country and city values are in from the javascript call             // now is the time to call python code to get the data values reported by other users for users country and city</p>  <pre><code>    }); &lt;/script&gt; </code></pre></li> <li><p>Sample python code for querying the database</p>  <pre><code>def get_data_for_users_country_and_city(self):     query = db.GqlQuery(""SELECT * FROM UserReportedCity where county.country_name = country_name and city.city_name = city"")     data = query.fetch(10) </code></pre></li> </ol>  <p>I have to probably package these items in a template and then return back to the html page</p>  <pre><code>template_values = {        self.__TEMPLATE_DATA_FOR_USER: data      }      #rendering the html page and passing the template_values     self.response.out.write(template.render(self.__MAIN_HTML_PAGE, template_values)) </code></pre>  <p>Please note, i haven't tested this python code yet.</p>  <h3>Question</h3>  <p>Once the values for country and city are filled in by the javascript call, I want to make a call to a python method to get the data for users country and city and populate it in the “Your City” tab.</p>  <p><strong>[EDIT#1]</strong></p>  <p>Tried the suggestions given by @Fabio Diniz and @Kevin P </p>  <p>The following is the html and javascript code:</p>  <pre><code>&lt;!-- script snippet to fill in users country and city value by making a calls to the geoip library --&gt;   &lt;script type=""text/javascript""&gt;     // selecting users country and users city,      // the id for users country drop-down list is ""id_country_name""     // the id for users city text-box is id_city_name     $(function () {         $(""#id_country_name"").val(geoip_country_name());         $(""#id_city_name"").val(geoip_city())       });      $.post(""/AjaxRequest/get_data_for_users_country_city"", {          selected_country_name: document.getElementById('id_country_name').value,          selected_city_name: document.getElementById('id_city_name').value      },     function(data) {         alert(""hello"");      }     );  &lt;/script&gt; </code></pre>  <p>The following indicates that the requests to ""/AjaxRequest/get_data_for_users_country_city"" should go to “AjaxRequest” class.</p>  <pre><code>def main():   application = webapp.WSGIApplication([('/', MainPage),                                       ('/UserReporting', UserReporting),                                       ('/AjaxRequest/get_data_for_users_country_city', AjaxRequest )                                       ],                                      debug=False)  run_wsgi_app(application) </code></pre>  <p>Code in “AjaxRequest” class</p>  <pre><code>from google.appengine.ext import db  class AjaxRequest(webapp.RequestHandler):    def post(self):     user_reported_country_get = self.request.get('selected_country_name')     user_reported_city_get = self.request.get('selected_city_name')     data_for_users_country_city = self.get_data_for_users_country_and_city(user_reported_country_get, user_reported_city_get)     self.response.out.write (data_for_users_country_city) </code></pre>  <p><strong>Problem:</strong></p>  <p>In debug mode i can see that the call from javascript method making it to the ""AjaxRequest"", ""post"" method. The problem is that the “user_reported_country_get” and “user_reported_city_get” don’t have the string values given by the javascript code.</p>  <p><strong>[EDIT#2]</strong> </p>  <p>Based on the suggestion given by @Matt Ball, I tried the following code excerpt in the javascript call</p>  <pre><code>&lt;!-- script snippet to fill in users country and city value by making a calls to the geoip library --&gt;   &lt;script type=""text/javascript""&gt;     // selecting users country and users city,      // the id for users country drop-down list is ""id_country_name""     // the id for users city text-box is id_city_name     $(function () {         $(""#id_country_name"").val(geoip_country_name());         $(""#id_city_name"").val(geoip_city())       });      $.post(""/AjaxRequest/get_data_for_users_country_city"", {          selected_country_name: $('#id_country_name').val(),         selected_city_name: $('#id_city_name').val()                 },     function(data) {         alert(""hello"");      }     );  &lt;/script&gt; </code></pre>  <p>HTML code excerpt for country drop-down list and city text-box. Here the id for the country drop-down list is ""id_country_name"" and the city text-box is ""id_city_name""</p>  <pre><code>&lt;div id=""userDataForm""&gt;  &lt;form method=""POST"" action=""/UserReporting""&gt;     &lt;table&gt;         &lt;!-- Printing the forms for users country, city --&gt;         &lt;tr&gt;&lt;th&gt;&lt;label for=""id_country_name""&gt;Country name:&lt;/label&gt;&lt;/th&gt;&lt;td&gt;&lt;select       name=""country_name"" id=""id_country_name""&gt; &lt;option value="""" selected=""selected""&gt;---------&lt;/option&gt; &lt;option value=""Afghanistan""&gt;Afghanistan&lt;/option&gt;  &lt;/select&gt;&lt;/td&gt;&lt;/tr&gt;         &lt;tr&gt;&lt;th&gt;&lt;label for=""id_city_name""&gt;City name:&lt;/label&gt;&lt;/th&gt;&lt;td&gt;&lt;input type=""text"" name=""city_name"" id=""id_city_name"" /&gt;&lt;/td&gt;&lt;/tr&gt;         &lt;/table&gt;  &lt;/form&gt; </code></pre>  <p></p>  <p>Inside the python debugger the values for “select_country_name” and “selected_city_name” are still empty as depicted by the following image</p>  <p><img src=""https://i.stack.imgur.com/mu4zB.png"" alt=""Image indicating unicode values inside the variables returned by javascript""></p>  <p><strong>[EDIT#3]</strong></p>  <p>I thought that for some reason during the call to python happens before the ""id_country_name"" and ""id_city_name"" values are filled in. So rather than trying to give the values of ""id_country_name"" and ""id_city_name"", i directly passed the values of  geoip_country_name() and geoip_city(). This successfully passed the country name and city name back to python code.</p>  <p>Here is the code excerpt i tried. </p>  <pre><code>&lt;!-- script snippet to fill in users country and city value by making a calls to the geoip library --&gt;   &lt;script type=""text/javascript""&gt;     // selecting users country and users city,      // the id for users country drop-down list is ""id_country_name""     // the id for users city text-box is id_city_name     $(function () {         $(""#id_country_name"").val(geoip_country_name());         $(""#id_city_name"").val(geoip_city())       });      $.post(""/AjaxRequest"", {          selected_country_name: geoip_country_name(),         selected_city_name: geoip_city()                 },      function(data) {         alert($('#id_country_name').val());         alert($('#id_city_name').val())      }      );  &lt;/script&gt; </code></pre>  <p><strong>[EDIT#4]</strong> </p>  <p>Based on the feedback given by @hyperslug, I moved the “$.post(""/AjaxRequest"" “ piece inside the function which sets the users country drop-down list and users city text-box. </p>  <p>This code correctly passes users country and city to python code.</p>  <p>Javascript code excerpt:</p>  <pre><code>&lt;!-- script snippet to fill in users country and city value by making a calls to the geoip library --&gt;   &lt;script type=""text/javascript""&gt;     // selecting users country and users city,      // the id for users country drop-down list is ""id_country_name""     // the id for users city text-box is id_city_name     $(function () {          //finding the users country and city based on their IP.         var $users_country = geoip_country_name()         var $users_city = geoip_city()          // setting the drop-down list of country and text-box of the city to users country and city resp         $(""#id_country_name"").val($users_country);         $(""#id_city_name"").val($users_city);          //since we have users country and city, calling python class to get the data regarding users country and city combination          $.post(""/AjaxRequest"", {              selected_country_name: $users_country,             selected_city_name: $users_city                  })       });  &lt;/script&gt; </code></pre>"	2011-04-16 22:43:05.473 UTC	5691019	"<p>Create a page to act as your request handler for the country/city data then POST the country and city fields to the page using Ajax.  Have the handler output the data you want based on the form fields.  Use javascript to insert the returned data into your tab.</p>  <p>Example request handler:</p>  <pre><code>class GeoData(webapp.RequestHandler):     def post(self):             country = self.request.get('selected_country')         city = self.request.get('selected_city')         data = retrieve_my_data(country,city)                     self.response.out.write(data) </code></pre>"			2011-04-17 02:18:14.35 UTC
5690147	javascript|python|google-app-engine	"Calling a python method to fetch data, from a javascript function on the html page"	"<h3>Technologies being used</h3>  <ul> <li>Google app engine</li> <li>Django</li> <li>Python</li> <li>Jquery</li> </ul>  <h3>Details of the code and code excerpts</h3>  <p>I have a drop-down list (country) and a text-box (city) { the drop-down list and text-box are generated by a django-form} that get automatically populated by a GeoIp library</p>  <p>Image of how these UI elements look on the html page:</p>  <p><img src=""https://i.stack.imgur.com/jBOsS.png"" alt=""enter image description here""></p>  <ol> <li><p>Code excerpt that fills in the drop-down list and the text-box:</p>  <p><br>              // selecting users country and users city,          // the id for users country drop-down list is ""id_country_name""         // the id for users city text-box is id_city_name         $(function () {             $(""#id_country_name"").val(geoip_country_name());             $(""#id_city_name"").val(geoip_city());             // at this point the users country and city values are in from the javascript call             // now is the time to call python code to get the data values reported by other users for users country and city</p>  <pre><code>    }); &lt;/script&gt; </code></pre></li> <li><p>Sample python code for querying the database</p>  <pre><code>def get_data_for_users_country_and_city(self):     query = db.GqlQuery(""SELECT * FROM UserReportedCity where county.country_name = country_name and city.city_name = city"")     data = query.fetch(10) </code></pre></li> </ol>  <p>I have to probably package these items in a template and then return back to the html page</p>  <pre><code>template_values = {        self.__TEMPLATE_DATA_FOR_USER: data      }      #rendering the html page and passing the template_values     self.response.out.write(template.render(self.__MAIN_HTML_PAGE, template_values)) </code></pre>  <p>Please note, i haven't tested this python code yet.</p>  <h3>Question</h3>  <p>Once the values for country and city are filled in by the javascript call, I want to make a call to a python method to get the data for users country and city and populate it in the “Your City” tab.</p>  <p><strong>[EDIT#1]</strong></p>  <p>Tried the suggestions given by @Fabio Diniz and @Kevin P </p>  <p>The following is the html and javascript code:</p>  <pre><code>&lt;!-- script snippet to fill in users country and city value by making a calls to the geoip library --&gt;   &lt;script type=""text/javascript""&gt;     // selecting users country and users city,      // the id for users country drop-down list is ""id_country_name""     // the id for users city text-box is id_city_name     $(function () {         $(""#id_country_name"").val(geoip_country_name());         $(""#id_city_name"").val(geoip_city())       });      $.post(""/AjaxRequest/get_data_for_users_country_city"", {          selected_country_name: document.getElementById('id_country_name').value,          selected_city_name: document.getElementById('id_city_name').value      },     function(data) {         alert(""hello"");      }     );  &lt;/script&gt; </code></pre>  <p>The following indicates that the requests to ""/AjaxRequest/get_data_for_users_country_city"" should go to “AjaxRequest” class.</p>  <pre><code>def main():   application = webapp.WSGIApplication([('/', MainPage),                                       ('/UserReporting', UserReporting),                                       ('/AjaxRequest/get_data_for_users_country_city', AjaxRequest )                                       ],                                      debug=False)  run_wsgi_app(application) </code></pre>  <p>Code in “AjaxRequest” class</p>  <pre><code>from google.appengine.ext import db  class AjaxRequest(webapp.RequestHandler):    def post(self):     user_reported_country_get = self.request.get('selected_country_name')     user_reported_city_get = self.request.get('selected_city_name')     data_for_users_country_city = self.get_data_for_users_country_and_city(user_reported_country_get, user_reported_city_get)     self.response.out.write (data_for_users_country_city) </code></pre>  <p><strong>Problem:</strong></p>  <p>In debug mode i can see that the call from javascript method making it to the ""AjaxRequest"", ""post"" method. The problem is that the “user_reported_country_get” and “user_reported_city_get” don’t have the string values given by the javascript code.</p>  <p><strong>[EDIT#2]</strong> </p>  <p>Based on the suggestion given by @Matt Ball, I tried the following code excerpt in the javascript call</p>  <pre><code>&lt;!-- script snippet to fill in users country and city value by making a calls to the geoip library --&gt;   &lt;script type=""text/javascript""&gt;     // selecting users country and users city,      // the id for users country drop-down list is ""id_country_name""     // the id for users city text-box is id_city_name     $(function () {         $(""#id_country_name"").val(geoip_country_name());         $(""#id_city_name"").val(geoip_city())       });      $.post(""/AjaxRequest/get_data_for_users_country_city"", {          selected_country_name: $('#id_country_name').val(),         selected_city_name: $('#id_city_name').val()                 },     function(data) {         alert(""hello"");      }     );  &lt;/script&gt; </code></pre>  <p>HTML code excerpt for country drop-down list and city text-box. Here the id for the country drop-down list is ""id_country_name"" and the city text-box is ""id_city_name""</p>  <pre><code>&lt;div id=""userDataForm""&gt;  &lt;form method=""POST"" action=""/UserReporting""&gt;     &lt;table&gt;         &lt;!-- Printing the forms for users country, city --&gt;         &lt;tr&gt;&lt;th&gt;&lt;label for=""id_country_name""&gt;Country name:&lt;/label&gt;&lt;/th&gt;&lt;td&gt;&lt;select       name=""country_name"" id=""id_country_name""&gt; &lt;option value="""" selected=""selected""&gt;---------&lt;/option&gt; &lt;option value=""Afghanistan""&gt;Afghanistan&lt;/option&gt;  &lt;/select&gt;&lt;/td&gt;&lt;/tr&gt;         &lt;tr&gt;&lt;th&gt;&lt;label for=""id_city_name""&gt;City name:&lt;/label&gt;&lt;/th&gt;&lt;td&gt;&lt;input type=""text"" name=""city_name"" id=""id_city_name"" /&gt;&lt;/td&gt;&lt;/tr&gt;         &lt;/table&gt;  &lt;/form&gt; </code></pre>  <p></p>  <p>Inside the python debugger the values for “select_country_name” and “selected_city_name” are still empty as depicted by the following image</p>  <p><img src=""https://i.stack.imgur.com/mu4zB.png"" alt=""Image indicating unicode values inside the variables returned by javascript""></p>  <p><strong>[EDIT#3]</strong></p>  <p>I thought that for some reason during the call to python happens before the ""id_country_name"" and ""id_city_name"" values are filled in. So rather than trying to give the values of ""id_country_name"" and ""id_city_name"", i directly passed the values of  geoip_country_name() and geoip_city(). This successfully passed the country name and city name back to python code.</p>  <p>Here is the code excerpt i tried. </p>  <pre><code>&lt;!-- script snippet to fill in users country and city value by making a calls to the geoip library --&gt;   &lt;script type=""text/javascript""&gt;     // selecting users country and users city,      // the id for users country drop-down list is ""id_country_name""     // the id for users city text-box is id_city_name     $(function () {         $(""#id_country_name"").val(geoip_country_name());         $(""#id_city_name"").val(geoip_city())       });      $.post(""/AjaxRequest"", {          selected_country_name: geoip_country_name(),         selected_city_name: geoip_city()                 },      function(data) {         alert($('#id_country_name').val());         alert($('#id_city_name').val())      }      );  &lt;/script&gt; </code></pre>  <p><strong>[EDIT#4]</strong> </p>  <p>Based on the feedback given by @hyperslug, I moved the “$.post(""/AjaxRequest"" “ piece inside the function which sets the users country drop-down list and users city text-box. </p>  <p>This code correctly passes users country and city to python code.</p>  <p>Javascript code excerpt:</p>  <pre><code>&lt;!-- script snippet to fill in users country and city value by making a calls to the geoip library --&gt;   &lt;script type=""text/javascript""&gt;     // selecting users country and users city,      // the id for users country drop-down list is ""id_country_name""     // the id for users city text-box is id_city_name     $(function () {          //finding the users country and city based on their IP.         var $users_country = geoip_country_name()         var $users_city = geoip_city()          // setting the drop-down list of country and text-box of the city to users country and city resp         $(""#id_country_name"").val($users_country);         $(""#id_city_name"").val($users_city);          //since we have users country and city, calling python class to get the data regarding users country and city combination          $.post(""/AjaxRequest"", {              selected_country_name: $users_country,             selected_city_name: $users_city                  })       });  &lt;/script&gt; </code></pre>"	2011-04-16 22:43:05.473 UTC	5690364	"<p>You need to use ajax. jQuery gives you <a href=""http://api.jquery.com/category/ajax/"" rel=""nofollow"">a nice set of interfaces</a> for this.</p>  <hr>  <p><strong>Re: OP edit</strong> - try this code instead:</p>  <pre><code>$.post(""/AjaxRequest/get_data_for_users_country_city"", {     selected_country_name: $('#id_country_name').val(),     selected_city_name: $('#id_city_name').val() }, function(data) {     alert(""hello""); }); </code></pre>"			2011-04-16 23:28:09.3 UTC
5697281	javascript|python|ajax|google-app-engine	Want data returned by python to javascript to be accessible inside a html div	"<p><strong>A] Technologies being used:</strong></p>  <p>1] Javascript</p>  <p>2] Jquery (elements currently being used are Jquery tab and Jquery datatable)</p>  <p>3] Python</p>  <p>4] Google App engine</p>  <p><strong>B] Problem Summary:</strong></p>  <p>1] I have a javascript function that calls a python class and gives it users city and country value.</p>  <p>2] The python class then queries the database and finds out the particular city entry in the database and returns the object back to javascript. </p>  <p>3] I have a alert box in javascript and can see the object being printed successfully. I am using jquery tabs and within the tab I have a datatable.</p>  <p><img src=""https://i.stack.imgur.com/Vg1Pe.png"" alt=""enter image description here""></p>  <p>4] I want the data obtained in the javascript to be usable inside the jquery tab so that the data can be printed in the datatable format</p>  <p><strong>C] Code Excerpts:</strong></p>  <p>1] Javascript code that calls the python class , giving it users country and city</p>  <pre><code>&lt;!-- script snippet to fill in users country and city value by making a calls to the geoip library --&gt;   &lt;script type=""text/javascript""&gt;     // selecting users country and users city,      // the id for users country drop-down list is ""id_country_name""     // the id for users city text-box is id_city_name     $(function () {          //finding the users country and city based on their IP.         var $users_country = geoip_country_name()         var $users_city = geoip_city()          // setting the drop-down list of country and text-box of the city to users country and city resp         $(""#id_country_name"").val($users_country);         $(""#id_city_name"").val($users_city);          //since we have users country and city, calling python class to get the data regarding users country and city combination           $.post(""/AjaxRequest"", {                                  selected_country_name: $users_country,                                 selected_city_name: $users_city                                  },             function(data) {                 alert(data);             }         );       });  &lt;/script&gt; </code></pre>  <p>2] HTML code for jquery tabs and jquery datatable. </p>  <pre><code>&lt;div id=""userReportedData""&gt;      &lt;!-- Setting up the tabs to be shown in the html page, not the name of the tabs div is ""tabs""      this matches with the name defined the javascript setup for jquery tabs --&gt;  &lt;div id=""tabs""&gt;     &lt;!-- defining the tabs to be shown on the page --&gt;     &lt;ul&gt;         &lt;li&gt;&lt;a href=""#your_city""&gt;Your City&lt;/a&gt;&lt;/li&gt;     &lt;/ul&gt;      &lt;div id=""your_city""&gt;               &lt;!-- Table containing the data to be printed--&gt;           &lt;table cellpadding=""0"" cellspacing=""0"" border=""0"" class=""display"" id=""datatable_for_current_users""&gt;          &lt;thead&gt;             &lt;tr&gt;                 &lt;th&gt;Country&lt;/th&gt;                 &lt;th&gt;City&lt;/th&gt;                 &lt;th&gt;Reported at&lt;/th&gt;             &lt;/tr&gt;         &lt;/thead&gt;         &lt;tbody&gt;             {%for status in data_for_users_city.statuses %}                 &lt;tr class=""gradeA""&gt;                     &lt;td&gt;{{data_for_users_city.country.country_name}}&lt;/td&gt;                     &lt;td&gt;{{data_for_users_city.city_name}}&lt;/td&gt;                    &lt;td&gt;{{status.date_time }}&lt;/td&gt;                 &lt;/tr&gt;             {%endfor%}            &lt;/tbody&gt;         &lt;/table&gt;             &lt;/div&gt; </code></pre>  <p>I want the data that is obtained by the javascript function from the python class to be accessible inside the tbody to be used.</p>  <p>NOTE: the for loop in the tbody isn't working, once i have the data for the ""data_for_users_city"" correctly loaded , then i will test this.</p>  <p>3] Python class which is sending the data to javascript:</p>  <pre><code>class AjaxRequest(webapp.RequestHandler):    #the string content of the template value 'all_data_from_datatabse'   __TEMPLATE_ALL_DATA_FROM_DATABASE_FOR_USERS_CITY = 'data_for_users_city'    def post(self):     user_reported_country_get = self.sanitize_key_name( self.request.get(""selected_country_name"") )     user_reported_city_get = self.sanitize_key_name( self.request.get(""selected_city_name"") )     data_for_users_country_city = self.get_data_for_users_country_and_city(user_reported_country_get, user_reported_city_get)      template_values = {         self.__TEMPLATE_ALL_DATA_FROM_DATABASE_FOR_USERS_CITY: data_for_users_country_city     }      self.response.out.write(data_for_users_country_city)    def sanitize_key_name(self,key_name):     string_key_name = unicodedata.normalize('NFKD', key_name).encode('ascii','ignore')     return re.sub(r'\s', '', string_key_name.lower())   def get_data_for_users_country_and_city(self,users_country,users_city):     key_name_for_user_reported_city = users_country + "":"" + users_city     return UserReportedCity.get_by_key_name( key_name_for_user_reported_city ) </code></pre>  <p>[EDIT#1] </p>  <p>javascript solution that worked </p>  <pre><code>function LoadUsersDatatable(data) { var tbody = $(""#datatable_for_current_users &gt; tbody"").html("""");  jsonData = jQuery.parseJSON(data);  for (var i = 0; i &lt; jsonData.length; i++)  {         var citydata = jsonData[i];          var rowText = ""&lt;tr class='gradeA'&gt;&lt;td&gt;"" + citydata.city.country.country_name + ""&lt;/td&gt;&lt;td&gt;"" + citydata.city.city_name + ""&lt;/td&gt;&lt;td&gt;"" + citydata.status + ""&lt;/td&gt;&lt;td&gt;"" + citydata.date_time.ctime + ""&lt;/td&gt;&lt;/tr&gt;"";     $(rowText).appendTo(tbody);      }  }     </code></pre>"	2011-04-17 23:51:19.33 UTC	5697395	"<p>You should encode your object into JSON or XML (but I prefer JSON). You can do it manually in python or using a library such as <a href=""http://pypi.python.org/pypi/jsonpickle/0.3.1"" rel=""nofollow"">jsonpickle</a>. Then on you javascript you can parse that string in a safe way with:</p>  <pre><code>var jsonObj = JSON.parse(data); </code></pre>  <p>And then when you want to access something its very easy. Lets say you have this JSON</p>  <pre><code>{ ""students"": [         {""name"": ""mark"", ""picture"": ""/a.jpg""},         {""name"" : ""steve"", ""picture"": ""/b.jpg""}     ], ""class"": ""Biology"" } </code></pre>  <p>You can access the data like this:</p>  <pre><code>&gt; document.println(jsonObj.students[0].name) mark  &gt; document.println(jsonObj.class) Biology </code></pre>"			2011-04-18 00:15:31.97 UTC
5697281	javascript|python|ajax|google-app-engine	Want data returned by python to javascript to be accessible inside a html div	"<p><strong>A] Technologies being used:</strong></p>  <p>1] Javascript</p>  <p>2] Jquery (elements currently being used are Jquery tab and Jquery datatable)</p>  <p>3] Python</p>  <p>4] Google App engine</p>  <p><strong>B] Problem Summary:</strong></p>  <p>1] I have a javascript function that calls a python class and gives it users city and country value.</p>  <p>2] The python class then queries the database and finds out the particular city entry in the database and returns the object back to javascript. </p>  <p>3] I have a alert box in javascript and can see the object being printed successfully. I am using jquery tabs and within the tab I have a datatable.</p>  <p><img src=""https://i.stack.imgur.com/Vg1Pe.png"" alt=""enter image description here""></p>  <p>4] I want the data obtained in the javascript to be usable inside the jquery tab so that the data can be printed in the datatable format</p>  <p><strong>C] Code Excerpts:</strong></p>  <p>1] Javascript code that calls the python class , giving it users country and city</p>  <pre><code>&lt;!-- script snippet to fill in users country and city value by making a calls to the geoip library --&gt;   &lt;script type=""text/javascript""&gt;     // selecting users country and users city,      // the id for users country drop-down list is ""id_country_name""     // the id for users city text-box is id_city_name     $(function () {          //finding the users country and city based on their IP.         var $users_country = geoip_country_name()         var $users_city = geoip_city()          // setting the drop-down list of country and text-box of the city to users country and city resp         $(""#id_country_name"").val($users_country);         $(""#id_city_name"").val($users_city);          //since we have users country and city, calling python class to get the data regarding users country and city combination           $.post(""/AjaxRequest"", {                                  selected_country_name: $users_country,                                 selected_city_name: $users_city                                  },             function(data) {                 alert(data);             }         );       });  &lt;/script&gt; </code></pre>  <p>2] HTML code for jquery tabs and jquery datatable. </p>  <pre><code>&lt;div id=""userReportedData""&gt;      &lt;!-- Setting up the tabs to be shown in the html page, not the name of the tabs div is ""tabs""      this matches with the name defined the javascript setup for jquery tabs --&gt;  &lt;div id=""tabs""&gt;     &lt;!-- defining the tabs to be shown on the page --&gt;     &lt;ul&gt;         &lt;li&gt;&lt;a href=""#your_city""&gt;Your City&lt;/a&gt;&lt;/li&gt;     &lt;/ul&gt;      &lt;div id=""your_city""&gt;               &lt;!-- Table containing the data to be printed--&gt;           &lt;table cellpadding=""0"" cellspacing=""0"" border=""0"" class=""display"" id=""datatable_for_current_users""&gt;          &lt;thead&gt;             &lt;tr&gt;                 &lt;th&gt;Country&lt;/th&gt;                 &lt;th&gt;City&lt;/th&gt;                 &lt;th&gt;Reported at&lt;/th&gt;             &lt;/tr&gt;         &lt;/thead&gt;         &lt;tbody&gt;             {%for status in data_for_users_city.statuses %}                 &lt;tr class=""gradeA""&gt;                     &lt;td&gt;{{data_for_users_city.country.country_name}}&lt;/td&gt;                     &lt;td&gt;{{data_for_users_city.city_name}}&lt;/td&gt;                    &lt;td&gt;{{status.date_time }}&lt;/td&gt;                 &lt;/tr&gt;             {%endfor%}            &lt;/tbody&gt;         &lt;/table&gt;             &lt;/div&gt; </code></pre>  <p>I want the data that is obtained by the javascript function from the python class to be accessible inside the tbody to be used.</p>  <p>NOTE: the for loop in the tbody isn't working, once i have the data for the ""data_for_users_city"" correctly loaded , then i will test this.</p>  <p>3] Python class which is sending the data to javascript:</p>  <pre><code>class AjaxRequest(webapp.RequestHandler):    #the string content of the template value 'all_data_from_datatabse'   __TEMPLATE_ALL_DATA_FROM_DATABASE_FOR_USERS_CITY = 'data_for_users_city'    def post(self):     user_reported_country_get = self.sanitize_key_name( self.request.get(""selected_country_name"") )     user_reported_city_get = self.sanitize_key_name( self.request.get(""selected_city_name"") )     data_for_users_country_city = self.get_data_for_users_country_and_city(user_reported_country_get, user_reported_city_get)      template_values = {         self.__TEMPLATE_ALL_DATA_FROM_DATABASE_FOR_USERS_CITY: data_for_users_country_city     }      self.response.out.write(data_for_users_country_city)    def sanitize_key_name(self,key_name):     string_key_name = unicodedata.normalize('NFKD', key_name).encode('ascii','ignore')     return re.sub(r'\s', '', string_key_name.lower())   def get_data_for_users_country_and_city(self,users_country,users_city):     key_name_for_user_reported_city = users_country + "":"" + users_city     return UserReportedCity.get_by_key_name( key_name_for_user_reported_city ) </code></pre>  <p>[EDIT#1] </p>  <p>javascript solution that worked </p>  <pre><code>function LoadUsersDatatable(data) { var tbody = $(""#datatable_for_current_users &gt; tbody"").html("""");  jsonData = jQuery.parseJSON(data);  for (var i = 0; i &lt; jsonData.length; i++)  {         var citydata = jsonData[i];          var rowText = ""&lt;tr class='gradeA'&gt;&lt;td&gt;"" + citydata.city.country.country_name + ""&lt;/td&gt;&lt;td&gt;"" + citydata.city.city_name + ""&lt;/td&gt;&lt;td&gt;"" + citydata.status + ""&lt;/td&gt;&lt;td&gt;"" + citydata.date_time.ctime + ""&lt;/td&gt;&lt;/tr&gt;"";     $(rowText).appendTo(tbody);      }  }     </code></pre>"	2011-04-17 23:51:19.33 UTC	5698338	"<p>Javascript can't do anything with a python object, which is what is being returned via your Ajax POST right now.  Before you return anything with your request handler you will want to encode the data (using either XML or JSON as mentioned by fceruti) in a way that you can then decode using javascript.</p>"			2011-04-18 03:51:14.767 UTC
5697281	javascript|python|ajax|google-app-engine	Want data returned by python to javascript to be accessible inside a html div	"<p><strong>A] Technologies being used:</strong></p>  <p>1] Javascript</p>  <p>2] Jquery (elements currently being used are Jquery tab and Jquery datatable)</p>  <p>3] Python</p>  <p>4] Google App engine</p>  <p><strong>B] Problem Summary:</strong></p>  <p>1] I have a javascript function that calls a python class and gives it users city and country value.</p>  <p>2] The python class then queries the database and finds out the particular city entry in the database and returns the object back to javascript. </p>  <p>3] I have a alert box in javascript and can see the object being printed successfully. I am using jquery tabs and within the tab I have a datatable.</p>  <p><img src=""https://i.stack.imgur.com/Vg1Pe.png"" alt=""enter image description here""></p>  <p>4] I want the data obtained in the javascript to be usable inside the jquery tab so that the data can be printed in the datatable format</p>  <p><strong>C] Code Excerpts:</strong></p>  <p>1] Javascript code that calls the python class , giving it users country and city</p>  <pre><code>&lt;!-- script snippet to fill in users country and city value by making a calls to the geoip library --&gt;   &lt;script type=""text/javascript""&gt;     // selecting users country and users city,      // the id for users country drop-down list is ""id_country_name""     // the id for users city text-box is id_city_name     $(function () {          //finding the users country and city based on their IP.         var $users_country = geoip_country_name()         var $users_city = geoip_city()          // setting the drop-down list of country and text-box of the city to users country and city resp         $(""#id_country_name"").val($users_country);         $(""#id_city_name"").val($users_city);          //since we have users country and city, calling python class to get the data regarding users country and city combination           $.post(""/AjaxRequest"", {                                  selected_country_name: $users_country,                                 selected_city_name: $users_city                                  },             function(data) {                 alert(data);             }         );       });  &lt;/script&gt; </code></pre>  <p>2] HTML code for jquery tabs and jquery datatable. </p>  <pre><code>&lt;div id=""userReportedData""&gt;      &lt;!-- Setting up the tabs to be shown in the html page, not the name of the tabs div is ""tabs""      this matches with the name defined the javascript setup for jquery tabs --&gt;  &lt;div id=""tabs""&gt;     &lt;!-- defining the tabs to be shown on the page --&gt;     &lt;ul&gt;         &lt;li&gt;&lt;a href=""#your_city""&gt;Your City&lt;/a&gt;&lt;/li&gt;     &lt;/ul&gt;      &lt;div id=""your_city""&gt;               &lt;!-- Table containing the data to be printed--&gt;           &lt;table cellpadding=""0"" cellspacing=""0"" border=""0"" class=""display"" id=""datatable_for_current_users""&gt;          &lt;thead&gt;             &lt;tr&gt;                 &lt;th&gt;Country&lt;/th&gt;                 &lt;th&gt;City&lt;/th&gt;                 &lt;th&gt;Reported at&lt;/th&gt;             &lt;/tr&gt;         &lt;/thead&gt;         &lt;tbody&gt;             {%for status in data_for_users_city.statuses %}                 &lt;tr class=""gradeA""&gt;                     &lt;td&gt;{{data_for_users_city.country.country_name}}&lt;/td&gt;                     &lt;td&gt;{{data_for_users_city.city_name}}&lt;/td&gt;                    &lt;td&gt;{{status.date_time }}&lt;/td&gt;                 &lt;/tr&gt;             {%endfor%}            &lt;/tbody&gt;         &lt;/table&gt;             &lt;/div&gt; </code></pre>  <p>I want the data that is obtained by the javascript function from the python class to be accessible inside the tbody to be used.</p>  <p>NOTE: the for loop in the tbody isn't working, once i have the data for the ""data_for_users_city"" correctly loaded , then i will test this.</p>  <p>3] Python class which is sending the data to javascript:</p>  <pre><code>class AjaxRequest(webapp.RequestHandler):    #the string content of the template value 'all_data_from_datatabse'   __TEMPLATE_ALL_DATA_FROM_DATABASE_FOR_USERS_CITY = 'data_for_users_city'    def post(self):     user_reported_country_get = self.sanitize_key_name( self.request.get(""selected_country_name"") )     user_reported_city_get = self.sanitize_key_name( self.request.get(""selected_city_name"") )     data_for_users_country_city = self.get_data_for_users_country_and_city(user_reported_country_get, user_reported_city_get)      template_values = {         self.__TEMPLATE_ALL_DATA_FROM_DATABASE_FOR_USERS_CITY: data_for_users_country_city     }      self.response.out.write(data_for_users_country_city)    def sanitize_key_name(self,key_name):     string_key_name = unicodedata.normalize('NFKD', key_name).encode('ascii','ignore')     return re.sub(r'\s', '', string_key_name.lower())   def get_data_for_users_country_and_city(self,users_country,users_city):     key_name_for_user_reported_city = users_country + "":"" + users_city     return UserReportedCity.get_by_key_name( key_name_for_user_reported_city ) </code></pre>  <p>[EDIT#1] </p>  <p>javascript solution that worked </p>  <pre><code>function LoadUsersDatatable(data) { var tbody = $(""#datatable_for_current_users &gt; tbody"").html("""");  jsonData = jQuery.parseJSON(data);  for (var i = 0; i &lt; jsonData.length; i++)  {         var citydata = jsonData[i];          var rowText = ""&lt;tr class='gradeA'&gt;&lt;td&gt;"" + citydata.city.country.country_name + ""&lt;/td&gt;&lt;td&gt;"" + citydata.city.city_name + ""&lt;/td&gt;&lt;td&gt;"" + citydata.status + ""&lt;/td&gt;&lt;td&gt;"" + citydata.date_time.ctime + ""&lt;/td&gt;&lt;/tr&gt;"";     $(rowText).appendTo(tbody);      }  }     </code></pre>"	2011-04-17 23:51:19.33 UTC	5697418	"<p>It looks like you're using a Django template in your HTML there. This is all parsed server-side so you won't be able to use the data from the object you've returned in the inline code. Instead you need to make changes through the DOM using jQuery.</p>  <p>You've got an ajax call there, so you'll be getting a response in xml, which you can parse with jquery.</p>  <p>It looks like you'll want to either add another row to the table, or replace one of the rows with the new data. If adding a row you'll need to get the table</p>  <pre><code>function(data) {     var newRow = $('&lt;tr class=""gradeA""&gt;&lt;/tr&gt;');      //you can use $('attributename', data) to access each attribute     // in the returned data object      // build tds with the data, like I've done in the line above for the tr     // then append them to newRow, using .append()      // then we can just append the new row to the table     $('#your_city').find('tbody').append(newRow); } </code></pre>  <p>If you wanted to replace a row, you could do a similar thing but remove the old row first, or use jQuery to find the row you want to change things in and replace the td contents with the returned data.</p>"			2011-04-18 00:21:53.387 UTC
5808819	python|ajax|svg|cgi|charts	Real time chart (SVG) + AJAX/Javascript/Jquery + StdOut + Python + I dont really know myself	"<p>I am not sure how to accurately describe my problem , and right now i have a total mess in my head , so please deal with it and correct me if i am wrong , and i will be for sure.</p>  <p><strong>MAIN GOAL:</strong></p>  <p><strong>Is to built a real time line chart  , which updates itself without web page reloading based on data , which comes from stdout .  So it basically must be python script  , which gets every second value , and based on this values continues to draw line in a line chart .</strong></p>  <p>1) Well basic tags in my head right now are :  Javascript / AJAX , cgi , python http web server , SVG (Vector graphics).</p>  <p>So basically the <strong>biggest problem</strong> , which i dont understand is how to continuesly transfer stdout values to the webpage .  Should i write my own python http web server , somehow pass values and with javascript or ajax + SVG draw the chart .</p>  <p>Or writing a http web server is a stupid idea and i can somehow make it work without it ? </p>  <p>Any other suggestions , or pointing me to some tutorials or arcticles are welcome . Because right now i am very confused  , especially on the part of continuesly passing values to webpage.</p>  <p>Thx in advance. Hope you will be able to point me somewhere =)</p>"	2011-04-27 18:33:49.493 UTC	8668451	"<p>Also check the real-time updates possibilities of Flot: <a href=""http://people.iola.dk/olau/flot/examples/"" rel=""nofollow"">http://people.iola.dk/olau/flot/examples/</a></p>  <p>I use a database as buffer, so no need for Comet or other push-techniques.</p>"			2011-12-29 13:28:17.1 UTC
5808819	python|ajax|svg|cgi|charts	Real time chart (SVG) + AJAX/Javascript/Jquery + StdOut + Python + I dont really know myself	"<p>I am not sure how to accurately describe my problem , and right now i have a total mess in my head , so please deal with it and correct me if i am wrong , and i will be for sure.</p>  <p><strong>MAIN GOAL:</strong></p>  <p><strong>Is to built a real time line chart  , which updates itself without web page reloading based on data , which comes from stdout .  So it basically must be python script  , which gets every second value , and based on this values continues to draw line in a line chart .</strong></p>  <p>1) Well basic tags in my head right now are :  Javascript / AJAX , cgi , python http web server , SVG (Vector graphics).</p>  <p>So basically the <strong>biggest problem</strong> , which i dont understand is how to continuesly transfer stdout values to the webpage .  Should i write my own python http web server , somehow pass values and with javascript or ajax + SVG draw the chart .</p>  <p>Or writing a http web server is a stupid idea and i can somehow make it work without it ? </p>  <p>Any other suggestions , or pointing me to some tutorials or arcticles are welcome . Because right now i am very confused  , especially on the part of continuesly passing values to webpage.</p>  <p>Thx in advance. Hope you will be able to point me somewhere =)</p>"	2011-04-27 18:33:49.493 UTC	5809518	"<p>I would use JavaScript to create or manipulate an SVG document, with AJAX requests polling the server and getting data back.</p>"			2011-04-27 19:32:46.64 UTC
5808819	python|ajax|svg|cgi|charts	Real time chart (SVG) + AJAX/Javascript/Jquery + StdOut + Python + I dont really know myself	"<p>I am not sure how to accurately describe my problem , and right now i have a total mess in my head , so please deal with it and correct me if i am wrong , and i will be for sure.</p>  <p><strong>MAIN GOAL:</strong></p>  <p><strong>Is to built a real time line chart  , which updates itself without web page reloading based on data , which comes from stdout .  So it basically must be python script  , which gets every second value , and based on this values continues to draw line in a line chart .</strong></p>  <p>1) Well basic tags in my head right now are :  Javascript / AJAX , cgi , python http web server , SVG (Vector graphics).</p>  <p>So basically the <strong>biggest problem</strong> , which i dont understand is how to continuesly transfer stdout values to the webpage .  Should i write my own python http web server , somehow pass values and with javascript or ajax + SVG draw the chart .</p>  <p>Or writing a http web server is a stupid idea and i can somehow make it work without it ? </p>  <p>Any other suggestions , or pointing me to some tutorials or arcticles are welcome . Because right now i am very confused  , especially on the part of continuesly passing values to webpage.</p>  <p>Thx in advance. Hope you will be able to point me somewhere =)</p>"	2011-04-27 18:33:49.493 UTC	6129802	"<p>Highcharts are nice for a static data or for data updated at max 1000ms speed. Try changing update rate to 100ms - it looks like crap.</p>  <p>I would recommend <a href=""http://smoothiecharts.org/"" rel=""nofollow"">Smoothie Charts</a>. Fits perfectly for your scenario.</p>"			2011-05-25 19:31:28.527 UTC
5808819	python|ajax|svg|cgi|charts	Real time chart (SVG) + AJAX/Javascript/Jquery + StdOut + Python + I dont really know myself	"<p>I am not sure how to accurately describe my problem , and right now i have a total mess in my head , so please deal with it and correct me if i am wrong , and i will be for sure.</p>  <p><strong>MAIN GOAL:</strong></p>  <p><strong>Is to built a real time line chart  , which updates itself without web page reloading based on data , which comes from stdout .  So it basically must be python script  , which gets every second value , and based on this values continues to draw line in a line chart .</strong></p>  <p>1) Well basic tags in my head right now are :  Javascript / AJAX , cgi , python http web server , SVG (Vector graphics).</p>  <p>So basically the <strong>biggest problem</strong> , which i dont understand is how to continuesly transfer stdout values to the webpage .  Should i write my own python http web server , somehow pass values and with javascript or ajax + SVG draw the chart .</p>  <p>Or writing a http web server is a stupid idea and i can somehow make it work without it ? </p>  <p>Any other suggestions , or pointing me to some tutorials or arcticles are welcome . Because right now i am very confused  , especially on the part of continuesly passing values to webpage.</p>  <p>Thx in advance. Hope you will be able to point me somewhere =)</p>"	2011-04-27 18:33:49.493 UTC	5808891	"<p>What you want to do is use JavaScript to render the chart, for example using a library such as <a href=""http://www.highcharts.com/"" rel=""nofollow"">highcharts</a>. Then, you can use AJAX to make an HTTP request back to a web server to get your data. </p>  <p>Depending upon your needs, you could just keep making these calls periodically to get new data. Or you could look into using a more efficient technique such as <a href=""http://en.wikipedia.org/wiki/WebSockets"" rel=""nofollow"">web sockets</a>, <a href=""http://en.wikipedia.org/wiki/Comet_%28programming%29"" rel=""nofollow"">comet</a>, etc.</p>"			2011-04-27 18:39:28.907 UTC
5910146	javascript|python|closures	Difference between closures in python and javascript	"<p>In JS, we can write closure like:</p>  <pre><code>function f(){ var a=0; function g(){     alert(a++); } return g; } g=f() g() </code></pre>  <p>However, if I write following code in python</p>  <pre><code>def f():     a=0     def g():         a+=1         print a     return g g=f() g() </code></pre>  <p>Then I get <em>UnboundedLocalError</em>.</p>  <p>Can anyone tell me the difference between closure in python and JS?</p>"	2011-05-06 10:37:00.693 UTC	5913637	<p>Version for python 2:</p>  <pre><code>def f():     a=0     def g():         g.a+=1         print g.a      g.a=a     return g g=f() g() </code></pre>			2011-05-06 15:32:02.9 UTC
5910146	javascript|python|closures	Difference between closures in python and javascript	"<p>In JS, we can write closure like:</p>  <pre><code>function f(){ var a=0; function g(){     alert(a++); } return g; } g=f() g() </code></pre>  <p>However, if I write following code in python</p>  <pre><code>def f():     a=0     def g():         a+=1         print a     return g g=f() g() </code></pre>  <p>Then I get <em>UnboundedLocalError</em>.</p>  <p>Can anyone tell me the difference between closure in python and JS?</p>"	2011-05-06 10:37:00.693 UTC	5910361	"<p>When you use <code>a += 1</code> in Python it refers to a local (uninitialized) variable in scope of <code>g</code> function.  Basically you can read variables from upper scopes, but if you try to write it will refer to a variable in most recent scope.  To make it work like you want you have to use <code>nonlocal</code> keyword that is only present Python 3.  In Python 2 you can't do that as far as I know, unless the variable you're trying to change is is global, then <code>global</code> keyword comes to the rescue.</p>  <pre><code>def f():     a=0     def g():         nonlocal a         a+=1         print a     return g g=f() g() </code></pre>"			2011-05-06 10:56:48.397 UTC
5919642	javascript|python|variables	How to call a Python function like in Javascript	"<p>if i do this , it will be ok :</p>  <pre><code>def a():     b = [1,2,3]     def d():         print b     d()  a() </code></pre>  <p>but i have many method  need function <strong>d</strong> , so i have to defined it out of the function <strong>a</strong> , but it show error :</p>  <pre><code>def d():     print b def a():     b = [1,2,3]     d()  a() </code></pre>  <p>error:</p>  <pre><code>  File ""c.py"", line 21, in &lt;module&gt;     a()   File ""c.py"", line 19, in a     d()   File ""c.py"", line 16, in d     print b NameError: global name 'b' is not defined </code></pre>  <p>so i have many different Variable, like b in different functions , so i don't want to send Variable like this :</p>  <pre><code>def d(b1,b2,b3,b4,b5):     print b1,b2,b3,b4,b5 </code></pre>  <p>that is not very simple , so i do it like this :</p>  <pre><code>d = \ ''' def d():\n     print b ''' def a():     b = [1,2,3]     c = eval(d)     c()  a()  </code></pre>  <p>but it also show error:</p>  <pre><code>  File ""c.py"", line 16, in &lt;module&gt;     a()   File ""c.py"", line 13, in a     c = eval(d)   File ""&lt;string&gt;"", line 2     def d():       ^ </code></pre>  <p>so what can i do ,</p>  <p>thanks</p>"	2011-05-07 07:11:15.947 UTC	5919738	"<p>Without seeing the JavaScript you're trying to emulate, I can only guess.</p>  <p>But why don't you just pass <code>b</code> to <code>d</code>:</p>  <pre><code>def d(b):     print b def a():     b = [1,2,3]     d(b)  a() </code></pre>  <p>Or if that's not an option, maybe you could declare <code>b</code> as global:</p>  <pre><code>b = [] def d():     print b def a():     global b     b = [1,2,3]     d()  a() </code></pre>  <p>Or maybe you're writing a wrapper to always do something before calling each function.  In that case, <a href=""http://www.python.org/dev/peps/pep-0318/"" rel=""nofollow"">decorators</a> could help:</p>  <pre><code>def test(b):     def t(f):         def d():             print b             return f(b)         return d     return t  @test([1,2,3]) def a(b):     pass  a() </code></pre>"			2011-05-07 07:35:53.937 UTC
5919642	javascript|python|variables	How to call a Python function like in Javascript	"<p>if i do this , it will be ok :</p>  <pre><code>def a():     b = [1,2,3]     def d():         print b     d()  a() </code></pre>  <p>but i have many method  need function <strong>d</strong> , so i have to defined it out of the function <strong>a</strong> , but it show error :</p>  <pre><code>def d():     print b def a():     b = [1,2,3]     d()  a() </code></pre>  <p>error:</p>  <pre><code>  File ""c.py"", line 21, in &lt;module&gt;     a()   File ""c.py"", line 19, in a     d()   File ""c.py"", line 16, in d     print b NameError: global name 'b' is not defined </code></pre>  <p>so i have many different Variable, like b in different functions , so i don't want to send Variable like this :</p>  <pre><code>def d(b1,b2,b3,b4,b5):     print b1,b2,b3,b4,b5 </code></pre>  <p>that is not very simple , so i do it like this :</p>  <pre><code>d = \ ''' def d():\n     print b ''' def a():     b = [1,2,3]     c = eval(d)     c()  a()  </code></pre>  <p>but it also show error:</p>  <pre><code>  File ""c.py"", line 16, in &lt;module&gt;     a()   File ""c.py"", line 13, in a     c = eval(d)   File ""&lt;string&gt;"", line 2     def d():       ^ </code></pre>  <p>so what can i do ,</p>  <p>thanks</p>"	2011-05-07 07:11:15.947 UTC	5921665	"<p>Just to amend the existing good answers by Mikel and zeekay, here is the difference in JavaScript. What you probably had was:</p>  <pre><code>function d() {   print(b); }  function a() {   b = [1,2,3];   d(); } </code></pre>  <p>But what you get in Python is the equivalent of this:</p>  <pre><code>function d() {   print(b); }  function a() {   var b = [1,2,3];   d(); } </code></pre>  <p>(Mind the <code>var b</code> in the second version). If you know JavaScript you get the difference. Argument passing is, as suggested, the preferable way. Using the <code>global</code> key word would be another (less preferable) way.</p>"			2011-05-07 14:23:51.157 UTC
5919642	javascript|python|variables	How to call a Python function like in Javascript	"<p>if i do this , it will be ok :</p>  <pre><code>def a():     b = [1,2,3]     def d():         print b     d()  a() </code></pre>  <p>but i have many method  need function <strong>d</strong> , so i have to defined it out of the function <strong>a</strong> , but it show error :</p>  <pre><code>def d():     print b def a():     b = [1,2,3]     d()  a() </code></pre>  <p>error:</p>  <pre><code>  File ""c.py"", line 21, in &lt;module&gt;     a()   File ""c.py"", line 19, in a     d()   File ""c.py"", line 16, in d     print b NameError: global name 'b' is not defined </code></pre>  <p>so i have many different Variable, like b in different functions , so i don't want to send Variable like this :</p>  <pre><code>def d(b1,b2,b3,b4,b5):     print b1,b2,b3,b4,b5 </code></pre>  <p>that is not very simple , so i do it like this :</p>  <pre><code>d = \ ''' def d():\n     print b ''' def a():     b = [1,2,3]     c = eval(d)     c()  a()  </code></pre>  <p>but it also show error:</p>  <pre><code>  File ""c.py"", line 16, in &lt;module&gt;     a()   File ""c.py"", line 13, in a     c = eval(d)   File ""&lt;string&gt;"", line 2     def d():       ^ </code></pre>  <p>so what can i do ,</p>  <p>thanks</p>"	2011-05-07 07:11:15.947 UTC	5919665	<p>To share variables you can use objects. Define some class which you will use as data container.</p>			2011-05-07 07:17:58.537 UTC
5919642	javascript|python|variables	How to call a Python function like in Javascript	"<p>if i do this , it will be ok :</p>  <pre><code>def a():     b = [1,2,3]     def d():         print b     d()  a() </code></pre>  <p>but i have many method  need function <strong>d</strong> , so i have to defined it out of the function <strong>a</strong> , but it show error :</p>  <pre><code>def d():     print b def a():     b = [1,2,3]     d()  a() </code></pre>  <p>error:</p>  <pre><code>  File ""c.py"", line 21, in &lt;module&gt;     a()   File ""c.py"", line 19, in a     d()   File ""c.py"", line 16, in d     print b NameError: global name 'b' is not defined </code></pre>  <p>so i have many different Variable, like b in different functions , so i don't want to send Variable like this :</p>  <pre><code>def d(b1,b2,b3,b4,b5):     print b1,b2,b3,b4,b5 </code></pre>  <p>that is not very simple , so i do it like this :</p>  <pre><code>d = \ ''' def d():\n     print b ''' def a():     b = [1,2,3]     c = eval(d)     c()  a()  </code></pre>  <p>but it also show error:</p>  <pre><code>  File ""c.py"", line 16, in &lt;module&gt;     a()   File ""c.py"", line 13, in a     c = eval(d)   File ""&lt;string&gt;"", line 2     def d():       ^ </code></pre>  <p>so what can i do ,</p>  <p>thanks</p>"	2011-05-07 07:11:15.947 UTC	5919667	"<p>It looks like you want to make <code>a</code> into a class:</p>  <pre><code>class A(object):     b = [1,2,3]     def d():         print b  A.d() A.b = [4, 5, 6] A.d() </code></pre>"			2011-05-07 07:17:59.993 UTC
5919642	javascript|python|variables	How to call a Python function like in Javascript	"<p>if i do this , it will be ok :</p>  <pre><code>def a():     b = [1,2,3]     def d():         print b     d()  a() </code></pre>  <p>but i have many method  need function <strong>d</strong> , so i have to defined it out of the function <strong>a</strong> , but it show error :</p>  <pre><code>def d():     print b def a():     b = [1,2,3]     d()  a() </code></pre>  <p>error:</p>  <pre><code>  File ""c.py"", line 21, in &lt;module&gt;     a()   File ""c.py"", line 19, in a     d()   File ""c.py"", line 16, in d     print b NameError: global name 'b' is not defined </code></pre>  <p>so i have many different Variable, like b in different functions , so i don't want to send Variable like this :</p>  <pre><code>def d(b1,b2,b3,b4,b5):     print b1,b2,b3,b4,b5 </code></pre>  <p>that is not very simple , so i do it like this :</p>  <pre><code>d = \ ''' def d():\n     print b ''' def a():     b = [1,2,3]     c = eval(d)     c()  a()  </code></pre>  <p>but it also show error:</p>  <pre><code>  File ""c.py"", line 16, in &lt;module&gt;     a()   File ""c.py"", line 13, in a     c = eval(d)   File ""&lt;string&gt;"", line 2     def d():       ^ </code></pre>  <p>so what can i do ,</p>  <p>thanks</p>"	2011-05-07 07:11:15.947 UTC	5919725	"<p>You are probably getting confused by javascript's scoping which is the opposite of python's. Read what the official Python tutorial has to say about <a href=""http://docs.python.org/tutorial/classes.html#python-scopes-and-namespaces."" rel=""nofollow"">scopes and namespaces</a> before you go any further! You might also find this talk by Ian Bicking useful: <a href=""http://blip.tv/file/4882883/"" rel=""nofollow"">Javascript for People Who Know Python</a>. He does a great job covering the differences between the two languages.</p>  <p>In this case, you are trying to access an object with a name that is defined in another function's namespace, which means it has no way to know about it. The ideal thing to do would be to rewrite d() so it accepts an argument and pass it b. You could also declare b as a global using <code>global</code>, but you should avoid that.</p>  <pre><code>def d():     print b # b is defined in a so it's only available in a's local namespace def a():     b = [1,2,3]      d() # if you rewrite d to accept an argument, you can pass it b and this will work </code></pre>  <p>Do this:</p>  <pre><code>def d(b): # accepts an argument now     print b  def a():     b = [1,2,3]     d(b) # calls d with an argument of b </code></pre>  <p>If you are curious what names are in the various scopes you can do this:</p>  <pre><code>import __builtin__ def d():     print dir(__builtin__) # built-in names     print dir(globals()) # global names     print dir(locals()) # local names, defined in d  </code></pre>  <p>I think you'll find Python's namespaces/scoping to be fairly intuitive.</p>"			2011-05-07 07:32:15.07 UTC
5934326	javascript|android|python|sl4a	How to call a javascript method from python on SL4A?	<p>I am writing an Android app using Python and SL4A. The app uses a webview that I wish to refresh. I plan on doing this by utilising javascript location.replace() within a wrapping doRefresh() javascript function. The problem I have is that I do not know how to call the javascript function from within my main event loop within the Python code.</p>  <p>Is there a way to directly call the method?</p>  <p>or</p>  <p>Is there a way to indirectly call the method say via a button's onClick and a mimic screen tap?</p>  <p>Thanks.</p>	2011-05-09 08:20:33.02 UTC	5939196	<p>You'll need to wait for a refresh event (this would be a custom event) in your JavaScript that is waiting for an event posted from your Python script. The only communication layer between JavaScript and Python is via events.</p>			2011-05-09 15:39:18.85 UTC
6009149	javascript|python|ajax	Python/Javascript/AJAX live search help	"<p>I'm trying to create an AJAX live search (such as Google Suggest) with python. I'm new to AJAX, so I started reading some tutorials and other useful documentation. I found an example, <a href=""http://www.w3schools.com/ajax/ajax_aspphp.asp"" rel=""nofollow"">http://www.w3schools.com/ajax/ajax_aspphp.asp</a>, which is basically what I'm trying to accomplish but this example is for asp/php only. I managed so far to code the python portion of the program, however I'm getting an undefined error.</p>  <p>Below is my javascript code (test.js, which is basically the same as the one from the example):</p>  <pre><code>function showHint(str) { var xmlhttp; if (str.length==0)   {   document.getElementById(""txtHint"").innerHTML="""";   return;   } if (window.XMLHttpRequest)   {// code for IE7+, Firefox, Chrome, Opera, Safari   xmlhttp=new XMLHttpRequest();   } else   {// code for IE6, IE5   xmlhttp=new ActiveXObject(""Microsoft.XMLHTTP"");   } xmlhttp.onreadystatechange=function()   {   if (xmlhttp.readyState==4 &amp;&amp; xmlhttp.status==200)     {     document.getElementById(""txtHint"").innerHTML=xmlhttp.responseText;     }   } xmlhttp.open(""GET"",""search.py?q=""+str,true); xmlhttp.send(); } </code></pre>  <p>In firefox 4, it comes up with the error ""str is undefined"".</p>  <p>Below is my html portion of my python code:</p>  <pre><code>&lt;html&gt;     &lt;head&gt;         &lt;title&gt;Live Search&lt;/title&gt;         &lt;script src=""http://localhost:8000/test.js"" type=""text/javascript""&gt;&lt;/script&gt;     &lt;/head&gt;     &lt;body&gt;         &lt;h1&gt; Cities &lt;/h1&gt;         Enter Anything: &lt;input type=""text"" id=""sname"" onkeyup=""showHint(this.text)""&gt;         %(search)s     &lt;/body&gt; &lt;/html&gt; </code></pre>  <p>Note: before I had onkeyup=""showHint(this.id) but it doesn't work for some reason.. it keeps passing ""sname"" as the query instead of what I type into the input field.</p>  <p>Please help</p>"	2011-05-15 14:55:13.72 UTC	6009184	"<p>The <code>&lt;input&gt;</code> element has no attribute text. That's why <code>this.text</code> and later <code>str</code> are undefined. Maybe <code>&lt;input type=""text"" id=""sname"" onkeyup=""showHint(this.value)""&gt;</code> would do what you want.</p>"			2011-05-15 15:02:04.91 UTC
6017959	javascript|python	call an external javascript function from python	<p>I have a javascript function that I can call with input and that returns a result. I can integrate this javascript function into an html-document (of course).</p>  <p>Now I would like to call exactly this javascript function from python. I have a python programm and want to call the javascript function with input parameters passed to the JS function by the calling python function. And the JS function shall return some result to python.</p>  <p>This JS function has quite complex functionality and is used in a web project also. I would like to use same functionality in Python.</p>  <p>Does anyone know how to solve this? Python is quite huge so I think I only did not find the required python module up until know. I spent 2 days in searching a possibility.</p>  <p>Thanks!</p>	2011-05-16 13:13:37.817 UTC	48719948	"<p>I had similar requirement recently and solved via node.</p>  <h2>parser.js</h2>  <pre><code>module.exports = {decode};  // entry for node  function decode(payload) {   var decoded = {};   // ...   console.log(JSON.stringify(decoded));   return decoded; } </code></pre>  <h2>terminal</h2>  <p><code>node -e 'require(""./parser.js"").decode(""foobar"")'</code></p>  <p>output: the parsed data</p>  <h2>caller.py</h2>  <pre><code>import subprocess  cmd = """"""node -e 'require(\""./parser.js\"").decode(\""{}\"")'"""""" output = subprocess.check_output(cmd.format(data), shell=True) </code></pre>"			2018-02-10 10:52:21.48 UTC
6017959	javascript|python	call an external javascript function from python	<p>I have a javascript function that I can call with input and that returns a result. I can integrate this javascript function into an html-document (of course).</p>  <p>Now I would like to call exactly this javascript function from python. I have a python programm and want to call the javascript function with input parameters passed to the JS function by the calling python function. And the JS function shall return some result to python.</p>  <p>This JS function has quite complex functionality and is used in a web project also. I would like to use same functionality in Python.</p>  <p>Does anyone know how to solve this? Python is quite huge so I think I only did not find the required python module up until know. I spent 2 days in searching a possibility.</p>  <p>Thanks!</p>	2011-05-16 13:13:37.817 UTC	6018035	"<p><a href=""http://code.google.com/p/pyv8/"" rel=""nofollow"">pyv8</a> will let you use the V8 JS engine from Python. </p>  <p>If the JavaScript function depends on things that are not core JavaScript (such as DOM) then you will need to find implementations of those.</p>"			2011-05-16 13:18:58.72 UTC
6025082	javascript|python|screen-scraping|headless-browser	Headless Browser for Python (Javascript support REQUIRED!)	"<p>I need a headless browser which is fairly easy to use (I am still fairly new to Python and programming in general) which will allow me to navigate to a page, log into a form that requires Javascript, and then scrape the resulting web page by searching for results matching certain criteria, clicking check boxes, and clicking to download files. All of this requires Javascript.</p>  <p>I hear a headless browser is what I want - requirements/preferences are that I be able to run it from Python, and preferably that the resultant script will be compilable by py2exe (I am writing this program for other users).</p>  <p>So far Windmill looks like it MIGHT be what I want, but I am not sure.</p>  <p>Any ideas appreciated!</p>"	2011-05-17 00:45:58.233 UTC	8069642	"<p>The answer to this question was <a href=""https://github.com/makinacorpus/spynner"" rel=""noreferrer"">Spynner</a></p>"			2011-11-09 18:21:25.483 UTC
6025082	javascript|python|screen-scraping|headless-browser	Headless Browser for Python (Javascript support REQUIRED!)	"<p>I need a headless browser which is fairly easy to use (I am still fairly new to Python and programming in general) which will allow me to navigate to a page, log into a form that requires Javascript, and then scrape the resulting web page by searching for results matching certain criteria, clicking check boxes, and clicking to download files. All of this requires Javascript.</p>  <p>I hear a headless browser is what I want - requirements/preferences are that I be able to run it from Python, and preferably that the resultant script will be compilable by py2exe (I am writing this program for other users).</p>  <p>So far Windmill looks like it MIGHT be what I want, but I am not sure.</p>  <p>Any ideas appreciated!</p>"	2011-05-17 00:45:58.233 UTC	6158970	"<p>You can use HTQL in combination with IRobotSoft webscraper.  Check here for examples: <a href=""http://htql.net/"" rel=""nofollow"">http://htql.net/</a></p>"			2011-05-28 00:51:20.58 UTC
6025082	javascript|python|screen-scraping|headless-browser	Headless Browser for Python (Javascript support REQUIRED!)	"<p>I need a headless browser which is fairly easy to use (I am still fairly new to Python and programming in general) which will allow me to navigate to a page, log into a form that requires Javascript, and then scrape the resulting web page by searching for results matching certain criteria, clicking check boxes, and clicking to download files. All of this requires Javascript.</p>  <p>I hear a headless browser is what I want - requirements/preferences are that I be able to run it from Python, and preferably that the resultant script will be compilable by py2exe (I am writing this program for other users).</p>  <p>So far Windmill looks like it MIGHT be what I want, but I am not sure.</p>  <p>Any ideas appreciated!</p>"	2011-05-17 00:45:58.233 UTC	6313755	"<p>Try using phantomjs, it has great javascript support.  Then you could run it as a subprocess of a python script </p>  <p><a href=""http://docs.python.org/library/subprocess.html"" rel=""nofollow"">http://docs.python.org/library/subprocess.html</a></p>  <p>that could boss it around.</p>"			2011-06-11 02:51:55.057 UTC
6025082	javascript|python|screen-scraping|headless-browser	Headless Browser for Python (Javascript support REQUIRED!)	"<p>I need a headless browser which is fairly easy to use (I am still fairly new to Python and programming in general) which will allow me to navigate to a page, log into a form that requires Javascript, and then scrape the resulting web page by searching for results matching certain criteria, clicking check boxes, and clicking to download files. All of this requires Javascript.</p>  <p>I hear a headless browser is what I want - requirements/preferences are that I be able to run it from Python, and preferably that the resultant script will be compilable by py2exe (I am writing this program for other users).</p>  <p>So far Windmill looks like it MIGHT be what I want, but I am not sure.</p>  <p>Any ideas appreciated!</p>"	2011-05-17 00:45:58.233 UTC	6158994	"<p>There are not too many headless browsers yet that support Javascript.</p>  <p>You could try <a href=""http://zombie.labnotes.org/"" rel=""noreferrer"">Zombie.js</a> or <a href=""http://www.phantomjs.org/"" rel=""noreferrer"">Phantomjs</a>. Those are not Python, but plain Javascript and those really can do the job.</p>"			2011-05-28 00:57:28.783 UTC
6025082	javascript|python|screen-scraping|headless-browser	Headless Browser for Python (Javascript support REQUIRED!)	"<p>I need a headless browser which is fairly easy to use (I am still fairly new to Python and programming in general) which will allow me to navigate to a page, log into a form that requires Javascript, and then scrape the resulting web page by searching for results matching certain criteria, clicking check boxes, and clicking to download files. All of this requires Javascript.</p>  <p>I hear a headless browser is what I want - requirements/preferences are that I be able to run it from Python, and preferably that the resultant script will be compilable by py2exe (I am writing this program for other users).</p>  <p>So far Windmill looks like it MIGHT be what I want, but I am not sure.</p>  <p>Any ideas appreciated!</p>"	2011-05-17 00:45:58.233 UTC	6287943	"<p>I'm in the midst of writing a Python driver for Zombie.js, ""a lightweight framework for testing client-side JavaScript code in a simulated environment"".</p>  <p>I'm currently at a standstill on a resolution to a bug in Node.js (before I write more tests and more code), but feel free to keep an eye on my project as it progresses:</p>  <p><a href=""https://github.com/ryanpetrello/python-zombie"" rel=""noreferrer"">https://github.com/ryanpetrello/python-zombie</a></p>"			2011-06-09 04:00:35.353 UTC
6025082	javascript|python|screen-scraping|headless-browser	Headless Browser for Python (Javascript support REQUIRED!)	"<p>I need a headless browser which is fairly easy to use (I am still fairly new to Python and programming in general) which will allow me to navigate to a page, log into a form that requires Javascript, and then scrape the resulting web page by searching for results matching certain criteria, clicking check boxes, and clicking to download files. All of this requires Javascript.</p>  <p>I hear a headless browser is what I want - requirements/preferences are that I be able to run it from Python, and preferably that the resultant script will be compilable by py2exe (I am writing this program for other users).</p>  <p>So far Windmill looks like it MIGHT be what I want, but I am not sure.</p>  <p>Any ideas appreciated!</p>"	2011-05-17 00:45:58.233 UTC	6026161	"<p>I use webkit as a headless browser in Python via pyqt / pyside:<br> <a href=""http://www.riverbankcomputing.co.uk/software/pyqt/download"">http://www.riverbankcomputing.co.uk/software/pyqt/download</a><br> <a href=""http://developer.qt.nokia.com/wiki/Category%3aLanguageBindings%3a%3aPySide%3a%3aDownloads"">http://developer.qt.nokia.com/wiki/Category:LanguageBindings::PySide::Downloads</a></p>  <p>I particularly like webkit because it is simple to setup. For Ubuntu you just use: <code>sudo apt-get install python-qt4</code></p>  <p>Here is an example script:<br> <a href=""http://webscraping.com/blog/Scraping-JavaScript-webpages-with-webkit/"">http://webscraping.com/blog/Scraping-JavaScript-webpages-with-webkit/</a></p>"			2011-05-17 04:11:15.01 UTC
6061068	javascript|python|ajax|cgi	Python / AJAX / JavaScript - HTML page printing twice during GET	"<p>I currently have an issue with my program in which I'm trying to produce live search (much like Google's) using AJAX. At the moment, its based on a list of cities, so when a user types for example ""A"" in the form, it will show a list of all cities that start with ""A"". If the user continues to type, for example ""Al"", it will show a list of all cities that start with ""Al"" and so on and so forth.</p>  <p>The issue I am having, as the title suggests, is that if I backspace (delete) the text in the form, my python script will send a response to print the HTML page again, thus having two copies of the form.</p>  <p>Below are some image links of what I mean</p>  <p><strong>Second search:</strong></p>  <p><a href=""http://img694.imageshack.us/img694/1972/city3f.jpg"" rel=""nofollow"">http://img694.imageshack.us/img694/1972/city3f.jpg</a></p>  <p><strong>Duplicate page:</strong></p>  <p><a href=""http://img819.imageshack.us/img819/5808/city4p.jpg"" rel=""nofollow"">http://img819.imageshack.us/img819/5808/city4p.jpg</a></p>  <p>Below is my code:</p>  <p>python:</p>  <pre><code>city = list()  if form.has_key('q'):            if len(form['q'].value) &gt; 0:         for item in city_names: # city_names is a list of cities             if item.startswith(form['q'].value):                 if not city:                     city.append(item)                 else:                     city.append(item)          print ""Content-Type: text/html\n""         print city  else:     print ""Content-Type: text/html\n""     print template #html </code></pre>  <p>AJAX:</p>  <pre><code>function showCity(string) {     var xmlhttp;      if (window.XMLHttpRequest){ // Code for IE7+, Firefox, Chrome, Opera, Safari         xmlhttp=new XMLHttpRequest();     }else{ // Code for IE6, IE5         xmlhttp=new ActiveXObject(""Microsoft.XMLHTTP"");     }      xmlhttp.onreadystatechange=function(){         if (xmlhttp.readyState==4 &amp;&amp; xmlhttp.status==200){             document.getElementById(""City"").innerHTML=xmlhttp.responseText;         }     }     xmlhttp.open(""GET"", ""/cgi-bin/suggestions.py?q=""+string, true);     xmlhttp.send(); } </code></pre>  <p>Please help</p>"	2011-05-19 15:27:54.353 UTC	6061401	"<p>How are your events set up?</p>  <p>In the image <a href=""http://img819.imageshack.us/img819/5808/city4p.jpg"" rel=""nofollow"">http://img819.imageshack.us/img819/5808/city4p.jpg</a>, I can see that it's called with <code>q=</code> and there's no string to follow so <code>showCity</code> is called with an empty string. That makes your script go the print template path.</p>  <p>Can you please show the code where <code>showCity</code> gets called?</p>  <p><em>Added</em></p>  <p>Use <code>onkeypress</code>. From a quick test, that doesn't seem to register the backspace at all. Other than that you need to filter the backspace or at least check if the string has content.</p>"			2011-05-19 15:53:59.557 UTC
6080242	javascript|node.js|ipython|coffeescript	ipython equivalent for javascript/coffeescript for node.js?	"<p>More specifically, is there a REPL that has (more) colorful output, pretty printing, tab completion and the other goodies that ipython has for node.js javascript/coffeescript?</p>"	2011-05-21 07:13:27.383 UTC	34866871	"<p>This is the best REPL available - <a href=""https://github.com/princejwesley/Mancy"" rel=""noreferrer"">https://github.com/princejwesley/Mancy</a></p>"			2016-01-19 01:04:23.443 UTC
6080242	javascript|node.js|ipython|coffeescript	ipython equivalent for javascript/coffeescript for node.js?	"<p>More specifically, is there a REPL that has (more) colorful output, pretty printing, tab completion and the other goodies that ipython has for node.js javascript/coffeescript?</p>"	2011-05-21 07:13:27.383 UTC	20895370	"<p>Ankit, I was looking for exactly the same answer and ended up implementing it, perhaps it could be helpful for you as well: <a href=""https://github.com/mksenzov/i.js"" rel=""nofollow"">https://github.com/mksenzov/i.js</a></p>"			2014-01-03 02:09:28.043 UTC
6080242	javascript|node.js|ipython|coffeescript	ipython equivalent for javascript/coffeescript for node.js?	"<p>More specifically, is there a REPL that has (more) colorful output, pretty printing, tab completion and the other goodies that ipython has for node.js javascript/coffeescript?</p>"	2011-05-21 07:13:27.383 UTC	10764958	"<p>Ok so for input commands history you can use this:</p>  <p><a href=""http://blog.doteight.com/blog/2011/01/16/rlwrap-and-node/"" rel=""nofollow"">http://blog.doteight.com/blog/2011/01/16/rlwrap-and-node/</a></p>  <p>but this way the tab completion doesn't work...</p>  <p>anyone know how to call node interpreter with  tab autocomletion turned on?</p>"			2012-05-26 09:02:31.463 UTC
6080242	javascript|node.js|ipython|coffeescript	ipython equivalent for javascript/coffeescript for node.js?	"<p>More specifically, is there a REPL that has (more) colorful output, pretty printing, tab completion and the other goodies that ipython has for node.js javascript/coffeescript?</p>"	2011-05-21 07:13:27.383 UTC	6081947	"<p>To my knowledge, <code>node</code> and <code>coffee</code> are the only full-featured command-line REPLs for Node.js and CoffeeScript (respectively) right now. In their latest iterations, both offer <em>some</em> degree of colorful output, pretty printing, and completion.</p>"			2011-05-21 13:07:32.073 UTC
6080242	javascript|node.js|ipython|coffeescript	ipython equivalent for javascript/coffeescript for node.js?	"<p>More specifically, is there a REPL that has (more) colorful output, pretty printing, tab completion and the other goodies that ipython has for node.js javascript/coffeescript?</p>"	2011-05-21 07:13:27.383 UTC	6080255	"<p>Have you tried the console in Chrome Dev Tools?<br> or this one: <a href=""http://jsconsole.com/"" rel=""nofollow"">http://jsconsole.com/</a></p>"			2011-05-21 07:16:43.073 UTC
6080242	javascript|node.js|ipython|coffeescript	ipython equivalent for javascript/coffeescript for node.js?	"<p>More specifically, is there a REPL that has (more) colorful output, pretty printing, tab completion and the other goodies that ipython has for node.js javascript/coffeescript?</p>"	2011-05-21 07:13:27.383 UTC	15791777	"<p>I've recently started a project to provide an enhanced, extensible, embeddable interactive interpreter for multiple languages running on Node (including built-in support for CoffeeScript) here:</p>  <p><a href=""http://danielgtaylor.github.com/nesh/"">http://danielgtaylor.github.com/nesh/</a></p>  <p>It's pretty basic at the moment but it already provides a nice base with multi-language support and an asynchronous plugin architecture, a small set of built-in utility functions, etc. Let me know if there are any specific features you are looking for :-)</p>"			2013-04-03 15:36:59.977 UTC
6116023	asp.net|python|mechanize|scraperwiki	Screenscaping aspx with Python Mechanize - Javascript form submission	"<p>I'm trying to scrape UK Food Ratings Agency data <em>aspx</em> seach results pages (e.,g <a href=""http://ratings.food.gov.uk/QuickSearch.aspx?q=po30"" rel=""noreferrer"">http://ratings.food.gov.uk/QuickSearch.aspx?q=po30</a> ) using Mechanize/Python on scraperwiki ( <a href=""http://scraperwiki.com/scrapers/food_standards_agency/"" rel=""noreferrer"">http://scraperwiki.com/scrapers/food_standards_agency/</a> ) but coming up with a problem when trying to follow ""next"" page links which have the form:</p>  <pre><code>&lt;input type=""submit"" name=""ctl00$ContentPlaceHolder1$uxResults$uxNext"" value=""Next &gt;"" id=""ctl00_ContentPlaceHolder1_uxResults_uxNext"" title=""Next &gt;"" /&gt; </code></pre>  <p>The form handler looks like:</p>  <pre><code>&lt;form method=""post"" action=""QuickSearch.aspx?q=po30"" onsubmit=""javascript:return WebForm_OnSubmit();"" onkeypress=""javascript:return WebForm_FireDefaultButton(event, 'ctl00_ContentPlaceHolder1_buttonSearch')"" id=""aspnetForm""&gt; &lt;input type=""hidden"" name=""__EVENTTARGET"" id=""__EVENTTARGET"" value="""" /&gt; &lt;input type=""hidden"" name=""__EVENTARGUMENT"" id=""__EVENTARGUMENT"" value="""" /&gt; &lt;input type=""hidden"" name=""__LASTFOCUS"" id=""__LASTFOCUS"" value="""" /&gt; </code></pre>  <p>An HTTP trace when I manually click Next links shows __EVENTTARGET as empty? All the cribs I can find on other scrapers show the manipulation of  __EVENTTARGET as the way of handling Next pages.</p>  <p>Indeed, I'm not sure how the page I want to scrape ever loads the next page? Whatever I throw at the scraper, it only ever manages to load the first results page. (Even being able to change the number of results per page would be useful, but I can't see how to do that either!)</p>  <p>So - any ideas on how to scrape the 1+N'th results pages for N>0?</p>"	2011-05-24 19:49:55.213 UTC	6116487	"<p>Mechanize does not handle JavaScript.</p>  <p>There are many ways to handle this, however, including <a href=""http://www.pyside.org/docs/pyside/PySide/QtWebKit/index.html"" rel=""nofollow noreferrer"">QtWebKit</a>, <a href=""https://github.com/davisp/python-spidermonkey"" rel=""nofollow noreferrer"">python-spidermonkey</a>, <a href=""http://htmlunit.sourceforge.net/"" rel=""nofollow noreferrer"">HtmlUnit</a> (using Jython), or <a href=""http://seleniumhq.org/projects/remote-control/"" rel=""nofollow noreferrer"">SeleniumRC</a>.</p>  <p>Here is how it might be done with SeleniumRC:</p>  <pre><code>import selenium sel=selenium.selenium(""localhost"",4444,""*firefox"", ""http://ratings.food.gov.uk"")    sel.start() sel.open(""QuickSearch.aspx?q=po30"") sel.click('ctl00$ContentPlaceHolder1$uxResults$uxNext') </code></pre>  <p>See also these related SO questions:</p>  <ol> <li><a href=""https://stackoverflow.com/questions/1418000/how-to-click-a-link-that-has-javascript-dopostback-in-href"">How to click a link that has JavaScript</a></li> <li><a href=""https://stackoverflow.com/questions/5207948/click-on-a-javascript-link-within-python"">Click on a JavaScript link within Python</a></li> </ol>"			2011-05-24 20:32:25.42 UTC
6116023	asp.net|python|mechanize|scraperwiki	Screenscaping aspx with Python Mechanize - Javascript form submission	"<p>I'm trying to scrape UK Food Ratings Agency data <em>aspx</em> seach results pages (e.,g <a href=""http://ratings.food.gov.uk/QuickSearch.aspx?q=po30"" rel=""noreferrer"">http://ratings.food.gov.uk/QuickSearch.aspx?q=po30</a> ) using Mechanize/Python on scraperwiki ( <a href=""http://scraperwiki.com/scrapers/food_standards_agency/"" rel=""noreferrer"">http://scraperwiki.com/scrapers/food_standards_agency/</a> ) but coming up with a problem when trying to follow ""next"" page links which have the form:</p>  <pre><code>&lt;input type=""submit"" name=""ctl00$ContentPlaceHolder1$uxResults$uxNext"" value=""Next &gt;"" id=""ctl00_ContentPlaceHolder1_uxResults_uxNext"" title=""Next &gt;"" /&gt; </code></pre>  <p>The form handler looks like:</p>  <pre><code>&lt;form method=""post"" action=""QuickSearch.aspx?q=po30"" onsubmit=""javascript:return WebForm_OnSubmit();"" onkeypress=""javascript:return WebForm_FireDefaultButton(event, 'ctl00_ContentPlaceHolder1_buttonSearch')"" id=""aspnetForm""&gt; &lt;input type=""hidden"" name=""__EVENTTARGET"" id=""__EVENTTARGET"" value="""" /&gt; &lt;input type=""hidden"" name=""__EVENTARGUMENT"" id=""__EVENTARGUMENT"" value="""" /&gt; &lt;input type=""hidden"" name=""__LASTFOCUS"" id=""__LASTFOCUS"" value="""" /&gt; </code></pre>  <p>An HTTP trace when I manually click Next links shows __EVENTTARGET as empty? All the cribs I can find on other scrapers show the manipulation of  __EVENTTARGET as the way of handling Next pages.</p>  <p>Indeed, I'm not sure how the page I want to scrape ever loads the next page? Whatever I throw at the scraper, it only ever manages to load the first results page. (Even being able to change the number of results per page would be useful, but I can't see how to do that either!)</p>  <p>So - any ideas on how to scrape the 1+N'th results pages for N>0?</p>"	2011-05-24 19:49:55.213 UTC	6124393	"<p>Mechanize doesn´t handle javascript, but for this particular case it isn´t needed.</p>  <p>First we open the result page with mechanize</p>  <pre><code>url = 'http://ratings.food.gov.uk/QuickSearch.aspx?q=po30' br = mechanize.Browser() br.set_handle_robots(False) br.addheaders = [('User-agent', 'Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.0.1) Gecko/2008071615 Fedora/3.0.1-1.fc9 Firefox/3.0.1')] br.open(url) response = br.response().read() </code></pre>  <p>Then we select the aspnet form:</p>  <pre><code>br.select_form(nr=0) #Select the first (and only) form - it has no name so we reference by number </code></pre>  <p>The form has 5 submit buttons - we want to submit the one that takes us to the next result page:</p>  <pre><code>response = br.submit(name='ctl00$ContentPlaceHolder1$uxResults$uxNext').read()  #""Press"" the next submit button </code></pre>  <p>The other submit buttons in the form are:</p>  <pre><code>ctl00$uxLanguageSwitch # Switch language to Welsh ctl00$ContentPlaceHolder1$uxResults$Button1 # Search submit button ctl00$ContentPlaceHolder1$uxResults$uxFirst # First result page ctl00$ContentPlaceHolder1$uxResults$uxPrevious # Previous result page ctl00$ContentPlaceHolder1$uxResults$uxLast # Last result page </code></pre>  <p>In mechanize we can get form info like this:</p>  <pre><code>for form in br.forms():     print form </code></pre>"			2011-05-25 12:23:08.483 UTC
6132433	javascript	Using javascript with python	"<p>I want to make a very simplistic graphical interface that will allow the user to enter a few bits of information into a form and then I will crunch the data and spit out a google map to the web page the user is interfacing with.  </p>  <p>However, this will just run on a local machine instead of being a webpage that is served to the user.  I would like to do the ""data crunching"" in python so I would like the javascript to be able to pass the form data to a python function and then do some stuff and then output back to the webpage.  </p>  <p>Is there a good way to do this?  Any suggestions?  I just want to have a web form as the frontend because this seems the easiest, but I am open to suggestions.</p>"	2011-05-26 00:15:29.677 UTC	27618637	"<p>If you want to use python on a local machine you will depend on the client having it, and not only that, you would have to check their current version and work twice to make it work for both 2.X and 3.X.</p>  <p>I would do as mozillanerd said, and work only with javascript.</p>  <p>If you love python I can't see a way better to do this that using python on your server, using something like <a href=""https://www.npmjs.com/package/python-shell"" rel=""nofollow"">python-shell</a> (for node.js):</p>  <pre><code>var PythonShell = require('python-shell');  var options = {   args: [latitude, longitude] };  PythonShell.run('my_script.py', options, function (err, results) {   if (err) throw err;   console.log('results: %j', results); }); </code></pre>"			2014-12-23 10:37:19.983 UTC
6132433	javascript	Using javascript with python	"<p>I want to make a very simplistic graphical interface that will allow the user to enter a few bits of information into a form and then I will crunch the data and spit out a google map to the web page the user is interfacing with.  </p>  <p>However, this will just run on a local machine instead of being a webpage that is served to the user.  I would like to do the ""data crunching"" in python so I would like the javascript to be able to pass the form data to a python function and then do some stuff and then output back to the webpage.  </p>  <p>Is there a good way to do this?  Any suggestions?  I just want to have a web form as the frontend because this seems the easiest, but I am open to suggestions.</p>"	2011-05-26 00:15:29.677 UTC	6132465	"<p>Please note <a href=""http://shootout.alioth.debian.org/u32/benchmark.php?test=all&amp;lang=v8&amp;lang2=python"" rel=""nofollow"">http://shootout.alioth.debian.org/u32/benchmark.php?test=all&amp;lang=v8&amp;lang2=python</a> . Python is slower than javascript; most javascript engines are very quick.</p>"			2011-05-26 00:19:41.113 UTC
6146472	javascript|python|parsing|webkit	Using Spynner module in Python (need to select a Javascript element)	"<p>Trying to select a Javascript element using the Python module Spynner.</p>  <p>(NOTE: Username and Password not real)</p>  <p>Here's the list I am trying to pull it from:</p>  <pre><code>&lt;tr&gt; &lt;td valign=""middle"" align=""right""&gt; &lt;select onkeypress=""javascript:if ( event.keyCode == 13 ){valid();}"" style=""font-family:Tahoma; font-size:11px;FONT-WEIGHT :normal;height:20px;"" name=""mkt""&gt; &lt;option value=""0""&gt;All Markets&lt;/option&gt; &lt;option value=""IBESLA~AR""&gt;Argentina &lt;/option&gt; &lt;option value=""IBESAA~AU""&gt;Australia &lt;/option&gt; &lt;option value=""IBESEA~AT""&gt;Austria &lt;/option&gt; &lt;option value=""IBESEB~BE""&gt;Belgium &lt;/option&gt; &lt;option value=""IBESLB~BR""&gt;Brazil &lt;/option&gt; &lt;option value=""IBESNC~CA""&gt;Canada &lt;/option&gt; &lt;option value=""IBESLC~CL""&gt;Chile &lt;/option&gt; &lt;option value=""IBESFC~CN""&gt;China &lt;/option&gt; &lt;option value=""IBESLL~CO""&gt;Colombia &lt;/option&gt; &lt;option value=""IBESDC~HR""&gt;Croatia &lt;/option&gt; &lt;option value=""IBESEC~CZ""&gt;Czech Republic &lt;/option&gt; &lt;option value=""IBESSD~DK""&gt;Denmark &lt;/option&gt; &lt;option value=""IBESKE~EG""&gt;Egypt &lt;/option&gt; &lt;option value=""IBESDE~EE""&gt;Estonia &lt;/option&gt; &lt;option value=""IBESSF~FI""&gt;Finland &lt;/option&gt; &lt;option value=""IBESEF~FR""&gt;France &lt;/option&gt; &lt;option value=""IBESED~DE""&gt;Germany &lt;/option&gt; &lt;option value=""IBESEH~GR""&gt;Greece &lt;/option&gt; &lt;option value=""IBESFH~HK""&gt;Hong Kong &lt;/option&gt; &lt;option value=""IBESEM~HU""&gt;Hungary &lt;/option&gt; &lt;option value=""IBESFI~IN""&gt;India &lt;/option&gt; &lt;option value=""IBESFL~ID""&gt;Indonesia &lt;/option&gt; &lt;option value=""IBESEZ~IE""&gt;Ireland &lt;/option&gt; &lt;option value=""IBESFZ~IL""&gt;Israel &lt;/option&gt; &lt;option value=""IBESEI~IT""&gt;Italy &lt;/option&gt; &lt;option value=""IBESFJ~JP""&gt;Japan &lt;/option&gt; &lt;option value=""IBESFR~JO""&gt;Jordan &lt;/option&gt; &lt;option value=""IBESFM~MY""&gt;Malaysia &lt;/option&gt; &lt;option value=""IBESKP~MU""&gt;Mauritius &lt;/option&gt; &lt;option value=""IBESLM~MX""&gt;Mexico &lt;/option&gt; &lt;option value=""IBESKM~MA""&gt;Morocco &lt;/option&gt; &lt;option value=""IBESEN~NL""&gt;Netherlands &lt;/option&gt; &lt;option value=""IBESAN~NZ""&gt;New Zealand &lt;/option&gt; &lt;option value=""IBESSN~NO""&gt;Norway &lt;/option&gt; &lt;option value=""IBESFQ~PK""&gt;Pakistan &lt;/option&gt; &lt;option value=""IBESLP~PE""&gt;Peru &lt;/option&gt; &lt;option value=""IBESFP~PH""&gt;Philippines &lt;/option&gt; &lt;option value=""IBESEG~PL""&gt;Poland &lt;/option&gt; &lt;option value=""IBESEP~PT""&gt;Portugal &lt;/option&gt; &lt;option value=""IBESEK~RO""&gt;Romania &lt;/option&gt; &lt;option value=""IBESER~RU""&gt;Russia &lt;/option&gt; &lt;option value=""IBESFS~SG""&gt;Singapore &lt;/option&gt; &lt;option value=""IBESDR~SK""&gt;Slovakia &lt;/option&gt; &lt;option value=""IBESDV~SI""&gt;Slovenia &lt;/option&gt; &lt;option value=""IBESKS~ZA""&gt;South Africa &lt;/option&gt; &lt;option value=""IBESFK~KR""&gt;South Korea &lt;/option&gt; &lt;option value=""IBESEE~ES""&gt;Spain &lt;/option&gt; &lt;option value=""IBESBL~LK""&gt;Sri Lanka &lt;/option&gt; &lt;option value=""IBESSS~SE""&gt;Sweden &lt;/option&gt; &lt;option value=""IBESES~CH""&gt;Switzerland &lt;/option&gt; &lt;option value=""IBESFA~TW""&gt;Taiwan &lt;/option&gt; &lt;option value=""IBESFT~TH""&gt;Thailand &lt;/option&gt; &lt;option value=""IBESET~TR""&gt;Turkey &lt;/option&gt; &lt;option value=""IBESEX~GB""&gt;United Kingdom &lt;/option&gt; &lt;option value=""IBESNA~US""&gt;United States &lt;/option&gt; &lt;/select&gt; &lt;/td&gt; &lt;td valign=""middle""&gt; &lt;img width=""5px"" src=""images/spacer.gif""&gt; &lt;/td&gt; &lt;td valign=""middle""&gt; &lt;a href=""javascript:setChildFrameWidth();valid()""&gt; &lt;/td&gt; &lt;td valign=""middle""&gt; &lt;img width=""10px"" src=""images/spacer.gif""&gt; &lt;/td&gt; &lt;/tr&gt; </code></pre>  <p>And here is my code:</p>  <pre><code>from __future__ import division from __future__ import unicode_literals from __future__ import print_function import re import spynner from BeautifulSoup import BeautifulSoup import time br = spynner.Browser() br.create_webview() br.show() br.set_html_parser(BeautifulSoup) br.load(""https://www.thomsononeim.com/s-log_in.asp"") br.fill(""input[name=txtLoginID]"", ""USERNAME"") br.fill(""input[name=txtPWD]"", ""PASSWORD"") br.click(""input[name=Submit]"", wait_load=True) br.click(""input[name=Market]"", wait_load=True) br.select(""IBESNA~US"") br.browse() br.close() </code></pre>  <p>What am I doing wrong with the select? It gives me the error:</p>  <pre><code>Traceback (most recent call last):   File ""C:\Python27\Sample Programs\Spynner Basic.py"", line 17, in &lt;module&gt;     br.select(""IBESNA~US"")   File ""C:\Python27\lib\site-packages\spynner\browser.py"", line 862, in select     self._runjs_on_jquery(""select"", jscode)    File ""C:\Python27\lib\site-packages\spynner\browser.py"", line 394, in _runjs_on_jquery      raise SpynnerJavascriptError(""error on %s: %s"" % (name, code)) SpynnerJavascriptError: error on select: jq('IBESNA~US').attr('selected', 'selected') </code></pre>"	2011-05-27 00:12:59.72 UTC	6147417	"<p>This is a bit of a guess, but it looks like <code>select</code> takes a css selector. Since <code>IBESNA~US</code> isn't a tag, it can't select it and throws an error. Try something like <code>br.select('option[value=""IBESNA~US""]')</code></p>"			2011-05-27 03:02:35.603 UTC
6164765	javascript|python|ajax|cherrypy	How to call function in my python code on click button - from javascript onClick call Python	"<p>I'm trying to implement ajax on CherryPy site and I have problem. How to call function in my python code (function name: ajax_data is @cherrypy.expose and returns some json which I can easily processed ) on click button (  ) ? How to onClick to call ajax_data ? ( I looked first on Google but I find only when button is inside form tag and type submit, but I have table with data and last column is buttons which need to call ajax_data function in python ).</p>"	2011-05-28 22:38:07.537 UTC	6165950	"<p>Ajax is initiated from Javascript in the the browser.  I would recommend looking at Jquery and  <a href=""http://api.jquery.com/category/ajax/"" rel=""nofollow"">http://api.jquery.com/category/ajax/</a> and more specifically <a href=""http://api.jquery.com/jQuery.getJSON/"" rel=""nofollow"">http://api.jquery.com/jQuery.getJSON/</a></p>  <p>Simple example JS Code or call to the back end (NOTE: you will need to include jquery before this is called):</p>  <p><code>$.getJSON('/ajax_data', function(data) {console.log(data)}</code></p>"			2011-05-29 04:27:25.913 UTC
6169049	javascript|python|html|css|traceback	Error for Injected Javascript (Python Web Scraper)	"<p>I had a similar problem to this earlier, but I can't figure out why it won't let me click the checkbox. I BELIEVE I am making an error checking the checkbox by selecting it the wrong way.</p>  <p>Here's my traceback:</p>  <pre><code>Traceback (most recent call last):   File ""C:\Python27\Sample Programs\Spynner Basic.py"", line 19, in &lt;module&gt;     br.check('input[name=""AdvSearchView$SRView$_resultGrid$ctl01$chk""]')   File ""C:\Python27\lib\site-packages\spynner\browser.py"", line 846, in check     self._runjs_on_jquery(""check"", jscode)   File ""C:\Python27\lib\site-packages\spynner\browser.py"", line 394, in _runjs_on_jquery     raise SpynnerJavascriptError(""error on %s: %s"" % (name, code)) SpynnerJavascriptError: error on check: jq('input[name=""AdvSearchView$SRView$_resultGrid$ctl01$chk""]').attr('checked', true) </code></pre>  <p>Here's the HTML/CSS section:</p>  <pre><code>&lt;tr&gt; &lt;td align=""left"" style=""width: 100%; vertical-align: top; background-color: #ffffff; height: 100%""&gt; &lt;table id=""AdvSearchView_SRView__resultGrid"" cellspacing=""0"" border=""0"" style=""border-width:0px;width:100%;border-collapse:collapse;"" rules=""cols""&gt; &lt;tbody&gt; &lt;tr class=""columnheader""&gt; &lt;td align=""center"" style=""width:20px;FONT-SIZE:70%;BORDER-BOTTOM:solid 1px;PADDING-BOTTOM:3px;""&gt; &lt;span title=""Select/Deselect All""&gt; &lt;input id=""AdvSearchView_SRView__resultGrid_ctl01_chk"" type=""checkbox"" onclick=""javascript:ResultGrid.checkUncheckAll('AdvSearchView_SRView__resultGrid', this);""     name=""AdvSearchView$SRView$_resultGrid$ctl01$chk""&gt; # THIS IS THE IMPORTANT PART I THINK &lt;/span&gt; &lt;/td&gt; &lt;td align=""center"" style=""width:25px;FONT-SIZE:70%;BORDER-BOTTOM:solid 1px;PADDING-BOTTOM:3px;""&gt;Type&lt;/td&gt; &lt;td align=""left"" style=""FONT-SIZE:70%;BORDER-BOTTOM:solid 1px;PADDING-BOTTOM:3px;WHITE-SPACE:NOWRAP;""&gt; &lt;a href=""javascript:callback.doCallback('AdvSearchView$SRView$_sortingHeaders','DisplayTicker',null);""&gt;Ticker&lt;/a&gt; &lt;/td&gt; &lt;td align=""center"" style=""FONT-SIZE:70%;BORDER-BOTTOM:solid 1px;PADDING-BOTTOM:3px;WHITE-SPACE:NOWRAP;""&gt; &lt;a href=""javascript:callback.doCallback('AdvSearchView$SRView$_sortingHeaders','Date',null);""&gt;Date&lt;/a&gt; &lt;img style=""border-width:0px;"" src=""/thomson_financial_research_web_ui/3_19/Images/sort_desc.jpg""&gt; &lt;/td&gt; &lt;td align=""left"" style=""FONT-SIZE:70%;BORDER-BOTTOM:solid 1px;PADDING-BOTTOM:3px;""&gt; &lt;a href=""javascript:callback.doCallback('AdvSearchView$SRView$_sortingHeaders','Title',null);""&gt;Headline    &lt;/a&gt; &lt;/td&gt; &lt;td align=""right"" style=""FONT-SIZE:70%;BORDER-BOTTOM:solid 1px;PADDING-BOTTOM:3px;""&gt; &lt;a href=""javascript:callback.doCallback('AdvSearchView$SRView$_sortingHeaders','Pages',null);""&gt;Pgs&lt;/a&gt; &lt;/td&gt; &lt;td align=""left"" style=""width:180px;FONT-SIZE:70%;BORDER-BOTTOM:solid 1px;PADDING-BOTTOM:3px;""&gt; &lt;a href=""javascript:callback.doCallback('AdvSearchView$SRView$_sortingHeaders','Contributor',null);""&gt;Contributor&lt;/a&gt; &lt;/td&gt; &lt;/tr&gt; </code></pre>  <p>And here is my Python code:</p>  <pre><code>from __future__ import division from __future__ import unicode_literals from __future__ import print_function import re import spynner from BeautifulSoup import BeautifulSoup import time br = spynner.Browser() br.create_webview() br.show() br.set_html_parser(""BeautifulSoup"") br.load(""https://www.thomsononeim.com/s-log_in.asp"") br.fill(""input[name=txtLoginID]"", ""username"") br.fill(""input[name=txtPWD]"", ""password"") br.click(""input[name=Submit]"", wait_load=True) br.click(""input[name=Market]"", wait_load=True) br.select('option[value=""IBESNA~US""]') br.click(""#MktGoImg"", wait_load=True) br.check('input[name=""AdvSearchView$SRView$_resultGrid$ctl01$chk""]') br.browse() br.close() </code></pre>"	2011-05-29 16:55:30.513 UTC	6238495	"<p>I might be wrong, but I think this is an actual bug. You should report it to Kiorky. I copied your html to a local document and ran your code (and variations of it).</p>  <p>If you turn on debugging you can see this:</p>  <pre><code>Javascript console (undefined:1): ReferenceError: Can't find variable: jq Javascript console (undefined:1): ReferenceError: Can't find variable: jq </code></pre>  <p>Which makes about no sense at all. This is a spynner defined variable, why wouldn't that exist?</p>  <p>If you try:</p>  <pre><code>browser.load('http://www.lehigh.edu/~inwww/form-test.html') browser.uncheck('input[type=checkbox]') browser.check('input[type=checkbox]') </code></pre>  <p>it works just great.</p>  <p>To get more debug info, do:</p>  <pre><code>browser.debug_level = spynner.INFO </code></pre>  <p>Check the api or source for what others options of debug level you have. I might be far off from the truth, so maybe someone else can shed some light on this?</p>  <p>EDIT:</p>  <p>If you add this to the source html source:</p>  <pre><code>&lt;script type=""text/javascript"" src=""http://ajax.googleapis.com/ajax/libs/jquery/1.5.2/jquery.min.js""&gt;&lt;/script&gt; </code></pre>  <p>it works. Seems that jquery is not properly injected (which it according to the docs should be).</p>"			2011-06-04 18:03:28.427 UTC
6169049	javascript|python|html|css|traceback	Error for Injected Javascript (Python Web Scraper)	"<p>I had a similar problem to this earlier, but I can't figure out why it won't let me click the checkbox. I BELIEVE I am making an error checking the checkbox by selecting it the wrong way.</p>  <p>Here's my traceback:</p>  <pre><code>Traceback (most recent call last):   File ""C:\Python27\Sample Programs\Spynner Basic.py"", line 19, in &lt;module&gt;     br.check('input[name=""AdvSearchView$SRView$_resultGrid$ctl01$chk""]')   File ""C:\Python27\lib\site-packages\spynner\browser.py"", line 846, in check     self._runjs_on_jquery(""check"", jscode)   File ""C:\Python27\lib\site-packages\spynner\browser.py"", line 394, in _runjs_on_jquery     raise SpynnerJavascriptError(""error on %s: %s"" % (name, code)) SpynnerJavascriptError: error on check: jq('input[name=""AdvSearchView$SRView$_resultGrid$ctl01$chk""]').attr('checked', true) </code></pre>  <p>Here's the HTML/CSS section:</p>  <pre><code>&lt;tr&gt; &lt;td align=""left"" style=""width: 100%; vertical-align: top; background-color: #ffffff; height: 100%""&gt; &lt;table id=""AdvSearchView_SRView__resultGrid"" cellspacing=""0"" border=""0"" style=""border-width:0px;width:100%;border-collapse:collapse;"" rules=""cols""&gt; &lt;tbody&gt; &lt;tr class=""columnheader""&gt; &lt;td align=""center"" style=""width:20px;FONT-SIZE:70%;BORDER-BOTTOM:solid 1px;PADDING-BOTTOM:3px;""&gt; &lt;span title=""Select/Deselect All""&gt; &lt;input id=""AdvSearchView_SRView__resultGrid_ctl01_chk"" type=""checkbox"" onclick=""javascript:ResultGrid.checkUncheckAll('AdvSearchView_SRView__resultGrid', this);""     name=""AdvSearchView$SRView$_resultGrid$ctl01$chk""&gt; # THIS IS THE IMPORTANT PART I THINK &lt;/span&gt; &lt;/td&gt; &lt;td align=""center"" style=""width:25px;FONT-SIZE:70%;BORDER-BOTTOM:solid 1px;PADDING-BOTTOM:3px;""&gt;Type&lt;/td&gt; &lt;td align=""left"" style=""FONT-SIZE:70%;BORDER-BOTTOM:solid 1px;PADDING-BOTTOM:3px;WHITE-SPACE:NOWRAP;""&gt; &lt;a href=""javascript:callback.doCallback('AdvSearchView$SRView$_sortingHeaders','DisplayTicker',null);""&gt;Ticker&lt;/a&gt; &lt;/td&gt; &lt;td align=""center"" style=""FONT-SIZE:70%;BORDER-BOTTOM:solid 1px;PADDING-BOTTOM:3px;WHITE-SPACE:NOWRAP;""&gt; &lt;a href=""javascript:callback.doCallback('AdvSearchView$SRView$_sortingHeaders','Date',null);""&gt;Date&lt;/a&gt; &lt;img style=""border-width:0px;"" src=""/thomson_financial_research_web_ui/3_19/Images/sort_desc.jpg""&gt; &lt;/td&gt; &lt;td align=""left"" style=""FONT-SIZE:70%;BORDER-BOTTOM:solid 1px;PADDING-BOTTOM:3px;""&gt; &lt;a href=""javascript:callback.doCallback('AdvSearchView$SRView$_sortingHeaders','Title',null);""&gt;Headline    &lt;/a&gt; &lt;/td&gt; &lt;td align=""right"" style=""FONT-SIZE:70%;BORDER-BOTTOM:solid 1px;PADDING-BOTTOM:3px;""&gt; &lt;a href=""javascript:callback.doCallback('AdvSearchView$SRView$_sortingHeaders','Pages',null);""&gt;Pgs&lt;/a&gt; &lt;/td&gt; &lt;td align=""left"" style=""width:180px;FONT-SIZE:70%;BORDER-BOTTOM:solid 1px;PADDING-BOTTOM:3px;""&gt; &lt;a href=""javascript:callback.doCallback('AdvSearchView$SRView$_sortingHeaders','Contributor',null);""&gt;Contributor&lt;/a&gt; &lt;/td&gt; &lt;/tr&gt; </code></pre>  <p>And here is my Python code:</p>  <pre><code>from __future__ import division from __future__ import unicode_literals from __future__ import print_function import re import spynner from BeautifulSoup import BeautifulSoup import time br = spynner.Browser() br.create_webview() br.show() br.set_html_parser(""BeautifulSoup"") br.load(""https://www.thomsononeim.com/s-log_in.asp"") br.fill(""input[name=txtLoginID]"", ""username"") br.fill(""input[name=txtPWD]"", ""password"") br.click(""input[name=Submit]"", wait_load=True) br.click(""input[name=Market]"", wait_load=True) br.select('option[value=""IBESNA~US""]') br.click(""#MktGoImg"", wait_load=True) br.check('input[name=""AdvSearchView$SRView$_resultGrid$ctl01$chk""]') br.browse() br.close() </code></pre>"	2011-05-29 16:55:30.513 UTC	6171792	<p>I believe this has to do with the name being wrong on the selector.</p>			2011-05-30 02:31:04.747 UTC
6181382	javascript|python|html|http|rest	What's the easiest way to download the source of a webpage in python? (After javascript has been applied)	"<p>In python:</p>  <p>I want to download the source of a webpage, after the javascript has been applied.  What's the easiest way to do that?</p>"	2011-05-30 22:50:35.767 UTC	6181406	"<p><a href=""http://splinter.cobrateam.info/"" rel=""nofollow""><code>splinter</code></a> is the easiest way to do this:</p>  <pre><code>from splinter.browser import Browser browser = Browser() browser.visit('http://google.com') </code></pre>  <p><code>splinter</code> is a tool that makes using several mature products much easier to use. Things like Selenium require lots of getting used to. <code>splinter</code> allows you to learn one API to use the webdriver or change to zope.testbrowser if you would like to.</p>  <p>You can run JavaScript and alter the page or test its results:</p>  <pre><code>browser.execute_script(""$('body').empty()"") browser.evaluate_script(""4+4"") == 8 </code></pre>"			2011-05-30 22:54:22.48 UTC
6321696	python|selenium|web-scraping|selenium-webdriver|windmill	Choosing a Python webscraping framework for handling pure Javascript based sites	"<p>I'm a Python programmer specializing in web-scraping, I had to ask this question as I found nothing relevant. </p>  <p>I want to know what are the popular, well documented frameworks that are available for Python for scraping pure Javascript based sites? Currently I know Mechanize and Beautiful Soup but they do not interact with Javascript so I'm looking for something different. I would prefer something that would be as elegant and simple as mechanize.</p>  <p>I've done a bit of research and so far I've heard about Selenium, Selenium 2 and Windmill.</p>  <p>Right now I'm trying to choose among one these three and I do not know of any others.</p>  <p>So can anyone point out the features of these frameworks and what makes them different? I heard that Selenium uses a separate server to do all it's task and it seems to be feature rich. Also what is the core difference between Selenium and Selenium2? Please enlighten me if I'm wrong, and if you know of any other frameworks do mention it's features and other details.</p>  <p>Thanks.</p>"	2011-06-12 11:32:57.65 UTC	6322502	"<p>Before using tools like Selenium that are designed for front end testing and not for scraping, you should have a look at where the data on the site comes from. Find out what XHR requests are made, what parameters they take and what the result is.</p>  <p>For example the site you mentioned in your comment does a POST request with lots of parameters in JavaScript and displays the result. You probably only need to use the result of this POST request to get your data.</p>"			2011-06-12 14:34:08.547 UTC
6326367	javascript|python|download|urllib2	Automating file downloads with Javascript URLs using Python	"<p>I was assigned to automate the download of several csv files from a site heavily encoded in Javascript (https://www.quantcast.com/download/plannerCSV?&amp;d0Id=01&amp;sc=1&amp;mr=10000&amp;rs2=-1). There is a convenient 'download' button that prompts the download, the URL of which I found using Firebug:</p>  <p><a href=""https://www.quantcast.com/download/plannerCSV?&amp;d0Id=10&amp;sc=1&amp;mr=10000"" rel=""nofollow"">https://www.quantcast.com/download/plannerCSV?&amp;d0Id=10&amp;sc=1&amp;mr=10000</a></p>  <p>However, to the best of my knowledge, the URL must end in .csv in order for the urllib2 module in python to read/write it to my disk. Is there any way of obtaining a URL for this file that ends in .csv so I can automate the download using python?</p>  <p>I prefer to use python to write the script, but if there is another approach to achieve this task that is more sensible/straightforward, I would love to know about it. Any guidance is appreciated! Thanks =)</p>  <p><strong>(edit) to clarify</strong>: The data I'm trying to download consists of a giant (regularly-updated) list, which can be filtered in many different ways based on which checkboxes are checked. The URL changes based on the checkboxes, so I believe the URL may invoke a Javascript call that generates a new csv file each time.</p>"	2011-06-13 03:23:02.77 UTC	6326464	<p>are those url redirect you ? if yes you should use the url redirection (read header ~ use verbose) or try save the page at the current url with urllib then renaming to *.csv . you should try that.</p>			2011-06-13 03:43:18.46 UTC
6326367	javascript|python|download|urllib2	Automating file downloads with Javascript URLs using Python	"<p>I was assigned to automate the download of several csv files from a site heavily encoded in Javascript (https://www.quantcast.com/download/plannerCSV?&amp;d0Id=01&amp;sc=1&amp;mr=10000&amp;rs2=-1). There is a convenient 'download' button that prompts the download, the URL of which I found using Firebug:</p>  <p><a href=""https://www.quantcast.com/download/plannerCSV?&amp;d0Id=10&amp;sc=1&amp;mr=10000"" rel=""nofollow"">https://www.quantcast.com/download/plannerCSV?&amp;d0Id=10&amp;sc=1&amp;mr=10000</a></p>  <p>However, to the best of my knowledge, the URL must end in .csv in order for the urllib2 module in python to read/write it to my disk. Is there any way of obtaining a URL for this file that ends in .csv so I can automate the download using python?</p>  <p>I prefer to use python to write the script, but if there is another approach to achieve this task that is more sensible/straightforward, I would love to know about it. Any guidance is appreciated! Thanks =)</p>  <p><strong>(edit) to clarify</strong>: The data I'm trying to download consists of a giant (regularly-updated) list, which can be filtered in many different ways based on which checkboxes are checked. The URL changes based on the checkboxes, so I believe the URL may invoke a Javascript call that generates a new csv file each time.</p>"	2011-06-13 03:23:02.77 UTC	6326399	"<p>Does appending a dummy GET variable work? For some things -- the obvious one to me is the Google Code wiki regarding image files -- they require a file extension and achieve that by passing GET variables that won't be used by the server. Something like:</p>  <p><a href=""https://www.quantcast.com/download/plannerCSV?&amp;d0Id=10&amp;sc=1&amp;mr=10000&amp;foo=.csv"" rel=""nofollow"">https://www.quantcast.com/download/plannerCSV?&amp;d0Id=10&amp;sc=1&amp;mr=10000&amp;foo=.csv</a></p>  <p>I'd check it out, but I don't have a Quantcast account.</p>"			2011-06-13 03:28:43.45 UTC
6423047	python	Is there a python version of JavaScript's String.fromCharCode?	"<p><code>String.fromCharCode</code> returns a string based on a list of unicode codepoint values. @see <a href=""https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/String/fromCharCode"" rel=""noreferrer"">reference</a></p>  <p>Is there an analog in Python ?</p>"	2011-06-21 09:23:41.397 UTC	6423106	"<p>You can use the <a href=""http://docs.python.org/library/functions.html#chr"" rel=""noreferrer"">chr()</a> or <a href=""http://docs.python.org/library/functions.html#unichr"" rel=""noreferrer"">unichr()</a> for unicode values.</p>"			2011-06-21 09:28:42.483 UTC
6423047	python	Is there a python version of JavaScript's String.fromCharCode?	"<p><code>String.fromCharCode</code> returns a string based on a list of unicode codepoint values. @see <a href=""https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/String/fromCharCode"" rel=""noreferrer"">reference</a></p>  <p>Is there an analog in Python ?</p>"	2011-06-21 09:23:41.397 UTC	6423064	"<p>You can use this: <code>''.join(map(unichr, lst))</code></p>  <p>Example:</p>  <pre><code>''.join(map(unichr, [65,66,67])) # outputs ABC </code></pre>"			2011-06-21 09:25:52.04 UTC
6444824	javascript|python|download|bioinformatics	Downloading Javascript File from Website using Python	"<p>I am trying to use python to download the results from the following website: </p>  <pre><code>http://david.abcc.ncifcrf.gov/api.jsp?type=GENBANK_ACCESSION&amp;ids=CP000010,CP000125,CP000124,CP000124,CP000124,CP000124&amp;tool=chartReport&amp;annot=KEGG_PATHWAY </code></pre>  <p>I was attempting to use mechanize before I realized that the Download File is written in javascript which mechanize does not support. My code so far opens the web page as shown below. I am stuck on how to  access the Download link on the web page in order to save the data onto my machine.</p>  <pre><code>import urllib2  def downloadFile():      url = 'http://david.abcc.ncifcrf.gov/api.jsp?type=GENBANK_ACCESSION&amp;ids=CP000010,CP000125,CP000124,CP000124,CP000124,CP000124&amp;tool=chartReport&amp;annot=KEGG_PATHWAY'     t = urllib2.urlopen(url)     s = t.read()     print s </code></pre>  <p>The results that are printed are</p>  <pre><code>&lt;html&gt; &lt;head&gt;&lt;/head&gt; &lt;body&gt;   &lt;form name=""apiForm"" method=""POST""&gt;     &lt;input type=""hidden"" name=""rowids""&gt;     &lt;input type=""hidden"" name=""annot""&gt;      &lt;script type=""text/javascript""&gt;       document.apiForm.rowids.value=""4791928,3403495,...."";   //There are really about 500 values       document.apiForm.annot.value=""48"";       document.apiForm.action = ""chartReport.jsp"";       document.apiForm.submit();     &lt;/script&gt;    &lt;/form&gt; &lt;/body&gt; &lt;/html&gt; </code></pre>  <p>Does anybody know how I can select and move to the Download File page and save that file to my computer?</p>"	2011-06-22 18:37:38.763 UTC	6445119	"<p>After some more research on that link, I came up with this. You can definitely use mechanize to do it.</p>  <pre><code>import mechanize  def getJSVariableValue(content, variable):     value_start_index = content.find(variable)     value_start_index = content.find('""', value_start_index) + 1      value_end_index = content.find('""', value_start_index)      value = content[value_start_index:value_end_index]     return value  def getChartReport(url):     br = mechanize.Browser()     resp = br.open(url)     content = resp.read()     br.select_form(name = 'apiForm')     br.form.set_all_readonly(False)     br.form['rowids'] = getJSVariableValue(content, 'document.apiForm.rowids.value')     br.form['annot'] = getJSVariableValue(content, 'document.apiForm.annot.value')     br.form.action = 'http://david.abcc.ncifcrf.gov/' + getJSVariableValue(content, 'document.apiForm.action')      print br.form['rowids']     print br.form['annot']      br.submit()      resp = br.follow_link(text_regex=r'Download File')     content = resp.read()     f = open('output.txt', 'w')     f.write(content)   url = 'http://david.abcc.ncifcrf.gov/api.jsp?type=GENBANK_ACCESSION&amp;ids=CP000010,CP000125,CP000124,CP000124,CP000124,CP000124&amp;tool=chartReport&amp;annot=KEGG_PATHWAY' chart_output = getChartReport(url) </code></pre>"			2011-06-22 19:02:57.9 UTC
6467812	javascript|python|django	how to return a dictionary in python django and view it in javascript?	"<p>I'm returning this in my view:</p>  <pre><code>    data = {'val1' : 'this is x', 'val2' : True}     return HttpResponse(data) </code></pre>  <p>I want to use this information in the dictionary within my javascript. Kind of like this:</p>  <pre><code>            function(data) {                 if (data[""val2""]) {                     //success                     alert(data[""val1""]);                 }             } </code></pre>  <p>However my javascript doesn't work. There is no alert popping up and I know that the dictionary has the information when it leaves my python view.</p>  <p><strong>How can I read this information in my JS?</strong></p>  <hr>  <p>Ok so the answer for the view is to simplejson.dumps(data). Now when I do an alert(data) in my JS on my template I get <strong>{'val1' : 'this is x', 'val2' : True}</strong>. Now how can I manage the 2nd part of the question which is read out the values like</p>  <pre><code>        function(data) {             if (data[""val2""]) {                 //success                 alert(data[""val1""]);             }         } </code></pre>  <p><strong>UPDATE:</strong> The simplejson.dumps(data) converts th dictionary into string. So in the javascript you need to convert the string to an object. THis is the easiest but apparently unsafe way.</p>  <pre><code>var myObject = eval('(' + myJSONtext + ')'); </code></pre>"	2011-06-24 12:29:55.407 UTC	6467875	"<p>You can not directly use the python object you have to convert it into JSON string first Look into following documentation.</p>  <p><a href=""http://docs.python.org/library/json.html"" rel=""nofollow"">http://docs.python.org/library/json.html</a> also <a href=""http://www.json.org/"" rel=""nofollow"">http://www.json.org/</a></p>"			2011-06-24 12:35:02.283 UTC
6467812	javascript|python|django	how to return a dictionary in python django and view it in javascript?	"<p>I'm returning this in my view:</p>  <pre><code>    data = {'val1' : 'this is x', 'val2' : True}     return HttpResponse(data) </code></pre>  <p>I want to use this information in the dictionary within my javascript. Kind of like this:</p>  <pre><code>            function(data) {                 if (data[""val2""]) {                     //success                     alert(data[""val1""]);                 }             } </code></pre>  <p>However my javascript doesn't work. There is no alert popping up and I know that the dictionary has the information when it leaves my python view.</p>  <p><strong>How can I read this information in my JS?</strong></p>  <hr>  <p>Ok so the answer for the view is to simplejson.dumps(data). Now when I do an alert(data) in my JS on my template I get <strong>{'val1' : 'this is x', 'val2' : True}</strong>. Now how can I manage the 2nd part of the question which is read out the values like</p>  <pre><code>        function(data) {             if (data[""val2""]) {                 //success                 alert(data[""val1""]);             }         } </code></pre>  <p><strong>UPDATE:</strong> The simplejson.dumps(data) converts th dictionary into string. So in the javascript you need to convert the string to an object. THis is the easiest but apparently unsafe way.</p>  <pre><code>var myObject = eval('(' + myJSONtext + ')'); </code></pre>"	2011-06-24 12:29:55.407 UTC	6476589	"<p>JSON is easiest way to transfer data(also you can use XML).</p>  <p>In python:</p>  <pre>     import json     data = {'val1': ""this is x"", 'val2': True}     return HttpResponse(json.dumps(data)) </pre>  <p>In javascript:</p>  <pre>     function (data) {         data = JSON.parse(data);         if (data[""val2""]) {             alert(data[""val1""]);         }     } </pre>"			2011-06-25 07:50:44.96 UTC
6467812	javascript|python|django	how to return a dictionary in python django and view it in javascript?	"<p>I'm returning this in my view:</p>  <pre><code>    data = {'val1' : 'this is x', 'val2' : True}     return HttpResponse(data) </code></pre>  <p>I want to use this information in the dictionary within my javascript. Kind of like this:</p>  <pre><code>            function(data) {                 if (data[""val2""]) {                     //success                     alert(data[""val1""]);                 }             } </code></pre>  <p>However my javascript doesn't work. There is no alert popping up and I know that the dictionary has the information when it leaves my python view.</p>  <p><strong>How can I read this information in my JS?</strong></p>  <hr>  <p>Ok so the answer for the view is to simplejson.dumps(data). Now when I do an alert(data) in my JS on my template I get <strong>{'val1' : 'this is x', 'val2' : True}</strong>. Now how can I manage the 2nd part of the question which is read out the values like</p>  <pre><code>        function(data) {             if (data[""val2""]) {                 //success                 alert(data[""val1""]);             }         } </code></pre>  <p><strong>UPDATE:</strong> The simplejson.dumps(data) converts th dictionary into string. So in the javascript you need to convert the string to an object. THis is the easiest but apparently unsafe way.</p>  <pre><code>var myObject = eval('(' + myJSONtext + ')'); </code></pre>"	2011-06-24 12:29:55.407 UTC	6468119	"<p>Very simply:</p> <pre><code>import json data = {'val1' : 'this is x', 'val2' : True} return HttpResponse( json.dumps( data ) ) </code></pre>"			2011-06-24 12:58:45.16 UTC
6467812	javascript|python|django	how to return a dictionary in python django and view it in javascript?	"<p>I'm returning this in my view:</p>  <pre><code>    data = {'val1' : 'this is x', 'val2' : True}     return HttpResponse(data) </code></pre>  <p>I want to use this information in the dictionary within my javascript. Kind of like this:</p>  <pre><code>            function(data) {                 if (data[""val2""]) {                     //success                     alert(data[""val1""]);                 }             } </code></pre>  <p>However my javascript doesn't work. There is no alert popping up and I know that the dictionary has the information when it leaves my python view.</p>  <p><strong>How can I read this information in my JS?</strong></p>  <hr>  <p>Ok so the answer for the view is to simplejson.dumps(data). Now when I do an alert(data) in my JS on my template I get <strong>{'val1' : 'this is x', 'val2' : True}</strong>. Now how can I manage the 2nd part of the question which is read out the values like</p>  <pre><code>        function(data) {             if (data[""val2""]) {                 //success                 alert(data[""val1""]);             }         } </code></pre>  <p><strong>UPDATE:</strong> The simplejson.dumps(data) converts th dictionary into string. So in the javascript you need to convert the string to an object. THis is the easiest but apparently unsafe way.</p>  <pre><code>var myObject = eval('(' + myJSONtext + ')'); </code></pre>"	2011-06-24 12:29:55.407 UTC	13528224	"<p>Just specify the mimetype in HttpResponse </p>  <pre><code>    return HttpResponse(                         json.dumps({""status"":False, ""message"":""Please enter a report name.""}) ,                         content_type=""application/json""                         ) </code></pre>"			2012-11-23 11:32:09.62 UTC
6497642	javascript|jquery|python|django|json	Converting a python list into a javascript array	"<p>So I'm trying to form a javascript array of dates that I can feed as input to a jquery datepicker addon.  My Django view is:</p>  <pre><code>def autofill_featured(request):     show_id = request.GET.get('show_id')     show = Show.objects.get(id=show_id)     data = []      for listing in show.listings.all():         string = str(listing.date.month) + '/' + str(listing.date.day) + '/' + str(listing.date.year)         data.append(string)     return HttpResponse(simplejson.dumps(data)) </code></pre>  <p>My javascript is currently:</p>  <pre><code>$(document).ready(function() {     var preselect = function () {         var results = $.ajax({             url: ""/autofill_featured"",             dataType: ""json"",             data: {show_id: $(""#id_show_id"").val()}         });         return results;     };     $(""#picker"").multiDatesPicker({         addDates: preselect()     }); </code></pre>  <p>If I manually specify</p>  <pre><code>addDates: ['6/29/2011', '6/30/2011'] </code></pre>  <p>then it works, but trying to pass it the results of preselect and I get an error: ""o_dates[0].getTime is not a function"".  According to the multiDatesPicker docs I can supply either an array of strings in the date format I used above, or an array of javascript date objects.  How can I take the json that is returned by my Django view and turn it into a js array?</p>  <p>The docs for the jquery addon I'm trying to use are here, if it helps: <a href=""http://multidatespickr.sourceforge.net/"" rel=""nofollow"">http://multidatespickr.sourceforge.net/</a></p>  <p>I'm very new to JS and don't really know what's going wrong. Any ideas?  Thanks for any help you can provide!</p>"	2011-06-27 19:05:11.703 UTC	6498299	"<p>This portion of code is wrong:</p>  <pre><code>var preselect = function () {     var results = $.ajax({         url: ""/autofill_featured"",         dataType: ""json"",         data: {show_id: $(""#id_show_id"").val()}     });     return results; }; </code></pre>  <p><code>$.ajax</code> function does return <code>jqXHR</code> object, not ajax call result. What You need is to add success callback (Browser JS is all about callbacks) to Your ajax call.</p>  <pre><code>$.ajax({     /* ... */     success: function (data) {         /* Set date pickers date             I am  not sure about multiDatePicker API */     } }); </code></pre>  <p>But I think it is wrong approach to make additional request just to prefill some date picker. Maybe, You can pass dates list when You are actually generating Your view with date picker?</p>"			2011-06-27 20:04:40.747 UTC
6524691	javascript|python	Python to Javascript	"<pre><code>&gt;&gt;&gt; def clockwise(r): ...     return list(r[0]) + clockwise(list(reversed(zip(*r[1:])))) if r else [] ...  &gt;&gt;&gt; a = [  ...   [ 1,  2,  3],  ...   [ 5,  6,  7],  ...   [ 9, 10, 11]] &gt;&gt;&gt; clockwise(a) [1, 2, 3, 7, 11, 10, 9, 5, 6] </code></pre>  <p>I'm trying to change the function clockwise into Javascript but can't seem to get it to work.</p>  <p>I've created some methods with similar functions:</p>  <pre><code>function zip(masterArray){//zips 2 arrays var innerLoop = masterArray.length; //inner loop var outerLoop = 0; //get length of shortest for (var i = 0; i&lt;masterArray.length;i++){     var a = masterArray[i].length;     if (outerLoop==0){outerLoop = a;}else if(a &lt; outerLoop){outerLoop = a;} }  var newOuterArray = new Array(outerLoop);     for (var x = 0; x&lt;outerLoop;x++){         var newInnerArray = new Array(innerLoop);             for (var y = 0; y&lt;innerLoop;y++){                 newInnerArray[y] = masterArray[y][x];                 }             newOuterArray[x] = newInnerArray; }  return newOuterArray; }  function reversed(arr){     var newArray = new Array(arr.length);     var n = 0;     for(var i=arr.length-1; i&gt;=0; i--){         newArray[n++] = arr[i];     }     return newArray; }  function clockwise(r){      if(r.length&gt;0){             var a = reversed(zip(r.slice(1)));             a.splice(0,0,r[0]);             return clockwise(a);      }else{         return [];     } } </code></pre>  <p>Here's my progress. I'm stuck at the last part: clockwise error in firebug is too much recursion. </p>"	2011-06-29 17:17:19.43 UTC	6525362	"<p>I don't follow what the algorithm is trying to do, but the Javascript version of clockwise looks like it can only ever return [].  There are two return paths.  One calls clockwise, the other returns [] so the only way out of that function is to return [].  That's not how your python version works.</p>  <p>I haven't looked at reversed and zip, but there is a logic difference in the javascript version of clockwise.  In the javascript version, you remove the first item in the array, then reverse and zip, then put the first item back on the array and call clockwise on the whole thing.  In the Python version, you remvoe the first item in the array, call clocks and reverse on only the item without the first version, then add the first one back on afterwards.  Very different logic.  The Python version is much more likely to end.</p>  <p>I haven't looked at the other functions reverse and zip, but this looks like a more faithful javascript version of clockwise:</p>  <pre><code>function clockwise(r) {     if (r.length &gt; 0) {         var a = clockwise(reversed(zip(r.slice(1))));   // call clockwise on array starting at index 1         a.splice(0,0,r[0]);                             // put first value in original array back onto the beginning of the result         return (a);                                     // return new array     } else {         return [];     } } </code></pre>"			2011-06-29 18:19:31.18 UTC
6524691	javascript|python	Python to Javascript	"<pre><code>&gt;&gt;&gt; def clockwise(r): ...     return list(r[0]) + clockwise(list(reversed(zip(*r[1:])))) if r else [] ...  &gt;&gt;&gt; a = [  ...   [ 1,  2,  3],  ...   [ 5,  6,  7],  ...   [ 9, 10, 11]] &gt;&gt;&gt; clockwise(a) [1, 2, 3, 7, 11, 10, 9, 5, 6] </code></pre>  <p>I'm trying to change the function clockwise into Javascript but can't seem to get it to work.</p>  <p>I've created some methods with similar functions:</p>  <pre><code>function zip(masterArray){//zips 2 arrays var innerLoop = masterArray.length; //inner loop var outerLoop = 0; //get length of shortest for (var i = 0; i&lt;masterArray.length;i++){     var a = masterArray[i].length;     if (outerLoop==0){outerLoop = a;}else if(a &lt; outerLoop){outerLoop = a;} }  var newOuterArray = new Array(outerLoop);     for (var x = 0; x&lt;outerLoop;x++){         var newInnerArray = new Array(innerLoop);             for (var y = 0; y&lt;innerLoop;y++){                 newInnerArray[y] = masterArray[y][x];                 }             newOuterArray[x] = newInnerArray; }  return newOuterArray; }  function reversed(arr){     var newArray = new Array(arr.length);     var n = 0;     for(var i=arr.length-1; i&gt;=0; i--){         newArray[n++] = arr[i];     }     return newArray; }  function clockwise(r){      if(r.length&gt;0){             var a = reversed(zip(r.slice(1)));             a.splice(0,0,r[0]);             return clockwise(a);      }else{         return [];     } } </code></pre>  <p>Here's my progress. I'm stuck at the last part: clockwise error in firebug is too much recursion. </p>"	2011-06-29 17:17:19.43 UTC	6525012	<p>I think you want the recursive call to <code>clockwise()</code> to be before you prepend <code>r[0]</code> otherwise you never get down to an empty string.</p>			2011-06-29 17:48:09.427 UTC
6524691	javascript|python	Python to Javascript	"<pre><code>&gt;&gt;&gt; def clockwise(r): ...     return list(r[0]) + clockwise(list(reversed(zip(*r[1:])))) if r else [] ...  &gt;&gt;&gt; a = [  ...   [ 1,  2,  3],  ...   [ 5,  6,  7],  ...   [ 9, 10, 11]] &gt;&gt;&gt; clockwise(a) [1, 2, 3, 7, 11, 10, 9, 5, 6] </code></pre>  <p>I'm trying to change the function clockwise into Javascript but can't seem to get it to work.</p>  <p>I've created some methods with similar functions:</p>  <pre><code>function zip(masterArray){//zips 2 arrays var innerLoop = masterArray.length; //inner loop var outerLoop = 0; //get length of shortest for (var i = 0; i&lt;masterArray.length;i++){     var a = masterArray[i].length;     if (outerLoop==0){outerLoop = a;}else if(a &lt; outerLoop){outerLoop = a;} }  var newOuterArray = new Array(outerLoop);     for (var x = 0; x&lt;outerLoop;x++){         var newInnerArray = new Array(innerLoop);             for (var y = 0; y&lt;innerLoop;y++){                 newInnerArray[y] = masterArray[y][x];                 }             newOuterArray[x] = newInnerArray; }  return newOuterArray; }  function reversed(arr){     var newArray = new Array(arr.length);     var n = 0;     for(var i=arr.length-1; i&gt;=0; i--){         newArray[n++] = arr[i];     }     return newArray; }  function clockwise(r){      if(r.length&gt;0){             var a = reversed(zip(r.slice(1)));             a.splice(0,0,r[0]);             return clockwise(a);      }else{         return [];     } } </code></pre>  <p>Here's my progress. I'm stuck at the last part: clockwise error in firebug is too much recursion. </p>"	2011-06-29 17:17:19.43 UTC	6525003	<p>I think the problem lies in the use of splice.  Try something like this instead...</p>  <pre><code>function clockwise(r){     if(r.length&gt;0){         var remaining = r.slice(1)         var a = reversed(zip(remaining));         return r[0].concat(clockwise(a));      } else {         return [];     } } </code></pre>			2011-06-29 17:47:24.663 UTC
6558704	javascript|python|mechanize	Using Python to Automatically Login to a Website with a JavaScript Form	"<p>I'm attempting to write a particular script that logs into a website. This specific website contains a Javascript form so I had little to no luck by making use of ""mechanize"". </p>  <p>I'm curious if there exist other solutions that I may be unaware of that would help me in my situation. If this particular question or some related variant has been asked here before, please excuse me, and I would prefer the link to this particular query. Otherwise, what are some common techniques/approaches for dealing with this issue?</p>  <p>Thanks.</p>"	2011-07-02 18:04:10.503 UTC	6558887	"<p>I've recently been using <a href=""http://code.google.com/p/phantomjs/"" rel=""nofollow"">PhantomJS</a> for this kind of work - it's a command-line tool that allows you to run Javascript in a browser environment (based on Webkit). This allows you to do scraping and online interactions that require Javascript-enabled interfaces. There's a <a href=""http://dev.umaclan.com/projects/pyphantomjs"" rel=""nofollow"">Python-based implementation here</a> that's fully compatible with the API of the C++ version, or you could run either version in Python via <code>subprocess</code>.</p>  <p>Depending on what you're trying to do, another good option might be to use <a href=""http://seleniumhq.org/"" rel=""nofollow"">Selenium</a>, which has client driver implementation in Python - it's meant for integration testing, but can do a lot of automation as long as you're okay running the Java-based Selenium Server and having the automation happen in an open browser rather than as a background process.</p>"			2011-07-02 18:41:43.047 UTC
6603994	javascript|python	Javascript issue inside of a Python Module	"<p>I'm trying to have Python run some Javascript, and I am running into a few issues. Namely that when I am trying to inject some text into a textarea of a page, it doesn't seem to work if and only if there is a newline (\n) as part of the variable inserted for the Javascript.</p>  <p>Here's my line:</p>  <pre><code>br.runjs(""document.getElementById('edit-body').value = '%s'"" % (brag)) </code></pre>  <p>if the variable ""brag"" has any sort of newline in it at all, the insertion does not work. Any idea how to go around this?</p>"	2011-07-06 22:50:55.493 UTC	6604002	<p>Encode <code>brag</code> as JSON and then use that.</p>			2011-07-06 22:52:28.643 UTC
6630214	python|screen-scraping	Download html of URL with Python - but with javascript enabled	"<p>I am trying to download <a href=""http://docs.python.org/search.html?q=chdir&amp;check_keywords=yes&amp;area=default"" rel=""nofollow"">this page</a> so that I can scrape the search results. However, when I download the page and try to process it with BeautifulSoup, I find that parts of the page (for example, the search results) aren't included as the site has detected that javascript is not enabled.</p>  <p>Is there a way to download the HTML of a URL with javascript enabled in Python?</p>"	2011-07-08 20:36:27.593 UTC	6630376	"<p>Once you wanta javascript enabled, what you're asking for is very close to a browser. You can use jython and then use HtmlUnit, which is a headless java based browser. It's pretty fast but not very stable (because is imitates a browser and isn't really a browser). I think the fastest and easiest way is to use selenium (ide or preferably rc). Selenium gives you the ability to control your favorite browser (FF, IE, chrome,..). Although it's meant for testing puposes, it'll probably work for you. It's stable and pretty fast (I think it's even faster than HtmlUnit). </p>"			2011-07-08 20:50:14.08 UTC
6630214	python|screen-scraping	Download html of URL with Python - but with javascript enabled	"<p>I am trying to download <a href=""http://docs.python.org/search.html?q=chdir&amp;check_keywords=yes&amp;area=default"" rel=""nofollow"">this page</a> so that I can scrape the search results. However, when I download the page and try to process it with BeautifulSoup, I find that parts of the page (for example, the search results) aren't included as the site has detected that javascript is not enabled.</p>  <p>Is there a way to download the HTML of a URL with javascript enabled in Python?</p>"	2011-07-08 20:36:27.593 UTC	6638745	"<p>You can use htql at <a href=""http://htql.net"" rel=""nofollow"">http://htql.net</a>.  </p>  <pre><code>import htql; browser=htql.Browser(2); page, url=browser.goUrl('http://docs.python.org/search.html?q=chdir&amp;check_keywords=yes&amp;area=default'); import time;  time.sleep(2); page, url=browser.getUpdatedPage(); </code></pre>  <p>BTW, you will need to install IRobot at <a href=""http://irobotsoft.com/"" rel=""nofollow"">http://irobotsoft.com/</a> </p>"			2011-07-10 02:19:40.333 UTC
6630214	python|screen-scraping	Download html of URL with Python - but with javascript enabled	"<p>I am trying to download <a href=""http://docs.python.org/search.html?q=chdir&amp;check_keywords=yes&amp;area=default"" rel=""nofollow"">this page</a> so that I can scrape the search results. However, when I download the page and try to process it with BeautifulSoup, I find that parts of the page (for example, the search results) aren't included as the site has detected that javascript is not enabled.</p>  <p>Is there a way to download the HTML of a URL with javascript enabled in Python?</p>"	2011-07-08 20:36:27.593 UTC	6630401	"<p>I'd look into using the QtWebKit module in the PyQt4 library. The module will let the JS code run on the page and once it's done, you can save the HTML using standard methods I believe.</p>  <p>Otherwise, Selenium is the way to go. It lets you control a web browser from your Python script to pull up the page and then extract all the DOM stuff.</p>"			2011-07-08 20:53:26.033 UTC
6630214	python|screen-scraping	Download html of URL with Python - but with javascript enabled	"<p>I am trying to download <a href=""http://docs.python.org/search.html?q=chdir&amp;check_keywords=yes&amp;area=default"" rel=""nofollow"">this page</a> so that I can scrape the search results. However, when I download the page and try to process it with BeautifulSoup, I find that parts of the page (for example, the search results) aren't included as the site has detected that javascript is not enabled.</p>  <p>Is there a way to download the HTML of a URL with javascript enabled in Python?</p>"	2011-07-08 20:36:27.593 UTC	6633507	"<p>@kstruct: My preferred way, instead of writing a full browser with QtWebKit and PyQt4, is to use one already written. There's the <a href=""http://code.google.com/p/phantomjs/"" rel=""nofollow"">PhantomJS</a> (C++) project, or <a href=""http://dev.umaclan.com/projects/pyphantomjs/"" rel=""nofollow"">PyPhantomJS</a> (Python). Basically the Python one is QtWebKit and Python.</p>  <p>They're both headless browsers which you can control directly from JavaScript. The Python version has a plug-in system which allows you to extend the core too, to allow additional functionalities should you need.</p>  <p>Here's an example script for PyPhantomJS (with the <a href=""http://dev.umaclan.com/projects/pyphantomjs/wiki/Plugins#Save-to-File"" rel=""nofollow"">saveToFile plugin</a>)</p>  <pre><code>// create new webpage var page = new WebPage();  // open page, set callback page.open('url', function(status) {     // exit if page couldn't load     if (status !== 'success') {         console.log('FAIL to load!');         phantom.exit(1);     }      // save page content to file     phantom.saveToFile(page.content, 'myfile.txt');     phantom.exit(); }); </code></pre>  <p>Useful links:<br> <a href=""http://dev.umaclan.com/projects/pyphantomjs/wiki/Api_reference"" rel=""nofollow"">API reference</a> | <a href=""http://dev.umaclan.com/projects/pyphantomjs/wiki/Writing_plugins"" rel=""nofollow"">How to write plugins</a></p>"			2011-07-09 07:55:21.867 UTC
6648312	javascript|python	What's the best way to assemble Javascript modules server-side in Python?	"<p>I'm planning an extensible web app where base objects are extended by JavaScript modules which plug in. Each JavaScript object may just be an independent bit of code, or I might be building a large object to simulate a module namespace. I'll be using a Django back-end and Backbone.js, since you asked.</p>  <p>The system should be easily modular, so adding a new module should be a question of just dropping in another file or database row or whatever. The person installing the module shouldn't have to edit a large JavaScript file manually (or run a special script, in an ideal world).</p>  <p>I have two options: just serve each JS file separately or get the server to assemble them. The first option will get ungainly when a large number of plugins is reached. </p>  <p>I'm looking into the best way to implement the second option: assembling a JavaScript file from a lot of small JavaScript snippets. I could just do some blind string concatenation, but there may be a Python library that can do this and take account of problems I haven't foreseen.</p>"	2011-07-11 09:42:04.313 UTC	6648427	"<p>I think this is what you are looking for</p>  <p><a href=""http://djangopackages.com/grids/g/asset-managers/"" rel=""nofollow"">http://djangopackages.com/grids/g/asset-managers/</a></p>  <p>Mediagenerator is my favorite. Easy to use and compress a lot.</p>  <p>It does get all your js into one big js file but compressed, and your css too.</p>  <p>Hope it helps</p>"			2011-07-11 09:53:32.953 UTC
6648312	javascript|python	What's the best way to assemble Javascript modules server-side in Python?	"<p>I'm planning an extensible web app where base objects are extended by JavaScript modules which plug in. Each JavaScript object may just be an independent bit of code, or I might be building a large object to simulate a module namespace. I'll be using a Django back-end and Backbone.js, since you asked.</p>  <p>The system should be easily modular, so adding a new module should be a question of just dropping in another file or database row or whatever. The person installing the module shouldn't have to edit a large JavaScript file manually (or run a special script, in an ideal world).</p>  <p>I have two options: just serve each JS file separately or get the server to assemble them. The first option will get ungainly when a large number of plugins is reached. </p>  <p>I'm looking into the best way to implement the second option: assembling a JavaScript file from a lot of small JavaScript snippets. I could just do some blind string concatenation, but there may be a Python library that can do this and take account of problems I haven't foreseen.</p>"	2011-07-11 09:42:04.313 UTC	6648471	"<p>For one of my projects I simply wrote a small build script which handles both CSS and JS files.</p>  <p>For JS it reads the list of JS files from a text file, concatenates all scripts and submits them to google for minification.</p>  <p>For CSS I take my central CSS file and recursively replace all <code>@import</code> statements with the referenced file (since i only use absolute paths no path rewriting is necessary); after this I have a single CSS file which is then run throuh <code>cssmin</code>.</p>  <p>Since you are using Django you could probably write such a script in a way to make it easily callable through <em>manage.py</em></p>"			2011-07-11 09:57:21.9 UTC
6648312	javascript|python	What's the best way to assemble Javascript modules server-side in Python?	"<p>I'm planning an extensible web app where base objects are extended by JavaScript modules which plug in. Each JavaScript object may just be an independent bit of code, or I might be building a large object to simulate a module namespace. I'll be using a Django back-end and Backbone.js, since you asked.</p>  <p>The system should be easily modular, so adding a new module should be a question of just dropping in another file or database row or whatever. The person installing the module shouldn't have to edit a large JavaScript file manually (or run a special script, in an ideal world).</p>  <p>I have two options: just serve each JS file separately or get the server to assemble them. The first option will get ungainly when a large number of plugins is reached. </p>  <p>I'm looking into the best way to implement the second option: assembling a JavaScript file from a lot of small JavaScript snippets. I could just do some blind string concatenation, but there may be a Python library that can do this and take account of problems I haven't foreseen.</p>"	2011-07-11 09:42:04.313 UTC	6856002	"<p>See <a href=""http://django_compressor.readthedocs.org/en/latest/"" rel=""nofollow"">Django Compressor</a> It might be what your after.</p>  <blockquote>   <p>Flexibility Django Compressor doesn’t care if different pages use   different combinations of statics. It doesn’t care if you use inline   scripts or styles. It doesn’t get in the way.</p> </blockquote>"			2011-07-28 08:24:26.523 UTC
6785357	python|django|algorithm	Efficient algorithm in Python and Django for choosing n JavaScript functions from file containing m	"<p>I need an efficient algorithm in Python for the following requirement.</p>  <p>Consider I am having N JavaScript functions in a file. I have to include any M JavaScript among N in any particular order. (For example, in one page I may include N1, N4, N5, N6 and another page N1, N5, N4, N3, but it should get included in the same order.)</p>  <p>What is an efficient way to do it?  </p>"	2011-07-22 03:31:12.317 UTC	6785610	"<p>This is known as the <a href=""http://en.wikipedia.org/wiki/Maximum_coverage_problem"" rel=""nofollow"">maximum coverage problem</a>, and is <a href=""http://en.wikipedia.org/wiki/NP-hard"" rel=""nofollow"">NP-Hard</a> (non-deterministic polynomial-time hard)... There do, however, exist some approximation algorithms, the easiest to implement would be a greedy based algorithm.</p>  <p>Say you need to include N_1 ... N_m JavaScript files. You would want to order your JavaScript code based upon how many of these elements they contain, and recompute their weight at every iteration.</p>  <p>Simple example:</p>  <ul> <li>JavaScript1 has [n1, n2, n3, n5]</li> <li>JavaScript2 has [h1, h2, n4]</li> <li>JavaScript3 has [n4, n6]</li> </ul>  <p>Say you want to include n_1...n_6.  You would sort these JavaScript files such that the original ordering would be [JavaScript1, JavaScript2, JavaScript3] (in the order of how much coverage they provide). You would use JavaScript1 first, now you just need n4 and n6... If you resort the remaining JavaScript files based upon the ones that would provide the most coverage the new ordering would be [JavaScript3, JavaScript2].  Note that even though the second file contains more definitions, JavaScript3 is more useful as it will cover the remaining uncovered definitions.</p>  <p>You can write up the algorithm yourself though! :)</p>"			2011-07-22 04:17:40.907 UTC
6791799	javascript|php|python|mysql|serial-port	"Controlling serial port through a webapp(PHP, javascript) using MySQL and Python"	"<p>Wanted to get some feedback on this implementation.</p>  <p>I'm developing an application on the PC to send and receive data to the serial port.</p>  <p>Some of the data received by the application will be solicited, while other data unsolicited.</p>  <p>Controlling the serial port and processing messages would be handled by a Python application that would reside between the serial port and the MySQL database. This would be a threaded application with one thread handling sending/receiving using the Queue library and other threads handling logic and the database chores.</p>  <p>They MySQL database would contain tables for storing data received from the serial port, as well as tables of outgoing commands that need to be sent to the serial port. A command sent out may or not be received, so some means of handling retries would be required.</p>  <p>The webapp using HTML, PHP, and javascript would provide the UI. Users can query data and send commands to change parameters, etc. All commands sent out would be written into an outgoing table in the database and picked up by the python app.</p>  <p>My question: Is this a reasonable implementation?  Any ideas or thoughts would be appreciated. Thanks.</p>"	2011-07-22 14:50:42.327 UTC	10899487	"<p>You might also want to check out pySerial (http://pyserial.sourceforge.net/).  You might also want to think about you sampling rates, i.e.  how much data are you going to be generating and at what frequency.  in other words how much data are you planning to store.  Will give you some idea of system sizing.</p>"			2012-06-05 14:45:31.807 UTC
6791799	javascript|php|python|mysql|serial-port	"Controlling serial port through a webapp(PHP, javascript) using MySQL and Python"	"<p>Wanted to get some feedback on this implementation.</p>  <p>I'm developing an application on the PC to send and receive data to the serial port.</p>  <p>Some of the data received by the application will be solicited, while other data unsolicited.</p>  <p>Controlling the serial port and processing messages would be handled by a Python application that would reside between the serial port and the MySQL database. This would be a threaded application with one thread handling sending/receiving using the Queue library and other threads handling logic and the database chores.</p>  <p>They MySQL database would contain tables for storing data received from the serial port, as well as tables of outgoing commands that need to be sent to the serial port. A command sent out may or not be received, so some means of handling retries would be required.</p>  <p>The webapp using HTML, PHP, and javascript would provide the UI. Users can query data and send commands to change parameters, etc. All commands sent out would be written into an outgoing table in the database and picked up by the python app.</p>  <p>My question: Is this a reasonable implementation?  Any ideas or thoughts would be appreciated. Thanks.</p>"	2011-07-22 14:50:42.327 UTC	9482670	<p>It seems there's a lot of places for things to go wrong.</p>  <p>Why not just cut out PHP all together and use python?</p>  <p>e.g. Use a python web framework &amp; let your JavaScript communicate with that and while also reading the serial port and logging to MySQL.</p>  <p>That's just me though. I'd try and cut out as many points where it could fail as possible and keep it super simple.</p>			2012-02-28 13:20:10.067 UTC
6826627	javascript|python|ajax|scrapy	How can Python work with javascript	"<p>I am working on a scrapy app to scrapte some data on a web page</p>  <p>But there is some data loaded by ajax, and thus python just cannot execute that to get the data.</p>  <p>Is there any lib that simulate the behavior of a browser?</p>"	2011-07-26 07:24:14.307 UTC	6826894	"<p>The problem is that you don't just have to be able to execute some Javascript (that's easy), you also have to emulate the browser DOM and that's a lot of work.</p>  <p>If you want to be able to run  Javascript then you can use PyV8. Install it with <code>easy_install PyV8</code> and then you can execute any standalone javascript:</p>  <pre><code>&gt;&gt;&gt; import PyV8 &gt;&gt;&gt; ctxt = PyV8.JSContext() &gt;&gt;&gt; ctxt.enter() &gt;&gt;&gt; ctxt.eval(""(function(a,b) { return [a+b, a*b, a/b, a-b] })(13,29)"") &lt;_PyV8.JSArray object at 0x01F26A30&gt; &gt;&gt;&gt; list(_) [42, 377, 0.4482758620689655, -16] </code></pre>  <p>You can also pass in classes defined in Python, so in principle might be able could emulate enough of the DOM for your purposes.</p>"			2011-07-26 07:51:07.723 UTC
6826627	javascript|python|ajax|scrapy	How can Python work with javascript	"<p>I am working on a scrapy app to scrapte some data on a web page</p>  <p>But there is some data loaded by ajax, and thus python just cannot execute that to get the data.</p>  <p>Is there any lib that simulate the behavior of a browser?</p>"	2011-07-26 07:24:14.307 UTC	6826690	"<p>For that you'd have to use a full-blown Javascript engine (like Google V8 in Chrome), to get the real functionality of the browser and how it interacts. However, you could possibly get some information by looking up all URLs in the source and doing a request to each, hoping for some valid data. But in overall, you're stuck without a full Javascript engine.</p>  <p>Something like <a href=""http://code.google.com/p/python-spidermonkey/"" rel=""nofollow"">python-spidermonkey</a>. A wrapper to the Javascript engine of Mozilla. However using it might be rather complicated, but that's dependant on your specific application.</p>  <p>You'd basically have to build a browser, but seems Python-people have made it simple. With <a href=""http://code.google.com/p/pywebkitgtk/"" rel=""nofollow"">PyWebkitGtk</a> you'd get the dom and using either python-spidermonkey mentioned before or <a href=""http://code.google.com/p/pyv8/"" rel=""nofollow"">PyV8</a> mentioned by Duncan you'd theoretically get the full functionality needed for a browser/webscraper.</p>"			2011-07-26 07:30:05.86 UTC
6826627	javascript|python|ajax|scrapy	How can Python work with javascript	"<p>I am working on a scrapy app to scrapte some data on a web page</p>  <p>But there is some data loaded by ajax, and thus python just cannot execute that to get the data.</p>  <p>Is there any lib that simulate the behavior of a browser?</p>"	2011-07-26 07:24:14.307 UTC	6826752	"<p>An AJAX request is a normal web request which is executed asynchronously. All you need is the URL which the JavaScript code sends to the server. Use that URL with <a href=""http://docs.python.org/library/urllib.html"" rel=""nofollow"">urllib</a> to get at the same data.</p>"			2011-07-26 07:36:09.713 UTC
6826627	javascript|python|ajax|scrapy	How can Python work with javascript	"<p>I am working on a scrapy app to scrapte some data on a web page</p>  <p>But there is some data loaded by ajax, and thus python just cannot execute that to get the data.</p>  <p>Is there any lib that simulate the behavior of a browser?</p>"	2011-07-26 07:24:14.307 UTC	26007984	"<p>The simplest way to get work done is by using 'PyExecJS'. <a href=""https://pypi.python.org/pypi/PyExecJS"" rel=""nofollow"">https://pypi.python.org/pypi/PyExecJS</a></p>  <p>PyExecJS is a porting of ExecJS from Ruby. PyExecJS automatically picks the best runtime available to evaluate your JavaScript program, then returns the result to you as a Python object.</p>  <p>I use Macbook and installed node.js so pyexecjs can use node.js javascript runtime.</p>  <p>pip install PyExecJS</p>  <p>Test code:</p>  <p>import execjs execjs.eval(""'red yellow blue'.split(' ')"")</p>  <p>Good luck!</p>"			2014-09-24 03:19:15.32 UTC
6826627	javascript|python|ajax|scrapy	How can Python work with javascript	"<p>I am working on a scrapy app to scrapte some data on a web page</p>  <p>But there is some data loaded by ajax, and thus python just cannot execute that to get the data.</p>  <p>Is there any lib that simulate the behavior of a browser?</p>"	2011-07-26 07:24:14.307 UTC	64148552	"<h3>A little update for 2020</h3> <p><em>i reviewed the results recommended by Google Search. Turns out the best choice is #4 and then #1 #2 are deprecated!</em></p> <ul> <li>#4 <a href=""https://github.com/sqreen/PyMiniRacer"" rel=""nofollow noreferrer"">https://github.com/sqreen/PyMiniRacer</a> is actually the most straight forward installation.</li> <li>#3 <a href=""https://github.com/kovidgoyal/dukpy"" rel=""nofollow noreferrer"">https://github.com/kovidgoyal/dukpy</a> is based lightweight JS engine. I could not find any limitations compared with v8. No significant benefit in terms of performance either.</li> </ul> <h3>Deprecated</h3> <ul> <li>#1 <del>https://github.com/sony/v8eval </del> has received very little maintenance for 2 years. takes 20 minutes to build and fails... (filed a bug report for that <a href=""https://github.com/sony/v8eval/issues/34"" rel=""nofollow noreferrer"">https://github.com/sony/v8eval/issues/34</a></li> <li>#2 <del>https://github.com/doloopwhile/PyExecJS </del> is discontinued by the owner</li> </ul> <p><a href=""https://i.stack.imgur.com/3iYWx.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/3iYWx.png"" alt=""enter image description here"" /></a></p>"			2020-10-01 03:13:55.307 UTC
6851443	javascript|python|methods	Javascript-style object methods in Python?	"<p>In Javascript, I can do this:</p>  <pre><code>var person = {   name: 'Joe',   age:  '35',   speak: function(){     return 'o hai i am joe'   } } </code></pre>  <p>Then I can call that method:</p>  <pre><code>person.speak() 'o hai i am joe' </code></pre>  <p>I know this can be done with classes in Python, and presumably that's the right way to go.</p>  <p>Nonetheless, I'm curious -- is there some way to add a function as a value in a Python dictionary? </p>"	2011-07-27 21:27:16.13 UTC	6851473	"<pre><code>def test():     print ""hello""  testDict = {""name"" : ""Joe"", ""age"" : 35, ""speak"" : test}  testDict[""speak""]() </code></pre>"			2011-07-27 21:30:22.943 UTC
6851443	javascript|python|methods	Javascript-style object methods in Python?	"<p>In Javascript, I can do this:</p>  <pre><code>var person = {   name: 'Joe',   age:  '35',   speak: function(){     return 'o hai i am joe'   } } </code></pre>  <p>Then I can call that method:</p>  <pre><code>person.speak() 'o hai i am joe' </code></pre>  <p>I know this can be done with classes in Python, and presumably that's the right way to go.</p>  <p>Nonetheless, I'm curious -- is there some way to add a function as a value in a Python dictionary? </p>"	2011-07-27 21:27:16.13 UTC	6851464	"<pre><code>person = {   'name': 'Joe',   'age':  '35',   'speak': lambda: 'o hai i am joe', } </code></pre>  <p>However, in Python (unlike JavaScript), attribute and [] access are different. To execute speak, write</p>  <pre><code>person['speak']() </code></pre>"			2011-07-27 21:29:20.127 UTC
6851443	javascript|python|methods	Javascript-style object methods in Python?	"<p>In Javascript, I can do this:</p>  <pre><code>var person = {   name: 'Joe',   age:  '35',   speak: function(){     return 'o hai i am joe'   } } </code></pre>  <p>Then I can call that method:</p>  <pre><code>person.speak() 'o hai i am joe' </code></pre>  <p>I know this can be done with classes in Python, and presumably that's the right way to go.</p>  <p>Nonetheless, I'm curious -- is there some way to add a function as a value in a Python dictionary? </p>"	2011-07-27 21:27:16.13 UTC	6851595	"<p>One of the key differences between javascript and python is the handling of the target object in the method's namespace.  In javascript, <code>this</code> is set as needed when the method is <em>called</em>, but in python, <code>self</code> is determined in a combination of class creation time (turning functions into instancemethods) and when the attribute is accessed (binding the im_self property on the instancemethod).  Even if you were to use attribute access only, overcoming this difference is a bit tricky when you want to bind instance methods to individual instances, instead of the class.</p>  <pre><code>import functools class JSObject(object):     def __getattribute__(self, attr):         """"""         if the attribute is on the instance, and the target of that is         callable, bind it to self, otherwise defer to the default getattr.         """"""         self_dict = object.__getattribute__(self, '__dict__')         if attr in self_dict and callable(self_dict[attr]):             return functools.partial(self_dict[attr], self)         else:             return object.__getattribute__(self, attr) </code></pre>  <p>Here it is in action:</p>  <pre><code>&gt;&gt;&gt; foo = JSObject() &gt;&gt;&gt; foo.bar = 'baz' &gt;&gt;&gt; foo.bar 'baz' &gt;&gt;&gt; foo.quux = lambda self: self.bar &gt;&gt;&gt; foo.quux &lt;functools.partial object at 0x7f8bae264ba8&gt; &gt;&gt;&gt; foo.quux() 'baz' </code></pre>  <p>Making the above class a bit more <code>dict</code>like is a separate issue, and in my opinion, not the best ""feature"" of JavaScript to emulate, but supposing we wanted that ""anyways"", we would probably start by subclassing <code>dict</code>, and once again overloading <code>__getattr__</code> or <code>__getattribute__</code>, which I will leave as an exercise.</p>"			2011-07-27 21:43:10.527 UTC
6851443	javascript|python|methods	Javascript-style object methods in Python?	"<p>In Javascript, I can do this:</p>  <pre><code>var person = {   name: 'Joe',   age:  '35',   speak: function(){     return 'o hai i am joe'   } } </code></pre>  <p>Then I can call that method:</p>  <pre><code>person.speak() 'o hai i am joe' </code></pre>  <p>I know this can be done with classes in Python, and presumably that's the right way to go.</p>  <p>Nonetheless, I'm curious -- is there some way to add a function as a value in a Python dictionary? </p>"	2011-07-27 21:27:16.13 UTC	6851482	"<p>You can, either by defining the functions ahead of time:</p>  <pre><code>def speak_function(txt):   print txt  person = {   'speak': speak_function } </code></pre>  <p>Or possibly by using lambdas (in the case of simple returns):</p>  <pre><code>person = {   'speak': lambda x: x } </code></pre>"			2011-07-27 21:30:55.23 UTC
6860446	python|button|click|spynner	"Click Javascript button python, spynner"	"<p>I want to click button without name using a spynner. The button looks like this:</p>  <pre><code>&lt;li&gt; &lt;a onclick=""save(); return false;"" href=""""&gt; &lt;img src=""/pathtoimage"" width=""31"" height=""13"" alt=""Save Changes""img  border=""0""&gt;&lt;/a&gt; &lt;/li&gt; &lt;/ul&gt; </code></pre>  <p>Have you any idea? Please write some code. Any help is much appreciated!</p>"	2011-07-28 14:16:46.873 UTC	8267950	"<p>You can call any javascript that is in the page by using(in your case):</p>  <p><code>br = spynner.Browser() br.runjs(""save();"")</code></p>  <p>You have access to all the javascript that is accessible to the page.</p>"			2011-11-25 10:47:14.223 UTC
6860446	python|button|click|spynner	"Click Javascript button python, spynner"	"<p>I want to click button without name using a spynner. The button looks like this:</p>  <pre><code>&lt;li&gt; &lt;a onclick=""save(); return false;"" href=""""&gt; &lt;img src=""/pathtoimage"" width=""31"" height=""13"" alt=""Save Changes""img  border=""0""&gt;&lt;/a&gt; &lt;/li&gt; &lt;/ul&gt; </code></pre>  <p>Have you any idea? Please write some code. Any help is much appreciated!</p>"	2011-07-28 14:16:46.873 UTC	15247417	"<p>you could (2 years ago...) refer to this ""button"" as an image with a unique attributes.</p>  <p>in your example i'd use  something like:</p>  <pre><code>browser.click('img[alt=""Save Changes""]') </code></pre>"			2013-03-06 12:30:00.083 UTC
6888332	javascript|python	The complexity of member looking up: Python Vs. Javascript	"<p>I am curious about the complexity of Python and JS 's looking up: </p>  <p>Python supports multi-inheritance, which affects the member lookup. Specifically, when referencing a member from an instance of a class, the process will start from the instance's dict, then to the class of the instance, then up to the super classes of the class of the instance, which for each super class, it has its own super class list..... which seems to end up with the complexity to be exponential (theoretically). </p>  <p>While it seems that the JS's member lookup time is linear -- which just has to trace back to the prototype chain.</p>  <p>Am I reasoning the right way? or I am missing something?</p>"	2011-07-31 08:22:55.043 UTC	6888348	"<p>You're missing the fact that MI is very, <em>very</em> rarely used in Python, usually only for mixins where the inheritance chain tends to be very short anyways.</p>"			2011-07-31 08:26:00.637 UTC
6914515	javascript|python|translation	How to translate this bit of Python to idiomatic Javascript	"<p>My code so far:</p>  <pre class=""lang-js prettyprint-override""><code>// The q constant of the Glicko system. var q = Math.log(10) / 400;  function Player(rating, rd) {     this.rating = rating || 1500;     this.rd = rd || 200; }  Player.prototype.preRatingRD = function(this, t, c) {     // Set default values of t and c     this.t = t || 1;     this.c = c || 63.2;     // Calculate the new rating deviation     this.rd = Math.sqrt(Math.pow(this.rd, 2) + (Math.pow(c, 2) * t));     // Ensure RD doesn't rise above that of an unrated player     this.rd = Math.min(this.rd, 350);     // Ensure RD doesn't drop too low so that rating can still change     // appreciably     this.rd = Math.max(this.rd, 30); }; Player.prototype.g = function(this, rd) {     return 1 / Math.sqrt(1 + 3 * Math.pow(q, 2) * Math.pow(rd, 2) / Math.pow(Math.PI, 2)); }; Player.prototype.e = function(this, p2rating, p2rd) {     return 1 / (1 + Math.pow(10, (-1 * this.g(p2rd) * (this.rating - p2rating) / 400))); }; </code></pre>  <p>I'm working on a JS/HTML implementation of the <a href=""http://www.glicko.net/glicko.html"" rel=""nofollow"">Glicko rating system</a> and am heavily borrowing from <a href=""http://code.google.com/p/pyglicko/"" rel=""nofollow"">pyglicko</a> -- which is to say, completely ripping it off.</p>  <p>It's rather short (probably less than 100 LoC without comments) but I'm having my misgivings about whether my translation will work because honestly, I have no idea how Javascript scoping and <code>this</code> actually work. You can see what I have at the link at the top.</p>  <p>But in specific I'm wondering how you would express this bit of Python code in Javascript. Basically <code>_d2</code> is inside a class definition for <code>Player</code>.</p>  <pre class=""lang-py prettyprint-override""><code>def _d2(self, rating_list, RD_list):     tempSum = 0     for i in range(len(rating_list)):         tempE = self._E(rating_list[i], RD_list[i])         tempSum += math.pow(self._g(RD_list[1]), 2) * tempE * (1 - tempE)     return 1 / (math.pow(self._q, 2) * tempSum) </code></pre>  <p>I've got the functions <code>e</code> and <code>g</code> defined like so, and <code>q</code> is a constant:</p>  <pre class=""lang-js prettyprint-override""><code>Player.prototype.e = function(this, ratingList, rdList) {     // Stuff goes here } </code></pre>"	2011-08-02 15:28:15.717 UTC	6914791	"<p>In Javascript you don't need o pass the self explicitly (Python is the ""weird"" one here, actually)</p>  <pre><code>Player.prototype.e = function(rating_list, RD_list){     //replace ""self"" with ""this"" here:     var tempSum = 0; //if you don't use the ""var"", tempSum will be a global                      // instead of a local     for(var i=0; i&lt;rating_list.length; i++){ //plain old for loop - no foreach in JS         var tempE = this._E( ... ); //note that in JS, just like in Python,                                     //variables like this have function scope and                                     //can be accessed outside the loop as well         tempSum += Math.pow( ... ) //the Math namespace is always available                                    //Javascript doesn't have a native module system     }     return (...); } </code></pre>  <p>This should work all right. The only tricky thing you need to know about <code>this</code> is that it is very promiscuous. This means that is is determined by how you call the function:</p>  <pre><code> obj.e(); //if you do a method-like call, the this will be set to obj </code></pre>  <p>However, there is no magic binding behind the scenes. The following works in python but does <em>not</em> work in Javascript:</p>  <pre><code> f = obj.e  f(); //looks like a normal function call. This doesn't point to obj </code></pre>"			2011-08-02 15:47:24.003 UTC
6923242	python	Login to Javascript with Python Phantomjs	"<p>Does any one have a basic example of using <a href=""http://www.phantomjs.org/"" rel=""nofollow"">PhantomJs</a> to login into a javascript on a website? I don't know exactly how to start with PhantomJs beacause I'm quite new in Python. Or is there another (easyer) way?</p>  <p>Thanks a lot!!!</p>"	2011-08-03 07:50:27.807 UTC	12078508	"<p>Try using CasperJS which is a wrapper around PhantomJS. You can do things such as click on a selector, submit a form, fill out a form, etc very easily.</p>"			2012-08-22 17:37:30.253 UTC
6946867	javascript|python	How to unpack Javascript in Python	"<p>I would like to retrieve the contents of a javascript script instead of executing it upon requesting it. </p>  <p>EDIT: I understand that Python is not executing the javascript code. The issue is that when I request this online JS script it gets executed. I'm unable to retrieve the contents of the script. Maybe what I want is to decode the script like so <a href=""http://jsunpack.jeek.org/dec/go"" rel=""nofollow"">http://jsunpack.jeek.org/dec/go</a></p>  <p>That's what my code looks like to request the js file:</p>  <pre><code>def request(self, uri):     data = None     req = urllib2.Request(uri, data, self.header)     response = urllib2.urlopen(req)     html_text = response.read()     return html_text.decode() </code></pre>  <p>I know approximately what the insides of the script look like but all I get after the request is issued is a 'loaded' message. My guess is that the JS code gets executed. Is there any way to just request the code? </p>"	2011-08-04 18:44:48.293 UTC	6947061	"<p>I'm not sure I understand. If I do a simplified version of your code and run it on a URI that's sure to have some javascript:</p>  <pre><code>&gt;&gt;&gt; import urllib2 &gt;&gt;&gt; res = urllib2.urlopen(""http://stackoverflow.com/questions/6946867/how-to-unpack-javascript-in-python"") </code></pre>  <p>And you print res (or res.decode()), the javascript is intact.</p>  <p>Doing urlopen should retrieve whatever character stream the source provides. It's up to you to do something with it (render it as html, interpret it as javascript, etc).</p>"			2011-08-04 18:59:08.883 UTC
6946867	javascript|python	How to unpack Javascript in Python	"<p>I would like to retrieve the contents of a javascript script instead of executing it upon requesting it. </p>  <p>EDIT: I understand that Python is not executing the javascript code. The issue is that when I request this online JS script it gets executed. I'm unable to retrieve the contents of the script. Maybe what I want is to decode the script like so <a href=""http://jsunpack.jeek.org/dec/go"" rel=""nofollow"">http://jsunpack.jeek.org/dec/go</a></p>  <p>That's what my code looks like to request the js file:</p>  <pre><code>def request(self, uri):     data = None     req = urllib2.Request(uri, data, self.header)     response = urllib2.urlopen(req)     html_text = response.read()     return html_text.decode() </code></pre>  <p>I know approximately what the insides of the script look like but all I get after the request is issued is a 'loaded' message. My guess is that the JS code gets executed. Is there any way to just request the code? </p>"	2011-08-04 18:44:48.293 UTC	6947042	"<p>There is no HTML or JavaScript interpreter in <code>urllib2</code>. This module does nothing but fetch the resource and return it to you raw; it certainly will not attempt to execute any JavaScript code it receives. If you are not receiving the response you expect, check the URL with a tool like <code>wget</code> or monitor the network connection with Wireshark or Fiddler to see what the server is actually returning.</p>  <p>(<code>decode()</code> here only converts the bytes of the HTTP response body to Unicode characters—using the default character encoding, which probably isn't a good idea.)</p>  <p>ETA:</p>  <blockquote>   <p>I guess what I want is to decode the Javascript like so jsunpack.jeek.org/dec/go</p> </blockquote>  <p>Ah, well that's a different game entirely. You can get the source for that <a href=""https://code.google.com/p/jsunpack-n/"" rel=""nofollow"">here</a>, though you'll also need to install SpiderMonkey, the JavaScript engine from Mozilla, to allow it to run the downloaded JavaScript.</p>  <p>There's no way to automatically ‘unpack’ obfuscated JavaScript without running it, since the packing code can do anything at all and JS is a Turing-complete language. All this tool does is run it with some wrapper code for functions like <code>eval</code> which packers/obfuscators typically use. Unfortunately, this sabotage is easily detectable, so if it's malware you're trying to unpack you'll find this fails as often as it succeeds.</p>"			2011-08-04 18:57:58.633 UTC
6974625	javascript|python|floating-point	Python vs Javascript floating point arithmetic giving very different answers. What am I doing wrong?	"<p><a href=""http://code.google.com/p/pyglicko/source/browse/glicko.py"" rel=""noreferrer"">Python version</a> | <a href=""https://github.com/austinyun/JS-Glicko/blob/master/glicko.js"" rel=""noreferrer"">Javascript version</a> | <a href=""http://www.glicko.net/glicko/glicko.pdf"" rel=""noreferrer"">Whitepaper</a></p>  <p>So, I'm working on a website to calculate Glicko ratings for two player games. It involves a lot of floating point arithmetic (square roots, exponents, division, all the nasty stuff) and I for some reason am getting a completely different answer from the Python implementation of the algorithm I translated line-for-line. The Python version is giving basically the expected answer for the example found in the original whitepaper describing the algorithm, but the Javascript version is quite a bit off.</p>  <p>Have I made an error in translation or is Javascript's floating point math just less accurate?</p>  <pre><code>Expected answer: [1464, 151.4] Python answer: [1462, 155.5] Javascript answer: [1470.8, 89.7] </code></pre>  <p>So the rating calculation isn't THAT bad, being 99.6% accurate, but the variance is off by 2/3!</p>  <p>Edit: People have pointed out that the default value of RD in the Pyglicko version is 200. This is a case of the original implementer leaving in test code I believe, as the test case is done on a person with an RD of 200, but clearly default is supposed to be 350. I did, however, specify 200 in my test case in Javascript, so that is not the issue here.</p>  <p>Edit: Changed the algorithm to use map/reduce. Rating is less accurate, variance is more accurate, both for no discernible reason. Wallbanging commence.</p>"	2011-08-07 17:56:14.82 UTC	6974662	<p>My guess is that involves the approximations you're using for some of the constants in the JavaScript version. Your <code>pi2</code> in particular seems a little.. brief. I believe Python is using doubles for those values.</p>			2011-08-07 18:01:49.307 UTC
6974625	javascript|python|floating-point	Python vs Javascript floating point arithmetic giving very different answers. What am I doing wrong?	"<p><a href=""http://code.google.com/p/pyglicko/source/browse/glicko.py"" rel=""noreferrer"">Python version</a> | <a href=""https://github.com/austinyun/JS-Glicko/blob/master/glicko.js"" rel=""noreferrer"">Javascript version</a> | <a href=""http://www.glicko.net/glicko/glicko.pdf"" rel=""noreferrer"">Whitepaper</a></p>  <p>So, I'm working on a website to calculate Glicko ratings for two player games. It involves a lot of floating point arithmetic (square roots, exponents, division, all the nasty stuff) and I for some reason am getting a completely different answer from the Python implementation of the algorithm I translated line-for-line. The Python version is giving basically the expected answer for the example found in the original whitepaper describing the algorithm, but the Javascript version is quite a bit off.</p>  <p>Have I made an error in translation or is Javascript's floating point math just less accurate?</p>  <pre><code>Expected answer: [1464, 151.4] Python answer: [1462, 155.5] Javascript answer: [1470.8, 89.7] </code></pre>  <p>So the rating calculation isn't THAT bad, being 99.6% accurate, but the variance is off by 2/3!</p>  <p>Edit: People have pointed out that the default value of RD in the Pyglicko version is 200. This is a case of the original implementer leaving in test code I believe, as the test case is done on a person with an RD of 200, but clearly default is supposed to be 350. I did, however, specify 200 in my test case in Javascript, so that is not the issue here.</p>  <p>Edit: Changed the algorithm to use map/reduce. Rating is less accurate, variance is more accurate, both for no discernible reason. Wallbanging commence.</p>"	2011-08-07 17:56:14.82 UTC	6974740	"<p>typically you get errors like this where you are subtracting two similar numbers - then the normally insignificant differences between values become amplified.  for example, if you have two values that are 1.2345 and 1.2346 in python, but 1.2344 and 1.2347 in javascript, then the differences are 1e-4 and 3 e-4 respectively (ie one is 3x the other).</p>  <p>so i would look at where you have subtractions in your code and check those values.  you may find that you can either (1) rewrite the maths to avoid the subtraction (often it turns out that you can find an expression that calculates the difference in some other way) or (2) focus on why the values at that particular point differ between the two languages (perhaps the difference in pi that the other answer identified is being amplified in this way).</p>  <p>it's also possible, although less likely here, that you have a difference because something is treated as an integer in python, but as a float in javascript.  in python there is a difference between integers and floats, and if you are not careful you can do things like divide two integers to get another integer (eg 3/2 = 1 in python).  while in javascript, all numbers are ""really"" floats, so this does not occur.</p>  <p>finally, it's possible there are small differences in how the calculations are performed.  but these are ""normal"" - to get such drastic differences you need something like what i described above to occur as well.</p>  <p>PS: also note what Daniel Baulig said about the initial value of the parameter rd in the comments above.</p>"			2011-08-07 18:15:09.623 UTC
7010745	javascript|python|events|tcp|tcpclient	Javascript-like TCP socket client written in python?	"<p>In the page <a href=""http://pypi.python.org/pypi/websocket-client/0.4"" rel=""nofollow"">http://pypi.python.org/pypi/websocket-client/0.4</a> the first snippet (the ""Low Level API example"") is very much like the client example in <a href=""http://docs.python.org/library/socket.html#example"" rel=""nofollow"">http://docs.python.org/library/socket.html#example</a>.</p>  <p>What I'm interested in is if is there any possibility of making a TCP client that is even driven, like the ""JavaScript websocket-like API example"" on that first webpage, that executes actions when for an example a message arrives. How can I achieve this ? I found <a href=""http://twistedmatrix.com/documents/current/core/examples/simpleclient.py"" rel=""nofollow"">this example</a> that uses twisted. Any other (better ?) ways to do it ?</p>"	2011-08-10 12:26:41.933 UTC	7015252	"<p>Take a look at <a href=""http://www.tornadoweb.org/"" rel=""nofollow"">Tornado</a> and specifically at <a href=""http://www.tornadoweb.org/documentation/iostream.html"" rel=""nofollow"">tornado.iostream — Convenient wrappers for non-blocking sockets</a>.</p>"			2011-08-10 17:38:20.627 UTC
7021517	javascript|metaprogramming	Is there an equivalent of python's __name__ for a Javascript object	<p>How do I find the string form of an object name in javascript?</p>	2011-08-11 06:07:28.807 UTC	7021562	"<p>If a function is defined using <code>function foo() {…}</code>, you can get its name using <code>foo.toString()</code>. For example:</p>  <pre><code>&gt; window.alert.toString() ""function alert() { [native code] }"" </code></pre>  <p>However, if the function is defined anonymously (ex, <code>var foo = function() {…}</code>), then there's no way to get the name <code>foo</code>.</p>  <p><strong>Edit</strong>: it turns out the name can be accessed through <code>.name</code> (see Peter Lyons's answer), so using <code>.toString()</code> would be silly (although I'll leave my answer here as it may be instructive).</p>"			2011-08-11 06:13:08.78 UTC
7021517	javascript|metaprogramming	Is there an equivalent of python's __name__ for a Javascript object	<p>How do I find the string form of an object name in javascript?</p>	2011-08-11 06:07:28.807 UTC	7021577	"<pre><code>function A() {}; var a = new A(); a.constructor.name // =&gt; ""A"" </code></pre>"			2011-08-11 06:15:56.543 UTC
7021517	javascript|metaprogramming	Is there an equivalent of python's __name__ for a Javascript object	<p>How do I find the string form of an object name in javascript?</p>	2011-08-11 06:07:28.807 UTC	7021565	"<pre><code>function bar(){}; console.log(bar.name); </code></pre>  <p>//Prints 'bar'</p>  <p>This works for functions only, not objects of any other type.</p>  <p>For a CoffeeScript class, you can do this</p>  <pre><code>class Foo f = new Foo console.log f.constructor.name #Prints 'Foo' </code></pre>"			2011-08-11 06:13:47.943 UTC
7041860	javascript|python|time	javascript/python time processing fails in chrome	"<p>I am writing a timer web app,which records start time and stop time.It uses <code>javascript,jquery1.4.2</code> for the front end and <code>python</code> for backend code.When a start button is clicked ,start time is saved in a javascript variable.when the button is clicked again, stop time is saved in another variable.These values are passed as hidden parameters to the python code which gets the start,stop values  from  <code>django</code>'s <code>request</code> parameter.</p>  <p>I expect the start/stop parameters values to be in the following format</p>  <pre><code>""07:16:03 PM"" </code></pre>  <p>so that it can be parsed using <code>'%I:%M:%S %p'</code>format string. I am getting this correctly in <code>mozilla firefox</code>.But when I use <code>chrome</code>,I only get</p>  <pre><code>""19:16:03"" </code></pre>  <p>This causes value error when I try to parse it with the above format string.</p>  <pre><code>import time ... def process_input(request,...):         start_time=request.POST[u'timerstarted']     ...     fmtstr='%I:%M:%S %p'     start_time_list = list(time.strptime(start_time,fmtstr)[3:6]) </code></pre>  <p>I tried putting <code>alert('start time set as'+start_time)</code> in javascript to find what values are set in the page's hiddenfields</p>  <p>With firefox ,I got</p>  <pre><code>start time set as08:03:09 PM stop time set as08:03:43 PM </code></pre>  <p>but with chrome</p>  <pre><code>start time set as20:04:21 stop time set as20:04:32 </code></pre>  <p>My knowledge of javascript,jquery is minimal.Why is the script behaving differently in these two browsers? Below is the javascript snippet</p>  <pre><code>$(document).ready(function(){     var changeBtnStatus=function(){     var timebtnvalue=$('#timebtn').attr(""value"");      if (timebtnvalue ==""start""){         ...               var start_date=new Date();         var str_time=start_date.toLocaleTimeString();                var timerstartedfield =$('#timerstarted');                       timerstartedfield.attr(""value"",str_time);                 alert('start time set as'+str_time);      }     else if (timebtnvalue==""stop""){         ...                     var stop_date=new Date();         var stp_time=stop_date.toLocaleTimeString();                 var timerstoppedfield =$('#timerstopped');         timerstoppedfield.attr(""value"",stp_time);                      alert('stop time set as'+stp_time);            } }; var timerBtnClicked=function(){        ...     changeBtnStatus(); };  $('#timebtn').click(timerBtnClicked);  ... } ); </code></pre>"	2011-08-12 14:49:42.717 UTC	7042045	"<p>Why format the time in JavaScript and parse in Python, and even submit yourself to the confusion of different locales?</p>  <p>Try using <a href=""http://www.w3schools.com/jsref/jsref_gettime.asp"" rel=""nofollow"">Date.getTime</a> insteam:</p>  <pre><code>start_time = (new Date).getTime(); stop_time = (new Date).getTime(); </code></pre>  <p>This gets you the time in milliseconds since the epoch, which should always be stable.</p>"			2011-08-12 15:02:21.443 UTC
7041860	javascript|python|time	javascript/python time processing fails in chrome	"<p>I am writing a timer web app,which records start time and stop time.It uses <code>javascript,jquery1.4.2</code> for the front end and <code>python</code> for backend code.When a start button is clicked ,start time is saved in a javascript variable.when the button is clicked again, stop time is saved in another variable.These values are passed as hidden parameters to the python code which gets the start,stop values  from  <code>django</code>'s <code>request</code> parameter.</p>  <p>I expect the start/stop parameters values to be in the following format</p>  <pre><code>""07:16:03 PM"" </code></pre>  <p>so that it can be parsed using <code>'%I:%M:%S %p'</code>format string. I am getting this correctly in <code>mozilla firefox</code>.But when I use <code>chrome</code>,I only get</p>  <pre><code>""19:16:03"" </code></pre>  <p>This causes value error when I try to parse it with the above format string.</p>  <pre><code>import time ... def process_input(request,...):         start_time=request.POST[u'timerstarted']     ...     fmtstr='%I:%M:%S %p'     start_time_list = list(time.strptime(start_time,fmtstr)[3:6]) </code></pre>  <p>I tried putting <code>alert('start time set as'+start_time)</code> in javascript to find what values are set in the page's hiddenfields</p>  <p>With firefox ,I got</p>  <pre><code>start time set as08:03:09 PM stop time set as08:03:43 PM </code></pre>  <p>but with chrome</p>  <pre><code>start time set as20:04:21 stop time set as20:04:32 </code></pre>  <p>My knowledge of javascript,jquery is minimal.Why is the script behaving differently in these two browsers? Below is the javascript snippet</p>  <pre><code>$(document).ready(function(){     var changeBtnStatus=function(){     var timebtnvalue=$('#timebtn').attr(""value"");      if (timebtnvalue ==""start""){         ...               var start_date=new Date();         var str_time=start_date.toLocaleTimeString();                var timerstartedfield =$('#timerstarted');                       timerstartedfield.attr(""value"",str_time);                 alert('start time set as'+str_time);      }     else if (timebtnvalue==""stop""){         ...                     var stop_date=new Date();         var stp_time=stop_date.toLocaleTimeString();                 var timerstoppedfield =$('#timerstopped');         timerstoppedfield.attr(""value"",stp_time);                      alert('stop time set as'+stp_time);            } }; var timerBtnClicked=function(){        ...     changeBtnStatus(); };  $('#timebtn').click(timerBtnClicked);  ... } ); </code></pre>"	2011-08-12 14:49:42.717 UTC	7041903	"<p>You don't want the string of the time in locale, using the toString method you can provide your own format, or use toUTCString().</p>  <p>toLocaleTimeString is especially meant to display the time as the user is used to, you want it in a set format.</p>  <p>So instead of start_date.toLocaleTimeString(), you want to use start_date.<a href=""https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Date/toUTCString"" rel=""nofollow"">toUTCString</a>().</p>"			2011-08-12 14:52:48.043 UTC
7053424	php|javascript|python|list|python-3.x	"Shortest way to do this Python 3 list operation in PHP, JavaScript?"	"<p>I am learning Python and I just read in a book that Python 3 lets you do this cool list operation:</p>  <pre><code>first, *middle, last = [1, 2, 3, 4, 5] </code></pre>  <p>first: <code>1</code> middle: <code>[2, 3, 4]</code> last: <code>5</code></p>  <p>This is great if I want to <strong>iterate through the middle of the list, and do separate things with the first and last items</strong>.</p>  <p>What's the easiest (read: most sugary) way to do this in Python 2.x, PHP, and JavaScript?</p>"	2011-08-13 21:34:14.077 UTC	7599838	"<h2>Python 2:</h2>  <pre><code>first, middle, last = a[0], a[1:-1], a[-1] </code></pre>  <h2>PHP:</h2>  <pre><code>$first = array_shift($arr); $last = array_pop($arr); $middle = $arr; </code></pre>  <h2>JavaScript:</h2>  <pre><code>var a = Array.apply(0,myAry), first = a.shift(), last = a.pop(), middle = a; </code></pre>  <p>For the JavaScript sample, I created a copy of the array so as not to destroy the original.</p>"			2011-09-29 15:39:06.59 UTC
7053424	php|javascript|python|list|python-3.x	"Shortest way to do this Python 3 list operation in PHP, JavaScript?"	"<p>I am learning Python and I just read in a book that Python 3 lets you do this cool list operation:</p>  <pre><code>first, *middle, last = [1, 2, 3, 4, 5] </code></pre>  <p>first: <code>1</code> middle: <code>[2, 3, 4]</code> last: <code>5</code></p>  <p>This is great if I want to <strong>iterate through the middle of the list, and do separate things with the first and last items</strong>.</p>  <p>What's the easiest (read: most sugary) way to do this in Python 2.x, PHP, and JavaScript?</p>"	2011-08-13 21:34:14.077 UTC	7053487	"<p>On Python2, you can just use slice notation, also it's easier to read I think.</p>  <pre><code>&gt;&gt;&gt; t = (1, 2, 3, 4, 5) &gt;&gt;&gt; a, b, c = t[0], t[1:-1], t[-1] &gt;&gt;&gt; a, b, c (1, (2, 3, 4), 5) </code></pre>"			2011-08-13 21:44:25.277 UTC
7053424	php|javascript|python|list|python-3.x	"Shortest way to do this Python 3 list operation in PHP, JavaScript?"	"<p>I am learning Python and I just read in a book that Python 3 lets you do this cool list operation:</p>  <pre><code>first, *middle, last = [1, 2, 3, 4, 5] </code></pre>  <p>first: <code>1</code> middle: <code>[2, 3, 4]</code> last: <code>5</code></p>  <p>This is great if I want to <strong>iterate through the middle of the list, and do separate things with the first and last items</strong>.</p>  <p>What's the easiest (read: most sugary) way to do this in Python 2.x, PHP, and JavaScript?</p>"	2011-08-13 21:34:14.077 UTC	7053500	"<p>In PHP:</p>  <pre><code>list($first, $middle, $last) = array($array[0], array_splice($array, 1, -1), $array[1]); </code></pre>  <p>It destroys the original array though, leaving only the first and last elements.</p>"			2011-08-13 21:48:06.427 UTC
7053424	php|javascript|python|list|python-3.x	"Shortest way to do this Python 3 list operation in PHP, JavaScript?"	"<p>I am learning Python and I just read in a book that Python 3 lets you do this cool list operation:</p>  <pre><code>first, *middle, last = [1, 2, 3, 4, 5] </code></pre>  <p>first: <code>1</code> middle: <code>[2, 3, 4]</code> last: <code>5</code></p>  <p>This is great if I want to <strong>iterate through the middle of the list, and do separate things with the first and last items</strong>.</p>  <p>What's the easiest (read: most sugary) way to do this in Python 2.x, PHP, and JavaScript?</p>"	2011-08-13 21:34:14.077 UTC	7053440	"<p>A solution in PHP could be the following, using <a href=""http://php.net/array_shift"" rel=""nofollow""><code>array_shift</code></a> and <a href=""http://php.net/array_pop"" rel=""nofollow""><code>array_pop</code></a>:</p>  <pre><code>$first = array_shift($arr); $last = array_pop($arr); $middle = $arr; </code></pre>"			2011-08-13 21:36:21.643 UTC
7053424	php|javascript|python|list|python-3.x	"Shortest way to do this Python 3 list operation in PHP, JavaScript?"	"<p>I am learning Python and I just read in a book that Python 3 lets you do this cool list operation:</p>  <pre><code>first, *middle, last = [1, 2, 3, 4, 5] </code></pre>  <p>first: <code>1</code> middle: <code>[2, 3, 4]</code> last: <code>5</code></p>  <p>This is great if I want to <strong>iterate through the middle of the list, and do separate things with the first and last items</strong>.</p>  <p>What's the easiest (read: most sugary) way to do this in Python 2.x, PHP, and JavaScript?</p>"	2011-08-13 21:34:14.077 UTC	7053482	"<p>python 2.x</p>  <pre><code>first, middle, last = a[0], a[1:-1], a[-1] </code></pre>"			2011-08-13 21:43:18.877 UTC
7065541	python|applescript|py-appscript|sourceforge-appscript	Translate AppleScript to Python appscript (`do javascript`)	"<p>This is the AppleScript template:</p>  <pre><code>tell application ""Adobe Photoshop CS5""   set theFile to alias “Application:Documents:MyFile” open theFile   do javascript (file &lt;path to Emboss.jsx&gt;) with arguments { 75,2,89 } end tell </code></pre>  <p>And I would like to translate that to Python appscript. Unfortunately, I cannot figure out how to translate the <code>do javascript</code>. Any ideas?</p>  <p>I don't even know how to find it out. Maybe I know AppleScript too less. Is <code>do</code> a keyword? Or is it a command I am sending to the application? Is <code>javascript</code> a parameter of <code>do</code>? Or does <code>do javascript</code> belong together (as a command with a space)?</p>"	2011-08-15 13:33:36.923 UTC	7066665	"<p>I still don't exactly know how to translate the above (and more generally: I don't know how to translate any generic AppleScript code to Python appscript).</p>  <p>However, for the above case, I found that there is the command <code>do_javascript</code>. It doesn't seem to execute files though but rather executes the given JS code string directly.</p>  <p>E.g., this works:</p>  <pre><code>from appscript import * import os, sys  ps = app(""Adobe Photoshop CS5"")  filelist = sys.argv[1:]  jsCode = """""" var g_StackScriptFolderPath = app.path + ""/Presets/Scripts/""  var runMergeToHDRFromScript = true;  $.evalFile(g_StackScriptFolderPath + ""Merge to HDR.jsx""); mergeToHDR.mergeFilesToHDR(%s, true); """""" % (repr(filelist),)  ps.do_javascript(jsCode) </code></pre>"			2011-08-15 15:12:07.197 UTC
7065541	python|applescript|py-appscript|sourceforge-appscript	Translate AppleScript to Python appscript (`do javascript`)	"<p>This is the AppleScript template:</p>  <pre><code>tell application ""Adobe Photoshop CS5""   set theFile to alias “Application:Documents:MyFile” open theFile   do javascript (file &lt;path to Emboss.jsx&gt;) with arguments { 75,2,89 } end tell </code></pre>  <p>And I would like to translate that to Python appscript. Unfortunately, I cannot figure out how to translate the <code>do javascript</code>. Any ideas?</p>  <p>I don't even know how to find it out. Maybe I know AppleScript too less. Is <code>do</code> a keyword? Or is it a command I am sending to the application? Is <code>javascript</code> a parameter of <code>do</code>? Or does <code>do javascript</code> belong together (as a command with a space)?</p>"	2011-08-15 13:33:36.923 UTC	7066856	"<p>To translate generic <code>AppleScript</code> to <code>appscript</code>, use the <code>ASTranslate</code> tool available from the  <code>appscript</code> web site <a href=""http://appscript.sourceforge.net/tools.html"" rel=""nofollow"">here</a>.  It is not always able to successfully translate due to the quirks and bugs in the script definitions of some applications but it is a good place to start.</p>"			2011-08-15 15:24:50.443 UTC
7077651	javascript|unpack	Python-like unpacking in JavaScript	"<p>I have the following string</p>  <pre><code>output_string = ""[10, 10, [1,2,3,4,5], [10,20,30,40,50]]"" </code></pre>  <p>Then I <code>JSON.parse</code> it</p>  <pre><code>my_args = JSON.parse(output_string) </code></pre>  <p>How do I unpack it in a Python-like way so that every element in <code>my_args</code> becomes an argument to a JavaScript function?</p>  <pre><code>some_javascript_function(*my_args) // should be equivalent to: some_javascript_function(my_args[0],my_args[1],my_args[2],my_args[3]) // or: some_javascript_function(10, 10, [1,2,3,4,5], [10,20,30,40,50]) </code></pre>  <p>Is there a core JavaScript idiom that does that?</p>"	2011-08-16 11:41:14.447 UTC	55886500	"<h1>Unpack using ""...""</h1>  <p>The same way you accept unlimited args, you can unpack them.</p>  <pre><code>let vals = [1, 2, 'a', 'b'];  console.log(vals);    // [1, 2, ""a"", ""b""] console.log(...vals); // 1 2 ""a"" ""b"" </code></pre>  <h2>Example: Accept unlimited arguments into a function</h2>  <p>It will become an array</p>  <pre><code>const someFunc = (...args) =&gt; {     console.log(args);    // [1, 2, ""a"", ""b""]     console.log(args[0]); // 1     console.log(...args); // 1 2 ""a"" ""b"" }  someFunc(1, 2, 'a', 'b'); </code></pre>  <h2>Example: Send array of arguments into a function</h2>  <pre><code>const someFunc = (num1, num2, letter1, letter2) =&gt; {     console.log(num1);    // 1     console.log(letter1); // ""a"" }  let vals = [1, 2, 'a', 'b']; someFunc(...vals); </code></pre>  <p>Send arguments </p>"			2019-04-28 02:23:32.467 UTC
7077651	javascript|unpack	Python-like unpacking in JavaScript	"<p>I have the following string</p>  <pre><code>output_string = ""[10, 10, [1,2,3,4,5], [10,20,30,40,50]]"" </code></pre>  <p>Then I <code>JSON.parse</code> it</p>  <pre><code>my_args = JSON.parse(output_string) </code></pre>  <p>How do I unpack it in a Python-like way so that every element in <code>my_args</code> becomes an argument to a JavaScript function?</p>  <pre><code>some_javascript_function(*my_args) // should be equivalent to: some_javascript_function(my_args[0],my_args[1],my_args[2],my_args[3]) // or: some_javascript_function(10, 10, [1,2,3,4,5], [10,20,30,40,50]) </code></pre>  <p>Is there a core JavaScript idiom that does that?</p>"	2011-08-16 11:41:14.447 UTC	7077758	"<p>Once you 've collected the function arguments in an array, you can use the <code>apply()</code> method of the function object to invoke your predefined function with it:</p>  <pre><code>   some_javascript_function.apply(this, my_args) </code></pre>  <p>The first parameter (<code>this</code>) sets the context of the invoked function.</p>"			2011-08-16 11:50:02.233 UTC
7077651	javascript|unpack	Python-like unpacking in JavaScript	"<p>I have the following string</p>  <pre><code>output_string = ""[10, 10, [1,2,3,4,5], [10,20,30,40,50]]"" </code></pre>  <p>Then I <code>JSON.parse</code> it</p>  <pre><code>my_args = JSON.parse(output_string) </code></pre>  <p>How do I unpack it in a Python-like way so that every element in <code>my_args</code> becomes an argument to a JavaScript function?</p>  <pre><code>some_javascript_function(*my_args) // should be equivalent to: some_javascript_function(my_args[0],my_args[1],my_args[2],my_args[3]) // or: some_javascript_function(10, 10, [1,2,3,4,5], [10,20,30,40,50]) </code></pre>  <p>Is there a core JavaScript idiom that does that?</p>"	2011-08-16 11:41:14.447 UTC	38618500	"<p>You can achieve that by doing this  <code>some_javascript_function(...my_args)</code></p>  <p>This is called <code>spread</code> operation (as <code>unpacking</code> is in python). view docs here <a href=""https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Operators/Spread_operator"">https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Operators/Spread_operator</a></p>"			2016-07-27 16:26:02.01 UTC
7140980	javascript|python|class	"Python-Like ""Classes"" in Javascript"	"<p>I was wondering how one would go about making ""classes"" similar to those in Python in Javascript. Take the Python classes and functions listed here:</p>  <pre><code>class one:     def foo(bar):         # some code </code></pre>  <p>The function ""foo"" would be called with <code>one.foo(bar)</code>.<br> What would the JS equivalent be? I suspect it would be something like this:</p>  <pre><code>var one = {     foo: function(bar) {         // JavaScript     } }; </code></pre>  <p>Thanks.</p>"	2011-08-21 20:33:53.21 UTC	7141125	"<p>Javascript doesn't really have classes. What it has is prototypes -- an instance of an object that is used as a template for new objects.</p>  <p>The way you've created your object is to use a literal constructor. It's succinct, but suffers  that it cannot be added to or use complicated statements in its construction.</p>  <p>Another way is like so:</p>  <pre><code>function SomeClass(value) {     if (value &lt; 0) {         this.field = -1;     } else {         this.field = value;     } } </code></pre>  <p>And a new instance is created like this:</p>  <pre><code>var obj = new SomeClass(15); </code></pre>  <p>This enables you to use conditional logic, for loops and other more complicated programming techniques in construction of your object. However, we can only add instance fields and not 'class' fields. You add class fields my modifying the <code>prototype</code> of your object creator function.</p>  <pre><code>MyClass.prototype.fieldSquared = function () {     return this.field * this.field; } </code></pre>  <p><a href=""http://www.phpied.com/3-ways-to-define-a-javascript-class/"" rel=""nofollow"">This</a> gives a more complete overview of object creation and prototypes in Javascript.</p>"			2011-08-21 20:55:45.313 UTC
7140980	javascript|python|class	"Python-Like ""Classes"" in Javascript"	"<p>I was wondering how one would go about making ""classes"" similar to those in Python in Javascript. Take the Python classes and functions listed here:</p>  <pre><code>class one:     def foo(bar):         # some code </code></pre>  <p>The function ""foo"" would be called with <code>one.foo(bar)</code>.<br> What would the JS equivalent be? I suspect it would be something like this:</p>  <pre><code>var one = {     foo: function(bar) {         // JavaScript     } }; </code></pre>  <p>Thanks.</p>"	2011-08-21 20:33:53.21 UTC	7141033	"<p><a href=""http://classy.pocoo.org/"" rel=""nofollow"">Classy</a> is a JavaScript library that tries to bring Python-like classes to JavaScript.</p>"			2011-08-21 20:42:26.143 UTC
7140980	javascript|python|class	"Python-Like ""Classes"" in Javascript"	"<p>I was wondering how one would go about making ""classes"" similar to those in Python in Javascript. Take the Python classes and functions listed here:</p>  <pre><code>class one:     def foo(bar):         # some code </code></pre>  <p>The function ""foo"" would be called with <code>one.foo(bar)</code>.<br> What would the JS equivalent be? I suspect it would be something like this:</p>  <pre><code>var one = {     foo: function(bar) {         // JavaScript     } }; </code></pre>  <p>Thanks.</p>"	2011-08-21 20:33:53.21 UTC	7141051	"<p>The native way to create classes in Javascript is to first define the constructor:</p>  <pre><code>function MyClass() { } </code></pre>  <p>and a prototype:</p>  <pre><code>MyClass.prototype = {     property: 1,     foo: function(bar) {     } }; </code></pre>  <p>Then you can create instance of MyClass:</p>  <pre><code>var object = new MyClass; object.foo(); </code></pre>  <p>Add static methods:</p>  <pre><code>MyClass.staticMethod = function() {};  MyClass.staticMethod(); </code></pre>  <p>Extend MyClass:</p>  <pre><code>function SubClass() { } SubClass.prototype = new MyClass; SubClass.prototype.bar = function() { };  var object = new SubClass; object.foo(); object.bar(); </code></pre>"			2011-08-21 20:46:01.23 UTC
7140980	javascript|python|class	"Python-Like ""Classes"" in Javascript"	"<p>I was wondering how one would go about making ""classes"" similar to those in Python in Javascript. Take the Python classes and functions listed here:</p>  <pre><code>class one:     def foo(bar):         # some code </code></pre>  <p>The function ""foo"" would be called with <code>one.foo(bar)</code>.<br> What would the JS equivalent be? I suspect it would be something like this:</p>  <pre><code>var one = {     foo: function(bar) {         // JavaScript     } }; </code></pre>  <p>Thanks.</p>"	2011-08-21 20:33:53.21 UTC	7141026	"<p>Have a look at <a href=""http://www.phpied.com/3-ways-to-define-a-javascript-class/"" rel=""noreferrer"">this link</a>. There a different ways to do OO programming in Javascript. The details are too much to be explained here.</p>  <p>If you are serious about Javascript programming, you should read <a href=""http://www.amazon.de/JavaScript-Parts-Working-Shallow-Grain/dp/0596517742/ref=sr_1_1?ie=UTF8&amp;qid=1313959138&amp;sr=8-1"" rel=""noreferrer"">this book</a>.</p>  <p>If you want to do real heavy OO programming, I would recommend to have a look at <a href=""http://jashkenas.github.com/coffee-script/"" rel=""noreferrer"">Coffee Script</a>.</p>"			2011-08-21 20:40:34.82 UTC
7154669	android|python|sl4a	send events from python to javascript using sl4a	"<p>I wanted to know the answer to a simple question but i have'nt found a good one  (i've google it for hours :) )</p>  <p>I'm playing with the sl4a with python and i can send events from js to the python script, but the js is not catching the eventPost i put in the code below from python to js.</p>  <p>Anyone knows how is this been done or if there is another way without the registerCallback?</p>  <p><strong>HTML CODE :</strong> </p>  <pre><code>&lt;html&gt; &lt;head&gt; &lt;script&gt; var droid = new Android(); function doit(){     droid.makeToast(""Text send :=&gt;""+document.getElementById(""msg"").value);     droid.eventPost(""doit"",document.getElementById(""msg"").value); }  function alert_me(data){     droid.makeToast(""All done!"");     document.getElementById(""msg"").value = ''; }  droid.registerCallback(""done"",alert_me); &lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;input type=""text"" name=""boton"" id=""msg"" value="""" /&gt; &lt;input type=""button"" name=""boton"" value=""Go!"" onclick=""javascript:doit()"" /&gt; &lt;/body&gt; &lt;/html&gt; </code></pre>  <p><strong>PYTHON CODE:</strong></p>  <pre><code>import android,time  if __name__ == '__main__' :      droid = android.Android()     droid.webViewShow(""file:///sdcard/sl4a/scripts/sample.html"")      while True:                 event = droid.eventWait().result         if event[""name""] == 'doit':           droid.makeToast(""Event catched! %s"" % event['data'])            droid.eventPost(""done"",""Done message"")           time.sleep(2)       droid.exit() </code></pre>"	2011-08-22 23:10:45.89 UTC	13120652	"<p>This is simple to get working, but isn't obvious or well documented.</p>  <p>First you want to get a hook to the <code>Android</code> object inside the webview. Then you can use it to register one or more callbacks. For a simple example, we'll just do one that pops an alert with a message from Python.</p>  <pre><code>    var droid = new Android();      droid.registerCallback(""echo"", function(msg) {         alert(msg.data)     }); </code></pre>  <p>In this case, <code>echo</code> is the name of the event type you want this callback to handle. So this will handle 'echo events'. The event names are arbitrary strings, just call them whatever makes sense.</p>  <p>In the Python script that launched the webview, you can now post events to the registered handler whenever you like.</p>  <pre><code>droid.eventPost(""echo"", ""hello world"") </code></pre>  <p>The second argument here is the message you want to pass to the JavaScript callback.</p>  <p>Note that although you pass the message back as a string, it arrives in the JavaScript function as an object. That object, we're calling it <code>msg</code> above, has an attribute called <code>data</code> which contains the string you passed from the Python side.</p>"			2012-10-29 11:22:48.337 UTC
7154669	android|python|sl4a	send events from python to javascript using sl4a	"<p>I wanted to know the answer to a simple question but i have'nt found a good one  (i've google it for hours :) )</p>  <p>I'm playing with the sl4a with python and i can send events from js to the python script, but the js is not catching the eventPost i put in the code below from python to js.</p>  <p>Anyone knows how is this been done or if there is another way without the registerCallback?</p>  <p><strong>HTML CODE :</strong> </p>  <pre><code>&lt;html&gt; &lt;head&gt; &lt;script&gt; var droid = new Android(); function doit(){     droid.makeToast(""Text send :=&gt;""+document.getElementById(""msg"").value);     droid.eventPost(""doit"",document.getElementById(""msg"").value); }  function alert_me(data){     droid.makeToast(""All done!"");     document.getElementById(""msg"").value = ''; }  droid.registerCallback(""done"",alert_me); &lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;input type=""text"" name=""boton"" id=""msg"" value="""" /&gt; &lt;input type=""button"" name=""boton"" value=""Go!"" onclick=""javascript:doit()"" /&gt; &lt;/body&gt; &lt;/html&gt; </code></pre>  <p><strong>PYTHON CODE:</strong></p>  <pre><code>import android,time  if __name__ == '__main__' :      droid = android.Android()     droid.webViewShow(""file:///sdcard/sl4a/scripts/sample.html"")      while True:                 event = droid.eventWait().result         if event[""name""] == 'doit':           droid.makeToast(""Event catched! %s"" % event['data'])            droid.eventPost(""done"",""Done message"")           time.sleep(2)       droid.exit() </code></pre>"	2011-08-22 23:10:45.89 UTC	8618934	"<p>Unfortunately I have never personally been able to get this working, using both <code>registerCallback()</code> and <code>eventWaitFor()</code>. However, if you are still keen on getting this working, I strongly recommend you head on over and download <a href=""http://code.google.com/p/android-scripting/wiki/Unofficial"" rel=""nofollow"">sl4a_r5x</a> – an unofficial but newer and updated release of SL4A. In it is support for using <a href=""http://code.google.com/p/android-scripting/wiki/FullScreenUI"" rel=""nofollow"">FullScreenUi</a>'s based off the same xml code that native Android apps use. With this you can do what you're after and examples can be found on the page.<br>Hopefully this has been helpful and you're still interested in SL4A!</p>"			2011-12-23 17:28:55.733 UTC
7158635	javascript|python|html|javascript-engine	How can my HTML file pass JavaScript results back to a Python script that calls it?	"<p>I have a python script and this python script shall call an html-file (i.e. a web page) stored locally on the computer. The html-file does some calculations (jquery,javascript and so on) and should pass the result back to the python script. I don't want to change the setting (python script calls html-file and result is passed back to python-script) so please don't ask why.</p>  <p>Could anyone tell me how to solve this? How can I pass the result from html-file to the calling python function? That troubles me since 2 weeks. Thanks!</p>"	2011-08-23 09:10:09.23 UTC	7158707	"<p>This would be very hard to accomplish without the use of external libraries. You'd need a HTML parser to start with, so you can actually make sense of the HTML. Then you'd need a Javascript parser/lexer/engine so you could do the actual calculations. I guess it would be possible to implement this in Python, but I'd recommend looking for an open source project which already implemented this. You'd then have to parse/lex/interpret the javascript and pass back the result to python. </p>  <p>All in all I'd say it's easier to just port the Javascript calculation to Python, but that's just me.</p>"			2011-08-23 09:15:58.893 UTC
7158635	javascript|python|html|javascript-engine	How can my HTML file pass JavaScript results back to a Python script that calls it?	"<p>I have a python script and this python script shall call an html-file (i.e. a web page) stored locally on the computer. The html-file does some calculations (jquery,javascript and so on) and should pass the result back to the python script. I don't want to change the setting (python script calls html-file and result is passed back to python-script) so please don't ask why.</p>  <p>Could anyone tell me how to solve this? How can I pass the result from html-file to the calling python function? That troubles me since 2 weeks. Thanks!</p>"	2011-08-23 09:10:09.23 UTC	7159146	"<p>You haven’t specified exactly what you mean when you say your Python script “calls” the HTML file, but presuming you mean that Python gets the contents of the HTML file, you’re going to need Python to interpret and run the JavaScript therein to start with.</p>  <p>I wrote a Python script that logs onto my internet banking provider (which uses JavaScript heavily), and I ended up <a href=""https://stackoverflow.com/questions/2127181/any-python-alternatives-to-selenium-for-programmatically-logging-into-websites-th"">having to use Selenium</a> to control an actual web browser to parse the JavaScript for me, and then query the DOM of the rendered web page via Selenium. It was decidedly non-trivial.</p>  <p>The answers to my question mention a couple of HTML parsers for Python. I’d agree with <a href=""https://stackoverflow.com/questions/7158635/python-and-html/7158991#7158991"">James’ answer</a> though — get the JavaScript from the HTML file and run it with node.js.</p>"			2011-08-23 09:50:23.767 UTC
7158635	javascript|python|html|javascript-engine	How can my HTML file pass JavaScript results back to a Python script that calls it?	"<p>I have a python script and this python script shall call an html-file (i.e. a web page) stored locally on the computer. The html-file does some calculations (jquery,javascript and so on) and should pass the result back to the python script. I don't want to change the setting (python script calls html-file and result is passed back to python-script) so please don't ask why.</p>  <p>Could anyone tell me how to solve this? How can I pass the result from html-file to the calling python function? That troubles me since 2 weeks. Thanks!</p>"	2011-08-23 09:10:09.23 UTC	7158991	"<p><a href=""http://nodejs.org/"" rel=""nofollow"">http://nodejs.org/</a> <BR> Remove anything to do with the dom and run it from command with node then call the Python script from node with the out put from the JS and then just pipe the out put some where.</p>"			2011-08-23 09:39:10.33 UTC
7158635	javascript|python|html|javascript-engine	How can my HTML file pass JavaScript results back to a Python script that calls it?	"<p>I have a python script and this python script shall call an html-file (i.e. a web page) stored locally on the computer. The html-file does some calculations (jquery,javascript and so on) and should pass the result back to the python script. I don't want to change the setting (python script calls html-file and result is passed back to python-script) so please don't ask why.</p>  <p>Could anyone tell me how to solve this? How can I pass the result from html-file to the calling python function? That troubles me since 2 weeks. Thanks!</p>"	2011-08-23 09:10:09.23 UTC	7158738	"<p>If you want to execute the javascript in the HTML file, you will need to implement a full javascript runtime in Python (there might be existing ones or ports from other languages of course.) An HTML file is not an executable, and most environments don't have an interpreter for it either, except browsers.</p>  <p>If you can separate the javascript from the HTML somehow (that is, if it doesn't depend on the DOM in any way) you might be able to use something like the <a href=""http://en.wikipedia.org/wiki/SpiderMonkey_%28JavaScript_engine%29"" rel=""nofollow"">SpiderMonkey</a> shell to execute your javascript and read it's standard output in Python.</p>  <p>If not, you will need a full browser to interpret the HTML and javascript, and you will then need to read it's (visual) output somehow, which might be incredibly complex.</p>"			2011-08-23 09:17:46.39 UTC
7216976	password-encryption|pbkdf2	PBKDF2 not matching between Python and Javascript libraries	"<p>Using password ""password"", salt ""1234567812345678"" 100 repetitions, 128-bit result</p>  <p><a href=""http://bitwiseshiftleft.github.com/sjcl/demo/"" rel=""nofollow"">http://bitwiseshiftleft.github.com/sjcl/demo/</a> is a javascript implementation, gives result A374FF6A12280F020162A62A9B3212AA</p>  <p><a href=""http://matt.ucc.asn.au/src/pbkdf2.py"" rel=""nofollow"">http://matt.ucc.asn.au/src/pbkdf2.py</a> is a python implementation gives result 89FBE50AF230BD273076AA9BC9F1142A</p>  <p>Why are they different, if PBKDF2 is a standard that they both implement?</p>"	2011-08-27 19:52:34.72 UTC	7301630	"<p>It appears SJCL uses SHA-256, whereas the Python implementation defaults to SHA-1.</p>  <p>These are different hashes which can be used inside PBKDF#2, and as such will lead to different results.</p>  <p>PBKDF#2 is an algorithm, but does not specify the exact makeup of its internals.</p>"			2011-09-04 19:31:03.917 UTC
7219541	javascript|python|syntax	What is the difference between semicolons in JavaScript and in Python?	"<p>Python and JavaScript both allow developers to use or to omit semicolons. However, I've often seen it suggested (in books and blogs) that I should not use semicolons in Python, while I should always use them in JavaScript.</p>  <p>Is there a technical difference between how the languages use semicolons or is this just a cultural difference?</p>"	2011-08-28 07:12:05.68 UTC	70789637	"<p>Both are <a href=""https://en.wikipedia.org/wiki/Type_system"" rel=""nofollow noreferrer"">dynamic typing</a> to increase the readability.</p> <p><a href=""https://en.wikipedia.org/wiki/Python_(programming_language)#Development"" rel=""nofollow noreferrer"">Python Enhancement Proposal</a> 8, or PEP 8, is a style guide for Python code. In 2001, Guido van Rossum, Barry Warsaw, and Nick Coghlan created PEP 8 to help Python programmers write consistent and readable code. <a href=""https://www.python.org/dev/peps/pep-0008/"" rel=""nofollow noreferrer"">Reference</a>.</p> <p>So in JavaScript we have the <a href=""https://en.wikipedia.org/wiki/ECMAScript"" rel=""nofollow noreferrer"">ECMAScript</a> specification that describes how, if a statement is not explicitly terminated with a semicolon, sometimes a semicolon will be automatically inserted by the JavaScript engine (called “automatic semicolon insertion” (ASI)). <a href=""https://codeburst.io/ecmascript-automatic-semicolon-insertion-50f09091e377"" rel=""nofollow noreferrer"">Reference</a>.</p> <p>See <a href=""https://www.freecodecamp.org/news/google-publishes-a-javascript-style-guide-here-are-some-key-lessons-1810b8ad050b/"" rel=""nofollow noreferrer"">this article</a> from Google talking about JavaScript too.</p>"			2022-01-20 16:12:29.367 UTC
7219541	javascript|python|syntax	What is the difference between semicolons in JavaScript and in Python?	"<p>Python and JavaScript both allow developers to use or to omit semicolons. However, I've often seen it suggested (in books and blogs) that I should not use semicolons in Python, while I should always use them in JavaScript.</p>  <p>Is there a technical difference between how the languages use semicolons or is this just a cultural difference?</p>"	2011-08-28 07:12:05.68 UTC	7223024	"<p>It is mostly that Python looks nothing like Java, and JavaScript does, which leads people to treat it that way. It is very simple to not get into trouble using semicolons with JavaScript (<em><a href=""https://mislav.net/2010/05/semicolons/"" rel=""nofollow noreferrer"">Semicolons in JavaScript are optional</a></em>), and anything else is <a href=""https://en.wikipedia.org/wiki/Fear%2C_uncertainty%2C_and_doubt#Software_producers"" rel=""nofollow noreferrer"">FUD</a>.</p>"			2011-08-28 18:32:07.697 UTC
7219541	javascript|python|syntax	What is the difference between semicolons in JavaScript and in Python?	"<p>Python and JavaScript both allow developers to use or to omit semicolons. However, I've often seen it suggested (in books and blogs) that I should not use semicolons in Python, while I should always use them in JavaScript.</p>  <p>Is there a technical difference between how the languages use semicolons or is this just a cultural difference?</p>"	2011-08-28 07:12:05.68 UTC	7219731	"<p>The answer why you don't see them in Python code is: no one needs them, and the code looks cleaner without them.</p> <p>Generally speaking, semicolons is just a tradition. Many new languages have just dropped them for good (take Python, <a href=""https://en.wikipedia.org/wiki/Ruby_%28programming_language%29"" rel=""nofollow noreferrer"">Ruby</a>, <a href=""https://en.wikipedia.org/wiki/Scala_%28programming_language%29"" rel=""nofollow noreferrer"">Scala</a>, <a href=""https://en.wikipedia.org/wiki/Go_%28programming_language%29"" rel=""nofollow noreferrer"">Go</a>, <a href=""https://en.wikipedia.org/wiki/Apache_Groovy"" rel=""nofollow noreferrer"">Groovy</a>, and <a href=""https://en.wikipedia.org/wiki/Io_(programming_language)"" rel=""nofollow noreferrer"">Io</a> for example). Programmers don't need them, and neither do compilers. If a language lets you not type an extra character you never needed, you will want to take advantage of that, won't you?</p> <p>It's just that JavaScript's attempt to drop them wasn't very successful, and many prefer the convention to always use them, because that makes code less ambiguous.</p>"			2011-08-28 08:01:59.46 UTC
7219541	javascript|python|syntax	What is the difference between semicolons in JavaScript and in Python?	"<p>Python and JavaScript both allow developers to use or to omit semicolons. However, I've often seen it suggested (in books and blogs) that I should not use semicolons in Python, while I should always use them in JavaScript.</p>  <p>Is there a technical difference between how the languages use semicolons or is this just a cultural difference?</p>"	2011-08-28 07:12:05.68 UTC	7219710	"<p>Aside from the syntactical issues, it is partly cultural.  In Python culture any extraneous characters are an anathema, and those that are not white-space or alphanumeric, doubly so.</p>  <p>So things like leading $ signs, semi-colons, and curly braces, are not liked.  What you do in your code though, is up to you, but to really understand a language it is not enough just to learn the syntax. </p>"			2011-08-28 07:55:15.68 UTC
7219541	javascript|python|syntax	What is the difference between semicolons in JavaScript and in Python?	"<p>Python and JavaScript both allow developers to use or to omit semicolons. However, I've often seen it suggested (in books and blogs) that I should not use semicolons in Python, while I should always use them in JavaScript.</p>  <p>Is there a technical difference between how the languages use semicolons or is this just a cultural difference?</p>"	2011-08-28 07:12:05.68 UTC	7219723	"<p>JavaScript is designed to ""look like C"", so semicolons are part of the culture. Python syntax is different enough to not make programmers feel uncomfortable if the semicolons are ""missing"".</p>"			2011-08-28 07:59:30.663 UTC
7219541	javascript|python|syntax	What is the difference between semicolons in JavaScript and in Python?	"<p>Python and JavaScript both allow developers to use or to omit semicolons. However, I've often seen it suggested (in books and blogs) that I should not use semicolons in Python, while I should always use them in JavaScript.</p>  <p>Is there a technical difference between how the languages use semicolons or is this just a cultural difference?</p>"	2011-08-28 07:12:05.68 UTC	7219779	"<p>This had me confused for the longest time. I thought it was just a cultural difference, and that everyone complaining about semicolon insertion being the worst feature in the language was an <em>idiot</em>. The oft-repeated example from <a href=""https://stackoverflow.com/q/7219549/1114"">NullUserException's answer</a> didn't sway me because, disregarding indentation, Python behaves the same as JavaScript in that case.</p>  <p>Then one day, I wrote something vaguely like this:</p>  <pre><code>alert(2) (x = $(""#foo"")).detach() </code></pre>  <p>I expected it to be interpreted like this:</p>  <pre><code>alert(2); (x = $(""#foo"")).detach(); </code></pre>  <p>It was actually interpreted like this:</p>  <pre><code>alert(2)(x = $(""#foo"")).detach(); </code></pre>  <p>I now use semicolons.</p>  <p>JavaScript will only<sup>1</sup> treat a newline as a semicolon in these cases:</p>  <ul> <li>It's a syntax error not to.</li> <li>The newline is between the <code>throw</code> or <code>return</code> keyword and an expression.</li> <li>The newline is between the <code>continue</code> or <code>break</code> keyword and an identifier.</li> <li>The newline is between a variable and a postfix <code>++</code> or <code>--</code> operator.</li> </ul>  <p>This leaves cases like this where the behaviour is not what you'd expect. Some people<sup>2</sup> have adopted conventions that only use semicolons where necessary. I prefer to follow the standard convention of always using them, now that I know it's not pointless.</p>  <hr>  <p><sup>1</sup> I've omitted a few minor details, consult <a href=""http://ecma262-5.com/ELS5_Section_7.htm#Section_7.9"" rel=""nofollow noreferrer"">ECMA-262 5e Section 7.9</a> for the exact description.<br> <sup>2</sup> <a href=""https://github.com/twitter/bootstrap/blob/master/js/bootstrap-dropdown.js"" rel=""nofollow noreferrer"">Twitter Bootstrap</a> is one high-profile example.</p>"			2011-08-28 08:15:27.753 UTC
7219541	javascript|python|syntax	What is the difference between semicolons in JavaScript and in Python?	"<p>Python and JavaScript both allow developers to use or to omit semicolons. However, I've often seen it suggested (in books and blogs) that I should not use semicolons in Python, while I should always use them in JavaScript.</p>  <p>Is there a technical difference between how the languages use semicolons or is this just a cultural difference?</p>"	2011-08-28 07:12:05.68 UTC	7219549	"<p>Semicolons in Python are totally optional (unless you want to have multiple statements in a single line, of course). I personally think Python code with semicolons at the end of every statement looks very ugly.</p>  <p>Now in Javascript, if you don't write a semicolon, one is automatically inserted<sup>1</sup> at the end of line. And this can cause problems. Consider:</p>  <pre><code>function add(a, b) {   return     a + b } </code></pre>  <p>You'd think this returns <code>a + b</code>, but Javascript just outsmarted you and sees this as:</p>  <pre><code>function add() {   return;     a + b; } </code></pre>  <p>Returning <code>undefined</code> instead.</p>  <p><sup>1</sup> See page 27, item 7.9 - Automatic Semicolon Insertion on <a href=""http://www.ecma-international.org/publications/files/ECMA-ST/Ecma-262.pdf"" rel=""noreferrer"">ECMAScript Language Specification</a> for more details and caveats.</p>"			2011-08-28 07:13:51.25 UTC
7252756	javascript|dom|xpath|selenium	How to trigger a javascript event with this button definition from Python Selenium script	"<pre><code>&lt;div id=""feesnav""&gt; &lt;div style=""float: right;""&gt; &lt;button id=""b2"" class=""adjustuserfees_button active"" onclick=""cusers(this)""/&gt; &lt;/ </code></pre>  <p>Say I want to click on button b2 using python selenium. Tried all sorts of xpath definition and it retunrs can't find the locator error</p>  <p>The following code does not work:</p>  <pre><code>  self.sel.fire_event(""//div[@id='feesnav']//button[@id='b2']"", 'click')   or  self.sel.mouse_down(""//div[@id='feesnav']//button[@id='b2']"") </code></pre>  <p>Any suggestions?</p>"	2011-08-31 05:05:00.28 UTC	7263659	"<p>Isn't there a click() method or you are saying it is not working for you? If you are going the javascript route you could try something like below</p>  <pre><code>String myScript=""var element= document.getElementById('b2');""; if(browser is not IE) //add some logic here   myScript=myScript+""var evObj = document.createEvent('MouseEvents');evObj.initEvent('click',true,true);element.dispatchEvent(evObj);""; else   myScript=myScript+""element.fireEvent('onclick');  selenium.getEval(myScript); </code></pre>  <p><strong>I still don't think you would need to go JS route.</strong> Selenium should be able to do the click for you. Are you sure there are no hidden duplicate elements? Also there is no sync issue with your code, like you are trying to click on the button before even the page is loaded etc?</p>"			2011-08-31 21:28:11.56 UTC
7252756	javascript|dom|xpath|selenium	How to trigger a javascript event with this button definition from Python Selenium script	"<pre><code>&lt;div id=""feesnav""&gt; &lt;div style=""float: right;""&gt; &lt;button id=""b2"" class=""adjustuserfees_button active"" onclick=""cusers(this)""/&gt; &lt;/ </code></pre>  <p>Say I want to click on button b2 using python selenium. Tried all sorts of xpath definition and it retunrs can't find the locator error</p>  <p>The following code does not work:</p>  <pre><code>  self.sel.fire_event(""//div[@id='feesnav']//button[@id='b2']"", 'click')   or  self.sel.mouse_down(""//div[@id='feesnav']//button[@id='b2']"") </code></pre>  <p>Any suggestions?</p>"	2011-08-31 05:05:00.28 UTC	7252772	"<p>That is very simple I think the example detailed <a href=""http://www.w3schools.com/js/js_events.asp"" rel=""nofollow"">here</a>, is what your looking for.</p>  <p>Here is summary of what is detailed there. </p>  <pre><code>&lt;html&gt; &lt;head&gt; &lt;script type=""text/javascript""&gt; function displayDate() { document.getElementById(""demo"").innerHTML=Date(); } &lt;/script&gt; &lt;/head&gt;  &lt;body&gt;  &lt;h1&gt;My First Web Page&lt;/h1&gt;  &lt;p id=""demo""&gt;&lt;/p&gt;  &lt;button type=""button"" onclick=""displayDate()""&gt;Display Date&lt;/button&gt;  &lt;/body&gt; &lt;/html&gt; </code></pre>  <p>Goodluck.</p>"			2011-08-31 05:08:20.407 UTC
7327182	javascript|python|html|mechanize	How do you disable javascript in python's mechanize?	"<p>I don't know why, but I cant find it anywhere. All i need is the command to disable javascript in python's mechanize.</p>"	2011-09-06 23:07:03.917 UTC	9391655	<p>Mechanize doesn't deal with Javascript. It only take care of HTML. So you can't stop Javascript running using Mechanize. You need to find some other solution.</p>			2012-02-22 08:51:56.073 UTC
7370943	javascript|python|encoding|xmlhttprequest|base64	"Retrieving binary file content using Javascript, base64 encode it and reverse-decode it using Python"	"<p>I'm trying to download a binary file using <code>XMLHttpRequest</code> (using a recent Webkit) and base64-encode its contents using this simple function:</p>  <pre><code>function getBinary(file){     var xhr = new XMLHttpRequest();       xhr.open(""GET"", file, false);       xhr.overrideMimeType(""text/plain; charset=x-user-defined"");       xhr.send(null);     return xhr.responseText; }  function base64encode(binary) {     return btoa(unescape(encodeURIComponent(binary))); }  var binary = getBinary('http://some.tld/sample.pdf'); var base64encoded = base64encode(binary); </code></pre>  <p>As a side note, everything above is standard Javascript stuff, including <code>btoa()</code> and <code>encodeURIComponent()</code>: <a href=""https://developer.mozilla.org/en/DOM/window.btoa"">https://developer.mozilla.org/en/DOM/window.btoa</a></p>  <p>This works pretty smoothly, and I can even decode the base64 contents using Javascript:</p>  <pre><code>function base64decode(base64) {     return decodeURIComponent(escape(atob(base64))); }  var decodedBinary = base64decode(base64encoded); decodedBinary === binary // true </code></pre>  <p>Now, I want to decode the base64-encoded contents using Python which consume some JSON string to get the <code>base64encoded</code> string value. Naively this is what I do:</p>  <pre><code>import urllib import base64 # ... retrieving of base64 encoded string through JSON base64 = ""77+9UE5HDQ……………oaCgA="" source_contents = urllib.unquote(base64.b64decode(base64)) destination_file = open(destination, 'wb') destination_file.write(source_contents) destination_file.close() </code></pre>  <p>But the resulting file is invalid, looks like the operation's messaed up with UTF-8, encoding or something which is still unclear to me.</p>  <p>If I try to decode UTF-8 contents before putting them in the destination file, an error is raised:</p>  <pre><code>import urllib import base64 # ... retrieving of base64 encoded string through JSON base64 = ""77+9UE5HDQ……………oaCgA="" source_contents = urllib.unquote(base64.b64decode(base64)).decode('utf-8') destination_file = open(destination, 'wb') destination_file.write(source_contents) destination_file.close()  $ python test.py // ... UnicodeEncodeError: 'ascii' codec can't encode character u'\ufffd' in position 0: ordinal not in range(128) </code></pre>  <p>As a side note, here's a screenshot of two textual representations of a same file; on left: the original; on right: the one created from the base64-decoded string: <a href=""http://cl.ly/0U3G34110z3c132O2e2x"">http://cl.ly/0U3G34110z3c132O2e2x</a></p>  <p>Is there a known trick to circumvent these problems with encoding when attempting to recreating the file? How would you achieve this yourself?</p>  <p>Any help or hint much appreciated :)</p>"	2011-09-10 09:55:11.737 UTC	7372816	"<p>So I'm answering to myself — and sorry for that — but I think it might be useful for someone as lost as I was ;)</p>  <p>So you have to use <a href=""https://developer.mozilla.org/en/JavaScript_typed_arrays/ArrayBuffer"" rel=""noreferrer"">ArrayBuffer</a> and set the <code>responseType</code> property of your <code>XMLHttpRequest</code> object instance to <code>arraybuffer</code> for retrieving a native array of Bytes, which can be converted to base64 using the following convenient function (found <a href=""https://gist.github.com/958841"" rel=""noreferrer"">there</a>, author may be blessed here):</p>  <pre><code>function base64ArrayBuffer(arrayBuffer) {   var base64    = ''   var encodings = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'    var bytes         = new Uint8Array(arrayBuffer)   var byteLength    = bytes.byteLength   var byteRemainder = byteLength % 3   var mainLength    = byteLength - byteRemainder    var a, b, c, d   var chunk    // Main loop deals with bytes in chunks of 3   for (var i = 0; i &lt; mainLength; i = i + 3) {     // Combine the three bytes into a single integer     chunk = (bytes[i] &lt;&lt; 16) | (bytes[i + 1] &lt;&lt; 8) | bytes[i + 2]      // Use bitmasks to extract 6-bit segments from the triplet     a = (chunk &amp; 16515072) &gt;&gt; 18 // 16515072 = (2^6 - 1) &lt;&lt; 18     b = (chunk &amp; 258048)   &gt;&gt; 12 // 258048   = (2^6 - 1) &lt;&lt; 12     c = (chunk &amp; 4032)     &gt;&gt;  6 // 4032     = (2^6 - 1) &lt;&lt; 6     d = chunk &amp; 63               // 63       = 2^6 - 1      // Convert the raw binary segments to the appropriate ASCII encoding     base64 += encodings[a] + encodings[b] + encodings[c] + encodings[d]   }    // Deal with the remaining bytes and padding   if (byteRemainder == 1) {     chunk = bytes[mainLength]      a = (chunk &amp; 252) &gt;&gt; 2 // 252 = (2^6 - 1) &lt;&lt; 2      // Set the 4 least significant bits to zero     b = (chunk &amp; 3)   &lt;&lt; 4 // 3   = 2^2 - 1      base64 += encodings[a] + encodings[b] + '=='   } else if (byteRemainder == 2) {     chunk = (bytes[mainLength] &lt;&lt; 8) | bytes[mainLength + 1]      a = (chunk &amp; 64512) &gt;&gt; 10 // 64512 = (2^6 - 1) &lt;&lt; 10     b = (chunk &amp; 1008)  &gt;&gt;  4 // 1008  = (2^6 - 1) &lt;&lt; 4      // Set the 2 least significant bits to zero     c = (chunk &amp; 15)    &lt;&lt;  2 // 15    = 2^4 - 1      base64 += encodings[a] + encodings[b] + encodings[c] + '='   }    return base64 } </code></pre>  <p>So here's a working code:</p>  <pre><code>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://some.tld/favicon.png', false); xhr.responseType = 'arraybuffer'; xhr.onload = function(e) {     console.log(base64ArrayBuffer(e.currentTarget.response)); }; xhr.send(); </code></pre>  <p>This will log a <em>valid</em> base64 encoded string representing the binary file contents.</p>  <p><em>Edit:</em> For older browsers not having access to <code>ArrayBuffer</code> and having <code>btoa()</code> failing on encoding characters, here's another way to get a base64 encoded version of any binary:</p>  <pre><code>function getBinary(file){     var xhr = new XMLHttpRequest();     xhr.open(""GET"", file, false);     xhr.overrideMimeType(""text/plain; charset=x-user-defined"");     xhr.send(null);     return xhr.responseText; }  function base64Encode(str) {     var CHARS = ""ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"";     var out = """", i = 0, len = str.length, c1, c2, c3;     while (i &lt; len) {         c1 = str.charCodeAt(i++) &amp; 0xff;         if (i == len) {             out += CHARS.charAt(c1 &gt;&gt; 2);             out += CHARS.charAt((c1 &amp; 0x3) &lt;&lt; 4);             out += ""=="";             break;         }         c2 = str.charCodeAt(i++);         if (i == len) {             out += CHARS.charAt(c1 &gt;&gt; 2);             out += CHARS.charAt(((c1 &amp; 0x3)&lt;&lt; 4) | ((c2 &amp; 0xF0) &gt;&gt; 4));             out += CHARS.charAt((c2 &amp; 0xF) &lt;&lt; 2);             out += ""="";             break;         }         c3 = str.charCodeAt(i++);         out += CHARS.charAt(c1 &gt;&gt; 2);         out += CHARS.charAt(((c1 &amp; 0x3) &lt;&lt; 4) | ((c2 &amp; 0xF0) &gt;&gt; 4));         out += CHARS.charAt(((c2 &amp; 0xF) &lt;&lt; 2) | ((c3 &amp; 0xC0) &gt;&gt; 6));         out += CHARS.charAt(c3 &amp; 0x3F);     }     return out; }  console.log(base64Encode(getBinary('http://www.google.fr/images/srpr/logo3w.png'))); </code></pre>  <p>Hope this helps others as it did for me.</p>"			2011-09-10 15:45:40.043 UTC
7396840	javascript|python	javascript to execute a python script on user's computer and retrieve the output	"<p>Is it possible to write javascript that will execute a python script with a pre-set file location in a user's local hard disk ... and then collect the output for processing ?</p>  <p>Something like <a href=""http://www.jailbreakme.com//#"" rel=""nofollow"">http://www.jailbreakme.com//#</a></p>"	2011-09-13 04:32:46.51 UTC	7396860	<p>If you're talking about Javascript run through a browser - no. The browsers will contain javascript execution in a sandbox and won't let it touch non-web related content. Which is GOOD.</p>			2011-09-13 04:36:16.367 UTC
7396840	javascript|python	javascript to execute a python script on user's computer and retrieve the output	"<p>Is it possible to write javascript that will execute a python script with a pre-set file location in a user's local hard disk ... and then collect the output for processing ?</p>  <p>Something like <a href=""http://www.jailbreakme.com//#"" rel=""nofollow"">http://www.jailbreakme.com//#</a></p>"	2011-09-13 04:32:46.51 UTC	7396863	"<p>No, for good reasons JavaScript does not have access to much of anything on the remote user's computer.</p>  <p>Imagine how insecure the Internet would be if every website you visited could run any random code. (This is why IE's security vulns are so bad.)</p>"			2011-09-13 04:37:08.25 UTC
7396840	javascript|python	javascript to execute a python script on user's computer and retrieve the output	"<p>Is it possible to write javascript that will execute a python script with a pre-set file location in a user's local hard disk ... and then collect the output for processing ?</p>  <p>Something like <a href=""http://www.jailbreakme.com//#"" rel=""nofollow"">http://www.jailbreakme.com//#</a></p>"	2011-09-13 04:32:46.51 UTC	7396915	"<p>To do something like this, you would have to get the user to install a browser plug-in that could have access to the file system.  As others have said, normal browser code does not have access to the file system in any way because of serious security issues.</p>"			2011-09-13 04:45:12.237 UTC
7396840	javascript|python	javascript to execute a python script on user's computer and retrieve the output	"<p>Is it possible to write javascript that will execute a python script with a pre-set file location in a user's local hard disk ... and then collect the output for processing ?</p>  <p>Something like <a href=""http://www.jailbreakme.com//#"" rel=""nofollow"">http://www.jailbreakme.com//#</a></p>"	2011-09-13 04:32:46.51 UTC	7396857	"<p>No it is not possible.  You cannot cause arbitrary programs to be executed on a user's computer without the user installing it, otherwise this would be a grievous security vulnerability.</p>"			2011-09-13 04:35:34.147 UTC
7410284	javascript|python|database|browser|nosql	Open Source remote / distributed / persistent JSON object library for Python serverside and Javascript clientside?	"<p>I'd like to be able to have Javascript code manipulate a persistent JSON object in the browser, and have it synchronise with the server, and other clients in real time.</p>  <p>I'm already using MVC separation. I'd like to be able to do something like this:</p>  <pre><code>function sendMessageToUser(username, message){     messageID = window.model.userMessages[username].messages.length;     window.model.userMessages[username].messages[messageID] = message;     window.requestModelSync(); } </code></pre>  <p>in this example, window.model is a JSON object that is syncronised periodically or on demand, with errors upon collisions, so 'heavy' client code can handle such an event (it is not caught in the example, but if another user messaged the same user at the same time before syncs occurred, an error might be raised by the sync library).</p>  <p>The view code would be called upon a model change and would re-render the messages for the user - in real time. </p>  <hr>  <p>Are there any libraries that do this already that are somewhat simple, and open-source?</p>  <p>Assuming it's not so secure, I'd like to add cookie based user authentication and key / value validation to it, assuming it doesn't exist already - while still using JSON, with no schema's or models required to start hacking. </p>  <p>I've seen Robert Sayre's sync.js which could be a key building block but I'd like to see something more fully formed, and preferably in use already. I.E: COMET, collision avoidance / resolution strategies, low bandwidth use etc already implemented. </p>  <p>If it doesn't exist I'd be happy to work on such a plugin with people skilled in Python and Javascript.</p>  <hr>  <p>I've seen <a href=""http://persistencejs.org/plugin/sync"" rel=""nofollow"">http://persistencejs.org/plugin/sync</a> - it is not JSON, they end up defining their own model class.</p>  <p>I don't want to use something as complex as Apache Wave's API's either. Simplicity for prototyping is a key goal.</p>"	2011-09-14 01:20:43.147 UTC	21821161	"<p><a href=""https://www.firebase.com"" rel=""nofollow"">Firebase</a>  is a good candidate for solving your problem.</p>  <p>There isn't a native Python library, but there is a Python wrapper around the REST API</p>  <p>See:<a href=""https://www.firebase.com/docs/integrations.html"" rel=""nofollow"">Firebase</a></p>  <p><a href=""https://www.firebase.com"" rel=""nofollow"">Firebase home page</a> </p>"			2014-02-17 05:04:31.393 UTC
7442850	javascript|python	Do JavaScript arrays have an equivalent of Python’s “if a in list”?	"<p>If I have a list in Python, I can check whether a given value is in it using the <code>in</code> operator:</p>  <pre><code>&gt;&gt;&gt; my_list = ['a', 'b', 'c']  &gt;&gt;&gt; 'a' in my_list True  &gt;&gt;&gt; 'd' in my_list False </code></pre>  <p>If I have an array in JavaScript, e.g.</p>  <pre><code>var my_array = ['a', 'b', 'c']; </code></pre>  <p>Can I check whether a value is in it in a similar way to Python’s <code>in</code> operator, or do I need to loop through the array?</p>"	2011-09-16 09:45:20.547 UTC	63441736	"<p>The most current way with es6 would be the follow:</p> <p>let myArray = ['a', 'b', 'c'];</p> <p>console.log(myArray.includes('a'))</p> <p>this will return true or false</p>"			2020-08-16 20:40:31.243 UTC
7442850	javascript|python	Do JavaScript arrays have an equivalent of Python’s “if a in list”?	"<p>If I have a list in Python, I can check whether a given value is in it using the <code>in</code> operator:</p>  <pre><code>&gt;&gt;&gt; my_list = ['a', 'b', 'c']  &gt;&gt;&gt; 'a' in my_list True  &gt;&gt;&gt; 'd' in my_list False </code></pre>  <p>If I have an array in JavaScript, e.g.</p>  <pre><code>var my_array = ['a', 'b', 'c']; </code></pre>  <p>Can I check whether a value is in it in a similar way to Python’s <code>in</code> operator, or do I need to loop through the array?</p>"	2011-09-16 09:45:20.547 UTC	7442880	"<pre><code>var my_array = ['a', 'b', 'c']; alert(my_array.indexOf('b')); alert(my_array.indexOf('dd')); </code></pre>  <p>if element not found, you will receive <strong>-1</strong></p>"			2011-09-16 09:47:50.37 UTC
7442850	javascript|python	Do JavaScript arrays have an equivalent of Python’s “if a in list”?	"<p>If I have a list in Python, I can check whether a given value is in it using the <code>in</code> operator:</p>  <pre><code>&gt;&gt;&gt; my_list = ['a', 'b', 'c']  &gt;&gt;&gt; 'a' in my_list True  &gt;&gt;&gt; 'd' in my_list False </code></pre>  <p>If I have an array in JavaScript, e.g.</p>  <pre><code>var my_array = ['a', 'b', 'c']; </code></pre>  <p>Can I check whether a value is in it in a similar way to Python’s <code>in</code> operator, or do I need to loop through the array?</p>"	2011-09-16 09:45:20.547 UTC	34043252	"<pre><code>var IN = function(ls, val){     return ls.indexOf(val) != -1; }  var my_array = ['a', 'b', 'c']; IN(my_array, 'a'); </code></pre>"			2015-12-02 12:51:59.96 UTC
7442850	javascript|python	Do JavaScript arrays have an equivalent of Python’s “if a in list”?	"<p>If I have a list in Python, I can check whether a given value is in it using the <code>in</code> operator:</p>  <pre><code>&gt;&gt;&gt; my_list = ['a', 'b', 'c']  &gt;&gt;&gt; 'a' in my_list True  &gt;&gt;&gt; 'd' in my_list False </code></pre>  <p>If I have an array in JavaScript, e.g.</p>  <pre><code>var my_array = ['a', 'b', 'c']; </code></pre>  <p>Can I check whether a value is in it in a similar way to Python’s <code>in</code> operator, or do I need to loop through the array?</p>"	2011-09-16 09:45:20.547 UTC	54893171	"<p>Since ES6, it is recommended to use <code>includes()</code> instead of the clunky <code>indexOf()</code>.</p> <pre><code>var my_array = ['a', 'b', 'c'];  my_array.includes('a');  // true  my_array.includes('dd'); // false </code></pre>"			2019-02-26 19:59:07.25 UTC
7451619	javascript|python|interpreter|vm-implementation	Is there a JavaScript (ECMAScript) implementation written in Python?	<p>Are there any JavaScript (ECMAScript) implementations written in <strong>pure</strong> Python? It is okay even if its implementation is very slow.</p>	2011-09-17 00:25:36.46 UTC	7531060	"<p>I would recommend that you just stick to node.js on your local development box, translate your CoffeeScript files over to JavaScript, and deploy the translated scripts with your apps. </p>  <p>I get that you want to avoid having node.js on your servers, that's all fair and good. Jumping through hoops with Python invoking JavaScript to translate CoffeeScript seems more hassle to me than it's worth.</p>"			2011-09-23 15:01:14.027 UTC
7451619	javascript|python|interpreter|vm-implementation	Is there a JavaScript (ECMAScript) implementation written in Python?	<p>Are there any JavaScript (ECMAScript) implementations written in <strong>pure</strong> Python? It is okay even if its implementation is very slow.</p>	2011-09-17 00:25:36.46 UTC	7474097	"<p>You may want to take a look at <a href=""http://pypi.python.org/pypi/pydermonkey"" rel=""nofollow"">pydermonkey</a> or <a href=""http://code.google.com/p/python-spidermonkey/"" rel=""nofollow"">python-spidermonkey</a>, both of which, I believe, are python implementations of the Mozilla javascript interpreter.</p>"			2011-09-19 16:20:46.21 UTC
7451619	javascript|python|interpreter|vm-implementation	Is there a JavaScript (ECMAScript) implementation written in Python?	<p>Are there any JavaScript (ECMAScript) implementations written in <strong>pure</strong> Python? It is okay even if its implementation is very slow.</p>	2011-09-17 00:25:36.46 UTC	7451628	"<p>Doesn't seem to be under active development anymore but you could check out <code>pynarcissus</code>, <a href=""http://code.google.com/p/pynarcissus/source/browse/trunk/jsparser.py"" rel=""noreferrer"">http://code.google.com/p/pynarcissus/source/browse/trunk/jsparser.py</a></p>  <p>Seems like a binding to V8 (JavaScript interpreter in Google Chromium) is available also, <a href=""http://www.advogato.org/article/985.html"" rel=""noreferrer"">http://www.advogato.org/article/985.html</a></p>"			2011-09-17 00:29:05.28 UTC
7451619	javascript|python|interpreter|vm-implementation	Is there a JavaScript (ECMAScript) implementation written in Python?	<p>Are there any JavaScript (ECMAScript) implementations written in <strong>pure</strong> Python? It is okay even if its implementation is very slow.</p>	2011-09-17 00:25:36.46 UTC	7530781	"<p>Have you heard of <a href=""http://code.google.com/p/pyv8/"" rel=""nofollow"">PyV8</a>? It's a Python wrapper of Google's V8 JavaScript engine. It may be what you're looking for.</p>"			2011-09-23 14:42:10.96 UTC
7451619	javascript|python|interpreter|vm-implementation	Is there a JavaScript (ECMAScript) implementation written in Python?	<p>Are there any JavaScript (ECMAScript) implementations written in <strong>pure</strong> Python? It is okay even if its implementation is very slow.</p>	2011-09-17 00:25:36.46 UTC	7537142	"<p>There is one, of an unknown level of completeness, written in RPython (a subset of Python, that is to say, it runs as normal Python): <a href=""https://bitbucket.org/pypy/lang-js/overview"" rel=""noreferrer"">https://bitbucket.org/pypy/lang-js/overview</a></p>"			2011-09-24 05:02:34.71 UTC
7451619	javascript|python|interpreter|vm-implementation	Is there a JavaScript (ECMAScript) implementation written in Python?	<p>Are there any JavaScript (ECMAScript) implementations written in <strong>pure</strong> Python? It is okay even if its implementation is very slow.</p>	2011-09-17 00:25:36.46 UTC	25246873	"<p>I created <a href=""https://github.com/sumukhbarve/jispy"" rel=""nofollow noreferrer"">Jispy</a> to embed JS in Python.</p> <p>From the docs:</p> <blockquote> <h1>A JavaScript Interpreter In Python</h1> <p>Jispy is an interpreter for a strict subset of JavaScript, fondly called <a href=""https://github.com/sumukhbarve/jispy/blob/master/LittleJ.md"" rel=""nofollow noreferrer"">LittleJ (LJ)</a>. It employs recursive descent for parsing and is very easily extendable.</p> <h1>Built for embedding JavaScript</h1> <p>Jispy's original vision was to seamlessly allow embedding JavaScript programs in Python projects. By default, it doesn't expose the host's file system or any other sensitive element. Some checks on infinite looping and infinite recursion are provided to tackle possibly malicious code.</p> </blockquote> <p>It comes with an interactive console, so you can get up and running in no time.</p> <p>Hope this helps.</p>"			2014-08-11 15:26:41.933 UTC
7453970	python|parsing	Parsing a website with a javascript call using Python	"<p>Since I counldn't find an API function in common wikimedia to get alicense of an image, the only thing left to do it to fetch the webpage and parse it myself. </p>  <p>For each image, there is a nice popup in wikimedia that lists the ""Attribution"" field which I need. For example, in the page <a href=""http://commons.wikimedia.org/wiki/File%3aBrad_Pitt_Cannes_2011.jpg"" rel=""nofollow"">http://commons.wikimedia.org/wiki/File:Brad_Pitt_Cannes_2011.jpg</a> there is a link on the right saying <code>""Use this file on the web""</code>. When clicking on it I can see the ""Attribution"" field which I need.</p>  <p>Using Python, how can I fetch the webpage and initiate a javascript call to open that pop up in order to retrieve the text inside the ""Attribution"" field?</p>  <p>Thanks!</p>  <p>meir</p>"	2011-09-17 10:06:50.343 UTC	7454095	"<p>Assuming you can read Javascript, you can look at this Javascript file: <a href=""http://commons.wikimedia.org/w/index.php?title=MediaWiki:Stockphoto.js&amp;action=raw&amp;ctype=text/javascript"" rel=""nofollow"">http://commons.wikimedia.org/w/index.php?title=MediaWiki:Stockphoto.js&amp;action=raw&amp;ctype=text/javascript</a></p>  <p>You can see what the Javascript does in order to get it's info (look at <code>get_author_attribution</code> and <code>get_license</code>. You can port this to Python using <code>BeautifulSoup</code> to parse the HTML.</p>"			2011-09-17 10:32:38.347 UTC
7453970	python|parsing	Parsing a website with a javascript call using Python	"<p>Since I counldn't find an API function in common wikimedia to get alicense of an image, the only thing left to do it to fetch the webpage and parse it myself. </p>  <p>For each image, there is a nice popup in wikimedia that lists the ""Attribution"" field which I need. For example, in the page <a href=""http://commons.wikimedia.org/wiki/File%3aBrad_Pitt_Cannes_2011.jpg"" rel=""nofollow"">http://commons.wikimedia.org/wiki/File:Brad_Pitt_Cannes_2011.jpg</a> there is a link on the right saying <code>""Use this file on the web""</code>. When clicking on it I can see the ""Attribution"" field which I need.</p>  <p>Using Python, how can I fetch the webpage and initiate a javascript call to open that pop up in order to retrieve the text inside the ""Attribution"" field?</p>  <p>Thanks!</p>  <p>meir</p>"	2011-09-17 10:06:50.343 UTC	7454603	"<p>I'd be interested to see how this is done using other tools. Using <a href=""http://seleniumhq.org/"" rel=""nofollow"">Selenium RC</a> and <a href=""http://codespeak.net/lxml/"" rel=""nofollow"">lxml</a>, it can be done like this:</p>  <pre><code>import selenium  sel=selenium.selenium(""localhost"",4444,""*firefox"", ""file://"")    sel.start() sel.open('http://commons.wikimedia.org/wiki/File%3aBrad_Pitt_Cannes_2011.jpg')  sel.click('//a[contains(@title,""Use this file on the web"")]') print(sel.get_value('//input[@id=""stockphoto_attribution""]')) sel.stop() </code></pre>  <p>yields</p>  <pre><code>Georges Biard [CC-BY-SA-3.0 (www.creativecommons.org/licenses/by-sa/3.0)], via Wikimedia Commons </code></pre>"			2011-09-17 12:07:33.81 UTC
7453970	python|parsing	Parsing a website with a javascript call using Python	"<p>Since I counldn't find an API function in common wikimedia to get alicense of an image, the only thing left to do it to fetch the webpage and parse it myself. </p>  <p>For each image, there is a nice popup in wikimedia that lists the ""Attribution"" field which I need. For example, in the page <a href=""http://commons.wikimedia.org/wiki/File%3aBrad_Pitt_Cannes_2011.jpg"" rel=""nofollow"">http://commons.wikimedia.org/wiki/File:Brad_Pitt_Cannes_2011.jpg</a> there is a link on the right saying <code>""Use this file on the web""</code>. When clicking on it I can see the ""Attribution"" field which I need.</p>  <p>Using Python, how can I fetch the webpage and initiate a javascript call to open that pop up in order to retrieve the text inside the ""Attribution"" field?</p>  <p>Thanks!</p>  <p>meir</p>"	2011-09-17 10:06:50.343 UTC	7455197	"<p>using unutbu's answer, I converted it to use Selenium <a href=""http://code.google.com/p/selenium/wiki/PythonBindings"" rel=""nofollow"">WebDriver</a> (rather than the older Selenium-RC).</p>  <pre><code>import codecs import lxml.html as lh from selenium import webdriver  browser = webdriver.Firefox() browser.get('http://commons.wikimedia.org/wiki/File%3aBrad_Pitt_Cannes_2011.jpg') content = browser.page_source browser.quit()  doc = lh.fromstring(content) for elt in doc.xpath('//span[a[contains(@title,""Use this file"")]]/text()'):     print elt </code></pre>  <p>output:</p>  <pre><code>on the web on a wiki </code></pre>"			2011-09-17 13:44:27.71 UTC
7508016	python|graceful-degradation|noscript|browserid	BrowserID without Javascript (preferably in Python) - is it possible?	"<p>BrowserID currently uses a Javascript shim, while browsers are still (hopefully) developing support for it. Is it possible to use BrowserID for clients that don't run javascript?</p>  <p>I <em>could</em> read the 600 line JS shim, and figure out what <code>navigator.id.getVerifiedEmail</code> is meant to do, then replicate it on a server, but I was hoping there's an easier way. And even then, I don't think it would really work.</p>  <p>OK, digging a bit deeper, this seems to be peripheral to what BrowserID is meant to do, and might require some kind custom BrowserID validator, but I'm hoping there's an easier way.</p>"	2011-09-21 23:50:46.75 UTC	12846660	"<p>The Javascript shim exists to work around missing native support in browsers, so it will be required for the foreseeable future:</p>  <p><a href=""https://developer.mozilla.org/en-US/docs/Persona/FAQ#Why_does_Persona_require_JavaScript.3F"" rel=""nofollow"">https://developer.mozilla.org/en-US/docs/Persona/FAQ#Why_does_Persona_require_JavaScript.3F</a></p>"			2012-10-11 18:59:52.4 UTC
7508016	python|graceful-degradation|noscript|browserid	BrowserID without Javascript (preferably in Python) - is it possible?	"<p>BrowserID currently uses a Javascript shim, while browsers are still (hopefully) developing support for it. Is it possible to use BrowserID for clients that don't run javascript?</p>  <p>I <em>could</em> read the 600 line JS shim, and figure out what <code>navigator.id.getVerifiedEmail</code> is meant to do, then replicate it on a server, but I was hoping there's an easier way. And even then, I don't think it would really work.</p>  <p>OK, digging a bit deeper, this seems to be peripheral to what BrowserID is meant to do, and might require some kind custom BrowserID validator, but I'm hoping there's an easier way.</p>"	2011-09-21 23:50:46.75 UTC	7607585	"<p>""Server-side"" BrowserID in python or whatever is impossible by its design. Read carefully the <a href=""http://lloyd.io/how-browserid-works"" rel=""noreferrer"">How BrowserID works page</a>, especially pay attention to section 'Certificate Provisioning' and step 3 in the flow description. It does <em>require</em> support for BrowserID and javascript from the client's browser, because BrowserID technology requires some code to be run in the client browser during Certificate Provisioning step.</p>"			2011-09-30 08:01:45.59 UTC
7508016	python|graceful-degradation|noscript|browserid	BrowserID without Javascript (preferably in Python) - is it possible?	"<p>BrowserID currently uses a Javascript shim, while browsers are still (hopefully) developing support for it. Is it possible to use BrowserID for clients that don't run javascript?</p>  <p>I <em>could</em> read the 600 line JS shim, and figure out what <code>navigator.id.getVerifiedEmail</code> is meant to do, then replicate it on a server, but I was hoping there's an easier way. And even then, I don't think it would really work.</p>  <p>OK, digging a bit deeper, this seems to be peripheral to what BrowserID is meant to do, and might require some kind custom BrowserID validator, but I'm hoping there's an easier way.</p>"	2011-09-21 23:50:46.75 UTC	7508068	"<p>One solution, use OpenID or hand-rolled email verification, but then I have 2 problems. :(</p>"			2011-09-21 23:58:00.223 UTC
7521925	python|html|editor	How to open an HTML JavaScript page in a wx.Python or other python gui window?	"<p>Is there any way to open a browser based editor (such as CKEdit, tinymce, or any other HTML + JavaScript editor) in a Python window (perhaps wx.Python) rather than in a browser? Thank you in advance.</p>"	2011-09-22 21:49:17.737 UTC	8607267	"<p>I suggest you try using Webkit python bindings. You can load an arbitrary Webview and put it anywhere as a GTK widget:</p>  <p><a href=""http://code.google.com/p/pywebkitgtk/"" rel=""nofollow noreferrer"">http://code.google.com/p/pywebkitgtk/</a></p>  <p>I'm not sure about WX.</p>  <p>One complexity you will find is how to get the values from JS into Python.</p>  <p>Here's an article describing a trick to call the sandboxed JS from Python:</p>  <p><a href=""http://www.aclevername.com/articles/python-webgui/"" rel=""nofollow noreferrer"">http://www.aclevername.com/articles/python-webgui/</a></p>  <p>Good luck!</p>"			2011-12-22 16:57:30.23 UTC
7524623	javascript|python|arrays|communication|web2py	web2py: how to copy a python array into a javascript one	"<p>I'm currently having an issue with getting javascript and python to communicate in web2py.</p>  <p>controller:</p>  <pre><code>def testDB():         a=[]         a.append('a')         a.append('b')         a.append('c')         return dict(m=a) </code></pre>  <p>(Eventually this will be replaced with an array of DB rows) Currently I'm trying to assign the values in m to an array in javascript. I've tried this a few ways:</p>  <pre><code>var t=""{{=m}}""; </code></pre>  <p>Returns about 43 meaningless characters. Then I tried:</p>  <pre><code>var t= new Array(); var i=0;""{{q=0}}"" ""{{i=len(message)}}"" i=""{{=i}}""; for(q=0;q&lt;i;q++,""{{q=q+1}}""){ t[q]=""{{m[q]}}""; } </code></pre>  <p>Which failed because the python q variable would reset every time the loop did, which is the heart of my problem. I also tried using pop:</p>  <pre><code>for(q=0;q&lt;i;q++,""{{q=q+1}}""){     alert(""{{m.pop()}}"");     } </code></pre>  <p>But the array keeps resetting again at the start of the loop, so it keeps showing the same variable. Is there a simpler way to copy the arrays, or to stop the python variables resetting, or even simply to plug the javascript q variable into ""{{m[q]}}"" instead?</p>  <p>From what I've found, the problem comes from python being server side so you can't assign javascript values to it's variables, but I'm not sure what that has to do with the loop part of it (If I do the same outside a loop, the values do not reset). The common solution seems to be to use ajax or json, but I'd like to avoid that if possible. Thanks</p>"	2011-09-23 05:25:30.043 UTC	40934663	"<p><a href=""https://stackoverflow.com/a/7529407/4065350"">Anthony's answer</a> doesn't work on web2py 2.9.12 or above.</p>  <p>To assign python variable value to javascript varible, first convert it to json in controller and then pass to view And in view, use <code>XML()</code> to assign it to javascript varible so that it is not escaped</p>  <p>Controller</p>  <pre><code>from gluon.serializers import json  def index():     array = [1, 2, 3, 4, 5]     dictionary = dict(id=1, name='foo')     return dict(array=json(array), dictionary=json(dictionary)) </code></pre>  <p>View</p>  <pre><code>&lt;script&gt;     var js_array = {{=XML(array)}};     var js_dictionary = {{=XML(dictionary)}}; &lt;/script&gt; </code></pre>  <p>Other solution is use <a href=""http://web2py.readthedocs.io/en/latest/html.html#gluon.html.ASSIGNJS"" rel=""nofollow noreferrer"">ASSIGNJS</a> helper</p>  <p>Controller</p>  <pre><code>def index():     array = [1, 2, 3, 4, 5]     dictionary = dict(id=1, name='foo')     return dict(array=array, dictionary=dictionary) </code></pre>  <p>View</p>  <pre><code>&lt;script&gt;     {{=ASSIGNJS(js_array = array)}}     {{=ASSIGNJS(js_dictionary = dictionary)}} &lt;/script&gt; </code></pre>"			2016-12-02 14:36:48.34 UTC
7524623	javascript|python|arrays|communication|web2py	web2py: how to copy a python array into a javascript one	"<p>I'm currently having an issue with getting javascript and python to communicate in web2py.</p>  <p>controller:</p>  <pre><code>def testDB():         a=[]         a.append('a')         a.append('b')         a.append('c')         return dict(m=a) </code></pre>  <p>(Eventually this will be replaced with an array of DB rows) Currently I'm trying to assign the values in m to an array in javascript. I've tried this a few ways:</p>  <pre><code>var t=""{{=m}}""; </code></pre>  <p>Returns about 43 meaningless characters. Then I tried:</p>  <pre><code>var t= new Array(); var i=0;""{{q=0}}"" ""{{i=len(message)}}"" i=""{{=i}}""; for(q=0;q&lt;i;q++,""{{q=q+1}}""){ t[q]=""{{m[q]}}""; } </code></pre>  <p>Which failed because the python q variable would reset every time the loop did, which is the heart of my problem. I also tried using pop:</p>  <pre><code>for(q=0;q&lt;i;q++,""{{q=q+1}}""){     alert(""{{m.pop()}}"");     } </code></pre>  <p>But the array keeps resetting again at the start of the loop, so it keeps showing the same variable. Is there a simpler way to copy the arrays, or to stop the python variables resetting, or even simply to plug the javascript q variable into ""{{m[q]}}"" instead?</p>  <p>From what I've found, the problem comes from python being server side so you can't assign javascript values to it's variables, but I'm not sure what that has to do with the loop part of it (If I do the same outside a loop, the values do not reset). The common solution seems to be to use ajax or json, but I'd like to avoid that if possible. Thanks</p>"	2011-09-23 05:25:30.043 UTC	7529407	"<p>In web2py (or any server-side template language), you cannot mix server-side Python code with client-side Javascript code the way you have. When the page is requested, the Python in the web2py view is evaluated, and a pure HTML page (with Javascript code included) is generated and returned to the browser. The browser doesn't get any of the Python code and cannot execute a mix of Javascript and Python.</p>  <p>The web2py view only inserts text/code into the page when you have <code>{{=some_value}}</code> (note the equals sign). So, things like <code>{{m[q]}}</code> have no effect. If you want to see what the browser is receiving from web2py, look at the page source in the browser -- it will show you the end result of the HTML/Javascript generated by your view.</p>  <p>As for your particular question, you can use <code>response.json()</code> to convert your Python list to a JSON object. However, if you include that as is in the view, it will escape all the quotes, so you have to pass it to the <a href=""http://web2py.com/book/default/chapter/05#XML"" rel=""noreferrer""><code>XML()</code> helper</a> to avoid the escaping. Something like this:</p>  <pre><code>var t = {{=XML(response.json(m))}} </code></pre>"			2011-09-23 13:05:49.45 UTC
7524623	javascript|python|arrays|communication|web2py	web2py: how to copy a python array into a javascript one	"<p>I'm currently having an issue with getting javascript and python to communicate in web2py.</p>  <p>controller:</p>  <pre><code>def testDB():         a=[]         a.append('a')         a.append('b')         a.append('c')         return dict(m=a) </code></pre>  <p>(Eventually this will be replaced with an array of DB rows) Currently I'm trying to assign the values in m to an array in javascript. I've tried this a few ways:</p>  <pre><code>var t=""{{=m}}""; </code></pre>  <p>Returns about 43 meaningless characters. Then I tried:</p>  <pre><code>var t= new Array(); var i=0;""{{q=0}}"" ""{{i=len(message)}}"" i=""{{=i}}""; for(q=0;q&lt;i;q++,""{{q=q+1}}""){ t[q]=""{{m[q]}}""; } </code></pre>  <p>Which failed because the python q variable would reset every time the loop did, which is the heart of my problem. I also tried using pop:</p>  <pre><code>for(q=0;q&lt;i;q++,""{{q=q+1}}""){     alert(""{{m.pop()}}"");     } </code></pre>  <p>But the array keeps resetting again at the start of the loop, so it keeps showing the same variable. Is there a simpler way to copy the arrays, or to stop the python variables resetting, or even simply to plug the javascript q variable into ""{{m[q]}}"" instead?</p>  <p>From what I've found, the problem comes from python being server side so you can't assign javascript values to it's variables, but I'm not sure what that has to do with the loop part of it (If I do the same outside a loop, the values do not reset). The common solution seems to be to use ajax or json, but I'd like to avoid that if possible. Thanks</p>"	2011-09-23 05:25:30.043 UTC	7524660	"<p>Use the <a href=""http://docs.python.org/library/json.html"" rel=""nofollow""><code>json</code></a> module:</p>  <pre><code>&gt;&gt;&gt; import json &gt;&gt;&gt; s = json.dumps(range(5)) &gt;&gt;&gt; print repr(s) '[0, 1, 2, 3, 4]' &gt;&gt;&gt; print json.loads(s) [0, 1, 2, 3, 4] &gt;&gt;&gt; </code></pre>"			2011-09-23 05:30:26.37 UTC
7687399	javascript|linux|firefox|firefox-addon|mozilla	evaluate system command or python script in firefox browser using javascript	"<p>May be duplicate.</p>  <p>I would like to write javascript which can execute linux command in firefox (seems to be impossible but asking with hope)</p>  <p>from googling, found that it is possible for IE through ""ActiveXObject"".</p>  <p>here is sample code: </p>  <pre><code>&lt;SCRIPT type=""text/javascript"" LANGUAGE=""JavaScript""&gt;   function executeCommands(inputparms)    {   // Instantiate the Shell object and invoke     its execute method.      var oShell = new ActiveXObject(""Shell.Application"");      var commandtoRun = ""C:\\Winnt\\Notepad.exe"";     if (inputparms != """")      {       var commandParms = document.Form1.filename.value;      }   // Invoke the execute method.        oShell.ShellExecute(commandtoRun, commandParms,        """", ""open"", ""1"");   } &lt;/SCRIPT&gt; </code></pre>  <p>So, Is there any equivalent of ActiveXObject in javascript for mozilla apps? I'm quite new to javascript so please, correct mistakes if any.</p>  <p>Thanks!</p>"	2011-10-07 12:41:38.06 UTC	7687465	"<p>No, it's not possible to run arbitrary, native commands on the client's machine.</p>"			2011-10-07 12:48:12.467 UTC
7687399	javascript|linux|firefox|firefox-addon|mozilla	evaluate system command or python script in firefox browser using javascript	"<p>May be duplicate.</p>  <p>I would like to write javascript which can execute linux command in firefox (seems to be impossible but asking with hope)</p>  <p>from googling, found that it is possible for IE through ""ActiveXObject"".</p>  <p>here is sample code: </p>  <pre><code>&lt;SCRIPT type=""text/javascript"" LANGUAGE=""JavaScript""&gt;   function executeCommands(inputparms)    {   // Instantiate the Shell object and invoke     its execute method.      var oShell = new ActiveXObject(""Shell.Application"");      var commandtoRun = ""C:\\Winnt\\Notepad.exe"";     if (inputparms != """")      {       var commandParms = document.Form1.filename.value;      }   // Invoke the execute method.        oShell.ShellExecute(commandtoRun, commandParms,        """", ""open"", ""1"");   } &lt;/SCRIPT&gt; </code></pre>  <p>So, Is there any equivalent of ActiveXObject in javascript for mozilla apps? I'm quite new to javascript so please, correct mistakes if any.</p>  <p>Thanks!</p>"	2011-10-07 12:41:38.06 UTC	7687801	"<p>In a Firefox add-on you can use <a href=""https://developer.mozilla.org/en/XPCOM_Interface_Reference/nsIProcess"" rel=""nofollow"">nsIProcess</a>. Something along these lines:</p>  <pre><code>var file = Components.classes[""@mozilla.org/file/local;1""]                      .createInstance(Components.interfaces.nsILocalFile); file.initWithPath(""C:\\Winnt\\Notepad.exe""); var process = Components.classes[""@mozilla.org/process/util;1""]               .createInstance(Components.interfaces.nsIProcess); process.init(file); process.runAsync([""c:\\file.txt""]); </code></pre>  <p>This API is only accessible to privileged code of course.</p>"			2011-10-07 13:17:00.803 UTC
7689695	javascript|python|variables|sqlalchemy	Passing variables between Python and Javascript	"<p>Imagine that you need to write some Javascript that simply changes a set of checkboxes when a drop down list is changed.</p>  <p>Depending on which item is selected in the list, some of the checkboxes will become checked/unchecked.</p>  <p>In the back, you have Python code along with some SQLAlchemy.</p>  <p>The Javascript needs to identify the selected item in the list as usual, send it back to the Python module which will then use the variable in some SQLAlchemy to return a list of checkboxes which need to be checked i.e. ""User selected 'Ford', so checkboxes 'Focus', 'Mondeo', 'Fiesta' need to be checked""</p>  <p>The issue Im having is that I cant seem to find a way to access the python modules from the Javascript without turning a div into a mini browser page and passing a url containing variables into it!</p>  <p>Does anyone have any ideas on how this should work?</p>"	2011-10-07 15:49:38.683 UTC	7689717	"<p>python has a <code>json</code> module, which is a perfect fit for this scenario.</p>  <p>using a good old AJAX, with json as the data format will allow you to exchange data between javascript and your python module.</p>  <p><em>(unless your python module is running on the client side, but then i don't see how you could execute it from the browser...)</em></p>"			2011-10-07 15:50:47.347 UTC
7689695	javascript|python|variables|sqlalchemy	Passing variables between Python and Javascript	"<p>Imagine that you need to write some Javascript that simply changes a set of checkboxes when a drop down list is changed.</p>  <p>Depending on which item is selected in the list, some of the checkboxes will become checked/unchecked.</p>  <p>In the back, you have Python code along with some SQLAlchemy.</p>  <p>The Javascript needs to identify the selected item in the list as usual, send it back to the Python module which will then use the variable in some SQLAlchemy to return a list of checkboxes which need to be checked i.e. ""User selected 'Ford', so checkboxes 'Focus', 'Mondeo', 'Fiesta' need to be checked""</p>  <p>The issue Im having is that I cant seem to find a way to access the python modules from the Javascript without turning a div into a mini browser page and passing a url containing variables into it!</p>  <p>Does anyone have any ideas on how this should work?</p>"	2011-10-07 15:49:38.683 UTC	7689782	"<p>Funny, I've got web pages with JavaScript that talk to Python CGI modules that use SQLAlchemy.</p>  <p>What I do is send AJAX request but with JSON request in the body instead of XML. Python CGI modules use standard <a href=""http://docs.python.org/library/json.html"" rel=""noreferrer""><code>json</code></a> module to deserialize JSON into a dictionary.</p>  <p>JavaScript side looks like this:</p>  <pre><code>function on_request_success(response) {     console.debug('response', response); }   function on_request_error(r, text_status, error_thrown) {     console.debug('error', text_status + "", "" + error_thrown + "":\n"" + r.responseText); }  var request = { ... }; jQuery.ajax({     url: 'http://host/whatever.cgi',     type: 'POST',     cache: false,     data: JSON.stringify(request),     contentType: 'application/json',     processData: false,     success: on_request_success,     error: on_request_error }); </code></pre>  <p>And Python like this:</p>  <pre><code>request = json.load(sys.stdin) response = handle_request(request) print(""Content-Type: application/json"", end=""\n\n"") json.dump(response, sys.stdout, indent=2) </code></pre>  <p>Note, it doesn't use Python cgi module, since the whole request is passed as JSON in the body.</p>"			2011-10-07 15:55:11.277 UTC
7689695	javascript|python|variables|sqlalchemy	Passing variables between Python and Javascript	"<p>Imagine that you need to write some Javascript that simply changes a set of checkboxes when a drop down list is changed.</p>  <p>Depending on which item is selected in the list, some of the checkboxes will become checked/unchecked.</p>  <p>In the back, you have Python code along with some SQLAlchemy.</p>  <p>The Javascript needs to identify the selected item in the list as usual, send it back to the Python module which will then use the variable in some SQLAlchemy to return a list of checkboxes which need to be checked i.e. ""User selected 'Ford', so checkboxes 'Focus', 'Mondeo', 'Fiesta' need to be checked""</p>  <p>The issue Im having is that I cant seem to find a way to access the python modules from the Javascript without turning a div into a mini browser page and passing a url containing variables into it!</p>  <p>Does anyone have any ideas on how this should work?</p>"	2011-10-07 15:49:38.683 UTC	72411531	"<p>Ajax is a good way to pass variables between python and javascript. Javascript:</p> <pre><code> param = {a:'hello', b: 'world', c: '!'}              $.ajax({             type: &quot;post&quot;,             url: &quot;scpi.py&quot;,             cache: false,             async: 'asynchronous',             dataType: 'html',             data: param,             success: function(data) {                 console.log(data)                             },             error: function(request, status, error){                 console.log(&quot;Error: &quot; + error)             }         }) </code></pre> <p>Server.py: (You will need a three functions for this to work)</p> <pre><code>    def do_POST(self):     if &quot;scpi.py&quot; in self.path:         form = cgi.FieldStorage(             fp=self.rfile,             headers=self.headers,             environ={'REQUEST_METHOD': 'POST'}         )         a = form['a'].value         b = form['b'].value         c = form['c'].value          content = myfunction(a, b, c)         self.respond(content)        def handle_http(self, data):     self.send_response(200)     self.send_header('Content-type', 'application/json')     self.end_headers()     print(data)     return bytes(str(data), 'UTF-8')      def respond(self, data):     response = self.handle_http(data)     print(data) </code></pre> <p>FYI: &quot;myfunction(a, b, c,)&quot; is a function from another python file, then return the data and passes to self.respond to send back to javascript</p>"			2022-05-27 22:14:53.257 UTC
7765175	javascript|python|json	Extract javascript variable value from html document with python	"<p>I need to parse an HTML document that contains javascript code with json object.</p>  <p>Something like this:</p>  <pre><code>&lt;html&gt;    &lt;head&gt;    &lt;/head&gt; &lt;body&gt;     &lt;script type=""text/javascript""&gt;         myJSONObject = {""name"": ""steve"", ""city"": ""new york""}     &lt;/script&gt;     &lt;p&gt;Hello World.&lt;/p&gt; &lt;/body&gt; &lt;/html&gt; </code></pre>  <p>How can I extract the myJSONObject value with python?</p>"	2011-10-14 08:48:30.883 UTC	7765260	"<p>You can use <a href=""http://lxml.de/"" rel=""noreferrer"">lxml</a> to parse the HTML, and then extract the JSON:</p>  <pre><code>&gt;&gt;&gt; import lxml.etree,json &gt;&gt;&gt; s = '''&lt;html&gt;&lt;body&gt;&lt;script type=""text/javascript""&gt;              myJSONObject = {""name"": ""steve"", ""city"": ""new york""}            &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;''' &gt;&gt;&gt; js = lxml.etree.HTML(s).find('.//body/script').text &gt;&gt;&gt; jsonCode = js.partition('=')[2].strip() &gt;&gt;&gt; json.loads(jsonCode) {u'city': u'new york', u'name': u'steve'} </code></pre>"			2011-10-14 08:57:37.107 UTC
7781420	javascript|python|django|urllib|pyjamas	Can I find out the result of javascript in Python?	"<p>I'm now making a web crawler.</p>  <p>getting a link from HTML is easy part but acquiring a link from the result of javascript is not easy for me.</p>  <p>Can I get the result of javascript so as to know where a link is referred to?</p>  <p>for example.</p>  <p>How can I retrieve the link to google.com from javascript code in Python?</p>  <pre><code>&lt;!DOCTYPE html&gt; &lt;html lang=""en""&gt;     &lt;head&gt;&lt;/head&gt;     &lt;body&gt;         &lt;a href=""#"" id=""goog""&gt;to google&lt;/a&gt;     &lt;/body&gt;     &lt;script&gt;         document.getElementById('goog').onclick = function() {             window.location = ""http://google.com"";         };      &lt;/script&gt; &lt;/html&gt; </code></pre>"	2011-10-15 23:40:31.613 UTC	7781524	"<p>Python doesn't offer a way to execute the Javascript, which would be a large task, and may not even be what you want, because you won't know how to execute all of the appropriate Javascript.</p>  <p>For the code you showed, you could simply regex the entire thing to get URL-like strings from it, but that could be very ad-hoc and error-prone.</p>"			2011-10-16 00:10:36.683 UTC
7781420	javascript|python|django|urllib|pyjamas	Can I find out the result of javascript in Python?	"<p>I'm now making a web crawler.</p>  <p>getting a link from HTML is easy part but acquiring a link from the result of javascript is not easy for me.</p>  <p>Can I get the result of javascript so as to know where a link is referred to?</p>  <p>for example.</p>  <p>How can I retrieve the link to google.com from javascript code in Python?</p>  <pre><code>&lt;!DOCTYPE html&gt; &lt;html lang=""en""&gt;     &lt;head&gt;&lt;/head&gt;     &lt;body&gt;         &lt;a href=""#"" id=""goog""&gt;to google&lt;/a&gt;     &lt;/body&gt;     &lt;script&gt;         document.getElementById('goog').onclick = function() {             window.location = ""http://google.com"";         };      &lt;/script&gt; &lt;/html&gt; </code></pre>"	2011-10-15 23:40:31.613 UTC	7781709	"<p>You would need to install node.js and run a separate piece of code that executes the Javascript code in context to emit the html. This is possible using <code>jsdom</code> but the key to it is extracting the Javascript code from the HTML page, and setting up the context correctly.</p>"			2011-10-16 01:06:04.01 UTC
7794087	javascript|python|selenium	Running javascript in Selenium using Python	"<p>I am totally new to Selenium. I want to execute a javascript snippet in the following code(as commented in the code), but can't do so. Please help.</p>  <pre><code>from selenium import webdriver import selenium from selenium.common.exceptions import NoSuchElementException from selenium.webdriver.common.keys import Keys import time  patch = raw_input(""Enter patch number\n"") rel = raw_input(""Enter release\n"") plat = raw_input(""Enter port\n"")  browser = webdriver.Firefox()  browser.get(""xxxxxxxxxxxxxxxxx"")  pdtfamily = browser.find_element_by_id(""prodFamilyID"") pdtfamily.send_keys(""Database &amp; Tools"" + Keys.TAB) time.sleep(5)  pdt = browser.find_element_by_id(""productID"") pdt.send_keys(""Intelligent Agent"" + Keys.TAB) time.sleep(5)  pdt1 = browser.find_element_by_id(""patchCacheChkBxID"") pdt1.send_keys(Keys.SPACE) time.sleep(5)  pdt7 =  browser.find_element_by_id(""M__Idf"") pdt7.send_keys(plat)  pdt8 =  browser.find_element_by_id(""M__Idg"") pdt8.send_keys(""American English"")  # Here I want to execute this javascript - ""submitForm('patchCacheAdd',1,{'event':'ok'});return false""  browser.close() </code></pre>  <p>If I use -</p>  <pre><code>selenium.GetEval(""submitForm('patchCacheAdd',1,{'event':'ok'});return false"") </code></pre>  <p>it errors out as -</p>  <pre><code>AttributeError: 'module' object has no attribute 'GetEval'I  </code></pre>"	2011-10-17 12:58:27.22 UTC	7794217	"<p>Try <code>browser.execute_script</code> instead of <code>selenium.GetEval</code>.</p>  <p>See <a href=""https://stackoverflow.com/questions/5585343/getting-the-return-value-of-javascript-code-in-selenium/5585345#5585345"">this answer</a> for example.</p>"			2011-10-17 13:09:07.187 UTC
7794087	javascript|python|selenium	Running javascript in Selenium using Python	"<p>I am totally new to Selenium. I want to execute a javascript snippet in the following code(as commented in the code), but can't do so. Please help.</p>  <pre><code>from selenium import webdriver import selenium from selenium.common.exceptions import NoSuchElementException from selenium.webdriver.common.keys import Keys import time  patch = raw_input(""Enter patch number\n"") rel = raw_input(""Enter release\n"") plat = raw_input(""Enter port\n"")  browser = webdriver.Firefox()  browser.get(""xxxxxxxxxxxxxxxxx"")  pdtfamily = browser.find_element_by_id(""prodFamilyID"") pdtfamily.send_keys(""Database &amp; Tools"" + Keys.TAB) time.sleep(5)  pdt = browser.find_element_by_id(""productID"") pdt.send_keys(""Intelligent Agent"" + Keys.TAB) time.sleep(5)  pdt1 = browser.find_element_by_id(""patchCacheChkBxID"") pdt1.send_keys(Keys.SPACE) time.sleep(5)  pdt7 =  browser.find_element_by_id(""M__Idf"") pdt7.send_keys(plat)  pdt8 =  browser.find_element_by_id(""M__Idg"") pdt8.send_keys(""American English"")  # Here I want to execute this javascript - ""submitForm('patchCacheAdd',1,{'event':'ok'});return false""  browser.close() </code></pre>  <p>If I use -</p>  <pre><code>selenium.GetEval(""submitForm('patchCacheAdd',1,{'event':'ok'});return false"") </code></pre>  <p>it errors out as -</p>  <pre><code>AttributeError: 'module' object has no attribute 'GetEval'I  </code></pre>"	2011-10-17 12:58:27.22 UTC	49758711	"<p>If you move from iframes, you may get lost in your page, best way to execute some jquery without issue (with selenimum/python/gecko):</p>  <pre><code># 1) Get back to the main body page driver.switch_to.default_content()  # 2) Download jquery lib file to your current folder manually &amp; set path here with open('./_lib/jquery-3.3.1.min.js', 'r') as jquery_js:      # 3) Read the jquery from a file     jquery = jquery_js.read()      # 4) Load jquery lib     driver.execute_script(jquery)     # 5) Execute your command      driver.execute_script('$(""#myId"").click()') </code></pre>"			2018-04-10 16:31:51.573 UTC
7794087	javascript|python|selenium	Running javascript in Selenium using Python	"<p>I am totally new to Selenium. I want to execute a javascript snippet in the following code(as commented in the code), but can't do so. Please help.</p>  <pre><code>from selenium import webdriver import selenium from selenium.common.exceptions import NoSuchElementException from selenium.webdriver.common.keys import Keys import time  patch = raw_input(""Enter patch number\n"") rel = raw_input(""Enter release\n"") plat = raw_input(""Enter port\n"")  browser = webdriver.Firefox()  browser.get(""xxxxxxxxxxxxxxxxx"")  pdtfamily = browser.find_element_by_id(""prodFamilyID"") pdtfamily.send_keys(""Database &amp; Tools"" + Keys.TAB) time.sleep(5)  pdt = browser.find_element_by_id(""productID"") pdt.send_keys(""Intelligent Agent"" + Keys.TAB) time.sleep(5)  pdt1 = browser.find_element_by_id(""patchCacheChkBxID"") pdt1.send_keys(Keys.SPACE) time.sleep(5)  pdt7 =  browser.find_element_by_id(""M__Idf"") pdt7.send_keys(plat)  pdt8 =  browser.find_element_by_id(""M__Idg"") pdt8.send_keys(""American English"")  # Here I want to execute this javascript - ""submitForm('patchCacheAdd',1,{'event':'ok'});return false""  browser.close() </code></pre>  <p>If I use -</p>  <pre><code>selenium.GetEval(""submitForm('patchCacheAdd',1,{'event':'ok'});return false"") </code></pre>  <p>it errors out as -</p>  <pre><code>AttributeError: 'module' object has no attribute 'GetEval'I  </code></pre>"	2011-10-17 12:58:27.22 UTC	29273838	"<p>Use <code>execute_script</code>, here's a python example:</p>  <pre><code>from selenium import webdriver driver = webdriver.Firefox() driver.get(""http://stackoverflow.com/questions/7794087/running-javascript-in-selenium-using-python"")  driver.execute_script(""document.getElementsByClassName('comment-user')[0].click()"") </code></pre>"			2015-03-26 08:23:30.397 UTC
7805994	python	What is a more succinct way of converting python boolean to javascript boolean literals?	<p>I want to convert a python boolean into JS's boolean literal. This is what I am working with:</p>  <pre><code>store = dict(vat=True)  if store['vat']:     store.update({'vat': 'true'}) else:     store.update({'vat': 'false'}) </code></pre>  <p>Is there a more less verbose way to replace this code snippet ?</p>	2011-10-18 10:44:14.61 UTC	7806047	<pre><code>&gt;&gt;&gt; store['vat'] = json.dumps(store['vat']) &gt;&gt;&gt; store {'vat': 'true'} </code></pre>			2011-10-18 10:48:36.19 UTC
7805994	python	What is a more succinct way of converting python boolean to javascript boolean literals?	<p>I want to convert a python boolean into JS's boolean literal. This is what I am working with:</p>  <pre><code>store = dict(vat=True)  if store['vat']:     store.update({'vat': 'true'}) else:     store.update({'vat': 'false'}) </code></pre>  <p>Is there a more less verbose way to replace this code snippet ?</p>	2011-10-18 10:44:14.61 UTC	47407090	"<p>In JS a positive integer value is effectively true, and 0 (zero) is false.</p>  <p>You may try passing 0 as a JS false, and 1 as a JS true (do not use negative values)</p>  <pre><code>&gt;1 == true true &gt;0 == true false &gt;0 == false true &gt;1 == false false </code></pre>"			2017-11-21 07:02:13.08 UTC
7895312	javascript|python|lexical|sentence	Javascript or Python: Newline after each sentence	"<p>I'm curious if there's a library for python OR javascript  to tokenize sentences of a string of sentences and put new line at each sentence?</p>  <p>IE:</p>  <pre><code>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vestibulum aliquet leo in urna hendrerit placerat. Donec adipiscing dignissim adipiscing. Duis adipiscing mollis cursus. Etiam fringilla elit nec enim sagittis a auctor nisi gravida. Nunc sollicitudin, leo sit amet consequat pharetra, mi orci vestibulum mi, a suscipit odio tellus tincidunt erat. Suspendisse a consequat turpis. Morbi eget ante leo, a dignissim mi. </code></pre>  <p>to</p>  <pre><code>Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n Vestibulum aliquet leo in urna hendrerit placerat.\n Donec adipiscing dignissim adipiscing. \n Duis adipiscing mollis cursus. Etiam fringilla elit nec enim sagittis a auctor nisi gravida. Nunc sollicitudin, leo sit amet consequat pharetra, mi orci vestibulum mi, a suscipit odio tellus tincidunt erat. \n Suspendisse a consequat turpis. \n Morbi eget ante leo, a dignissim mi. </code></pre>"	2011-10-25 20:15:51.77 UTC	7895491	"<p>If you're just looking for javascript that would do that, you could do this:</p>  <pre><code>var str = ""Lorem ipsum 4.00 dolor sit amet, consectetur adipiscing elit. Vestibulum aliquet leo in urna hendrerit placerat. Donec adipiscing dignissim adipiscing. Duis adipiscing mollis cursus. Etiam fringilla elit nec enim sagittis a auctor nisi gravida. Nunc etc.... sollicitudin, leo sit amet consequat pharetra, mi orci vestibulum mi, a suscipit odio tellus tincidunt erat. Suspendisse a consequat turpis. Morbi eget ante leo, a dignissim mi.""  str = str.replace(/(\S\.)\s*([A-Z])/g, ""$1\n$2""); </code></pre>  <p>You can see it work here: <a href=""http://jsfiddle.net/jfriend00/NR5Nc/"" rel=""nofollow"">http://jsfiddle.net/jfriend00/NR5Nc/</a>.</p>  <p>This particular algorithm only adds a newline if it's a non white space followed by a period followed by whitespace followed by a capital letter.  So, it's safe from things like <code>$4.00</code> and <code>etc...</code> which don't actually end lines.  It's also flexible on the amount of whitespace between lines.</p>"			2011-10-25 20:30:54.333 UTC
7895312	javascript|python|lexical|sentence	Javascript or Python: Newline after each sentence	"<p>I'm curious if there's a library for python OR javascript  to tokenize sentences of a string of sentences and put new line at each sentence?</p>  <p>IE:</p>  <pre><code>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vestibulum aliquet leo in urna hendrerit placerat. Donec adipiscing dignissim adipiscing. Duis adipiscing mollis cursus. Etiam fringilla elit nec enim sagittis a auctor nisi gravida. Nunc sollicitudin, leo sit amet consequat pharetra, mi orci vestibulum mi, a suscipit odio tellus tincidunt erat. Suspendisse a consequat turpis. Morbi eget ante leo, a dignissim mi. </code></pre>  <p>to</p>  <pre><code>Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n Vestibulum aliquet leo in urna hendrerit placerat.\n Donec adipiscing dignissim adipiscing. \n Duis adipiscing mollis cursus. Etiam fringilla elit nec enim sagittis a auctor nisi gravida. Nunc sollicitudin, leo sit amet consequat pharetra, mi orci vestibulum mi, a suscipit odio tellus tincidunt erat. \n Suspendisse a consequat turpis. \n Morbi eget ante leo, a dignissim mi. </code></pre>"	2011-10-25 20:15:51.77 UTC	7895331	"<p>You are looking for a natural language library.</p>  <p>For Python there is <a href=""http://www.nltk.org/"" rel=""nofollow"">Natural Language Toolkit</a> (NLTK). For example you could take a look at the <a href=""http://nltk.googlecode.com/svn/trunk/doc/api/nltk.tokenize.punkt.PunktSentenceTokenizer-class.html"" rel=""nofollow""><code>PunktSentenceTokenizer</code></a>.</p>  <blockquote>   <p>The PunktSentenceTokenizer divides a text into a list of sentences, by using an unsupervised algorithm to build a model for abbreviation words, collocations, and words that start sentences. It must be trained on a large collection of plaintext in the taret language before it can be used. The algorithm for this tokenizer is described in Kiss &amp; Strunk (2006):</p>      <p>Kiss, Tibor and Strunk, Jan (2006): Unsupervised Multilingual Sentence    Boundary Detection.  Computational Linguistics 32: 485-525.</p>      <p>The NLTK data package includes a pre-trained Punkt tokenizer for English.</p> </blockquote>"			2011-10-25 20:18:02.643 UTC
7895312	javascript|python|lexical|sentence	Javascript or Python: Newline after each sentence	"<p>I'm curious if there's a library for python OR javascript  to tokenize sentences of a string of sentences and put new line at each sentence?</p>  <p>IE:</p>  <pre><code>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vestibulum aliquet leo in urna hendrerit placerat. Donec adipiscing dignissim adipiscing. Duis adipiscing mollis cursus. Etiam fringilla elit nec enim sagittis a auctor nisi gravida. Nunc sollicitudin, leo sit amet consequat pharetra, mi orci vestibulum mi, a suscipit odio tellus tincidunt erat. Suspendisse a consequat turpis. Morbi eget ante leo, a dignissim mi. </code></pre>  <p>to</p>  <pre><code>Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n Vestibulum aliquet leo in urna hendrerit placerat.\n Donec adipiscing dignissim adipiscing. \n Duis adipiscing mollis cursus. Etiam fringilla elit nec enim sagittis a auctor nisi gravida. Nunc sollicitudin, leo sit amet consequat pharetra, mi orci vestibulum mi, a suscipit odio tellus tincidunt erat. \n Suspendisse a consequat turpis. \n Morbi eget ante leo, a dignissim mi. </code></pre>"	2011-10-25 20:15:51.77 UTC	7895403	"<p>In Python, use <em>str.replace()</em>:</p>  <pre><code>&gt;&gt;&gt; s = ""Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vestibulum aliquet leo in urna hendrerit placerat. Donec adipiscing dignissim adipiscing. Duis adipiscing mollis cursus. Etiam fringilla elit nec enim sagittis a auctor nisi gravida. Nunc sollicitudin, leo sit amet consequat pharetra, mi orci vestibulum mi, a suscipit odio tellus tincidunt erat. Suspendisse a consequat turpis. Morbi eget ante leo, a dignissim mi."" &gt;&gt;&gt; print s.replace('. ', '.\n') Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vestibulum aliquet leo in urna hendrerit placerat. Donec adipiscing dignissim adipiscing. Duis adipiscing mollis cursus. Etiam fringilla elit nec enim sagittis a auctor nisi gravida. Nunc sollicitudin, leo sit amet consequat pharetra, mi orci vestibulum mi, a suscipit odio tellus tincidunt erat. Suspendisse a consequat turpis. Morbi eget ante leo, a dignissim mi. </code></pre>  <p>Also, you make be interested in the <a href=""http://docs.python.org/library/textwrap.html#module-textwrap"" rel=""nofollow"">textwrap module</a>.</p>"			2011-10-25 20:24:59.577 UTC
7932210	javascript|python|hex	"Equivalent of python's int('hex-string', 16) in Javascript?"	"<blockquote>   <p><strong>Possible Duplicate:</strong><br>   <a href=""https://stackoverflow.com/questions/57803/how-to-convert-decimal-to-hex-in-javascript"">How to convert decimal to hex in JavaScript?</a>  </p> </blockquote>    <p>Is there an equivalent of python's int('hex-string', 16) function in Javascript?</p>"	2011-10-28 16:42:27.093 UTC	7932229	"<p>You can use <a href=""https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/parseInt"" rel=""noreferrer"">parseInt()</a>:</p>  <pre><code>var result = parseInt(""0x42"", 16);  // 66 </code></pre>"			2011-10-28 16:44:15.037 UTC
7965863	javascript|python	Is there any possible way to embedd javascript in python for windows?	"<p>I've searched high and low for a solution to this and I've also gone through <a href=""https://stackoverflow.com/questions/1764674/how-to-execute-javascript-from-python-on-windows"">How to execute Javascript from Python on Windows?</a> but it was asked a while ago. In the meantime has the world come up with a better solution? And no python-spidermonkey does not work for windows. Anyone successful in having embedded javascript into python?</p>  <p>Alternatively,if developed using some available libraries like python-spidermonkey on Linux ,is there a way in which the end product could be made to run on Windows?</p>  <p>EDIT:Have also been to Pydermonkey but stop short in the build process with the following error</p>  <pre><code>---&gt; pavement.build ---&gt; pavement.build_spidermonkey Running configure.   Captured Task Output: ---------------------  ---&gt; pavement.build ---&gt; pavement.build_spidermonkey Traceback (most recent call last): File ""F:\Ashwin\Sutta-app\Embedding python\python-spidermonkey-0.0.10\pydermonkey0.0.6\python-modules\paver\tasks.py"", line 164, in _run_task return do_task() File ""F:\Ashwin\Sutta-app\Embedding python\python-spidermonkey-0.0.10\pydermonkey-0.0.6\python-modules\paver\tasks.py"", line 160, in do_task task() File ""F:\Ashwin\Sutta-app\Embedding python\python-spidermonkey-0.0.10\pydermonkey-0.0.6\python-modules\paver\tasks.py"", line 241, in __call__ retval = environment._run_task(self.name, self.needs, self.func) File ""F:\Ashwin\Sutta-app\Embedding python\python-spidermonkey-0.0.10\pydermonkey-0.0.6\python-modules\paver\tasks.py"", line 181, in _run_task return do_task() File ""F:\Ashwin\Sutta-app\Embedding python\python-spidermonkey-0.0.10\pydermonkey-0.0.6\python-modules\paver\tasks.py"", line 161, in do_task return func(**kw) File ""F:\Ashwin\Sutta-app\Embedding python\python-spidermonkey-0.0.10\pydermonkey-0.0.6\setup.py"", line 168, in build_spidermonkey popen = subprocess.Popen([os.environ['SHELL'], '-c', 'pwd'], File ""C:\Python27\lib\os.py"", line 423, in __getitem__ return self.data[key.upper()] KeyError: 'SHELL' </code></pre>  <p>Cheers !</p>"	2011-11-01 11:39:34.987 UTC	7965927	"<p>Check out PyV8: <a href=""http://code.google.com/p/pyv8/"" rel=""nofollow"">http://code.google.com/p/pyv8/</a></p>"			2011-11-01 11:47:11.35 UTC
7967575	python|html|css|user-interface	HTML/Javascript/CSS GUI for the development of desktop applications with python?	<p>I wonder if there's a python GUI like pyqt etc. which works purely with html and javascript for layouting desktop applications...</p>  <p>Do you know if there are projects like this? Does this make sense at all ;-) Or it it just me finding that a nice tool... </p>	2011-11-01 13:59:21.993 UTC	7967652	"<p>Since you mention PyQt yourself, you could perhaps just create a simple GUI using these tools, with your entire application made up of a <code>QtWebKit</code> module. Then just point to some files you created locally, and browse them using your appliction? But, this would not be any different compared to using a normal browser, so there's not really any point in doing this in my opinion...</p>"			2011-11-01 14:04:27.277 UTC
7967575	python|html|css|user-interface	HTML/Javascript/CSS GUI for the development of desktop applications with python?	<p>I wonder if there's a python GUI like pyqt etc. which works purely with html and javascript for layouting desktop applications...</p>  <p>Do you know if there are projects like this? Does this make sense at all ;-) Or it it just me finding that a nice tool... </p>	2011-11-01 13:59:21.993 UTC	7967656	"<p>you could always use django, django templates support html, js, css, php etc. </p>"			2011-11-01 14:04:50.723 UTC
7967575	python|html|css|user-interface	HTML/Javascript/CSS GUI for the development of desktop applications with python?	<p>I wonder if there's a python GUI like pyqt etc. which works purely with html and javascript for layouting desktop applications...</p>  <p>Do you know if there are projects like this? Does this make sense at all ;-) Or it it just me finding that a nice tool... </p>	2011-11-01 13:59:21.993 UTC	7967636	"<p>If it were Python-based but had nothing to do with Python, would you really care if it wasn't Python based?</p>  <p>Anyways, yes, a project exists. A pretty big one too. It's called <a href=""https://developer.mozilla.org/en/XULRunner"" rel=""noreferrer"">XULRunner</a>. The project is maintained by Mozilla and is used for the GUI of every Mozilla program.</p>  <p>It features an XML-based syntax (XUL):</p>  <pre><code>&lt;?xml version=""1.0""?&gt;  &lt;?xml-stylesheet href=""chrome://global/skin/"" type=""text/css""?&gt;  &lt;window id=""main"" title=""My App"" width=""300"" height=""300"" xmlns=""http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul""&gt;    &lt;script type=""application/javascript"" src=""chrome://myapp/content/main.js""/&gt;    &lt;caption label=""Hello World""/&gt;   &lt;separator/&gt;   &lt;button label=""More &gt;&gt;"" oncommand=""showMore();""/&gt;   &lt;separator/&gt;   &lt;description id=""more-text"" hidden=""true""&gt;This is a simple XULRunner application. XUL is simple to use and quite powerful and can even be used on mobile devices.&lt;/description&gt;  &lt;/window&gt; </code></pre>  <p>And JavaScript:</p>  <pre><code>function showMore() {   document.getElementById(""more-text"").hidden = false; } </code></pre>  <p>You can even embed Python scripts, it seems, into your code: <a href=""http://pyxpcomext.mozdev.org/no_wrap/tutorials/pyxulrunner/python_xulrunner_about.html"" rel=""noreferrer"">http://pyxpcomext.mozdev.org/no_wrap/tutorials/pyxulrunner/python_xulrunner_about.html</a></p>"			2011-11-01 14:03:14.317 UTC
8049520	javascript|python|web-scraping|python-2.x	Web-scraping JavaScript page with Python	"<p>I'm trying to develop a simple web scraper. I want to extract text without the HTML code. It works on plain HTML, but not in some pages where JavaScript code adds text.</p> <p>For example, if some JavaScript code adds some text, I can't see it, because when I call:</p> <pre><code>response = urllib2.urlopen(request) </code></pre> <p>I get the original text without the added one (because JavaScript is executed in the client).</p> <p>So, I'm looking for some ideas to solve this problem.</p>"	2011-11-08 11:13:51.67 UTC	36534985	"<p>This seems to be a good solution also, taken from a <a href=""https://impythonist.wordpress.com/2015/01/06/ultimate-guide-for-scraping-javascript-rendered-web-pages/"" rel=""noreferrer"">great blog post</a></p>  <pre><code>import sys   from PyQt4.QtGui import *   from PyQt4.QtCore import *   from PyQt4.QtWebKit import *   from lxml import html   #Take this class for granted.Just use result of rendering. class Render(QWebPage):     def __init__(self, url):       self.app = QApplication(sys.argv)       QWebPage.__init__(self)       self.loadFinished.connect(self._loadFinished)       self.mainFrame().load(QUrl(url))       self.app.exec_()      def _loadFinished(self, result):       self.frame = self.mainFrame()       self.app.quit()    url = 'http://pycoders.com/archive/'   r = Render(url)   result = r.frame.toHtml() # This step is important.Converting QString to Ascii for lxml to process  # The following returns an lxml element tree archive_links = html.fromstring(str(result.toAscii())) print archive_links  # The following returns an array containing the URLs raw_links = archive_links.xpath('//div[@class=""campaign""]/a/@href') print raw_links </code></pre>"			2016-04-10 20:12:07.713 UTC
8049520	javascript|python|web-scraping|python-2.x	Web-scraping JavaScript page with Python	"<p>I'm trying to develop a simple web scraper. I want to extract text without the HTML code. It works on plain HTML, but not in some pages where JavaScript code adds text.</p> <p>For example, if some JavaScript code adds some text, I can't see it, because when I call:</p> <pre><code>response = urllib2.urlopen(request) </code></pre> <p>I get the original text without the added one (because JavaScript is executed in the client).</p> <p>So, I'm looking for some ideas to solve this problem.</p>"	2011-11-08 11:13:51.67 UTC	36619019	"<p>Maybe <a href=""http://www.seleniumhq.org/"">selenium</a> can do it.</p>  <pre><code>from selenium import webdriver import time  driver = webdriver.Firefox() driver.get(url) time.sleep(5) htmlSource = driver.page_source </code></pre>"			2016-04-14 09:31:25.637 UTC
8049520	javascript|python|web-scraping|python-2.x	Web-scraping JavaScript page with Python	"<p>I'm trying to develop a simple web scraper. I want to extract text without the HTML code. It works on plain HTML, but not in some pages where JavaScript code adds text.</p> <p>For example, if some JavaScript code adds some text, I can't see it, because when I call:</p> <pre><code>response = urllib2.urlopen(request) </code></pre> <p>I get the original text without the added one (because JavaScript is executed in the client).</p> <p>So, I'm looking for some ideas to solve this problem.</p>"	2011-11-08 11:13:51.67 UTC	8049625	"<p>It sounds like the data you're really looking for can be accessed via secondary URL called by some javascript on the primary page.</p>  <p>While you could try running javascript on the server to handle this, a simpler approach  to might be to load up the page using Firefox and use a tool like <a href=""http://www.google.co.uk/url?sa=t&amp;rct=j&amp;q=charles&amp;source=web&amp;cd=1&amp;ved=0CC4QFjAA&amp;url=http://www.charlesproxy.com/&amp;ei=FBC5TpyZC9Ha4QSD7umcCA&amp;usg=AFQjCNG_O70VsRrfb_q7F66Nkb9ZK6MNMA"" rel=""noreferrer"">Charles</a> or <a href=""http://www.google.co.uk/url?sa=t&amp;rct=j&amp;q=firebug&amp;source=web&amp;cd=1&amp;ved=0CDEQFjAA&amp;url=http://getfirebug.com/&amp;ei=TBC5TuOPIbKQ4gTk7J3vBw&amp;usg=AFQjCNGT1rhhsYGPQx5Vr5A8RvhIgdSp9g"" rel=""noreferrer"">Firebug</a> to identify exactly what that secondary URL is. Then you can just query that URL directly for the data you are interested in.</p>"			2011-11-08 11:23:50.23 UTC
8049520	javascript|python|web-scraping|python-2.x	Web-scraping JavaScript page with Python	"<p>I'm trying to develop a simple web scraper. I want to extract text without the HTML code. It works on plain HTML, but not in some pages where JavaScript code adds text.</p> <p>For example, if some JavaScript code adds some text, I can't see it, because when I call:</p> <pre><code>response = urllib2.urlopen(request) </code></pre> <p>I get the original text without the added one (because JavaScript is executed in the client).</p> <p>So, I'm looking for some ideas to solve this problem.</p>"	2011-11-08 11:13:51.67 UTC	48328276	"<p>Selenium is the best for scraping JS and Ajax content.</p>  <p>Check this article for <a href=""https://likegeeks.com/python-web-scraping/"" rel=""noreferrer"">extracting data from the web using Python</a></p>  <pre><code>$ pip install selenium </code></pre>  <p>Then download Chrome webdriver.</p>  <pre><code>from selenium import webdriver  browser = webdriver.Chrome()  browser.get(""https://www.python.org/"")  nav = browser.find_element_by_id(""mainnav"")  print(nav.text) </code></pre>  <p>Easy, right?</p>"			2018-01-18 18:45:27.347 UTC
8049520	javascript|python|web-scraping|python-2.x	Web-scraping JavaScript page with Python	"<p>I'm trying to develop a simple web scraper. I want to extract text without the HTML code. It works on plain HTML, but not in some pages where JavaScript code adds text.</p> <p>For example, if some JavaScript code adds some text, I can't see it, because when I call:</p> <pre><code>response = urllib2.urlopen(request) </code></pre> <p>I get the original text without the added one (because JavaScript is executed in the client).</p> <p>So, I'm looking for some ideas to solve this problem.</p>"	2011-11-08 11:13:51.67 UTC	66878732	"<h2>Try accessing the API directly</h2> <p>A common scenario you'll see in scraping is that the data is being requested asynchronously from an API endpoint by the webpage. A minimal example of this would be the following site:</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-html lang-html prettyprint-override""><code>&lt;body&gt; &lt;script&gt; fetch(""https://jsonplaceholder.typicode.com/posts/1"")   .then(res =&gt; {     if (!res.ok) throw Error(res.status);          return res.json();   })   .then(data =&gt; {     // inject data dynamically via JS after page load     document.body.innerText = data.title;   })   .catch(err =&gt; console.error(err)) ; &lt;/script&gt; &lt;/body&gt;</code></pre> </div> </div> </p> <p>In many cases, the API will be protected by CORS or an access token or prohibitively rate limited, but in other cases it's publicly-accessible and you can bypass the website entirely. For CORS issues, you might try <a href=""https://stackoverflow.com/questions/29670703/how-to-use-cors-anywhere-to-reverse-proxy-and-add-cors-headers"">cors-anywhere</a>.</p> <p>The general procedure is to use your browser's developer tools' network tab to search the requests made by the page for keywords/substrings of the data you want to scrape. Often, you'll see an unprotected API request endpoint with a JSON payload that you can access directly with <code>urllib</code> or <code>requests</code> modules. That's the case with the above runnable snippet which you can use to practice. After clicking &quot;run snippet&quot;, here's how I found the endpoint in my network tab:</p> <p><a href=""https://i.stack.imgur.com/EOxkc.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/EOxkc.png"" alt=""example network tab showing remote URL endpoint found with a search"" /></a></p> <p>This example is contrived; the endpoint URL will likely be non-obvious from looking at the static markup because it could be dynamically assembled, minified and buried under dozens of other requests and endpoints. The network request will also show any relevant request payload details like access token you may need.</p> <p>After obtaining the endpoint URL and relevant details, build a request in Python using a standard HTTP library and request the data:</p> <pre><code>&gt;&gt;&gt; import requests &gt;&gt;&gt; res = requests.get(&quot;https://jsonplaceholder.typicode.com/posts/1&quot;) &gt;&gt;&gt; data = res.json() &gt;&gt;&gt; data[&quot;title&quot;] 'sunt aut facere repellat provident occaecati excepturi optio reprehenderit' </code></pre> <p>When you can get away with it, this tends to be much easier, faster and more reliable than scraping the page with Selenium, Pyppeteer, Scrapy or whatever the popular scraping libraries are at the time you're reading this post.</p> <p>If you're unlucky and the data hasn't arrived via an API request that returns the data in a nice format, it could be part of the original browser's payload in a <code>&lt;script&gt;</code> tag, either as a JSON string or (more likely) a JS object. For example:</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-html lang-html prettyprint-override""><code>&lt;body&gt; &lt;script&gt;   var someHardcodedData = {     userId: 1,     id: 1,     title: 'sunt aut facere repellat provident occaecati excepturi optio reprehenderit',      body: 'quia et suscipit\nsuscipit recusandae con sequuntur expedita et cum\nreprehenderit molestiae ut ut quas totam\nnostrum rerum est autem sunt rem eveniet architecto'   };   document.body.textContent = someHardcodedData.title; &lt;/script&gt; &lt;/body&gt;</code></pre> </div> </div> </p> <p>There's no one-size-fits-all way to obtain this data. The basic technique is to use BeautifulSoup to access the <code>&lt;script&gt;</code> tag text, then apply a regex or a parse to extract the object structure, JSON string, or whatever format the data might be in. Here's a proof-of-concept on the sample structure shown above:</p> <pre class=""lang-py prettyprint-override""><code>import json import re from bs4 import BeautifulSoup  # pretend we've already used requests to retrieve the data,  # so we hardcode it for the purposes of this example text = &quot;&quot;&quot; &lt;body&gt; &lt;script&gt;   var someHardcodedData = {     userId: 1,     id: 1,     title: 'sunt aut facere repellat provident occaecati excepturi optio reprehenderit',      body: 'quia et suscipit\nsuscipit recusandae con sequuntur expedita et cum\nreprehenderit molestiae ut ut quas totam\nnostrum rerum est autem sunt rem eveniet architecto'   };   document.body.textContent = someHardcodedData.title; &lt;/script&gt; &lt;/body&gt; &quot;&quot;&quot; soup = BeautifulSoup(text, &quot;lxml&quot;) script_text = str(soup.select_one(&quot;script&quot;)) pattern = r&quot;title: '(.*?)'&quot; print(re.search(pattern, script_text, re.S).group(1)) </code></pre> <p>Check out these resources for parsing JS objects that aren't quite valid JSON:</p> <ul> <li><a href=""https://stackoverflow.com/questions/24027589/how-to-convert-raw-javascript-object-to-python-dictionary"">How to convert raw javascript object to python dictionary?</a></li> <li><a href=""https://stackoverflow.com/questions/50947760/how-to-fix-json-key-values-without-double-quotes"">How to Fix JSON Key Values without double-quotes?</a></li> </ul> <p>Here are some additional case studies/proofs-of-concept where scraping was bypassed using an API:</p> <ul> <li><a href=""https://stackoverflow.com/questions/69801378/how-can-i-scrape-yelp-reviews-and-star-ratings-into-csv-using-python-beautifulso?noredirect=1#comment123391238_69801378"">How can I scrape yelp reviews and star ratings into CSV using Python beautifulsoup</a></li> <li><a href=""https://stackoverflow.com/a/59378253/6243352"">Beautiful Soup returns None on existing element</a></li> <li><a href=""https://stackoverflow.com/a/65905956/6243352"">Extract data from  BeautifulSoup Python</a></li> <li><a href=""https://stackoverflow.com/a/64419449/6243352"">Scraping Bandcamp fan collections via POST</a> (uses a hybrid approach where an initial request was made to the website to extract a token from the markup using BeautifulSoup which was then used in a second request to a JSON endpoint)</li> </ul> <p>If all else fails, try one of the many dynamic scraping libraries listed in this thread.</p>"			2021-03-30 21:30:58.36 UTC
8049520	javascript|python|web-scraping|python-2.x	Web-scraping JavaScript page with Python	"<p>I'm trying to develop a simple web scraper. I want to extract text without the HTML code. It works on plain HTML, but not in some pages where JavaScript code adds text.</p> <p>For example, if some JavaScript code adds some text, I can't see it, because when I call:</p> <pre><code>response = urllib2.urlopen(request) </code></pre> <p>I get the original text without the added one (because JavaScript is executed in the client).</p> <p>So, I'm looking for some ideas to solve this problem.</p>"	2011-11-08 11:13:51.67 UTC	66878748	"<h2>Pyppeteer</h2> <p>You might consider <a href=""https://github.com/pyppeteer/pyppeteer"" rel=""nofollow noreferrer"">Pyppeteer</a>, a Python port of the Chrome/Chromium driver front-end <a href=""https://github.com/puppeteer/puppeteer/"" rel=""nofollow noreferrer"">Puppeteer</a>.</p> <p>Here's a simple example to show how you can use Pyppeteer to access data that was injected into the page dynamically:</p> <pre><code>import asyncio from pyppeteer import launch  async def main():     browser = await launch({&quot;headless&quot;: True})     [page] = await browser.pages()      # normally, you go to a live site...     #await page.goto(&quot;http://www.example.com&quot;)     # but for this example, just set the HTML directly:     await page.setContent(&quot;&quot;&quot;     &lt;body&gt;     &lt;script&gt;     // inject content dynamically with JS, not part of the static HTML!     document.body.innerHTML = `&lt;p&gt;hello world&lt;/p&gt;`;      &lt;/script&gt;     &lt;/body&gt;     &quot;&quot;&quot;)     print(await page.content()) # shows that the `&lt;p&gt;` was inserted      # evaluate a JS expression in browser context and scrape the data     expr = &quot;document.querySelector('p').textContent&quot;     print(await page.evaluate(expr, force_expr=True)) # =&gt; hello world      await browser.close()  asyncio.get_event_loop().run_until_complete(main()) </code></pre> <p>See <a href=""https://pyppeteer.github.io/pyppeteer/reference.html"" rel=""nofollow noreferrer"">Pyppeteer's reference docs</a>.</p>"			2021-03-30 21:32:38.907 UTC
8049520	javascript|python|web-scraping|python-2.x	Web-scraping JavaScript page with Python	"<p>I'm trying to develop a simple web scraper. I want to extract text without the HTML code. It works on plain HTML, but not in some pages where JavaScript code adds text.</p> <p>For example, if some JavaScript code adds some text, I can't see it, because when I call:</p> <pre><code>response = urllib2.urlopen(request) </code></pre> <p>I get the original text without the added one (because JavaScript is executed in the client).</p> <p>So, I'm looking for some ideas to solve this problem.</p>"	2011-11-08 11:13:51.67 UTC	49865035	"<p>If you have ever used the <code>Requests</code> module for python before, I recently found out that the developer created a new module called <code>Requests-HTML</code> which now also has the ability to render JavaScript.</p>  <p>You can also visit <a href=""https://html.python-requests.org/"" rel=""noreferrer"">https://html.python-requests.org/</a> to learn more about this module, or if your only interested about rendering JavaScript then you can visit <a href=""https://html.python-requests.org/?#javascript-support"" rel=""noreferrer"">https://html.python-requests.org/?#javascript-support</a> to directly learn how to use the module to render JavaScript using Python.</p>  <p>Essentially, Once you correctly install the <code>Requests-HTML</code> module, the following example, which is <a href=""https://html.python-requests.org/?#javascript-support"" rel=""noreferrer"">shown on the above link</a>, shows how you can use this module to scrape a website and render JavaScript contained within the website:</p>  <pre><code>from requests_html import HTMLSession session = HTMLSession()  r = session.get('http://python-requests.org/')  r.html.render()  r.html.search('Python 2 will retire in only {months} months!')['months']  '&lt;time&gt;25&lt;/time&gt;' #This is the result. </code></pre>  <p>I recently learnt about this from a YouTube video. <a href=""https://www.youtube.com/watch?v=gKT_tg87H5Y"" rel=""noreferrer"">Click Here!</a> to watch the YouTube video, which demonstrates how the module works.</p>"			2018-04-16 19:40:44.69 UTC
8049520	javascript|python|web-scraping|python-2.x	Web-scraping JavaScript page with Python	"<p>I'm trying to develop a simple web scraper. I want to extract text without the HTML code. It works on plain HTML, but not in some pages where JavaScript code adds text.</p> <p>For example, if some JavaScript code adds some text, I can't see it, because when I call:</p> <pre><code>response = urllib2.urlopen(request) </code></pre> <p>I get the original text without the added one (because JavaScript is executed in the client).</p> <p>So, I'm looking for some ideas to solve this problem.</p>"	2011-11-08 11:13:51.67 UTC	67998295	"<p><strong>Easy and Quick Solution:</strong></p> <p>I was dealing with same problem. I want to scrape some data which is build with JavaScript. If I scrape only text from this site with BeautifulSoup then I ended with  tags in text. I want to render this  tag and wills to grab information from this. Also, I dont want to use heavy frameworks  like Scrapy and selenium.</p> <p>So, I found that <strong>get</strong> method of requests <strong>module</strong> takes urls, and it actually renders the script tag.</p> <p>Example:</p> <pre><code>import requests custom_User_agent = &quot;Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:47.0) Gecko/20100101 Firefox/47.0&quot; url = &quot;https://www.abc.xyz/your/url&quot; response = requests.get(url, headers={&quot;User-Agent&quot;: custom_User_agent}) html_text = response.text </code></pre> <p>This will renders load site and renders  tags.</p> <p>Hope this will help as quick and easy solution to render site which is loaded with script tags.</p>"			2021-06-16 07:34:26.503 UTC
8049520	javascript|python|web-scraping|python-2.x	Web-scraping JavaScript page with Python	"<p>I'm trying to develop a simple web scraper. I want to extract text without the HTML code. It works on plain HTML, but not in some pages where JavaScript code adds text.</p> <p>For example, if some JavaScript code adds some text, I can't see it, because when I call:</p> <pre><code>response = urllib2.urlopen(request) </code></pre> <p>I get the original text without the added one (because JavaScript is executed in the client).</p> <p>So, I'm looking for some ideas to solve this problem.</p>"	2011-11-08 11:13:51.67 UTC	71550360	"<h2>Playwright-Python</h2> <p>Yet another option is <a href=""https://github.com/microsoft/playwright-python"" rel=""nofollow noreferrer""><code>playwright-python</code></a>, a port of Microsoft's Playwright (itself a Puppeteer-influenced browser automation library) to Python.</p> <p>Here's the minimal example of selecting an element and grabbing its text:</p> <pre><code>from playwright.sync_api import sync_playwright  with sync_playwright() as p:     browser = p.chromium.launch()     page = browser.new_page()     page.goto(&quot;http://whatsmyuseragent.org/&quot;)     ua = page.query_selector(&quot;.user-agent&quot;);     print(ua.text_content())     browser.close() </code></pre>"			2022-03-20 20:21:29.15 UTC
8049520	javascript|python|web-scraping|python-2.x	Web-scraping JavaScript page with Python	"<p>I'm trying to develop a simple web scraper. I want to extract text without the HTML code. It works on plain HTML, but not in some pages where JavaScript code adds text.</p> <p>For example, if some JavaScript code adds some text, I can't see it, because when I call:</p> <pre><code>response = urllib2.urlopen(request) </code></pre> <p>I get the original text without the added one (because JavaScript is executed in the client).</p> <p>So, I'm looking for some ideas to solve this problem.</p>"	2011-11-08 11:13:51.67 UTC	50612038	"<p>I personally prefer using scrapy and selenium and dockerizing both in separate containers. This way you can install both with minimal hassle and crawl modern websites that almost all contain javascript in one form or another. Here's an example:</p>  <p>Use the <code>scrapy startproject</code> to create your scraper and write your spider, the skeleton can be as simple as this:</p>  <pre><code>import scrapy   class MySpider(scrapy.Spider):     name = 'my_spider'     start_urls = ['https://somewhere.com']      def start_requests(self):         yield scrapy.Request(url=self.start_urls[0])       def parse(self, response):          # do stuff with results, scrape items etc.         # now were just checking everything worked          print(response.body) </code></pre>  <p>The real magic happens in the middlewares.py. Overwrite two methods in the downloader middleware,  <code>__init__</code> and  <code>process_request</code>, in the following way:</p>  <pre><code># import some additional modules that we need import os from copy import deepcopy from time import sleep  from scrapy import signals from scrapy.http import HtmlResponse from selenium import webdriver  class SampleProjectDownloaderMiddleware(object):  def __init__(self):     SELENIUM_LOCATION = os.environ.get('SELENIUM_LOCATION', 'NOT_HERE')     SELENIUM_URL = f'http://{SELENIUM_LOCATION}:4444/wd/hub'     chrome_options = webdriver.ChromeOptions()      # chrome_options.add_experimental_option(""mobileEmulation"", mobile_emulation)     self.driver = webdriver.Remote(command_executor=SELENIUM_URL,                                    desired_capabilities=chrome_options.to_capabilities())   def process_request(self, request, spider):      self.driver.get(request.url)      # sleep a bit so the page has time to load     # or monitor items on page to continue as soon as page ready     sleep(4)      # if you need to manipulate the page content like clicking and scrolling, you do it here     # self.driver.find_element_by_css_selector('.my-class').click()      # you only need the now properly and completely rendered html from your page to get results     body = deepcopy(self.driver.page_source)      # copy the current url in case of redirects     url = deepcopy(self.driver.current_url)      return HtmlResponse(url, body=body, encoding='utf-8', request=request) </code></pre>  <p>Dont forget to enable this middlware by uncommenting the next lines in the settings.py file:</p>  <pre><code>DOWNLOADER_MIDDLEWARES = { 'sample_project.middlewares.SampleProjectDownloaderMiddleware': 543,} </code></pre>  <p>Next for dockerization. Create your <code>Dockerfile</code> from a lightweight image (I'm using python Alpine here), copy your project directory to it, install requirements:</p>  <pre><code># Use an official Python runtime as a parent image FROM python:3.6-alpine  # install some packages necessary to scrapy and then curl because it's  handy for debugging RUN apk --update add linux-headers libffi-dev openssl-dev build-base libxslt-dev libxml2-dev curl python-dev  WORKDIR /my_scraper  ADD requirements.txt /my_scraper/  RUN pip install -r requirements.txt  ADD . /scrapers </code></pre>  <p>And finally bring it all together in <code>docker-compose.yaml</code>:</p>  <pre><code>version: '2' services:   selenium:     image: selenium/standalone-chrome     ports:       - ""4444:4444""     shm_size: 1G    my_scraper:     build: .     depends_on:       - ""selenium""     environment:       - SELENIUM_LOCATION=samplecrawler_selenium_1     volumes:       - .:/my_scraper     # use this command to keep the container running     command: tail -f /dev/null </code></pre>  <p>Run <code>docker-compose up -d</code>. If you're doing this the first time it will take a while for it to fetch the latest selenium/standalone-chrome and the build your scraper image as well. </p>  <p>Once it's done, you can check that your containers are running with <code>docker ps</code> and also check that the name of the selenium container matches that of the environment variable that we passed to our scraper container (here, it was <code>SELENIUM_LOCATION=samplecrawler_selenium_1</code>). </p>  <p>Enter your scraper container with <code>docker exec -ti YOUR_CONTAINER_NAME sh</code> , the command for me was <code>docker exec -ti samplecrawler_my_scraper_1 sh</code>, cd into the right directory and run your scraper with <code>scrapy crawl my_spider</code>.</p>  <p>The entire thing is on my github page and you can get it from <a href=""https://github.com/tarikki/sample_crawler"" rel=""noreferrer"">here</a></p>"			2018-05-30 19:21:37.687 UTC
8049520	javascript|python|web-scraping|python-2.x	Web-scraping JavaScript page with Python	"<p>I'm trying to develop a simple web scraper. I want to extract text without the HTML code. It works on plain HTML, but not in some pages where JavaScript code adds text.</p> <p>For example, if some JavaScript code adds some text, I can't see it, because when I call:</p> <pre><code>response = urllib2.urlopen(request) </code></pre> <p>I get the original text without the added one (because JavaScript is executed in the client).</p> <p>So, I'm looking for some ideas to solve this problem.</p>"	2011-11-08 11:13:51.67 UTC	50593885	"<p>A mix of BeautifulSoup and Selenium works very well for me.</p>  <pre><code>from selenium import webdriver from selenium.webdriver.common.by import By from selenium.webdriver.support.ui import WebDriverWait from selenium.webdriver.support import expected_conditions as EC from bs4 import BeautifulSoup as bs  driver = webdriver.Firefox() driver.get(""http://somedomain/url_that_delays_loading"")     try:         element = WebDriverWait(driver, 10).until(         EC.presence_of_element_located((By.ID, ""myDynamicElement""))) #waits 10 seconds until element is located. Can have other wait conditions  such as visibility_of_element_located or text_to_be_present_in_element          html = driver.page_source         soup = bs(html, ""lxml"")         dynamic_text = soup.find_all(""p"", {""class"":""class_name""}) #or other attributes, optional     else:         print(""Couldnt locate element"") </code></pre>  <p>P.S. You can find more wait conditions <a href=""http://selenium-python.readthedocs.io/waits.html"" rel=""noreferrer"">here</a></p>"			2018-05-29 22:29:20.677 UTC
8049520	javascript|python|web-scraping|python-2.x	Web-scraping JavaScript page with Python	"<p>I'm trying to develop a simple web scraper. I want to extract text without the HTML code. It works on plain HTML, but not in some pages where JavaScript code adds text.</p> <p>For example, if some JavaScript code adds some text, I can't see it, because when I call:</p> <pre><code>response = urllib2.urlopen(request) </code></pre> <p>I get the original text without the added one (because JavaScript is executed in the client).</p> <p>So, I'm looking for some ideas to solve this problem.</p>"	2011-11-08 11:13:51.67 UTC	50612469	"<p>We are not getting the correct results because any javascript generated content needs to be rendered on the DOM. When we fetch an HTML page, we fetch the initial, unmodified by javascript, DOM.</p>  <p>Therefore we need to render the javascript content before we crawl the page.</p>  <p>As selenium is already mentioned many times in this thread (and how slow it gets sometimes was mentioned also), I will list two other possible solutions.</p>  <hr>  <p><strong>Solution 1:</strong> This is a very nice tutorial on <a href=""http://www.scrapingauthority.com/scrapy-javascript"" rel=""noreferrer"">how to use Scrapy to crawl javascript generated content</a> and we are going to follow just that.</p>  <p><strong>What we will need:</strong></p>  <ol> <li><p><a href=""https://www.docker.com/"" rel=""noreferrer"">Docker</a> installed in our machine. This is a plus over other solutions until this point, as it utilizes an OS-independent platform.</p></li> <li><p><a href=""http://splash.readthedocs.io/en/latest/install.html"" rel=""noreferrer"">Install Splash</a> following the instruction listed for our corresponding OS.<br>Quoting from splash documentation:</p>  <blockquote>   <p>Splash is a javascript rendering service. It’s a lightweight web browser with an HTTP API, implemented in Python 3 using Twisted and QT5. </p> </blockquote>  <p>Essentially we are going to use Splash to render Javascript generated content.</p></li> <li><p>Run the splash server: <code>sudo docker run -p 8050:8050 scrapinghub/splash</code>.</p></li> <li><p>Install the <a href=""https://github.com/scrapy-plugins/scrapy-splash#installation"" rel=""noreferrer"">scrapy-splash</a> plugin: <code>pip install scrapy-splash</code></p></li> <li><p>Assuming that we already have a Scrapy project created (if not, <a href=""https://docs.scrapy.org/en/latest/intro/tutorial.html#creating-a-project"" rel=""noreferrer"">let's make one</a>), we will follow the guide and update the <code>settings.py</code>:</p>  <blockquote>   <p>Then go to your scrapy project’s <code>settings.py</code> and set these middlewares:</p>  <pre><code>DOWNLOADER_MIDDLEWARES = {       'scrapy_splash.SplashCookiesMiddleware': 723,       'scrapy_splash.SplashMiddleware': 725,       'scrapy.downloadermiddlewares.httpcompression.HttpCompressionMiddleware': 810, } </code></pre>      <p>The URL of the Splash server(if you’re using Win or OSX this should be the URL of the docker machine: <a href=""https://stackoverflow.com/questions/17157721/how-to-get-a-docker-containers-ip-address-from-the-host"">How to get a Docker container&#39;s IP address from the host?</a>):</p>  <pre><code>SPLASH_URL = 'http://localhost:8050' </code></pre>      <p>And finally you need to set these values too:</p>  <pre><code>DUPEFILTER_CLASS = 'scrapy_splash.SplashAwareDupeFilter' HTTPCACHE_STORAGE = 'scrapy_splash.SplashAwareFSCacheStorage' </code></pre> </blockquote></li> <li><p>Finally, we can use a <a href=""https://github.com/scrapy-plugins/scrapy-splash#usage"" rel=""noreferrer""><code>SplashRequest</code></a>:</p>  <blockquote>   <p>In a normal spider you have Request objects which you can use to open URLs. If the page you want to open contains JS generated data you have to use SplashRequest(or SplashFormRequest) to render the page. Here’s a simple example:</p>  <pre><code>class MySpider(scrapy.Spider):     name = ""jsscraper""     start_urls = [""http://quotes.toscrape.com/js/""]      def start_requests(self):         for url in self.start_urls:         yield SplashRequest(             url=url, callback=self.parse, endpoint='render.html'         )      def parse(self, response):         for q in response.css(""div.quote""):         quote = QuoteItem()         quote[""author""] = q.css("".author::text"").extract_first()         quote[""quote""] = q.css("".text::text"").extract_first()         yield quote </code></pre>      <p>SplashRequest renders the URL as html and returns the response which you can use in the callback(parse) method.</p> </blockquote></li> </ol>  <hr>  <p><strong>Solution 2:</strong> Let's call this experimental at the moment (May 2018)...<br> <strong>This solution is for Python's version 3.6</strong> only (at the moment).</p>  <p>Do you know the <a href=""http://docs.python-requests.org/en/master/"" rel=""noreferrer"">requests</a> module (well who doesn't)?<br> Now it has a web crawling little sibling: <a href=""https://github.com/psf/requests-html"" rel=""noreferrer"">requests-HTML</a>:</p>  <blockquote>   <p>This library intends to make parsing HTML (e.g. scraping the web) as simple and intuitive as possible.</p> </blockquote>  <ol> <li><p>Install requests-html: <code>pipenv install requests-html</code></p></li> <li><p>Make a request to the page's url:</p>  <pre><code>from requests_html import HTMLSession  session = HTMLSession() r = session.get(a_page_url) </code></pre></li> <li><p>Render the response to get the Javascript generated bits:</p>  <pre><code>r.html.render() </code></pre></li> </ol>  <p>Finally, the module seems to offer <a href=""https://html.python-requests.org/#api-documentation"" rel=""noreferrer"">scraping capabilities</a>.<br> Alternatively, we can try the well-documented way <a href=""https://www.dataquest.io/blog/web-scraping-beautifulsoup/"" rel=""noreferrer"">of using BeautifulSoup</a> with the <code>r.html</code> object we just rendered.</p>"			2018-05-30 19:52:45.357 UTC
8049520	javascript|python|web-scraping|python-2.x	Web-scraping JavaScript page with Python	"<p>I'm trying to develop a simple web scraper. I want to extract text without the HTML code. It works on plain HTML, but not in some pages where JavaScript code adds text.</p> <p>For example, if some JavaScript code adds some text, I can't see it, because when I call:</p> <pre><code>response = urllib2.urlopen(request) </code></pre> <p>I get the original text without the added one (because JavaScript is executed in the client).</p> <p>So, I'm looking for some ideas to solve this problem.</p>"	2011-11-08 11:13:51.67 UTC	65514746	"<p>I recently used requests_html library to solve this problem.</p> <p>Their <a href=""https://requests.readthedocs.io/projects/requests-html/en/latest/"" rel=""nofollow noreferrer"">expanded documentation</a> at readthedocs.io is pretty good (skip the annotated version at pypi.org). If your use case is basic, you are likely to have some success.</p> <pre><code>from requests_html import HTMLSession session = HTMLSession() response = session.request(method=&quot;get&quot;,url=&quot;www.google.com/&quot;) response.html.render() </code></pre> <p>If you are having trouble rendering the data you need with response.html.render(), you can pass some javascript to the render function to render the particular js object you need. This is copied from their docs, but it might be just what you need:</p> <blockquote> <p>If script is specified, it will execute the provided JavaScript at runtime. Example:</p> </blockquote> <pre><code>script = &quot;&quot;&quot;     () =&gt; {         return {             width: document.documentElement.clientWidth,             height: document.documentElement.clientHeight,             deviceScaleFactor: window.devicePixelRatio,         }     }  &quot;&quot;&quot; </code></pre> <blockquote> <p>Returns the return value of the executed script, if any is provided:</p> </blockquote> <pre><code>&gt;&gt;&gt; response.html.render(script=script) {'width': 800, 'height': 600, 'deviceScaleFactor': 1} </code></pre> <p>In my case, the data I wanted were the arrays that populated a javascript plot but the data wasn't getting rendered as text anywhere in the html. Sometimes its not clear at all what the object names are of the data you want if the data is populated dynamically. If you can't track down the js objects directly from view source or inspect, you can type in &quot;window&quot; followed by ENTER in the debugger console in the browser (Chrome) to pull up a full list of objects rendered by the browser. If you make a few educated guesses about where the data is stored, you might have some luck finding it there. My graph data was under window.view.data in the console, so in the &quot;script&quot; variable passed to the .render() method quoted above, I used:</p> <pre><code>return {     data: window.view.data } </code></pre>"			2020-12-30 23:18:57.387 UTC
8049520	javascript|python|web-scraping|python-2.x	Web-scraping JavaScript page with Python	"<p>I'm trying to develop a simple web scraper. I want to extract text without the HTML code. It works on plain HTML, but not in some pages where JavaScript code adds text.</p> <p>For example, if some JavaScript code adds some text, I can't see it, because when I call:</p> <pre><code>response = urllib2.urlopen(request) </code></pre> <p>I get the original text without the added one (because JavaScript is executed in the client).</p> <p>So, I'm looking for some ideas to solve this problem.</p>"	2011-11-08 11:13:51.67 UTC	64286401	"<p>As mentioned, Selenium is a good choice for rendering the results of the JavaScript:</p> <pre class=""lang-py prettyprint-override""><code>from selenium.webdriver import Firefox from selenium.webdriver.firefox.options import Options  options = Options() options.headless = True browser = Firefox(executable_path=&quot;/usr/local/bin/geckodriver&quot;, options=options)  url = &quot;https://www.example.com&quot; browser.get(url) </code></pre> <p>And <a href=""https://github.com/maxhumber/gazpacho"" rel=""nofollow noreferrer"">gazpacho</a> is a really easy library to parse over the rendered html:</p> <pre class=""lang-py prettyprint-override""><code>from gazpacho import Soup  soup = Soup(browser.page_source) soup.find(&quot;a&quot;).attrs['href'] </code></pre>"			2020-10-09 19:48:31.467 UTC
8049520	javascript|python|web-scraping|python-2.x	Web-scraping JavaScript page with Python	"<p>I'm trying to develop a simple web scraper. I want to extract text without the HTML code. It works on plain HTML, but not in some pages where JavaScript code adds text.</p> <p>For example, if some JavaScript code adds some text, I can't see it, because when I call:</p> <pre><code>response = urllib2.urlopen(request) </code></pre> <p>I get the original text without the added one (because JavaScript is executed in the client).</p> <p>So, I'm looking for some ideas to solve this problem.</p>"	2011-11-08 11:13:51.67 UTC	26440563	"<p>EDIT Sept 2021: <code>phantomjs</code> isn't maintained any more, either</p> <p>EDIT 30/Dec/2017: This answer appears in top results of Google searches, so I decided to update it. The old answer is still at the end.</p> <p>dryscape isn't maintained anymore and the library dryscape developers recommend is Python 2 only. I have found using Selenium's python library with Phantom JS as a web driver fast enough and easy to get the work done.</p> <p>Once you have installed <a href=""http://phantomjs.org/download.html"" rel=""noreferrer"">Phantom JS</a>, make sure the <code>phantomjs</code> binary is available in the current path:</p> <pre><code>phantomjs --version # result: 2.1.1 </code></pre> <p>#Example To give an example, I created a sample page with following HTML code. (<a href=""http://avi.im/stuff/js-or-no-js.html"" rel=""noreferrer"">link</a>):</p> <pre><code>&lt;!DOCTYPE html&gt; &lt;html&gt; &lt;head&gt;   &lt;meta charset=&quot;utf-8&quot;&gt;   &lt;title&gt;Javascript scraping test&lt;/title&gt; &lt;/head&gt; &lt;body&gt;   &lt;p id='intro-text'&gt;No javascript support&lt;/p&gt;   &lt;script&gt;      document.getElementById('intro-text').innerHTML = 'Yay! Supports javascript';   &lt;/script&gt;  &lt;/body&gt; &lt;/html&gt; </code></pre> <p>without javascript it says: <code>No javascript support</code> and with javascript: <code>Yay! Supports javascript</code></p> <p>#Scraping without JS support:</p> <pre><code>import requests from bs4 import BeautifulSoup response = requests.get(my_url) soup = BeautifulSoup(response.text) soup.find(id=&quot;intro-text&quot;) # Result: &lt;p id=&quot;intro-text&quot;&gt;No javascript support&lt;/p&gt; </code></pre> <p>#Scraping with JS support:</p> <pre><code>from selenium import webdriver driver = webdriver.PhantomJS() driver.get(my_url) p_element = driver.find_element_by_id(id_='intro-text') print(p_element.text) # result: 'Yay! Supports javascript' </code></pre> <hr /> <p>You can also use Python library <a href=""https://github.com/niklasb/dryscrape"" rel=""noreferrer"">dryscrape</a> to scrape javascript driven websites.</p> <p>#Scraping with JS support:</p> <pre><code>import dryscrape from bs4 import BeautifulSoup session = dryscrape.Session() session.visit(my_url) response = session.body() soup = BeautifulSoup(response) soup.find(id=&quot;intro-text&quot;) # Result: &lt;p id=&quot;intro-text&quot;&gt;Yay! Supports javascript&lt;/p&gt; </code></pre>"			2014-10-18 14:03:42.467 UTC
8049520	javascript|python|web-scraping|python-2.x	Web-scraping JavaScript page with Python	"<p>I'm trying to develop a simple web scraper. I want to extract text without the HTML code. It works on plain HTML, but not in some pages where JavaScript code adds text.</p> <p>For example, if some JavaScript code adds some text, I can't see it, because when I call:</p> <pre><code>response = urllib2.urlopen(request) </code></pre> <p>I get the original text without the added one (because JavaScript is executed in the client).</p> <p>So, I'm looking for some ideas to solve this problem.</p>"	2011-11-08 11:13:51.67 UTC	51341435	"<p><strong>Using PyQt5</strong></p>  <pre><code>from PyQt5.QtWidgets import QApplication from PyQt5.QtCore import QUrl from PyQt5.QtWebEngineWidgets import QWebEnginePage import sys import bs4 as bs import urllib.request   class Client(QWebEnginePage):     def __init__(self,url):         global app         self.app = QApplication(sys.argv)         QWebEnginePage.__init__(self)         self.html = """"         self.loadFinished.connect(self.on_load_finished)         self.load(QUrl(url))         self.app.exec_()      def on_load_finished(self):         self.html = self.toHtml(self.Callable)         print(""Load Finished"")      def Callable(self,data):         self.html = data         self.app.quit()  # url = """" # client_response = Client(url) # print(client_response.html) </code></pre>"			2018-07-14 16:44:29.36 UTC
8049520	javascript|python|web-scraping|python-2.x	Web-scraping JavaScript page with Python	"<p>I'm trying to develop a simple web scraper. I want to extract text without the HTML code. It works on plain HTML, but not in some pages where JavaScript code adds text.</p> <p>For example, if some JavaScript code adds some text, I can't see it, because when I call:</p> <pre><code>response = urllib2.urlopen(request) </code></pre> <p>I get the original text without the added one (because JavaScript is executed in the client).</p> <p>So, I'm looking for some ideas to solve this problem.</p>"	2011-11-08 11:13:51.67 UTC	43075594	"<p>You'll want to use urllib, requests, beautifulSoup and selenium web driver in your script for different parts of the page, (to name a few).<br> Sometimes you'll get what you need with just one of these modules.<br> Sometimes you'll need two, three, or all of these modules.<br> Sometimes you'll need to switch off the js on your browser.<br> Sometimes you'll need header info in your script.<br> No websites can be scraped the same way and no website can be scraped in the same way forever without having to modify your crawler, usually after a few months. But they can all be scraped! Where there's a will there's a way for sure.<br> If you need scraped data continuously into the future just scrape everything you need and store it in .dat files with pickle.<br> Just keep searching how to try what with these modules and copying and pasting your errors into the Google.</p>"			2017-03-28 16:59:07.11 UTC
8049520	javascript|python|web-scraping|python-2.x	Web-scraping JavaScript page with Python	"<p>I'm trying to develop a simple web scraper. I want to extract text without the HTML code. It works on plain HTML, but not in some pages where JavaScript code adds text.</p> <p>For example, if some JavaScript code adds some text, I can't see it, because when I call:</p> <pre><code>response = urllib2.urlopen(request) </code></pre> <p>I get the original text without the added one (because JavaScript is executed in the client).</p> <p>So, I'm looking for some ideas to solve this problem.</p>"	2011-11-08 11:13:51.67 UTC	43075318	<p>You can also execute javascript using webdriver.</p> <pre><code>from selenium import webdriver  driver = webdriver.Firefox() driver.get(url) driver.execute_script('document.title') </code></pre> <p>or store the value in a variable</p> <pre><code>result = driver.execute_script('var text = document.title ; return text') </code></pre>			2017-03-28 16:45:24.053 UTC
8111484	python	Python operator that mimic javascript || operator	"<p>I am Python newbie, so maybe don't knew if this is obvious or not.</p>  <p>In Javascript <code>a||b</code> returns <code>a</code> if <code>a</code> is evaluated to true, else returns <code>b</code>.  Is that possible in Python other than lengthy if else statement.</p>"	2011-11-13 12:23:27.643 UTC	8111504	<p><code>x = a or b</code> does the same thing.</p>			2011-11-13 12:26:32.233 UTC
8111484	python	Python operator that mimic javascript || operator	"<p>I am Python newbie, so maybe don't knew if this is obvious or not.</p>  <p>In Javascript <code>a||b</code> returns <code>a</code> if <code>a</code> is evaluated to true, else returns <code>b</code>.  Is that possible in Python other than lengthy if else statement.</p>"	2011-11-13 12:23:27.643 UTC	8111533	<p>You can simply do</p>  <pre><code>a or b </code></pre>  <p>For more complex logic (only for Python 2.5 and above):</p>  <pre><code>x if a &gt; b else y </code></pre>  <p>This is the equivalent to the following which you may be familiar with from Javascript:</p>  <pre><code>a &gt; b ? x : y; </code></pre>			2011-11-13 12:30:45.583 UTC
8111484	python	Python operator that mimic javascript || operator	"<p>I am Python newbie, so maybe don't knew if this is obvious or not.</p>  <p>In Javascript <code>a||b</code> returns <code>a</code> if <code>a</code> is evaluated to true, else returns <code>b</code>.  Is that possible in Python other than lengthy if else statement.</p>"	2011-11-13 12:23:27.643 UTC	8111499	"<p>I believe this is correct:</p>  <pre><code>x = a or b </code></pre>  <h2>Proof</h2>  <p>This is how ""<code>||</code>"" works in JavaScript:</p>  <pre class=""lang-js prettyprint-override""><code>&gt; 'test' || 'again' ""test"" &gt; false || 'again' ""again"" &gt; false || 0 0 &gt; 1 || 0 1 </code></pre>  <p>This is how ""<code>or</code>"" works in Python:</p>  <pre class=""lang-py prettyprint-override""><code>&gt;&gt;&gt; 'test' or 'again' 'test' &gt;&gt;&gt; False or 'again' 'again' &gt;&gt;&gt; False or 0 0 &gt;&gt;&gt; 1 or 0 1 </code></pre>"			2011-11-13 12:25:38.487 UTC
8111484	python	Python operator that mimic javascript || operator	"<p>I am Python newbie, so maybe don't knew if this is obvious or not.</p>  <p>In Javascript <code>a||b</code> returns <code>a</code> if <code>a</code> is evaluated to true, else returns <code>b</code>.  Is that possible in Python other than lengthy if else statement.</p>"	2011-11-13 12:23:27.643 UTC	8111502	"<p>In python you can use something like this </p>  <pre><code>result = a or b </code></pre>  <p>which may give you <code>result=a</code> if a is not False (ie not None, not empty, not 0 length), else you will get <code>result=b</code></p>"			2011-11-13 12:25:59.847 UTC
8124588	javascript|python|xmlhttprequest	How do I get a count variable from python handler to javascript function?	"<p>I am trying to issue a user name to each new user in the form user1, user2, user3 and so on.</p>  <p>As the result of <a href=""https://stackoverflow.com/questions/8123032/how-do-i-make-a-count-variable-persistent-across-sessions"">my previous question</a>, now I understand that I need to keep track of count in the app and not in the browser. So I created <code>/counthandler</code> (I am working with Google App Engine Python):</p>  <pre><code>class CountHandler(webapp.RequestHandler):     def get(self):         count = count + 1 </code></pre>  <p>In <code>/choice</code>, I have this script:</p>  <pre><code>function writeToStorage() {    var user = ""user"" + count;   localStorage.setItem(""chooser"", user);    document.getElementById(""form_chooser"").value = user;   }; </code></pre>  <p>How do I get ""count"" from <code>/counthandler</code> to <code>writeToStorage</code>? I understand I need to use HMLHttpRequest, but not sure how. Thanks.</p>  <p><strong>UPDATE</strong></p>  <p>In response to jfriend00's comment, I add more specific question about ajax call:</p>  <pre><code>  var xhr = new XMLHttpRequest();   xhr.open(""POST"", ""http://localhost:8086/counthandler"", true);   xhr.onreadystatechange = function (aEvt) {     if (xhr.readyState == 4 &amp;&amp; xhr.status == 200){        console.log(""request 200-OK"");     }     else {       console.log(""connection error"");     }   };   //I am not sure what to put in send()?   xhr.send(); </code></pre>  <p><strong>UPDATE 2</strong></p>  <p>In response to jfriend00's comment, and reference supplied, I changed the call to GET; but not sure what happens after this:</p>  <pre><code>  var xhr = new XMLHttpRequest();   xhr.open(""GET"", ""http://localhost:8086/counthandler"", true);   xhr.onreadystatechange = function (aEvt) {     if (xhr.readyState == 4 &amp;&amp; xhr.status == 200){        console.log(""request 200-OK"");     }     else {       console.log(""connection error"");     }   };   //changed this to ""null"". this now opens the connection.   //what do I do after this?   xhr.send(null); </code></pre>  <p><strong>Update to answer jfriend00's updated answer:</strong></p>  <p>Thanks for the detailed explanation. Now I understand. But there is still something that I am missing. It is easy to get the value of count:</p>  <pre><code>query = Count.all() query.get() count = e.count logging.info(""count = %s"" % count) # gives count = 12 </code></pre>  <p>Now you are saying that, assign the value of python variable ""count"" which is 12 to the js variable ""count"" with</p>  <pre><code>&lt;script type=""text/javascript""&gt; var count = 12; &lt;/script&gt; </code></pre>  <p>What I don't understand is what happens next time when the count = 13?</p>  <p>It seems to me that</p>  <pre><code>&lt;script type=""text/javascript""&gt; var count = count; &lt;/script&gt; </code></pre>  <p>will not work. Correct? What am I missing?</p>  <p>Thanks again.</p>  <hr>  <p><strong>Update to try the second option in jfriend00's answer. It seems that I need to include a success function to get the ""count"" variable sent by <code>/counthandler</code>:</strong></p>  <pre><code>    var xhr = new XMLHttpRequest();     xhr.onreadystatechange = function()     {         if (xhr.readyState == 4 &amp;&amp; xhr.status == 200)         {             //get ""count"" sent by /counthandler?             //var count = count;         }     };     xhr.open(""POST"", ""http://localhost:8086/counthandler"", true);     xhr.send(null); </code></pre>  <p>But I still I don't understand how <code>/counthandler</code> sends the ""count"" and how I can can get it inside the success function.</p>"	2011-11-14 16:20:20.147 UTC	8127048	"<p>I must say, you're going about this completely the wrong way and thus making things much harder for yourself than they need to be.</p>  <p>The proper place for storing things like usernames is not in Javascript local storage, but in a cookie. No AJAX required, just server-side code.</p>  <p>You don't say what server-side framework you're using, but assuming it's Django, you would just do <code>response.set_cookie('username', username)</code> - although if you are using Django, I can't imagine why you wouldn't be using the built-in authentication framework.</p>"			2011-11-14 19:36:37.47 UTC
8124588	javascript|python|xmlhttprequest	How do I get a count variable from python handler to javascript function?	"<p>I am trying to issue a user name to each new user in the form user1, user2, user3 and so on.</p>  <p>As the result of <a href=""https://stackoverflow.com/questions/8123032/how-do-i-make-a-count-variable-persistent-across-sessions"">my previous question</a>, now I understand that I need to keep track of count in the app and not in the browser. So I created <code>/counthandler</code> (I am working with Google App Engine Python):</p>  <pre><code>class CountHandler(webapp.RequestHandler):     def get(self):         count = count + 1 </code></pre>  <p>In <code>/choice</code>, I have this script:</p>  <pre><code>function writeToStorage() {    var user = ""user"" + count;   localStorage.setItem(""chooser"", user);    document.getElementById(""form_chooser"").value = user;   }; </code></pre>  <p>How do I get ""count"" from <code>/counthandler</code> to <code>writeToStorage</code>? I understand I need to use HMLHttpRequest, but not sure how. Thanks.</p>  <p><strong>UPDATE</strong></p>  <p>In response to jfriend00's comment, I add more specific question about ajax call:</p>  <pre><code>  var xhr = new XMLHttpRequest();   xhr.open(""POST"", ""http://localhost:8086/counthandler"", true);   xhr.onreadystatechange = function (aEvt) {     if (xhr.readyState == 4 &amp;&amp; xhr.status == 200){        console.log(""request 200-OK"");     }     else {       console.log(""connection error"");     }   };   //I am not sure what to put in send()?   xhr.send(); </code></pre>  <p><strong>UPDATE 2</strong></p>  <p>In response to jfriend00's comment, and reference supplied, I changed the call to GET; but not sure what happens after this:</p>  <pre><code>  var xhr = new XMLHttpRequest();   xhr.open(""GET"", ""http://localhost:8086/counthandler"", true);   xhr.onreadystatechange = function (aEvt) {     if (xhr.readyState == 4 &amp;&amp; xhr.status == 200){        console.log(""request 200-OK"");     }     else {       console.log(""connection error"");     }   };   //changed this to ""null"". this now opens the connection.   //what do I do after this?   xhr.send(null); </code></pre>  <p><strong>Update to answer jfriend00's updated answer:</strong></p>  <p>Thanks for the detailed explanation. Now I understand. But there is still something that I am missing. It is easy to get the value of count:</p>  <pre><code>query = Count.all() query.get() count = e.count logging.info(""count = %s"" % count) # gives count = 12 </code></pre>  <p>Now you are saying that, assign the value of python variable ""count"" which is 12 to the js variable ""count"" with</p>  <pre><code>&lt;script type=""text/javascript""&gt; var count = 12; &lt;/script&gt; </code></pre>  <p>What I don't understand is what happens next time when the count = 13?</p>  <p>It seems to me that</p>  <pre><code>&lt;script type=""text/javascript""&gt; var count = count; &lt;/script&gt; </code></pre>  <p>will not work. Correct? What am I missing?</p>  <p>Thanks again.</p>  <hr>  <p><strong>Update to try the second option in jfriend00's answer. It seems that I need to include a success function to get the ""count"" variable sent by <code>/counthandler</code>:</strong></p>  <pre><code>    var xhr = new XMLHttpRequest();     xhr.onreadystatechange = function()     {         if (xhr.readyState == 4 &amp;&amp; xhr.status == 200)         {             //get ""count"" sent by /counthandler?             //var count = count;         }     };     xhr.open(""POST"", ""http://localhost:8086/counthandler"", true);     xhr.send(null); </code></pre>  <p>But I still I don't understand how <code>/counthandler</code> sends the ""count"" and how I can can get it inside the success function.</p>"	2011-11-14 16:20:20.147 UTC	8124692	"<p>If you are keeping track of the variable server-side and you want to put it in your web page, then you just output a javascript variable to the web page with the value of count.  Thus if your server has a count of 12, then you just output this to the web page from your web server app:</p>  <pre><code>var count = 12; </code></pre>  <p>Any client-side javascript code can then have access to the value of that count variable.  If you want to modify the count variable from the client-side web page, you will have to make a server request in order to modify it on the server (a Post or Get) typically done with a form post or an ajax call.</p>  <hr>  <p>There are two ways you could approach this problem:</p>  <h2>Option 1:</h2>  <p>You've said you have the value of count on your server.  It's stored on your server somewhere.  It's not in /counthandler or /choice - those are just scripts that run on your server.  So, if you want the count value in the /choice web page, then you go modify the /choice python script and you obtain the value of count in that script and you insert it into the web page the same way you would put anything else in the web page from a python script (exactly how you do that depends upon what python environment you are using), but if you are already creating web pages from python scripts you must already be doing this.  Then, in an appropriate place in that web page, you put this piece of javascript:</p>  <pre><code>&lt;script type=""text/javascript""&gt; var count = 12; &lt;/script&gt; </code></pre>  <p>You do NOT get the value from /counthandler and put it in /count from the server.  Within the /count script, you fetch the value of count and put it into that web page.</p>  <h2>Option2:</h2>  <p>In the /choice web page, you make an ajax request to some server page (perhaps /counthandler) to fetch the current count.  The success handler from that ajax call will have the desired count value and you can then whatever you want with it in the web page.</p>  <p>As for writing it to localstorage, we still have no idea why you're evening try to do that since you seem to be storing it on the server already.  localstorage is browser-specific storage that only works in that specific browser and can be cleared at any time by the user.</p>"			2011-11-14 16:25:57.643 UTC
8137368	javascript|python|redirect	follow javascript redirection with python	<p>I am trying to automate authentication into a website using the login page. The sticking point is that after submitting the login username &amp; password form I am redirected to a new (middleman) page where there is a javascript redirect to the website i want to access.  the source looks like this: </p>  <pre><code>&lt;script&gt; top.location=url; &lt;/script&gt; </code></pre>  <p>How can I follow this redirect? I have tried js wrapper Python libraries but did not find a solution yet. Code snippets are appreciated. Thanks.</p>	2011-11-15 13:51:28.7 UTC	8138133	<p>Try using window.location instead. </p>			2011-11-15 14:44:51.2 UTC
8183682	python|screen-scraping|beautifulsoup|web-scraping	Screen Scraping a Javascript based webpage in Python	"<p>I am working on a screen scraping tool in Python. But, as I look through the source of the webpage, I noticed that most of the data is coming through Javascript. </p>  <p>Any idea, how to scrape javascript based webpage ? Any tool  in Python ?</p>  <p>Thanks</p>"	2011-11-18 14:06:32.883 UTC	8183757	"<p>You can use the <a href=""http://doc.trolltech.com/4.4/qtwebkit.html"" rel=""nofollow"">QtWebKit</a> module of the <a href=""http://www.riverbankcomputing.co.uk/software/pyqt/download"" rel=""nofollow"">PyQt4</a> library</p>"			2011-11-18 14:10:56.587 UTC
8183682	python|screen-scraping|beautifulsoup|web-scraping	Screen Scraping a Javascript based webpage in Python	"<p>I am working on a screen scraping tool in Python. But, as I look through the source of the webpage, I noticed that most of the data is coming through Javascript. </p>  <p>Any idea, how to scrape javascript based webpage ? Any tool  in Python ?</p>  <p>Thanks</p>"	2011-11-18 14:06:32.883 UTC	8183721	"<p>Scraping javascript-based webpages is possible with <a href=""http://seleniumhq.org/"" rel=""noreferrer"">selenium</a>. In particular, try the <a href=""http://seleniumhq.org/projects/webdriver/"" rel=""noreferrer"">Selenium WebDriver</a>.</p>"			2011-11-18 14:09:22.093 UTC
8183682	python|screen-scraping|beautifulsoup|web-scraping	Screen Scraping a Javascript based webpage in Python	"<p>I am working on a screen scraping tool in Python. But, as I look through the source of the webpage, I noticed that most of the data is coming through Javascript. </p>  <p>Any idea, how to scrape javascript based webpage ? Any tool  in Python ?</p>  <p>Thanks</p>"	2011-11-18 14:06:32.883 UTC	8365264	"<p>I use webkit, which is the browser renderer behind Chrome and Safari. There are <a href=""http://www.pyside.org/docs/pyside/PySide/QtWebKit/index.html"" rel=""nofollow"">Python bindings to webkit through Qt</a>. </p>  <p>And here is a full <a href=""http://webscraping.com/blog/Scraping-JavaScript-webpages-with-webkit/"" rel=""nofollow"">Python example to execute JavaScript and extract the final HTML</a>.</p>"			2011-12-03 03:28:51.05 UTC
8193018	python|parsing|web	Read a javascript variable from python?	"<p>i have a problem with python script and javascript script in a website. I  have this website <em>www.orangedropdesign.com/progetti/default/</em> and in the source i can view this script: `    </p>  <pre><code>var idDebitoPubblico = ""debito""; var idDebitoTesta = ""Testa""; var valoreInizialeDebito = Math.round(1449.361*1321693021); var incremento = 851; //8515 a sec var valoreCorrente = valoreInizialeDebito; var valoreTesta;  function incrementaDebitoPubblico(){ var el = document.getElementById(idDebitoPubblico); valoreCorrente += incremento; var importo = applicaSeparatore(valoreCorrente); el.innerHTML = importo;  valoreTesta = valoreCorrente/60700000; var procapite = applicaSeparatore(Math.round(valoreTesta*100)/100); document.getElementById(""testa"").innerHTML = procapite;  setTimeout(incrementaDebitoPubblico, 100); }  setTimeout(incrementaDebitoPubblico, 100);  function applicaSeparatore(importoNumerico){     var importo = importoNumerico.toString();   importo = importo.replace(""."", "","")     if(importo.length&gt;3){      importo = importo.split('',importo.length).reverse().join('').replace(/([0-9]     {3})/g,'$1.');       importo = importo.split('',importo.length).reverse().join('');    }     return importo;   }   </code></pre>  <p></p>  <p>How can I read the website and use ""importo"" variable with a Python script?</p>"	2011-11-19 09:06:43.733 UTC	8193079	"<p>Get your basics right. <code>Javascript is client-side.</code> <code>Python is server side</code>. Make this clear.</p>  <p>So basically how can these two access variables of each other. In simple terms not possible.</p>  <p>The only workaround it to explicitly send that variables content via an ajax call.</p>  <p>This might help you : <a href=""http://api.jquery.com/category/ajax/"" rel=""nofollow"">http://api.jquery.com/category/ajax/</a></p>"			2011-11-19 09:21:04.73 UTC
8194214	javascript|iphone|python|mobile|pyjamas	Python to JavaScript for iPhone	"<p>Have a webapplication with backend developed on python ( running on Django) and front end on HTML5 &amp; javascript. Python generated data is passed on to JavaScript/HTML using JSON.</p>  <p>Now, I would like to make it a mobile application, iPhone app to begin with.  The Front end is very much the same with changes in CSS files to make it look like iPhone native application ( Thanks to jQTouch ) </p>  <p>What options do  I have to make the back end Native on iPhone/ other Mobiles? </p>  <p>I'm not sure how stable and easy pyObjc / <a href=""https://github.com/cobbal"" rel=""nofollow"">cobbal</a> is. Secondly my belief is, using these solutions makes it not so portable to other Mobiles. </p>  <p>So was thinking of converting python code to Javascript and running it all inside browser. I believe pyjamas/ <a href=""http://www.mccarroll.net/py2js/"" rel=""nofollow"">py2Js</a> will do good job of conversion.  Has anyone done this ? are there any flaws in this design ? Any better options avaliable ? </p>  <p>Best,  Srinivas  </p>"	2011-11-19 13:00:39.97 UTC	8194507	"<p>What I cannot understand is why you need your backend being native to iPhone. This doesn't make sense. The backend is a server-side infrastructure that speaks HTTP, so it is independent from your frontend, which may be implemented in any language (usually in HTML/Javascript, but also a GUI in *).</p>  <p>Then, there is <a href=""http://jashkenas.github.com/coffee-script/"" rel=""nofollow"">coffeescript</a>. It's a scripting language that compiles to javascript, and it feels like python/ruby, so it is easy to write javascript code in a more pythonic way. </p>"			2011-11-19 13:57:05.65 UTC
8205091	python|unity3d|unityscript	"Is Python similar to UnityScript, (JavaScript)?"	<p>I'm wondering if Python is similar to the way JavaScript is used with the Unity3d Game Engine? I know standard JavaScript that manipulates the DOM is very different from how Unity utilizes JS.</p>  <p>Would knowing Python be beneficial to getting started with UnityScript?</p>	2011-11-20 22:00:59.36 UTC	8205121	"<p>In general, knowing one language will help you learn others, but past that, you're probably better off learning JavaScript itself. I'd suggest looking at <a href=""http://answers.unity3d.com/questions/8329/how-to-get-started-learning-javascript-or-unityscr.html"" rel=""nofollow"">this site</a> to get started.</p>"			2011-11-20 22:05:53.563 UTC
8205091	python|unity3d|unityscript	"Is Python similar to UnityScript, (JavaScript)?"	<p>I'm wondering if Python is similar to the way JavaScript is used with the Unity3d Game Engine? I know standard JavaScript that manipulates the DOM is very different from how Unity utilizes JS.</p>  <p>Would knowing Python be beneficial to getting started with UnityScript?</p>	2011-11-20 22:00:59.36 UTC	8205110	"<p>Python is very unlike JavaScript, so my vote would be for no.</p>"			2011-11-20 22:03:37.81 UTC
8234295	position|gdata|portfolio|google-finance	Google Finance API in JavaScript or Python to get Currency exchange rate	<p>I am looking to find a API that I can use in <strong><em>JavaScript or Python to be able to eXchange the currency rates.</em> I need the example of using those APIs too.</strong>  Do you Guys have any Idea how to find it ? <strong>JavaScript or Python  portfolio and positions example ?</strong></p>	2011-11-22 21:49:16.673 UTC	51770484	"<p>The link of finance.yahoo.com is not working !</p>  <p>One can use :  <a href=""http://free.currencyconverterapi.com/api/v5/convert?q=EUR_USD&amp;compact=y"" rel=""nofollow noreferrer"">http://free.currencyconverterapi.com/api/v5/convert?q=EUR_USD&amp;compact=y</a></p>"			2018-08-09 15:08:50.623 UTC
8234295	position|gdata|portfolio|google-finance	Google Finance API in JavaScript or Python to get Currency exchange rate	<p>I am looking to find a API that I can use in <strong><em>JavaScript or Python to be able to eXchange the currency rates.</em> I need the example of using those APIs too.</strong>  Do you Guys have any Idea how to find it ? <strong>JavaScript or Python  portfolio and positions example ?</strong></p>	2011-11-22 21:49:16.673 UTC	29967525	"<p>To retrieve the current exchange rate, you can use the Yahoo finance API (<code>http://finance.yahoo.com/d/quotes.csv?e=.csv&amp;f=sl1d1t1&amp;s=USDINR=X</code>).</p>  <p>For retrieving the exchange rate of a currency relative to USD for a particular historical date, you can use the Yahoo currency-converter-cache API (<code>http://finance.yahoo.com/connection/currency-converter-cache?date=&lt;YYYYMMDD&gt;</code>).</p>  <p>I made this simple currency converter module that uses Yahoo Finance API and supports historical date. <a href=""https://github.com/iqbalhusen/currency_converter"" rel=""nofollow"">https://github.com/iqbalhusen/currency_converter</a>.</p>"			2015-04-30 12:15:00.91 UTC
8234295	position|gdata|portfolio|google-finance	Google Finance API in JavaScript or Python to get Currency exchange rate	<p>I am looking to find a API that I can use in <strong><em>JavaScript or Python to be able to eXchange the currency rates.</em> I need the example of using those APIs too.</strong>  Do you Guys have any Idea how to find it ? <strong>JavaScript or Python  portfolio and positions example ?</strong></p>	2011-11-22 21:49:16.673 UTC	64391918	"<p>Just try <a href=""https://currencyfreaks.com/"" rel=""nofollow noreferrer"">CurrencyFreaks API</a>. It provides the latest currency exchange for 179 currencies worldwide in JSON/XML formats compatible with various programming languages including Javascript and PHP.</p> <p><strong>Currency conversion by using Javascript:</strong></p> <pre><code>var xhr = new XMLHttpRequest(); xhr.withCredentials = true;  xhr.addEventListener(&quot;readystatechange&quot;, function() {   if(this.readyState === 4) {     console.log(this.responseText);   } });  xhr.open(&quot;GET&quot;, &quot;https://api.currencyfreaks.com/latest/convert     ?apikey=YOUR_APIKEY     &amp;from=USD&amp;to=EUR     &amp;amount=500&quot;);  xhr.send(); </code></pre> <p>The JSON response will be:</p> <pre><code>{     &quot;date&quot;: &quot;2020-10-16 15:08:00+00&quot;,     &quot;current_rates&quot;: {         &quot;USD&quot;: &quot;1.0&quot;,         &quot;EUR&quot;: &quot;0.8533&quot;     },     &quot;converted_amount&quot;: &quot;426.6215&quot;,     &quot;query&quot;: {         &quot;given_amount&quot;: &quot;500.0&quot;,         &quot;from&quot;: &quot;USD&quot;,         &quot;to&quot;: &quot;EUR&quot;     } } </code></pre> <p><strong>Currency conversion by using PHP:</strong></p> <pre><code>setUrl('https://api.currencyfreaks.com/latest/convert     ?apikey=YOUR_APIKEY     &amp;from=USD&amp;to=EUR     &amp;amount=500'); $request-&gt;setMethod(HTTP_Request2::METHOD_GET); $request-&gt;setConfig(array(   'follow_redirects' =&gt; TRUE )); try {   $response = $request-&gt;send();   if ($response-&gt;getStatus() == 200) {     echo $response-&gt;getBody();   }   else {     echo 'Unexpected HTTP status: ' . $response-&gt;getStatus() . ' ' .     $response-&gt;getReasonPhrase();   } } catch(HTTP_Request2_Exception $e) {   echo 'Error: ' . $e-&gt;getMessage(); } </code></pre> <p>The JSON response will be the same.</p> <p>I hope it will work for you.</p>"			2020-10-16 15:16:04.927 UTC
8269578	javascript|python|decode	decode javascript sequence into python	"<p>I'm a beginner to Python trying to decode this javascript sequence. I'm not only a beginner in Python, I understand javascript even less :) I know i could put it into an online decoder such as this: <a href=""http://coderstoolbox.net/string/"" rel=""nofollow"">http://coderstoolbox.net/string/</a> but I want to deal with it myself - more for practice than anything else... Im using Beautiful Soup to get the data, so I have its functions available for decoding.</p>  <p>If anyone can point me to equivalent functions in python I would appreciate it.</p>  <pre><code>function encode(str){  var t=''; var s=unescape(str);  var x=Math.round(Math.sqrt(49));  for(var i=0;i&lt;s.length;i++) t+=   String.fromCharCode(s.charCodeAt(i)^(i%2?x:0));  print(t); } </code></pre>  <p>This is my understanding of it so far:</p>  <ol> <li>i think I can use 'HTML entities in BS to unescape..?</li> <li>the second one just seems to be a constant number ? square root of 49 rounded...</li> <li>sets up the loop</li> <li>this is the one i dont get. 1 i dont know what the fromCharCode function does. 2 not sure what the bit at the end is. looks like its getting a character code from i to the power something. i understand i is being modulo'd with 2 but what is the '?x:0' bit ? - how would you replicate this in Python ?</li> </ol>  <p>thanks for reading ! </p>  <p>EDIT: is there a python library that can just run this code ? I've done this before with bash and used rhino, but the alternatives in Python seem a bit scary for a beginner, eg spidermonkey, etc...</p>"	2011-11-25 13:05:37.373 UTC	8270389	"<p>1) the python equivalent to unescape is <a href=""http://docs.python.org/library/urllib.html#urllib.unquote"" rel=""nofollow"">urllib.unquote()</a> in python 2.x series and <a href=""http://docs.python.org/py3k/library/urllib.parse.html#urllib.parse.unquote"" rel=""nofollow"">urllib.parse.unquote()</a> in python 3.x series</p>  <p>2) you guess the simplest way to do it is to do <code>x = 7</code></p>  <p>3) the simplest way to loop on string charters is to do <code>for c in string:</code> but to have the index you should do <code>for i,c in enumerate(string):</code></p>  <p>4) the string.charChodeAt(c) is the same than chr(c)</p>  <p>finally I would duplicate the loop part as follow:</p>  <pre><code>result = [] for i,c in enumerate(string):     result.append(chr(ord(c)^(x if i%2 else 0))) print("""".join(result)) </code></pre>  <p>in fact using a temporary array to make the appends is more efficient than happening to strings as the strings don't mutate</p>"			2011-11-25 14:19:09.613 UTC
8269578	javascript|python|decode	decode javascript sequence into python	"<p>I'm a beginner to Python trying to decode this javascript sequence. I'm not only a beginner in Python, I understand javascript even less :) I know i could put it into an online decoder such as this: <a href=""http://coderstoolbox.net/string/"" rel=""nofollow"">http://coderstoolbox.net/string/</a> but I want to deal with it myself - more for practice than anything else... Im using Beautiful Soup to get the data, so I have its functions available for decoding.</p>  <p>If anyone can point me to equivalent functions in python I would appreciate it.</p>  <pre><code>function encode(str){  var t=''; var s=unescape(str);  var x=Math.round(Math.sqrt(49));  for(var i=0;i&lt;s.length;i++) t+=   String.fromCharCode(s.charCodeAt(i)^(i%2?x:0));  print(t); } </code></pre>  <p>This is my understanding of it so far:</p>  <ol> <li>i think I can use 'HTML entities in BS to unescape..?</li> <li>the second one just seems to be a constant number ? square root of 49 rounded...</li> <li>sets up the loop</li> <li>this is the one i dont get. 1 i dont know what the fromCharCode function does. 2 not sure what the bit at the end is. looks like its getting a character code from i to the power something. i understand i is being modulo'd with 2 but what is the '?x:0' bit ? - how would you replicate this in Python ?</li> </ol>  <p>thanks for reading ! </p>  <p>EDIT: is there a python library that can just run this code ? I've done this before with bash and used rhino, but the alternatives in Python seem a bit scary for a beginner, eg spidermonkey, etc...</p>"	2011-11-25 13:05:37.373 UTC	8270140	"<p>I don't know Python, but I can explain what is happening here so that you can rewrite in Python.</p>  <p>1) function encode is declared and not assigned, so in JavaScript it will get hoisted to the top of its parent function, if there is one.</p>  <p>2) Inside function encode there are 4 variables that will get hoisted to the top of function encode:</p>  <ul> <li>t, which is assigned to an empty string, which means 0 length but type is string</li> <li>s, which is assigned of a value of the argument ""str"" that is passed through the unencode function.  unencode just reverses a URI reserved character encoding.</li> <li>x, which is of type number with a value of 7</li> <li>i, which is assigned 0 and used as your loop iterator</li> </ul>  <p>3) The loop index starts at 0 and breaks no later than the index is the same size as the character length on variable s.</p>  <p>4) The loop is written in a sloppy manner without curly braces, so it terminates at the first line break, which means variable t is performing a string concat in reflection of variable s.</p>  <p>5) The next line beginning with the string object looks like it is supposed to be in loop, but its not, because this code is sloppy.  It doesn't matter anyways because variable s is not really used for anything further.</p>  <p>6) A print function is used with variable t as its argument.  Variable t should look identical to variable s, which is probably not what the original author of this code intended.</p>  <p>7) I have no idea what print is.  Perhaps the original author meant something like alert or console.log instead of print.</p>"			2011-11-25 13:56:10.46 UTC
8273047	javascript|python	JavaScript function similar to Python range()	<p>Is there a function in JavaScript similar to Python's <code>range()</code>?</p>  <p>I think there should be a better way than to write the following lines every time:</p>  <pre><code>array = new Array(); for (i = 0; i &lt; specified_len; i++) {     array[i] = i; } </code></pre>	2011-11-25 18:33:19.823 UTC	36182832	"<p>For getting an array of size <code>x</code>, here's an one-liner without using any library</p>  <pre><code>var range = n =&gt; Array(n + 1).join(1).split('').map((x, i) =&gt; i) </code></pre>  <p>works as </p>  <pre><code>&gt; range(4) [0, 1, 2, 3] </code></pre>"			2016-03-23 15:52:25.557 UTC
8273047	javascript|python	JavaScript function similar to Python range()	<p>Is there a function in JavaScript similar to Python's <code>range()</code>?</p>  <p>I think there should be a better way than to write the following lines every time:</p>  <pre><code>array = new Array(); for (i = 0; i &lt; specified_len; i++) {     array[i] = i; } </code></pre>	2011-11-25 18:33:19.823 UTC	68482943	"<p><strong>Recursion function</strong> is the best solution for implementing a something like this.</p> <p>If you want only to get numbers begin from zero</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-js lang-js prettyprint-override""><code>function range(n) {   if (n &gt; 0){     return [...range(n-1), n];    };    return [0]; }; console.log(""range(5) =&gt; "", range(5));</code></pre> </div> </div> </p> <p>For example,</p> <pre><code>range(5) = [...range(4), 5]          = [...range(3), 4, 5]          = [...range(2), 3, 4, 5]          = [...range(1), 2, 3, 4, 5]          = [...range(0), 1, 2, 3, 4, 5] // range(0) = [0]          = [0, 1, 2, 3, 4, 5] //final answer </code></pre> <p>This function can also extend as following</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-js lang-js prettyprint-override""><code>function range(start, stop, step=1){   if( stop &gt; start){     return [...range(start, stop-step), stop];   }   return [start]; } console.log(""range(2, 8, 2) =&gt; "", range(2, 8, 2));</code></pre> </div> </div> </p> <p>But note that, unlike in python you have to provide either two or three arguments.</p>"			2021-07-22 10:05:46.2 UTC
8273047	javascript|python	JavaScript function similar to Python range()	<p>Is there a function in JavaScript similar to Python's <code>range()</code>?</p>  <p>I think there should be a better way than to write the following lines every time:</p>  <pre><code>array = new Array(); for (i = 0; i &lt; specified_len; i++) {     array[i] = i; } </code></pre>	2011-11-25 18:33:19.823 UTC	56315783	"<p>No, there is none, but you can make one.</p>  <p>I'm partial to Python3 behavior of range. You will find below JavaScript's implementation of Python's range():</p>  <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-js lang-js prettyprint-override""><code>function* range(start=0, end=undefined, step=1) {         if(arguments.length === 1) {end = start, start = 0}              [...arguments].forEach(arg =&gt; {             if( typeof arg !== 'number') {throw new TypeError(""Invalid argument"")}                                    })         if(arguments.length === 0) {throw new TypeError(""More arguments neede"")}                  if(start &gt;= end) return                                                                                                                                          yield start         yield* range(start + step, end, step)     }               // Use Cases console.log([...range(5)])  console.log([...range(2, 5)])  console.log([...range(2, 5, 2)]) console.log([...range(2,3)]) // You can, of course, iterate through the range instance.</code></pre> </div> </div> </p>"			2019-05-26 17:19:22.45 UTC
8273047	javascript|python	JavaScript function similar to Python range()	<p>Is there a function in JavaScript similar to Python's <code>range()</code>?</p>  <p>I think there should be a better way than to write the following lines every time:</p>  <pre><code>array = new Array(); for (i = 0; i &lt; specified_len; i++) {     array[i] = i; } </code></pre>	2011-11-25 18:33:19.823 UTC	48147908	"<p>Here is another <code>es6</code> implementation of the range </p>  <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""true""> <div class=""snippet-code""> <pre class=""snippet-code-js lang-js prettyprint-override""><code>// range :: (from, to, step?) -&gt; [Number] const range = (from, to, step = 1) =&gt; {   //swap values if necesery   [from, to] = from &gt; to ? [to, from] : [from, to]   //create range array   return [...Array(Math.round((to - from) / step))]     .map((_, index) =&gt; {       const negative = from &lt; 0 ? Math.abs(from) : 0       return index &lt; negative ?          from + index * step  :         (index - negative + 1) * step     }) }    range(-20, 0, 5)   .forEach(val =&gt; console.log(val))  for(const val of range(5, 1)){    console.log(`value ${val}`) }</code></pre> </div> </div> </p>"			2018-01-08 10:00:06.387 UTC
8273047	javascript|python	JavaScript function similar to Python range()	<p>Is there a function in JavaScript similar to Python's <code>range()</code>?</p>  <p>I think there should be a better way than to write the following lines every time:</p>  <pre><code>array = new Array(); for (i = 0; i &lt; specified_len; i++) {     array[i] = i; } </code></pre>	2011-11-25 18:33:19.823 UTC	25584350	"<p>A port of the <code>range</code> function from Python 2 is provided by the <a href=""http://underscorejs.org/#range"" rel=""noreferrer"">underscore.js</a> and <a href=""http://lodash.com/docs#range"" rel=""noreferrer"">lodash</a> utility libraries (along with many other useful tools). Examples copied from the underscore docs:</p>  <pre><code>_.range(10); =&gt; [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] _.range(1, 11); =&gt; [1, 2, 3, 4, 5, 6, 7, 8, 9, 10] _.range(0, 30, 5); =&gt; [0, 5, 10, 15, 20, 25] _.range(0, -10, -1); =&gt; [0, -1, -2, -3, -4, -5, -6, -7, -8, -9] _.range(0); =&gt; [] </code></pre>"			2014-08-30 16:09:59.67 UTC
8273047	javascript|python	JavaScript function similar to Python range()	<p>Is there a function in JavaScript similar to Python's <code>range()</code>?</p>  <p>I think there should be a better way than to write the following lines every time:</p>  <pre><code>array = new Array(); for (i = 0; i &lt; specified_len; i++) {     array[i] = i; } </code></pre>	2011-11-25 18:33:19.823 UTC	63597676	"<p>An option for NodeJs is to use a Buffer:</p> <pre class=""lang-js prettyprint-override""><code>[...Buffer.alloc(5).keys()] // [ 0, 1, 2, 3, 4 ] </code></pre> <p>What's nice is that you can iterate directly on the buffer:</p> <pre class=""lang-js prettyprint-override""><code>Buffer.alloc(5).forEach((_, index) =&gt; console.log(index)) // 0 // 1 // 2 // 3 // 4 </code></pre> <p>You can't do that with an uninitialized Array:</p> <pre class=""lang-js prettyprint-override""><code>Array(5).forEach((_, index) =&gt; console.log(index)) // undefined </code></pre> <p>But, who in their right mind uses a Buffer for a purpose like this ;)</p>"			2020-08-26 12:27:23.07 UTC
8273047	javascript|python	JavaScript function similar to Python range()	<p>Is there a function in JavaScript similar to Python's <code>range()</code>?</p>  <p>I think there should be a better way than to write the following lines every time:</p>  <pre><code>array = new Array(); for (i = 0; i &lt; specified_len; i++) {     array[i] = i; } </code></pre>	2011-11-25 18:33:19.823 UTC	55800893	"<p>MDN recommends this approach: <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/from#Sequence_generator_range"" rel=""noreferrer"">Sequence generator (range)</a></p>  <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-js lang-js prettyprint-override""><code>// Sequence generator function (commonly referred to as ""range"", e.g. Clojure, PHP etc) const range = (start, stop, step) =&gt; Array.from({ length: (stop - start) / step + 1}, (_, i) =&gt; start + (i * step));  // Generate numbers range 0..4 console.log(""range(0, 4, 1):"", range(0, 4, 1)); // [0, 1, 2, 3, 4]   // Generate numbers range 1..10 with step of 2  console.log(""\nrange(1, 10, 2):"", range(1, 10, 2)); // [1, 3, 5, 7, 9]  // Generate the alphabet using Array.from making use of it being ordered as a sequence console.log(""\nrange('A'.charCodeAt(0), 'Z'.charCodeAt(0), 1).map(x =&gt; String.fromCharCode(x))"", range('A'.charCodeAt(0), 'Z'.charCodeAt(0), 1).map(x =&gt; String.fromCharCode(x))); // [""A"", ""B"", ""C"", ""D"", ""E"", ""F"", ""G"", ""H"", ""I"", ""J"", ""K"", ""L"", ""M"", ""N"", ""O"", ""P"", ""Q"", ""R"", ""S"", ""T"", ""U"", ""V"", ""W"", ""X"", ""Y"", ""Z""]</code></pre> </div> </div> </p>"			2019-04-22 20:44:11.023 UTC
8273047	javascript|python	JavaScript function similar to Python range()	<p>Is there a function in JavaScript similar to Python's <code>range()</code>?</p>  <p>I think there should be a better way than to write the following lines every time:</p>  <pre><code>array = new Array(); for (i = 0; i &lt; specified_len; i++) {     array[i] = i; } </code></pre>	2011-11-25 18:33:19.823 UTC	49642639	"<p><a href=""https://github.com/assister-ai/pythonic"" rel=""nofollow noreferrer""><code>pythonic</code></a> mimics the Python <code>range</code> behaviour best it can using JS' generators (<code>yield</code>), supporting both the <code>range(stop)</code> and <code>range(start, stop, step)</code> use cases. In addition, <code>pythonic</code>'s <code>range</code> function returns an <code>Iterator</code> object similar to Python that supports <code>map</code> and <code>filter</code>, so one could do fancy one-liners like:</p> <pre><code>import {range} from 'pythonic'; // ... const results = range(5).map(wouldBeInvokedFiveTimes); // `results` is now an array containing elements from // 5 calls to wouldBeInvokedFiveTimes </code></pre> <p>Install using <code>npm</code>:</p> <pre><code>npm install --save pythonic </code></pre> <p><em><strong>Disclosure</strong></em> I'm author and maintainer of Pythonic</p>"			2018-04-04 04:12:43.057 UTC
8273047	javascript|python	JavaScript function similar to Python range()	<p>Is there a function in JavaScript similar to Python's <code>range()</code>?</p>  <p>I think there should be a better way than to write the following lines every time:</p>  <pre><code>array = new Array(); for (i = 0; i &lt; specified_len; i++) {     array[i] = i; } </code></pre>	2011-11-25 18:33:19.823 UTC	41247726	"<p>Here's a small extension for one of the answers in case you need to specify both starting and ending position of the range:</p>  <pre><code>let range = (start, end) =&gt; Array.from(Array(end + 1).keys()).slice(start); </code></pre>"			2016-12-20 17:09:16.88 UTC
8273047	javascript|python	JavaScript function similar to Python range()	<p>Is there a function in JavaScript similar to Python's <code>range()</code>?</p>  <p>I think there should be a better way than to write the following lines every time:</p>  <pre><code>array = new Array(); for (i = 0; i &lt; specified_len; i++) {     array[i] = i; } </code></pre>	2011-11-25 18:33:19.823 UTC	35564576	"<p>Further refined with ES6 default parameters.</p>  <pre><code>let range = function*(start = 0, stop, step = 1) {   let cur = (stop === undefined) ? 0 : start;   let max = (stop === undefined) ? start : stop;   for (let i = cur; step &lt; 0 ? i &gt; max : i &lt; max; i += step)     yield i } </code></pre>"			2016-02-22 21:47:09.98 UTC
8273047	javascript|python	JavaScript function similar to Python range()	<p>Is there a function in JavaScript similar to Python's <code>range()</code>?</p>  <p>I think there should be a better way than to write the following lines every time:</p>  <pre><code>array = new Array(); for (i = 0; i &lt; specified_len; i++) {     array[i] = i; } </code></pre>	2011-11-25 18:33:19.823 UTC	62614387	<p>Here's how i do it</p> <pre><code>let n = 5  [...Array(n).keys()].map(x=&gt;{console.log(x)}) </code></pre> <p>output</p> <pre><code>0 1 2 3 4 </code></pre>			2020-06-27 19:05:52.19 UTC
8273047	javascript|python	JavaScript function similar to Python range()	<p>Is there a function in JavaScript similar to Python's <code>range()</code>?</p>  <p>I think there should be a better way than to write the following lines every time:</p>  <pre><code>array = new Array(); for (i = 0; i &lt; specified_len; i++) {     array[i] = i; } </code></pre>	2011-11-25 18:33:19.823 UTC	71453709	"<h1>TypeScript's implementation of Python's range()</h1> <pre><code>const range = (start: number, stop?: number, step: number = 1) =&gt; {   if (stop === undefined) {     [start, stop] = [0, start];   }   return Array.from({ length: Math.ceil((stop - start) / step) }, (_, i) =&gt; start + step * i); };  console.log(range(4)); // [0, 1, 2, 3] console.log(range(3, 6)); // [3, 4, 5] console.log(range(0, 10, 2)); // [0, 2, 4, 6, 8] console.log(range(10, 0, -1)); // [10, 9, 8, 7, 6, 5, 4, 3, 2, 1] console.log(range(8, 2, -2)); // [8, 6, 4] console.log(range(8, 2)); // [] console.log(range(8, 2, 2)); // [] console.log(range(1, 5, -1)); // [] console.log(range(1, 5, -2)); // [] console.log(range(6, 1, -2)); // [6, 4, 2] console.log(range(1, 6, 2)); // [1, 3, 5] </code></pre>"			2022-03-13 01:03:24.883 UTC
8273047	javascript|python	JavaScript function similar to Python range()	<p>Is there a function in JavaScript similar to Python's <code>range()</code>?</p>  <p>I think there should be a better way than to write the following lines every time:</p>  <pre><code>array = new Array(); for (i = 0; i &lt; specified_len; i++) {     array[i] = i; } </code></pre>	2011-11-25 18:33:19.823 UTC	8273165	"<p>Here you go.</p>  <p>This will write (or overwrite) the value of each index with the index number.</p>  <pre><code>Array.prototype.writeIndices = function( n ) {     for( var i = 0; i &lt; (n || this.length); ++i ) this[i] = i;     return this; }; </code></pre>  <p>If you don't provide a number, it will use the current length of the Array.</p>  <p>Use it like this:</p>  <pre><code>var array = [].writeIndices(10);  // [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] </code></pre>"			2011-11-25 18:48:10.403 UTC
8273047	javascript|python	JavaScript function similar to Python range()	<p>Is there a function in JavaScript similar to Python's <code>range()</code>?</p>  <p>I think there should be a better way than to write the following lines every time:</p>  <pre><code>array = new Array(); for (i = 0; i &lt; specified_len; i++) {     array[i] = i; } </code></pre>	2011-11-25 18:33:19.823 UTC	8275011	"<p>2018: this answer keeps getting upvotes, so here's an update. The code below is obsolete, but luckily ES6 standardized generators and the <code>yield</code> keyword, and they are universally supported across platforms. An example of the lazy <code>range()</code> using <code>yield</code> can be found <a href=""https://github.com/gebrkn/bits/blob/master/range.js"" rel=""noreferrer"">here</a>.  </p>  <hr>  <p>In addition to what's already said, Javascript 1.7+ provides support for <a href=""https://developer.mozilla.org/en/JavaScript/Guide/Iterators_and_Generators"" rel=""noreferrer"">iterators and generators</a> which can be used to create a lazy, memory-efficient version of <code>range</code>, simlar to <code>xrange</code> in Python2: </p>  <pre><code>function range(low, high) {       return {         __iterator__: function() {             return {                   next: function() {                     if (low &gt; high)                         throw StopIteration;                       return low++;                 }             }         }     } }  for (var i in range(3, 5))     console.log(i); // 3,4,5 </code></pre>"			2011-11-25 23:10:52.72 UTC
8273047	javascript|python	JavaScript function similar to Python range()	<p>Is there a function in JavaScript similar to Python's <code>range()</code>?</p>  <p>I think there should be a better way than to write the following lines every time:</p>  <pre><code>array = new Array(); for (i = 0; i &lt; specified_len; i++) {     array[i] = i; } </code></pre>	2011-11-25 18:33:19.823 UTC	8273091	"<p><strong>No</strong>, there is none, but <strong>you can make one</strong>.</p>  <h2>JavaScript's implementation of Python's <code>range()</code></h2>  <p>Trying to <strong>emulate how it works in Python</strong>, I would create function similar to this:</p>  <pre class=""lang-js prettyprint-override""><code>function range(start, stop, step) {     if (typeof stop == 'undefined') {         // one param defined         stop = start;         start = 0;     }      if (typeof step == 'undefined') {         step = 1;     }      if ((step &gt; 0 &amp;&amp; start &gt;= stop) || (step &lt; 0 &amp;&amp; start &lt;= stop)) {         return [];     }      var result = [];     for (var i = start; step &gt; 0 ? i &lt; stop : i &gt; stop; i += step) {         result.push(i);     }      return result; }; </code></pre>  <p>See <a href=""http://jsfiddle.net/Luc4E/3/"">this jsfiddle</a> for a proof.</p>  <h2>Comparison between <code>range()</code> in JavaScript and Python</h2>  <p>It works in the following way:</p>  <ul> <li><code>range(4)</code> returns <code>[0, 1, 2, 3]</code>,</li> <li><code>range(3,6)</code> returns <code>[3, 4, 5]</code>,</li> <li><code>range(0,10,2)</code> returns <code>[0, 2, 4, 6, 8]</code>,</li> <li><code>range(10,0,-1)</code> returns <code>[10, 9, 8, 7, 6, 5, 4, 3, 2, 1]</code>,</li> <li><code>range(8,2,-2)</code> returns <code>[8, 6, 4]</code>,</li> <li><code>range(8,2)</code> returns <code>[]</code>,</li> <li><code>range(8,2,2)</code> returns <code>[]</code>,</li> <li><code>range(1,5,-1)</code> returns <code>[]</code>,</li> <li><code>range(1,5,-2)</code> returns <code>[]</code>,</li> </ul>  <p>and its Python counterpart <strong>works exactly the same way</strong> (at least in the mentioned cases):</p>  <pre><code>&gt;&gt;&gt; range(4) [0, 1, 2, 3] &gt;&gt;&gt; range(3,6) [3, 4, 5] &gt;&gt;&gt; range(0,10,2) [0, 2, 4, 6, 8] &gt;&gt;&gt; range(10,0,-1) [10, 9, 8, 7, 6, 5, 4, 3, 2, 1] &gt;&gt;&gt; range(8,2,-2) [8, 6, 4] &gt;&gt;&gt; range(8,2) [] &gt;&gt;&gt; range(8,2,2) [] &gt;&gt;&gt; range(1,5,-1) [] &gt;&gt;&gt; range(1,5,-2) [] </code></pre>  <p>So if you need a function to work similarly to Python's <code>range()</code>, you can use above mentioned solution.</p>"			2011-11-25 18:38:58.71 UTC
8273047	javascript|python	JavaScript function similar to Python range()	<p>Is there a function in JavaScript similar to Python's <code>range()</code>?</p>  <p>I think there should be a better way than to write the following lines every time:</p>  <pre><code>array = new Array(); for (i = 0; i &lt; specified_len; i++) {     array[i] = i; } </code></pre>	2011-11-25 18:33:19.823 UTC	65053506	"<pre><code>function range(start, stop) {     if (typeof stop == 'undefined') {         stop = start;         start = 0;     }         result = [...Array(stop).keys()].slice(start, stop);     return result; } </code></pre>"			2020-11-28 19:11:10.49 UTC
8273047	javascript|python	JavaScript function similar to Python range()	<p>Is there a function in JavaScript similar to Python's <code>range()</code>?</p>  <p>I think there should be a better way than to write the following lines every time:</p>  <pre><code>array = new Array(); for (i = 0; i &lt; specified_len; i++) {     array[i] = i; } </code></pre>	2011-11-25 18:33:19.823 UTC	37980601	"<p>For a very simple range in ES6:</p>  <pre><code>let range = n =&gt; Array.from(Array(n).keys()) </code></pre>  <p>From <a href=""https://stackoverflow.com/questions/8273047/javascript-function-similar-to-python-range/37980601#comment79356810_37980601"">bigOmega's comment</a>, this can be shortened using <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_syntax"" rel=""noreferrer"">Spread syntax</a>:</p>  <pre><code>let range = n =&gt; [...Array(n).keys()] </code></pre>"			2016-06-23 00:59:17.943 UTC
8273047	javascript|python	JavaScript function similar to Python range()	<p>Is there a function in JavaScript similar to Python's <code>range()</code>?</p>  <p>I think there should be a better way than to write the following lines every time:</p>  <pre><code>array = new Array(); for (i = 0; i &lt; specified_len; i++) {     array[i] = i; } </code></pre>	2011-11-25 18:33:19.823 UTC	72353783	"<pre class=""lang-js prettyprint-override""><code>/**  * range generator  *  * @param {Integer} start - Optional. An integer specifying at which position to start. Default is 0  * @param {Integer} stop  - Required. An integer specifying at which position to stop. Excluded.  * @param {Integer} step  - Optional. An integer specifying the incrementation. Default is 1  */  function* range (start, stop, step = 1) {    if (arguments.length === 1) { [start, stop] = [0, start]; }    if (![start, stop, step].every(Number.isInteger)) { throw new TypeError('range needs integer arguments'); }    if ((start - stop) * step &gt;= 0) { return []; }    let check = start &gt; stop ? (a, b) =&gt; a &gt; b : (a, b) =&gt; a &lt; b;   while (check(start, stop)) { yield start, start += step; } }  console.log([...range(4)]); console.log([...range(2, 4)]); console.log([...range(1, 4, 2)]); console.log([...range(-4, -1, 1)]); console.log([...range(10, 4, -2)]); console.log([...range(-1, -4, -1)]); </code></pre>"			2022-05-23 19:17:34.463 UTC
8273047	javascript|python	JavaScript function similar to Python range()	<p>Is there a function in JavaScript similar to Python's <code>range()</code>?</p>  <p>I think there should be a better way than to write the following lines every time:</p>  <pre><code>array = new Array(); for (i = 0; i &lt; specified_len; i++) {     array[i] = i; } </code></pre>	2011-11-25 18:33:19.823 UTC	38888563	"<p>Still no built-in function that is equivalent to <code>range()</code>, but with the most recent version - ES2015 - you can build your own implementation. Here's a limited version of it. Limited because it doesn't take into account the step parameter. Just min, max.</p>  <pre class=""lang-js prettyprint-override""><code>const range = (min = null, max = null) =&gt;   Array.from({length:max ? max - min : min}, (v,k) =&gt; max ? k + min : k) </code></pre>  <p>This is accomplished by the <code>Array.from</code> method able to build an array from any object that has a <code>length</code> property. So passing in a simple object with just the <code>length</code> property will create an ArrayIterator that will yield <code>length</code> number of objects.</p>"			2016-08-11 06:14:59.42 UTC
8273047	javascript|python	JavaScript function similar to Python range()	<p>Is there a function in JavaScript similar to Python's <code>range()</code>?</p>  <p>I think there should be a better way than to write the following lines every time:</p>  <pre><code>array = new Array(); for (i = 0; i &lt; specified_len; i++) {     array[i] = i; } </code></pre>	2011-11-25 18:33:19.823 UTC	58767585	"<p>Assuming you need a simple range with a single step:    </p>  <pre><code>let range = (start, end)=&gt; {     if(start === end) return [start];     return [start, ...range(start + 1, end)]; } </code></pre>  <p>else</p>  <pre><code>let range = (start, end, step)=&gt; {     if(start === end) return [start];     return [start, ...range(start + step, end)]; } </code></pre>  <p>refer to <a href=""https://dev.to/ycmjason/how-to-create-range-in-javascript-539i"" rel=""nofollow noreferrer"">here</a> for more.</p>"			2019-11-08 13:33:36.167 UTC
8273047	javascript|python	JavaScript function similar to Python range()	<p>Is there a function in JavaScript similar to Python's <code>range()</code>?</p>  <p>I think there should be a better way than to write the following lines every time:</p>  <pre><code>array = new Array(); for (i = 0; i &lt; specified_len; i++) {     array[i] = i; } </code></pre>	2011-11-25 18:33:19.823 UTC	25470987	"<p>You may use <a href=""http://underscorejs.org/#range"" rel=""nofollow"">underscore</a> library. It contains dozens of useful functions for working with arrays and many more.</p>"			2014-08-24 10:58:11.793 UTC
8273047	javascript|python	JavaScript function similar to Python range()	<p>Is there a function in JavaScript similar to Python's <code>range()</code>?</p>  <p>I think there should be a better way than to write the following lines every time:</p>  <pre><code>array = new Array(); for (i = 0; i &lt; specified_len; i++) {     array[i] = i; } </code></pre>	2011-11-25 18:33:19.823 UTC	66249901	"<p>Actually, in Python range() returns an iterable object and we know that iterators are more memory efficient than arrays (or lists in Python). So if we want to implement the same concept with exact functionality in JavaScript we can use an iterator object:</p> <pre><code>class range {  constructor(start, stop, step = 1) {     //check for invalid input     if (stop !== undefined &amp;&amp; typeof stop !== 'number'         || typeof start !== 'number'         || typeof step !== 'number') {         throw Error('invalid input for range function');     }      //check if second argument is provided     if (stop === undefined) {         stop = start;         start = 0;     }      //initialize the object properties     this.start = start;     this.stop = stop;     this.step = step; }  //create the iterator object with Symbol.iterator [Symbol.iterator]() {     return {         current: this.start,         last: this.stop,         step: this.step,         //implement the next() method of the iterator         next() {             if (this.step === 0) {                 return { done: true };             } else if (this.step &gt; 0 ? this.current &lt; this.last : this.current &gt; this.last) {                 let value = this.current;                 this.current += this.step;                 return { done: false, value };             } else {                 return { done: true };             }         }     }; }; } </code></pre> <p>and for example we have:</p> <pre><code>for (const num of new range(1, 10, 2)) { console.log(num); } </code></pre> <p>also we can create an array easily:</p> <pre><code>let arr = [...new range(10, -5, -1)]; </code></pre> <p>or:</p> <pre><code>let arr = Array.from(new range(10)); </code></pre>"			2021-02-17 21:01:58.857 UTC
8273047	javascript|python	JavaScript function similar to Python range()	<p>Is there a function in JavaScript similar to Python's <code>range()</code>?</p>  <p>I think there should be a better way than to write the following lines every time:</p>  <pre><code>array = new Array(); for (i = 0; i &lt; specified_len; i++) {     array[i] = i; } </code></pre>	2011-11-25 18:33:19.823 UTC	73199825	<p>For anyone looking for a modern solution <code>[...Array(n).keys()]</code></p>			2022-08-01 21:30:29.173 UTC
8273047	javascript|python	JavaScript function similar to Python range()	<p>Is there a function in JavaScript similar to Python's <code>range()</code>?</p>  <p>I think there should be a better way than to write the following lines every time:</p>  <pre><code>array = new Array(); for (i = 0; i &lt; specified_len; i++) {     array[i] = i; } </code></pre>	2011-11-25 18:33:19.823 UTC	73176216	"<pre class=""lang-js prettyprint-override""><code>const range = function*(start, stop, inclusive=false) {     let dx = Math.sign(stop - start);     if (inclusive) stop += dx;     for (let x = start; x !== stop; x += dx) yield x; }  const arange = (start, stop, inclusive) =&gt; [...range(start, stop, inclusive)]; </code></pre>"			2022-07-30 13:57:52.207 UTC
8273047	javascript|python	JavaScript function similar to Python range()	<p>Is there a function in JavaScript similar to Python's <code>range()</code>?</p>  <p>I think there should be a better way than to write the following lines every time:</p>  <pre><code>array = new Array(); for (i = 0; i &lt; specified_len; i++) {     array[i] = i; } </code></pre>	2011-11-25 18:33:19.823 UTC	73100556	"<p>A simple approach in Typescript without error checking. Up and down incl. steprate.</p> <pre><code>const range = (start: number, end: number | null = null, step: number = 1): number[] =&gt;   [...Array(end === null ? start : Math.abs(end - start)).keys()]     .filter((n: number): boolean =&gt; n % step === 0)     .map((n: number): number =&gt; (end === null ? n : end &lt; start ? Math.max(start, end) - n : n + start)); </code></pre> <p>Same in Javascript ES6</p> <pre><code>const range = (start, end = null, step = 1) =&gt;   [...Array(end === null ? start : Math.abs(end - start)).keys()]     .filter((n) =&gt; n % step === 0)     .map((n) =&gt; (end === null ? n : end &lt; start ? Math.max(start, end) - n : n + start)); </code></pre>"			2022-07-24 17:23:03.093 UTC
8273047	javascript|python	JavaScript function similar to Python range()	<p>Is there a function in JavaScript similar to Python's <code>range()</code>?</p>  <p>I think there should be a better way than to write the following lines every time:</p>  <pre><code>array = new Array(); for (i = 0; i &lt; specified_len; i++) {     array[i] = i; } </code></pre>	2011-11-25 18:33:19.823 UTC	26554873	"<p>Fusing together both answers from <a href=""https://stackoverflow.com/a/8273091/1307440"">@Tadeck</a> and <a href=""https://stackoverflow.com/a/8275011/1307440"">@georg</a>, I came up with this:</p> <pre class=""lang-js prettyprint-override""><code>function* range(start, stop, step = 1) {     if (stop == null) {         // one param defined         stop = start;         start = 0;     }      for (let i = start; step &gt; 0 ? i &lt; stop : i &gt; stop; i += step) {         yield i;     } } </code></pre> <p>To use it in a for loop you need the ES6/JS1.7 for-of loop:</p> <pre class=""lang-js prettyprint-override""><code>for (let i of range(5)) {     console.log(i); } // Outputs =&gt; 0 1 2 3 4  for (let i of range(0, 10, 2)) {     console.log(i); } // Outputs =&gt; 0 2 4 6 8  for (let i of range(10, 0, -2)) {     console.log(i); } // Outputs =&gt; 10 8 6 4 2 </code></pre>"			2014-10-24 19:23:16.59 UTC
8273047	javascript|python	JavaScript function similar to Python range()	<p>Is there a function in JavaScript similar to Python's <code>range()</code>?</p>  <p>I think there should be a better way than to write the following lines every time:</p>  <pre><code>array = new Array(); for (i = 0; i &lt; specified_len; i++) {     array[i] = i; } </code></pre>	2011-11-25 18:33:19.823 UTC	61277650	"<p>This is my preferred way. It allows you to specify one or two inputs like in Python.</p>  <pre><code>function range(start, end) {   return Array.from(Array(end||start).keys()).slice(!!end*start) } </code></pre>"			2020-04-17 17:49:56.95 UTC
8273047	javascript|python	JavaScript function similar to Python range()	<p>Is there a function in JavaScript similar to Python's <code>range()</code>?</p>  <p>I think there should be a better way than to write the following lines every time:</p>  <pre><code>array = new Array(); for (i = 0; i &lt; specified_len; i++) {     array[i] = i; } </code></pre>	2011-11-25 18:33:19.823 UTC	45666094	"<p>Can be achieved by attaching an iterator to the <code>Number</code> prototype</p>  <pre><code>  Number.prototype[Symbol.iterator] = function* () {       for (var i = 0; i &lt;= this; i++) {        yield i      }    }  [...5] // will result in [0,1,2,3,4,5] </code></pre>  <p><em>Taken from Kyle Simpson's course Rethinking Asynchronous JavaScript</em></p>"			2017-08-14 00:37:42.363 UTC
8273047	javascript|python	JavaScript function similar to Python range()	<p>Is there a function in JavaScript similar to Python's <code>range()</code>?</p>  <p>I think there should be a better way than to write the following lines every time:</p>  <pre><code>array = new Array(); for (i = 0; i &lt; specified_len; i++) {     array[i] = i; } </code></pre>	2011-11-25 18:33:19.823 UTC	59314598	"<blockquote>   <p>Is there a function in JavaScript similar to Python's range()?</p> </blockquote>  <p>As answered before: <strong>no</strong>, there's not. But you can make your own. I believe this is an interesting approach for ES6. It works very similar to Python 2.7 <code>range()</code>, but it's much more dynamic.</p>  <pre><code>function range(start, stop, step = 1)  {     // This will make the function behave as range(stop)     if(arguments.length === 1)     {         return [...Array(arguments[0]).keys()]     }      // Adjusts step to go towards the stop value     if((start &gt; stop &amp;&amp; !(step &lt; 0)) ||        (start &lt; stop &amp;&amp; !(step &gt; 0)))     {         step *= -1     }      let returnArray = []     // Checks if i is in the interval between start and stop no matter if stop     // is lower than start or vice-versa     for(let i = start; (i-start)*(i-stop) &lt;= 0; i += step)     {         returnArray.push(i)     }     return returnArray } </code></pre>  <p>This function can behave in three different ways (just like Python's range()):</p>  <ol> <li><code>range(stop)</code></li> <li><code>range(start, stop)</code></li> <li><code>range(start, stop, step)</code></li> </ol>  <p>These examples:</p>  <pre><code>console.log(range(5)) console.log(range(-2, 2)) console.log(range(2, -2)) console.log(range(10, 20, 2)) </code></pre>  <p>Will give you the following output:</p>  <pre><code>[ 0, 1, 2, 3, 4 ] [ -2, -1, 0, 1, 2 ] [ 2, 1, 0, -1, -2 ] [ 10, 12, 14, 16, 18, 20 ] </code></pre>  <p>Note that instead of iterating over the array with the <code>in</code> operator (like python), you have to use <code>of</code>. Thus the <code>i</code> variable assumes the value, and not the index, of the array's element.</p>  <pre><code>for(let i of range(5)) {     // do something with i... } </code></pre>"			2019-12-13 00:31:11.6 UTC
8273047	javascript|python	JavaScript function similar to Python range()	<p>Is there a function in JavaScript similar to Python's <code>range()</code>?</p>  <p>I think there should be a better way than to write the following lines every time:</p>  <pre><code>array = new Array(); for (i = 0; i &lt; specified_len; i++) {     array[i] = i; } </code></pre>	2011-11-25 18:33:19.823 UTC	58908265	"<blockquote>   <p>Is there a function in JavaScript similar to Python's range()?</p> </blockquote>  <p>All of the solutions here are referring to Python 2's range (probably because of the code example you gave).  However in Python 3, the range() method returns an iterator.  JavaScript also has iterators and they're more space efficient than generating the whole array and storing it in memory.</p>  <p>So the more accurate representation of Python 3's <code>range(n)</code> function is <code>Array(n).keys()</code>.</p>  <p>For example:</p>  <pre><code>for (let i of Array(n).keys()) {   console.log(i) // 0, 1, 2, 3, ..., n } </code></pre>  <p>One more example (which has already been covered in the other answers). Converting the iterator to an array (ES6):</p>  <pre><code>let ary = [...Array(n).keys()]; // ary = [0, 1, 2, 3, ..., n] </code></pre>"			2019-11-18 05:08:43.263 UTC
8273047	javascript|python	JavaScript function similar to Python range()	<p>Is there a function in JavaScript similar to Python's <code>range()</code>?</p>  <p>I think there should be a better way than to write the following lines every time:</p>  <pre><code>array = new Array(); for (i = 0; i &lt; specified_len; i++) {     array[i] = i; } </code></pre>	2011-11-25 18:33:19.823 UTC	43054576	"<p>The following is a natural adaption of Python's <a href=""https://docs.python.org/3.0/library/functions.html#range"" rel=""noreferrer"">range()</a> function to JavaScript:</p>  <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-js lang-js prettyprint-override""><code>// Generate range from start (inclusive) to stop (exclusive): function* range(start, stop, step = 1) {    if (stop === undefined) [start, stop] = [0, start];    if (step &gt; 0) while (start &lt; stop) yield start, start += step;    else if (step &lt; 0) while (start &gt; stop) yield start, start += step;    else throw new RangeError('range() step argument invalid'); }   // Examples: console.log([...range(3)]);       // [0, 1, 2] console.log([...range(0, 3)]);    // [0, 1, 2] console.log([...range(0, 3, -1)]);// [] console.log([...range(0, 0)]);    // [] console.log([...range(-3)]);      // [] console.log([...range(-3, 0)]);   // [-3, -2, -1]</code></pre> </div> </div> </p>  <p>It supports any argument which can be compared to <code>0</code> and <code>stop</code> and can be incremented by <code>step</code>. It behaves identical to the Python version when used with numbers not exceeding <code>Number.MAX_SAFE_INTEGER</code>.</p>  <p>Please note the following corner cases:</p>  <pre><code>[...range(0, 0, 0)];        // RangeError: range() step argument invalid [...range(Number.MAX_SAFE_INTEGER + 1, Number.MAX_SAFE_INTEGER + 2)];  // [] [...range(Number.MAX_SAFE_INTEGER + 2, Number.MAX_SAFE_INTEGER + 3)];  // Infinite loop [...range(0.7, 0.8, 0.1)];  // [0.7, 0.7999999999999999] [...range('1', '11')];      // ['1'] [...range('2', '22')];      // Infinite loop </code></pre>  <p>In contrast to <a href=""https://stackoverflow.com/a/8273091/1647737"">@Tadeck's</a>, <a href=""https://stackoverflow.com/a/35564576/1647737"">@Volv's</a> and <a href=""https://stackoverflow.com/a/26554873/1647737"">@janka102's</a> answer which return <code>[]</code>, <code>undefined</code> or enter an infinite loop when <code>step</code> evaluates to <code>0</code> or <code>NaN</code>, this generator function throws an exception similar to Python's behavior.</p>"			2017-03-27 19:11:44.943 UTC
8284765	javascript|python|web-scraping	How do I call a Javascript function from Python?	"<p>I am working on a web-scraping project. One of the websites I am working with has the data coming from Javascript.</p>  <p>There was a suggestion on <a href=""https://stackoverflow.com/q/8631500/3357935"">one of my earlier questions</a> that I can directly call the Javascript from Python, but I'm not sure how to accomplish this.</p>  <p>For example: If a JavaScript function is defined as: <code>add_2(var,var2)</code></p>  <p>How would I call that JavaScript function from Python?</p>"	2011-11-27 10:02:44.027 UTC	68483959	"<p>Hi so one possible solution would be to use ajax with flask to comunicate between javascript and python. You would run a server with flask and then open the website in a browser. This way you could run javascript functions when the website is created via pythoncode or with a button how it is done in this example.</p> <p>HTML code:</p> <pre class=""lang-html prettyprint-override""><code>  &lt;html&gt; &lt;script src=&quot;//ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js&quot;&gt;&lt;/script&gt;   &lt;script&gt;     function pycall() {       $.getJSON('/pycall', {content: &quot;content from js&quot;},function(data) {           alert(data.result);       });     } &lt;/script&gt;   &lt;button type=&quot;button&quot; onclick=&quot;pycall()&quot;&gt;click me&lt;/button&gt;    &lt;/html&gt; </code></pre> <p>Python Code:</p> <pre class=""lang-py prettyprint-override""><code>from flask import Flask, jsonify, render_template, request  app = Flask(__name__)   def load_file(file_name):     data = None     with open(file_name, 'r') as file:         data = file.read()     return data  @app.route('/pycall') def pycall():     content = request.args.get('content', 0, type=str)          print(&quot;call_received&quot;,content)     return jsonify(result=&quot;data from python&quot;)  @app.route('/') def index():     return load_file(&quot;basic.html&quot;)    import webbrowser print(&quot;opening localhost&quot;) url = &quot;http://127.0.0.1:5000/&quot; webbrowser.open(url) app.run() </code></pre> <p>output in python:</p> <p><code>call_received content from js</code></p> <p>alert in browser:</p> <p><code>data from python</code></p>"			2021-07-22 11:23:43.347 UTC
8284765	javascript|python|web-scraping	How do I call a Javascript function from Python?	"<p>I am working on a web-scraping project. One of the websites I am working with has the data coming from Javascript.</p>  <p>There was a suggestion on <a href=""https://stackoverflow.com/q/8631500/3357935"">one of my earlier questions</a> that I can directly call the Javascript from Python, but I'm not sure how to accomplish this.</p>  <p>For example: If a JavaScript function is defined as: <code>add_2(var,var2)</code></p>  <p>How would I call that JavaScript function from Python?</p>"	2011-11-27 10:02:44.027 UTC	25825070	"<p>An interesting alternative I discovered recently is the Python <a href=""https://pypi.python.org/pypi/python-bond"" rel=""noreferrer"">bond</a> module, which can be used to communicate with a NodeJs process (v8 engine).</p>  <p>Usage would be very similar to the <a href=""https://code.google.com/p/pyv8/"" rel=""noreferrer"">pyv8</a> bindings, but you can <em>directly</em> use any NodeJs library without modification, which is a major selling point for me.</p>  <p>Your python code would look like this:</p>  <pre><code>val = js.call('add2', var1, var2) </code></pre>  <p>or even:</p>  <pre><code>add2 = js.callable('add2') val = add2(var1, var2) </code></pre>  <p>Calling functions though is definitely slower than pyv8, so it greatly depends on your needs. If you need to use an <code>npm</code> package that does a lot of heavy-lifting, <code>bond</code> is great. You can even have more nodejs processes running in parallel.</p>  <p>But if you just need to call a bunch of JS functions (for instance, to have the same validation functions between the browser/backend), <code>pyv8</code> will definitely be a lot faster.</p>"			2014-09-13 16:07:20.927 UTC
8284765	javascript|python|web-scraping	How do I call a Javascript function from Python?	"<p>I am working on a web-scraping project. One of the websites I am working with has the data coming from Javascript.</p>  <p>There was a suggestion on <a href=""https://stackoverflow.com/q/8631500/3357935"">one of my earlier questions</a> that I can directly call the Javascript from Python, but I'm not sure how to accomplish this.</p>  <p>For example: If a JavaScript function is defined as: <code>add_2(var,var2)</code></p>  <p>How would I call that JavaScript function from Python?</p>"	2011-11-27 10:02:44.027 UTC	8365286	"<p>To interact with JavaScript from Python I use webkit, which is the browser renderer behind Chrome and Safari. There are <a href=""http://www.pyside.org/docs/pyside/PySide/QtWebKit/index.html"" rel=""nofollow"">Python bindings to webkit through Qt</a>. In particular there is a function for executing JavaScript called <a href=""http://www.pyside.org/docs/pyside/PySide/QtWebKit/QWebFrame.html#PySide.QtWebKit.PySide.QtWebKit.QWebFrame.evaluateJavaScript"" rel=""nofollow"">evaluateJavaScript()</a>.</p>  <p>Here is a full <a href=""http://webscraping.com/blog/Scraping-JavaScript-webpages-with-webkit/"" rel=""nofollow"">example to execute JavaScript and extract the final HTML</a>.</p>"			2011-12-03 03:33:48.05 UTC
8284765	javascript|python|web-scraping	How do I call a Javascript function from Python?	"<p>I am working on a web-scraping project. One of the websites I am working with has the data coming from Javascript.</p>  <p>There was a suggestion on <a href=""https://stackoverflow.com/q/8631500/3357935"">one of my earlier questions</a> that I can directly call the Javascript from Python, but I'm not sure how to accomplish this.</p>  <p>For example: If a JavaScript function is defined as: <code>add_2(var,var2)</code></p>  <p>How would I call that JavaScript function from Python?</p>"	2011-11-27 10:02:44.027 UTC	8365308	"<p>You can eventually get the JavaScript from the page and execute it through some interpreter (such as v8 or Rhino). However, you can get a good result in a way easier way by using some functional testing tools, such as <a href=""http://seleniumhq.org/"" rel=""nofollow"">Selenium</a> or <a href=""https://splinter.readthedocs.org/en/latest/"" rel=""nofollow"">Splinter</a>. These solutions launch a browser and effectively load the page - it can be slow but assures that the expected browser displayed content will be available.</p>  <p>For example, consider the HTML document below:</p>  <pre><code>&lt;html&gt;     &lt;head&gt;         &lt;title&gt;Test&lt;/title&gt;         &lt;script type=""text/javascript""&gt;             function addContent(divId) {                 var div = document.getElementById(divId);                 div.innerHTML = '&lt;em&gt;My content!&lt;/em&gt;';             }         &lt;/script&gt;     &lt;/head&gt;     &lt;body&gt;         &lt;p&gt;The element below will receive content&lt;/p&gt;         &lt;div id=""mydiv"" /&gt;         &lt;script type=""text/javascript""&gt;addContent('mydiv')&lt;/script&gt;     &lt;/body&gt; &lt;/html&gt; </code></pre>  <p>The script below will use Splinter. Splinter will launch Firefox and after the complete load of the page it will get the content added to a div by JavaScript:</p>  <pre><code>from splinter.browser import Browser import os.path  browser = Browser() browser.visit('file://' + os.path.realpath('test.html')) elements = browser.find_by_css(""#mydiv"") div = elements[0] print div.value  browser.quit() </code></pre>  <p>The result will be the content printed in the stdout.</p>"			2011-12-03 03:38:51.13 UTC
8284765	javascript|python|web-scraping	How do I call a Javascript function from Python?	"<p>I am working on a web-scraping project. One of the websites I am working with has the data coming from Javascript.</p>  <p>There was a suggestion on <a href=""https://stackoverflow.com/q/8631500/3357935"">one of my earlier questions</a> that I can directly call the Javascript from Python, but I'm not sure how to accomplish this.</p>  <p>For example: If a JavaScript function is defined as: <code>add_2(var,var2)</code></p>  <p>How would I call that JavaScript function from Python?</p>"	2011-11-27 10:02:44.027 UTC	8284932	"<p>Find a JavaScript interpreter that has Python bindings. (Try Rhino? V8? SeaMonkey?). When you have found one, it should come with examples of how to use it from python.</p>  <p>Python itself, however, does not include a <em>JavaScript interpreter</em>.</p>"			2011-11-27 10:31:35.427 UTC
8284765	javascript|python|web-scraping	How do I call a Javascript function from Python?	"<p>I am working on a web-scraping project. One of the websites I am working with has the data coming from Javascript.</p>  <p>There was a suggestion on <a href=""https://stackoverflow.com/q/8631500/3357935"">one of my earlier questions</a> that I can directly call the Javascript from Python, but I'm not sure how to accomplish this.</p>  <p>For example: If a JavaScript function is defined as: <code>add_2(var,var2)</code></p>  <p>How would I call that JavaScript function from Python?</p>"	2011-11-27 10:02:44.027 UTC	32854122	"<p>You might call node through Popen.</p>  <p><a href=""https://gist.github.com/mosquito/6536a7665260e2d9862c"" rel=""nofollow noreferrer"">My example how to do it</a></p>  <pre><code>print execute('''function (args) {     var result = 0;     args.map(function (i) {         result += i;     });     return result; }''', args=[[1, 2, 3, 4, 5]]) </code></pre>"			2015-09-29 21:32:50.467 UTC
8284765	javascript|python|web-scraping	How do I call a Javascript function from Python?	"<p>I am working on a web-scraping project. One of the websites I am working with has the data coming from Javascript.</p>  <p>There was a suggestion on <a href=""https://stackoverflow.com/q/8631500/3357935"">one of my earlier questions</a> that I can directly call the Javascript from Python, but I'm not sure how to accomplish this.</p>  <p>For example: If a JavaScript function is defined as: <code>add_2(var,var2)</code></p>  <p>How would I call that JavaScript function from Python?</p>"	2011-11-27 10:02:44.027 UTC	70965237	"<p>This worked for me for simple js file, source: <a href=""https://www.geeksforgeeks.org/how-to-run-javascript-from-python/"" rel=""nofollow noreferrer"">https://www.geeksforgeeks.org/how-to-run-javascript-from-python/</a></p> <pre><code>pip install js2py pip install temp </code></pre> <p><code>file.py</code></p> <pre><code>import js2py eval_res, tempfile = js2py.run_file(&quot;scripts/dev/test.js&quot;) tempfile.wish(&quot;GeeksforGeeks&quot;) </code></pre> <p><code>scripts/dev/test.js</code></p> <pre><code>function wish(name) {     console.log(&quot;Hello, &quot; + name + &quot;!&quot;) } </code></pre>"			2022-02-03 02:25:50.743 UTC
8284765	javascript|python|web-scraping	How do I call a Javascript function from Python?	"<p>I am working on a web-scraping project. One of the websites I am working with has the data coming from Javascript.</p>  <p>There was a suggestion on <a href=""https://stackoverflow.com/q/8631500/3357935"">one of my earlier questions</a> that I can directly call the Javascript from Python, but I'm not sure how to accomplish this.</p>  <p>For example: If a JavaScript function is defined as: <code>add_2(var,var2)</code></p>  <p>How would I call that JavaScript function from Python?</p>"	2011-11-27 10:02:44.027 UTC	29714830	"<p>Did a whole run-down of the different methods recently.  </p>  <p>PyQt4 node.js/zombie.js phantomjs</p>  <p>Phantomjs was the winner hands down, very straightforward with lots of examples.</p>"			2015-04-18 08:30:04.417 UTC
8288202	javascript|python|url|download	Python: Get download link from javascript button	"<p>I am trying to get my script to download subtitles from www.subscene.com. The problem is that the download button on webpage is made in java, and for some reason i cannot download subtitles even if i extract the URL.</p>  <p>I think this is the code for the download button:</p>  <pre><code>&lt;a id=""s_lc_bcr_downloadLink"" class=""downloadLink rating0"" href=""javascript:WebForm_DoPostBackWithOptions(new WebForm_PostBackOptions(&amp;quot;s$lc$bcr$downloadLink&amp;quot;, &amp;quot;&amp;quot;, true, &amp;quot;&amp;quot;, &amp;quot;/english/How-I-Met-Your-Mother-Seventh-Season/subtitle-482407-dlpath-90698/zip.zipx&amp;quot;, false, true))""&gt;Download English Subtitle&lt;/a&gt;&lt;a id=""s_lc_bcr_previewLink"" href=""javascript:togglePreview(482407, 'zip');""&gt;(See preview)&lt;/a&gt; </code></pre>  <p>so i extract the url and tell my script to download it:</p>  <pre><code>urllib.urlretrieve('http://subscene.com/english/How-I-Met-Your-Mother-Seventh-Season/subtitle-482407-dlpath-90698/zip.zipx','c:\\sub.zip') </code></pre>  <p>(Added 'http://subscene.com')</p>  <p>But for some reason it doesnt download the right file. What am i supposed to do?</p>  <p>EDIT:</p>  <p>Thanks a lot! unfortunately i cant get it to work :( it says the following</p>  <pre><code>from selenium import webdriver  browser = webdriver.Firefox() browser.execute_script('WebForm_DoPostBackWithOptions(newWebForm_PostBackOptions(""s$lc$bcr$downloadLink"", """", true, """", ""/english/How-I-Met-Your-Mother-Seventh-Season/subtitle-482407-dlpath-90698/zip.zipx"", false, true))')  Traceback (most recent call last): File ""&lt;pyshell#2&gt;"", line 1, in &lt;module&gt; browser.execute_script('WebForm_DoPostBackWithOptions(new WebForm_PostBackOptions(""s$lc$bcr$downloadLink"", """", true, """", ""/english/How-I-Met-Your-Mother-Seventh-Season/subtitle-482407-dlpath-90698/zip.zipx"", false, true))') File ""C:\Users\User\AppData\Roaming\Python\Python27\site-packages\selenium\webdriver\remote\webdriver.py"", line 385, in execute_script{'script': script, 'args':converted_args})['value'] File ""C:\Users\User\AppData\Roaming\Python\Python27\site-packages\selenium\webdriver\remote\webdriver.py"", line 153, in execute self.error_handler.check_response(response) File ""C:\Users\User\AppData\Roaming\Python\Python27\site-packages\selenium\webdriver\remote\errorhandler.py"", line 126, in check_response raise exception_class(message, screen, stacktrace)  WebDriverException: Message: '' </code></pre>"	2011-11-27 19:06:36.117 UTC	8289068	"<p>As John said this is not the file but javascript code. So instead of getting that file using urllib.urlretrieve, you can execute the javascript which downloads the files in turn. This can be done using selenium module -</p>  <pre><code>from selenium import webdriver browser = webdriver.Firefox() browser.get('http://subscene.com/english/How-I-Met-Your-Mother-Seventh-Season/subtitle-482407.aspx')         browser.execute_script('WebForm_DoPostBackWithOptions(new WebForm_PostBackOptions(""s$lc$bcr$downloadLink"", """", true, """", ""/english/How-I-Met-Your-Mother-Seventh-Season/subtitle-482407-dlpath-90698/zip.zipx"", false, true))') raw_input() </code></pre>  <p>I got this javascript snippet using Firebug.</p>"			2011-11-27 21:11:43.357 UTC
8291194	javascript|python|namedtuple	How to implement python's namedtuple in javascript	"<p>How would I go about implementing python's namedtuple in javascript? Ideally I would also want a function I could ""map"" over a sequence of sequences to turn it into a sequence of namedtuple-like objects.</p>  <pre><code>// with underscore.js included... var points = [[1,2], [3,4], [4,5] var Point = namedlist('Point', 'x y') points = _.map(Point._make, points)  point1 = points[0] var x = point1.x var y = point1.y </code></pre>  <p>Note that I don't want to have to code a new class like ""Point"" every time, but instead would like a factory function that produces a new class supporting list item access with the given field names. </p>  <p>Side note: an assumption underlying this question is that javascript maps use less memory that lists. Is that assumption reasonable?</p>"	2011-11-28 03:25:33.693 UTC	8292460	"<p>You could just use something like</p>  <pre><code>var namedlist = function(fields) {     return function(arr) {         var obj = { };          for(var i = 0; i &lt; arr.length; i++) {             obj[fields[i]] = arr[i];                     }          return obj;     }; };  //use: var points = [[1,2], [3,4], [5,6]]; var Point = namedlist(['x', 'y']);  points = _.map(Point, points);  //Single item: var pt = Point([1,2]); </code></pre>  <p>As for memory usage, it depends on how the underlying JS engine implements each construct. My suspicion is that an array will consume less memory than an object, but the difference between simple objects (like here) and arrays is probably not very significant.</p>"			2011-11-28 07:03:10.647 UTC
8292540	javascript|python|google-app-engine	"Python: Google App Engine , JavaScript Channel API to call back end"	<p>Hi I am quite new to java script and i am looking a working example to call back ends using java script channel API . I do not have any idea about channel API . Can anyone provide me a working example</p>	2011-11-28 07:13:59.057 UTC	8297704	"<p>If you're asking how to get a message from the backend to a javascript client: you can't send messages from a backend server to a channel created on a frontend server. This is because the app version number is included in the channel token, and backends have a different app version than frontends. You could, however, implement a servlet in your backend that calls createChannel and returns it to your frontend for inclusion in javascript that your frontend renders.</p>  <p>If you're trying to send a message to a backend from your javascript code, you won't be able to use XmlHttpRequest directly because of the same-origin policy (this assumes your clients are rendered from a non-backend instance). You could get around this using <a href=""http://en.wikipedia.org/wiki/JSONP"" rel=""nofollow"">JSONP</a>, or by routing XHR requests from your frontend to your backend in a frontend servlet.</p>"			2011-11-28 14:57:24.46 UTC
8292540	javascript|python|google-app-engine	"Python: Google App Engine , JavaScript Channel API to call back end"	<p>Hi I am quite new to java script and i am looking a working example to call back ends using java script channel API . I do not have any idea about channel API . Can anyone provide me a working example</p>	2011-11-28 07:13:59.057 UTC	8293026	"<p>Did you see the docs? <a href=""http://code.google.com/appengine/docs/java/channel/overview.html"" rel=""nofollow"">Java</a> / <a href=""http://code.google.com/appengine/docs/python/channel/overview.html"" rel=""nofollow"">Python</a></p>"			2011-11-28 08:11:56.057 UTC
8412215	python|html|wysiwyg	Python/Javascript: WYSIWYG html editor - Handle large documents fast and/or design theory	"<p>Background:</p>  <p>I am writing an ebook editing program in python. Currently it utilizes a source-code view for editing, and I would like to port it over to a wysiwyg view for editing. The best (only?) html renderer I could find for python was webkit (I am using the PyQt version).</p>  <p>Question:</p>  <p>How do I accomplish wysiwyg editing? The requirements/issues are as follows:</p>  <ol> <li>An ebook may be up to 10,000 paragraphs / 1,000,000 characters. <ul> <li>PyQt Webkit (ContentEditable): No problem.</li> <li>PyQt Webkit (TinyMce, etc): Takes <em>forever</em> to open them!</li> </ul></li> <li>The format is <code>&lt;body&gt;&lt;p&gt;...&lt;/p&gt;&lt;p&gt;...&lt;/p&gt;...&lt;/body&gt;</code>. The body element contains <em>only</em> paragraphs, there are no divs, etc (but in the paragraph there may be spans, links, etc.). Editing must take place with no significant delays as far as the user is concerned. <ul> <li>PyQt Webkit (ContentEditable): If you try deleting text across multiple paragraphs, it takes forever!! My understanding is that this is because it resets the common-parent of the elements being changed - i.e. <strong>the entire body element</strong>, since two different paragraphs are being deleted/merged. But, there should be no need for this - it should need only delete/merge/change those individual paragraphs!</li> </ul></li> </ol>  <p>I am open to implementing my own wysiwyg editing, but for the life of me I can't figure out how to delete/cut/paste/merge/change the html code correctly. I searched online for articles about html wysiwyg design theory, and came up dry.</p>  <p>Thanks!</p>"	2011-12-07 08:17:46.577 UTC	8413073	"<p>Can i suggest a complete another approach ? Since your ebook is only <code>&lt;p&gt;&lt;/p&gt;</code>:</p>  <ul> <li>Split the text on <code>&lt;p&gt;&lt;/p&gt;</code> to get an indexed array of all your paragraphs</li> <li>Make your own pagination system, and fill the screen with N paragraphs, that automatically get enough text to show from the indexed array</li> <li>When you are doing selection, you can use [paragraph index + character index in the paragraph] for selection start / end</li> <li>Then implement cut/copy/paste/delete/undo/redo based on thoses assumptions.</li> </ul>  <p>(Note: when you'll do a selection, since the start point is saved, you can safely change the text on the screen / pagination, until the selection end.)</p>"			2011-12-07 09:33:13.48 UTC
8464798	javascript|python	How to convert JavaScript `for` loop to Python?	"<p>I am new to Python and want convert this small JavaScript code to Python. How can I do that?</p>  <pre><code>for (var y = 0; y &lt; 128; y += 1024) {     for (var x = 0; x &lt; 64; x += 1024) {         // skipped     } } </code></pre>  <p>I searched a lot in Google, but found nothing.</p>"	2011-12-11 14:43:51.63 UTC	8464819	"<h2><code>for</code> loops in Python</h2>  <p>It can be easily converted using <code>range()</code> or <a href=""http://docs.python.org/library/functions.html#xrange"" rel=""noreferrer""><code>xrange()</code></a> function. The <a href=""http://docs.python.org/library/functions.html#xrange"" rel=""noreferrer""><code>xrange()</code></a> is an iterator version, which means it is more efficient (<code>range()</code> would first create a list you would be iterating through). Its syntax is the following: <code>xrange([start], stop[, step])</code>. See the following:</p>  <pre><code>for y in xrange(0, 128, 1024):     for x in xrange(0, 64, 1024):         # here you have x and y </code></pre>  <h2>Note</h2>  <p>But I hope you have noticed, that due to the fact, that you are incrementing <code>y</code> and <code>x</code> with each respective loop by 1024, you will actually receive something similar to this:</p>  <pre><code>var y = 0; var x = 0; </code></pre>  <p>or, in Python:</p>  <pre><code>x = 0 y = 0 </code></pre>  <p>Anyway, it is just additional note about the code you have given as example.</p>"			2011-12-11 14:46:42.993 UTC
8464798	javascript|python	How to convert JavaScript `for` loop to Python?	"<p>I am new to Python and want convert this small JavaScript code to Python. How can I do that?</p>  <pre><code>for (var y = 0; y &lt; 128; y += 1024) {     for (var x = 0; x &lt; 64; x += 1024) {         // skipped     } } </code></pre>  <p>I searched a lot in Google, but found nothing.</p>"	2011-12-11 14:43:51.63 UTC	8464821	"<p>Your code will only perform one iteration in each loop, so you don't even need a loop:</p>  <pre><code>y = 0 x = 0  # do whatever with x and y here </code></pre>  <p>In general, you can use <a href=""http://docs.python.org/library/functions.html#range"" rel=""noreferrer""><code>range([start], stop[, step])</code> <em><sup>[docs]</sup></em></a> to simulate such a <code>for</code> loop. </p>  <p>For example:</p>  <pre><code>for(var i = 0; i &lt; 10; i += 2) </code></pre>  <p>becomes</p>  <pre><code>for i in range(0, 10, 2) </code></pre>"			2011-12-11 14:46:43.733 UTC
8544892	javascript|data-structures|types|dictionary	Pythonic dictionary in Javascript	"<p>How would you implement pythonic dictionary in Javascript that is able to store key value pairs and key can be tuple?</p>  <p>I'd like to find all anchors and then store values of it's <code>href</code> and <code>title</code> attributes to dictionary as keys (href value, title value) and number of occurrencies of this tuple as a value.</p>  <p>The code would look like this (it's a mix of Python and Javascript):</p>  <pre><code>var anchors = document.querySelectorAll (""a""); d = []; // dictionary data structure for (var i = 0, len = anchors.length; i &lt; len; i++) {   currentTuple = (anchors[i].href, anchors[i].title);   if (!d.containsKey(currentTuple)) {     d[currentTuple] = 1;   } else {    d[currentTuple] += 1;   } } </code></pre>  <p>Maybe it would be easier if keys couldn't be tuples, but if it's possible i'd like to see it.</p>  <p>thank you</p>"	2011-12-17 12:56:13.807 UTC	8544954	"<p>Could this work? It just concatenates title and href as a unique key.</p>  <pre><code>var data = [].reduce.call( document.links, function( data, a){     var key = a.href+"",""+a.title;     if( data[key] ) {         data[key]++;     }     else {         data[key] = 1;     }     return data; }, {} ); </code></pre>  <p><a href=""http://jsfiddle.net/knYwb/"" rel=""nofollow"">http://jsfiddle.net/knYwb/</a></p>"			2011-12-17 13:06:24.317 UTC
8554035	python|html|lxml	Remove all javascript tags and style tags from html with python and the lxml module	"<p>I am parsing an html document using the <a href=""http://lxml.de/"" rel=""noreferrer"">http://lxml.de/</a> library. So far I have figured out how to strip tags from an html document <a href=""https://stackoverflow.com/questions/4681317/in-lxml-how-do-i-remove-a-tag-but-retain-all-contents"">In lxml, how do I remove a tag but retain all contents?</a> but the method described in that post leaves all the text, stripping the  tags with out removing the actual script. I have also found a class reference to lxml.html.clean.Cleaner <a href=""http://lxml.de/api/lxml.html.clean.Cleaner-class.html"" rel=""noreferrer"">http://lxml.de/api/lxml.html.clean.Cleaner-class.html</a> but this is clear as mud as to how to actually use the class to clean the document.  Any help, perhaps a short example would be helpful to me! </p>"	2011-12-18 19:01:19.823 UTC	70519236	"<p><strong>You can use <em>Regular Expression</em> With Ease</strong></p> <p><em>For Javasript</em></p> <pre class=""lang-py prettyprint-override""><code>def remove_script_code(data):     clean = re.compile('&lt;script&gt;.*?&lt;/script&gt;')     return [re.sub(clean, '', data)] </code></pre> <p><em>For CSS Style</em></p> <pre class=""lang-py prettyprint-override""><code>def remove_style_code(data):     clean = re.compile('&lt;style&gt;.*?&lt;/style&gt;')     return [re.sub(clean, '', data)] </code></pre>"			2021-12-29 12:12:22.1 UTC
8554035	python|html|lxml	Remove all javascript tags and style tags from html with python and the lxml module	"<p>I am parsing an html document using the <a href=""http://lxml.de/"" rel=""noreferrer"">http://lxml.de/</a> library. So far I have figured out how to strip tags from an html document <a href=""https://stackoverflow.com/questions/4681317/in-lxml-how-do-i-remove-a-tag-but-retain-all-contents"">In lxml, how do I remove a tag but retain all contents?</a> but the method described in that post leaves all the text, stripping the  tags with out removing the actual script. I have also found a class reference to lxml.html.clean.Cleaner <a href=""http://lxml.de/api/lxml.html.clean.Cleaner-class.html"" rel=""noreferrer"">http://lxml.de/api/lxml.html.clean.Cleaner-class.html</a> but this is clear as mud as to how to actually use the class to clean the document.  Any help, perhaps a short example would be helpful to me! </p>"	2011-12-18 19:01:19.823 UTC	62688298	"<p>Here are some examples of how to remove and parse different types of HTML elements from a XML/HTML tree.</p> <p>KEY SUGGESTION: Its helpful to <em><strong>NOT</strong></em> depend on <em>external libraries</em> and do <strong>everything</strong> within &quot;native python 2/3 code&quot;.</p> <p>Here are some examples of how to do this with &quot;native&quot; python...</p> <pre><code># (REMOVE &lt;SCRIPT&gt; to &lt;/script&gt; and variations) pattern = r'&lt;[ ]*script.*?\/[ ]*script[ ]*&gt;'  # mach any char zero or more times text = re.sub(pattern, '', text, flags=(re.IGNORECASE | re.MULTILINE | re.DOTALL))  # (REMOVE HTML &lt;STYLE&gt; to &lt;/style&gt; and variations) pattern = r'&lt;[ ]*style.*?\/[ ]*style[ ]*&gt;'  # mach any char zero or more times text = re.sub(pattern, '', text, flags=(re.IGNORECASE | re.MULTILINE | re.DOTALL))  # (REMOVE HTML &lt;META&gt; to &lt;/meta&gt; and variations) pattern = r'&lt;[ ]*meta.*?&gt;'  # mach any char zero or more times text = re.sub(pattern, '', text, flags=(re.IGNORECASE | re.MULTILINE | re.DOTALL))  # (REMOVE HTML COMMENTS &lt;!-- to --&gt; and variations) pattern = r'&lt;[ ]*!--.*?--[ ]*&gt;'  # mach any char zero or more times text = re.sub(pattern, '', text, flags=(re.IGNORECASE | re.MULTILINE | re.DOTALL))  # (REMOVE HTML DOCTYPE &lt;!DOCTYPE html to &gt; and variations) pattern = r'&lt;[ ]*\![ ]*DOCTYPE.*?&gt;'  # mach any char zero or more times text = re.sub(pattern, '', text, flags=(re.IGNORECASE | re.MULTILINE | re.DOTALL)) </code></pre> <p>NOTE:</p> <pre><code>re.IGNORECASE # is needed to match case sensitive &lt;script&gt; or &lt;SCRIPT&gt; or &lt;Script&gt; re.MULTILINE # is needed to match newlines re.DOTALL # is needed to match &quot;special characters&quot; and match &quot;any character&quot;  </code></pre> <p>I've tested this out on several different HTML files and  including , ,  and   and it works &quot;fast&quot; and works across newlines!..</p> <p>NOTE: It also does <strong>NOT</strong> depend on beautifulsoup or any other external downloaded library!</p> <p>Hope this helps!</p> <p>:)</p>"			2020-07-02 03:02:00.78 UTC
8554035	python|html|lxml	Remove all javascript tags and style tags from html with python and the lxml module	"<p>I am parsing an html document using the <a href=""http://lxml.de/"" rel=""noreferrer"">http://lxml.de/</a> library. So far I have figured out how to strip tags from an html document <a href=""https://stackoverflow.com/questions/4681317/in-lxml-how-do-i-remove-a-tag-but-retain-all-contents"">In lxml, how do I remove a tag but retain all contents?</a> but the method described in that post leaves all the text, stripping the  tags with out removing the actual script. I have also found a class reference to lxml.html.clean.Cleaner <a href=""http://lxml.de/api/lxml.html.clean.Cleaner-class.html"" rel=""noreferrer"">http://lxml.de/api/lxml.html.clean.Cleaner-class.html</a> but this is clear as mud as to how to actually use the class to clean the document.  Any help, perhaps a short example would be helpful to me! </p>"	2011-12-18 19:01:19.823 UTC	8554093	"<p>You can use the <a href=""http://lxml.de/api/lxml.etree-module.html#strip_elements"" rel=""nofollow"">strip_elements</a> method to remove scripts, then use <a href=""http://lxml.de/api/lxml.etree-module.html#strip_tags"" rel=""nofollow"">strip_tags</a> method to remove other tags:</p>  <pre><code>etree.strip_elements(fragment, 'script') etree.strip_tags(fragment, 'a', 'p') # and other tags that you want to remove </code></pre>"			2011-12-18 19:11:05.983 UTC
8554035	python|html|lxml	Remove all javascript tags and style tags from html with python and the lxml module	"<p>I am parsing an html document using the <a href=""http://lxml.de/"" rel=""noreferrer"">http://lxml.de/</a> library. So far I have figured out how to strip tags from an html document <a href=""https://stackoverflow.com/questions/4681317/in-lxml-how-do-i-remove-a-tag-but-retain-all-contents"">In lxml, how do I remove a tag but retain all contents?</a> but the method described in that post leaves all the text, stripping the  tags with out removing the actual script. I have also found a class reference to lxml.html.clean.Cleaner <a href=""http://lxml.de/api/lxml.html.clean.Cleaner-class.html"" rel=""noreferrer"">http://lxml.de/api/lxml.html.clean.Cleaner-class.html</a> but this is clear as mud as to how to actually use the class to clean the document.  Any help, perhaps a short example would be helpful to me! </p>"	2011-12-18 19:01:19.823 UTC	8554251	"<p>Below is an example to do what you want. For an HTML document, <code>Cleaner</code> is a better general solution to the problem than using <code>strip_elements</code>, because in cases like this you want to strip out more than just the <code>&lt;script&gt;</code> tag; you also want to get rid of things like <code>onclick=function()</code> attributes on other tags.</p>  <pre><code>#!/usr/bin/env python  import lxml from lxml.html.clean import Cleaner  cleaner = Cleaner() cleaner.javascript = True # This is True because we want to activate the javascript filter cleaner.style = True      # This is True because we want to activate the styles &amp; stylesheet filter  print(""WITH JAVASCRIPT &amp; STYLES"") print(lxml.html.tostring(lxml.html.parse('http://www.google.com'))) print(""WITHOUT JAVASCRIPT &amp; STYLES"") print(lxml.html.tostring(cleaner.clean_html(lxml.html.parse('http://www.google.com')))) </code></pre>  <p>You can get a list of the options you can set in the <a href=""http://lxml.de/api/lxml.html.clean.Cleaner-class.html"" rel=""noreferrer"">lxml.html.clean.Cleaner documentation</a>; some options you can just set to <code>True</code> or <code>False</code> (the default) and others take a list like:</p>  <pre><code>cleaner.kill_tags = ['a', 'h1'] cleaner.remove_tags = ['p'] </code></pre>  <p>Note that the difference between kill vs remove:</p>  <pre><code>remove_tags:   A list of tags to remove. Only the tags will be removed, their content will get pulled up into the parent tag. kill_tags:   A list of tags to kill. Killing also removes the tag's content, i.e. the whole subtree, not just the tag itself. allow_tags:   A list of tags to include (default include all). </code></pre>"			2011-12-18 19:37:46.733 UTC
8554035	python|html|lxml	Remove all javascript tags and style tags from html with python and the lxml module	"<p>I am parsing an html document using the <a href=""http://lxml.de/"" rel=""noreferrer"">http://lxml.de/</a> library. So far I have figured out how to strip tags from an html document <a href=""https://stackoverflow.com/questions/4681317/in-lxml-how-do-i-remove-a-tag-but-retain-all-contents"">In lxml, how do I remove a tag but retain all contents?</a> but the method described in that post leaves all the text, stripping the  tags with out removing the actual script. I have also found a class reference to lxml.html.clean.Cleaner <a href=""http://lxml.de/api/lxml.html.clean.Cleaner-class.html"" rel=""noreferrer"">http://lxml.de/api/lxml.html.clean.Cleaner-class.html</a> but this is clear as mud as to how to actually use the class to clean the document.  Any help, perhaps a short example would be helpful to me! </p>"	2011-12-18 19:01:19.823 UTC	41627802	"<p>You can use bs4 libray also for this purpose.</p>  <pre><code>soup = BeautifulSoup(html_src, ""lxml"") [x.extract() for x in soup.findAll(['script', 'style'])] </code></pre>"			2017-01-13 05:17:35.083 UTC
8610043	javascript|python|html|forms|mechanize	How can you use Python to fill out HTML forms that also have Javascript?	"<p>I am making a python program that automatically enters information into a form on a website. I looked at a module called mechanize at first but then I realized that it didn't support javascript. Is there any way to take a piece of information and insert it into a ""form"" on a website that uses javascript?</p>  <p>The website I am using is www.locationary.com.</p>  <p>If you login and then go to a place/business page like this,</p>  <p><a href=""http://www.locationary.com/place/en/US/California/Los_Angeles/Z_Pizza-p1001157911.jsp"" rel=""nofollow"">http://www.locationary.com/place/en/US/California/Los_Angeles/Z_Pizza-p1001157911.jsp</a></p>  <p>then you will see a bunch of spots that need to be filled in. I looked at the page source and this ""form"" uses javascript. I just need a way to fill in those blanks now. Like I said, I tried mechanize and it didn't work but I also googled it and got nothing.</p>  <p>The ""form"" uses ""onclick""</p>  <p>If you could offer any advice, I would really appreciate it.</p>  <p>Thanks.</p>"	2011-12-22 21:41:34.767 UTC	8610157	"<p>I think probably the best way to do this is to use a framework that can operate through a browser.  There are several options, but the most pythonic is windmill <a href=""http://www.getwindmill.com/"" rel=""nofollow"">http://www.getwindmill.com/</a></p>  <p>I've found it useful on a number of projects.</p>"			2011-12-22 21:54:38.603 UTC
8613440	javascript|python|selenium|automated-tests	How to load Firefox with javascript disable when running Selenium Webdriver (Python) tests?	"<p>I heard one can load a custom Firefox profile when starting webdriver, but I've yet to find a way to do that. The Python binding documentation doesn't state it very clearly.</p>  <p>I need to start up Firefox without JS because the site I'm testing has a lot of ads injected by Google and some are very slow to load, making the tests slow as well because it waits for all the page objects to finish loading.</p>"	2011-12-23 07:40:47.63 UTC	8613669	"<p>You can use the <code>-firefoxProfileTemplate</code> command line option when starting the Selenium server. But it seems rather counterproductive to disable javascript when testing how browsers behave on your site (unless your site doesn't have any scripts of its own) - you should rather use adblock, or disable the IP used by Google ads in the hosts file of the Selenium server, or set a custom useragent for Selenium tests and don't load ads based on that.</p>"			2011-12-23 08:13:49.343 UTC
