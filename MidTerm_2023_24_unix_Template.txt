## MidTerm 52019/52002 2023-24

# Student IDs: 
ID1: 208747287
ID2: 206958068


## You must show a "Proof of Work" for each question, even if there is no explicit output. 
## For example, a proof of work can be a printout/output that demonstrates that your command achieved the requirements. 

Remark: Before doing all the questions, we address the commas problem in the file. The file 
can be opened nicely in excel, but only after separating it using the command: 

> awk -F'"' -v OFS='"' '{ for (i=2; i<=NF; i+=2) gsub(",", "COMMAINSIDEQUOTES", $i) } 1' stackoverflow_javascript_python_qa.csv | sed "s/\,/\\t/g" | sed "s/COMMAINSIDEQUOTES/\,/g" > stackoverflow_javascript_python_qa_clean.csv


""" Question 1 Shell Commands ($): """

awk -F'"' -v OFS='"' '{ for (i=2; i<=NF; i+=2) gsub(",", "COMMAINSIDEQUOTES", $i) } 1' stackoverflow_javascript_python_qa.csv | sed "s/\,/\\t/g" | sed "s/COMMAINSIDEQUOTES/\,/g" > stackoverflow_javascript_python_qa_clean.csv

head stackoverflow_javascript_python_qa_clean.csv 

wc -w stackoverflow_javascript_python_qa_clean.csv

wc -l stackoverflow_javascript_python_qa_clean.csv

wc -c stackoverflow_javascript_python_qa_clean.csv

""" Question 1 Shell Output ($): """
question_id     title   tags    question_date   question_body       answer_id       answer_body
39960   Javascript equivalent of Python's locals()?     javascript|python   2008-09-02 16:29:30.997000 UTC  "<p>In Python one can get a dictionary of all local and global variables in the current scope with the built-in functions <code>locals()</code> and <code>globals()</code>.  Is there some equivalent way of doing this in Javascript?  For instance, I would like to do something like the following:</p>  <pre><code>var foo = function(){ alert('foo'); }; var bar = function(){ alert('bar'); };  var s = 'foo'; locals()[s](); // alerts 'foo' </code></pre>  <p>Is this at all possible, or should I just be using a local object for the lookup?</p>"        39982       "<p>Well, I don't think that there is something like that in js. You can always use eval instead of locals(). Like this: </p>  <pre><code>eval(s+""()""); </code></pre>  <p>You just have to know that actually function <em>foo</em> exists.</p>  <p><strong>Edit:</strong></p>  <p>Don't use eval:) Use:</p>  <pre><code>var functionName=""myFunctionName""; window[functionName](); </code></pre>"
39960   Javascript equivalent of Python's locals()?     javascript|python   2008-09-02 16:29:30.997000 UTC  "<p>In Python one can get a dictionary of all local and global variables in the current scope with the built-in functions <code>locals()</code> and <code>globals()</code>.  Is there some equivalent way of doing this in Javascript?  For instance, I would like to do something like the following:</p>  <pre><code>var foo = function(){ alert('foo'); }; var bar = function(){ alert('bar'); };  var s = 'foo'; locals()[s](); // alerts 'foo' </code></pre>  <p>Is this at all possible, or should I just be using a local object for the lookup?</p>"        39992       "<p>AFAIK, no. If you just want to check the existence of a given variable, you can do it by testing for it, something like this:</p>  <pre><code>if (foo) foo(); </code></pre>"
39960   Javascript equivalent of Python's locals()?     javascript|python   2008-09-02 16:29:30.997000 UTC  "<p>In Python one can get a dictionary of all local and global variables in the current scope with the built-in functions <code>locals()</code> and <code>globals()</code>.  Is there some equivalent way of doing this in Javascript?  For instance, I would like to do something like the following:</p>  <pre><code>var foo = function(){ alert('foo'); }; var bar = function(){ alert('bar'); };  var s = 'foo'; locals()[s](); // alerts 'foo' </code></pre>  <p>Is this at all possible, or should I just be using a local object for the lookup?</p>"        40012       "<p>I seem to remember Brendan Eich commented on this in a recent podcast; if i recall correctly, it's not being considered, as it adds unreasonable restrictions to optimization. He compared it to the <code>arguments</code> local in that, while useful for varargs, its very existence removes the ability to guess at what a function will touch just by looking at its definition. </() - Yes.</p></li> </ul>  <p><code>window</code> is a reference to the global scope, like <code>globals()</code> in python.</p>  <pre><code>globals()[""foo""] </code></pre>  <p>is the same as:</p>  <pre><code>window[""foo""] </code></pre>"
112112  Javascript interpreter to replace Python        javascript|shell|scripting  2008-09-21 20:52:55.823000 UTC  "<p>In terms of quick dynamically typed languages, I'm really starting to like Javascript, as I use it a lot for web projects, especially because it uses the same syntax as Actionscript (flash).</p>  <p>It would be an ideal language for shell scripting, making it easier to move code from the front and back end of a site, and less of the strange syntax of python.</p>  <p>Is there a good, javascript interpreter that is easy to install (I know there's one based on java, but that would mean installing all the java stuff to use), </p>"    112119      "<p>In my years I've found most Javascript developers find it quite easy to transfer over to PHP and vice versa - it isn't a direct answer to your question, although if you're working in ActionScript and JavaScript then you're best to stick with something like PHP (if you're not willing to move to Java, and stick with the ECMA base)</p>"
112112  Javascript interpreter to replace Python        javascript|shell|scripting  2008-09-21 20:52:55.823000 UTC  "<p>In terms of quick dynamically typed languages, I'm really starting to like Javascript, as I use it a lot for web projects, especially because it uses the same syntax as Actionscript (flash).</p>  <p>It would be an ideal language for shell scripting, making it easier to move code from the front and back end of a site, and less of the strange syntax of python.</p>  <p>Is there a good, javascript interpreter that is easy to install (I know there's one based on java, but that would mean installing all the java stuff to use), </p>"    112122      "<p>Google's <a href=""http://code.google.com/apis/v8/build.html"" rel=""nofollow noreferrer"">V8</a> can be used as a standalone interpreter. Configuring with <code>scons sample=shell</code> will build an executable named <code>shell</code>, that can be called like so: <code>./shell file.js</code>.</p>"
112112  Javascript interpreter to replace Python        javascript|shell|scripting  2008-09-21 20:52:55.823000 UTC  "<p>In terms of quick dynamically typed languages, I'm really starting to like Javascript, as I use it a lot for web projects, especially because it uses the same syntax as Actionscript (flash).</p>  <p>It would be an ideal language for shell scripting, making it easier to move code from the front and back end of a site, and less of the strange syntax of python.</p>  <p>Is there a good, javascript interpreter that is easy to install (I know there's one based on java, but that would mean installing all the java stuff to use), </p>"    112124      "<p>There are four big javascript interpreters currently. V8, Squirrelfish, Spidermonkey and Rhino.  I think more important than performance is how well it integrates into existing infrastructure, and I guess Rhino with its bridge to Java wins here

Line count:
4334

word count:
1102970

Char count:
9991106

""" Question 2 Shell Commands ($): """
#  Count the number of different lines where the word pandas or the word numpy appears in the file
grep -iE "pandas|numpy" stackoverflow_javascript_python_qa.csv | sort | uniq | wc -l

# count the number of different questions in which the word pandas or the word numpy appears in the body of the question in this file.
awk -F, '{print $1 "," $4}' stackoverflow_javascript_python_qa_clean.csv | grep -iE 'pandas|numpy' | cut -d, -f1 | sort | uniq | wc -l


""" Question 2 Shell Output ($): """
lines
101 

questions
28

""" Question 3 Shell Commands ($): """  

# split the files:
mkdir -p splittedfiles
awk -F '\t' 'NR>1 {split($4, date, "-"); print $0 > "splittedfiles/stackoverflow_"date[1]".csv"}' stackoverflow_javascript_python_qa_clean.csv

#count files
ls splitedfiles/stackoverflow_*.csv | wc -l

# present first line for each file:
for file in splittedfiles/stackoverflow_*.csv; do echo "File: $file"; head -n 1 $file; done

for file in splitedfiles/stackoverflow_*.csv; do echo "File: $file"; head -n 1 $file; done

""" Question 3 Shell Output ($): """            !

File: splittedfiles/stackoverflow_2008.csv
39960   Javascript equivalent of Python's locals()?     javascript|python       2008-09-02 16:29:30.997000 UTC  "<p>In Python one can get a dictionary of all local and global variables in the current scope with the built-in functions <code>locals()</code> and <code>globals()</code>.  Is there some equivalent way of doing this in Javascript?  For instance, I would like to do something like the following:</p>  <pre><code>var foo = function(){ alert('foo'); }; var bar = function(){ alert('bar'); };  var s = 'foo'; locals()[s](); // alerts 'foo' </code></pre>  <p>Is this at all possible, or should I just be using a local object for the lookup?</p>"  39982    "<p>Well, I don't think that there is something like that in js. You can always use eval instead of locals(). Like this: </p>  <pre><code>eval(s+""()""); </code></pre>  <p>You just have to know that actually function <em>foo</em> exists.</p>  <p><strong>Edit:</strong></p>  <p>Don't use eval:) Use:</p>  <pre><code>var functionName=""myFunctionName""; window[functionName](); </code></pre>"
File: splittedfiles/stackoverflow_2009.csv
455580  JSON datetime between Python and JavaScript     javascript|python|json  2009-01-18 17:51:11.843000 UTC  "<p>I want to send a datetime.datetime object in serialized form from Python using <a href=""http://en.wikipedia.org/wiki/JSON"" rel=""noreferrer"">JSON</a> and de-serialize in JavaScript using JSON. What is the best way to do this?</p>" 455863  "<p>If you're certain that only Javascript will be consuming the JSON, I prefer to pass Javascript <code>Date</code> objects directly.</p>  <p>The <code>ctime()</code> method on <code>datetime</code> objects will return a string that the Javascript Date object can understand.</p>  <pre><code>import datetime date = datetime.datetime.today() json = '{""mydate"":new Date(""%s"")}' % date.ctime() </code></pre>  <p>Javascript will happily use that as an object literal, and you've got your Date object built right in.</p>"
File: splittedfiles/stackoverflow_2010.csv
2001796 Javascript lexer / tokenizer (in Python?)       javascript|python|yacc|lex|tokenize     2010-01-04 19:57:30.480000 UTC  "<p>Does anyone know of a Javascript lexical analyzer or tokenizer (preferably in Python?)</p>  <p>Basically, given an arbitrary Javascript file, I want to grab the tokens.</p>  <p>e.g.</p>  <p>foo = 1</p>  <p>becomes something like:</p>  <ol> <li>variable name : ""foo""</li> <li>whitespace</li> <li>operator : equals</li> <li>whitespace</li> <li>integer : 1</li> </ol>"      2003418 "<p><a href=""http://code.google.com/p/pynarcissus/"" rel=""nofollow noreferrer"">http://code.google.com/p/pynarcissus/</a> has one.</p>  <p>Also I made one but it doesn't support automatic semicolon insertion so it is pretty useless for javascript that you have no control over (as almost all real life javascript programs lack at least one semicolon) :) Here is mine:</p>  <p><a href=""http://bitbucket.org/santagada/jaspyon/src/tip/jaspyon/"" rel=""nofollow noreferrer"">http://bitbucket.org/santagada/jaspyon/src/tip/jaspyon/</a></p>  <p>the grammar is in jsgrammar.txt, it is parsed by the PyPy parsing lib (which you will have to download and extract from the pypy source) and it build a parse tree which I walk on astbuilder.py</p>  <p>But if you don't have licensing problems I would go with pynarcissus. heres a direct link to look at the code (ported from narcissus):</p>  <p><a href=""http://code.google.com/p/pynarcissus/source/browse/trunk/jsparser.py"" rel=""nofollow noreferrer"">http://code.google.com/p/pynarcissus/source/browse/trunk/jsparser.py</a></p>"
File: splittedfiles/stackoverflow_2011.csv
4591318 Templating system for both Python and Javascript?       javascript|python|templates|google-closure-templates    2011-01-04 07:03:39.223000 UTC     "<p>A nice feature of Google's Soy templates is that you can use the same templates on the client (JS) and on the server (Java).</p>  <p>Currently I plan to render most pages client-side using Soy templates compiled to JS. However, my backend is written in Python (using Tornado), so I can't easily use the same templates server-side to generate emails or static pages.</p>  <p>I could render these soy templates using a separate Java component on the server side, or perhaps even get them working in node.js. Neither of those options seem particularly clean.</p>  <p>Are there any good templating engines that run both in JS and Python? Has anyone had good results with JSON-Template or Tenjin? Any other ideas?</p>"  4591402 "<p>Mustache is a template engine that has been implemented in both Python and JavaScript (and many other languages).</p>  <p><a href=""http://mustache.github.com/"" rel=""noreferrer"">http://mustache.github.com/</a></p>"
File: splittedfiles/stackoverflow_2012.csv
8703945 Download a file from a site (partly written in Javascript) using Python javascript|python|selenium|download     2012-01-02 18:12:46.143000 UTC     "<p>I'm trying to use Python to download a voice file (mp3) from <a href=""http://ivona.com/pl/"" rel=""nofollow noreferrer"">this</a> site:</p>  <p>I've tried to use mechanize and twill but I haven't got the proper result. I've heard about selenium as well. Anyway, I don't even know if it makes sense technically (mechanize + Javascript).</p>  <p>I was looking for an answer and finally I've found this <a href=""https://stackoverflow.com/a/8289068/1126604"">solution</a>.</p>  <p>It seems like a similar problem to mine but I have absoutely no idea what should I put instead of the 4th line.</p>  <p>If you have any proposition (maybe completely different to mine) I'll be glad to see it.</p>"       8704187 "<p><em>(Moving to answer to get more space)</em></p>  <p>Thanks for pointing me to selenium, I didn't know that and it looks cool; anyways: I had a quick look and the js seems to fire an ajax request, that yields no apparent result -- I guess the audio transfer is done some way in the background via flash or so; anyways: what about using the service they offer: developer.ivona.com instead of trying hacking your webservice out of the demo interface..?</p>  <p>Anyways, here it is the hacked web-service you asked for:</p>  <p>This is the URL you want to GET:</p>  <pre><code>""http://www.ivona.com/voicetest.php?rtr=1&amp;t2r=%(the_text)s..&amp;v2r=dXNfc2FsbGk.&amp;lang=us"" % dict(     the_text=base64.b64encode(""Hello, world!""),     the_voice=base64.b64encode(""us_salli""),     ) </code></pre>  <p>You can test that with, for example, mplayer:</p>  <pre><code>mplayer ""http://www.ivona.com/voicetest.php?rtr=1&amp;t2r=SGVsbG8sIHdvcmxkIQ==..&amp;v2r=dXNfc2FsbGk.&amp;lang=us"" </code></pre>  <p>And, from Python, use urllib to retrieve and store somewhere.</p>  <p>Beware that, since this is an unauthorized use, you might get blocked / incur in legal issues / etc. -- don't use in a production application!</p>"        
File: splittedfiles/stackoverflow_2013.csv
14124757        JavaScript equivalent to Python's import?       javascript      2013-01-02 15:40:13.300000 UTC  "<blockquote>   <p><strong>Possible Duplicate:</strong><br>   <a href=""https://stackoverflow.com/questions/950087/include-javascript-file-inside-javascript-file"">Include JavaScript file inside JavaScript file?</a>  </p> </blockquote>    <p>Is there any way to simply import a JavaScript library into a JavaScript file?</p>  <p>In Python, you can simply do this:</p>  <pre><code>import math </code></pre>  <p>Is there anything similar in JavaScript?</p>"     14124791        "<p>In today's vanilla javascript, no, you can't do that.</p>  <p>But in a future version, a similar feature will probably be available. <a href=""http://wiki.ecmascript.org/doku.php?id=harmony%3amodules"" rel=""nofollow"">Modules are discussed from a long time</a>. And as a Python programmer, you might be interested by <a href=""http://css.dzone.com/articles/exciting-future-javascript-0"" rel=""nofollow"">this article</a> too.</p>  <p>Today you may</p>  <ul> <li>use one of the many frameworks enabling this kind of import, like <a href=""http://requirejs.org/"" rel=""nofollow"">require.js</a>.</li> <li>dynamically add a <code>&lt;script&gt;</code> element to your page (yes, it's ugly)</li> <li>fetch it using ajax and evaluating it (it's uglier)</li> </ul>  <p>But...</p>  <p>if you always import the same files, you should consider concatenating them (and minifying them), as the number of requested files is one of the main elements to consider when optimizing the performances of your site. </p>"
File: splittedfiles/stackoverflow_2014.csv
20890687        Is there a python strip function equivalent in javascript?      javascript|python       2014-01-02 19:51:19.217000 UTC     "<p>Python's strip function is used to remove given characters from the beginning and end of the string. How to create a similar function in javascript?</p>  <p>Example:</p>  <pre><code>str = ""'^$   *# smart kitty &amp;  ''^$*   '^""; newStr = str.strip("" '^$*#&amp;""); console.log(newStr); </code></pre>  <p>Output:</p>  <pre><code>smart kitty </code></pre>"    20890733        "<p>Not exactly... I would use regex for complicated string manipulation or the Slice() method to remove characters at certain points <a href=""http://www.w3schools.com/jsref/jsref_slice_string.asp"" rel=""nofollow"">Slice() explained</a></p>"
File: splittedfiles/stackoverflow_2015.csv
27917471        Pass parameter with Python Flask in external Javascript javascript|python|flask 2015-01-13 08:08:05.943000 UTC  "<p>I use Python Flask for my website and I pass several parameters to Javascript. This is my code:</p>  <pre><code>from flask import Flask from flask import render_template  app = Flask(__name__)   @app.route(""/"") def index():      return render_template(""index.html"", param1=""Hello"")   &lt;html&gt;    &lt;head&gt;    &lt;/head&gt;    &lt;body&gt;       &lt;p&gt;Hello World&lt;/p&gt;    &lt;/body&gt;    &lt;script&gt;console.log({{param1}})&lt;/script&gt; &lt;/html&gt; </code></pre>  <p>With this way, it works without a problem. The example is a simplified of my own. But, if I want to have the script on an external file and call it like this:</p>  <pre><code>&lt;html&gt;    &lt;head&gt;    &lt;/head&gt;    &lt;body&gt;       &lt;p&gt;Hello World&lt;/p&gt;    &lt;/body&gt;    &lt;script src=""/static/js/myjs.js""&gt;&lt;/script&gt; &lt;/html&gt; </code></pre>  <p>And the <code>myjs.js</code> file is the <code>console.log({{param1}})</code>, then it doesn't work. So, is there any way to pass parameters in external Javascript files with Python Flask?</p>" 27926189        "<p>If you want to render a file with Jinja, you need to call <code>render_template</code> on it and pass it the desired values.  Just linking directly to a static file obviously doesn't do that.  One solution is to use Jinja's <a href=""http://jinja.pocoo.org/docs/dev/templates/#include"" rel=""noreferrer""><code>include</code></a> block.  This requires that 'myjs.js' is in the 'templates/js' folder, and will include it in the rendered template, passing all the templates context to the included template.</p>  <pre><code>&lt;script&gt;{% include 'js/myjs.js' %}&lt;/script&gt; </code></pre>  <p>The <strong>better</strong> solution is to not require rendering the js on every request, and instead passing parameters to js functions from your template.</p>  <pre class=""lang-html prettyprint-override""><code>&lt;script src=""{{ url_for('static', filename='js/myjs.js') }}""&gt;&lt;/script&gt; &lt;script&gt;     my_func({{ my_var|tojson }}); &lt;/script&gt; </code></pre>"
File: splittedfiles/stackoverflow_2016.csv
34608402        Python/mechanize on javascript page with csrf   javascript|python|mechanize|csrf        2016-01-05 09:40:14.090000 UTC     "<p>I want to use python/mechanize to control my modem/router box. While I can login and navigate through the menus, I am not able to change any value (browser submit has no effect). The pages use javascript, but I think that I did the equivalent with mechanize in my script. Can it be it because of the <em>antiCSRF.js</em> file inclusion that prevents me to change any value?</p>  <p>The html/js code of the page:</p>  <pre><code>&lt;head&gt; &lt;script type=""text/javascript""&gt;         function main_reboot_button()         {             var confrm = confirm(""Do you want to continue..."")             if(confrm){                          
document.getElementById(""main_reboot"").value = ""1"";                 document.getElementById(""main-reboot-form"").submit();                 return false;             }             else {                 return false;             }         } &lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;div class=""panel-body panel-align""&gt; &lt;div class=""panel panel-default accor_brd accor_brd_RB_Curved content_blk""&gt;   &lt;form method=""post"" action=""bbox-maintenance.lp"" id=""main-reboot-form"" style=""padding-top:20px;""&gt;   &lt;div class=""control_blk clearfix""&gt;     &lt;input type=""hidden"" name= ""main_reboot"" id=""main_reboot"" value=""0""&gt;&lt;/input&gt;     &lt;label for=""input01"" class=""control-label txt-head""&gt;Reboot Modem&lt;/label&gt;     &lt;button class=""btn_proximus_standalone"" onclick='return main_reboot_button()'&gt;Restart&lt;/button&gt;   &lt;/div&gt;   &lt;/form&gt;  &lt;/div&gt; &lt;/div&gt; &lt;/body&gt; &lt;script type='text/javascript' src='js/antiCSRF.js'&gt;&lt;/script&gt; </code></pre>  <p>The antiCSRF.js file:</p>  <pre><code>function readCookie(name) {   var nameEQ = name + ""="";   var ca = document.cookie.split(';');   for(var i=0;i &lt; ca.length;i++) {     var c = ca[i];     while (c.charAt(0)==' ') c = c.substring(1,c.length);     if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length);   }  return null; } var forms=document.getElementsByTagName(""form""); var rn = readCookie('xAuth_SESSION_ID'); for (var i=0; i&lt;forms.length; i++) {   var temp = document.createElement(""INPUT"");   temp.type = ""hidden"";   temp.name = ""rn"";   temp.value = rn;   forms[i].insertBefore(temp, forms[i].firstChild); } </code></pre>  <p>The part of the python code I use to make the request (after login stuff):</p>  <pre><code>browser.open(""http://192.168.1.1/bbox-maintenance.lp"")     browser.select_form(nr = 0) browser.form.find_control(""main_reboot"").readonly = False browser.form['main_reboot'] = ""1"" browser.submit() </code></pre>  <p>As a result, the box is not rebooted while it should have been. The python script shows no error.</p>"    34613152        "<p>I finally found the solution (by understanding better how works antiCSRF). I need to read the cookie value, add a new element with name 'rn' to the form and set it to the cookie value.</p>  <p>Adding those lines after browser.select_form does the trick:</p>  <pre><code>browser.form.new_control('text','rn',{'value':''}) browser.form.fixup() browser.form['rn'] = cj[0].value  </code></pre>"
File: splittedfiles/stackoverflow_2017.csv
41413634        Integration of ServerSide Javascript with Python        javascript|node.js|tornado|operational-transform        2017-01-01 05:49:17.947000 UTC     "<p>I am building a web app which uses a JSON array to save and transfer state between server and client and vice versa.  I'm attempting to add 'collaboration' capabilities to it such it that multiple clients can simultaneously edit the json data without causing conflicts and with the data being updated on all clients in real time.  </p>  <p>On the backend I'm using python so I was very happy to find the <a href=""https://github.com/opencoweb/coweb"" rel=""nofollow noreferrer"">opencoweb</a> project, sadly it is no longer being maintained.  Similarly, I've found <a href=""https://github.com/share/sharedb"" rel=""nofollow noreferrer"">ShareDB</a> and it seems like a very neat project!  I would like to spin up ShareDB on my server side from my Python code but am unsure as to what the best approach to running javascript code server side would be.  At this point, I'm considering just running it with node from the command line, but wondering whether it would make more sense to use a python library which can allow the running of javascript (Js2Py or something similar).  So this brings me to my question, on the server side is there a 'recommended' approach to integrating javascript into your server side code base when using python (tornado) for your main framework?</p>"   41432455        "<p>I believe I've come up with an answer to my own question.  It seems like this question has been discussed here prior, where the recommendation was to use sockets, and the recommendation of using zerorpc got alot of up-votes.  So in my case, I would likely be running the ShareDB as a service which I would be calling from Python using zerorpc.  Hopefully this helps someone else in my shoes!</p>"
File: splittedfiles/stackoverflow_2018.csv
48098631        Python dictionary to Javascript object  javascript|python|object|dictionary     2018-01-04 15:38:46.370000 UTC  "<p>I want to find how many times a character is given in string.</p>  <p>Python codes works</p>  <pre><code>def func(a): d={} for ch in a:     if ch in d:         d[ch] += 1     else:         d[ch] = 1 print d </code></pre>  <p>and javascript</p>  <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-js lang-js prettyprint-override""><code>function how_many_times(string) {   object = {};   for (var i in string) {     if (i in object) {       object[i] += 1     } else {       object[i] = 1     }   }      console.log(object) }  how_many_times('Hello, World !')</code></pre> </div> </div> </p>  <p>When I try to pass this to javascript, I don't get the same result. I tried like this because I read python dictionary and javascript object are very similar. I know I can solve problem with other ways but <strong>I want to learn why it doesn't work in objects</strong>.</p>"       48098674        "<p>You could use <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/for...of"" rel=""nofollow noreferrer""><code>of</code></a> instead of <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/for...in"" rel=""nofollow noreferrer""><code>in</code></a> for the iteration.</p>  <p>The <code>for ... in</code> statement iterates over the keys of an object. The final result is an object with all indices and the count of one instead of getting the character and the count of it.</p>  <p>A possible workaround without <code>in</code> could be the use of the index as accessor for the wanted value, like <code>string[i]</code>.</p>  <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-js lang-js prettyprint-override""><code>function how_many_times(string) {     var object = {},         i;      for (i of string) {         if (i in object) {             object[i] += 1;         } else {             object[i] = 1;         }     }     console.log(object) }  how_many_times('Hello, World !')</code></pre> </div> </div> </p>"
File: splittedfiles/stackoverflow_2019.csv
53992898        How to communicate between websocets using javascript as client and python as web server        javascript|python|node.js|websocket        2019-01-01 03:49:47.323000 UTC  <p>I have connected my web server and client its working. Now I want to call variables that's passing from backend and do a counting</p>  <p>for example: backend python is passing 2 variables called price of an apple and no.of apples I need to count the price of all apples and print it in client side using javascript</p>  <p>Any help is appreciated</p>       53993381        "<p>In my case I have done with this approach,</p>  <ul> <li>I have created one JS file for WebSocket event handling methods(onOpen,onClose and onMessage) which is loaded on home page loading.</li> <li>In this file I have created one reference variable to hold events of WebSockets using (.prototype)</li> <li>Same like second step created two seperate methods for creating connection which is going to be called from home page and one connect method to connect the server</li> <li>In onMessage you can call your business method where you can put your logic</li> </ul>  <p>code look like,</p>  <pre><code>var _wObj = null; function WSSocket(tObj) {     //basic properties } </code></pre>  <p>create connection</p>  <pre><code>WSSocket.createConnection = function ( tObj ) {     if (!_wObj) {         _wObj = new WSSocket(tObj);     }     return _wObj; } </code></pre>  <p>connect to server</p>  <pre><code>WSSocket.prototype.connect = function () {     //connection logic } </code></pre>  <p>register events</p>  <pre><code>WSSocket.prototype.registerEvents = function () {         //registering logic         this.wObj.onmessage = function (event) {              //call your operation method         } } </code></pre>"
File: splittedfiles/stackoverflow_2020.csv
59552659        Python List to Javascript Observable Array      javascript|python|list|flask|knockout.js        2020-01-01 12:49:21.817000 UTC     "<p>So I am implementing an API through Python Flask. My code structure is something like the following:</p>  <pre><code>src/ |--&gt; main.py |--&gt; api/ |     |--&gt; users.py |--&gt; static/       |--&gt; index.html </code></pre>  <p>Inside <code>users.py</code> I have a list called <code>user_list</code>. The thing is I want to perform some operations with that list, for which I want to make it an Observable Array to and handle it in <code>index.html</code>. Speaking roughly, I do not know how to send that list from <code>users.py</code> to <code>index.html</code> through <code>main.py</code> (which handles the whole API).</p>  <p>I am really lost on how to do this, as I do not understand JavaScript's Observable Arrays at all.</p>"      59552780        "<p>To pre-populate an observable array, pass an array to the <code>ko.observableArray</code> function. To pass an array from Flask code through the template to JavaScript, use Flask's <code>tojson</code> filter. Thus, in the template:</p>  <pre><code>&lt;script&gt;   const userList = ko.observableArray({{ user_list | tojson }}); &lt;/script&gt; </code></pre>  <p>It is impossible to do this in a static file, for obvious reasons (you want some dynamic content injected into it). An alternative that <em>would</em> work with a static <code>index.html</code> would be to populate your observable array via AJAX, but since you provided no code, it is hard to tell you exactly how to do it.</p>"
File: splittedfiles/stackoverflow_2021.csv
65540240        How to communicate between multiple javascript files in python eel      javascript|python|communication|wikipedia|eel      2021-01-02 14:34:18.130000 UTC  "<p>I am trying to make a HTML app using eel. In this app I have two javascript files and want to make communication between my python main.py file. It will get a string from &quot;show()&quot; and &quot;show2()&quot;.The string from &quot;show()&quot; will go to my &quot;script.js&quot; file and the string from &quot;show2()&quot; will go to &quot;script2.js&quot;.I am able to get strings from &quot;show()&quot; but not from show2(). Only one javascript file is working and the other is not working. Can someone please help me with it?</p> <p>Here is my python &quot;main.py&quot; code:</p> <pre><code>import eel import time import wikipedia import socket import os import pyttsx3 import webbrowser import datetime import sound  engine= pyttsx3.init(&quot;sapi5&quot;) en_id = &quot;HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Speech\\Voices\\Tokens\\TTS_MS_Cortana&quot; engine.setProperty(&quot;voice&quot;,en_id) def say(audio):     engine.say(audio)     engine.runAndWait()  @eel.expose def show(text):     user=text.lower()          if &quot;hello&quot; in user or &quot;hey&quot; in user:         ans=&quot;Hello, how can I help you?&quot;         time.sleep(0.5)         eel.boxes2(ans)         say(ans) @eel.expose def show2(text2):     print(text2)     eel.boxes3(&quot;hello&quot;)    eel.init(&quot;eel&quot;) eel.start(&quot;index.html&quot;,size=(460,660)) </code></pre> <p>And here is my &quot;script.js&quot; file. This file is working:</p> <pre><code>var nav=document.getElementById(&quot;content&quot;); var textbox=document.getElementById(&quot;input&quot;);  var tag=document.createElement(&quot;i&quot;);  textbox.onclick=function(){     nav.style.display=&quot;none&quot;;  } eel.expose(boxes2); function boxes2(reply){     var tag=document.createElement(&quot;a&quot;);     var text=document.createTextNode(reply);     tag.appendChild(text);     var element=document.getElementById(&quot;box2&quot;);     element.appendChild(tag); }   function boxes(){     var textbox=document.getElementById(&quot;input&quot;);      text= textbox.value;     eel.show(text)     var cover=document.createElement(&quot;p&quot;);     var tag=document.createElement(&quot;i&quot;);     var text=document.createTextNode(text);     tag.appendChild(text);     cover.appendChild(tag);     var element=document.getElementById(&quot;box2&quot;);     element.appendChild(cover);     textbox.value=&quot;&quot;;      } var sub = document.getElementById(&quot;send&quot;);   sub.onclick=function(){     boxes();     boxes2(reply);  } </code></pre> <p>And here is my &quot;script2.js&quot;. This is the file which is not working in python eel:</p> <pre><code>eel.expose(boxes3) function boxes3(reply2){     eel.show2(&quot;bye&quot;)     var tag=document.createElement(&quot;p&quot;);     var text=document.createTextNode(reply2);     tag.appendChild(text);     var element=document.getElementById(&quot;box2&quot;);     element.appendChild(tag); }  var sub2 = document.getElementById(&quot;hello&quot;);   sub2.onclick=function(){     boxes3(reply2);  } </code></pre> <p>Here is my index.html code:</p> <pre><code>&lt;!DOCTYPE html&gt; &lt;html lang=&quot;en&quot;&gt; &lt;head&gt;     &lt;meta charset=&quot;UTF-8&quot;&gt;     &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, user-scalable=no&quot;&gt;     &lt;title&gt;Aurora&lt;/title&gt;     &lt;link rel=&quot;Icon&quot; href=&quot;logo.ico&quot; type=&quot;png&quot; hreflang=&quot;en&quot;&gt;     &lt;link rel=&quot;stylesheet&quot; href=&quot;style.css&quot;&gt;      &lt;/head&gt; &lt;body&gt;     &lt;div style=&quot;background-color: blanchedalmond; width: 500px; height: 30px; position: fixed; top: 0;&quot;&gt;         &lt;label id=&quot;options&quot; title=&quot;options&quot;&gt;...&lt;/label&gt;         &lt;button id=&quot;hello&quot; &gt;hello&lt;/button&gt;     &lt;/div&gt;     &lt;div style=&quot;width: max-content; height: 630px; overflow-y: scroll; overflow-x: hidden;scroll-behavior: auto;&quot;&gt;         &lt;div id=&quot;box2&quot; style=&quot;width: 470px;  height: max-content; margin-top: 35pt;margin-left: 20px;&quot;&gt;&lt;/div&gt;     &lt;/div&gt;          &lt;div id=&quot;content&quot;&gt;         &lt;label id=&quot;close&quot; title=&quot;close&quot;&gt;×&lt;/label&gt;         &lt;h1 style=&quot;font-family: segoe ui; position: relative; top: -50px;left: 10px; font-weight: 300;&quot;&gt;Aurora&lt;/h1&gt;         &lt;button style=&quot;width: 100%; font-size: 15pt; text-align: left; position: relative; top: 220pt; border:none; padding: 7pt;outline: none; &quot; id=&quot;settings&quot;&gt;Settings&lt;/button&gt;         &lt;button style=&quot;width: 100%; font-size: 15pt; text-align: left; position: relative; top: 220pt; border: none; padding: 7pt;outline: none;  &quot; id=&quot;settings&quot;&gt;About&lt;/button&gt;         &lt;button style=&quot;width: 100%; font-size: 15pt; text-align: left; position: relative; top: 220pt; border: none; padding: 7pt;outline: none;  &quot; id=&quot;settings&quot;&gt;Commands&lt;/button&gt;     &lt;/div&gt;          &lt;div id=&quot;user-input&quot;&gt;         &lt;form&gt;             &lt;textarea id=&quot;input&quot; placeholder=&quot;Ask me something&quot; title=&quot;ask aurora&quot;&gt;&lt;/textarea&gt;         &lt;/form&gt;         &lt;button id=&quot;send&quot; title=&quot;send text&quot;&gt;Send&lt;/button&gt;     &lt;/div&gt;     &lt;script src=&quot;eel.js&quot;&gt;&lt;/script&gt;     &lt;script src=&quot;script.js&quot;&gt;&lt;/script&gt;     &lt;script src=&quot;script2.js&quot;&gt;&lt;/script&gt;           &lt;/body&gt; &lt;/html&gt; </code></pre> <p>Please help me!!!</p>"     65547559        "<p>all functions decorated with @eel.expose must be between eel.init and eel.start.</p> <p>Try using the following line:</p> <pre><code>eel.init('eel', allowed_extensions=['.js', '.html']) </code></pre> <p>This will look for exposed functions in all js and html files contained in your eel folder.</p>"

""" Question 4 Shell Commands ($): """

for file in stackoverflow_*.csv; do
    echo "Processing file: $file"
    python3 count_top_diff_freq_words.py "$file" "stackoverflow_javascript_python_qa_clean.csv" 5
done

""" Question 4 Shell Output ($): """

Processing file: stackoverflow_2008.csv
self: 0.012691720206470658
lt: 0.009939592490462154
gt: 0.00923902435909284
d: 0.007869698222239607
code: 0.007825477237646067
Processing file: stackoverflow_2009.csv
a: 0.008984778897417056
lt: 0.008935661399234109
python: 0.007563473997305987
code: 0.007424077071205095
gt: 0.007414441816005021
Processing file: stackoverflow_2010.csv
a: 0.009898635183277962
code: 0.009282040549342233
p: 0.009222252921641458
pre: 0.005057079540193061
quot: 0.00501558099466482
Processing file: stackoverflow_2011.csv
p: 0.006933404177786026
a: 0.005668421217197916
quot: 0.005235093458448748
javascript: 0.004658279179259253
python: 0.00414766091146755
Processing file: stackoverflow_2012.csv
quot: 0.0063289938931296395
p: 0.005801803473094766
a: 0.005587891335167992
to: 0.003668855393597112
javascript: 0.003446376971634685
Processing file: stackoverflow_2013.csv
quot: 0.003980090589588397
2013: 0.0033043960055599976
lt: 0.003186035343580464
p: 0.002942149777499674
to: 0.002414510245245246
Processing file: stackoverflow_2014.csv
quot: 0.005689855564701157
p: 0.0036308765369426482
2014: 0.0034468494696931
0: 0.0024303240591130714
a: 0.0022339029317870705
Processing file: stackoverflow_2015.csv
quot: 0.006009058957520198
code: 0.0037474374926280765
2015: 0.003516112583710796
p: 0.002252095834675061
pre: 0.0019811853402892116
Processing file: stackoverflow_2016.csv
lt: 0.004910217389957592
p: 0.0048193079765474905
2016: 0.004413399285613192
quot: 0.00364348219753756
amp: 0.0034780821949717978
Processing file: stackoverflow_2017.csv
lt: 0.008184682210779292
gt: 0.007981443506215415
quot: 0.006475133583066861
t: 0.005443064195400174
p: 0.0037466505489010815
Processing file: stackoverflow_2018.csv
quot: 0.005052420924999344
a: 0.0037086823357841622
p: 0.0031497076870838636
javascript: 0.003020084830835176
u: 0.0027936133995565982
Processing file: stackoverflow_2019.csv
quot: 0.00343671225367028
code: 0.002704400987745652
2019: 0.002695055254757267
gt: 0.002561621974696296
javascript: 0.002335560761432409
Processing file: stackoverflow_2020.csv
quot: 0.030944575302543246
p: 0.004716400318348177
a: 0.004530479274174094
2020: 0.002571714668829774
the: 0.0024812313460500085
Processing file: stackoverflow_2021.csv
quot: 0.03479037711374849
code: 0.005422464299506775
let: 0.0040229326272213095
request: 0.0038489498130597653
0: 0.003524271919083802


""" Question 5 Shell Commands ($): """



""" Question 5 Shell Output ($): """



""" Question 5 Shell Answer ($): """

