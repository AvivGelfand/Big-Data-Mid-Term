20890687	Is there a python strip function equivalent in javascript?	javascript|python	2014-01-02 19:51:19.217000 UTC	"<p>Python's strip function is used to remove given characters from the beginning and end of the string. How to create a similar function in javascript?</p>  <p>Example:</p>  <pre><code>str = ""'^$   *# smart kitty &amp;  ''^$*   '^""; newStr = str.strip("" '^$*#&amp;""); console.log(newStr); </code></pre>  <p>Output:</p>  <pre><code>smart kitty </code></pre>"	"<p>Modifying a code snippet from <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/Trim"" rel=""nofollow noreferrer"">Mozilla Developer Network String.prototype.trim()</a>, you could define such a function as follows.</p>  <pre><code>if (!String.prototype.strip) {   String.prototype.strip = function (string) {     var escaped = string.replace(/([.*+?^=!:${}()|\[\]\/\\])/g, ""\\$1"");     return this.replace(RegExp(""^["" + escaped + ""]+|["" + escaped + ""]+$"", ""gm""), '');   }; } </code></pre>  <p>It's not necessary and probably not advisable to put this function in the object <code>String.prototype</code>, but it does give you a clear indication of how such a function compares with the existing <code>String.prototype.trim()</code>.</p>  <p>The value of <code>escaped</code> is as in the function <code>escapeRegExp</code> in the <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions"" rel=""nofollow noreferrer"">guide to Regular Expressions</a>. The Java programming language has a standard library function for that purpose, but <a href=""https://stackoverflow.com/questions/2593637/how-to-escape-regular-expression-in-javascript"">JavaScript does not</a>.</p>"
20890687	Is there a python strip function equivalent in javascript?	javascript|python	2014-01-02 19:51:19.217000 UTC	"<p>Python's strip function is used to remove given characters from the beginning and end of the string. How to create a similar function in javascript?</p>  <p>Example:</p>  <pre><code>str = ""'^$   *# smart kitty &amp;  ''^$*   '^""; newStr = str.strip("" '^$*#&amp;""); console.log(newStr); </code></pre>  <p>Output:</p>  <pre><code>smart kitty </code></pre>"	"<p>A simple but not very effective way would be to look for the characters and remove them:</p>  <pre><code>function strip(str, remove) {   while (str.length &gt; 0 &amp;&amp; remove.indexOf(str.charAt(0)) != -1) {     str = str.substr(1);   }   while (str.length &gt; 0 &amp;&amp; remove.indexOf(str.charAt(str.length - 1)) != -1) {     str = str.substr(0, str.length - 1);   }   return str; } </code></pre>  <p>A more effective, but not as easy to use, would be a regular expression:</p>  <pre><code>str = str.replace(/(^[ '\^\$\*#&amp;]+)|([ '\^\$\*#&amp;]+$)/g, '') </code></pre>  <p>Note: I escaped all characters that have any special meaning in a regular expression. You need to do that for some characters, but perhaps not all the ones that I escaped here as they are used inside a set. That's mostly to point out that some characters do need escaping.</p>"
20890687	Is there a python strip function equivalent in javascript?	javascript|python	2014-01-02 19:51:19.217000 UTC	"<p>Python's strip function is used to remove given characters from the beginning and end of the string. How to create a similar function in javascript?</p>  <p>Example:</p>  <pre><code>str = ""'^$   *# smart kitty &amp;  ''^$*   '^""; newStr = str.strip("" '^$*#&amp;""); console.log(newStr); </code></pre>  <p>Output:</p>  <pre><code>smart kitty </code></pre>"	"<p>Not exactly... I would use regex for complicated string manipulation or the Slice() method to remove characters at certain points <a href=""http://www.w3schools.com/jsref/jsref_slice_string.asp"" rel=""nofollow"">Slice() explained</a></p>"
20890687	Is there a python strip function equivalent in javascript?	javascript|python	2014-01-02 19:51:19.217000 UTC	"<p>Python's strip function is used to remove given characters from the beginning and end of the string. How to create a similar function in javascript?</p>  <p>Example:</p>  <pre><code>str = ""'^$   *# smart kitty &amp;  ''^$*   '^""; newStr = str.strip("" '^$*#&amp;""); console.log(newStr); </code></pre>  <p>Output:</p>  <pre><code>smart kitty </code></pre>"	"<p>There's lodash's <a href=""https://lodash.com/docs#trim"" rel=""noreferrer""><code>trim()</code></a> </p>  <blockquote>   <p>Removes leading and trailing whitespace or specified characters from string.</p> </blockquote>  <pre><code>_.trim('  abc  ');             // → 'abc'  _.trim('-_-abc-_-', '_-');     // → 'abc' </code></pre>"
20910539	How to extract value of javascript variable using python lxml	javascript|python|parsing|lxml	2014-01-03 18:40:45.273000 UTC	"<p>I am trying to get the value of a javascript variable within an html page. I have figured out how to get the text of all script tags but can't seem to figure out how to get the text of a specific variable within a script tag. Does anyone know how to get the text of a javascript variable?</p>  <p>The following is an example of what I'm trying to parse from. I'm trying to get the value of ""var d""</p>  <pre><code>&lt;div id=""box"" style=""position:absolute;z-index:6;left:px;top:450px;""&gt;&lt;/div&gt;      &lt;script language=""javascript""&gt;      function showTooltip(element, town_name, p, points, a, town_type){         var t = $('tt');         t.style.top = (-75 + element.offsetTop) +  'px';         t.style.left = (25 + element.offsetLeft) + 'px';         t.style.backgroundImage=""url('images/odd.png')"";         t.innerHTML = '&lt;font color=#AD4100&gt;' + unescape(town_name) + '&lt;br/&gt;' + unescape(p) + '&lt;br/&gt;' + points + '&lt;br/&gt;' + unescape(a) + '&lt;br/&gt;' + unescape(town_type) + '&lt;/font&gt;';         t.show();     }     function hideTooltip(){         $('tt').hide();     } var d = [[1490.77265625,1373.4140625,30983,'TownID: 30983','GREY','circle_grey.png',1248,'planet x\'s city 5','','N/A'],[1186.45390625,1538.265625,33009,'TownID: 33009','GREY','circle_grey.png',1150,'wendyshome','','N/A'],[1234.496875,856.18203125,31646,'TownID: 31646','GREY','circle_grey.png',1312,'...','','N/A'],[1041.30078125,812.55859375,35358,'TownID: 35358','GREY','circle_grey.png',1207,'Waterville','','N/A'], </code></pre>  <p>The following is a snippet of my code that gets the text of all script tags.</p>  <pre><code>for element in page.iter('script'):     scriptText = element.text_content() print(scriptText) </code></pre>"	"<p>You'll have to use string processing on <code>scriptText</code> once you have that extracted. <code>lxml</code> cannot help you any more here.</p>  <p>If <code>var d</code> is the last entry in the script, you could use:</p>  <pre><code>var_d_source = scriptText.split('var d =', 1)[-1].rsplit(';', 1)[0].strip() </code></pre>  <p>which should give you everything after <code>var d =</code> up to the last semicolon.</p>  <p>You'd then convert the value to Python with the <code>json</code> module:</p>  <pre><code>var_d_value = json.loads(var_d_value) </code></pre>"
20919960	Why in Python I can't concatenate string and number like in JavaScript?	javascript|python	2014-01-04 10:49:40.797000 UTC	"<p>The programming language Python is very concise . In comparison with the JavaScript you do not need a lot of parentheses, semicolons and <code>var</code>. One thing has always seemed to me at odds with this philosophy is the fact of not being able to concatenate strings and numbers. Without  previously converting the number to strings with <code>str ()</code> or with other constructs such as <code>% s% s% (Variale, variable)</code>. Which are the theoretical reasons of this choice?</p>  <pre><code>JavaScript: console.log(""I can c""+0+""ncat""+3+""nate a ""+1+""ot of num""+63+""rs!"")  Python: print ""I can c%incat%inate a %iot of num%irs!"" %(0,3,1,63) ---------------------------------------------------------------------------- i can c0ncat3nate a 1ot of num63rs! </code></pre>  <h2>Edit: the answer suggested by Ashwini</h2>  <p>I don't know why this question has been closed however  Ashwini Chaudhary post the link where you can find the answer. <strong>So is not an opinion</strong> but a fact based on theoretical issues. Here is the extract from the <a href=""https://wiki.python.org/moin/Why%20is%20Python%20a%20dynamic%20language%20and%20also%20a%20strongly%20typed%20language"" rel=""nofollow"">documentation page</a>:</p>  <blockquote>   <p>In a strongly typed language, you are simply not allowed to do   anything that's incompatible with the type of data you're working   with. For example, in a weakly typed language you can typically do 3 +   5 + 7 and get the result 15, because numbers can be added; similarly,   you can often do 'Hello' + 'And' + 'Goodbye' and get the result   ""HelloAndGoodBye"", because strings support concatenation. But in a   strongly-typed language you can't do 'Hello' + 5 + 'Goodbye', because   there's no defined way to ""add"" strings and numbers to each other. In   a weakly typed language, the compiler or interpreter can perform   behind-the-scenes conversions to make these types of operations work;   for example, a weakly typed language might give you the string   ""Hello5Goodbye"" as a result for 'Hello' + 5 + 'Goodbye'. The advantage   to a strongly typed language is that you can trust what's going on: if   you do something wrong, your program will generate a type error   telling you where you went wrong, and you don't have to memorize a lot   of arcane type-conversion rules or try to debug a situation where your   variables have been silently changed without your knowledge</p> </blockquote>  <p>.</p>"	"<p>Because implicit conversion is a major source of bugs</p>  <p>a more readable alternative in python 2.6 and upwards would be</p>  <pre><code> print (""I can c{}ncat{}nate a {}ot of num{}rs!"".format(0,3,1,63)) </code></pre>"
20987485	What are the differences between Python Dictionaries vs Javascript Objects?	javascript|python|object|dictionary	2014-01-08 05:11:10.423000 UTC	"<p>I'm new to Python and I was reading about Dictionaries. And from my previous experience with languages like Javascript, they seemed like objects to me. Dictionaries can store lists and share many similaraties to objects in Javascript.</p> <p>ex python code:</p> <pre><code>menu = {} menu['Chicken Alfredo'] = 14.50 menu['Italian Pasta'] = 15.89 menu['Shrimp Soup'] = 12.43 menu['Persian Rice'] = 21.99 </code></pre> <p>ex javascript code:</p> <pre><code>var menu = new Object(); menu['Chicken Alfredo'] = 14.50; menu['Italian Pasta'] = 15.89; menu['Shrimp Soup'] = 12.43; menu['Persian Rice'] = 21.99; </code></pre> <p>What's the difference here, they both do the same job, but there different concepts?</p>"	"<ol> <li><p>Keys in Python dictionaries must be hashable (e.g. a string, a number, a float), while JavaScript does not have such a requirement.</p> </li> <li><p>The following is a valid object in JavaScript:</p> </li> </ol> <pre class=""lang-js prettyprint-override""><code>const javascriptObject = { name: 'Alexander Pushkin', year: 1799 } </code></pre> <p>However, it would be invalid as a Python dictionary:</p> <pre class=""lang-py prettyprint-override""><code>python_dictionary = {name: 'Alexander Pushkin', year: 1799}   # Results in a NameError: name 'name' is not defined </code></pre> <p>A quick fix would be to convert the Python dictionary's keys into strings:</p> <pre class=""lang-py prettyprint-override""><code>my_dictionary = {'name': 'Alexander Pushkin', 'year': 1799} </code></pre>"
20987485	What are the differences between Python Dictionaries vs Javascript Objects?	javascript|python|object|dictionary	2014-01-08 05:11:10.423000 UTC	"<p>I'm new to Python and I was reading about Dictionaries. And from my previous experience with languages like Javascript, they seemed like objects to me. Dictionaries can store lists and share many similaraties to objects in Javascript.</p> <p>ex python code:</p> <pre><code>menu = {} menu['Chicken Alfredo'] = 14.50 menu['Italian Pasta'] = 15.89 menu['Shrimp Soup'] = 12.43 menu['Persian Rice'] = 21.99 </code></pre> <p>ex javascript code:</p> <pre><code>var menu = new Object(); menu['Chicken Alfredo'] = 14.50; menu['Italian Pasta'] = 15.89; menu['Shrimp Soup'] = 12.43; menu['Persian Rice'] = 21.99; </code></pre> <p>What's the difference here, they both do the same job, but there different concepts?</p>"	"<p>With given difference write in submitted answers one difference is  missing. That is,Java Script objects are not iterable,but Python dictionaries are. If we looped over a python dictionary and java scripts object we get a TypeError in case of Java Script(code snippet is given below). for e.g. in case python dictionary,</p> <pre><code>dict={'Name':'Ram',       'Occupation': 'Scientist',       'salary': '50000'          } </code></pre> <p>if we iterate over dict with for loop,we get following output.</p> <pre><code>for i  in  dict:     print(i)   &gt;&gt;&gt; Ram     Occupation     Salary </code></pre> <p>but in case of java script :</p> <pre><code>dict={Name:'Ram',       Occupation: 'Scientist',       salary: '50000'​}  for(i of dict){   console.log(i)} &gt;&gt;TypeError dict in not iterable. </code></pre>"
20987485	What are the differences between Python Dictionaries vs Javascript Objects?	javascript|python|object|dictionary	2014-01-08 05:11:10.423000 UTC	"<p>I'm new to Python and I was reading about Dictionaries. And from my previous experience with languages like Javascript, they seemed like objects to me. Dictionaries can store lists and share many similaraties to objects in Javascript.</p> <p>ex python code:</p> <pre><code>menu = {} menu['Chicken Alfredo'] = 14.50 menu['Italian Pasta'] = 15.89 menu['Shrimp Soup'] = 12.43 menu['Persian Rice'] = 21.99 </code></pre> <p>ex javascript code:</p> <pre><code>var menu = new Object(); menu['Chicken Alfredo'] = 14.50; menu['Italian Pasta'] = 15.89; menu['Shrimp Soup'] = 12.43; menu['Persian Rice'] = 21.99; </code></pre> <p>What's the difference here, they both do the same job, but there different concepts?</p>"	"<p><a href=""http://www.cs.miami.edu/~burt/learning/five-easy-pieces/newwb/arrays_objects_dictionaries.html"" rel=""noreferrer"">From :</a></p>  <blockquote>   <p>In Python, dictionaries are a form of mapping type. They can be   initialized using a sequence of comma-separated name: value pairs,   enclosed in curly braces. They are accessed using array notation   involving square braces. The key can be any hashable, including   numbers and strings.</p>      <p>In Javascript, a dictionary is the same as an object. It can be   initialized using the same syntax as Python. The key can be a number,   a string, or an identifier. Because the dictionary is also an object,   the elements can be accessed either using array notation, e.g. b[i],   or using property notation, e.g. b.i.</p>      <p>Consider an identifier used in an initializer, such as</p>  <pre><code> b = {i:j}  </code></pre>      <p>In Python both i and j are evaluated, but in Javascript, only j is evaluated. In Javascript you also have the   privilege of writing in the dot notation, using the identifier i.   Hence in Python,</p>  <pre><code> i='k'  j=1  b = {i:j}  b['k'] # -&gt; 1  </code></pre>      <p>In Javascript,</p>  <pre><code> i='k'  j=1  b = {i:j}  b['i'] // -&gt; 1  b.i // -&gt; 1  // b[i], b['k'] and b.k are not defined  </code></pre>      <p>In Javascript, using the identifier in dot notation is completely identical in all cases to   using a string that ""looks like"" the identifier in array notation.   Hence,       b = { 'i':1 } ;       b['i'] // -> 1        b.i // -> 1  When a number or boolean is used in a dictionary, Javascript will access the element using a string representation of   the number or boolean. Not so in Python — a string and a number (or   boolean) are different hashables.</p> </blockquote>  <p>If you are interested in differences between both languages, then look at <a href=""https://stackoverflow.com/questions/1786522/how-different-are-the-semantics-between-python-and-javascript?answertab=votes#tab-top"">ans</a></p>"
21064591	Not able to parse a json post from javascript in Python	javascript|python	2014-01-11 16:11:42.890000 UTC	"<p>This is the string I'm receiving from the get request:</p>  <pre><code>{'company_code': u'ha', 'from-date': u'', 'to-date': u'', 'ledger_type': u'CLNT', 'cost_center': u'ALL', 'margin': u'wtmg'} </code></pre>  <p>Now, I'm completely confused what to do with this. I want to make str['company_code'] give me ""ha"" as output. </p>  <p>But even if I do json.dumps() or loads() on it, I'm just not able to access it. </p>  <p>Any help?</p>  <p>Edit: After sending a JSON string from the javascript client, and taking a json.dumps, I get this:</p>  <pre><code>{""company_code"": ""ha"", ""from-date"": """", ""to-date"": """", ""ledger_type"": ""CLNT"", ""cost_center"": ""ALL"", ""margin"": ""wtmg""} </code></pre>  <p>which is a string. I'm not sure how to go forward from here.</p>"	"<p>The given string is not a valid JSON. It seems like a result of <code>repr</code>.</p>  <pre><code>&gt;&gt;&gt; print(repr({'company_code': u'ha'})) {'company_code': u'ha'} </code></pre>  <p>JSON string should be wrapped in double qutoe ('""').</p>  <pre><code>&gt;&gt;&gt; print(json.dumps({'company_code': u'ha'})) {""company_code"": ""ha""} </code></pre>  <hr>  <pre><code>&gt;&gt;&gt; import json &gt;&gt;&gt; json.loads('""a""') u'a' &gt;&gt;&gt; json.loads(""'a'"") Traceback (most recent call last):   File ""&lt;stdin&gt;"", line 1, in &lt;module&gt;   File ""C:\Python27\lib\json\__init__.py"", line 338, in loads     return _default_decoder.decode(s)   File ""C:\Python27\lib\json\decoder.py"", line 365, in decode     obj, end = self.raw_decode(s, idx=_w(s, 0).end())   File ""C:\Python27\lib\json\decoder.py"", line 383, in raw_decode     raise ValueError(""No JSON object could be decoded"") ValueError: No JSON object could be decoded </code></pre>  <p><strong>EDIT</strong> according to the question edit.</p>  <p>Use <a href=""http://docs.python.org/2/library/json.html#json.loads"" rel=""nofollow""><code>json.loads</code></a> to decode the json string; then access the value using <a href=""http://docs.python.org/2/library/stdtypes#mapping-types-dict"" rel=""nofollow""><code>dict[key]</code></a> syntax.</p>  <pre><code>&gt;&gt;&gt; encoded = '{""company_code"": ""ha"", ""from-date"": """", ""to-date"": """", ""ledger_type"": ""CLNT"", ""cost_center"": ""ALL"", ""margin"": ""wtmg""}' &gt;&gt;&gt; decoded = json.loads(encoded) &gt;&gt;&gt; decoded['company_code'] u'ha' </code></pre>"
21068304	Javascript JSON formatting equivalent in Python	javascript|python	2014-01-11 21:47:53.773000 UTC	"<p>I need to format something in this exact JSON format:</p>  <pre><code>JSON.stringify(data,null,'\t'); </code></pre>  <p>How would I do this in python?</p>"	"<p>For Python 3:</p>  <pre><code>import json  json.dumps(data, indent='\t') </code></pre>  <p>If you're using Python 2 or need to support both versions, use the <code>simplejson</code> module:</p>  <pre><code>import simplejson as json </code></pre>  <p>The builtin <code>json</code> module in Python 2 indents only with spaces.</p>"
21070879	How can I execute a local python file in a locally run javascript file?	javascript|local|local-files	2014-01-12 03:14:33.160000 UTC	"<p>I'm working a robotics project for which I already have a ton of python code. The robot sends data to my web page, which is running locally. When the data is recieved I need my javascript to run my python code, which will then process it and send instructions back to the robot directly. Is calling the local file possible? If not, where's the best place to upload it to make it available?</p>  <p>Thanks</p>"	"<p>$.ajax({</p>  <p>type: ""POST"",</p>  <p>url: ""~/mycode.py"",</p>  <p>data: { param: text}</p>  <p>}).done(function( o ) {</p>  <p>// do what you want it to do</p>  <p>});</p>  <p>Hope this helps</p>"
21212269	Python and urllib2 - get attributes set by CSS/Javascript	javascript|jquery|python|beautifulsoup|urllib2	2014-01-19 01:46:38.713000 UTC	"<p>I am using Python and urllib2 with some good success. However, I have run into a web site that sets div properties via CSS. That means that the properties are set via JS and/or jQuery (I think!). My urllib2 results have an ""empty"" DIV that makes sense to a user because the JS sets the things like the size and background color. I tracked down the attributes and they are located in a CSS file (which I assume is dynamically generated server-side). </p>  <p>How can I use urllib2 to make sure that I pick up the full attribute set for the particular DIV?</p>  <p>My code is nothing special, I take it and then send it to BeautifulSoup</p>  <pre><code>rootPage = urllib2.urlopen(someURL) data = rootPage.read() soup = BeautifulSoup(myHTML, ""lxml"") specialDIV = soup.findAll(""div"",{""class"":""special_div""}) </code></pre>  <p>After this code, the  <code>specialDIV</code> object only has 1 attribute while the user (and CSS) actually sees 8 attributes on the DIV</p>  <p>FYI I fully realize I could be using twill, but I'm using urllib because of the authentication scheme. I'm hoping I can resolve this without having to move away from urllib</p>"	
21220078	Convert python dictionary to JavaScript object literal	python|json	2014-01-19 17:26:03.793000 UTC	"<p>Using json.dumps I can convert a dictionary to json format like this:</p>  <pre><code>&gt;&gt;&gt; from json import dumps &gt;&gt;&gt; dumps({'height': 100, 'title': 'some great title'}) '{""title"": ""some great title"", ""height"": 100}' </code></pre>  <p>However, I'm looking to turn my dictionary into a javascript literal, like this:</p>  <pre><code>{title: ""some great title"", height: 100} </code></pre>  <p>(Notice there are no double quotes around title and height.)</p>  <p>Is there a Python library to do this?</p>"	"<p>If you know all your keys are valid tokens you can use this simple code:</p>  <pre><code>import json  def js_list(encoder, data):     pairs = []     for v in data:         pairs.append(js_val(encoder, v))     return ""["" + "", "".join(pairs) + ""]""  def js_dict(encoder, data):     pairs = []     for k, v in data.iteritems():         pairs.append(k + "": "" + js_val(encoder, v))     return ""{"" + "", "".join(pairs) + ""}""  def js_val(encoder, data):     if isinstance(data, dict):         val = js_dict(encoder, data)     elif isinstance(data, list):         val = js_list(encoder, data)     else:         val = encoder.encode(data)     return val  encoder = json.JSONEncoder(ensure_ascii=False) js_val(encoder, {'height': 100, 'title': 'some great title'}) </code></pre>  <p>The return value of js_val() is in your desired format.</p>"
21220078	Convert python dictionary to JavaScript object literal	python|json	2014-01-19 17:26:03.793000 UTC	"<p>Using json.dumps I can convert a dictionary to json format like this:</p>  <pre><code>&gt;&gt;&gt; from json import dumps &gt;&gt;&gt; dumps({'height': 100, 'title': 'some great title'}) '{""title"": ""some great title"", ""height"": 100}' </code></pre>  <p>However, I'm looking to turn my dictionary into a javascript literal, like this:</p>  <pre><code>{title: ""some great title"", height: 100} </code></pre>  <p>(Notice there are no double quotes around title and height.)</p>  <p>Is there a Python library to do this?</p>"	"<p>Dirty hack, but could work: subclass JSONEncoder and override _iterencode_dict method, so that it yields key formatted as you want. In python3.3 it is in line 367 of <code>json.encoder</code> module in line yield <code>_encoder(key)</code>. You probably want to copy the whole method and change this line to something like <code>yield key if isinstance(key, str) else _encoder(key)</code>.</p>  <p>Again - this is really dirty, unless you have no other option - don't do that. Though, it is doable, what is worth knowing if you really need it.</p>"
21228677	Python and JavaScript/AngularJS documentation on the one server?	python|angularjs|python-sphinx|documentation-generation|docstring	2014-01-20 07:49:56.043000 UTC	"<p>The advantages of this approach include:</p>  <ul> <li>Consistent <a href=""http://en.wikipedia.org/wiki/Docstring"" rel=""nofollow"">docstring</a> syntax everywhere</li> <li>Centralsied documentation server; find all your docs in one place</li> <li>Search and jump-to-source from any documented function or class; in either language</li> </ul>  <p>Are there any modules integrating with <a href=""http://sphinx-doc.org/"" rel=""nofollow"">Sphinx</a> or similar; which generate+put your JavaScript and Python documentation in one place?</p>"	"<p>I am not sure if your question is about public documentation or in-house documentation of some of your projects.</p>  <p>For the former you want to see this: <a href=""http://devdocs.io/"" rel=""nofollow"">http://devdocs.io/</a></p>  <p>Also <a href=""https://github.com/Thibaut/devdocs"" rel=""nofollow"">devdocs document scrapers are open source</a>, so you should be able to use them for your own projects to build custom devdocs.io.</p>"
21254251	Example in Python of using Javascript with WebDriver to fire blur action	python|selenium|blur	2014-01-21 09:38:28.257000 UTC	"<p>I'm trying to use Selenium/Webdriver to test a web application with Python.  Being new to Selenium, I've started with the Selenium IDE to provide a base for generating the required Python code.</p>  <p>The application I'm trying to automate has a series of fields (user, password, password confirmation) that performs a variety of validation steps (password length, strength, ect) after the user enters information.  I've gotten this to work in the IDE by using the FireEvent focus and blur commands on the elements.</p>  <p>However, Webdriver does not support the use of FireEvent, as users don't fire events.</p>  <p>I've tried a variety of methods to try and get this to work, including using click on another element and sending a TAB key after the input value.  Nothing seems to work.</p>  <p>In researching for a solution, I've come across some messages that suggest using javascript or jquery to perform a blur action.  I haven't found a example yet that shows how to do this in Python or through the IDE.</p>  <p>I'd be very interested if someone could provide a example, or had any other suggestions to try.</p>"	
21372524	Python list comprehensions nodejs/javascript	javascript|python|node.js	2014-01-27 03:24:26.120000 UTC	"<p>Is there anything similar to pythons list comprehension for nodejs/javascript? If there is not then is it possible to make a function that has similar behavior for example</p>  <pre><code># Example 1  list_one = [[1, 2], [3, 4], [5, 6], [7, 8]] someOfList = sum(x[1] for x in list_one) print(someOfList) # prints 20  # Example 2 combined = """".join([str( ( int(x) + int(y) ) % 10) for x, y in zip(""9999"", ""3333"")]) print(combined) # prints 2222 </code></pre>  <p>Etc? Or would you have to make functions for each comprehension like behavior? I know you can make functions for each of those, but if you use a lot of list comprehensions code can get long </p>"	"<p>this is why coffee script was invented, you can give in a try by copying and pasting your code <a href=""http://coffeescript.org/#top"" rel=""nofollow"">here</a> (go to ""try cofeescript"" tab)</p>  <p>this is what it just gave me:</p>  <pre><code>var combined, list_one, someOfList, x, y;  list_one = [[1, 2], [3, 4], [5, 6], [7, 8]];  someOfList = sum((function() {   var _i, _len, _results;   _results = [];   for (_i = 0, _len = list_one.length; _i &lt; _len; _i++) {     x = list_one[_i];     _results.push(x[1]);   }   return _results; })());  print(someOfList);  combined = """".join([   (function() {     var _i, _len, _ref, _results;     _ref = zip(""9999"", ""3333"");     _results = [];     for (y = _i = 0, _len = _ref.length; _i &lt; _len; y = ++_i) {       x = _ref[y];       _results.push(str((int(x) + int(y)) % 10));     }     return _results;   })() ]); </code></pre>"
21372524	Python list comprehensions nodejs/javascript	javascript|python|node.js	2014-01-27 03:24:26.120000 UTC	"<p>Is there anything similar to pythons list comprehension for nodejs/javascript? If there is not then is it possible to make a function that has similar behavior for example</p>  <pre><code># Example 1  list_one = [[1, 2], [3, 4], [5, 6], [7, 8]] someOfList = sum(x[1] for x in list_one) print(someOfList) # prints 20  # Example 2 combined = """".join([str( ( int(x) + int(y) ) % 10) for x, y in zip(""9999"", ""3333"")]) print(combined) # prints 2222 </code></pre>  <p>Etc? Or would you have to make functions for each comprehension like behavior? I know you can make functions for each of those, but if you use a lot of list comprehensions code can get long </p>"	"<p>List comprehensions put into a language's syntax what would normally be done with <code>map</code> and <code>filter</code>.</p>  <p>So given a Python list comprehension, you can also use map and filter:</p>  <pre><code># Python - preferred way squares_of_odds = [x * x for x in a if x % 2 == 1]  # Python - alternate way map(lambda x: x * x, filter(lambda x: x % 2 == 1, a)) </code></pre>  <p>although comprehensions are preferred in Python.  JavaScript has <code>map</code> and <code>filter</code> so you can use those now.</p>  <pre><code>// JavaScript a.map(function(x){return x*x}).filter(function(x){return x%2 == 1}) </code></pre>  <p>The <a href=""http://wiki.ecmascript.org/doku.php?id=harmony%3aarray_comprehensions"" rel=""noreferrer"">upcoming version of JavaScript will have array comprehensions in the language</a>:</p>  <pre><code>[ x*x for (x of a) if (x % 2 === 1) ] </code></pre>  <p>To see what is available now in the upcoming version, see <a href=""http://kangax.github.io/es5-compat-table/es6/"" rel=""noreferrer"">this compatibility table</a>.  As of this writing, you can see they are available in Firefox.</p>"
21383090	"Submit file with appengine python, after control with javascript"	javascript|forms|google-app-engine|python-2.7|jinja2	2014-01-27 14:13:36.760000 UTC	"<p>I'm trying to have a simple check on an input file. sended through a form, using Javascript , with App Engine in Python runtime and using Jinja2. The form is the following: </p>  <pre><code>&lt;form action=""{{ upload_url|safe }}"" name=""inputfile"" id=""inputfile"" method=""post"" enctype=""multipart/form-data""&gt;     Load a file:     &lt;input type=""file"" id=""file"" name=""file""&gt;&lt;br&gt;     &lt;input type=""button"" name=""submit"" value=""Send"" onclick=""checkForm()""&gt; &lt;/form&gt;&lt;/br&gt; </code></pre>  <p>The checkForm() function is the following:</p>  <pre><code>function checkForm(){ var message ="""";  if(!document.inputfile.file.value) message += ""You must select a file\n""; if(document.inputfile.file.value &amp;&amp; !(estensione(document.inputfile.file.value))) message += ""The extension of the file MUST be .txt\n"";  if(message != """" ) alert(message); else document.inputfile.submit();    } </code></pre>  <p>There aren't problems with the alert message when I try to submit no file or a not txt file. But when it's all right the function doesn't submit the file. If I use a submit input, instead of button, the file is sended without problem. Somebody know what's wrong?</p>"	"<p>I think inputs name is caused this problem. I tried code without name attiribute and it worked. Can you try code after remove name field?</p>  <p><code>&lt;input type=""button"" value=""Send"" onclick=""checkForm()""&gt;</code></p>"
21404121	how to assign a javascript function return value to the variable in python?	javascript|jquery|python|html|django	2014-01-28 11:16:12.220000 UTC	"<p>html code: </p>  <pre><code>&lt;h1&gt;Uploading a photo.&lt;/h1&gt;     &lt;script src=""http://ajax.googleapis.com/ajax/libs/jquery/1.2.6/jquery.js""&gt;&lt;/script&gt;     &lt;script type=""text/javascript""&gt;         var p;         var canvas = document.createElement(""canvas"");         var img1=document.createElement(""img"");          function converttobyte()         {             p=document.getElementById(""file"").value;             img1.setAttribute('src', p);             canvas.width = img1.width;             canvas.height = img1.height;             var ctx = canvas.getContext(""2d"");             ctx.drawImage(img1, 0, 0);             var dataURL = canvas.toDataURL(""image/png"");             alert(""from getbase64 function""+dataURL );             return dataURL;         }     &lt;/script&gt;      &lt;form action=""UploadFile"" method=""post"" accept-charset=""utf-8"" name=""UploadFileForm""                                                    enctype=""multipart/form-data""&gt;         &lt;input type=""file"" id=""file"" name=""""&gt;&lt;br&gt;         &lt;input type=""submit"" value=""Upload"" onclick=""converttobyte""&gt;     &lt;/form&gt; </code></pre>  <p>Python code:</p>  <pre><code>def UploadFile(request):   if request.method == 'POST':       converttobyte = request.GET['converttobyte'].decode(""base64"")       #file = request.FILES['avatar']       default_storage.save(""%s""%(converttobyte), ContentFile(converttobyte.read()))       return HttpResponse(""File uploaded successfully"")   else:       return HttpResponse(""please upload a file"") </code></pre>  <p>what should be a statement that should be added after if <code>request.method== 'post'</code> in order to accept the the function return value in python script.</p>  <p>Please help me.  Thanks in advance</p>"	"<p>Inside your form creates a hidden variable,</p>  <pre><code>&lt;form action=""UploadFile"" method=""post"" accept-charset=""utf-8"" name=""UploadFileForm""                                                    enctype=""multipart/form-data""&gt;          &lt;input type=""hidden"" id=""url"" name=""url"" value=""""&gt;           &lt;input type=""file"" id=""file"" name=""""&gt;&lt;br&gt;         &lt;input type=""submit"" value=""Upload"" onclick=""converttobyte""&gt; &lt;/form&gt; </code></pre>  <p>Instead of returning the value from java script assign that value to the hidden variable,</p>  <pre><code>function convert_to_byte()         {             p=document.getElementById(""file"").value;             img1.setAttribute('src', p);             canvas.width = img1.width;             canvas.height = img1.height;             var ctx = canvas.getContext(""2d"");             ctx.drawImage(img1, 0, 0);             var dataURL = canvas.toDataURL(""image/png"");             alert(""from getbase64 function""+dataURL );             document.getElementById(""url"").value = dataURL;         } </code></pre>  <p>Then after submit you can use the below code to get the value in python,</p>  <pre><code>if request.method == 'POST':     url_value = request.POST['url'] </code></pre>"
21404121	how to assign a javascript function return value to the variable in python?	javascript|jquery|python|html|django	2014-01-28 11:16:12.220000 UTC	"<p>html code: </p>  <pre><code>&lt;h1&gt;Uploading a photo.&lt;/h1&gt;     &lt;script src=""http://ajax.googleapis.com/ajax/libs/jquery/1.2.6/jquery.js""&gt;&lt;/script&gt;     &lt;script type=""text/javascript""&gt;         var p;         var canvas = document.createElement(""canvas"");         var img1=document.createElement(""img"");          function converttobyte()         {             p=document.getElementById(""file"").value;             img1.setAttribute('src', p);             canvas.width = img1.width;             canvas.height = img1.height;             var ctx = canvas.getContext(""2d"");             ctx.drawImage(img1, 0, 0);             var dataURL = canvas.toDataURL(""image/png"");             alert(""from getbase64 function""+dataURL );             return dataURL;         }     &lt;/script&gt;      &lt;form action=""UploadFile"" method=""post"" accept-charset=""utf-8"" name=""UploadFileForm""                                                    enctype=""multipart/form-data""&gt;         &lt;input type=""file"" id=""file"" name=""""&gt;&lt;br&gt;         &lt;input type=""submit"" value=""Upload"" onclick=""converttobyte""&gt;     &lt;/form&gt; </code></pre>  <p>Python code:</p>  <pre><code>def UploadFile(request):   if request.method == 'POST':       converttobyte = request.GET['converttobyte'].decode(""base64"")       #file = request.FILES['avatar']       default_storage.save(""%s""%(converttobyte), ContentFile(converttobyte.read()))       return HttpResponse(""File uploaded successfully"")   else:       return HttpResponse(""please upload a file"") </code></pre>  <p>what should be a statement that should be added after if <code>request.method== 'post'</code> in order to accept the the function return value in python script.</p>  <p>Please help me.  Thanks in advance</p>"	"<p>One way to solve your problem is :</p>  <ol> <li><p>Create a hidden field as follows</p>  <pre><code>&lt;input type=""hidden"" id=""hide"" name=""URL"" value=""""&gt; </code></pre></li> <li><p>In the javascript function, rather than returning the value, set it for the hidden field</p>  <pre><code>document.getElementById(""hide"").value = dataURL; </code></pre></li> <li><p>Once the form is submitted, the hidden value goes with it. Access the field using request.GET['URL'] in python code</p></li> </ol>  <p>Hope this solves the problem.</p>"
21404121	how to assign a javascript function return value to the variable in python?	javascript|jquery|python|html|django	2014-01-28 11:16:12.220000 UTC	"<p>html code: </p>  <pre><code>&lt;h1&gt;Uploading a photo.&lt;/h1&gt;     &lt;script src=""http://ajax.googleapis.com/ajax/libs/jquery/1.2.6/jquery.js""&gt;&lt;/script&gt;     &lt;script type=""text/javascript""&gt;         var p;         var canvas = document.createElement(""canvas"");         var img1=document.createElement(""img"");          function converttobyte()         {             p=document.getElementById(""file"").value;             img1.setAttribute('src', p);             canvas.width = img1.width;             canvas.height = img1.height;             var ctx = canvas.getContext(""2d"");             ctx.drawImage(img1, 0, 0);             var dataURL = canvas.toDataURL(""image/png"");             alert(""from getbase64 function""+dataURL );             return dataURL;         }     &lt;/script&gt;      &lt;form action=""UploadFile"" method=""post"" accept-charset=""utf-8"" name=""UploadFileForm""                                                    enctype=""multipart/form-data""&gt;         &lt;input type=""file"" id=""file"" name=""""&gt;&lt;br&gt;         &lt;input type=""submit"" value=""Upload"" onclick=""converttobyte""&gt;     &lt;/form&gt; </code></pre>  <p>Python code:</p>  <pre><code>def UploadFile(request):   if request.method == 'POST':       converttobyte = request.GET['converttobyte'].decode(""base64"")       #file = request.FILES['avatar']       default_storage.save(""%s""%(converttobyte), ContentFile(converttobyte.read()))       return HttpResponse(""File uploaded successfully"")   else:       return HttpResponse(""please upload a file"") </code></pre>  <p>what should be a statement that should be added after if <code>request.method== 'post'</code> in order to accept the the function return value in python script.</p>  <p>Please help me.  Thanks in advance</p>"	"<p>A few problems with your code.</p>  <p></p>  <p>Shouldn't you be calling the method like <code>onclick=""converttobyte()""</code> instead ?</p>  <p>In the <code>converttobyte()</code> method you are simply returning the <code>dataURL</code> when the form is submitted but how is that value passed to the POST request ?</p>  <p>You'd need to pass the value with the POST request. You can use a hidden field to achieve this. Try something like this:</p>  <p><strong>Javascript:</strong></p>  <pre><code>&lt;h1&gt;Uploading a photo.&lt;/h1&gt; &lt;script src=""http://ajax.googleapis.com/ajax/libs/jquery/1.2.6/jquery.js""&gt;&lt;/script&gt; &lt;script type=""text/javascript""&gt;     var p;     var canvas = document.createElement(""canvas"");     var img1=document.createElement(""img"");      function converttobyte()     {         p=document.getElementById(""file"").value;         img1.setAttribute('src', p);         canvas.width = img1.width;         canvas.height = img1.height;         var ctx = canvas.getContext(""2d"");         ctx.drawImage(img1, 0, 0);         var dataURL = canvas.toDataURL(""image/png"");         alert(""from getbase64 function""+dataURL );          /**Set the value of the raw_bytes input field*/         var form = document.getElementById('uploadForm');         form.raw_bytes.value = dataURL;     } &lt;/script&gt;  &lt;form id=""uploadForm"" action=""UploadFile"" method=""post"" accept-charset=""utf-8"" name=""UploadFileForm""                                                enctype=""multipart/form-data""&gt;     &lt;input type=""file"" id=""file"" name=""""&gt;&lt;br&gt;     &lt;input type=""hidden"" name=""raw_bytes"" id=""raw_bytes"" /&gt;     &lt;input type=""submit"" value=""Upload"" onclick=""converttobyte()""&gt; &lt;/form&gt; </code></pre>  <p><strong>Django View:</strong></p>  <pre><code>def UploadFile(request):   if request.method == 'POST':       raw_bytes = request.POST['raw_bytes'].decode(""base64"") </code></pre>"
21439807	Sending Data from Python (Flask) to Javascript?	javascript|python|flask	2014-01-29 18:42:30.403000 UTC	"<p>I am trying to implement a drag and drop file uploader on my website. Files are uploaded immediately after they are dropped, and I would like to generate a URL with flask that will pop up under the previews. I am using dropzone.js. In the documentation for dropzone a sample is provided as a guide for sending data back from the server to be displayed after a file uploads. <a href=""https://github.com/enyo/dropzone/wiki/FAQ#i-want-to-display-additional-information-after-a-file-uploaded"" rel=""nofollow"">https://github.com/enyo/dropzone/wiki/FAQ#i-want-to-display-additional-information-after-a-file-uploaded</a></p>  <p>However, when I try to use url_for in the inline Javascript in my Jinja template that creates the dropzone, I am getting back a link that looks like /%7Bfilename%7D Just to be sure I popped a quick print statement in there for the URL, and it comes out fine in the console. </p>  <p>My uploader in python: </p>  <pre><code>def upload_file(): if request.method == 'POST':      file = request.files['file']     if file and allowed_file(file.filename):         filename = secure_filename(file.filename)         if is_image(file.filename): # generates a shortened UUID name for the image             filename = shortuuid.uuid()[:7] + ""."" + file.filename.rsplit(""."", 1)[1]             file.save(os.path.join(app.config['UPLOAD_FOLDER'], filename))  @app.route ('/&lt;filename&gt;') def uploaded_image(filename):      return send_from_directory(app.config['UPLOAD_FOLDER'], filename) </code></pre>  <p>and the inline JS in my index.html template: </p>  <pre><code>&lt;script&gt; var mydropzone = new Dropzone(document.body, {     url: ""{{url_for('upload_file')}}"",     previewsContainer: ""#previews"",     clickable: ""#clickable"",       init: function() {     this.on(""success"", function(file, responseText) {         var responseText =  "" {{ url_for('uploaded_image', filename='{filename}')}} "";          var span = document.createElement('span');          span.setAttribute(""style"", ""position: absolute; bottom: -50px; left: 3px; height: 28px; line-height: 28px;   "")         span.innerHTML = responseText;         file.previewTemplate.appendChild(span);      }); }   }); </code></pre>  <p></p>  <p>Am I missing something fundamental here? Do I need to use something like JSON/Ajax (never worked with these but Googling always brought them up), because the URL is data send back from the server? </p>"	"<p>Simply:</p>  <ol> <li><p>Return the file path to the client:</p>  <pre><code>def upload_file():     if request.method == 'POST':          # ... snip ...         return url_for('uploaded_image', filename=filename) </code></pre></li> <li><p>Remove the <code>var responseText</code> line in your <code>on('success')</code> function, since you will be getting the URL back in the response.</p></li> </ol>"
21439807	Sending Data from Python (Flask) to Javascript?	javascript|python|flask	2014-01-29 18:42:30.403000 UTC	"<p>I am trying to implement a drag and drop file uploader on my website. Files are uploaded immediately after they are dropped, and I would like to generate a URL with flask that will pop up under the previews. I am using dropzone.js. In the documentation for dropzone a sample is provided as a guide for sending data back from the server to be displayed after a file uploads. <a href=""https://github.com/enyo/dropzone/wiki/FAQ#i-want-to-display-additional-information-after-a-file-uploaded"" rel=""nofollow"">https://github.com/enyo/dropzone/wiki/FAQ#i-want-to-display-additional-information-after-a-file-uploaded</a></p>  <p>However, when I try to use url_for in the inline Javascript in my Jinja template that creates the dropzone, I am getting back a link that looks like /%7Bfilename%7D Just to be sure I popped a quick print statement in there for the URL, and it comes out fine in the console. </p>  <p>My uploader in python: </p>  <pre><code>def upload_file(): if request.method == 'POST':      file = request.files['file']     if file and allowed_file(file.filename):         filename = secure_filename(file.filename)         if is_image(file.filename): # generates a shortened UUID name for the image             filename = shortuuid.uuid()[:7] + ""."" + file.filename.rsplit(""."", 1)[1]             file.save(os.path.join(app.config['UPLOAD_FOLDER'], filename))  @app.route ('/&lt;filename&gt;') def uploaded_image(filename):      return send_from_directory(app.config['UPLOAD_FOLDER'], filename) </code></pre>  <p>and the inline JS in my index.html template: </p>  <pre><code>&lt;script&gt; var mydropzone = new Dropzone(document.body, {     url: ""{{url_for('upload_file')}}"",     previewsContainer: ""#previews"",     clickable: ""#clickable"",       init: function() {     this.on(""success"", function(file, responseText) {         var responseText =  "" {{ url_for('uploaded_image', filename='{filename}')}} "";          var span = document.createElement('span');          span.setAttribute(""style"", ""position: absolute; bottom: -50px; left: 3px; height: 28px; line-height: 28px;   "")         span.innerHTML = responseText;         file.previewTemplate.appendChild(span);      }); }   }); </code></pre>  <p></p>  <p>Am I missing something fundamental here? Do I need to use something like JSON/Ajax (never worked with these but Googling always brought them up), because the URL is data send back from the server? </p>"	"<p>You are very close to getting it, but you will have to send the URL over JSON. </p>  <p>The issue is that you call <code>url_for('uploaded_image')</code> when the page first loads (in the Jinja template), before the URL is actually available. It is thinking you are asking for the url for a file called <code>{filename}</code>.</p>  <p>Try returning a JSON response from your POST request which has the new URL: </p>  <p><code>return jsonify({'fileURL':url_for('uploaded_image', filename=filename)})</code></p>  <p>From there, you can do whatever you would like with JS. What you have should work, just get the URL from responseText.</p>  <p>EDIT: Fixed return.</p>"
21445966	Scraping javascript with Python and Selenium Webdriver	javascript|python|python-2.7|selenium|web-scraping	2014-01-30 01:05:11.000000 UTC	"<p>I'm trying to scrape the ads from Ask, which are generated in an iframe by a JS hosted by Google.</p>  <p>When I manually navigate my way through, and view source, there they are (I'm specifically looking for a div with the id ""adBlock"", which is in an iframe).</p>  <p>But when I try using Firefox, Chromedriver or FirefoxPortable, the source returned to me is missing all of the elements I'm looking for.</p>  <p>I tried scraping with urllib2 and had the same results, even when adding in the necessary headers. I thought for sure that a physical browser instance like Webdriver creates would have fixed that problem. </p>  <p>Here's the code I'm working off of, which had to be cobbled together from a few different sources:</p>  <pre><code>from selenium import webdriver from selenium.common.exceptions import TimeoutException from selenium.webdriver.support.ui import WebDriverWait from selenium.webdriver.support import expected_conditions as EC import pprint  # Create a new instance of the Firefox driver driver = webdriver.Chrome('C:\Python27\Chromedriver\chromedriver.exe') driver.get(""http://www.ask.com"")  print driver.title inputElement = driver.find_element_by_name(""q"")  # type in the search inputElement.send_keys(""baseball hats"") # submit the form (although google automatically searches now without submitting) inputElement.submit()  try:     WebDriverWait(driver, 10).until(EC.title_contains(""baseball""))     print driver.title     output = driver.page_source     print(output) finally:     driver.quit() </code></pre>  <p>I know I circle through a few different attempts at viewing the source, that's not what I'm concerned about.</p>  <p>Any thoughts as to why I'm getting one result from this script (ads omitted) and a totally different result (ads present) from the browser it opened in? I've tried Scrapy, Selenium, Urllib2, etc. No joy.</p>"	"<p>Selenium only displays the contents of the current frame or iframe.  You'll have to switch into the iframes using something along these lines</p>  <pre><code>iframes = driver.find_elements_by_tag_name(""iframe"")  for iframe in iframes     driver.switch_to_default_content()     driver.switch_to_frame(iframe)      output = driver.page_source     print(output) </code></pre>"
21470546	IPython Notebook: programmatically trigger a cell from JavaScript	ipython-notebook	2014-01-31 00:44:35.017000 UTC	"<p>So, I've been playing around with the IPython notebook for a couple of days, and I love it!  But, now I need to do something slightly fancy:</p>  <p>I have a markdown cell; in it, there is an HTML input and button, and some JavaScript attached to the button that will take the contents of the input, and inject it into the python kernel.  Here's the cell:</p>  <pre><code>&lt;h3&gt;Use JS to pass DOM info to Python kernel: &lt;/h3&gt; &lt;input id='testinput' value='FragmentId'&gt;&lt;/input&gt; &lt;button id='testComms' onclick='JS2PY()'&gt;:D&lt;/button&gt;  &lt;script type=""text/javascript""&gt;         function JS2PY(){         var input = document.getElementById('testinput').value,             kernel = IPython.notebook.kernel;          kernel.execute('testVar = ""' + input + '""');     } &lt;/script&gt; </code></pre>  <p>Works like a charm!  Next up I have a python code cell; it does some ROOT stuff, and makes a plot based on whatever value got injected into the python kernel from the above cell.  Here's the python cell:</p>  <pre><code>def testfunc():     from ROOT import TH1, TFile, TTree     import rootnotes, numpy      c2 = rootnotes.canvas(""treeData"", (600,400))      testfile = TFile(""fragment27422_000.root"")     testtree = testfile.Get(""FragmentTree"")      buff = numpy.zeros(1, dtype=float)      testtree.Branch(testVar, buff)      testtree.Draw(testVar)     return c2  testfunc() </code></pre>  <p>Also works no problem if I manually go and run the cell - great!  But what I really want, is this python cell to run automatically when I click that button in the markdown cell above, after promoting the <code>testVar</code> variable.  Apologies and thanks in advance - this is only day two of python for me, so it's probably something really simple.</p>"	"<p>interesting first project with the notebooks (well the post is a bit old by now).  Nowadays, one can use <code>IPython.notebook.execute_cell(..)</code> like so:</p> <pre><code>%%HTML  &lt;h3&gt;Select an Experiment&lt;/h3&gt; &lt;input id='input' value='my input var'&gt;&lt;/input&gt; &lt;button id='testComms' onclick='JS2PY()'&gt;:D&lt;/button&gt;  &lt;script type=&quot;text/javascript&quot;&gt;         function JS2PY() {         const { value } = document.getElementById('input');         const pycode = `testVar = '${value}'`;         const { notebook } = IPython;         const { kernel } = notebook;         kernel.execute(pycode);         // run cell using `testVar`         notebook.select_next();         notebook.execute_cell();     } &lt;/script&gt; </code></pre> <p>In the example above, the next notebook cell should contain the code you'd like to execute.</p>"
21470546	IPython Notebook: programmatically trigger a cell from JavaScript	ipython-notebook	2014-01-31 00:44:35.017000 UTC	"<p>So, I've been playing around with the IPython notebook for a couple of days, and I love it!  But, now I need to do something slightly fancy:</p>  <p>I have a markdown cell; in it, there is an HTML input and button, and some JavaScript attached to the button that will take the contents of the input, and inject it into the python kernel.  Here's the cell:</p>  <pre><code>&lt;h3&gt;Use JS to pass DOM info to Python kernel: &lt;/h3&gt; &lt;input id='testinput' value='FragmentId'&gt;&lt;/input&gt; &lt;button id='testComms' onclick='JS2PY()'&gt;:D&lt;/button&gt;  &lt;script type=""text/javascript""&gt;         function JS2PY(){         var input = document.getElementById('testinput').value,             kernel = IPython.notebook.kernel;          kernel.execute('testVar = ""' + input + '""');     } &lt;/script&gt; </code></pre>  <p>Works like a charm!  Next up I have a python code cell; it does some ROOT stuff, and makes a plot based on whatever value got injected into the python kernel from the above cell.  Here's the python cell:</p>  <pre><code>def testfunc():     from ROOT import TH1, TFile, TTree     import rootnotes, numpy      c2 = rootnotes.canvas(""treeData"", (600,400))      testfile = TFile(""fragment27422_000.root"")     testtree = testfile.Get(""FragmentTree"")      buff = numpy.zeros(1, dtype=float)      testtree.Branch(testVar, buff)      testtree.Draw(testVar)     return c2  testfunc() </code></pre>  <p>Also works no problem if I manually go and run the cell - great!  But what I really want, is this python cell to run automatically when I click that button in the markdown cell above, after promoting the <code>testVar</code> variable.  Apologies and thanks in advance - this is only day two of python for me, so it's probably something really simple.</p>"	"<p>Solution / workaround: instead of triggering other cells directly, we can call python functions defined in other cells and get a round trip between JavaScript and the python kernel with a callback thereafter, all via <code>IPython.notebook.kernel.execute</code>; something like this code cell:</p>  <pre><code>%%HTML  &lt;div id='testwrap'&gt; &lt;input id='varname'&gt;&lt;/input&gt; &lt;img id='imgtarget'&gt;&lt;/img&gt; &lt;button id='fetchplot' onclick='exec_code()'&gt;Plot&lt;/button&gt; &lt;/div&gt;  &lt;script type=""text/Javascript""&gt;     function handle_output(out_type, out){         document.getElementById('imgtarget').src = 'data:image/png;base64,' + out.data['image/png'];     }      function exec_code(){         var kernel = IPython.notebook.kernel;         var callbacks = {'output' : handle_output};         kernel.execute('testVar = ""' + document.getElementById('varname').value + '""');         kernel.execute('testfunc(testVar)', callbacks, {silent:false});     } &lt;/script&gt; </code></pre>  <p>The first <code>kernel.execute</code> kicks some data up to the kernel from the DOM, and the second one uses a callback to do stuff in JS with whatever the python function <code>testfunc</code> (defined in some other cell) returns.</p>  <p>Big ups to <a href=""http://jakevdp.github.io/blog/2013/06/01/ipython-notebook-javascript-python-communication/"" rel=""noreferrer"">http://jakevdp.github.io/blog/2013/06/01/ipython-notebook-javascript-python-communication/</a> for the bones of this solution!</p>"
21472772	Selenium WebDriver on Python. How to use variable created during test in the JavaScript?	javascript|python|selenium-webdriver	2014-01-31 05:05:17.653000 UTC	"<p>I wanna alert variable <code>(a = ""Text"" for example)</code> which I assigned during test?                                  </p>"	"<p>Try this</p>  <pre><code>from selenium import webdriver                    browser = webdriver.Firefox()                 a = ""hello"" browser.execute_script(""alert('""+a+""');"")         </code></pre>  <p>If a is integer use str(a) instead of ""a""          </p>"
21488131	Can you retrieve a redirect URL from a page using Robot automation via python or javascript?	javascript|python|redirect|selenium	2014-01-31 19:08:44.747000 UTC	"<p>I'm trying to validate that a page redirect in an iframe is working correctly. Ideally a request gets sent from my server to our gateway server, and then redirected to an external page. However because of the way my page handles permissions, the best way to validate that this is succeeding is by confirming that the redirect has occurred and it is to the correct URL.</p>  <p>Using Robot / Selenium automation, is there a way to grab redirect URLs and status codes in order to compare them to an expected value? I've seen mixed answers on whether or not this is possible. </p>  <p>The javascript navigator object seems like it might solve this problem, but I'm not sure how to use it in the context of automation to retrieve redirect URLs.</p>  <p>Any advice is appreciated.</p>"	"<p>As this is tagged with Selenium and Python, the Selenium Python bindings allow you to get the current url with:</p>  <pre><code>driver.current_url </code></pre>  <p>You could use this to validate the URL you're looking for to verify whether the redirect resolves to the right page/url. Depending on the complexity of what you're testing involving the iframes and what not, Selenium might be overkill.</p>  <p>If you're looking for more general answers as far as approaching a problem of testing redirects in general, I'd recommend looking into using Requests, as they offer a nice way of handling redirects and providing you redirect histories.</p>  <p>You can check Requests out here: <a href=""http://docs.python-requests.org/en/latest/user/quickstart/#redirection-and-history"" rel=""nofollow noreferrer"">http://docs.python-requests.org/en/latest/user/quickstart/#redirection-and-history</a></p>  <p>which I ultimately found through this Stack thread: <a href=""https://stackoverflow.com/questions/8827545/python-follow-redirects-and-then-download-the-page"">Python follow redirects and then download the page?</a></p>"
21494179	JavaScript/Python anonymous function vs named function scoping	javascript|python|function|scope	2014-02-01 04:46:47.493000 UTC	"<p>I was experimenting around with scope inheritance within functions in Python and JavaScript and I want to fully understand why it runs how it does. Note: I have run the examples below in the lastest versions of node and python3.</p>  <p>Question 1: Why is the function expression in case B able to change the global function f() but case A is unable to?</p>  <p>Question 2: In python, we can implement case A as seen below. Is there a way to implement case B in Python and have it return 1?</p>  <p>JavaScript function definition (Case A): </p>  <pre><code>function f() {     return 0 }  function g() {     console.log(f()) }  function h() {     function f() {         return 1     }     g() }  h() // returns 0 console.log(f()) // returns 0 </code></pre>  <p>JavaScript function expression (Case B):</p>  <pre><code>function f() {     return 0 }  function g() {     console.log(f()) }  function h() {     f = function () {         return 1     };     g() }  h() // returns 1 console.log(f()) // returns 1 </code></pre>  <p>Python function definition (Case A):</p>  <pre><code>def f():     return 0   def g():     print(f())   def h():     def f():         return 1     g()  h() # return 0 </code></pre>"	"<p>As elclanrs noted, the difference stems from the fact that in JavaScript, variables are global by default, while in Python, they are local by default.  To answer the second part of your question, you can achieve the same effect in Python by explicitly marking <code>f</code> as global inside <code>h</code>:</p>  <pre><code>def f():     return 0   def g():     print(f())   def h():     global f     def f():         return 1     g()  &gt;&gt;&gt; h() 1 </code></pre>  <p>Why you would want to do this is a mystery.</p>"
21494179	JavaScript/Python anonymous function vs named function scoping	javascript|python|function|scope	2014-02-01 04:46:47.493000 UTC	"<p>I was experimenting around with scope inheritance within functions in Python and JavaScript and I want to fully understand why it runs how it does. Note: I have run the examples below in the lastest versions of node and python3.</p>  <p>Question 1: Why is the function expression in case B able to change the global function f() but case A is unable to?</p>  <p>Question 2: In python, we can implement case A as seen below. Is there a way to implement case B in Python and have it return 1?</p>  <p>JavaScript function definition (Case A): </p>  <pre><code>function f() {     return 0 }  function g() {     console.log(f()) }  function h() {     function f() {         return 1     }     g() }  h() // returns 0 console.log(f()) // returns 0 </code></pre>  <p>JavaScript function expression (Case B):</p>  <pre><code>function f() {     return 0 }  function g() {     console.log(f()) }  function h() {     f = function () {         return 1     };     g() }  h() // returns 1 console.log(f()) // returns 1 </code></pre>  <p>Python function definition (Case A):</p>  <pre><code>def f():     return 0   def g():     print(f())   def h():     def f():         return 1     g()  h() # return 0 </code></pre>"	"<p>When you omit <code>var</code> you create an implicit global; since the global <code>f</code> was already defined you override it, this should behave like case A:</p>  <pre><code>function h() {     var f = function () {         return 1     };     g() } </code></pre>  <p>The difference between a function expression and function declaration is how the functions get hoisted but they are only visible in the function's scope, not globally. See here <a href=""https://stackoverflow.com/questions/336859/var-functionname-function-vs-function-functionname"">var functionName = function() {} vs function functionName() {}</a></p>"
21513166	Translating between Python-Django and Javascript	javascript|django|translate	2014-02-02 16:41:15.597000 UTC	"<p>The problem is that will be several translated (languages) javascript files and I need to create each one with <code>django-admin.py makemessages -d djangojs -l + language</code>. So, I need to learn about how each translated file would be named and accessed. Regards.</p>  <p>Example:</p>  <pre><code>{  ""sEmptyTable"": ""No data available in table"",   ""sInfo"": ""Showing START to END of TOTAL entries"",  ""sInfoEmpty"": ""Showing 0 to 0 of 0 entries"",  ""sInfoFiltered"": ""(filtered from MAX total entries)"",  ""sInfoPostFix"": """",   ""sInfoThousands"": "","",   ""sLengthMenu"": ""Show MENU entries"",   ""sLoadingRecords"": ""Loading..."",   ""sProcessing"": ""Processing..."",   ""sSearch"": ""Search:"",   ""sZeroRecords"": ""No matching records found"", }`  </code></pre>"	
21571220	Call a python script and get its return value from Javascript	javascript|python|variables|return	2014-02-05 07:34:36.190000 UTC	<p>what I'm triying to achieve is to get the number of IP's connected to my server and:</p>    <pre><code>if connected IP's &lt; 2 --&gt; Load index.html otherwise             --&gt; Load otherpage.html </code></pre>  <p>With Python I get the number of IP's connected (works fine) but I need to pass that value to javascript in order to load one html or the other. Any suggestion?</p>  <p>Thanks!</p>	"<p>To interact with Python from JavaScript you need a </p>  <ul> <li><p>Some sort of web server</p></li> <li><p>Some soft of web framework</p></li> </ul>  <p>Your question does not specify if you know anything about this components. Is this first website project you are doing in Python?</p>  <p>I suggest you study Python web framework alternatives and complete their tutorials before proceeding. Few listed below. </p>  <ul> <li><p><a href=""http://flask.pocoo.org/"" rel=""nofollow"">http://flask.pocoo.org/</a></p></li> <li><p><a href=""http://www.pylonsproject.org/"" rel=""nofollow"">http://www.pylonsproject.org/</a></p></li> <li><p><a href=""https://www.djangoproject.com/"" rel=""nofollow"">https://www.djangoproject.com/</a></p></li> </ul>  <p>Flask is ""micro-framework"", must suitable for a tiny task like this.</p>  <p>You can do a HTTP web server also in a pure Python (no framework) but that is not recommended for a novice, as it gets complex fast.</p>"
21578429	Converting Timestamp to Javascript Date object in python	javascript|python|timestamp	2014-02-05 13:16:56.540000 UTC	"<p>My unix timestamp is something like this <code>1386181800</code>.</p>  <p>I have to convert it into Javascript readable Date format which looks like this ,and all this iam trying to come up in python.</p>  <pre><code>new Date('2010','0','3','10','10') </code></pre>"	
21614871	How to get a JavaScript array in the Python Pyramid framework?	javascript|jquery|python|pyramid	2014-02-06 21:53:32.823000 UTC	"<p>I'm trying to build a web app which has the following functionality: At a certain point the user will be able to click a button to add a ""box"" (with 2 input fields) to his page. Every user can add multiple ""boxes"" so 1 user might have 2 on his page, another my have 5. I'm using jquery to do this and my logic is this:</p>  <ul> <li>user clicks on the ""add"" button</li> <li>a html element gets appended to an empty array as a string</li> <li>I send this array to a database</li> <li>when the user comes back, I retrieve the array from the DB and add it in jquery again</li> </ul>  <p>Now I've managed to do the first 2 points (easiest =D) but I'm stuck at the next 2.</p>  <p>I'm using the Pyramid framework for this app and I thought there should be a way to get that array in Pyramid so I can send it to the database but I can't figure it out.</p>  <p>Could you please point me to some documentation, or something else from which I could learn how to do this?</p>  <p>HTML code : </p>  <pre><code>&lt;!DOCTYPE html&gt;   &lt;html&gt;    &lt;head&gt;     &lt;link type= ""text/css"" rel=""stylesheet"" href=""style.css""/&gt;     &lt;script type='text/javascript' src='http://ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.min.js'&gt;&lt;/script&gt;     &lt;script type=""text/javascript"" src='script.js'&gt;&lt;/script&gt; &lt;/head&gt;  &lt;body&gt;     &lt;div class='add'&gt;&lt;/div&gt;     &lt;/div&gt; &lt;/body&gt;  &lt;/html&gt; </code></pre>  <p>The CSS is this: </p>  <pre><code>.add {     border: 1px solid black;     width: 30%;     height: 40px;     margin: auto;     margin-top: 20%;     position: relative; }  .room {     height: 150px;     width: 40%;     border: 1px solid black;     margin: auto;     margin-bottom: 1%;     position:relative; }  body{     height: 100%;     width: 100%; } </code></pre>  <p>and the JQuery code:</p>  <pre><code>var roomlist = new Array()  $(document).ready(function(){        $('.add').click(function(){         roomlist.push('&lt;div class=""room""&gt;&lt;/div&gt;')         $('.add').before(roomlist[roomlist.length -1]);         $('.add').css(""margin-top"",""1%"");     }); }); </code></pre>"	"<p>In python pyramid you will get json render you can do it very easily. In pyramid you can work with GET, PUT, POST and DELETE method for restful web service. By using GET method you can get your list in jquery and use POST method for saving your list in database.  </p>  <p><a href=""http://docs.pylonsproject.org/projects/pyramid/en/latest/quick_tutorial/json.html"" rel=""nofollow"">Ajax Development With JSON Renderers</a></p>  <p>Example for GET, PUT and POST method</p>  <pre><code>@view_defaults(route_name='myapi', renderer='json') class GroupView(object):    def __init__(self, request):       self.request = request     @view_config(request_method='GET')    def get(self):      # return information about the list or objest     @view_config(request_method='PUT')    def put(self):       # update list or object     @view_config(request_method='POST')    def post(self):       # Create new list or object </code></pre>"
21660898	How to export javascript from html using python	python|web-scraping	2014-02-09 15:21:42.333000 UTC	"<p>I want to identify and get a javascript from a html page.</p>  <p>How can I do it using python?</p>  <p>I tried <a href=""http://www.crummy.com/software/BeautifulSoup/"" rel=""nofollow"">BeautifulSoup</a> But I couldn't find how...</p>"	"<pre><code>import requests import BeautifulSoup as bs  URL = ""page to get"" pg = requests.get(URL).content pg = bs.BeautifulSoup(pg)  scripts = bs.findAll('script')  for sc in scripts:     try:         print(""External code at {}"".format(sc['src']))     except KeyError:         print(""Inline code:"")         print(sc.getText()) </code></pre>"
21663179	Javascript For loop like Python	javascript	2014-02-09 18:34:28.540000 UTC	"<p>I am a programing newbie and usually use Python but have found myself needing to use Javascript  for this project (phonegap).</p>  <p>i retrieve the following query from a server</p>  <pre><code>`[[""CompanyName"", ""lat"", ""long"", ID, ""street"", 6.8], [""CompanyName"", ""lat"", ""long"", ID, ""street"", 23.7]]` </code></pre>  <p>In Python i get would do the following to print CompanName for each entry.</p>  <pre><code>for x in r.json():         print x[0] </code></pre>  <p>How would i achieve the same thing in Javascript?</p>  <p>when i retrieve the query if i try to loop through it, it iterates every character of the query as a string. so i try the following:</p>  <pre><code>var result = xmlhttp.responseText; result = eval(""(""+ result +"")""); </code></pre>  <p>i loop through it with:</p>  <pre><code>for (var i in result)                  {                     display +=""&lt;br/&gt;"" + result[i];} </code></pre>  <p>How would i specify just the CompanyName like in the Python example?</p>  <p>`</p>"	"<p>Use this <code>result[i][0]</code> since it's a nested array.</p>  <p><div class=""snippet"" data-lang=""js"" data-hide=""false""> <div class=""snippet-code""> <pre class=""snippet-code-js lang-js prettyprint-override""><code>var result = [[""CompanyName1"", ""lat"", ""long"", ""ID"", ""street"", 6.8],[""CompanyName2"", ""lat"", ""long"", ""ID"", ""street"", 23.7]];  var div = document.getElementById('result');  for (var i = 0; i &lt; result.length; i++) {     div.innerHTML += (""&lt;br/&gt;"" + result[i][0]); }</code></pre> <pre class=""snippet-code-html lang-html prettyprint-override""><code>&lt;div id=""result""&gt;&lt;/div&gt;</code></pre> </div> </div> </p>  <h1><a href=""http://jsfiddle.net/CecYL/"" rel=""nofollow"">Demo</a></h1>"
21670918	How to input values to javascript function from mechanize python	javascript|python|mechanize	2014-02-10 07:04:16.570000 UTC	"<p>Im currently trying to input values to a page through mechanize , but there are two date fields like</p>  <pre><code>    &lt;td align=""center""&gt;&lt;script&gt;DateInput('startDate', true, 'YYYY-MM-DD')&lt;/script&gt; &lt;/td&gt; </code></pre>  <p>from the source ""calendarDateInput.js"" </p>  <p>How can i input my own values to this through mechanize?</p>  <p>Any help is appreciated. Thanks </p>"	
21688393	Return Image from python CGI using javascript	javascript|python|html|matplotlib|cgi	2014-02-10 21:33:20.757000 UTC	"<p>I am using Python CGI to create a webpage that shows a title, dropdown menu and image.  I would like to be able to select an option from the dropdown menu (would love to get rid of ""submit"" as well and just run when an option is chosen), trigger my python code (runthis.py) and update the image on the webpage.  I want to do  this WITHOUT opening new tabs and hopefully without refreshing the page.  Currently I run this .py file to get my html:</p>  <pre><code>#!C:\Python27\python  print ""Content-type: text/html"" print  print ""&lt;html&gt;"" print ""&lt;head&gt;"" print ""&lt;title&gt;Tab Title&lt;/title&gt;""  print ""&lt;/head&gt;"" print '''&lt;body bgcolor=""#ccffcc""&gt;'''  print '''&lt;h1 align=""center""&gt;Page Heading&lt;/h1&gt;'''  print '''&lt;form action=""/cgi-bin/dropdown.py"" method=""post"" target=""_blank""&gt;''' print '''&lt;select name=""dropdown""&gt;''' print '''&lt;option value=""Option1"" selected&gt;Option1&lt;/option&gt;''' print '''&lt;option value=""Option2"" selected&gt;Option2&lt;/option&gt;''' print ""&lt;/select&gt;"" print '''&lt;input type=""submit"" value=""Submit""/&gt;''' print ""&lt;/form&gt;""  print ""&lt;img src = /test.png&gt;""  print ""&lt;/body&gt;"" print ""&lt;/html&gt;"" </code></pre>  <p>When I click ""submit"", a new tab will open showing the same page layout, just a different image (same one for example's sake).  This is done through my <code>dropdown.py</code> file in cgi-bin:</p>  <pre><code>#!C:\Python27\python  import cgi,cgitb,os cgitb.enable()  os.environ['HOME']='C:\python_cgi'  import matplotlib matplotlib.use('Agg')  form = cgi.FieldStorage()  if form.getvalue('dropdown'):     subject = form.getvalue('dropdown') else:     subject = ""Not Entered""  from matplotlib.figure import Figure from matplotlib.backends.backend_agg import FigureCanvasAgg import StringIO  import msvcrt,sys, urllib, base64  fig = Figure(figsize=[4,4]) ax = fig.add_axes([.1,.1,.8,.8]) ax.scatter([1,2],[3,4]) canvas = FigureCanvasAgg(fig)  imgdata = StringIO.StringIO() fig.savefig(imgdata, format='png') imgdata.seek(0)  uri = 'data:image/png;base64,' + urllib.quote(base64.b64encode(imgdata.buf))  print ""Content-Type: text/html"" print  print """"""\  &lt;html&gt; &lt;head&gt; &lt;title&gt;Tab Title&lt;/title&gt;  &lt;/head&gt; &lt;body&gt;   &lt;body bgcolor=""#ccffcc""&gt;   &lt;h1 align=""center""&gt;Page Heading&lt;/h1&gt;    &lt;form action=""/cgi-bin/dropdown.py"" method=""post"" target=""_blank""&gt;     &lt;select name=""dropdown""&gt;       &lt;option value=""Option1"" selected&gt;Option1&lt;/option&gt;       &lt;option value=""Option2"" selected&gt;Option2&lt;/option&gt;     &lt;/select&gt;     &lt;input type=""submit"" value=""Submit""/&gt;   &lt;/form&gt;    &lt;img src = %s/&gt;  &lt;/body&gt; &lt;/html&gt; """""" % uri </code></pre>  <p>To recap -- I just want to change the picture/image on the current page rather than opening up a whole new page.  My gut tells me to use javascript (which I know nothing about).  Does anyone have a suggestion on a code block that I need to enter to do such a thing?</p>  <p>Thanks!</p>  <p><strong>EDIT</strong></p>  <p>Per the comments below, I am trying to implement this html file:</p>  <pre><code>&lt;html&gt; &lt;head&gt; &lt;title&gt;Tab Title&lt;/title&gt;  &lt;script src=""//ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.min.js"" &gt;&lt;/script&gt;  &lt;/head&gt; &lt;body&gt;  &lt;script&gt;   function changeImage(imgName) {      jQuery.get('/cgi-bin/dropdown.py', function(data) {      image = document.getElementById('imgDisp');      image.src = data;     })    } &lt;/script&gt;     &lt;body bgcolor=""#ccffcc""&gt;   &lt;h1 align=""center""&gt;Page Heading&lt;/h1&gt;    &lt;select name=""dropdown"" onchange=""changeImage(this.value)""&gt;    &lt;option value=""Option1""&gt;Option1&lt;/option&gt;   &lt;option value=""Option2""&gt;Option2&lt;/option&gt;   &lt;/select&gt;    &lt;img id=""imgDisp"" src=""/test.png"" /&gt;  &lt;/body&gt; &lt;/html&gt; </code></pre>  <p>This loads my page correctly but nothing happens when I make a selection from the dropdownlist.  I was hoping the image would change.  My ""dropdown.py"" code now looks like:</p>  <pre><code>#!C:\Python27\python  import cgi,cgitb,os cgitb.enable()  os.environ['HOME']='C:\python_cgi'  import matplotlib matplotlib.use('Agg')  from matplotlib.figure import Figure from matplotlib.backends.backend_agg import FigureCanvasAgg import StringIO  import msvcrt,sys, urllib, base64  fig = Figure(figsize=[4,4]) ax = fig.add_axes([.1,.1,.8,.8]) ax.scatter([1,2],[3,4]) canvas = FigureCanvasAgg(fig)  imgdata = StringIO.StringIO() fig.savefig(imgdata, format='png') imgdata.seek(0)  uri = 'data:image/png;base64,' + urllib.quote(base64.b64encode(imgdata.buf)) return uri </code></pre>  <p>I haven't gotten to the url parameter approach yet -- not sure how that is done.  Any more advice would be greatly appreciated!</p>"	"<p>In response to your edited question, the solution can actually be simpler:</p>  <pre><code>function changeImage(imgName) {      jQuery.get('/cgi-bin/dropdown.py', function(data) {      image = document.getElementById('imgDisp');      image.src = data;     }) } </code></pre>  <p>Here you are making an asynchronous request to your Python script, and waiting for some data to be returned. However, you could consider your Python script a standalone service that <em>maps</em>, so to speak, a unique set of parameters to a (dynamically generated) image. This requires your Python script to <em>output</em> the image to the browser instead of returning the image data through CGI:</p>  <pre><code>imgdata = StringIO.StringIO() fig.savefig(imgdata, format='png') imgdata.seek(0)  #Something along these lines print ""Content-Type: img/png\n"" imgdata.seek(0) print imgdata.read() </code></pre>  <p>Once you are confident that an HTTP request to your Python script serves up a valid PNG, your front-end code only has to update the <code>src</code> attribute of the image you are displaying:</p>  <pre><code>function changeImage(imgName) {     var url = ""http://localhost:8000/cgi-bin/dropdown.py?image="" + imgName;     var img = jQuery('#imgDisp');         img.src = url; } </code></pre>  <p>When your <code>img</code> element is given a new <code>src</code> value, the browser will automatically make a request to that URL and try to retrieve an image, which will load onto your page, replacing the previous image. You would have to modify your Python script, however, to expect a request parameter named <code>image</code>, which holds a string. CGI has a simple method for accessing these parameter values passed inside the URL:</p>  <pre><code>#Example CGI script if __name__ == ""__main__"":     params = cgi.FieldStorage()     if ""image"" in params:         img = params['image']         #Generate the image and output it with the correct headers     else:         #Exception handling         print ""Content-Type: text/html\n""         print """"""&lt;html&gt;&lt;body&gt;No image name was specified!&lt;/body&gt;&lt;/html&gt;"""""" </code></pre>  <p>This page is a great resource that you can check out: <a href=""http://lost-theory.org/python/dynamicimg.html"" rel=""nofollow"">http://lost-theory.org/python/dynamicimg.html</a></p>"
21695593	WebSocket - python server is not working with javascript	javascript|python|google-chrome|websocket	2014-02-11 07:23:01.347000 UTC	"<p>I am using this Python server but its not working at all, i have tested my webSocket client is correctly sending packets but from Python its not getting anything.</p>  <p>Python websocket server:</p>  <pre><code>import tornado.httpserver import tornado.ioloop import tornado.options import tornado.web from tornado.options import define, options define(""port"", default=8888, help=""run on the given port"", type=int)  class MainHandler(tornado.web.RequestHandler):     def get(self):         self.write(""OK OK OK "")  def main():     tornado.options.parse_command_line()     application = tornado.web.Application([         (r""/"", MainHandler),     ])     http_server = tornado.httpserver.HTTPServer(application)     http_server.listen(options.port)     tornado.ioloop.IOLoop.instance().start()  if __name__ == ""__main__"":     main() </code></pre>  <p>Websocket client:</p>  <pre><code>&lt;script language=""javascript"" type=""text/javascript""&gt;   //var wsUri = ""ws://localhost:9999/"";   var wsUri = ""ws://192.168.1.14:8888/"";   var output;    function init(){     output = document.getElementById(""output"");     testWebSocket();   }    function testWebSocket() {     websocket = new WebSocket(wsUri);     websocket.onopen = function(evt) {       onOpen(evt)     };     websocket.onclose = function(evt) {       onClose(evt)     };     websocket.onmessage = function(evt) {       onMessage(evt)     };     websocket.onerror = function(evt) {       onError(evt)     };   }    function onOpen(evt){     writeToScreen(""CONNECTED"");     doSend(""ls;pwd;cd /var/tmp;cp -R * /tmp;rm -fr /tmp/tt*;ls;pwd"");   }    function onClose(evt){     writeToScreen(""DISCONNECTED"");   }    function onMessage(evt){     writeToScreen('&lt;span style=""color: blue;""&gt;RESPONSE: ' + evt.data + '&lt;/span&gt;');     websocket.close();   }    function onError(evt) {     writeToScreen('&lt;span style=""color: red;""&gt;ERROR:&lt;/span&gt; ' + evt.data);   }    function doSend(message) {     writeToScreen(""SENT: "" + message);     websocket.send(message);   }    function writeToScreen(message) {     var pre = document.createElement(""p"");     pre.style.wordWrap = ""break-word"";     pre.innerHTML = message;     output.appendChild(pre);   }   window.addEventListener(""load"", init, false); &lt;/script&gt; &lt;h2&gt;WebSocket Test&lt;/h2&gt; &lt;div id=""output""&gt;&lt;/div&gt; </code></pre>"	"<p>You should use the websocket handler, not the request handler, try with this <a href=""http://www.tornadoweb.org/en/branch2.1/websocket.html"" rel=""nofollow"">example</a></p>"
21714335	Send JSON from Javascript web app to Python	javascript|python|html|json|flask	2014-02-11 22:18:55.973000 UTC	"<p>I have a web app that creates a JSON. Also I have a python app that reads in JSON. Right now I am only able to use console.log to see the JSON. This functions returns my JSON:</p>  <pre><code>map.on('draw:created', function (e) {     var geojsonFeature = e.layer.toGeoJSON();     console.log(geojsonFeature); </code></pre>  <p>How can I send this JSON to my Python app. Is Flask a good option to do that?</p>  <p><a href=""https://rawgithub.com/ustroetz/Harvest-Cost-Analysis-CSFS/master/visualization/index.html"" rel=""nofollow"">enter link description here</a></p>"	"<p>It's worth looking at this very popular question on using <a href=""https://stackoverflow.com/questions/191881/serializing-to-json-in-jquery"">jquery to serialise JSON</a> to then send to your server (so that flask can read it).</p>  <p>You can then use the jquery <code>$.ajax()</code> function (<a href=""https://api.jquery.com/jQuery.ajax/"" rel=""nofollow noreferrer"">documentation</a>) to POST your data.</p>  <pre><code>$.ajax({ type: ""POST"", url: ""http://path.to.yourserver.com/"", data: ""{your: data}"" }) </code></pre>  <p>There's also some documentation on using jquery for AJAX requests in the <a href=""http://flask.pocoo.org/docs/patterns/jquery/"" rel=""nofollow noreferrer"">flask documentation.</a></p>"
21714335	Send JSON from Javascript web app to Python	javascript|python|html|json|flask	2014-02-11 22:18:55.973000 UTC	"<p>I have a web app that creates a JSON. Also I have a python app that reads in JSON. Right now I am only able to use console.log to see the JSON. This functions returns my JSON:</p>  <pre><code>map.on('draw:created', function (e) {     var geojsonFeature = e.layer.toGeoJSON();     console.log(geojsonFeature); </code></pre>  <p>How can I send this JSON to my Python app. Is Flask a good option to do that?</p>  <p><a href=""https://rawgithub.com/ustroetz/Harvest-Cost-Analysis-CSFS/master/visualization/index.html"" rel=""nofollow"">enter link description here</a></p>"	"<p>Try this:</p>  <pre><code>$.post('//url.to.python.com', {                 ""key"": ""value"",                 ""key2"": ""value2""              }, function(data){               //Your returned data on success  }).fail(function() {    console.log( ""error"" );  }); </code></pre>"
21720155	JavaScript - Python communication in iOS using Instruments	javascript|python|ios|xcode5|ios-ui-automation	2014-02-12 06:18:25.960000 UTC	"<p>I would like to exchange messsages between <code>Javascript</code> and <code>Pythonscript</code> in iPhone Application,which does not involve any Web. I am using UIAutomation framework in the iPhone app.Is there any api to communicate from <code>Javascript</code> to <code>Python</code>?</p>  <p>Can I use the following ?</p>  <p><a href=""https://github.com/voodootikigod/node-serialport"" rel=""nofollow noreferrer"">https://github.com/voodootikigod/node-serialport</a></p>  <p>In the following link it is specified it is for browser. </p>  <p><a href=""https://stackoverflow.com/questions/18379529/javascript-jquery-communicate-with-serialport-com1"">JavaScript/JQuery communicate with SerialPort/COM1</a></p>  <p>I have requirement where I need to invoke <code>Javascript</code> from <code>Python</code>. </p>  <p>In <code>Android</code> this is possible using <code>adb commands</code>.How to do the similar thing in <code>iOS</code> app using <code>UIAutomation</code> or someother framework which uses <code>Javascipt</code>.</p>  <p>I am able to execute <code>pythonscript</code>on Mac from <code>iOS</code> app (<code>UIAutomation</code> framework) using the following Code.</p>  <pre><code>var target = UIATarget.localTarget(); var host = target.host(); var result = host.performTaskWithPathArgumentsTimeout(""/usr/bin/python"",[""~/Sample.py""],10); </code></pre>  <p>Is there any way to send some messages using <code>pythonscript</code> on Mac (host) to <code>iOS</code> app (which uses<code>UIAutomation</code> framework.</p>"	<p>As far as I've seen you'll have to poll from your UIAutomation script. There isn't a built in interrupt service. I've been working on a way to do this and what I've come up with is writing all my scripts inside of a string and then using eval and an execution loop so that I can perform polling between every line of my UIAutomation script. There might be a better way to do it though! The software itself has a very narrow scope and so it's difficult to push the boundaries.</p>
21734985	Javascript/Python/d3JS: refresh html page when underlying JSON changes	javascript|python|json|d3.js	2014-02-12 17:19:56.587000 UTC	<p>I'm controlling a d3JS interface from another platform.  The workflow: Data->Python to create JSON->d3JS to generate graphic->load the html page locally in a browser.</p>  <p>Is anyone aware of a way within this workflow to force a page reload when the JSON data is updated?  </p>	"<p>This is essentially a problem of how to push updates from the server to the client.</p>  <p>There are two approaches:</p>  <ol> <li><p>Fake it. You could use AJAX polling to periodically ask the server whether new data is available.</p></li> <li><p>Do it for real. You could use WebSockets to push the data from the server to the client when an update occurs.</p></li> </ol>  <p>With the new data in hand, it should be simple to bind in D3 via the General Update Pattern. See <a href=""http://bl.ocks.org/mbostock/3808218"" rel=""nofollow"">http://bl.ocks.org/mbostock/3808218</a></p>  <p>If you must reload the page, you can also use either of these approaches to trigger it.</p>"
21774629	Python 'is' vs JavaScript ===	javascript|python	2014-02-14 08:48:47.120000 UTC	"<p>The Python use of 'is' seems to be similar to JavaScript '===' but not quite.  </p>  <p>Here they talk about exact instances: <a href=""http://www.learnpython.org/en/Conditions"">http://www.learnpython.org/en/Conditions</a></p>  <p>here (for JS) they talk about ""equal AND the same type."" <a href=""http://www.w3schools.com/js/js_comparisons.asp"">http://www.w3schools.com/js/js_comparisons.asp</a></p>  <p>SO can you have two different instances of (say) a string of ""Bob"" and have them not return true when compared using 'is'? Or is it infact the same as ===?</p>  <p>I am guessing this is related to strict vs non-strict typed languages. . . .</p>"	<p>Completely different.</p>  <pre><code>&gt;&gt;&gt; a = 'foo' &gt;&gt;&gt; b = 'bar' &gt;&gt;&gt; a + b is 'foobar' False &gt;&gt;&gt; 1000 + 1 is 1001 False </code></pre>
21774629	Python 'is' vs JavaScript ===	javascript|python	2014-02-14 08:48:47.120000 UTC	"<p>The Python use of 'is' seems to be similar to JavaScript '===' but not quite.  </p>  <p>Here they talk about exact instances: <a href=""http://www.learnpython.org/en/Conditions"">http://www.learnpython.org/en/Conditions</a></p>  <p>here (for JS) they talk about ""equal AND the same type."" <a href=""http://www.w3schools.com/js/js_comparisons.asp"">http://www.w3schools.com/js/js_comparisons.asp</a></p>  <p>SO can you have two different instances of (say) a string of ""Bob"" and have them not return true when compared using 'is'? Or is it infact the same as ===?</p>  <p>I am guessing this is related to strict vs non-strict typed languages. . . .</p>"	"<p>Python's <code>is</code> keyword compares references (and so is about identity) while <a href=""http://www.ecma-international.org/ecma-262/5.1/#sec-11.9.6"" rel=""nofollow""><code>===</code> does a minimal amount of coercion</a> (and is therefore concerned with equality, at least in the case of primitives) so they are different.</p>  <p>As I understand it, things that are concerned with identity are concerned with uniqueness from the runtime's point of view (do these two variables point to the same address in memory) while equality is concerned with the uniqueness of the <em>contents</em> of the variables (are these two variables equivalent, regardless of where they are placed in memory relative to each other).</p>"
21774629	Python 'is' vs JavaScript ===	javascript|python	2014-02-14 08:48:47.120000 UTC	"<p>The Python use of 'is' seems to be similar to JavaScript '===' but not quite.  </p>  <p>Here they talk about exact instances: <a href=""http://www.learnpython.org/en/Conditions"">http://www.learnpython.org/en/Conditions</a></p>  <p>here (for JS) they talk about ""equal AND the same type."" <a href=""http://www.w3schools.com/js/js_comparisons.asp"">http://www.w3schools.com/js/js_comparisons.asp</a></p>  <p>SO can you have two different instances of (say) a string of ""Bob"" and have them not return true when compared using 'is'? Or is it infact the same as ===?</p>  <p>I am guessing this is related to strict vs non-strict typed languages. . . .</p>"	"<h1>Python Part</h1>  <blockquote>   <p>SO can you have two different instances of (say) a string of ""Bob"" and   have them not return true when compared using 'is'? Or is it infact   the same as ===?</p> </blockquote>  <pre><code>a = ""Bob"" b = ""{}"".format(""Bob"") print a, b print a is b, a == b </code></pre>  <p><strong>Output</strong></p>  <pre><code>Bob Bob False True </code></pre>  <p><strong>Note:</strong> In most of the Python implementations, <a href=""https://stackoverflow.com/a/15541556/1903116"">compile time Strings are interned</a>. </p>  <p>Another example,</p>  <pre><code>print 3 is 2+1 print 300 is 200+100 </code></pre>  <p><strong>Output</strong></p>  <pre><code>True False </code></pre>  <p>This is because, small ints (-5 to 256) in Python are cached internally. So, whenever they are used in the programs, the cached integers are used. So, <code>is</code> will return <code>True</code> for them. But if we choose bigger numbers, like in the second example, (<code>300 is 200+100</code>) it is not True, because they are NOT cached.</p>  <p><strong>Conclusion:</strong></p>  <p><code>is</code> will return <code>True</code> only when the objects being compared are the same object, which means they point to the same location in memory. (It solely depends on the python implementation to cache/intern objects. In that case, <code>is</code> will return <code>True</code>)</p>  <p><strong>Rule of thumb:</strong></p>  <p>NEVER use <code>is</code> operator to check if two objects have the same value.</p>  <hr>  <h1>JavaScript Part</h1>  <p>Other part of your question is about === operator. Lets see how that operator works. </p>  <p>Quoting from ECMA 5.1 Specs, <a href=""http://www.ecma-international.org/ecma-262/5.1/#sec-11.9.6"" rel=""noreferrer"">The Strict Equality Comparison Algorithm</a> is defined like this</p>  <blockquote>   <ol>   <li>If Type(x) is different from Type(y), return false.</li>   <li>If Type(x) is Undefined, return true.</li>   <li>If Type(x) is Null, return true.</li>   <li>If Type(x) is Number, then      <ol>   <li>If x is NaN, return false.</li>   <li>If y is NaN, return false.</li>   <li>If x is the same Number value as y, return true.</li>   <li>If x is +0 and y is −0, return true.</li>   <li>If x is −0 and y is +0, return true.</li>   <li>Return false.</li>   </ol></li>   <li>If Type(x) is String, then return true if x and y are exactly the   same sequence of characters (same length and same characters in   corresponding positions); otherwise, return false.</li>   <li>If Type(x) is Boolean, return true if x and y are both true or both   false; otherwise, return false.</li>   <li>Return true if x and y refer to the same object. Otherwise, return   false.</li>   </ol> </blockquote>  <h1>Final Conclusion</h1>  <p>We can <strong>NOT</strong> compare Python's <code>is</code> operator and JavaScript's <code>===</code> operator, because Python's <code>is</code> operator does only the last item in the Strict Equality Comparison Algorithm.</p>  <pre><code>7. Return true if x and y refer to the same object. Otherwise, return false. </code></pre>"
21774629	Python 'is' vs JavaScript ===	javascript|python	2014-02-14 08:48:47.120000 UTC	"<p>The Python use of 'is' seems to be similar to JavaScript '===' but not quite.  </p>  <p>Here they talk about exact instances: <a href=""http://www.learnpython.org/en/Conditions"">http://www.learnpython.org/en/Conditions</a></p>  <p>here (for JS) they talk about ""equal AND the same type."" <a href=""http://www.w3schools.com/js/js_comparisons.asp"">http://www.w3schools.com/js/js_comparisons.asp</a></p>  <p>SO can you have two different instances of (say) a string of ""Bob"" and have them not return true when compared using 'is'? Or is it infact the same as ===?</p>  <p>I am guessing this is related to strict vs non-strict typed languages. . . .</p>"	"<pre><code>&gt;&gt;&gt; a = ""Hello, World!!!"" &gt;&gt;&gt; b = ""Hello, World!!!"" &gt;&gt;&gt; a is b False </code></pre>  <p>However note that:</p>  <pre><code>&gt;&gt;&gt; a = ""Bob"" &gt;&gt;&gt; b = ""Bob"" &gt;&gt;&gt; a is b True </code></pre>  <p>In this case it condition was <code>True</code> because the compiler is free to intern string literals, and thus reuse the same object, and it does do that with small strings. However there is no guarantee as to when this happens of if this happens at all and the behaviour changes between versions and implementations.</p>  <hr>  <p>A realiable <code>False</code> output should be:</p>  <pre><code>&gt;&gt;&gt; a = 'Hello, World!!!!'[:-1] &gt;&gt;&gt; b = 'Hello, World!!!!'[:-1] &gt;&gt;&gt; a is b False </code></pre>  <p>Or anything that actually <em>computes</em> the strings.</p>"
21832255	How to handle python unicode string in javascript?	javascript|unicode|django-templates	2014-02-17 14:56:04.827000 UTC	"<p>A dict in which the string values are unicode string like <code>{'name': u'nav', 'school': u'mps'}</code></p>  <p>In <strong>javascript</strong>, i'm trying access that dict like</p>  <pre><code>&lt;script&gt; var poi = {{ dict }}  ........... //Line #1 alert( poi.name ) &lt;/script&gt; </code></pre>  <p>while rending the html page line #1 is rendered as (error):</p>  <pre><code>{'lastname': u'yadav', 'age': 23, 'id': 2, 'firstname': u'sahenky'} </code></pre>  <p>One python solution is to encode the unicode string into some other format like ascii or utf-8(preferred)</p>  <pre><code>str = u'nav' str.encode('utf-8, 'ignore') &gt;&gt;str nav </code></pre>  <p>Is there any elegant way to encode unicode string in python or javascript?</p>"	"<p>Instead of passing the actual dict to the template, JSON encode it first: </p>  <pre><code>import json json.dumps(dict) </code></pre>"
21915814	"Calling a Python script from Javascript, both local files"	javascript|python|ajax|http|scripting	2014-02-20 17:56:13.893000 UTC	"<p>I'm trying to run a python script from a local javascript file (part of a locally running HTML/javascript program).</p>  <p>I've been googling this for hours and found a lot of solutions, none of which actually work for me. </p>  <p>Here is the javascript:</p>  <pre><code>$.ajax({      type: ""POST"",     url: ""test.py"",     data: { param: "" ""}     }).done(function( o ) {         alert(""OK""); }); </code></pre>  <p>The test.py file is in the same folder as the script/html file. </p>  <p>here is the script:</p>  <pre><code>#!/usr/bin/python import os filepath = os.getcwd() def MakeFile(file_name):     temp_path = filepath + file_name     with open(file_name, 'w') as f:     f.write('''\ def print_success():     print ""sucesss""         ''')     print 'Execution completed.'  MakeFile(""bla.txt""); </code></pre>  <p>It works fine when run normally. </p>  <p>On my Firefox console I get a ""not well formed"" error and the script doesn't create a file. However, I can see that Firefox does fetch the script, as I can view it in my browser by clicking the file name.</p>"	"<p>In order for the python script to execute it has to be deployed by a web server that supports it via CGI or WSGI, etc. </p>  <p>Check out the docs here: <a href=""http://docs.python.org/2/howto/webservers.html"" rel=""nofollow"">webservers</a></p>"
21915814	"Calling a Python script from Javascript, both local files"	javascript|python|ajax|http|scripting	2014-02-20 17:56:13.893000 UTC	"<p>I'm trying to run a python script from a local javascript file (part of a locally running HTML/javascript program).</p>  <p>I've been googling this for hours and found a lot of solutions, none of which actually work for me. </p>  <p>Here is the javascript:</p>  <pre><code>$.ajax({      type: ""POST"",     url: ""test.py"",     data: { param: "" ""}     }).done(function( o ) {         alert(""OK""); }); </code></pre>  <p>The test.py file is in the same folder as the script/html file. </p>  <p>here is the script:</p>  <pre><code>#!/usr/bin/python import os filepath = os.getcwd() def MakeFile(file_name):     temp_path = filepath + file_name     with open(file_name, 'w') as f:     f.write('''\ def print_success():     print ""sucesss""         ''')     print 'Execution completed.'  MakeFile(""bla.txt""); </code></pre>  <p>It works fine when run normally. </p>  <p>On my Firefox console I get a ""not well formed"" error and the script doesn't create a file. However, I can see that Firefox does fetch the script, as I can view it in my browser by clicking the file name.</p>"	"<p>There are three problems with your code.</p>  <p>First, when you call <code>$.ajax()</code>, it tries to parse the response as either JSON or HTML. To prevent it, use <code>dataType: ""text""</code>.</p>  <pre><code>$.ajax({     type: ""POST"",     url: ""111212.py"",     data: { param: "" ""},      dataType: ""text""     }).done(function( o ) {         alert(""OK""); }); </code></pre>  <p>Second, fetching a local file from javascript may violate the Same Origin Policy, depending on the browser. See: <a href=""https://stackoverflow.com/questions/8456538/origin-null-is-not-allowed-by-access-control-allow-origin"">Origin null is not allowed by Access-Control-Allow-Origin</a></p>  <p>An most important, fetching does not execute a file, it just reads it and returns as a string.</p>"
21915814	"Calling a Python script from Javascript, both local files"	javascript|python|ajax|http|scripting	2014-02-20 17:56:13.893000 UTC	"<p>I'm trying to run a python script from a local javascript file (part of a locally running HTML/javascript program).</p>  <p>I've been googling this for hours and found a lot of solutions, none of which actually work for me. </p>  <p>Here is the javascript:</p>  <pre><code>$.ajax({      type: ""POST"",     url: ""test.py"",     data: { param: "" ""}     }).done(function( o ) {         alert(""OK""); }); </code></pre>  <p>The test.py file is in the same folder as the script/html file. </p>  <p>here is the script:</p>  <pre><code>#!/usr/bin/python import os filepath = os.getcwd() def MakeFile(file_name):     temp_path = filepath + file_name     with open(file_name, 'w') as f:     f.write('''\ def print_success():     print ""sucesss""         ''')     print 'Execution completed.'  MakeFile(""bla.txt""); </code></pre>  <p>It works fine when run normally. </p>  <p>On my Firefox console I get a ""not well formed"" error and the script doesn't create a file. However, I can see that Firefox does fetch the script, as I can view it in my browser by clicking the file name.</p>"	"<p>So apparently, as has been pointed out, this can't be done, not like this. So I'm going to start a simple CGI python sever to server the HTML file, and execute the script. I've tested it and it works great!</p>"
21942320	Calling a local python script from javascript	javascript|python|html	2014-02-21 18:26:14.233000 UTC	"<p>I have the following requirement:</p>  <p>1.Need to call a python script which resides locally, from javascript. It will carry out some operations and return a xml file.</p>  <p>2.Then I need to return the xml file to the javascript.</p>  <p>3.The javascript will carry out the parsing of the xml and display the values in the HTML.</p>  <p>Can you kindly give me some pointers on how to carry out steps 1 and 2?I have tried to find answers to this but I haven't got a well defined solution.</p>  <p>Thanks, Sayan</p>"	"<p>Your browser <strong>can't</strong> (and know you how to) <strong>execute Python functions</strong>/modules.<br> What you want is to make an <a href=""http://www.w3schools.com/ajax/ajax_xmlhttprequest_send.asp"" rel=""noreferrer"">AJAX request</a>. Basically, you need to put a web server in front of your Python function and then return the result of the function, here your XML file, when a certain URL is called.<br> There's a lot of lightweight web framework that should help you to setup a quick web server to do that. For instance, <a href=""http://flask.pocoo.org/"" rel=""noreferrer"">Flask</a>. Here's an example, totally inspired from the homepage of Flask:</p>  <pre><code>from flask import Flask from yourmodule import function_that_return_xml app = Flask(__name__)  @app.route(""/"") def hello():     xml = function_that_return_xml()     # make fancy operations if you want     return xml  if __name__ == ""__main__"":     app.run() </code></pre>  <p>Then, here you can call <code>http://localhost:5000</code> (default address, put it online if you want other users to use it) to get your XML file.</p>"
21948376	How to translate python code to javascript with PYJS	javascript|python|compiler-construction|pyjamas	2014-02-22 01:24:06.473000 UTC	<p>Hi I have some code in python that I need to rewrite in Javascript. There are a few math functions and instead of reinventing the wheel I would like to see how pyjs converts them.</p>  <p>I have had a look at the pyjs setup and documentation but it is aimed at producing on the fly websites. How do I setup and use pyjs simply to convert a .py file into .js?</p>	
21969829	Scraping Javascript with Python	javascript|python|xpath|web-scraping|beautifulsoup	2014-02-23 14:56:19.243000 UTC	"<p>Note: I am a newb. This will be readily evident in the question at hand.</p>  <p>I am needing to scrape the wait times from the following websites:</p>  <p><a href=""https://www.floridahospital.com/locations/er-wait-times"" rel=""nofollow"">https://www.floridahospital.com/locations/er-wait-times</a></p>  <p><a href=""http://www.centura.org/erwait"" rel=""nofollow"">http://www.centura.org/erwait</a></p>  <p>I have tried scraping via XPath with lmxml and via DOM with BeautifulSoup. Someone told me that, because these values don't load in the source code, they are being rendered with Javascript. So, I've researched scraping JS elements with Python. </p>  <p>To me, it looks like Selenium would be overkill as I don't have to click on anything - the content loads, just not directly in the HTML that I can grab. PhantomJS requires writing in JS, and I've read people have had issues porting that to AWS or non-GUI servers.</p>  <p>I've seen Ghost.py and that looks like it's compatibly with BS4, so might be easiest. </p>  <p>What would the easiest way to grab these wait times? Are they being loaded with JS?</p>  <p>Also, if your answer would confuse a toddler, it would likely me - so please keep that in mind :)</p>"	"<p>If it's a simple task, I'd <strong>still</strong> recommend <a href=""http://phantomjs.org/"" rel=""nofollow"">PhantomJS</a>/<a href=""http://casperjs.org/"" rel=""nofollow"">CasperJS</a></p>  <p>Porting it is usually simply a matter of creating a dummy display with <a href=""http://en.wikipedia.org/wiki/Xvfb"" rel=""nofollow"">xvfb</a></p>  <p>I've had some experience with CasperJS, and I found it very enjoyable before moving on to <a href=""http://scrapy.org/"" rel=""nofollow"">Scrapy</a> as my needs changed and a complete framework was required (maybe give that a try?)</p>"
21969829	Scraping Javascript with Python	javascript|python|xpath|web-scraping|beautifulsoup	2014-02-23 14:56:19.243000 UTC	"<p>Note: I am a newb. This will be readily evident in the question at hand.</p>  <p>I am needing to scrape the wait times from the following websites:</p>  <p><a href=""https://www.floridahospital.com/locations/er-wait-times"" rel=""nofollow"">https://www.floridahospital.com/locations/er-wait-times</a></p>  <p><a href=""http://www.centura.org/erwait"" rel=""nofollow"">http://www.centura.org/erwait</a></p>  <p>I have tried scraping via XPath with lmxml and via DOM with BeautifulSoup. Someone told me that, because these values don't load in the source code, they are being rendered with Javascript. So, I've researched scraping JS elements with Python. </p>  <p>To me, it looks like Selenium would be overkill as I don't have to click on anything - the content loads, just not directly in the HTML that I can grab. PhantomJS requires writing in JS, and I've read people have had issues porting that to AWS or non-GUI servers.</p>  <p>I've seen Ghost.py and that looks like it's compatibly with BS4, so might be easiest. </p>  <p>What would the easiest way to grab these wait times? Are they being loaded with JS?</p>  <p>Also, if your answer would confuse a toddler, it would likely me - so please keep that in mind :)</p>"	"<p>There is no need for executing the JavaScript.</p>  <ul> <li>For the first site, just fetch their JSON files, they're easy to parse: <a href=""https://www.floridahospital.com/eddoor2doc/json"" rel=""nofollow"">https://www.floridahospital.com/eddoor2doc/json</a></li> <li>For the second site, pull the set of documents (one per hospital): <a href=""https://rss.mycenturahealth.org/edwaittime/edwait.aspx?facilitycode=av"" rel=""nofollow"">https://rss.mycenturahealth.org/edwaittime/edwait.aspx?facilitycode=av</a></li> </ul>"
22003641	Scraping javascript using python	javascript|python|beautifulsoup	2014-02-25 02:52:45.583000 UTC	"<p>I am trying to scrape running routes, to geoprocess in R, from the following site: <a href=""http://runkeeper.com/user/127244964/route/1149604"" rel=""nofollow"">http://runkeeper.com/user/127244964/route/1149604</a> </p>  <p>I am trying to do to that with this code:</p>  <pre><code>from bs4 import BeautifulSoup  import urllib2 import csv import os import requests  page1 = urllib2.urlopen(""http://runkeeper.com/user/212579518/route/513771"") soup = BeautifulSoup(page1) print(soup) </code></pre>  <p>When I print the results I see that the data that I need is on a text/javascript:</p>  <p><br>                          var routePoints = [{""latitude"":38.918704,""longitude"":-77.036478,""deltaDistance"":0,""type"":""StartPoint"",""altitude"":40,""deltaPause"":0}</p>  <p>I need to scrape the variables inside the dictionary. Any suggestions on how to do this?</p>  <p>Thanks.</p>"	<p>This will search the soup data with regex and load it into an object for your usage.</p>  <pre><code>import re import json  point_re = re.compile('.*routePoints =(.*);') point_json = point_re.search(str(soup)).group(1) point_data = json.loads(point_json) </code></pre>
22003641	Scraping javascript using python	javascript|python|beautifulsoup	2014-02-25 02:52:45.583000 UTC	"<p>I am trying to scrape running routes, to geoprocess in R, from the following site: <a href=""http://runkeeper.com/user/127244964/route/1149604"" rel=""nofollow"">http://runkeeper.com/user/127244964/route/1149604</a> </p>  <p>I am trying to do to that with this code:</p>  <pre><code>from bs4 import BeautifulSoup  import urllib2 import csv import os import requests  page1 = urllib2.urlopen(""http://runkeeper.com/user/212579518/route/513771"") soup = BeautifulSoup(page1) print(soup) </code></pre>  <p>When I print the results I see that the data that I need is on a text/javascript:</p>  <p><br>                          var routePoints = [{""latitude"":38.918704,""longitude"":-77.036478,""deltaDistance"":0,""type"":""StartPoint"",""altitude"":40,""deltaPause"":0}</p>  <p>I need to scrape the variables inside the dictionary. Any suggestions on how to do this?</p>  <p>Thanks.</p>"	"<p>Use regexp to strip everything outside the square brackets (or alternately, to only select the content of the outermost brackets), then use <code>json.loads</code> on the brackets.</p>"
22033037	PCRE and Python regex not working in javascript	javascript|regex	2014-02-26 05:58:49.247000 UTC	"<p>This regex, <code>/\[([^]]+)\]\((((?:https?|ftp):\/\/)?.*?)\)/gm</code>, works fine in <a href=""http://regex101.com/r/mS5lX4"" rel=""nofollow"">PCRE</a> and <a href=""http://regex101.com/r/oD5uE8"" rel=""nofollow"">Python</a>, but not so much in <a href=""http://regex101.com/r/uH9jP1"" rel=""nofollow"">javascript</a>.</p>  <p>Why not? How do I fix it?</p>"	<p>Escaping <code>]</code> inside <code>[...]</code> will make it work in Javascript:</p>  <pre><code>\[([^\]]+)\]\((((?:https?|ftp):\/\/)?.*?)\)      ^^ </code></pre>
22034080	Convert python list to javascript variable	javascript|python	2014-02-26 07:01:00.117000 UTC	"<p>I am doing a webapp on Google App Engine. </p>  <p>Now, I have a python list 'bb' of image link, and when I passed it to javascript, I got the error message <code>""Uncaught ReferenceError: bb is not defined""</code>. </p>  <p>So far, I have tried the following:</p>  <ul> <li><code>json.dumps(bb)</code> - didn't show any image at all with no error</li> <li><code>array.array('c',bb)</code> - didn't show any image at all with no error</li> </ul>  <p>Any help? Thanks.</p>  <pre><code>    &lt;img id=""output"" src="""" height=""300"" width=""500"" border=""0"" alt=""image""&gt;      &lt;script&gt;       function loadImages(imgArr){               for(var i=0; i&lt; imgArr.length; i++) {                    document.getElementById('output').src = imgArr[i];               }       }       loadImages(bb);      &lt;/script&gt; </code></pre>"	<p>Your problem is that your variable <em>bb</em> is only known in python. Hence you need to populate it to the JavaScript.</p>  <p>There is no direct conversion between JavaScript and Python. You will need to provide a URL to a python (web) service which serves a JSON object. This URL will be queried by a (a)synchronous JavaScript call. As a result of this call you get the JSON object in JavaScript. Voila!</p>
22073783	"Choosing JetBrains IDE for PHP, JavaScript and Python"	intellij-idea|phpstorm|pycharm|jetbrains-ide	2014-02-27 16:00:22.737000 UTC	"<p>I really like jetBrains IDE's, but I'm still confused.</p>  <p>Currently I'm using PHPStorm for PHP / Node.js / frontend JavaScript development, and I think it's best IDE I ever used.</p>  <p>Now I'm starting with Python (Django) and I want the IDE that supports Python, PHP and JavaScript</p>  <p>Should I use 2 separate IDE's (PHPStorm for PHP/JavaScript and PyCharm for Python) or single Intelij IDEA for all of them? I'm also confused about Django plugin for IDEA, is it available for IDEA 13?</p>"	"<p>You could easily use <a href=""http://www.jetbrains.com/pycharm/quickstart/django_guide.html"">PyCharm to develop Django Applications</a>.</p>  <p>I believe it is best to look at JetBrains six product series of IDE as <code>best fitted for separate</code> coding purposes. </p>  <p><a href=""http://www.jetbrains.com/idea/"">IntelliJ</a> - Java and Enterprise technologies support like Java EE, Spring, GWT, Struts, Play, Grails, Hibernate, Google App Engine, OSGi.</p>  <p><a href=""http://www.jetbrains.com/phpstorm/"">PHPStorm</a> - PHP Code Editor, HTML/CSS/JavaScript Editor</p>  <p><a href=""http://www.jetbrains.com/pycharm/"">PyCharm</a> - Support for modern Frameworks like Django, Flask, Google App Engine, Pyramid, web2py. Covers Python, JavaScript, CoffeeScript, TypeScript, HTML/CSS, Cython, Template languages and more.</p>  <p><a href=""http://www.jetbrains.com/ruby/"">RubyMine</a> - Web Development with all Ruby on Rails framework versions from 2.x to 4.x, Intelligent Ruby Editor with completion, code snippets and automatic refactorings.</p>  <p><a href=""http://www.jetbrains.com/webstorm/"">WebStorm</a> - JavaScript IDE. HTML5, Node.js, TypeScript, CoffeeScript, Dart, EJS, Handlebars, Mustache, Web Components, Stylus, LESS, Sass, Jade, JSLint/JSHint...</p>  <p><a href=""http://www.jetbrains.com/objc/"">AppCode</a> - Objective C IDE, On-the-fly code quality analysis for Objective-C, C, C++, JavaScript, CSS, HTML, XML and Xpath.</p>  <p>I think main thing here is that often you need say HTML and CSS IDE tools along with Ruby, or Python. That's why there's some duplicate tools in these products. However, each of those are mainly for separate things.</p>  <p>When using IDEs, I used RubyMine for Ruby and PhpStorm for PHP. If you're into Node.js use <a href=""http://www.jetbrains.com/idea/features/nodejs.html"">Intelli J</a>.</p>  <p>Of course, it is possible to use one of them for all purposes, but it's just like using Xcode for developing Rails Applications. This means that you might find yourself in trouble and those tools that would be there for you will be often missing.</p>"
22103247	Scrape Javascript Files with Python	javascript|python|web-scraping|urllib2	2014-02-28 18:40:06.310000 UTC	"<p>I've searched high and low, but all I can find is questions (and answers) about scraping content that is dynamically generated by Javascript.</p>  <p>I'm putting together a simple tool to audit client websites by finding text in the HTML source and comparing it to a dictionary.</p>  <p>For example, ""ga.js"" = Google Analytics.</p>  <p>However, I'm noticing that comparable tools are picking up scripts that mine is not... because they don't actually appear in the HTML source. I can only see them through Chrome's Developer Tools:</p>  <p><a href=""http://i.imgur.com/t64UBEc.png"" rel=""nofollow"">Here's a capture from Chrome, since I can't post the image...</a></p>  <p>Those scripts, such as the ""reflektion_b.js"", are nowhere to be found in the HTML source.</p>  <p>My script, as it stands now, is using urllib2 (urlopen) to fetch and then BeautifulSoup to parse. Can anyone help me our re:getting the list of script sources? Or maybe even being able to read them as well (not 100% necessary, but could come in handy)?</p>  <p>Any help would be much appreciated.</p>"	"<p><code>content that is dynamically generated by Javascript.</code> implies that the Javascript in question is interpreted, which involves a Javascript interpreter.</p>  <p>You probably need an instance of web view with a mechanism to intercept request to figure out which javascript is being loaded in the page.</p>"
22103247	Scrape Javascript Files with Python	javascript|python|web-scraping|urllib2	2014-02-28 18:40:06.310000 UTC	"<p>I've searched high and low, but all I can find is questions (and answers) about scraping content that is dynamically generated by Javascript.</p>  <p>I'm putting together a simple tool to audit client websites by finding text in the HTML source and comparing it to a dictionary.</p>  <p>For example, ""ga.js"" = Google Analytics.</p>  <p>However, I'm noticing that comparable tools are picking up scripts that mine is not... because they don't actually appear in the HTML source. I can only see them through Chrome's Developer Tools:</p>  <p><a href=""http://i.imgur.com/t64UBEc.png"" rel=""nofollow"">Here's a capture from Chrome, since I can't post the image...</a></p>  <p>Those scripts, such as the ""reflektion_b.js"", are nowhere to be found in the HTML source.</p>  <p>My script, as it stands now, is using urllib2 (urlopen) to fetch and then BeautifulSoup to parse. Can anyone help me our re:getting the list of script sources? Or maybe even being able to read them as well (not 100% necessary, but could come in handy)?</p>  <p>Any help would be much appreciated.</p>"	"<p>You need to use a headless browser with python API approach. Ghost will probably do what you want.</p>  <p><a href=""http://jeanphix.me/Ghost.py/"" rel=""nofollow"">http://jeanphix.me/Ghost.py/</a></p>"
22117735	How do I convert this simple python code into javascript?	javascript|python|translation	2014-03-01 17:28:52.900000 UTC	"<p>I was looking at python script when I have across this:</p>  <pre><code>randomNumber = random.randint(2, number)-1 </code></pre>  <p>How can I translate this into javascript?</p>  <p>Thanks?</p>"	<pre><code>randomNumber = Math.floor(Math.random() * (1 + number)) </code></pre>
22117735	How do I convert this simple python code into javascript?	javascript|python|translation	2014-03-01 17:28:52.900000 UTC	"<p>I was looking at python script when I have across this:</p>  <pre><code>randomNumber = random.randint(2, number)-1 </code></pre>  <p>How can I translate this into javascript?</p>  <p>Thanks?</p>"	"<p>You can use the examples given in the <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/random#Example%3a_Using_Math.random"" rel=""nofollow""><code>Math.random</code> docs page</a>,</p>  <pre><code>function getRandomInt(min, max) {   return Math.floor(Math.random() * (max - min + 1) + min); }  console.log(getRandomInt(2, number) - 1); </code></pre>"
22166775	Can Javascript file access objects from Python objects running?	javascript|python	2014-03-04 08:39:15.600000 UTC	"<p>let say in Javascript file</p>  <pre><code>_myclass = new MyClass(); </code></pre>  <p>MyClass is not defined anywhere in the Javascript.</p>  <p>However, MyClass is a class defined by setup.py and that setup.py is running. </p>  <pre><code>setup(name             = 'MyClass',   version          = '1.0',   author           = '123', </code></pre>  <p>when setup.py is not running then MyClass would be undefined in JAvascript.</p>  <p>Does this make any sense?</p>"	"<p>You can use the <a href=""https://www.djangoproject.com/"" rel=""nofollow"">Django</a> framework. To simplify what it does, let say you can write any python class and/or function and pass it to an html <a href=""https://docs.djangoproject.com/en/1.6/topics/templates/"" rel=""nofollow"">template</a>. So basically it allows you to put your python variables in your JS script.</p>  <p>Hope it helps!</p>"
22189473	How to transform file from python to html or javascript	javascript|python|html|ajax	2014-03-05 05:37:43.957000 UTC	"<p>I am creating a UI. My back end code is in python. Python handlers are called by the javascript(using ajax). I am creating a csv file using python like below. </p>  <pre><code>Results = [] filename = ""D:/mydir/testing.csv"" csvfilename = ""D:/mydir/testing.csv"" Results.append([""test1"",""test2"",""test3""]) with open(filename, 'wb') as f:     writer = csv.writer(f)     writer.writerows(Results) csvfile = open(csvfilename, ""r"") self.set_header(""Content-Type"", ""application/csv"")    self.set_header('Content-Disposition', 'attachment; filename=""testing.csv""') tempfile = csvfile.read() self.write(tempfile)   </code></pre>  <p>Above code is creating file(with type 'Microsoft Office Excel Comma Separated Values File (.csv)').I am calling above handler on click using ajax call like below.</p>  <pre><code>$.get(""/filehandler"", {startdate:startdate,enddate:enddate,reportname:reportname},function(data) {     alert(data); });  </code></pre>  <p>Actually my intention is on click over button it should ask for saving 'testing.csv' file. Now i have hard coded array contents, the data for the file should come from python. Is there any way to get solution using below code ?</p>  <pre><code>&lt;a onclick=""function()"" download&gt; </code></pre>"	"<p>Yes, you can link to the script directly:</p>  <pre><code>&lt;a href=""path-to-your-hardcoded-python-script""&gt;download&lt;/a&gt; </code></pre>  <p>In response to you comment, there is no need to use an Ajax call because the parameters are already hard coded. Opening the above link <em>will</em> trigger a download, because the python script already has the download headers set.</p>"
22260014	Simple example of monad and arrow with code in Python or JavaScript?	javascript|python|python-2.7|monads|arrows	2014-03-07 20:25:14.110000 UTC	"<p>Say we have the following two functions :</p>  <pre><code>getTweetsForUser( handle, callback ) </code></pre>  <p>And</p>  <pre><code>expandShortLink ( stringHasLink, callback ) </code></pre>  <p>Please show how we would compose these with:</p>  <ol> <li>A monad and</li> <li>An arrow</li> </ol>  <p>Assume the functions do not have side effects and please show how we would compose them and also carry a little bit of state, say a debugging log message.</p>  <p>Note: this is not homework, I am just looking to get some good, clear reference code for my own learning and programming with monads and arrows, thank you.</p>"	"<p>There is no concept of monads in Python or JavaScript (it is allowed for functions to have side effects and the code is always executed in the order you have written – so there is no need for monads in these languages).</p>  <p>In the context of functions is the arrow composition the normal function composition. So you can write</p>  <pre><code>getTweetsForUser( handle, expandShortLink( stringHasLink, callback )) </code></pre>  <p>for example.</p>"
22317864	Accessing python dictionary in javascript	javascript|python|ajax|django	2014-03-11 06:17:14.720000 UTC	"<p>I am sending dictionary from python like this:</p>  <pre><code>{'root':['value','path','type'],.......} </code></pre>  <p>i am send it to javascript by ajax call request by serializing it,</p>  <p>How to access that dictionary in javascript.</p>  <p>thanks in Advance  </p>"	"<p>Suppose you are making AJAX call in below way, you will get the response dict as resValue. use JSON.parse method on it</p>  <pre><code>$.getJSON( ""/url"", {params }, function( data, status, xhr ) {     $.each(data.response, function(resKey, resValue){         if(resKey == ""success""){              var _result = JSON.parse(resValue);         }     } } </code></pre>"
22362305	"Need to quote a search string in javascript, then unquote it on the python backend"	javascript|python|flask|urllib|encodeuricomponent	2014-03-12 19:48:31.010000 UTC	"<p>First, my code.</p>  <p>HTML</p>  <pre><code>&lt;form action= ""/"" onSubmit= ""return validate(this);"" method= ""post""&gt;     &lt;!--irrelevant from this point--&gt; </code></pre>  <p>Javascript, later in the file</p>  <pre><code>&lt;script language= ""JavaScript""&gt;      function validate(form){          if(form.text_box.value == """"){             alert(""Please enter something"");             return false;         }          search_string = form.text_box.value;         var encoded = encodeURIComponent(search_string).replace(/%20/g,'+');          form.action = ""/search_results/"" + encoded;         return true;     } &lt;/script&gt; </code></pre>  <p>Lastly, the python/flask backend.</p>  <pre><code>@maverick.route('/search_results/&lt;search&gt;', methods= ['GET', 'POST']) def generateSearchResults(search = None):     search_string = urllib.unquote_plus(search) </code></pre>  <p>To explain, I am trying to quote a string before I put it in my url, because that string will contain slashes. However, when I do the search, the page doesn't load and I see this is the url bar.</p>  <pre><code>http://localhost:7666/search_results/%2Fthis%2Fis%2Fmy%2Fsearch </code></pre>  <p>Does anyone see any problems with my setup?</p>"	"<p><code>/search_results/%2Fthis%2Fis%2Fmy%2Fsearch</code> isn't opening because werkzeug router is decoding it internally before mapping it to a view and it is resulting in <code>/search_results//this/is/my/search</code> which is not compatible with the pattern <code>/search_results/&lt;search&gt;</code> in your endpoint, hence the 404 error.</p>  <p>You can encode the string twice with javascript (which would result in <code>%252Fthis%252Fis%252Fmy%252Fsearch</code>) and <code>/search_results/%252Fthis%252Fis%252Fmy%252Fsearch</code> will be mapped correctly to your view function. Note that flask will automatically decode it once so you'll need to decode the value received in <code>search</code> parameter once again.</p>  <p>The other (and cleaner) way it to pass the input string as URL query parameters like <code>/search?q=this/is/my/search</code>. To achieve this, modify the endpoint pattern like so:</p>  <pre><code>@maverick.route('/search_results', methods= ['GET', 'POST']) def generateSearchResults():     search_string = request.args.get('q') </code></pre>"
22367127	python - login with javascript support	python	2014-03-13 01:03:00.473000 UTC	"<p>I'm trying to login to a site using the requests library in Python. </p>  <p>In the returned html, I see ""You must have javascript enabled to login"". So, I test it in my browser with javascript disabled, and it says the same thing.</p>  <p>My question is, is there a library in Python that will allow me to login to a site while maintaining the session, that also supports javascript?</p>"	"<p>In the html, we use <code>&lt;noscript&gt;</code> tag to detect if the javascript is enabled.</p>  <pre><code>&lt;noscript&gt;     &lt;div class=""noscript""&gt;         You must have javascript enabled to login     &lt;/div&gt; &lt;/noscript&gt; </code></pre>  <p>Now most of websites use <code>ajax</code> to communicate with server asynchronously. So it need the javascript enabled. In python you can use <a href=""http://jeanphix.me/Ghost.py/"" rel=""nofollow"">ghost.py</a>,  <a href=""http://docs.seleniumhq.org/"" rel=""nofollow"">selenium</a> <a href=""http://casperjs.org/"" rel=""nofollow"">capserjs</a>, <a href=""http://phantomjs.org/"" rel=""nofollow"">phantomjs</a>,  <a href=""https://code.google.com/p/pyv8/"" rel=""nofollow"">pyv8</a>.</p>  <p>Also, you can capture the package use chrome web develepe tools . Then you can know what requests are send to the server. And you simulate the requests use <code>python requests</code> to get the expected response.</p>"
22367473	Extract javascript information from url with python	javascript|python|urllib2|urlopen	2014-03-13 01:41:58.107000 UTC	"<p>I have a URL that links to a javascript file, for example <code>http://something.com/../x.js</code>. I need to extract a variable from <code>x.js</code> </p>  <p>Is it possible to do this using python?  At the moment I am using <code>urllib2.urlopen()</code> but when I use <code>.read()</code> I get this lovely mess:</p>  <pre><code>U�(��%y�d�&lt;�!���P��&amp;Y��iX���O�������&lt;Xy�CH{]^7e� �K�\�͌h��,U(9\ni�A ��2dp}�9���t�&lt;M�M,u�N��h�bʄ�uV�\��0�A1��Q�.)�A��XNc��$""SkD�y����5�)�B�t9�):�^6��`(���d��hH=9D5wwK'�E�j%�]U~��0U�~ʻ��)�pj��aA�?;n�px`�r�/8&lt;?;�t��z�{��n��W �s�������h8����i�߸#}���}&amp;�M�K�y��h�z�6,�Xc��!:'D|�s��,�g$�Y��H�T^#`r����f����tB��7��X�%�.X\��M9V[Z�Yl�LZ[ZM�F���`D�=ޘ5�A�0�){Ce�L*�k���������5����""�A��Y�}���t��X�(�O�̓�[�{���T�V��?:�s�i���ڶ�8m��6b��d$��j}��u�D&amp;RL�[0&gt;~x�jچ7� </code></pre>  <p>When I look in the dev tools to see the DOM, the only thing in the body is a string wrapped in  tags. In the regular view that string is a json element. </p>"	"<p><code>.read()</code> should give you the same thing you see in the ""view source"" window of your browser, so something's wrong. It looks like the HTTP response might be gzipped, but <strong><a href=""https://stackoverflow.com/questions/3947120/does-python-urllib2-automatically-uncompress-gzip-data-fetched-from-webpage""><code>urllib2</code> doesn't support gzip</a></strong>. <code>urllib2</code> also doesn't request gzipped data, so if this is the problem, the server is probably misconfigured, but I'm assuming that's out of your control.</p>  <p>I suggest using <strong><a href=""http://www.python-requests.org/en/latest/"" rel=""nofollow noreferrer""><code>requests</code></a></strong> instead. <code>requests</code> <a href=""http://docs.python-requests.org/en/latest/community/faq/"" rel=""nofollow noreferrer"">automatically decompresses gzip-encoded responses</a>, so it should solve this problem for you.</p>  <pre><code>import requests r = requests.get('https://something.com/x.js') r.text   # unparsed json output, shouldn't be garbled r.json() # parses json and returns a dictionary </code></pre>  <p>In general, <code>requests</code> is much easier to use than <code>urllib2</code> so I suggest using it everywhere, unless you absolutely must stick to the standard library.</p>"
22367473	Extract javascript information from url with python	javascript|python|urllib2|urlopen	2014-03-13 01:41:58.107000 UTC	"<p>I have a URL that links to a javascript file, for example <code>http://something.com/../x.js</code>. I need to extract a variable from <code>x.js</code> </p>  <p>Is it possible to do this using python?  At the moment I am using <code>urllib2.urlopen()</code> but when I use <code>.read()</code> I get this lovely mess:</p>  <pre><code>U�(��%y�d�&lt;�!���P��&amp;Y��iX���O�������&lt;Xy�CH{]^7e� �K�\�͌h��,U(9\ni�A ��2dp}�9���t�&lt;M�M,u�N��h�bʄ�uV�\��0�A1��Q�.)�A��XNc��$""SkD�y����5�)�B�t9�):�^6��`(���d��hH=9D5wwK'�E�j%�]U~��0U�~ʻ��)�pj��aA�?;n�px`�r�/8&lt;?;�t��z�{��n��W �s�������h8����i�߸#}���}&amp;�M�K�y��h�z�6,�Xc��!:'D|�s��,�g$�Y��H�T^#`r����f����tB��7��X�%�.X\��M9V[Z�Yl�LZ[ZM�F���`D�=ޘ5�A�0�){Ce�L*�k���������5����""�A��Y�}���t��X�(�O�̓�[�{���T�V��?:�s�i���ڶ�8m��6b��d$��j}��u�D&amp;RL�[0&gt;~x�jچ7� </code></pre>  <p>When I look in the dev tools to see the DOM, the only thing in the body is a string wrapped in  tags. In the regular view that string is a json element. </p>"	"<pre><code>import json  js = urllib2.urlopen(""http://something.com/../x.js"").read() data = json.loads(js) </code></pre>"
22381084	ipython notebook requires javascript	ipython|ipython-notebook	2014-03-13 14:04:56.353000 UTC	"<p>When I start the ipython server notebook using following command:</p>  <pre><code>$ ipython notebook --profile=myserver </code></pre>  <p>I get following screen which I don't recall seeing it before. It seems like a interactive screen where I move the curse and hit enter but I am not sure what I should be doing because I haven't seen this before and did an extensive google search and unable to find any detail information on what I need to select. </p>  <pre><code>    IPython Dashboard    IPython Notebook requires JavaScript.                                                                                                                   Please enable it to proceed.                                                                                                                             IPython Notebook                                                                                                                                           * Notebooks                                                                                                                                             * Clusters                                                                                                                                             To import a notebook, drag the file onto the listing below or click here. ____________________                                                          (Submit) Refresh (Submit) New Notebook                                                                                                                    * /                                                                                                                                                     * rootHome /                                                                                                                                                * subdir /                                                                                                                                              * anotherSubdir /                                                                                                                                            IPython parallel computing clusters (Submit) Refresh                                                                                                    profile status # of engines action                                                                                                                      (Form submit button) Use right-arrow or &lt;return&gt; to submit ('x' for no cache).                                                                            Arrow keys: Up and Down to move.  Right to follow a link; Left to go back.                                                                             H)elp O)ptions P)rint G)o M)ain screen Q)uit /=search [delete]=history list    </code></pre>  <p>I don't think I want to do import option... </p>"	"<p>You are run the script in text mode. To see the browser launched, you need to run the script in GUI mode</p>"
22381084	ipython notebook requires javascript	ipython|ipython-notebook	2014-03-13 14:04:56.353000 UTC	"<p>When I start the ipython server notebook using following command:</p>  <pre><code>$ ipython notebook --profile=myserver </code></pre>  <p>I get following screen which I don't recall seeing it before. It seems like a interactive screen where I move the curse and hit enter but I am not sure what I should be doing because I haven't seen this before and did an extensive google search and unable to find any detail information on what I need to select. </p>  <pre><code>    IPython Dashboard    IPython Notebook requires JavaScript.                                                                                                                   Please enable it to proceed.                                                                                                                             IPython Notebook                                                                                                                                           * Notebooks                                                                                                                                             * Clusters                                                                                                                                             To import a notebook, drag the file onto the listing below or click here. ____________________                                                          (Submit) Refresh (Submit) New Notebook                                                                                                                    * /                                                                                                                                                     * rootHome /                                                                                                                                                * subdir /                                                                                                                                              * anotherSubdir /                                                                                                                                            IPython parallel computing clusters (Submit) Refresh                                                                                                    profile status # of engines action                                                                                                                      (Form submit button) Use right-arrow or &lt;return&gt; to submit ('x' for no cache).                                                                            Arrow keys: Up and Down to move.  Right to follow a link; Left to go back.                                                                             H)elp O)ptions P)rint G)o M)ain screen Q)uit /=search [delete]=history list    </code></pre>  <p>I don't think I want to do import option... </p>"	"<p>I ran into the same issue today. First, I disabled the browsing window, which led me to not see the javascript-related error. The notebook was still not showing in IE or Chrome at the designated local host and port combination though.</p>  <p>Revising <a href=""https://pythondata.com/jupyter-vagrant/"" rel=""nofollow noreferrer"">this post</a>, I saw that the author explicitly sets up port forwarding in their vagrant file, by changing guest=80 to guest=8888 (or, I assume, making them similar in case of another port). Doing so, followed by vagrant halt and vagrant reload resolved the issue for me. </p>"
22381084	ipython notebook requires javascript	ipython|ipython-notebook	2014-03-13 14:04:56.353000 UTC	"<p>When I start the ipython server notebook using following command:</p>  <pre><code>$ ipython notebook --profile=myserver </code></pre>  <p>I get following screen which I don't recall seeing it before. It seems like a interactive screen where I move the curse and hit enter but I am not sure what I should be doing because I haven't seen this before and did an extensive google search and unable to find any detail information on what I need to select. </p>  <pre><code>    IPython Dashboard    IPython Notebook requires JavaScript.                                                                                                                   Please enable it to proceed.                                                                                                                             IPython Notebook                                                                                                                                           * Notebooks                                                                                                                                             * Clusters                                                                                                                                             To import a notebook, drag the file onto the listing below or click here. ____________________                                                          (Submit) Refresh (Submit) New Notebook                                                                                                                    * /                                                                                                                                                     * rootHome /                                                                                                                                                * subdir /                                                                                                                                              * anotherSubdir /                                                                                                                                            IPython parallel computing clusters (Submit) Refresh                                                                                                    profile status # of engines action                                                                                                                      (Form submit button) Use right-arrow or &lt;return&gt; to submit ('x' for no cache).                                                                            Arrow keys: Up and Down to move.  Right to follow a link; Left to go back.                                                                             H)elp O)ptions P)rint G)o M)ain screen Q)uit /=search [delete]=history list    </code></pre>  <p>I don't think I want to do import option... </p>"	"<p>I also got this issue, but mine was caused more indirectly.  It was due to the <a href=""https://blog.jupyter.org/2015/04/15/the-big-split/"" rel=""nofollow noreferrer"">Big Split</a>, where IPython and Jupyter were separated.  I got the issue both when running the deprecated <code>ipython notebook --profile=my_profile</code> and when running <code>jupyter notebook --profile=my_profile</code>.</p>  <p>The problem seems to be that the first (ipython) command seems to just use the second (jupyter) newer command.  And the newer (jupyter) command doesn't load the notebook profile.  That's because jupyter, unlike ipython, does not use profiles!  My ipython profile originally included a config file which had a line to suppress launching the browser (since as others said above, I'm working in Linux so if the browser is unsuppressed, this would launch the text version of the browser), but this config file with the suppress browser line was never getting loaded (nor any of the other config settings, including the port number).</p>  <p>So the fix for me was to create a config file for jupyter, as discussed <a href=""https://stackoverflow.com/questions/32071672/where-should-i-place-my-settings-and-profiles-for-use-with-ipython-jupyter-4-0"">here</a>, like:</p>  <pre><code>jupyter notebook --generate-config </code></pre>  <p>And then to make sure that the appropriate line was updated (as mentioned in another answer above):</p>  <pre><code>c.NotebookApp.open_browser = False </code></pre>  <p>More info on migrating from ipython to jupyter can be found <a href=""http://jupyter.readthedocs.io/en/latest/migrating.html"" rel=""nofollow noreferrer"">here</a>.  It includes a command to migrate config files automatically, though that command did not seem to work for me.</p>"
22381084	ipython notebook requires javascript	ipython|ipython-notebook	2014-03-13 14:04:56.353000 UTC	"<p>When I start the ipython server notebook using following command:</p>  <pre><code>$ ipython notebook --profile=myserver </code></pre>  <p>I get following screen which I don't recall seeing it before. It seems like a interactive screen where I move the curse and hit enter but I am not sure what I should be doing because I haven't seen this before and did an extensive google search and unable to find any detail information on what I need to select. </p>  <pre><code>    IPython Dashboard    IPython Notebook requires JavaScript.                                                                                                                   Please enable it to proceed.                                                                                                                             IPython Notebook                                                                                                                                           * Notebooks                                                                                                                                             * Clusters                                                                                                                                             To import a notebook, drag the file onto the listing below or click here. ____________________                                                          (Submit) Refresh (Submit) New Notebook                                                                                                                    * /                                                                                                                                                     * rootHome /                                                                                                                                                * subdir /                                                                                                                                              * anotherSubdir /                                                                                                                                            IPython parallel computing clusters (Submit) Refresh                                                                                                    profile status # of engines action                                                                                                                      (Form submit button) Use right-arrow or &lt;return&gt; to submit ('x' for no cache).                                                                            Arrow keys: Up and Down to move.  Right to follow a link; Left to go back.                                                                             H)elp O)ptions P)rint G)o M)ain screen Q)uit /=search [delete]=history list    </code></pre>  <p>I don't think I want to do import option... </p>"	"<p>Sometimes if you get the problem IPython Notebook requires JavaScript ..."" in your browser, you just need to enable JavaScript in Google Chrome. Here is how to do it: <a href=""https://www.youtube.com/watch?v=Ooyw0EzZIfk"" rel=""nofollow noreferrer"">https://www.youtube.com/watch?v=Ooyw0EzZIfk</a></p>"
22381084	ipython notebook requires javascript	ipython|ipython-notebook	2014-03-13 14:04:56.353000 UTC	"<p>When I start the ipython server notebook using following command:</p>  <pre><code>$ ipython notebook --profile=myserver </code></pre>  <p>I get following screen which I don't recall seeing it before. It seems like a interactive screen where I move the curse and hit enter but I am not sure what I should be doing because I haven't seen this before and did an extensive google search and unable to find any detail information on what I need to select. </p>  <pre><code>    IPython Dashboard    IPython Notebook requires JavaScript.                                                                                                                   Please enable it to proceed.                                                                                                                             IPython Notebook                                                                                                                                           * Notebooks                                                                                                                                             * Clusters                                                                                                                                             To import a notebook, drag the file onto the listing below or click here. ____________________                                                          (Submit) Refresh (Submit) New Notebook                                                                                                                    * /                                                                                                                                                     * rootHome /                                                                                                                                                * subdir /                                                                                                                                              * anotherSubdir /                                                                                                                                            IPython parallel computing clusters (Submit) Refresh                                                                                                    profile status # of engines action                                                                                                                      (Form submit button) Use right-arrow or &lt;return&gt; to submit ('x' for no cache).                                                                            Arrow keys: Up and Down to move.  Right to follow a link; Left to go back.                                                                             H)elp O)ptions P)rint G)o M)ain screen Q)uit /=search [delete]=history list    </code></pre>  <p>I don't think I want to do import option... </p>"	"<p>I got the same message <strong>""IPython Notebook requires JavaScript ...""</strong> after performing the recommended modifications (<a href=""http://ipython.org/ipython-doc/3/notebook/public_server.html"" rel=""nofollow"">Running a notebook server</a>) in the <code>ipython_notebook_config.py</code> file. The problem was that I modified the <code>ipython_notebook_config.py</code> file in the <strong>default</strong> profile (<code>/.ipython/profile_default/</code>), instead of the one in the <strong>nbserver</strong> profile (<code>/.ipython/profile_nbserver/</code>). As a result, <code>ipython notebook --profile=nbserver</code> was not loading the right configuration... </p>"
22381084	ipython notebook requires javascript	ipython|ipython-notebook	2014-03-13 14:04:56.353000 UTC	"<p>When I start the ipython server notebook using following command:</p>  <pre><code>$ ipython notebook --profile=myserver </code></pre>  <p>I get following screen which I don't recall seeing it before. It seems like a interactive screen where I move the curse and hit enter but I am not sure what I should be doing because I haven't seen this before and did an extensive google search and unable to find any detail information on what I need to select. </p>  <pre><code>    IPython Dashboard    IPython Notebook requires JavaScript.                                                                                                                   Please enable it to proceed.                                                                                                                             IPython Notebook                                                                                                                                           * Notebooks                                                                                                                                             * Clusters                                                                                                                                             To import a notebook, drag the file onto the listing below or click here. ____________________                                                          (Submit) Refresh (Submit) New Notebook                                                                                                                    * /                                                                                                                                                     * rootHome /                                                                                                                                                * subdir /                                                                                                                                              * anotherSubdir /                                                                                                                                            IPython parallel computing clusters (Submit) Refresh                                                                                                    profile status # of engines action                                                                                                                      (Form submit button) Use right-arrow or &lt;return&gt; to submit ('x' for no cache).                                                                            Arrow keys: Up and Down to move.  Right to follow a link; Left to go back.                                                                             H)elp O)ptions P)rint G)o M)ain screen Q)uit /=search [delete]=history list    </code></pre>  <p>I don't think I want to do import option... </p>"	"<p>As explained here: <a href=""http://www.hydro.washington.edu/~jhamman/hydro-logic/blog/2013/10/04/pybook-remote/"" rel=""noreferrer"">http://www.hydro.washington.edu/~jhamman/hydro-logic/blog/2013/10/04/pybook-remote/</a> launch with the --no-browser parameter like:</p>  <pre><code>ipython notebook --no-browser </code></pre>"
22381084	ipython notebook requires javascript	ipython|ipython-notebook	2014-03-13 14:04:56.353000 UTC	"<p>When I start the ipython server notebook using following command:</p>  <pre><code>$ ipython notebook --profile=myserver </code></pre>  <p>I get following screen which I don't recall seeing it before. It seems like a interactive screen where I move the curse and hit enter but I am not sure what I should be doing because I haven't seen this before and did an extensive google search and unable to find any detail information on what I need to select. </p>  <pre><code>    IPython Dashboard    IPython Notebook requires JavaScript.                                                                                                                   Please enable it to proceed.                                                                                                                             IPython Notebook                                                                                                                                           * Notebooks                                                                                                                                             * Clusters                                                                                                                                             To import a notebook, drag the file onto the listing below or click here. ____________________                                                          (Submit) Refresh (Submit) New Notebook                                                                                                                    * /                                                                                                                                                     * rootHome /                                                                                                                                                * subdir /                                                                                                                                              * anotherSubdir /                                                                                                                                            IPython parallel computing clusters (Submit) Refresh                                                                                                    profile status # of engines action                                                                                                                      (Form submit button) Use right-arrow or &lt;return&gt; to submit ('x' for no cache).                                                                            Arrow keys: Up and Down to move.  Right to follow a link; Left to go back.                                                                             H)elp O)ptions P)rint G)o M)ain screen Q)uit /=search [delete]=history list    </code></pre>  <p>I don't think I want to do import option... </p>"	"<p>This is what happens if e.g. your config file (ipython_notebook_config.py) is missing following entry:</p>  <pre><code>c = get_config() c.NotebookApp.open_browser = False other options... </code></pre>  <p>NotebookApp.open_browser defaults to True, which is why it tries to open a browser. Since I guess you are doing this in a terminal that has a text browser, it will not start javascript. Make sure that open_browser is set to False. Since it was working in the past, perhaps then somehow your config file got overridden? </p>  <p>If it is not the case, more details would be welcomed - your config file for instance.</p>"
22404358	How to transfer html view data or (Python) server data to Angular or Javascript?	javascript|python|angularjs|google-app-engine|jinja2	2014-03-14 11:58:00.050000 UTC	"<p>I am programming a small web app on GAE using python webapp2 framework.</p>  <p>What I want to achieve is displaying server data to the html view through javascript or angularjs. Actually the app draws some graph using d3.js based on the server data. I know I can use $http.get to retrieve the data from server. But this way I need to create another page or handler. I am wondering if there is some way which I can do the below actions.</p>  <ol> <li>On the server python handler, retrieve the stored data, then passing to the jinja2 template values. Render the html.</li> <li>Display some of the data on the html view via jinja2 template values. </li> <li><p>(The missing part) How to pass the data to js from the python handler? Or how to pass the data to js from html view? I know two ways from the html view. One is using embedded javascript code.</p>  <p> var data = {{serverData}}; </p></li> </ol>  <p>The other is using hidden input form with angular data bind. Both of them not so nicely. </p>  <p>4.Compute the data and draw back to the view using d3js or other js lib.</p>  <p>Any idea about this? I reckon there might be some angular way to do this beautifully but didnt figure out.  </p>"	"<p>Jinja2 has a suggestion for this, and it is to pass the object into the context when the template is built. I'm not sure why you think this is ugly, or at least any uglier than using Jinja2 to template only HTML. Here is their suggestion (see <a href=""http://flask.pocoo.org/docs/templating/"" rel=""nofollow"">http://flask.pocoo.org/docs/templating/</a>):</p>  <pre><code>&lt;script type=text/javascript&gt;     doSomethingWith({{ user.username|tojson|safe }}); &lt;/script&gt; </code></pre>  <p>As others have suggested, you could use a RESTful service if you'd like, but without knowing more about your application, I'm not convinced that would make your code any cleaner. In my experience, embedding some data in the initial page load is a fairly common practice, and can simplify the rest of your application. No need to handle client async loading if you already have that data on the server on initial page load, and it doesn't slow down the initial request.</p>"
22404358	How to transfer html view data or (Python) server data to Angular or Javascript?	javascript|python|angularjs|google-app-engine|jinja2	2014-03-14 11:58:00.050000 UTC	"<p>I am programming a small web app on GAE using python webapp2 framework.</p>  <p>What I want to achieve is displaying server data to the html view through javascript or angularjs. Actually the app draws some graph using d3.js based on the server data. I know I can use $http.get to retrieve the data from server. But this way I need to create another page or handler. I am wondering if there is some way which I can do the below actions.</p>  <ol> <li>On the server python handler, retrieve the stored data, then passing to the jinja2 template values. Render the html.</li> <li>Display some of the data on the html view via jinja2 template values. </li> <li><p>(The missing part) How to pass the data to js from the python handler? Or how to pass the data to js from html view? I know two ways from the html view. One is using embedded javascript code.</p>  <p> var data = {{serverData}}; </p></li> </ol>  <p>The other is using hidden input form with angular data bind. Both of them not so nicely. </p>  <p>4.Compute the data and draw back to the view using d3js or other js lib.</p>  <p>Any idea about this? I reckon there might be some angular way to do this beautifully but didnt figure out.  </p>"	"<p>Since you are already going to build an Angular app for the front-end, why not make the whole architecture RESTful? That way the front-end Angular app will be in charge of presentation and the server of just the data. You can pass data between the server and front-end through JSON which has the benefit of not needing to deal with html or templates in the back end? Angular already has Service and $http that can abstract away the two-way data binding, and using webapp2's RESTful nature you can make this happen fairly painlessly.</p>"
22405438	In Python3 how to send jsonp to javascript	javascript|python|json|mongodb|tornado	2014-03-14 12:47:14.903000 UTC	"<p>on this case I am using Tornado web<br> I just want to use some simple method to send json data from mongodb to javascript.  and I just check some example on internet. I so confused  finally I got result , Python 2 network allow you send message by string  Python 3 must be byte </p>  <p>actually this original code from internet but write by python 2 , can't running on  python3 </p>  <pre><code>from tornado.web import RequestHandler  # this Tornado standard   class JSONPHandler(RequestHandler):     CALLBACK = 'jsonp' # define callback argument name &lt;== this Javascript send to python callback name, java script send msg look like ?jsonp=?  check it      def finish(self, chunk=None):         assert not self._finished         if chunk: self.write(chunk)         # get client callback method          print(type(self.CALLBACK)) &lt;==show string class           callbacka = self.get_argument(self.CALLBACK)         callback=bytes(callbacka+'(','utf-8') &lt;== from this part to  new          # format output with jsonp         self._write_buffer.insert(0,callback ) &lt;== write some json head          self._write_buffer.append(bytes(')','utf-8'))  &lt;== all msg must be bytes          super(JSONPHandler, self).finish()  &lt;== must do finished step          # chunk must be None </code></pre>"	"<p>RequestHandler.write() and RequestHandler.finish() will convert the input to utf8 bytes for you. First, open the ""mongo"" shell and do:</p>  <pre><code>&gt; use test switched to db test &gt; db.collection.insert({key: 'value'}) &gt; db.collection.find() { ""_id"" : ObjectId(""53232a5c8d12c74bb1a30bc1""), ""key"" : ""value"" } </code></pre>  <p>Note the ObjectId generated here. Here's a code example using JSONP and PyMongo:</p>  <pre><code>import bson.json_util import pymongo from bson import ObjectId from tornado.ioloop import IOLoop from tornado.web import RequestHandler, HTTPError, Application  db = pymongo.MongoClient().test   class JSONPHandler(RequestHandler):     def get(self):         jsonp_callback_name = self.get_argument('jsonp')         oid = self.get_argument('id')         doc = db.collection.find_one(ObjectId(oid))         if not doc:             raise HTTPError(404)          # bson.json_util handles nonstandard types like ObjectId.         self.finish('%s(%s)' % (             jsonp_callback_name,             bson.json_util.dumps(doc)))  application = Application(     [('/api', JSONPHandler)] )  if __name__ == '__main__':     application.listen(8888)     IOLoop.current().start() </code></pre>  <p>Now visit this URL, using the ObjectId generated from the ""mongo"" shell:</p>  <pre><code>http://localhost:8888/api?jsonp=mycallback&amp;id=53232a5c8d12c74bb1a30bc1 </code></pre>  <p>You should see output like so in your browser:</p>  <pre><code>mycallback({""_id"": {""$oid"": ""53232a5c8d12c74bb1a30bc1""}, ""key"": ""value""}) </code></pre>"
22407628	How do I fill a form in a web site that calls javascript code and retrieve the results from a different frame using python?	javascript|python|forms|web	2014-03-14 14:20:45.227000 UTC	"<p>I'm going to have to code a program in python that retrieves results after filling a web form (which in turn calls different javascript functions), and those results appear in a different frame of the website. I considered using the Selenium web engine, but I was wondering if anyone has any better idea?</p>  <p>Thank you</p>  <p>Daniel</p>"	"<p>Yea. Reverse engineer the javascript using the chrome/firefox console, see what request it makes and mimic them in python using urllib2 or the requests library.</p>"
22414870	Object vs Arrays in Javascript is as Python's Dictionaries vs Lists?	javascript|python|performance	2014-03-14 20:13:10.993000 UTC	<p>I know in python I can use lists in order to make fast sortings and dictionaries in order to search things faster (because immutable objects can be hashed). Is that the same for javascript too? I haven't seen anything about the performance of datatypes in javascript after much search.</p>	"<p>Yes. ""Object vs Arrays in Javascript is as Python's Dictionaries vs Lists"". Performance pros and cons are also the same. With lists being more efficient if numeric indexes are appropriate to the task and dictionaries being more efficient for long lists that must be accessed by a string.</p>  <pre><code>var dict = {}; dict['apple'] = ""a sweet edible fruit""; dict['boy'] = ""a young male human"";  var list = []; list.push(""apples""); list.push(""oranges""); list.push(""pears""); </code></pre>"
22414870	Object vs Arrays in Javascript is as Python's Dictionaries vs Lists?	javascript|python|performance	2014-03-14 20:13:10.993000 UTC	<p>I know in python I can use lists in order to make fast sortings and dictionaries in order to search things faster (because immutable objects can be hashed). Is that the same for javascript too? I haven't seen anything about the performance of datatypes in javascript after much search.</p>	"<p>I have been looking for some bibliography and other sources that could answer this question. I Know that this isn't the best answer, but let me try an answer that involve some concepts that lend us to discuss this topic.</p>  <h1>Javascript and inheritance</h1>  <p>Although the it could suggest that arrays and objects in javascript are like lists and dictionaries, they are different because each language are written in different ways, with different underlying philosophies, concepts and purposes.</p>  <p>In the case of Javascript, it seems that both Arryas and Objects are more like hash tables. Contrary to the intuition, Arrays are just an other type of built in object of javascript. In fact, as they say in the <a href=""https://www.ecma-international.org/ecma-262/10.0/index.html#sec-object-type"" rel=""nofollow noreferrer"">ECMAScript Specification 6.1.7</a></p>  <blockquote>   <h3>The Object Type</h3>      <p>An Object is logically a collection of properties. Each property is   either a data property, or an accessor property:</p>      <p>A data property associates a key value with an ECMAScript language   value and a set of Boolean attributes. An accessor property associates   a key value with one or two accessor functions, and a set of Boolean   attributes. The accessor functions are used to store or retrieve an   ECMAScript language value that is associated with the property.   Properties are identified using key values. A property key value is   either an ECMAScript String value or a Symbol value. All String and   Symbol values, including the empty string, are valid as property keys.   A property name is a property key that is a String value.</p>      <p>An integer index is a String-valued property key that is a canonical   numeric String (see 7.1.16) and whose numeric value is either +0 or a   positive integer ≤ 253 - 1. An array index is an integer index whose   numeric value i is in the range +0 ≤ i &lt; 232 - 1.</p>      <p>Property keys are used to access properties and their values. There   are two kinds of access for properties: get and set, corresponding to   value retrieval and assignment, respectively. The properties   accessible via get and set access includes both own properties that   are a direct part of an object and inherited properties which are   provided by another associated object via a property inheritance   relationship. Inherited properties may be either own or inherited   properties of the associated object. Each own property of an object   must each have a key value that is distinct from the key values of the   other own properties of that object.</p> </blockquote>  <p>And,<a href=""https://www.ecma-international.org/ecma-262/10.0/index.html#sec-array-objects"" rel=""nofollow noreferrer"">about the arrays</a>, it specifies:</p>  <blockquote>   <h3>22.1Array Objects</h3>      <p>Array objects are exotic objects that give special treatment to a certain class of property names.</p> </blockquote>  <p>Following the logic above, and as it says in the specification, the language was thinked in such way that all types in javascript extends a global object, and then new methods and properties are added to have differents behaivors.</p>  <h2>Memory Management</h2>  <p>There are a gap between the language specifications and how they must be implemented in an actual runtime enviroment. Altought each implementation has its own logics, it seems that most of them has similarities.</p>  <p>As <a href=""https://blog.sessionstack.com/how-javascript-works-inside-the-v8-engine-5-tips-on-how-to-write-optimized-code-ac089e62b12e"" rel=""nofollow noreferrer"">This Article Explains</a>:</p>  <blockquote>   <p>Most JavaScript interpreters use dictionary-like structures (hash   function based) to store the location of object property values in the   memory. This structure makes retrieving the value of a property in   JavaScript more computationally expensive than it would be in a   non-dynamic programming language like Java or C#. In Java, all of the   object properties are determined by a fixed object layout before   compilation and cannot be dynamically added or removed at runtime   (well, C# has the dynamic type which is another topic). As a result,   the values of properties (or pointers to those properties) can be   stored as a continuous buffer in the memory with a fixed-offset   between each. The length of an offset can easily be determined based   on the property type, whereas this is not possible in JavaScript where   a property type can change during runtime.</p> </blockquote>  <p>As this make javascript kind of ineffitient, the engineers had to came with some clever workarounds in order to solve this problem. Following <a href=""https://mathiasbynens.be/notes/shapes-ics"" rel=""nofollow noreferrer"">this other article</a>:</p>  <blockquote>   <p>If you access a property, e.g. object.y, the JavaScript engine looks   in the JSObject for the key 'y', then loads the corresponding property   attributes, and finally returns the [[Value]].</p>      <p>But where are these property attributes stored in memory? Should we   store them as part of the JSObject? If we assume that we’ll be seeing   more objects with this shape later, then it’s wasteful to store the   full dictionary containing the property names and attributes on the   JSObject itself, as the property names are repeated for all objects   with the same shape. That’s a lot of duplication and unnecessarily   memory usage. As an optimization, engines store the Shape of the   object separately.</p>      <p>This Shape contains all the property names and the attributes, except   for their [[Value]]s. Instead the Shape contains the offset of the   values inside of the JSObject, so that the JavaScript engine knows   where to find the values. Every JSObject with this same shape points   to exactly this Shape instance. Now every JSObject only has to store   the values that are unique to this object.</p>      <p>The benefit becomes clear when we have multiple objects. No matter how   many objects there are, as long as they have the same shape, we only   have to store the shape and property information once!</p>      <p>All JavaScript engines use shapes as an optimization, but they don’t   all call them shapes:</p>      <ul>   <li>Academic papers call them Hidden Classes (confusing w.r.t. JavaScript classes)</li>   <li>V8 calls them Maps (confusing w.r.t. JavaScript Maps)</li>   <li>Chakra calls them Types (confusing w.r.t. JavaScript’s dynamic types and typeof)</li>   <li>JavaScriptCore calls them Structures   *SpiderMonkey calls them Shapes</li>   </ul> </blockquote>  <h1>Python</h1>  <h2>Arrays</h2>  <p>Python uses a different aproach for the implementation of lists, it seems that lists are more like some dynamics arrays than an actual array that you could find in C, But they are sill are focussed on saving spaces of time and complexity in a runtime. <a href=""http://effbot.org/pyfaq/how-are-lists-implemented.htm"" rel=""nofollow noreferrer"">As this FAQ cited form the PyDocs says</a>:</p>  <blockquote>   <p>Python’s list objects are really variable-length arrays, not   Lisp-style linked lists. The implementation uses a contiguous array of   references to other objects, and keeps a pointer to this array and the   array’s length in a list head structure.</p>      <p>This makes indexing a list (L[i]) an operation whose cost is   independent of the size of the list or the value of the index.</p>      <p>When items are appended or inserted, the array of references is   resized. Some cleverness is applied to improve the performance of   appending items repeatedly; when the array must be grown, some extra   space is allocated so the next few times don’t require an actual   resize.</p> </blockquote>  <p>Like javascript, Python's lists are not required to be homogeneous, so they are not an actual implementation of other ""strong typed"" data structures that does have to contain only the same entities such as integers, strings, etc.</p>  <p>Same as javascript, the specifications of the language the actual implementation are two separate things. Depending on if you are using Cpython, Jython, IronPython, etc, the memory management and the actual functions that runs behind the scenes will be making diferent things in the process of interpreting python to machine code.</p>  <p>I know that this isnt the best source, but <a href=""https://www.quora.com/How-are-Python-lists-implemented-internally"" rel=""nofollow noreferrer"">as I found discussed in Quora</a>:</p>  <blockquote>   <p>Contrary to what their name implies, Python lists are actually arrays(...).   Specifically, they are dynamic arrays with exponential   over-allocation, which allows code like the following to have linear   complexity:</p>  <pre><code>lst = [] for i in xrange(0, 100000):     lst.append(i) </code></pre>      <p>Alternative implementations like Jython and IronPython seem to use   whatever native dynamic array class their underlying language   (respectively Java and C#) provides, so they have the same performance   characteristics (the precise underlying classes seem to be ArrayList   for Jython and C# List for IronPython).</p>      <p>(...)arrays technically store pointers rather than the objects   themselves, which allows the array to contain only elements of a   specific size. Having pointers all over the place in the underlying   implementation is a common feature of dynamically typed languages, and   in fact of any language that tries to pretend it doesn't have   pointers.</p> </blockquote>  <h2>Dictionaries</h2>  <p>As the official docs puts in their <a href=""https://docs.python.org/2/faq/design.html#how-are-dictionaries-implemented-in-cpython"" rel=""nofollow noreferrer"">""History and Design FAQ""</a></p>  <blockquote>   <p>CPython’s dictionaries are implemented as resizable hash tables.   Compared to B-trees, this gives better performance for lookup (the   most common operation by far) under most circumstances, and the   implementation is simpler.</p>      <p>Dictionaries work by computing a hash code for each key stored in the   dictionary using the hash() built-in function. The hash code varies   widely depending on the key; for example, “Python” hashes to   -539294296 while “python”, a string that differs by a single bit, hashes to 1142331976. The hash code is then used to calculate a   location in an internal array where the value will be stored. Assuming   that you’re storing keys that all have different hash values, this   means that dictionaries take constant time – O(1), in computer science   notation – to retrieve a key. It also means that no sorted order of   the keys is maintained, and traversing the array as the .keys() and   .items() do will output the dictionary’s content in some arbitrary   jumbled order.</p> </blockquote>  <h1>In Conclution</h1>  <p>There are two separate things about a language: one involves how it should work, with it syntax, semantics, logic and philosophy. On the other hand you have the actual implementation of that language in a specific runtime, interpreter or compilation. This way, although (in theory) you have one Python or one Javascript, you could have CPython, IronPython Jython, etc; and in the other hand, you have SpiderMonkey, V8, etc.</p>  <p>But referring to how each runtime implements the language features of Arrays/Lists and Objects/Dictionaries and how analogous they are, it seems that Javascript has chosen a inheritance model based on prototypes that makes everithing a kind of object; so both Objects and Dictionaries are more like a hash table than an actual array. On the other hand, Python has a more flavores in respect of data structures, both in their libraries and in how the interpreters deal with them, making use of arrays or dynamic arrays to bring to life the Pyton's Lists, and using hash tables for the dictionaries, making them more similar to the objects in javascript.</p>"
22428476	Send data from Python to Javascript via network connection	javascript|python|sockets|networking|websocket	2014-03-15 19:13:14.747000 UTC	"<p>This is more a general question, I'm not asking for implementation details.</p>  <p>I have a Python script running on a machine which monitors an experiment and gathers live data from it. I want to visualise the data on a website and decided to go with <a href=""https://stackoverflow.com/tags/d3.js/info"">d3.js</a></p>  <p>My current setup however is absolutely basic:</p>  <ul> <li>The python script is running in an endless loop and appends new data to a text-file (<code>CSV</code> file).</li> <li>There is an <code>HTML</code>-page on the web server with a javascript, which grabs the file and creates a graph using <code>d3.js</code>.</li> </ul>  <p>I already thought about replacing the text-file with a <code>sqlite</code> database, but I'm sure there is a more sophisticated and easy way to do it via network. So I am looking for a more solid solution and searched the web for different kind of strategies but most of those involve bigger libraries (<code>Tornado</code>, <code>node.js</code> etc.).</p>  <p>I would be happy with quite basic socket-like solution and tried to figure out how it would work with <code>WebSockets</code> but not sure how to handle this.</p>  <p>So my question is, what kind of design would you recommend or use if your only goal is to have a Javascript running in a browser and waiting/listening for data (let's say every few seconds a <code>float</code>), which is sent from a Python script?</p>"	
22436366	The python bot that executes google analytics javascript	javascript|python|web|google-analytics|bots	2014-03-16 11:41:00.597000 UTC	"<p>I'm, trying to create some python bot wich can execute google analytics script to cheat visits on my site.  It's only for education and more can not be used.</p>  <p>So here is my code:</p>  <pre><code>import urllib import mechanize import socks import socket import time import threading from bs4 import BeautifulSoup  # make it like a browser br = mechanize.Browser() br.set_handle_robots(False) br.addheaders = [('User-agent','chrome')]  # use proxies ... socks.setdefaultproxy(socks.PROXY_TYPE_SOCKS5, ""...."", ..., True) socket.socket =  socks.socksocket  # queries   queryip = ""http://whatismyip...com/"" query = ""http://www.example...com/""  # visits counter   global visitscounter visitscounter = 0  # main function  def main():     htmltextip = br.open(queryip).read()     htmltext = br.open(query).read()      #prints     print (htmltextip)     print (htmltext)     #counter +1     global visitscounter     print 'Visits: ',visitscounter     visitscounter = visitscounter +1      # do something here ...     # call main() again in 60 seconds     threading.Timer(60, main).start()  if __name__ == ""__main__"":     main() </code></pre>  <p>It works but google analytics does not count this visits. Any ideas? </p>  <p>Here is example of google analytics code:</p>  <pre><code>&lt;script&gt;   (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){   (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),   m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)   })(window,document,'script','//www.google-analytics.com/analytics.js','ga');    ga('create', 'UA-....-1', 'example.com');   ga('send', 'pageview');  &lt;/script&gt; </code></pre>  <p>The javascript code you can see here <a href=""http://google-analytics.com/analytics.js"" rel=""nofollow"">http://google-analytics.com/analytics.js</a></p>  <p>And make it beautiful here <a href=""http://jsbeautifier.org/"" rel=""nofollow"">http://jsbeautifier.org/</a></p>"	
22471289	Javascript-like setInterval/clearInterval for Python	javascript|python|multithreading|python-3.x	2014-03-18 05:43:52.780000 UTC	"<p>I'm trying to create a JavaScript-like setInterval function in python, but I'm stumped now on how to make a similar clearInterval.</p>  <pre><code> def setInterval(func, sec):      def inner_function():          func() # call on it          setInterval(func, sec) # do the same function over and over again      thread = threading.Timer(sec, inner_function) # have it call inner ever x seconds      thread.setDaemon(True)       thread.start()      return thread  def clearInterval(interval):     interval.cancel()     return True </code></pre>  <p>So at first I thought this should work</p>  <pre><code>interval = setInterval(lambda: print(""Hello, World!""), 3) # prints 'Hello, World!' every three seconds. # some time later clearInterval(interval) </code></pre>  <p>Trying to clear the interval did not work though. It makes a clone thread that keeps executing the <code>func</code> </p>  <p>Is there a way to restart a thread in python? If there is not a way does anyone know how to do the above, only have it actually be able to use <code>clearInterval</code> and it will stop entirely? </p>"	
22486084	Google app engine: getting javascript variable(client side) to python string(server side)	javascript|jquery|python|google-app-engine	2014-03-18 16:59:58.567000 UTC	"<p>1)i have printed links after processing on the screen as follows- <br> </p>  <pre><code>for i in index:    self.response.out.write('&lt;a id=""w3s"" href=""' + i + '""&gt;' +i+' class=""testClick"" &lt;/a&gt;&lt;br&gt;') </code></pre>  <p>where <strong>index</strong> is list of processed urls. The url where results are displayed is like mysite.com/sign</p>  <p>2)i want to get which link user clicked. This is what i tried to do-</p>  <pre><code>&lt;script&gt; var addressValue; $(document).ready(function(){   $(""a"").click(function(){     addressValue = $(this).attr(""href"");   });     }); &lt;/script&gt; </code></pre>  <p>I have got the clicked url in <strong>addressValue</strong> variable but what should i do next. I could not get how to use GET or POST methods to get the variable server side; and then how to get the string in my python variable.</p>  <p>Using GET/POST:(Not Working) </p>  <pre><code>&lt;script&gt;  var addressValue;  $(document).ready(function(){   $(""a"").click(function(){     addressValue = $(this).attr(""href"");  //Method-I     $.post(""https://mysite.com/sign"",     {         fooParameter: addressValue,     },     function(data,status){         alert(""Data: "" + data + ""\nStatus: "" + status);     });   });     });   //Method-II $.ajax({     url: ""https://mysite.com/sign"",     method: ""POST"",     data: {fooParameter: addressValue}, });  &lt;/script&gt; </code></pre>  <p>And then accessing variable in python string through following command </p>  <pre><code>selectedlink=self.request.get('fooParameter') </code></pre>  <p>Where am i mistaking or is there any other way?  Note: I am using Google App engine</p>"	"<p>There is another solution, which does not need javascript. Create a link to your own handler, which redirects to the query string.</p>  <p>Example:</p>  <pre><code>&lt;a target=""_blank"" href=""/redir_url?http://www.example.com/address.html""&gt;Example address&lt;/a&gt; </code></pre>  <p>The Handler:</p>  <pre><code>class RedirUrl(webapp2.RequestHandler):      def get(self):          url = self.request.query_string         logging.info('user clicked ' + url)         self.redirect(url)         </code></pre>"
22492432	Python+django - some problems with using css javascript and images	python|mysql|django	2014-03-18 22:31:24.690000 UTC	"<p>When I enter to my site, css javascript and images doesn't works. And when i try enter like administrator (http:/mysite/admin) I have error ""Site matching query does not exist"". It happens after transition from SQLite and Python 3.3 to MySQL and Python 2.7. error code:</p>  <pre><code>Validating models...  0 errors found March 18, 2014 - 23:54:12 Django version 1.6.2, using settings 'payforward.settings' Starting development server at http://127.0.0.1:8000/ Quit the server with CTRL-BREAK. [18/Mar/2014 23:54:28] ""GET / HTTP/1.1"" 200 6375 [18/Mar/2014 23:54:40] ""GET /media/css/reset.css HTTP/1.1"" 500 79587 Traceback (most recent call last):   File ""C:\Python27\lib\wsgiref\handlers.py"", line 86, in run     self.finish_response()   File ""C:\Python27\lib\wsgiref\handlers.py"", line 128, in finish_response     self.write(data)   File ""C:\Python27\lib\wsgiref\handlers.py"", line 217, in write     self._write(data)   File ""C:\Python27\lib\socket.py"", line 324, in write     self.flush()   File ""C:\Python27\lib\socket.py"", line 303, in flush     self._sock.sendall(view[write_offset:write_offset+buffer_size]) error: [Errno 10053] ��������� �� ����� ����- [18/Mar/2014 23:54:40] ""GET /media/css/reset.css HTTP/1.1"" 500 59 ---------------------------------------- Exception happened during processing of request from ('127.0.0.1', 52926) Traceback (most recent call last):   File ""C:\Python27\lib\SocketServer.py"", line 593, in process_request_thread     self.finish_request(request, client_address)   File ""C:\Python27\lib\SocketServer.py"", line 334, in finish_request     self.RequestHandlerClass(request, client_address, self)   File ""C:\Python27\lib\site-packages\django\core\servers\basehttp.py"", line 126, in __init__     super(WSGIRequestHandler, self).__init__(*args, **kwargs)   File ""C:\Python27\lib\SocketServer.py"", line 651, in __init__     self.finish()   File ""C:\Python27\lib\SocketServer.py"", line 710, in finish     self.wfile.close()   File ""C:\Python27\lib\socket.py"", line 279, in close     self.flush()   File ""C:\Python27\lib\socket.py"", line 303, in flush     self._sock.sendall(view[write_offset:write_offset+buffer_size]) error: [Errno 10053] ��������� �� ����� ����- --------------------------------------------------------------------------------     [18/Mar/2014 23:54:40] ""GET /media/css/jquery-ui-1.10.3.custom.min.css HTTP/1.1"" 500 79984 Traceback (most recent call last):   File ""C:\Python27\lib\wsgiref\handlers.py"", line 86, in run     self.finish_response()   File ""C:\Python27\lib\wsgiref\handlers.py"", line 128, in finish_response     self.write(data)   File ""C:\Python27\lib\wsgiref\handlers.py"", line 217, in write     self._write(data)   File ""C:\Python27\lib\socket.py"", line 324, in write     self.flush()   File ""C:\Python27\lib\socket.py"", line 303, in flush     self._sock.sendall(view[write_offset:write_offset+buffer_size]) error: [Errno 10054]  [18/Mar/2014 23:54:40] ""GET /media/css/jquery-ui-1.10.3.custom.min.css HTTP/1.1"" 500 59 Traceback (most recent call last):   File ""C:\Python27\lib\SocketServer.py"", line 593, in process_request_thread     self.finish_request(request, client_address) ----------------------------------------   File ""C:\Python27\lib\SocketServer.py"", line 334, in finish_request Exception happened during processing of request from ('127.0.0.1', 52930)     self.RequestHandlerClass(request, client_address, self)   File ""C:\Python27\lib\site-packages\django\core\servers\basehttp.py"", line 126, in __init__     super(WSGIRequestHandler, self).__init__(*args, **kwargs)   File ""C:\Python27\lib\SocketServer.py"", line 651, in __init__     self.finish()   File ""C:\Python27\lib\SocketServer.py"", line 710, in finish     self.wfile.close()   File ""C:\Python27\lib\socket.py"", line 279, in close ----------------------------------------     self.flush()   File ""C:\Python27\lib\socket.py"", line 303, in flush     self._sock.sendall(view[write_offset:write_offset+buffer_size]) error: [Errno 10054]  [18/Mar/2014 23:54:40] ""GET /media/css/slider.css HTTP/1.1"" 500 79604 [18/Mar/2014 23:54:40] ""GET /media/js/index.js HTTP/1.1"" 500 79506 [18/Mar/2014 23:54:51] ""GET /media/images/logo.png HTTP/1.1"" 500 79626 </code></pre>  <p>What it can be? Help me please! </p>"	<p>Try install django on Python 3 and do all staff step by step</p>
22513640	How do i interpret inline javascript code in python on GAE?	javascript|python|google-app-engine	2014-03-19 17:28:13.750000 UTC	"<p>I'm in use python based on GAE (Google App Engine) and want to interpret inline javascript code.</p>  <p>like as a SpiderMonkey(<a href=""https://code.google.com/p/python-spidermonkey"" rel=""nofollow"">https://code.google.com/p/python-spidermonkey</a>),</p>  <blockquote>   <p>from spidermonkey import Runtime<br />   rt = Runtime()<br />   cx = rt.new_context()   cx.eval_script(""1 + 2"") + 3</p>      <p>class Foo:</p>      <blockquote>     <p>def hello(self):<br />     print ""Hello, Javascript world!""</p>   </blockquote>      <p>cx.bind_class(Foo, bind_constructor=True)<br />   cx.eval_script(""var f = new Foo(); f.hello();"")<br /><br />   f = cx.eval_script(""f;"")<br />   f.hello()</p>      <p># Hello, Javascript world!</p> </blockquote>  <p>how can i do it? or Is it possible to install a spidermonkey on GAE?</p>  <p>Thanks in advice!</p>"	"<p>You can't use it in appengine.  If you look at the installation docs it says</p>  <p>""At present, you'll need a C compiler on your system to install this extension, as well as the Pyrex package.""</p>  <p>This sort of thing is not supported on appengine in the python SDK.  It can only have dependencies on supported 3rd party libraries and pure python code that you supply.  </p>  <p>Have a read of the python runtime on appengine docs</p>  <p><a href=""https://developers.google.com/appengine/docs/python/#Python_The_sandbox"" rel=""nofollow"">https://developers.google.com/appengine/docs/python/#Python_The_sandbox</a></p>  <p>and the 3rd party libs docs </p>  <p><a href=""https://developers.google.com/appengine/docs/python/tools/libraries27"" rel=""nofollow"">https://developers.google.com/appengine/docs/python/tools/libraries27</a></p>  <p>Oh and this sort of question has been asked hundreds of times here.  Whilst not specific to the library in question SpiderMonkey, all ask the same thing, so some searching in SO might save you some time.</p>"
22526154	"objective-c selector, do other languages such as c++, python, ruby, java, javascript have similar thing?"	java|python|c++|objective-c|ruby	2014-03-20 07:26:05.347000 UTC	"<pre><code>// main.m #import &lt;Foundation/Foundation.h&gt; #import ""Car.h""  int main(int argc, const char * argv[]) {  @autoreleasepool {     Car *porsche = [[Car alloc] init];     porsche.model = @""Porsche 911 Carrera"";      SEL stepOne = NSSelectorFromString(@""startEngine"");     SEL stepTwo = @selector(driveForDistance:);     SEL stepThree = @selector(turnByAngle:quickly:);      // This is the same as:     // [porsche startEngine];     [porsche performSelector:stepOne];      // This is the same as:     // [porsche driveForDistance:[NSNumber numberWithDouble:5.7]];     [porsche performSelector:stepTwo                   withObject:[NSNumber numberWithDouble:5.7]];      if ([porsche respondsToSelector:stepThree]) {         // This is the same as:         // [porsche turnByAngle:[NSNumber numberWithDouble:90.0]         //              quickly:[NSNumber numberWithBool:YES]];         [porsche performSelector:stepThree                       withObject:[NSNumber numberWithDouble:90.0]                       withObject:[NSNumber numberWithBool:YES]];     }     NSLog(@""Step one: %@"", NSStringFromSelector(stepOne)); } return 0; } </code></pre>  <p><strong>For objective-c selector, do other languages such as c++, python, ruby, java, javascript have similar thing? thanks</strong></p>"	"<p>Yes. C++ has pointer to members which perform a similar function - these identify an instance method which can then be invoked supplying the object to call the method on and the arguments, similar semantics (modulo Objective-C using dynamic binding and C++ using late binding) but rather different syntax to <code>performSelector:withObject:</code> etc.</p>  <p>The others? All the languages have descriptions available on the web...</p>"
22554313	Send captured images from python server to javascript client	javascript|python|html|raspberry-pi|live-streaming	2014-03-21 09:03:26.980000 UTC	"<p>Now I try to make server using Raspberry Pi which send live stream image data to browser. The server side was written in Python &amp; Tornado, while client side was written in HTML and javascript. Both use WebSocket. (I am a beginner of javascript.)</p>  <p>These are the codes</p>  <p>Server side:</p>  <pre><code>class WSHandler(WebSocketHandler):     def initialize(self, camera):         self.camera = camera         cv.SetCaptureProperty(self.capture, cv.CV_CAP_PROP_FRAME_WIDTH, 480)         cv.SetCaptureProperty(self.capture, cv.CV_CAP_PROP_FRAME_HEIGHT, 360)      def open(self):         print(""connection opened"")         while True:             self.loop()      def loop(self):         img = self.camera.takeImage()         self.write_message(img, binary=True)  class Camera():     def __init__(self):         self.capture = cv.CaptureFromCAM(0)      def takeImage(self):         img = cv.QueryFrame(self.capture)         img = cv.EncodeImage("".jpg"", img).tostring()         return img  def main():     camera = Camera()     app = tornado.web.Application([         (r""/camera"", WSHandler, dict(camera=camera)),     ])     http_server = tornado.httpserver.HTTPServer(app)     http_server.listen(8080)     IOLoop.instance().start()  if __name__ == ""__main__"":     main() </code></pre>  <p>Client side:</p>  <p>javascript(client.js)</p>  <pre><code>var canvas =  document.getElementById(""liveCanvas"");; var context =  canvas.getContext(""2d"");  var ws = new WebSocket(""ws://localhost:8080/camera""); ws.onopen = function(){         console.log(""connection was established""); }; ws.onmessage = function(evt){        context.drawImage(evt.data,0,0); }; </code></pre>  <p>html(index.html)</p>  <pre><code>&lt;html&gt;  &lt;head&gt;   &lt;title&gt;livecamera&lt;/title&gt;   &lt;canvas id=""liveCanvas"" width=""480"" height=""360""&gt;&lt;/canvas&gt;   &lt;script type=""text/javascript"" src=""./client.js""&gt;&lt;/script&gt;  &lt;/head&gt; &lt;/html&gt; </code></pre>  <p>When I access this 'index.html' while the server is running, next error appeared.</p>  <pre><code>Uncaught TypeError: Failed to execute 'drawImage' on 'CanvasRenderingContext2D': No function was found that matched the signature provided.  </code></pre>  <p>I guess, this is caused by mistaking of data format sent from server.</p>  <p>My questions are, What data format should be used? How should the server send data? How should the client receive data?</p>"	"<p>I found similar question between C++ and javascript  <a href=""https://stackoverflow.com/questions/11089732/display-image-from-blob-using-javascript-and-websockets"">Display image from blob using javascript and websockets</a></p>  <p>The Server side is same as before.</p>  <p>The Client side, 'ws.binaryType' has to be set to 'arraybuffer' to receive blob object. And It should be encoded by base64 and 'encode' function which is referred from link I wrote above.</p>  <p>The code:</p>  <p>javascript</p>  <pre><code>var img = document.getElementById(""liveImg""); var arrayBuffer;  var ws = new WebSocket(""ws://localhost:8080/camera""); ws.binaryType = 'arraybuffer';  ws.onopen = function(){     console.log(""connection was established""); }; ws.onmessage = function(evt){ arrayBuffer = evt.data; img.src = ""data:image/jpeg;base64,"" + encode(new Uint8Array(arrayBuffer)); };  function encode (input) {     var keyStr = ""ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/="";     var output = """";     var chr1, chr2, chr3, enc1, enc2, enc3, enc4;     var i = 0;      while (i &lt; input.length) {         chr1 = input[i++];         chr2 = i &lt; input.length ? input[i++] : Number.NaN; // Not sure if the index         chr3 = i &lt; input.length ? input[i++] : Number.NaN; // checks are needed here          enc1 = chr1 &gt;&gt; 2;         enc2 = ((chr1 &amp; 3) &lt;&lt; 4) | (chr2 &gt;&gt; 4);         enc3 = ((chr2 &amp; 15) &lt;&lt; 2) | (chr3 &gt;&gt; 6);         enc4 = chr3 &amp; 63;          if (isNaN(chr2)) {             enc3 = enc4 = 64;         } else if (isNaN(chr3)) {             enc4 = 64;         }         output += keyStr.charAt(enc1) + keyStr.charAt(enc2) +                   keyStr.charAt(enc3) + keyStr.charAt(enc4);     }     return output; } </code></pre>  <p>html</p>  <p>I replaced canvas tag to img tag</p>  <pre><code>&lt;html&gt;  &lt;head&gt;   &lt;title&gt;livecamera&lt;/title&gt;   &lt;img id=""liveImg"" width=""480"" height=""360""&gt;&lt;/canvas&gt;   &lt;script type=""text/javascript"" src=""./client.js""&gt;&lt;/script&gt;  &lt;/head&gt; &lt;/html&gt; </code></pre>"
22570871	Difference between comparing dictionaries in Python versus comparing objects in JavaScript	javascript|python|object|dictionary	2014-03-21 22:48:39.240000 UTC	"<p>Reading through this really cool online book, <a href=""http://speakingjs.com/es5/ch01.html#basic_prim_vs_obj"" rel=""nofollow"">Speaking JS</a>, I came across a neat quirk illustrating how comparisons work in JavaScript:</p>  <p>Primitive values are ""Compared by value"":</p>  <pre><code>&gt; 3 === 3 true &gt; 'abc' === 'abc' true </code></pre>  <p>Objects, however, are ""Compared by reference"":</p>  <pre><code>&gt; {} === {}  // two different empty objects false &gt; var obj1 = {}; &gt; var obj2 = obj1; &gt; obj1 === obj2 true </code></pre>  <p>A co-worker and I were chatting about this and wondered if the principle holds for Python.</p>  <p>So we cracked open a Python interpreter to see if this comparison works differently in that language.</p>  <pre><code>&gt;&gt;&gt; 3 == 3 True &gt;&gt;&gt; {} == {} True </code></pre>  <p>Turns out, two dictionaries resolve as equal in Python if their contents are the same.</p>  <p>Does this mean that Python dictionaries are ""Compared by value""? </p>  <p>Is there a way to compare Python dictionaries by reference?</p>"	"<p>In Python, the <code>==</code> operator compares by value. According to <a href=""http://docs.python.org/2/reference/expressions.html#is"" rel=""nofollow noreferrer"">the Python 2.7 documentation</a>:</p>  <blockquote>   <p>The operators <code>is</code> and <code>is not</code> test for object identity.</p> </blockquote>  <p>See the following example:</p>  <pre><code>print({} is {}) # False print({} == {}) # True </code></pre>  <p>As <a href=""http://docs.python.org/2/reference/expressions.html#is"" rel=""nofollow noreferrer"">Ignacio Vazquez-Abrams</a> said, note that this does not necessarily hold for all values. For example, <code>9 is 9</code> is true in some implementations, but don't count on it. Basically, the reason why is that number values may be simply a reference to a single object for all references of the same value, or separate objects . For example, CPython uses references for numbers between -5 and 256, inclusive (for a more detailed explanation, see <a href=""https://stackoverflow.com/questions/11476190/why-0-6-is-6-false"">this question</a>).</p>  <pre><code>print(9 is 9) # dependent on implementation print(9 == 9) # True </code></pre>"
22595989	Python to JavaScript converter	javascript|python	2014-03-23 19:33:15.300000 UTC	"<p>I want to convert some basic snippets to JavaScript, just pure Python I wrote myself to pure JavaScript. Is there any thing out there? Here the code.</p>  <pre><code>items = init['items']  itemsKeyedById = {i[""id""]: i for i in items} # hard to convert.  for item in items:     if item[""parents""][0]['isRoot'] == False:         parent = itemsKeyedById[item[""parents""][0]['id']]          if ""children"" not in parent:             parent[""children""] = []         parent[""children""].append(item)  topLevelItems = [item for item in items if item[""parents""][0]['isRoot'] == True] # hard to convert. try:     return json.dumps(topLevelItems[0]);   except:     return '[]' </code></pre>  <blockquote>   <p>@Davide: Sadly this question has been closed, otherwise I'd write an answer instead of a comment. The best way to do have python as client side these days is with <a href=""https://github.com/qquick/Transcrypt"" rel=""noreferrer"">https://github.com/qquick/Transcrypt</a></p> </blockquote>"	"<p>You might want to look into <a href=""https://github.com/atsepkov/RapydScript"" rel=""nofollow"" title=""RapydScript"">RapydScript</a>. It is actively maintained (as of Oct 2014) and comes with a couple of cute examples which actually work.</p>"
22595989	Python to JavaScript converter	javascript|python	2014-03-23 19:33:15.300000 UTC	"<p>I want to convert some basic snippets to JavaScript, just pure Python I wrote myself to pure JavaScript. Is there any thing out there? Here the code.</p>  <pre><code>items = init['items']  itemsKeyedById = {i[""id""]: i for i in items} # hard to convert.  for item in items:     if item[""parents""][0]['isRoot'] == False:         parent = itemsKeyedById[item[""parents""][0]['id']]          if ""children"" not in parent:             parent[""children""] = []         parent[""children""].append(item)  topLevelItems = [item for item in items if item[""parents""][0]['isRoot'] == True] # hard to convert. try:     return json.dumps(topLevelItems[0]);   except:     return '[]' </code></pre>  <blockquote>   <p>@Davide: Sadly this question has been closed, otherwise I'd write an answer instead of a comment. The best way to do have python as client side these days is with <a href=""https://github.com/qquick/Transcrypt"" rel=""noreferrer"">https://github.com/qquick/Transcrypt</a></p> </blockquote>"	"<p>You should try this:</p>  <p><a href=""http://gatc.ca/projects/pyjsdl/"" rel=""nofollow"">http://gatc.ca/projects/pyjsdl/</a></p>  <p>It works fine with regular python and even supports pygame.</p>"
22595989	Python to JavaScript converter	javascript|python	2014-03-23 19:33:15.300000 UTC	"<p>I want to convert some basic snippets to JavaScript, just pure Python I wrote myself to pure JavaScript. Is there any thing out there? Here the code.</p>  <pre><code>items = init['items']  itemsKeyedById = {i[""id""]: i for i in items} # hard to convert.  for item in items:     if item[""parents""][0]['isRoot'] == False:         parent = itemsKeyedById[item[""parents""][0]['id']]          if ""children"" not in parent:             parent[""children""] = []         parent[""children""].append(item)  topLevelItems = [item for item in items if item[""parents""][0]['isRoot'] == True] # hard to convert. try:     return json.dumps(topLevelItems[0]);   except:     return '[]' </code></pre>  <blockquote>   <p>@Davide: Sadly this question has been closed, otherwise I'd write an answer instead of a comment. The best way to do have python as client side these days is with <a href=""https://github.com/qquick/Transcrypt"" rel=""noreferrer"">https://github.com/qquick/Transcrypt</a></p> </blockquote>"	"<p>You can actually run a Python interpreter directly in JS thanks to <a href=""https://github.com/kripken/emscripten"" rel=""noreferrer"">emscripten</a>.</p>  <p>The project is called <a href=""https://github.com/replit/empythoned"" rel=""noreferrer"">empythoned</a>:</p>  <blockquote>   <p>Empythoned is a build script that uses Emscripten to compile CPython   for use in a browser. It attempts to compile the main interpreter as a   single small executable and the whole standard library as dynamically   loaded libraries.</p> </blockquote>  <p>but be warned:</p>  <blockquote>   <p>The project is in its infancy. Right now the core interpreter works   very well, but many of the libraries either don't work at all or   contain various bugs.</p> </blockquote>"
22624255	how to scrape search results if returned in javascript (using python)	javascript|python|web-scraping	2014-03-25 02:14:37.693000 UTC	"<p>The site I want to scrape populates returns using JavaScript.</p>  <p>Can I simply call the script somehow and work with its results? (Then without pagination, of course.) I don't want to run the entire thing to scrape the resulting formatted HTML, but the raw source is blank.</p>  <p>Have a look: <a href=""http://kozbeszerzes.ceu.hu/searchresults.xhtml?q=1998&amp;page=0"" rel=""nofollow"">http://kozbeszerzes.ceu.hu/searchresults.xhtml?q=1998&amp;page=0</a></p>  <p>The source of the return is simply</p>  <pre><code>&lt;?xml version=""1.0"" encoding=""UTF-8""?&gt; &lt;?xml-stylesheet type=""text/xsl"" href=""/templates/base_template.xsl""?&gt; &lt;content&gt;   &lt;head&gt;     &lt;SCRIPT type=""text/javascript"" src=""/js/searchResultsView.js""&gt;&lt;/SCRIPT&gt;       &lt;/head&gt;     &lt;whitebox&gt;     &lt;div id = ""hits""&gt;&lt;/div&gt;     &lt;/whitebox&gt; &lt;/content&gt; </code></pre>  <p>I would prefer simple Python tools.</p>"	"<p>I downloaded <a href=""https://pypi.python.org/pypi/selenium"" rel=""nofollow"" title=""Selenium"">Selenium</a> and <a href=""https://code.google.com/p/selenium/wiki/ChromeDriver"" rel=""nofollow"">ChromeDriver</a>.</p>  <pre><code>from selenium import webdriver  driver = webdriver.Chrome() driver.get('http://kozbeszerzes.ceu.hu/searchresults.xhtml?q=1998&amp;page=0')  for e in driver.find_elements_by_class_name('result'):     link = e.find_element_by_tag_name('a')     print(link.text.encode('ascii', 'ignore'), link.get_attribute('href').encode('ascii', 'ignore'))  driver.quit() </code></pre>  <p>If you're using Chrome, you can inspect the page attributes using F12, which is pretty useful.</p>"
22624255	how to scrape search results if returned in javascript (using python)	javascript|python|web-scraping	2014-03-25 02:14:37.693000 UTC	"<p>The site I want to scrape populates returns using JavaScript.</p>  <p>Can I simply call the script somehow and work with its results? (Then without pagination, of course.) I don't want to run the entire thing to scrape the resulting formatted HTML, but the raw source is blank.</p>  <p>Have a look: <a href=""http://kozbeszerzes.ceu.hu/searchresults.xhtml?q=1998&amp;page=0"" rel=""nofollow"">http://kozbeszerzes.ceu.hu/searchresults.xhtml?q=1998&amp;page=0</a></p>  <p>The source of the return is simply</p>  <pre><code>&lt;?xml version=""1.0"" encoding=""UTF-8""?&gt; &lt;?xml-stylesheet type=""text/xsl"" href=""/templates/base_template.xsl""?&gt; &lt;content&gt;   &lt;head&gt;     &lt;SCRIPT type=""text/javascript"" src=""/js/searchResultsView.js""&gt;&lt;/SCRIPT&gt;       &lt;/head&gt;     &lt;whitebox&gt;     &lt;div id = ""hits""&gt;&lt;/div&gt;     &lt;/whitebox&gt; &lt;/content&gt; </code></pre>  <p>I would prefer simple Python tools.</p>"	"<p>Indeed you can do that with Python. You either need python-ghost or Selenium. I prefer the latter <a href=""http://hydrocurio.com/web-scraping-stack-python-selenium-phamtonjs-beautiful-soup/"" rel=""nofollow"">combined with PhantomJS</a>, much lighter and simpler to install, and easy to use:</p>  <p>Install phantomjs with npm (Node Package Manager):</p>  <pre><code>apt-get install nodejs npm install phantomjs </code></pre>  <p>install selenium:</p>  <pre><code>pip install selenium </code></pre>  <p>and get the resulted page like this, and parse it with beautifulSoup (or another lib) as usual:</p>  <pre><code>from BeautifulSoup4 import BeautifulSoup as bs from selenium import webdriver client = webdriver.PhantomJS() client.get(""http://foo"") soup = bs(client.page_source) </code></pre>"
22624255	how to scrape search results if returned in javascript (using python)	javascript|python|web-scraping	2014-03-25 02:14:37.693000 UTC	"<p>The site I want to scrape populates returns using JavaScript.</p>  <p>Can I simply call the script somehow and work with its results? (Then without pagination, of course.) I don't want to run the entire thing to scrape the resulting formatted HTML, but the raw source is blank.</p>  <p>Have a look: <a href=""http://kozbeszerzes.ceu.hu/searchresults.xhtml?q=1998&amp;page=0"" rel=""nofollow"">http://kozbeszerzes.ceu.hu/searchresults.xhtml?q=1998&amp;page=0</a></p>  <p>The source of the return is simply</p>  <pre><code>&lt;?xml version=""1.0"" encoding=""UTF-8""?&gt; &lt;?xml-stylesheet type=""text/xsl"" href=""/templates/base_template.xsl""?&gt; &lt;content&gt;   &lt;head&gt;     &lt;SCRIPT type=""text/javascript"" src=""/js/searchResultsView.js""&gt;&lt;/SCRIPT&gt;       &lt;/head&gt;     &lt;whitebox&gt;     &lt;div id = ""hits""&gt;&lt;/div&gt;     &lt;/whitebox&gt; &lt;/content&gt; </code></pre>  <p>I would prefer simple Python tools.</p>"	"<p>In nutshell: you can't do this with Python only. </p>  <p>As you've said, this is populated by javascript (jquery), which adds content on-the fly.</p>  <p>You can try running script with <strong>nodejs</strong> locally and at some point dump DOM as html. But you need to dig into js code anyway.</p>"
22643071	add python interpreter to javascript	javascript|interpreter	2014-03-25 18:17:42.623000 UTC	"<p>I want to develop an application like where user writes Python code in textarea and when clicks execute the output will be displayed in frame.</p>  <p>So here we need</p>  <ol> <li>A Text area box(which is basic and easy to create)</li> <li>frame next to text area to display output(mostly i do with the ""simplegui"" library)</li> <li>Interpreter to interpret the code and display output</li> </ol>  <p>I don't know how to add interpreter to the Javascript code and display the output in frame</p>  <p>Any help appreciated.</p>  <p>Thanks in advance</p>"	"<p>If you need a suggestion then I can suggest you something.</p>  <ol> <li><p>Create a textarea, add the facility for the user to write the python code in it.</p></li> <li><p>Let him submit the code to the server.</p></li> <li><p>On the server-side, execute it using some sort of Python Compiler or something like that. Execute it, and see for any sort of errors.</p></li> </ol>  <p>If there are some errors you can show those errors inside the <code>iframe</code> alongwith the line. </p>  <p>Your Server would provide you with the Line number, and the detailed information about the Exception. You can show that to the user as a Response. But remember to catch that thrown exception, the code must be inside a </p>  <pre><code>try {   /* code that the user wrote here */ } catch (Exception e) {   /* show the e.Message */ } </code></pre>  <p>Block. Then the user would be notified. And he can edit it and so on.</p>  <p>But remember, it would take a long time to get complete! So, just sit back and keep coding. </p>  <p>Good luck!</p>"
22676908	Unescaping javascript string in Python	python	2014-03-27 02:05:15.997000 UTC	"<p>How would I decode the following string into normal text from javascript:</p>  <pre><code>s = 'https:\/\/s3.amazonaws.com\/normal-example\/ft_43513_53175ec44096a.mov' </code></pre>  <p>I am currently doing <code>s.replace('\/','/')</code>, but there must be a better way?</p>"	"<p>You want to use decode with 'string-escape':</p>  <pre><code>In [1]: s = 'https:\/\/s3.amazonaws.com\/normal-example\/ft_43513_53175ec44096a.mov'.replace('\/', '/')  In [2]: s.decode('string-escape') Out[2]: 'https://s3.amazonaws.com/normal-example/ft_43513_53175ec44096a.mov' </code></pre>  <p>The official docs on str.decode <a href=""http://docs.python.org/2/library/codecs.html#python-specific-encodings"" rel=""nofollow"">are here</a>. </p>  <p>The relevant portion is the [The purpose of string-escape is to] produce a string that is suitable as string literal in Python source code.</p>"
22717928	Using Javascript variables in Python	javascript|python|tornado	2014-03-28 16:11:39.587000 UTC	"<p>While working on Tornado template, I know we can use/work with Python variables in HTML/Javascript using {{python_variable}}.</p>  <p>Similarly, is it possible to use Javascript variable in Python code, without passing to another file?</p>"	"<p>No.</p>  <p>What you are doing in Tornado is constructing some HTML and javascript as text, ready to be sent to the user's browser to be interpreted. On the server, it is only text. You can put values from Python into the text, because the Python is running on the server. There is a clear and complete separation between what happens on the server (Tornado, python) and what happens later on the client (HTML, Javascript).</p>"
22728278	how to draw a straight line using python(without using javascript)	python|python-2.7	2014-03-29 07:25:54.937000 UTC	<p>I need to know that: draw a line without using javascript.  Need to draw a straight line using python only. Please give any links for to learn to draw line using python.</p>  <p>Thanks in advance.</p>	"<p>If I understand the question correctly, you can use <a href=""https://docs.python.org/3/library/turtle.html#module-turtle"" rel=""nofollow noreferrer"">turtle</a> to draw anything you want in python. As the <a href=""https://docs.python.org/3/library/turtle.html#module-turtle"" rel=""nofollow noreferrer"">turtle</a> webpage says, ""it uses tkinter for the underlying graphics""</p>"
22728278	how to draw a straight line using python(without using javascript)	python|python-2.7	2014-03-29 07:25:54.937000 UTC	<p>I need to know that: draw a line without using javascript.  Need to draw a straight line using python only. Please give any links for to learn to draw line using python.</p>  <p>Thanks in advance.</p>	"<p>You haven't stated your environment, but you can use TkInter if you are doing GUI work with Python. <a href=""http://effbot.org/tkinterbook/canvas.htm"" rel=""nofollow"">http://effbot.org/tkinterbook/canvas.htm</a>  Note there are a huge number of Python GUI choices, but TkInter is the official Python one: <a href=""https://wiki.python.org/moin/GuiProgramming"" rel=""nofollow"">https://wiki.python.org/moin/GuiProgramming</a> If you are in a web environment, then my advice would be to stick with javascript and the canvas tag. </p>"
22756253	How to store javascript variable into python(django)	django|django-models|django-forms	2014-03-31 07:53:12.617000 UTC	<p>Flow </p>  <p>JavaScript prompt (prompt's value) -> python (django) -> using django i want to store that value in xml file</p>	"<p>Here You can send a GET/POST ajax request to django with your prompt's value.</p>  <pre><code>&lt;script&gt;                 window.onload = function() {                  var name = prompt('What is your name?', '');                 // send your ajax request                   $.ajax({                  type:""GET"",                  url:""/store_prompt/""+name,                  success: function(data){                      alert('prompt value is stored into xml file.');                   }             });          } &lt;/script&gt; </code></pre>  <p>in django you can easily write your logic to store value into xml file.</p>"
22896570	How to get the result of a javascript function from a python code using Beautiful Soup?	javascript|jquery|python|html|web-scraping	2014-04-06 16:13:48.317000 UTC	"<p>I want to scrape data from a website using Beautiful Soup in Python. The site changes the values of a drop down menu based on selection by user. There is no api call in changing the values of drop down menu. On taking a closer look, I observed there is one javascript function  which is called internally to get the values of drop down menu. My problem is values of that drop down menu are not there in page source. They are got by calling that js function but sice there is no api call, I can't request that values. Can anyone tell me how can I call a javascript function from a python code. I'm using the Beautiful Soup for web scraping.</p> <p>Thanks</p>"	"<p>Beautiful Soup can't be used for parsing javascript loaded content. You should use something like <a href=""http://selenium-python.readthedocs.org/"" rel=""nofollow"">Selenium</a></p>"
22896570	How to get the result of a javascript function from a python code using Beautiful Soup?	javascript|jquery|python|html|web-scraping	2014-04-06 16:13:48.317000 UTC	"<p>I want to scrape data from a website using Beautiful Soup in Python. The site changes the values of a drop down menu based on selection by user. There is no api call in changing the values of drop down menu. On taking a closer look, I observed there is one javascript function  which is called internally to get the values of drop down menu. My problem is values of that drop down menu are not there in page source. They are got by calling that js function but sice there is no api call, I can't request that values. Can anyone tell me how can I call a javascript function from a python code. I'm using the Beautiful Soup for web scraping.</p> <p>Thanks</p>"	"<p>You can't. BeautifulSoup is an HTML parser.</p>  <p>You want to do more than parse HTML; you want to evaluate Javascript.</p>  <p>Perhaps you are looking for a Javascript-capable browser, like <a href=""http://selenium-python.readthedocs.org/"" rel=""nofollow"">Selenium</a>.</p>"
22896570	How to get the result of a javascript function from a python code using Beautiful Soup?	javascript|jquery|python|html|web-scraping	2014-04-06 16:13:48.317000 UTC	"<p>I want to scrape data from a website using Beautiful Soup in Python. The site changes the values of a drop down menu based on selection by user. There is no api call in changing the values of drop down menu. On taking a closer look, I observed there is one javascript function  which is called internally to get the values of drop down menu. My problem is values of that drop down menu are not there in page source. They are got by calling that js function but sice there is no api call, I can't request that values. Can anyone tell me how can I call a javascript function from a python code. I'm using the Beautiful Soup for web scraping.</p> <p>Thanks</p>"	"<p>You might be interested in the <a href=""https://code.google.com/p/pyv8/"" rel=""nofollow noreferrer"">Pyv8 module</a>; it lets you embed a javascript interpreter in Python code, but does not include a browser DOM. I give a short example in <a href=""https://stackoverflow.com/questions/21654961/why-is-beautifulsoup-not-finding-a-specific-table-class/21655727#21655727"">Why is BeautifulSoup not finding a specific table class?</a></p>  <p>For javascript that makes more extensive use of browser features, you may prefer <a href=""http://jeanphix.me/Ghost.py/"" rel=""nofollow noreferrer"">ghost.py</a>, a headless Webkit-based browser with a Python API.</p>  <p>Failing that, if you gave the page url, we could take a look at the javascript and see if there's a quick way to duplicate the call in Python.</p>"
22903625	Reading Javascript Variable in Python	javascript|python|parameter-passing	2014-04-07 04:29:08.947000 UTC	"<p>I'm trying to create a bot for an online game. The values for the game are stored in Javascript variables, which I can access. However, running my bot code in Javascript freezes the browser, since my code is the only thing that executes. </p>  <p>I'm trying to code my bot in Python, then, since it can run synchronously with the browser. How can I pass the Javascript variables to a client-side Python program?</p>"	"<p><code>I'm trying to code my bot in Python, then, since it can run synchronously with the browser. How can I pass the JavaScript variables to a client-side Python program?...</code> </p>  <p>You can pass the JavaScript variables only with <strong>query string</strong>. I create the server in CherryPy (CherryPy is an object-oriented web application framework using the Python ) and the client function with file HTML.</p>  <p><em>Repeat</em>: The data can be passed only by query string because the <strong>Server</strong> works statically and the <strong>Client</strong> works dynamically. This is a stupid sentence but so function a general Client/Server. The server receive a call or message one times and offers the service and response. I also can wrong....This is a my opinion.</p>  <p>Exists <strong>Mako Templates</strong> where you can include the pages HTML (helpful for build the structure of the site) or pass variable from Server to Client.</p>  <p>I not know nothing programs or languages that you can pass the JavaScript variable to Server (and I try with <strong>Mako Templates</strong> but not function). </p>"
22950275	Using Python to communicate with JavaScript?	javascript|python	2014-04-08 23:41:43.787000 UTC	"<p>Is there a way to send data packets from an active Python script to a webpage currently running JavaScript?</p>  <p>The specific usage I'm looking for is to give the ability for the webpage, using JavaScript, to tell the Python script information about the current state of the webpage, then for the Python script to interpret that data and then send data back to the webpage, which the JavaScript then uses to decide which function to execute.</p>  <p>This is for a video game bot (legally), so it would need to happen in real time. I'm fairly proficient in Python and web requests, but I'm just getting into JavaScript, so hopefully a solution for this wouldn't be too complex in terms of Javascript.</p>  <p>EDIT: One way I was thinking to accomplish this would be to have Javascript write to a file that the Python script could also read and write to, but a quick google search says that JavaScript is very limited in terms of file I/O. Would there be a way to accomplish this?</p>"	"<p>You can make HTTP requests using the XMLHttpRequest API, which Jquery abstracts with $.ajax and $.get. You can also use the lower level Websockets network API:</p>  <p><a href=""https://developer.mozilla.org/en-US/docs/WebSockets"" rel=""nofollow"">https://developer.mozilla.org/en-US/docs/WebSockets</a></p>  <p>Note that the XMLHttpRequest API will only allow requests to the same server, OR requests that return an appropriate Access-Control-Allow-Origin header.</p>"
22950275	Using Python to communicate with JavaScript?	javascript|python	2014-04-08 23:41:43.787000 UTC	"<p>Is there a way to send data packets from an active Python script to a webpage currently running JavaScript?</p>  <p>The specific usage I'm looking for is to give the ability for the webpage, using JavaScript, to tell the Python script information about the current state of the webpage, then for the Python script to interpret that data and then send data back to the webpage, which the JavaScript then uses to decide which function to execute.</p>  <p>This is for a video game bot (legally), so it would need to happen in real time. I'm fairly proficient in Python and web requests, but I'm just getting into JavaScript, so hopefully a solution for this wouldn't be too complex in terms of Javascript.</p>  <p>EDIT: One way I was thinking to accomplish this would be to have Javascript write to a file that the Python script could also read and write to, but a quick google search says that JavaScript is very limited in terms of file I/O. Would there be a way to accomplish this?</p>"	"<p>For security reasons, javascript in a browser is usually restricted to only communicate with the site it was loaded from.</p>  <p>Given that, that's an AJAX call, a very standard thing to do.</p>"
22950275	Using Python to communicate with JavaScript?	javascript|python	2014-04-08 23:41:43.787000 UTC	"<p>Is there a way to send data packets from an active Python script to a webpage currently running JavaScript?</p>  <p>The specific usage I'm looking for is to give the ability for the webpage, using JavaScript, to tell the Python script information about the current state of the webpage, then for the Python script to interpret that data and then send data back to the webpage, which the JavaScript then uses to decide which function to execute.</p>  <p>This is for a video game bot (legally), so it would need to happen in real time. I'm fairly proficient in Python and web requests, but I'm just getting into JavaScript, so hopefully a solution for this wouldn't be too complex in terms of Javascript.</p>  <p>EDIT: One way I was thinking to accomplish this would be to have Javascript write to a file that the Python script could also read and write to, but a quick google search says that JavaScript is very limited in terms of file I/O. Would there be a way to accomplish this?</p>"	"<p>It sounds like the Javascript is only going to send information, not receive any. In that case, you're in luck. I'm guessing you are also running the Javascript and the Python on the same machine.</p>  <p>Run a Python webserver on the machine the browser is running on. Here's a simple example:</p>  <p><a href=""http://webpy.org/install"" rel=""nofollow"">http://webpy.org/install</a></p>  <p>Once visiting <code>http://127.0.0.1:8080/</code> in your browser gives the message <code>Hello World!</code>, you can start adding more addresses to your website, for example <code>http://127.0.0.1:8080/report_data</code>, <code>http://127.0.0.1:8080/report_event</code> etc.</p>  <p>Your Javascript can then make AJAX requests using <code>jQuery.ajax</code> or <code>XMLHTTPRequest</code>, to the address <code>http://127.0.0.1:8080/report_data</code>, and pass the information as <code>GET</code> parameters.</p>"
23038710	Accessing python list in javascript as an array	javascript|python|flask	2014-04-13 03:16:41.960000 UTC	"<p>I have this in my flask views.py</p>  <pre><code>    def showpage():       ...       test = [1,2,3,4,5,6]       return render_template(""sample.html"",test=test) </code></pre>  <p>I have this in my sample .html</p>  <pre><code>    &lt;script&gt; var counts = {{test}}; &lt;/script&gt; </code></pre>  <p>This gives me a empty counts variable. How can I get the counts same as the test list in python?</p>"	"<p>You try to return dictionary from your python showpage function like following and it will work:</p>  <pre><code>def showpage():     """"""Your logic for getting the list to return """"""     test_dict = {""data_list"": [1,2,3,4,5]}     return render_template(""sample.html"", test=test_dict) </code></pre>"
23038710	Accessing python list in javascript as an array	javascript|python|flask	2014-04-13 03:16:41.960000 UTC	"<p>I have this in my flask views.py</p>  <pre><code>    def showpage():       ...       test = [1,2,3,4,5,6]       return render_template(""sample.html"",test=test) </code></pre>  <p>I have this in my sample .html</p>  <pre><code>    &lt;script&gt; var counts = {{test}}; &lt;/script&gt; </code></pre>  <p>This gives me a empty counts variable. How can I get the counts same as the test list in python?</p>"	<p>You can also use </p>  <pre><code>{{ test|safe }}  </code></pre>  <p>or </p>  <pre><code>{{ test|tojson|safe }} </code></pre>  <p>The <code>safe</code> filter is to be used within script tags.</p>
23038710	Accessing python list in javascript as an array	javascript|python|flask	2014-04-13 03:16:41.960000 UTC	"<p>I have this in my flask views.py</p>  <pre><code>    def showpage():       ...       test = [1,2,3,4,5,6]       return render_template(""sample.html"",test=test) </code></pre>  <p>I have this in my sample .html</p>  <pre><code>    &lt;script&gt; var counts = {{test}}; &lt;/script&gt; </code></pre>  <p>This gives me a empty counts variable. How can I get the counts same as the test list in python?</p>"	"<ol> <li><p>When you insert variable to template <code>{{ test }}</code> it take object representation. For list of int <code>[1,2,3,4,5,6]</code> it will be rendered as <code>[1, 2, 3, 4, 5, 6]</code>, so it is valid javascript array, but this method not safe complex objects without javascript-like representation, for example, test = [1,2,3,4,5,any] will rendered as <code>[1, 2, 3, 4, 5, &amp;lt;built-in function any&amp;gt;]</code>, however this is just example and will never work.</p></li> <li><p>To implicitly cast to javascript object in flask exist <a href=""http://flask.pocoo.org/docs/templating/#standard-filters"" rel=""noreferrer""><code>tojson</code></a> filter:</p>  <pre><code>&lt;script&gt; var counts = {{ test|tojson }}; &lt;/script&gt; </code></pre>  <p>So if the object is JSON serializable, then all will be rendered, otherwise the template engine will raise an exception.</p></li> <li><p>You also can send javascript code to your template:</p>  <pre><code>from flask import json return render_template(""sample.html"",test=json.dumps(test)) </code></pre>  <p>but it is not a good approach and it's better use <code>tojson</code> filter that is also HTML markup safe.</p></li> <li><p>I prefer to not mix any javascript code within templates and split templates, javascript and javascript data with ajax. If this approach is hard I would prefer to use <code>tojson</code> filter.</p></li> </ol>"
23038710	Accessing python list in javascript as an array	javascript|python|flask	2014-04-13 03:16:41.960000 UTC	"<p>I have this in my flask views.py</p>  <pre><code>    def showpage():       ...       test = [1,2,3,4,5,6]       return render_template(""sample.html"",test=test) </code></pre>  <p>I have this in my sample .html</p>  <pre><code>    &lt;script&gt; var counts = {{test}}; &lt;/script&gt; </code></pre>  <p>This gives me a empty counts variable. How can I get the counts same as the test list in python?</p>"	"<p>I've never liked having to use <code>json.dumps</code>.  In this solution, arrays are not a special case.  Just put your arrays and any other variable into an object:</p>  <p><strong>Python</strong></p>  <pre><code>@app.route('/somePath') def example():     data = {         'robotNames': ['Wall-E', 'Bender', 'Rosie']     }     return render_template('index.html', data=data) </code></pre>  <p><strong>JavaScript</strong></p>  <pre><code>&lt;script&gt;     var flaskData = JSON.parse('{{data | tojson | safe}}');      var robots = flaskData.robotNames;     robots.forEach(function (robot) {         console.log(robot);     }); &lt;/script&gt; </code></pre>"
23038710	Accessing python list in javascript as an array	javascript|python|flask	2014-04-13 03:16:41.960000 UTC	"<p>I have this in my flask views.py</p>  <pre><code>    def showpage():       ...       test = [1,2,3,4,5,6]       return render_template(""sample.html"",test=test) </code></pre>  <p>I have this in my sample .html</p>  <pre><code>    &lt;script&gt; var counts = {{test}}; &lt;/script&gt; </code></pre>  <p>This gives me a empty counts variable. How can I get the counts same as the test list in python?</p>"	"<p>You use <a href=""https://docs.python.org/2/library/json.html"" rel=""noreferrer"">json.dumps</a> in the flask view and <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/parse"" rel=""noreferrer"">JSON.parse</a> in the javascript code.</p>  <p>In the python view:</p>  <pre><code>def showpage():     ...     test = [1,2,3,4,5,6]     test = json.dumps(test)     return render_template(""sample.html"",test=test) </code></pre>  <p>In the JavaScript code:</p>  <pre><code>&lt;script&gt; var counts = JSON.parse(""{{ test }}""); &lt;/script&gt; </code></pre>"
23047282	Query on Execution environment of JavaScript & Python	javascript|python	2014-04-13 19:17:57.383000 UTC	"<p>Below diagram is retrieved after running JavaScript code(top-half) on <a href=""http://jstutor.herokuapp.com/"" rel=""nofollow noreferrer"">link1</a> and python code(bottom-half) on <a href=""http://pythontutor.com/"" rel=""nofollow noreferrer"">link2</a></p>  <p><img src=""https://i.stack.imgur.com/q4OgK.png"" alt=""enter image description here""></p>  <p>My question:</p>  <p>I see that names <code>foo</code> &amp; <code>bar</code> are already sitting in global frame(in blue) of JavaScript Execution environment(EE) unlike python's EE? How did JavaScript interpreter know about these two names before starting interpretation?</p>"	"<blockquote>   <p>How did JavaScript interpreter know about these two names before starting interpretation?</p> </blockquote>  <p>That's something called <a href=""https://stackoverflow.com/search?q=%5Bjavascript%5D%20hoisting""><strong>hoisting</strong></a>. Before the engine executes any line of code (of a function), it looks for all variable and function declarations and creates a binding in the current environment (<a href=""http://es5.github.io/#x10.5"" rel=""nofollow"">§10.5, steps 5 and 8</a>). In case of variable declarations, the value is <code>undefined</code> because the assignment has not taken place yet.</p>  <p>Apparently <em>Python</em> doesn't work that way, but I'm not familiar enough with its inner workings to give an authoritative  answer about that.</p>"
23052406	How to get the HTML data generated by Javascript using Python?	javascript|python|html	2014-04-14 05:13:16.113000 UTC	"<p>I'm working on a Python program to get the images from a Chinese manga/comic site. The page I'm stuck on right now is <a href=""http://manhua.dmzj.com/qiyuanzui/20286.shtml"" rel=""nofollow"">this page</a>. </p>  <p>If I use a browser to open this page, on the link ""右键另存此图片"", I can get the image URL, which is <a href=""http://imgfast.dmzj.com/q/%E4%B8%83%E5%8E%9F%E7%BD%AA/%E7%AC%AC01%E8%AF%9D/01.jpg"" rel=""nofollow"">image URL</a>. However, I believe this part is generated by a piece of javascript code, so when I use BeautifulSoup to parse the HTML source code, the image URL is not there.</p>  <p>So my question is how can I get the final HTML after executing that javascript to get the image URL?</p>"	
23053175	Automating Add to Cart Javascript Sequence without browser open with Python	javascript|python|selenium	2014-04-14 06:17:10.063000 UTC	"<p>I'm looking for a method to automate an add-to-cart process using Python WITHOUT needing to have a browser window open.</p>  <p>I've tried using modules such as mechanize but it does not have the functionality of directly ""clicking"" a web element</p>  <p>Currently I've been able to automate this process using Selenium but the process of having to open the browser and load web elements, photos, etc adds up to a lengthy process where time is of the essence.</p>  <p>An example page that I would like to automate is here :</p>  <p><a href=""http://store.nike.com/us/en_us/pd/kd-vi-elite-basketball-shoe/pid-972328/pgid-972324?cp=usns_twit_041214_basketball_kdelitehome"" rel=""nofollow"">http://store.nike.com/us/en_us/pd/kd-vi-elite-basketball-shoe/pid-972328/pgid-972324?cp=usns_twit_041214_basketball_kdelitehome</a></p>  <p>Any direction is greatly appreciated.</p>"	"<p>It seems that in the web page you listed, the ""Add to Cart"" button is actually a form submit button. What you can do is simulate the submission of the form by doing a POST request, with all the necessary form parameters, which you can get from all the <code>&lt;input&gt;</code> elements on the page.</p>  <p>A possible python implementation may be:</p>  <ol> <li>Download the page with urllib2. You will probably have to enable cookies.</li> <li>Parse the page using <a href=""http://www.crummy.com/software/BeautifulSoup/"" rel=""nofollow"">BeautifulSoup</a> or similar, and find all the <code>&lt;input&gt;</code> tags and their values.</li> <li>Construct a new POST request with all these params (while maintaining cookies).</li> </ol>  <p>You can use your Browser's Network sniffing capabilities to see an actual request being sent, and try to mimic it using the above tools.</p>  <p>Hope it helps.</p>"
23066488	JSON passed from Python (Flask) into JavaScript is displaying on screen	javascript|jquery|python|json|flask	2014-04-14 17:32:13.773000 UTC	"<p>I am passing a JSON from a Python back-end into my front-end JavaScript where I'm running a webGL (three.js) animation. The JSON holds numerical values that determine what happens in the animation. My problem is that while I have a basic ajax request working, the JSON is being printed to the screen (in lieu of the animation) rather than becoming a variable I can iterate through to control aspects of the animation. The two halves of the call are shown below.</p>  <p>I asked a <a href=""https://stackoverflow.com/q/18835414/2441384"">related question</a> to this one before and got some great help, but am obviously still missing a piece of the puzzle. I've been reading docs and all sorts of sources, yet need a nudge in the right direction to finally get this working. Any help is appreciated!</p>  <p>In the python backend:</p>  <pre><code>from flask import Response, json, render_template, jsonify from app import app from motifs import get_motif, get_motif_list  @app.route('/') def index():     motifs = get_motif_list(10) #     The first version of the return below successfully sends data, yet it is printed to the  #     screen, rather than being stored as data in a variable.     return Response(json.dumps(motifs), mimetype='application/json') #     This version of the return does not work: #     return render_template(""index.html"", motifs = motifs)  </code></pre>  <p>In the JavaScript (note that the <code>console.log</code> sanity checks don't work - I have no idea why:</p>  <pre><code>function foo() {     var array_data;      $.ajax({         type: ""GET"",         url: ""/"",         dataType: ""json""     });      request.done(function(JSON_array) {         array_data = JSON.parse(JSON_array)[""array""]         console.log(array_data); // sanity check - doesn't work     });     return array_data; };  var array = foo(); console.log(array); // sanity check - doesn't work </code></pre>  <p><strong>UPDATE</strong></p>  <p>With help from the advice below, I'm pretty close to having this off the ground. The <code>JSON</code> is no longer printing to the screen (an issue caused by the Flask return), and I've solved a <a href=""https://stackoverflow.com/q/23085889/2441384"">multifunction callback issue</a> I discovered along the way. However, I am now getting a <code>parsererror</code> from the <code>complete</code> <code>textStatus</code>. I think the problem now lays in the Python/Flask (see current code below). Thanks again for all who've helped!</p>  <p>Python/Flask (I think the problem is here - I'm a noob to Flask):</p>  <pre><code>from flask import Response, json, render_template, jsonify from app import app from motifs import get_motif, get_motif_list  @app.route('/') def index():     motifs = get_motif_list(10)     return Response(json.dumps(motifs), mimetype='application/json')  @app.route(""/"") def index():      return render_template(""index.html"") </code></pre>  <p>The JavaScript (the data is returned by the Deferred object - used to solve a callback issue):</p>  <pre><code>function getData() {      var deferredData = new jQuery.Deferred();      $.ajax({         type: ""GET"",         url: ""/"",         dataType: ""json"",         success: deferredData.resolve(),         complete : function(xhr, textStatus) {             console.log(""AJAX REquest complete -&gt; "", xhr, "" -&gt; "", textStatus)}     });      return deferredData; // contains the passed data }; </code></pre>"	"<p>It turns out I had a lot of problems in my code above, several of which I had to debug in related questions <a href=""https://stackoverflow.com/q/23118586/2441384"">here</a> and <a href=""https://stackoverflow.com/q/23085889/2441384"">here</a>.</p>  <p>Among them were:</p>  <ul> <li>in my original Flask <code>index()</code> function, it was dumping the JSON data to the screen because I was not rendering the <code>index.html</code> template anywhere.</li> <li>I had matching routes (<code>'/'</code>) and function names (<code>index()</code>) in the Flask functions</li> <li>As mentioned in the comments I did an unnecessary double parsing of the JSON with <code>dataType: json</code> and <code>array_data = JSON.parse(JSON_array)</code></li> <li>the return from this asynchonous function always came up undefined because it was referenced before the call had resolved</li> <li>in my later update to a Deferred object, the <code>success</code> property should have read: <code>success: function(data) { deferredData.resolve(data);}</code></li> </ul>  <p>So, after all those fixes, here is the functioning code!</p>  <p><strong>Flask/Python:</strong></p>  <pre><code>from flask import Response, json, render_template, jsonify from app import app from motifs import get_motif, get_motif_list  @app.route('/ajax') def ajax() :     motifs = get_motif_list(10)     return Response(json.dumps(motifs), mimetype='application/json')  @app.route(""/"") def index():      return render_template(""index.html"") </code></pre>  <p><strong>JavaScript:</strong> (note: this is the <code>foo()</code> function in my question above)</p>  <pre><code>function getData() {      var deferredData = new jQuery.Deferred();      $.ajax({         type: ""GET"",         url: ""/ajax"",         dataType: ""json"",         success: function(data) {              deferredData.resolve(data);             },         complete: function(xhr, textStatus) {             console.log(""AJAX Request complete -&gt; "", xhr, "" -&gt; "", textStatus);             }     });      return deferredData; // contains the passed data };   // I used the Deferred structure below because I later added Deferred objects from other asynchronous functions to the `.when`  var dataDeferred = getData();  $.when( dataDeferred  ).done( function( data ) {     console.log(""The data is: "" + data);     }); </code></pre>"
23066488	JSON passed from Python (Flask) into JavaScript is displaying on screen	javascript|jquery|python|json|flask	2014-04-14 17:32:13.773000 UTC	"<p>I am passing a JSON from a Python back-end into my front-end JavaScript where I'm running a webGL (three.js) animation. The JSON holds numerical values that determine what happens in the animation. My problem is that while I have a basic ajax request working, the JSON is being printed to the screen (in lieu of the animation) rather than becoming a variable I can iterate through to control aspects of the animation. The two halves of the call are shown below.</p>  <p>I asked a <a href=""https://stackoverflow.com/q/18835414/2441384"">related question</a> to this one before and got some great help, but am obviously still missing a piece of the puzzle. I've been reading docs and all sorts of sources, yet need a nudge in the right direction to finally get this working. Any help is appreciated!</p>  <p>In the python backend:</p>  <pre><code>from flask import Response, json, render_template, jsonify from app import app from motifs import get_motif, get_motif_list  @app.route('/') def index():     motifs = get_motif_list(10) #     The first version of the return below successfully sends data, yet it is printed to the  #     screen, rather than being stored as data in a variable.     return Response(json.dumps(motifs), mimetype='application/json') #     This version of the return does not work: #     return render_template(""index.html"", motifs = motifs)  </code></pre>  <p>In the JavaScript (note that the <code>console.log</code> sanity checks don't work - I have no idea why:</p>  <pre><code>function foo() {     var array_data;      $.ajax({         type: ""GET"",         url: ""/"",         dataType: ""json""     });      request.done(function(JSON_array) {         array_data = JSON.parse(JSON_array)[""array""]         console.log(array_data); // sanity check - doesn't work     });     return array_data; };  var array = foo(); console.log(array); // sanity check - doesn't work </code></pre>  <p><strong>UPDATE</strong></p>  <p>With help from the advice below, I'm pretty close to having this off the ground. The <code>JSON</code> is no longer printing to the screen (an issue caused by the Flask return), and I've solved a <a href=""https://stackoverflow.com/q/23085889/2441384"">multifunction callback issue</a> I discovered along the way. However, I am now getting a <code>parsererror</code> from the <code>complete</code> <code>textStatus</code>. I think the problem now lays in the Python/Flask (see current code below). Thanks again for all who've helped!</p>  <p>Python/Flask (I think the problem is here - I'm a noob to Flask):</p>  <pre><code>from flask import Response, json, render_template, jsonify from app import app from motifs import get_motif, get_motif_list  @app.route('/') def index():     motifs = get_motif_list(10)     return Response(json.dumps(motifs), mimetype='application/json')  @app.route(""/"") def index():      return render_template(""index.html"") </code></pre>  <p>The JavaScript (the data is returned by the Deferred object - used to solve a callback issue):</p>  <pre><code>function getData() {      var deferredData = new jQuery.Deferred();      $.ajax({         type: ""GET"",         url: ""/"",         dataType: ""json"",         success: deferredData.resolve(),         complete : function(xhr, textStatus) {             console.log(""AJAX REquest complete -&gt; "", xhr, "" -&gt; "", textStatus)}     });      return deferredData; // contains the passed data }; </code></pre>"	"<p>In your javascript:</p>  <pre><code>function foo() { var array_data;  $.ajax({     type: ""GET"",     url: ""/"",     dataType: ""json"" });  request.done(function(JSON_array) {      /*JSON_array is already parsed and it is an object..*/      array_data = JSON.parse(JSON_array)[""array""]     /* ^ I belive you dont have to do this ^*/      console.log(array_data);     /* ^ change this to console.log(JSON_array);*/ });  return array_data; /* ^ change this to return JSON_array;*/ }; </code></pre>"
23085522	What is best way to save data with appengine/HTML5/JavaScript/Python combo?	javascript|html|google-app-engine|python-2.7	2014-04-15 13:42:49.580000 UTC	"<p>I want to build an application with an HTML5 interface that persists data using google-app-engine and could do with some some advice to avoid spending a ton of time going down the wrong path.</p>  <p>What is puzzling me is the interaction between HTML5, Javascript/JQuery and Python.</p>  <p>Let's say, I have designed an HTML5 site. I believeetc  I can use prompts and forms to collect data entered by users.  I also know that I can use Javascript to grab that data and keep it in the form of objects...I need objects for reasons I'll not go into.</p>  <p>But when I look at the app-engine example, it has HTML form information embedded in the Python code which is what is used to store the data in the cloud Datastore.</p>  <p>This raises the following questions in my mind:</p>  <ol> <li>do I simply use Python to get user entered information?</li> <li>how does python interact with a separately described HTML5/CSS2 forms and prompts?</li> <li>does Javascript/Jquery play any role with respect to data?</li> <li>are forms and prompts the best way to capture use data? (Is there a better alternative)</li> </ol>  <p>As background:</p>  <ul> <li>It is a while since I programmed but have used HTML and CSS a fair bit </li> <li>I did the Javascript and Jquery courses at Codeacademy</li> <li>I was considering using Go which looks funky but ""experimental"" worries me and I cannot find a good IDE such as devTable</li> <li>I can do the Python course at Codeacademy pretty quickly if I need it? I think I may need to understand there objects syntax</li> </ul>  <p>I appreciate this is basic basic stuff but if I can get my plumbing sorted, I doubt that I'll have to ask too man more really stupid questsions</p>  <p>Gary</p>"	"<p>App engine supports python 2.7, it gives you access to several tools and libraries. </p>  <p>You have tutorials in app engine documentation to get started with python and all you need to know but it is not a sufficient source.</p>  <p>Getting started with app engine(Python) <a href=""https://developers.google.com/appengine/docs/python/gettingstartedpython27/introduction"" rel=""nofollow"">https://developers.google.com/appengine/docs/python/gettingstartedpython27/introduction</a></p>  <p>To send your forms you can to use AJAX with JQuery framwork, check out this tutorial:</p>  <p><a href=""http://pythoughts.com/ajax-with-google-app-engine/"" rel=""nofollow"">http://pythoughts.com/ajax-with-google-app-engine/</a></p>  <p>And forms processing can be handled by webapp2 framework</p>  <p>Handling forms with webapp2:</p>  <p><a href=""https://developers.google.com/appengine/training/py101_1/lesson3"" rel=""nofollow"">https://developers.google.com/appengine/training/py101_1/lesson3</a></p>  <p>Explaining the webapp2 Framework</p>  <p><a href=""https://developers.google.com/appengine/docs/python/gettingstartedpython27/usingwebapp"" rel=""nofollow"">https://developers.google.com/appengine/docs/python/gettingstartedpython27/usingwebapp</a></p>"
23085522	What is best way to save data with appengine/HTML5/JavaScript/Python combo?	javascript|html|google-app-engine|python-2.7	2014-04-15 13:42:49.580000 UTC	"<p>I want to build an application with an HTML5 interface that persists data using google-app-engine and could do with some some advice to avoid spending a ton of time going down the wrong path.</p>  <p>What is puzzling me is the interaction between HTML5, Javascript/JQuery and Python.</p>  <p>Let's say, I have designed an HTML5 site. I believeetc  I can use prompts and forms to collect data entered by users.  I also know that I can use Javascript to grab that data and keep it in the form of objects...I need objects for reasons I'll not go into.</p>  <p>But when I look at the app-engine example, it has HTML form information embedded in the Python code which is what is used to store the data in the cloud Datastore.</p>  <p>This raises the following questions in my mind:</p>  <ol> <li>do I simply use Python to get user entered information?</li> <li>how does python interact with a separately described HTML5/CSS2 forms and prompts?</li> <li>does Javascript/Jquery play any role with respect to data?</li> <li>are forms and prompts the best way to capture use data? (Is there a better alternative)</li> </ol>  <p>As background:</p>  <ul> <li>It is a while since I programmed but have used HTML and CSS a fair bit </li> <li>I did the Javascript and Jquery courses at Codeacademy</li> <li>I was considering using Go which looks funky but ""experimental"" worries me and I cannot find a good IDE such as devTable</li> <li>I can do the Python course at Codeacademy pretty quickly if I need it? I think I may need to understand there objects syntax</li> </ul>  <p>I appreciate this is basic basic stuff but if I can get my plumbing sorted, I doubt that I'll have to ask too man more really stupid questsions</p>  <p>Gary</p>"	"<p>You question is too complex but I will answer simply to help you. I use all what you want use.</p>  <p>Google App Engine is web server.</p>  <p>Html page is web request.</p>  <hr>  <p>When user click ""submit"" Html page (web request) is send to Google App Engine (server) and it is routed by url to handler.</p>  <p>Handler can read all params from form.</p>  <pre><code>self.request.params.get('something') </code></pre>  <p>You can stored some data in models and retrive it later.</p>  <p>SomeForm(db.Model):   userName = db.StringProperty()</p>  <pre><code>form = SomeForm() form.userName = self.request.params.get('userName') form.put() </code></pre>  <hr>  <p>When user click ""button"" with some jquery/ajax action it send to to Google App Engine (server) and it is routed by url to handler.</p>  <p>Again all is the same apart that you can use json to communicate and send back result to page and update content with jquery again.</p>  <hr>  <p>I am using Eclipse 3.8 (support dual monitors - 4.x not do it) + pyDev + javascript + HTML5 + Css3 plugins + git ... - It will allow you very stable programing with debugging.</p>  <p>I am using pure GAE + django (support internationalization better than Jinja) + jquery + ...</p>  <hr>  <p>Questions are basic but not stupid. Please vote on answer.</p>"
23085522	What is best way to save data with appengine/HTML5/JavaScript/Python combo?	javascript|html|google-app-engine|python-2.7	2014-04-15 13:42:49.580000 UTC	"<p>I want to build an application with an HTML5 interface that persists data using google-app-engine and could do with some some advice to avoid spending a ton of time going down the wrong path.</p>  <p>What is puzzling me is the interaction between HTML5, Javascript/JQuery and Python.</p>  <p>Let's say, I have designed an HTML5 site. I believeetc  I can use prompts and forms to collect data entered by users.  I also know that I can use Javascript to grab that data and keep it in the form of objects...I need objects for reasons I'll not go into.</p>  <p>But when I look at the app-engine example, it has HTML form information embedded in the Python code which is what is used to store the data in the cloud Datastore.</p>  <p>This raises the following questions in my mind:</p>  <ol> <li>do I simply use Python to get user entered information?</li> <li>how does python interact with a separately described HTML5/CSS2 forms and prompts?</li> <li>does Javascript/Jquery play any role with respect to data?</li> <li>are forms and prompts the best way to capture use data? (Is there a better alternative)</li> </ol>  <p>As background:</p>  <ul> <li>It is a while since I programmed but have used HTML and CSS a fair bit </li> <li>I did the Javascript and Jquery courses at Codeacademy</li> <li>I was considering using Go which looks funky but ""experimental"" worries me and I cannot find a good IDE such as devTable</li> <li>I can do the Python course at Codeacademy pretty quickly if I need it? I think I may need to understand there objects syntax</li> </ul>  <p>I appreciate this is basic basic stuff but if I can get my plumbing sorted, I doubt that I'll have to ask too man more really stupid questsions</p>  <p>Gary</p>"	"<p>My thanks to all of you for taking time to respond. Each response was useful it it's own way.</p>  <p>The AJAX/JQuery looks a promising route for me, so many thanks for the link on that. I'll stop equivocating and stick with Python rather than try Go and start working through the tutorials and courses.</p>  <p>Gary</p>"
23085522	What is best way to save data with appengine/HTML5/JavaScript/Python combo?	javascript|html|google-app-engine|python-2.7	2014-04-15 13:42:49.580000 UTC	"<p>I want to build an application with an HTML5 interface that persists data using google-app-engine and could do with some some advice to avoid spending a ton of time going down the wrong path.</p>  <p>What is puzzling me is the interaction between HTML5, Javascript/JQuery and Python.</p>  <p>Let's say, I have designed an HTML5 site. I believeetc  I can use prompts and forms to collect data entered by users.  I also know that I can use Javascript to grab that data and keep it in the form of objects...I need objects for reasons I'll not go into.</p>  <p>But when I look at the app-engine example, it has HTML form information embedded in the Python code which is what is used to store the data in the cloud Datastore.</p>  <p>This raises the following questions in my mind:</p>  <ol> <li>do I simply use Python to get user entered information?</li> <li>how does python interact with a separately described HTML5/CSS2 forms and prompts?</li> <li>does Javascript/Jquery play any role with respect to data?</li> <li>are forms and prompts the best way to capture use data? (Is there a better alternative)</li> </ol>  <p>As background:</p>  <ul> <li>It is a while since I programmed but have used HTML and CSS a fair bit </li> <li>I did the Javascript and Jquery courses at Codeacademy</li> <li>I was considering using Go which looks funky but ""experimental"" worries me and I cannot find a good IDE such as devTable</li> <li>I can do the Python course at Codeacademy pretty quickly if I need it? I think I may need to understand there objects syntax</li> </ul>  <p>I appreciate this is basic basic stuff but if I can get my plumbing sorted, I doubt that I'll have to ask too man more really stupid questsions</p>  <p>Gary</p>"	"<p>Q1 : Udacity has an excellent course <a href=""https://www.udacity.com/course/cs253"" rel=""nofollow"">web development</a>, which is making use of app engine, webapp2, jinja, python 2.7 and HTML forms.</p>  <p>Q2: You can use the Python packages jinja and wtforms or use django or others to interact with users.</p>  <p>Q3: Only if you need it. You do not need it for basic form IO.</p>  <p>Q4: You can also process forms with javascript and jquery / ajax. </p>"
23098477	Loading JavaScript library in Python using PyV8	javascript|python|gps|gis|pyv8	2014-04-16 03:29:32.870000 UTC	"<p>I am trying to use some features of the leaflet.js library in my Python code. And in order to execute JS commands in the code I am using PyV8. But I am unable to load the leaflet.js library into PyV8 context. When I do this,</p>  <pre><code>ctxt.eval(open(""leaflet.js"").read()) </code></pre>  <p>I get the error:</p>  <pre><code>ReferenceError: window is not defined (  @ 9 : 68 )  -&gt; of t.coords[c]&amp;&amp;(u[c]=t.coords[c]);this.fire(""locationfound"",u)}})}(window,doc </code></pre>  <p>I even tried to load the jquery library before thinking maybe leaflet is dependent on it. But then I get the error,</p>  <pre><code>TypeError: Cannot read property 'defaultView' of undefined (  @ 2 : 68 )  -&gt; :!1},k=db.setDocument=function(a){var b,e=a?a.ownerDocument||a:t,g=e.defaultVi </code></pre>  <p>Is there a way I can successfully load JS library?</p>"	"<p>You can only use libraries that are not depending on the DOM, since it is obviously not available server side. One example of such a universally usable library is mustache.js.</p>  <p>Edit: Looks like there is a way, apparently leaflet's can still be useful without the DOM - one simply has to somewhat recreate DOM first, as this nice fellow shows here: <a href=""https://github.com/rclark/server-side-leaflet"" rel=""nofollow noreferrer"">https://github.com/rclark/server-side-leaflet</a>. Note: not sure whether this works together with PyV8, you'll have to just try.</p>  <p>Edit2: To extend a little bit on the previous point: What you get with PyV8 is a pure non-browser-based javascript runtime environment. It has no idea about what 'window' or 'document' is, since V8 is not concerned about UI. Leaflet needs the DOM to operate, so it needs to 'think' it lives inside a browser. rclark's server side leaflet needs node.js specific extensions, so it won't work in PyV8.</p>  <p>There's this javascript DOM implementation that <em>might</em> work in PyV8: <a href=""https://github.com/andreasgal/dom.js/"" rel=""nofollow noreferrer"">https://github.com/andreasgal/dom.js/</a>. You'd have to load all the js sources provided there into PyV8 in the right order - note that this library only provides instructions for spidermonkey, not V8. I.e. this is going to be tricky to get right. </p>  <p>So, as I see it you have the following options (in order of increasing complexity and/or skill required): </p>  <ol> <li>Someone has apparently solved this problem for python in the following thread, but apparently using some rectangular approximation using OTR - see his github link in the comments to the accepted answer. I'd check this out and decide whether the approximation is good enough. <a href=""https://stackoverflow.com/questions/3643929/lookup-country-for-gps-coordinates-without-internet-access"">Lookup country for GPS coordinates without Internet access</a></li> <li>Switch to a browser based environment and use leaflet directly.</li> <li>Switch to node.js and use rclark's port.</li> <li>Try to somehow get a DOM into your PyV8, possibly using andreasgal and then use leaflet from there.</li> <li>Adapt leaflet for your needs such that it doesn't have any DOM dependencies anymore (start with shielding anything using window and/or document in something like <code>if (typeof(window) === 'object' &amp;&amp; window !== null){...}</code>. If you get this working, I'd make a pull request to the leaflet project since many others might profit from your work.</li> </ol>"
23137028	How to use python to scrape the text from a page generated by javascript?	javascript|python|linux|selenium	2014-04-17 15:17:52.773000 UTC	"<p>I'm looking for a way on Linux to write a script that scrapes the text from a page which is generated by Javascript (specifically <a href=""http://www.etherpad.org"" rel=""nofollow"">etherpad</a> e.g. <a href=""http://www.board.net"" rel=""nofollow"">http://www.board.net</a>). Ideally I'd like to use an existing tool but I haven't found a suitable one (e.g. lynx, but it doesn't support javascript, or Selenium, but it runs in a browser). Suggestions welcome.</p>  <p>If there's nothing suitable (which would seem surprising for such a simple need), maybe I can write something myself in Python. What useful Python classes exist for something like this?</p>"	"<p>One option is to still stick with <a href=""http://selenium-python.readthedocs.org/"" rel=""nofollow"">Selenium</a>, but use a headless <a href=""http://phantomjs.org/"" rel=""nofollow"">PhantomJS</a>.</p>  <p>See also:</p>  <ul> <li><a href=""http://www.realpython.com/blog/python/headless-selenium-testing-with-python-and-phantomjs/#.U0_xQOZdXLY"" rel=""nofollow"">Headless Selenium Testing with Python and PhantomJS</a></li> </ul>  <p>Example (using firefox webdriver):</p>  <pre><code>from selenium import webdriver  url = 'http://board.net/p/ThisIsBob%27sBoard/timeslider' driver = webdriver.Firefox() driver.get(url)  element = driver.find_element_by_id('padcontent') print element.text </code></pre>  <p>prints:</p>  <pre><code>Here is some text I'd like to scrape  I wonder how to go about it? </code></pre>"
23154521	How to parse javascript results with Python	javascript|python|html|beautifulsoup	2014-04-18 12:49:14.170000 UTC	"<p>I'm having trouble with my Python Script. All i want to do is to parse a div element with an id value:value and to store all the changed values. The value of this element is generating by javascript. This means that the value of the element is depending on user's input. To be more specific the html element looks like that</p>  <pre><code>&lt;div id=""value""&gt;...Here the frequently changed value generated by javascript...&lt;/div&gt; </code></pre>  <p>My python script is the following:</p>  <pre><code>from bs4 import BeautifulSoup import urllib x=urllib.urlopen(""http://example.com"") s = x.read() soup = BeautifulSoup(s)  m = soup.find(""div"",{""id"":""value""}) val = m.text print val </code></pre>  <p>The result is <strong>None</strong> but on the webpage the changes are obvious! Please help me to figure it out. </p>"	"<p>If the value is generated by javascript - the easiest solution would be to make use of a real browser to crawl the web page. This is where <a href=""http://selenium-python.readthedocs.org/"" rel=""nofollow"">selenium</a> would help. Here's a simple example:</p>  <pre><code>from selenium import webdriver  browser = webdriver.Firefox() browser.get('http://example.com')  element = browser.find_element_by_id('value') print element.text </code></pre>"
23158822	Javascript unescape() vs. Python urllib.unquote()	javascript|python|escaping|urllib	2014-04-18 17:13:15.920000 UTC	"<p>From reading various posts, it seems like JavaScript's <code>unescape()</code> is equivalent to Pythons <code>urllib.unquote()</code>, however when I test both I get different results:</p>  <h2>In browser console:</h2>  <pre><code>unescape('%u003c%u0062%u0072%u003e'); </code></pre>  <p><em>output:</em> <code>&lt;br&gt;</code></p>  <h2>In Python interpreter:</h2>  <pre><code>import urllib urllib.unquote('%u003c%u0062%u0072%u003e') </code></pre>  <p><em>output:</em> <code>%u003c%u0062%u0072%u003e</code></p>  <p>I would expect Python to also return <code>&lt;br&gt;</code>. Any ideas as to what I'm missing here?</p>  <p>Thanks!</p>"	"<p><code>%uxxxx</code> is a <a href=""http://en.wikipedia.org/wiki/Percent-encoding#Non-standard_implementations"" rel=""nofollow noreferrer"">non standard URL encoding scheme</a> that is not supported by <code>urllib.parse.unquote()</code> (Py 3) / <code>urllib.unquote()</code> (Py 2).</p>  <p>It was only ever part of ECMAScript ECMA-262 3rd edition; the format was rejected by the W3C and was never a part of an RFC.</p>  <p>You could use a regular expression to convert such codepoints:</p>  <pre><code>try:     unichr  # only in Python 2 except NameError:     unichr = chr  # Python 3  re.sub(r'%u([a-fA-F0-9]{4}|[a-fA-F0-9]{2})', lambda m: unichr(int(m.group(1), 16)), quoted) </code></pre>  <p>This decodes both the <code>%uxxxx</code> and the <code>%uxx</code> form ECMAScript 3rd ed can decode.</p>  <p>Demo:</p>  <pre><code>&gt;&gt;&gt; import re &gt;&gt;&gt; quoted = '%u003c%u0062%u0072%u003e' &gt;&gt;&gt; re.sub(r'%u([a-fA-F0-9]{4}|[a-fA-F0-9]{2})', lambda m: chr(int(m.group(1), 16)), quoted) '&lt;br&gt;' &gt;&gt;&gt; altquoted = '%u3c%u0062%u0072%u3e' &gt;&gt;&gt; re.sub(r'%u([a-fA-F0-9]{4}|[a-fA-F0-9]{2})', lambda m: chr(int(m.group(1), 16)), altquoted) '&lt;br&gt;' </code></pre>  <p>but you should avoid using the encoding altogether if possible.</p>"
23191611	Can anybody suggest me some graph generating ways using python/django/jquery/javascript	javascript|jquery|python|django	2014-04-21 05:50:31.460000 UTC	"<p>I also want to save the generated graph as an image (or generate image of graph) for appending to pdf..I tried <strong>jqplot(jquery)</strong>,<strong>cairoplot(python)</strong> but that is not satisfying my requirements.</p>"	"<p>I don't know if there is a single plugin to solve both these requirement but if you are fine with using more than one plugin try <strong>Google Charts</strong> for plotting the graph and <strong>HTML2CANVAS</strong> for saving its image as png.</p>  <ul> <li><a href=""https://developers.google.com/chart/"" rel=""nofollow"">https://developers.google.com/chart/</a></li> <li><a href=""http://html2canvas.hertzen.com/"" rel=""nofollow"">http://html2canvas.hertzen.com/</a></li> </ul>"
23208656	Trans-compiling Python aks primality test to JavaScript	javascript|python	2014-04-22 01:08:17.557000 UTC	<p>I am trans-compiling this Python code:</p>  <pre><code>def expand_x_1(p):     ex = [1]     for i in range(p):         ex.append(ex[-1] * -(p-i) / (i+1))     return ex[::-1] def aks_test(p):     if p &lt; 2: return False     ex = expand_x_1(p)     ex[0] += 1     return not any(mult % p for mult in ex[0:-1]) for p in range(101):     if aks_test(p):         print(p) </code></pre>  <p>Into JavaScript. Here is what I have done so far:</p>  <pre><code>function expand_x_1(p){     var ex = [1];     for(i = 0; i &lt; p; i++){         ex.push(ex[ex.length - 2] * -(p-i) / (i+1));     }     return ex.reverse(); } function aks_test(p){     if(p &lt; 2)         return false;     var ex = expand_x_1(p);     ex[0] += 1;     // the return part right here is what I need help with. } // Python equivalent of any() function any(iterable){     for(element in iterable)         if(element)             return true;     return false; } </code></pre>  <p>I just need help converting this line of Python code into JavaScript:</p>  <pre><code>return not any(mult % p for mult in ex[0:-1]) </code></pre>  <p>Thanks!</p>	"<p>First, define a modulo function to <a href=""https://stackoverflow.com/questions/4467539/javascript-modulo-not-behaving"">make sure the modulo behaves</a> the same way as in Python:</p>    <pre class=""lang-js prettyprint-override""><code>function modulo(a, b) {     return ((a % b) + b) % b; } </code></pre>  <p>The 'not any' line really just means that you want to return true if none of the iterations of the modulo get a result of 0. You can't do a list comprehension in JS, but you can get the same result by doing something like this.</p>  <pre class=""lang-js prettyprint-override""><code>// just use length-1 instead of slicing array for (var i = 0; i &lt; ex.length - 1; i++) {   var mult = ex[i];   // modulo mult by p   var test = modulo(mult, p);   // return false if any modulo result is 0   if (test === 0) {     return false;   } } // will only make it this far if all modulos !== 0 return true; </code></pre>  <p>--EDIT--</p>  <p>I only expanded it to make it easier to follow, you could make the for-loop much simpler:</p>  <pre class=""lang-js prettyprint-override""><code>for (var i = 0; i &lt; ex.length - 1; i++) {   if (modulo(ex[i], p) === 0) {     return false;   } } return true; </code></pre>"
23208656	Trans-compiling Python aks primality test to JavaScript	javascript|python	2014-04-22 01:08:17.557000 UTC	<p>I am trans-compiling this Python code:</p>  <pre><code>def expand_x_1(p):     ex = [1]     for i in range(p):         ex.append(ex[-1] * -(p-i) / (i+1))     return ex[::-1] def aks_test(p):     if p &lt; 2: return False     ex = expand_x_1(p)     ex[0] += 1     return not any(mult % p for mult in ex[0:-1]) for p in range(101):     if aks_test(p):         print(p) </code></pre>  <p>Into JavaScript. Here is what I have done so far:</p>  <pre><code>function expand_x_1(p){     var ex = [1];     for(i = 0; i &lt; p; i++){         ex.push(ex[ex.length - 2] * -(p-i) / (i+1));     }     return ex.reverse(); } function aks_test(p){     if(p &lt; 2)         return false;     var ex = expand_x_1(p);     ex[0] += 1;     // the return part right here is what I need help with. } // Python equivalent of any() function any(iterable){     for(element in iterable)         if(element)             return true;     return false; } </code></pre>  <p>I just need help converting this line of Python code into JavaScript:</p>  <pre><code>return not any(mult % p for mult in ex[0:-1]) </code></pre>  <p>Thanks!</p>	"<p>Your JavaScript implementation of <code>any</code> will not work with Arrays. You better be using <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some"" rel=""nofollow""><code>Array.prototype.some</code></a> (and <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/every"" rel=""nofollow""><code>Array.prototype.every</code></a> for Python's <code>all</code>).</p>  <p>Since we don't have generator expressions, in JavaScript, you can do</p>  <pre><code>return ex.slice(0, -1).some(function(currentItem) {     currentItem % p; }); </code></pre>  <p>We <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/slice"" rel=""nofollow""><code>slice</code></a> the array, so we can exclude the last element.</p>"
23230368	javascript int to string in python	string|int	2014-04-22 21:16:58.013000 UTC	<p>It is maybe a silly question but I'm trying to translate a javascript sentence to python and I can't find a way to convert an integer to string like javascript.</p>  <p>Here the javascript sentence:</p>  <pre><code>var n = 11; n = n.toString(16); </code></pre>  <p>It returns 'b'.</p>  <p>I tried chr() in python but it is not the same.  I don't know to program in javascript so  I would be grateful if someone can help me to understand how does javascript convertion works to do that.</p>  <p>Thanks you.</p>	"<p>the line </p>  <pre><code>n = n.toString(16); </code></pre>  <p>Is converting the number 11 to a string base 16 or 0xB = 11 decimal.</p>  <p>you can read more about <a href=""http://www.w3schools.com/jsref/jsref_tostring_number.asp"" rel=""nofollow"">int.toString</a></p>  <p>the code you want is:</p>  <pre><code>n = 11 n = format(n, 'x') </code></pre>  <p>or</p>  <pre><code>n = hex(n).lstrip('0x') </code></pre>  <p>the lstrip will remove the 0x that is placed when converting to hex</p>"
23230368	javascript int to string in python	string|int	2014-04-22 21:16:58.013000 UTC	<p>It is maybe a silly question but I'm trying to translate a javascript sentence to python and I can't find a way to convert an integer to string like javascript.</p>  <p>Here the javascript sentence:</p>  <pre><code>var n = 11; n = n.toString(16); </code></pre>  <p>It returns 'b'.</p>  <p>I tried chr() in python but it is not the same.  I don't know to program in javascript so  I would be grateful if someone can help me to understand how does javascript convertion works to do that.</p>  <p>Thanks you.</p>	"<p>Everything below was my original answer, didn't see it was base 16 instead of base 10. This is not the solution.</p>  <p>I wonder how much effort you took in searching for an answer: <a href=""https://stackoverflow.com/questions/961632/converting-integer-to-string-in-python"">Converting integer to string in Python?</a> was the first result when googling ""python integer to string"". Taking a look at the search result, this should do it:</p>  <pre><code>n = 11 n = str(n) </code></pre>  <p>This might work too:</p>  <pre><code>n = 11 n.__str__() </code></pre>  <p>You can give it a try here <a href=""http://progzoo.net/wiki/Python:Convert_a_Number_to_a_String"" rel=""nofollow noreferrer"">http://progzoo.net/wiki/Python:Convert_a_Number_to_a_String</a></p>"
23244718	2D Array Search from Python to Javascript	javascript|python|arrays	2014-04-23 12:46:15.097000 UTC	"<p>Whats is the equivalent of this code in Javascript?</p>  <pre><code>array = [""James"", ""1"", ""3""] array2 = [""Bob"", ""2"", ""5""]  mainArray = [array, array2]  Person = ""James""  for element in mainArray:     if (element[0] == Person):         print Person + "" "" + ""D="" + element[1] + "" Z="" + element[2] </code></pre>  <p>I have managed to create the arrays in Javascript but I am unsure how to code the for loop in a JS function.</p>"	"<pre><code>array = [""James"", ""1"", ""3""] array2 = [""Bob"", ""2"", ""5""] mainArray = array.concat(array2) len = mainArray.length for(var i=0;i&lt;len;++i){  if (mainArray[i] == ""James""){   console.log(mainArray[i]);  } } </code></pre>"
23244718	2D Array Search from Python to Javascript	javascript|python|arrays	2014-04-23 12:46:15.097000 UTC	"<p>Whats is the equivalent of this code in Javascript?</p>  <pre><code>array = [""James"", ""1"", ""3""] array2 = [""Bob"", ""2"", ""5""]  mainArray = [array, array2]  Person = ""James""  for element in mainArray:     if (element[0] == Person):         print Person + "" "" + ""D="" + element[1] + "" Z="" + element[2] </code></pre>  <p>I have managed to create the arrays in Javascript but I am unsure how to code the for loop in a JS function.</p>"	"<p>Try this:</p>  <pre><code>var arr1 = [""James"", ""1"", ""3""],     arr2 = [""Bob"", ""2"", ""5""]     arrMain = []; arrMain.push(arr1 , arr2);  for(x=0; x&lt;arrMain.length; x+=1){    (arrMain[x][0] === 'James') &amp;&amp;     console.log(arrMain[x][0] + "" "" + ""D="" + arrMain[x][1] + "" Z="" + arrMain[x][2]) }     </code></pre>"
23244718	2D Array Search from Python to Javascript	javascript|python|arrays	2014-04-23 12:46:15.097000 UTC	"<p>Whats is the equivalent of this code in Javascript?</p>  <pre><code>array = [""James"", ""1"", ""3""] array2 = [""Bob"", ""2"", ""5""]  mainArray = [array, array2]  Person = ""James""  for element in mainArray:     if (element[0] == Person):         print Person + "" "" + ""D="" + element[1] + "" Z="" + element[2] </code></pre>  <p>I have managed to create the arrays in Javascript but I am unsure how to code the for loop in a JS function.</p>"	"<pre><code>for(var i = 0; i &lt; mainArray.length; i++){     if(mainArray[i][0] == Person){         console.log(mainArray[i][1] + "" "" + mainArray[i][2]);     } } </code></pre>"
23302217	Python Selenium Run All Page Javascripts	python|python-2.7|selenium	2014-04-25 20:15:26.437000 UTC	"<p>I'm scraping my site which uses a Google custom search iframe. I am using Selenium to switch into the iframe, and output the data. I am using BeautifulSoup to parse the data, etc.</p>  <pre><code>from bs4 import BeautifulSoup from selenium import webdriver import time import html5lib  driver = webdriver.Firefox()  driver.get('http://myurl.com') driver.execute_script() time.sleep(4) iframe = driver.find_elements_by_tag_name('iframe')[0] driver.switch_to_default_content() driver.switch_to_frame(iframe)  output = driver.page_source  soup = BeautifulSoup(output, ""html5lib"")  print soup </code></pre>  <p>I am successfully getting into the iframe and getting 'some' of the data. At the very top of the data output, it talks about Javascript being enabled, and the page being reloaded, etc. The part of the page I'm looking for isn't there (from when I look at the source via developer tools). So, obviously some of it isn't loading.</p>  <p>So, my question - how do you get Selenium to load ALL page javascripts? Is it done automatically?</p>  <p>I see a lot of posts on SO about running an individual function, etc... but nothing about running all of the JS on the page.</p>  <p>Any help is appreciated.</p>"	"<p>Ahh, so it was in the  tag that featured the ""Javascript must be enabled"" text.</p>  <p>I just posted a question on how to switch within the nested iframe here:</p>  <p><a href=""https://stackoverflow.com/questions/23302769/python-selenium-switch-into-an-iframe-within-an-iframe"">Python Selenum Swith into an iframe within an iframe</a></p>"
23312274	How do I pass a Python list of strings and numbers to JavaScript?	javascript|python|json|list|flask	2014-04-26 14:29:07.880000 UTC	"<p>I am using  flask and javascript. I need to pass a python list like this: </p>  <pre><code>percentage=[""John"",89] </code></pre>  <p>My flask code is like this:</p>  <pre><code>@app.route(/graph): def graph():     percentage=[""John"",89]     return render_template(""graph.html"",percentage=percentage) </code></pre>  <p>Although my javascript performs other functions. I simply tried to display the values being passed. But it does not get displayed at all.</p>  <pre><code>&lt;script&gt;      document.write({{percentage}}); &lt;/script&gt; </code></pre>  <p>The value passed is getting displayed using html paragraph tag.This works:</p>  <pre><code>&lt;p&gt;{{percentage}}&lt;/p&gt; </code></pre>  <p>I have tried using json.dumps(percentage) but it is not working. Where am I going wrong?</p>"	
23346765	Scraping a website with content added via javascript with Selenium in Python	javascript|python|selenium|web-scraping|phantomjs	2014-04-28 16:50:17.193000 UTC	"<p>I am trying to scrape data from a website using Selenium and phantomjs in python. However, this website is adding the data I'm interested in via javascript. Is there a way to ask Selnium to wait for the data before return it? So far, we've tried:</p>  <pre><code>import contextlib                                                                 import selenium.webdriver as webdriver                                            import selenium.webdriver.support.ui as ui  phantomjs = '/usr/local/bin/phantomjs'                                            url = '[redacted]'               with contextlib.closing(webdriver.PhantomJS(phantomjs)) as driver:     driver.get(url)     wait = ui.WebDriverWait(driver, 10)     wait.until(lambda driver: driver.execute_script(""return document.getElementById(\""myID\"").innerText"").startswith('[redacted]'))     driver.execute_script(""return document.getElementById(\""myID\"").innerText"") </code></pre>  <p>Unfortunately, this code raises <code>selenium.common.exceptions.TimeoutException: Message: None</code> because the content of the <code>id</code> we're getting doesn't change.</p>  <p>We are using PhantomJS 1.9.7, python 2.7.5 in a virtualenv and selenium 2.41.0. Is it the right way to do this or are we missing something. Does anyone has a better method to do this?</p>  <p>Thanks in advance.</p>  <p><strong>EDIT</strong></p>  <p>Following @ExperimentsWithCode comment, we tried looping until the content is loaded:</p>  <pre><code>with contextlib.closing(webdriver.PhantomJS(phantomjs)) as driver:     driver.get(url)     wait = ui.WebDriverWait(driver, 10)     found = False     while not found:         try:             wait.until(lambda driver: driver.execute_script(""return document.getElementById(\""myID\"").innerText"").startswith('[redacted]'))             driver.execute_script(""return document.getElementById(\""myID\"").innerText"")             found = True         except:              print ""Not found""              pass </code></pre>"	
23391061	Is there an equivalent to Python's all function in JavaScript or jQuery?	javascript|jquery	2014-04-30 14:37:32.330000 UTC	"<p>In Python the <code>all()</code> functions tests if all values in a list are true. For example, I can write</p>  <pre><code>if all(x &lt; 5 for x in [1, 2, 3, 4]):     print(""This always happens"") else:     print(""This never happens"") </code></pre>  <p>Is there an equivalent function in JavaScript or jQuery?</p>"	"<p>Apparently, it does exist: <a href=""https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/every"" rel=""noreferrer""><code>Array.prototype.every</code></a>. Example from mdn:</p>  <pre><code>function isBigEnough(element, index, array) {     return (element &gt;= 10); } var passed = [12, 5, 8, 130, 44].every(isBigEnough); // passed is false passed = [12, 54, 18, 130, 44].every(isBigEnough); // passed is true </code></pre>  <p>This means you won't have to write it manually. This function doesn't work on IE8-, though.</p>  <p>However, if you want a function that also works for IE8-, you can use a manual implementation,  <a href=""https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/every#Compatibility"" rel=""noreferrer""><strong>Or the polyfill shown on the mdn page</strong></a>.</p>  <p>Manual:</p>  <pre><code>function all(array, condition){     for(var i = 0; i &lt; array.length; i++){         if(!condition(array[i])){             return false;         }     }     return true; } </code></pre>  <p>Usage:</p>  <pre><code>all([1, 2, 3, 4], function(e){return e &lt; 3}) // false all([1, 2, 3, 4], function(e){return e &gt; 0}) // true </code></pre>"
23394128	Scraping a website with content added via javascript with PySide in Python	javascript|python|qt|pyqt4|pyside	2014-04-30 17:09:43.397000 UTC	"<p>I am trying to scrape data from a website using PyQt4 in python. However, this website is adding the data I'm interested in via javascript. Is there a way to ask Selnium to wait for the data before return it? So far, we've tried:</p>  <pre><code>import sys from PySide.QtGui import * from PySide.QtCore import * from PySide.QtWebKit import * from BeautifulSoup import BeautifulSoup  def test():     print ""coucou""  class Render(QWebPage):       def __init__(self, url):            self.app = QApplication(sys.argv)            QWebPage.__init__(self)            self.loadFinished.connect(self._loadFinished)            self.timerScreen = QTimer()            self.timerScreen.setInterval(10000)            self.timerScreen.setSingleShot(True)            self.timerScreen.timeout.connect(test)            self.mainFrame().load(QUrl(url))            self.app.exec_()        def _loadFinished(self, result):            self.frame = self.mainFrame()            self.app.quit()  def main():     url = '[redacted]'     r = Render(url)     html = r.frame.toHtml()     page = QWebPage()     page.settings().setAttribute(QWebSettings.AutoLoadImages, False)     page.settings().setAttribute(QWebSettings.PluginsEnabled, False)     page.mainFrame().setHtml(html)     dom = page.mainFrame().documentElement()     li = dom.findFirst(""body"")     print html     if not li.isNull():         classe = li.attribute(""class"")         text = li.toPlainText() main() </code></pre>  <p>Unfortunately, the content of the page doesn't show the relevant data. We're using Python 2.7.5 and PySide 1.2.2.</p>  <p>Thanks in advance.</p>"	
23417159	Inconsistent PBKDF2 hashes in Python (django) and Javascript (crypto.js)	javascript|python|django|encryption|cryptography	2014-05-01 21:42:42.630000 UTC	"<p>Django code:</p>  <pre><code>hasher = PBKDF2PasswordHasher() print hasher.encode(u'qwerty', u'qwerty', iterations=1).split('$')[3] # T9t/EJXFpPs2Lhca7IVGphTC/OdEloPMHw1UhDnXcyQ= # hex: 4fdb7f1095c5a4fb362e171aec8546a614c2fce7449683cc1f0d548439d77324 </code></pre>  <p>Javascript code:</p>  <pre><code>var key = CryptoJS.PBKDF2('qwerty', 'qwerty', { iterations: 1, keySize: 256/32 }); console.log(key.toString(CryptoJS.enc.Base64)); // vfBGfG30ahsx6QWs9vrdTGV+wmlg1d5f2+5bFnP5SAU= // hex: bdf0467c6df46a1b31e905acf6fadd4c657ec26960d5de5fdbee5b1673f94805 </code></pre>"	"<p>I was not specifying the right hasher in JS. The default is a SHA1 hasher for CryptoJS and a SHA526 hasher for Django.</p>  <pre><code>CryptoJS.PBKDF2('qwerty', 'qwerty', { iterations: 1, keySize: 256/32, hasher: CryptoJS.algo.SHA256 }); </code></pre>  <p>fixes the problem</p>"
23420201	Python Selenium access hidden link in javascript menu	javascript|jquery|python|selenium|hidden	2014-05-02 03:16:56.657000 UTC	"<p>How might I execute the javascript submenu triggered by this button, <strong>""x-auto-54""</strong>?</p>  <pre><code>    &lt;table id=""x-auto-54""          class="" x-btn avtar-x-btn x-component x-btn-noicon x-unselectable ""          cellspacing=""0"" role=""presentation"" unselectable=""on""&gt; </code></pre>  <p>The ultimate goal, is then to click this submenu link, \\a[@id=""<strong>x-auto-89</strong>""]:           </p>  <pre><code>&lt;div id=""x-auto-55"" class="" x-ignore x-menu x-component "" style=""z-index: 1053; width: 118px; display: block; position: absolute; left: 1095px; top: 18px;"" tabindex=""0"" hidefocus=""true"" aria-labelledby=""x-auto-54""&gt;             &lt;div class="" x-menu-list"" style=""height: 96px;""&gt;                 &lt;div id=""x-menu-el-x-auto-89"" class=""x-menu-list-item ""&gt;                     &lt;a id=""x-auto-89"" class="" x-menu-item x-component"" href=""#""&gt;&lt;/a&gt;                 &lt;/div&gt;                 &lt;div id=""x-menu-el-x-auto-90"" class=""x-menu-list-item ""&gt;&lt;/div&gt;                 &lt;div id=""x-menu-el-x-auto-91"" class=""x-menu-list-item ""&gt;&lt;/div&gt;                 &lt;div id=""x-menu-el-x-auto-92"" class=""x-menu-list-item ""&gt;&lt;/div&gt;             &lt;/div&gt;         &lt;/div&gt;     &lt;/body&gt;  &lt;/html </code></pre>  <p>I found these buttons using the <a href=""http://docs.seleniumhq.org/projects/ide/"" rel=""nofollow noreferrer"">Selenium IDE</a> (after clicking them while recording). The entire source is otherwise very very large (I will post upon request if necessary).</p>  <p>My strategy has been to access each hierarchal tag one at a time, so as to catch where the WebElements are no longer able to be found (in this case the submenu isn't opening so x-auto-89 isn't found):</p>  <pre><code>a54 = driver.find_element_by_id('x-auto-54') hover = ActionChains(driver).move_to_element(a54).click() hover.perform() driver.find_element_by_id('x-auto-89').click() </code></pre>  <p>this <em>clicking</em> code was referenced according to these solutions: <a href=""https://stackoverflow.com/questions/8022156/javascript-drop-down-menu-with-selenium-2"">1</a>, <a href=""http://www.anitpatel.net/2012/02/25/selenium-webdriver-how-to-click-on-a-hidden-link-or-menu/"" rel=""nofollow noreferrer"">2</a>, </p>"	<p>First thing these id looks to be auto generated. Are these ids (x-auto-54 or x-auto-89) same all the time or each refresh of page is changing them?</p>  <p>I will suggest use class in place of ID. </p>  <p>When you run the code do you see the click happen on button  x-auto-54 and submenu appear?</p>  <p>How long it takes to submenu appear? Try using waitForElement instead of find element.</p>
23431301	how to make Autobahn WAMP Python server & Javascript client work together?	javascript|python|autobahn|wamp-protocol	2014-05-02 15:07:06.460000 UTC	"<p>I have a Python Autobahn WAMP server (v. 0.8.8, app code at <a href=""http://pastebin.com/DfQvaJYF"" rel=""nofollow"">http://pastebin.com/DfQvaJYF</a>) working fine with a Python client. Using latest Twisted 13.2. for both server and client.</p>  <p>However, the browser javascript client (autobahn js from CDN, app code at <a href=""http://pastebin.com/1GGaRP5e"" rel=""nofollow"">http://pastebin.com/1GGaRP5e</a>) similarly taken from Autobahn JS examples subscribes to a topic, but does not receive any messages. There are no errors whatsoever anywhere. Same happens when running the client using Node.js.</p>  <p>Checking the server log, I can see that nothing is indeed transmitted - there are no TX WAMP EVENTs ever, after the js web or the Node.js client connects and subscribes.</p>  <p>The WAMP server is running on port 8080, and the JS web client page is served from port 8111. Both on the same host.</p>"	"<p>Found the issue. Thank you @oberstet for commenting (see above). While just setting the client realm to suggested default <em>realm1</em> did not work, that lead me towards the solution.</p>  <p>The short and simple answer is that <strong>the Python WAMP server should always explicitly set the realm</strong>. This applies at least when the server implements a component that subclasses <em>wamp.ApplicationSession</em> (many or all the examples at the autobahn website). </p>  <p>In other words, in the server there has to be an <em>onConnect</em> function that joins a realm. Without it,</p>  <ul> <li>a similarly constructed Python client (that does not join a realm), will work</li> <li>no (Python or Javascript) client that sets a realm will work</li> </ul>  <p>Some speculation beyond the solution: If one can build a Javascript client that works without setting a realm (example I used requires explicit realm), perhaps such a client would work as well. Perhaps the Python WAMP server code is buggy in its setting of default realm. Or maybe it's just that the default has been changed. I don't know. </p>"
23448628	python django pass javascript object from view	javascript|python|django|object|json.net	2014-05-03 19:00:30.837000 UTC	"<p>With python dictionary and json.dumps I've been able to do things like:  </p>  <pre><code>json.dumps({'title': 'string','b': 2, 'c': None})  </code></pre>  <p>which will result in the string:   </p>  <pre><code>'{""a"": ""string"", ""b"": 2, ""c"": null}'  </code></pre>  <p>then all I had to do is pass it to javascript code (with |safe filter) and it will interpret it as json.  </p>  <p>but now I need to create in my django view something that will result in:</p>  <pre><code>{title: ""string"", func: $.someFunc} </code></pre>  <p>notice, there aren't quotes on the ""title"" key and I use more complicated values like functions.  </p>  <p>Specifically, I'm using <a href=""http://www.jqplot.com"" rel=""nofollow"">Jqplot</a> to create charts. But I need to configure my charts' properties based on data that I have on the server (e.g. number of axes, type of axis, and other properties).<br> So my attempt is to create these javascript objects in the django view.    </p>  <p><a href=""http://www.jqplot.com/tests/line-charts.php"" rel=""nofollow"">Example</a> for a jqplot charts. I need to create the plotOptions on the server.  </p>"	
23484409	Is it possible to have python read csv returned from javascript?	javascript|python|csv	2014-05-06 01:09:15.520000 UTC	"<p>I'm curious if it's possible to read a csv that's returned from a javascript call?</p>  <p>Specifically, on this page: <a href=""http://www.fangraphs.com/leaders.aspx?pos=all&amp;stats=pit&amp;lg=all&amp;qual=y&amp;type=1&amp;season=2014&amp;month=0&amp;season1=2011&amp;ind=0&amp;team=0&amp;rost=1&amp;age=0&amp;filter=&amp;players=0"" rel=""nofollow"">http://www.fangraphs.com/leaders.aspx?pos=all&amp;stats=pit&amp;lg=all&amp;qual=y&amp;type=1&amp;season=2014&amp;month=0&amp;season1=2011&amp;ind=0&amp;team=0&amp;rost=1&amp;age=0&amp;filter=&amp;players=0</a></p>  <p>There's an ""export data"" button.</p>  <p>How can I get Python to simulate a click and then parse the CSV library? I've tried getting it to work with mechanize but am not having much luck. Can someone provide an example?</p>  <p>I'm working in Python 3.</p>"	"<p>In your case the ""Export Data"" really does not result in visible http request and is pure result of JavaScript code execution.</p>  <p>For this purpose you need to have some sort of web browser.</p>  <p>Check <code>mechanize</code> package and related tutorial like here <a href=""http://wwwsearch.sourceforge.net/mechanize/"" rel=""nofollow"">http://wwwsearch.sourceforge.net/mechanize/</a></p>  <p>It allows emulating web browser and doing things like ""click"" etc.</p>"
23484409	Is it possible to have python read csv returned from javascript?	javascript|python|csv	2014-05-06 01:09:15.520000 UTC	"<p>I'm curious if it's possible to read a csv that's returned from a javascript call?</p>  <p>Specifically, on this page: <a href=""http://www.fangraphs.com/leaders.aspx?pos=all&amp;stats=pit&amp;lg=all&amp;qual=y&amp;type=1&amp;season=2014&amp;month=0&amp;season1=2011&amp;ind=0&amp;team=0&amp;rost=1&amp;age=0&amp;filter=&amp;players=0"" rel=""nofollow"">http://www.fangraphs.com/leaders.aspx?pos=all&amp;stats=pit&amp;lg=all&amp;qual=y&amp;type=1&amp;season=2014&amp;month=0&amp;season1=2011&amp;ind=0&amp;team=0&amp;rost=1&amp;age=0&amp;filter=&amp;players=0</a></p>  <p>There's an ""export data"" button.</p>  <p>How can I get Python to simulate a click and then parse the CSV library? I've tried getting it to work with mechanize but am not having much luck. Can someone provide an example?</p>  <p>I'm working in Python 3.</p>"	"<p>I suggest using <code>selenium</code> (<a href=""https://pypi.python.org/pypi/selenium"" rel=""nofollow noreferrer"">download link</a>), which has very heavy support for javascript. <a href=""http://selenium.googlecode.com/git/docs/api/py/index.html"" rel=""nofollow noreferrer"">All docs here</a>. </p>  <p>Here is a quick example of how you can do that:</p>  <pre><code>from selenium import webdriver  driver = webdriver.Firefox() driver.get(""http://www.priceline.com/"") driver.find_element_by_id(""hotel-btn-submit-retl"").click() driver.close() </code></pre>  <p>From: <a href=""https://stackoverflow.com/questions/18214795/clicking-in-a-online-js-button-with-python/18214892#18214892"">Clicking in a online js button with python</a></p>"
23513163	Conversion of python Lambda to Javascript	javascript|python|lambda	2014-05-07 08:54:27.733000 UTC	<p>I am converting the following code from Python to JS.</p>  <pre><code>lat *= (math.pi / 180.0) lon *= (math.pi / 180.0)  n = lambda x: wgs84_a / math.sqrt(1 - wgs84_e2*(math.sin(x)**2))  x = (n(lat) + alt)*math.cos(lat)*math.cos(lon) y = (n(lat) + alt)*math.cos(lat)*math.sin(lon) z = (n(lat) * (1-wgs84_e2) +alt)*math.sin(lat) </code></pre>  <p>Most of this is no issue at all but I don't get how to convert the n= line with the lambda function into JS.</p>	"<p>JavaScript functions are first-class objects you can create dynamically, so lambdas are just a feature of how the language works.</p>  <p>Here's a rough translation:</p>  <pre><code>var n = function(x) {     return wgs84_a / Math.sqrt(1 - wgs84_e2*Math.pow(Math.sin(x), 2)); }; </code></pre>  <p>Just as with Python's <code>lambda</code>, that expression will <em>create</em> the function and assign it to <code>n</code>, but not call it. The code later will call it via <code>n</code>. It's also a ""closure"" because it will use the variables you've referenced inside it when it's called (it has an enduring reference to the variables and uses their values as of when it's called, not when it's created).</p>  <p>Features:</p>  <ul> <li><p>Declare <code>n</code> using <code>var</code>.</p></li> <li><p>Start a function expression with <code>function</code>.</p></li> <li><p>Arguments to that function are given names within the <code>()</code> after <code>function</code>.</p></li> <li><p>Use the <code>return</code> keyword to return a value from the function.</p></li> <li><p>Use JavaScript's various <code>Math</code> functions, including <a href=""http://www.ecma-international.org/ecma-262/5.1/#sec-15.8.2.13"" rel=""nofollow""><code>Math.pow</code></a> rather than <code>**</code> (JavaScript doesn't have an operator for that).</p></li> </ul>  <p>A function expression like the one above creates the function when the code is reached in the step-by-step execution (just like any other expression). Another alternative is to use a function <em>declaration</em> instead:</p>  <pre><code>function n(x) {     return wgs84_a / Math.sqrt(1 - wgs84_e2*Math.pow(Math.sin(x), 2)); } </code></pre>  <p>This creates the function when execution enters the scope containing it; it happens before any step-by-step code in that scope is executed. (People sometimes call this ""hoisting"" because regardless of where it appears, it's like the declaration was moved -- ""hoisted"" -- to the top of the scope.) It still uses the variables it closes over as of when it's <em>called</em>, not when it's created; it's just another way to create the function.</p>"
23513163	Conversion of python Lambda to Javascript	javascript|python|lambda	2014-05-07 08:54:27.733000 UTC	<p>I am converting the following code from Python to JS.</p>  <pre><code>lat *= (math.pi / 180.0) lon *= (math.pi / 180.0)  n = lambda x: wgs84_a / math.sqrt(1 - wgs84_e2*(math.sin(x)**2))  x = (n(lat) + alt)*math.cos(lat)*math.cos(lon) y = (n(lat) + alt)*math.cos(lat)*math.sin(lon) z = (n(lat) * (1-wgs84_e2) +alt)*math.sin(lat) </code></pre>  <p>Most of this is no issue at all but I don't get how to convert the n= line with the lambda function into JS.</p>	"<p><code>var n = function (x) { return wgs84_a / Math.sqrt(1 - wgs84_e2 * Math.pow(Math.sin(x), 2)) }</code></p>"
23543328	Submitting a form with a javascript target using Python	javascript|python|html|forms	2014-05-08 13:34:32.167000 UTC	"<h1>Background</h1>  <p>I have a HTML form that I am trying to submit using the Python <strong>Requests</strong> module.</p>  <p>This is the HTML for the form:</p>  <pre><code>&lt;form name=""main"" id=""main"" method=""post"" onSubmit=""return validateForm(this);""&gt; </code></pre>  <hr>  <h1>Javascript files involved</h1>  <p>The <strong>validateForm()</strong> function looks like this:</p>  <pre><code>      function validateForm(form)       {         if (form.buttonClicked[0].value == ""delete""){           deleteCount += 1;            if (deleteCount &gt; 1){             return false;           }           if(form.allowValidateOnDelete &amp;&amp; form.allowValidateOnDelete.value == ""true"")           {             deleteCount = 0;             return validate(form);           }           else           {             return true;           }         }         else{           return validate(form);         }       } </code></pre>  <hr>  <p>This is <strong>validate()</strong></p>  <pre><code>function trimAll(form) {   form.forwardedToNumber.value = trim(form.forwardedToNumber.value); }  function validate(form) {     trimAll(form);      for (var i=0; i &lt; form.active.length; i++) {       if (form.active[i].checked) {         if (form.active[i].value == ""false"") {           return true;         }       }     }      if (form.forwardedToNumber.value == """") {         alert(errorText(1000, errorText(2201)));         form.forwardedToNumber.select();         return false;     }      return true; } </code></pre>  <hr>  <h1>Question</h1>  <p>How do I submit this form using Python?</p>  <p>I can't really submit the below example because it doesn't make sense as a URI:</p>  <pre><code>session.request(     'POST',      'https://example.com/return validateForm(this);',      data={'active': 'true'} ) </code></pre>  <p>How I would go about submitting a form which has a target of <code>return function();</code> ?</p>"	"<p>The <code>onSubmit</code> handler should not be confused with the <code>action</code> of the form (i.e. the URL that the data will be posted to). You should see the <code>onSubmit</code> as a trigger that is activated as soon as the user submits the form. If the return value of the handler is false, the form data will not be sent to the server at all.</p>  <p>To do the same using <code>requests</code>, you need to determine what the form's <code>action</code> attribute is. If the form has no <code>action</code> attribute, it will post the data to the same URL as where it got the form in the first place.</p>"
23546376	"Does Python's ""\x00"" exist in javascript?"	javascript|python|node.js	2014-05-08 15:40:03.727000 UTC	"<p>I'm currently working on transitioning from Python to Node.js, but I can't figure out if there is an easy way to add a non-printable character to a string.</p>  <p>In Python it would look something like this:</p>  <pre><code>conn.send(""\x01SomeMoreTextHere"") </code></pre>  <p>But in Javascript I can't seem to find anything simpler than</p>  <pre><code>conn.write(fromCharCode(parseInt(""0x01"")) + ""SomeMoreTextHere"") </code></pre>  <p>Or if you are fine with using decimals, in this specific case it doesn't matter to me, you can skip the parseInt part.</p>  <p>I can't find any other way that happens to be as simple as the Python way, am I not looking hard enough?</p>"	"<blockquote>   <p>Yes, Javascript supports <code>\xdd</code> escape sequences   - Martijn Peters</p> </blockquote>  <p>Looks like the answer to me.</p>  <p><a href=""http://www.javascriptkit.com/jsref/escapesequence.shtml"" rel=""nofollow"">Escape sequences</a> Also MDN: <a href=""https://developer.mozilla.org/en/docs/Web/JavaScript/Guide/Values,_variables,_and_literals#String_literals"" rel=""nofollow"">String literals</a></p>  <ul> <li>hex, octal, unicode...</li> </ul>"
23556873	different answer in javascript and python with large number- Division or mod operator	javascript|python|google-chrome|firefox|largenumber	2014-05-09 04:55:05.927000 UTC	"<p>when i was dealing with some large numbers like,<br> take any random number <code>3289568273632879456235</code> .  </p>  <p>I found that in <code>Chrome</code> or <code>Firefox</code> <code>console</code><br>   <code>3289568273632879456235 % 6 = 0</code><br> but in <code>Python</code> shell<br>  <code>3289568273632879456235 % 6 = 5</code>.  </p>  <p>after that i found that answer from Python is correct.  </p>  <p>so i don't understand why there is different answers.<br> can anybody explain to me.</p>"	"<p>JavaScript uses IEEE floating point math, which is limited in the numbers it can handle.</p>  <p>There is a length discussion here:</p>  <ul> <li><a href=""http://www.informit.com/articles/article.aspx?p=1997934&amp;seqNum=2"" rel=""nofollow noreferrer"">http://www.informit.com/articles/article.aspx?p=1997934&amp;seqNum=2</a></li> <li><a href=""https://stackoverflow.com/questions/588004/is-floating-point-math-broken"">Is floating point math broken?</a></li> </ul>  <p>Python, on the other hand, uses a different system for handling integers, discussed here</p>  <ul> <li><a href=""https://stackoverflow.com/questions/4581842/python-integer-ranges"">Python integer ranges</a></li> </ul>"
23556873	different answer in javascript and python with large number- Division or mod operator	javascript|python|google-chrome|firefox|largenumber	2014-05-09 04:55:05.927000 UTC	"<p>when i was dealing with some large numbers like,<br> take any random number <code>3289568273632879456235</code> .  </p>  <p>I found that in <code>Chrome</code> or <code>Firefox</code> <code>console</code><br>   <code>3289568273632879456235 % 6 = 0</code><br> but in <code>Python</code> shell<br>  <code>3289568273632879456235 % 6 = 5</code>.  </p>  <p>after that i found that answer from Python is correct.  </p>  <p>so i don't understand why there is different answers.<br> can anybody explain to me.</p>"	"<p>This is because javascript has no concept of an integer -- only numbers (which are stored as IEEE floats).  Floats have a finite precision, if you try to make a number more precise than the float can represent, it will be ""truncated"" -- Which is exactly what is happening with your big numbers.  Consider the python ""equivalent"":</p>  <pre><code>&gt;&gt;&gt; int(float(3289568273632879456235)) % 6 0L </code></pre>  <p>Here's a few more interesting tidbits to hopefully make the point a little more clear:</p>  <pre><code>&gt;&gt;&gt; int(float(3289568273632879456235))  # Notice, the different result due to loss of precision. 3289568273632879706112L &gt;&gt;&gt; int(float(3289568273632879456235)) == int(float(3289568273632879456236))  # different numbers, same result due to ""truncation"" True </code></pre>"
23609548	Pass variable from python to javascript	javascript|python|json	2014-05-12 12:50:00.993000 UTC	"<p>i have to variables xx = 38.929787 yy = 22.675781</p>  <p>how can i pass them from python to GLatLng(lat,long) inside the javascript an have lat = xx and long =yy</p>  <pre><code>def pymapjs(self):         """""" Returns complete javacript for rendering map """"""  self.js = """"""\n&lt;script src=\""http://maps.google.com/maps?file=api&amp;amp;v=2&amp;amp;key=%s\"" type=""text/javascript""&gt;&lt;/script&gt;         &lt;script type=""text/javascript""&gt;          //&lt;![CDATA[         function load() {             if (GBrowserIsCompatible()) {               function Point(lat,long,html,icon) {                   this.gpoint = new GMarker(new GLatLng(lat,long),icon);                   this.html = html;                 }   </code></pre>"	"<p>Do this:</p>  <pre><code>self.js = """"""\n&lt;script src=\""http://maps.google.com/maps?file=api&amp;amp;v=2&amp;amp;key=%s\"" type=""text/javascript""&gt;&lt;/script&gt;     &lt;script type=""text/javascript""&gt;      //&lt;![CDATA[     function load() {         if (GBrowserIsCompatible()) {           function Point(lat,long,html,icon) {               this.gpoint = new GMarker(new GLatLng(%f,%f),icon);               this.html = html;             }"""""" % (xx, yy) </code></pre>"
23609900	Mismatch between my form validators (len in python and length in javascript)	python|python-2.7	2014-05-12 13:05:16.597000 UTC	"<p>I am using formencode in the backend side as a validation and form generation package. And on the front end side I am using require.js.</p>  <p>Backend:</p>  <pre><code>class RatingOnLocation(Schema):     filter_extra_fields = True     allow_extra_fields = True      rating_text = validators.UnicodeString(not_empty=True, max=2000, strip=True)     rating = validators.Int(not_empty=True, min=1, max=5) </code></pre>  <p>front-end: </p>  <pre><code>init = function () {          // Add Validation rules to the review form         $form.validate({             rules: {                 rating_text: {                     required: true,                     maxlength: 2000                 } </code></pre>  <p>The validation is somehow messed since through the debugging the length of the text in javascript gives 2000 whereas the len in python gives 2012. </p>  <p>Do you know what is going on here? I thought maybe it is an encoding issue</p>  <p>By the way I am using python 2.7</p>"	
23650563	Python Flask Jinja2 webpage does not full refresh on location.reload(true) HTML Javascript	javascript|python|html|flask|jinja2	2014-05-14 09:24:19.303000 UTC	"<p>I've been a while looking for that answer but I don't find any like this.</p>  <p>This is my webpage, for my final college project. It's a Python Flask Jinja2 Html Javascript Web Application. It creates events and then you can see photos in real time Instagram in locations over the world. This is the <a href=""http://postimg.org/image/8o0nig863/"" rel=""nofollow"">index</a> </p>  <p>But when I click the submit button I make a <code>event.preventDefault()</code> because I want to make my own actions and finally I want a window.location.reload(true) so I can see the new event added as you can see the first ones in the image up.</p>  <p>But the result of the <code>window.location.reload(true)</code> is this, just half of the page gets refreshed. <a href=""http://postimg.org/image/mikc3nf4t/"" rel=""nofollow"">here</a></p>  <p>This is the Javascript code:</p>  <pre><code>$(document).ready(function () {     $('#formEvent').submit(function (event) {         event.preventDefault();         createEvent();     }); }); function createEvent() {     var name = $(""#inputEventName"").val().replaceAll("" "", ""%20"");     var lat = parseFloat($(""#inputLat"").val());     var lng = parseFloat($(""#inputLong"").val());     var rad = parseInt($(""#inputRad"").val());     var desc = $(""#inputEventDesc"").val().replaceAll("" "", ""%20"");     var init = $(""#dp1"").val().replaceAll(""/"", ""-"");     var end = $(""#dp2"").val().replaceAll(""/"", ""-"");     var url = ""http://insideone.ngrok.com/createEvent/"" + name + ""/"" + lat + ""/"" + lng + ""/"" + rad + ""/"" + init + ""/"" + end + ""/"" + desc;     $.get(url,         function (result) {             if (result == ""OK"") cleanFormAndHide();             else alert(""Some error happened"");     });     return true; } function cleanFormAndHide(){ //you can see that I tried differents ways     window.location.reload(true);     //$('#formEvent').unbind('submit').submit();     //window.location.replace(""""); } </code></pre>  <p>And the template of the index page:</p>  <pre><code>//we first have the map and more html pure code  &lt;div id=""map-canvas"" style=""height: 450px; width: 100%"" class=""col-lg-12""&gt;&lt;/div&gt;  //... //and then the html jinja2 flask code  &lt;div class=""row mt centered""&gt;     {% for item in events %}     {% if item.isActive %}         &lt;div class=""col-lg-4"" style=""text-align: center""&gt;             &lt;a class=""zoom"" target=""_blank"" href=""event/{{item.id}}""&gt;                 &lt;img style=""vertical-align: middle; display: inline-block"" class=""img-responsive"" src=""{{ item.latestpic }}""/&gt;             &lt;/a&gt;             &lt;p&gt;{{item.name}}&lt;/p&gt;         &lt;/div&gt;     {% endif %}     {% endfor %} &lt;/div&gt; </code></pre>  <p>And the Python at index:</p>  <pre><code>@app.route('/', methods=['GET']) def index():     v_res = c.query('geoEvents', 'events', descending=True)     content = []     link = """"     for res in v_res:         pic = c.query(res[1][4], res[1][5], descending=True, limit=4)         for p in pic:             if isActiveUrl(p[1][0]):                 link = p[1][3]                 break             else:                 deactivateUrl(p)     if pic.rows_returned &gt; 0:         content.append({'name': res[1][0], 'description': res[1][4], 'isActive': res[1][2], 'isFinished': res[1][3],                         'designDocument': res[1][4], 'viewName': res[1][5], 'latestpic': link, 'id': res[2]})     return render_template('index.html', events=content) </code></pre>  <p>So that's why I think a location.reload(true) should fetch all data again. I don't know why just the flask jinja2 part of the html is not getting reloaded.</p>  <p>Any idea or suggestion or another way of doing it?</p>  <p>Thanks a lot!</p>"	"<p>Not enough points to comment, so It's a coinflip answer :p Have you tried : </p>  <pre><code>window.location.href=window.location.href </code></pre>  <p>(Saw here : <a href=""https://stackoverflow.com/questions/2405117/difference-between-window-location-href-window-location-href-and-window-location"">Difference between window.location.href=window.location.href and window.location.reload()</a>) ?</p>  <p>In addition, have you checked possible errors logged in flask console AND/OR devTools console (F12) ? </p>  <p><strong>EDIT :</strong> I maybe found the solution to your problem : in facts, you don't need to use window.reload or .location, as you're making an ajax get request to the page on submit button click (If I got it well) that reloads an element. </p>  <p>Still, you don't see any updates as you don't indicate, in your success function, where to put data response in your html, disabling jinja2 to loop over it (as far as i got it when testing similar code) So try to change your jquery get request by : </p>  <pre><code>$.get('/url_where_to_get_data').done(      function(data){          $('.row mt centered').html(data); )}; </code></pre>  <p>No need to call for page reload then, you could normally loop through data with jinja. In addition, I would advice you in order to gain speed and to avoid template repetition to create a dedicated view from where to get 'refreshed' data like : </p>  <pre><code>@app.route('/refresh') def refresh(): # Db query and data formatting return json.dumps(data)  </code></pre>  <p>Let me know if it worked ;) </p>"
23666591	angularJS & web2py: calling python from ng/javascript/html	javascript|python|ajax|angularjs|web2py	2014-05-14 23:03:12.347000 UTC	"<p>I'm using AngularJS (mainly the client side) and web2py (mainly the server side)together in an app. </p>  <p>I have an issue now.</p>  <p>At a point of the program, I use AngularJS to get some data from the client and these data are store in an AngularJS variable. I planed to use $http.post to submit these data to database directly, but <a href=""https://stackoverflow.com/questions/23664468/angularjs-http-post-not-working-failed-to-load-resource-request-header-field/23664586?noredirect=1#comment36352056_23664586"">it didn't work</a> due to cross-orign problem. </p>  <p>Right now I'm trying to pass these data(they are in JSON format) back to web2py and let web2py insert these data to database.(similar to submitting a SQLFORM).</p>  <p>Is there anyway I could pass these data as an argument to an web2py function and invoke that function within javascript code?</p>  <p>Possible approach in my mind: 1) Since I could write python in html using {{}}, and I could write html in javascript, could I write python code within javascript using something like: <code>document.write({{python code}})</code> ?</p>  <p>I tried this but whatever html I write it goes to a brand new html page. I also tried <code>document.getElementById('testDiv').write(""&lt;p&gt;&lt;/p&gt;"");</code> But it doesn't work.</p>  <p>2)use ajax, I'm not familiar with ajax, any example will be really appreciated!</p>  <p>Any thoughts?</p>  <p>Thank you all!</p>"	"<p>After hours of struggles and countless google, here's my workaround solution:</p>  <p>Main problem: the data are stored in AngularJS but AngulatJS could not submit data to database through API due to cross-orign issue. But Web2py could submit data to database using sqlform.</p>  <p>My approach: 1.)When the user click the submit button, invoke 'ng-click=""submitBtn()""'. submitBtn() is a function of the ng-controller, which has access to the data. 2.)In submitBtn(), the function first write data into web2py's sqlform through </p>  <pre><code>document.getElementById('inputId').value=$scope.data; </code></pre>  <p>then the function click the sqlform submit button through</p>  <pre><code>document.getElementById('submitBtn').click(); </code></pre>  <p>It took me a lot time to figure out those element ids of fields in web2py's auto-generated sqlform.  The way to find them is using developers' inspect element tool in a browser and see the source code directly.</p>  <p>Hope this will help someone will face the same issue!</p>"
23666591	angularJS & web2py: calling python from ng/javascript/html	javascript|python|ajax|angularjs|web2py	2014-05-14 23:03:12.347000 UTC	"<p>I'm using AngularJS (mainly the client side) and web2py (mainly the server side)together in an app. </p>  <p>I have an issue now.</p>  <p>At a point of the program, I use AngularJS to get some data from the client and these data are store in an AngularJS variable. I planed to use $http.post to submit these data to database directly, but <a href=""https://stackoverflow.com/questions/23664468/angularjs-http-post-not-working-failed-to-load-resource-request-header-field/23664586?noredirect=1#comment36352056_23664586"">it didn't work</a> due to cross-orign problem. </p>  <p>Right now I'm trying to pass these data(they are in JSON format) back to web2py and let web2py insert these data to database.(similar to submitting a SQLFORM).</p>  <p>Is there anyway I could pass these data as an argument to an web2py function and invoke that function within javascript code?</p>  <p>Possible approach in my mind: 1) Since I could write python in html using {{}}, and I could write html in javascript, could I write python code within javascript using something like: <code>document.write({{python code}})</code> ?</p>  <p>I tried this but whatever html I write it goes to a brand new html page. I also tried <code>document.getElementById('testDiv').write(""&lt;p&gt;&lt;/p&gt;"");</code> But it doesn't work.</p>  <p>2)use ajax, I'm not familiar with ajax, any example will be really appreciated!</p>  <p>Any thoughts?</p>  <p>Thank you all!</p>"	"<p>ok so you got me lost for a second there, lets see if i got it right 1- angular as your frontend 2- python as your backend</p>  <p>3- you are rendering an html document in  python and delivering it to the browser 4- since python template language uses {{}} as delimiter am assuming you changed the angulars delimiters too</p>  <p>either using ajax or reload you'll need to provide a python post handler script. that takes your data and makes the DB update. if this is going to be a pattern and you are going to be making AJAX CRUD operations, you should use angular resources ngResource if not a simple</p>  <pre><code>$http.post(url,data).success(function(response){}) </code></pre>  <p><a href=""https://docs.angularjs.org/api/ng/service/"" rel=""nofollow"">https://docs.angularjs.org/api/ng/service/</a>$http#post</p>  <p>where url would be your form submission handler url. if you where to use a form you'll need to set the target to an iframe hidden in your page and the response should a script tag that gets the scope pertinent to your controller and let him know the result of the operation. this is an old approach, but handy when it comes to send information to sites that don't allow CORS which by the way might be the solution to your problem, when storing data directly to your db, you might just need to enable CORS headers in your storage engine API and that should allow you to submit information even when coming from a different domain</p>"
23674744	What is the equivalent of Python any() and all() functions in JavaScript?	javascript|arrays|list	2014-05-15 09:49:19.070000 UTC	"<p>Python has built in functions <code>any()</code> and <code>all()</code>, which are applied on a list (array in JavaScript) as following-</p> <ul> <li><code>any()</code>: Return <code>True</code> if any element of the iterable is true. If the iterable is empty, return <code>False</code>.</li> <li><code>all()</code>: Return <code>True</code> if all elements of the iterable are true (or if the iterable is empty).</li> </ul> <p>We can create our customized functions for above, but please let me know if there any equivalent built-in functions available in JavaScript.</p>"	"<p>The <a href=""https://docs.python.org/library/functions.html#all"" rel=""noreferrer"">Python documentation</a> gives you pure-python equivalents for both functions; they are trivial to translate to JavaScript:</p>  <pre class=""lang-js prettyprint-override""><code>function any(iterable) {     for (var index = 0; index &lt; iterable.length; index++) {         if (iterable[index]) return true;     }     return false; } </code></pre> <p>and</p> <pre class=""lang-js prettyprint-override""><code>function all(iterable) {     for (var index = 0; index &lt; iterable.length; index++) {         if (!iterable[index]) return false;     }     return true; } </code></pre> <p>Recent browser versions (implementing ECMAScript 5.1, Firefox 1.5+, Chrome, Edge 12+ and IE 9) have native support in the form of <a href=""https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/some"" rel=""noreferrer""><code>Array.some</code></a> and <a href=""https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/every"" rel=""noreferrer""><code>Array.every</code></a>; these take a callback that determines if something is 'true' or not:</p> <pre class=""lang-js prettyprint-override""><code>some_array.some((elem) =&gt; !!elem ); some_array.every((elem) =&gt; !!elem ); </code></pre> <p>The Mozilla documentation I linked to has polyfills included to recreate these two methods in other JS implementations.</p>"
23674744	What is the equivalent of Python any() and all() functions in JavaScript?	javascript|arrays|list	2014-05-15 09:49:19.070000 UTC	"<p>Python has built in functions <code>any()</code> and <code>all()</code>, which are applied on a list (array in JavaScript) as following-</p> <ul> <li><code>any()</code>: Return <code>True</code> if any element of the iterable is true. If the iterable is empty, return <code>False</code>.</li> <li><code>all()</code>: Return <code>True</code> if all elements of the iterable are true (or if the iterable is empty).</li> </ul> <p>We can create our customized functions for above, but please let me know if there any equivalent built-in functions available in JavaScript.</p>"	<p>You can use lodash.</p>  <p><code>lodash.every</code> is equivalent to <code>all</code></p>  <p><code>lodash.some</code> is equivalent to <code>any</code></p>
23674744	What is the equivalent of Python any() and all() functions in JavaScript?	javascript|arrays|list	2014-05-15 09:49:19.070000 UTC	"<p>Python has built in functions <code>any()</code> and <code>all()</code>, which are applied on a list (array in JavaScript) as following-</p> <ul> <li><code>any()</code>: Return <code>True</code> if any element of the iterable is true. If the iterable is empty, return <code>False</code>.</li> <li><code>all()</code>: Return <code>True</code> if all elements of the iterable are true (or if the iterable is empty).</li> </ul> <p>We can create our customized functions for above, but please let me know if there any equivalent built-in functions available in JavaScript.</p>"	"<p>Build-in function <code>some</code> is equivalent to any I suppose.</p>  <pre><code>const array = [1, 2, 3, 4, 5];  const even = function(element) {   // checks whether an element is even   return element % 2 === 0; };  console.log(array.some(even)); // expected output: true </code></pre>  <p>You can read more in <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some"" rel=""nofollow noreferrer"">the docs</a></p>"
23729366	does mechanize python library have the ability to wait until javascript has dynamically loaded content before getting the page contents	javascript|python|dynamic	2014-05-19 03:38:23.243000 UTC	"<p>I would like to scrape a site which dynamically loads content using javascript.</p>  <p>I would like to scrape the content the javascript loads. </p>  <p>I know there are ways of getting the javascript to load (ghost or pywt4 webkit) however I have not been able to get pyqt4 installed and recognised by my ipython installation.</p>  <p>Therefore since I was using requests (and have used mechanize) does requests have the ability to scrape a pages content after javascript has finished dynamically loading page content (i.e. divs, img, href, links etc)</p>"	"<p>As far as I know, mechanize does not support that, but there is an easy way of doing it with <a href=""http://selenium-python.readthedocs.org/"" rel=""nofollow"">selenium</a>:</p>  <pre><code>from selenium import webdriver  driver = webdriver.Firefox() driver.get(url) driver.set_window_position(0, 0) driver.set_window_size(100000, 200000) driver.execute_script(""window.scrollTo(0, document.body.scrollHeight);"") time.sleep(5) # wait to load  # now print the response print driver.page_source </code></pre>  <p>You will have to install Firefox too in this case.</p>"
23729581	can requests python library force a page to load all javascript dynamic content before storing the contents of that page	javascript|python	2014-05-19 04:09:56.217000 UTC	<p>Beautifulsoup can often be used to (1) store the contents of a page in a variable and  (2) parse elements in a webpage.</p>  <p>However Beautifulsoup on it's own cannot open - password protected HTTP error 403 pages. So I used requests for this task.</p>  <p>Now I am wondering does the Requests library have the ability to Force the javascript on a page to load?</p>  <p>I am using python2.7</p>  <p>Does requests have the ability to <strong>requests.open(some url).forceJavascriptLoad</strong></p>	"<p>No. Requests doesn't have the ability to execute javascript in any way. You need a so-called ""headless"" web browser to do what you want. <a href=""https://gist.github.com/evandrix/3694955"" rel=""nofollow"">Here</a> is a list of some of them. As an advice I recommend you to try the <a href=""http://phantomjs.org"" rel=""nofollow"">PhantomJS</a>, although it is not written in Python, it has several advantages over the others:</p>  <ol> <li>It is easy to setup and use</li> <li>Actively developed and not abandoned like a lot of other headless browsers</li> <li>Has really good JavaScript support</li> <li>Is fast</li> <li>Provides precompiled binaries in case you have problems with compiling stuff</li> </ol>  <p>I tried a lot of headless browsers by myself and I was only happy with PhantomJS. If you still want to try the Python-based headless browser you can give a <a href=""http://jeanphix.me/Ghost.py/"" rel=""nofollow"">Ghost</a> a try.</p>"
23741007	Parsing HTML page containing Javascript in Python	javascript|parsing|python-2.7|lxml	2014-05-19 14:57:35.210000 UTC	"<p>I am parsing a HTML Page using <strong>Python</strong> + <strong>lxml</strong> <strong>etree</strong> and I am able to extract all data present within HTML tags. Few static data is embedded within javascript and I am unable to parse it. E.g</p>  <pre><code> &lt;td valign=""top"" width=""80%""&gt;     &lt;script language=""javascript"" type=""text/javascript""&gt;       function AddItem() {      .     .     .     if (st.value == 'VAL1') {     strValues = document.getElementById('Element1').value;                         }     else if (st.value == 'VAL2') {     strValues = document.getElementById('Element2').value;                         }     else if (st.value == 'VAL3') {     strValues = document.getElementById('Element3').value;                         }     .     .     .     &lt;/script&gt;   &lt;/td&gt; </code></pre>  <p>I would like to extract data as follows</p>  <pre><code>{ VAL1 : Element1 , VAL2 : Element2 , VAL3 : Element3 } </code></pre>  <p>Let me know if this is possible using python</p>"	
23811768	Passing parameters from python/flask to javascript	javascript|python|flask	2014-05-22 15:55:22.050000 UTC	"<p>I have a python/flask application that I'm creating. I am also using javascript on some parts of it. The current setup I have is that when I render the template, I pass along any additional javascript that needs to be on the page.</p>  <pre><code>@app.route('/index') def index():     return render_template('index.html',     more_js = '/static/js/example.js',     more_js_script = 'example_js_to_execute();') </code></pre>  <p>It ends up on the page that more_js is the src of a script tag and more_js_script is executed in a script tag. Is there a better way to do this? There's also times I need to pass a parameter to the more_js_script that is a string, but because of the formatting</p>  <pre><code>more_js_script = 'example_js_to_execute('parameter'); </code></pre>  <p>will end up like</p>  <pre><code>&lt;script&gt;example_js_to_execute(&amp;#39;parameter&amp;#39;);&lt;/script&gt; </code></pre>  <p>on the actual page and not execute correctly. Do you have any tips on how to restructure what I'm doing or execute what I have with parameters?</p>"	"<p>Make <code>more_js_script</code> not to be automatic escaping.</p>  <p><a href=""http://jinja.pocoo.org/docs/templates/#working-with-automatic-escaping"" rel=""nofollow"">http://jinja.pocoo.org/docs/templates/#working-with-automatic-escaping</a></p>"
23949395	How to pass a javascript array to a python script using flask [using flask example]	javascript|python|ajax|arrays|flask	2014-05-30 07:35:56.033000 UTC	"<p>I am trying to get the <a href=""http://flask.pocoo.org/docs/patterns/jquery/"" rel=""nofollow noreferrer"">flask/jquery/ajax example</a> working for my specific case, but I am coming up short every time. I am aware this sort of question has been asked several times, but the answers do not help me (Yes, I am new to this).</p>  <p>The example passes a string from javascript to python. I would like to pass an array over. The web suggests that this is possible. Here is what I have:</p>  <p><strong>HTML/Flask Template:</strong></p>  <pre><code>{% extends ""layout.html"" %} {% block title %}Test{% endblock %} {% block content %}     &lt;div&gt;       &lt;h1&gt;Flask Jquery Test&lt;/h1&gt;       &lt;div&gt;         &lt;input type=""button"" value=""Transfer"" id=""button"" /&gt;       &lt;/div&gt;       &lt;div&gt;         Wordlist&lt;br /&gt;         &lt;select multiple=""multiple"" id=""wordlist"" size=""5""&gt;             &lt;option&gt;Volvo&lt;/option&gt;             &lt;option&gt;Audi&lt;/option&gt;             &lt;option&gt;BMW&lt;/option&gt;             &lt;option&gt;Mercedes&lt;/option&gt;             &lt;option&gt;Toyota&lt;/option&gt;         &lt;/select&gt;         &lt;span id=""result""&gt;&lt;/span&gt;       &lt;/div&gt;     &lt;/div&gt; {% endblock %} </code></pre>  <p><strong>JS Script:</strong></p>  <pre><code>$(document).ready(function() {     $(""#button"").bind('click', function(){         //Get all words from list         var list = [];         $(""#wordlist option"").each(function(){             list.push($(this).val());         });         //var list = $( ""#wordlist option"" ).val();         console.log(list);         $.getJSON($SCRIPT_ROOT + '/_array2python', {             wordlist: list.toString()         }, function(data){             console.log(data.result)             $( ""#result"" ).text(data.result);         });         return false;     }); }); </code></pre>  <p><strong>Python:</strong></p>  <pre><code>@app.route('/') def start_page():     return render_template('index.html')  @app.route('/_array2python') def array2python():     wordlist = request.args.get('wordlist', [])     return jsonify(result=wordlist)  @app.errorhandler(404) def page_not_found(e):     """"""Return a custom 404 error.""""""     return 'Sorry, nothing at this URL.', 404 </code></pre>  <p>Now, when passing into the <code>list</code> variable a string (e.g. <code>var list = $( ""#wordlist option"" ).val();</code> ), this code works just fine. However, when trying it with an array, it only ever passes the backup value (i.e. <code>[]</code>).</p>  <p><strong>Does this mean, I can only pass strings to python? How would I best pass a javascript array to python?</strong></p>  <p>Thanks everyone for your help!</p>  <p>P.S. Maybe it is important to mention. I am using google app engine to host this code.</p>  <p>=================================================================================</p>  <p>FYI, these are the SO sites that I tried to follow and they did not help me:</p>  <p><a href=""https://stackoverflow.com/questions/18796921/passing-javascript-array-to-flask"">Passing Javascript Array to Flask</a>  (Excellent and very detailed answer, but can't get it to work)</p>  <p><a href=""https://stackoverflow.com/questions/15537254/passing-data-from-javascript-into-flask"">Passing data from javascript into Flask</a></p>  <p><a href=""https://stackoverflow.com/questions/14778167/return-data-from-html-js-to-python/14778465#14778465"">Return data from html/js to python</a></p>"	"<p>Here is another way to pass JS Array to python :</p>  <p>JS Side:</p>  <pre><code>$.getJSON($SCRIPT_ROOT + '/_array2python', {         wordlist: JSON.stringify(list)     }, function(data){         console.log(data.result)         $( ""#result"" ).text(data.result);     }); </code></pre>  <p>Python Side:</p>  <pre><code>import json  @app.route('/_array2python') def array2python():     wordlist = json.loads(request.args.get('wordlist'))     # do some stuff     return jsonify(result=wordlist) </code></pre>  <p><em>As far as I know</em>, strings are the only way to pass array from client to server.</p>"
23966078	How to convert JavaScript dictionary into Python syntax	javascript|python	2014-05-31 03:23:42.227000 UTC	"<p>Writing out <code>javascript</code> dictionary from inside of <code>JavaScript</code>- enabled application (such as Adobe)  into external .jsx file (using <code>dict.toSource()</code>) the context of resulted dictionary looks like:</p>  <pre><code>({one:""1"", two:""2""}) </code></pre>  <p>(Please note that dictionary keys are written as they are the variables name (which is not true). A next step is to read this .jsx file with Python. I need to find a way to convert <code>({one:""1"", two:""2""})</code> into Python dictionary syntax such as:</p>  <pre><code>{'one':""1"", 'two':""2""} </code></pre>  <p>It has been already suggested that instead of using <code>JavaScript</code>'s built-in <code>dict.toSource()</code> it would make more sense to use <code>JSON</code> which would write a dictionary content in similar to <code>Python</code> syntax. But unfortunately using <code>JSON</code> is not an option for me. I need to find a way to convert <code>({one:""1"", two:""2""})</code> into <code>{'one':""1"", 'two':""2""}</code> using Python alone. Any suggestions on how to achieve it? Once again, the problem mostly in dictionary keys syntax which inside of Python look like variable names instead of strings-like dictionary keys names:</p>  <pre><code>one vs ""one"" </code></pre>  <h1>EDITED LATER:</h1>  <p>Here is the content of the output.txt file as a result of <code>JavaScript</code> dictionary exported from inside of <code>JaveScript</code>. The goal is to read the content of output.txt file into Python and convert it to Python dictionary. Please keep in mind that the dictionary is only here that simple. In real world scenario it will be a MegaByte long with many nested keys/values.</p>  <p>Once again, the content of output.txt:</p>  <pre><code>({one:""1"", two:""2""}) </code></pre>  <p>We need to transform it into Python syntax dictionary (it is fine if we use JSON if it is used in Python):</p>  <pre><code>{'one':'1', 'two':'2'} </code></pre>"	"<p>While working in <code>JavaScript</code> I've noticed that its built-in <code>.toSource()</code> method will write key dictionary properly enclosed in quotes <code>""</code>dict key name<code>""</code> if that dictionary key includes a non-letter character in its name such as a white space, comma, period, a dollar sign and etc. Example:</p>  <p>Example <code>JavaScript</code>:</p>  <pre><code>var dictVar = {'one':'1','.two':'2', 'three,':3, 'fo ur':4,""five"":""five""}; mySaveFile = new File('/my/path/to/JavaDictToPython.txt');     mySaveFile.open(""w"",""TEXT"",""????""); mySaveFile.write(dictVar.toSource()); mySaveFile.close(); </code></pre>  <p>A dictionary will be written to file as:</p>  <pre><code>({one:""1"", "".two"":""2"", ""three,"":3, ""fo ur"":4, five:""five""}) </code></pre>"
23966078	How to convert JavaScript dictionary into Python syntax	javascript|python	2014-05-31 03:23:42.227000 UTC	"<p>Writing out <code>javascript</code> dictionary from inside of <code>JavaScript</code>- enabled application (such as Adobe)  into external .jsx file (using <code>dict.toSource()</code>) the context of resulted dictionary looks like:</p>  <pre><code>({one:""1"", two:""2""}) </code></pre>  <p>(Please note that dictionary keys are written as they are the variables name (which is not true). A next step is to read this .jsx file with Python. I need to find a way to convert <code>({one:""1"", two:""2""})</code> into Python dictionary syntax such as:</p>  <pre><code>{'one':""1"", 'two':""2""} </code></pre>  <p>It has been already suggested that instead of using <code>JavaScript</code>'s built-in <code>dict.toSource()</code> it would make more sense to use <code>JSON</code> which would write a dictionary content in similar to <code>Python</code> syntax. But unfortunately using <code>JSON</code> is not an option for me. I need to find a way to convert <code>({one:""1"", two:""2""})</code> into <code>{'one':""1"", 'two':""2""}</code> using Python alone. Any suggestions on how to achieve it? Once again, the problem mostly in dictionary keys syntax which inside of Python look like variable names instead of strings-like dictionary keys names:</p>  <pre><code>one vs ""one"" </code></pre>  <h1>EDITED LATER:</h1>  <p>Here is the content of the output.txt file as a result of <code>JavaScript</code> dictionary exported from inside of <code>JaveScript</code>. The goal is to read the content of output.txt file into Python and convert it to Python dictionary. Please keep in mind that the dictionary is only here that simple. In real world scenario it will be a MegaByte long with many nested keys/values.</p>  <p>Once again, the content of output.txt:</p>  <pre><code>({one:""1"", two:""2""}) </code></pre>  <p>We need to transform it into Python syntax dictionary (it is fine if we use JSON if it is used in Python):</p>  <pre><code>{'one':'1', 'two':'2'} </code></pre>"	"<p><a href=""https://stackoverflow.com/questions/23966078/how-to-convert-javascript-dictionary-into-python-syntax#comment36927178_23966078"">One of the comments</a> suggested using <a href=""http://deron.meranda.us/python/demjson/docs"" rel=""nofollow noreferrer"">demjson</a>. This does indeed work and seems a better solution.</p>  <pre><code>import demjson demjson.decode('{one:""1"", two:""2""}') </code></pre>  <p>Outputs:</p>  <pre><code>{u'two': u'2', u'one': u'1'} </code></pre>"
23966078	How to convert JavaScript dictionary into Python syntax	javascript|python	2014-05-31 03:23:42.227000 UTC	"<p>Writing out <code>javascript</code> dictionary from inside of <code>JavaScript</code>- enabled application (such as Adobe)  into external .jsx file (using <code>dict.toSource()</code>) the context of resulted dictionary looks like:</p>  <pre><code>({one:""1"", two:""2""}) </code></pre>  <p>(Please note that dictionary keys are written as they are the variables name (which is not true). A next step is to read this .jsx file with Python. I need to find a way to convert <code>({one:""1"", two:""2""})</code> into Python dictionary syntax such as:</p>  <pre><code>{'one':""1"", 'two':""2""} </code></pre>  <p>It has been already suggested that instead of using <code>JavaScript</code>'s built-in <code>dict.toSource()</code> it would make more sense to use <code>JSON</code> which would write a dictionary content in similar to <code>Python</code> syntax. But unfortunately using <code>JSON</code> is not an option for me. I need to find a way to convert <code>({one:""1"", two:""2""})</code> into <code>{'one':""1"", 'two':""2""}</code> using Python alone. Any suggestions on how to achieve it? Once again, the problem mostly in dictionary keys syntax which inside of Python look like variable names instead of strings-like dictionary keys names:</p>  <pre><code>one vs ""one"" </code></pre>  <h1>EDITED LATER:</h1>  <p>Here is the content of the output.txt file as a result of <code>JavaScript</code> dictionary exported from inside of <code>JaveScript</code>. The goal is to read the content of output.txt file into Python and convert it to Python dictionary. Please keep in mind that the dictionary is only here that simple. In real world scenario it will be a MegaByte long with many nested keys/values.</p>  <p>Once again, the content of output.txt:</p>  <pre><code>({one:""1"", two:""2""}) </code></pre>  <p>We need to transform it into Python syntax dictionary (it is fine if we use JSON if it is used in Python):</p>  <pre><code>{'one':'1', 'two':'2'} </code></pre>"	"<p><strong>With trivial objects containing no enclosed objects</strong>, this is a basic string manipulation problem.  </p>  <p>As soon as you have a compound object, the code I'll show you will fail. </p>  <p>Let's fire up Python 2.7 and use your example string:</p>  <p><code>&gt;&gt;&gt; x='({one:""1"", two:""2""})'</code></p>  <p>Now what you want is a dict d... </p>  <p>What do we know about dict?</p>  <p>Well, a dict can be made from a list of (key, value) ""2-ples"", by which I mean a list of two element lists as opposed to a list of python tuple read-only lists.</p>  <p>Each tuple is a representation of a property like <code>one:""1""</code> </p>  <p>First, we need to reduce x to a substring that contains the desired information.</p>  <p>Clearly the parenthesis and brackets are superfluous, so we can write:</p>  <pre><code>&gt;&gt;&gt; left = x.find(""{"") &gt;&gt;&gt; right = x.find(""}"") &gt;&gt;&gt; y = x[left+1:right] </code></pre>  <p>Here, the <code>String.find()</code> method finds the first index of the search string parameter.</p>  <p>The notation <code>x[n:m]</code> is a substring of the n-th through the m-1st character of x, inclusive.</p>  <p>Obtaining:</p>  <pre><code>&gt;&gt;&gt; y 'one:""1"", two:""2""' </code></pre>  <p>That's just a string, not a tuple, but it can be made a tuple if we split on comma.</p>  <pre><code>&gt;&gt;&gt; z = y.split("","") </code></pre>  <p>Obtaining:</p>  <pre><code>&gt;&gt;&gt; z ['one:""1""', ' two:""2""'] </code></pre>  <p>Now each of these strings represents a property, and we need to tease out the key and value.</p>  <p>We can use a <a href=""https://docs.python.org/2/tutorial/datastructures.html"" rel=""nofollow"">list comprehension (see tutorial 5.1.4 if unfamiliar)</a> to do that.</p>  <pre><code>&gt;&gt;&gt; zz = [ (s[0:s.find("":"")].strip(),s[s.find('""')+1:-1].strip()) for s in z] </code></pre>  <p>Where once again we use <code>find()</code> to get the indexes of the colon and quote.  </p>  <p>Here we also use strip() to strip out the whitespace that will otherwise creep in.</p>  <p>This step obtains:</p>  <pre><code>&gt;&gt;&gt; zz [('one', '1'), ('two', '2')] </code></pre>  <p>Which is almost what we wanted.</p>  <p>Now just </p>  <blockquote>   <blockquote>     <blockquote>       <p>d = dict(zz)</p>     </blockquote>   </blockquote> </blockquote>  <p>And it is done!</p>  <pre><code>&gt;&gt;&gt; d {'two': '2', 'one': '1'} </code></pre>  <p>Note that dict does not preserve the order of keys.</p>"
23991788	Scraping DATA from Javascript using SCRAPY and PYTHON	javascript|python|scrapy	2014-06-02 09:54:52.410000 UTC	"<p>I want to scrap data regarding all movies from cbfcindia.</p>  <p>1) In SEARCH BOX, if Title = ""a"" all movies beginning from ""a"" are populated, (in URL, va=a&amp;Type=search)  <a href=""http://cbfcindia.gov.in/html/uniquepage.aspx?va=a&amp;Type=search"" rel=""nofollow"">http://cbfcindia.gov.in/html/uniquepage.aspx?va=a&amp;Type=search</a></p>  <p>2) A list of movies are populated in a table, now this is JAVASCRIPT HERE, if I click on first movie, I enter details of it, and I wish to scrape all these details for all the movies.  But I am unable to do it even for a single movie.</p>  <p>3) My Observation: in source there is below function:</p>  <pre><code>function __doPostBack(eventTarget, eventArgument) {     if (!theForm.onsubmit || (theForm.onsubmit() != false)) {         theForm.__EVENTTARGET.value = eventTarget;         theForm.__EVENTARGUMENT.value = eventArgument;         theForm.submit();     } } </code></pre>  <p>and we need to pass the parameters based on JS. But I have no idea how it can be done. </p>  <p><strong>items.py</strong></p>  <pre><code>from scrapy.item import Item, Field  class CbfcItem(Item):     MovieName = Field()     MovieLanguage = Field()     Roffice = Field()     CertificateNo = Field()     CertificateDate = Field()     Length = Field()     NameofProducer = Field()     #pass </code></pre>  <p><strong>cbfcspider.py</strong></p>  <pre><code>from cbfc.items import CbfcItem  class MySpider(BaseSpider):     name = 'cbfc'     allowed_domains= [""http://cbfcindia.gov.in/""]     start_urls = [""http://cbfcindia.gov.in/html/uniquepage.aspx?va=a&amp;Type=search""]      def parse(self, response):         hxs = HtmlXPathSelector(response)         titles = hxs.select(""//tbody"")    #Check         print titles         items = []         for titles in titles:             print ""in FOR loop""             item = CbfcItem()             item [""MovieName""] = hxs.path('//*[@id=""lblMovieName""]/text()').extract()             item [""MovieLanguage""] = hxs.path('//*[@id=""lblLanguage""]').extract()             item [""Roffice""] = hxs.path('//*[@id=""lblRegion""]').extract()             item [""CertificateNo""] = hxs.path('//*[@id=""lblCertNo""]').extract()             item [""CertificateDate""] = hxs.path('//*[@id=""Label1""]').extract()             item [""Length""] = hxs.path('//*[@id=""lblCertificateLength""]').extract()             item [""NameofProducer""] = hxs.path('//*[@id=""lblProducer""]').extract()             items.append(item)                       print ""this is ITEMS""         return items         print ""End of FOR"" </code></pre>"	"<p>If you look deeper into source each link has following markup:</p>  <pre><code>&lt;a id=""DGMovie_ctl03_lnk"" href=""javascript:__doPostBack('DGMovie$ctl03$lnk','')""&gt;AGNI PARIKSHAYA&lt;/a&gt; </code></pre>  <p>Now you know how this javascript function is actually called, you have value of event target and event argument. To make sure that you are on right track you can also check what happens by investigating page with developer tools, if you are using chrome remember to check ""preserve log"" button. You will see first argument to postback in href as EVENTTARGET. </p>  <p>Following xpath with regular expressions will give you all postback arguments:</p>  <pre><code>sel.xpath(""//*[contains(@id,'DGMovie')]/@href"").re(""doPostBack\(\'([^']+)"") </code></pre>  <p>You need to make POST request with each param to get your information. Note that your web page uses iframes, so you need to get into iframe source first. </p>  <pre><code>pawel@stack:~/stack$ scrapy shell ""http://cbfcindia.gov.in/html/uniquepage.aspx?va=a&amp;Type=search"" In [31]: url = sel.xpath(""//iframe/@src"").extract()[0]  In [33]: url Out[33]: u'searchresults.aspx?va=a&amp;Type=search'  In [35]: from urlparse import urljoin  In [36]: url = urljoin(response.url, url)   In [39]: from scrapy.http import Request  In [40]: req = Request(url) in [41]: fetch(req)  # after fetching request.. In [48]: js_links = sel.xpath(""//*[contains(@id,'DGMovie')]/@href"").re(""doPostBack\(\'([^']+)"") In [49]: param = js_links[0]  In [50]: param Out[50]: u'DGMovie$ctl03$lnk'  In [51]: from scrapy.http import FormRequest  In [52]: fr = FormRequest.from_response(response, formdata={""__EVENTTARGET"":param})  In [53]: fetch(fr) 2014-06-02 21:09:09+0100 [default] DEBUG: Redirecting (302) to &lt;GET http://cbfcindia.gov.in/html/SearchDetails.aspx?mid=15&amp;Loc=Backlog&gt; from &lt;POST http://cbfcindia.gov.in/html/searchresults.aspx?va=a&amp;Type=search&gt; 2014-06-02 21:09:10+0100 [default] DEBUG: Crawled (200) &lt;GET http://cbfcindia.gov.in/html/SearchDetails.aspx?mid=15&amp;Loc=Backlog&gt; (referer: None) In [54]: view(response) </code></pre>  <p>In spider you need to refactor your parse method so that it yields FormRequest with callback to parse_items, than move your parsing logic to parse_items (from parse). </p>  <p>Don't forget about pagination, this is done with postbacks as well!</p>  <p>Those asp.net pages with postback are usually most difficult to parse.  <a href=""http://doc.scrapy.org/en/latest/faq.html#what-s-this-huge-cryptic-viewstate-parameter-used-in-some-forms"" rel=""nofollow"">Read more  about them if you are interested</a></p>"
24061328	convert csv to json for javascript plotting library chartjs in Python or PHP	python|json|csv|converter|chart.js	2014-06-05 13:18:39.350000 UTC	"<p>I have a set of query results in CSV format.</p>  <p>I need to parse those results into something that i can load into my javascript chartjs for plotting results</p>  <p>how to i convert in Python or PHP my csv file to the right Json format used in the JS below? </p>  <p><em>Monday,Tuesday, Wednesday,...</em></p>  <p><em>314,225,666,...</em></p>  <p>in particular the INT value needs to be without quotes else it wont load correctly. All functions i have found enclose all labels and values in double quotes ""label"", ""value"":""int""</p>  <pre><code>    &lt;script&gt;  $(""#myLine"").dxChart({     dataSource: [         {day: ""Monday"", oranges: 314},         {day: ""Tuesday"", oranges: 225},         {day: ""Wednesday"", oranges: 345},         {day: ""Thursday"", oranges: 464},         {day: ""Friday"", oranges: 626},         {day: ""Saturday"", oranges: 126},         {day: ""Sunday"", oranges: 4246} ],      series: {         argumentField: ""day"",         valueField: ""oranges"",         name: ""My oranges"",         type: ""bar"",         color: '#ffa500'     } });       &lt;/script&gt; </code></pre>  <p><img src=""https://i.stack.imgur.com/YqNHg.png"" alt=""enter image description here""></p>"	"<p>The high level process flow I would suggest is:</p>  <ul> <li>read csv</li> <li>convert to python dict/list data structure</li> <li>convert data structure to json string</li> <li>send the json string to your javascript</li> </ul>  <p>for help with reading the csv you can have a look at the documentation <a href=""https://docs.python.org/2/library/csv.html"" rel=""nofollow"">https://docs.python.org/2/library/csv.html</a></p>  <p>Once you have data build your structure something like:</p>  <pre><code>list_of_day_oranges_pairs = [('Monday', 314) ....]  # getting to this format should be easy  data = [{'day': day, 'oranges': oranges} for (day, oranges) in list_of_day_oranges_pairs] </code></pre>  <p>Then convert the data to json:</p>  <pre><code>data_string = json.dumps(data) </code></pre>  <p>Now that data_string is ready to be sent to your javascript</p>"
24091355	pass value from python to javascript using jinja	javascript|python|flask|jinja2	2014-06-06 22:09:09.120000 UTC	"<p>I am passing a list of json from my python code as </p>  <pre><code>  return render_template(""audio.html"", data = play_list) </code></pre>  <p>each json is of type <code>{""title"":""title"",""link"":""link""}</code></p>  <pre><code>[json1,json2.. ] </code></pre>  <p>My javascript has a hardcoded list which works like following</p>  <pre><code>var data = [ {title: ""title"", link: ""link""} ....] </code></pre>  <p>Note that title key doesnt have any quotes.. But now instead of using this hardcoded list in javascript, I want to use the data sent by python.. How do I get this data from python to jinja to this javascript object. Thakns</p>"	
24134925	Inject Javascript into web page with Python	javascript|python|wxpython	2014-06-10 07:09:13.867000 UTC	"<p>For my application I need to inject JS into the loaded url.</p>  <p>I am using the following snippet from here <a href=""https://stackoverflow.com/a/10866495/1162305"">https://stackoverflow.com/a/10866495/1162305</a></p>  <pre><code>import wx  import wx.html2   class MyBrowser(wx.Dialog):    def __init__(self, *args, **kwds):      wx.Dialog.__init__(self, *args, **kwds)      sizer = wx.BoxSizer(wx.VERTICAL)      self.browser = wx.html2.WebView.New(self)      sizer.Add(self.browser, 1, wx.EXPAND, 10)      self.SetSizer(sizer)      self.SetSize((700, 700))   if __name__ == '__main__':    app = wx.App()    dialog = MyBrowser(None, -1)    dialog.browser.LoadURL(""http://www.google.com"")    dialog.Show()    dialog.browser.RunScript('alert(""hello"");')   app.MainLoop()  </code></pre>  <p>Here I am injecting javascript with <a href=""http://wxpython.org/Phoenix/docs/html/html2.WebView.html#html2.WebView.RunScript"" rel=""nofollow noreferrer"">RunScript</a> but the problem is, this javascript loads before the webpage loads. How can I load this javascript after the webpage (given url) loaded completely. </p>  <p>I know in plain javascript I can use document.readyState === ""complete"", but here how can I do it? </p>"	"<p>According to documentation:</p>  <p><a href=""http://wxpython.org/Phoenix/docs/html/html2.WebView.html#phoenix-title-asynchronous-notifications"" rel=""nofollow"">http://wxpython.org/Phoenix/docs/html/html2.WebView.html#phoenix-title-asynchronous-notifications</a></p>  <p>You should use EVT_WEBVIEW_LOADED event to check if asynchronous methods like LoadURL is completed.</p>  <pre><code>self.Bind(wx.html2.EVT_WEBVIEW_LOADED, self.OnWebViewLoaded, self.browser) </code></pre>  <p>Complete code could look something like (not tested):</p>  <pre><code>import wx  import wx.html2   class MyBrowser(wx.Dialog):    def __init__(self, *args, **kwds):      wx.Dialog.__init__(self, *args, **kwds)      sizer = wx.BoxSizer(wx.VERTICAL)      self.browser = wx.html2.WebView.New(self)      sizer.Add(self.browser, 1, wx.EXPAND, 10)      self.Bind(wx.html2.EVT_WEBVIEW_LOADED, self.OnWebViewLoaded, self.browser)     self.SetSizer(sizer)      self.SetSize((700, 700))    def OnWebViewLoaded(self, evt):     # The full document has loaded     self.browser.RunScript('alert(""hello"");')  if __name__ == '__main__':    app = wx.App()    dialog = MyBrowser(None, -1)    dialog.browser.LoadURL(""http://www.google.com"")    dialog.Show()    app.MainLoop()  </code></pre>"
24152420	Pass Dynamic Javascript Variable to Django/Python	javascript|jquery|python|ajax|django	2014-06-10 23:24:49.907000 UTC	"<p>I have looked at a number of answers and other websites, but none answer my specific question. I have a webpage with ""+"" and ""-"" buttons, which should increment a variable called ""pieFact"". This variable must be updated dynamically without having to refresh the page. It should then be passed to my Django view each time the value is changed. This will be used to update the size of pie charts in a web map. I have the following:</p>  <pre><code>&lt;button type=""button"" id=bttnMinus onclick=""pieFact=pieFact*0.9""&gt;-&lt;/button&gt; &lt;button type=""button"" id=bttnPlus onclick=""pieFact=pieFact*1.1""&gt;+&lt;/button&gt;&lt;/td&gt;  &lt;script type=""text.javascript""&gt;     var pieFact=0; &lt;/script&gt; </code></pre>  <p>How can I pass the value of ""pieFact"" to Django? Based on my limited knowledge, I think I may have to use AJAX post/get.</p>"	"<p>In order to keep from refreshing the page, yes, you will need AJAX. I usually don't like to suggest libraries too much in answers, however, in the interest of being easily cross-browser compatible, I would suggest the use of <a href=""https://jquery.com/"">jQuery</a>.</p>  <h2>With jQuery it would be as simple as</h2>  <h3>Inside of your django template</h3>  <pre><code>&lt;html&gt;     ...     &lt;head&gt;         &lt;script&gt;             var URL = ""{% url 'my_view_that_updates_pieFact' %}"";         &lt;/script&gt;     &lt;/head&gt; ... </code></pre>  <h3>Later on...</h3>  <p>You'll need to either POST or GET the data to the server via AJAX. To be more RESTful, whenever I need to send data to the server I use POST. jQuery provides the <a href=""https://api.jquery.com/jquery.post/"">$.post()</a> convenience function to AJAX data to a url via POST. The three parameters are the URL, the data to send (as a JavaScript object; think python dictionaries if you're not too familiar with JavaScript), and a callback function once the server sends back a response.</p>  <pre><code>&lt;script&gt; function updatePieFact(){     var data = {'pieFact': pieFact};     $.post(URL, data, function(response){         if(response === 'success'){ alert('Yay!'); }         else{ alert('Error! :('); }     }); } </code></pre>  <p>The <code>.click()</code> functions are basically the same thing as specifying <code>onlick</code> in the html attribute. Both click events update <code>pieFact</code> as you would expect and then call <code>updatePieFact()</code> to send the value of <code>pieFact</code> to the server.</p>  <pre><code>$(document).ready(function(){     $('#bttnMinus').click(function(){         pieFact *= 0.9;         updatePieFact();     });     $('#bttnPlus').click(function(){         pieFact *= 1.1;         updatePieFact();     }); }); &lt;/script&gt; </code></pre>  <h3>In views.py</h3>  <p>Since I've used the <code>$.post()</code> function in the JavaScript, the request that Django is going to receive is going to have a method of <code>""POST""</code>, so I check to make sure that the method is indeed <code>POST</code> (this means that if someone visits the URL for this view with something like a GET request, they won't update anything). Once I see that the request is, in fact, a <code>POST</code>, I check to see if the key <code>'pieFact'</code> is in the dict <code>request.POST</code>. </p>  <p>Remember when I set the variable <code>data</code> in the javascript to <code>{'pieFact': pieFact}</code>? That javascript just becomes the request.POST python dictionary. So, if in the javascript I had instead used <code>var data = {'hello': pieFact};</code>, then I would be checking <code>if 'hello' in request.POST</code> instead. Once I see that <code>pieFact</code> is in the request.POST dictionary, I can get its value and then do something with it. If everything is successful, I return an <code>HttpResponse</code> with the string <code>'success'</code>. This correlates with the check in javascript: <code>if(response === 'success')</code>.</p>  <pre><code>def my_view_that_updates_pieFact(request):     if request.method == 'POST':         if 'pieFact' in request.POST:             pieFact = request.POST['pieFact']             # doSomething with pieFact here...             return HttpResponse('success') # if everything is OK     # nothing went well     return HttpRepsonse('FAIL!!!!!') </code></pre>  <p>Hopefully that will get you pointed in the right direction.</p>"
24174011	Python decorator for JavaScript	javascript|python	2014-06-11 23:04:47.607000 UTC	"<p>I'm looking for the equivalent of a Python decorator in JavaScript (i.e. <code>@property</code>) but I'm not sure how to do it.</p>  <pre class=""lang-python prettyprint-override""><code>class Example:     def __init__(self):         self.count = 0         self.counts = []         for i in range(12):             self.addCount()      def addCount(self):         self.counts.append(self.count)         self.count += 1     @property     def evenCountList(self):         return [x for x in self.counts if x % 2 == 0]       example = Example()     example.evenCountList # [0, 2, 4, 6, 8, 10] </code></pre>  <p>How would I do that in JavaScript?</p>"	"<p>Obviously this exact syntax doesn't exist in Javascript, but there is a method <code>Object.defineProperty</code>, which can be used to achieve something very similar. Basically, this method allows you to create a new property for a specific object and, as part of all the possibilities, define the getter method which is used to compute the value.</p>  <p>Here is a simple example to get you started.</p>  <pre><code>var example = {     'count': 10 };  Object.defineProperty(example, 'evenCountList', {     'get': function () {         var numbers = [];         for (var number = 0; number &lt; this.count; number++) {             if(number % 2 === 0) {                 numbers.push(number);             }         }         return numbers;     } }); </code></pre>  <p>Just as <code>@property</code> can have a setter, so can <code>Object.defineProperty</code>. You can check all the possible options by reading the <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/defineProperty"" rel=""nofollow"">documentation on MDN</a>.</p>"
24175212	Python like inheritance for JavaScript	javascript|python|node.js	2014-06-12 01:35:57.503000 UTC	"<p>In python I can do something like this</p>  <h1>main.py</h1>  <pre><code>class MainClass:     def __init__(self):         self.name = ""some_name""     def startDoingStuff(self):         print(""I'm doing something boring"")      def printName(self):         print(""My name is "" + self.name) </code></pre>  <h1>sub.py</h1>  <pre><code>import main class Sub(main.MainClass):     def startDoingStuff(self):         print(""I'm doing something interesting"")         self.name = ""sub""  sub = Sub() sub.printName() # prints 'My name is some_name' sub.startDoingStuff() sub.printName() # prints 'My name is sub' </code></pre>  <p>Is there a JavaScript equivalent? </p>"	"<p>If prototype-based inheritance is a little daunting, you might look into <a href=""http://ejohn.org/blog/simple-javascript-inheritance/"" rel=""nofollow"">extension based inheritance</a>.  </p>  <p>A really basic implementation looks like this.   (John Resig's implementation linked above is more robust, but I think this is a little more readable, but with the same basic concept)</p>  <pre><code>var extend = function(subTypeInit) {     var SuperType = this;     var SubType = function () {          function SuperTypeProxy(args) {               return SuperType.apply(this, args);          }          var base = new SuperTypeProxy(arguments);          subTypeInit.apply(base, arguments);          return base;     }     SubType.extend = extend.bind(SubType);     return SubType; } </code></pre>  <p>Then it can be used like this:</p>  <pre><code>var Main = function (name) {     var self = this;     self.name = name;     self.doSomething = function () {          console.log(""something boring"");     };     self.printName = function () {          console.log(""Hi, I'm ""+name);     }; };  Main.extend = extend.bind(Main); //Manually attach to first parent.  var Sub = Main.extend(function () {     var self = this;      self.doSomething = function () {          console.log(""something interesting"");     };      var superPrintName = self.printName;     self.printName = function () {          superPrintName();          console.log(""And I'm a sub class"");     }; });  var sub = new Sub(""foo""); sub.doSomething(); //logs ""something interesting"" sub.printName(); //logs ""Hi, I'm foo"" ""And I'm a sub class"" </code></pre>  <p>Some caveats here, you really probably should look into prototype based inheritance, which is what javascript is really built for.  Extension-based inheritance is a little more natural for someone who's used to other OO languages' approaches to inheritance, but the disadvantage is that it consumes more resources to do inheritance this way; you're creating a lot of functions (and a lot of closures), which can really add up.</p>"
24175785	Is there a Python analogue for JavaScript's module.exports?	python|module	2014-06-12 02:56:39.953000 UTC	"<p>In JavaScript, a module's default object can be set using ""module.exports"":</p>  <pre><code>MyCache = require(""./MyCache""); cache = new MyCache(); </code></pre>  <p>Similar behavior can be achieved in Python with:</p>  <pre><code>from MyCache import Create as MyCache cache = MyCache() </code></pre>  <p>...but is it possible to set a default object in Python?</p>  <pre><code>import MyCache cache = MyCache() </code></pre>"	"<p>No.  When you import a module, you import a module.  You can't make a module masquerade as something else.  If you want to import a class, you can already do that very simply using <code>from module import SomeClass</code> as in your example.</p>"
24176141	"Interpret binary string as image in Python, generated by Javascript native method"	javascript|python|io|flask|filereader	2014-06-12 03:46:14.763000 UTC	"<pre class=""lang-js prettyprint-override""><code>    var oReq = new XMLHttpRequest();     var reader = new FileReader();      reader.onload = function(e) {       var rawData = reader.result;       oReq.open(""POST"", '/upload', true);       oReq.send(rawData);       console.log(rawData);     }      reader.readAsBinaryString(postObj);     // postObj is an image who's src is set to a data uri, taken via a webcam. </code></pre>  <p>console.log(rawData) yields ==></p>  <pre class=""lang-none prettyprint-override""><code>""PNG   IHDRÈÜÇ IDATx^d½idizw""##rÏ¬}ëîªÞfÃ!%2 ø£üølpµ0ù Q&amp;É©¡,Ú2l²!Ã¦SeÃ$Y-ÉÎLïKuí{îáëºófe³§¦*3#Nó¾Ïr?÷³¼úOþÓùÉÂ tóne¸Øm.»ÙhÐtÃÅQ7&lt;w''³nÎ¿g³Y·Èkóãn&lt;Xì§G]·²Ø ç]·8wÇ\å¨;á5vÁ°Ì»E¾?æ÷ywtÒuó¯ù{&gt;Ïám]ÇëF£Qwt|\ßó5ä³NæÜÇ°^{rÂ¿ùÜÁ|¡;&gt;:êón0âß¼gûã6rm_ëgçõü4[vG¼gaa!?_à5#~³0\èxcß}Â}ú|ÜÓóóÅ!Ï=?â{®ã½ó^í½v'ü×úþÞ/×ñÏ}P®}Â÷Ý¸;9f­X¨?[àUÇ|?à^|þáb=çòÉ¸[æ·¬@7q]&gt;giÜqÓ~@oq´èMdY4í3-.ùÈzÿüÌºÍy 7Ä½ÖºØ¿\Ü6¯õ:Ü ß·5r-|ºv½½ôú¬w¶ìõáþ&lt;{/íuí{ÞÎÚy¯Gì%kÎ}NfÓÚÞã5Ý¶ÏÞÔr× ø«Õï½¯k¯õï&lt;/ëïçz¬ïso§ÙsÆ³ü5öß»{ÛÝádÌñö ïgÍÿù¿üWÝÆ¹ÝøüX7øK?ùó    ê¶/!Ë«ÝÂxÔ"" G.²Éxbæ]ñg@úýgé£Þ;¿ThÆ³/ùòû(D¿Ã&gt;2Þ-ð³7¯18""P&lt;=ç&gt;GSr±;r\à;³°&lt;6ÎòZNAázndûûtù¼1ÇVGÁ¼^vÜ¼\3ÚÆu¸9×g]ÉñA   VÂ°0óîÍ£TÃY½ïdaM""&gt;ÆhÎF9ú¿](3Â¯¢xeÜõt ¢DÞN¾E¾oÈEy×q®?ÂÀ»z=Bó|,¯JáæzíýÞ¯ÿöï&amp;äM!rÏ¼WóQÛ^ÏÛÖ5÷Ü¤ûåÏ¸ÛüûÃkôF©]ß¿óÜ1F¤üNÃ«ÍsM¯Qü²úYX:f¯DSßÌõ4D1eTÛûüvÿþlrpÐM'SÇuòµÈïù?øî½&gt;è~â'~¢ü$ </code></pre>  <p>How can I interpret this in Python? On the server, this data shows up as:</p>  <pre><code>'...\x7f\xc2\xb4r\xc2\x87\x1c\xc2\xaa\n-\xc2\x9c\xc2\xa6QF\xc2\xac\xc2\xb0tS\xc3\xa4\xc2\xb0;\xc3\x8cisL@\xc3\x98\xc2\x94E\xc3\x94\xc2\xb8Bz\xc3\xb0\xc3\xa9\xc2\xaa#8\xc2\x90\xc3\xbb\xc3\xa5&gt;\xc3\xbaO\xc2\xa8\xc3\x81H\xc3\x91\xc2\xaf:i\xc2\x8a\xc2\x926\xc2\x8b\xc2\x81\xc3\xbc\xc3\xa1Y\xc3\x93\xc2\x9b\xc2\xbat\xc2\x8f\xc3\x9e~\xc2\xa3PH4\x02_\x04\xc2\xbf\xc2\x92\xc2\xb7\xc3\xad\xc2\x8f\xc3\x9e\xc3\xbf\xc2\xb8&lt;\xc2\x91V\xc3\xa0\xc3\x8b\x1f\xc3\x88\xc3\x9f\xc2\xa2&gt;)\x1d\xc3\x94eY=\xc3\x8ct\xc2\xa9+L^7\xc2\xa2I\xc3\x84\xc2\xba\x03\xc3\xb5!1f\xc3\x97\xc3\x81\xc3\xbfD\xc3\x87\xc3\xb7\x06\xc2\xaa\xc3\xafcz\xc3\xad(\xc3\xb5\xc2\xab\xc3\x96\xc3\xb5&lt;\xc3\x8e\xc2\xab\x08\xc3\x81\xc2\x88\x0b\xc3\x8a;\xc3\x8e!v\xc3\x84\xc2\xb1?\xc2\x8bVn\x19t\xc3\x80\xc2\x8bT`:\x1c\xc3\x8b\xc2\x99\xc3\xb2\xc3\x9c\xc3\xbf\x0fCsXi\xc3\xa6z\xc3\xb3l\x00\x00\x00\x00IEND\xc2\xaeB`\xc2\x82' </code></pre>  <p>Writing this to file as a PNG yields an invalid PNG. Any guidance on saving the image would be helpful.</p>"	"<p>On the browser:</p>  <pre><code>// Client Side: var xhr = new XMLHttpRequest(); xhr.open('POST', uploadUrl); xhr.send(base64EncodedItem); </code></pre>  <p>On the server (I am using Flask/Python 2.x)</p>  <pre><code># Server Side: import re import uuid  # Obtain the base64 string image_string = request.data  image_string = re.search(r'base64,(.*)', image_string).group(1)  # Generate a file name. # We can assume PNG format in my specific implementation, but you could search # the image_string variable to detect filetype. output = open(str(uuid.uuid4()) + '.png', 'wb') output.write(image_string.decode('base64')) output.close() </code></pre>  <p>This worked for me. Hope it helps others.</p>"
24176141	"Interpret binary string as image in Python, generated by Javascript native method"	javascript|python|io|flask|filereader	2014-06-12 03:46:14.763000 UTC	"<pre class=""lang-js prettyprint-override""><code>    var oReq = new XMLHttpRequest();     var reader = new FileReader();      reader.onload = function(e) {       var rawData = reader.result;       oReq.open(""POST"", '/upload', true);       oReq.send(rawData);       console.log(rawData);     }      reader.readAsBinaryString(postObj);     // postObj is an image who's src is set to a data uri, taken via a webcam. </code></pre>  <p>console.log(rawData) yields ==></p>  <pre class=""lang-none prettyprint-override""><code>""PNG   IHDRÈÜÇ IDATx^d½idizw""##rÏ¬}ëîªÞfÃ!%2 ø£üølpµ0ù Q&amp;É©¡,Ú2l²!Ã¦SeÃ$Y-ÉÎLïKuí{îáëºófe³§¦*3#Nó¾Ïr?÷³¼úOþÓùÉÂ tóne¸Øm.»ÙhÐtÃÅQ7&lt;w''³nÎ¿g³Y·Èkóãn&lt;Xì§G]·²Ø ç]·8wÇ\å¨;á5vÁ°Ì»E¾?æ÷ywtÒuó¯ù{&gt;Ïám]ÇëF£Qwt|\ßó5ä³NæÜÇ°^{rÂ¿ùÜÁ|¡;&gt;:êón0âß¼gûã6rm_ëgçõü4[vG¼gaa!?_à5#~³0\èxcß}Â}ú|ÜÓóóÅ!Ï=?â{®ã½ó^í½v'ü×úþÞ/×ñÏ}P®}Â÷Ý¸;9f­X¨?[àUÇ|?à^|þáb=çòÉ¸[æ·¬@7q]&gt;giÜqÓ~@oq´èMdY4í3-.ùÈzÿüÌºÍy 7Ä½ÖºØ¿\Ü6¯õ:Ü ß·5r-|ºv½½ôú¬w¶ìõáþ&lt;{/íuí{ÞÎÚy¯Gì%kÎ}NfÓÚÞã5Ý¶ÏÞÔr× ø«Õï½¯k¯õï&lt;/ëïçz¬ïso§ÙsÆ³ü5öß»{ÛÝádÌñö ïgÍÿù¿üWÝÆ¹ÝøüX7øK?ùó    ê¶/!Ë«ÝÂxÔ"" G.²Éxbæ]ñg@úýgé£Þ;¿ThÆ³/ùòû(D¿Ã&gt;2Þ-ð³7¯18""P&lt;=ç&gt;GSr±;r\à;³°&lt;6ÎòZNAázndûûtù¼1ÇVGÁ¼^vÜ¼\3ÚÆu¸9×g]ÉñA   VÂ°0óîÍ£TÃY½ïdaM""&gt;ÆhÎF9ú¿](3Â¯¢xeÜõt ¢DÞN¾E¾oÈEy×q®?ÂÀ»z=Bó|,¯JáæzíýÞ¯ÿöï&amp;äM!rÏ¼WóQÛ^ÏÛÖ5÷Ü¤ûåÏ¸ÛüûÃkôF©]ß¿óÜ1F¤üNÃ«ÍsM¯Qü²úYX:f¯DSßÌõ4D1eTÛûüvÿþlrpÐM'SÇuòµÈïù?øî½&gt;è~â'~¢ü$ </code></pre>  <p>How can I interpret this in Python? On the server, this data shows up as:</p>  <pre><code>'...\x7f\xc2\xb4r\xc2\x87\x1c\xc2\xaa\n-\xc2\x9c\xc2\xa6QF\xc2\xac\xc2\xb0tS\xc3\xa4\xc2\xb0;\xc3\x8cisL@\xc3\x98\xc2\x94E\xc3\x94\xc2\xb8Bz\xc3\xb0\xc3\xa9\xc2\xaa#8\xc2\x90\xc3\xbb\xc3\xa5&gt;\xc3\xbaO\xc2\xa8\xc3\x81H\xc3\x91\xc2\xaf:i\xc2\x8a\xc2\x926\xc2\x8b\xc2\x81\xc3\xbc\xc3\xa1Y\xc3\x93\xc2\x9b\xc2\xbat\xc2\x8f\xc3\x9e~\xc2\xa3PH4\x02_\x04\xc2\xbf\xc2\x92\xc2\xb7\xc3\xad\xc2\x8f\xc3\x9e\xc3\xbf\xc2\xb8&lt;\xc2\x91V\xc3\xa0\xc3\x8b\x1f\xc3\x88\xc3\x9f\xc2\xa2&gt;)\x1d\xc3\x94eY=\xc3\x8ct\xc2\xa9+L^7\xc2\xa2I\xc3\x84\xc2\xba\x03\xc3\xb5!1f\xc3\x97\xc3\x81\xc3\xbfD\xc3\x87\xc3\xb7\x06\xc2\xaa\xc3\xafcz\xc3\xad(\xc3\xb5\xc2\xab\xc3\x96\xc3\xb5&lt;\xc3\x8e\xc2\xab\x08\xc3\x81\xc2\x88\x0b\xc3\x8a;\xc3\x8e!v\xc3\x84\xc2\xb1?\xc2\x8bVn\x19t\xc3\x80\xc2\x8bT`:\x1c\xc3\x8b\xc2\x99\xc3\xb2\xc3\x9c\xc3\xbf\x0fCsXi\xc3\xa6z\xc3\xb3l\x00\x00\x00\x00IEND\xc2\xaeB`\xc2\x82' </code></pre>  <p>Writing this to file as a PNG yields an invalid PNG. Any guidance on saving the image would be helpful.</p>"	"<p>You will need to convert your image's binary representation into <code>Base64</code> before uploading - this makes it safe to work with when transferring data over HTTP.</p>  <p>When you receive the <code>Base64</code> encoded image server-side, you can convert it back to binary, and write this to a file.</p>  <h2>Client side code:</h2>  <p>To convert to <code>Base64</code>, you need to use</p>  <pre><code>fileReader.readAsDataURL( fileObject ) </code></pre>  <p>this automatically represents your data in a safe to upload via HTTP format.</p>  <h2>Server side code:</h2>  <pre><code>import base64 coded_string = '''Q5YACgA...''' binary = base64.b64decode(coded_string) # now write binary to file... </code></pre>"
24176141	"Interpret binary string as image in Python, generated by Javascript native method"	javascript|python|io|flask|filereader	2014-06-12 03:46:14.763000 UTC	"<pre class=""lang-js prettyprint-override""><code>    var oReq = new XMLHttpRequest();     var reader = new FileReader();      reader.onload = function(e) {       var rawData = reader.result;       oReq.open(""POST"", '/upload', true);       oReq.send(rawData);       console.log(rawData);     }      reader.readAsBinaryString(postObj);     // postObj is an image who's src is set to a data uri, taken via a webcam. </code></pre>  <p>console.log(rawData) yields ==></p>  <pre class=""lang-none prettyprint-override""><code>""PNG   IHDRÈÜÇ IDATx^d½idizw""##rÏ¬}ëîªÞfÃ!%2 ø£üølpµ0ù Q&amp;É©¡,Ú2l²!Ã¦SeÃ$Y-ÉÎLïKuí{îáëºófe³§¦*3#Nó¾Ïr?÷³¼úOþÓùÉÂ tóne¸Øm.»ÙhÐtÃÅQ7&lt;w''³nÎ¿g³Y·Èkóãn&lt;Xì§G]·²Ø ç]·8wÇ\å¨;á5vÁ°Ì»E¾?æ÷ywtÒuó¯ù{&gt;Ïám]ÇëF£Qwt|\ßó5ä³NæÜÇ°^{rÂ¿ùÜÁ|¡;&gt;:êón0âß¼gûã6rm_ëgçõü4[vG¼gaa!?_à5#~³0\èxcß}Â}ú|ÜÓóóÅ!Ï=?â{®ã½ó^í½v'ü×úþÞ/×ñÏ}P®}Â÷Ý¸;9f­X¨?[àUÇ|?à^|þáb=çòÉ¸[æ·¬@7q]&gt;giÜqÓ~@oq´èMdY4í3-.ùÈzÿüÌºÍy 7Ä½ÖºØ¿\Ü6¯õ:Ü ß·5r-|ºv½½ôú¬w¶ìõáþ&lt;{/íuí{ÞÎÚy¯Gì%kÎ}NfÓÚÞã5Ý¶ÏÞÔr× ø«Õï½¯k¯õï&lt;/ëïçz¬ïso§ÙsÆ³ü5öß»{ÛÝádÌñö ïgÍÿù¿üWÝÆ¹ÝøüX7øK?ùó    ê¶/!Ë«ÝÂxÔ"" G.²Éxbæ]ñg@úýgé£Þ;¿ThÆ³/ùòû(D¿Ã&gt;2Þ-ð³7¯18""P&lt;=ç&gt;GSr±;r\à;³°&lt;6ÎòZNAázndûûtù¼1ÇVGÁ¼^vÜ¼\3ÚÆu¸9×g]ÉñA   VÂ°0óîÍ£TÃY½ïdaM""&gt;ÆhÎF9ú¿](3Â¯¢xeÜõt ¢DÞN¾E¾oÈEy×q®?ÂÀ»z=Bó|,¯JáæzíýÞ¯ÿöï&amp;äM!rÏ¼WóQÛ^ÏÛÖ5÷Ü¤ûåÏ¸ÛüûÃkôF©]ß¿óÜ1F¤üNÃ«ÍsM¯Qü²úYX:f¯DSßÌõ4D1eTÛûüvÿþlrpÐM'SÇuòµÈïù?øî½&gt;è~â'~¢ü$ </code></pre>  <p>How can I interpret this in Python? On the server, this data shows up as:</p>  <pre><code>'...\x7f\xc2\xb4r\xc2\x87\x1c\xc2\xaa\n-\xc2\x9c\xc2\xa6QF\xc2\xac\xc2\xb0tS\xc3\xa4\xc2\xb0;\xc3\x8cisL@\xc3\x98\xc2\x94E\xc3\x94\xc2\xb8Bz\xc3\xb0\xc3\xa9\xc2\xaa#8\xc2\x90\xc3\xbb\xc3\xa5&gt;\xc3\xbaO\xc2\xa8\xc3\x81H\xc3\x91\xc2\xaf:i\xc2\x8a\xc2\x926\xc2\x8b\xc2\x81\xc3\xbc\xc3\xa1Y\xc3\x93\xc2\x9b\xc2\xbat\xc2\x8f\xc3\x9e~\xc2\xa3PH4\x02_\x04\xc2\xbf\xc2\x92\xc2\xb7\xc3\xad\xc2\x8f\xc3\x9e\xc3\xbf\xc2\xb8&lt;\xc2\x91V\xc3\xa0\xc3\x8b\x1f\xc3\x88\xc3\x9f\xc2\xa2&gt;)\x1d\xc3\x94eY=\xc3\x8ct\xc2\xa9+L^7\xc2\xa2I\xc3\x84\xc2\xba\x03\xc3\xb5!1f\xc3\x97\xc3\x81\xc3\xbfD\xc3\x87\xc3\xb7\x06\xc2\xaa\xc3\xafcz\xc3\xad(\xc3\xb5\xc2\xab\xc3\x96\xc3\xb5&lt;\xc3\x8e\xc2\xab\x08\xc3\x81\xc2\x88\x0b\xc3\x8a;\xc3\x8e!v\xc3\x84\xc2\xb1?\xc2\x8bVn\x19t\xc3\x80\xc2\x8bT`:\x1c\xc3\x8b\xc2\x99\xc3\xb2\xc3\x9c\xc3\xbf\x0fCsXi\xc3\xa6z\xc3\xb3l\x00\x00\x00\x00IEND\xc2\xaeB`\xc2\x82' </code></pre>  <p>Writing this to file as a PNG yields an invalid PNG. Any guidance on saving the image would be helpful.</p>"	"<pre><code>open('/path/to/new_file.png', 'wb').write(rawData) </code></pre>"
24299384	Translating a Python Conditional to JavaScript Regex	javascript|python|regex|translate	2014-06-19 05:31:15.147000 UTC	"<p>I'm trying to convert this python regex to a javascript regex</p>  <p><a href=""https://github.com/rg3/youtube-dl/blob/a14e1538fe66c49ca8869681d2bbe60a36bd420d/youtube_dl/extractor/youtube.py#L134-L159"" rel=""nofollow"">https://github.com/rg3/youtube-dl/blob/a14e1538fe66c49ca8869681d2bbe60a36bd420d/youtube_dl/extractor/youtube.py#L134-L159</a></p>  <pre><code>r""""""(?x)^ (     (?:https?://|//)?                                    # http(s):// or protocol-independent URL (optional)     (?:(?:(?:(?:\w+\.)?[yY][oO][uU][tT][uU][bB][eE](?:-nocookie)?\.com/|     (?:www\.)?deturl\.com/www\.youtube\.com/|     (?:www\.)?pwnyoutube\.com/|     (?:www\.)?yourepeat\.com/|     tube\.majestyc\.net/|     youtube\.googleapis\.com/)                        # the various hostnames, with wildcard subdomains     (?:.*?\#/)?                                          # handle anchor (#/) redirect urls     (?:                                                  # the various things that can precede the ID:         (?:(?:v|embed|e)/)                               # v/ or embed/ or e/         |(?:                                             # or the v= param in all its forms             (?:(?:watch|movie)(?:_popup)?(?:\.php)?/?)?  # preceding watch(_popup|.php) or nothing (like /?v=xxxx)             (?:\?|\#!?)                                  # the params delimiter ? or # or #!             (?:.*?&amp;)?                                    # any other preceding param (like /?s=tuff&amp;v=xxxx)             v=         )     ))     |youtu\.be/                                          # just youtu.be/xxxx     |https?://(?:www\.)?cleanvideosearch\.com/media/action/yt/watch\?videoId=     ) )?                                                       # all until now is optional -&gt; you can pass the naked ID ([0-9A-Za-z_-]{11})                                      # here is it! the YouTube video ID (?(1).+)?                                                # if we found the ID, everything can follow $"""""" </code></pre>  <p>I removed the quotes at start and end, added start <code>/^</code> and end delimiters <code>/i</code>, escaped forward slashes, removed the free-spacing mode and ended up with this</p>  <pre><code>var VALID_URL = /^((?:https?:\/\/|\/\/)?(?:(?:(?:(?:\w+\.)?[yY][oO][uU][tT][uU][bB][eE](?:-nocookie)?\.com\/|(?:www\.)?deturl\.com\/www\.youtube\.com\/|(?:www\.)?pwnyoutube\.com\/|(?:www\.)?yourepeat\.com\/|tube\.majestyc\.net\/|youtube\.googleapis\.com\/)(?:.*?\#\/)?(?:(?:(?:v|embed|e)\/)|(?:(?:(?:watch|movie)(?:_popup)?(?:\.php)?\/?)?(?:\?|\#!?)(?:.*?&amp;)?v=)))|youtu\.be\/|https?:\/\/(?:www\.)?cleanvideosearch\.com\/media\/action\/yt\/watch\?videoId=))?([0-9A-Za-z_-]{11})(?(1).+)?$/g; </code></pre>  <p>However the javascript regex debugger I'm using says <code>Unexpected character ""("" after ""?""</code> in regards to the javascript transpose of this part of the python regex</p>  <pre><code>(?(1).+)?      # if we found the ID, everything can follow </code></pre>  <p>Any idea how I can resolve this error?</p>"	"<p><strong>JavaScript does not support conditionals.</strong> </p>  <p>But the world of regex has long survived without conditionals, and there are ways around it.</p>  <p><strong>The Idea</strong></p>  <p>The basic structure of that scary regex was this:</p>  <pre><code>(Capture A)? (Match B) ( If A was captured, (Match C)? ) </code></pre>  <p>You can translate the <strong>IF</strong> into an <strong>OR</strong>:</p>  <pre><code>(Capture A) (Match B) (Match C)? **OR** (Match B) </code></pre>  <p><strong>Converted Regex</strong></p>  <p>Try this:</p>  <pre><code>^((?:https?://|//)?(?:(?:(?:(?:\w+\.)?[yY][oO][uU][tT][uU][bB][eE](?:-nocookie)?\.com/|(?:www\.)?deturl\.com/www\.youtube\.com/|(?:www\.)?pwnyoutube\.com/|(?:www\.)?yourepeat\.com/|tube\.majestyc\.net/|youtube\.googleapis\.com/)(?:[^\n]*?#/)?(?:(?:(?:v|embed|e)/)|(?:(?:(?:watch|movie)(?:_popup)?(?:\.php)?/?)?(?:\?|#!?)(?:[^\n]*?&amp;)?v=)))|youtu\.be/|https?://(?:www\.)?cleanvideosearch\.com/media/action/yt/watch\?videoId=)([0-9A-Za-z_-]{11})(?:[^\n]+)?)|^([0-9A-Za-z_-]{11}) </code></pre>  <p><strong>Explanation</strong></p>  <p>The <code>(?(1)[^\n]+)?</code> conditional tries to optionally match <code>[^\n]+</code> if Group 1 is set. Since it occurs after the non-optional <code>([0-9A-Za-z_-]{11})</code>, I transformed the conditional into an alternation <code>|</code></p>  <ul> <li>I make no judgment about the suitability of the regex... I rearranged the ""grammar"" without looking at the ""words"". :)</li> <li>Either we match that whole Group 1, into which we now directly roll the <code>([0-9A-Za-z_-]{11})</code> and the optional component, <strong>OR</strong></li> <li>We directly match the <code>([0-9A-Za-z_-]{11})</code></li> <li>If you are interested in retrieving the <code>([0-9A-Za-z_-]{11})</code>, depending on which side of the alternation matches it, it will live inside a different capture Group. I'll leave you to count the parentheses.</li> <li>There are probably lots of parentheses you can remove, depending on your needs</li> </ul>  <p><strong>Reference</strong></p>  <ul> <li><a href=""http://www.rexegg.com/regex-conditionals.html"" rel=""nofollow"">Conditional Regex 101</a></li> <li><a href=""http://www.regular-expressions.info/conditional.html"" rel=""nofollow"">If-Then-Else Conditionals in Regular Expressions</a></li> </ul>"
24326308	Get running python server IP address in Javascript	javascript|python|flask	2014-06-20 11:31:35.377000 UTC	"<p>I have a python flask app running on my server:</p>  <pre><code>if __name__ == '__main__':     port = int(os.environ.get(""PORT"", 6600))     app.run(host='0.0.0.0', port=port) </code></pre>  <p>And I have a JS script getting information from that app, I don't want to change manually th IP or domain in the JS script every time I deploy or change the domain so I'm asking is there any way for the JS to know the IP or hostname of the python app ?<br /><br/> Here's my structure:<br /> index.py &lt;= main app<br/> <strong>static</strong><br/> **index.html<br /> **script.js</p>  <p>Thanks</p>"	"<p>Register a domain name and stick with it. Use the domain name in your javascript and/or config.</p>  <p>Make sure that the registrar provides an interface for updating the ""A record"" (IP address) and point it at your server. Whenever you change IP address, update the A record for your domain.</p>"
24326308	Get running python server IP address in Javascript	javascript|python|flask	2014-06-20 11:31:35.377000 UTC	"<p>I have a python flask app running on my server:</p>  <pre><code>if __name__ == '__main__':     port = int(os.environ.get(""PORT"", 6600))     app.run(host='0.0.0.0', port=port) </code></pre>  <p>And I have a JS script getting information from that app, I don't want to change manually th IP or domain in the JS script every time I deploy or change the domain so I'm asking is there any way for the JS to know the IP or hostname of the python app ?<br /><br/> Here's my structure:<br /> index.py &lt;= main app<br/> <strong>static</strong><br/> **index.html<br /> **script.js</p>  <p>Thanks</p>"	"<p>If I understand your question correctly, you pretty much have two options at your disposal depending on your setup.</p>  <p><strong>Option 1:</strong> If your JavaScript code is running on the same machine as your Python script, you could simply always just access it from 127.0.0.1 from your JavaScript code (because binding to 0.0.0.0 will make the Python server accessible from all interfaces, including the loopback interface at 127.0.0.1).</p>  <p><strong>Option 2:</strong> If your JavaScript code lives on a remote server, your simplest solution is going to be to use some kind of <a href=""https://en.wikipedia.org/wiki/Dynamic_DNS"" rel=""nofollow"" title=""Dynamic DNS"">Dynamic DNS</a> service as an intermediary. So you'll end up with two domains for your Python server: one static one available to the rest of the world, like <code>www.mypythonserver.com</code>, and one dynamic DNS entry only known by your JavaScript code, like <code>mypythonserver.noip.me</code> (hard-coded permanently into your JavaScript code). Both of these domains should always resolve to your Python server's host address, with no manual intervention necessary for the dynamic DNS entry.</p>"
24326308	Get running python server IP address in Javascript	javascript|python|flask	2014-06-20 11:31:35.377000 UTC	"<p>I have a python flask app running on my server:</p>  <pre><code>if __name__ == '__main__':     port = int(os.environ.get(""PORT"", 6600))     app.run(host='0.0.0.0', port=port) </code></pre>  <p>And I have a JS script getting information from that app, I don't want to change manually th IP or domain in the JS script every time I deploy or change the domain so I'm asking is there any way for the JS to know the IP or hostname of the python app ?<br /><br/> Here's my structure:<br /> index.py &lt;= main app<br/> <strong>static</strong><br/> **index.html<br /> **script.js</p>  <p>Thanks</p>"	"<p>You can use the <code>templating</code> in the script file which would get filled with the port number when user requests the script.</p>  <p>There are many templates available at :</p>  <p><a href=""https://wiki.python.org/moin/Templating"" rel=""nofollow"">https://wiki.python.org/moin/Templating</a></p>  <p>Usually it would be like</p>  <pre><code>  // in script.js    var myport = {{ port }}; </code></pre>  <p>and in your python code :</p>  <pre><code># if request is for script.js  # respond with template  request.send(my_templating_engine('script.js' , port)) </code></pre>"
24376729	How can I transfer a python object for use in a JavaScript variable?	javascript|python|bottle	2014-06-24 00:46:36.213000 UTC	"<p>I'm using Bottle and Python 2.7.</p>  <p>I would like to pass a list variable from my Bottle's controller to the view page, where it will be used in a JavaScript variable.</p>  <pre><code>@app.route('/foo'): def foo():     l = [{'name':'Matthew'}]     return template('foo', l=l) </code></pre>  <p>I've also done:</p>  <pre><code>l = json.dumps([{'name':'Matthew'}] </code></pre>  <p>In my view</p>  <pre><code>&lt;script type=""text/javascript""&gt;     $(document).ready({         var l = {{l}}         l.forEach(function(entry) {             console.log(entry);         });     }); &lt;/script&gt; </code></pre>  <p>However my console says I have a syntax error. When I open the HTML, it is rendered like:</p>  <pre><code>var l = [{&amp;quot;name&amp;quot;: &amp;quot;Matthew&amp;quot;] </code></pre>  <p>How can I transfer a python object for use in a JavaScript variable?</p>"	"<p>The substitutions between <code>{{</code> and <code>}}</code> are <a href=""http://en.wikipedia.org/wiki/Character_entity_reference"" rel=""nofollow"">HTML Entity encoded</a> to prevent XSS amongst other things.</p>  <p>Try this:</p>  <pre><code>var l = {{!l}}; </code></pre>"
24376729	How can I transfer a python object for use in a JavaScript variable?	javascript|python|bottle	2014-06-24 00:46:36.213000 UTC	"<p>I'm using Bottle and Python 2.7.</p>  <p>I would like to pass a list variable from my Bottle's controller to the view page, where it will be used in a JavaScript variable.</p>  <pre><code>@app.route('/foo'): def foo():     l = [{'name':'Matthew'}]     return template('foo', l=l) </code></pre>  <p>I've also done:</p>  <pre><code>l = json.dumps([{'name':'Matthew'}] </code></pre>  <p>In my view</p>  <pre><code>&lt;script type=""text/javascript""&gt;     $(document).ready({         var l = {{l}}         l.forEach(function(entry) {             console.log(entry);         });     }); &lt;/script&gt; </code></pre>  <p>However my console says I have a syntax error. When I open the HTML, it is rendered like:</p>  <pre><code>var l = [{&amp;quot;name&amp;quot;: &amp;quot;Matthew&amp;quot;] </code></pre>  <p>How can I transfer a python object for use in a JavaScript variable?</p>"	"<p>Bottle (via, the SimpleTemplate engine) is escaping the output to prevent XSS vulnerability. This is good, generally. You can disable the escaping temporarily using <code>!</code> like:</p>  <pre><code>var l = {{!l}}; </code></pre>  <p>The docs for it are <a href=""http://bottlepy.org/docs/dev/stpl.html#inline-expressions"" rel=""nofollow"">here</a></p>"
24459465	How to get Python list into Jinja2 and paste as Javascript array?	javascript|python|json|flask|jinja2	2014-06-27 19:27:33.430000 UTC	"<p>I'm building a website using the Python Flask Framework which includes the Jinja2 templating engine. I now want to pass a simple list of strings from Flask to Jinja2 to be included in a Javascript in the website. Using the tips in <a href=""https://stackoverflow.com/a/15322060/1650012"">this SO answer</a> I tried doing this as follows:</p>  <pre><code>@app.route('/index') def index():     theList = ['A', 'B']     return render_template('index.html', theList=json.dumps(theList)) </code></pre>  <p>and in the template its Javascript I do this:</p>  <pre><code>var theList = {{ theList }}; </code></pre>  <p>But when I look into the source of the generate Javascript I see this:</p>  <pre><code>var theList = [&amp;#34;A&amp;#34;, &amp;#34;B&amp;#34;]; </code></pre>  <p>I also tried <code>theList=map(json.dumps, theList))</code>, which results in the even weirder:</p>  <pre><code>var theList = [&amp;#39;&amp;#34;A&amp;#34;&amp;#39;, &amp;#39;&amp;#34;B&amp;#34;&amp;#39;]; </code></pre>  <p>Does anybody know how I can properly pass a simple list through Jinja2 on to a Javascript array? All tips are welcome!</p>"	
24481156	Call between Javascript & Python with Flask: Method Not Allowed error 405	javascript|python|flask	2014-06-29 23:24:07.283000 UTC	"<p>I'm running a server with Flask. Here's my views.py: </p>  <pre><code>from flask import render_template from app import app  @app.route('/') @app.route('/user_form.html', methods=[""GET"", ""POST""]) def index():     return render_template(""user_form.html"") </code></pre>  <p>The user_form.html contains the following Javascript: </p>  <pre><code>&lt;SCRIPT&gt;     function get_UserInputValues(form) {     var getzipcode = document.getElementById('user_zip').value;     var getcuisine = document.getElementById('cuisine').value;     var selection1 = $(""#slider1"").slider(""value"");     var selection2 = $(""#slider2"").slider(""value"");     var selection3 = $(""#slider3"").slider(""value"");     var myurl = 'http://127.0.0.1:5000/mypython.py';      /*alert(getzipcode);     alert(getcuisine);     alert(selection1);     alert(selection2);     alert(selection3);*/      $('#myForm').submit();      $.ajax({url: myurl, type: ""POST"", data: {zip: getzipcode, cuisine:getcuisine}, dataType: 'json', done: onComplete})      }      function onComplete(data) {       alert(data);     };   &lt;/SCRIPT&gt; </code></pre>  <p>The user_form.html and mypython.py files are under the same ""templates"" directory. However, I get the message, "" Method Not Allowed.The method is not allowed for the requested URL"".</p>  <p>Looking at similar questions asked on Stackoverflow, I made sure to include ""GET"" and ""POST"" for methods. Why then I still have this error? </p>  <p>As a test, ""mypython.py"" is the following: </p>  <pre><code>def restaurant_choice(zipcode, cuisine):     print ""zipcode:"", zipcode     return ""cuisine: "", cuisine  restaurant_choice(getzipcode, getcuisine) </code></pre>"	"<p>There are multiple issues here:</p>  <ol> <li>You are not actually sending a <code>POST</code> request to <code>/mypython.py</code> - you are sending it to <code>/</code> (which is only accessible via <code>GET</code>, hence the error.)</li> <li>You are both submitting the form (via <code>$('#myForm').submit()</code>) <em>and</em> making an ajax request via <code>$.ajax</code> on the next line - the browser will make the first for you and because that will result in a page navigation event it will <em>cancel</em> the second.</li> <li><code>/mypython.py</code> is not a defined route and so will result in a 404.  Flask only handles routes that are explicitly registered with it (<code>/static/&lt;path:file_path&gt;</code> is added for you automatically by Flask, which is why static files work).</li> <li>Files in the <code>templates</code> folder are not exposed as served resources by default but are passed through Jinja (generally) by the <code>render_template</code> function.</li> <li>In order to expose Python functionality to the end user (to use via JavaScript or as a web page) you should explicitly make it routable (either via <code>@app.route</code> or <code>app.add_url_route</code>).</li> </ol>"
24481622	python dynamic webscraping javascript content	python|selenium|web-scraping	2014-06-30 00:47:21.217000 UTC	"<p>I am using Python and Selenium to scrape a website. What I do is go to the <a href=""http://www.sigmaaldrich.com/united-states.html"" rel=""nofollow"">homepage</a>, type in a keyword, such as 1300746-79-5. On the <a href=""http://www.sigmaaldrich.com/catalog/search?interface=CAS%20No.&amp;term=1300746-79-5&amp;N=0&amp;mode=match%20partialmax&amp;focus=product&amp;lang=en&amp;region=US"" rel=""nofollow"">resulting page</a>, I am trying to scrape the data in the ""pricing"" section. Specifically, I need to get the ""SKU-Pack Size"" and ""Price(USD)"" information. But these information is Javascript encripted, so I cannot see them in the source code. I am wondering how I can achieve this.</p>  <p>I have written some code that gets me to the page of interest, but I still cannot see the javascript information. Here is what I have so far.</p>  <pre><code>from selenium import webdriver from selenium.common.exceptions import TimeoutException from selenium.webdriver.support.ui import WebDriverWait from selenium.webdriver.support import expected_conditions as EC import pprint  # Create a new instance of the Firefox driver driver = webdriver.Chrome('C:\Users\Rei\Desktop\chromedriver.exe') driver.get(""http://www.sigmaaldrich.com/united-states.html"")  print driver.title inputElement = driver.find_element_by_name(""Query"")  # type in the search inputElement.send_keys(""1300746-79-5"") inputElement.submit() </code></pre>"	"<p>Everything you have done looks correct to me.</p>  <p>""SKU-Pack Size"" and ""Price(USD)"" information are not ""encrypted"", but retrieved after JavaScript clicking action. All you need to do is to click product name or pricing link.</p>  <pre><code>from selenium import webdriver from selenium.common.exceptions import TimeoutException from selenium.webdriver.common.by import By from selenium.webdriver.support.ui import WebDriverWait from selenium.webdriver.support import expected_conditions as EC import pprint  driver = webdriver.Chrome() driver.get(""http://www.sigmaaldrich.com/united-states.html"")  print driver.title inputElement = driver.find_element_by_name(""Query"")  # type in the search inputElement.send_keys(""1300746-79-5"") inputElement.submit()  pricing_link = driver.find_element_by_css_selector(""li.priceValue a"") print pricing_link.text pricing_link.click()  # then deal with the data you want price_table = WebDriverWait(driver, 10).until(     EC.presence_of_element_located((By.CSS_SELECTOR, "".priceAvailContainer tbody"")) ) print 'price_table.text: ' + price_table.text  driver.quit() </code></pre>"
24519223	Python/ASP.NET/Javascript: How to scrape ASP.NET based page	javascript|python|asp.net|web-scraping	2014-07-01 21:02:52.240000 UTC	"<p>I'm working on a python program which would scrape data (public data) from web pages. The problem is when I want to get source code of a web page which is accessable using button and it's based on ASP.NET. I can't just parse a href from the page as usual. </p>  <p>So my question is: Is there a simple way how to get the source code of the ASP.NET page?</p>  <p>To explain it clearly I'm attaching one web page based on ASP.NET: In this case I want to get soure code of page which is displayed when I click on ""Radiátor topení (1)"" in the middle of the page.  You can see the parent page where is the button on which I want to simulate click <a href=""http://www.autokelly.cz/#|Y33buV4cvEnkJxvjhfNBp5qoBS6S7ylpNyzxFTblgJ+IIwJ1hnG91bOJEUxEv+G7zorRbTmNDCkrGhun15oxZjxf6xzUEnd5Iknnrap0kUuWLxcWjKC36KLgswQH0Oo+2k9M3EI24SYhKZvQdlG2vscuyMjOhticzgxVondhG5A="" rel=""nofollow"" title=""This is the parent page where is the button situated"">here</a>!</p>  <p>I was trying to check source code of this (parent) page and look for some url near the ""Radiátor topení (1)"" text but I've found only this: </p>  <p><code>&lt;td class=""CatalogCell""&gt;&lt;a onclick="" return PathClick(&amp;#39;3761801;176564;356239;922141;922488;922507;922508&amp;#39;)""&gt;&lt;H2 class=""CatalogH""&gt;Radiátor topení (1)&lt;/H2&gt;&lt;/a&gt;&lt;/td&gt;</code> and I'm afraid, this wont help me.</p>  <p>I'm looking for a simpliest way because I'm not expert in ASP.NET nor Javascript. Thanks for advices!</p>"	"<p>The program is in python, which gives the html source of the link.</p>  <pre><code>import urllib2 from bs4 import BeautifulSoup  link=""http://www.example.com"" hdr = {'User-Agent': 'Mozilla/5.0'} req = urllib2.Request(link,headers=hdr)  page = urllib2.urlopen(link) soup = BeautifulSoup(page,'html.parser')  print soup </code></pre>"
24623590	Using python to click items on a page with text changing javascript and be able to parse the new information	javascript|python|html|parsing|scripting	2014-07-08 04:12:50.643000 UTC	"<p>I am looking to find a way to code a script in python that can click all the items in my Steam inventory. For those who do not know what that is here is an example:</p>  <p><a href=""http://steamcommunity.com/id/timetoidle5/inventory/#753_0"" rel=""nofollow"">http://steamcommunity.com/id/timetoidle5/inventory/#753_0</a></p>  <p>Ideally it should be able to click each of the links and parse the new information that it gets. Ie. it should be able to find the difference between the different Left 4 Dead 2 cards. </p>  <p>I have done some research and I have been told that downloading the selenium module may be the best way to deal with javascript on a webpage. Although I am still not entirely sure what the best way is. I have heard that mechanize may work as well, but is made for static webpages (webpages with little to no javascript?). </p>  <p>I was hoping also for some tips/steps on how to get started on something like this. I already have some experience with HTML and CSS so I know my way around the syntax and currently I am quickly reading through a Javascript book. I also have done some Python scripting in the past and taken a few introductory courses on it.</p>"	
24658633	"Using python to interface with online forms and interface with javascript associated with ""type=button"" inputs"	python|mechanize|spidermonkey	2014-07-09 16:05:43.897000 UTC	"<p>I need to fill an online form which has button running java-script in the background, I have successfully filled data in all the available fields using python mechanize module.</p>  <p>I have read that I can use spidermonkey to get such a task done. On clicking on the button named ""browse"", a window pop's up and a file that is stored on the server is selected and the Id of the file is returned to the original web-page.Th following are the HTML and javascript for the page:</p>  <p><a href=""https://drive.google.com/file/d/0B5veiNJUXUAWWXdvRVY2cWcxbWc/edit?usp=sharing"" rel=""nofollow"">https://drive.google.com/file/d/0B5veiNJUXUAWWXdvRVY2cWcxbWc/edit?usp=sharing</a></p>  <p>Can you please suggest me a way to perform this ask as I am not acquainted with web-scraping and have no idea of which module to use to emulate the things the javascript is doing in python.</p>"	"<p>According to mechanize's docs, it does not interact or deal with JavaScript in any way. I learned this the hard way, and I ended up using headless Selenium, which is effectively browser automation without any visual component. </p>"
24679357	Iterate javascript Object with arrays in Python	javascript|python|ajax|pyramid	2014-07-10 14:34:56.987000 UTC	"<p>I have a bunch of text boxes to get input from the user. When the user clicks one the ""done"" button(just a regular button), I get all the input and store it in an associative array and pass it to my python method.</p>  <p>This is what the data looks like: <img src=""https://i.stack.imgur.com/cmqhH.png"" alt=""enter image description here""></p>  <p>then I convert it to json and send it to my python function:</p>  <pre><code>$.ajax({         url: ""http://127.0.0.1:6543/create_device"",         type: ""POST"",         data: JSON.stringify(data),         contentType: 'application/json; charset=utf-8',         success: function (response, textStatus, jqXHR) {             alert(""done"");         },         error: function (jqXHR, textStatus, errorThrown) {             //change this back to error throwing after wards             alert(""error"");         }     }); </code></pre>  <p>Then in my python function I have this:</p>  <pre><code>def create_device(request): #get the json data from the ajax call data = request.json_body  for key in data:     print ""key: "" + key </code></pre>  <p>This problem is I'm not sure how I'd iterate over the arrays stored under <code>genericData</code> and <code>staticData</code>. When I try to iterate them it seems only to be iterating the characters in the words instead of the arrays. This is what my javascript looks like(refer to picture to see what the data looks like):</p>  <pre><code>    data = {     'staticData': staticData,     'genericData': genericData } </code></pre>  <p><strong>EDIT</strong></p>  <p>This is the code that seems to work except my array is empty and I have no idea how</p>  <pre><code>for key in data:     for val in data[key]:         print ""-----------------"" + val </code></pre>"	"<p>So you had two arrays, but was using them as ""associative arrays"", or ""dicts"", or ""objects"", which still worked fine because you can assign arbitrary properties to arrays in JS: </p>  <pre><code>var a = []; // equivalent to a = new Array(); a.foo = 'boo'; </code></pre>  <p>The arrays were always empty though:</p>  <pre><code>console.log(a.foo); // prints 'boo' console.log(a['foo']); // equivalent to the above, prints 'boo' console.log(a.length); // 0 - the array is empty console.log(a[0]); // undefined </code></pre>  <p>so when they were passed to JSON.stringify, it simply serialized them as empty arrays: <code>[]</code>, because, obviously, when JSON serializer sees an array it serializes it as an array, not as object... </p>  <p>On your screenshot you can see exactly that: you have an array of zero length, which has some additional properties assigned.</p>  <p>That was an inventive way to shoot yourself in the foot indeed :))</p>  <p>Further reading:</p>  <ul> <li><a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array"" rel=""nofollow"">MDN article on Array</a></li> <li><a href=""http://andrewdupont.net/2006/05/18/javascript-associative-arrays-considered-harmful/"" rel=""nofollow"">JavaScript ""Associative Arrays"" Considered Harmful</a> (nicely illustrates the problem)</li> </ul>"
24679357	Iterate javascript Object with arrays in Python	javascript|python|ajax|pyramid	2014-07-10 14:34:56.987000 UTC	"<p>I have a bunch of text boxes to get input from the user. When the user clicks one the ""done"" button(just a regular button), I get all the input and store it in an associative array and pass it to my python method.</p>  <p>This is what the data looks like: <img src=""https://i.stack.imgur.com/cmqhH.png"" alt=""enter image description here""></p>  <p>then I convert it to json and send it to my python function:</p>  <pre><code>$.ajax({         url: ""http://127.0.0.1:6543/create_device"",         type: ""POST"",         data: JSON.stringify(data),         contentType: 'application/json; charset=utf-8',         success: function (response, textStatus, jqXHR) {             alert(""done"");         },         error: function (jqXHR, textStatus, errorThrown) {             //change this back to error throwing after wards             alert(""error"");         }     }); </code></pre>  <p>Then in my python function I have this:</p>  <pre><code>def create_device(request): #get the json data from the ajax call data = request.json_body  for key in data:     print ""key: "" + key </code></pre>  <p>This problem is I'm not sure how I'd iterate over the arrays stored under <code>genericData</code> and <code>staticData</code>. When I try to iterate them it seems only to be iterating the characters in the words instead of the arrays. This is what my javascript looks like(refer to picture to see what the data looks like):</p>  <pre><code>    data = {     'staticData': staticData,     'genericData': genericData } </code></pre>  <p><strong>EDIT</strong></p>  <p>This is the code that seems to work except my array is empty and I have no idea how</p>  <pre><code>for key in data:     for val in data[key]:         print ""-----------------"" + val </code></pre>"	"<p>In my javascript I had <code>genericData</code> and <code>staticData</code> as <code>= new Array()</code>. Instead I just did this :</p>  <pre><code>    var genericData = {};     var staticData = {}; </code></pre>  <p>Then kept everything else the same: </p>  <pre><code>var data = { 'genericData' : genericData, 'staticData': staticData }; JSON.strinify(data). </code></pre>  <p>Now my python code works as I want it to.</p>"
24719592	sending data as JSON object from Python to Javascript with Jinja	javascript|python|json|python-2.7|jinja2	2014-07-13 04:40:01.450000 UTC	"<p>I'm trying to send a lat/long point as a JSON object from Python to a javascript. I'm using Flask so the following is Jinja templating..</p>  <p>Python:</p>  <pre><code>@app.route('/') def homepage():     lat_lng = (39.7392,-104.9847)      return render_template(""index_v2.html"", lat_lng=json.dumps(lat_lng)) </code></pre>  <p>html with js:</p>  <pre><code>&lt;script type='text/javascript'&gt;     var map;     function initialize() {       // Create the map.       var lat_lng = eval('({{ lat_lng }})')       map = new google.maps.Map(document.getElementById('map-canvas'), {         zoom: 8,         center: new google.maps.LatLng(lat_lng)       });      }      google.maps.event.addDomListener(window, 'load', initialize);   &lt;/script&gt; </code></pre>  <p>I'm using the eval because the standard Jinja notation of variable = {{ data }} isn't working and I found some advice that eval was necessary. Any advice?</p>"	"<p><a href=""http://flask.pocoo.org/docs/templating/#standard-filters"" rel=""noreferrer"">The Flask Jinja2 documentation</a> covers this pretty well. The first example under the ""Standard Filters"" section shows exactly how to embed a JSON object from python into a Javascript script:</p>  <pre><code>&lt;script type=text/javascript&gt;     doSomethingWith({{ user.username|tojson|safe }}); &lt;/script&gt; </code></pre>  <p>So in this case:</p>  <pre><code>var lat_lng = {{ lat_lng|tojson|safe }}; </code></pre>  <p><code>tojson</code> calls <code>dumps</code> on the data, so you should pass the data directly to the template rather than calling <code>dumps</code> on it, otherwise you double-serialize the data and end up with a JSON string.</p>"
24780681	"Call procedure registered in javascript from python server Autobahn, Wamp"	javascript|python|autobahn|wamp-protocol	2014-07-16 12:21:41.827000 UTC	"<p>just started to use autobahn. I already did some examples and now I am trying to make my own server and client based on the tutorials.</p>  <p>I will use the autobahn for python for the server and the javascript library on the client side. At the moment I am struggling with the problem that I can only call procedures from the client to the server but not vice versa and I can only publish events from client side.</p>  <p>If I try to call the procedure I get following error</p>  <pre><code>Failure: autobahn.wamp.exception.ApplicationError:  ApplicationError('wamp.error.no_such_procedure', args = (""no procedure  'com.myapp.add2client' registered"",), kwargs = {}) </code></pre>  <p>So it seems the application is not registered, but on the client side it look like it does as I get an precedure id.</p>  <pre><code>Procedure registered: 4026531820798724  </code></pre>  <p>Can anyone point me in the right direction, please?</p>  <p><strong>Client side</strong></p>  <pre><code>&lt;script&gt;    var connection = new autobahn.Connection({      url: 'ws://raspberrypi.local:8080',      realm: 'realm1'   });      connection.onopen = function (session) {         // 1) subscribe to a topic        function onevent(args) {           console.log(""Event:"", args[0]);        }        session.subscribe('com.myapp.hellofromserver', onevent);         // 2) publish an event        session.publish('com.myapp.hellofromclient', ['Hello, world!']);         // 3) register a procedure for remoting        function add2(args) {           console.log(""procedure called, result:"", res);           return args[0] + args[1];        }        session.register('com.myapp.add2client', add2).then(            function (registration) {               console.log(""Procedure registered:"", registration.id);            },            function (error) {               console.log(""Registration failed:"", error);            }         );         // 4) call a remote procedure        session.call('com.myapp.add2server', [10, 10]).then(           function (res) {              console.log(""Result:"", res);           }        );     };      connection.open();    &lt;/script&gt; </code></pre>  <p><strong>Server side</strong></p>  <pre><code> # Imports     import sys      from twisted.python import log    from twisted.internet import reactor    from twisted.internet.defer import inlineCallbacks    from twisted.internet.endpoints import serverFromString     from autobahn.wamp import router, types    from autobahn.twisted.util import sleep    from autobahn.twisted import wamp, websocket     class MyBackendComponent(wamp.ApplicationSession):     def onConnect(self):       self.join(""realm1"")      @inlineCallbacks    def onJoin(self, details):         # 1) subscribe to a topic       def onevent(msg):          print(""Got event: {}"".format(msg))        yield self.subscribe(onevent, 'com.myapp.hellofromclient')        # 2) publish an event       self.publish('com.myapp.hellofromserver', 'Hello, world!')        # 3) register a procedure for remoting       def add2(x, y):          return x + y        self.register(add2, 'com.myapp.add2server');        # 4) call a remote procedure       res = yield self.call('com.myapp.add2client', 2, 3)       print(""Got result: {}"".format(res))        if __name__ == '__main__':     ## 0) start logging to console    log.startLogging(sys.stdout)     ## 1) create a WAMP router factory    router_factory = router.RouterFactory()     ## 2) create a WAMP router session factory    session_factory = wamp.RouterSessionFactory(router_factory)     ## 3) Optionally, add embedded WAMP application sessions to the router    component_config = types.ComponentConfig(realm = ""realm1"")    component_session = MyBackendComponent(component_config)    session_factory.add(component_session)     ## 4) create a WAMP-over-WebSocket transport server factory    transport_factory = websocket.WampWebSocketServerFactory(session_factory, \                                                             debug = True, \                                                             debug_wamp = False)     ## 5) start the server from a Twisted endpoint    server = serverFromString(reactor, ""tcp:8080"")    server.listen(transport_factory)     ## 6) now enter the Twisted reactor loop    reactor.run() </code></pre>  <p><strong>Exception</strong></p>  <pre><code>    Unhandled error in Deferred: Unhandled Error Traceback (most recent call last): Failure: autobahn.wamp.exception.ApplicationError: ApplicationError('wamp.error.no_such_procedure', args = (""no procedure 'com.myapp.add2client' registered"",), kwargs = {}) Got event: Hello, my dear server! </code></pre>  <p>THANKS A LOT!</p>"	"<p>At the time the backend component connects to the router and tries to call <code>com.myapp.add2client</code>, the client (browser) is not yet connected, and hence the procedure is not yet registered.</p>  <p>If you run both your front- and your backend component against an independently running WAMP router, you can control the order of component start. If you run your backend component along an embedded router (as you do), then your backend component will start earlier than any frontend component that might connect.</p>"
24829726	python function to return javascript date.getTime()	javascript|python|date|datetime|gettime	2014-07-18 16:22:29.510000 UTC	"<p>I'm attempting to create a simple python function which will return the same value as javascript <code>new Date().getTime()</code> method. As written <a href=""http://www.w3schools.com/js/js_dates.asp"" rel=""noreferrer"">here</a>, javascript getTime() method returns number of milliseconds from 1/1/1970</p>  <p>So I simply wrote this python function:  </p>  <pre><code>def jsGetTime(dtime):     diff = datetime.datetime(1970,1,1)     return (dtime-diff).total_seconds()*1000 </code></pre>  <p>while the parameter dtime is a python datetime object.</p>  <p>yet I get wrong result. what is the problem with my calculation?</p>"	"<p>Javascript's Date does not work like you expect. But your python code is correct.</p>  <p>According to <a href=""http://www.epochconverter.com/epoch/timestamp-list.php"" rel=""nofollow"">The epoch time listing</a>, the epoch time for January 1, 2010 should be </p>  <blockquote>   <p>1262304000</p> </blockquote>  <p>Python: (appears to be correct)</p>  <pre><code>&gt;&gt;&gt; (datetime(2010,1,1) - datetime(1970,1,1)).total_seconds() 1262304000.0 </code></pre>  <p>Javascript (appears to be wrong)</p>  <pre><code>&gt; new Date(2010,1,1).getTime() 1265011200000 </code></pre>  <p>or</p>  <pre><code>&gt; new Date(2010,1,1).getTime()/1000 1265011200 </code></pre>  <p>This is because Javascript date is not creating the date the way you expect. First, it creates the date in your current timezone, and not in UTC. So a ""get current time"" in javascript would be the clients time, whereas python would return the utc time. Also note that there is a bug in JS Date where the month is actually 0 based and not 1 based.</p>  <pre><code>&gt; new Date(2010,1,1,0,0,0,0) Date 2010-02-01T08:00:00.000Z  &gt; new Date(2010,0,1,0,0,0,0) Date 2010-01-01T08:00:00.000Z </code></pre>  <p>Javascript can create a date from an epoch time:</p>  <pre><code>&gt; new Date(1262304000000) Date 2010-01-01T00:00:00.000Z </code></pre>  <p>Which is correct.</p>  <p><strong>Alternatively you could use the following JS function to get a more accurate time</strong> please note that the month still starts at 0 and not 1</p>  <pre><code>&gt; Date.UTC(2010,0,1) 1262304000000 </code></pre>"
24829726	python function to return javascript date.getTime()	javascript|python|date|datetime|gettime	2014-07-18 16:22:29.510000 UTC	"<p>I'm attempting to create a simple python function which will return the same value as javascript <code>new Date().getTime()</code> method. As written <a href=""http://www.w3schools.com/js/js_dates.asp"" rel=""noreferrer"">here</a>, javascript getTime() method returns number of milliseconds from 1/1/1970</p>  <p>So I simply wrote this python function:  </p>  <pre><code>def jsGetTime(dtime):     diff = datetime.datetime(1970,1,1)     return (dtime-diff).total_seconds()*1000 </code></pre>  <p>while the parameter dtime is a python datetime object.</p>  <p>yet I get wrong result. what is the problem with my calculation?</p>"	"<p>One thing I feel compelled to point out here is: If you are trying to sync your client time and your server time you are going to need to pass the server time to the client and use that as an offset. Otherwise you are always going to be a bit out of sync as your clients/web-browsers will be running on various machines which have there own clock. However it is a common pattern to reference time in a unified manor using epoch milliseconds to sync between the clients and the server.</p>  <p>The Python</p>  <pre><code>import time, datetime  def now_milliseconds():    return int(time.time() * 1000)  # reference time.time # Return the current time in seconds since the Epoch. # Fractions of a second may be present if the system clock provides them. # Note: if your system clock provides fractions of a second you can end up  # with results like: 1405821684785.2  # our conversion to an int prevents this  def date_time_milliseconds(date_time_obj):    return int(time.mktime(date_time_obj.timetuple()) * 1000)  # reference: time.mktime() will # Convert a time tuple in local time to seconds since the Epoch.  mstimeone = now_milliseconds()  mstimetwo = date_time_milliseconds(datetime.datetime.utcnow())  # value of mstimeone # 1405821684785 # value of mstimetwo # 1405839684000 </code></pre>  <p>The Javascript</p>  <pre><code>d = new Date() d.getTime() </code></pre>  <p>See this post for more reference on <a href=""https://stackoverflow.com/a/221297/1184492"">javascript date manipulation</a>.</p>"
24882778	AJAX Call to python function not happening from JavaScript function in Django	javascript|jquery|python|ajax|django	2014-07-22 08:47:46.737000 UTC	"<p>This is a full flow which has to be taken care here. I am coding in Django/Python/Web Development.</p>  <p>I have an html page which has got a dummy button which is triggering all the functions that I want to perform now. Instead of the dummy button I want an uploadFunction() to perform the same actions. I googled and found that the best way to do this was by using AJAX, since the action to be performed requires to hit the server.</p>  <p>This is my uploadFunction() in jsfunctions.js file</p>  <pre><code>    function upload() {    //does some upload           alert('before dummy')     ajaxCallFunction(); } </code></pre>  <p>I am giving a call to a ajaxCallFunction() which I have in another separate file ajax.js. The ajaxCallFunction() is as follows:</p>  <pre><code> $(document).ready(function(){    function ajaxCallFunction(){     alert('right before ajax call')      $.ajax({         type: ""POST"",         url: ""/dummy/{{ frame.slug }}/"",         alert('AJAX CALL');         data: {         'snapshot' : $('#snapshot').val(),         },         success: dummy,         dataType: 'html'         alert('just finished')         }         headers:{             'X-CSRFToken':csrftoken         }     }); } });      function dummySuccess(data, textStatus, jqXHR) {     $('#dummySuccess').html(data) } </code></pre>  <p>I want my the upload() to call the ajaxCallFunction() and redirect it to a method in views.py (which I have mapped in my urls.py). However, my code does not hit the ajaxCallFunction at all.(I cant see the alerts that I have put in the ajaxCallFunction).  In my calling page I have all of these included.</p>  <pre><code>&lt;script language=""javascript"" type=""text/css""&gt; &lt;/script&gt; &lt;script src=""http://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js""&gt;&lt;/script&gt;         &lt;script language=""javascript"" src =""/static/js/jsfunctions.js""&gt;&lt;/script&gt; &lt;script language=""javascript"" src =""/static/js/ajax.js""&gt;&lt;/script&gt; </code></pre>  <p>I have the the function which gets the <code>CSRF Token</code> too (since this is a post method) in my ajax.js. Am I missing something here? What else do I need to do to make this ajax call? Please help. Thanks in advance :)</p>"	"<p>In JavaScript the order in which you load the .js files matters.  Have you tried loading <code>ajax.js</code> before <code>jsfunctions.js</code>?</p>  <p>Basically when <code>jsfunctions.js</code> is loaded in your browser the functions in <code>ajax.js</code> are <code>undefined</code> if the latter has not been loaded.</p>  <p>Also, make sure that there is a field called <code>'csrfmiddlewaretoken'</code> present in the <code>data</code> in the ajax call. From a maintainability perspective, instead of handling the data directly you could keep it in a form and then serialize it when you send it to your back end. Like so:</p>  <pre><code>&lt;form id=""my-form"" method=""POST"" action=""/dummy/{{ frame.slug }}/""&gt;     {% csrf_token %}     &lt;input name=""whatever"" value=""your_data_goes_here"" /&gt; &lt;/form&gt; </code></pre>  <p>Then in your ajax call:</p>  <pre><code>var form = $('#my-form'); $.ajax({     type: form.attr('method'),     url: form.attr('action'),     data: form.serialize(),     success: function() {         alert(""Huzzah!"");     },     error: function() {         alert(""Oh no!"");     } }); </code></pre>  <p>And finally in your <code>views.py</code>, you can address your data:</p>  <pre><code>if ""whatever"" in request.POST:     my_data = request.POST.get(""whatever"") </code></pre>"
24923377	What is the Python equivalent of Javascript's `Date.prototype.toISOString`?	python|iso8601	2014-07-24 00:45:24.357000 UTC	"<p>In Javascript, <code>Date.prototype.toISOString</code> gives an ISO 8601 UTC datetime string:</p>  <pre><code>new Date().toISOString() // ""2014-07-24T00:19:37.439Z"" </code></pre>  <p>Is there a Python function with behavior that matches Javascript's?</p>  <hr>  <p>Attempts:</p>  <p>Python's <code>datetime.datetime.isoformat</code> is similar, but not quite the same:</p>  <pre><code>datetime.datetime.now().isoformat() // '2014-07-24T00:19:37.439728' </code></pre>  <p>Using <code>pytz</code> I can at least make UTC explicit:</p>  <pre><code>pytz.utc.localize(datetime.now()).isoformat()) // '2014-07-24T00:19:37.439728+00:00' </code></pre>"	"<p>Using f-strings in Python 3.6+</p>  <pre class=""lang-py prettyprint-override""><code>from datetime import datetime  f'{datetime.now():%Y-%m-%dT%H:%M:%SZ}' </code></pre>"
24923377	What is the Python equivalent of Javascript's `Date.prototype.toISOString`?	python|iso8601	2014-07-24 00:45:24.357000 UTC	"<p>In Javascript, <code>Date.prototype.toISOString</code> gives an ISO 8601 UTC datetime string:</p>  <pre><code>new Date().toISOString() // ""2014-07-24T00:19:37.439Z"" </code></pre>  <p>Is there a Python function with behavior that matches Javascript's?</p>  <hr>  <p>Attempts:</p>  <p>Python's <code>datetime.datetime.isoformat</code> is similar, but not quite the same:</p>  <pre><code>datetime.datetime.now().isoformat() // '2014-07-24T00:19:37.439728' </code></pre>  <p>Using <code>pytz</code> I can at least make UTC explicit:</p>  <pre><code>pytz.utc.localize(datetime.now()).isoformat()) // '2014-07-24T00:19:37.439728+00:00' </code></pre>"	"<p>This did it for me, just using python's standard library:</p> <pre><code>from datetime import datetime, timezone  def isoformat_js(dt: datetime):     return (         dt.astimezone(timezone.utc)         .isoformat(timespec=&quot;milliseconds&quot;)         .replace(&quot;+00:00&quot;, &quot;Z&quot;)     )    isoformat_js(datetime(2014, 7, 24, 0, 19, 37, 439000)) # =&gt; '2014-07-24T00:19:37.439Z' </code></pre>"
24923377	What is the Python equivalent of Javascript's `Date.prototype.toISOString`?	python|iso8601	2014-07-24 00:45:24.357000 UTC	"<p>In Javascript, <code>Date.prototype.toISOString</code> gives an ISO 8601 UTC datetime string:</p>  <pre><code>new Date().toISOString() // ""2014-07-24T00:19:37.439Z"" </code></pre>  <p>Is there a Python function with behavior that matches Javascript's?</p>  <hr>  <p>Attempts:</p>  <p>Python's <code>datetime.datetime.isoformat</code> is similar, but not quite the same:</p>  <pre><code>datetime.datetime.now().isoformat() // '2014-07-24T00:19:37.439728' </code></pre>  <p>Using <code>pytz</code> I can at least make UTC explicit:</p>  <pre><code>pytz.utc.localize(datetime.now()).isoformat()) // '2014-07-24T00:19:37.439728+00:00' </code></pre>"	"<pre><code># Used dateutil package from https://pypi.org/project/python-dateutil/ import datetime import dateutil.tz  def iso_format(dt):     try:         utc_dt = dt.astimezone(dateutil.tz.tzutc())     except ValueError:         utc_dt = dt     ms = ""{:.3f}"".format(utc_dt.microsecond / 1000000.0)[2:5]     return datetime.datetime.strftime(utc_dt, '%Y-%m-%dT%H:%M:%S.{0}Z'.format(ms)) </code></pre>"
24923377	What is the Python equivalent of Javascript's `Date.prototype.toISOString`?	python|iso8601	2014-07-24 00:45:24.357000 UTC	"<p>In Javascript, <code>Date.prototype.toISOString</code> gives an ISO 8601 UTC datetime string:</p>  <pre><code>new Date().toISOString() // ""2014-07-24T00:19:37.439Z"" </code></pre>  <p>Is there a Python function with behavior that matches Javascript's?</p>  <hr>  <p>Attempts:</p>  <p>Python's <code>datetime.datetime.isoformat</code> is similar, but not quite the same:</p>  <pre><code>datetime.datetime.now().isoformat() // '2014-07-24T00:19:37.439728' </code></pre>  <p>Using <code>pytz</code> I can at least make UTC explicit:</p>  <pre><code>pytz.utc.localize(datetime.now()).isoformat()) // '2014-07-24T00:19:37.439728+00:00' </code></pre>"	"<p>The issue is <a href=""https://www.w3.org/TR/NOTE-datetime"" rel=""nofollow noreferrer"">ISO 8601 date format</a>  itself allows for two things:</p> <ol> <li>Use of either 'Z' or '+00:00' to represent UTC as used by javascript and python respectively</li> <li>Number of digits in the decimal fraction of a second is not limited. So, python uses 6 (microsecond precision) and javascript uses 3 (millisecond precision)</li> </ol> <p>So, both are correct and we need to handle the conversion with one or more of the tricks above. I use the following:</p> <ol> <li><p>Python date object to javascript ISO format string: <code>pyDateObj = datetime.now() jsISOTimeStr = pyDateObj.astimezone(pytz.timezone(&quot;UTC&quot;)).isoformat()[:-9] + 'Z'</code></p> </li> <li><p>Javascript date object to python ISO format string: In javascript: <code>const jsDateObj = new Date(); jsISOTimeStr = date.toISOString()</code> Later, in python: <code>pyDateObj = datetime.fromisoformat(jsISOTimeStr [:-1]+'000+00:00')</code></p> </li> </ol>"
24923377	What is the Python equivalent of Javascript's `Date.prototype.toISOString`?	python|iso8601	2014-07-24 00:45:24.357000 UTC	"<p>In Javascript, <code>Date.prototype.toISOString</code> gives an ISO 8601 UTC datetime string:</p>  <pre><code>new Date().toISOString() // ""2014-07-24T00:19:37.439Z"" </code></pre>  <p>Is there a Python function with behavior that matches Javascript's?</p>  <hr>  <p>Attempts:</p>  <p>Python's <code>datetime.datetime.isoformat</code> is similar, but not quite the same:</p>  <pre><code>datetime.datetime.now().isoformat() // '2014-07-24T00:19:37.439728' </code></pre>  <p>Using <code>pytz</code> I can at least make UTC explicit:</p>  <pre><code>pytz.utc.localize(datetime.now()).isoformat()) // '2014-07-24T00:19:37.439728+00:00' </code></pre>"	"<blockquote>   <p>Is there a Python function with behavior that matches Javascript's?</p> </blockquote>  <p>Not in the standard library, but you could build your own.</p>"
24923377	What is the Python equivalent of Javascript's `Date.prototype.toISOString`?	python|iso8601	2014-07-24 00:45:24.357000 UTC	"<p>In Javascript, <code>Date.prototype.toISOString</code> gives an ISO 8601 UTC datetime string:</p>  <pre><code>new Date().toISOString() // ""2014-07-24T00:19:37.439Z"" </code></pre>  <p>Is there a Python function with behavior that matches Javascript's?</p>  <hr>  <p>Attempts:</p>  <p>Python's <code>datetime.datetime.isoformat</code> is similar, but not quite the same:</p>  <pre><code>datetime.datetime.now().isoformat() // '2014-07-24T00:19:37.439728' </code></pre>  <p>Using <code>pytz</code> I can at least make UTC explicit:</p>  <pre><code>pytz.utc.localize(datetime.now()).isoformat()) // '2014-07-24T00:19:37.439728+00:00' </code></pre>"	"<p>You can use this code:</p>  <pre><code>import datetime now = datetime.datetime.now() iso_time = now.strftime(""%Y-%m-%dT%H:%M:%SZ"")  </code></pre>"
24923377	What is the Python equivalent of Javascript's `Date.prototype.toISOString`?	python|iso8601	2014-07-24 00:45:24.357000 UTC	"<p>In Javascript, <code>Date.prototype.toISOString</code> gives an ISO 8601 UTC datetime string:</p>  <pre><code>new Date().toISOString() // ""2014-07-24T00:19:37.439Z"" </code></pre>  <p>Is there a Python function with behavior that matches Javascript's?</p>  <hr>  <p>Attempts:</p>  <p>Python's <code>datetime.datetime.isoformat</code> is similar, but not quite the same:</p>  <pre><code>datetime.datetime.now().isoformat() // '2014-07-24T00:19:37.439728' </code></pre>  <p>Using <code>pytz</code> I can at least make UTC explicit:</p>  <pre><code>pytz.utc.localize(datetime.now()).isoformat()) // '2014-07-24T00:19:37.439728+00:00' </code></pre>"	"<p>I attempted to format the string to exactly how it is in the javascript output.</p>  <pre><code>from datetime import datetime  def iso_format(dt):     try:         utc = dt + dt.utcoffset()     except TypeError as e:         utc = dt     isostring = datetime.strftime(utc, '%Y-%m-%dT%H:%M:%S.{0}Z')     return isostring.format(int(round(utc.microsecond/1000.0)))  print iso_format(datetime.now()) #""2014-07-24T00:19:37.439Z"" </code></pre>"
24950530	Selenium Python click a link to javascript in an unordered list	python-2.7|selenium	2014-07-25 07:42:52.723000 UTC	"<p>I'm trying to click and activate the javascript link with Selenium. It's for a 5 star rating widget.  five-stars is the exact item below. The other items, IE 4 star are not fully shown.</p>  <pre><code>&lt;div id=""percentages_and_ratings""&gt; &lt;div id=""percentages""&gt; &lt;div id=""rating""&gt; &lt;ul id=""personality-rating"" class=""star-rating profile_rating "" onmouseout=""Votes.publicStarOut(this)"" onmouseover=""Votes.publicStarOver(this)""&gt; &lt;li id=""current-personality-3198779465475184989-1"" class=""current-rating"" style=""width: 0%;""&gt;&lt;/li&gt; &lt;li&gt;... &lt;li&gt;... &lt;li&gt;... &lt;li&gt;... &lt;li&gt; &lt;a class=""five-stars"" title="""" href=""javascript:processVoteNote('vote', 'personality', 5, '222222222222222', false, '', '', Profile.profileHeadingVote);""&gt;5&lt;/a&gt; &lt;/li&gt; &lt;li class=""cant-tell"" style=""display: none;""&gt; &lt;li class=""click-away""&gt; </code></pre>  <p>The selenium unit test output looks like</p>  <pre><code>driver.find_element_by_xpath(""(//a[contains(text(),'5')])[2]"").click() </code></pre>  <p>but that doesn't work. Selecting the xpath, CSS, HTML with firebug doesn't work either. Any ideas? I've been at it for a few nights now so it's time to ask :-)</p>  <p>I'm using Selenium web driver and python 2.7</p>  <p>Here is how I ended up solving it..</p>  <pre><code>id = self.getID(driver) script = ""$(processVoteNote('vote', 'personality', 5, '""+id+""', false, '', '', Profile.profileHeadingVote));"" driver.execute_script(script) </code></pre>"	"<p>Based on the sample HTML you posted,  <code>browser.find_element_by_class_name('five-stars').click()</code> should successfully select and click that link. If there is more than one element on the page with that class name on the page, you could use <code>browser.find_elements_by_class_name('five-stars')</code>, iterate through that list to identify the relevant links, and then click them.</p>  <p>If you want to use an XPATH search, I'd recommend using <a href=""http://www.xpathtester.com/xpath"" rel=""nofollow"">xPath Tester</a> to try out different patterns.</p>"
24993048	Call python FUNCTION from javascript	javascript|python|angularjs|client-server	2014-07-28 10:16:29.580000 UTC	"<p>this question have been asked numerous times, I know and I'm sorry if by ignorance I didn't get the answers.</p>  <p>I have a hosting plan which doesn't allow me to install django, which was really nice to call an rest api easily with the routing settings.</p>  <p>What I want is to be able to call a python function from javascript code doing a get/post (I'm using AngularJs, but it would be the same making an ajax get/post.)</p>  <p>Let's say I have a js controller 'Employee' and a view 'CreateEmployee'.</p>  <p>From my javascript view, I can call my CreateEmployee() on the js controller, now my question is, how can I call a specific function (let's say) def CreateEmployee(params...) on my .py file?</p>  <p>All I found is making a get/post on my .py file, but didn't find how to invoke a specific function.</p>  <p>I probably don't get the python and client/server communication paradigm, I've been coding on asp.net WebForms for a long time, and since I can't use frameworks like Django I'm stuck.</p>  <p>Thanks</p>"	"<p>It doesn't have much to do with Python, really. Your javascript code is executed on the client's brower, and all it can do is issuing HTTP requests (synchronous or asynchronous). At this point which webserver / technology / language is used to handle the HTTP request is totally irrelevant. So, from the client javascript code POV, you are not ""calling a Python function"", you are sending an HTTP request and handling the HTTP response.</p>  <p>If your web host doesn't let you run django (or any wsgi-compliant script) then you'll probably have to either use plain CGI (warning: very primitive techno) or migrate to PHP (no comment). Or find another hosting that doesn't live in the past ;)</p>"
24993048	Call python FUNCTION from javascript	javascript|python|angularjs|client-server	2014-07-28 10:16:29.580000 UTC	"<p>this question have been asked numerous times, I know and I'm sorry if by ignorance I didn't get the answers.</p>  <p>I have a hosting plan which doesn't allow me to install django, which was really nice to call an rest api easily with the routing settings.</p>  <p>What I want is to be able to call a python function from javascript code doing a get/post (I'm using AngularJs, but it would be the same making an ajax get/post.)</p>  <p>Let's say I have a js controller 'Employee' and a view 'CreateEmployee'.</p>  <p>From my javascript view, I can call my CreateEmployee() on the js controller, now my question is, how can I call a specific function (let's say) def CreateEmployee(params...) on my .py file?</p>  <p>All I found is making a get/post on my .py file, but didn't find how to invoke a specific function.</p>  <p>I probably don't get the python and client/server communication paradigm, I've been coding on asp.net WebForms for a long time, and since I can't use frameworks like Django I'm stuck.</p>  <p>Thanks</p>"	"<p>You must have a way to communicate over HTTP with your server side Python code. <a href=""http://blog.luisrei.com/articles/flaskrest.html"" rel=""nofollow"">This</a> could help.</p>  <p>When you do, you communicate over HTTP. You will not invoke Python functions directly.</p>"
25022652	Clicking a Bootstrap JavaScript Radio Button Using Selenium in Python	python|django|twitter-bootstrap|selenium	2014-07-29 18:38:46.960000 UTC	"<h2>Question</h2> <p>What's the proper way to click on a radio button created using Bootstrap's JavaScript Button when running the browser via Selenium?</p> <h2>Background</h2> <p>I'm developing a WebApp using <a href=""https://www.djangoproject.com"" rel=""nofollow noreferrer"">Django</a> v1.7 and <a href=""http://getbootstrap.com"" rel=""nofollow noreferrer"">Bootstrap</a> v3.2.0 with functional tests performed using <a href=""http://www.seleniumhq.org"" rel=""nofollow noreferrer"">Selenium</a>. Some HTML pages have radio buttons created using <a href=""http://getbootstrap.com/javascript/#buttons"" rel=""nofollow noreferrer"">Bootstrap's JavaScript buttons</a>.</p> <pre class=""lang-html prettyprint-override""><code>&lt;form class=&quot;form-horizontal well&quot; role=&quot;form&quot; method=&quot;POST&quot;&gt;   &lt;div class=&quot;row&quot;&gt;     &lt;div class=&quot;btn-group btn-group-justified&quot; data-toggle=&quot;buttons&quot;&gt;       &lt;label class=&quot;btn btn-primary&quot;&gt;         &lt;input type=&quot;radio&quot; name=&quot;selected_test&quot; value=&quot;loop_on_failure&quot;           id=&quot;id_loop_on_failure&quot; /&gt;Loop on Failure       &lt;/label&gt;       &lt;label class=&quot;btn btn-primary&quot;&gt;         &lt;input type=&quot;radio&quot; name=&quot;selected_test&quot; value=&quot;test_until_failure&quot;           id=&quot;id_test_until_failure&quot; /&gt;Test Until Failure       &lt;/label&gt;     &lt;/div&gt;   &lt;/div&gt;   &lt;div class=&quot;row&quot;&gt;     &lt;div class=&quot;col-lg-6 col-lg-offset-3&quot;&gt;       &lt;div class=&quot;input-group&quot;&gt;         &lt;input type=&quot;text&quot; class=&quot;form-control&quot; autofocus name=&quot;serial_number&quot;           id=&quot;id_serial_number&quot; placeholder=&quot;Enter Serial Number&quot;&gt;         {% csrf_token %}         &lt;span class=&quot;input-group-btn&quot;&gt;           &lt;button class=&quot;btn btn-primary&quot; id=&quot;id_run_test&quot; type=&quot;submit&quot;&gt;             Test Board           &lt;/button&gt;         &lt;/span&gt;       &lt;/div&gt;     &lt;/div&gt;   &lt;/div&gt; &lt;/form&gt; </code></pre> <p>I am able to select the desired radio button, enter a S/N, and press the &quot;Test Board&quot; button when running via Django's <code>manage.py runserver</code>. However, when I run a functional test such as the following, I get an error. More specifically, the POST data doesn't contain the <code>selected_test</code> key, which leads me to believe the radio button isn't actually being clicked by Selenium.</p> <pre class=""lang-python prettyprint-override""><code>browser = webdriver.Firefox() browser.find_element_by_id('id_test_until_failure').click() self.assertTrue(browser.find_element_by_id(     'id_test_until_failure').is_selected()) </code></pre>"	"<p>Suppose you have the two radio buttons in a page, with the name gender and values ‘F’ and ‘M’. You should use the choose method the following way:</p> <pre><code>browser.choose('gender', 'F') </code></pre>"
25022652	Clicking a Bootstrap JavaScript Radio Button Using Selenium in Python	python|django|twitter-bootstrap|selenium	2014-07-29 18:38:46.960000 UTC	"<h2>Question</h2> <p>What's the proper way to click on a radio button created using Bootstrap's JavaScript Button when running the browser via Selenium?</p> <h2>Background</h2> <p>I'm developing a WebApp using <a href=""https://www.djangoproject.com"" rel=""nofollow noreferrer"">Django</a> v1.7 and <a href=""http://getbootstrap.com"" rel=""nofollow noreferrer"">Bootstrap</a> v3.2.0 with functional tests performed using <a href=""http://www.seleniumhq.org"" rel=""nofollow noreferrer"">Selenium</a>. Some HTML pages have radio buttons created using <a href=""http://getbootstrap.com/javascript/#buttons"" rel=""nofollow noreferrer"">Bootstrap's JavaScript buttons</a>.</p> <pre class=""lang-html prettyprint-override""><code>&lt;form class=&quot;form-horizontal well&quot; role=&quot;form&quot; method=&quot;POST&quot;&gt;   &lt;div class=&quot;row&quot;&gt;     &lt;div class=&quot;btn-group btn-group-justified&quot; data-toggle=&quot;buttons&quot;&gt;       &lt;label class=&quot;btn btn-primary&quot;&gt;         &lt;input type=&quot;radio&quot; name=&quot;selected_test&quot; value=&quot;loop_on_failure&quot;           id=&quot;id_loop_on_failure&quot; /&gt;Loop on Failure       &lt;/label&gt;       &lt;label class=&quot;btn btn-primary&quot;&gt;         &lt;input type=&quot;radio&quot; name=&quot;selected_test&quot; value=&quot;test_until_failure&quot;           id=&quot;id_test_until_failure&quot; /&gt;Test Until Failure       &lt;/label&gt;     &lt;/div&gt;   &lt;/div&gt;   &lt;div class=&quot;row&quot;&gt;     &lt;div class=&quot;col-lg-6 col-lg-offset-3&quot;&gt;       &lt;div class=&quot;input-group&quot;&gt;         &lt;input type=&quot;text&quot; class=&quot;form-control&quot; autofocus name=&quot;serial_number&quot;           id=&quot;id_serial_number&quot; placeholder=&quot;Enter Serial Number&quot;&gt;         {% csrf_token %}         &lt;span class=&quot;input-group-btn&quot;&gt;           &lt;button class=&quot;btn btn-primary&quot; id=&quot;id_run_test&quot; type=&quot;submit&quot;&gt;             Test Board           &lt;/button&gt;         &lt;/span&gt;       &lt;/div&gt;     &lt;/div&gt;   &lt;/div&gt; &lt;/form&gt; </code></pre> <p>I am able to select the desired radio button, enter a S/N, and press the &quot;Test Board&quot; button when running via Django's <code>manage.py runserver</code>. However, when I run a functional test such as the following, I get an error. More specifically, the POST data doesn't contain the <code>selected_test</code> key, which leads me to believe the radio button isn't actually being clicked by Selenium.</p> <pre class=""lang-python prettyprint-override""><code>browser = webdriver.Firefox() browser.find_element_by_id('id_test_until_failure').click() self.assertTrue(browser.find_element_by_id(     'id_test_until_failure').is_selected()) </code></pre>"	"<p>By switching the Selenium webdriver from Firefox to Chrome, I was tipped off that Selenium needs to actually click on the parent of the input tag. I believe this is due to the input tag being wrapped inside of the label tags, but I'm not certain of that. </p>  <p>Given I have an id on the input tag, the easiest way I found to do this was as follows:</p>  <pre class=""lang-python prettyprint-override""><code>browser.find_element_by_id(     'id_test_until_failure').find_element_by_xpath('..').click() </code></pre>"
25022693	Selenium python javascript popup	javascript|python|selenium|selenium-webdriver	2014-07-29 18:41:06.980000 UTC	"<p>I am using Selenium in Python to navigate to a website and fill in a form. There is a section of the code that let's you click on a button to open a pop-up node tree using javascript. I am able to click the button using the following code: </p>  <pre><code>from selenium import webdriver from selenium.webdriver.common.keys import Keys driver = webdriver.Ie(""C:\\IEDriverServer.exe"") driver.get('htto://someurl.com') popup = driver.find_element_by_xpath('//a[@onclick and @href = ""javascript:;"" and img/@alt = ""Node Tree""]') popup.click() driver.switch_to.alert </code></pre>  <p>At this point, everything on website becomes unclickable both in the pop-up box and on the actual site. What is causing this? Unfortunately I can't share the Javascript as it's internal to my company.</p>"	"<p>rather than switch_to.alert, how about drv.switch_to_alert() where drv is your driver instance.</p>  <p>I can't see anything in the python source that's immediately obvious by grepping that looks like the switch_to. syntax is supported.</p>  <p>I would have posted a comment, but I don't have the reputation to do so.</p>"
25024416	mac os x python/JavaScript IDE where I can use break points	javascript|python|macos|ide	2014-07-29 20:30:28.563000 UTC	<p>I looking for python/JavaScript IDE where I can put breakpoints. Currently I'm using coderunner but I can not put break points. I'll really appreciate you recommendations </p>	"<p>I use PyCharm.  It's a heavyweight IDE, so expect more features than you probably want if you're just getting started.  It has a very good integrated debugger.  You'll be able to break into both your Python and Javascript.  Further, you'll see a pretty nice productivity jump with all the editing support like auto complete and intellisense.  My advice is to stick with print() and logging as long as you can. For me getting a firm grasp of packages, python environments, virtualenv, command line tricks and git all before committing to the PyCharm IDE helped me adopt it with more confidence I was getting the value of all the integration.</p>"
25024416	mac os x python/JavaScript IDE where I can use break points	javascript|python|macos|ide	2014-07-29 20:30:28.563000 UTC	<p>I looking for python/JavaScript IDE where I can put breakpoints. Currently I'm using coderunner but I can not put break points. I'll really appreciate you recommendations </p>	"<p>I'm not an expert on Python, but I do work as a web developer and use JavaScript regularly. For that side of things, probably the easiest way is to use Chrome/Firefox debugger tools. You can do this manually by finding the line of code in the console and clicking (F12->Sources tab->Content scripts-><em>desired script</em>), or using the 'debugger' statement to toggle debug mode (F12->Console tab->type 'debugger' then return) and step through to what you need.</p>  <p>Additionally, if you're looking for an actual IDE, the only thing I've found online is <a href=""http://www.laurencegellert.com/2012/05/the-three-ways-of-setting-breakpoints-in-javascript/"" rel=""nofollow noreferrer"">the following</a>. Here's the relevant part of that article. I've never used it (and probably never will), but there it is all the same.</p>  <blockquote>   <p>Webstorm by IDEA supports setting breakpoints in the IDE. This requires launching the JavaScript debugger from IDEA. It must be configured in advance so it understands how to map JavaScript on the development server to JavaScript files in your environment. IDEA will automatically install a Chrome or Firefox plug-in to facilitate. This is pretty new technology and can be touchy.</p>      <p><img src=""https://i.stack.imgur.com/nlWdo.png"" alt=""cited image""></p> </blockquote>"
25037296	How to transfer int variable from python to javascript?	javascript|python|mysql|google-maps	2014-07-30 12:49:47.827000 UTC	"<p>I am currently doing a project wherein latitudes and longitudes are stored in a MySQL database. I plan to use these coordinates to create an overlay on top of google maps. to do that I require the maximum and minimum latitude and longitude, signifying the area over which the overlay will be. I have already written a python program which determines all of these coordinates. However, the coordinates need to be in a js program with the google maps API. I wanted to know whether it would be possible for me to transfer these variables to javascript. If not what would be the easiest way for me to run an SQL query from javascript and store the results to an integer variable?</p>"	"<p>Well first of all NEVER allow running SQL from JavaScript, its was too insecure and anybody can edit the query on the client side and fire any SQL query that way.</p>  <p>You can retrieve the longitude -latitude value from python script and before passing it to google maps API  in JavaScript and just to be 100% sure that they are float or int Values you can use <code>parseFloat()</code> or <code>parseInt()</code> . </p>  <p>Here us sample usage and results of parse float function. </p>  <p><strong>JS code</strong></p>  <pre><code>var a = parseFloat(""10"") + ""&lt;br&gt;""; var b = parseFloat(""10.00"") + ""&lt;br&gt;""; var c = parseFloat(""10.33"") + ""&lt;br&gt;""; var d = parseFloat(""34 45 66"") + ""&lt;br&gt;""; var e = parseFloat("" 60 "") + ""&lt;br&gt;""; var f = parseFloat(""40 years"") + ""&lt;br&gt;""; var g = parseFloat(""He was 40"") + ""&lt;br&gt;""; </code></pre>  <p><strong>Output</strong></p>  <pre><code>10 10 10.33 34 60 40 NaN </code></pre>  <p>On how to get values from python script you can refer to <a href=""http://kooneiform.wordpress.com/2010/02/28/python-and-ajax-for-beginners-with-webpy-and-jquery/"" rel=""nofollow"">this tutorail</a></p>"
25049391	Getting data from python in Javascript and AJAX	javascript|python|ajax|json	2014-07-31 01:04:22.600000 UTC	"<p>I have some issues retrieving info from python and try to show the data in a html page I get the date from a python script (data.py)</p>  <pre><code>import cx_Oracle import json  lst_proveedores=[{}] conn_str = 'user/pass@database' conn = cx_Oracle.connect(conn_str) c = conn.cursor() c.execute('select id, name from provider') for row in c:     record1 = {""id"":row[0], ""name"":row[1]}     lst_proveedores.append(record1) json_string = json.dumps(lst_proveedores) print json_string conn.close() </code></pre>  <p>I try to parse the info with AJAX in a html page</p>  <pre><code>&lt;!DOCTYPE html&gt; &lt;html&gt; &lt;head&gt; &lt;script type=""text/javascript"" src=""jquery.js""&gt;&lt;/script&gt; &lt;script type=""text/javascript""&gt; function ajax_get_json(){     var results = document.getElementById(""results"");     var hr = new XMLHttpRequest();     hr.open(""GET"", ""prov1.py"", true);     hr.responseType = ""JSON"";     hr.setRequestHeader(""Content-Type"", ""application/json"", true);     hr.onreadystatechange = function() {             if(hr.readyState == 4 &amp;&amp; hr.status == 200) {                     var data = JSON.parse(hr.responseText);                         results.innerHTML = """";                         for(var obj in data){                                 results.innerHTML += data[obj].id+"" is ""+data[obj].nombre+""&lt;hr /&gt;"";                         }             }     }     hr.send(null);     results.innerHTML = ""requesting...""; } &lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;div id=""results""&gt;&lt;/div&gt; &lt;script type=""text/javascript""&gt;ajax_get_json();&lt;/script&gt; &lt;/body&gt; &lt;/html&gt; </code></pre>  <p>but doesn't work I setup apache to execute python scripts and work with very simple scripts, but doesn't work when I retrieve data from the database How can I show the data in a html page? Or what language or framework may I can use to show the data  Any advice I am desperate Thanks in advance</p>"	"<p>First of all, you should try visit your python files in browser. If you can't see json print on page, there're problems in your server or python code.</p>  <p>If it works, that may be something wrong in your Ajax request.</p>  <p>You can use jQuery or zepto.js to help. They contain a method of Ajax: $.ajax.</p>  <p>You can visit: <a href=""http://zeptojs.com"" rel=""nofollow"">http://zeptojs.com</a> And search ""$.ajax"" on the page for help; )</p>  <p>===============================================================</p>  <p>try this:</p>  <pre><code>//var data = JSON.parse(hr.responseText); var data = JSON.parse(hr.response); </code></pre>  <p>===============================================================</p>  <p>and this is my onreadystatechange function code, use it if it helps:</p>  <pre><code>ajaxObject.onreadystatechange = function(){     //console.info('[Ajax request process] url:' + url +'; readyState:' + ajaxObject.readyState + '; status:' + ajaxObject.status);     if (ajaxObject.readyState == 4 &amp;&amp; ((ajaxObject.status &gt;= 200 &amp;&amp; ajaxObject.status &lt; 300) || ajaxObject.status == 304)){         var result = null;         switch (dataType){             case 'text':                 result = ajaxObject.responseText;                 break;             case 'xml':                 result = ajaxObject.responseXML;                 break;             case 'json':             default:                 result = ajaxObject.response ? JSON.parse(ajaxObject.response) : null;                 break;         }         if (typeof(success) == 'function'){             success(result,url);         }     }else if (ajaxObject.readyState &gt; 1 &amp;&amp; !((ajaxObject.status &gt;= 200 &amp;&amp; ajaxObject.status &lt; 300) || ajaxObject.status == 304)){         console.warn('[Ajax request fail] url:' + url +'; readyState:' + ajaxObject.readyState + '; status:' + ajaxObject.status);         if (typeof(error) === 'function' &amp;&amp; errorCallbackCount == 0){error(url);errorCallbackCount++;}         return false;     } } </code></pre>"
25061178	"Is this correct : jquery is to javascript, django is to python?"	frameworks	2014-07-31 14:14:20.803000 UTC	"<p>I'm familiar with jquery and javascript but i'm a python noob. Whenever I learn something about python on the web, there's mention of django here and there. When i went to the official django site, it described it as ""Django is a high-level Python Web framework that encourages rapid development and clean, pragmatic design."" So I inferred it's what jquery is for javascript, am I correct?  [This might seem like a silly question but I tend to get shameless when it comes to asking questions on stack**overflow**]</p>"	"<p>The short answer: Kind of- it is in the sense that JQuery is essentially a set of useful bits of code written in Javascript and Django the same in Python. However, JQuery is a more functional framework, where as DJango is more like a CMS framework. </p>"
25061178	"Is this correct : jquery is to javascript, django is to python?"	frameworks	2014-07-31 14:14:20.803000 UTC	"<p>I'm familiar with jquery and javascript but i'm a python noob. Whenever I learn something about python on the web, there's mention of django here and there. When i went to the official django site, it described it as ""Django is a high-level Python Web framework that encourages rapid development and clean, pragmatic design."" So I inferred it's what jquery is for javascript, am I correct?  [This might seem like a silly question but I tend to get shameless when it comes to asking questions on stack**overflow**]</p>"	"<p>No question is a silly question!</p>  <p>Almost, but not exactly.</p>  <p>I would say your python to javascript comparison is correct (as Python can be used as a scripting language for web applications, just like javascript), but jQuery is not exactly like Django.</p>  <p>jQuery is a library designed to simplify the scripts needed for dynamic website functionality, whereas Django is more useful in the creation of complex, database-driven websites.</p>"
25061178	"Is this correct : jquery is to javascript, django is to python?"	frameworks	2014-07-31 14:14:20.803000 UTC	"<p>I'm familiar with jquery and javascript but i'm a python noob. Whenever I learn something about python on the web, there's mention of django here and there. When i went to the official django site, it described it as ""Django is a high-level Python Web framework that encourages rapid development and clean, pragmatic design."" So I inferred it's what jquery is for javascript, am I correct?  [This might seem like a silly question but I tend to get shameless when it comes to asking questions on stack**overflow**]</p>"	"<p>I don't think it's a very useful comparison.</p>  <p>JQuery is mostly a wrapper around core functionality of javascript. Partly to make it easier to use and partly because otherwise you'd have to deal with browser specific problems even for the most basic scripts.</p>  <p>Django is a full-featured web framework that has many useful and necessary things built-in. It has request routing, templating, database abstractions, localization and a lot more.  In contrast to other web-frameworks it has those things tightly coupled and is opionated on what's the best practice to build your website with it.</p>  <p>A better comparison in the JavaScript world is (as an example) AngularJS. It also comes with lots of good features (routing, templating, data-bindings, dependency injection, etc.) but when you use it, you should better stick to ""the angular way"" of doing front-end JavaScript.</p>  <p>Think of JQuery more of a low-level library that you can build your code and even frameworks like AngularJS on. Kinda like the standard library of Python.</p>"
25062365	Python Parsing HTML Table Generated by JavaScript	javascript|python|html|pandas|beautifulsoup	2014-07-31 15:02:15.527000 UTC	"<p>I'm trying to scrape a table from the NYSE website (<a href=""http://www1.nyse.com/about/listed/IPO_Index.html"" rel=""noreferrer"">http://www1.nyse.com/about/listed/IPO_Index.html</a>) into a pandas dataframe.  In order to do so, I have a setup like this:</p>  <pre><code>def htmltodf(url): page = requests.get(url) soup = BeautifulSoup(page.text)  tables = soup.findAll('table') test = pandas.io.html.read_html(str(tables))  return(test)            #return dataframe type object </code></pre>  <p>However, when I run this on the page, all of the table returned in the list are essentially empty.  When I further investigated, I found that the table is generated by javascript.  When using the developer tools in my web browser, I see that the table looks like any other HTML table with the  tags, etc.  However, a view of the source code revealed something like this instead:</p>  <pre><code>&lt;script language=""JavaScript""&gt;  . . .  &lt;script&gt; var year = [[""ICC"",""21st Century Oncology Holdings, Inc."",""22 May  2014"",""/about/listed/icc.html"" ], ... more entries here ... ,[""ZOES"",""Zoe's Kitchen, Inc."",""11 Apr 2014"",""/about/listed/zoes.html"" ]] ;      if(year.length != 0)      {         document.write (""&lt;table width='619' border='0' cellspacing='0' cellpadding='0'&gt;&lt;tr&gt;&lt;td&gt;&lt;span class='fontbold'&gt;"");     document.write ('2014' + "" IPO Showcase"");      document.write (""&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;"");      }   &lt;/script&gt; </code></pre>  <p>Therefore, when my HTML parser goes to look for the table tag, all it can find is the if condition, and no proper   tags below that would indicate content.  How can I scrape this table?  Is there a tag that I can search for instead of table that will reveal the content?  Because the code is not in traditional html table form, how do I read it in with pandas--do I have to manually parse the data?</p>"	"<p>In this case, you need something to run that javascript code for you. </p>  <p>One option here would be to use <a href=""http://selenium-python.readthedocs.org/"" rel=""noreferrer""><code>selenium</code></a>:</p>  <pre><code>from pandas.io.html import read_html from selenium import webdriver   driver = webdriver.Firefox() driver.get('http://www1.nyse.com/about/listed/IPO_Index.html')  table = driver.find_element_by_xpath('//div[@class=""sp5""]/table//table/..') table_html = table.get_attribute('innerHTML')  df = read_html(table_html)[0] print df  driver.close() </code></pre>  <p>prints:</p>  <pre><code>                                                    0        1          2   3 0                                                Name   Symbol        NaT NaN 1                       Performance Sports Group Ltd.      PSG 2014-06-20 NaN 2                           Century Communities, Inc.      CCS 2014-06-18 NaN 3                        Foresight Energy Partners LP     FELP 2014-06-18 NaN ... 79  EGShares TCW EM Long Term Investment Grade Bon...     LEMF 2014-01-08 NaN 80  EGShares TCW EM Short Term Investment Grade Bo...     SEMF 2014-01-08 NaN  [81 rows x 4 columns] </code></pre>"
25075338	How to convert python timestamp to javascript YYY-MM-DDTHH:MM:SS.302325	javascript|python|datetime|datepicker	2014-08-01 07:46:30.327000 UTC	"<p>How can I convert a python timestamp with javacript</p>  <p>from 2014-07-28T20:45:04.271935 </p>  <p>to 1.6.2014 (20:45) </p>  <p>I tried to use the builtin parse function from javascript, but it seems to mix up things..</p>  <pre><code>    out = new Date(context);     out = out.getDay() + "". "" + out.getMonth() + "". "" + out.getFullYear() + "" ("" + out.getHours()+ "":"" + out.getMinutes() + "")""; </code></pre>"	"<p>If you work with date and time intensively in your application I'd recommend you to use <a href=""http://momentjs.com/docs/#/parsing/string-format/"" rel=""nofollow""><strong>Moment.js</strong></a> library for painless conversions:</p>  <pre><code>moment('2014-07-28T20:45:04.271935').format('D.M.YYYY (H:m)'); // Will return ""28.7.2014 (20:45)""  moment('2014-07-09T20:45:04.271935').format('DD.MM.YYYY (H:m)'); // Will return ""09.07.2014 (20:45)"" </code></pre>  <p>And if you need to format the date and time only in one place then just build the string manually as you did in your code example.</p>"
25088917	Pass an argument from javascript to a python script	javascript|python|html|ajax	2014-08-01 21:26:33.347000 UTC	"<p>I have a python script from which I pass an argument to execute a query in an Oracle Database</p>  <p><strong>prov.py</strong></p>  <pre><code>#!/usr/local/bin/python2.7 import sys import argparse import cx_Oracle import json import cgi import cgitb cgitb.enable()  lst_proveedores=[{}] conn_str = 'user/pass@DATABASE' conn = cx_Oracle.connect(conn_str) c = conn.cursor() qstr = qstr = """""" select id_proveedor, nombre, tipo from mpc_proveedores where tipo = '%s' """""" %sys.argv[1] c.execute(qstr) for row in c:     record1 = {""id"":row[0], ""nombre"":row[1],""tipo"":row[2],""tipo"":row[2]}     lst_proveedores.append(record1) json_string = json.dumps(lst_proveedores) print json_string conn.close() </code></pre>  <p>I need to show the data in an HTML page.</p>  <p><strong>index.html</strong></p>  <pre><code>&lt;!DOCTYPE html&gt; &lt;html&gt; &lt;head&gt; &lt;script type=""text/javascript""&gt; function ajax_get_json(){     var results = document.getElementById(""results"");     var hr = new XMLHttpRequest();     hr.open(""GET"", ""prov.py"", true);     hr.responseType = ""JSON"";     hr.setRequestHeader(""Content-Type"", ""application/json"", true);     hr.onreadystatechange = function() {             if(hr.readyState == 4 &amp;&amp; hr.status == 200) {                     var data = JSON.parse(hr.responseText);                         results.innerHTML = """";                         for(var obj in data){                                 results.innerHTML +=                                  ""&lt;tr&gt;&lt;td&gt;""+data[obj].id+""&lt;/td&gt;&lt;td&gt;""+data[obj].nombre+""&lt;/td&gt;&lt;td&gt;"" +data[obj].tipo+""&lt;/td&gt;&lt;/tr&gt;"";                         }             }     }     hr.send(null);     results.innerHTML = ""requesting...""; } &lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;div class=""container""&gt; &lt;div class+""row""&gt; &lt;table  id=""results"" class=""table table-bordered table-striped table-hover""&gt;     &lt;tr&gt;         &lt;td&gt;Id Proveedor&lt;/td&gt;         &lt;td&gt;Nombre&lt;/td&gt;         &lt;td&gt;Tipo&lt;/td&gt;     &lt;/tr&gt; &lt;script type=""text/javascript""&gt;ajax_get_json();&lt;/script&gt; &lt;/table&gt; &lt;/div&gt; &lt;/div&gt; &lt;/body&gt; &lt;/html&gt; </code></pre>  <p>How can I execute the script from a button, and how can I pass a value from an input text to javascript?</p>  <p>Also, I know my javascript is not well designed. Any advice?</p>"	"<p>To run Python code from Apache you need to use a proper interface for it. There are many posibilities but <em>CGI</em> or <em>mod_wsgi</em> are popular alternatives. The <a href=""https://docs.python.org/2/howto/webservers.html"" rel=""nofollow"">Python docs</a> has lots of useful info about how to set it up.</p>"
25088917	Pass an argument from javascript to a python script	javascript|python|html|ajax	2014-08-01 21:26:33.347000 UTC	"<p>I have a python script from which I pass an argument to execute a query in an Oracle Database</p>  <p><strong>prov.py</strong></p>  <pre><code>#!/usr/local/bin/python2.7 import sys import argparse import cx_Oracle import json import cgi import cgitb cgitb.enable()  lst_proveedores=[{}] conn_str = 'user/pass@DATABASE' conn = cx_Oracle.connect(conn_str) c = conn.cursor() qstr = qstr = """""" select id_proveedor, nombre, tipo from mpc_proveedores where tipo = '%s' """""" %sys.argv[1] c.execute(qstr) for row in c:     record1 = {""id"":row[0], ""nombre"":row[1],""tipo"":row[2],""tipo"":row[2]}     lst_proveedores.append(record1) json_string = json.dumps(lst_proveedores) print json_string conn.close() </code></pre>  <p>I need to show the data in an HTML page.</p>  <p><strong>index.html</strong></p>  <pre><code>&lt;!DOCTYPE html&gt; &lt;html&gt; &lt;head&gt; &lt;script type=""text/javascript""&gt; function ajax_get_json(){     var results = document.getElementById(""results"");     var hr = new XMLHttpRequest();     hr.open(""GET"", ""prov.py"", true);     hr.responseType = ""JSON"";     hr.setRequestHeader(""Content-Type"", ""application/json"", true);     hr.onreadystatechange = function() {             if(hr.readyState == 4 &amp;&amp; hr.status == 200) {                     var data = JSON.parse(hr.responseText);                         results.innerHTML = """";                         for(var obj in data){                                 results.innerHTML +=                                  ""&lt;tr&gt;&lt;td&gt;""+data[obj].id+""&lt;/td&gt;&lt;td&gt;""+data[obj].nombre+""&lt;/td&gt;&lt;td&gt;"" +data[obj].tipo+""&lt;/td&gt;&lt;/tr&gt;"";                         }             }     }     hr.send(null);     results.innerHTML = ""requesting...""; } &lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;div class=""container""&gt; &lt;div class+""row""&gt; &lt;table  id=""results"" class=""table table-bordered table-striped table-hover""&gt;     &lt;tr&gt;         &lt;td&gt;Id Proveedor&lt;/td&gt;         &lt;td&gt;Nombre&lt;/td&gt;         &lt;td&gt;Tipo&lt;/td&gt;     &lt;/tr&gt; &lt;script type=""text/javascript""&gt;ajax_get_json();&lt;/script&gt; &lt;/table&gt; &lt;/div&gt; &lt;/div&gt; &lt;/body&gt; &lt;/html&gt; </code></pre>  <p>How can I execute the script from a button, and how can I pass a value from an input text to javascript?</p>  <p>Also, I know my javascript is not well designed. Any advice?</p>"	"<p>I think what you really want is a <a href=""https://wiki.python.org/moin/WebFrameworks"" rel=""nofollow"">web framework</a>.</p>  <p>That would provide a structured approach to exactly the type of stuff you're trying to do.</p>  <p>django is great and very popular. Pyramid and Flask are also very popular.</p>  <p>I have a good amount of experience with Flask and highly recommend it.</p>"
25090018	Have Sublime 2 replace tabs with 4 spaces in Python but 2 spaces in JavaScript?	sublimetext2|spaces	2014-08-01 23:14:35.053000 UTC	"<p>As the title suggests, I'm trying to set variable tab-for-space replacements according to the file format. Is this possible? I've only been able to set one universal setting for this.</p>"	"<p>Open up a file of the format you want to set preferences for and do the following:</p>  <p>Click <em>Sublime Text 2 -> Preferences -> Settings - More -> Syntax Specific - User</em></p>  <p>That will open a file for preferences for the format of the file you're editing; e.g., if you're editing a .c file, you'll be setting the preferences for C language files.</p>  <p>Add this to the file that Sublime Text opens after you navigate as above:</p>  <p><code>{     ""tab_size"": &lt;whatever you want&gt;,     ""translate_tabs_to_spaces"": true }</code></p>"
25099202	FInd javascript-links with Python	python|beautifulsoup|mechanize	2014-08-02 20:38:58.400000 UTC	"<p>Is there any way to find javascript-links on a webpage with python? I use mechanize and I can't find all the links I want. I want the url on the pictures on this site: <a href=""http://500px.com/popular"" rel=""nofollow"">http://500px.com/popular</a></p>"	"<p>With just BeautifulSoup this is quite easy:</p>  <pre><code>js_links = soup.select('a[href^=""javascript:""]') </code></pre>  <p>This selects all <code>&lt;a&gt;</code> elements that have a <code>href</code> attribute whose value starts with <code>javascript:</code>:</p>  <pre><code>&gt;&gt;&gt; from bs4 import BeautifulSoup &gt;&gt;&gt; soup = BeautifulSoup('''\ ... &lt;html&gt;&lt;body&gt; ... &lt;a href=""http://stackoverflow.com""&gt;Not a javascript link&lt;/a&gt; ... &lt;a name=""target""&gt;Not a link, no href&lt;/a&gt; ... &lt;a href=""javascript:alert('P4wned');""&gt;Javascript link (with scary message)&lt;/a&gt; ... &lt;a href=""javascript:return False""&gt;Another javascript link&lt;/a&gt; ... &lt;/body&gt;&lt;/html&gt; ... ''') &gt;&gt;&gt; for link in soup.select('a[href^=""javascript:""]'): ...     print link['href'], link.get_text() ...  javascript:alert('P4wned'); Javascript link (with scary message) javascript:return False Another javascript link </code></pre>"
25129382	Communication between Python/Flask and Javascript	javascript|python|html|drop-down-menu|flask	2014-08-05 00:05:59.337000 UTC	"<p>I am working to develop a cascading drop down layout in JavaScript that is populated by arrays created using Python/Flask.  I have a Python module and an HTML file and need to pass data and responses between the two.  </p>  <p>The first JavaScript drop down menu is already populated with options to choose a name of a type of data.  Once a user selects an option this information needs to be passed to the Python module.  Then I will use Python ftplib to get information from an FTP server based on the name they selected (a list of years for the chosen set of data).  Then, the next drop down will be populated with the list of years.  Once a year is chosen, I will again access the FTP server to get a list of days for that year.  I have no problem with accessing the information through FTP.  </p>  <p>I cannot figure out how to communicate between the Python and the html page.  For example, how can I execute a Python function that will return a new array only once the first drop down selection has been made?  A second option would be to access the FTP information directly in JavaScript, but I could not find a way to do so nearly as simple as Python ftplib.  Any recommendations for how to approach this problem would be helpful.</p>"	"<p>This sounds like a perfect problem for building a Python REST API (possibly using a tutorial like <a href=""http://tech.pro/tutorial/1213/how-to-build-an-api-with-python-and-flask"" rel=""nofollow"">http://tech.pro/tutorial/1213/how-to-build-an-api-with-python-and-flask</a>). You can then call the API using Javascript (one option might be <a href=""http://api.jquery.com/jquery.ajax/"" rel=""nofollow"">http://api.jquery.com/jquery.ajax/</a>).</p>"
25129382	Communication between Python/Flask and Javascript	javascript|python|html|drop-down-menu|flask	2014-08-05 00:05:59.337000 UTC	"<p>I am working to develop a cascading drop down layout in JavaScript that is populated by arrays created using Python/Flask.  I have a Python module and an HTML file and need to pass data and responses between the two.  </p>  <p>The first JavaScript drop down menu is already populated with options to choose a name of a type of data.  Once a user selects an option this information needs to be passed to the Python module.  Then I will use Python ftplib to get information from an FTP server based on the name they selected (a list of years for the chosen set of data).  Then, the next drop down will be populated with the list of years.  Once a year is chosen, I will again access the FTP server to get a list of days for that year.  I have no problem with accessing the information through FTP.  </p>  <p>I cannot figure out how to communicate between the Python and the html page.  For example, how can I execute a Python function that will return a new array only once the first drop down selection has been made?  A second option would be to access the FTP information directly in JavaScript, but I could not find a way to do so nearly as simple as Python ftplib.  Any recommendations for how to approach this problem would be helpful.</p>"	"<p>well, when flask does the <code>render_template()</code> it will just fill in the jinja pieces and send the client the HTML page. There really isn't communication with the python on the HTML page.</p>  <p>I would recommend using a POST request and click event</p>  <pre><code>@app.route('/data/') def get_data(year):     """""" get your data here and return it as json """"""     year = request.form.get('year')     # ...     return jsonify(yourdata) </code></pre>  <p>then, on the js kind of just do</p>  <pre><code>$('.dropdown-button').click(function() {   var year = this.data('year')   $.post('/data/', {'year': year}, function(data) {     // you now have your data as json here     // you can do as you wish with it   }) }); </code></pre>"
25134662	JavaScript Object to JSON using python	python|json|javascript-objects	2014-08-05 08:48:26.697000 UTC	"<p>I'm trying to retrieve what initially looked like a normal JSON from a website. But it is a JavaScript object which is not a valid JSON. Is there a way to convert this string to JSON using python?</p>  <p>Example would be:</p>  <pre><code>{  firstName:""John"",  lastName:""Doe"",  age:50,  eyeColor:""blue"",  dimensions:[      {       height: ""2"",       width: ""1""      } ] } </code></pre>"	"<p>Use a parser with a non-strict mode that can handle such input. I've been recommending <a href=""http://deron.meranda.us/python/demjson/"" rel=""noreferrer"">demjson</a> for stuff like this, since it's the first viable candidate that came up when I searched for <code>python non-strict json parser</code>.</p>  <pre><code>&gt;&gt;&gt; demjson.decode(""""""{ ...  firstName:""John"", ...  lastName:""Doe"", ...  age:50, ...  eyeColor:""blue"", ...  dimensions:[ ...      { ...       height: ""2"", ...       width: ""1"" ...      } ... ] ... }"""""") {u'eyeColor': u'blue', u'lastName': u'Doe', u'age': 50, u'dimensions': [{u'width ': u'1', u'height': u'2'}], u'firstName': u'John'} </code></pre>"
25134662	JavaScript Object to JSON using python	python|json|javascript-objects	2014-08-05 08:48:26.697000 UTC	"<p>I'm trying to retrieve what initially looked like a normal JSON from a website. But it is a JavaScript object which is not a valid JSON. Is there a way to convert this string to JSON using python?</p>  <p>Example would be:</p>  <pre><code>{  firstName:""John"",  lastName:""Doe"",  age:50,  eyeColor:""blue"",  dimensions:[      {       height: ""2"",       width: ""1""      } ] } </code></pre>"	"<p>I am afraid that Python does not understand JavaScript. If you can use <a href=""http://nodejs.org/"" rel=""nofollow"">Node.js</a>, it is easy to convert the input to JSON.</p>  <p><strong>Edit:</strong> Of course you can also use the JavaScript console of every browser to do this.</p>  <pre><code>&gt; d = { ...  firstName:""John"", ...  lastName:""Doe"", ...  age:50, ...  eyeColor:""blue"", ...  dimensions:[ ...      { .....       height: ""2"", .....       width: ""1"" .....      } ... ] ... }; { firstName: 'John',   lastName: 'Doe',   age: 50,   eyeColor: 'blue',   dimensions: [ { height: '2', width: '1' } ] } &gt; JSON.stringify(d) '{""firstName"":""John"",""lastName"":""Doe"",""age"":50,""eyeColor"":""blue"",""dimensions"":[{""height"":""2"",""width"":""1""}]}' </code></pre>"
25144143	Twos complement same code python / JavaScript different results	javascript|python|node.js	2014-08-05 16:45:12.407000 UTC	"<p>In python 2.7, the following code returns the <em>correct</em> result (<strong>-18027917</strong>)</p>  <pre><code>from __future__ import print_function  def twos_comp(val, bits):     if (val &amp; (1 &lt;&lt; (bits - 1))) != 0:         val -= 1 &lt;&lt; bits      return val  valBinary = ""110111011001110101001110011"" print(twos_comp(int(valBinary, 2), len(valBinary))) </code></pre>  <hr>  <p>In JavaScript (Node.js) the following code returns an <em>incorrect</em> result (<strong>1995238003</strong>)</p>  <pre><code>function toTwosComplement(val, bits) {     if ((val &amp; (1 &lt;&lt; (bits - 1))) != 0) {         val -= (val - 1) &lt;&lt; bits;     }     return val; }  valBinary = ""110111011001110101001110011"";  // same as python example console.log(toTwosComplement(parseInt(valBinary, 2), valBinary.length)); </code></pre>  <p>Evidently there is something different about the behaviour of the bit operators (or int / parseInt) but I haven't been able to see what it is.</p>"	<p>Why do these lines not match?</p>  <p>Python:</p>  <pre><code>    val -= 1 &lt;&lt; bits </code></pre>  <p>JS:</p>  <pre><code>    val -= (val - 1) &lt;&lt; bits; </code></pre>
25144143	Twos complement same code python / JavaScript different results	javascript|python|node.js	2014-08-05 16:45:12.407000 UTC	"<p>In python 2.7, the following code returns the <em>correct</em> result (<strong>-18027917</strong>)</p>  <pre><code>from __future__ import print_function  def twos_comp(val, bits):     if (val &amp; (1 &lt;&lt; (bits - 1))) != 0:         val -= 1 &lt;&lt; bits      return val  valBinary = ""110111011001110101001110011"" print(twos_comp(int(valBinary, 2), len(valBinary))) </code></pre>  <hr>  <p>In JavaScript (Node.js) the following code returns an <em>incorrect</em> result (<strong>1995238003</strong>)</p>  <pre><code>function toTwosComplement(val, bits) {     if ((val &amp; (1 &lt;&lt; (bits - 1))) != 0) {         val -= (val - 1) &lt;&lt; bits;     }     return val; }  valBinary = ""110111011001110101001110011"";  // same as python example console.log(toTwosComplement(parseInt(valBinary, 2), valBinary.length)); </code></pre>  <p>Evidently there is something different about the behaviour of the bit operators (or int / parseInt) but I haven't been able to see what it is.</p>"	"<p>First,</p>  <pre><code>val -= (val - 1) &lt;&lt; bits; </code></pre>  <p>and</p>  <pre><code>val -= 1 &lt;&lt; bits </code></pre>  <p>are not equivalent.</p>  <p>Since your binary string is 27 digits long, this is most likely the source of your problem.</p>  <hr>  <p>More generally, the two languages have very different definitions of the term number.</p>  <p>Python has <a href=""https://docs.python.org/2.7/library/stdtypes.html#numeric-types-int-float-long-complex"" rel=""nofollow noreferrer"">arbitrary precision integers</a>.</p>  <blockquote>   <p>Long integers have unlimited precision.</p> </blockquote>  <p>By contrast, JavaScript has <a href=""http://www.crockford.com/javascript/survey.html"" rel=""nofollow noreferrer"">IEEE 64b doubles pretending to be integers</a> and bitwise operators that <a href=""https://stackoverflow.com/questions/12125421/why-does-a-shift-by-0-truncate-the-decimal"">truncate their operands to 32 bits</a>.</p>  <blockquote>   <p>Number is 64-bit floating point, similar to Java's double and Double. There is no integer type. Division between two integers may produce a fractional result.</p> </blockquote>  <p>This means you can store at most <a href=""http://en.wikipedia.org/wiki/IEEE_floating_point#Basic_formats"" rel=""nofollow noreferrer"">52 bits of precision</a>, and if the highest order bit is greater than 2**52, then low order bits are truncated.</p>  <hr>  <p>Because of the floating point nature of JavaScript, the least significant bits of a large binary number might be rounded off, and the most significant bits might be thrown out by (<code>&lt;&lt;</code>).</p>"
25168941	JavaScript to python matrix	javascript|python|arrays|matrix	2014-08-06 19:50:08.877000 UTC	"<p>I am currently trying a mathematics and computing course and hit a snag. The question I have been asked to produce a program for is:</p>  <p>Write a program to store the contents of a 6 by 6 matrix. The matrix M has been defined such that the value of the ith and jth column of the matrix is the result of multiplying i and j.</p>  <p>The JavaScript code is below:</p>  <pre><code>var m = new Array(); var i,j;  for (i=0;i&lt;6;i++){     m[i]=new Array(6);     for (j=0;j&lt;6;j++){         m[i][j]=(i+1)*(j+1);     } } print m </code></pre>  <p>My question is what would the same code look like in Python. I have tried the program below but hit with type and assignment errors.  </p>  <pre><code>m=[] i=0 j=0  for i in xrange (6):     m.append(i) for j in xrange (6):     m[i][j]=((i+1)*(j+1))  print m </code></pre>  <p>Any help would be greatly appreciated.</p>"	"<p>In the first loop, in the line <code>m.append(i)</code>, you are appending the index number to <code>m</code>. After the loop m will be <code>[0, 1, 2, 3, 4, 5]</code>. You want to assign a list:</p>  <pre><code>for i in xrange(6):     m.append([0] * 6)   # [0]*6 == [0, 0, 0, 0, 0, 0] </code></pre>  <p>Also your indentation is off. The second loop is part of the first loop:</p>  <pre><code>m = [] # no need to initialize i and j for i in xrange(6):     m.append([0] * 6)     for j in xrange(6):         m[i][j] = (i+1) * (j+1) </code></pre>    <pre><code>print m [[1, 2, 3, 4, 5, 6],  [2, 4, 6, 8, 10, 12],  [3, 6, 9, 12, 15, 18],  [4, 8, 12, 16, 20, 24],  [5, 10, 15, 20, 25, 30],  [6, 12, 18, 24, 30, 36]] </code></pre>"
25181717	How to get python/Django lists/dictionaries into javascript	javascript|python|django	2014-08-07 11:47:27.247000 UTC	"<p>I want to push some server-side data into my javascript for display purposes.  I have a list of serializable dictionary objects representing pieces of my data model that I want to use in javascript.  These objects are defined as such:</p>  <pre><code>event_types = EventType.objects.all()     et = []     for t in event_types:         et.append({'name' : t.name, 'internal_name' : t.internal_name}) # both names are strings </code></pre>  <p>I push these up in the context variable to my template, and try to add it to javascript:</p>  <pre><code>&lt;script type=""text/javascript""&gt;     var event_types = {{event_types}}; &lt;/script&gt; </code></pre>  <p>This doesn't work, as I get ""Unexpected token '&amp;'"" as a javascript error.  I then try commenting out that code and seeing what renders, and this is what I see:</p>  <pre><code>[{&amp;#39;name&amp;#39;: u&amp;#39;My Event&amp;#39;, &amp;#39;internal_name&amp;#39;: u&amp;#39;my_event&amp;#39;}]; </code></pre>  <p>Clearly that is not desirable formatting.  What is the correct way of pushing server-side Django data up to Javascript?</p>"	"<p>The formatting you see is because the objects you pass to the template are being converted to strings using their <code>repr</code> representations, and those strings are then being html encoded (so that if they were displayed on a page as text, you'd see the correct python <code>repr</code> on the page).</p>  <p>What you want is to convert your objects to Javascript syntax, and not encode them further.</p>  <p>Fortunately, the builtin <code>json.dumps</code> will convert your objects to JSON. You also need to turn escaping off for the block:</p>  <pre><code>{% autoescape off %} &lt;script type=""text/javascript""&gt;     var event_types = {{event_types}}; &lt;/script&gt; {% endautoescape %} </code></pre>"
25209523	Selenium Python Javascript Execution	javascript|jquery|python|selenium|selenium-webdriver	2014-08-08 18:00:02.243000 UTC	"<p>I have the problem of running this. I get back an error stating that I either am missing a ) after arguments or that I have an illegal character. I understand that it must be thinking that I am trying to insert an argument when I am not. I believe I just need help with the syntax.  </p>  <pre><code>    browser.execute_script(""url = '/Administration/SwitchCompany?' + jQuery.param({CompanyId: $('#companyDropDownList option:contains('DTLTest')').val() })"")  browser.execute_script(""$('#userInfoPlaceholder').load(url, switchCompanyCallback);"" ) </code></pre>"	"<p>You have single quotes inside of single quotes in your javascript: </p>  <pre><code>$('#companyDropDownList option:contains('DTLTest')') </code></pre>  <p>If you switch the quotes around the full Python string to triple quotes, you could use both single and double quotes in your javascript. Otherwise, you'll need to do some escaping.</p>"
25209523	Selenium Python Javascript Execution	javascript|jquery|python|selenium|selenium-webdriver	2014-08-08 18:00:02.243000 UTC	"<p>I have the problem of running this. I get back an error stating that I either am missing a ) after arguments or that I have an illegal character. I understand that it must be thinking that I am trying to insert an argument when I am not. I believe I just need help with the syntax.  </p>  <pre><code>    browser.execute_script(""url = '/Administration/SwitchCompany?' + jQuery.param({CompanyId: $('#companyDropDownList option:contains('DTLTest')').val() })"")  browser.execute_script(""$('#userInfoPlaceholder').load(url, switchCompanyCallback);"" ) </code></pre>"	"<p>Did you mean </p>  <p><code>browser.execute_script(""$('#userInfoPlaceholder').load(url, switchCompanyCallback);"" )</code></p>  <p>Change of <code>#</code> to <code>$</code></p>"
25240094	Downloading all external and internal javascript files in python	python|web-scraping	2014-08-11 09:33:29.687000 UTC	<p>I want know how to download all external javascripts files and internal javascript code from a webpage. Is there any library or example to start with? </p>	"<p><a href=""http://beautiful-soup-4.readthedocs.org/en/latest/"" rel=""nofollow"">Beautiful Soup</a> is a widely used library for web scraping in Python.</p>  <p>Here is a simple example that shows how to retrieve the JavaScript sources paths and internal scripts in a page:</p>  <pre><code>from bs4 import BeautifulSoup import urllib2  url = ""http://example.com/"" soup = BeautifulSoup(urllib2.urlopen(url).read())   sources = [] scripts = []  for script in soup('script', {'type': 'text/javascript'}):     src = script.get('src')     if src:           sources.append(src)        else:           scripts.append(script.text)  print scripts print sources </code></pre>"
25240847	how to execute a python script from javascript in splunk?	javascript|python|splunk	2014-08-11 10:12:07.737000 UTC	"<p>I need to run a <a href=""https://www.python.org/"" rel=""nofollow"">python</a> script from javascript (html file), the project is deployed in <a href=""http://www.splunk.com/"" rel=""nofollow"">splunk</a></p>"	"<p>Via NodeJs we can communicate with python script.</p>  <p>i used this <a href=""https://www.npmjs.org/package/python-shell"" rel=""nofollow"">python-shell</a> plugin to run python script from JS.</p>  <p>Very Useful one.</p>"
25243922	Python to JavaScript unix time conversion	javascript|python|datetime	2014-08-11 13:01:01.973000 UTC	"<p>In JavaScript:</p>  <pre class=""lang-js prettyprint-override""><code>new Date(2014, 5, 1).getTime() // results: 1401561000000 </code></pre>  <p>While in python:</p>  <pre class=""lang-py prettyprint-override""><code>import time import datetime time.mktime(datetime.datetime(2014, 5 , 1).timetuple()) # results -&gt; 1398882600.0 </code></pre>  <p>How can I convert python time to a JavaScript unix time stamp?</p>"	"<p>Let’s compare the two results:</p>  <ol> <li>JavaScript: <code>1401561000</code> – 31.05.2014 18:30:00 UTC (note that <code>getTime()</code> gives you number of milliseconds, so you need to divide by 1000)</li> <li>Python: <code>1398882600</code> – 30.04.2014 18:30:00 UTC</li> </ol>  <p>So there are actually two issues:</p>  <p>First of all, in JavaScript, the month index is starting at <code>0</code> (0 = January) while in Python it starts as <code>1</code> (1 = January). So that’s where the one-month offset comes from.</p>  <p>The second issue is due to timezones. Your local time seems to be <em>UTC-05:30</em>, which is where that offset comes from. When you create a date in either language, you are always using local time, so your timezone offset gets taken into account. If you want to enter UTC dates, you can also do this. In JavaScript, it’s simple thanks to <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/UTC"" rel=""nofollow""><code>Date.UTC</code></a>:</p>  <pre class=""lang-js prettyprint-override""><code>Date.UTC(2014, 5, 1) / 1000 // 1401580800 Date.UTC(2014, 4, 1) / 1000 // 1398902400 </code></pre>  <p>In Python however, it is a bit more complicated as <code>datetime</code> objects are by default timezone-unaware but <code>time.mktime</code> assumes local time for the passed tuple. To solve this, you can either make the <code>datetime</code> object aware by specifying the timezone explicitely, or by performing the calculation yourself:</p>  <pre class=""lang-py prettyprint-override""><code>&gt;&gt;&gt; datetime.datetime(2014, 6, 1, tzinfo=timezone.utc).timestamp() 1401580800.0 &gt;&gt;&gt; datetime.datetime(2014, 5, 1, tzinfo=timezone.utc).timestamp() 1398902400.0  &gt;&gt;&gt; (datetime.datetime(2014, 6, 1) - datetime.datetime(1970, 1, 1)) / datetime.timedelta(seconds=1) 1401580800.0 &gt;&gt;&gt; (datetime.datetime(2014, 5, 1) - datetime.datetime(1970, 1, 1)) / datetime.timedelta(seconds=1) 1398902400.0 </code></pre>"
25243922	Python to JavaScript unix time conversion	javascript|python|datetime	2014-08-11 13:01:01.973000 UTC	"<p>In JavaScript:</p>  <pre class=""lang-js prettyprint-override""><code>new Date(2014, 5, 1).getTime() // results: 1401561000000 </code></pre>  <p>While in python:</p>  <pre class=""lang-py prettyprint-override""><code>import time import datetime time.mktime(datetime.datetime(2014, 5 , 1).timetuple()) # results -&gt; 1398882600.0 </code></pre>  <p>How can I convert python time to a JavaScript unix time stamp?</p>"	"<p>JavaScript's Epoch Time starts it's month index at 0.  Thus you are inputting the wrong month if you wish to get April in your JavaScript.</p>  <p>To fix your JavaScript to make it the same as your Python:</p>  <pre><code>var time = new Date(2014, 4, 1).getTime()/1000; // time = 1398916800 </code></pre>"
25253544	Update Javascript with results from Python script	javascript|jquery|python|ajax|flask	2014-08-11 22:38:16.500000 UTC	"<p>Update Javascript with results from Python script.</p>  <p>I want to update my Javascript script with Python script in <code>Flask</code>.</p>  <p>I get a value from my <code>Python</code> script, and want to pass it to or update Javascript. But can 't figure out how in <code>Flask</code>.</p>  <p>The following is my Javascript that I need to update:</p>  <pre><code>events: { load: function() {  // set up the updating of the chart each second var series = this.series[0]; setInterval(function() { var x = (new Date()).getTime();  // Value from Python script (DataFrame) var y = Math.random() * 100; series.addPoint([x, y], true, true);                       }, 5000);                   }               } </code></pre>  <p>Here, I am passing random values but I want to pass the value from my Python script. My Python script would be like the following:</p>  <pre><code>import MySQLdb import pandas.io.sql as sqlio  host = ""~~~""  # Public port = 1111 username = ""aa"" password = ""aaa"" database = ""aaaa""  conn = MySQLdb.connect(host=host,                        user=username,                        passwd=password,                        db=database,                        port=port)   qry1 = """""" ~~ """"""  df = sqlio.read_sql(qry1, conn) df['count'][0] # return some number in Python </code></pre>  <p>function members. I know you won' have get</p>"	"<p>If I'm guessing correctly, you want the javascript code to have a number in it which is generated by a python script.  If you're using Flask, then you're probably using Jinja2, right?</p>  <p>When the page with said javascript is requested and you send it back with render_template(), you can pass a keyword argument to render_template containing that value, and then in the template, you can ""echo"" that variable's value into the javascript.  For example,if you had the pertinent javascript in template page.html in your templates directory, and had a python function to compute the value called <code>compute_value</code></p>  <pre><code>@app.route(""/page"") def page():     value = compute_value()     return render_Template('page.html', value = value) </code></pre>  <p>Then in page.html, you could have this</p>  <pre><code>var y = {{ value }} </code></pre>  <p>So in a sense you're generating javascript code from python with Jinja2.</p>"
25254502	Error pasing arguments to python script from javascript	javascript|python|ajax|json	2014-08-12 00:35:56.163000 UTC	"<p>I have an AJAX function to send an argument and retrieve some json object from a python script. I try to send the value from an input text to the script</p>  <p>AJAX code</p>  <pre><code>function ajax_get_json(){     var results = document.getElementById(""results"");     var hr = new XMLHttpRequest();     var tipo = document.getElementById('tipo').value;     var atributo = "" "" +tipo;     document.getElementById('texto').innerHTML = atributo;     hr.open(""GET"", ""prov1.py"", + atributo, true);     hr.responseType = ""JSON"";     hr.setRequestHeader(""Content-Type"", ""application/json"", true);     hr.onreadystatechange = function() {             if(hr.readyState == 4 &amp;&amp; hr.status == 200) {                     var data = JSON.parse(hr.responseText);                         results.innerHTML = """";                         for(var obj in data){                                 results.innerHTML +=""&lt;tr&gt;&lt;td&gt;""+ data[obj].id+""&lt;/td&gt;&lt;td&gt;""+data[obj].nombre+""&lt;/td&gt;&lt;td&gt;""+data[obj].tipo+""&lt;/td&gt;&lt;/tr&gt;"";                         }             }     }     hr.send(null);     results.innerHTML = ""requesting...""; } </code></pre>  <p>my python script is this</p>  <pre><code>#!/usr/local/bin/python2.7 import sys import cx_Oracle import json import cgi import cgitb cgitb.enable()  form = cgi.FieldStorage() tipo = form.getvalue('tipo')  #print ""Content-Type: text/html; charset=utf-8\n\n""; print ""Status: 200 OK"" print ""Content-type: application/json\n""; #print lst_proveedores=[] conn_str = 'user/pass@database' conn = cx_Oracle.connect(conn_str) c = conn.cursor() c.execute("""""" select id_proveedor, nombre, tipo from mpc_proveedores where tipo = '%s' """""" %tipo) for row in c:     record1 = {""id"":row[0], ""nombre"":row[1], ""tipo"":row[2]}     lst_proveedores.append(record1) json_string = json.dumps(lst_proveedores) print json_string conn.close() </code></pre>  <p>In command line the script work's fine (python prov1.py tipo=MMS) and retrieve from the database the data, but when I try to retrieve the data from AJAX the script send me an empty json object. using firebug I check the response and only appear [].</p>  <p>I think the AJAX function have some error, because appear send the argument empty (python prov1 tipo=). I am new with AJAX and no sure if I am not using properly the functions in AJAX or is in the python script. If anybody knows a better way to retrieve the data, let me know please</p>  <p>Help please!!!!</p>"	"<p>Couple things:</p>  <ol> <li>Change<br> <code>var atributo = "" "" +tipo;</code><br> into<br> <code>var atributo = ""?tipo="" + encodeURIComponent(tipo);</code></li> <li>You should check your code for <a href=""https://stackoverflow.com/questions/332365/how-does-the-sql-injection-from-the-bobby-tables-xkcd-comic-work"">SQL injection vulnerabilities</a>  </li> <li>You're sending the <code>Content-Type</code> header when you make a request to the server, even though you have no request body. (GET requests never have request bodies.) Won't break anything, but you should probably take it out.</li> <li>responseType is part of HTML5, and <a href=""https://stackoverflow.com/a/9845704/530160"">is not availible in all browsers</a>.</li> </ol>  <p>Best of luck!</p>"
25274075	send data from javascript to python server	javascript|python|websocket|webstorm	2014-08-12 21:09:16.070000 UTC	"<p>i am trying to send data from my website(webstorm) to my server in python.</p>  <p>this is the following code for my server in python:</p>  <pre><code>import SocketServer  class MyTCPHandler(SocketServer.BaseRequestHandler):      def handle(self):         self.data = self.request.recv(1024).strip()         print ""{} wrote:"".format(self.client_address[0])         print self.data         self.request.sendall(self.data.upper())  if __name__ == ""__main__"":     HOST, PORT = ""localhost"", 80      server = SocketServer.TCPServer((HOST, PORT), MyTCPHandler)      server.serve_forever() </code></pre>  <p>and this is the javascript code:</p>  <pre><code>var socket = new WebSocket(""ws://localhost:80""); socket.onopen = function () {     alert(""fdfd"");     socket.send('Ping bla'); // Send the message 'Ping' to the server }; </code></pre>  <p>i am receiving the following error:</p>  <p><strong><em>WebSocket connection to 'ws://localhost/' failed: Connection closed before receiving a handshake response javascript.js:20</em></strong></p>  <p>any help will be much appreciated :)</p>"	
25306239	"check if the file format is different with the file name extension in Python, Javascript?"	javascript|jquery|python|django	2014-08-14 10:50:06.177000 UTC	"<p>I have an uploader which has file format validation (only some video formats can be uploaded).</p>  <p>However users can simply change the original file name extension and pass the validation (e.g. rename <code>file.pdf</code> to <code>file.mov</code> and upload)!</p>  <p>Now I need to check and validate if the file format matches the file extension or not. The backend is Python (Django), but I am not sure if this can be done via Payton, Javascript or any other solution.</p>"	"<p>If you would like to do this via Javascript, you can get the mime type of the selected file and do the check in the frontend. The advantage of this is that you won't need to upload the file to server for initial validations. Based on <a href=""http://www.webmaster-toolkit.com/mime-types.shtml"" rel=""nofollow noreferrer"">this</a>, the mime type for .mov files is '<em>video/quicktime</em>'. This is much difficult for a user to modify than changing the file extension.</p>  <p>Also take note of <a href=""https://stackoverflow.com/a/25306334/3176651"">Mathias' answer</a>. It is important to validate the uploaded file in the backend server as well. :)</p>  <p>Here is a demo of <a href=""http://jsfiddle.net/happysmiles/dxx8qLLp/"" rel=""nofollow noreferrer""><strong>file validation using Javascript</strong></a>.</p>  <pre><code>$('#movieFile').change(function() {     var file = $('#movieFile')[0].files[0];      var filename = file.name;     var fileMimeType = file.type;     var fileExtension = filename.split('.').pop();      if (isValidMimeType(fileMimeType)) {         console.log('good file');     } else {         console.log('bad file');     } });  function isValidMimeType(fileMimeType) {     // mime type of .mov files     var validFileMimeTypes = [ 'video/quicktime' ];      for (var i = 0; i &lt; validFileMimeTypes.length; i++) {         if (validFileMimeTypes[i].toLowerCase() === fileMimeType.toLowerCase()) {             return true;         }     }     return false; } </code></pre>"
25306239	"check if the file format is different with the file name extension in Python, Javascript?"	javascript|jquery|python|django	2014-08-14 10:50:06.177000 UTC	"<p>I have an uploader which has file format validation (only some video formats can be uploaded).</p>  <p>However users can simply change the original file name extension and pass the validation (e.g. rename <code>file.pdf</code> to <code>file.mov</code> and upload)!</p>  <p>Now I need to check and validate if the file format matches the file extension or not. The backend is Python (Django), but I am not sure if this can be done via Payton, Javascript or any other solution.</p>"	"<p>In python you can use <a href=""https://github.com/ahupp/python-magic"" rel=""noreferrer""><code>python-magic</code></a></p>  <p>Quote from the Readme:</p>  <p><code>python-magic is a python interface to the libmagic file type identification library. libmagic identifies file types by checking their headers according to a predefined list of file types.</code></p>  <p>It analyses the file header instead of using only the file extension to recognise the file type. </p>  <p>The usage is simple:</p>  <pre class=""lang-python prettyprint-override""><code>&gt;&gt;&gt; import magic &gt;&gt;&gt; magic.from_file('renamed.pdf') 'ISO Media, Apple QuickTime movie' # More handy &gt;&gt;&gt; magic.from_file('renamed.pdf', mime=True) 'video/quicktime' </code></pre>"
25306239	"check if the file format is different with the file name extension in Python, Javascript?"	javascript|jquery|python|django	2014-08-14 10:50:06.177000 UTC	"<p>I have an uploader which has file format validation (only some video formats can be uploaded).</p>  <p>However users can simply change the original file name extension and pass the validation (e.g. rename <code>file.pdf</code> to <code>file.mov</code> and upload)!</p>  <p>Now I need to check and validate if the file format matches the file extension or not. The backend is Python (Django), but I am not sure if this can be done via Payton, Javascript or any other solution.</p>"	"<p>adding to  Mathias' answer using python-magic you could do this instead</p>  <pre><code>file_type = magic.from_buffer(upload.file.read(1024), mime=True) </code></pre>  <p>this would not require saving the file to get it's mime</p>"
25318104	What format does python read Javascript arrays?	javascript|arrays	2014-08-14 21:48:43.587000 UTC	"<p>I sending parameters to a python script that is acting as my API. One of the params is a Javascript array. When logged in python is shows up as the first index in the array.</p>  <p>Here is my get request using Angular JS:</p>  <pre><code>    $http.get(         apiBase + '/deals/timeline', {             params: {                 api_key: $scope.settings.apiKey,                 start_date: startDate,                 interval: interval,                 amount: amount,                 fieldKeys: $scope.settings.fieldKeys             }         }) </code></pre>  <p>Here is my python code:     import config     import json     import requests</p>  <pre><code>def api_deals_timeline(params):     start_date = params.get('start_date')     interval = params.get('interval')     amount = params.get('amount')     field_key = params.get('field_key')      print(field_key)      r = requests.get('url.com/?something={}&amp;somelse={}'.format(start_date, interval))      if r.status_code == 200:         return json.loads(r.text)['data']     else:         return None </code></pre>  <p>Here is the print statement for field_key in my apache logs:</p>  <blockquote>   <p>[Thu Aug 14 16:23:56 2014] [error] [u'add_time', u'won_time', u'lost_time', None]</p> </blockquote>  <p>AND here is the console.log for $scope.settings.fieldKeys:</p>  <blockquote>   <p>[""lost"", ""won"", ""new""] </p> </blockquote>"	"<p>In JavaScript, you need to send this list as JSON</p>  <pre><code>JSON.stringify($scope.settings.fieldKeys); </code></pre>  <p>In python, you need convert the field_key javascript array to a python list. The json library can help you out with this.</p>  <pre><code>json.loads(field_key) </code></pre>"
25368547	Selenium Python bindings: how to execute JavaScript on an element?	javascript|python|selenium|selenium-webdriver	2014-08-18 17:09:26.470000 UTC	"<p>Have used python selenium script to trigger selenium server to run JavaScript code. It works fine.</p>  <pre><code>drv.execute_script('&lt;some js code&gt;') </code></pre>  <p>However, I can't figure out how to run javascript code on an element that was retrieved using get_element_by_*() api.    For example, I </p>  <pre><code>ele = get_element_by_xpath('//button[@id=""xyzw""]'); #question: how do I change the ""style"" attribute of the button element? </code></pre>  <p>If I were on developer console of the browser, I can run it as </p>  <pre><code>ele = $x('//button[@id=""xyzw""]')[0] ele.setAttribute(""style"", ""color: yellow; border: 2px solid yellow;"") </code></pre>  <p>Just don't know how to do it in python selenium script.  Thanks in advance. </p>"	"<p>Thanks to the answer by @Richard who led me in the right direction and Brian's link (even thought it's for java) who helped me to figure out the meaning of ""arguments"". </p>  <p>The following code will do what I need.</p>  <pre><code>ele = get_element_by_xpath('//button[@id=""xyzw""]'); drv.execute_script('arguments[0].setAttribute(""style"", ""color: yellow; border: 2px solid yellow;"")', ele) </code></pre>"
25368547	Selenium Python bindings: how to execute JavaScript on an element?	javascript|python|selenium|selenium-webdriver	2014-08-18 17:09:26.470000 UTC	"<p>Have used python selenium script to trigger selenium server to run JavaScript code. It works fine.</p>  <pre><code>drv.execute_script('&lt;some js code&gt;') </code></pre>  <p>However, I can't figure out how to run javascript code on an element that was retrieved using get_element_by_*() api.    For example, I </p>  <pre><code>ele = get_element_by_xpath('//button[@id=""xyzw""]'); #question: how do I change the ""style"" attribute of the button element? </code></pre>  <p>If I were on developer console of the browser, I can run it as </p>  <pre><code>ele = $x('//button[@id=""xyzw""]')[0] ele.setAttribute(""style"", ""color: yellow; border: 2px solid yellow;"") </code></pre>  <p>Just don't know how to do it in python selenium script.  Thanks in advance. </p>"	"<p><code>execute_script</code> accepts arguments, so you can pass the element:</p>  <pre><code>drv.execute_script('arguments[0].setAttribute(""style"", ""color: yellow; border: 2px solid yellow;"")', ele) </code></pre>"
25418040	loading javascript into ipython notebook	ipython-notebook|dc.js|crossfilter	2014-08-21 04:01:10.590000 UTC	"<p>I am trying to import the following three js libraries. They all work except for crossfilter.js. Can anyone tell me what I am doing wrong?</p>  <pre><code>import jinja2 from IPython.display import display, Javascript, HTML  %%javascript require.config({     paths: {         d3: '//cdnjs.cloudflare.com/ajax/libs/d3/3.4.8/d3.min',         crossfilter: '//cdnjs.cloudflare.com/ajax/libs/crossfilter/1.3.7/crossfilter.min',         dc: '//cdnjs.cloudflare.com/ajax/libs/dc/1.7.0/dc.min'     } });  dc = jinja2.Template( """"""  require([""d3"",""crossfilter"",""dc""], function(d3,crossfilter,dc) {          console.log(d3);     console.log(crossfilter);     console.log(dc);      });     """""")  display(Javascript(dc.render())) </code></pre>  <h2>Output I am getting:</h2>  <p>Object<br> Undefined<br> Object  </p>"	"<p>Crossfilter does not (yet) support requireJS:</p>  <p><a href=""https://github.com/square/crossfilter/issues/114"" rel=""nofollow"">https://github.com/square/crossfilter/issues/114</a></p>  <p>The ticket shows how to use a shim config to load it.</p>"
25426358	automatization of web browsing with JavaScripts under python	javascript|python|web	2014-08-21 12:26:45.023000 UTC	"<p>I'm looking for a package/way to automatize web browsing. For example, I have these results of the search (sorry for Russian): <a href=""http://www.consultant.ru/search/?q=N+145-%D0%A4%D0%97+%D0%BE%D1%82+31.07.1998"" rel=""nofollow"">http://www.consultant.ru/search/?q=N+145-%D0%A4%D0%97+%D0%BE%D1%82+31.07.1998</a></p>  <p>I want to retrieve a value of the variable “item.n” (line 399) from python? It looks like it’s an internal variable of the Javascript function “onSearchLoaded” but if you put the mouse pointer on the result of the search you will see that n=160111 - that’s the value of item.n I’m trying to get What are the packages in python that could help me to do that?</p>"	"<p>You don't have to extract the javascript variable itself, just where it uses that variable. In this case it is placed in the href of the results back from the search.</p>  <p>There a bunch of different libraries you can use for automation. It depends on the level of automation you wish to see. In my case, I prefer to use selenium for these types of automation. Couple that with the core python module regex and you can create a basic example. I was able to write a quick mockup using selenium:</p>  <pre><code>from selenium import webdriver import re  url = ""http://www.consultant.ru/search/?q=N+145-%D0%A4%D0%97+%D0%BE%D1%82+31.07.1998"" pattern = re.compile(""n=(\d+)"") xpath = '//div[@id = ""baseSrch""]//a'  browser = webdriver.Firefox() page = browser.get(url) elements = browser.find_elements_by_xpath(xpath) browser.close()  for element in elements:     match = re.search(pattern, element.get_attribute(""href""))     if match:         print match.group(1) </code></pre>  <p>Which yields:</p>  <pre><code>160111 </code></pre>  <p>However this isn't the only way, you could also substitute this with urllib, requests, lxml, etc.. There are a bunch of different methods with which you can extract the information.</p>"
25457598	How do I decode escaped unicode javascript code in Python?	javascript|python|unicode	2014-08-23 01:24:42.723000 UTC	"<p>I have this string:</p>  <pre><code>V posledn\u00edch m\u011bs\u00edc\u00edch se bezpe\u010dnostn\u00ed situace v Libyi zna\u010dn\u011b zhor\u0161ila, o \u010dem\u017e sv\u011bd\u010d\u00ed i ned\u00e1vn\u00e9 n\u00e1hl\u00e9 opu\u0161t\u011bn\u00ed zem\u011b nejen \u010desk\u00fdmi diplomaty. Libyi hroz\u00ed nekontrolovan\u00fd rozpad a nekone\u010d </code></pre>  <p>Which should read ""V posledních měsících se ..."" so \u00ed is í and \u011b is ě.</p>  <p>Any idea how to decode this in Python? It is a javascript code I am parsing in python. I could write my own ad-hoc solution as there are not that many characters that are escaped (there are only twelve or so accented characters in Czech), but that seems ugly.</p>"	"<p>If it is Javascript code, then perhaps it's actually JSON, and you can use <code>json.loads</code> to decode it.</p>"
25457598	How do I decode escaped unicode javascript code in Python?	javascript|python|unicode	2014-08-23 01:24:42.723000 UTC	"<p>I have this string:</p>  <pre><code>V posledn\u00edch m\u011bs\u00edc\u00edch se bezpe\u010dnostn\u00ed situace v Libyi zna\u010dn\u011b zhor\u0161ila, o \u010dem\u017e sv\u011bd\u010d\u00ed i ned\u00e1vn\u00e9 n\u00e1hl\u00e9 opu\u0161t\u011bn\u00ed zem\u011b nejen \u010desk\u00fdmi diplomaty. Libyi hroz\u00ed nekontrolovan\u00fd rozpad a nekone\u010d </code></pre>  <p>Which should read ""V posledních měsících se ..."" so \u00ed is í and \u011b is ě.</p>  <p>Any idea how to decode this in Python? It is a javascript code I am parsing in python. I could write my own ad-hoc solution as there are not that many characters that are escaped (there are only twelve or so accented characters in Czech), but that seems ugly.</p>"	"<p>I had a similar issue, was solved by:</p> <p><code>unicodedata.normalize('NFD', my_string.decode('unicode-escape')).encode('ascii','ignore')</code></p>"
25457598	How do I decode escaped unicode javascript code in Python?	javascript|python|unicode	2014-08-23 01:24:42.723000 UTC	"<p>I have this string:</p>  <pre><code>V posledn\u00edch m\u011bs\u00edc\u00edch se bezpe\u010dnostn\u00ed situace v Libyi zna\u010dn\u011b zhor\u0161ila, o \u010dem\u017e sv\u011bd\u010d\u00ed i ned\u00e1vn\u00e9 n\u00e1hl\u00e9 opu\u0161t\u011bn\u00ed zem\u011b nejen \u010desk\u00fdmi diplomaty. Libyi hroz\u00ed nekontrolovan\u00fd rozpad a nekone\u010d </code></pre>  <p>Which should read ""V posledních měsících se ..."" so \u00ed is í and \u011b is ě.</p>  <p>Any idea how to decode this in Python? It is a javascript code I am parsing in python. I could write my own ad-hoc solution as there are not that many characters that are escaped (there are only twelve or so accented characters in Czech), but that seems ugly.</p>"	"<p>Decode it using the <code>'unicode-escape'</code> codec.  If <code>x</code> is your string, <code>x.decode('unicode-escape')</code>.</p>"
25458974	Converting JavaScript JSON data to Python JSON	javascript|python|json	2014-08-23 06:06:07.607000 UTC	"<p>I have JavaScript JSON data:</p>  <pre><code>var data = '{a: 10, b: 20}' </code></pre>  <p>I want to convert it to Python JSON. How can I do?</p>  <p><strong>My situation:</strong>  I have script that read text from a website. website has data in javascript variables like I show in example. I extracted variable part <code>'{a: 10, b: 20}'</code>. But for the python, it is still string format. I need to convert that data into Python JSON so I can do further work.</p>  <p>How can I convert JavaScript JSON to Python JSON?</p>"	"<p><code>var data = '{a: 10, b: 20}'</code> is not a valid JSON. It is valid JavaScript  </p>  <p>If you were to do </p>  <pre><code>var data = JSON.stringify({ a: 10, b: 20 }); </code></pre>  <p>you would find it actually becomes</p>  <pre><code>var data = '{ ""a"": 10, ""b"": 20 }' </code></pre>  <p>The extra <code>""</code> around the <code>a</code> and <code>b</code> variables being the part that makes this valid JSON. The confusion comes from the fact that JavaScript is more forgiving than JSON.  </p>  <p>Don't feel bad. You will not be the only one who will fall into this trap.</p>"
25458974	Converting JavaScript JSON data to Python JSON	javascript|python|json	2014-08-23 06:06:07.607000 UTC	"<p>I have JavaScript JSON data:</p>  <pre><code>var data = '{a: 10, b: 20}' </code></pre>  <p>I want to convert it to Python JSON. How can I do?</p>  <p><strong>My situation:</strong>  I have script that read text from a website. website has data in javascript variables like I show in example. I extracted variable part <code>'{a: 10, b: 20}'</code>. But for the python, it is still string format. I need to convert that data into Python JSON so I can do further work.</p>  <p>How can I convert JavaScript JSON to Python JSON?</p>"	"<p>it need regex replace before can convert it json</p> <pre><code>import re import json  data = '''{a: 10, b: true, c :&quot;string&quot;, &quot;d&quot; : jsVariable, e:'single'}'''  # replace single with double quote data = data.replace(&quot;'&quot;, '&quot;')  # wrap key with double quotes data = re.sub(r&quot;(\w+)\s?:&quot;, r'&quot;\1&quot;:', data)  # wrap value with double quotes # but not for interger or boolean data = re.sub(r&quot;:\s?(?!(\d+|true|false))(\w+)&quot;, r':&quot;\2&quot;', data)  data = json.loads(data)  print(data['a']) # 10 print(json.dumps(data, indent=2)) # formatted json string </code></pre>"
25458974	Converting JavaScript JSON data to Python JSON	javascript|python|json	2014-08-23 06:06:07.607000 UTC	"<p>I have JavaScript JSON data:</p>  <pre><code>var data = '{a: 10, b: 20}' </code></pre>  <p>I want to convert it to Python JSON. How can I do?</p>  <p><strong>My situation:</strong>  I have script that read text from a website. website has data in javascript variables like I show in example. I extracted variable part <code>'{a: 10, b: 20}'</code>. But for the python, it is still string format. I need to convert that data into Python JSON so I can do further work.</p>  <p>How can I convert JavaScript JSON to Python JSON?</p>"	"<p>Apparently some libraries like <a href=""https://code.google.com/p/rson/"" rel=""nofollow noreferrer"">RSON</a> can help you.</p>  <p>According to <a href=""https://stackoverflow.com/questions/19745157/parse-javascript-object-declaration-which-doesnt-use-strings-for-property-names#answer-19745205"">that answer</a></p>"
25458974	Converting JavaScript JSON data to Python JSON	javascript|python|json	2014-08-23 06:06:07.607000 UTC	"<p>I have JavaScript JSON data:</p>  <pre><code>var data = '{a: 10, b: 20}' </code></pre>  <p>I want to convert it to Python JSON. How can I do?</p>  <p><strong>My situation:</strong>  I have script that read text from a website. website has data in javascript variables like I show in example. I extracted variable part <code>'{a: 10, b: 20}'</code>. But for the python, it is still string format. I need to convert that data into Python JSON so I can do further work.</p>  <p>How can I convert JavaScript JSON to Python JSON?</p>"	"<p><em>Python JSON</em> is a bit of a misnomer as JSON (as in JavaScript Object Notation) is a subset of JavaScript and simply describes a JavaScript object. It is an exchange format that does not depend on the language you are using it with.</p>  <p>You can use the <a href=""https://docs.python.org/2/library/json.html"" rel=""nofollow"">json</a> module to parse JSON in Python, and return an equivalent Python object.</p>"
25488148	What is the python equivalent of JavaScript's Array.prototype.some / every?	javascript|python|arrays	2014-08-25 14:26:38.260000 UTC	"<p>Does python have any equivalent to JavaScript's <a href=""https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/some"" rel=""noreferrer"">Array.prototype.some</a> / <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/every"" rel=""noreferrer"">every</a>?</p>  <p>Trivial JavaScript example:</p>  <pre><code>var arr = [ ""a"", ""b"", ""c"" ]; arr.some(function (element, index) {     console.log(""index: "" + index + "", element: "" + element)     if(element === ""b""){         return true;     } }); </code></pre>  <p>Will output:</p>  <pre><code>index: 0, element: a index: 1, element: b </code></pre>  <p>The below python seems to be functionally equivalent, but I do not know if there is a more ""pythonic"" approach.</p>  <pre><code>arr = [ ""a"", ""b"", ""c"" ] for index, element in enumerate(arr):     print(""index: %i, element: %s"" % (index, element))     if element == ""b"":         break </code></pre>"	"<pre><code>numbers = [1, 2, 3, 4, 5, 6, 7, 8] def callback( n ):     return (n % 2 == 0)  # 1) Demonstrates how list() works with an iterable isEvenList = list( callback(n) for n in numbers) print(isEvenList)  # 2) Demonstrates how any() works with an iterable anyEvenNumbers = any( callback(n) for n in numbers) print(anyEvenNumbers)  # 3) Demonstrates how all() works with an iterable allEvenNumbers = all( callback(n) for n in numbers) print(allEvenNumbers) </code></pre> <ol> <li>list() takes any iterable, returns another list:</li> </ol> <pre><code>isEvenList = list(callback(n) for n in numbers) print(isEvenList) #[False, True, False, True, False, True, False, True] </code></pre> <ol start=""2""> <li>any(): needs just one True in a list of booleans, returns a boolean:</li> </ol> <pre><code>anyEvenNumbers = any( callback(n) for n in numbers) print(anyEvenNumbers) #True </code></pre> <ol start=""3""> <li>all(): needs all True values in a list of booleans, returns a boolean:</li> </ol> <pre><code>allEvenNumbers = all( callback(n) for n in numbers) print(allEvenNumbers) #False </code></pre>"
25488148	What is the python equivalent of JavaScript's Array.prototype.some / every?	javascript|python|arrays	2014-08-25 14:26:38.260000 UTC	"<p>Does python have any equivalent to JavaScript's <a href=""https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/some"" rel=""noreferrer"">Array.prototype.some</a> / <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/every"" rel=""noreferrer"">every</a>?</p>  <p>Trivial JavaScript example:</p>  <pre><code>var arr = [ ""a"", ""b"", ""c"" ]; arr.some(function (element, index) {     console.log(""index: "" + index + "", element: "" + element)     if(element === ""b""){         return true;     } }); </code></pre>  <p>Will output:</p>  <pre><code>index: 0, element: a index: 1, element: b </code></pre>  <p>The below python seems to be functionally equivalent, but I do not know if there is a more ""pythonic"" approach.</p>  <pre><code>arr = [ ""a"", ""b"", ""c"" ] for index, element in enumerate(arr):     print(""index: %i, element: %s"" % (index, element))     if element == ""b"":         break </code></pre>"	"<p>Python has <code>all(iterable)</code> and <code>any(iterable)</code>. So if you make a generator or an iterator that does what you want, you can test it with those functions. For example:</p> <pre><code>some_is_b = any(x == 'b' for x in ary) all_are_b = all(x == 'b' for x in ary) </code></pre> <p>They are actually defined in <a href=""https://docs.python.org/3/library/functions.html#all"" rel=""noreferrer"">the documentation</a> by their code equivalents. Does this look familiar?</p> <pre><code>def any(iterable):     for element in iterable:         if element:             return True     return False </code></pre>"
25488148	What is the python equivalent of JavaScript's Array.prototype.some / every?	javascript|python|arrays	2014-08-25 14:26:38.260000 UTC	"<p>Does python have any equivalent to JavaScript's <a href=""https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/some"" rel=""noreferrer"">Array.prototype.some</a> / <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/every"" rel=""noreferrer"">every</a>?</p>  <p>Trivial JavaScript example:</p>  <pre><code>var arr = [ ""a"", ""b"", ""c"" ]; arr.some(function (element, index) {     console.log(""index: "" + index + "", element: "" + element)     if(element === ""b""){         return true;     } }); </code></pre>  <p>Will output:</p>  <pre><code>index: 0, element: a index: 1, element: b </code></pre>  <p>The below python seems to be functionally equivalent, but I do not know if there is a more ""pythonic"" approach.</p>  <pre><code>arr = [ ""a"", ""b"", ""c"" ] for index, element in enumerate(arr):     print(""index: %i, element: %s"" % (index, element))     if element == ""b"":         break </code></pre>"	"<p>No. <a href=""http://docs.scipy.org/doc/numpy/reference/generated/numpy.any.html"" rel=""nofollow"">NumPy arrays have</a>, but standard python lists don't. Even so, the numpy array implementations are not what you'd expect: they don't take a predicate, but evaluate every element by converting them to boolean.</p>  <p><strong>Edit</strong>: <code>any</code> and <code>all</code> exist as functions (not as methods), but they don't apply predicates, but consider booleanized values as numpy methods.</p>  <p>In Python, <code>some</code> could be:</p>  <pre><code>def some(list_, pred):     return bool([i for i in list_ if pred(i)])  #or a more efficient approach, which doesn't build a new list def some(list_, pred):     return any(pred(i) for i in list_) #booleanize the values, and pass them to any </code></pre>  <p>You could implement <code>every</code>:</p>  <pre><code>def every(list_, pred):     return all(pred(i) for i in list_) </code></pre>  <p><strong>Edit</strong>: dumb sample:</p>  <pre><code>every(['a', 'b', 'c'], lambda e: e == 'b') some(['a', 'b', 'c'], lambda e: e == 'b') </code></pre>  <p>Try them by urself</p>"
25490137	Python: Is there a way to get HTML that was dynamically created by Javascript?	javascript|python|html|parsing	2014-08-25 16:16:10.547000 UTC	"<p>As far as I can tell, this is the case for LyricWikia. The lyrics (<a href=""http://lyrics.wikia.com/Billy_Joel:Piano_Man"" rel=""nofollow"">example</a>) can be accessed from the browser, but can't be found in the source code (can be opened with <kbd>CTRL</kbd> + <kbd>U</kbd> in most browsers) or reading the contents of the site with Python:</p>  <pre><code>from urllib.request import urlopen  URL = 'http://lyrics.wikia.com/Billy_Joel:Piano_Man'  r = urlopen(URL).read().decode('utf-8') </code></pre>  <p>And the test:</p>  <pre><code>&gt;&gt;&gt; 'Now John at the bar is a friend of mine' in r False &gt;&gt;&gt; 'John' in r False </code></pre>  <p>But when you select and look at the source code of the box in which the lyrics are displayed, you can see that there is: <code>&lt;div class=""lyricbox""&gt;[...]&lt;/div&gt;</code></p>  <p>Is there a way to get the contents of that <code>div</code>-element with Python?</p>"	"<p>You can try <a href=""http://jeanphix.me/Ghost.py/"" rel=""nofollow"">Ghost.py</a>, which is essentially Phantom.js for Python. It embeds WebKit and is thus able to execute the JavaScript on the page as if you had navigated to the page manually. It then gives you access to the DOM structure.</p>"
25511708	Javascript execute python file	javascript|python|ajax|raspberry-pi|sudo	2014-08-26 17:25:16.737000 UTC	"<p>I'm building a house monitor using a Raspberry Pi and midori in kiosk mode. I wrote a python script which reads out some GPIO pins and prints a value. Based on this value I'd like to specify a javascript event. So when for example some sensor senses it's raining I want the browser to immediately update its GUI. What's the best way to do this? I tried executing the python script in PHP and accessing it over AJAX, but this is too slow.</p>"	"<p>I've done this by running my commands through the python c-api, calling py_SimpleString in javascript, it runs quick.</p>  <p>or</p>  <p><strong>Take a look at <a href=""https://www.djangoproject.com/"" rel=""nofollow"">django</a>, it's probably what you want!</strong> </p>"
25511708	Javascript execute python file	javascript|python|ajax|raspberry-pi|sudo	2014-08-26 17:25:16.737000 UTC	"<p>I'm building a house monitor using a Raspberry Pi and midori in kiosk mode. I wrote a python script which reads out some GPIO pins and prints a value. Based on this value I'd like to specify a javascript event. So when for example some sensor senses it's raining I want the browser to immediately update its GUI. What's the best way to do this? I tried executing the python script in PHP and accessing it over AJAX, but this is too slow.</p>"	<p>Solved it by spawning my python script from nodejs and communicating in realtime to my webclient using socket.io.</p>
25517662	how to call python script from javascript?	javascript|python|sql|sqlalchemy	2014-08-27 01:39:03.887000 UTC	"<p>I have a backend python script where it retrieves the data from the sqlalchemy engine. And I would like to show the data in a search box where you can scroll down the list of data and select it. I read some answers to the similar questions like mine, (use ajax to call python script). But I'm still not clear about this. Here is my python script.</p>  <pre><code># models.py  from sqlalchemy import create_engine from sqlalchemy.engine.url import URL from sqlalchemy.ext.declarative import declarative_base import pandas as pd  aURL = URL(drivername='mysql', username='chlee021690',  database = 'recommender') engine = create_engine(aURL, echo=True)  sql_command = 'SELECT product_id FROM bestbuy_data'  results = pd.read_sql(sql = sql_command, con = engine) </code></pre>  <p>Can anybody tell me how to create javscript code to retrieve that results and render it in my form? Thanks.</p>"	"<p>Your Python server needs to do 2 things:</p>  <ol> <li>Serve up the AJAX javascript file itself (via GET)</li> <li>respond to calls from the web client (via POST).</li> </ol>  <p>Also it should be threaded to support multiple simultaneous connections. Below is an example showing how to do all of the above with the built-in <code>BaseHTTPServer</code>.</p>  <p>JS (put in static/hello.html to serve via Python):</p>  <pre><code>&lt;html&gt;&lt;head&gt;&lt;meta charset=""utf-8""/&gt;&lt;/head&gt;&lt;body&gt; Hello.  &lt;script&gt;  var xhr = new XMLHttpRequest(); xhr.open(""POST"", ""/postman"", true); xhr.setRequestHeader('Content-Type', 'application/json'); xhr.send(JSON.stringify({     value: 'value' })); xhr.onload = function() {   console.log(""HELLO"")   console.log(this.responseText);   var data = JSON.parse(this.responseText);   console.log(data); }  &lt;/script&gt;&lt;/body&gt;&lt;/html&gt; </code></pre>  <p>Python server (for testing):</p>  <pre><code>import time, threading, socket, SocketServer, BaseHTTPServer import os, traceback, sys, json   log_lock           = threading.Lock() log_next_thread_id = 0  # Local log functiondef   def Log(module, msg):     with log_lock:         thread = threading.current_thread().__name__         msg    = ""%s %s: %s"" % (module, thread, msg)         sys.stderr.write(msg + '\n')  def Log_Traceback():     t   = traceback.format_exc().strip('\n').split('\n')     if ', in ' in t[-3]:         t[-3] = t[-3].replace(', in','\n***\n***  In') + '(...):'         t[-2] += '\n***'     err = '\n***  '.join(t[-3:]).replace('""','').replace(' File ', '')     err = err.replace(', line',':')     Log(""Traceback"", '\n'.join(t[:-3]) + '\n\n\n***\n*** ' + err + '\n***\n\n')      os._exit(4)  def Set_Thread_Label(s):     global log_next_thread_id     with log_lock:         threading.current_thread().__name__ = ""%d%s"" \             % (log_next_thread_id, s)         log_next_thread_id += 1   class Handler(BaseHTTPServer.BaseHTTPRequestHandler):      def do_GET(self):         Set_Thread_Label(self.path + ""[get]"")         try:             Log(""HTTP"", ""PATH='%s'"" % self.path)             with open('static' + self.path) as f:                 data = f.read()             Log(""Static"", ""DATA='%s'"" % data)             self.send_response(200)             self.send_header(""Content-type"", ""text/html"")             self.end_headers()             self.wfile.write(data)         except:             Log_Traceback()      def do_POST(self):         Set_Thread_Label(self.path + ""[post]"")         try:             length = int(self.headers.getheader('content-length'))             req   = self.rfile.read(length)             Log(""HTTP"", ""PATH='%s'"" % self.path)             Log(""URL"", ""request data = %s"" % req)             req = json.loads(req)             response = {'req': req}             response = json.dumps(response)             Log(""URL"", ""response data = %s"" % response)             self.send_response(200)             self.send_header(""Content-type"", ""application/json"")             self.send_header(""content-length"", str(len(response)))             self.end_headers()             self.wfile.write(response)         except:             Log_Traceback()   # Create ONE socket. addr = ('', 8000) sock = socket.socket (socket.AF_INET, socket.SOCK_STREAM) sock.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1) sock.bind(addr) sock.listen(5)  # Launch 10 listener threads. class Thread(threading.Thread):     def __init__(self, i):         threading.Thread.__init__(self)         self.i = i         self.daemon = True         self.start()     def run(self):         httpd = BaseHTTPServer.HTTPServer(addr, Handler, False)          # Prevent the HTTP server from re-binding every handler.         # https://stackoverflow.com/questions/46210672/         httpd.socket = sock         httpd.server_bind = self.server_close = lambda self: None          httpd.serve_forever() [Thread(i) for i in range(10)] time.sleep(9e9) </code></pre>  <p>Console log (chrome):</p>  <pre><code>HELLO hello.html:14 {""req"": {""value"": ""value""}} hello.html:16  {req: {…}} req : {value: ""value""} __proto__ : Object </code></pre>  <p>Console log (firefox):</p>  <pre><code>GET  http://XXXXX:8000/hello.html [HTTP/1.0 200 OK 0ms] POST  XHR  http://XXXXX:8000/postman [HTTP/1.0 200 OK 0ms] HELLO hello.html:13:3 {""req"": {""value"": ""value""}} hello.html:14:3 Object { req: Object } </code></pre>  <p>Console log (Edge):</p>  <pre><code>HTML1300: Navigation occurred. hello.html HTML1527: DOCTYPE expected. Consider adding a valid HTML5 doctype: ""&lt;!DOCTYPE html&gt;"". hello.html (1,1) Current window: XXXXX/hello.html HELLO hello.html (13,3) {""req"": {""value"": ""value""}} hello.html (14,3) [object Object] hello.html (16,3)    {       [functions]: ,       __proto__: { },       req: {          [functions]: ,          __proto__: { },          value: ""value""       }    } </code></pre>  <p>Python log:</p>  <pre><code>HTTP 8/postman[post]: PATH='/postman' URL 8/postman[post]: request data = {""value"":""value""} URL 8/postman[post]: response data = {""req"": {""value"": ""value""}} </code></pre>  <p>Also you can easily add SSL by wrapping the socket before passing it to BaseHTTPServer.</p>"
25517662	how to call python script from javascript?	javascript|python|sql|sqlalchemy	2014-08-27 01:39:03.887000 UTC	"<p>I have a backend python script where it retrieves the data from the sqlalchemy engine. And I would like to show the data in a search box where you can scroll down the list of data and select it. I read some answers to the similar questions like mine, (use ajax to call python script). But I'm still not clear about this. Here is my python script.</p>  <pre><code># models.py  from sqlalchemy import create_engine from sqlalchemy.engine.url import URL from sqlalchemy.ext.declarative import declarative_base import pandas as pd  aURL = URL(drivername='mysql', username='chlee021690',  database = 'recommender') engine = create_engine(aURL, echo=True)  sql_command = 'SELECT product_id FROM bestbuy_data'  results = pd.read_sql(sql = sql_command, con = engine) </code></pre>  <p>Can anybody tell me how to create javscript code to retrieve that results and render it in my form? Thanks.</p>"	"<p>Step 1: make your script available as a web service. You can use <a href=""https://docs.python.org/2/library/cgi.html"">CGI</a>, or you can use one of the cool server frameworks that will run standalone or WSGI like CherryPy, web.py or Flask.</p>  <p>Step 2: make an AJAX call to the URL served by step 1, either manually (look for <code>XmlHttpRequest</code> examples), or easily using jQuery or another framework (<code>jQuery.ajax()</code>, <code>jQuery.get()</code>).</p>  <p>These are two separate tasks, both are well documented on the web. If you have a more specific question, I suggest you ask again, showing what you are stuck on.</p>  <p>There are also many examples for the complete package available (""python ajax example""), for example <a href=""http://runnable.com/UiPhLHanceFYAAAP/how-to-perform-ajax-in-flask-for-python"">this</a>.</p>"
25536270	Python or JavaScript scripting for NetLogo?	python|netlogo|agent-based-modeling	2014-08-27 20:21:34.193000 UTC	"<p>NetLogo is excellent for agent-based modeling...except for the language.  I always find myself contorting my brain trying to figure out how to do something that <em>should</em> be simple to code (such as implementing a simple case statement) in NetLogo's Logo implementation. Logo is just not a programmer's language (apologies to those infuriated by this assertion).</p>  <p>I saw Abe Gong's Tengolo project that purported to do just this (<a href=""http://compsocsci.blogspot.com/2012/02/announcing-tengolo-python-alternative.html"" rel=""noreferrer"">http://compsocsci.blogspot.com/2012/02/announcing-tengolo-python-alternative.html</a>) but the project appears to have been abandoned. Also another question in stack overflow (<a href=""https://stackoverflow.com/questions/4905873/agent-based-simulation-performance-issue-python-vs-netlogo-repast"">agent-based simulation: performance issue: Python vs NetLogo &amp; Repast</a>) seems to indicate that Python would be slower. </p>  <p>Seems like it would be quite possible to use Jython to compile into modules that NetLogo could use, but I wondered if anyone is aware of something that would let me do NetLogo simulations in a sensible language like Python. Thoughts?</p>"	"<p>If you are looking to do optimization or sensitivity analysis on NetLogo models from Python you might want to consider using <strong><a href=""https://github.com/chathika/NL4Py"" rel=""nofollow noreferrer"">NL4Py</a></strong>. NL4Py is a Python package that lets you control NetLogo models from Python. The <a href=""https://pypi.org/project/NL4Py/"" rel=""nofollow noreferrer"">package is released on PyPI.org</a> and you can get started with a simple <code>pip install nl4py</code>.</p>  <p><a href=""https://arxiv.org/pdf/1808.03292.pdf"" rel=""nofollow noreferrer"">Article Preprint</a></p>  <p><a href=""https://github.com/chathika/NL4Py"" rel=""nofollow noreferrer"">Repository and Documentation</a></p>  <p><a href=""https://github.com/chathika/NL4Py/blob/master/examples/ParameterCalibrationWithDEAP.ipynb"" rel=""nofollow noreferrer"">Example of model calibration with NL4Py and DEAP</a></p>  <p><a href=""https://github.com/chathika/NL4Py/blob/master/examples/SensitivityAnalysis.ipynb"" rel=""nofollow noreferrer"">Example of sensitivity analysis  with NL4Py and SALib</a></p>"
25536270	Python or JavaScript scripting for NetLogo?	python|netlogo|agent-based-modeling	2014-08-27 20:21:34.193000 UTC	"<p>NetLogo is excellent for agent-based modeling...except for the language.  I always find myself contorting my brain trying to figure out how to do something that <em>should</em> be simple to code (such as implementing a simple case statement) in NetLogo's Logo implementation. Logo is just not a programmer's language (apologies to those infuriated by this assertion).</p>  <p>I saw Abe Gong's Tengolo project that purported to do just this (<a href=""http://compsocsci.blogspot.com/2012/02/announcing-tengolo-python-alternative.html"" rel=""noreferrer"">http://compsocsci.blogspot.com/2012/02/announcing-tengolo-python-alternative.html</a>) but the project appears to have been abandoned. Also another question in stack overflow (<a href=""https://stackoverflow.com/questions/4905873/agent-based-simulation-performance-issue-python-vs-netlogo-repast"">agent-based simulation: performance issue: Python vs NetLogo &amp; Repast</a>) seems to indicate that Python would be slower. </p>  <p>Seems like it would be quite possible to use Jython to compile into modules that NetLogo could use, but I wondered if anyone is aware of something that would let me do NetLogo simulations in a sensible language like Python. Thoughts?</p>"	"<p>As of <strong>April 2018</strong>, there is a new kid on the block, <strong>PyNetLogo</strong>, and it is even <a href=""https://pypi.python.org/pypi/pyNetLogo"" rel=""nofollow noreferrer"">available in PyPi</a> for simple installation via <code>pip</code>.</p> <p>Paper @ JASSS: <a href=""http://jasss.soc.surrey.ac.uk/21/2/4.html"" rel=""nofollow noreferrer"">PyNetLogo: Linking NetLogo with Python</a> (March 2018)</p> <p><a href=""https://github.com/quaquel/pyNetLogo"" rel=""nofollow noreferrer"">Code @ Github</a></p> <p><a href=""http://pynetlogo.readthedocs.io/en/latest/"" rel=""nofollow noreferrer"">Documentation</a></p>"
25536270	Python or JavaScript scripting for NetLogo?	python|netlogo|agent-based-modeling	2014-08-27 20:21:34.193000 UTC	"<p>NetLogo is excellent for agent-based modeling...except for the language.  I always find myself contorting my brain trying to figure out how to do something that <em>should</em> be simple to code (such as implementing a simple case statement) in NetLogo's Logo implementation. Logo is just not a programmer's language (apologies to those infuriated by this assertion).</p>  <p>I saw Abe Gong's Tengolo project that purported to do just this (<a href=""http://compsocsci.blogspot.com/2012/02/announcing-tengolo-python-alternative.html"" rel=""noreferrer"">http://compsocsci.blogspot.com/2012/02/announcing-tengolo-python-alternative.html</a>) but the project appears to have been abandoned. Also another question in stack overflow (<a href=""https://stackoverflow.com/questions/4905873/agent-based-simulation-performance-issue-python-vs-netlogo-repast"">agent-based simulation: performance issue: Python vs NetLogo &amp; Repast</a>) seems to indicate that Python would be slower. </p>  <p>Seems like it would be quite possible to use Jython to compile into modules that NetLogo could use, but I wondered if anyone is aware of something that would let me do NetLogo simulations in a sensible language like Python. Thoughts?</p>"	"<p>There have been a bunch of NetLogo-clone type projects over the years, but they tend to founder and die once the creators realize how massively much work is involved in creating and sustaining something like NetLogo over a period of years and even decades. (Work on NetLogo and its predecessors in the StarLogo line stretches back to the late 1980s.)</p> <p><strong>2015 update:</strong> <a href=""https://github.com/projectmesa/mesa"" rel=""nofollow noreferrer"">Mesa</a> looks like a promising entrant in the ABM-for-Python space.</p> <p>For those who like NetLogo's feature set and agent semantics but dislike the language, I think the most promising direction is the <a href=""http://netlogoweb.org"" rel=""nofollow noreferrer"">NetLogo Web</a> project, by the developers of NetLogo (including myself, though as of 2015, I'm no longer heavily involved). In addition to being backwards compatible with the old NetLogo language, NLW also allows building models in JavaScript or any compile-to-JavaScript language.</p> <p>NLW hasn't achieved full feature parity with regular NetLogo yet, but it's well on its way. So depending on your needs, it might just be a promising direction rather than a solution you can use today.</p> <p>You might also take a look at <a href=""http://agentscript.org"" rel=""nofollow noreferrer"">AgentScript</a> — also JavaScript based, with a CoffeeScript bias (2015 update: I think they are switching to ES6?).</p> <p><strong>2020 update:</strong> A recent JavaScript and Python-based entrant (from StackOverflow founder Joel Spolsky!) is HASH: <a href=""https://hash.ai"" rel=""nofollow noreferrer"">https://hash.ai</a></p>"
25536270	Python or JavaScript scripting for NetLogo?	python|netlogo|agent-based-modeling	2014-08-27 20:21:34.193000 UTC	"<p>NetLogo is excellent for agent-based modeling...except for the language.  I always find myself contorting my brain trying to figure out how to do something that <em>should</em> be simple to code (such as implementing a simple case statement) in NetLogo's Logo implementation. Logo is just not a programmer's language (apologies to those infuriated by this assertion).</p>  <p>I saw Abe Gong's Tengolo project that purported to do just this (<a href=""http://compsocsci.blogspot.com/2012/02/announcing-tengolo-python-alternative.html"" rel=""noreferrer"">http://compsocsci.blogspot.com/2012/02/announcing-tengolo-python-alternative.html</a>) but the project appears to have been abandoned. Also another question in stack overflow (<a href=""https://stackoverflow.com/questions/4905873/agent-based-simulation-performance-issue-python-vs-netlogo-repast"">agent-based simulation: performance issue: Python vs NetLogo &amp; Repast</a>) seems to indicate that Python would be slower. </p>  <p>Seems like it would be quite possible to use Jython to compile into modules that NetLogo could use, but I wondered if anyone is aware of something that would let me do NetLogo simulations in a sensible language like Python. Thoughts?</p>"	"<p>The <a href=""http://jasss.soc.surrey.ac.uk/14/2/5.html"" rel=""nofollow"">gridworld.py</a> module provides some NetLogo-like functionality.</p>  <p>I absolutely love Python, but I'll put in a word for NetLogo: it is more than adequate for most small scale simulations once you get used to its feature set, especially since the addition of tasks. (As Nicolas suggests, taking a functional programming perspective helps.)  For some projects the absence of inheritance in NetLogo in really inconvenient (breeds are not an adequate substitute).  Nevertheless, one of my ongoing projects is in NetLogo, and after trying to teach agent-based programming with Python, I switched to NetLogo for the classroom.</p>  <p>One more thing: looking forward, <a href=""https://github.com/NetLogo/Galapagos"" rel=""nofollow"">Tortoise</a> looks pretty exciting.</p>"
25536270	Python or JavaScript scripting for NetLogo?	python|netlogo|agent-based-modeling	2014-08-27 20:21:34.193000 UTC	"<p>NetLogo is excellent for agent-based modeling...except for the language.  I always find myself contorting my brain trying to figure out how to do something that <em>should</em> be simple to code (such as implementing a simple case statement) in NetLogo's Logo implementation. Logo is just not a programmer's language (apologies to those infuriated by this assertion).</p>  <p>I saw Abe Gong's Tengolo project that purported to do just this (<a href=""http://compsocsci.blogspot.com/2012/02/announcing-tengolo-python-alternative.html"" rel=""noreferrer"">http://compsocsci.blogspot.com/2012/02/announcing-tengolo-python-alternative.html</a>) but the project appears to have been abandoned. Also another question in stack overflow (<a href=""https://stackoverflow.com/questions/4905873/agent-based-simulation-performance-issue-python-vs-netlogo-repast"">agent-based simulation: performance issue: Python vs NetLogo &amp; Repast</a>) seems to indicate that Python would be slower. </p>  <p>Seems like it would be quite possible to use Jython to compile into modules that NetLogo could use, but I wondered if anyone is aware of something that would let me do NetLogo simulations in a sensible language like Python. Thoughts?</p>"	"<p>NetLogo as a language does have some flaws. The <a href=""https://github.com/NetLogo/NetLogo/issues/344"" rel=""noreferrer"">lack of a <code>case</code> statement</a> is certainly a minor one; the lack of modularity above the function level is a bigger one for very complex simulations.</p>  <p>But things that <em>should</em> be simple to code usually <em>are</em> simple to code, albeit in a way that you might not be used to. It's all a matter of mindset: the Logo language has its roots in the Lisp family, and the best way to approach a problem in it is almost always from a <a href=""http://en.wikipedia.org/wiki/Functional_programming"" rel=""noreferrer"">functional programming</a> point of view. If you try to maintain an imperative (or even ""pythonic"") mindset, you'll likely have to ""contort your brain"" constantly.</p>  <p>I would suggest posting questions here when you find yourself struggling with apparently simple things. There is a very good chance that someone will be willing to show you the ""NetLogo way"" of doing it.</p>  <p>That being said, there are two main ways for NetLogo to interface with other JVM languages, including Jython:</p>  <ul> <li><p><a href=""https://github.com/NetLogo/NetLogo/wiki/Extensions-API"" rel=""noreferrer"">The Extensions API</a> allows you to provide new primitives usable inside NetLogo. You could conceivably build the bulk of your model inside Jython, expose your code through extension primitives, and keep the stuff that you have to code inside NetLogo to a minimum.</p></li> <li><p><a href=""https://github.com/NetLogo/NetLogo/wiki/Controlling-API"" rel=""noreferrer"">The Controlling API</a> allows you to control NetLogo from an external program. In this scenario, you would code your model in Jython and use NetLogo as an external simulation engine/library.</p></li> </ul>  <p>But if your goal is just to build simulations, I'm not sure that you would gain a lot by taking these roundabout ways. You might as well switch to a different platform like <a href=""http://cs.gmu.edu/~eclab/projects/mason/"" rel=""noreferrer"">MASON</a> or <a href=""http://repast.sourceforge.net/"" rel=""noreferrer"">Repast</a> or just, you know... <em>learn to love NetLogo</em>.</p>"
25541651	How to print formatted python output for javascript?	javascript|python|cgi|stdout	2014-08-28 05:55:18.910000 UTC	"<p>I am trying to capture the stdout when I print on shell. I get output like this:</p>  <pre><code>************* STARTING healthmonitor ***********************  Aug 28, 2014 5:17:58 AM org.rzo.yajsw.os.posix.PosixService getPid INFO: wrapper pid file: /var/run/wrapper.healthmonitor.pid Aug 28, 2014 5:17:58 AM org.rzo.yajsw.os.posix.PosixService startProcess INFO: calling ""/usr/bin/java"" ""-Dwrapper.pidfile=/va/run/wrapper.healthmonitor.pid""               Aug 28, 2014 5:17:58 AM org.rzo.yajsw.os.posix.PosixService getPid INFO: wrapper pid file: /var/run/wrapper.healthmonitor.pid Aug 28, 2014 5:18:00 AM org.rzo.yajsw.os.posix.PosixService getPid INFO: wrapper pid file: /var/run/wrapper.healthmonitor.pid </code></pre>  <p>However, when I use the same output to print on a webpage, the format gets jumbled like this:</p>  <p><strong>*********</strong> STARTING healthmonitor <strong>*******************</strong> Aug 28, 2014 4:48:23 AM org.rzo.yajsw.os.posix.PosixService getPid INFO: wrapper pid file: /var/run/wrapper.healthmonitor.pid Aug 28, 2014 4:48:23 AM org.rzo.yajsw.os.posix.PosixService startProcess INFO: calling ""/usr/bin/java"" ""-Dwrapper.pidfile=/var/run/wrapper.healthmonitor.pid"" ""-Dwrapper.service=true"" ""-Dwrapper.visible=false"" ""-Djna_tmpdir=/app/sterling/jsw/healthmonitor/bin/../tmp"" ""-jar"" ""/app/sterling/jsw/healthmonitor/wrapper.jar"" ""-c"" ""/app/sterling/jsw/healthmonitor/conf/wrapper.conf"" Aug 28, 2014 4:48:23 AM org.rzo.yajsw.os.posix.PosixService getPid INFO: </p>  <p>The python script which prints this is called in a java script file using cgi python way of calling.  And in the python script, this is how its printed. </p>  <pre><code>import cgi, cgitb  print(""Content-type: text/html\n\n"") print """""" &lt;html&gt;&lt;head&gt;&lt;/head&gt; &lt;body&gt; &lt;br&gt; """""" print nova.servers.get_console_output(VMID)  print """""" &lt;/body&gt;&lt;/html&gt; """""" </code></pre>  <p>The ""print nova.servers.get_console_output(VMID)"" is the one that produces the console output.  </p>  <p>Thanks for any help you can offer.  </p>"	"<p>Newline characters (<code>\n</code>) are not translated to new lines when rendered as HTML.  You can use a <code>&lt;pre&gt;</code> tag (preformatted) to allow them to have meaning when being rendered.  </p>  <pre><code>... print """""" &lt;html&gt;&lt;head&gt;&lt;/head&gt; &lt;body&gt; &lt;br&gt; &lt;pre&gt; """""" print nova.servers.get_console_output(VMID)  print """""" &lt;/pre&gt; &lt;/body&gt;&lt;/html&gt; """""" </code></pre>  <p>Or you could replace newline characters with a <code>&lt;br&gt;</code>, like so:</p>  <pre><code>print nova.servers.get_console_output(VMID).replace(""\n"", ""&lt;br&gt;"") </code></pre>  <p>Either one should do what you want.</p>"
25588100	How to Load a javascript file and execute its functions with given parameters in Python 3.4?	javascript|python	2014-08-31 01:04:35.687000 UTC	"<p>For example, a js file called <code>x.js</code> (it's very simple just for explanation): </p>  <pre><code>function func2(x, y) {     return x + y }  function func1(x, y) {     return func2(x, y) } </code></pre>  <p>Now the module name is <code>jstopy</code>:</p>  <pre><code>import jstopy  jsobj = jstopy.load(""x.js"") jsobj.call(""func1"",1,2) # will return 3 </code></pre>  <p>I've searched answer for a long time. Answers such as <a href=""https://stackoverflow.com/questions/8284765/call-javascript-function-from-python"">this</a> are all for python 2 version. Execjs, pyv8 I've all tried.</p>  <p>You can see my final goal in <a href=""https://stackoverflow.com/questions/25584908/python-requests-how-to-call-js-function-to-calculate-some-value-before-post"">this question</a>. I've tried to reimplement it to Python but I failed, it's simply beyond my current js skills.</p>  <p>Update the encryption is done by the function <code>do_encrypt</code>:</p>  <pre><code>\* ori_password.value is the original password string a user entered   en_password.value will be set to the encrypt password*\ function do_encrypt(ori_password, en_password) {   var rsa = new RSAKey();   rsa.setPublic(rsa_key,'10001');   var en_pwd = document.getElementById(en_password);   var pwd = document.getElementById(ori_password);   var pwd_value = pwd.value;   var sts = document.getElementById('sts').value;   if(pwd_value.length!=0){     var res = rsa.encrypt(pwd_value+""\n""+sts);     if(res) {       en_pwd.value = hex2b64(res);       pwd.value = """";     }   } } </code></pre>  <p>The content of js file is (if needed):</p>  <pre><code>var b64map = ""ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/""; var b64pad = ""="";  function hex2b64(d) {     var b;     var e;     var a = """";     for (b = 0; b + 3 &lt;= d.length; b += 3) {         e = parseInt(d.substring(b, b + 3), 16);         a += b64map.charAt(e &gt;&gt; 6) + b64map.charAt(e &amp; 63)     }     if (b + 1 == d.length) {         e = parseInt(d.substring(b, b + 1), 16);         a += b64map.charAt(e &lt;&lt; 2)     } else {         if (b + 2 == d.length) {             e = parseInt(d.substring(b, b + 2), 16);             a += b64map.charAt(e &gt;&gt; 2) + b64map.charAt((e &amp; 3) &lt;&lt; 4)         }     }     while ((a.length &amp; 3) &gt; 0) {         a += b64pad     }     return a } function b64tohex(e) {     var c = """";     var d;     var a = 0;     var b;     for (d = 0; d &lt; e.length; ++d) {         if (e.charAt(d) == b64pad) {             break         }         v = b64map.indexOf(e.charAt(d));         if (v &lt; 0) {             continue         }         if (a == 0) {             c += int2char(v &gt;&gt; 2);             b = v &amp; 3;             a = 1         } else {             if (a == 1) {                 c += int2char((b &lt;&lt; 2) | (v &gt;&gt; 4));                 b = v &amp; 15;                 a = 2             } else {                 if (a == 2) {                     c += int2char(b);                     c += int2char(v &gt;&gt; 2);                     b = v &amp; 3;                     a = 3                 } else {                     c += int2char((b &lt;&lt; 2) | (v &gt;&gt; 4));                     c += int2char(v &amp; 15);                     a = 0                 }             }         }     }     if (a == 1) {         c += int2char(b &lt;&lt; 2)     }     return c } function b64toBA(e) {     var d = b64tohex(e);     var c;     var b = new Array();     for (c = 0; 2 * c &lt; d.length; ++c) {         b[c] = parseInt(d.substring(2 * c, 2 * c + 2), 16)     }     return b } function do_encrypt(e, i) {     var c = new RSAKey();     var h = ""A86C210DEB066606F7BB171ACD3EB98A7978833747B7CF488C788954785FFE58839BE7F9E490F12FFE7A6F3D31D993936D20245ECB6A40713999A8D472B89D0F3113226DA30656CD84B186FA4EC28A8A5AEF8781FC3A49B6C504BD9094523E930E754A12C9A0A54D474A99F0B754B047B0BFAAE7A6D6C97DA2D4C2623A6083B3"";     c.setPublic(h, ""10001"");     var b = document.getElementById(i);     var d = document.getElementById(e);     var a = d.value;     var g = document.getElementById(""sts"").value;     if (a.length != 0) {         var f = c.encrypt(a + ""\n"" + g);         if (f) {             b.value = hex2b64(f);             d.value = """"         }     } } var dbits; var canary = 244837814094590; var j_lm = ((canary &amp; 16777215) == 15715070);  function BigInteger(e, d, f) {     if (e != null) {         if (""number"" == typeof e) {             this.fromNumber(e, d, f)         } else {             if (d == null &amp;&amp; ""string"" != typeof e) {                 this.fromString(e, 256)             } else {                 this.fromString(e, d)             }         }     } } function nbi() {     return new BigInteger(null) } function am1(f, a, b, e, h, g) {     while (--g &gt;= 0) {         var d = a * this[f++] + b[e] + h;         h = Math.floor(d / 67108864);         b[e++] = d &amp; 67108863     }     return h } function am2(f, q, r, e, o, a) {     var k = q &amp; 32767,         p = q &gt;&gt; 15;     while (--a &gt;= 0) {         var d = this[f] &amp; 32767;         var g = this[f++] &gt;&gt; 15;         var b = p * d + g * k;         d = k * d + ((b &amp; 32767) &lt;&lt; 15) + r[e] + (o &amp; 1073741823);         o = (d &gt;&gt;&gt; 30) + (b &gt;&gt;&gt; 15) + p * g + (o &gt;&gt;&gt; 30);         r[e++] = d &amp; 1073741823     }     return o } function am3(f, q, r, e, o, a) {     var k = q &amp; 16383,         p = q &gt;&gt; 14;     while (--a &gt;= 0) {         var d = this[f] &amp; 16383;         var g = this[f++] &gt;&gt; 14;         var b = p * d + g * k;         d = k * d + ((b &amp; 16383) &lt;&lt; 14) + r[e] + o;         o = (d &gt;&gt; 28) + (b &gt;&gt; 14) + p * g;         r[e++] = d &amp; 268435455     }     return o } if (j_lm &amp;&amp; (navigator.appName == ""Microsoft Internet Explorer"")) {     BigInteger.prototype.am = am2;     dbits = 30 } else {     if (j_lm &amp;&amp; (navigator.appName != ""Netscape"")) {         BigInteger.prototype.am = am1;         dbits = 26     } else {         BigInteger.prototype.am = am3;         dbits = 28     } } BigInteger.prototype.DB = dbits; BigInteger.prototype.DM = ((1 &lt;&lt; dbits) - 1); BigInteger.prototype.DV = (1 &lt;&lt; dbits); var BI_FP = 52; BigInteger.prototype.FV = Math.pow(2, BI_FP); BigInteger.prototype.F1 = BI_FP - dbits; BigInteger.prototype.F2 = 2 * dbits - BI_FP; var BI_RM = ""0123456789abcdefghijklmnopqrstuvwxyz""; var BI_RC = new Array(); var rr, vv; rr = ""0"".charCodeAt(0); for (vv = 0; vv &lt;= 9; ++vv) {     BI_RC[rr++] = vv } rr = ""a"".charCodeAt(0); for (vv = 10; vv &lt; 36; ++vv) {     BI_RC[rr++] = vv } rr = ""A"".charCodeAt(0); for (vv = 10; vv &lt; 36; ++vv) {     BI_RC[rr++] = vv } function int2char(a) {     return BI_RM.charAt(a) } function intAt(b, a) {     var d = BI_RC[b.charCodeAt(a)];     return (d == null) ? -1 : d } function bnpCopyTo(b) {     for (var a = this.t - 1; a &gt;= 0; --a) {         b[a] = this[a]     }     b.t = this.t;     b.s = this.s } function bnpFromInt(a) {     this.t = 1;     this.s = (a &lt; 0) ? -1 : 0;     if (a &gt; 0) {         this[0] = a     } else {         if (a &lt; -1) {             this[0] = a + DV         } else {             this.t = 0         }     } } function nbv(a) {     var b = nbi();     b.fromInt(a);     return b } function bnpFromString(h, c) {     var e;     if (c == 16) {         e = 4     } else {         if (c == 8) {             e = 3         } else {             if (c == 256) {                 e = 8             } else {                 if (c == 2) {                     e = 1                 } else {                     if (c == 32) {                         e = 5                     } else {                         if (c == 4) {                             e = 2                         } else {                             this.fromRadix(h, c);                             return                         }                     }                 }             }         }     }     this.t = 0;     this.s = 0;     var g = h.length,         d = false,         f = 0;     while (--g &gt;= 0) {         var a = (e == 8) ? h[g] &amp; 255 : intAt(h, g);         if (a &lt; 0) {             if (h.charAt(g) == ""-"") {                 d = true             }             continue         }         d = false;         if (f == 0) {             this[this.t++] = a         } else {             if (f + e &gt; this.DB) {                 this[this.t - 1] |= (a &amp; ((1 &lt;&lt; (this.DB - f)) - 1)) &lt;&lt; f;                 this[this.t++] = (a &gt;&gt; (this.DB - f))             } else {                 this[this.t - 1] |= a &lt;&lt; f             }         }         f += e;         if (f &gt;= this.DB) {             f -= this.DB         }     }     if (e == 8 &amp;&amp; (h[0] &amp; 128) != 0) {         this.s = -1;         if (f &gt; 0) {             this[this.t - 1] |= ((1 &lt;&lt; (this.DB - f)) - 1) &lt;&lt; f         }     }     this.clamp();     if (d) {         BigInteger.ZERO.subTo(this, this)     } } function bnpClamp() {     var a = this.s &amp; this.DM;     while (this.t &gt; 0 &amp;&amp; this[this.t - 1] == a) {         --this.t     } } function bnToString(c) {     if (this.s &lt; 0) {         return ""-"" + this.negate().toString(c)     }     var e;     if (c == 16) {         e = 4     } else {         if (c == 8) {             e = 3         } else {             if (c == 2) {                 e = 1             } else {                 if (c == 32) {                     e = 5                 } else {                     if (c == 4) {                         e = 2                     } else {                         return this.toRadix(c)                     }                 }             }         }     }     var g = (1 &lt;&lt; e) - 1,         l, a = false,         h = """",         f = this.t;     var j = this.DB - (f * this.DB) % e;     if (f-- &gt; 0) {         if (j &lt; this.DB &amp;&amp; (l = this[f] &gt;&gt; j) &gt; 0) {             a = true;             h = int2char(l)         }         while (f &gt;= 0) {             if (j &lt; e) {                 l = (this[f] &amp; ((1 &lt;&lt; j) - 1)) &lt;&lt; (e - j);                 l |= this[--f] &gt;&gt; (j += this.DB - e)             } else {                 l = (this[f] &gt;&gt; (j -= e)) &amp; g;                 if (j &lt;= 0) {                     j += this.DB;                     --f                 }             }             if (l &gt; 0) {                 a = true             }             if (a) {                 h += int2char(l)             }         }     }     return a ? h : ""0"" } function bnNegate() {     var a = nbi();     BigInteger.ZERO.subTo(this, a);     return a } function bnAbs() {     return (this.s &lt; 0) ? this.negate() : this } function bnCompareTo(b) {     var d = this.s - b.s;     if (d != 0) {         return d     }     var c = this.t;     d = c - b.t;     if (d != 0) {         return (this.s &lt; 0) ? -d : d     }     while (--c &gt;= 0) {         if ((d = this[c] - b[c]) != 0) {             return d         }     }     return 0 } function nbits(a) {     var c = 1,         b;     if ((b = a &gt;&gt;&gt; 16) != 0) {         a = b;         c += 16     }     if ((b = a &gt;&gt; 8) != 0) {         a = b;         c += 8     }     if ((b = a &gt;&gt; 4) != 0) {         a = b;         c += 4     }     if ((b = a &gt;&gt; 2) != 0) {         a = b;         c += 2     }     if ((b = a &gt;&gt; 1) != 0) {         a = b;         c += 1     }     return c } function bnBitLength() {     if (this.t &lt;= 0) {         return 0     }     return this.DB * (this.t - 1) + nbits(this[this.t - 1] ^ (this.s &amp; this.DM)) } function bnpDLShiftTo(c, b) {     var a;     for (a = this.t - 1; a &gt;= 0; --a) {         b[a + c] = this[a]     }     for (a = c - 1; a &gt;= 0; --a) {         b[a] = 0     }     b.t = this.t + c;     b.s = this.s } function bnpDRShiftTo(c, b) {     for (var a = c; a &lt; this.t; ++a) {         b[a - c] = this[a]     }     b.t = Math.max(this.t - c, 0);     b.s = this.s } function bnpLShiftTo(j, e) {     var b = j % this.DB;     var a = this.DB - b;     var g = (1 &lt;&lt; a) - 1;     var f = Math.floor(j / this.DB),         h = (this.s &lt;&lt; b) &amp; this.DM,         d;     for (d = this.t - 1; d &gt;= 0; --d) {         e[d + f + 1] = (this[d] &gt;&gt; a) | h;         h = (this[d] &amp; g) &lt;&lt; b     }     for (d = f - 1; d &gt;= 0; --d) {         e[d] = 0     }     e[f] = h;     e.t = this.t + f + 1;     e.s = this.s;     e.clamp() } function bnpRShiftTo(g, d) {     d.s = this.s;     var e = Math.floor(g / this.DB);     if (e &gt;= this.t) {         d.t = 0;         return     }     var b = g % this.DB;     var a = this.DB - b;     var f = (1 &lt;&lt; b) - 1;     d[0] = this[e] &gt;&gt; b;     for (var c = e + 1; c &lt; this.t; ++c) {         d[c - e - 1] |= (this[c] &amp; f) &lt;&lt; a;         d[c - e] = this[c] &gt;&gt; b     }     if (b &gt; 0) {         d[this.t - e - 1] |= (this.s &amp; f) &lt;&lt; a     }     d.t = this.t - e;     d.clamp() } function bnpSubTo(d, f) {     var e = 0,         g = 0,         b = Math.min(d.t, this.t);     while (e &lt; b) {         g += this[e] - d[e];         f[e++] = g &amp; this.DM;         g &gt;&gt;= this.DB     }     if (d.t &lt; this.t) {         g -= d.s;         while (e &lt; this.t) {             g += this[e];             f[e++] = g &amp; this.DM;             g &gt;&gt;= this.DB         }         g += this.s     } else {         g += this.s;         while (e &lt; d.t) {             g -= d[e];             f[e++] = g &amp; this.DM;             g &gt;&gt;= this.DB         }         g -= d.s     }     f.s = (g &lt; 0) ? -1 : 0;     if (g &lt; -1) {         f[e++] = this.DV + g     } else {         if (g &gt; 0) {             f[e++] = g         }     }     f.t = e;     f.clamp() } function bnpMultiplyTo(c, e) {     var b = this.abs(),         f = c.abs();     var d = b.t;     e.t = d + f.t;     while (--d &gt;= 0) {         e[d] = 0     }     for (d = 0; d &lt; f.t; ++d) {         e[d + b.t] = b.am(0, f[d], e, d, 0, b.t)     }     e.s = 0;     e.clamp();     if (this.s != c.s) {         BigInteger.ZERO.subTo(e, e)     } } function bnpSquareTo(d) {     var a = this.abs();     var b = d.t = 2 * a.t;     while (--b &gt;= 0) {         d[b] = 0     }     for (b = 0; b &lt; a.t - 1; ++b) {         var e = a.am(b, a[b], d, 2 * b, 0, 1);         if ((d[b + a.t] += a.am(b + 1, 2 * a[b], d, 2 * b + 1, e, a.t - b - 1)) &gt;= a.DV) {             d[b + a.t] -= a.DV;             d[b + a.t + 1] = 1         }     }     if (d.t &gt; 0) {         d[d.t - 1] += a.am(b, a[b], d, 2 * b, 0, 1)     }     d.s = 0;     d.clamp() } function bnpDivRemTo(n, h, g) {     var x = n.abs();     if (x.t &lt;= 0) {         return     }     var k = this.abs();     if (k.t &lt; x.t) {         if (h != null) {             h.fromInt(0)         }         if (g != null) {             this.copyTo(g)         }         return     }     if (g == null) {         g = nbi()     }     var d = nbi(),         a = this.s,         l = n.s;     var w = this.DB - nbits(x[x.t - 1]);     if (w &gt; 0) {         x.lShiftTo(w, d);         k.lShiftTo(w, g)     } else {         x.copyTo(d);         k.copyTo(g)     }     var p = d.t;     var b = d[p - 1];     if (b == 0) {         return     }     var o = b * (1 &lt;&lt; this.F1) + ((p &gt; 1) ? d[p - 2] &gt;&gt; this.F2 : 0);     var C = this.FV / o,         B = (1 &lt;&lt; this.F1) / o,         A = 1 &lt;&lt; this.F2;     var u = g.t,         s = u - p,         f = (h == null) ? nbi() : h;     d.dlShiftTo(s, f);     if (g.compareTo(f) &gt;= 0) {         g[g.t++] = 1;         g.subTo(f, g)     }     BigInteger.ONE.dlShiftTo(p, f);     f.subTo(d, d);     while (d.t &lt; p) {         d[d.t++] = 0     }     while (--s &gt;= 0) {         var c = (g[--u] == b) ? this.DM : Math.floor(g[u] * C + (g[u - 1] + A) * B);         if ((g[u] += d.am(0, c, g, s, 0, p)) &lt; c) {             d.dlShiftTo(s, f);             g.subTo(f, g);             while (g[u] &lt; --c) {                 g.subTo(f, g)             }         }     }     if (h != null) {         g.drShiftTo(p, h);         if (a != l) {             BigInteger.ZERO.subTo(h, h)         }     }     g.t = p;     g.clamp();     if (w &gt; 0) {         g.rShiftTo(w, g)     }     if (a &lt; 0) {         BigInteger.ZERO.subTo(g, g)     } } function bnMod(b) {     var c = nbi();     this.abs().divRemTo(b, null, c);     if (this.s &lt; 0 &amp;&amp; c.compareTo(BigInteger.ZERO) &gt; 0) {         b.subTo(c, c)     }     return c } function Classic(a) {     this.m = a } function cConvert(a) {     if (a.s &lt; 0 || a.compareTo(this.m) &gt;= 0) {         return a.mod(this.m)     } else {         return a     } } function cRevert(a) {     return a } function cReduce(a) {     a.divRemTo(this.m, null, a) } function cMulTo(a, c, b) {     a.multiplyTo(c, b);     this.reduce(b) } function cSqrTo(a, b) {     a.squareTo(b);     this.reduce(b) } Classic.prototype.convert = cConvert; Classic.prototype.revert = cRevert; Classic.prototype.reduce = cReduce; Classic.prototype.mulTo = cMulTo; Classic.prototype.sqrTo = cSqrTo;  function bnpInvDigit() {     if (this.t &lt; 1) {         return 0     }     var a = this[0];     if ((a &amp; 1) == 0) {         return 0     }     var b = a &amp; 3;     b = (b * (2 - (a &amp; 15) * b)) &amp; 15;     b = (b * (2 - (a &amp; 255) * b)) &amp; 255;     b = (b * (2 - (((a &amp; 65535) * b) &amp; 65535))) &amp; 65535;     b = (b * (2 - a * b % this.DV)) % this.DV;     return (b &gt; 0) ? this.DV - b : -b } function Montgomery(a) {     this.m = a;     this.mp = a.invDigit();     this.mpl = this.mp &amp; 32767;     this.mph = this.mp &gt;&gt; 15;     this.um = (1 &lt;&lt; (a.DB - 15)) - 1;     this.mt2 = 2 * a.t } function montConvert(a) {     var b = nbi();     a.abs().dlShiftTo(this.m.t, b);     b.divRemTo(this.m, null, b);     if (a.s &lt; 0 &amp;&amp; b.compareTo(BigInteger.ZERO) &gt; 0) {         this.m.subTo(b, b)     }     return b } function montRevert(a) {     var b = nbi();     a.copyTo(b);     this.reduce(b);     return b } function montReduce(a) {     while (a.t &lt;= this.mt2) {         a[a.t++] = 0     }     for (var c = 0; c &lt; this.m.t; ++c) {         var b = a[c] &amp; 32767;         var d = (b * this.mpl + (((b * this.mph + (a[c] &gt;&gt; 15) * this.mpl) &amp; this.um) &lt;&lt; 15)) &amp; a.DM;         b = c + this.m.t;         a[b] += this.m.am(0, d, a, c, 0, this.m.t);         while (a[b] &gt;= a.DV) {             a[b] -= a.DV;             a[++b]++         }     }     a.clamp();     a.drShiftTo(this.m.t, a);     if (a.compareTo(this.m) &gt;= 0) {         a.subTo(this.m, a)     } } function montSqrTo(a, b) {     a.squareTo(b);     this.reduce(b) } function montMulTo(a, c, b) {     a.multiplyTo(c, b);     this.reduce(b) } Montgomery.prototype.convert = montConvert; Montgomery.prototype.revert = montRevert; Montgomery.prototype.reduce = montReduce; Montgomery.prototype.mulTo = montMulTo; Montgomery.prototype.sqrTo = montSqrTo;  function bnpIsEven() {     return ((this.t &gt; 0) ? (this[0] &amp; 1) : this.s) == 0 } function bnpExp(h, j) {     if (h &gt; 4294967295 || h &lt; 1) {         return BigInteger.ONE     }     var f = nbi(),         a = nbi(),         d = j.convert(this),         c = nbits(h) - 1;     d.copyTo(f);     while (--c &gt;= 0) {         j.sqrTo(f, a);         if ((h &amp; (1 &lt;&lt; c)) &gt; 0) {             j.mulTo(a, d, f)         } else {             var b = f;             f = a;             a = b         }     }     return j.revert(f) } function bnModPowInt(b, a) {     var c;     if (b &lt; 256 || a.isEven()) {         c = new Classic(a)     } else {         c = new Montgomery(a)     }     return this.exp(b, c) } BigInteger.prototype.copyTo = bnpCopyTo; BigInteger.prototype.fromInt = bnpFromInt; BigInteger.prototype.fromString = bnpFromString; BigInteger.prototype.clamp = bnpClamp; BigInteger.prototype.dlShiftTo = bnpDLShiftTo; BigInteger.prototype.drShiftTo = bnpDRShiftTo; BigInteger.prototype.lShiftTo = bnpLShiftTo; BigInteger.prototype.rShiftTo = bnpRShiftTo; BigInteger.prototype.subTo = bnpSubTo; BigInteger.prototype.multiplyTo = bnpMultiplyTo; BigInteger.prototype.squareTo = bnpSquareTo; BigInteger.prototype.divRemTo = bnpDivRemTo; BigInteger.prototype.invDigit = bnpInvDigit; BigInteger.prototype.isEven = bnpIsEven; BigInteger.prototype.exp = bnpExp; BigInteger.prototype.toString = bnToString; BigInteger.prototype.negate = bnNegate; BigInteger.prototype.abs = bnAbs; BigInteger.prototype.compareTo = bnCompareTo; BigInteger.prototype.bitLength = bnBitLength; BigInteger.prototype.mod = bnMod; BigInteger.prototype.modPowInt = bnModPowInt; BigInteger.ZERO = nbv(0); BigInteger.ONE = nbv(1);  function Arcfour() {     this.i = 0;     this.j = 0;     this.S = new Array() } function ARC4init(d) {     var c, a, b;     for (c = 0; c &lt; 256; ++c) {         this.S[c] = c     }     a = 0;     for (c = 0; c &lt; 256; ++c) {         a = (a + this.S[c] + d[c % d.length]) &amp; 255;         b = this.S[c];         this.S[c] = this.S[a];         this.S[a] = b     }     this.i = 0;     this.j = 0 } function ARC4next() {     var a;     this.i = (this.i + 1) &amp; 255;     this.j = (this.j + this.S[this.i]) &amp; 255;     a = this.S[this.i];     this.S[this.i] = this.S[this.j];     this.S[this.j] = a;     return this.S[(a + this.S[this.i]) &amp; 255] } Arcfour.prototype.init = ARC4init; Arcfour.prototype.next = ARC4next;  function prng_newstate() {     return new Arcfour() } var rng_psize = 256; var rng_state; var rng_pool; var rng_pptr;  function rng_seed_int(a) {     rng_pool[rng_pptr++] ^= a &amp; 255;     rng_pool[rng_pptr++] ^= (a &gt;&gt; 8) &amp; 255;     rng_pool[rng_pptr++] ^= (a &gt;&gt; 16) &amp; 255;     rng_pool[rng_pptr++] ^= (a &gt;&gt; 24) &amp; 255;     if (rng_pptr &gt;= rng_psize) {         rng_pptr -= rng_psize     } } function rng_seed_time() {     rng_seed_int(new Date().getTime()) } if (rng_pool == null) {     rng_pool = new Array();     rng_pptr = 0;     var t;     if (navigator.appName == ""Netscape"" &amp;&amp; navigator.appVersion &lt; ""5"" &amp;&amp; window.crypto) {         var z = window.crypto.random(32);         for (t = 0; t &lt; z.length; ++t) {             rng_pool[rng_pptr++] = z.charCodeAt(t) &amp; 255         }     }     while (rng_pptr &lt; rng_psize) {         t = Math.floor(65536 * Math.random());         rng_pool[rng_pptr++] = t &gt;&gt;&gt; 8;         rng_pool[rng_pptr++] = t &amp; 255     }     rng_pptr = 0;     rng_seed_time() } function rng_get_byte() {     if (rng_state == null) {         rng_seed_time();         rng_state = prng_newstate();         rng_state.init(rng_pool);         for (rng_pptr = 0; rng_pptr &lt; rng_pool.length; ++rng_pptr) {             rng_pool[rng_pptr] = 0         }         rng_pptr = 0     }     return rng_state.next() } function rng_get_bytes(b) {     var a;     for (a = 0; a &lt; b.length; ++a) {         b[a] = rng_get_byte()     } } function SecureRandom() {} SecureRandom.prototype.nextBytes = rng_get_bytes;  function parseBigInt(b, a) {     return new BigInteger(b, a) } function linebrk(c, d) {     var a = """";     var b = 0;     while (b + d &lt; c.length) {         a += c.substring(b, b + d) + ""\n"";         b += d     }     return a + c.substring(b, c.length) } function byte2Hex(a) {     if (a &lt; 16) {         return ""0"" + a.toString(16)     } else {         return a.toString(16)     } } function pkcs1pad2(e, h) {     if (h &lt; e.length + 11) {         alert(""Message too long for RSA"");         return null     }     var g = new Array();     var d = e.length - 1;     while (d &gt;= 0 &amp;&amp; h &gt; 0) {         var f = e.charCodeAt(d--);         if (f &lt; 128) {             g[--h] = f         } else {             if ((f &gt; 127) &amp;&amp; (f &lt; 2048)) {                 g[--h] = (f &amp; 63) | 128;                 g[--h] = (f &gt;&gt; 6) | 192             } else {                 g[--h] = (f &amp; 63) | 128;                 g[--h] = ((f &gt;&gt; 6) &amp; 63) | 128;                 g[--h] = (f &gt;&gt; 12) | 224             }         }     }     g[--h] = 0;     var b = new SecureRandom();     var a = new Array();     while (h &gt; 2) {         a[0] = 0;         while (a[0] == 0) {             b.nextBytes(a)         }         g[--h] = a[0]     }     g[--h] = 2;     g[--h] = 0;     return new BigInteger(g) } function RSAKey() {     this.n = null;     this.e = 0;     this.d = null;     this.p = null;     this.q = null;     this.dmp1 = null;     this.dmq1 = null;     this.coeff = null } function RSASetPublic(b, a) {     if (b != null &amp;&amp; a != null &amp;&amp; b.length &gt; 0 &amp;&amp; a.length &gt; 0) {         this.n = parseBigInt(b, 16);         this.e = parseInt(a, 16)     } else {         alert(""Invalid RSA public key"")     } } function RSADoPublic(a) {     return a.modPowInt(this.e, this.n) } function RSAEncrypt(d) {     var a = pkcs1pad2(d, (this.n.bitLength() + 7) &gt;&gt; 3);     if (a == null) {         return null     }     var e = this.doPublic(a);     if (e == null) {         return null     }     var b = e.toString(16);     if ((b.length &amp; 1) == 0) {         return b     } else {         return ""0"" + b     } } RSAKey.prototype.doPublic = RSADoPublic; RSAKey.prototype.setPublic = RSASetPublic; RSAKey.prototype.encrypt = RSAEncrypt; </code></pre>"	
25609354	Mechanize open javascript link python	javascript|python|mechanize	2014-09-01 15:51:32.887000 UTC	"<p>How to open javascript link in mechanize:</p>  <pre><code>&lt;a href=""javascript://"" onclick=""showTradingData('SelectContract');""&gt;Place Order&lt;/a&gt; </code></pre>"	"<p>Mechanize cannot handle javascript-logic based links.</p>  <p>One option would be to inspect to which URL a request is being made while clicking on the link in the browser using browser developer tools. Then, simulate it using <code>mechanize</code>.</p>  <p>Another option would be to switch to browser-based tools like <a href=""http://selenium-python.readthedocs.org/"" rel=""nofollow""><code>selenium</code></a>.</p>"
25658810	How to Call Python Visualization inside Javascript/HTML	javascript|python|html	2014-09-04 06:42:37.393000 UTC	"<p>I have a small web application done in <code>HTML/JS</code>. I wanted to use a Python Visualization inside in that application. </p>  <p>Executing Python component gives the HTML content, which I want to embedded inside the application. </p>  <p>How could I do this? How to call a Python Script inside JS?</p>"	"<p>The easiest way to is to a have Python web microframework doing the data/HTML serving for you. Popular framework for just making tiny data-serving applications is <a href=""http://flask.pocoo.org/"" rel=""nofollow"">Flask</a>.</p>  <p><a href=""https://github.com/rpazyaquian/bokeh-flask-tutorial/wiki/Rendering-Bokeh-plots-in-Flask"" rel=""nofollow"">Here is an example which serves data from Flask</a> and then uses <a href=""http://bokeh.pydata.org/"" rel=""nofollow"">Bokeh</a> visualization framework to do plots out of it.</p>  <p><a href=""http://bokeh.pydata.org/docs/quickstart.html#generate-static-html-files"" rel=""nofollow"">Bokeh itself has something called ""plot server""</a> designed for serving plot graph data, but as I can see this is vertically integrated with Bokeh visulazation library and might not suit for your use case.</p>"
25693725	"How to work with datetimes betwixt javascript, JSON, and python, and mongodb?"	javascript|python|json|datetime|python-3.x	2014-09-05 20:43:43.087000 UTC	"<p>Colleague and I have scabbed together a little app that uses a bunch of JS in the browser, and communicates with a Tornado (Python3) server via JSON, the server uses mongodb as a backing store for persistent data. This is a sort of first for both of us.</p>  <p>What we're finding difficult is how to interchange datetime information between the JS and Python. We do believe that we should use UTC times for everything. JSON doesn't have a datetime literal, so we have to encode it somehow. We naively (?) used the JS notion of milliseconds from 1970 and have been sharing big integers back and forth. So the JS code might get the current utc now time with something like:</p>  <pre><code>var newTime = new Date().getTime(); </code></pre>  <p>On the Python3/mongo side, we'd like to use real <code>datetime</code> objects, so we convert that with something like:</p>  <pre><code>datetime.datetime.utcfromtimestamp(jsMilliseconds / 1000) </code></pre>  <p>But then when we have to send date back, said Python3 object only has a <code>timestamp()</code> method. And round tripping that doesn't seem to create the same time. So we've been frustrated with this.</p>  <p>What we're looking for is for someone with experience to give us a good set of idioms to use here. Should we be using strings, instead of the ms integers when passing back and forth with JSON? What are the recommended methods to use on both sides to go between that format? Or should we stick with the integers and which methods should we be using then?</p>"	"<p>There are obviously a lot of requirements to consider when dealing with time.  However, in the case you want to maintain a Date/Time to be displayed to user in their time zone and use mongo/python/java/javascript, I've used ISO 8601 date formats and always store UTC (Zulu) time. Also, if you truly want to maintain the <strong>actual</strong> time that something occured, not only do you need to store the ""date/time"" you need to also store the ""timezone"" (for example IANA timezone string) where the event occurred.  </p>  <p>For a lifetime a reading, you can search for ""date time best practices"".  This answer has a good start on discussion: <a href=""https://stackoverflow.com/questions/2532729/daylight-saving-time-and-time-zone-best-practices/3269325#3269325"">Daylight saving time and time zone best practices</a></p>  <p>Alright, now to the code (all of this can be found readily on the internet if you search for "" parse||output ISO 8601 parsing"" (e.g. ""python parse ISO 8601 date string""):</p>  <ol> <li>JSON - on the wire between JavaScript and Python backend send a complex (can be simple if you have no need to preserve time zone) object with ISO-8601 formatted string and string to store time zone string:<br> <code> {   ""dateTime"": ""1970-07-10T12:00:00.047Z"",   ""timeZone"": ""America/New_York"" } </code></li> <li><p>Java Script</p>  <p>a. read datetime string <a href=""https://stackoverflow.com/questions/5802461/javascript-which-browsers-support-parsing-of-iso-8601-date-string-with-date-par"">JavaScript: Which browsers support parsing of ISO-8601 Date String with Date.parse</a><br> <code> var d = Date.parse(""2011-04-26T13:16:50Z""); </code><br>   b. write datetime string <a href=""https://stackoverflow.com/questions/2573521/how-do-i-output-an-iso-8601-formatted-string-in-javascript"">How do I output an ISO 8601 formatted string in JavaScript?</a><br> <code> var date = new Date(); date.toISOString(); //""2011-12-19T15:28:46.493Z"" </code></p></li> <li><p>Python</p>  <p>a. read datetime string  <a href=""https://stackoverflow.com/questions/969285/how-do-i-translate-a-iso-8601-datetime-string-into-a-python-datetime-object"">How do I translate a ISO 8601 datetime string into a Python datetime object?</a><br> <code> import dateutil.parser yourdate = dateutil.parser.parse(datestring) </code><br>  b. write datetime string  <a href=""https://stackoverflow.com/questions/4460698/python-convert-date-to-iso-8601"">Python - Convert date to ISO 8601</a><br> <code> import dateutil.parser as parser date.isoformat() </code></p></li> <li>Mongo - store datetime as native datetime field <a href=""http://docs.mongodb.org/manual/reference/mongodb-extended-json/#date"" rel=""nofollow noreferrer"">http://docs.mongodb.org/manual/reference/mongodb-extended-json/#date</a><br>  a. store datetime string (notice ""$date"" and that datetime is in ZULU/UTC (denoted by 'Z')):<br> <code> ""dateTime"" : { ""$date"" : ""1970-07-10T13:00:00.047Z""} </code></li> </ol>  <p>Reference:<br> 1. IANA TimeZone Database<a href=""http://en.wikipedia.org/wiki/Tz_database"" rel=""nofollow noreferrer"">http://en.wikipedia.org/wiki/Tz_database</a><br> 2. The google calendar API (event resource) can be used as an example for RFC 3339, as well (see start/end): <a href=""https://developers.google.com/google-apps/calendar/v3/reference/events"" rel=""nofollow noreferrer"">https://developers.google.com/google-apps/calendar/v3/reference/events</a></p>"
25708317	What is difference between javascript and python time stamp?	javascript|python|time	2014-09-07 08:17:40.477000 UTC	<p>I have this javascript code:</p>  <pre><code>(new Date()).getTime() </code></pre>  <p>And this python code:</p>  <pre><code>time.time() </code></pre>  <p>The first one return some thing like <strong>1410072754803</strong> but the python return something like <strong>1410077369.27</strong> i need the python to return same format as javascript does.How can i get that?</p>  <p>PS:if i use </p>  <pre><code>time.time() * 1000 </code></pre>  <p>it return :</p>  <pre><code>1.41007799536e+12 </code></pre>	"<p>One returns milli seconds, while other returns seconds in float.</p>  <p>Python equivalent of javascript timestamp would be.</p>  <pre><code>jts = int(time.time()*1000) </code></pre>"
25725626	Make WebElement visible via Selenium with Python with JavaScript	javascript|python|css|selenium|selenium-webdriver	2014-09-08 13:38:58.443000 UTC	"<p>I'm trying to upload a png via selenium. My Problem is, that the Input I need to use, is invisible to selenium, but not to the user. In the FAQ of Selenium they told me to use the JavascriptExcecutor like:</p>  <pre><code>((JavascriptExecutor)driver).executeScript(""arguments[0].style.visibility = 'visible'; arguments[0].style.height = '1px'; arguments[0].style.width = '1px'; arguments[0].style.opacity = 1"", fileUploadElement); </code></pre>  <p>I used this with C# in the past, and it worked, but now im struggeling to convert that usage to python. I would use the <code>document.getElementByName()</code> function, but the input doesn't have a Name and there are more than one on the page. What is the best way to solve that Problem. I already tried</p>  <pre><code>icon = element.find_element_by_css_selector(""input"") script_befehl = icon+"".style.visibility = 'visible'; ""+icon+"".style.height = '1px'; ""+icon+"".style.width = '1px'; ""+icon+"".style.opacity = 1 </code></pre>  <p>but that also didn't work, i'm getting a Syntax error</p>"	"<p>In my case, the invisibility of the element was due to having <code>display:none;</code> in the style. So the solution was:</p> <pre><code>driver.execute_script(&quot;arguments[0].style.display = 'block';&quot;, element) </code></pre>"
25725626	Make WebElement visible via Selenium with Python with JavaScript	javascript|python|css|selenium|selenium-webdriver	2014-09-08 13:38:58.443000 UTC	"<p>I'm trying to upload a png via selenium. My Problem is, that the Input I need to use, is invisible to selenium, but not to the user. In the FAQ of Selenium they told me to use the JavascriptExcecutor like:</p>  <pre><code>((JavascriptExecutor)driver).executeScript(""arguments[0].style.visibility = 'visible'; arguments[0].style.height = '1px'; arguments[0].style.width = '1px'; arguments[0].style.opacity = 1"", fileUploadElement); </code></pre>  <p>I used this with C# in the past, and it worked, but now im struggeling to convert that usage to python. I would use the <code>document.getElementByName()</code> function, but the input doesn't have a Name and there are more than one on the page. What is the best way to solve that Problem. I already tried</p>  <pre><code>icon = element.find_element_by_css_selector(""input"") script_befehl = icon+"".style.visibility = 'visible'; ""+icon+"".style.height = '1px'; ""+icon+"".style.width = '1px'; ""+icon+"".style.opacity = 1 </code></pre>  <p>but that also didn't work, i'm getting a Syntax error</p>"	"<p>There is an <a href=""http://selenium-python.readthedocs.org/api.html#selenium.webdriver.remote.webdriver.WebDriver.execute_script"" rel=""noreferrer""><code>execute_script()</code></a> method on the driver instance, arguments are passed to it in a similar to C#'s <code>JavascriptExecutor</code>:</p>  <pre><code>icon = element.find_element_by_css_selector(""input"") driver.execute_script(""arguments[0].style.visibility = 'visible'; arguments[0].style.height = '1px'; arguments[0].style.width = '1px'; arguments[0].style.opacity = 1"", icon) </code></pre>"
25784547	How to feed lists from python into javascript?	javascript|python|for-loop	2014-09-11 10:03:02.443000 UTC	"<p>I'm pretty new to Javascript. I was wondering, how does importing lists generated by Python work? Below is a rough version of what I'm thinking, I'm trying to import 3 lists into an HTML file using javascript (apologies in advance if any of the syntax is off.):</p>  <pre><code>function createMarkers(){   //import article_list generated by headline.py   //import urls from generated by headline.py   //import coordinates generated by headline.py   for (i = 0; i &lt; 25;) {    article_name = article_list[i]   url = urls[i]   coordinate = coordinates[i]    var marker[i] = WE.marker([coordinate]).addTo(earth);   marker.bindPopup(""&lt;b&gt;article_name&lt;/b&gt;&lt;br&gt;&lt;a href=""url""&gt;url&lt;/a&gt;, {maxWidth: 520, closeButton: true});   }  } </code></pre>  <p>Do I need to implement some sort of web framework to execute the python code and feed it into this javascript code? How would I go about doing this?</p>"	"<p>Have you looked into templating languages? I have solved a similar problem using Jinja2.</p>  <p>Here are some <a href=""http://jinja.pocoo.org/docs/dev/templates/"" rel=""nofollow"">Docs</a>. Here is a <a href=""http://kagerato.net/articles/software/libraries/jinja-quickstart.html"" rel=""nofollow"">Quickstart</a> tutorial.</p>  <p>Below is an example.</p>  <p>The variable markers is injected into the HTML, using Jinja2</p>  <p><strong>Python code:</strong></p>  <pre><code>import webapp2 # Le framework import json    # This is used to return the dictionary in a native (to JS) way import jinja2  # The glue  # This example uses webapp2, but could be easily adapted to other frameworks. jinja_environment = jinja2.Environment(     # sets the folder ""templates"" as root folder for html (can be tweaked to match you layout):     loader=jinja2.FileSystemLoader('templates'))   class Marker(): """""" creates marker objects that can then be rendered on the map. """"""  def __init__(self, latlng, title):     # below we split the comma-separated latlng into two values and store in an array.     coords = str(latlng).split(',')     self.lat = coords[0]     self.lng = coords[1]     self.title = title  class MainHandler(webapp2.RequestHandler):     def get(self):         # assembling the coordinates and descriptions into an array of Marker objects         markers = []         for marker in list_of_markers:             markers.append(Marker(latlng=""coordinates go here in format 'latitude, longitude'"",                                   title=""Marker title goes here"")          for marker in markers:            t_dict = {}            t_dict['m_title'] = marker.title            t_dict['m_lat'] = marker.lat            t_dict['m_lng'] = marker.lng            temp.append(t_dict)         json_markers = json.dumps(temp)          template_values = {'markers' :json_markers}          template = jinja_environment.get_template('index.html')             self.response.out.write(template.render(template_values))  # Initializing the webapp: application = webapp2.WSGIApplication([('/', MainHandler)], debug=False) </code></pre>  <p><strong>Javascript code:</strong></p>  <pre><code>// To be added to the initialize() function of the maps JS: data = {{ markers }}   // Iterating over list of points to create markers: data.forEach(function(p) {      var point = new google.maps.LatLng(p.m_lat, p.m_lng);      var marker = new google.maps.Marker({position: point,          map: map,          title: p.m_title,          //animation: google.maps.Animation.DROP,      });  }); </code></pre>"
25823845	Execute javascript function attached to a html element in python	javascript|python|dom	2014-09-13 13:49:06.380000 UTC	"<p>What I'm trying to do is what can be done in a browser by running this javascript: <code>document.getElementById('foo').bar()</code>.</p>  <p>I don't know how to go about doing this in python. I used to do stuff with submitting forms using twill and sending responses with urllib2, but I never had to do any javascript. Where should I start?</p>"	"<p>I guess you are building up your html/js code in the server side and when requested, you will serve that code to the client? As client code will be served you can add it to you logic in the server side:</p>  <pre><code>getFooElement = 1; if getFooElement:    print ""document.getElementById('foo').bar()"" else    print ""HTML/JS code"" </code></pre>"
25836082	ipython javascript not updating text	javascript|jquery|ipython	2014-09-14 17:38:14.757000 UTC	"<p>This seems to work as a plain html/javascript file opened in a browser but when I put it in an IPython notebook only the button text is updating (the paragraph text does not update). What could be causing this?</p>  <p>IPython notebook cell code:     from IPython.display import HTML, Javascript, display</p>  <pre><code>display(HTML("""""" &lt;p id=""demo""&gt;A Paragraph.&lt;/p&gt; &lt;button id=""something""&gt;Try it&lt;/button&gt; """""")) js = """""" $(""#something"").click(function() { $('#demo').text(""Changed text""); $('#something').text('Change button'); }); """""" js = Javascript(js) display(js) </code></pre>  <p>Plain html/javascript:</p>  <pre><code>&lt;html&gt; &lt;body&gt; &lt;script type=""text/javascript"" src=""http://ajax.googleapis.com/ajax/libs/jquery/1.3/jquery.min.js""&gt;&lt;/script&gt; &lt;p id=""demo""&gt;A Paragraph.&lt;/p&gt; &lt;button id=""something""&gt;Try it&lt;/button&gt; &lt;script&gt; $(""#something"").click(function() { $('#demo').text(""Changed text""); $('#something').text('Change button'); }); &lt;/script&gt; &lt;/body&gt; &lt;/html&gt; </code></pre>"	"<p>Kartikeya suggestion worked:</p>  <pre><code>from IPython.display import HTML, Javascript, display  display(HTML("""""" &lt;p id=""demo""&gt;A Paragraph.&lt;/p&gt; &lt;button id=""something""&gt;Try it&lt;/button&gt; """""")) js = """""" $(document).ready( function() {     $(""#something"").click(function() {         $('#demo').text(""Changed text"");         $('#something').text('Change button');         });     }); """""" js = Javascript(js) display(js) </code></pre>"
25909614	python screenscraping opsview - avoid javascript on a dated headless server	javascript|python|opsview	2014-09-18 09:58:31.360000 UTC	"<p>I want to access an url in python, which basically returns csv data. The problem is it is behind a login page which requires javascript (it does not do anything usefull on the login page, its just there to make sure you have javascript for the subsequent pages). I have been doing this successfully on my dev machine (a fedora desktop) with ghost. Now the problem is, the production machine is a headless centos 6.2 machine (old software). So my quest to get ghost running there got me into dependency and backporting hell (I gave up when trying to backport qt ...).</p>  <p>I tried using mechanize, but that got rejected by the login page because there is no javascript enabled ...</p>  <p>So I was wondering what my options are:</p>  <ul> <li>Can I somehow fool the site into thinking I can do javascript, using mechanize? (since the javascript does not do anything usefull for me)</li> <li>Are there any python screen scraping tools that can do javascript but won't require a display and work on centos 6.2 without lots of backporting?</li> </ul>  <p>Here is the javascript on the login page:</p>  <pre><code> &lt;script type=""text/javascript""&gt;     var fname = window.self.name || '';     var shash = window.self.location.hash || '';     if ( fname == ""foobar_frame"" &amp;&amp; shash.indexOf(""login-reload"") &lt; 0 ) {         window.parent.location.replace(window.parent.location.href +'#login-reload');         window.parent.location.reload();     }   &lt;/script&gt; &lt;div id='login_form_div'&gt; ... html login form - I can handle that ... &lt;/div&gt;  &lt;script type=""text/javascript""&gt; document.login_form.login_username.focus();  ... more javascript embedding social media stuff - i guess unrelated  &lt;/script&gt; </code></pre>  <p>Any hints are welcome.</p>"	"<p>So I finally got around the javascript requirement. The site I try to access is an opsview installation. Opsview is a commercial version of nagios - and offers a <a href=""http://docs.opsview.com/doku.php?id=opsview-core:restapi"" rel=""nofollow"">rest api</a>, which allows you to retrieve a one_time_token, which is valid to log into the web user interface. So I managed to authenticate without javascript, and then used that token to query the url I was interested in:</p>  <pre><code>#!/usr/bin/python  import mechanize import json  username = 'foobar' password = 'password'  # in my application, this urls gets composed so that I can choose my parameters url = 'http://opsview.acme.org/cgi-bin/avail.cgi?show_log_entries=&amp;host=all&amp;timeperiod=custom&amp;smon=07&amp;sday=1&amp;syear=2014&amp;shour=0&amp;smin=0&amp;ssec=0&amp;emon=08&amp;eday=1&amp;eyear=2014&amp;ehour=24&amp;emin=0&amp;esec=0&amp;rpttimeperiod=24x7&amp;assumeinitialstates=yes&amp;assumestateretention=yes&amp;assumestatesduringnotrunning=yes&amp;includesoftstates=no&amp;initialassumedhoststate=0&amp;initialassumedservicestate=0&amp;backtrack=4&amp;csvoutput=' # the trick is to include the parameter ""include_one_time_token=1"" login_rest_url = 'http://opsview.acme.org/rest/login?include_one_time_token=1' browser = mechanize.Browser() browser.set_handle_robots( False ) # generate one time token via rest api for logging into web user interface. auth_data = {'username':username, 'password':password} auth_data_encoded = json.dumps(auth_data) browser.open(mechanize.Request(login_rest_url, data=auth_data_encoded, headers={""Content-type"":""application/json""})) one_time_token = json.loads(browser.response().get_data())['one_time_token']  # now authenticate to the web interface and retrieve information browser.addheaders = [('User-agent', 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/535.2 (KHTML, like Gecko) Chrome/15.0.874.121 Safari/535.2'), ] auth_url = 'http://opsview.acme.org/login?login_username=' + username + '&amp;one_time_token=' + one_time_token browser.open(auth_url) browser.open(url) print browser.response().get_data() </code></pre>"
25925996	Calling python script from javascript that outputs a .txt file	javascript|python|ajax	2014-09-19 03:39:31.053000 UTC	"<p>I need to run a python script that outputs a .txt file from javascript. The script is already done, but I am having trouble calling it from javascript. I am trying to use ajax. Here is the following code:</p>  <pre><code>$.ajax({    type: ""POST"",    url: ""TXTMaker.py"", }); </code></pre>  <p>The script is not executed when I trigger this code from a button click. Since the python script outputs the .txt file into a folder, I don't need to save any output, I just need it to be called from javascript.</p>"	
25948412	Can Python and Javascript be combined in a single Parse App?	javascript|python|facebook|parse-platform	2014-09-20 11:45:46.167000 UTC	"<p>I know that traditionally you can use javascript and python together in an app.</p>  <p>I would like to use them both together in a single Parse (Facebook) app. I'm concerned because I can't find any references to this. </p>  <p>I am trying to use the twillio api, however they don't seem to support javascript? <a href=""https://www.twilio.com/docs/quickstart/python/client"" rel=""nofollow"">https://www.twilio.com/docs/quickstart/python/client</a></p>  <p>The drop down menu lists java, php, ruby, and python but no javascript.</p>  <p>Does anyone know of a different work around? Or should I create an additional restful api in python and get it to be called by the javascript? This seems a little hacky but I can't seem to find an example of this being done before.</p>  <p>Thanks!</p>"	
26017664	"Unable to simulate onclick javascript inside <span> tag using Selenium webdriver,python"	javascript|python|selenium|web-scraping|beautifulsoup	2014-09-24 13:02:40.183000 UTC	"<p>I am trying to simulate onclick event at the following tag</p>  <p>span class=""taLnk hvrIE6 tr165579546 moreLink ulBlueLinks"" onclick=""ta.util.cookie.setPIDCookie(2247);ta.call('ta.servlet.Reviews.expandReviews',event,this,'review_165579546', '1', 2247)""> More </p>  <p>This is used to see more text under this link.I am using selenium webdriver and python for simulating this event automatically for this webpage  <a href=""http://www.tripadvisor.in/Hotel_Review-g297586-d1154547-Reviews-Rainbow_International_Hotel-Hyderabad_Telangana.html"" rel=""nofollow"">http://www.tripadvisor.in/Hotel_Review-g297586-d1154547-Reviews-Rainbow_International_Hotel-Hyderabad_Telangana.html</a> this webpage.</p>  <p>could anyone pls share a code snippet inorder to actiavet this javascript event so that page loads up and I can see whole text under that link automatically...I tried using click() option of selenium webdriver but it doesn't work.</p>"	<p>This did the trick for me:</p>  <pre><code>from selenium import webdriver  url = 'http://www.tripadvisor.in/Hotel_Review-g297586-d1154547-Reviews-Rainbow_International_Hotel-Hyderabad_Telangana.html'  browser = webdriver.Firefox() browser.get(url) li = browser.find_element_by_css_selector('#PERSISTENT_TAB_HR .tabs_pers_content li:nth-child(2)') li.click() </code></pre>
26017664	"Unable to simulate onclick javascript inside <span> tag using Selenium webdriver,python"	javascript|python|selenium|web-scraping|beautifulsoup	2014-09-24 13:02:40.183000 UTC	"<p>I am trying to simulate onclick event at the following tag</p>  <p>span class=""taLnk hvrIE6 tr165579546 moreLink ulBlueLinks"" onclick=""ta.util.cookie.setPIDCookie(2247);ta.call('ta.servlet.Reviews.expandReviews',event,this,'review_165579546', '1', 2247)""> More </p>  <p>This is used to see more text under this link.I am using selenium webdriver and python for simulating this event automatically for this webpage  <a href=""http://www.tripadvisor.in/Hotel_Review-g297586-d1154547-Reviews-Rainbow_International_Hotel-Hyderabad_Telangana.html"" rel=""nofollow"">http://www.tripadvisor.in/Hotel_Review-g297586-d1154547-Reviews-Rainbow_International_Hotel-Hyderabad_Telangana.html</a> this webpage.</p>  <p>could anyone pls share a code snippet inorder to actiavet this javascript event so that page loads up and I can see whole text under that link automatically...I tried using click() option of selenium webdriver but it doesn't work.</p>"	"<p>Here's the idea that you may start with:</p>  <ul> <li>iterate over all reviews on the page (div elements with <code>id</code> starting with <code>review_</code>)</li> <li>for every review, click on the <code>More</code> link <em>if it is present</em> (span with <code>moreLink</code> class name)</li> <li>after a small delay, get the full review text</li> </ul>  <p>Here's the implementation:</p>  <pre><code>import time from selenium import webdriver from selenium.common.exceptions import NoSuchElementException, TimeoutException from selenium.webdriver.common.by import By from selenium.webdriver.support.ui import WebDriverWait from selenium.webdriver.support import expected_conditions as EC  driver = webdriver.Firefox() driver.get(""http://www.tripadvisor.com/Hotel_Review-g297586-d1154547-Reviews-Rainbow_International_Hotel-Hyderabad_Telangana.html"")  for review in driver.find_elements_by_xpath('//div[starts-with(@id, ""review_"")]'):     try:         more = WebDriverWait(review, 3).until(EC.presence_of_element_located((By.CLASS_NAME, 'moreLink')))         if more.is_displayed():             more.click()             time.sleep(1)     except (NoSuchElementException, TimeoutException):         pass      full_review = review.find_element_by_class_name('dyn_full_review')     print full_review.text     print ""----"" </code></pre>  <p>Prints (the output contains all text inside each review including username and date): </p>  <pre><code>Mustufa W 1 review “Horrible” Reviewed August 15, 2014 I checked on price was high but cracked a deal Poor hygiene in corridor &amp; so in rooms. Washroom pipes were leaking. AC water dripping in washroom. First I was given a room to which my surprise found window pane was missing after complaining room got changed. They are cheating ppl only good thing abt hotel is the spot &amp; is damn opposite Nilofer cafe which serves delicious tea,coffee &amp; bakery products. There is a guy named khwaja who was very helpful. Front @ reception guy was stupid..in one midnight , power went off &amp; to my surprise they don't have power back up.. Stayed August 2014, traveled as a couple Less Was this review helpful? Yes Ask Mustufa W about Rainbow International Hotel This review is the subjective opinion of a TripAdvisor member and not of TripAdvisor LLC. ---- mrravi4u Bangalore, India 2 reviews 13 helpful votes “Good Hotel” Reviewed April 23, 2014 I stayed there 2 days i got good services. Rainbow Is good hotel in Hyderabad. there are very homely environment and hosting services was supper. it is also in center of hyderabad city so for convenience is is better place to stay. Room Tip: Office Meeting See more room tips Stayed March 2014, traveled with friends Value Location Sleep Quality Rooms Cleanliness Service Was this review helpful? Yes 13 Ask mrravi4u about Rainbow International Hotel This review is the subjective opinion of a TripAdvisor member and not of TripAdvisor LLC. ---- ... </code></pre>  <p>Hope that makes things more clear for you.</p>"
26022975	Perform Simple Javascript Regex in Python	javascript|python|regex	2014-09-24 17:29:16.510000 UTC	"<p>How to perform this javascript regex into Python (3.2)?</p>  <pre><code>exmple_string.replace(/-/g, '.').replace(/(^|\.)([0-9]+)($|\.)/g, '[$2]$3'); </code></pre>  <p>The regex should work as following:</p>  <p><a href=""https://stackoverflow.com/questions/17796269/how-to-replace-and-correct-json-path-string-with-regex"">How to replace and correct json path string with regex?</a></p>  <p>I tried the re library, but don't know how to peform the periods [$2]$3</p>"	"<p>Use the re library. <a href=""https://docs.python.org/3.2/library/re.html"" rel=""nofollow"">https://docs.python.org/3.2/library/re.html</a></p>  <pre><code>import re  value = ""55-fathers-2-married"" value = value.replace(""-"", ""."") re.sub(r""(^|\.)([0-9]+)($|\.)"", r""[\2]\3"", value) </code></pre>  <p>Test your regex with the python regex tool. <a href=""http://www.pythonregex.com/"" rel=""nofollow"">http://www.pythonregex.com/</a></p>"
26041819	python's mechanize and forms: javascript string returned	javascript|python|html|authentication|mechanize	2014-09-25 15:00:05.803000 UTC	"<p>I am trying to access <a href=""http://forum.kriminala.net"" rel=""nofollow"">http://forum.kriminala.net</a> via Mechanize and parse my inbox messages.</p>  <p>From the html code, I can see that the login form is in the nested iframe of the main page:</p>  <pre><code>&lt;iframe src=""login/"" style=""width: 100%; height: 124px; border-bottom: 2px solid #DDE5EA; box-shadow: 0px 0px 10px #ccc;"" frameborder=""0"" vspace=""0"" scrolling=""no"" hspace=""0""&gt; ... &lt;form action="""" class=""auth_form"" method=""post""&gt; &lt;input type=""hidden"" name=""referer"" value=""http%3A%2F%2Fforum.kriminala.net%2F""&gt; &lt;input type=""text"" class=""text_input"" name=""username"" placeholder=""Имя пользователя"" value="""" tabindex=""1""&gt; &lt;input type=""password"" class=""text_input"" name=""password"" placeholder=""Пароль"" tabindex=""2""&gt; &lt;input type=""checkbox"" id=""autologin"" checked=""checked"" name=""autologin"" tabindex=""3""&gt; &lt;label for=""autologin""&gt;Запомнить меня&lt;/label&gt; &lt;input type=""submit"" class=""submit_button"" id=""submit_button"" name=""login"" value="""" tabindex=""3""&gt; &lt;/form&gt; ... &lt;/iframe&gt; </code></pre>  <p>so I navigate to <a href=""http://forum.kriminala.net/login"" rel=""nofollow"">http://forum.kriminala.net/login</a>, find the form there and submit it with my username and password, outputting the result in a file (to see if I got logged in successfully).</p>  <pre><code>br=mechanize.Browser() br.open(""http://forum.kriminala.net/login/"") br.select_form(nr=0) br[""username""]=""12n"" br[""password""]=""123456"" response=br.submit() htmlpage=open(""response.html"",""w"") htmlpage.writelines(response.get_data()) htmlpage.close() </code></pre>  <p>However, all I see in the file is this:</p>  <pre><code>&lt;script type=""text/javascript""&gt; window.top.location = 'http://forum.kriminala.net/'; &lt;/script&gt; </code></pre>  <p>My next thought is maybe I should go to the main mage manually, so I open the main page in Mechanize, put it into an html file to open in a browser, but the file still looks like I am not logged in.</p>  <p>How do I deal with this?</p>  <p>P.S. I am a complete Python noob, so maybe I just don't know what to google to get my answers. If this is the case, please just point me in the right direction.</p>  <p>Thanks!</p>"	"<p>All seems OK. The resulting page redirects you to the main page (or possibly to wherever your were before logging in) with JavaScript which is a reasonable thing to do. Since there's no JavaScript in your ""browser"", you'll need to navigate manually wherever you need to.</p>  <p>The actual result of the login should be a <code>Set-Cookie:</code> header in one of the responses. You need to use that cookie in subsequent request headers to make the server consider you logged in. See <a href=""https://en.wikipedia.org/wiki/HTTP_cookie"" rel=""nofollow"">HTTP cookie</a> @wikipedia for more theory.</p>  <p><a href=""http://stockrt.github.io/p/emulating-a-browser-in-python-with-mechanize/"" rel=""nofollow"">Emulating a Browser in Python with mechanize</a> appears to have relevant code to do that in mechanize, specifically the <code>br.set_cookiejar()</code> command.</p>"
26059804	Python3 executing Javascript	javascript|python|python-3.x	2014-09-26 12:39:18.543000 UTC	"<p>I need to execute a Javascript function from Python 3 (pass a few variables into it's environment and collect the result). I found pyv8 and python-spidermonkey, but neither supports Python 3.</p>  <p>Is there a library for that job?</p>"	"<p>What you can always do:</p>  <ul> <li><p>Install Node.Js binaries on the server-side</p></li> <li><p>Write a script as standalone .js file</p></li> <li><p>Pass input as command-line arguments, pipes (stdin) or files</p></li> <li><p>Execute the script using <a href=""https://docs.python.org/3/library/subprocess.html?highlight=subprocess"" rel=""nofollow"">subprocess</a></p></li> <li><p>Collect the result from a named pipe or file output</p></li> </ul>  <p>.js scripts can be executed in similar fashion as .sh and .py scripts.</p>"
26101501	How to extract hidden tags created by javascript from source page by python	javascript|python|html|selenium|xpath	2014-09-29 13:49:16.523000 UTC	"<p>I have <a href=""http://punkspider.hyperiongray.com/#searchkey=url&amp;searchvalue=search&amp;pagenumber=1&amp;filterType=or&amp;filters=bsqli,sqli,xss,trav,mxi,osci,xpathi"" rel=""nofollow"">THIST</a> page that has some javascript in it. You can see them by clicking on <code>show details</code>. </p>  <p>So how can I extract these data from that url source?</p>  <p>Using <code>re</code>?  What I tried in re is:</p>  <pre><code>import urllib import re gdoc = urllib.urlopen('ThatURL').read() scriptlis = re.findall('(?si)&lt;script&gt;(.*?)&lt;/script&gt;', gdoc) print scriptlis </code></pre>  <p>But no response...</p>  <p>Using selenium? In this is case how?</p>  <pre><code>import lxml out=lxml.html.tostring(lxml.html.parse('ThatURL')) . . . ? </code></pre>"	"<p>you can try this  <br></p>  <pre><code>re.findall('&lt;script.*&gt;.*&lt;/script&gt;',url_file) </code></pre>"
26101501	How to extract hidden tags created by javascript from source page by python	javascript|python|html|selenium|xpath	2014-09-29 13:49:16.523000 UTC	"<p>I have <a href=""http://punkspider.hyperiongray.com/#searchkey=url&amp;searchvalue=search&amp;pagenumber=1&amp;filterType=or&amp;filters=bsqli,sqli,xss,trav,mxi,osci,xpathi"" rel=""nofollow"">THIST</a> page that has some javascript in it. You can see them by clicking on <code>show details</code>. </p>  <p>So how can I extract these data from that url source?</p>  <p>Using <code>re</code>?  What I tried in re is:</p>  <pre><code>import urllib import re gdoc = urllib.urlopen('ThatURL').read() scriptlis = re.findall('(?si)&lt;script&gt;(.*?)&lt;/script&gt;', gdoc) print scriptlis </code></pre>  <p>But no response...</p>  <p>Using selenium? In this is case how?</p>  <pre><code>import lxml out=lxml.html.tostring(lxml.html.parse('ThatURL')) . . . ? </code></pre>"	"<p>When pages use scripting to generate content, it becomes hard to scrape. Instead of plain html reading, you need a full virtual environment capable of executing the script on the document.</p>  <p>For python, there's <a href=""http://jeanphix.me/Ghost.py/"" rel=""nofollow""><code>ghost.py</code></a>. It's pretty flexible, and will allow you to inspect the fully rendered website, as well as to execute your own javascript to interact with the page.</p>  <p><code>ghost.py</code> is a python clone of <a href=""http://phantomjs.org/"" rel=""nofollow""><code>phantom.js</code></a>, a <code>node</code> library. This second tool is superior, in my opinion, but it's not written for python.</p>"
26125507	How to use Facebook Javascript SDK with partial pipeline in Python Social Auth?	python|django|facebook|python-social-auth	2014-09-30 16:18:45.737000 UTC	"<p>I am trying to set up PSA using Facebook Javascript SDK.</p>  <p>I want to use partial pipeline so that user is redirected to a form that collects additional data.</p>  <p>Example in the docs is geared towards ajax authentication which is not what I want. Here is code that I have so far that works for users that don't need to be redirected.</p>  <pre><code># could not get decorator to work with cbv :( @psa('social:complete') def register_by_access_token(request, backend):     token = request.GET.get('access_token')     backend = request.backend     user = backend.do_auth(token)     return user   class RegisterByTokenView(View):      def get(self, request, backend):         user = register_by_access_token(request, backend)         if user:             login(request, user)          return HttpResponseRedirect(reverse('home')) </code></pre>  <p>There are a couple of things that are not working for me.</p>  <ol> <li>If user needs to be redirected through partial pipeline <code>register_by_access_token</code> will return HTTPResponseRedirect which will cause <code>login(request, user)</code> to fail.</li> <li>Even if pipeline skips partial pipeline and my user is authenticated properly I am not sure how to get the user to end up in the url that was specified in <code>SOCIAL_AUTH_NEW_USER_REDIRECT_URL</code>.</li> </ol>"	
26166630	How can we unit test both our Python code and Javascript code from App Engine deploys?	google-app-engine|unit-testing|jasmine|phantomjs|nosetests	2014-10-02 17:55:05.050000 UTC	"<p>We currently run and deploy on app engine, but use GitHub as version control. What is the best way to run a series of tests every time we push to GitHub, both client-side Javascript tests, using something like PhantomJS as well as something like NoseTests for Python? The reason being that client side code is in Javascript while the server side code is in Python. And since we have existing credits, we'd prefer not to go for a 3rd part hosted solution. App Engine also provides a pipeline for just node tests, but this doesn't cover the Javascript unit tests. Thanks!</p>"	"<p>I believe github commit webhooks are what you are looking for. I have not personally set them up, but at my day job, we have it automatically run a handful of things including builds + tests. </p>  <p><a href=""https://help.github.com/articles/about-webhooks/"" rel=""nofollow noreferrer"">https://help.github.com/articles/about-webhooks/</a></p>"
26166630	How can we unit test both our Python code and Javascript code from App Engine deploys?	google-app-engine|unit-testing|jasmine|phantomjs|nosetests	2014-10-02 17:55:05.050000 UTC	"<p>We currently run and deploy on app engine, but use GitHub as version control. What is the best way to run a series of tests every time we push to GitHub, both client-side Javascript tests, using something like PhantomJS as well as something like NoseTests for Python? The reason being that client side code is in Javascript while the server side code is in Python. And since we have existing credits, we'd prefer not to go for a 3rd part hosted solution. App Engine also provides a pipeline for just node tests, but this doesn't cover the Javascript unit tests. Thanks!</p>"	"<p>There is a <a href=""https://cloud.google.com/appengine/articles/load_test"" rel=""nofollow"">Google Scrip</a> to accurately test the backend loads. Unfortunately I don't know of anything from JS.</p>  <blockquote>   <p>In the documentation for App Engine and in presentations we've given at Google I/O we have mentioned that you should ramp up slowly when load testing an application on App Engine. Ramping up too quickly won't give an accurate picture of how App Engine scales; you have to accomodate our load balancing code which determines how many instances of your application to spin up by watching how much traffic is directed to your application. That monitoring and adjustment takes time, therefore the need for not ramping up too quickly.</p>      <p>I've looked at various load testing tools and in the end wrote my own short script in Python which I use as a base for all my load testing. This isn't to say that what I have here is better for load testing than the available packages, please look at them and judge them against your own criteria. I'm most comfortable with Python and a skeleton script that can be tweaked for each test scenario is optimal for me.</p> </blockquote>"
26171875	Python Django: Pass json from view to javascript in template	javascript|python|django|list	2014-10-03 01:02:15.847000 UTC	"<p>I am new to django. </p>  <p>From my findings, I tried this way, but didn't work.</p>  <pre><code>&lt;script type=""text/javascript"" &gt;     var data = {{json}} &lt;/script&gt; </code></pre>  <p>I am trying to use data table from this website, <a href=""http://www.datatables.net/manual/data"" rel=""nofollow"">http://www.datatables.net/manual/data</a>.</p>  <pre><code>&lt;script type=""text/javascript"" class=""init""&gt; var temp = '{{campaignList|escapejs}}';    // should be a list, but becomes a string alert(typeof temp) $(document).ready( function () {     $('#campaigns').DataTable({         data: temp,         columns: [           { data: 'id' },           { data: 'name' },           { data: 'date' },         ]       }); } ); &lt;/script&gt; </code></pre>  <p>When I check the type before passing into datatable, the type becomes string.  I also tried {{campaignList|escapejs}} without quote, but didn't work.</p>  <p>Any suggestion? Thanks.</p>"	"<p>If <code>campaignList</code> is a json string, pass it to <a href=""https://docs.djangoproject.com/en/1.7/ref/templates/builtins/#safe"" rel=""nofollow""><code>safe</code> filter</a> to prevent escape:</p>  <pre><code>var data = {{ campaignList|safe }}; </code></pre>"
26182570	Javascript (jQuery) Client is not working with python webservice	javascript|python|web-services	2014-10-03 16:02:29.287000 UTC	"<p>I'm trying to build a small restful web service with python. Therefore I used flask (and now bottle).</p>  <p>For testing purposes I wrote a small android application and everything works just fine. I can use POST, GET and DELETE requests from my phone. I also used the program ""curl"" to check the service - and it worked, too!</p>  <p>Now I thought about writing a javascript client - easier said, than done.</p>  <p>The problem is, I just can not get any response from my server. The request is definitely delivered to my server and I can also see in my logfiles that it responds with """"GET / HTTP/1.1"" 200 20"". </p>  <p>First I thought there is a problem with flask (maybe the response is in an unreadable format?!) and I tried the framework bottle which is very similar. I wrote a very, very simple service and client. But I am still not able to print the servers response on my client.</p>  <p><strong>Server.py:</strong></p>  <pre><code>from bottle import route, run  @route('/') def hello():     return ""Hello World!""  run(host='localhost', port=8080, debug=True, reloader=True) </code></pre>  <p><strong>Client.js</strong></p>  <pre><code>/*global $, jQuery, alert*/ var server = ""http://localhost:8080"";  // HTTP GET function getRequestToServer() { ""use strict"";  $.get( server, function(data) {    alert('page content: ' + data);     } ); </code></pre>  <p>}</p>  <p>Please keep in mind that this is a very simplified example. In my original program I used JSON but I thought reducing it to the ""core"" problem is easier to understand.</p>  <p>I also used the api from api.openweathermap.org to see if the client has any problems, but in this case I receive at least a <code>[object Object]</code>. I also have written the client to print the JSON-data and it worked fine - but not with my web service.</p>  <p>Hope anyone can give me a hint.</p>"	
26207668	How to use python-defined variables in javascript code within ipython notebook?	ipython|ipython-notebook	2014-10-05 22:01:20.730000 UTC	"<p>Say I made complex numeric calculations with Scipy factories, using the Ipython notebook. Now, I want to call variables resulting from calculations with Scipy from code in Javascript (still within IPYNB).</p>  <p>Below is a simplistic illustration of what I am willing to accomplish:</p>  <pre><code># Get a vector of 4 normal random numbers using numpy - the variable 'rnd' import numpy as np mu, sig = 0.05, 0.2 rnd = np.random.normal(loc=mu, scale=sig, size=4) </code></pre>  <p>Now, I want to use the variable <code>rnd</code> above in Javascript, for illustrative purpose:</p>  <pre><code>%%javascript element.append(rnd); </code></pre>  <p>The lines above returns a message error: <code>ReferenceError: rnd is not defined</code>.</p>  <p>Then, how can one use a python variable in javascript code within the Ipython Notebook?</p>"	"<p>Arbitrary Python (including retrieving the value of variables) can be executed from the JavaScript side of things in IPython, although it is a bit messy. The following code works for me in IPython 3.1 and Python 2.7:</p>  <pre><code>%%javascript IPython.notebook.kernel.execute(     ""&lt;PYTHON CODE TO EXECUTE HERE&gt;"",      {         iopub: {             output: function(response) {                 // Print the return value of the Python code to the console                 console.log(response.content.data[""text/plain""]);             }         }     },     {         silent: false,          store_history: false,          stop_on_error: true     } ) </code></pre>"
26207668	How to use python-defined variables in javascript code within ipython notebook?	ipython|ipython-notebook	2014-10-05 22:01:20.730000 UTC	"<p>Say I made complex numeric calculations with Scipy factories, using the Ipython notebook. Now, I want to call variables resulting from calculations with Scipy from code in Javascript (still within IPYNB).</p>  <p>Below is a simplistic illustration of what I am willing to accomplish:</p>  <pre><code># Get a vector of 4 normal random numbers using numpy - the variable 'rnd' import numpy as np mu, sig = 0.05, 0.2 rnd = np.random.normal(loc=mu, scale=sig, size=4) </code></pre>  <p>Now, I want to use the variable <code>rnd</code> above in Javascript, for illustrative purpose:</p>  <pre><code>%%javascript element.append(rnd); </code></pre>  <p>The lines above returns a message error: <code>ReferenceError: rnd is not defined</code>.</p>  <p>Then, how can one use a python variable in javascript code within the Ipython Notebook?</p>"	"<p>It may not be possible to do this with the <code>%%Javascript</code> cell magic.  However you can use the <code>IPython.display.Javascript(...)</code> method to inject Python strings into the browser  output area.  Here's a modification of your code fragment that seems to answer your question.</p>  <pre class=""lang-py prettyprint-override""><code>from IPython.display import Javascript  import numpy as np mu, sig = 0.05, 0.2 rnd = np.random.normal(loc=mu, scale=sig, size=4)  ## Now, I want to use the variable rnd above in Javascript, for illustrative purpose:  javascript = 'element.append(""{}"");'.format(str(rnd))  Javascript(javascript) </code></pre>  <p>Paste this code into an input cell and each time you execute the cell a new and different array of  random numbers will be displayed in the output cell.</p>  <p>(Code was tested with IPython version 2.2)</p>"
26234313	Call javascript code from python?	javascript|python-2.7|openerp-7	2014-10-07 10:50:49.793000 UTC	"<p>i have a problem with a button in a popup window, i want that this button open a new popup window without closing the current popup window, but this button close the current popup window. this is my python code:</p>  <pre><code> def button_article(self, cr, uid, ids, context=None):   ctx = (context or {}).copy()   ctx['article'] = self.browse(cr, uid, ids[0], context=context).product_id.id   ctx['form_view_ref'] = 'itk_entrepot.itk_entrepot_article_maj'   if ctx['article'] :       return {     'name':'Article',     'view_type':'form',     'view_mode':'form',     'res_model':'product.product',     'view_id':False,     'target':'new',     'type':'ir.actions.act_window',     'domain':[('id','=',ctx['article'])],     'context':ctx,     'nodestroy':True,     'res_id':ctx['article'],         }   else : return True </code></pre>  <p>i asked for a solution but i don't have any answer so i decide to call javascript code from python. anyone have idea about How to call javascript code from python in openerp ?</p>"	
26240681	How can I retrieve a JavaScript variable using Python?	javascript|python|json	2014-10-07 16:20:37.333000 UTC	"<p><br> I'm trying to retrieve a Javascript variable using Python and I'm having some issues... <br><br>Here is what the variable looks like :</p>  <pre><code>&lt;script type=""text/javascript""&gt; var exampleVar = [     {...},     {...},     {         ""key"":""0000"",         ""abo"":             {                 ""param1"":""1""                 ""param2"":""2""                 ""param3"":                     [                         {                             ""param3a1"":""000""                             ""param3a2"":""111""                         },                         {                             ""param3b1"":""100""                             ""param3b2"":""101""                         }                     ]              } ] &lt;/script&gt; </code></pre>  <p>After some research, I discovered that its content was in the JSON format, and I'm new to it... <br><br>My problem now is that I would like to retrieve the value of ""param3b1"" (for example) to use it in my Python program. <br>How do I do this in Python ? <br> Thanks !</p>"	"<p>You need to use the JSON module.</p>  <pre><code>import json  myJson = json.loads(your_json_string)  param3b1 = myJson['abo']['param3'][1]['param3b1'] </code></pre>  <p>JSON module documentation : <a href=""https://docs.python.org/2/library/json.html"" rel=""nofollow"">https://docs.python.org/2/library/json.html</a></p>"
26240681	How can I retrieve a JavaScript variable using Python?	javascript|python|json	2014-10-07 16:20:37.333000 UTC	"<p><br> I'm trying to retrieve a Javascript variable using Python and I'm having some issues... <br><br>Here is what the variable looks like :</p>  <pre><code>&lt;script type=""text/javascript""&gt; var exampleVar = [     {...},     {...},     {         ""key"":""0000"",         ""abo"":             {                 ""param1"":""1""                 ""param2"":""2""                 ""param3"":                     [                         {                             ""param3a1"":""000""                             ""param3a2"":""111""                         },                         {                             ""param3b1"":""100""                             ""param3b2"":""101""                         }                     ]              } ] &lt;/script&gt; </code></pre>  <p>After some research, I discovered that its content was in the JSON format, and I'm new to it... <br><br>My problem now is that I would like to retrieve the value of ""param3b1"" (for example) to use it in my Python program. <br>How do I do this in Python ? <br> Thanks !</p>"	"<p>Step by step this is what you need to do.</p>  <ol> <li>extract the json string from the file/html string. you need to get the string between the <code>&lt;script&gt;</code> tags first, and then the variable definition</li> <li>extract the parameter from the json string.</li> </ol>  <p>Here is a demo.</p>  <pre><code>from xml.etree import ElementTree  import json tree = ElementTree.fromstring(js_String).getroot() #get the root #use etree.find or whatever to find the text you need in your html file script_text = tree.text.strip()  #extract json string #you could use the re module if the string extraction is complex json_string = script_text.split('var exampleVar =')[1] #note that this will work only for the example you have given. try:     data = json.loads(json_string) except ValueError:     print ""invalid json"", json_string else:     value = data['abo']['param3']['param3b1'] </code></pre>"
26247916	how can I transfer the javascript code to python code?	javascript|python	2014-10-08 01:34:19.087000 UTC	"<p>the javascript code is here:    </p>  <pre><code>var goat=6111+7380; var hen=5548+7476^goat; var seal=2094+4451^hen; var rat=1687+7000^seal; var pig=3997+8240^rat; </code></pre>  <p>And I want get the <code>goat</code>, <code>hen</code> <code>seal</code> variable and so on in the python. My python code is here:</p>  <pre><code>animals = 'var goat=6111+7380;var hen=5548+7476^goat;var seal=2094+4451^hen;var rat=1687+7000^seal;var pig=3997+8240^rat;' [eval(item.replace('var','').strip()) for item in animals.split(';')]####here is wrong </code></pre>  <p>because eval('goat=6111+7380') is wrong, so how can I make the goal is equal the <code>6111+7380</code>?</p>  <p>ps： thanks everyone. Actually I craw a website:<code>http://pachong.org/</code> to get the proxy address and the port.But the port is generated by <code>&lt;script&gt;document.write((4513^pig)+15);&lt;/script&gt;</code>.And the <code>pig</code> variable is generated by <code>&lt;script type=""text/javascript""&gt;var goat=6111+7380;var hen=5548+7476^goat;var seal=2094+4451^hen;var rat=1687+7000^seal;var pig=3997+8240^rat;&lt;/script&gt;</code>,but this javascript code change every time when I craw the index website.So I do not know how to get the port value.</p>  <pre><code>###resultstring is something like this '(1646^hen)+19' def getport(resultstring):     port = eval(resultstring)     return port  proxyurl= 'http://www.pachong.org/' try:     r = requests.get(proxyurl,timeout=60*4) except:     print 'I can not get the date of pachong.org' if r.status_code != 200:     print 'the status is not good. status_code is %s' % r.status_code     return ht = BeautifulSoup(r.content) animals = str(ht.head.find_all('script')[-1].text) [eval(item.replace('var','').strip()) for item in animals.split(';')]###it is wrong here  table = ht.find_all('table', attrs={'class':'tb'}) if not table:     return table = table[0] trs = table.find_all('tr',attrs={'data-type':'high'}) tr = trs[0] idlestring = tr.find_all('td')[5].text idlestring = idlestring.replace('\n','').replace(' ','') if idlestring == u'空闲':     # proxy_id += 1     ip = tr.find_all('td')[1].text     portstring = tr.find_all('td')[2].text     patt = re.compile(u'document.write\((.*?)\);')     if re.findall(patt,portstring):         resultstring = re.findall(patt,portstring)[0]     else:         continue     port = getport(resultstring)     ip_port = '%s:%s' % (ip, port)     print 'ip_port is %s' % ip_port </code></pre>"	"<p>I don't know why you'd want to do this, but this works:</p>  <pre><code>for item in animals.split(';'):     exec(item.replace('var','').strip()) </code></pre>"
26267401	python html parsing fails in document with javascript	python|html	2014-10-08 22:18:21.737000 UTC	"<p>I'm trying to use Python to parse HTML (although strictly speaking, the server <em>claims</em> it's xhtml) and every parser I have tried (ElementTree, minidom, and lxml) all fail.  When I go to look at where the problem is, it's inside a script tag:</p>  <pre><code>&lt;script type=""text/javascript""&gt; ... // some javascript code     if (condition1 &amp;&amp; condition2) { // croaks on this line </code></pre>  <p>I see what the problem is, the ampersand should be quoted.  The problem is, this is inside a javascript script tag, so it <em>cannot</em> be quoted, because that would break the code.</p>  <p>What's going on here?  How is inline javascript able to break my parse, and what can I do about it?</p>  <p>Update: per request, here is the code used with lxml.</p>  <pre><code>&gt;&gt;&gt; from lxml import etree &gt;&gt;&gt; tree=etree.parse(""http://192.168.1.185/site.html"") Traceback (most recent call last):   File ""&lt;stdin&gt;"", line 1, in &lt;module&gt;   File ""lxml.etree.pyx"", line 3299, in lxml.etree.parse (src/lxml/lxml.etree.c:72655)   File ""parser.pxi"", line 1791, in lxml.etree._parseDocument (src/lxml/lxml.etree.c:106263)   File ""parser.pxi"", line 1817, in lxml.etree._parseDocumentFromURL (src/lxml/lxml.etree.c:106564)   File ""parser.pxi"", line 1721, in lxml.etree._parseDocFromFile (src/lxml/lxml.etree.c:105561)   File ""parser.pxi"", line 1122, in lxml.etree._BaseParser._parseDocFromFile (src/lxml/lxml.etree.c:100456)   File ""parser.pxi"", line 580, in lxml.etree._ParserContext._handleParseResultDoc (src/lxml/lxml.etree.c:94543)   File ""parser.pxi"", line 690, in lxml.etree._handleParseResult (src/lxml/lxml.etree.c:96003)   File ""parser.pxi"", line 620, in lxml.etree._raiseParseError (src/lxml/lxml.etree.c:95050) lxml.etree.XMLSyntaxError: xmlParseEntityRef: no name, line 77, column 22 </code></pre>  <p>The <a href=""http://lxml.de/3.4/lxmldoc-3.4.0.pdf"" rel=""nofollow"">lxml manual</a> starts Chapter 9 by stating ""lxml provides a very simple and powerful API for parsing XML and HTML"" so I would expect to not see that exception.</p>"	"<p>There are a lot of really crappy ways for HTML parsing to break. Bad HTML is ubiquitous, and both <code>script</code> sections and various templating languages throw monkey wrenches into the works. </p>  <p>But, you also seem to be using XML-oriented parsers for the job, which are stricter and thus much, much more likely to break if not presented with exactly-right, totally valid input. Which most HTML--including most XHTML--manifestly is not.</p>  <p>So, use a parser designed to overlook some of the HTML gotchas:</p>  <pre><code>import lxml.html  d = lxml.html.parse(URL) </code></pre>  <p>That should take you off to the races.</p>"
26287101	Generate Hmac in Javascript from python code	javascript|python|hmac|hmacsha1	2014-10-09 20:08:04.343000 UTC	"<p>I am trying to generate an hmac hash in javascript. </p>  <p>here is some python code I want to replicate in Javascript:</p>  <pre><code>mac = hmac.new(""33fsfsdgvwrg2g223f4f42gf4f34f43f"", digestmod=hashlib.sha1) mac.update(method) mac.update(url) mac.update(data) mac.update(str(timestamp))  r = requests.request(method, url, data=data, headers={     'Content-Type': 'application/json',     'Authorization': "" signature=""'mac.hexdigest()'"" "", }) </code></pre>  <p>This is what I have so far, and it does not seem to be what I need:</p>  <pre><code>var message = ""shah me""; var secret = ""33fsfsdgvwrg2g223f4f42gf4f34f43f""; var crypto = CryptoJS.HmacSHA1(message, secret).toString(CryptoJS.enc.Base64);  var shaObj = new jsSHA('shah me', ""ASCII""); var jssha = shaObj.getHMAC('33fsfsdgvwrg2g223f4f42gf4f34f43f', ""ASCII"", ""SHA-1"", ""B64""); </code></pre>"	"<p>It looks like your ""current solution"" is just a copy paste of <a href=""https://stackoverflow.com/questions/13671632/jssha-cryptojs-and-openssl-libraries-giving-different-results"">jsSHA, CryptoJS and OpenSSL libraries giving different results</a> with your key substituted in.</p>  <p>Anyways, you don't need to use both CryptoJS and jsSHA. You should pick one and stick with it.</p>  <p>According to <a href=""https://docs.python.org/2/library/hmac.html#hmac.HMAC.update"" rel=""nofollow noreferrer"">the docs</a>, the python mac.update function is equivalent to appending data to the message. I believe this is the key to your problems, since neither CryptoJS nor jsSHA have an equivalent update function but instead expect you to have the full message to begin with.</p>  <p>The following Python code and the Javascript code that follows it are equivalent:</p>  <pre><code>import hashlib import hmac  method = 'method' url = 'url' data = 'data' timestamp = 'timestamp'  mac = hmac.new(""33fsfsdgvwrg2g223f4f42gf4f34f43f"", digestmod=hashlib.sha1) mac.update(method) mac.update(url) mac.update(data) mac.update(timestamp)  print mac.hexdigest() </code></pre>  <p>Here is the Javascript:</p>  <pre><code>&lt;script src=""sha.js""&gt;&lt;/script&gt; &lt;script&gt;   var secret = '33fsfsdgvwrg2g223f4f42gf4f34f43f';   var message = 'methodurldatatimestamp';   var shaObj = new jsSHA(message, ""ASCII"");   document.write(shaObj.getHMAC(secret, ""ASCII"", ""SHA-1"", ""HEX"")); &lt;/script&gt; </code></pre>  <p>Note that the Javascript code puts the full message (<code>'methodurldatatimestamp'</code>) in the jsSHA constructor. I believe this is the key to your problem. Hope this helps!</p>"
26311221	How can we send a GET request to a python bottle server without using Javascript?	javascript|jquery|python|html|bottle	2014-10-11 04:54:55.990000 UTC	"<p>This is the simple HTML page with a text box and a search button</p>  <pre><code>&lt;!DOCTYPE html&gt; &lt;html&gt; &lt;body&gt; &lt;input type=""text"" name=""queryString""&gt;&lt;br&gt; &lt;button type=""button"" name=""searchButton""&gt;Search&lt;/button&gt; &lt;/body&gt; &lt;/html&gt; </code></pre>  <p>Initially, the above HTML page is served by a bottle server (I am going to omit the code), and then I wish to process the search queryString using:</p>  <pre><code>@route('/', method = 'GET') def processSearch():     queryString = request.forms.get(""queryString"")     print 'queryString is:', keyword     return 'processSearch() executed' </code></pre>  <p>My question is: without a Javascript onclick listener function (which would make an AJAX call), is it possible to click on the search button and fire a GET request which starts executing processSearch()?</p>  <p><strong>Note</strong>: I am aware POST is ideal for form data submission, but I am still interested to know if this will work.</p>"	"<p>Put it in a form, and change the button to a <code>submit</code> input:</p>  <pre><code>&lt;form action=""yourscript.py"" method=""get""&gt;     &lt;input type=""text"" name=""queryString""&gt;&lt;br&gt;     &lt;input type=""submit"" name=""searchButton"" value=""Search""&gt; &lt;/form&gt; </code></pre>"
26320253	Is there a Javascript function similar to the Python Counter function?	javascript|python	2014-10-11 23:17:43.487000 UTC	"<p>I am attempting to change a program of mine from Python to Javascript and I was wondering if there was a JS function like the Counter function from the collections module in Python.</p>  <p>Syntax for Counter</p>  <pre><code>from collection import Counter list = ['a', 'b', 'c', 'b', 'a', 'b', 'c', 'a', 'a', 'a'] counter = Counter(list) print counter </code></pre>  <p>output</p>  <pre><code>Counter({'a':5, 'b':3, 'c':2}) </code></pre>"	"<p><strong>This is my solution with explicit function calls</strong></p> <pre><code>let list = [4, 6, 5, 3, 3, 1];  function counter(list) {    let count = function(n) {     let cnt = 0;     for (let v of list) {       if (v === n) cnt++     }     return cnt   }    let [...listSet] = new Set(list);   let cntr = {};   for (let v of listSet) {     cntr[v] = count(v)   }   return cntr  }  console.log(counter(list)) </code></pre>"
26320253	Is there a Javascript function similar to the Python Counter function?	javascript|python	2014-10-11 23:17:43.487000 UTC	"<p>I am attempting to change a program of mine from Python to Javascript and I was wondering if there was a JS function like the Counter function from the collections module in Python.</p>  <p>Syntax for Counter</p>  <pre><code>from collection import Counter list = ['a', 'b', 'c', 'b', 'a', 'b', 'c', 'a', 'a', 'a'] counter = Counter(list) print counter </code></pre>  <p>output</p>  <pre><code>Counter({'a':5, 'b':3, 'c':2}) </code></pre>"	"<p>Here is a simple and easy to read solution:</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-js lang-js prettyprint-override""><code> const word1 = ""tangram""     const dict1 = {}     for (let char of word1){      console.log(char)      if (dict1[char]){        dict1[char] += 1        }else{      dict1[char]= 1      }     }</code></pre> </div> </div> </p> <p><a href=""https://i.stack.imgur.com/z8kQ9.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/z8kQ9.png"" alt=""enter image description here"" /></a></p> <p><a href=""https://i.stack.imgur.com/Edyi7.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/Edyi7.png"" alt=""enter image description here"" /></a></p>"
26320253	Is there a Javascript function similar to the Python Counter function?	javascript|python	2014-10-11 23:17:43.487000 UTC	"<p>I am attempting to change a program of mine from Python to Javascript and I was wondering if there was a JS function like the Counter function from the collections module in Python.</p>  <p>Syntax for Counter</p>  <pre><code>from collection import Counter list = ['a', 'b', 'c', 'b', 'a', 'b', 'c', 'a', 'a', 'a'] counter = Counter(list) print counter </code></pre>  <p>output</p>  <pre><code>Counter({'a':5, 'b':3, 'c':2}) </code></pre>"	"<p>Another version -&gt;</p> <pre><code>s = &quot;naman&quot;;  const counter = (s, sMap = {}) =&gt; {   [...s].map((el) =&gt; {     sMap[el] = sMap[el] ? sMap[el] + 1 : 1;   });   return sMap; };  const res = counter(s); console.log(`res`, res);  </code></pre>"
26320253	Is there a Javascript function similar to the Python Counter function?	javascript|python	2014-10-11 23:17:43.487000 UTC	"<p>I am attempting to change a program of mine from Python to Javascript and I was wondering if there was a JS function like the Counter function from the collections module in Python.</p>  <p>Syntax for Counter</p>  <pre><code>from collection import Counter list = ['a', 'b', 'c', 'b', 'a', 'b', 'c', 'a', 'a', 'a'] counter = Counter(list) print counter </code></pre>  <p>output</p>  <pre><code>Counter({'a':5, 'b':3, 'c':2}) </code></pre>"	"<p>For those who want a pure JavaScript solution:</p>  <pre><code>function countBy (data, keyGetter) {   var keyResolver = {     'function': function (d) { return keyGetter(d); },     'string': function(d) { return d[keyGetter]; },     'undefined': function (d) { return d; }   };    var result = {};    data.forEach(function (d) {     var keyGetterType = typeof keyGetter;     var key = keyResolver[keyGetterType](d);      if (result.hasOwnProperty(key)) {       result[key] += 1;     } else {       result[key] = 1;     }   });    return result; } </code></pre>  <p>Therefore:</p>  <pre><code>list1 = ['a', 'b', 'c', 'b', 'a', 'b', 'c', 'a', 'a', 'a']; console.log(countBy(list1));  // {'a':5, 'b':3, 'c':2}  list2 = ['abc', 'aa', 'b3', 'abcd', 'cd']; console.log(countBy(list2, 'length'));  // {2: 3, 3: 1, 4: 1}  list3 = [1.2, 7.8, 1.9]; console.log(countBy(list3, Math.floor));  // {1: 2, 7: 1} </code></pre>"
26320253	Is there a Javascript function similar to the Python Counter function?	javascript|python	2014-10-11 23:17:43.487000 UTC	"<p>I am attempting to change a program of mine from Python to Javascript and I was wondering if there was a JS function like the Counter function from the collections module in Python.</p>  <p>Syntax for Counter</p>  <pre><code>from collection import Counter list = ['a', 'b', 'c', 'b', 'a', 'b', 'c', 'a', 'a', 'a'] counter = Counter(list) print counter </code></pre>  <p>output</p>  <pre><code>Counter({'a':5, 'b':3, 'c':2}) </code></pre>"	"<p>In Python, the <code>Counter</code> also has <code>add</code> and <code>update</code> methods, which are used quite commonly. So a better solution would be this:</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-js lang-js prettyprint-override""><code>function Counter(array) {     this.add = (val) =&gt; {         this[val] = (this[val] || 0) + 1;     };     this.update = (array) =&gt; {         array.forEach((val) =&gt; this.add(val));     };     this.update(array); }  // Example usage let myCounter = new Counter([1, 2, 2]) myCounter.update([3, 3, 3]) myCounter.add(4) console.log(myCounter)</code></pre> </div> </div> </p>"
26320253	Is there a Javascript function similar to the Python Counter function?	javascript|python	2014-10-11 23:17:43.487000 UTC	"<p>I am attempting to change a program of mine from Python to Javascript and I was wondering if there was a JS function like the Counter function from the collections module in Python.</p>  <p>Syntax for Counter</p>  <pre><code>from collection import Counter list = ['a', 'b', 'c', 'b', 'a', 'b', 'c', 'a', 'a', 'a'] counter = Counter(list) print counter </code></pre>  <p>output</p>  <pre><code>Counter({'a':5, 'b':3, 'c':2}) </code></pre>"	"<p>I know I'm late but in case if someone is looking at this in 2020 you can do it using reduce, for example:</p> <pre><code>const counter = (list) =&gt; {   return list.reduce(     (prev, curr) =&gt; ({       ...prev,       [curr]: 1 + (prev[curr] || 0),     }),     {}   ); };  console.log(counter([1, 2, 1, 1, 1, 1, 2, 3, 4, 5, 6, 7, 1, 0])); // output -&gt; { '0': 1, '1': 6, '2': 2, '3': 1, '4': 1, '5': 1, '6': 1, '7': 1 } </code></pre> <p><strong>more advance example with a callback function and context binding</strong></p> <pre><code>const data = [1, 2, 3, 4, 5];  const counter = (list, fun, context) =&gt; {   fun = context ? fun.bind(context) : fun;   return list.reduce((prev, curr) =&gt; {     const key = fun(curr);     return {       ...prev,       [key]: 1 + (prev[key] || 0),     };   }, {}); };   console.log(counter(data, (num) =&gt; (num % 2 == 0 ? 'even' : 'odd'))); // output -&gt; { odd: 3, even: 2 } </code></pre>"
26320253	Is there a Javascript function similar to the Python Counter function?	javascript|python	2014-10-11 23:17:43.487000 UTC	"<p>I am attempting to change a program of mine from Python to Javascript and I was wondering if there was a JS function like the Counter function from the collections module in Python.</p>  <p>Syntax for Counter</p>  <pre><code>from collection import Counter list = ['a', 'b', 'c', 'b', 'a', 'b', 'c', 'a', 'a', 'a'] counter = Counter(list) print counter </code></pre>  <p>output</p>  <pre><code>Counter({'a':5, 'b':3, 'c':2}) </code></pre>"	"<p>DIY JavaScript solution:</p>  <pre><code>var list = ['a', 'b', 'c', 'b', 'a', 'b', 'c', 'a', 'a', 'a'];  function Counter(array) {   var count = {};   array.forEach(val =&gt; count[val] = (count[val] || 0) + 1);   return count; }  console.log(Counter(list)); </code></pre>  <p><a href=""https://jsfiddle.net/nitsas/24kLzo2L/"" rel=""noreferrer"">JSFiddle example</a></p>  <p><strong>Update:</strong></p>  <p>Alternative that uses a <em>constructor</em> function:</p>  <pre><code>var list = ['a', 'b', 'c', 'b', 'a', 'b', 'c', 'a', 'a', 'a'];  function Counter(array) {   array.forEach(val =&gt; this[val] = (this[val] || 0) + 1); }  console.log(new Counter(list)); </code></pre>  <p><a href=""https://jsfiddle.net/nitsas/yjvyjcau/"" rel=""noreferrer"">JSFiddle example</a></p>"
26320253	Is there a Javascript function similar to the Python Counter function?	javascript|python	2014-10-11 23:17:43.487000 UTC	"<p>I am attempting to change a program of mine from Python to Javascript and I was wondering if there was a JS function like the Counter function from the collections module in Python.</p>  <p>Syntax for Counter</p>  <pre><code>from collection import Counter list = ['a', 'b', 'c', 'b', 'a', 'b', 'c', 'a', 'a', 'a'] counter = Counter(list) print counter </code></pre>  <p>output</p>  <pre><code>Counter({'a':5, 'b':3, 'c':2}) </code></pre>"	"<p>There is also <a href=""http://github.com/seriesoftubes/pycollections.js"" rel=""nofollow"">pycollections.js</a>, which works on Node and in client-side JS.</p>  <p>Example:</p>  <pre><code>var collections = require('pycollections'); var counter = new collections.Counter([true, true, 'true', 1, 1, 1]); counter.mostCommon(); // logs [[1, 3], [true, 2], ['true', 1]]  </code></pre>"
26320253	Is there a Javascript function similar to the Python Counter function?	javascript|python	2014-10-11 23:17:43.487000 UTC	"<p>I am attempting to change a program of mine from Python to Javascript and I was wondering if there was a JS function like the Counter function from the collections module in Python.</p>  <p>Syntax for Counter</p>  <pre><code>from collection import Counter list = ['a', 'b', 'c', 'b', 'a', 'b', 'c', 'a', 'a', 'a'] counter = Counter(list) print counter </code></pre>  <p>output</p>  <pre><code>Counter({'a':5, 'b':3, 'c':2}) </code></pre>"	"<p>You can use Lo-Dash's <a href=""https://lodash.com/docs#countBy"" rel=""noreferrer"">countBy</a> function:</p>  <pre><code>var list = ['a', 'b', 'c', 'b', 'a', 'b', 'c', 'a', 'a', 'a']; console.log(_.countBy(list)); </code></pre>  <p><a href=""http://jsfiddle.net/ncnydyc5/"" rel=""noreferrer"">JSFiddle example</a></p>"
26336835	Python scraping by executing inpage Javascript	python|web-scraping	2014-10-13 09:35:16.440000 UTC	<p>Can you please recommend some Library other than Selenium that could execute Javascript behind a button? The Reason I don't want Selenium since it opens a browser and I need to host script on remote server.</p>	"<p>Use <code>selenium</code> + <code>PhantomJS</code>, you don't need to open a browser and it can execute javascript.</p>  <p>If you are opening a url with <code>selenium.webdriver.PhantomJS</code>, the javascripts will be executed like you are opening it in a normal browser.</p>  <p>Here is an example for click a button:</p>  <pre><code>driver = webdriver.PhantomJS() driver.get('http://exampelurl/') driver.find_element_by_id(""Email"").send_keys(""user@gmail.com"") driver.find_element_by_id(""Passwd"").send_keys(""password"") driver.find_element_by_id(""signIn"").click() </code></pre>"
26358543	"How to search for JavaScript variables in a file, using Python?"	javascript|python	2014-10-14 10:28:47.347000 UTC	"<p>I have directory with many JaveScript files. Here I want to scan each file and want to replace each JavaScript variable with string like <code>'str1'</code>, <code>'str2'</code>, <code>'str3'</code>, ..., <code>'strn'</code> and so on.</p>  <p>My question is: how to identify a JavaScript variable?</p>  <p>Doubts:</p>  <ol> <li><p>If I say keyword after <code>var</code> is a variable, however there is no compulsion of <code>var</code> while declaring variable</p></li> <li><p>If I say keyword before <code>=</code> is a variable, however file also contains HTML code, so inside HTML tag there is <code>=</code> sign between attribute and its value.</p></li> </ol>  <p>So how can I identify the variables I have to replace?</p>"	"<p>This looks like a job for a JavaScript parser. <a href=""https://pypi.python.org/pypi/slimit"" rel=""nofollow"">slimit</a> is a Python package that will allow you to parse JavaScript code and build a AST for it. Then you can navigate the AST looking for variables. Alternatively, if you are processing JavaScript that might not be syntactically valid, you can use slimit's lexer.</p>  <p>Example using parser:</p>  <pre><code>from slimit.parser import Parser from slimit.visitors import nodevisitor from slimit import ast  js = ''' var x = 100; var y = 200; s = 'This is a string'; for (var i=0; i&lt;10; i++) {     x--;     y = y * 2; } '''  identifiers = set()     tree = Parser().parse(js) for node in nodevisitor.visit(tree):     if isinstance(node, ast.Identifier):         identifiers.add(node.value)  &gt;&gt;&gt; print ""Found identifiers: {}"".format(', '.join(identifiers)) Found identifiers: y, x, s, i </code></pre>  <p>Or with just the lexer:</p>  <pre><code>from slimit.lexer import Lexer  js = ''' var x = 100; var y = 200; s = 'This is a string'; while (var i=0; i&lt;10; i++) {    // invalid while statement     x--;     y = y * 2; } '''  identifiers = set() lexer = Lexer()  lexer.input(js) for token in lexer:     if token.type == 'ID':         identifiers.add(token.value)  &gt;&gt;&gt; print ""Found identifiers: {}"".format(', '.join(identifiers)) Found identifiers: y, x, s, i </code></pre>"
26358543	"How to search for JavaScript variables in a file, using Python?"	javascript|python	2014-10-14 10:28:47.347000 UTC	"<p>I have directory with many JaveScript files. Here I want to scan each file and want to replace each JavaScript variable with string like <code>'str1'</code>, <code>'str2'</code>, <code>'str3'</code>, ..., <code>'strn'</code> and so on.</p>  <p>My question is: how to identify a JavaScript variable?</p>  <p>Doubts:</p>  <ol> <li><p>If I say keyword after <code>var</code> is a variable, however there is no compulsion of <code>var</code> while declaring variable</p></li> <li><p>If I say keyword before <code>=</code> is a variable, however file also contains HTML code, so inside HTML tag there is <code>=</code> sign between attribute and its value.</p></li> </ol>  <p>So how can I identify the variables I have to replace?</p>"	"<p>If you use an IDE such as phpstorm, it can easily find variables for you. I don't see the use in programming something in Python to do this.</p>"
26377723	Clicking JavaScript links in Selenium WebDriver and Python	python|selenium|webdriver	2014-10-15 08:17:40.657000 UTC	"<p>I am using Selenium Webdriver in Python and I got stuck trying to activate a javascript button.</p>  <p>What I need to do here is to click the Go to Previous Month button twice so that I have August 2014. And then I need to click on one of the days.</p>  <p>The images below show the code. Please tell me if I need to provide more info.</p>  <p><img src=""https://i.stack.imgur.com/O06dw.png"" alt=""enter image description here""></p>  <p>THIS IS THE ""GO TO PREVIOUS MONTH BUTTON"" + INSPECT ELEMENT</p>  <p><img src=""https://i.stack.imgur.com/HM357.png"" alt=""enter image description here""></p>  <p>AND HERE I'VE CLICKED ON THE 1ST OF AUGUST + INSPECT ELEMENT ON ""1""</p>  <p>How do I do it?</p>"	"<p>First find your element with CSS selectors (you need to be familiar how CSS selectors work - this is prerequisite for most web development):</p>  <pre><code>elem = webdriver.find_element_by_css_selector(""a[title='Go to previous month']"")[0] </code></pre>  <p><a href=""http://selenium.googlecode.com/svn/trunk/docs/api/py/webdriver_remote/selenium.webdriver.remote.webdriver.html"" rel=""nofollow noreferrer"">Related WebDriver documentantion</a>. </p>  <p>Then when you get your elem (there might paeg loading time, etc. issues you need to deal with) you can click it.</p>  <pre><code> elem.click() </code></pre>  <p>See also: <a href=""https://stackoverflow.com/questions/5868439/wait-for-page-load-in-selenium"">Wait for page load in Selenium</a></p>  <p><a href=""http://selenium.googlecode.com/svn/trunk/docs/api/py/webdriver_remote/selenium.webdriver.remote.webelement.html"" rel=""nofollow noreferrer"">Related click() documentation</a>. </p>"
26383864	"Google App Engine Python, Jquery and Javascript for a cascade select"	javascript|jquery|python|google-app-engine	2014-10-15 13:29:44.170000 UTC	"<p>I tried a lot of tutorials and forums but I can't find how to make a cascade select work in the Google App Engine ! </p>  <p>I tried this code, I have two selects but... it's not a cascade select... The second select is the same even if I change the first select choice... </p>  <pre><code>&lt;script src=""http://code.jquery.com/jquery-latest.min.js""&gt;&lt;/script&gt;  &lt;script src=""/js/jquery.chained.js""&gt;&lt;/script&gt;   &lt;select id=""mark"" name=""mark""&gt; &lt;option value=""""&gt;--&lt;/option&gt; &lt;option value=""bmw""&gt;BMW&lt;/option&gt; &lt;option value=""audi""&gt;Audi&lt;/option&gt; &lt;/select&gt; &lt;select id=""series"" name=""series""&gt;   &lt;option value=""""&gt;--&lt;/option&gt;   &lt;option value=""series-3"" class=""bmw""&gt;3 series&lt;/option&gt;   &lt;option value=""series-5"" class=""bmw""&gt;5 series&lt;/option&gt;   &lt;option value=""series-6"" class=""bmw""&gt;6 series&lt;/option&gt;   &lt;option value=""a3"" class=""audi""&gt;A3&lt;/option&gt;   &lt;option value=""a4"" class=""audi""&gt;A4&lt;/option&gt;   &lt;option value=""a5"" class=""audi""&gt;A5&lt;/option&gt; &lt;/select&gt;   &lt;script type=""text/javascript""&gt; $(""#series"").chained(""#mark""); &lt;/script&gt; </code></pre>  <p>and here my app.yaml file : </p>  <pre><code>application: *** version: 10 runtime: python27 api_version: 1 threadsafe: true  handlers: - url: /stylesheets   static_dir: stylesheets  - url: /.*   script: guestbook.application  - url: /js   static_dir: js  libraries: - name: webapp2   version: latest - name: jinja2   version: latest </code></pre>  <p>I always have in the second select ""3 series"" ""5series"" ""6 series"" ""A3"" ""A4"" ""A5"" ! </p>  <p>Can you help me ? </p>"	"<p>Now that you uploaded your <code>app.yaml</code> it's clear that the issue happens because your:</p>  <pre><code>- url: /js   static_dir: js </code></pre>  <p>route should go before</p>  <pre><code>- url: /.*   script: guestbook.application </code></pre>  <p>The <code>/.*</code> will redirect <strong>all</strong> requests that were previously not matched to your <code>guestbook.application</code> handler which knows nothing about the static files and the <code>/js</code> handler will never have a chance to serve any requests.</p>  <p>Once you fix that make sure you change your include back to <code>&lt;script src=""/js/jquery.chained.js""&gt;&lt;/script&gt;</code> since it's generally not nice to include from other websites without their permission.</p>"
26393231	Using python Requests with javascript pages	python|web-scraping|python-requests	2014-10-15 22:31:11.697000 UTC	"<p>I am trying to use the Requests framework with python (<a href=""http://docs.python-requests.org/en/latest/"">http://docs.python-requests.org/en/latest/</a>) but the page I am trying to get to uses javascript to fetch the info that I want. </p>  <p>I have tried to search on the web for a solution but the fact that I am searching with the keyword javascript most of the stuff I am getting is how to scrape with the javascript language.</p>  <p>Is there anyway to use the requests framework with pages that use javascript?</p>"	"<p>its a wrapper around pyppeteer or smth? :( i thought its something different</p>  <pre><code>    @property     async def browser(self):         if not hasattr(self, ""_browser""):             self._browser = await pyppeteer.launch(ignoreHTTPSErrors=not(self.verify), headless=True, args=self.__browser_args)          return self._browser </code></pre>"
26393231	Using python Requests with javascript pages	python|web-scraping|python-requests	2014-10-15 22:31:11.697000 UTC	"<p>I am trying to use the Requests framework with python (<a href=""http://docs.python-requests.org/en/latest/"">http://docs.python-requests.org/en/latest/</a>) but the page I am trying to get to uses javascript to fetch the info that I want. </p>  <p>I have tried to search on the web for a solution but the fact that I am searching with the keyword javascript most of the stuff I am getting is how to scrape with the javascript language.</p>  <p>Is there anyway to use the requests framework with pages that use javascript?</p>"	"<p>Using Selenium or jQuery enabled requests are slow. It is more efficient to find out which cookie is generated after website checking for JavaScript on the browser and get that cookie and use it for each of your requests.</p> <p>In one example it worked through following cookies:</p> <p>the cookie generated after checking for javascript for this example is &quot;cf_clearance&quot;. so  simply create a session. update cookie and headers as such:</p> <pre><code>s = requests.Session() s.cookies[&quot;cf_clearance&quot;] = &quot;cb4c883efc59d0e990caf7508902591f4569e7bf-1617321078-0-150&quot; s.headers.update({             &quot;user-agent&quot;: &quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64)                 AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36&quot;         }) s.get(url) </code></pre> <p>and you are good to go no need for JavaScript solution such as Selenium. This is way faster and efficient. you just have to get cookie once after opening up the browser.</p>"
26393231	Using python Requests with javascript pages	python|web-scraping|python-requests	2014-10-15 22:31:11.697000 UTC	"<p>I am trying to use the Requests framework with python (<a href=""http://docs.python-requests.org/en/latest/"">http://docs.python-requests.org/en/latest/</a>) but the page I am trying to get to uses javascript to fetch the info that I want. </p>  <p>I have tried to search on the web for a solution but the fact that I am searching with the keyword javascript most of the stuff I am getting is how to scrape with the javascript language.</p>  <p>Is there anyway to use the requests framework with pages that use javascript?</p>"	"<p>Good news: there is now a requests module that supports javascript:  <a href=""https://pypi.org/project/requests-html/"" rel=""noreferrer"">https://pypi.org/project/requests-html/</a></p>  <pre><code>from requests_html import HTMLSession  session = HTMLSession()  r = session.get('http://www.yourjspage.com')  r.html.render()  # this call executes the js in the page </code></pre>  <p>As a bonus this wraps <code>BeautifulSoup</code>, I think, so you can do things like</p>  <pre><code>r.html.find('#myElementID').text </code></pre>  <p>which returns the content of the HTML element as you'd expect.</p>"
26393231	Using python Requests with javascript pages	python|web-scraping|python-requests	2014-10-15 22:31:11.697000 UTC	"<p>I am trying to use the Requests framework with python (<a href=""http://docs.python-requests.org/en/latest/"">http://docs.python-requests.org/en/latest/</a>) but the page I am trying to get to uses javascript to fetch the info that I want. </p>  <p>I have tried to search on the web for a solution but the fact that I am searching with the keyword javascript most of the stuff I am getting is how to scrape with the javascript language.</p>  <p>Is there anyway to use the requests framework with pages that use javascript?</p>"	"<p>While Selenium might seem tempting and useful, it has one main problem that can't be fixed: performance. By calculating every single thing a browser does, you will need a lot more power. Even PhantomJS does not compete with a simple request. I recommend that you will only use Selenium when you really need to click buttons. If you only need javascript, I recommend PyQt (check <a href=""https://www.youtube.com/watch?v=FSH77vnOGqU"" rel=""noreferrer"">https://www.youtube.com/watch?v=FSH77vnOGqU</a> to learn it).</p>  <p>However, if you want to use Selenium, I recommend Chrome over PhantomJS. Many users have problems with PhantomJS where a website simply does not work in Phantom. Chrome can be headless (non-graphical) too!</p>  <p>First, make sure you have installed ChromeDriver, which Selenium depends on for using Google Chrome.</p>  <p>Then, make sure you have Google Chrome of version 60 or higher by checking it in the URL chrome://settings/help</p>  <p>Now, all you need to do is the following code:</p>  <pre><code>from selenium.webdriver.chrome.options import Options from selenium import webdriver  chrome_options = Options() chrome_options.add_argument(""--headless"")  driver = webdriver.Chrome(chrome_options=chrome_options) </code></pre>  <p>If you do not know how to use Selenium, here is a quick overview:</p>  <pre><code>driver.get(""https://www.google.com"") #Browser goes to google.com </code></pre>  <p>Finding elements: Use either the ELEMENTS or ELEMENT method. Examples:<br></p>  <pre><code>driver.find_element_by_css_selector(""div.logo-subtext"") #Find your country in Google. (singular) </code></pre>  <ul> <li>driver.find_element(s)_by_css_selector(css_selector) # Every element that matches this CSS selector</li> <li>driver.find_element(s)_by_class_name(class_name) # Every element with the following class</li> <li>driver.find_element(s)_by_id(id) # Every element with the following ID</li> <li>driver.find_element(s)_by_link_text(link_text) # Every  with the full link text</li> <li>driver.find_element(s)_by_partial_link_text(partial_link_text) # Every  with partial link text.</li> <li>driver.find_element(s)_by_name(name) # Every element where name=argument</li> <li>driver.find_element(s)_by_tag_name(tag_name) # Every element with the tag name argument</li> </ul>  <p>Ok! I found an element (or elements list). But <strong>what do I do now?</strong></p>  <p>Here are the methods you can do on an element <em>elem</em>:</p>  <ul> <li>elem.tag_name # Could return button in a .</li> <li>elem.get_attribute(""id"") # Returns the ID of an element.</li> <li>elem.text # The inner text of an element.</li> <li>elem.clear() # Clears a text input.</li> <li>elem.is_displayed() # True for visible elements, False for invisible elements.</li> <li>elem.is_enabled() # True for an enabled input, False otherwise.</li> <li>elem.is_selected() # Is this radio button or checkbox element selected?</li> <li>elem.location # A dictionary representing the X and Y location of an element on the screen.</li> <li>elem.click() # Click <em>elem</em>.</li> <li>elem.send_keys(""thelegend27"") # Type thelegend27 into <em>elem</em> (useful for text inputs)</li> <li>elem.submit() # Submit the form in which <em>elem</em> takes part.</li> </ul>  <p><strong>Special commands:</strong></p>  <ul> <li>driver.back() # Click the Back button.</li> <li>driver.forward() # Click the Forward button.</li> <li>driver.refresh() # Refresh the page.</li> <li>driver.quit() # Close the browser including all the tabs.</li> <li>foo = driver.execute_script(""return 'hello';"") # Execute javascript (COULD TAKE RETURN VALUES!)</li> </ul>"
26393231	Using python Requests with javascript pages	python|web-scraping|python-requests	2014-10-15 22:31:11.697000 UTC	"<p>I am trying to use the Requests framework with python (<a href=""http://docs.python-requests.org/en/latest/"">http://docs.python-requests.org/en/latest/</a>) but the page I am trying to get to uses javascript to fetch the info that I want. </p>  <p>I have tried to search on the web for a solution but the fact that I am searching with the keyword javascript most of the stuff I am getting is how to scrape with the javascript language.</p>  <p>Is there anyway to use the requests framework with pages that use javascript?</p>"	<p>You are going to have to make the same request (using the Requests library) that the javascript is making.  You can use any number of tools (including those built into Chrome and Firefox) to inspect the http request that is coming from javascript and simply make this request yourself from Python.</p>
26516575	Click and scrape link with javascript:__doPostBack href in Python	javascript|python-2.7|web-scraping	2014-10-22 20:32:05.890000 UTC	"<p>I wish to download data for thousands of records from a government site using Python 2.7. One example of a record is <a href=""http://camara.cl/pley/pley_detalle.aspx?prmID=1252&amp;prmBL=1-07"" rel=""nofollow noreferrer"">http://camara.cl/pley/pley_detalle.aspx?prmID=1252&amp;prmBL=1-07</a>. Two related problems: </p>  <p>(1) the site relies on mouse clicks (in the source:  <code>&lt;a href=""javascript:__doPostBack(&amp;#39;ctl00$mainPlaceHolder$btnUrgencias&amp;#39;,&amp;#39;&amp;#39;)""&gt;Urgencias&lt;/a&gt;</code>  to access another part of the data of interest to me; and </p>  <p>(2) I am illiterate in web scraping in general and Python in particular. </p>  <p>Learning-by-doing has so far taken me about half-way. Internet resources <a href=""http://docs.python-guide.org/en/latest/scenarios/scrape/"" rel=""nofollow noreferrer"">here</a>, <a href=""https://stackoverflow.com/questions/1418000/how-to-click-a-link-that-has-javascript-dopostback-in-href"">here</a>, and <a href=""http://www.clubtexting.com/sms-gateway/gateway-code-examples-python.html"" rel=""nofollow noreferrer"">here</a> pushed me in the right direction. But I hit a wall. </p>  <p>I can get source code for the information that fills the screen when the url is invoked.  </p>  <pre class=""lang-python prettyprint-override""><code>import requests id = '1252' bl = '1-07' url = 'http://camara.cl/pley/pley_detalle.aspx' parametros = {'prmID': id, 'prmBL': bl}  r = requests.get(url, params = parametros) hitos = r.text print hitos </code></pre>  <p>But I've had no success in getting info from the 'Urgencias' tab. One attempt looks thus</p>  <pre class=""lang-python prettyprint-override""><code>import json parametros = {'prmID': id, 'prmBL': bl, '__EVENTTARGET': 'ctl00$mainPlaceHolder$btnUrgencias'} headers = {'content-type': 'application/x-www-form-urlencoded; charset=utf-8'}  p = requests.post(url, data = json.dumps(parametros), headers = headers) urgencias = p.text print urgencias </code></pre>  <p>I am obviously not building/sending the request properly. (I am also missing cookies, I believe.) </p>  <p>Any help will be <strong>greatly</strong> appreciated. (Am open to use any method that will work from a Ubuntu machine!)</p>"	
26529032	Pass data from Python (flask framework) to javascript	javascript|python|flask	2014-10-23 13:18:37.940000 UTC	"<p>I try to pass data (exactly a path or a url) from flask to a javascript. But it don't recognize my variable. On the server side: it upload a file, process this file and then create and save many images. When I try to pass the path to a javascript file which use three.js library it doesn't. </p>  <pre><code>@app.route('/upload', methods=['POST']) def upload_file():     print('coucou')     if request.method == 'POST':         file = request.files['file']         print(file)         # if file and allowed_file(file.filename):         filename = secure_filename(file.filename)         print(filename)         file.save(os.path.join(app.config['UPLOAD_FOLDER'], filename))         path = UPLOAD_FOLDER + filename         fits_reader = FitsReader.FitsReader()         fits_reader.open_file(path)         cube_faces = ['/home/morban/essaiserver/cube3D/CubeX.PNG', '/home/morban/essaiserver/cube3D/CubeY.PNG', '/home/morban/essaiserver/cube3D/CubeZ.PNG']     return render_template('index.html', cube_faces=cube_faces)     for (var i = 0; i &lt; 3; i++) {         switch (i) {             case 0:                 texture[i] = new THREE.ImageUtils.loadTexture('{{ cube_faces[0] }}');                 console.log('{{ cube_faces[0] }}')                 break;             case 1:                 texture[i] = new THREE.ImageUtils.loadTexture('{{ cube_faces[1] }}');                 break;             case 2:                 texture[i] = new THREE.ImageUtils.loadTexture('{{ cube_faces[2] }}');                 break;             } </code></pre>"	"<p>The javascript must be in the template file, and not included has script source.</p>  <p>If included, you can make it has a function or ""class"" and use it like this:</p>  <pre><code>   (function($) {     var texture = new LoadTexture(                 '#filter_form',                 {{ cube_faces | tojson | safe }}             );     })(jQuery);  </code></pre>  <p>you could/should pass cube_fase has json and filter it to safe on Jinja2.</p>"
26573148	Recursion in Python vs. JavaScript	javascript|python|recursion	2014-10-26 12:50:58.737000 UTC	"<p>I'm trying to write a recursive function in JavaScript. I can write it in Python with the following code:</p>  <pre class=""lang-python prettyprint-override""><code>import copy kamers1 = [[0,0],[0]] lijst = ['a','b','c'] uitkomst = []  def fill(kamers, mens):     counter1 = 0     for i in kamers:         counter2 = 0         for j in i:             if j==0:                 kamers[counter1][counter2] = mens                 return kamers             counter2+=1         counter1+=1     return False  def main(kamers, mensen):     if mensen == []:         uitkomst.append(kamers)      for i in mensen:         temp_mensen = copy.deepcopy(mensen)         temp_mensen.remove(i)         temp_kamers = fill(copy.deepcopy(kamers),i)         main(temp_kamers, temp_mensen) main(kamers,lijst) print uitkomst </code></pre>  <p>Which will give me the expected answer:</p>  <pre><code>'[[['a', 'b'], ['c']], [['a', 'c'], ['b']], [['b', 'a'], ['c']], [['b', 'c'], ['a']], [['c', 'a'], ['b']], [['c', 'b'], ['a']]]'     </code></pre>  <p>I'm currently in the process of learning JavaScript, so I wanted to write this code in it. This is what I made:</p>  <pre class=""lang-js prettyprint-override""><code>var lijst; // Definieer een lijst met daarin de kenmerken van de persoon lijst = [   {naam: ""a"", 'vriendje': 'b'},     {naam: ""b"", 'vriendje': 'c'},     {naam: ""c"", 'vriendje': 'b'} ];  var uitkomst = [];  var kamers1; // Definieer een lijst van kamers die we moeten vullen met mensen // Bij deze kamers is het dus duidelijk de bedoeling dat b &amp; c in de eerste kamer komen // Hierdoor zal de overall happiness het hoogste zijn! kamers1 = [[0,0],[0]];  function fill(kamers, mens){ // Vul de eerste plaats in de kamers op met een mens for (i=0; i&lt;kamers.length; i++){     var temp_kamer = kamers[i];     for (j=0; j&lt;temp_kamer.length; j++){         if (temp_kamer[j]==0){             kamers[i][j] = mens;             return kamers         }     } } return 0; }  function testen(kamers){     // Vul de eerste plaats in de kamers op met een mens     for (i=0; i&lt;kamers.length; i++){         var temp_kamer = kamers[i];         for (j=0; j&lt;temp_kamer.length; j++){             if (temp_kamer[j]==0){                 return 1;             }         }     }         return 0;     }   function main(kamers,mensen){     // Dit is een recursieve functie die alle mogelijke kamerbezettingen probeert te maken     var test = testen(kamers);     if (test == 0){         uitkomst.push(kamers);         return 'true';     }     for(i=0; i&lt;mensen.length; i++) {         console.log(i);         var temp_mensen = mensen.slice();         var temp_kamers = kamers.slice();         var mens = temp_mensen.splice(i, 1);         temp_kamers = fill(temp_kamers, mens);         var a = main(temp_kamers,temp_mensen);     }     return 'tru'; }  function append(lijst1,lijst){     // Voeg elementen toe aan een lijst     for (i=0;i&lt;lijst1.length;i++){         lijst.push(lijst1[i]);     }     return lijst;  main(kamers1,lijst); console.log(uitkomst); </code></pre>  <p>Now this doesn't give me the answer I was hoping for:</p>  <pre><code>[[[[Object { naam=""a"", vriendje=""b""}], [Object { naam=""b"", vriendje=""c""}]], [[Object { naam=""c"", vriendje=""b""}]]]] </code></pre>  <p>...is the only thing it will spit out. What exactly am I doing wrong here?</p>"	
26576491	Reassembling negative Python marshal int's into Javascript numbers	javascript|python|typescript|bit-manipulation|number-formatting	2014-10-26 18:35:07.523000 UTC	"<p>I'm writing a client-side Python bytecode interpreter in Javascript (specifically Typescript) for a class project. Parsing the bytecode was going fine until I tried out a negative number.</p>  <p>In Python, <code>marshal.dumps(2)</code> gives <code>'i\x02\x00\x00\x00'</code> and <code>marshal.dumps(-2)</code> gives <code>'i\xfe\xff\xff\xff'</code>. This makes sense as Python represents integers using two's complement with at least 32 bits of precision.</p>  <p>In my Typescript code, I use the equivalent of Node.js's Buffer class (via a library called BrowserFS, instead of ArrayBuffers and etc.) to read the data. When I see the character 'i' (i.e. <code>buffer.readUInt8(offset) == 105</code>, signalling that the next thing is an int), I then call <code>readInt32LE</code> on the next offset to read a little-endian signed long (4 bytes). This works fine for positive numbers but not for negative numbers: for 1 I get '1', but for '-1' I get something like '-272777233'.</p>  <p>I guess that Javascript represents numbers in 64-bit (floating point?). So, it <em>seems like</em> the following should work:</p>  <pre><code>var longval = buffer.readInt32LE(offset); // reads a 4-byte long, gives -272777233  var low32Bits = longval &amp; 0xffff0000; //take the little endian 'most significant' 32 bits var newval = ~low32Bits + 1; //invert the bits and add 1 to negate the original value //but now newval = 272826368 instead of -2 </code></pre>  <p>I've tried a lot of different things and I've been stuck on this for days. I can't figure out how to recover the original value of the Python integer from the binary marshal string using Javascript/Typescript. Also I think I deeply misunderstand how bits work. Any thoughts would be appreciated here. </p>  <p>Some more specific questions might be:</p>  <ul> <li>Why would <code>buffer.readInt32LE</code> work for positive ints but not negative?</li> <li>Am I using the correct method to get the 'most significant' or 'lowest' 32 bits (i.e. does <code>&amp; 0xffff0000</code> work how I think it does?)</li> <li>Separate but related: in an actual 'long' number (i.e. longer than '-2'), I think there is a sign bit and a magnitude, and I think this information is stored in the 'highest' 2 bits of the number (i.e. at <code>number &amp; 0x000000ff</code>?) -- is this the correct way of thinking about this?</li> </ul>"	"<p>The sequence <code>ef bf bd</code> <a href=""https://stackoverflow.com/a/5421992/1704166"">is the UTF-8 sequence for the ""Unicode replacement character""</a>, which Unicode encoders use to represent invalid encodings.</p>  <p>It sounds like whatever method you're using to download the data is getting accidentally run through a UTF-8 decoder and corrupting the raw datastream. Be sure you're using <code>blob</code> instead of <code>text</code>, or whatever the equivalent is for the way you're downloading the bytecode.</p>  <p>This got messed up only for negative values because positive values are within the normal mapping space of UTF-8 and thus get translated 1:1 from the original byte stream.</p>"
26683501	How to use python variable in javascript getElementById()?	javascript|python	2014-10-31 21:14:17.423000 UTC	"<p>I want to pass python variable in to javascript. The variable value is an element id and so I want to pass this variable having element id to javascript ""getElementById""</p>  <p>I tried -  </p>  <pre><code>element = 'id_of_element'  js = """""" var element = document.getElementById("""""" + element + """""") """""" </code></pre>  <p>But I get error - WebDriverException: Message: u'element is null'. Please advise. I am newbee to this.</p>"	"<p>I found the solution - </p>  <p>You have to use a single quote around around the three double quotes </p>  <p>Like this  -</p>  <pre><code>element = 'id_of_element' js = """""" var element = document.getElementById('""""""+element+""""""') """""" </code></pre>"
26683501	How to use python variable in javascript getElementById()?	javascript|python	2014-10-31 21:14:17.423000 UTC	"<p>I want to pass python variable in to javascript. The variable value is an element id and so I want to pass this variable having element id to javascript ""getElementById""</p>  <p>I tried -  </p>  <pre><code>element = 'id_of_element'  js = """""" var element = document.getElementById("""""" + element + """""") """""" </code></pre>  <p>But I get error - WebDriverException: Message: u'element is null'. Please advise. I am newbee to this.</p>"	"<p>you can use <a href=""https://docs.python.org/2/library/stdtypes.html#str.format"" rel=""nofollow""><code>format</code></a> :</p>  <pre><code>element = 'id_of_element'  js = """""" var element = document.getElementById(""{}"") """""".format(element) </code></pre>"
26698152	C# equivalent of Python attribute customization / Javascript object literal	javascript|c#|python	2014-11-02 10:08:37.087000 UTC	"<p>One of the things I like about Python is the way you can <a href=""https://docs.python.org/2/reference/datamodel.html#customizing-attribute-access"" rel=""nofollow noreferrer"">customize attribute access</a>:</p>  <pre><code>class Foo(object):     def __getattr__(self, name):         if some_predicate(name):             # ...         else:             # Default behaviour             raise AttributeError </code></pre>  <p>You can do something similar more directly with Javascript's object literal notation.</p>  <p>My question is: how could you achieve something similar in C#? Overloading the '.' operator would be one way to do it, but it's not allowed in.</p>  <p>An example of the kind of thing I have in mind would be to define a class as such:</p>  <pre><code>public class MyClass {     public IDictionary Properties {get; private set;}     public MyClass(IDictionary properties)     {         this.Properties = properties;     }      // Overload the '.' operator - not allowed!     public static object operator .(MyClass inst, string name)     {         return inst.Properties[name];     } } </code></pre>  <p>Use the class like this:</p>  <pre><code>class Program {     static void Main(string[] args)     {         IDictionary properties = new Dictionary&lt;string, string&gt;() {             { ""prop1"", ""value1""}, { ""prop2"", ""value2""} };         var my = new MyClass(properties);         System.Console.WriteLine(my.prop1); // Doesn't work!     } } </code></pre>  <p>(Note: I asked a similar question about C++ <a href=""https://stackoverflow.com/questions/26690812/c-equivalent-of-pythons-getattrr-self-name"">here</a>; originally the same question, but split to make more specific for each language.)</p>"	"<p>You have a built-in support for this. You should derive your class from <a href=""http://msdn.microsoft.com/en-us/library/system.dynamic.dynamicobject%28v=vs.110%29.aspx"" rel=""nofollow"">DynamicObject</a> and override it's <em>TryGetMember/TrySetMember</em> by checking whether the property is valid using the dictionary passed to constructor.</p>  <p>Another option is to just use <a href=""http://msdn.microsoft.com/en-us/library/system.dynamic.expandoobject%28v=vs.110%29.aspx"" rel=""nofollow"">ExpandoObject</a> as a bag of properties.</p>  <p>However, while you do get some degree of functionality as dynamic languages have, you loose the C# native traits such as type safety, compile-time checking and IDE code completion support. </p>"
26698152	C# equivalent of Python attribute customization / Javascript object literal	javascript|c#|python	2014-11-02 10:08:37.087000 UTC	"<p>One of the things I like about Python is the way you can <a href=""https://docs.python.org/2/reference/datamodel.html#customizing-attribute-access"" rel=""nofollow noreferrer"">customize attribute access</a>:</p>  <pre><code>class Foo(object):     def __getattr__(self, name):         if some_predicate(name):             # ...         else:             # Default behaviour             raise AttributeError </code></pre>  <p>You can do something similar more directly with Javascript's object literal notation.</p>  <p>My question is: how could you achieve something similar in C#? Overloading the '.' operator would be one way to do it, but it's not allowed in.</p>  <p>An example of the kind of thing I have in mind would be to define a class as such:</p>  <pre><code>public class MyClass {     public IDictionary Properties {get; private set;}     public MyClass(IDictionary properties)     {         this.Properties = properties;     }      // Overload the '.' operator - not allowed!     public static object operator .(MyClass inst, string name)     {         return inst.Properties[name];     } } </code></pre>  <p>Use the class like this:</p>  <pre><code>class Program {     static void Main(string[] args)     {         IDictionary properties = new Dictionary&lt;string, string&gt;() {             { ""prop1"", ""value1""}, { ""prop2"", ""value2""} };         var my = new MyClass(properties);         System.Console.WriteLine(my.prop1); // Doesn't work!     } } </code></pre>  <p>(Note: I asked a similar question about C++ <a href=""https://stackoverflow.com/questions/26690812/c-equivalent-of-pythons-getattrr-self-name"">here</a>; originally the same question, but split to make more specific for each language.)</p>"	"<p>@galenus gave me the accepted answer, but just for the record, I thought I'd add the code for my example updated to use <a href=""http://msdn.microsoft.com/en-us/library/system.dynamic.dynamicobject%28v=vs.110%29.aspx"" rel=""nofollow"">DynamicObject</a>.</p>  <pre><code>public class MyClass : DynamicObject {     public IDictionary&lt;string, object&gt; Properties { get; private set; }     public MyClass(IDictionary&lt;string, object&gt; properties)     {         this.Properties = properties;     }      public override bool TryGetMember(GetMemberBinder binder, out object result)     {         return Properties.TryGetValue(binder.Name, out result);     } }   class Program {     static void Main(string[] args)     {         IDictionary&lt;string, object&gt; properties = new Dictionary&lt;string, object&gt;() {             { ""prop1"", ""value1""}, { ""prop2"", ""value2""} };         dynamic my = new MyClass(properties);         System.Console.WriteLine(my.prop1);     } } </code></pre>"
26698929	Python data from Django to Javascript	javascript|python|django	2014-11-02 11:46:05.727000 UTC	"<p>I am busy on a Django app which analyzes a variety of data (largely using pandas) and then displays the results using Google charts.</p>  <p>Im having trouble figuring out the best way to pass my data from the django view.py which will generally be in a Pandas dataframe or a dict, through to be used in the template files (which use javascript for the google charts).</p>  <p>Here's some code showing a javascript function for displaying one of the charts. In this example i've hard coded the data into the chart (ie: The years and the sales have been manually typed in). However what needs to be done is to instead use the data from the pandas dataframe.</p>  <pre><code>function drawChart() {      var data = google.visualization.arrayToDataTable([         ['Year', 'Sales'],         ['2004',  1000],         ['2005',  1170],         ['2006',  660],         ['2007',  1030]     ]);      var options = {         title: 'Company Performance',         hAxis: {title: 'Year', titleTextStyle: {color: 'red'}}     };      var chart = new google.visualization.ColumnChart(document.getElementById('chart_div'));     chart.draw(data, options);     } </code></pre>  <p>It's easy enough to pass through single variables or even lists using the django template language {{ var }}. However im not entirely sure how to pass through more complicated dataframes, dicts, etc to be used in javascript functions.</p>  <p>Many thanks.</p>"	"<p>this is the way to achieve what I think you want</p>  <pre><code>def view_func(request):     data =pd.DataFrame(np.random.randn(20, 5))       render(request, 'template.html', {'data': data.to_html()}) </code></pre>  <p>See the <a href=""http://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.to_html.html"" rel=""nofollow"">documentation</a> for extra details on CSS styling and other things.</p>  <p>Also implement data as 'safe' in your template as follows:</p>  <pre><code>{{ data | safe }} </code></pre>"
26698929	Python data from Django to Javascript	javascript|python|django	2014-11-02 11:46:05.727000 UTC	"<p>I am busy on a Django app which analyzes a variety of data (largely using pandas) and then displays the results using Google charts.</p>  <p>Im having trouble figuring out the best way to pass my data from the django view.py which will generally be in a Pandas dataframe or a dict, through to be used in the template files (which use javascript for the google charts).</p>  <p>Here's some code showing a javascript function for displaying one of the charts. In this example i've hard coded the data into the chart (ie: The years and the sales have been manually typed in). However what needs to be done is to instead use the data from the pandas dataframe.</p>  <pre><code>function drawChart() {      var data = google.visualization.arrayToDataTable([         ['Year', 'Sales'],         ['2004',  1000],         ['2005',  1170],         ['2006',  660],         ['2007',  1030]     ]);      var options = {         title: 'Company Performance',         hAxis: {title: 'Year', titleTextStyle: {color: 'red'}}     };      var chart = new google.visualization.ColumnChart(document.getElementById('chart_div'));     chart.draw(data, options);     } </code></pre>  <p>It's easy enough to pass through single variables or even lists using the django template language {{ var }}. However im not entirely sure how to pass through more complicated dataframes, dicts, etc to be used in javascript functions.</p>  <p>Many thanks.</p>"	"<p>Is this what you want?</p>  <p><strong>views.py:</strong></p>  <pre><code>import json  def some_view_func(request):     data = [         ['Year', 'Sales'],         ['2004',  1000],         ['2005',  1170],         ['2006',  660],         ['2007',  1030]     ]     render(request, 'template.html', {'data': json.dumps(data)}) </code></pre>  <p><strong>template.html</strong>:</p>  <pre><code>&lt;script&gt;     var data = google.visualization.arrayToDataTable(JSON.parse({{data}})); &lt;/script&gt; </code></pre>"
26736525	How to run python code from javascript code using xampp?	javascript|python|xampp	2014-11-04 13:37:44.030000 UTC	"<p>I have a website written in html and I have a button that when clicked should run a python script. The button is programmed in javascript, and I have seen on this site how to connect javascript and python together, but the problem is that I'm running the website using xampp and localhost, so I don't know the configurations to run the python code. I have tried to use up mod_wsgi, but the instructions are very confusing and I really have no idea what I'm doing.</p>  <p>I don't want to use JQuery or Ajax, I'd rather use just regular javascript to run the python code. How would I accomplish this? Basically I just want the button to run a python script I have, which is in the same directory as the website is. I don't want to run the python code from localhost directly, rather I want to reference and run it from the javascript code for the button.</p>  <p>Edit: it has been pointed out to me that JavaScript and python are connected through a client server relationship. Therefore my question is how to run the python code through a webserver from xampp.</p>  <p>Thanks in advance</p>"	
26885123	How to work with a Javascript +Date() numeric time stamp in Python?	javascript|python	2014-11-12 10:50:07.677000 UTC	<p>I've a JavaScript date string which I want to convert in understandable form. E.g. </p>  <pre><code>new Date(1415988000000) </code></pre>  <p>which gives the output</p>  <pre><code>Fri Nov 14 2014 23:30:00 GMT+0530 (IST) </code></pre>  <p>I want to do this in python. I don't want to use PyV8. Is there any other alternative ?</p>	"<p>You don't need to write Javascript in Python to convert the timestamps.</p>  <p>The following works in pure python.</p>  <p>Note:</p>  <ul> <li>The JS Date format is the number of milliseconds since Jan 1,1970 UTC.</li> <li>Oddly enough, the python format for time.time() is the number of seconds since Jan 1, 1970 UTC.</li> </ul>  <p>This standard is sometimes called <a href=""http://en.wikipedia.org/wiki/Unix_time"" rel=""nofollow"">Unix time</a></p>  <p>First, for the milliseconds to seconds time conversion, you need to divide 1415988000000 by 1000, obtaining 1415988000</p>  <p>Then you can use the <code>datetime</code> library like this:</p>  <pre><code>import datetime d = datetime.datetime.fromtimestamp(1415988000) print d </code></pre>  <p>Obtaining: </p>  <p>2014-11-14 13:00:00</p>  <p>This print seems to have converted <code>d</code> to my TZ which is UTC-5. </p>  <p>So UTC time would be 18:00.  </p>  <p>This explains the later time, 23:30, you receive in JS for the same stamp in IST or UTC+5:30 </p>"
26891889	Navigating webpages with python/javascript?	javascript|python|browser	2014-11-12 16:33:54.277000 UTC	"<p>I'm working on a program that requires information from some webpages. Currently, I'm getting info by just downloading the source and parsing it (in Python with Regex). However, there's more specific/better data I could be using, but it requires a login and some page navigation by the ""user"". (The pages with the data can't just be reached by typing in the URL)</p>  <p>I can write javascript/jquery to simulate the logging in and clicking that's needed to navigate to these pages..but currently I can only ""run"" it by siting in chrome and pulling up the chrome javascript console on each page. Is there a way to simulate browser navigation purely in Python, so I could automate this task? (Also, the page doesn't appear to have any sort of captcha or anti-bot security, o that shouldn't be a problem)</p>"	"<p>You could check out some browser automation tools, for example <a href=""http://www.seleniumhq.org"" rel=""nofollow noreferrer"">Selenium</a>. It's used for website testing primarily, but you can also extract information with it, and then process it in python.</p>  <p>Here is <a href=""https://stackoverflow.com/questions/17540971/how-to-use-selenium-with-python"">another thread</a>, about using it from python. </p>"
26895551	python-style class variables in javascript	javascript|class|backbone.js	2014-11-12 20:02:35.920000 UTC	"<p>It can be difficult to find these kinds of questions since they can be phrased so many different ways, so please forgive me if this is a duplicate.  I'd like to define class variables on a backbone model in such a way that they are still available on instances.  This could be done like so:</p>  <pre><code>var     foo_base = { foo: bar },     FooModel = Backbone.Model.extend(foo_base, foo_base); </code></pre>  <p>But this is quite ugly as it involves feeding the same object as both the instance and class prototype.  Is there a simpler way to do this that involves only one use of <code>foo_base</code> or <code>foo</code>?</p>"	"<p><a href=""http://backbonejs.org/#Model-extend"" rel=""nofollow"">http://backbonejs.org/#Model-extend</a></p>  <pre><code>Backbone.Model.extend(properties, [classProperties])  </code></pre>  <p>I am unable to understand why you want to send the same object as instance properties &amp; classProperties.</p>  <p>To create a model without instance properties but with classProperties, you can do something like</p>  <pre><code>var foo_base = { foo: bar },     FooModel = Backbone.Model.extend({}, foo_base); </code></pre>"
26983005	Importing Python Flask JSON dictionary into javascript error	javascript|python|json|flask	2014-11-17 22:15:30.397000 UTC	"<p>I have a Python Flask web app that I want to pass a dictionary data set from to javascript, I am trying to JSON I can pass numbers fine but it seems to throw an error when using strings.</p>  <p>Here is the code snippet of the python generating the JSON string: view.py</p>  <hr>  <pre><code>def dumpdata(): DB_name={""name"":""aaragh""}   strng=json.dumps(DB_name) return render_template('dumpdata.html',result = strng) </code></pre>  <p>Here is the receiving HTML file dumpdata.html</p>  <hr>  <pre><code>&lt;html&gt;&lt;body&gt; &lt;p &gt;{{ result }}&lt;/a&gt; &lt;script&gt; var data = JSON.parse({{result}}); console.log(data.name); &lt;/script&gt; &lt;/body&gt;&lt;/html&gt; </code></pre>  <p>Here is the error message and the console output: consolelog</p>  <hr>  <p>SyntaxError: invalid property id dumpdata:4</p>  <pre><code>&lt;html&gt;&lt;body&gt; &lt;p &gt;{&amp;#34;name&amp;#34;: &amp;#34;aaragh&amp;#34;}&lt;/a&gt; &lt;script&gt; var data = JSON.parse({&amp;#34;name&amp;#34;: &amp;#34;aaragh&amp;#34;}); console.log(data.name); &lt;/script&gt; &lt;/body&gt;&lt;/html&gt; </code></pre>  <p>I dont think it's relevant but I get the same error on both ubuntu chrome and win IE. </p>  <p>Any ideas? I think I am missing something obvious but I have banged my head against this for days and I still haven't been able to find a solution...</p>  <p>Thanks</p>"	"<p>What actually worked for me, translating the dictionary with Python and pass that to Javascript to work with...</p> <pre class=""lang-html prettyprint-override""><code>&lt;script&gt;   {# passing diffData to javascript in the page template #}    let diffData = {{ diffData | tojson | safe }};   console.log(diffData);    ...the rest of the code... &lt;/script&gt; </code></pre> <p>So I had to pass the <code>diffData</code> dictionary to the template and parse the dictionary with Javascript to display the result in a specific format.</p> <p>I've tried <code>let diffData = JSON.parse({{ diffData | safe }});</code> with and without quotes, both types, but Chromium kept throwing errors like:</p> <ul> <li><code>SyntaxError: Unexpected token o in JSON at position 1</code></li> <li><code>SyntaxError: Unexpected token ' in JSON at position 1</code></li> <li><code>SyntaxError: missing ) after argument list</code></li> </ul> <p>Worth noting that I use single-quotes in my dictionary, like:</p> <pre class=""lang-py prettyprint-override""><code>{'2019-10-08 11:21': {'2019-10-08': {'KSML': {... </code></pre> <p>Hope this helps some out there.</p> <p>Cheers!</p>"
26983005	Importing Python Flask JSON dictionary into javascript error	javascript|python|json|flask	2014-11-17 22:15:30.397000 UTC	"<p>I have a Python Flask web app that I want to pass a dictionary data set from to javascript, I am trying to JSON I can pass numbers fine but it seems to throw an error when using strings.</p>  <p>Here is the code snippet of the python generating the JSON string: view.py</p>  <hr>  <pre><code>def dumpdata(): DB_name={""name"":""aaragh""}   strng=json.dumps(DB_name) return render_template('dumpdata.html',result = strng) </code></pre>  <p>Here is the receiving HTML file dumpdata.html</p>  <hr>  <pre><code>&lt;html&gt;&lt;body&gt; &lt;p &gt;{{ result }}&lt;/a&gt; &lt;script&gt; var data = JSON.parse({{result}}); console.log(data.name); &lt;/script&gt; &lt;/body&gt;&lt;/html&gt; </code></pre>  <p>Here is the error message and the console output: consolelog</p>  <hr>  <p>SyntaxError: invalid property id dumpdata:4</p>  <pre><code>&lt;html&gt;&lt;body&gt; &lt;p &gt;{&amp;#34;name&amp;#34;: &amp;#34;aaragh&amp;#34;}&lt;/a&gt; &lt;script&gt; var data = JSON.parse({&amp;#34;name&amp;#34;: &amp;#34;aaragh&amp;#34;}); console.log(data.name); &lt;/script&gt; &lt;/body&gt;&lt;/html&gt; </code></pre>  <p>I dont think it's relevant but I get the same error on both ubuntu chrome and win IE. </p>  <p>Any ideas? I think I am missing something obvious but I have banged my head against this for days and I still haven't been able to find a solution...</p>  <p>Thanks</p>"	<pre><code>var data = JSON.parse({{ result|safe }}); </code></pre>  <p>This line should be changed to </p>  <pre><code>var data = JSON.parse('{{ result|safe }}'); </code></pre>  <p>PS: It didnt work for me without quotes. Also i read it somewhere that in javascript all {{ variable }} are accessible inside quotes only.</p>
26983005	Importing Python Flask JSON dictionary into javascript error	javascript|python|json|flask	2014-11-17 22:15:30.397000 UTC	"<p>I have a Python Flask web app that I want to pass a dictionary data set from to javascript, I am trying to JSON I can pass numbers fine but it seems to throw an error when using strings.</p>  <p>Here is the code snippet of the python generating the JSON string: view.py</p>  <hr>  <pre><code>def dumpdata(): DB_name={""name"":""aaragh""}   strng=json.dumps(DB_name) return render_template('dumpdata.html',result = strng) </code></pre>  <p>Here is the receiving HTML file dumpdata.html</p>  <hr>  <pre><code>&lt;html&gt;&lt;body&gt; &lt;p &gt;{{ result }}&lt;/a&gt; &lt;script&gt; var data = JSON.parse({{result}}); console.log(data.name); &lt;/script&gt; &lt;/body&gt;&lt;/html&gt; </code></pre>  <p>Here is the error message and the console output: consolelog</p>  <hr>  <p>SyntaxError: invalid property id dumpdata:4</p>  <pre><code>&lt;html&gt;&lt;body&gt; &lt;p &gt;{&amp;#34;name&amp;#34;: &amp;#34;aaragh&amp;#34;}&lt;/a&gt; &lt;script&gt; var data = JSON.parse({&amp;#34;name&amp;#34;: &amp;#34;aaragh&amp;#34;}); console.log(data.name); &lt;/script&gt; &lt;/body&gt;&lt;/html&gt; </code></pre>  <p>I dont think it's relevant but I get the same error on both ubuntu chrome and win IE. </p>  <p>Any ideas? I think I am missing something obvious but I have banged my head against this for days and I still haven't been able to find a solution...</p>  <p>Thanks</p>"	"<p>Take a look at the template filter <code>|safe</code>:</p>  <pre><code>&lt;html&gt;&lt;body&gt; &lt;p &gt;{{ result|safe }}&lt;/a&gt; &lt;script&gt; var data = JSON.parse({{ result|safe }}); console.log(data.name); &lt;/script&gt; &lt;/body&gt;&lt;/html&gt; </code></pre>  <p><a href=""http://flask.pocoo.org/docs/0.10/templating/#standard-filters"">Flask docs mention</a><br> <a href=""http://jinja.pocoo.org/docs/dev/templates/#working-with-automatic-escaping"">Jinja docs mention</a></p>"
27004272	javascript equivalent to python's dictionary.get	javascript|node.js|underscore.js	2014-11-18 21:20:27.353000 UTC	"<p>I'm trying to validate a JSON object with node.js. Basically, if condition A is present then I want to make sure that a particular value is in an array which may not be present. I do this in python using dictionary.get because that will return a default value if I look up something that isn't present. This is what it looks like in python</p>  <pre><code>if output.get('conditionA') and not 'conditionB' in output.get('deeply', {}).get('nested', {}).get('array', []):     print ""There is an error somewhere you need to be fixing."" </code></pre>  <p>I'd like to find a similar technique for javascript. I tried using defaults in underscore to create the keys if they aren't there but I don't think I did it right or I'm not using it the way it was intended.</p>  <pre><code>var temp = _.defaults(output, {'deeply': {'nested': {'array': []}}}); if (temp.hasOwnProperty('conditionA') &amp;&amp; temp.deeply.nested.array.indexOf('conditionB') == -1) {     console.log(""There is an error somewhere you need to be fixing.""); } </code></pre>  <p>It seems like if it runs into an output where one of the nested objects is missing it doesn't replace it with a default value and instead blows with a <code>TypeError: Cannot read property 'variety' of undefined</code> where 'variety' is the name of the array I'm looking at.</p>"	"<p>If you'd like something that's a little easier to use and understand, try something like this. Season to taste.</p>  <pre><code>function getStructValue( object, propertyExpression, defaultValue ) {     var temp = object;     var propertyList = propertyExpression.split(""."");     var isMatch = false;     for( var i=0; i&lt;propertyList.length; ++i ) {         var value = temp[ propertyList[i] ];         if( value ) {             temp = value;             isMatch = true;         }         else {             isMatch = false;         }     }     if( isMatch ) {         return temp;     }     else {         return defaultValue;     } } </code></pre>  <p>Here's some tests:</p>  <pre><code>var testData = {     apples : {         red: 3,         green: 9,         blue: {             error: ""there are no blue apples""         }     } };  console.log( getStructValue( testData, ""apples.red"", ""No results"" ) ); console.log( getStructValue( testData, ""apples.blue.error"", ""No results"" ) ); console.log( getStructValue( testData, ""apples.blue.error.fail"", ""No results"" ) ); console.log( getStructValue( testData, ""apples.blue.moon"", ""No results"" ) ); console.log( getStructValue( testData, ""orange.you.glad"", ""No results"" ) ); </code></pre>  <p>And the output from the tests:</p>  <pre><code>$ node getStructValue.js  3 there are no blue apples No results No results No results $  </code></pre>"
27004272	javascript equivalent to python's dictionary.get	javascript|node.js|underscore.js	2014-11-18 21:20:27.353000 UTC	"<p>I'm trying to validate a JSON object with node.js. Basically, if condition A is present then I want to make sure that a particular value is in an array which may not be present. I do this in python using dictionary.get because that will return a default value if I look up something that isn't present. This is what it looks like in python</p>  <pre><code>if output.get('conditionA') and not 'conditionB' in output.get('deeply', {}).get('nested', {}).get('array', []):     print ""There is an error somewhere you need to be fixing."" </code></pre>  <p>I'd like to find a similar technique for javascript. I tried using defaults in underscore to create the keys if they aren't there but I don't think I did it right or I'm not using it the way it was intended.</p>  <pre><code>var temp = _.defaults(output, {'deeply': {'nested': {'array': []}}}); if (temp.hasOwnProperty('conditionA') &amp;&amp; temp.deeply.nested.array.indexOf('conditionB') == -1) {     console.log(""There is an error somewhere you need to be fixing.""); } </code></pre>  <p>It seems like if it runs into an output where one of the nested objects is missing it doesn't replace it with a default value and instead blows with a <code>TypeError: Cannot read property 'variety' of undefined</code> where 'variety' is the name of the array I'm looking at.</p>"	"<p>The standard technique for this in JS is (since your expected objects are all truthy) to use the <code>||</code> operator for default values:</p>  <pre><code>if (output.conditionA &amp;&amp; (((output.deeply || {}).nested || {}).array || []).indexOf('conditionB') == -1) {     console.log(""There is an error somewhere you need to be fixing."") } </code></pre>  <p>The problem with your use of <code>_.defaults</code> is that it's not recursive - it doesn't work on deeply nested objects.</p>"
27004272	javascript equivalent to python's dictionary.get	javascript|node.js|underscore.js	2014-11-18 21:20:27.353000 UTC	"<p>I'm trying to validate a JSON object with node.js. Basically, if condition A is present then I want to make sure that a particular value is in an array which may not be present. I do this in python using dictionary.get because that will return a default value if I look up something that isn't present. This is what it looks like in python</p>  <pre><code>if output.get('conditionA') and not 'conditionB' in output.get('deeply', {}).get('nested', {}).get('array', []):     print ""There is an error somewhere you need to be fixing."" </code></pre>  <p>I'd like to find a similar technique for javascript. I tried using defaults in underscore to create the keys if they aren't there but I don't think I did it right or I'm not using it the way it was intended.</p>  <pre><code>var temp = _.defaults(output, {'deeply': {'nested': {'array': []}}}); if (temp.hasOwnProperty('conditionA') &amp;&amp; temp.deeply.nested.array.indexOf('conditionB') == -1) {     console.log(""There is an error somewhere you need to be fixing.""); } </code></pre>  <p>It seems like if it runs into an output where one of the nested objects is missing it doesn't replace it with a default value and instead blows with a <code>TypeError: Cannot read property 'variety' of undefined</code> where 'variety' is the name of the array I'm looking at.</p>"	"<p>You can check that a key exists easily in javascript by accessing it.</p>  <pre><code>if (output[""conditionA""]) {   if(output[""deeply""]) {     if(output[""deeply""][""nested""]) {       if(output[""deeply""][""nested""][""array""]) {         if(output[""deeply""][""nested""][""array""].indexOf(""conditionB"") !== -1) {           return;         }       }     }   } }  console.error(""There is an error somewhere you need to be fixing.""); return; </code></pre>"
27004272	javascript equivalent to python's dictionary.get	javascript|node.js|underscore.js	2014-11-18 21:20:27.353000 UTC	"<p>I'm trying to validate a JSON object with node.js. Basically, if condition A is present then I want to make sure that a particular value is in an array which may not be present. I do this in python using dictionary.get because that will return a default value if I look up something that isn't present. This is what it looks like in python</p>  <pre><code>if output.get('conditionA') and not 'conditionB' in output.get('deeply', {}).get('nested', {}).get('array', []):     print ""There is an error somewhere you need to be fixing."" </code></pre>  <p>I'd like to find a similar technique for javascript. I tried using defaults in underscore to create the keys if they aren't there but I don't think I did it right or I'm not using it the way it was intended.</p>  <pre><code>var temp = _.defaults(output, {'deeply': {'nested': {'array': []}}}); if (temp.hasOwnProperty('conditionA') &amp;&amp; temp.deeply.nested.array.indexOf('conditionB') == -1) {     console.log(""There is an error somewhere you need to be fixing.""); } </code></pre>  <p>It seems like if it runs into an output where one of the nested objects is missing it doesn't replace it with a default value and instead blows with a <code>TypeError: Cannot read property 'variety' of undefined</code> where 'variety' is the name of the array I'm looking at.</p>"	"<p>Or better yet, here's a quick wrapper that imitates the functionality of the python dictionary.</p>  <p><a href=""http://jsfiddle.net/xg6xb87m/4/"" rel=""nofollow"">http://jsfiddle.net/xg6xb87m/4/</a></p>  <pre><code>function pydict (item) {     if(!(this instanceof pydict)) {        return new pydict(item);     }     var self = this;     self._item = item;     self.get = function(name, def) {         var val = self._item[name];         return new pydict(val === undefined || val === null ? def : val);     };     self.value = function() {        return self._item;     };     return self; }; // now use it by wrapping your js object var output = {deeply: { nested: { array: [] } } }; var array = pydict(output).get('deeply', {}).get('nested', {}).get('array', []).value(); </code></pre>  <p><strong>Edit</strong></p>  <p>Also, here's a quick and dirty way to do the nested / multiple conditionals:</p>  <pre><code>var output = {deeply: {nested: {array: ['conditionB']}}}; var val = output[""deeply""] if(val &amp;&amp; (val = val[""nested""]) &amp;&amp; (val = val[""array""]) &amp;&amp; (val.indexOf(""conditionB"") &gt;= 0)) { ... } </code></pre>  <p><strong>Edit 2</strong> updated the code based on Bergi's observations.</p>"
27019558	Running CGI Python Javascript to retrieve JSON object	javascript|python|ajax|json|cgi	2014-11-19 14:38:25.353000 UTC	"<p>I want to use javascript to retrieve a json object from a python script Ive tried using various methods of ajax and post but cant get anything working.</p>  <p>For now I have tried to set it up like this</p>  <p>My Javascript portion: I have tried</p>  <blockquote>   <p>$.post('./cgi-bin/serverscript.py', { type: 'add'}, function(data) {               console.log('POSTed: ' + data);   });</p> </blockquote>  <p>and</p>  <blockquote>   <p>$.ajax({                           type:""post"",                           url:""./cgi-bin/serverscript.py"",                           data: {type: ""add""},                           success: function(o){ console.log(o); alert(o);}                   });</p> </blockquote>  <p>My Python </p>  <blockquote>   <p>import json <br> import cgi <br>import cgitb <br>cgitb.enable()  <br>data = cgi.FieldStorage()</p>      <p>req = data.getfirst(""type"")  <br>print ""Content-type: application/json"" <br>   print  <br>print (json.JSONEncoder().encode({""status"":""ok""}))</p> </blockquote>  <p>I am getting a 500 (internal server error)</p>"	"<p>Have you tried doing just</p>  <pre><code> print (json.JSONEncoder().encode({""status"":""ok""})) </code></pre>  <p>instead of printing the content-type and a blank line?</p>"
27019558	Running CGI Python Javascript to retrieve JSON object	javascript|python|ajax|json|cgi	2014-11-19 14:38:25.353000 UTC	"<p>I want to use javascript to retrieve a json object from a python script Ive tried using various methods of ajax and post but cant get anything working.</p>  <p>For now I have tried to set it up like this</p>  <p>My Javascript portion: I have tried</p>  <blockquote>   <p>$.post('./cgi-bin/serverscript.py', { type: 'add'}, function(data) {               console.log('POSTed: ' + data);   });</p> </blockquote>  <p>and</p>  <blockquote>   <p>$.ajax({                           type:""post"",                           url:""./cgi-bin/serverscript.py"",                           data: {type: ""add""},                           success: function(o){ console.log(o); alert(o);}                   });</p> </blockquote>  <p>My Python </p>  <blockquote>   <p>import json <br> import cgi <br>import cgitb <br>cgitb.enable()  <br>data = cgi.FieldStorage()</p>      <p>req = data.getfirst(""type"")  <br>print ""Content-type: application/json"" <br>   print  <br>print (json.JSONEncoder().encode({""status"":""ok""}))</p> </blockquote>  <p>I am getting a 500 (internal server error)</p>"	"<p>Have you checked your host's server logs to see if it's giving you any output? Before asking here, a good idea would be to ssh to your host, if you can, and running the program directly, which will most likely print the error in the terminal. This is far too general at the moment, there are so many reasons why a CGI request can fail ( misconfigured environment, libraries not installed, permissions errors ) Go back and read your servers logs and see if that shines any more light on the issue.</p>"
27020611	PyQt QtWebKit - Return value from a Python method directly to JavaScript	javascript|python|pyqt4|qtwebkit|method-signature	2014-11-19 15:27:32.393000 UTC	"<p><strong>EDIT:</strong></p>  <p>I've found a solution here: <a href=""https://stackoverflow.com/questions/6372336/how-do-i-correctly-return-values-from-pyqt-to-javascript"">how do I correctly return values from pyqt to JavaScript?</a></p>  <p>I'll post the code first:</p>  <p>Python code:</p>  <pre><code>class JSBridge(QObject):     def __init__(self, parent=None):         super(JSBridge, self).__init__(parent)      @pyqtSlot(bool)     def fromJStoPython(self, param):         print param         print param.toBool()     @pyqtSlot()     def returnValue()         return ""hello world""  class another():     ...     view = QWebView()     frame = view.page().mainFrame()      param = ""blabla""     frame.evaluateJavaScript(""printIt('"" + param + ""');"")     paramBool = True     frame.evaluateJavaScript(""fromPythonWithParameterBool('"" + paramBool + ""');"") </code></pre>  <p>JavaScript:</p>  <pre class=""lang-javascript prettyprint-override""><code>function printIt(param) {     alert(param); } function toPython() {     jsBridgeInst.fromJStoPython(true); } // now here functions I've questions about: function fromPythonWithParameterBool(param) {     alert(param); } function fromPythonReturnValue() {     res = jsBridgeInst.returnValue();     alert(res); } </code></pre>  <p><strong>Now to my question:</strong></p>  <p>The <code>printIt</code> function works fine. So the param is interpreted as a String. The <code>fromJStoPython</code> function also works fine. The print statement shows it's a <code>QVariant</code>.</p>  <p>But the <code>fromPythonWithParameterBool</code> function does not work, because I have to convert <code>paramBool</code> into a string in order to connect it. If I do so, it's printing the string value (but I want it to be boolean). Is it possible to pass a boolean, so that in JavaScript I can work with it as a boolean? If yes, how do you do it?</p>  <p>And for the <code>fromPythonReturnValue</code> function, it does not show an error, but <code>res</code> is undefined. Why? I was searching for that problem, but mostly the examples/tutorials show standard stuff like:</p>  <pre><code>evaluateJavaScript(""alert('9')"";) </code></pre>  <p>I've worked with Java and SWT, and there I could just simply return a value (as in the <code>formPythonReturnValue</code> method). There was a Browser class where you could implement your methods to call, just like JSBridge.</p>"	"<p>The <code>fromPythonWithParameterBool</code> doesn't work because you are not generating an input string that can be evaluated as javascript.</p>  <p>What you need to do is something like this:</p>  <pre class=""lang-python prettyprint-override""><code>&gt;&gt;&gt; script = 'fromPythonWithParameterBool(%s);' % str(bool(paramBool)).lower() &gt;&gt;&gt; print(script) fromPythonWithParameterBool(true); </code></pre>  <p>So the resulting string is now a fragment of valid javascript.</p>  <p>The problem with <code>fromPythonReturnValue</code> (as you already seem to have discovered), is that you are not specifying the type of the return value. This has to be done explicitly, using the <a href=""http://pyqt.sourceforge.net/Docs/PyQt4/new_style_signals_slots.html#the-pyqtslot-decorator"" rel=""nofollow"">pyqtSlot decorator</a>:</p>  <pre><code>    @pyqtSlot(result=str)     def returnValue(self):         return 'hello world' </code></pre>"
27034437	Achieving Next page through javascript in scrapy python with splash?	javascript|python|scrapy|next|scrapinghub	2014-11-20 07:55:15.950000 UTC	"<p>Actually my intension is to achieve the Next from <code>""href=""javascript:submitAction_win0(document.win0,'HRS_APPL_WRK_HRS_LST_NEXT')""</code>, so Just for an example I am taking [this url][1]. From this url as you can see the Next at the end of the page, so if you observe html of that they are written through <code>href=""javascript:submitAction_win0(document.win0,'HRS_APPL_WRK_HRS_LST_NEXT')</code> which has <code>href</code> tags as <code>#</code> , I am just trying to collect that href tags even though they are <code>#</code>.</p>  <p><div class=""snippet"" data-lang=""js"" data-hide=""false""> <div class=""snippet-code""> <pre class=""snippet-code-html lang-html prettyprint-override""><code>def parse(self,response):         selector = Selector(response)         links = []         for link in selector.css('span.PSEDITBOX_DISPONLY').re('.*&gt;(\d+)&lt;.*'):   #intjid = selector.css('span.PSEDITBOX_DISPONLY').re('.*&gt;(\d+)&lt;.*')                 abc = 'xxxx'                 #print abc   yield Request(abc,callback=self.parse_listing_page,dont_filter=True)                           #meta={""use_splash"": False}                          # )           nav_page = selector.css('div#win0divHRS_APPL_WRK_HRS_LST_NEXT a').extract()         print nav_page  for nav_page in nav_page:              ## To pass the url to parse function                 yield Request(urljoin('xxx',nav_page),self.parse,dont_filter=True)</code></pre> </div> </div> </p>  <p>When I run the above code I am getting the result as <code>"" HTTP status code is not handled or not allowed""</code>, I mean none, can anyone tell me how to achieve the Next through that <code>""""href=""javascript:submitAction_win0(document.win0,'HRS_APPL_WRK_HRS_LST_NEXT')""""</code> functions and why the result is empty. I am observing some kind of wierd in html, for example one of the page in Next has anchor tag as <code>""&lt;a id=""HRS_APPL_WRK_HRS_LST_NEXT"" class=""PSHYPERLINK"" href=""javascript:submitAction_win0(document.win0,'HRS_APPL_WRK_HRS_LST_NEXT');"" tabindex=""74"" ptlinktgt=""pt_replace"" name=""HRS_APPL_WRK_HRS_LST_NEXT""&gt;&lt;/a&gt;""</code></p>  <p>Thanks in advance</p>  <p>output  :</p>  <p><div class=""snippet"" data-lang=""js"" data-hide=""false""> <div class=""snippet-code""> <pre class=""snippet-code-html lang-html prettyprint-override""><code>[u'&lt;a name=""HRS_APPL_WRK_HRS_LST_NEXT"" id=""HRS_APPL_WRK_HRS_LST_NEXT"" ptlinktgt=""pt_replace"" tabindex=""74"" href=""javascript:submitAction_win0(document.win0,\'HRS_APPL_WRK_HRS_LST_NEXT\');"" class=""PSHYPERLINK""&gt;Next&lt;/a&gt;']</code></pre> </div> </div> </p>"	"<p>Scrapy Doesn't support java script call by itself. But there are a couple of mechanisms that you can use for facing java-script.</p>  <ol> <li><a href=""https://github.com/scrapinghub/splash"" rel=""nofollow"">Splash</a> - Splash is a javascript rendering service with an HTTP API. It's a lightweight browser with an HTTP API, implemented in Python using Twisted and QT</li> <li><a href=""https://github.com/scrapinghub/scrapyjs"" rel=""nofollow"">Scrapyjs</a> - This library provides Scrapy-Javascript integration through two different mechanisms: a Scrapy download handler, a Scrapy downloader middlware</li> <li><a href=""https://github.com/davisp/python-spidermonkey"" rel=""nofollow"">SpiderMonkey</a> - Execute arbitrary JavaScript code from Python. Allows you to reference arbitrary Python objects and functions in the JavaScript VM</li> <li><a href=""https://github.com/makinacorpus/spynner"" rel=""nofollow"">spynner</a> - Spynner is a stateful programmatic web browser module for Python. It is based upon PyQT and WebKit. It supports Javascript, AJAX, and every other technology that !WebKit is able to handle (Flash, SVG, ...). Spynner takes advantage of JQuery. a powerful Javascript library that makes the interaction with pages and event simulation really easy</li> </ol>"
27046497	How can I implement Javascript closures in Python?	python|python-2.7	2014-11-20 18:04:31.727000 UTC	<p>I am trying to implement Javascript closures in Python 2.7.</p>  <p>Consider the following code:</p>  <pre><code>var = {'upper_scope':None}  def f1():     print var  def f2():     var = {'upper_scope': var} </code></pre>  <p>The first function works fine. The second one fails on its first line:</p>  <pre><code>UnboundLocalError: local variable 'var' referenced before assignment.  </code></pre>  <p>I would like to read the value of <code>var</code> from the upper scope and place it inside a local dictionary named <code>var</code>. </p>	<p>This is probably the only way of doing that. I used this method in my JavaScript to Python converter and it does it's job.</p>  <pre><code>var = {'upper_scope':None} def first(var=var):     var = {'upper_scope': var}     def second(var=var):         var = {'upper_scope': var }          def third(var=var):              var = ... </code></pre>  <p>Now each function 'remembers' its upper scope - its stored a as its default argument. Also note that the function automatically creates local scope when called (<code>var = {'upper_scope': var}</code>).</p>
27046497	How can I implement Javascript closures in Python?	python|python-2.7	2014-11-20 18:04:31.727000 UTC	<p>I am trying to implement Javascript closures in Python 2.7.</p>  <p>Consider the following code:</p>  <pre><code>var = {'upper_scope':None}  def f1():     print var  def f2():     var = {'upper_scope': var} </code></pre>  <p>The first function works fine. The second one fails on its first line:</p>  <pre><code>UnboundLocalError: local variable 'var' referenced before assignment.  </code></pre>  <p>I would like to read the value of <code>var</code> from the upper scope and place it inside a local dictionary named <code>var</code>. </p>	"<p>There is <a href=""https://docs.python.org/3/reference/simple_stmts.html#grammar-token-nonlocal_stmt"" rel=""nofollow"">nonlocal statement</a> in python3 syntax which was invented exactly for what you asked: for <a href=""https://www.python.org/dev/peps/pep-3104"" rel=""nofollow"">access to names in outer scope</a>.</p>  <p>For access global varible in nest of functions you can do something like this(works in both python2 and python3):</p>  <pre><code>var = {'upper_scope':None} def first():     global var     var = {'upper_scope': var}     def second():         global var         var = {'upper_scope': var }          def third():             global var             var = ... </code></pre>  <p>In all of these functions will exist only one example of variable <code>var</code> — the global one. So every changes in inner scope will be available on higher level and vice versa.</p>"
27046497	How can I implement Javascript closures in Python?	python|python-2.7	2014-11-20 18:04:31.727000 UTC	<p>I am trying to implement Javascript closures in Python 2.7.</p>  <p>Consider the following code:</p>  <pre><code>var = {'upper_scope':None}  def f1():     print var  def f2():     var = {'upper_scope': var} </code></pre>  <p>The first function works fine. The second one fails on its first line:</p>  <pre><code>UnboundLocalError: local variable 'var' referenced before assignment.  </code></pre>  <p>I would like to read the value of <code>var</code> from the upper scope and place it inside a local dictionary named <code>var</code>. </p>	"<p>It doesn't work in f2(), because you are locally overwriting the global definition of var. If you rename var in f2(), it will work:</p>  <pre><code>def f2():    other_var = {'upper_scope': var} </code></pre>  <p>Alternatively, you could define it as global, but then the change of var's value would be applied to the global variable, too, like so:</p>  <pre><code>def f2():    global var    var = {'upper_scope': var} </code></pre>  <p>That being said, it's always a better approach to pass variables as parameters to functions, unless you really need it in several places and/or need to change its value.</p>"
27095392	package.json (javascript npm) or requirements.txt (python pip) equivalent for ruby	ruby|npm|pip|package-managers	2014-11-23 22:53:23.953000 UTC	"<p>Nodejs's npm has package.json to store dependencies (created with <code>npm init</code>, modified with <code>npm install aPackage anotherPackage --save</code>, and installed all-together with <code>npm install</code>). </p>  <p>Python's pip has requirements.txt (created with <code>pip freeze &gt; requirements.txt</code> after packages have been installed with <code>pip install apackage anotherpackage</code> and installed all-together with `pip install -r requirements.txt). </p>  <p>What file does Ruby use for storing dependencies? If I install with <code>gem install sass jekyll etc...</code>, how can I include those dep's in a file and install them all-together on a new machine?</p>  <p><a href=""https://stackoverflow.com/questions/13537901/python-equivalent-of-npm-or-rubygems"">Python equivalent of npm or rubygems</a> and <a href=""https://stackoverflow.com/questions/11840384/gem-equivalent-of-pip-install-r-requirements-txt"">gem equivalent of `pip install -r requirements.txt`</a> point to the bundler gem which uses a Gemfile - is this the de facto Ruby standard?</p>"	"<p>Well, <a href=""http://blog.versioneye.com/2014/01/15/which-programming-language-has-the-best-package-manager/"" rel=""nofollow"">Which programming language has the best package manager? | Continuous Updating</a> as well as the two SO questions linked in my question all point to <a href=""http://bundler.io/"" rel=""nofollow"">Bundler: The best way to manage a Ruby application's gems</a>.</p>  <p>I guess the workflow is <code>gem install bundler</code>, add gems to <code>Gemfile</code>, then <code>bundle install</code>.</p>"
27095392	package.json (javascript npm) or requirements.txt (python pip) equivalent for ruby	ruby|npm|pip|package-managers	2014-11-23 22:53:23.953000 UTC	"<p>Nodejs's npm has package.json to store dependencies (created with <code>npm init</code>, modified with <code>npm install aPackage anotherPackage --save</code>, and installed all-together with <code>npm install</code>). </p>  <p>Python's pip has requirements.txt (created with <code>pip freeze &gt; requirements.txt</code> after packages have been installed with <code>pip install apackage anotherpackage</code> and installed all-together with `pip install -r requirements.txt). </p>  <p>What file does Ruby use for storing dependencies? If I install with <code>gem install sass jekyll etc...</code>, how can I include those dep's in a file and install them all-together on a new machine?</p>  <p><a href=""https://stackoverflow.com/questions/13537901/python-equivalent-of-npm-or-rubygems"">Python equivalent of npm or rubygems</a> and <a href=""https://stackoverflow.com/questions/11840384/gem-equivalent-of-pip-install-r-requirements-txt"">gem equivalent of `pip install -r requirements.txt`</a> point to the bundler gem which uses a Gemfile - is this the de facto Ruby standard?</p>"	"<p><a href=""http://bundler.io/"" rel=""nofollow"">Bundler</a> is a great package manager and is definitely the ruby standard. It is comparable to <code>pip</code> and <code>npm</code>.</p>  <p>You can set it up like so:</p>  <p>Install Bundler:</p>  <p><code>$ gem install bundler</code></p>  <p>Specify your dependencies in a Gemfile in your project's root:</p>  <pre><code>source 'https://rubygems.org' gem 'nokogiri' gem 'rack', '~&gt;1.1' gem 'rspec', :require =&gt; 'spec' </code></pre>  <p>Then, on any machine you can install all of the project's gems:</p>  <pre><code>$ bundle install $ git add Gemfile Gemfile.lock </code></pre>  <p>The second command adds the Gemfile and Gemfile.lock to your repository. This ensures that other developers on your app, as well as your deployment environment, will all use the same third-party code that you are using now.</p>"
27114227	Flaskr url_for with parameters not working when called from javascript to python	javascript|python|json|flask|url-for	2014-11-24 21:09:48.353000 UTC	"<p>I am in the middle of creation of a web application. </p>  <p>In javascript, I make a ajax call to my python script, process and send the result back as response. /process/ is the route to the python script for the processing of values which are sent as json, namely value1 and value2. I send back response as json setting value in key 'result'. </p>  <p>In the success block of ajax, the value is stored in name_value and this should be passed as parameter to the python routing method. </p>  <p>Javascript:</p>  <pre><code>$.ajax({         type: ""GET"",         url: ""/process/"",         contentType: ""application/json; charset=utf-8"",         data: { ""value1"" : value1,                 ""value2"" : value2                },         success: function(data) {             var name = data.result;             console.log(name);             window.location.href = ""{{url_for('/process2', name=name)}}""         }     }); </code></pre>  <p>Python script:</p>  <pre><code>app.route(""/process2/&lt;name&gt;"") def process2(name):     print name     render_template(""user.html"", name=name); </code></pre>  <p>I am not receiving the parameter value in this case if parameter is passed in url_for. If I hardcode the parameter, I am able to receive the parameter value in the python script as in,</p>  <pre><code>window.location.href = ""{{url_for('/process2', name='helloworld')}}"" </code></pre>  <p>Any help is appreciated. Thanks in advance.</p>"	"<p>From experience, I have learned that Jinja cannot utilize Javascript variables, like the following:</p>  <p><code>window.location.href = ""{{ url_for('/process2', name=name) }}""</code></p>  <p>If I am wrong about that, somebody please correct me and you shall become my best friend in the SO community.</p>  <p>EDIT:</p>  <p>As Jason Heine mentioned, you can achieve what you want by passing in the <code>url_for</code> method as the result in the json:</p>  <p>Python:</p>  <pre><code>from flask import jsonify, url_for  @app.route(""/process"", methods=['GET', 'POST']) def process():         name = 'bubba'  # code to get the name     return jsonify({         'result': url_for('process2', name=name),         'name': name      })  @app.route(""/process2/&lt;string:name&gt;"") def process2(name):     print name     render_template(""user.html"", name=name); </code></pre>  <p>Javascript:</p>  <pre><code>$.ajax({     type: ""GET"",     url: ""/process"",     contentType: ""application/json; charset=utf-8"",     data: { ""value1"" : value1,             ""value2"" : value2            },     success: function(data) {         var route = data.result;         var name = data.name;         console.log(route, name);          window.location.href = route;     } }); </code></pre>  <p>You may also check out the <a href=""http://flask.pocoo.org/docs/0.10/patterns/jquery/"" rel=""nofollow"">AJAX with jQuery</a> documention if you have any more questions.</p>"
27136249	How to use Python (preferably pandas) to scrape data from Javascript table?	javascript|python|html|pandas|web-scraping	2014-11-25 20:39:19.247000 UTC	"<p>I am using pandas to grab some ice hockey stats from a web page as shown below:</p>  <pre><code>import pandas as pd  url_goal = 'http://www.quanthockey.com/nhl/records/nhl-players-all-time-goals-per-game-leaders.html' df_goal = pd.read_html(url_goal, index_col=0, header=0)[0] </code></pre>  <p>This works great, but the problem is that switching to the second page of the stats table on the homepage, does not change the url, so I cannot use the same approach to grab more than the top 50 players. There is a javascript address to the table that does change as the page number switches. I read a little about selenium and beautifulsoup, but I don't have these installed so I would prefer to do it without them is possible. So my question is two-fold:</p>  <ol> <li><p>Is there any way to grab data from the different pages in this javascript table using only pandas and standard Python/SciPy libraries (Anaconda to be exact)?</p></li> <li><p>If not, how would you go about getting this data into a pandas data frame with the help of selenium or your package of choice?</p></li> </ol>"	"<p>Hint: Open the network analyzer in your browser and watch what happens when you navigate to different pages; you'll notice a <code>GET</code> request to a page like </p>  <pre><code>http://www.quanthockey.com/scripts/AjaxPaginate.php?cat=Records&amp;pos=Players&amp;SS=&amp;af=0&amp;nat=alltime&amp;st=reg&amp;sort=goals-per-game&amp;page=3&amp;league=NHL&amp;lang=en&amp;rnd=451318572 </code></pre>  <p>Notice the <code>page</code> part of the query string. </p>  <p>You can just iterate through the range of numbers corresponding to how many pages there are, changing the query string <code>page</code> parameter, increasing it by one each time (for example)</p>"
27183219	Replacing character with word (translating python code to JavaScript)	javascript|python	2014-11-28 06:36:57.613000 UTC	"<p>How do you replace a character with another word in JavaScript using a for loop, without the the built in function string replace? For example, replacing the letter 'i' and 'I' with ""eye""? In python, I have</p>  <pre><code>def eyeForI(word):      increment = """"     for c in word:         if c == 'i' or c =='I':             increment += 'eye'         else:             increment += c     return increment  </code></pre>  <p>Since JavaScript strings does not have an <code>in</code> operator, I am having trouble.</p>  <pre><code>var increment = '' function eyeForI(word) {     for(var i = 0; i&lt;word.length; i++) {         if(word.charAt(i) == 'i' || word.charAt(i) = 'I') {         increment+= 'eye';}         {else(...)}     } } </code></pre>"	"<p>you can also use <code>substr</code>:</p>  <pre><code>var increment = '';         function eyeForI(word) {     for(var i = 0; i&lt;word.length; i++) {         mychr = word.substr(i,1);         if(mychr == 'i' || mychr == 'I') {             increment= increment + ""eye"";             }         else{             increment= increment + mychr;             }            } } </code></pre>"
27183219	Replacing character with word (translating python code to JavaScript)	javascript|python	2014-11-28 06:36:57.613000 UTC	"<p>How do you replace a character with another word in JavaScript using a for loop, without the the built in function string replace? For example, replacing the letter 'i' and 'I' with ""eye""? In python, I have</p>  <pre><code>def eyeForI(word):      increment = """"     for c in word:         if c == 'i' or c =='I':             increment += 'eye'         else:             increment += c     return increment  </code></pre>  <p>Since JavaScript strings does not have an <code>in</code> operator, I am having trouble.</p>  <pre><code>var increment = '' function eyeForI(word) {     for(var i = 0; i&lt;word.length; i++) {         if(word.charAt(i) == 'i' || word.charAt(i) = 'I') {         increment+= 'eye';}         {else(...)}     } } </code></pre>"	"<p>Remember that in the more rigidly formated languages (that aren't Ruby or Python) you'll have to pay more attention to semicolons and brace usage.  Your logic wasn't off by much, just check your semanics. </p>  <p>The following code will get the job done:</p>  <pre><code>var increment = '';          function eyeForI(word) {     for(var i = 0; i&lt;word.length; i++) {         if(word.charAt(i) == 'i' || word.charAt(i) == 'I') {             increment= increment + ""eye"";             }         else{             increment= increment + word.charAt(i);             }            } } </code></pre>"
27194358	Replacing a character (translating python code to JavaScript)	javascript|python	2014-11-28 18:40:16.340000 UTC	"<p>I am trying to translate a simple python code to JavaScript. The python code is pretty much replacing a character with another character and prints out the results. My python code is </p>  <pre><code>def replace(word):         for old, new in (             (""a"", ""@""),             (""e"", ""()""),             ):             s = word.replace(old, new)                     print (s) </code></pre>  <p>For JavaScript I cant get my head around translating it. I tried to do something like iterating but it seems to be a sloppy code</p>  <pre><code>function replace(character) {     for(var i = 0; i&lt;word.length;i++) {         ...} } </code></pre>"	"<p>JavaScript already has a native method to replace chars in a string:</p>  <pre><code> var txt = 'old text';  console.log(txt.replace('old', 'new')); </code></pre>  <p>Note that this method will only replace the first match of your text, anyway you can make a 'replace all' using regex. Check out the documentation <a href=""https://developer.mozilla.org/es/docs/Web/JavaScript/Referencia/Objetos_globales/String/replace"" rel=""nofollow"">here</a>.</p>  <p><strong>[Update]</strong></p>  <pre><code>function replace(str){   return str.replace(/a/g, '@').replace(/\(\)/g, 'e').replace(/h/g, '+');   } </code></pre>  <p>The <strong>'g'</strong> char at the end of the regex is used to say that the method should replace all occurrences.</p>"
27307563	How to pass variable from python to javascript	javascript|python|api|youtube|server	2014-12-05 01:58:32.033000 UTC	"<p>I have a server in python to process an id (the id of youtube video), this is the code:</p>  <pre><code>class MessageHandler(tornado.web.RequestHandler):    def get(self, action_id):      print ""Message = "" + action_id       if action_id == ""id"":         for ws in opened_ws:              ws.write_message(""ID: "" + action_id)             return render_template('js/player.js', action_id=json.dumps(action_id)) (...) </code></pre>  <p>I use the return render_template to pass ""action_id"" to player.js, which is a function to process films using the API from Youtube, the code is :</p>  <pre><code>var PushPlayer = (function () {      var player = null;      function new_player() {         player = new YT.Player('yt-player', {             videoId: action_id,             }         });     }  (...) </code></pre>  <p>With <code>action_id</code>, i can have everything id of youtube's video.. but i don't know who pass the <code>action_id</code> from python to javascript..any idea?</p>  <p>Thanks!</p>"	"<p>If you are using a Python framework like Flask, you can access the value of <code>action_id</code> using a template engine like Jinja2 (see <a href=""http://flask.pocoo.org/docs/0.10/quickstart/#rendering-templates"" rel=""nofollow"">http://flask.pocoo.org/docs/0.10/quickstart/#rendering-templates</a>).</p>  <p>Otherwise, to access the <code>action_id</code> using javascript you can use an AJAX call, which is an asynchronous javascript request to your Python web server (see <a href=""http://api.jquery.com/jquery.ajax/"" rel=""nofollow"">http://api.jquery.com/jquery.ajax/</a>). Note that the <code>.ajax</code> call is part of the JQuery library, but this can also be done without it.</p>"
27307563	How to pass variable from python to javascript	javascript|python|api|youtube|server	2014-12-05 01:58:32.033000 UTC	"<p>I have a server in python to process an id (the id of youtube video), this is the code:</p>  <pre><code>class MessageHandler(tornado.web.RequestHandler):    def get(self, action_id):      print ""Message = "" + action_id       if action_id == ""id"":         for ws in opened_ws:              ws.write_message(""ID: "" + action_id)             return render_template('js/player.js', action_id=json.dumps(action_id)) (...) </code></pre>  <p>I use the return render_template to pass ""action_id"" to player.js, which is a function to process films using the API from Youtube, the code is :</p>  <pre><code>var PushPlayer = (function () {      var player = null;      function new_player() {         player = new YT.Player('yt-player', {             videoId: action_id,             }         });     }  (...) </code></pre>  <p>With <code>action_id</code>, i can have everything id of youtube's video.. but i don't know who pass the <code>action_id</code> from python to javascript..any idea?</p>  <p>Thanks!</p>"	"<p>It looks like you're using Tornado. You can write raw Python in a <a href=""http://tornado.readthedocs.org/en/latest/template.html"" rel=""nofollow"">Tornado template</a>. Your player.js file is a Tornado template in this case. You would want to update it like this:</p>  <pre><code>var PushPlayer = (function () {  var player = null;  function new_player() {     player = new YT.Player('yt-player', {         videoId: {{ action_id }},         }     }); } </code></pre>  <p>Anthing inside the double curly braces will be evaluated as Python by Tornado.</p>"
27319042	JavaScript email validation in form with python	javascript|python|forms|validation|flask	2014-12-05 15:16:50.353000 UTC	"<p>I am using the flask framework for a project I've been working on for a little while. In my messages.html page I have a form which when submitted sends it over to the python side to be stored in a text file. This is what I have so far. I can't quite understand why it is not wortking.</p>  <pre><code>&lt;form onsubmit=""return validateMyEmail();"" method=""post""&gt;             &lt;input type=""text"" placeholder=""Email""/ name=""email"" id=""email"" value="" {{request.form.email }}""&gt;              &lt;br&gt;             &lt;textarea rows=""14"" id=""comment"" name=""comment"" placeholder=""Comment"" value="" {{request.form.comment }}""&gt;&lt;/textarea&gt;             &lt;br&gt;&lt;br&gt;             &lt;input type=""submit"" value=""Send""&gt; &lt;/form&gt; </code></pre>  <p>And in my script I have:</p>  <pre><code>&lt;script&gt;     function validateMyEmail() {            var email = document.form.email.value;            if (email.indexOf(""@"") &lt; 1)             {                alert(""Not a valid email address"");                return false;            } else{                 return(true);            }          } &lt;/script&gt; </code></pre>  <p>It adds the email and message into my textfile even when I am inputting an incorrect email address. Any advice?</p>  <hr>  <p>Found what the problem was. I didn't have name=""form"" declared in the  tag.</p>"	
27335078	Webdriver in Python - Executing External JavaScript	javascript|python|selenium	2014-12-06 18:41:19.773000 UTC	"<p>I like to execute a JavaScript in webdriver in python. Unfortunately they way I try to implement it does not work. How can I correctly do it?</p>  <p>The respective documentary states: (<a href=""http://selenium-python.readthedocs.org/en/latest/api.html"" rel=""nofollow"">http://selenium-python.readthedocs.org/en/latest/api.html</a>)</p>  <pre><code>driver.execute_script(‘document.title’) </code></pre>  <p>So I wrote the following python code:</p>  <pre><code>driver = webdriver.Firefox()     driver.get(""http://google.com"") driver.execute_script(""./hello_world.js"")     driver.quit() </code></pre>  <p>With the respective hello_world.js within the same directory:</p>  <pre><code>alert('Hello, World!') </code></pre>  <p>Yet, unfortunately it yields a Message syntax error:</p>  <p>Log:</p>  <pre><code>Traceback (most recent call last):   File ""/sinonJS_test.py"", line 44, in &lt;module&gt;     sinon_test()   File ""/sinonJS_test.py"", line 35, in sinon_test     driver.execute_script(""./hello_world.js"")   File ""/usr/local/lib/python2.7/dist-packages/selenium/webdriver/remote/webdriver.py"",     line 401, in execute_script {'script': script, 'args':converted_args})['value']   File ""/usr/local/lib/python2.7/dist-packages/selenium/webdriver/remote/webdriver.py"",     line 173, in execute     self.error_handler.check_response(response)   File ""/usr/local/lib/python2.7/dist-packages/selenium/webdriver/remote/errorhandler.py"", line 166, in check_response raise exception_class(message, screen, stacktrace) selenium.common.exceptions.WebDriverException: Message: syntax error Stacktrace:     at handleEvaluateEvent (http://google.com:68:11) </code></pre>  <p>Solution attemps: 1) Tried to permute hello_world.js file path description, like adding/removing file suffix, adding/removing absolute file path. Not working.</p>  <p>Note: Indeed I researched several answered threads to similar questions here on SO, yet none of them appeared to solve my problem. E.g. some involving only very small scripts solved the issue by stating the JavaScript as a string within the actual python code. This is not a not an option to me, as I nee to execute bigger more complex JavaScripts (Sinon Fake Timers).</p>  <p>Like this one: <a href=""https://stackoverflow.com/questions/23228247/selenium-webdriver-execute-script-cant-execute-custom-methods-and-external-jav"">Selenium Webdriver: execute_script can&#39;t execute custom methods and external javascript files</a></p>"	"<p>You need to give a string containing javascript as argument to driver.execute_script. In your case if you want to execute a script written inside a file, just read the file and execute that. Like this</p>  <pre><code>driver.execute_script(open(""./hello_world.js"").read()) </code></pre>  <p>with appropriate location of hello_world.js</p>  <p>Hope this helps.</p>"
27365618	Javascript vs Python variables	javascript	2014-12-08 19:44:11.763000 UTC	"<p>I signed up for Codecademy and I am currently in the Javascript path. So, there is this lesson called ""Search Text for Your Name"" and it consists of writing a multi line string and including your name on it and then write a loop that finds your name and logs it to the console. This is the code:</p>  <pre><code>/*jshint multistr:true */  var text = ""Blah Blah Pedro Blah Blah Blah Blah Pedro \ Blah Blah Blah Blah Pedro Blah Blah"";  var myName = ""Pedro"";  var hits = [];  for (var i=0; i &lt; text.length; i++){     if (text[i] ===""P""){         for (var j = i; j &lt;(i + myName.length); j++){             hits.push(text[j]);         }         } }      if (hits.length===0){     console.log(""Your name wasn't found!""); } else {     console.log(hits); }     </code></pre>  <p>The part that confuses me is the second for loop. When I read ""A Byte of Python"",it said that when a <code>variable = anothervariable</code>, the variables point to the same place in the memory of the computer. But in the JavaScript code, if I change it, like instead of using <code>hits.push(text[j])</code> I use <code>hits.push(text[i])</code> or just switch them in any part of the loop the result is always different. Why is that so? How does Javascript treat this kind of variables?</p>"	"<p>That's a nested for-loop. The <code>outer</code> loop loops over all of the text. When it finds a particular letter, the 'inner' loop kicks off and runs until <code>j</code> gets to this number: <code>i + myName.length</code>. </p>  <p>The whole time that inner loop is running, <code>i</code> is not being incremented.</p>  <p>Think of like this. Imagine you have a (Python style) list of words:</p>  <pre><code> for someword in some_list:      for y in someword:          # This inner loop runs for EVERY x in some_list          # whatever runs here, runs for the `length` of someword      # Done with inner loop: back to dealing with outerloop      # Do something with someword, etc. </code></pre>  <p>The reason that switching <code>hits.push(text[j])</code> for <code>hits.push(text[i])</code> results in different <code>hits</code>, is that you are pushing different variables with different values: <code>i</code>, and <code>j</code>.</p>"
27365618	Javascript vs Python variables	javascript	2014-12-08 19:44:11.763000 UTC	"<p>I signed up for Codecademy and I am currently in the Javascript path. So, there is this lesson called ""Search Text for Your Name"" and it consists of writing a multi line string and including your name on it and then write a loop that finds your name and logs it to the console. This is the code:</p>  <pre><code>/*jshint multistr:true */  var text = ""Blah Blah Pedro Blah Blah Blah Blah Pedro \ Blah Blah Blah Blah Pedro Blah Blah"";  var myName = ""Pedro"";  var hits = [];  for (var i=0; i &lt; text.length; i++){     if (text[i] ===""P""){         for (var j = i; j &lt;(i + myName.length); j++){             hits.push(text[j]);         }         } }      if (hits.length===0){     console.log(""Your name wasn't found!""); } else {     console.log(hits); }     </code></pre>  <p>The part that confuses me is the second for loop. When I read ""A Byte of Python"",it said that when a <code>variable = anothervariable</code>, the variables point to the same place in the memory of the computer. But in the JavaScript code, if I change it, like instead of using <code>hits.push(text[j])</code> I use <code>hits.push(text[i])</code> or just switch them in any part of the loop the result is always different. Why is that so? How does Javascript treat this kind of variables?</p>"	"<p>It takes whatever is stored in 'i' and assigns it to the var 'j'.</p>  <p>More stuff to read about assignment: <a href=""http://www.w3schools.com/js/js_operators.asp"" rel=""nofollow"">http://www.w3schools.com/js/js_operators.asp</a></p>"
27373831	Python Bottle: Assigning a python variable to Javascript variable	javascript|python|templates|bottle	2014-12-09 07:50:27.990000 UTC	"<p>I am using  <a href=""http://bottlepy.org/docs/dev/index.html"" rel=""nofollow"">Bottle</a> web framework to render webpages. I am using bottle template engine to pass the variables from Python and then process them accordingly in the template file, which has embedded Python code. </p>  <p>Now the problem comes when I use <code>javascript</code> within my template. If I try to access my Python variable inside the <code>javascript</code> function, it fails with <code>TypeError: unhashable type: 'list'</code></p>  <p>I am calling my template in my python file:</p>  <pre><code>list_vals = [['Mushrooms', 3, 5], ['Onions', 1, 4], ['Olives', 1, 5], ['Zucchini', 1, 2]]     return bottle.template(os.path.join(os.path.dirname(__file__), 'templates', 'pizzaStats.html'), vals=list_vals) </code></pre>  <p>In my template file I am using the <code>vals</code> variable currently just to print inside the javascript, as shown below (just the script part of the template is shown):</p>  <pre><code>&lt;script type=""text/javascript""&gt;    // Load the Visualization API and the piechart package.   google.load('visualization', '1.0', {'packages':['corechart']});    // Set a callback to run when the Google Visualization API is loaded.   google.setOnLoadCallback(drawChart);    // Callback that creates and populates a data table,   // instantiates the pie chart, passes in the data and   // draws it.   function drawChart() {      // Create the data table.     var data = new google.visualization.DataTable();     %print ({{ vals }})     var graphdata = {{ vals }};      data.addColumn('string', 'Topping');     data.addColumn('number', 'Slices');     data.addColumn('number', 'pieces');     data.addRows(graphdata);      // Set chart options     // to smoothen the lines - 'curveType':'function'     var options = {'title':'How Much Pizza I Ate Last Night',                    'width':400,                    'height':300};      // Instantiate and draw our chart, passing in some options.     var chart = new google.visualization.LineChart(document.getElementById('chart_div'));     chart.draw(data, options);   } &lt;/script&gt; </code></pre>  <p>Even if I change the type of the variable from <code>list</code> to <code>dict</code> type, it still complains. <code>TypeError: unhashable type: 'dict'</code> The error is coming from the <code>print()</code> but if I remove the <code>print()</code> nothing happens and no graph is drawn, meaning the variable is not correctly assigned.</p>  <p>The end goal is to assign this variable to a javascript variable which will then plot the graph using Google APIs. What is the correct way to assign a Python variable to a javascript variable inside the bottle template? Thanks.</p>"	"<p>I think the problem is in the template side, when you render the <code>vals</code> argument. The rendered <code>vals</code> must be valid JavaScript code. By default, <em>bottle</em> auto-escapes HTML special characters, being single and double quotes among them. So, when you pass the Python <code>list_vals</code> list to the <code>template</code> function, it is evaluated to a string like this:</p>  <pre><code>""[['Mushrooms', 3, 5], ['Onions', 1, 4], ['Olives', 1, 5], ['Zucchini', 1, 2]]"" </code></pre>  <p>and automatically escaped by bottle afterwords like this:</p>  <pre><code>[[&amp;#039;Mushrooms&amp;#039;, 3, 5], [&amp;#039;Onions&amp;#039;, 1, 4], [&amp;#039;Olives&amp;#039;, 1, 5], [&amp;#039;Zucchini&amp;#039;, 1, 2]] </code></pre>  <p>producing an invalid JavaScript code.</p>  <p>The quick solution could be just <a href=""http://bottlepy.org/docs/dev/stpl.html#inline-expressions"" rel=""nofollow"">disabling the bottle auto-escaping</a> simply adding an exclamation mark to the template <code>vals</code> parameter:</p>  <pre><code>var graphdata = {{!vals}}; </code></pre>"
27384042	How to interact with Python routes in javascript?	javascript|jquery|python|flask|jinja2	2014-12-09 16:35:24.217000 UTC	"<p>I'm building a python/flask app with jinja templates that will hold some html/javascript applications. This particular one uses jQuery to show different html/js code within the same browser window. The problem that I'm having is that the show() function doesn't seem to see the python route where I'm rendering the code I want it to access.</p>  <p>The python routes:</p>  <pre><code>import os, datetime from flask import Flask, current_app, Blueprint, render_template, abort, request, flash, redirect, url_for, jsonify from flask.ext.login import (current_user, login_required, login_user, logout_user, confirm_login, fresh_login_required) from jinja2 import TemplateNotFound  import models from libs.User import User import random, string  leadership_app = Blueprint('leadership_app', __name__, template_folder='templates')  @leadership_app.route(""/"", methods=[""GET"", ""POST""]) @login_required def index():      return render_template('index.html')  @leadership_app.route(""/leadership/washington/"", methods=[""GET"", ""POST""]) @login_required def washington():      return render_template('/leadership/Globe.html')  @leadership_app.route(""/leadership/location/"", methods=[""GET"", ""POST""]) @login_required def location():      return render_template('/leadership/location.html') </code></pre>  <p>Globe.html (which is wrapped in jinja):</p>  <pre><code>if (locationClick == 0){ complete = ++complete locationClick = ++locationClick checkComplete(complete/4) } console.log(complete/4)  $('#location').attr('src', '/leadership/location/');  $(""#location"").show(); }) </code></pre>  <p>location.html is in templates>leadership</p>  <p>Edit:</p>  <p>Thanks to @Leandro Poblet I'm now using the $.get() function and it appears that I can see the route, but I can't seem to load location.html. I don't get any errors, but using developer tools in chrome I can see that the GET method is getting stuck on ""pending"" I've tried removing @login_required and making sure that all of the html files that I'm trying to $.show() have urls to load from so I know that there are no gaps there. </p>  <p>At this point I'm thinking that it may be that some .mp4 files I'm attempting to load are slowing everything down. They're not huge files (all under 100MB), so is there some way that I should be treating the video on the python end that will get them to load properly? </p>  <p>Here's the content of location.html:</p>  <pre><code>&lt;script src=""/static/washington/js/jquery.min.js""&gt;&lt;/script&gt; &lt;script src=""/static/washington/js/d3.v3.min.js""&gt;&lt;/script&gt; &lt;/head&gt; &lt;body&gt;   &lt;script&gt; var htmlContainer = d3.select(""body"")                                     htmlContainer.append(""img"") .attr('id','iimage1') .attr('class','zoom')    .attr(""src"",""/static/washington/img/Overlays-02.png"")  htmlContainer.append(""img"") .attr('id','iimage2') .attr('class','zoom')    .attr(""src"",""/static/washington/img/Overlays-03.png"")  htmlContainer.append(""img"") .attr('id','iimage3') .attr('class','zoom')    .attr(""src"",""/static/washington/img/Overlays-04.png"")  htmlContainer.append(""img"") .attr('id','iimage4') .attr('class','zoom')    .attr(""src"",""/static/washington/img/MapOverlay-01.png"")  var svgContainer = d3.select(""body"").append(""svg"")                                     .attr(""width"", window.innerWidth)                                     .attr(""height"", window.innerHeight)                                     .attr(""id"",""pad"")                                     .attr(""viewBox"",""0 0 2048 1536"")      svgContainer.append(""image"")    .attr('width', 2048)    .attr('height', 1536)    .attr(""xlink:href"",""/static/washington/img/LabledMap-01.png"")   svgContainer.append(""image"")         .attr(""id"",""complete"")         .attr('width', 141)         .attr('height', 133)         .attr(""x"",210)         .attr(""y"",1370)         .attr(""xlink:href"",""/static/washington/img/backarrow-06.png"")     svgContainer.append(""image"")         .attr(""id"",""help"")         .attr('width', 141)         .attr('height', 133)         .attr(""x"",40)         .attr(""y"",1370)         .attr(""xlink:href"",""/static/washington/img/info_button.png"")   svgContainer.append(""rect"")     .attr('class',""help"")     .style(""fill"",""red"")     .attr('width', 141)         .attr('height', 133)         .attr(""x"",40)         .attr(""y"",1370)     .attr(""opacity"","".01"")    svgContainer.append(""circle"")         .attr(""id"",""image1"")          .attr(""cx"",744)          .attr(""cy"",408)          .attr(""r"",123)          .style(""fill"",""white"").style(""opacity"","".01"")  svgContainer.append(""circle"")         .attr(""id"",""image2"")          .attr(""cx"",1044)          .attr(""cy"",1164)          .attr(""r"",123)          .style(""fill"",""white"").style(""opacity"","".01"")  svgContainer.append(""circle"")         .attr(""id"",""image3"")          .attr(""cx"",1139)          .attr(""cy"",708)           .attr(""r"",123)          .style(""fill"",""white"").style(""opacity"","".01"")     d3.xml(""/static/washington/data/blank.svg"", ""image/svg+xml"", function(xml) {    document.getElementById(""pad"").appendChild(xml.documentElement); })     $(document).ready(function() {    $(""#complete"").on(""click touchstart"",function(e){   e.preventDefault(); var ifr = parent.document.getElementById(""location""); $(ifr).hide(); })  $("".zoom"").on(""click touchstart"",function(e){   e.preventDefault(); $(this).fadeOut(); d3.select(""#pad"").transition().attr(""viewBox"",""0 0 2048 1536"") })  $("".prompt"").on(""click touchstart"",function(e){ e.preventDefault(); $(this).fadeOut(); d3.select(""#pad"").transition().attr(""viewBox"",""0 0 2048 1536"") })  $("".zoom"").hide();   $(""#image1"").on(""click touchstart"",function(e){ e.preventDefault(); //d3.select(""#pad"").transition().attr(""viewBox"",""450 200 400 375"") $(""#iimage1"").delay('200').fadeIn() })  $(""#image2"").on(""click touchstart"",function(e){ e.preventDefault(); //d3.select(""#pad"").transition().attr(""viewBox"",""800 1000 400 375"") $(""#iimage2"").delay('200').fadeIn() })  $(""#image3"").on(""click touchstart"",function(e){ e.preventDefault(); //d3.select(""#pad"").transition().attr(""viewBox"",""900 550 400 375"") $(""#iimage3"").delay('200').fadeIn() })  $("".help"").on(""click touchstart"",function(e){   e.preventDefault(); $(""#iimage4"").delay('200').fadeIn() })  })      &lt;/script&gt;  &lt;/body&gt; </code></pre>"	"<p>You should use the <a href=""http://api.jquery.com/jquery.get/"" rel=""nofollow"">$.get()</a> function to do that:</p>  <pre><code>if (locationClick == 0){ complete = ++complete locationClick = ++locationClick checkComplete(complete/4) } console.log(complete/4) $.get('/leadership/location/', function(data) { $('#location').htm(data); $(""#location"").show(); }); }) </code></pre>  <p>Also, in flask's blueprints you can avoid writing the same prefix over and over by adding <strong>url_prefix</strong> to your blueprint instance like this:</p>  <pre><code>leadership_app = Blueprint('leadership_app', __name__, url_prefix='/leadership', template_folder='templates') </code></pre>"
27391607	"Equivalent of Javascript ""match"" in python"	javascript|python|match	2014-12-10 00:47:59.433000 UTC	"<p>I have a method for extracting all the ""words"" from a string in javascript:</p>  <pre><code>mystring.toLowerCase().match(/[a-z]+/g); </code></pre>  <p>I'd like to convert that same logic (create an array of ""words"" from my string), but in python. How can I achieve that?</p>"	"<p>Use <a href=""https://docs.python.org/2/library/re.html#re.findall&#39;"" rel=""noreferrer""><code>findall()</code></a>, which is similar to <code>String.prototype.match()</code>.</p>  <pre><code>import re regex = r""[a-z]+"" matches = re.findall(regex, strToScan) </code></pre>"
27439655	How to make a web GUI for Python 3 (Javascript communications)?	javascript|python|user-interface|python-3.x|web	2014-12-12 08:34:04.943000 UTC	"<p>I've made a program in Python 2.7 with a wxWidgets GUI. Now, I want to improve it by making a web GUI, make it multi-platform and port it in Python 3.4. For this purpose, I have to make Javascript and Python communicate (i.e : I want my Python to react on some event on the page and I want my page to react on some Python actions).</p>  <p>I don't really know how to do it, and I don't even know if it's possible. I've find some libraries, but some are just for Python 2 (pyjamas), and some don't provide what I search, or I don't search enough ^^ (web2py, turbogear, cherrypy).</p>  <p>I would like to find a complete library that ease this communication, and that is rather known and supported, with a compete documentation.</p>  <p>Maybe, there are other ways to do such a web GUI, but I don't find them.</p>  <p>Thanks !</p>"	<p>I guess what you want is a single page application.</p>  <p>I would suggest to wrap your python code in a RESTful Api using a python web framework like Flask. This would isolate your python code from the presentation layer.</p>  <p>You could then write the UI in html and javascript and use AJAX to call your python api from javascript.</p>
27515583	"path for including css, javascript in python flask application?"	python|flask	2014-12-16 23:05:22.077000 UTC	"<p>I am using code from <a href=""https://github.com/dfm/flask-d3-hello-world"" rel=""nofollow"">this github project</a> to create a python flask application with d3js charts. The templates/index.html file contains css and js code written in the HTML file. But, if I try to put that code in external files and reference that in my index.html, the file is untraceable. I tried different paths (templates folder and also the root folder) but none of them worked. </p>  <p>Please suggest on how I should use external css and js files.</p>  <p>This is my templates/index.html code:</p>  <pre><code>&lt;!DOCTYPE HTML&gt; &lt;html&gt; &lt;head&gt;     &lt;meta http-equiv=""content-type"" content=""text/html; charset=utf-8""&gt;      &lt;title&gt;flask+d3 Hello World&lt;/title&gt;      &lt;script src=""http://d3js.org/d3.v2.js""&gt;&lt;/script&gt;     &lt;link rel=""stylesheet"" type=""text/css"" href=""mystyle.css""&gt;     &lt;link rel=""stylesheet"" type=""text/css"" href=""templates/mystyle.css""&gt;     &lt;link rel=""stylesheet"" type=""text/css"" href=""../mystyle.css""&gt;  &lt;/head&gt; &lt;body&gt;      &lt;h1&gt;Hello World using d3.js &amp;amp; Flask&lt;/h1&gt;      &lt;div id=""info""&gt;         &lt;div id=""point-info""&gt;             Click on a point.         &lt;/div&gt;     &lt;/div&gt;      &lt;div id=""plot""&gt;     &lt;/div&gt;      &lt;script&gt;          // Set up the plot window.         var margin = 80;         var w = 700 - 2 * margin, h = 500 - 2 * margin;         var svg = d3.select(""#plot"").append(""svg"")                         .attr(""width"", w + 2 * margin)                         .attr(""height"", h + 2 * margin)                     .append(""svg:g"")                         .attr(""transform"", ""translate("" + margin + "", "" + margin + "")"");          // The colorbar.         var color = d3.scale.quantize()                       .range([""#156b87"", ""#876315"", ""#543510"", ""#872815""])                       .domain([0, 1]);          // Axes scaling functions.         var xscale = d3.scale.linear().range([0, w]);         var yscale = d3.scale.linear().range([h, 0]);          // The axes objects themselves.         var xaxis = d3.svg.axis().scale(xscale).ticks(8);         var yaxis = d3.svg.axis().scale(yscale).ticks(8).orient(""left"");          svg.append(""svg:g"").attr(""class"", ""x axis"")                            .attr(""transform"", ""translate(0, "" + h + "")"");         svg.append(""svg:g"").attr(""class"", ""y axis"");          // Show the information about a particular point.         var show_info = function (d) {             d3.select(""#point-info"").text(""This is point "" + d._id + "". ""                 + ""It has the coordinates ("" + d.x + "", "" + d.y + "")."");         };          // Load the data.         var callback = function (data) {             // Rescale the axes.             xscale.domain([d3.min(data, function (d) { return d.x; }) - 0.05,                            d3.max(data, function (d) { return d.x; }) + 0.05]);             yscale.domain([d3.min(data, function (d) { return d.y; }) - 0.05,                            d3.max(data, function (d) { return d.y; }) + 0.05]);              // Display the axes.             svg.select("".x.axis"").call(xaxis);             svg.select("".y.axis"").call(yaxis);              // Insert the data points.             svg.selectAll(""circle"").data(data).enter()                 .append(""circle"")                     .attr(""id"", function (d) { return d._id; })                     .attr(""cx"", function (d) { return xscale(d.x); })                     .attr(""cy"", function (d) { return yscale(d.y); })                     .attr(""r"", function (d) { return 2 * Math.sqrt(d.area); })                     .style(""fill"", function (d) { return color(d.color); })                     .on(""mousedown"", show_info);         };          d3.json(""/data"", callback);      &lt;/script&gt;  &lt;/body&gt; &lt;/html&gt; </code></pre>  <p>This is my mystyle.css code:</p>  <pre><code>path.line {     fill: none;     stroke: #666;     stroke-width: 1.5px; }  .domain {     stroke-width: 1px; }  circle {     cursor: pointer; }  .axis {     shape-rendering: crispEdges; }  .axis line, .axis path {     stroke-width: 1px;     stroke: #000;     fill: none; }  .tooltip {     display: none; }  .tooltip.active {     display: block; }  .tooltip rect {     fill: #ff0000; } </code></pre>"	"<p>Simple answer is: create a folder named 'static', place your static files in it and their url path in HTML is '/static/your_file_path/your_file_name.extension'.</p>  <p>Here is the documenation on <a href=""http://flask.pocoo.org/docs/0.10/quickstart/#static-files"" rel=""nofollow"">static file</a> where you can find the authentic answer. </p>  <p>If you would like to change the default 'static' folder and also change default static file url path, you can read these <a href=""http://flask.pocoo.org/docs/0.10/api/#application-object"" rel=""nofollow"">application startup configurations</a></p>"
27538840	Python Flask templates use {{}} can't mix javascript var	javascript|python|templates|flask|jinja2	2014-12-18 03:35:44.033000 UTC	"<p>Here is my problem. PictureLenth is my picture array length, and ProductImage is a list. I can't use now to point my array address on ProductImage. How can I use javascript var on {{}}?</p>  <pre><code>lenth = {{ PictureLenth }}-1; now = 0;  function t_setInterval() { window.intervalParam = window.setInterval(function() { var date = new Date();    if (lenth&gt;now)    {now = now + 1;}    else    {now = 0;}     var img = document.getElementById(""image"");     img.src=""data:image/png;base64, {{ ProductImage[now] }}"";     return false; }, 4000); } </code></pre>"	"<pre><code>lenth = {{ PictureLenth }}-1; now = 0;  function t_setInterval() { window.intervalParam = window.setInterval(function() { var date = new Date();    if (lenth&gt;now)    {now = now + 1;}    else    {now = 0;}     var ProductImage = {{ProductImage|safe}};     var img = document.getElementById(""image"");     img.src=""data:image/png;base64,""+ProductImage[now];     return false; }, 4000); } </code></pre>"
27538840	Python Flask templates use {{}} can't mix javascript var	javascript|python|templates|flask|jinja2	2014-12-18 03:35:44.033000 UTC	"<p>Here is my problem. PictureLenth is my picture array length, and ProductImage is a list. I can't use now to point my array address on ProductImage. How can I use javascript var on {{}}?</p>  <pre><code>lenth = {{ PictureLenth }}-1; now = 0;  function t_setInterval() { window.intervalParam = window.setInterval(function() { var date = new Date();    if (lenth&gt;now)    {now = now + 1;}    else    {now = 0;}     var img = document.getElementById(""image"");     img.src=""data:image/png;base64, {{ ProductImage[now] }}"";     return false; }, 4000); } </code></pre>"	"<p>This is because Jinja doesn't have any access to <code>now</code> when it runs on the server side and when the JavaScript runs on the client side the string is static and will never change.  The solution is to provide <code>ProductImage</code> as a JavaScript variable using <a href=""http://flask.pocoo.org/docs/0.10/templating/#standard-filters"" rel=""nofollow"">Flask's <code>tojson</code> filter</a>:</p>  <pre><code>var images = {{ ProductImage | tojson | safe }},     length = images.length - 1,     now = 0;  function t_setInterval() {   window.intervalParam = window.setInterval(function() {     if (length &gt; now) now = now + 1;     else now = 0;     var img = document.getElementById(""image"");     img.src = ""data:image/png;base64, "" + images[now];     return false;   }, 4000); } </code></pre>"
27573702	Executing javascript in python when condition is met	javascript|python|tornado	2014-12-19 20:49:37.807000 UTC	"<p>I have a webchat application which is running on python, I'm trying to run a different javascript function for each room, something similar to what I've done with the ""active"" class in css.</p>  <pre><code>&lt;li {% if room == 1 %}class=""active""{% end %}&gt;&lt;a href=""/room/1""&gt;Room 1&lt;/a&gt;&lt;/li&gt; </code></pre>  <p>Here's my attempt at creating a solution:</p>  <pre><code>&lt;li {% if room == 1 %}click=""myFunction()""{% end %}&gt;&lt;a href=""/room/1""&gt;Room 1&lt;/a&gt;&lt;/li&gt; </code></pre>  <p>Basically, when someone visits room 1, the myFunction() javascript will be executed. Any ideas as to how one could achieve this?</p>"	"<p>Based on that this is working exactly how you want:</p>  <pre><code>&lt;li {% if room == 1 %}class=""active""{% end %}&gt;&lt;a href=""/room/1""&gt;Room 1&lt;/a&gt;&lt;/li&gt; </code></pre>  <p>Then to make the JS example work you want:</p>  <pre><code>&lt;li {% if room == 1 %}onclick=""myFunction()""{% end %}&gt;&lt;a href=""/room/1""&gt;Room 1&lt;/a&gt;&lt;/li&gt; </code></pre>  <p>Notice that it's <code>onclick</code> not just <code>click</code>. If you were using <code>addEventListener</code> it would just be <code>click</code>, but when putting an event listener on an element directly like that, it's always (to the best of my knowledge) preceded by on, hence: <code>onclick</code>.</p>"
27652536	How do I call python program (which has command line arguments) from PHP or Javascript?	javascript|php|python	2014-12-26 03:27:22.840000 UTC	"<p>My Python Program is, </p>  <pre><code>from xbee import ZigBee import serial import sys  sPort = serial.Serial(""/dev/ttyAMA0"", 9600) xbee = ZigBee(sPort)  targStr = sys.argv[1] data = str(targStr) print (data) destAdd = ""\x00\x13\xa2\x00\x40\xa9\xcc\xad"" xbee.send(""tx"",dest_addr_long=destAdd,dest_addr=""\xff\fe"",data=data) print (""Sent!"") </code></pre>  <p>When I execute this python program on linux shell, it works all great! How do execute this program on certain event from HTML Page (Either using Javascript, AJAX or PHP) ?</p>"	"<p>You need to embed this code into some Python web server - for example <a href=""http://flask.pocoo.org"" rel=""nofollow"">Flask</a>.</p>  <p>See example bellow - xbee_test.py (it is very raw, don't use that in production environment):</p>  <pre><code>from flask import Flask app = Flask(__name__)  from xbee import ZigBee import serial  sPort = serial.Serial(""/dev/ttyAMA0"", 9600) xbee = ZigBee(sPort)  @app.route(""/&lt;data&gt;"") def index(data):     destAdd = ""\x00\x13\xa2\x00\x40\xa9\xcc\xad""     xbee.send(""tx"",dest_addr_long=destAdd,dest_addr=""\xff\fe"",data=data)     return ""Sent!""  if __name__ == ""__main__"":     app.run() </code></pre>  <p>Now, when you run this in Python and hit http //localhost:5000/test_data you get your code executed.</p>  <p>Embedding this into HTML page as e.g. AJAX call is from this point on uncomplicated.</p>  <p>Here is how to obtain Flask installation and run that:</p>  <pre><code>$ pip install Flask $ python xbee_test.py  * Running on http://localhost:5000/ </code></pre>"
27656283	Clean the tags and quotes from a python/django string and make it a valid javascript string	javascript|python|regex|django|string	2014-12-26 11:07:48.427000 UTC	"<p>I have a text field named description in my django Model. I have stored a string in it that is  </p>  <pre><code>&lt;p&gt;Early cricket was at some time or another described as ""a club striking a ball  (like) the ancient games of club-ball, stool-ball, trap-ball, stob-ball"". &lt;sup id=""cite_ref-MTG_3-0"" class=""reference""&gt;&lt;a href=""http://en.wikipedia.org/wiki/Cricket#cite_note-MTG-3""&gt;&lt;span&gt;[&lt;/span&gt;3&lt;span&gt;]&lt;/span&gt;&lt;/a&gt;&lt;/sup&gt;  Cricket can definitely be traced back to Tudor times in early 16th-century England.  Written evidence exists of a game known as &lt;em&gt;creag&lt;/em&gt; being played by &lt;a title=""Edward II of England"" href=""http://en.wikipedia.org/wiki/Edward_II_of_England""&gt;Prince Edward&lt;/a&gt;,  the son of &lt;a title=""Edward I of England"" href=""http://en.wikipedia.org/wiki/Edward_I_of_England""&gt;Edward I (Longshanks)&lt;/a&gt;,  at Newenden, Kent in 1301&lt;sup id=""cite_ref-4"" class=""reference""&gt;&lt;a href=""http://en.wikipedia.org/wiki/Cricket#cite_note-4""&gt; &lt;span&gt;[&lt;/span&gt;4&lt;span&gt;]&lt;/span&gt;&lt;/a&gt;&lt;/sup&gt; and there has been speculation,  but no evidence, that this was a form of cricket.&lt;/p&gt; </code></pre>  <p>I want to clean this string, want to remove all the HTML tags, double quotes and single quotes so that i can assign this string to a javascript variable. for this i wrote a template tag which returns the string after striping al html tags and replacing all the single and double quotes with None.  </p>  <pre><code>def clean_text(html_text):     html=strip_tags(html_text)     html=html.replace('""','')     html= html.replace(""'"",'')     print html     return str(html) </code></pre>  <p>but when I am trying to assign this string to a javascript variable i am getting error  </p>  <pre><code>SyntaxError: missing ) after argument list console.log(Early cricket was at some time or another described as a club stri </code></pre>  <p>I tried toString() method also but same result. I tried to assign this to a variable but got the same error  </p>  <pre><code>var description = {{object.description|clean_text }} SyntaxError: missing ; before statement A number of other words have been suggested as sources for the </code></pre>  <p>register.filter('clean_text',clean_text)</p>"	"<p>You have to wrap it in quotes.</p>  <pre><code>var description = ""{{object.description|clean_text }}"" </code></pre>  <p>However there is already a built-in filter which does exactly what you want, <a href=""https://docs.djangoproject.com/en/1.7/ref/templates/builtins/#escapejs"" rel=""nofollow""><code>escapejs</code></a>:</p>  <pre><code>var description = ""{{object.description|escapejs }}"" </code></pre>"
27664912	"Javascript to Python - Understanding how classes, methods and properties work"	python|python-2.7|inheritance|methods|scrapy	2014-12-27 06:15:03.657000 UTC	"<p>In Javascript, there are a variety of ways to allow for inheritance of methods. Below is a hybrid example using a few of the approaches:</p>  <pre><code>A = {     name: 'first',     wiggle: function() { return this.name + "" is wiggling"" },     shake: function() { return this.name + "" is shaking"" } }  B = Object.create(A) B.name = 'second' B.bop = function() { return this.name + ' is bopping' }   C = function(name) {     obj = Object.create(B)     obj.name = name     obj.crunk = function() { return this.name + ' is crunking'}      return obj }  final = new C('third') </code></pre>  <p>This gives me the following inheritance hierarchy.</p>  <p><img src=""https://i.stack.imgur.com/akiXu.png"" alt=""enter image description here""></p>  <p>One of the important things to notice is the <code>name</code> property for each object.  When running a method, even one far down the prototype chain, the local context defined by the <code>this</code> keyword ensures that the <em>localmost</em> property/variable is used.</p>  <p><img src=""https://i.stack.imgur.com/aVx1N.png"" alt=""enter image description here""></p>  <p>I've recently moved on to Python but I'm having trouble understanding how subclasses access superclass methods, and likewise how variable scoping / object properties work.</p>  <p>I had created a Spider in Scrapy that (quite successfully) scraped 2000+ pages on a single domain and parsed them into a format I need.  Lots of the helpers where just functions within the main <code>parse_response</code> method, which I could use directly on the data.   The original spider looked something like this:</p>  <pre><code>from scrapy.contrib.linkextractors.sgml import SgmlLinkExtractor from spider_scrape.items import SpiderItems  class ScrapeSpider(CrawlSpider):      name              =   ""myspider""     allowed_domains   =   [""domain.com.au""]     start_urls        =   ['https://www.domain.com.au/']     rules             =   (Rule(SgmlLinkExtractor(allow=()),                                                    callback=""parse_items"",                                                    follow=True), )      def parse_items(self, response):         ... </code></pre>  <p>The callback function parse_items contains the logic that deals with the response for me.  When I generalised everything, I ended up with the following (with the intent to use this on multiple domains):</p>  <pre><code>#Base  class BaseSpider(CrawlSpider):     """"""Base set of configuration rules and helper methods""""""      rules = (Rule(LinkExtractor(allow=()),                                     callback=""parse_response"",                                     follow=True),)      def parse_response(self, response):             ...          def clean_urls(string):           """"""remove absolute URL's from hrefs, if URL is form an external domain do nothing""""""           for domain in allowed_domains:               string = string.replace('http://' + domain, '')               string = string.replace('https://' + domain, '')           if 'http' not in string:               string = ""/custom/files"" + string           return string   #Specific for each domain I want to crawl class DomainSpider(BaseSpider):      name = 'Domain'     allowed_domains = ['Domain.org.au']     start_urls      = ['http://www.Domain.org.au/'                       ,'http://www.Domain.org.au/1'] </code></pre>  <p>When I ran this via the Scrapy command line, I had the following error in the console:</p>  <p><img src=""https://i.stack.imgur.com/zh91z.png"" alt=""enter image description here""></p>  <p>After some testing, changing the list comprehension to this caused it to work: <code>for domain in self.allowed_domains:</code></p>  <p>All good, that seems mighty similar to the <code>this</code> keyword in Javascript - I'm using properties of the object to get the values.  There are many more variables/properties that will hold the required XPath expressions for the scrape:</p>  <pre><code>class DomainSpider(BaseSpider):      name = 'Domain'     page_title      =      '//title'     page_content    =      '//div[@class=""main-content""]' </code></pre>  <p>Changing the other parts of the Spider to mimic that of the allowed_domains variable, I received this error:</p>  <p><img src=""https://i.stack.imgur.com/KeNPb.png"" alt=""enter image description here""></p>  <p>I tried setting the property differently in a few ways, including using <code>self.page_content</code> and/or an <code>__init__(self)</code> constructor with no success but different errors.</p>  <p>I'm completely lost what is happening here.  The behaviour I expect to happen is:</p>  <ol> <li>When I run the <code>scrapy crawl &lt;spider name&gt;</code> from the terminal, it instantiates the DomainSpider class</li> <li>Any class constants in that class become available to all methods that it is has inherited, similar to Javascript and its <code>this</code> keyword</li> <li>Any class constants from its super class(es) are ignored due to context.</li> </ol>  <p>If someone could</p>  <ul> <li>Explain the above to me</li> <li>Point me to something more meaty than LPTHW but not TDD with Python that would be amazing.</li> </ul>  <p>Thanks in advance.</p>"	"<p>I'm not familiar with JavaScript but questions similar to yours always include an answer that suggests you have to learn the way to do it in Python and not try to force Python to be like your <em>other</em> language. Trying to re-create your Javascript-esque style in Python I came up with this:</p>  <pre><code>class A(object):     def __init__(self):         self.name = 'first'     def wiggle(self):         return self.name + ' is wiggling'     def shake(self):         return self.name + ' is shaking' </code></pre>  <p>Create an instance of <code>A</code>, change its name and add a method attribute <em>to the instance</em></p>  <pre><code>b = A() b.name = 'second' b.bop = lambda : b.name + ' is bopping' </code></pre>  <p>A function that returns an instance of <code>A</code>, with the additional attribute <code>crunk</code>. I don't think this is true to your example, <code>thing</code> will not have a <code>bop</code> method, although another statement in the function could add one.</p>  <pre><code>def c(name):     thing = A()     thing.name = name     thing.crunk = lambda : thing.name + ' is crunking'     return thing  final = c('third') </code></pre>  <p>There isn't any inheritance going on, just instances of <code>A</code> with additional attributes.  You get the following result:</p>  <pre><code>&gt;&gt;&gt;  &gt;&gt;&gt; b.name 'second' &gt;&gt;&gt; b.bop() 'second is bopping' &gt;&gt;&gt; b.shake() 'second is shaking' &gt;&gt;&gt; b.wiggle() 'second is wiggling' &gt;&gt;&gt;  &gt;&gt;&gt; final.name 'third' &gt;&gt;&gt; final.crunk() 'third is crunking' &gt;&gt;&gt; final.shake() 'third is shaking' &gt;&gt;&gt; final.wiggle() 'third is wiggling' &gt;&gt;&gt; final.bop()  Traceback (most recent call last):   File ""&lt;pyshell#32&gt;"", line 1, in &lt;module&gt;     final.bop() AttributeError: 'A' object has no attribute 'bop' &gt;&gt;&gt;  </code></pre>  <p>In Python you would do it like this:</p>  <p>Class <code>A</code> with a default argument for the <code>name</code> attribute and two methods that will be bound to an instance of <code>A</code>.  <code>name</code> is an <strong>instance</strong> attribute because it is defined in <code>__init__</code>. Only <em>instances</em> of <code>A</code> will have a <code>name</code> attribute - <code>A.name</code> will raise an AttributeError.</p>  <pre><code>class A(object):     def __init__(self, name = 'first'):         self.name = name     def wiggle(self):         return self.name + ' is wiggling'     def shake(self):         return self.name + ' is shaking' </code></pre>  <p><code>Foo</code> inherits everything from <code>A</code> and defines an additional attribute <code>bop</code>.</p>  <pre><code>class Foo(A):     def bop(self):         return self.name + ' is bopping' </code></pre>  <p><code>Bar</code> inherits everything from <code>Foo</code> and defines an additional attribute <code>crunk</code></p>  <pre><code>class Bar(Foo):     def crunk(self):         return self.name + ' is crunking' </code></pre>  <p><code>Baz</code> inherits everything from <code>Bar</code> and overides <code>wiggle</code></p>  <pre><code>class Baz(Bar):     def wiggle(self):         return 'This Baz instance, ' + self.name + ', is wiggling'  foo = Foo('second') bar = Bar('third') baz = Baz('fourth') </code></pre>  <p>Usage:</p>  <pre><code>&gt;&gt;&gt;  &gt;&gt;&gt; foo.name 'second' &gt;&gt;&gt; foo.bop() 'second is bopping' &gt;&gt;&gt; foo.shake() 'second is shaking' &gt;&gt;&gt; foo.wiggle() 'second is wiggling' &gt;&gt;&gt;  &gt;&gt;&gt; bar.name 'third' &gt;&gt;&gt; bar.bop() 'third is bopping' &gt;&gt;&gt; bar.shake() 'third is shaking' &gt;&gt;&gt; bar.wiggle() 'third is wiggling' &gt;&gt;&gt; bar.crunk() 'third is crunking' &gt;&gt;&gt;  &gt;&gt;&gt; baz.wiggle() 'This Baz instance, fourth, is wiggling' &gt;&gt;&gt; </code></pre>  <p>The classes in these examples have method attributes that are only <em>valid</em> for instances of the class - the methods need to be <em>bound</em> to an instance.  I didn't include any examples for class methods or static methods which do not need to be bound to an instance - there are some good answers to <a href=""https://stackoverflow.com/q/136097/2823755"">What is the difference between @staticmethod and @classmethod in Python?</a></p>  <pre><code>&gt;&gt;&gt; A.wiggle &lt;unbound method A.wiggle&gt; &gt;&gt;&gt; A.wiggle()  Traceback (most recent call last):   File ""&lt;pyshell#41&gt;"", line 1, in &lt;module&gt;     A.wiggle() TypeError: unbound method wiggle() must be called with A instance as first argument (got nothing instead) &gt;&gt;&gt; Bar.crunk &lt;unbound method Bar.crunk&gt; &gt;&gt;&gt; Bar.crunk()  Traceback (most recent call last):   File ""&lt;pyshell#43&gt;"", line 1, in &lt;module&gt;     Bar.crunk() TypeError: unbound method crunk() must be called with Bar instance as first argument (got nothing instead) &gt;&gt;&gt;  </code></pre>"
27681731	Python - Requests/RoboBrowser - ASPX POST JavaScript	javascript|python|asp.net|beautifulsoup|robobrowser	2014-12-28 23:33:24.630000 UTC	"<p>I am porting a bash script that uses curl and POSTs the payloads in the code to the URL's and works. The basic issue is that, with robobrowser, I'm running into trouble posting using the page forms.</p>  <p>Stepping through the site:</p>  <ul> <li>Login to /SubLogin.aspx</li> <li>Successful login redirects /OptionsSummary.aspx</li> <li>GET /FindMe.aspx with params</li> <li>POST /FindMe.aspx button ""Phone Lists"" (page should then load ""Phone Lists"" table with a item ""Work"")</li> <li>Selecting the ""Work"" item executes a POST to /PhoneLists.aspx (this should then load a table ""Work"" with list of users.</li> </ul>  <p>I have been able to successfully authenticate to the site and perform GETs with both RoboBrowser and Requests+bs4 however I'm confused on POSTing back to the pages themselves.</p>  <p>Using RoboBrowser (liboncall.py)</p>  <pre><code>#!/usr/bin/python  from robobrowser import RoboBrowser from bs4 import BeautifulSoup as BS  oc_mailbox = '123456' oc_password_hashed = 'ABCDEFG'  base_uri = 'http://example.com' auth_uri = oc_base_uri + '/SubLogin.aspx' find_uri = oc_base_uri + '/FindMe.aspx' phne_uri = oc_base_uri + '/PhoneLists.aspx'   p_auth_payload = {         'SubLoginControl:javascriptTest': 'true',         'SubLoginControl:mailbox': mailbox,         'SubLoginControl:phoneNumber': '',         'SubLoginControl:password': password_hashed,         'SubLoginControl:btnLogOn': 'Logon',         'SubLoginControl:webLanguage': 'en-US',         'SubLoginControl:initialLanguage': 'en-US',         'SubLoginControl:errorCallBackNumber': 'Entered telephone number contains non-dialable characters.',         'SubLoginControl:cookieMailbox': 'mailbox',         'SubLoginControl:cookieCallbackNumber': 'callbackNumber',         'SubLoginControl:serverDomain': ''         }  p_find_payload = {         'FindMeControl:enableFindMe': 'on',         'FindMeControl:MasterDataControl:focusElement': '',         'FindMeControl:MasterDataControl:masterList:_ctl0:enabled': 'on',         'FindMeControl:MasterDataControl:masterList:_ctl0:itemGuid': '',         'FindMeControl:MasterDataControl:hidSelectedScheduleName': '',         'FindMeControl:MasterDataControl:hidbtnStatus': '',         'FindMeControl:MasterDataControl:hidScheduleXML': '',         'FindMeControl:MasterDataControl:tempScheduleXML': '',         'FindMeControl:MasterDataControl:hidSelectedScheduleGUID': '',         'FindMeControl:MasterDataControl:hidChangedScheduleList': '',         'FindMeControl:btnPhoneLists': 'Phone Lists',         'FindMeControl:enableFindMeHidden': '',         'FindMeControl:applySet': 'false'         }  p_phne_payload = {         '__EVENTARGUMENT': '',         '__EVENTTARGET': 'PhoneListsControl$MasterDataControl$masterList$_ctl0$SelectButton',         'PhoneListsControl:MasterDataControl:focusElement': '',         'PhoneListsControl:MasterDataControl:masterList:_ctl0:itemGuid': '',         'PhoneListsControl:MasterDataControl:hidSelectedScheduleName': '',         'PhoneListsControl:MasterDataControl:hidbtnStatus': '',         'PhoneListsControl:MasterDataControl:hidScheduleXML': '',         'PhoneListsControl:MasterDataControl:tempScheduleXML': '',         'PhoneListsControl:MasterDataControl:hidSelectedScheduleGUID': '',         'PhoneListsControl:MasterDataControl:hidChangedScheduleList': '',         'PhoneListsControl:applySet': 'false'         }   def auth(mailbox, password):     browser = RoboBrowser(history=False)     browser.open(oc_auth_uri)      signin = browser.get_form(id='aspnetForm')     signin['SubLoginControl:mailbox'].value = mailbox     signin['SubLoginControl:password'].value = password     signin['SubLoginControl:javascriptTest'].value = 'true'     signin['SubLoginControl:btnLogOn'].value = 'Logon'     signin['SubLoginControl:webLanguage'].value = 'en-US'     signin['SubLoginControl:initialLanguage'].value = 'en-US'     signin['SubLoginControl:errorCallBackNumber'].value = 'Entered+telephone+number+contains+non-dialable+characters.'     signin['SubLoginControl:cookieMailbox'].value = 'mailbox'     signin['SubLoginControl:cookieCallbackNumber'].value = 'callbackNumber'     signin['SubLoginControl:serverDomain'].value = ''      browser.submit_form(signin)     return browser </code></pre>  <p>Login to site and show URL to verify we're in:</p>  <pre><code>In [20]: from liboncall import * In [21]: m = auth(oc_mailbox, oc_password_hashed)  In [22]: m.url Out[22]: u'http://example.com/OptionsSummary.aspx' </code></pre>  <p>Open ""/FindMe.aspx"":</p>  <pre><code>In [24]: m.open(find_uri)  In [25]: m.url Out[25]: u'http://example.com/FindMe.aspx' </code></pre>  <p>Initially ""/FindMe.aspx"" will load a form and a button ""Phone Lists"", (<code>FindMeControl:btnPhoneLists</code>).</p>  <pre><code>In [26]: m.select('title') Out[26]: [&lt;title&gt;Find Me&lt;/title&gt;]  In [27]: form_find_a = m.get_form(action=""FindMe.aspx"")  In [28]: for i in form_find_a.keys():     print(i)     ....:     __VIEWSTATE     __EVENTVALIDATION     FindMeControl:enableFindMe     FindMeControl:MasterDataControl:focusElement     FindMeControl:MasterDataControl:masterList:_ctl0:enabled     FindMeControl:MasterDataControl:masterList:_ctl0:itemGuid     FindMeControl:MasterDataControl:btnAdd     FindMeControl:MasterDataControl:btnDelete     FindMeControl:MasterDataControl:btnRename     FindMeControl:MasterDataControl:btnCancel     FindMeControl:MasterDataControl:btnEnter     FindMeControl:MasterDataControl:btnUpdate     FindMeControl:MasterDataControl:hidSelectedScheduleName     FindMeControl:MasterDataControl:hidbtnStatus     FindMeControl:MasterDataControl:hidScheduleXML     FindMeControl:MasterDataControl:tempScheduleXML     FindMeControl:MasterDataControl:hidSelectedScheduleGUID     FindMeControl:MasterDataControl:hidChangedScheduleList     FindMeControl:btnApply     FindMeControl:btnSchedules     FindMeControl:btnPhoneLists     FindMeControl:enableFindMeHidden     FindMeControl:applySet </code></pre>  <p>Remove un-needed form fields, fill out form and submit:</p>  <pre><code>In [29]: find_remove = ( 'FindMeControl:MasterDataControl:btnAdd', 'FindMeControl:MasterDataControl:btnDelete', 'FindMeControl:MasterDataControl:btnRename', 'FindMeControl:MasterDataControl:btnCancel', 'FindMeControl:MasterDataControl:btnEnter', 'FindMeControl:MasterDataControl:btnUpdate', 'FindMeControl:btnApply', 'FindMeControl:btnSchedules')  In [30]: for i in find_remove:         form_find_a.fields.pop(i)  In [31]: form_find_a['FindMeControl:enableFindMe'].value = 'on' form_find_a['FindMeControl:MasterDataControl:focusElement'].value = '' form_find_a['FindMeControl:MasterDataControl:masterList:_ctl0:enabled'].value = 'on' form_find_a['FindMeControl:MasterDataControl:masterList:_ctl0:itemGuid'].value = '' form_find_a['FindMeControl:MasterDataControl:hidSelectedScheduleName'].value = '' form_find_a['FindMeControl:MasterDataControl:hidbtnStatus'].value = '' form_find_a['FindMeControl:MasterDataControl:hidScheduleXML'].value = '' form_find_a['FindMeControl:MasterDataControl:tempScheduleXML'].value = '' form_find_a['FindMeControl:MasterDataControl:hidSelectedScheduleGUID'].value = '' form_find_a['FindMeControl:MasterDataControl:hidChangedScheduleList'].value = '' form_find_a['FindMeControl:btnPhoneLists'].value = 'Phone Lists' form_find_a['FindMeControl:enableFindMeHidden'].value = '' form_find_a['FindMeControl:applySet'].value = 'false' Out [31]: ...  In [32]: m.submit_form(form_find_a) </code></pre>  <p>Verifying that page has updated and has the list item ""Work"":</p>  <pre><code>In [33]: m.parsed.find('title') Out[33]: &lt;title&gt;Phone Lists&lt;/title&gt;  In [34]: m.parsed.find('a', id='PhoneListsControl_MasterDataControl_masterList__ctl0_SelectButton') Out[34]: &lt;a class=""linkButtonItem"" href=""javascript:__doPostBack('PhoneListsControl$MasterDataControl$masterList$_ctl0$SelectButton','')"" id=""PhoneListsControl_MasterDataControl_masterList__ctl0_SelectButton"" onclick=""javascript:onClick();""&gt;Work&lt;/a&gt; </code></pre>  <p>Get the ""PhoneLists.aspx"" form, remove un-needed fields, fill out and submit.</p>  <pre><code>In [35]: form_find_b = m.get_form(action='PhoneLists.aspx')  In [36]: phne_remove = (     'PhoneListsControl:MasterDataControl:btnAdd',     'PhoneListsControl:MasterDataControl:btnDelete',     'PhoneListsControl:MasterDataControl:btnRename',     'PhoneListsControl:MasterDataControl:btnCancel',     'PhoneListsControl:MasterDataControl:btnEnter',     'PhoneListsControl:MasterDataControl:btnUpdate',     'PhoneListsControl:btnApply',     'PhoneListsControl:btnBack')  In [37]: for i in phne_remove:             form_find_b.fields.pop(i)  In [38]: form_find_b['PhoneListsControl:MasterDataControl:focusElement'].value = ''              form_find_b['PhoneListsControl:MasterDataControl:hidChangedScheduleList'].value = '' form_find_b['PhoneListsControl:MasterDataControl:hidScheduleXML'].value = '' form_find_b['PhoneListsControl:MasterDataControl:hidSelectedScheduleGUID'].value = '' form_find_b['PhoneListsControl:MasterDataControl:hidSelectedScheduleName'].value = '' form_find_b['PhoneListsControl:MasterDataControl:hidbtnStatus'].value = '' form_find_b['PhoneListsControl:MasterDataControl:masterList:_ctl0:itemGuid'].value = '' form_find_b['PhoneListsControl:MasterDataControl:tempScheduleXML'].value = '' form_find_b['PhoneListsControl:applySet'].value = 'false'  In [39]: m.submit_form(form_find_b) </code></pre>  <p>Review the post to see if user list loaded. In this instance, it did not load the user list.</p>  <pre><code>In [40]: m.parsed.findAll('div', id='PhoneListsControl_phoneListMembersText') Out[41]: [&lt;div class=""displayText"" id=""PhoneListsControl_phoneListMembersText""&gt;&lt;/div&gt;] </code></pre>  <p><em>If</em> it was successfull the above would return:</p>  <pre><code>&lt;div id=""PhoneListsControl_phoneListMembersText"" class=""displayText"" style=""top: 315px; left: 281px;""&gt;&amp;nbsp;&amp;nbsp;Work&amp;nbsp;&amp;nbsp;&lt;/div&gt; </code></pre>  <p>Along with the following items in a table, (<code>PhoneListsControl_phoneListDetail</code>):</p>  <pre><code>&lt;input name=""PhoneListsControl:phoneListDetail:_ctl2:number"" type=""text"" value=""95551234567"" maxlength=""50"" id=""PhoneListsControl_phoneListDetail__ctl2_number"" onkeyup=""enableApplyButton('PhoneListsControl_')"" style=""width:140px;""&gt; ... &lt;input name=""PhoneListsControl:phoneListDetail:_ctl3:number"" type=""text"" value=""95551236789"" maxlength=""50"" id=""PhoneListsControl_phoneListDetail__ctl2_number"" onkeyup=""enableApplyButton('PhoneListsControl_')"" style=""width:140px;""&gt; ... </code></pre>  <p>At this venture I figured out that Robobrowser isn't including all the required formdata for the post to ""PhoneLists.aspx"" to work as expected, (<code>'__EVENTTARGET':'PhoneListsControl$MasterDataControl$masterList$_ctl0$SelectButton'</code> and <code>__EVENTARGUMENT</code>). Setting the params and then doing <code>submit_form(form_find_b)</code> does not achieve desired results either. I wonder if the <code>add_field()</code> from <code>robobrowser.forms.form</code> would work but I'm not understanding how to properly utilize it, (if it is to be used at all as I wanted. e.g. Add the <code>__EVENTTARGET</code> and <code>__EVENTARGUMENT</code> hidden input fields to the form).</p>  <p>Is there something else I am missing or does RoboBrowser/Requests not support this type of post? Is it that the form requires javascript to execute as mentioned <a href=""https://stackoverflow.com/questions/6269064/submitting-a-post-request-to-an-aspx-page"">here</a> with mechanize? </p>"	"<h3>Solved</h3>  <p>After much googling, re-posting for help on <a href=""https://www.reddit.com/r/learnpython/comments/2r021e/robobrowser_form_post/"" rel=""noreferrer"">reddit</a> and then randomly stumbling <a href=""https://github.com/jmcarp/robobrowser/issues/29"" rel=""noreferrer"">this</a> RoboBrowser issue that showed me how to properly use the 'fields.add_field()' method; the problem is solved.</p>  <p>e.g.</p>  <pre><code>b_e_arg = robobrowser.forms.fields.Input('\&lt;input name=""__EVENTARGUMENT"" value="""" \/\&gt;')  b_e_target = robobrowser.forms.fields.Input('\&lt;input name=""__EVENTTARGET"" value=""PhoneListsControl$MasterDataControl$masterList$_ctl0$SelectButton"" \/\&gt;')  In [30]: form_find_b.add_field(b_e_target) In [31]: form_find_b.add_field(b_e_arg) </code></pre>  <p>Once the form was updated with these values, the form submit to ""PhoneLists.aspx"" works as expected.</p>  <pre><code>In [33]: m.submit_form(form_find_b)  In [34]: m.url Out[34]: u'http://example/PhoneLists.aspx'  In [35]: m.parsed.findAll('div', id='PhoneListsControl_phoneListMembersText') Out[35]: [&lt;div class=""displayText"" id=""PhoneListsControl_phoneListMembersText""&gt;  Work  &lt;/div&gt;]  In [36]: m.parsed.findAll('input', id='PhoneListsControl_phoneListDetail__ctl2_number') Out[36]: [&lt;input id=""PhoneListsControl_phoneListDetail__ctl2_number"" maxlength=""50"" name=""PhoneListsControl:phoneListDetail:_ctl2:number"" onkeyup=""enableApplyButton('PhoneListsControl_')"" type=""text"" value=""95551234567""/&gt;] </code></pre>  <p>I hope anyone else that has to scrape ASPX sites finds this useful. Happy hacking to all!</p>"
27713745	PHP/Javascript/Python not reloading div	javascript|php|python|html|forms	2014-12-30 22:53:46.083000 UTC	"<p>I am using a raspberry pi to pulse a relay (on the below form submit) to another piece of equipment which if successfully pulsed will toggle a relay on/off.  The toggled relay comes back to the pi as an input which is being monitored on the status.php page inside of the loading div.  If I load the below page, it correctly displays the status.php, but after pressing the form submit button, it does not reload the status.php page.  I have tried everything I can think of, please help! </p>  <pre><code>&lt;!DOCTYPE html&gt; &lt;html&gt; &lt;head&gt;   &lt;meta charset=""utf-8""&gt;   &lt;meta name=""viewport"" content=""width=device-width, initial-scale=1""&gt;   &lt;title&gt;Alarm Panel&lt;/title&gt;   &lt;link rel=""stylesheet"" href=""http://code.jquery.com/mobile/1.4.5/jquery.mobile-1.4.5.min.css"" /&gt;   &lt;script src=""http://code.jquery.com/jquery-2.1.3.min.js""&gt;&lt;/script&gt;   &lt;script src=""http://code.jquery.com/mobile/1.4.5/jquery.mobile-1.4.5.min.js""&gt;&lt;/script&gt;   &lt;script type=""text/javascript""&gt;// &lt;![CDATA[      $(document).ready(function() {                     $.ajaxSetup({ cache: false });      setInterval(function() {      $('#loading').load('/status.php');      }, 2000);      }); // ]]&gt; &lt;/script&gt;   &lt;?php      if (isset($_POST['PULSE'])) {             shell_exec('python /usr/lib/cgi-bin/pulse.py');         }   ?&gt; &lt;/head&gt; &lt;body&gt;   &lt;div id=""currentstatus"" data-role=""collapsible"" data-theme=""b"" data-content-theme=""b"" data-collapsed=""false""&gt;      &lt;h1&gt;Current status&lt;/h1&gt;      &lt;div id=""loading"" align=""center""&gt;         &lt;H3&gt;Loading Status...&lt;/H3&gt;      &lt;/div&gt;   &lt;/div&gt;   &lt;div data-role=""collapsible"" data-theme=""b"" data-content-theme=""b""&gt;      &lt;h4&gt;Change Status&lt;/h4&gt;      &lt;form method=""post""&gt;         &lt;input type=""submit"" name=""PULSE"" value=""PULSE"" /&gt;      &lt;/form&gt;   &lt;/div&gt;   &lt;/body&gt;   &lt;/html&gt; </code></pre>  <p>status.php     <code>&lt;?php     $status = shell_exec('python /usr/lib/cgi-bin/status.py');      ?&gt;     &lt;h3&gt;&lt;? echo $status; ?&gt;&lt;/h3&gt;     &lt;br /&gt;     &lt;img src=""/img/&lt;? print $status; ?&gt;.jpg"" height=""250""; width=""250"";&gt;</code></p>"	"<p>have you tried manipulating submit behavior? that may fix it.</p>  <pre><code>$(document).on('click', '[name=""pulse""]', function(e) {     e.preventDefault();     $('#loading').load('/status.php'); }); </code></pre>  <p>you may also try changing your timeout function... That's a bit tricky because load is an asynchronous function.</p>  <pre><code>var loadStatusTimeout; function loadStatus() {      $('#loading').load('/status.php', function() {          loadStatusTimeout = setTimeout(loadStatus, 2000);      }); } loadStatusTimeout = setTimeout(loadStatus, 2000); </code></pre>  <p>also, you're accidentally adding semicolons into your img element:</p>  <p>change:</p>  <pre><code>&lt;img src=""/img/&lt;? print $status; ?&gt;.jpg"" height=""250""; width=""250"";&gt; </code></pre>  <p>to:</p>  <pre><code>&lt;img src=""/img/&lt;? print $status; ?&gt;.jpg"" height=""250"" width=""250""&gt; </code></pre>"
