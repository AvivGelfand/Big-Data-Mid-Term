65540240	How to communicate between multiple javascript files in python eel	javascript|python|communication|wikipedia|eel	2021-01-02 14:34:18.130000 UTC	"<p>I am trying to make a HTML app using eel. In this app I have two javascript files and want to make communication between my python main.py file. It will get a string from &quot;show()&quot; and &quot;show2()&quot;.The string from &quot;show()&quot; will go to my &quot;script.js&quot; file and the string from &quot;show2()&quot; will go to &quot;script2.js&quot;.I am able to get strings from &quot;show()&quot; but not from show2(). Only one javascript file is working and the other is not working. Can someone please help me with it?</p> <p>Here is my python &quot;main.py&quot; code:</p> <pre><code>import eel import time import wikipedia import socket import os import pyttsx3 import webbrowser import datetime import sound  engine= pyttsx3.init(&quot;sapi5&quot;) en_id = &quot;HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Speech\\Voices\\Tokens\\TTS_MS_Cortana&quot; engine.setProperty(&quot;voice&quot;,en_id) def say(audio):     engine.say(audio)     engine.runAndWait()  @eel.expose def show(text):     user=text.lower()          if &quot;hello&quot; in user or &quot;hey&quot; in user:         ans=&quot;Hello, how can I help you?&quot;         time.sleep(0.5)         eel.boxes2(ans)         say(ans) @eel.expose def show2(text2):     print(text2)     eel.boxes3(&quot;hello&quot;)    eel.init(&quot;eel&quot;) eel.start(&quot;index.html&quot;,size=(460,660)) </code></pre> <p>And here is my &quot;script.js&quot; file. This file is working:</p> <pre><code>var nav=document.getElementById(&quot;content&quot;); var textbox=document.getElementById(&quot;input&quot;);  var tag=document.createElement(&quot;i&quot;);  textbox.onclick=function(){     nav.style.display=&quot;none&quot;;  } eel.expose(boxes2); function boxes2(reply){     var tag=document.createElement(&quot;a&quot;);     var text=document.createTextNode(reply);     tag.appendChild(text);     var element=document.getElementById(&quot;box2&quot;);     element.appendChild(tag); }   function boxes(){     var textbox=document.getElementById(&quot;input&quot;);      text= textbox.value;     eel.show(text)     var cover=document.createElement(&quot;p&quot;);     var tag=document.createElement(&quot;i&quot;);     var text=document.createTextNode(text);     tag.appendChild(text);     cover.appendChild(tag);     var element=document.getElementById(&quot;box2&quot;);     element.appendChild(cover);     textbox.value=&quot;&quot;;      } var sub = document.getElementById(&quot;send&quot;);   sub.onclick=function(){     boxes();     boxes2(reply);  } </code></pre> <p>And here is my &quot;script2.js&quot;. This is the file which is not working in python eel:</p> <pre><code>eel.expose(boxes3) function boxes3(reply2){     eel.show2(&quot;bye&quot;)     var tag=document.createElement(&quot;p&quot;);     var text=document.createTextNode(reply2);     tag.appendChild(text);     var element=document.getElementById(&quot;box2&quot;);     element.appendChild(tag); }  var sub2 = document.getElementById(&quot;hello&quot;);   sub2.onclick=function(){     boxes3(reply2);  } </code></pre> <p>Here is my index.html code:</p> <pre><code>&lt;!DOCTYPE html&gt; &lt;html lang=&quot;en&quot;&gt; &lt;head&gt;     &lt;meta charset=&quot;UTF-8&quot;&gt;     &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, user-scalable=no&quot;&gt;     &lt;title&gt;Aurora&lt;/title&gt;     &lt;link rel=&quot;Icon&quot; href=&quot;logo.ico&quot; type=&quot;png&quot; hreflang=&quot;en&quot;&gt;     &lt;link rel=&quot;stylesheet&quot; href=&quot;style.css&quot;&gt;      &lt;/head&gt; &lt;body&gt;     &lt;div style=&quot;background-color: blanchedalmond; width: 500px; height: 30px; position: fixed; top: 0;&quot;&gt;         &lt;label id=&quot;options&quot; title=&quot;options&quot;&gt;...&lt;/label&gt;         &lt;button id=&quot;hello&quot; &gt;hello&lt;/button&gt;     &lt;/div&gt;     &lt;div style=&quot;width: max-content; height: 630px; overflow-y: scroll; overflow-x: hidden;scroll-behavior: auto;&quot;&gt;         &lt;div id=&quot;box2&quot; style=&quot;width: 470px;  height: max-content; margin-top: 35pt;margin-left: 20px;&quot;&gt;&lt;/div&gt;     &lt;/div&gt;          &lt;div id=&quot;content&quot;&gt;         &lt;label id=&quot;close&quot; title=&quot;close&quot;&gt;Ã—&lt;/label&gt;         &lt;h1 style=&quot;font-family: segoe ui; position: relative; top: -50px;left: 10px; font-weight: 300;&quot;&gt;Aurora&lt;/h1&gt;         &lt;button style=&quot;width: 100%; font-size: 15pt; text-align: left; position: relative; top: 220pt; border:none; padding: 7pt;outline: none; &quot; id=&quot;settings&quot;&gt;Settings&lt;/button&gt;         &lt;button style=&quot;width: 100%; font-size: 15pt; text-align: left; position: relative; top: 220pt; border: none; padding: 7pt;outline: none;  &quot; id=&quot;settings&quot;&gt;About&lt;/button&gt;         &lt;button style=&quot;width: 100%; font-size: 15pt; text-align: left; position: relative; top: 220pt; border: none; padding: 7pt;outline: none;  &quot; id=&quot;settings&quot;&gt;Commands&lt;/button&gt;     &lt;/div&gt;          &lt;div id=&quot;user-input&quot;&gt;         &lt;form&gt;             &lt;textarea id=&quot;input&quot; placeholder=&quot;Ask me something&quot; title=&quot;ask aurora&quot;&gt;&lt;/textarea&gt;         &lt;/form&gt;         &lt;button id=&quot;send&quot; title=&quot;send text&quot;&gt;Send&lt;/button&gt;     &lt;/div&gt;     &lt;script src=&quot;eel.js&quot;&gt;&lt;/script&gt;     &lt;script src=&quot;script.js&quot;&gt;&lt;/script&gt;     &lt;script src=&quot;script2.js&quot;&gt;&lt;/script&gt;           &lt;/body&gt; &lt;/html&gt; </code></pre> <p>Please help me!!!</p>"	65547559	"<p>all functions decorated with @eel.expose must be between eel.init and eel.start.</p> <p>Try using the following line:</p> <pre><code>eel.init('eel', allowed_extensions=['.js', '.html']) </code></pre> <p>This will look for exposed functions in all js and html files contained in your eel folder.</p>"
65546679	converting javascript function to python with comma operator	javascript|python	2021-01-03 04:38:01.207000 UTC	"<p>I have the following javascript code</p> <pre><code>var d = Math.random(),    k = parseInt((1e3 * d)/2),    s = d + &quot;&quot; </code></pre> <p>output of d : <code>0.6715250159864421</code></p> <p>Similarly, I have the python code that I was able to write up and as close to</p> <pre><code>d, k, s = random.random(), int((1e3*random.random()/2)), d + '' </code></pre> <p>The output are completely different.</p> <pre><code>0.8018834108596731 </code></pre> <p>Am I not using the comma operator properly</p> <p>PS: I understand output is going to be different, however I want to validate that my python code is correctly translated to the shown JS snippet.</p>"	65547190	"<p>In your Python code you're not using <code>d</code> when you calculate <code>k</code>, you're calculating a different random number.</p> <p>In Python you can't concatenate strings with numbers. JS is using that to convert the number to a string, in Python you do that with the <code>str()</code> function.</p> <p>The translation should be:</p> <pre><code>d = random.random() k = int(1e3 * d) / 2 s = str(d) </code></pre> <p>In Python 3.8 you could use the &quot;walrus&quot; operator to assign to <code>d</code> in a one-liner</p> <pre><code>k, s = int(1e3 * (d := random.random())) / 2, str(d) </code></pre> <p>But this is confusing, so I don't recommend it.</p>"
65548187	How can I run my pure python (.py) file from javascript file	javascript|python|selenium-chromedriver	2021-01-03 09:09:51.593000 UTC	"<p>I am creating a website which scrapes data from a site and displays that data in my site. I used selenium for scraping and this is purely written in python which converts scraped data to JSON. I used Javascript to fetch data from JSON and display it in HTML.</p> <p>Now there are two things what I want to ask.</p> <p>Firstly, how can I run that python file in web browser via web hosting.</p> <p>Secondly, what I want is that every day my Javascript code run that python file so that whenever website is updated, the updated data is displayed in my website also.</p> <p>Can anyone guide me how I can run Python file from Javascript. I also viewed Brython but it doesn't run my python(.py). Here's how I used Brython</p> <p>These are the js files imported in head</p> <pre><code>&lt;script src=&quot;/brython.js&quot;&gt;&lt;/script&gt; &lt;script src=&quot;/brython_stdlib.js&gt;&lt;/script&gt; </code></pre> <p>And here in body tag I give reference to my python file</p> <pre><code>&lt;body onload=&quot;brython()&quot;&gt;      &lt;script type=&quot;text/python&quot; src=&quot;webScrapper.py&quot;&gt; &lt;/body&gt; </code></pre> <p>But nothing happens.</p> <p>Hope my question is clear. Thanks in advance for your brainstorming ideas</p>"	65548783	"<p>Well, I don't think you can run python script on a web browser using js. But what you can do is spawn python as a child process from a node js server.  I have done something similar. I ran ruby script from a nodejs.</p> <p>You can find the code here. you just have to make minor changes</p> <p><a href=""https://github.com/thealpha93/spawn-child-process.git"" rel=""nofollow noreferrer"">https://github.com/thealpha93/spawn-child-process.git</a></p>"
65548322	Converting machine learning code in python to javascript	javascript|python|machine-learning|pickle	2021-01-03 09:32:59.017000 UTC	"<p>I've implemented a machine learning model using scikit-learn in python. Since I want to use this code in a browser (as I'm developing a chrome extension and want the application to work completely in the client side), I'd like to convert the same code to javascript.</p> <p>This is my python code :</p> <pre><code>import pickle import pandas as pd from sklearn.feature_extraction.text import CountVectorizer  input_ = 'input string' logreg = pickle.load(open('logreg.sav', 'rb')) count_vectorizer = pickle.load(open('count_vectorizer.sav', 'rb')) count_test = count_vectorizer.transform(pd.Series(input_)) result = logreg.predict(count_test) print(result) </code></pre> <p>Code mostly involves loading the trained models saved as a pickle file. Is it possible to convert this to javascript or should I try implementing ML models in javascript again ?</p>"	65549476	"<p><em>A different approach (If you really don't want to implement the model again with Javascript)</em></p> <p><strong>Make a Django server</strong> and render your model's <strong>prediction using REST API</strong>, then you could <strong>host that site</strong> into any free hosting services such as Heroku. Then you could easily <strong>access your model</strong> from Javascript by simply <strong>doing an API call</strong>.</p>"
65552950	Is this Python function able to be be converted to Javascript?	javascript|python|encryption	2021-01-03 17:41:04.777000 UTC	"<p>I am working with ciphers; encrypting and decrypting and I'm currently working with the <a href=""https://www.geeksforgeeks.org/polybius-square-cipher/"" rel=""nofollow noreferrer"">Polybius Cipher</a> with the modern Latin alphabet. For example, the letters 'a' is the 2-digit code, '11' and 'abc' is '11 12 13'.</p> <p>I have found a solution in Python:</p> <pre><code># Python Program to implement polybius cipher     # function to display polybius cipher text  def polybiusCipher(s):             # convert each character to its encrypted code          for char in s:                                 # finding row of the table                  row = int((ord(char) - ord('a')) / 5) + 1                            # finding column of the table                   col = ((ord(char) - ord('a')) % 5) + 1                    # if character is 'k'                  if char == 'k':                          row = row - 1                         col = 5 - col + 1                                            # if character is greater than 'j'                  elif ord(char) &gt;= ord('j'):                          if col == 1 :                              col = 6                             row = row - 1                                                        col = col - 1                                            print(row, col, end ='', sep ='') </code></pre> <p>I am trying to convert it and keep getting <code>NaN</code> as I am misusing something, or multiple things. Here is what I have so far:</p> <pre><code>function polybius(input, encode = true) {   for (let i = 0; i &lt; input.length; i++) {     let letter = input[i];      let row = letter.charCodeAt(0 - letter.charCodeAt(97)) / 5 + 1;      let col = letter.charCodeAt(0 - (letter.charCodeAt(97) % 5)) + 1;      if (letter.charCodeAt(0) === letter.charCodeAt(107)) {       row = row - 1;       col = 5 - col + 1;     } else if (letter.charCodeAt(0) &gt;= letter.charCodeAt(106)) {       if (col === 1) {         col = 6;         row = row - 1;       }       col = col - 1;     }     return `${row}${col} `;   } }  </code></pre>"	65553081	"<p><code>let row = letter.charCodeAt(i - letter.charCodeAt('a')) / 5 + 1;</code> is not correct since the char code of the letter itself is <code>letter.charCodeAt(0)</code> and the char code of <code>'a'</code> is <code>'a'.charCodeAt(0)</code>. Moreover, you need to use <code>Math.floor</code> to round down.</p> <p>Thus, it should be <code>let row = Math.floor((letter.charCodeAt(0) - 'a'.charCodeAt(0)) / 5) + 1;</code>.</p> <p>There is a similar problem with the <code>col</code> initialization and it should be <code>let col = (letter.charCodeAt(0) - 'a'.charCodeAt(0)) % 5 + 1;</code>.</p> <p>Next, to check if the letter is <code>k</code>, there is no need to compare char codes, you can directly use <code>letter === 'k'</code>. For the comparison to see if the letter is greater than or equal to <code>'j'</code>, a similar issue exists and you can directly use <code>&gt;= 'j'</code>.</p> <p>Finally, you return in the first iteration of the loop, so it will only run once. Instead, you can build a string to output or return at the end.</p> <pre><code>function polybius(input, encode = true) {   let str = '';   for (let i = 0; i &lt; input.length; i++) {     let letter = input[i];      let row = Math.floor((letter.charCodeAt(0) - 'a'.charCodeAt(0)) / 5) + 1;      let col = (letter.charCodeAt(0) - 'a'.charCodeAt(0)) % 5 + 1;      if (letter === 'k') {       row = row - 1;       col = 5 - col + 1;     } else if (letter &gt;= 'j') {       if (col === 1) {         col = 6;         row = row - 1;       }       col = col - 1;     }    str += `${row}${col} `;   }   console.log(str); } </code></pre>"
65562035	Python REST-API with Flask-RestX and JavaScript REST-Client served together	python|rest|flask|swagger|flask-restx	2021-01-04 11:36:29.060000 UTC	"<p>I run this example: <a href=""https://flask-restx.readthedocs.io/en/latest/example.html"" rel=""nofollow noreferrer"">https://flask-restx.readthedocs.io/en/latest/example.html</a> (A Python REST-API with Flask-RESTX)</p> <h2>Code snippet</h2> <pre><code>app = Flask(__name__) api = Api(app, ...) ns = api.namespace('todos', ...)  @ns.route('/') ... @ns.route('/&lt;int:id&gt;') ... </code></pre> <h2>Result</h2> <p>I get the following URLs for the REST-API:</p> <p><a href=""http://127.0.0.1:5000"" rel=""nofollow noreferrer"">http://127.0.0.1:5000</a> -&gt; Swagger Documentation</p> <p><a href=""http://127.0.0.1:5000/swagger.json"" rel=""nofollow noreferrer"">http://127.0.0.1:5000/swagger.json</a></p> <p><a href=""http://127.0.0.1:5000/todos/"" rel=""nofollow noreferrer"">http://127.0.0.1:5000/todos/</a></p> <p><a href=""http://127.0.0.1:5000/todos/%7Bid%7D"" rel=""nofollow noreferrer"">http://127.0.0.1:5000/todos/{id}</a></p> <h2>Question</h2> <p>I would like to implement a Webclient with Javascript, which should be reached under following URLs:</p> <p><a href=""http://127.0.0.1:5000"" rel=""nofollow noreferrer"">http://127.0.0.1:5000</a> -&gt; index.html</p> <p><a href=""http://127.0.0.1:5000/style.css"" rel=""nofollow noreferrer"">http://127.0.0.1:5000/style.css</a></p> <p><a href=""http://127.0.0.1:5000/app.js"" rel=""nofollow noreferrer"">http://127.0.0.1:5000/app.js</a></p> <p>The URLs for the REST-API should change to:</p> <p><a href=""http://127.0.0.1:5000/api"" rel=""nofollow noreferrer"">http://127.0.0.1:5000/api</a> -&gt; Swagger Documentation</p> <p><a href=""http://127.0.0.1:5000/api/swagger.json"" rel=""nofollow noreferrer"">http://127.0.0.1:5000/api/swagger.json</a></p> <p><a href=""http://127.0.0.1:5000/api/todos/"" rel=""nofollow noreferrer"">http://127.0.0.1:5000/api/todos/</a></p> <p><a href=""http://127.0.0.1:5000/api/todos/%7Bid%7D"" rel=""nofollow noreferrer"">http://127.0.0.1:5000/api/todos/{id}</a></p> <p>How can I expand the example to generate the wanted URLs?</p>"	65767480	"<p>Not sure if you have gotten an answer by now. I often clone the below github project for flask restx boilerplate. It is designed as a rest boilerplate to help get you up and running.</p> <p><a href=""https://github.com/cosmic-byte/flask-restplus-boilerplate"" rel=""nofollow noreferrer"">https://github.com/cosmic-byte/flask-restplus-boilerplate</a></p> <p>The templates and static files can be added to the application and to the controllers to host the pages. Added the below documentation for the static pages. Every this should be there to get you running with a full site</p> <p><a href=""https://flask.palletsprojects.com/en/1.1.x/tutorial/static/"" rel=""nofollow noreferrer"">https://flask.palletsprojects.com/en/1.1.x/tutorial/static/</a></p>"
65562035	Python REST-API with Flask-RestX and JavaScript REST-Client served together	python|rest|flask|swagger|flask-restx	2021-01-04 11:36:29.060000 UTC	"<p>I run this example: <a href=""https://flask-restx.readthedocs.io/en/latest/example.html"" rel=""nofollow noreferrer"">https://flask-restx.readthedocs.io/en/latest/example.html</a> (A Python REST-API with Flask-RESTX)</p> <h2>Code snippet</h2> <pre><code>app = Flask(__name__) api = Api(app, ...) ns = api.namespace('todos', ...)  @ns.route('/') ... @ns.route('/&lt;int:id&gt;') ... </code></pre> <h2>Result</h2> <p>I get the following URLs for the REST-API:</p> <p><a href=""http://127.0.0.1:5000"" rel=""nofollow noreferrer"">http://127.0.0.1:5000</a> -&gt; Swagger Documentation</p> <p><a href=""http://127.0.0.1:5000/swagger.json"" rel=""nofollow noreferrer"">http://127.0.0.1:5000/swagger.json</a></p> <p><a href=""http://127.0.0.1:5000/todos/"" rel=""nofollow noreferrer"">http://127.0.0.1:5000/todos/</a></p> <p><a href=""http://127.0.0.1:5000/todos/%7Bid%7D"" rel=""nofollow noreferrer"">http://127.0.0.1:5000/todos/{id}</a></p> <h2>Question</h2> <p>I would like to implement a Webclient with Javascript, which should be reached under following URLs:</p> <p><a href=""http://127.0.0.1:5000"" rel=""nofollow noreferrer"">http://127.0.0.1:5000</a> -&gt; index.html</p> <p><a href=""http://127.0.0.1:5000/style.css"" rel=""nofollow noreferrer"">http://127.0.0.1:5000/style.css</a></p> <p><a href=""http://127.0.0.1:5000/app.js"" rel=""nofollow noreferrer"">http://127.0.0.1:5000/app.js</a></p> <p>The URLs for the REST-API should change to:</p> <p><a href=""http://127.0.0.1:5000/api"" rel=""nofollow noreferrer"">http://127.0.0.1:5000/api</a> -&gt; Swagger Documentation</p> <p><a href=""http://127.0.0.1:5000/api/swagger.json"" rel=""nofollow noreferrer"">http://127.0.0.1:5000/api/swagger.json</a></p> <p><a href=""http://127.0.0.1:5000/api/todos/"" rel=""nofollow noreferrer"">http://127.0.0.1:5000/api/todos/</a></p> <p><a href=""http://127.0.0.1:5000/api/todos/%7Bid%7D"" rel=""nofollow noreferrer"">http://127.0.0.1:5000/api/todos/{id}</a></p> <p>How can I expand the example to generate the wanted URLs?</p>"	66225378	"<p>You can wrap flask-restx application with flask.Blueprint to move swagger logic under a specific url_path.</p> <p>The following example shows how this can be achieved:</p> <pre class=""lang-py prettyprint-override""><code> import flask import flask_restx   APP = flask.Flask(&quot;my-app&quot;) api_bp = flask.Blueprint(&quot;api&quot;, __name__, url_prefix=&quot;/api&quot;)  API = flask_restx.Api(api_bp) APP.register_blueprint(api_bp)   NAMESPACE = API.namespace(&quot;todos&quot;)   @NAMESPACE.route(&quot;/&quot;) class TODOSAPI(flask_restx.Resource):     def get(self):         return ['todo-1', 'todo-2']   </code></pre>"
65563252	pass a dictionary from javascript function to flask python function: always a None	javascript|python|html|jquery|flask	2021-01-04 13:09:43.547000 UTC	"<p>We're creating a web application using Flask. On one html page, users answer some questions (using <code>&lt;form&gt;</code>). During this process, they are asked to click a button on the page for a few times when they receive random popup notifications. In the <code>.html</code> file, we write javascript functions to save the timestamps of users clicking on the button into an array.</p> <p>We hope to store both the user's answers and the timestamps of clicking the button. Now from <code>.html</code> to <code>.py</code>, we pass answers using <code>request.form</code> and pass the array of timestamps using ajax json (<code>request.json</code>). The <code>request.form</code> works very well but the <code>request.json</code> always gives a <code>None</code>. We have tried <code>request.get_json()</code>, <code>request.get_json(force=True)</code>, <code>request.get_json(silent=True)</code>, but none of them works.</p> <p>Our codes are like the following:</p> <p>in <code>trial.py</code>:</p> <pre><code>from flask import (Blueprint, flash, g, redirect, render_template, request, url_for, jsonify, json) from werkzeug.exceptions import abort import csv from flaskr.db import get_db  bp = Blueprint('trial', __name__, url_prefix='/trial')  @bp.route('', methods=('GET', 'POST')) def trial():     if request.method == 'POST':         if &quot;Q1&quot; in request.form:             ## this part retrieves data from request.form              ## skip the details in the following             db = get_db()             db.execute(                     'INSERT INTO trial (...)', (...))             db.commit()          timestamps = request.json         print(timestamps)  ### This is always a None     return render_template('study/trial.html') </code></pre> <p>In <code>trial.html</code>:</p> <pre><code>{% extends 'base.html' %}  {% block header %}   &lt;h1&gt;{% block title %}Trial{% endblock %}&lt;/h1&gt; {% endblock %}  {% block content %}    &lt;!-- Skip non-related details in the following --&gt;    &lt;button class=&quot;NotificationButton&quot; onclick=&quot;popup()&quot;&gt;I Got A Notification&lt;/button&gt;    &lt;div&gt;     &lt;form name=&quot;TrialQuestions&quot; id=&quot;TrialQuestions&quot; method=&quot;post&quot;&gt;       &lt;!-- skip the details of the questions and input for answers --&gt;                                                  &lt;/form&gt;   &lt;/div&gt;    &lt;script src=&quot;//ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js&quot;&gt;&lt;/script&gt;   &lt;script&gt;window.jQuery || document.write('&lt;script src=&quot;{{url_for('static', filename='jquery.js') }}&quot;&gt;\x3C/script&gt;')&lt;/script&gt;      &lt;script&gt;     var timestamps = {&quot;trial&quot;:[]};      function playAudio() {        &lt;!-- skip non-related details --&gt;       timestamps[&quot;trial&quot;].push(remaining);     }       function popup(){       &lt;!-- skip non-related details --&gt;       timestamps[&quot;trial&quot;].push(remaining);     }      function timeUp(){       document.TrialQuestions.submit();       $.ajax({         type: &quot;POST&quot;,         url: &quot;{{ url_for(&quot;trial.trial&quot;) }}&quot;,         contentType: &quot;application/json&quot;,         data: JSON.stringify(timestamps),         dataType: &quot;json&quot;,         success: function(response) {         console.log(response);         },         error: function(err) {         console.log(err);         }       });       alert(&quot;Time Is Up! Your Answers Have Been Submitted!&quot;);     }    &lt;/script&gt; {% endblock %} </code></pre> <p>The <code>console.log(response);</code> in <code>trial.html</code> works well, but the <code>timestamps = request.json</code> in <code>trial.py</code> always gives a <code>None</code>. We have searched and tried the suggestions from the following posts but none of them solves the problem:</p> <ol> <li><a href=""https://stackoverflow.com/questions/53694709/passing-javascript-array-in-python-flask"">Passing Javascript array in Python Flask</a></li> <li><a href=""https://stackoverflow.com/questions/10434599/get-the-data-received-in-a-flask-request"">Get the data received in a Flask request</a></li> <li><a href=""https://www.codegrepper.com/code-examples/typescript/how+to+send+information+from+javascript+to+flask+route"" rel=""nofollow noreferrer"">How to send information from javascript to flask route</a></li> </ol> <p>Can anyone give some hints? Thanks a lot!</p>"	65565937	"<p>Your form submit results in the page being reloaded and the template being transmitted again as html from the server.</p> <p>An asynchronous javascript request is only ended when the callback for success or error is called. The transmission of the data is not waited for.</p> <pre><code>function timeUp() {   console.log(&quot;sending data to &quot; + &quot;{{ url_for('trial.trial') }}&quot;)    $.ajax({     type: &quot;POST&quot;,     url: &quot;{{ url_for('trial.trial') }}&quot;,     contentType: &quot;application/json&quot;,     data: JSON.stringify(timestamps),     dataType: &quot;json&quot;,     success: function(response) {       console.log(response);       // The data has now been successfully transferred.              // document.TrialQuestions.submit();     },     error: function(err) {       console.log(err);     }   }); } </code></pre> <p>When specifying the data type, the query expects exactly this as an answer. See also <a href=""https://api.jquery.com/jquery.ajax/"" rel=""nofollow noreferrer"">here</a>.<br /> For this reason, I am returning a response in json format.</p> <pre><code>from flask import render_template, request, jsonify  @bp.route('/', methods=('GET', 'POST')) def trial():     if request.method == 'POST':         print('got a post request')          if request.is_json: # application/json             # handle your ajax request here!             print('got json:', request.json)             return jsonify(success=True) # answer as json         else:              # handle your form submit here!             print(request.form)     return render_template('trial.html') </code></pre> <hr /> <p>AJAX has the advantage that you can send and load data sets without reloading and rendering the whole page.</p> <p>Within a transmission, the data is formatted in a predefined format. When you submit a form you use the type &quot;application/x-www-form-urlencoded&quot; or &quot;multipart/form-data&quot;. For JSON it is &quot;application/json&quot;.<br /> Depending on the selected format, either the query &quot;request.json&quot; returns a &quot;None&quot; or &quot;request.form&quot; is an empty dictionary.</p> <p>The structure of your data set depends on your requirements.<br /> The following is a suggestion that is similar to the original approach of a form.</p> <pre><code>function timeUp() {   const data = {     &quot;data&quot;: $(&quot;form[name='TrialQuestions']&quot;).serializeArray().map(elem =&gt; {       return [elem[&quot;name&quot;], elem[&quot;value&quot;]];     }),     &quot;ts&quot;: timestamps,   };    $.ajax({     type: &quot;POST&quot;,     url: &quot;{{ url_for('trial.trial') }}&quot;,     contentType: &quot;application/json&quot;,     data: JSON.stringify(data),     dataType: &quot;json&quot;,     success: function(response) {       console.log(response);     },     error: function(err) {       console.log(err);     }   }); } </code></pre> <hr /> <p>Should you just want to send a form, for example because you want to do a redirect. Add one or more hidden fields to the form and fill in their value before submitting.</p> <pre><code>&lt;form name=&quot;TrialQuestions&quot; method=&quot;post&quot;&gt;   &lt;label for=&quot;q1&quot;&gt;Question 1&lt;/label&gt;   &lt;input name=&quot;q1&quot; id=&quot;q1&quot; value=&quot;a1&quot; /&gt;   &lt;input name=&quot;ts&quot; type=&quot;hidden&quot; /&gt; &lt;/form&gt;  &lt;script&gt;   function timeUp() {     document.forms[&quot;TrialQuestions&quot;][&quot;ts&quot;].value = timestamps.join();     document.forms[&quot;TrialQuestions&quot;].submit();   } &lt;/script&gt; </code></pre>"
65563252	pass a dictionary from javascript function to flask python function: always a None	javascript|python|html|jquery|flask	2021-01-04 13:09:43.547000 UTC	"<p>We're creating a web application using Flask. On one html page, users answer some questions (using <code>&lt;form&gt;</code>). During this process, they are asked to click a button on the page for a few times when they receive random popup notifications. In the <code>.html</code> file, we write javascript functions to save the timestamps of users clicking on the button into an array.</p> <p>We hope to store both the user's answers and the timestamps of clicking the button. Now from <code>.html</code> to <code>.py</code>, we pass answers using <code>request.form</code> and pass the array of timestamps using ajax json (<code>request.json</code>). The <code>request.form</code> works very well but the <code>request.json</code> always gives a <code>None</code>. We have tried <code>request.get_json()</code>, <code>request.get_json(force=True)</code>, <code>request.get_json(silent=True)</code>, but none of them works.</p> <p>Our codes are like the following:</p> <p>in <code>trial.py</code>:</p> <pre><code>from flask import (Blueprint, flash, g, redirect, render_template, request, url_for, jsonify, json) from werkzeug.exceptions import abort import csv from flaskr.db import get_db  bp = Blueprint('trial', __name__, url_prefix='/trial')  @bp.route('', methods=('GET', 'POST')) def trial():     if request.method == 'POST':         if &quot;Q1&quot; in request.form:             ## this part retrieves data from request.form              ## skip the details in the following             db = get_db()             db.execute(                     'INSERT INTO trial (...)', (...))             db.commit()          timestamps = request.json         print(timestamps)  ### This is always a None     return render_template('study/trial.html') </code></pre> <p>In <code>trial.html</code>:</p> <pre><code>{% extends 'base.html' %}  {% block header %}   &lt;h1&gt;{% block title %}Trial{% endblock %}&lt;/h1&gt; {% endblock %}  {% block content %}    &lt;!-- Skip non-related details in the following --&gt;    &lt;button class=&quot;NotificationButton&quot; onclick=&quot;popup()&quot;&gt;I Got A Notification&lt;/button&gt;    &lt;div&gt;     &lt;form name=&quot;TrialQuestions&quot; id=&quot;TrialQuestions&quot; method=&quot;post&quot;&gt;       &lt;!-- skip the details of the questions and input for answers --&gt;                                                  &lt;/form&gt;   &lt;/div&gt;    &lt;script src=&quot;//ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js&quot;&gt;&lt;/script&gt;   &lt;script&gt;window.jQuery || document.write('&lt;script src=&quot;{{url_for('static', filename='jquery.js') }}&quot;&gt;\x3C/script&gt;')&lt;/script&gt;      &lt;script&gt;     var timestamps = {&quot;trial&quot;:[]};      function playAudio() {        &lt;!-- skip non-related details --&gt;       timestamps[&quot;trial&quot;].push(remaining);     }       function popup(){       &lt;!-- skip non-related details --&gt;       timestamps[&quot;trial&quot;].push(remaining);     }      function timeUp(){       document.TrialQuestions.submit();       $.ajax({         type: &quot;POST&quot;,         url: &quot;{{ url_for(&quot;trial.trial&quot;) }}&quot;,         contentType: &quot;application/json&quot;,         data: JSON.stringify(timestamps),         dataType: &quot;json&quot;,         success: function(response) {         console.log(response);         },         error: function(err) {         console.log(err);         }       });       alert(&quot;Time Is Up! Your Answers Have Been Submitted!&quot;);     }    &lt;/script&gt; {% endblock %} </code></pre> <p>The <code>console.log(response);</code> in <code>trial.html</code> works well, but the <code>timestamps = request.json</code> in <code>trial.py</code> always gives a <code>None</code>. We have searched and tried the suggestions from the following posts but none of them solves the problem:</p> <ol> <li><a href=""https://stackoverflow.com/questions/53694709/passing-javascript-array-in-python-flask"">Passing Javascript array in Python Flask</a></li> <li><a href=""https://stackoverflow.com/questions/10434599/get-the-data-received-in-a-flask-request"">Get the data received in a Flask request</a></li> <li><a href=""https://www.codegrepper.com/code-examples/typescript/how+to+send+information+from+javascript+to+flask+route"" rel=""nofollow noreferrer"">How to send information from javascript to flask route</a></li> </ol> <p>Can anyone give some hints? Thanks a lot!</p>"	65568440	"<p>... update to the question from myself.</p> <p>As posted in the question, <code>request.form</code> can work but <code>request.json</code> will give a &quot;None&quot;.</p> <p>Following Detlef's approach, according to what I tried on my side, <code>request.json</code> can work but <code>request.form</code> will give a &quot;None&quot;. Please correct me if I mistaken anything.</p> <p>So, now I propose a trade-off approach: package the form and the timestamps into one ajax JSON object. The code is now like this:</p> <pre><code>  &lt;div&gt;     &lt;form name=&quot;TrialQuestions&quot; id=&quot;TrialQuestions&quot;&gt;         &lt;label for=&quot;Q1&quot;&gt;Question 1&lt;/label&gt;       &lt;input name=&quot;Q1&quot; id=&quot;Q1&quot;&gt;        &lt;!-- skip the questions --&gt;                                                   &lt;/form&gt;   &lt;/div&gt;    &lt;script&gt;   var TrialQuestionAnswers = [];   var timestamps = [];   var formAndTimestamps = [];      function timeUp(){       TrialQuestionAnswers = [document.getElementById(&quot;Q1&quot;).value, ..., document.getElementById(&quot;Q13&quot;).value];       formAndTimestamps.push(TrialQuestionAnswers);       formAndTimestamps.push(timestamps);        $.ajax({         type: &quot;POST&quot;,         url: &quot;{{ url_for(&quot;trial.trial&quot;) }}&quot;,         contentType: &quot;application/json&quot;,         data: JSON.stringify(formAndTimestamps),         dataType: &quot;json&quot;,         success: function(response) {         console.log(response);         },         error: function(err) {         console.log(err);         }       });       alert(&quot;Time Is Up! Your Answers Have Been Submitted!&quot;);     }   &lt;/script&gt; </code></pre> <p>It can work, but maybe this is not the most efficient solution. Better idea is much appreciated!</p>"
65585131	Is there a Javascript equivalent to the Python string constants?	javascript|python	2021-01-05 19:11:57.600000 UTC	"<p>I was looking for a Javascript equivalent to the constant string.<strong>ascii_lowercase</strong> <code>'abcdefghijklmnopqrstuvwxyz'</code>, but I haven't been able to find any.</p> <p>It is no trouble to implement it myself. I found it useful in Python and now that I am working with Javascript I'd be happy to discover if something similar exists, and where to find it.</p>"	65585216	"<p>The short answer is no: such a constant does not appear to exist in Javascript. There are several ways of generating such a constant (i.e. <a href=""https://stackoverflow.com/questions/24597634/how-to-generate-an-array-of-alphabet-in-jquery"">How to generate an array of alphabet in jQuery?</a>) or also just manually entering it, but as of right now there is no function which returns that shorthand in native JS.</p>"
65585131	Is there a Javascript equivalent to the Python string constants?	javascript|python	2021-01-05 19:11:57.600000 UTC	"<p>I was looking for a Javascript equivalent to the constant string.<strong>ascii_lowercase</strong> <code>'abcdefghijklmnopqrstuvwxyz'</code>, but I haven't been able to find any.</p> <p>It is no trouble to implement it myself. I found it useful in Python and now that I am working with Javascript I'd be happy to discover if something similar exists, and where to find it.</p>"	65585223	"<p>According to <a href=""https://rosettacode.org/wiki/Generate_lower_case_ASCII_alphabet#JavaScript"" rel=""nofollow noreferrer"">https://rosettacode.org/wiki/Generate_lower_case_ASCII_alphabet#JavaScript</a> there's no  easy constant like what you're looking for. The Python example on that page just uses <code>string.ascii_lowercase</code>, so I'd assume if there was a better option, that one would have been used instead.</p>"
65585131	Is there a Javascript equivalent to the Python string constants?	javascript|python	2021-01-05 19:11:57.600000 UTC	"<p>I was looking for a Javascript equivalent to the constant string.<strong>ascii_lowercase</strong> <code>'abcdefghijklmnopqrstuvwxyz'</code>, but I haven't been able to find any.</p> <p>It is no trouble to implement it myself. I found it useful in Python and now that I am working with Javascript I'd be happy to discover if something similar exists, and where to find it.</p>"	65585291	"<p>You can play with this by changing the number before 97. There many other ways, but this one is easy to remember:</p> <pre><code>String.fromCharCode(0+97)  // 'a' String.fromCharCode(1+97)  // 'b' . . . String.fromCharCode(25+97) // 'z' </code></pre>"
65590661	Difference between JavaScript and Python Promise / Awaitable Evaluation	javascript|python|concurrency|promise|async-await	2021-01-06 05:26:46.780000 UTC	"<p>I've been trying to learn the JS concurrency model given a background in Python's.</p> <p>Running the following in Python:</p> <pre><code>async def myFunction():     print(&quot;abc&quot;)  myFunction() </code></pre> <p>will print nothing. Running the following in JavaScript:</p> <pre><code>async function myFunction() {     console.log(&quot;abc&quot;) }  myFunction() </code></pre> <p>will print <code>&quot;abc&quot;</code>. In both cases I did not <code>await</code> <code>myFunction</code>, yet the evaluations were different.</p> <p>I understand why the Python program prints nothing. <code>myFunction</code> is a coroutine function that resolves to nothing, more specifically it returns an <code>Awaitable[None]</code>. But to actually have this awaitable's side effect executed, I must await it.</p> <p>I have also read <a href=""https://stackoverflow.com/questions/35177230/are-promises-lazily-evaluated"">Are promises lazily evaluated?</a> with an answer of no, talking about how the eager evaluation of promises is guaranteed.</p> <p>Even though I've looked at both concurrency models separately, their difference is still confusing. While general clarity about the contrast here would be very helpful, I also do have a specific question: Is there ever a point to awaiting a <code>Promise</code> in JavaScript that resolves to nothing, and should only execute for its side effect? In other words, do <code>await myFunction()</code> and <code>myFunction()</code> possibly have a difference in behavior in a different case, even though they both gave the same output here?</p>"	65625707	"<p>Inside an async function all the asynchronous operations are done by using an await in front of it.</p> <p>If there is an await in front of a promise, then the we wait until the async operation is completed and then continue the remaining code execution.</p> <p>If we don't use await infront of an async operation, we don't resolve the promise and continue.</p> <p>Await in front of a synchronous operation has no effect.</p> <pre><code>// Case I  const test = async() =&gt; {      let res = fetch(&quot;http://localhost:3000&quot;);      console.log(res);      console.log(&quot;It is working&quot;);      // We dont wait for the http request to complete,      // We print res as a &lt;&lt;promise&gt;&gt;       // and continue to the next line and print &quot;It is working&quot;. }   test();  // Case II  const test = async() =&gt; {    let res = await fetch(&quot;http://localhost:3000&quot;);    console.log(res);    console.log(&quot;It is working&quot;);   // We wait for the http request completion.    // After that we print the result.   // Then print ===&gt; It is working }  test();     ()=&gt; {} // stands for an anonymous function also know as Fat arrow function. </code></pre> <p>You use await in front of a function only if it returns a promise. If it returns a promise, we wait for the promise to resolve and continue code execution. If it doesn't returns a promise, default behavior is expected.</p> <pre><code>    const test = () =&gt; {      return fetch(&quot;http://localhost:3000&quot;);      }      let testingAsynFunc = async() =&gt; {         let a = await test();         //Here we wait until the promise is resolved and then continue the code execution.         console.log(a);         console.log(&quot;working&quot;); }  testingAsyncFunc() </code></pre>"
65590661	Difference between JavaScript and Python Promise / Awaitable Evaluation	javascript|python|concurrency|promise|async-await	2021-01-06 05:26:46.780000 UTC	"<p>I've been trying to learn the JS concurrency model given a background in Python's.</p> <p>Running the following in Python:</p> <pre><code>async def myFunction():     print(&quot;abc&quot;)  myFunction() </code></pre> <p>will print nothing. Running the following in JavaScript:</p> <pre><code>async function myFunction() {     console.log(&quot;abc&quot;) }  myFunction() </code></pre> <p>will print <code>&quot;abc&quot;</code>. In both cases I did not <code>await</code> <code>myFunction</code>, yet the evaluations were different.</p> <p>I understand why the Python program prints nothing. <code>myFunction</code> is a coroutine function that resolves to nothing, more specifically it returns an <code>Awaitable[None]</code>. But to actually have this awaitable's side effect executed, I must await it.</p> <p>I have also read <a href=""https://stackoverflow.com/questions/35177230/are-promises-lazily-evaluated"">Are promises lazily evaluated?</a> with an answer of no, talking about how the eager evaluation of promises is guaranteed.</p> <p>Even though I've looked at both concurrency models separately, their difference is still confusing. While general clarity about the contrast here would be very helpful, I also do have a specific question: Is there ever a point to awaiting a <code>Promise</code> in JavaScript that resolves to nothing, and should only execute for its side effect? In other words, do <code>await myFunction()</code> and <code>myFunction()</code> possibly have a difference in behavior in a different case, even though they both gave the same output here?</p>"	65671405	"<pre class=""lang-py prettyprint-override""><code>async def myFunction():     print(&quot;abc&quot;)  awaitable = myFunction() </code></pre> <p>In Python, <code>myFunction()</code> returns an awaitable. The code hasn't run yet. It only runs when you execute a method (<code>.send()</code>) on the awaitable:</p> <pre class=""lang-py prettyprint-override""><code>awaitable.send(None) </code></pre> <p>You typically don't use <code>.send()</code>, these mechanics are hidden. You will just use <code>await myFunction()</code> or <code>asyncio.get_event_loop().run_until_complete(myFunction())</code>, and this will execute the function's code behind the scenes.</p> <p>In JavaScript, an async function returns a promise. The MDN JS reference <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise"" rel=""nofollow noreferrer"">says</a>:</p> <blockquote> <p>Promises in JavaScript represent processes that are already happening</p> </blockquote> <p>So when you call the async function in JavaScript, the function's code starts running, and <strong>at some point</strong> a promise is returned. Here's what the MDN JS reference <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/async_function"" rel=""nofollow noreferrer"">says about it</a>:</p> <blockquote> <p>The body of an async function can be thought of as being split by zero or more await expressions. Top-level code, up to and including the first await expression (if there is one), is run synchronously. In this way, an async function without an await expression will run synchronously. If there is an await expression inside the function body, however, the async function will always complete asynchronously.</p> </blockquote> <p>Given all this, I don't see why you would await an async JS function if you only wanted its side effect (unless the caller needs the side effect to have occurred before proceeding).</p>"
65593813	What is the Python Equivalent function of Javascript Map()?	python	2021-01-06 10:10:28.720000 UTC	<p>I am searching for a python equivalent code/function for the below javascript code.</p> <pre><code>let nameSetFlagMap = new Map(); </code></pre>	65593869	"<p>what you are looking for would be Dictionary.</p> <pre><code>nameSetFlagMap={} #or nameSetFlagMap=dict() </code></pre> <p>you can learn more about them <a href=""https://www.w3schools.com/python/python_dictionaries.asp"" rel=""nofollow noreferrer"">here</a></p>"
65593813	What is the Python Equivalent function of Javascript Map()?	python	2021-01-06 10:10:28.720000 UTC	<p>I am searching for a python equivalent code/function for the below javascript code.</p> <pre><code>let nameSetFlagMap = new Map(); </code></pre>	65593923	"<p><a href=""https://docs.python.org/3/library/collections.html#collections.OrderedDict"" rel=""nofollow noreferrer"">Ordered dictionary</a></p> <pre><code>from collections import OrderedDict  nameSetFlagMap = OrderedDict() nameSetFlagMap[&quot;a&quot;] = &quot;a&quot; nameSetFlagMap[&quot;b&quot;] = &quot;b&quot; </code></pre>"
65593813	What is the Python Equivalent function of Javascript Map()?	python	2021-01-06 10:10:28.720000 UTC	<p>I am searching for a python equivalent code/function for the below javascript code.</p> <pre><code>let nameSetFlagMap = new Map(); </code></pre>	73784713	"<p>Both answers above are wrong because they do not have the same behavior as Map() from js</p> <hr /> <pre class=""lang-py prettyprint-override""><code>from collections import OrderedDict asd = OrderedDict()  asd2 = []  asd[asd2] = 123  asd2.append(444)  print(asd)  print(asd[asd2]) </code></pre> <p>output:</p> <pre><code>Traceback (most recent call last):   File &quot;/home/nikel/asd.py&quot;, line 10, in &lt;module&gt;     asd[asd2] = 123 TypeError: unhashable type: 'list' </code></pre> <hr /> <pre class=""lang-py prettyprint-override""><code>from collections import OrderedDict asd = OrderedDict()  asd2 = {}  asd[asd2] = 123  asd2.append(444)  print(asd)  print(asd[asd2]) </code></pre> <p>output:</p> <pre><code>Traceback (most recent call last):   File &quot;/home/nikel/asd.py&quot;, line 10, in &lt;module&gt;     asd[asd2] = 123 TypeError: unhashable type: 'list' </code></pre> <hr /> <pre class=""lang-js prettyprint-override""><code>asd = new Map()  asd[555] = 666  asd2 = []   asd[asd2] = 123  asd2.push(444)  console.log(asd)  console.log(asd[asd2]) </code></pre> <p>output:</p> <pre><code>Map(0) { '555': 666, '': 123 } 123 </code></pre> <p>I'm currently searching for analog too, so will update after I will find it.</p> <p>But according to <a href=""https://stackoverflow.com/a/7257711/12634253"">this answer</a> looks like it is impossible.</p>"
65613827	Using a python output in javascript	javascript|python|api|raspberry-pi|api-design	2021-01-07 14:04:47.023000 UTC	"<p>We want to send a boolean value from python to javascript so we can use it in our html website.</p> <p>We tried using sockets but thats too complicated for us. Our next thought was to use an api and we know how to get information from an api using javascript. What we want to do is post a python boolean value to an api, and then get the boolean value from the api using javascript. But we don't know how to do so.</p> <p>We are using a raspberry pi for all our code and a hardware-button which returns true in python when pressed.</p> <p>We are currently testing code we found from <a href=""https://healeycodes.com/javascript/python/beginners/webdev/2019/04/11/talking-between-languages.html"" rel=""nofollow noreferrer"">https://healeycodes.com/javascript/python/beginners/webdev/2019/04/11/talking-between-languages.html</a></p> <p>But this code doesnt work for us. We are also using pycharm as our workspace, is this a problem?</p> <p>Our current code in javascript:</p> <pre><code>    const request = new XMLHttpRequest();     request.open(&quot;GET&quot;, url, true);     request.onreadystatechange = function() {         if (request.readyState === 4 &amp;&amp; request.status === 200) {             success(JSON.parse(request.responseText));         }     };     request.send();      setInterval(get(&quot;button-status.json&quot;, receiveStatus), 3000); }   function receiveStatus(response) {     if (response.status !== status) {  // only do something if status has changed         status = response.status;         console.log('button status is now', status);     } } let status; // checks every 100ms get() </code></pre> <p>Our python code we're using for testing:</p> <pre><code>import random import json import time button_status = False path = (r&quot;C:\Users\Sam\Desktop\pythonProject\pythonflask\emplates&quot;)  # replace with your actual path  def save_button_status():     with open(path + &quot;/button-status.json&quot;, &quot;w&quot;) as f:         json.dump({'status': button_status}, f)    while True :     value = random.randrange(1, 10)     if ( value &lt;= 5) :         button_status = True         save_button_status()         time.sleep(3)     else :         button_status = False         save_button_status()         time.sleep(3)      print(button_status) </code></pre>"	65614927	<p>You can try to set up a SQL Database. Write a SQL statement in Python to receive your boolean. After that make a PHP script on your Web server to receive the SQL data. Then sent a request to the URL of the PHP script using an XHTTP JavasScript request.</p>
65613827	Using a python output in javascript	javascript|python|api|raspberry-pi|api-design	2021-01-07 14:04:47.023000 UTC	"<p>We want to send a boolean value from python to javascript so we can use it in our html website.</p> <p>We tried using sockets but thats too complicated for us. Our next thought was to use an api and we know how to get information from an api using javascript. What we want to do is post a python boolean value to an api, and then get the boolean value from the api using javascript. But we don't know how to do so.</p> <p>We are using a raspberry pi for all our code and a hardware-button which returns true in python when pressed.</p> <p>We are currently testing code we found from <a href=""https://healeycodes.com/javascript/python/beginners/webdev/2019/04/11/talking-between-languages.html"" rel=""nofollow noreferrer"">https://healeycodes.com/javascript/python/beginners/webdev/2019/04/11/talking-between-languages.html</a></p> <p>But this code doesnt work for us. We are also using pycharm as our workspace, is this a problem?</p> <p>Our current code in javascript:</p> <pre><code>    const request = new XMLHttpRequest();     request.open(&quot;GET&quot;, url, true);     request.onreadystatechange = function() {         if (request.readyState === 4 &amp;&amp; request.status === 200) {             success(JSON.parse(request.responseText));         }     };     request.send();      setInterval(get(&quot;button-status.json&quot;, receiveStatus), 3000); }   function receiveStatus(response) {     if (response.status !== status) {  // only do something if status has changed         status = response.status;         console.log('button status is now', status);     } } let status; // checks every 100ms get() </code></pre> <p>Our python code we're using for testing:</p> <pre><code>import random import json import time button_status = False path = (r&quot;C:\Users\Sam\Desktop\pythonProject\pythonflask\emplates&quot;)  # replace with your actual path  def save_button_status():     with open(path + &quot;/button-status.json&quot;, &quot;w&quot;) as f:         json.dump({'status': button_status}, f)    while True :     value = random.randrange(1, 10)     if ( value &lt;= 5) :         button_status = True         save_button_status()         time.sleep(3)     else :         button_status = False         save_button_status()         time.sleep(3)      print(button_status) </code></pre>"	65635890	"<p>Javascript within a webpage cannot directly run a Python script on your computer or read information from a local terminal. What you could do is have your Python program output a small json file to your localhost folder which is overwritten when the button is pressed or released, like this:</p> <pre><code>import json button_status = False   # assuming it is initially off path = &quot;path/to/your/localhost/folder&quot;  # replace with your actual path  def save_button_status():     with open(path + &quot;/button-status.json&quot;, &quot;w&quot;) as f:         json.dump({'status': button_status}, f)  # Then call save_button_status() whenever the status changes </code></pre> <p>Then in your javascript, set an interval to periodically call a function that gets this json file and does something based on the value if it has changed:</p> <pre><code>function get(url, success) {     //--- Get JSON data at the given URL and call `success` if successful     const request = new XMLHttpRequest();     request.open(&quot;GET&quot;, url, true);     request.onreadystatechange = function() {         if (request.readyState === 4 &amp;&amp; request.status === 200) {             success(JSON.parse(request.responseText));         }        };     request.send(); }  function receiveStatus(response) {     if (response.status !== status) {  // only do something if status has changed         status = response.status;         console.log('button status is now', status);     } } let status; let interval = setInterval(() =&gt; get(&quot;button-status.json&quot;, receiveStatus), 100); // checks every 100ms </code></pre> <p>There may be some lag as your local server updates the file.</p>"
65636169	How to replicate Python HTTP request inside Javascript without getting CORS error?	javascript|python|http|axios	2021-01-08 20:46:17.657000 UTC	"<p>I'm able to make this request without any error using python:</p> <pre><code>async def send_request():          session = aiohttp.ClientSession()     body = {         'client_id': 'play-valorant-web-prod',         'nonce': '1',         'redirect_uri': 'https://playvalorant.com/opt_in',         'response_type': 'token id_token',     }     response = await session.post('https://auth.riotgames.com/api/v1/authorization', json=body)     print(response) </code></pre> <p>But then I try doing the same thing inside my website using Javascript and Axios:</p> <pre><code>async function send_request() {     const data = {         &quot;client_id&quot;: &quot;play-valorant-web-prod&quot;,         &quot;nonce&quot;: &quot;1&quot;,         &quot;redirect_uri&quot;: &quot;https://playvalorant.com/opt_in&quot;,         &quot;response_type&quot;: &quot;token id_token&quot;     }      const response = await axios.post('https://auth.riotgames.com/api/v1/authorization', data)     console.log(response) } </code></pre> <p>And I get the following error:</p> <pre><code>Access to XMLHttpRequest at 'https://auth.riotgames.com/api/v1/authorization' from origin  'http://localhost:3000' has been blocked by CORS policy: Response to preflight request doesn't  pass access control check: No 'Access-Control-Allow-Origin' header is present on the requested resource. </code></pre> <p>Is there a way of making this request from my website?</p> <p>Many thanks!</p>"	65643331	"<p>Modern browser has restrction to fetch resource when you use XMLHTTPReques or fetchAPI in you website. So if you own the hosts(in you case is &quot;auth.riotgames.com&quot;),you juse add CORS headers in HTTP response, there are serveral header you may notice:</p> <ul> <li>Access-Control-Allow-Origin: the origin you want to allow, '*' repersent all origin allowed and notice protocorl should be present as for example &quot;http://www.stackoverflow.com&quot; and &quot;https://www.stackoverflow.com&quot; are two differenct origin.</li> <li>Access-Control-Allow-Methods: the HTTP Method allowed for the request</li> <li>Access-Control-Allow-Headers: the server determine weather it want to accept the request when the heders set in.</li> <li>Access-Control-Allow-Credentials: the server wantt o accept the request with cookie in request not not.</li> </ul> <p>some case is more complex than that like you use content-type applicaton/json, browser make preflight with OPTIONS request before send real request.you my accpet request in server.you may also handle that.</p> <p>another approch's you just make a proxy which host as same domain with you webiste, same protocol, domain, port. proxy server handles all request from webiste and refirect to the real one.</p> <p>Hope this useful to you.</p>"
65638971	Javascript CryptoJS HmacSHA256 in Python?	javascript|python|python-3.x	2021-01-09 03:07:57.260000 UTC	"<p>Is it possible to write these functions in Python?</p> <pre><code>var hash = CryptoJS.HmacSHA256(&quot;Message&quot;, &quot;Secret Passphrase&quot;); var v = hash.toString(CryptoJS.enc.Hex) </code></pre> <p>Thanks in advance.</p>"	65638993	"<p>Yes, using <code>hmac</code> and <code>hashlib</code> from the standard library.</p> <pre><code>import hashlib import hmac  message = b&quot;Message&quot; key = b&quot;Secret Passphrase&quot;  h = hmac.new(key, message, hashlib.sha256) print(h.hexdigest()) </code></pre> <p>Gives output <code>32c647602ab4c4c7543e9c50ae25e567c3354e1532b11649ce308e6e2568d205</code>, which is identical to <code>v</code> in answer.</p>"
65671455	Passing Python variable to JavaScript	python|html|web	2021-01-11 17:10:08.783000 UTC	"<p>I am trying to execute some JavaScript code through Python.</p> <pre><code>def home():     code = &quot;&quot;&quot;     var regexp = new RegExp(/playerCaptionsTracklistRenderer.*?(youtube.com\/api\/timedtext.*?)&quot;/);     var url = regexp.exec(document.body.innerHTML)[1];     open(&quot;caption.py?url=&quot; + encodeURIComponent(url));     &quot;&quot;&quot;     code = quote(code, safe='~()*!.\'')     return &quot;&quot;&quot;&lt;a href=&quot;javascript:(function(){ code })()&quot;&gt;YouTube Transcriber&lt;/a&gt;&quot;&quot;&quot; </code></pre> <p>As I understand, variables from Python must be passing to JavaScript automatically, but I get the following exception in last line in JavaScript:</p> <p><code>Uncaught ReferenceError: code is not defined</code></p>"	65671505	"<p>You aren't telling python to put the contents of <code>code</code> into your returned string. You could do it like this:</p> <pre><code>return &quot;&quot;&quot;&lt;a href=&quot;javascript:(function(){ &quot;&quot;&quot; + code + &quot;&quot;&quot; })()&quot;&gt;YouTube Transcriber&lt;/a&gt;&quot;&quot;&quot; </code></pre> <p>You can't just put a variable name in a string and expect its contents to be automatically put into the string. It's not clear why you would expect that to happen. It's something you explicitly have to do, via either string formatting, or concatenation.</p>"
65671455	Passing Python variable to JavaScript	python|html|web	2021-01-11 17:10:08.783000 UTC	"<p>I am trying to execute some JavaScript code through Python.</p> <pre><code>def home():     code = &quot;&quot;&quot;     var regexp = new RegExp(/playerCaptionsTracklistRenderer.*?(youtube.com\/api\/timedtext.*?)&quot;/);     var url = regexp.exec(document.body.innerHTML)[1];     open(&quot;caption.py?url=&quot; + encodeURIComponent(url));     &quot;&quot;&quot;     code = quote(code, safe='~()*!.\'')     return &quot;&quot;&quot;&lt;a href=&quot;javascript:(function(){ code })()&quot;&gt;YouTube Transcriber&lt;/a&gt;&quot;&quot;&quot; </code></pre> <p>As I understand, variables from Python must be passing to JavaScript automatically, but I get the following exception in last line in JavaScript:</p> <p><code>Uncaught ReferenceError: code is not defined</code></p>"	65671576	"<p>Inside your <code>return</code> statement, inside the JS function, there is literally the word &quot;code&quot;, which is undefined. You probably wanted to enter the value of the variable <code>code</code> in which case you need to break the string apart, and add the <code>code</code> variable in between like this:</p> <pre class=""lang-py prettyprint-override""><code>return &quot;&quot;&quot;&lt;a href=&quot;javascript:(function(){&quot;&quot;&quot; + str(code) + &quot;&quot;&quot;})()&quot;&gt;YouTube Transcriber&lt;/a&gt;&quot;&quot;&quot; </code></pre>"
65689097	How do i generate and sum up random numbers from an array in javascript and python	javascript|arrays	2021-01-12 17:38:32.063000 UTC	"<p>I have a function that takes an array and a target number. The goal is two generate any two random numbers from the array and sum them up. If the sum of the two random integers is equal to the target number, I then have to return the index of the two random numbers in the array.</p> <p>Here is my code so far, I keep getting a stderr. How do you recommend I go about this.</p> <pre><code>function twoSum (numbers, target) {   let numIdx = [];   let sum = 0;   let firstValue = 0;   let secValue = 0    while(sum !== target) {     firstValue = Math.floor(Math.random() * numbers.length);     secValue = Math.floor(Math.random() * numbers.length);     sum = firstValue + secValue;          if (sum === target) {       numIdx.push(numbers[firstValue])       numIdx.push(numbers[secValue])       return numIdx     }   } } </code></pre>"	65689264	"<p>currently you are summing the <code>indexes</code> and returning <code>values</code>. I think this may be issue.</p> <p>try</p> <pre><code>sum = numbers[firstValue] + numbers[secValue];  and   return [firstValue, secValue] </code></pre> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-js lang-js prettyprint-override""><code>function twoSum (numbers, target, max_trials = 100) {   let sum = 0;   let first = 0;   let sec = 0   let trials = 0;      const rand = () =&gt; Math.floor(Math.random() * numbers.length);    while(sum !== target &amp;&amp; trials++ &lt; max_trials ) {     first = rand();     sec = rand();     sum = numbers[first] + numbers[sec];          if (sum === target) {       console.log('Trials: ', trials)       return [first, sec];     }   }   console.log('Trials maxed out: ', trials) }  const data = [1, 4, 7, 3, 11, 9]; const target = 15; // expecting 1, 4  console.log(twoSum(data, target))</code></pre> </div> </div> </p>"
65689097	How do i generate and sum up random numbers from an array in javascript and python	javascript|arrays	2021-01-12 17:38:32.063000 UTC	"<p>I have a function that takes an array and a target number. The goal is two generate any two random numbers from the array and sum them up. If the sum of the two random integers is equal to the target number, I then have to return the index of the two random numbers in the array.</p> <p>Here is my code so far, I keep getting a stderr. How do you recommend I go about this.</p> <pre><code>function twoSum (numbers, target) {   let numIdx = [];   let sum = 0;   let firstValue = 0;   let secValue = 0    while(sum !== target) {     firstValue = Math.floor(Math.random() * numbers.length);     secValue = Math.floor(Math.random() * numbers.length);     sum = firstValue + secValue;          if (sum === target) {       numIdx.push(numbers[firstValue])       numIdx.push(numbers[secValue])       return numIdx     }   } } </code></pre>"	65689268	"<h3>Solution</h3> <ul> <li>Generate two indices with random number in the boundaries of the length of your array.</li> <li>Sum up the values at the indices when the sum is equal to target then return the indices.</li> </ul> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-js lang-js prettyprint-override""><code>function twoSum(numbers, target) {   let numIdx = [];   let sum = 0;      while (sum !== target) {     let firstIndic = getRandomInt(numbers.length);     let firstValue = numbers[firstIndic];     let secIndic = getRandomInt(numbers.length);     let secValue = numbers[secIndic];     sum = firstValue + secValue;      if (sum === target) {       numIdx.push(firstIndic)       numIdx.push(secIndic)       return numIdx     }   } }   function getRandomInt(max) {   return Math.floor(Math.random() * Math.floor(max)); }  console.log(twoSum([   12,   5,   4,   9 ], 21));</code></pre> </div> </div> </p>"
65689097	How do i generate and sum up random numbers from an array in javascript and python	javascript|arrays	2021-01-12 17:38:32.063000 UTC	"<p>I have a function that takes an array and a target number. The goal is two generate any two random numbers from the array and sum them up. If the sum of the two random integers is equal to the target number, I then have to return the index of the two random numbers in the array.</p> <p>Here is my code so far, I keep getting a stderr. How do you recommend I go about this.</p> <pre><code>function twoSum (numbers, target) {   let numIdx = [];   let sum = 0;   let firstValue = 0;   let secValue = 0    while(sum !== target) {     firstValue = Math.floor(Math.random() * numbers.length);     secValue = Math.floor(Math.random() * numbers.length);     sum = firstValue + secValue;          if (sum === target) {       numIdx.push(numbers[firstValue])       numIdx.push(numbers[secValue])       return numIdx     }   } } </code></pre>"	65689396	"<p>Loop through array of numbers</p> <p>Then for each one of those numbers loop through again and check if <code>number1</code> + <code>number2</code> is equal to your <code>target</code> and also that <code>number1</code> and <code>number2</code> arent at the same position in the array (unless that's okay with you)</p> <p>and return each index</p> <pre class=""lang-js prettyprint-override""><code>function twoSum(numbers, target) {   // Loop through the array of numbers   for (let i = 0; i &lt; numbers.length; i++) {     const number1 = numbers[i];      for (let j = 0; j &lt; numbers.length; j++) {       const number2 = numbers[j];       // Check if number1 + number2 is equal to target and also make sure number1 and number2 aren't at the same index in the array       if (number1 + number2 === target &amp;&amp; i !== j) {         return `index 1: ${i}, index 2: ${j}`       }     }   } } </code></pre> <p>for instance calling this <code>twoSum([1,2,3], 4)</code> would result in <code>index 1: 0, index 2: 2</code></p>"
65689097	How do i generate and sum up random numbers from an array in javascript and python	javascript|arrays	2021-01-12 17:38:32.063000 UTC	"<p>I have a function that takes an array and a target number. The goal is two generate any two random numbers from the array and sum them up. If the sum of the two random integers is equal to the target number, I then have to return the index of the two random numbers in the array.</p> <p>Here is my code so far, I keep getting a stderr. How do you recommend I go about this.</p> <pre><code>function twoSum (numbers, target) {   let numIdx = [];   let sum = 0;   let firstValue = 0;   let secValue = 0    while(sum !== target) {     firstValue = Math.floor(Math.random() * numbers.length);     secValue = Math.floor(Math.random() * numbers.length);     sum = firstValue + secValue;          if (sum === target) {       numIdx.push(numbers[firstValue])       numIdx.push(numbers[secValue])       return numIdx     }   } } </code></pre>"	65689634	"<pre><code>var arr=[2,5,3,4,7]; var num=5; function twoSum (numbers, target) {   let numIdx = [];   let sum = 0;   let firstValue = 0;   let secValue = 0    while(sum !== target) {     firstValue = Math.floor(Math.random() * Math.floor(numbers.length));     let f1=numbers[firstValue];     secValue = Math.floor(Math.random() * Math.floor(numbers.length));     let f2=numbers[secValue];     sum = f1 + f2;          if (sum === target) {       numIdx.push(firstValue)       numIdx.push(secValue)       return numIdx     }   } } document.write(twoSum(arr,num)); </code></pre>"
65730803	How to work with links that use javascript:window.location using Selenium in Python	python|selenium|selenium-webdriver	2021-01-15 05:08:16.380000 UTC	"<p>I have dabbled with bits of simple code over the years. I am now interested in automating some repetitive steps in a web based CRM used at work. I tried a few automation tools. I was not able to get AutoIT to to work with the Chrome webdriver. I then tried WinTask and did not make meaningful progress. I started exploring Python and Selenium last week.</p> <p>I now have automated the first few steps of my project by Googling about each step I wanted to achieve, learning from pages on Stackflow and other sites. Where I need help is that most of the links in the CRM are some sort of javascript links. Most of the text links or images have links that are formatted like this...</p> <p>javascript:window.location = 'Reports/ResponseTimes.aspx?from=1%2f14%2f2021&amp;to=1%2f14%2f2021&amp;target=gn';</p> <p>It looks like the many find_element_by functions in Selenium do not interact with the javascript links. Tonight I found a page that directed me to use... driver.execute_script(javaScript) ...Eventually I found an example that made it clear I should enter the javascript link into that function. This works...</p> <p>driver.execute_script(&quot;window.location = 'Reports/ResponseTimes.aspx?from=1%2f14%2f2021&amp;to=1%2f14%2f2021&amp;target=gn';&quot;)</p> <p>My issue is that I see now that the javascript links are actually and dynamically generated. In the code above the link gets updated with dates based on the current date. I can't reuse the driver.execute_script() code above since the dates have to be updated.</p> <p>My hope is to find a way to code so that I can locate the javascript links I need based on some part of the link that does not change. The link above always has &quot;target=gn&quot; at the end and that is unique enough that if I could find and pull the current version of the link into a variable and then run it in driver.execute_script(), I believe that would solve my current issue.</p> <p>I expect a solution could then be used in the next step I need to perform, where there a list of new leads that all needs to be updated in a manner that tells the system a human has reviewed the lead and &quot;stopped the clock&quot;. To view each lead, there are more javascript links. Each link is unique since it includes a value that is the record number for the lead. Here's the first two...</p> <p>javascript:top.viewItem(971244899); javascript:top.viewItem(971312602);</p> <p>I imagine that being able to search the page for some or all of... javascript:top.viewItem( ...in order to create a variable for... javascript:top.viewItem(971244899); ...so that it can be placed in... driver.execute_script() ...is the approach that is needed.</p> <p>Thanks for any suggestions. I have made many searches on this site and Google for phrases that might teach me more about working with javascript links. I am asking for guidance since I have not been able to move forward on my own. Here's my current code...</p> <pre><code>import selenium PATH = &quot;C:\Program Files (x86)\chromedriver.exe&quot; from selenium import webdriver from selenium.webdriver.common.keys import Keys import time  driver = webdriver.Chrome(PATH) driver.get(&quot;https://apps.vinmanager.com/cardashboard/login.aspx&quot;) # log in time.sleep(1) search = driver.find_element_by_name(&quot;username&quot;) search.send_keys(&quot;xxx&quot;) search.send_keys(Keys.RETURN) time.sleep(2) search = driver.find_element_by_name(&quot;password&quot;) search.send_keys(&quot;xxx&quot;) search.send_keys(Keys.RETURN) time.sleep(1) # close news pop-up driver.find_element_by_link_text(&quot;Close&quot;).click() time.sleep(2) # Nav to left pane driver.switch_to.frame('leftpaneframe') # Leads at No Contact link driver.execute_script(&quot;window.location = 'Reports/ResponseTimes.aspx?from=1%2f14%2f2021&amp;to=1%2f14%2f2021&amp;target=gn';&quot;) </code></pre>"	65836949	"<p>Eventually I found enough info online to recognize that I needed to replace the &quot;//a&quot; tag in the xpath find method with the proper tag, which was &quot;//area&quot; in my case and then extract the href so that I could execute it...</p> <pre><code>## click no contact link ## print('click no contact link...') cncl = driver.find_element_by_xpath(&quot;//area[contains(@href,'target=gn')]&quot;).get_attribute('href') time.sleep(2) driver.execute_script(cncl) </code></pre>"
65754054	aes-cmac in javascript not giving the same results as in python	javascript|node.js|cbc-mode|cmac	2021-01-16 19:55:40.397000 UTC	"<p>I'm writing code to read/write to NTAG424 DNA NFC tags. I'm doing this completely in javascript, because I want to be able to use it in a react native app.</p> <p>In <a href=""https://www.nxp.com/docs/en/application-note/AN12196.pdf"" rel=""nofollow noreferrer"">NTAG 424 DNA and NTAG 424 DNA TagTamper features and hints</a> they show the results you should be getting for every step. But they use a python solution.</p> <p>The input message is <code>A55A0001008013C56268A548D8FBBF237CCCAA20EC7E6E48C3DEF9A4C675360F</code> and the output (according to the manual) is <code>1309C877509E5A215007FF0ED19CA564</code>. Whereas I get <code>7CCEF6FEB32F34CA48CB685ECAA0F32C</code>.</p> <p>Because I need to be able to use this code commercially, I cannot just use any library.</p> <pre><code>function generateSubkeys(key) {   const cipher = crypto.createCipheriv(&quot;aes-128-ecb&quot;, key, &quot;&quot;);    const cryptedKey = cipher.update(iv);    let subkey1 = bt.bitShiftLeft(cryptedKey);   if (msb(cryptedKey[0]) &amp; 0x80) {     subkey1 = xor(subkey1, 0x87);   }    let subkey2 = bt.bitShiftLeft(subkey1);   if (msb(subkey1[0]) &amp; 0x80) {     subkey2 = xor(subkey2, 0x87);   }   return { subkey1: subkey1, subkey2: subkey2 }; }  function msb(bytes) {   return bytes &gt;&gt;&gt; 31; } function aes(key, message) {   const cipher = crypto.createCipheriv(     &quot;aes-&quot; + key.length * 8 + &quot;-cbc&quot;,     key,     iv   );    var result = cipher.update(message);   cipher.final();    return result; }  function aesCmac(key, message) {   const { subkey1, subkey2 } = generateSubkeys(Buffer.from(key, &quot;hex&quot;));   let numBlocks = Math.ceil(message.length / blockSize);   var lastBlockRemainder = message.length % blockSize;    if (numBlocks === 0) {     numBlocks = 1;   }    var messageArray = getMessageArray(message, numBlocks, lastBlockRemainder);   if (lastBlockRemainder === 0) {     messageArray[numBlocks - 1] = xor(messageArray[numBlocks - 1], subkey1);   } else {     messageArray[numBlocks - 1] = xor(messageArray[numBlocks - 1], subkey2);   }    var c = aes(     key,     Buffer.concat(messageArray.slice(0, messageArray.length - 1))   );   let c_xor_m = xor(c, messageArray[messageArray.length - 1]);   c = aes(key, c_xor_m);    return c; }  function getMessageArray(message, numBlocks, lastBlockRemainder) {   var index = 0;   var messageArray = [];   if (lastBlockRemainder !== 0) {     let padding = &quot;80&quot; + &quot;00&quot;.repeat(16 - lastBlockRemainder - 1);     let appendToMessage = Buffer.from(padding, &quot;hex&quot;);     message = Buffer.concat([message, appendToMessage]);   }   for (index = 0; index &lt; numBlocks; index++) {     let messageBlock = message.slice(       index * blockSize,       (index + 1) * blockSize     );     messageArray.push(messageBlock);   }    return messageArray; } </code></pre> <p>I already tried the one mentioned here <a href=""https://stackoverflow.com/questions/24000834/aes-cmac-module-for-node-js"">AES-CMAC module for Node.js?</a> and completely rewriting the code to my own version of an AES-CMAC algorithm. In both the one I tried and the one I made (with the help of <a href=""https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-38b.pdf"" rel=""nofollow noreferrer"">NIST Special Publication 800-38B</a>), I get the same results.</p> <p>Now I'm stuck between thinking either my code is wrong, or the <a href=""https://github.com/pycrypto/pycrypto/blob/master/lib/Crypto/Hash/CMAC.py"" rel=""nofollow noreferrer"">python crypto library</a> (where I don't completely understand the code) is wrong.</p> <p>Can anyone help me figure out which of the two is true? And in case my code is wrong, help me fix it.</p>"	65899244	"<p>I found the answer: The Crypto library in javascript has an aes-cbc cipher, that says (and it does) accepts buffers and arrays. But the outcomes of both are different.</p> <p>When I used a UInt8Array I got the right outcome. I completely rewrote an aes-cmac algorithm, just to figure out this what all I needed.</p>"
65771772	"python selenium, get over javascript popup"	javascript|python|selenium|popup	2021-01-18 09:24:57.413000 UTC	"<p><strong>I'm working on a project and I have to go to a site and drop a soy there. I am trying to do this using the Python selenium module, but when I enter the site with a bot, I get a popup (an acceptance form about cookies). I cannot achieve what I am trying to do without pressing accept.</strong></p> <p><a href=""https://i.stack.imgur.com/Ckoka.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/Ckoka.png"" alt=""enter image description here"" /></a></p> <p><strong>I checked the network section of the site and found the site containing cookies, when I enter that site the code works properly and it succeeds in pushing the accept cookies button, but this does not work for me because it cannot even find the accept button on the main site, I know it is not because it is written in javascript, but i don't know how to do this.</strong></p> <p>Anyway, let's get to the code part.</p> <p><a href=""https://speech-to-text-demo.ng.bluemix.net/"" rel=""nofollow noreferrer"">on the site I'm trying to login</a></p> <p><a href=""https://consent-pref.trustarc.com/?type=jefftest_ibm&amp;site=ibm.com&amp;action=notice&amp;country=tr&amp;locale=tr&amp;behavior=expressed&amp;gtm=1&amp;layout=default_eu&amp;irm=undefined&amp;from=https://consent.trustarc.com/#"" rel=""nofollow noreferrer"">the site that sent the cookie form the site uses</a></p> <p>this code works for <a href=""https://consent-pref.trustarc.com/?type=jefftest_ibm&amp;site=ibm.com&amp;action=notice&amp;country=tr&amp;locale=tr&amp;behavior=expressed&amp;gtm=1&amp;layout=default_eu&amp;irm=undefined&amp;from=https://consent.trustarc.com/#"" rel=""nofollow noreferrer"">this</a>:</p> <pre><code>from selenium import webdriver import time from bs4 import BeautifulSoup from selenium.webdriver.common.by import By from selenium.webdriver.common.keys import Keys  option = webdriver.ChromeOptions() option.add_argument('--disable-notifications') option.add_argument(&quot;--mute-audio&quot;)  driver = webdriver.Chrome(&quot;chromedriver.exe&quot;, options=option)   driver.get('https://consent-pref.trustarc.com/?type=jefftest_ibm&amp;site=ibm.com&amp;action=notice&amp;country=tr&amp;locale=tr&amp;behavior=expressed&amp;gtm=1&amp;layout=default_eu&amp;irm=undefined&amp;from=https://consent.trustarc.com/#')   time.sleep(10) driver.find_elements_by_class_name(&quot;call&quot;)[0].click() </code></pre> <p><strong>but it doesn't work for the other, how can I get this to work for the other too?</strong></p>"	65771897	"<p>You could use pyautogui instead to stimulate the click:</p> <pre class=""lang-py prettyprint-override""><code>import pyautogui  pyautogui.click(x=100, y=200) </code></pre>"
65771772	"python selenium, get over javascript popup"	javascript|python|selenium|popup	2021-01-18 09:24:57.413000 UTC	"<p><strong>I'm working on a project and I have to go to a site and drop a soy there. I am trying to do this using the Python selenium module, but when I enter the site with a bot, I get a popup (an acceptance form about cookies). I cannot achieve what I am trying to do without pressing accept.</strong></p> <p><a href=""https://i.stack.imgur.com/Ckoka.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/Ckoka.png"" alt=""enter image description here"" /></a></p> <p><strong>I checked the network section of the site and found the site containing cookies, when I enter that site the code works properly and it succeeds in pushing the accept cookies button, but this does not work for me because it cannot even find the accept button on the main site, I know it is not because it is written in javascript, but i don't know how to do this.</strong></p> <p>Anyway, let's get to the code part.</p> <p><a href=""https://speech-to-text-demo.ng.bluemix.net/"" rel=""nofollow noreferrer"">on the site I'm trying to login</a></p> <p><a href=""https://consent-pref.trustarc.com/?type=jefftest_ibm&amp;site=ibm.com&amp;action=notice&amp;country=tr&amp;locale=tr&amp;behavior=expressed&amp;gtm=1&amp;layout=default_eu&amp;irm=undefined&amp;from=https://consent.trustarc.com/#"" rel=""nofollow noreferrer"">the site that sent the cookie form the site uses</a></p> <p>this code works for <a href=""https://consent-pref.trustarc.com/?type=jefftest_ibm&amp;site=ibm.com&amp;action=notice&amp;country=tr&amp;locale=tr&amp;behavior=expressed&amp;gtm=1&amp;layout=default_eu&amp;irm=undefined&amp;from=https://consent.trustarc.com/#"" rel=""nofollow noreferrer"">this</a>:</p> <pre><code>from selenium import webdriver import time from bs4 import BeautifulSoup from selenium.webdriver.common.by import By from selenium.webdriver.common.keys import Keys  option = webdriver.ChromeOptions() option.add_argument('--disable-notifications') option.add_argument(&quot;--mute-audio&quot;)  driver = webdriver.Chrome(&quot;chromedriver.exe&quot;, options=option)   driver.get('https://consent-pref.trustarc.com/?type=jefftest_ibm&amp;site=ibm.com&amp;action=notice&amp;country=tr&amp;locale=tr&amp;behavior=expressed&amp;gtm=1&amp;layout=default_eu&amp;irm=undefined&amp;from=https://consent.trustarc.com/#')   time.sleep(10) driver.find_elements_by_class_name(&quot;call&quot;)[0].click() </code></pre> <p><strong>but it doesn't work for the other, how can I get this to work for the other too?</strong></p>"	66197469	"<p><strong>@The Pilot Dude 's answer works in a way, but it can't be said to be very dynamic so:</strong></p> <p><strong>I went to the site with original chrome and accepted cookies and saved these cookies. When I had to re-enter the site later, I reloaded the cookies.</strong></p> <p><strong>for download cookies:</strong></p> <pre><code>import pickle import time from selenium import webdriver  option = webdriver.ChromeOptions() option.add_argument(&quot;--disable-notifications&quot;) option.add_argument(&quot;--mute-audio&quot;) option.add_argument(&quot;user-data-dir=C:\\Users\\___*******__\\AppData\Local\\Google\\Chrome\\User Data&quot;) driver = webdriver.Chrome(options = option)  driver.get('https://speech-to-text-demo.ng.bluemix.net/')  time.sleep(10)#in this time I accepted cookies  pickle.dump(driver.get_cookies(), open(&quot;cookies.pkl&quot;,&quot;wb&quot;))#for download cookies </code></pre> <p><strong>and after that I can use cookies for chromedriver.exe</strong></p> <p><strong>for use cookies:</strong></p> <pre><code>import pickle from selenium import webdriver  option = webdriver.ChromeOptions() option.add_argument(&quot;--disable-notifications&quot;) option.add_argument(&quot;--mute-audio&quot;) driver = webdriver.Chrome(&quot;chromedriver.exe&quot;, options = option)  driver.get('https://speech-to-text-demo.ng.bluemix.net/')  file = open(&quot;cookies.pkl&quot;,&quot;rb&quot;) cookies = pickle.load(file) for cookie in cookies:     driver.add_cookie(cookie)#for use cookies file.close() </code></pre>"
65778367	How to get Meta Description tag of a web page using python or javascript	javascript|python|meta-tags	2021-01-18 16:24:57.523000 UTC	<p>I am tryin to make a programme which can get the <code>&lt;meta&gt; name=&quot;Description&quot; content=&quot;something....&quot;&lt;/meta&gt;</code> of an url. But I am not able to do it. Can somone please help me with it!</p>	65778447	"<p>You can use BeautifulSoup:</p> <pre><code>import bs4  # Retrieve html  soup = bs4.BeautifulSoup(html) results = soup.find(&quot;meta&quot;, {&quot;name&quot; : &quot;Description&quot;}) </code></pre>"
65778367	How to get Meta Description tag of a web page using python or javascript	javascript|python|meta-tags	2021-01-18 16:24:57.523000 UTC	<p>I am tryin to make a programme which can get the <code>&lt;meta&gt; name=&quot;Description&quot; content=&quot;something....&quot;&lt;/meta&gt;</code> of an url. But I am not able to do it. Can somone please help me with it!</p>	65778484	"<p>you must use <code>beautifulsoup</code>. With code below you are good to go I guess</p> <pre><code>from bs4 import BeautifulSoup import urllib.request  soup = BeautifulSoup(urllib.request.urlopen(&quot;your link&quot;), 'html.parser') meta_part = soup.find(&quot;meta&quot;) </code></pre>"
65778367	How to get Meta Description tag of a web page using python or javascript	javascript|python|meta-tags	2021-01-18 16:24:57.523000 UTC	<p>I am tryin to make a programme which can get the <code>&lt;meta&gt; name=&quot;Description&quot; content=&quot;something....&quot;&lt;/meta&gt;</code> of an url. But I am not able to do it. Can somone please help me with it!</p>	65778588	"<p>In the browser you can use <a href=""https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelector"" rel=""nofollow noreferrer""><code>document.querySelector</code></a></p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-js lang-js prettyprint-override""><code>const author = document.querySelector(""meta[name='author']""); const title = document.querySelector(""meta[name='title']"");  console.log(author.content); console.log(title.content);</code></pre> <pre class=""snippet-code-html lang-html prettyprint-override""><code>&lt;meta name=""author"" content=""me &lt;author@me.example&gt;""&gt; &lt;meta name=""title"" content=""foo""&gt;</code></pre> </div> </div> </p>"
65785224	Python and Javascript differences on flattening a nested array	javascript	2021-01-19 03:48:03.777000 UTC	"<p>I'm trying to learn js, but I know python. This code works in python:</p> <pre><code>def steamrollArray(arr):     narr =[]     for i in range(len(arr)):         if type(arr[i]) is list:             narr += steamrollArray(arr[i])         else:             narr.append(arr[i])     return narr </code></pre> <p>However this similar code in javascript does not work</p> <pre><code>function steamrollArray(arr) {   var narr = []   for(let i = 0;i&lt;arr.length;i++){     if (Array.isArray(arr[i])){ narr.concat(steamrollArray(arr[i]))}     else{{narr.push(arr[i])}}   }   return narr } </code></pre> <p>I'm trying to understand why this algorithm doesn't work in JS. Any help is appreciated.</p> <p>edit: I'm aware of built in methods for flattening an array in JS. I'm trying to learn JS on FreeCodeCamp and so am trying different challenges. I'm not trying so much to learn how to flatten an array as much as learn why this code works in python but not in JS so that i can better understand JS.</p>"	65785237	"<p>In JavaScript you have a built-in array method called flat(): <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/flat"" rel=""nofollow noreferrer"">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/flat</a>, try this:</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-js lang-js prettyprint-override""><code>let arr = [[1, 2], [3, 4]] console.log(arr.flat(2))</code></pre> </div> </div> </p> <p>Also you can use reduce() method and concat(), with an empty array as initial value:</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-js lang-js prettyprint-override""><code>let arr = [[1, 2], [3, 4]] console.log(arr.reduce((acc, elem) =&gt; acc.concat(elem), []));</code></pre> </div> </div> </p>"
65785224	Python and Javascript differences on flattening a nested array	javascript	2021-01-19 03:48:03.777000 UTC	"<p>I'm trying to learn js, but I know python. This code works in python:</p> <pre><code>def steamrollArray(arr):     narr =[]     for i in range(len(arr)):         if type(arr[i]) is list:             narr += steamrollArray(arr[i])         else:             narr.append(arr[i])     return narr </code></pre> <p>However this similar code in javascript does not work</p> <pre><code>function steamrollArray(arr) {   var narr = []   for(let i = 0;i&lt;arr.length;i++){     if (Array.isArray(arr[i])){ narr.concat(steamrollArray(arr[i]))}     else{{narr.push(arr[i])}}   }   return narr } </code></pre> <p>I'm trying to understand why this algorithm doesn't work in JS. Any help is appreciated.</p> <p>edit: I'm aware of built in methods for flattening an array in JS. I'm trying to learn JS on FreeCodeCamp and so am trying different challenges. I'm not trying so much to learn how to flatten an array as much as learn why this code works in python but not in JS so that i can better understand JS.</p>"	65786160	"<p>because <code>Array.concat</code> method returns a new array but it do not modifies the original one. Check the example:</p> <pre class=""lang-js prettyprint-override""><code>var a = []; a.concat(1); console.log(a); </code></pre> <p>try this instead</p> <pre class=""lang-js prettyprint-override""><code>narr = narr.concat(streamrollArray(arr[i])) </code></pre>"
65798012	Extracting JavaScript function return value using Python Selenium	javascript|python|selenium|selenium-webdriver	2021-01-19 19:14:25.767000 UTC	"<p>I am scraping information from a webpage. The following is a snippet of the Javascript function that I am looking to extract the return string value from. In this case <code>&quot;2227885&quot;</code></p> <p><a href=""https://i.stack.imgur.com/5dLJs.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/5dLJs.png"" alt=""enter image description here"" /></a></p> <p>I have used the following method from selenium to attempt to extract this value:</p> <pre><code>result = driver.execute_script(&quot;getCurrentClientId()[0]&quot;) print(result) </code></pre> <p>However, the value returned is <code>None</code>. What is the proper solution to extract the return value from this JS function?</p>"	65798633	<p>use &quot;return&quot; as part of your javascript:</p> <pre><code>result = driver.execute_script(&quot;return getCurrentClientId()[0]&quot;) print(result) </code></pre>
65798012	Extracting JavaScript function return value using Python Selenium	javascript|python|selenium|selenium-webdriver	2021-01-19 19:14:25.767000 UTC	"<p>I am scraping information from a webpage. The following is a snippet of the Javascript function that I am looking to extract the return string value from. In this case <code>&quot;2227885&quot;</code></p> <p><a href=""https://i.stack.imgur.com/5dLJs.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/5dLJs.png"" alt=""enter image description here"" /></a></p> <p>I have used the following method from selenium to attempt to extract this value:</p> <pre><code>result = driver.execute_script(&quot;getCurrentClientId()[0]&quot;) print(result) </code></pre> <p>However, the value returned is <code>None</code>. What is the proper solution to extract the return value from this JS function?</p>"	65798698	"<pre><code>result = driver.execute_script(&quot;return getCurrentClientId()&quot;) print(result) </code></pre> <p>if the function is not within the html source ,and you want to pass explicitly then use</p> <pre><code>result = driver.execute_script(&quot;return arguments[0]&quot;, getCurrentClientId) print(result) </code></pre> <p>what ever we pass to execute_script will be passed into arguments arraay in the same order. so the getCurrentClientId can be accessed in the script as arguments[0]</p>"
65822685	Display python result in html using JavaScript | python eel	javascript|python|eel	2021-01-21 07:17:48.797000 UTC	"<p>I want to send result to JavaScript to display the result in html using eel.</p> <p>I'm adding the two numbers reading it from JavaScript through html &amp; I want to display the result in html side at the end..</p> <p><strong>main.py</strong></p> <pre><code>import eel import requests  eel.init('web')  @eel.expose def sum(a,b):     c = int(a) + int(b)      print(c)     return c  eel.start('index.html', size=(500, 500)) </code></pre> <p><strong>main.js</strong></p> <pre><code>function sum() {   var a = document.getElementById(&quot;data_1&quot;).value;   var b = document.getElementById(&quot;data_2&quot;).value;   eel.sum(a, b); } </code></pre> <p><strong>index.html</strong></p> <pre><code>&lt;!doctype html&gt; &lt;html lang=&quot;en&quot;&gt; &lt;head&gt;   &lt;title&gt;Test eel&lt;/title&gt;   &lt;script type=&quot;text/javascript&quot; src=&quot;/eel.js&quot;&gt;&lt;/script&gt;   &lt;script type=&quot;text/javascript&quot; src=&quot;/myscript.js&quot;&gt;&lt;/script&gt; &lt;/head&gt; &lt;body&gt;   &lt;h3 class='label_'&gt;Num 1 &lt;/h3&gt;    &lt;input type=&quot;text&quot; id=&quot;data_1&quot;    &gt;   &lt;/br&gt;   &lt;h3 class='label_'&gt;Num 2 &lt;/h3&gt;   &lt;input type=&quot;text&quot; id=&quot;data_2&quot; &gt; &lt;/br&gt;   &lt;input type=&quot;button&quot; class=&quot;submit&quot; value=&quot;submit&quot; onclick=&quot;sum()&quot;&gt;&lt;/br&gt; output &lt;div id='file-name'&gt;---&lt;/div&gt; &lt;/div&gt; &lt;/body&gt; &lt;/html&gt; </code></pre>"	65843654	"<p>You can use JavaScript callback function to pass the return value to html</p> <p><strong>main.js</strong></p> <pre><code>function sum() {   var a = document.getElementById(&quot;data_1&quot;).value;   var b = document.getElementById(&quot;data_2&quot;).value;   eel.sum(a, b)(callback); // change here }  // add function as function callback(c) {   document.getElementById(&quot;data&quot;).value = c; }  </code></pre> <p>In index.html add this below code to print result on html side</p> <p><strong>index.html</strong></p> <pre><code>&lt;div&gt;   Result : &lt;input type=&quot;text&quot; id=&quot;data&quot; &gt; &lt;/div&gt; </code></pre>"
65823331	Cannot call Python function from Javascript in Notebook	python|ipython|jupyter	2021-01-21 08:10:46.387000 UTC	"<p>I would like to call the function <code>say_hello</code> in Jupyter Notebook.</p> <pre><code>def say_hello():   print('hello')  %%javascript //What have been tried // Method 1 var kernel = IPython.notebook.kernel; kernel.execute(&quot;say_hello()&quot;, {&quot;output&quot;: callback});  // Method 2 Jupyter.notebook.kernel.execute(&quot;say_hello()&quot;) </code></pre> <p>Both methods throw <code>ReferenceError</code> in the browser console.</p> <pre><code>VM5326:7 Uncaught ReferenceError: IPython is not defined     at send_message (&lt;anonymous&gt;:7:22)     at onClickSendMessage (&lt;anonymous&gt;:12:9)     at HTMLButtonElement.onclick (app.ipynb:1) </code></pre> <p>version : JupterLab 3.5, IPython 7.16, Python 3.9.1</p>"	65899625	"<p>The <code>ReferenceError</code> that you're getting is caused by Jupyter and IPython globals not being available in Jupyter Lab at all. You'd have to <a href=""https://github.com/jupyterlab/jupyterlab/issues/5660#issuecomment-514728559"" rel=""noreferrer"">write a JupyterLab extension</a> yourself.</p> <p>These things do work in Jupyter Notebooks though. Both of the methods that you tried are a good start but need some improvements.</p> <p>We need 3 cells - Python, HTML, and JS one.</p> <ol> <li>let's just define the method we want to invoke from JS in Python.</li> </ol> <pre class=""lang-py prettyprint-override""><code>def say_hello():     print('hello') </code></pre> <ol start=""2""> <li>We need to create a cell output, where the JS will be writing the results of the execution.</li> </ol> <pre class=""lang-html prettyprint-override""><code>%%html &lt;div id=&quot;result_output&quot;&gt; </code></pre> <ol start=""3""> <li>We execute the Python function, and handle the execution result in a callback. From the callback, we'll fill the result text into the output that we created above.</li> </ol> <pre class=""lang-js prettyprint-override""><code>%%javascript const callbacks = {     iopub: {         output: (data) =&gt; {             // this will print a message in browser console             console.log('hello in console')              // this will insert the execution result into &quot;result_output&quot; div             document.getElementById(&quot;result_output&quot;).innerHTML = data.content.text         }     } };  const kernel = Jupyter.notebook.kernel kernel.execute('say_hello()', callbacks) </code></pre> <p>Some notes:</p> <ul> <li>your 2nd method would be good enough if you didn't need to see the result, the execution is executed, just the results from kernel are not handled (you can see that in Network tab in browser devtools in Websocket request messages)</li> <li>in your method 1 you use <code>callback</code> but you don't define it - that would lead to another <code>ReferenceError</code></li> <li>using <code>const</code>Â <a href=""https://www.freecodecamp.org/news/var-let-and-const-whats-the-difference/"" rel=""noreferrer"">is better</a> than using <code>var</code> in JS</li> <li><code>Jupyter.notebook.kernel</code>Â is the same as <code>IPython.notebook.kernel</code></li> </ul>"
