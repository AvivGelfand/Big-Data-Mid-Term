53992898	How to communicate between websocets using javascript as client and python as web server	javascript|python|node.js|websocket	2019-01-01 03:49:47.323000 UTC	<p>I have connected my web server and client its working. Now I want to call variables that's passing from backend and do a counting</p>  <p>for example: backend python is passing 2 variables called price of an apple and no.of apples I need to count the price of all apples and print it in client side using javascript</p>  <p>Any help is appreciated</p>	53993381	"<p>In my case I have done with this approach,</p>  <ul> <li>I have created one JS file for WebSocket event handling methods(onOpen,onClose and onMessage) which is loaded on home page loading.</li> <li>In this file I have created one reference variable to hold events of WebSockets using (.prototype)</li> <li>Same like second step created two seperate methods for creating connection which is going to be called from home page and one connect method to connect the server</li> <li>In onMessage you can call your business method where you can put your logic</li> </ul>  <p>code look like,</p>  <pre><code>var _wObj = null; function WSSocket(tObj) {     //basic properties } </code></pre>  <p>create connection</p>  <pre><code>WSSocket.createConnection = function ( tObj ) {     if (!_wObj) {         _wObj = new WSSocket(tObj);     }     return _wObj; } </code></pre>  <p>connect to server</p>  <pre><code>WSSocket.prototype.connect = function () {     //connection logic } </code></pre>  <p>register events</p>  <pre><code>WSSocket.prototype.registerEvents = function () {         //registering logic         this.wObj.onmessage = function (event) {              //call your operation method         } } </code></pre>"
54022433	How to execute python code(.py file) in javascript function?	javascript|python|node.js|python-2.7|protractor	2019-01-03 12:36:52.460000 UTC	<p>i have to execute python code in protractor to compare two word files. Python code is working fine. How can i execute that python file in javascript file ?</p>	54022616	"<p>Please have a look on this package <a href=""https://www.npmjs.com/package/python-shell"" rel=""nofollow noreferrer"">https://www.npmjs.com/package/python-shell</a></p>  <p>It provides you a way to call python files from node</p>"
54047406	Communicating from html or javascript to python Django	javascript|jquery|django|templates	2019-01-04 23:12:32.527000 UTC	"<p>I have read through all the postings and cannot find anything that will work for my program. I am using the mapbox js framework and want to send the users location 'position' to my python view code to store it in a database. When I do a console.log() in the js code it doesnt print anything. When I do a print in python it prints 'None'. I tried ajax like other posts had but nothing seems to work. Maybe I am going about passing data from templates to python code in the wrong way... Please help</p>  <p>base.html</p>  <pre><code>&lt;!DOCTYPE html&gt; &lt;html lang=""en"" dir=""ltr""&gt;  &lt;head&gt;  &lt;script src=""https://ajax.googleapis.com/ajax/libs/jquery/3.1.1/jquery.min.js""&gt;        &lt;/script&gt; &lt;/head&gt; &lt;/html&gt; </code></pre>  <p>home.html</p>  <pre><code>{% extends ""geotracker/base.html"" %} {% load static %} {% block content %}  &lt;body&gt;   &lt;div id='map' width='100%' style='height:400px'&gt;&lt;/div&gt;   &lt;form id=""myform"" name=""myform""&gt;    {% csrf_token %}    &lt;input type=""hidden"" id=""location"" name=""location""/&gt;  &lt;/form&gt; &lt;script&gt;   mapboxgl.accessToken = 'mytoken';  var map = new mapboxgl.Map({   container: 'map', // container id   style: 'mapbox://styles/mapbox/streets-v9',   center: [-96, 37.8], // starting position   zoom: 3 // starting zoom  });   // Add geolocate control to the map.  var geolocate = new mapboxgl.GeolocateControl();  map.addControl(geolocate);    geolocate.on('geolocate', function(e) {   console.log('locating...');   var lon = e.coords.longitude;   var lat = e.coords.latitude   var position = [lon, lat];   var element = document.getElementById('location');   element.innerHTML = position;      $('#myform').submit(function (ev) {     //ev.preventDefault();     console.log('hello');   });   });   &lt;/script&gt;  &lt;/body&gt; {% endblock %} </code></pre>  <p>views.py</p>  <pre><code>def home(request):  context = {     ""mclient"": mclient } print(""POST in view:\t%s"" % request.POST.get('location'))  # get users location if authenticated if request.user.is_authenticated:     Fan.objects(user=str(request.user)).modify(set__currentPosition=   [0,0], image='http://localhost:8000/media/%s' %   request.user.profile.image, upsert=True)  return render(request, 'geotracker/home.html', context) </code></pre>"	54080724	"<p>I could not figure out the ajax jquery statement but I figured out that I can just use plain AXAJ to send a Post request using XMLHttpRequest. Using this method I was able to submit a form with a post request without refreshing the page to get the users location from the Mapbox Api. I just have to send my auth token from Django's Admin panel which I can get from a python variable sent to my template.</p>  <pre><code>geolocate.on('geolocate', function(e) {   console.log('locating...');   var lon = e.coords.longitude;   var lat = e.coords.latitude   var position = lon + "" "" + lat;   var element = document.getElementById('location');   element.value = position;   var url = 'http://localhost:8000'   var params = JSON.stringify({       longitude: lon,       latitude: lat   }); // Create a new AJAX request object var request = new XMLHttpRequest(); // Open a connection to the server request.open('POST', url, true); // Actually send the request var csrftoken = '{{ csrf_token }}' request.setRequestHeader(""Content-type"", ""application/json""); request.setRequestHeader('X-CSRFToken', csrftoken); request.send(params); }); </code></pre>"
54047949	Python - Scrape Javascript using bs4 and print out the value	python|beautifulsoup	2019-01-05 00:44:54.490000 UTC	"<p>So I have been trying to create a script where there is a countdown with epoch time which I later gonna convert it.</p>  <p>The html is following:</p>  <pre><code>&lt;script type=""text/javascript""&gt;                 new Countdown('countdown_timer', '1547161260', 'https://stackoverflow.com/');             &lt;/script&gt; </code></pre>  <p>and I started to scrape it which I managed to scrape using: </p>  <pre><code>try:     time_countdown_tag = bs4.find_all('script', {'type': 'text/javascript'}) except Exception:     time_countdown_tag = []  for countdown in time_countdown_tag:     if 'new Countdown' in countdown.text.strip():         print(countdown) </code></pre>  <p>which my output is:</p>  <pre><code>&lt;script type=""text/javascript""&gt;                 new Countdown('countdown_timer', '1547161260', 'https://stackoverflow.com/');             &lt;/script&gt; </code></pre>  <p>However what I want to print out in this case is the number inside the params which is <strong>1547161260</strong> - I would appreciate all kind of help to be able to be able to only print out the number (epoch) if it is possible?</p>"	54047992	"<p>You can use regular expressions to match the portion of the JS that contains a positive integer:</p>  <pre><code>import re output = """"""&lt;script type=""text/javascript""&gt;                 new Countdown('countdown_timer', '1547161260', 'https://stackoverflow.com/');             &lt;/script&gt;"""""" re.findall(""\d+"", output) </code></pre>"
54066534	Getting stuck executing infinite javascript loop in Python's Selenium chromedriver	python|python-3.x|selenium|selenium-webdriver|selenium-chromedriver	2019-01-06 22:29:47.560000 UTC	"<p>I am trying to build a service where users can insert their Javascript code and it gets executed on a website of their choice. I use webdriver from python's selenium lib and chromedriver. The problem is that the python script gets stuck if user submits Javascript code with infinite loop.</p> <p>The python script needs to process many tasks like: go to a website and execute some Javascript code. So, I can't afford to let it get stuck. Infinite loop in Javascript is known to cause a browser to freeze. But isn't there some way to set a timeout for webdriver's execute_script method? I would like to get back to python after a timeout and continue to run code after the execute_script command. Is this possible?</p> <pre><code>from selenium import webdriver chromedriver = &quot;C:\chromedriver\chromedriver.exe&quot; driver = webdriver.Chrome(chromedriver) driver.get(&quot;http://www.bulletproofpasswords.org/&quot;) # Or any other website driver.execute_script(&quot;while (1); // Javascript infinite loop causing freeze&quot;) </code></pre>"	54066620	"<p>You could set a timeout for your <code>driver.execute_script(""while (1);"")</code> call. I have found <a href=""https://stackoverflow.com/questions/492519/timeout-on-a-function-call"">another post</a> that could solve this issue.</p>  <p>Basically, if you are on a Unix system, you could use <a href=""http://docs.python.org/library/signal.html"" rel=""nofollow noreferrer"">signal</a> to set a timeout for your <code>driver.execute_script(""while (1);</code> call. </p>  <p>Or if you could run it in a separate process and then end the process if it takes too long using <code>multiprocessing.Process</code>. I'm including the example that was given in the other post:</p>  <pre><code>import multiprocessing import time  # bar def bar():     for i in range(100):         print ""Tick""         time.sleep(1)  if __name__ == '__main__':     # Start bar as a process     p = multiprocessing.Process(target=bar)     p.start()      # Wait for 10 seconds or until process finishes     p.join(10)      # If thread is still active     if p.is_alive():         print ""running... let's kill it...""          # Terminate         p.terminate()         p.join() </code></pre>"
54079518	Rewrite javascript function with selenium python	javascript|python|selenium	2019-01-07 18:04:44.103000 UTC	"<p>I need to rewrite a existing function which is created by the website when the page is loaded. The function is something like this:</p>  <pre><code>function CheckStatus() {     var vcode = $.trim($(""#insertCode"").val()).toUpperCase();     var vreturn = encodeURIComponent(document.getElementById('text_return').value); ... (lots of other stuff) } </code></pre>  <p>And I would like to rewite this function to be like this:</p>  <pre><code>function CheckStatus() {  return true; } </code></pre>  <p>If I paste this function in the chrome console, it rewrites with no problem. But when I try to do it with selenium It does not rewrite... I think it creates another function with the same name. My code in python using selenium webdriver is this:</p>  <pre><code>driver.execute_script(""function CheckStatus() { return true;}"") </code></pre>  <p>It does not return errors. Nothing happens actually.</p>  <p>Any clues how to solve this with selenium?</p>  <p>Thanks!</p>"	54079639	"<p>You're sending a <em>function declaration</em>. Nothing is executed here because you didn't ask to execute anything, you just defined a function. What you want looks more like this:</p>  <pre><code>driver.execute_script(""() =&gt; ({ return true;})()"") </code></pre>  <p>Don't forget to actually <strong>call you function</strong> at the end.</p>"
54079518	Rewrite javascript function with selenium python	javascript|python|selenium	2019-01-07 18:04:44.103000 UTC	"<p>I need to rewrite a existing function which is created by the website when the page is loaded. The function is something like this:</p>  <pre><code>function CheckStatus() {     var vcode = $.trim($(""#insertCode"").val()).toUpperCase();     var vreturn = encodeURIComponent(document.getElementById('text_return').value); ... (lots of other stuff) } </code></pre>  <p>And I would like to rewite this function to be like this:</p>  <pre><code>function CheckStatus() {  return true; } </code></pre>  <p>If I paste this function in the chrome console, it rewrites with no problem. But when I try to do it with selenium It does not rewrite... I think it creates another function with the same name. My code in python using selenium webdriver is this:</p>  <pre><code>driver.execute_script(""function CheckStatus() { return true;}"") </code></pre>  <p>It does not return errors. Nothing happens actually.</p>  <p>Any clues how to solve this with selenium?</p>  <p>Thanks!</p>"	54079744	"<p>i'm not sure, but try to set the function to <strong>window</strong> object, maybe python's selenium has another name space</p>  <p>so:</p>  <pre><code>driver.execute_script(""window.CheckStatus = () =&gt; true;"") </code></pre>"
54079518	Rewrite javascript function with selenium python	javascript|python|selenium	2019-01-07 18:04:44.103000 UTC	"<p>I need to rewrite a existing function which is created by the website when the page is loaded. The function is something like this:</p>  <pre><code>function CheckStatus() {     var vcode = $.trim($(""#insertCode"").val()).toUpperCase();     var vreturn = encodeURIComponent(document.getElementById('text_return').value); ... (lots of other stuff) } </code></pre>  <p>And I would like to rewite this function to be like this:</p>  <pre><code>function CheckStatus() {  return true; } </code></pre>  <p>If I paste this function in the chrome console, it rewrites with no problem. But when I try to do it with selenium It does not rewrite... I think it creates another function with the same name. My code in python using selenium webdriver is this:</p>  <pre><code>driver.execute_script(""function CheckStatus() { return true;}"") </code></pre>  <p>It does not return errors. Nothing happens actually.</p>  <p>Any clues how to solve this with selenium?</p>  <p>Thanks!</p>"	54110250	"<p>Solve it with something similar:</p>  <pre><code>driver.execute_script(""CheckStatus = function CheckStatus() { return true;}"") </code></pre>  <p>Thanks guys!</p>"
54093956	Python version of JavaScript ES6 Symbols	javascript|python|python-3.x|types|symbols	2019-01-08 14:30:32.627000 UTC	"<p>Is there a Python version of JavaScript's Symbol type? If not, what's the Pythonic way to declare a guaranteed-unique constant or property?</p>  <p>For example, in JavaScript, one could do:</p>  <pre><code>const ALL_VALUES = Symbol() const EVERY_OTHER_VALUE = Symbol()  function do_something_to_values(     list_of_values,      values_to_affect ) {     ... } </code></pre>  <p>And then one could call <code>do_something_to_values(my_list, EVERY_OTHER_VALUE)</code> and the function would check for equality to the <code>EVERY_OTHER_VALUE</code> constant.</p>  <p>How would one do this in Python?</p>"	61019979	"<p>The keyword you’re looking for is sentinel. There’s been lots of discussion of this over the years. This is a good fairly recent solution</p>  <p><a href=""https://www.revsys.com/tidbits/sentinel-values-python/"" rel=""nofollow noreferrer"">https://www.revsys.com/tidbits/sentinel-values-python/</a></p>"
54106028	JavaScript fetch API and Python Flask header issue	javascript|python|flask|fetch-api	2019-01-09 08:38:00.383000 UTC	"<p>I'm trying to POST a JSON payload to a Flask server running on <code>localhost:8080</code>. </p>  <p><strong>Javascript</strong></p>  <pre><code>    fetch(SERVER_URL, {         method: 'POST',         mode: 'no-cors',         headers: {             'Accept': 'application/json',             'Content-Type': 'application/json'         },         body: JSON.stringify({""hello"": ""world""})     }); </code></pre>  <p>I'm using Python Flask for my server, and I just want to print the received JSON on the server side.</p>  <p><strong>Python Flask</strong></p>  <pre><code>from flask import Flask from flask import request  app = Flask(__name__)  @app.route('/route', methods = ['POST']) def routeHandler():     data = request.get_json()     print(data)     return 'got it'  app.run(port = 8080) </code></pre>  <p>The print statement is triggered, but <code>data</code> is <code>None</code>. After reading the Flask API documentation, I know that one of the reasons why <code>data</code> could be <code>None</code> is when the correct content type is not set on the request. To check this, I made the following change</p>  <pre><code> data = request.get_json(force = True) </code></pre>  <p>which bypasses the <code>is_json()</code> check and continues parsing. This worked, suggesting there's something wrong with my headers. However, I have ensured that my <code>fetch</code> request is consistent with the API documentation so I'm not sure where I'm going wrong.</p>  <p>I have sent the same request from Postman and it is successfully received on the server even without <code>force = True</code>. The only header generated in Postman is <code>Content-Type: application/json</code>.</p>  <p>Thanks for any assistance.</p>"	55146986	"<p>I am having the same frustration, and you question helped solve my issue, by forcing get_json()</p>  <p>I did notice that the difference between my implementation and yours is:</p>  <pre><code>from flask_cors import CORS CORS(app) </code></pre>  <p><a href=""https://flask-cors.readthedocs.io/en/latest/"" rel=""nofollow noreferrer"">https://flask-cors.readthedocs.io/en/latest/</a></p>"
54135338	How Django and JavaScript work together for running Python script?	javascript|django	2019-01-10 19:04:17.350000 UTC	"<p>I am wondering how to accomplish the below with Django:</p>  <ul> <li>Consider a function in JavaScript:</li> </ul>  <pre class=""lang-js prettyprint-override""><code>$('#button').click(function(){     var rand_val = Math.random();     // here some code sends this rand_val to a Python script in Django app     // as seen below, script is run and generates result     alert('This is the result ' + result);   }) </code></pre>    <ul> <li>The script in the Django app:</li> </ul>  <pre class=""lang-py prettyprint-override""><code>def my_func(rand_val):     # result = (some operations with rand_val)     return result </code></pre>    <p>The Python script will be run in Django virtual environment. </p>  <p>With a button click, run a Python script and show the result on the page.</p>"	54135726	"<p>You can send the data with <a href=""http://api.jquery.com/jquery.ajax/"" rel=""nofollow noreferrer"">ajax</a> get,</p>  <pre><code>var url = ""url_to_my_func_view/"" + rand_val $.get( url, function( data ) {    alert( ""Data Loaded: "" + data ); }); </code></pre>  <p>You will need to return your result as bytes or JSON using HttpResponse or JsonResponse.</p>  <p>Edit:</p>  <p>If you need to send back user input (as the OP explained in the comments), then you are better off with GET or POST params. In JS you would do like so,</p>  <pre><code>var url = 'url_to_my_func_view/' $.get( url, {'user_val': rand_val}, function( data ) {    alert( ""Data Loaded: "" + data ); }); </code></pre>  <p>Then in your view you would catch those params like so,</p>  <pre><code>def my_func(request):    user_val = request.GET['user_val']    return user_val </code></pre>  <p>Notice that your function receives a request!</p>  <p>Hope this helps!</p>"
54135338	How Django and JavaScript work together for running Python script?	javascript|django	2019-01-10 19:04:17.350000 UTC	"<p>I am wondering how to accomplish the below with Django:</p>  <ul> <li>Consider a function in JavaScript:</li> </ul>  <pre class=""lang-js prettyprint-override""><code>$('#button').click(function(){     var rand_val = Math.random();     // here some code sends this rand_val to a Python script in Django app     // as seen below, script is run and generates result     alert('This is the result ' + result);   }) </code></pre>    <ul> <li>The script in the Django app:</li> </ul>  <pre class=""lang-py prettyprint-override""><code>def my_func(rand_val):     # result = (some operations with rand_val)     return result </code></pre>    <p>The Python script will be run in Django virtual environment. </p>  <p>With a button click, run a Python script and show the result on the page.</p>"	54137235	"<p>To perform form submission through Ajax, need to use some specific code snippets. I am adding the details source code so, you might find these helpful!</p>  <p>The code in JavaScript file:</p>  <pre><code>//The functions below will create a header with csrftoken for Ajax based submission in Django application  function csrfSafeMethod(method) {     // these HTTP methods do not require CSRF protection     return (/^(GET|HEAD|OPTIONS|TRACE)$/.test(method)); }  function sameOrigin(url) {     // test that a given url is a same-origin URL     // url could be relative or scheme relative or absolute     var host = document.location.host; // host + port     var protocol = document.location.protocol;     var sr_origin = '//' + host;     var origin = protocol + sr_origin;     // Allow absolute or scheme relative URLs to same origin     return (url == origin || url.slice(0, origin.length + 1) == origin + '/') ||         (url == sr_origin || url.slice(0, sr_origin.length + 1) == sr_origin + '/') ||         // or any other URL that isn't scheme relative or absolute i.e relative.         !(/^(\/\/|http:|https:).*/.test(url)); }  $.ajaxSetup({     beforeSend: function(xhr, settings) {         if (!csrfSafeMethod(settings.type) &amp;&amp; sameOrigin(settings.url)) {             // Send the token to same-origin, relative URLs only.             // Send the token only if the method warrants CSRF protection             // Using the CSRFToken value acquired earlier             xhr.setRequestHeader(""X-CSRFToken"", csrftoken);         }     } }); // Ajax setup end  $('#button').click(function(e){     var rand_val = Math.random();      $.post('/my_func/', { rand_val: rand_val }, function(data){         return false;     });     e.preventDefault(); });  </code></pre>  <p>In views.py:</p>  <pre><code>def my_func(request):     response = {}     if request.method == 'POST':         rand_val = request.POST.get('rand_val')         # result = (some operations with rand_val)          return result </code></pre>  <p>In urls.py: Django v2.x</p>  <pre><code>from django.contrib import admin from django.urls import path, include import APP_NAME.views  urlpatterns = [     path('my_func/', APP_NAME.views.my_func), ] </code></pre>  <p>Expecting the code will work for you!</p>"
54136530	How to click on a javascript/AJAX based element with onclick attribute using Selenium and Python	python|selenium|xpath|onclick|css-selectors	2019-01-10 20:36:57.883000 UTC	"<p>I'm trying to click a link in a dropdown menu in Selenium.</p> <p>I'm accessing the element like so:</p> <p><code>link = menu.find_element_by_xpath('//*[contains(text(), &quot;Mark as shipped&quot;)]')</code></p> <p>The link's href is <code>javascript.void(0)</code>, and contains an <code>onclick</code> attribute which contains:</p> <pre><code>'com.ebay.app.myebay2.lineaction.service.LineActionAjax.processTransRequest(&quot;http://payments.ebay.com/ws/eBayISAPI.dll?OrderAction&amp;transId=#TID#&amp;action=4&amp;pagetype=1883&amp;ssPageName=STRK:MESO:SHP&amp;itemid=_Item_Id&quot;, &quot;_Item_Id&quot;, &quot;987349587&quot;, &quot;MarkShipped&quot;, &quot;98739873&quot;, &quot;_Item_Id_9874987_ss&quot;, 24&quot;)' </code></pre> <p>I've tried triggering this with:</p> <pre><code>click() </code></pre> <p>and</p> <pre><code>driver.execute_script(link.get_attribute('onclick')) </code></pre> <p>Also an ActionChain mousing over the link and clicking it.</p> <p>But none seem to work. How do I trigger this?</p>"	65362661	"<p>The element is a <a href=""https://www.w3schools.com/xml/ajax_intro.asp"" rel=""nofollow noreferrer"">AJAX</a> element, so ideally to click on the element you need to induce <a href=""https://stackoverflow.com/questions/59130200/selenium-wait-until-element-is-present-visible-and-interactable/59130336#59130336"">WebDriverWait</a> for the <code>element_to_be_clickable()</code> and you can use either of the following <a href=""https://stackoverflow.com/questions/48369043/official-locator-strategies-for-the-webdriver/48376890#48376890"">Locator Strategies</a>:</p> <ul> <li><p>Using <code>PARTIAL_LINK_TEXT</code>:</p> <pre><code>WebDriverWait(driver, 20).until(EC.element_to_be_clickable((By.PARTIAL_LINK_TEXT, &quot;Mark as shipped&quot;))).click() </code></pre> </li> <li><p>Using <code>CSS_SELECTOR</code>:</p> <pre><code>WebDriverWait(driver, 20).until(EC.element_to_be_clickable((By.CSS_SELECTOR, &quot;a[onclick*='MarkShipped']&quot;))).click() </code></pre> </li> <li><p>Using <code>XPATH</code>:</p> <pre><code>WebDriverWait(driver, 20).until(EC.element_to_be_clickable((By.XPATH, &quot;//a[contains(@onclick, 'MarkShipped') and contains(., 'Mark as shipped')]&quot;))).click() </code></pre> </li> <li><p><strong>Note</strong>: You have to add the following imports :</p> <pre><code>from selenium.webdriver.support.ui import WebDriverWait from selenium.webdriver.common.by import By from selenium.webdriver.support import expected_conditions as EC </code></pre> </li> </ul>"
54184497	selenium python return data from javascript window object	python|selenium	2019-01-14 15:33:27.547000 UTC	"<p>How can I get hold of the following object in python selenium:</p>  <pre><code>(in firefox/Chrome console): &gt;&gt;window.Alarms.alarmData Array [ {…}, {…} ] </code></pre>  <p>This returns empty:</p>  <pre><code>alarm = driver.execute_script(""return window.Alarms.alarmData;"") print(alarm) [] </code></pre>  <p>​</p>"	54184746	"<p>You can try to wait until JS object returns any non-empty value:</p>  <pre><code>from selenium.webdriver.support.ui import WebDriverWait  alarm = WebDriverWait(driver, 20).until(lambda driver: driver.execute_script(""return window.Alarms.alarmData;"")) </code></pre>"
54184497	selenium python return data from javascript window object	python|selenium	2019-01-14 15:33:27.547000 UTC	"<p>How can I get hold of the following object in python selenium:</p>  <pre><code>(in firefox/Chrome console): &gt;&gt;window.Alarms.alarmData Array [ {…}, {…} ] </code></pre>  <p>This returns empty:</p>  <pre><code>alarm = driver.execute_script(""return window.Alarms.alarmData;"") print(alarm) [] </code></pre>  <p>​</p>"	54195260	"<p>With the help of @Andersson I found this issue. When starting window.Alarms.AlarmData is defined as an empty list '[]', so it will be successfully returned, I just need to wait until it is no longer an empty list, The important lession was to check initial state of variables, because they may be defined and just successfully in selenium.</p>  <pre><code>def test2_alarmdata(self):     """""" fetch the data objects """"""     driver = self.driver     cookie_read(driver)     driver.get(default['url'] + ""/alarm_board/index.html"")     alarmData = None     retries = args.retries     while not alarmData and retries:         time.sleep(1)         alarms = driver.execute_script(""return window.Alarms.alarmData;"")         if alarms:             alarmData = alarms         retries -= 1     if isinstance(alarmData, list):         print(""we have {} queued alarms"".format(len(alarmData))) </code></pre>  <p>Run the unittest:</p>  <pre><code>we have 2 queued alarms __main__.T.test2_alarmdata (3.4068s) </code></pre>"
54233820	How to open URL in Selenium via Python using Javascript functions	javascript|python|selenium	2019-01-17 10:26:11.470000 UTC	"<p>First, sorry for the confusing title-question. I am currently migrating a browser automated project from iMacros to Selenium-Python. For my previous iMacros scripts, I have been using a javascript function to open url's since it is a lot faster. Here's a code to test the immense difference in loading speeds:</p>  <pre><code>SET !FOLDER_STOPWATCH C:\Users\Public\Documents SET !FILESTOPWATCH ""Duration.txt""  STOPWATCH ID=Javascriptey_mode URL GOTO=javascript:window.open(""http://cityplan2014maps.brisbane.qld.gov.au/CityPlan/""); STOPWATCH ID=Javascriptey_mode  STOPWATCH ID=Regular_mode TAB OPEN TAB T=3 URL GOTO=""http://cityplan2014maps.brisbane.qld.gov.au/CityPlan/"" STOPWATCH ID=Regular_mode </code></pre>  <p>Unfortunately I have no idea why this happens and I'm under the assumption that being able to open a URL in Selenium using a similar javascript method will hasten page loading. Selenium's <code>driver.get(url)</code>  command does not cut it for me. I tried using Firefox profiles to no avail. So how do I go about it using this? I'm open for a non-javascript-ey solution, too. Also, if anyone could explain to me why the regular iMacros <code>URL GOTO=(url)</code> command loads slowly compared to the Javascript-ey one, it would be much appreciated :)</p>  <p>This might not be of value but here are the versions I'm using with iMacros:</p>  <ul> <li>Firefox 55.0.3</li> <li>iMacros Addon version 9.0.3</li> </ul>  <p>EDIT: Updated the iMacros code to allow for time duration monitoring. I ran it three times on my end and saw an average difference of 43 seconds between the regular and Javascript-ey mode.</p>"	54234426	"<p>You can execute your js code this way:</p>  <pre><code>driver = webdriver.Chrome() driver.get(""http://google.com"") driver.execute_script(""window.open('http://cityplan2014maps.brisbane.qld.gov.au/CityPlan/')"") </code></pre>"
54303747	How to call Javascript function in Python (web-crawler)?	python|web-crawler	2019-01-22 08:06:26.823000 UTC	"<p>HTML Login button : <code>&lt;a href=""javascript:loginSendit(document.login_form);"" tabindex=""3""&gt;&lt;/a&gt;</code></p>  <p>HTML User_id :  <code>&lt;input name=""userid"" type=""text"" tabindex=""1"" class=""login_input"" value="""" onfocus=""check_userid_on()"" onclick=""check_userid_on()"" onblur=""check_userid_off()""&gt;</code></p>  <p>I attached the picture of user_id, user_pw, and sign-in button page source for better understanding. </p>  <p><a href=""https://i.stack.imgur.com/kr8Nf.png"" rel=""nofollow noreferrer"">https://i.stack.imgur.com/kr8Nf.png</a> <br> <a href=""https://i.stack.imgur.com/irZJz.png"" rel=""nofollow noreferrer"">https://i.stack.imgur.com/irZJz.png</a></p>  <p>In python, I want to insert user_id and user_pw then login in using login button that has a javascript function called loginsendit()</p>  <p>So far my code starts like</p>  <pre><code>LOGIN_INFO = { 'userId': 'myidid', 'userPassword': 'mypassword123' </code></pre>  <p>}</p>  <pre><code>user_id = soup.find('input' , {'name': 'userid'}) user_id['value'] = LOGIN_INFO['userid']  user_pw = soup.find('input', {'name': 'userpw'}) user_pw['value'] = LOGIN_INFO['userPassword']   login_req = s.post('url', data='loginSendit()') print(login_req.status_code) </code></pre>  <p>But it only prints out 200 even if the password or username is wrong, which means my code doesn't let me log in. </p>  <p>Can you help me how to call this loginsendit() javascript func in Python?</p>"	54303806	"<p>If you want to execute JavaScript then look for <em>phantomjs</em> - <a href=""https://realpython.com/headless-selenium-testing-with-python-and-phantomjs/"" rel=""nofollow noreferrer"">general tutorial</a>, threads: <a href=""https://stackoverflow.com/questions/7794087/running-javascript-in-selenium-using-python/7794217"">Running javascript in Selenium using Python</a> and <a href=""https://stackoverflow.com/questions/30508045/executing-javascript-on-selenium-phantomjs"">Executing Javascript on Selenium/PhantomJS</a>.</p>"
54328913	jpg loaded with python keras is different from jpg loaded in javascript	javascript|numpy|keras|python-imaging-library|tensorflow.js	2019-01-23 13:56:57.193000 UTC	"<p>I am loading jpg image in python on the server. Then I am loading the same jpg image with javascript on the client. Finally, I am trying to compare it with the python output. But loaded data are different so images do not match. Where do I have a mistake?</p>  <p>Python code</p>  <pre><code>from keras.preprocessing.image import load_img from keras.preprocessing.image import img_to_array     filename = './rcl.jpg' original = load_img(filename) numpy_image = img_to_array(original) print(numpy_image) </code></pre>  <p>JS code</p>  <pre><code>import * as tf from '@tensorflow/tfjs'; photo() {     var can = document.createElement('canvas');     var ctx = can.getContext(""2d"");     var img = new Image();     img.onload = function() {         ctx.drawImage(img, 0, 0);     };     img.crossOrigin = ""anonymous"";     img.src = './rcl.jpg';      var tensor = tf.fromPixels(can).toFloat();     tensor.print()  } </code></pre>"	54332165	"<p>You are drawing the image on a canvas before rendering the canvas as a tensor. Drawing on a canvas can alter the shape of the initial image. For instance, unless specified otherwise - which is the case with your code - the canvas is created with a width of 300 px and a height of 150 px. Therefore the resulting shape of the tensor will be more or less something like the following [150, 300, 3].</p>  <p><strong>1- Using Canvas</strong></p>  <p>Canvas are suited to resize an image as one can draw on the canvas all or part of the initial image. In that case, one needs to resize the canvas.</p>  <pre class=""lang-js prettyprint-override""><code>const canvas = document.create('canvas') // canvas has initial width: 300px and height: 150px canvas.width = image.width canvas.height = image.heigth // canvas is set to redraw the initial image const ctx = canvas.getContext('2d') ctx.drawImage(image, 0, 0) // to draw the entire image </code></pre>  <p>One word of caution though: all the above piece should be executed after the image has finished loading using the event handler <code>onload</code> as the following</p>  <pre class=""lang-js prettyprint-override""><code>    const im = new Image()     im.crossOrigin = 'anonymous'     im.src = 'url'     // document.body.appendChild(im) (optional if the image should be displayed)     im.onload = () =&gt; {       const canvas = document.create('canvas')       canvas.width = image.width       canvas.height = image.heigth       const ctx = canvas.getContext('2d')       ctx.drawImage(image, 0, 0)     } </code></pre>  <p>or using async/await</p>  <pre class=""lang-js prettyprint-override""><code>function load(url){   return new Promise((resolve, reject) =&gt; {     const im = new Image()         im.crossOrigin = 'anonymous'         im.src = 'url'         im.onload = () =&gt; {           resolve(im)         }    }) }  // use the load function inside an async function     (async() =&gt; {      const image = await load(url)      const canvas = document.create('canvas')      canvas.width = image.width      canvas.height = image.heigth      const ctx = canvas.getContext('2d')      ctx.drawImage(image, 0, 0)     })() </code></pre>  <p><strong>2- Using fromPixel on the image directly</strong></p>  <p>If the image is not to be resized, you can directly render the image as a tensor using <code>fromPixel</code> on the image itself</p>"
54336303	Python vs Javascript MD5 different for big numbers	javascript|python|md5|modulo	2019-01-23 21:55:53.917000 UTC	"<p>I have the following code in Python:</p>  <pre><code>port_name = 'test-PR-2092' print int(hashlib.md5(port_name).hexdigest(), 16) % 10000 // 353 </code></pre>  <p>In Javascript, I am using the crypto library to try to do the same thing (I do not have control over the python code so I need to keep that the same):</p>  <pre><code>parseInt(   crypto     .createHash('md5')     .update('test-PR-2092')     .digest('hex'),   16 ) % 10000 // 4160 </code></pre>  <p>Javascript yields a much different result.</p>  <p>Looking at the int's, they are very similar except that Javascript is in scientific notation. </p>  <pre><code>Python: 158458604564589336383831436621974090353 Javascript: 1.5845860456458934e+38 </code></pre>  <p>Does anyone know where this discrepancy comes from?</p>  <p>Edit: Solved my own problem, and not a duplicate because no one has recommended BigInteger in any question I have seen</p>"	54336431	"<p>Here is the solution I found, BigInteger can take a hex value directly instead of first converting to an int.</p>  <pre><code>const portHash = BigInteger(     crypto       .createHash('md5')       .update('test-PR-2092')       .digest('hex'),     16   )     .mod(10000)     .valueOf(); // 353 </code></pre>  <p>The answer is now the same as python.</p>  <p>Here is the library: <a href=""https://www.npmjs.com/package/big-integer"" rel=""nofollow noreferrer"">https://www.npmjs.com/package/big-integer</a></p>"
54348270	Triggering Python script using AJAX Javascript request on local server using vanilla JS	javascript|python|html|ajax	2019-01-24 13:54:02.310000 UTC	"<p>I have a localhost environment running using Python's SimpleHTTPServer, serving on port 8080.</p>  <p>My project consists of an HTML file, a python script, and a Javascript (vanilla) script.</p>  <p>The method I wish to employ is as follows:</p>  <ul> <li>Click button in HTML</li> <li>Button fires Javascript AJAX request</li> <li>AJAX request runs Python script</li> <li>Python script produces JSON and returns it to Javascript</li> </ul>  <p>My JS is the following:</p>  <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-html lang-html prettyprint-override""><code>var json;  function trigger() {   var xhttp = new XMLHttpRequest();   xhttp.onreadystatechange = function() {     if (this.readyState == 4 &amp;&amp; this.status == 200) {         json = xhttp.responseText;         console.log(json);     }   };   xhttp.open(""GET"", ""./request.py"", true);   xhttp.send(); }</code></pre> </div> </div> </p>  <p>Right now rather than seeing the output of a Python script I'm just seeing the content (as text) of the Python file.</p>  <p>I'm not sure of the correct AJAX call to RUN the .py script rather than just reading it and returning the contents.</p>  <p>Any help would be greatly appreciated!</p>"	54348539	"<p>You need to change the line: <code>xhttp.open(""GET"", ""./request.py"", true);</code> to <code>xhttp.open(""GET"", ""http://localhost:3333/&lt;your-route&gt;"", true);</code>. <code>&lt;your-route&gt;</code> is defined in your python file and I assume the python web server is running on port 3333.</p>  <p>If you are using Flask and define a route using for example: <code>@app.route(""/endpoint"")</code>, the request should look like:<code>xhttp.open(""GET"", ""http://localhost:3333/endpoint"", true);</code></p>"
54348270	Triggering Python script using AJAX Javascript request on local server using vanilla JS	javascript|python|html|ajax	2019-01-24 13:54:02.310000 UTC	"<p>I have a localhost environment running using Python's SimpleHTTPServer, serving on port 8080.</p>  <p>My project consists of an HTML file, a python script, and a Javascript (vanilla) script.</p>  <p>The method I wish to employ is as follows:</p>  <ul> <li>Click button in HTML</li> <li>Button fires Javascript AJAX request</li> <li>AJAX request runs Python script</li> <li>Python script produces JSON and returns it to Javascript</li> </ul>  <p>My JS is the following:</p>  <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-html lang-html prettyprint-override""><code>var json;  function trigger() {   var xhttp = new XMLHttpRequest();   xhttp.onreadystatechange = function() {     if (this.readyState == 4 &amp;&amp; this.status == 200) {         json = xhttp.responseText;         console.log(json);     }   };   xhttp.open(""GET"", ""./request.py"", true);   xhttp.send(); }</code></pre> </div> </div> </p>  <p>Right now rather than seeing the output of a Python script I'm just seeing the content (as text) of the Python file.</p>  <p>I'm not sure of the correct AJAX call to RUN the .py script rather than just reading it and returning the contents.</p>  <p>Any help would be greatly appreciated!</p>"	54348587	"<p><a href=""https://docs.python.org/2/library/simplehttpserver.html"" rel=""nofollow noreferrer"">SimpleHTTPServer</a> only serves file content. If you want to execute the script and return the output, you need <a href=""https://docs.python.org/2/library/cgihttpserver.html"" rel=""nofollow noreferrer"">CGIHTTPServer</a>.</p>  <p>Note that both modules have been merged into <a href=""https://docs.python.org/3.6/library/http.server.html"" rel=""nofollow noreferrer"">http.server</a> in python 3.</p>"
54348270	Triggering Python script using AJAX Javascript request on local server using vanilla JS	javascript|python|html|ajax	2019-01-24 13:54:02.310000 UTC	"<p>I have a localhost environment running using Python's SimpleHTTPServer, serving on port 8080.</p>  <p>My project consists of an HTML file, a python script, and a Javascript (vanilla) script.</p>  <p>The method I wish to employ is as follows:</p>  <ul> <li>Click button in HTML</li> <li>Button fires Javascript AJAX request</li> <li>AJAX request runs Python script</li> <li>Python script produces JSON and returns it to Javascript</li> </ul>  <p>My JS is the following:</p>  <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-html lang-html prettyprint-override""><code>var json;  function trigger() {   var xhttp = new XMLHttpRequest();   xhttp.onreadystatechange = function() {     if (this.readyState == 4 &amp;&amp; this.status == 200) {         json = xhttp.responseText;         console.log(json);     }   };   xhttp.open(""GET"", ""./request.py"", true);   xhttp.send(); }</code></pre> </div> </div> </p>  <p>Right now rather than seeing the output of a Python script I'm just seeing the content (as text) of the Python file.</p>  <p>I'm not sure of the correct AJAX call to RUN the .py script rather than just reading it and returning the contents.</p>  <p>Any help would be greatly appreciated!</p>"	54348912	"<p>You can use SocketServer instead of the default server. Add a handler to the SocketServer. Instead of a GET, do a POST with the actual command to run. The handler can check the post request and run the required script.</p>"
54383727	What is the equivalent of this Python based comparison solution for Javascript?	javascript|python	2019-01-26 23:22:54.523000 UTC	"<p>I have built this function some time ago, in Python and I now have to implement a similar solution in Javascript. I am new to Javascript so I am having a bit of a hard time solving this problem.</p>  <p>This is my Python code:</p>  <pre class=""lang-py prettyprint-override""><code>import operator  # Operator constants operators = [operator.eq, operator.lt, operator.gt] labels = [""="", ""&lt;"", ""&gt;""]  def get_comparison_operator(a, b):         """"""         A function that returns an operator string based on the relation between         the supplied two numbers.         """"""         for op, label in zip(operators, labels):             if op(b, a):                 return label         return '?'  get_comparison_operator(2,6) # returns '&lt;' </code></pre>  <p>This uses a python module called <code>operator</code>. Was not sure if there is a euqilevant js package.</p>"	54383840	"<pre><code>const comparators = {     'EQ': (a, b) =&gt; (a == b),     'LT': (a, b) =&gt; (a &lt; b),     'GT': (a, b) =&gt; (a &gt; b) }  const compare = (a, b) =&gt; {     for (let key of Object.keys(comparators)) {         fn = comparators[key]         if (fn(a, b)) {             return key         }     }     return null } </code></pre>"
54383727	What is the equivalent of this Python based comparison solution for Javascript?	javascript|python	2019-01-26 23:22:54.523000 UTC	"<p>I have built this function some time ago, in Python and I now have to implement a similar solution in Javascript. I am new to Javascript so I am having a bit of a hard time solving this problem.</p>  <p>This is my Python code:</p>  <pre class=""lang-py prettyprint-override""><code>import operator  # Operator constants operators = [operator.eq, operator.lt, operator.gt] labels = [""="", ""&lt;"", ""&gt;""]  def get_comparison_operator(a, b):         """"""         A function that returns an operator string based on the relation between         the supplied two numbers.         """"""         for op, label in zip(operators, labels):             if op(b, a):                 return label         return '?'  get_comparison_operator(2,6) # returns '&lt;' </code></pre>  <p>This uses a python module called <code>operator</code>. Was not sure if there is a euqilevant js package.</p>"	54383891	"<p>In Javascript there is no such module <code>operator</code> as like in Python, but we can create in object for that, and implement the specific methods for it.  Also, vanilla Javascript does not have <code>zip</code> function, but we do not need it since we will iterate through the object:</p>  <pre><code>const operators = {     ""="": (a, b) =&gt; a === b,     ""&lt;"": (a, b) =&gt; a &lt; b,     ""&gt;"": (a, b) =&gt; a &gt; b  }   const getComparisionOperator = (a, b) =&gt; {      for (const operator in operators) {          if (operators[operator](a, b)) {              return operator;          }      }      return ""?"";  }   console.log(getComparisionOperator(4, 5)); </code></pre>"
54396285	Python requests.get(url) returning javascript code instead of the page html	python-3.x|web-scraping|beautifulsoup|python-requests	2019-01-28 05:59:27.223000 UTC	"<p>I have a very simple problem. I'm trying to get the job description from the html of a linkedIn page, but instead of getting the html of the page I'm getting few lines that look like a javascript code instead. I'm very new to this so any help will be greatly appreciated! Thanks</p>  <p>Here's my code:</p>  <pre><code>import requests url = ""https://www.linkedin.com/jobs/view/inside-sales-manager-at-stericycle-1089095836/"" page_html = requests.get(url).text print(page_html) </code></pre>  <p>When I run this I don't get the html that I expect containing the job description...I just get few lines of javascript code instead. </p>"	54401088	"<p>Some websites present different content based on the type of browser that is accessing the site. LinkedIn is a perfect example of such behavior. If the browser has advanced capabilities, the website may present “richer” content – something more dynamic and styled. And using the bot won't help to see these websites.</p>  <p>To solve this problem, you need to follow these steps:</p>  <ol> <li>Download chrome-driver from <a href=""https://chromedriver.storage.googleapis.com/index.html?path=2.41/"" rel=""noreferrer"">here</a>. Choose the one that matches your OS.</li> <li>Extract the driver and put it in a certain directory. For example, <code>\usr</code></li> <li>Install <code>Selenium</code> which is a python module by running <code>pip install selenium</code>.  Note that, selenium depends on another package called <code>msgpack</code>. So, you should install it first using this command <code>pip install msgpack</code>.</li> <li>Now, we are ready to run the following code</li> </ol>  <pre><code>import requests from bs4 import BeautifulSoup from selenium import webdriver from selenium.webdriver.chrome.options import Options   def create_browser(webdriver_path):     #create a selenium object that mimics the browser     browser_options = Options()     #headless tag created an invisible browser     browser_options.add_argument(""--headless"")     browser_options.add_argument('--no-sandbox')     browser = webdriver.Chrome(webdriver_path, chrome_options=browser_options)     print(""Done Creating Browser"")     return browser   url = ""https://www.linkedin.com/jobs/view/inside-sales-manager-at-stericycle-1089095836/"" browser = create_browser('/usr/chromedriver') #DON'T FORGET TO CHANGE THIS AS YOUR DIRECTORY browser.get(url) page_html = browser.page_source print(page_html[-10:]) #prints dy&gt;&lt;/html&gt;  </code></pre>  <p>Now, you have the whole page. I hope this answers your question!!</p>"
54465112	Call Google Map Javascript API from python	javascript|python	2019-01-31 16:31:05.503000 UTC	"<p>i would like to call this method from Google Maps Javascript API: google.maps.geometry.spherical.computeDistanceBetween(origin, destination) from python, not from javascript. How can I do it ?</p>  <p>Thanks.</p>"	54465250	"<p>You could use a library called <a href=""http://docs.python-requests.org/en/master/"" rel=""nofollow noreferrer"">requests</a>.</p>  <p>Sample request: </p>  <pre><code>&gt;&gt;&gt; r.status_code 200 &gt;&gt;&gt; r.headers['content-type'] 'application/json; charset=utf8' &gt;&gt;&gt; r.encoding 'utf-8' &gt;&gt;&gt; r.text u'{""type"":""User""...' &gt;&gt;&gt; r.json() {u'private_gists': 419, u'total_private_repos': 77, ...} </code></pre>  <p>A short <a href=""https://www.dataquest.io/blog/python-api-tutorial/"" rel=""nofollow noreferrer"">tutorial</a> you could use</p>"
54466311	send file to api request from python to react-native javascript conversion code	javascript|python|api|file|react-native	2019-01-31 17:38:50.133000 UTC	"<p>I use the api of a 3rd party software called plate recognizer that can be seen <a href=""https://platerecognizer.com/api-documentation/?python#authentication"" rel=""nofollow noreferrer"">here</a> I tried their python sample code and it works properly, but when I tried it using my javascript code, their api response different value means my javascript code is not equivalent to their python code that their provided to me that is working, the question is how can I make my code exactly a same function as the python code that I created?</p>  <p>This is the python code that I run and gives me a successful response with the expected output.</p>  <pre><code># pip install requests import requests from pprint import pprint  with open('./sampleCar3.jpg', 'rb') as fp:     response = requests.post(         'https://platerecognizer.com/api/plate-reader/',         files=dict(upload=fp),         headers={'Authorization': 'Token API_TOKEN'}) pprint(response.json()) </code></pre>  <p>And this is the code that I tried on javascript that logs an error output</p>  <pre><code>placeRecognizerPostRequest(imgSrc) {         // imgSrc value = ./sampleCar3.jpg         const body = new FormData();         body.append(""upload"", imgSrc);          fetch(""https://platerecognizer.com/api/plate-reader/"", {             method: 'POST',             headers: {                 ""Authorization"": ""Token API_TOKEN"",                 ""Content-Type"": ""multipart/form-data""             },             body: body         }).then((response) =&gt; {             console.log(response);         }).catch((err) =&gt; {             console.log(err);         });     } </code></pre>  <p>I want a success output response of their api, it's successful in my python code, but it's giving me a failed json response that is not expected.</p>  <p>PS. the file path of both image in both codes are correct.</p>"	54470156	"<p>When I have uploaded images to a server I have constructed the <code>FormData</code> in the following way. </p>  <pre><code>let file = {     name: 'myimage.jpg',     uri: 'path/to/the/image/myimage.jpg',     type: 'image/jpg'  };   let body = new FormData();  body.append('upload', file); </code></pre>"
54466311	send file to api request from python to react-native javascript conversion code	javascript|python|api|file|react-native	2019-01-31 17:38:50.133000 UTC	"<p>I use the api of a 3rd party software called plate recognizer that can be seen <a href=""https://platerecognizer.com/api-documentation/?python#authentication"" rel=""nofollow noreferrer"">here</a> I tried their python sample code and it works properly, but when I tried it using my javascript code, their api response different value means my javascript code is not equivalent to their python code that their provided to me that is working, the question is how can I make my code exactly a same function as the python code that I created?</p>  <p>This is the python code that I run and gives me a successful response with the expected output.</p>  <pre><code># pip install requests import requests from pprint import pprint  with open('./sampleCar3.jpg', 'rb') as fp:     response = requests.post(         'https://platerecognizer.com/api/plate-reader/',         files=dict(upload=fp),         headers={'Authorization': 'Token API_TOKEN'}) pprint(response.json()) </code></pre>  <p>And this is the code that I tried on javascript that logs an error output</p>  <pre><code>placeRecognizerPostRequest(imgSrc) {         // imgSrc value = ./sampleCar3.jpg         const body = new FormData();         body.append(""upload"", imgSrc);          fetch(""https://platerecognizer.com/api/plate-reader/"", {             method: 'POST',             headers: {                 ""Authorization"": ""Token API_TOKEN"",                 ""Content-Type"": ""multipart/form-data""             },             body: body         }).then((response) =&gt; {             console.log(response);         }).catch((err) =&gt; {             console.log(err);         });     } </code></pre>  <p>I want a success output response of their api, it's successful in my python code, but it's giving me a failed json response that is not expected.</p>  <p>PS. the file path of both image in both codes are correct.</p>"	54500678	"<p>The documentation now includes an example of how to <a href=""https://platerecognizer.com/api-documentation/?javascript#license-plate-recognition"" rel=""nofollow noreferrer"">use the API in Javascript</a>.</p>"
54505130	socket.io connection problem with python server and javascript client	javascript|python|python-3.x|socket.io	2019-02-03 16:41:25.783000 UTC	"<p>I'm trying to setup a socket.io server in Python and a socket.io client in JavaScript.</p> <p>I have found examples for JS clients talking to node servers and python clients talking to python servers - but no examples for a JS client talking to a python server.. So I'm trying to combine code from different examples.</p> <p>The client (html file served by apache, hosted anywhere you want)</p> <pre><code>&lt;script src=&quot;https://cdnjs.cloudflare.com/ajax/libs/socket.io/2.2.0/socket.io.js&quot;&gt;&lt;/script&gt; &lt;script&gt;  socket = io.connect('http://localhost:5000');  socket.on('connect',function() {   console.log('Client has connected to the server!'); });  socket.on('msg',function(data) {   console.log('Received a message from the server!',data); });  socket.on('disconnect',function() {   console.log('The client has disconnected!'); });  // Sends a message to the server via sockets function send(message) {   socket.emit('msg',message); };  &lt;/script&gt; </code></pre> <p>The server:</p> <pre><code>import eventlet import socketio  sio = socketio.Server() # the index.html file hosted by eventlet is a dummy file # it appears to be required to host some html file..  app = socketio.WSGIApp(sio, static_files={     '/': {'content_type': 'text/html', 'filename': 'index.html'} })  @sio.on('connect') def connect(sid, environ):     print('connect ', sid)  @sio.on('msg') def message(sid, data):     print('message ', data)  @sio.on('disconnect') def disconnect(sid):     print('disconnect ', sid)  if __name__ == '__main__':     eventlet.wsgi.server(eventlet.listen(('', 5000)), app) </code></pre> <p>When running this setup I can see in the Python terminal how the client is trying to connect:</p> <pre><code>    disconnect  db71fa07154c45d4b6e6c80073d27e17     127.0.0.1 - - [03/Feb/2019 17:28:04] &quot;POST /socket.io/?EIO=3&amp;transport=polling&amp;t=MYqC39S&amp;sid=4e1045977dd14223b0d2913752dd5cf1 HTTP/1.1&quot; 400 233 0.000296     127.0.0.1 - - [03/Feb/2019 17:28:04] &quot;POST /socket.io/?EIO=3&amp;transport=polling&amp;t=MYqC39Z&amp;sid=4e1045977dd14223b0d2913752dd5cf1 HTTP/1.1&quot; 400 233 0.000201     connect  8650c5c7f735492e84a6e8774a20b069     127.0.0.1 - - [03/Feb/2019 17:28:05] &quot;GET /socket.io/?EIO=3&amp;transport=polling&amp;t=MYqC3Q3 HTTP/1.1&quot; 200 396 0.001240     disconnect  8650c5c7f735492e84a6e8774a20b069     127.0.0.1 - - [03/Feb/2019 17:29:05] &quot;GET /socket.io/?EIO=3&amp;transport=polling&amp;t=MYqC3QC&amp;sid=8650c5c7f735492e84a6e8774a20b069 HTTP/1.1&quot; 400 233 60.005087     (12281) accepted ('127.0.0.1', 46478)     127.0.0.1 - - [03/Feb/2019 17:29:23] &quot;GET /socket.io/? </code></pre> <p>and in chrome i see the clients connection tries:</p> <pre><code>index.js:83 POST http://localhost:5000/socket.io/?EIO=3&amp;transport=polling&amp;t=MYqDzXq&amp;sid=d08f2f55533b43ea81bd2f98201de277 400 (BAD REQUEST)     i.create @ index     index.js:83 POST http://localhost:5000/socket.io/?EIO=3&amp;transport=polling&amp;t=MYqDzXz&amp;sid=d08f2f55533b43ea81bd2f98201de277 400 (BAD REQUEST)     i.create @ index.     index.js:83 WebSocket connection to 'ws://localhost:5000/socket.io/?EIO=3&amp;transport=websocket&amp;sid=f23be764110d44cda684e633a990e0d7' failed: Error during WebSocket handshake: Unexpected response code: 400 </code></pre> <p>They seem to communicate - but something is wrong, so the connection is never fully established.</p>"	54513711	"<p>Found the problem - I had two instances of the server running. One of them was fired as a background thread and just kept running, so I forgot about it... There was two servers listening on the same port, that's why the communication got messed up.</p>  <p>Now everything works - so this code can be used as a minimal working example of python-JS socket.io communication.</p>"
54505130	socket.io connection problem with python server and javascript client	javascript|python|python-3.x|socket.io	2019-02-03 16:41:25.783000 UTC	"<p>I'm trying to setup a socket.io server in Python and a socket.io client in JavaScript.</p> <p>I have found examples for JS clients talking to node servers and python clients talking to python servers - but no examples for a JS client talking to a python server.. So I'm trying to combine code from different examples.</p> <p>The client (html file served by apache, hosted anywhere you want)</p> <pre><code>&lt;script src=&quot;https://cdnjs.cloudflare.com/ajax/libs/socket.io/2.2.0/socket.io.js&quot;&gt;&lt;/script&gt; &lt;script&gt;  socket = io.connect('http://localhost:5000');  socket.on('connect',function() {   console.log('Client has connected to the server!'); });  socket.on('msg',function(data) {   console.log('Received a message from the server!',data); });  socket.on('disconnect',function() {   console.log('The client has disconnected!'); });  // Sends a message to the server via sockets function send(message) {   socket.emit('msg',message); };  &lt;/script&gt; </code></pre> <p>The server:</p> <pre><code>import eventlet import socketio  sio = socketio.Server() # the index.html file hosted by eventlet is a dummy file # it appears to be required to host some html file..  app = socketio.WSGIApp(sio, static_files={     '/': {'content_type': 'text/html', 'filename': 'index.html'} })  @sio.on('connect') def connect(sid, environ):     print('connect ', sid)  @sio.on('msg') def message(sid, data):     print('message ', data)  @sio.on('disconnect') def disconnect(sid):     print('disconnect ', sid)  if __name__ == '__main__':     eventlet.wsgi.server(eventlet.listen(('', 5000)), app) </code></pre> <p>When running this setup I can see in the Python terminal how the client is trying to connect:</p> <pre><code>    disconnect  db71fa07154c45d4b6e6c80073d27e17     127.0.0.1 - - [03/Feb/2019 17:28:04] &quot;POST /socket.io/?EIO=3&amp;transport=polling&amp;t=MYqC39S&amp;sid=4e1045977dd14223b0d2913752dd5cf1 HTTP/1.1&quot; 400 233 0.000296     127.0.0.1 - - [03/Feb/2019 17:28:04] &quot;POST /socket.io/?EIO=3&amp;transport=polling&amp;t=MYqC39Z&amp;sid=4e1045977dd14223b0d2913752dd5cf1 HTTP/1.1&quot; 400 233 0.000201     connect  8650c5c7f735492e84a6e8774a20b069     127.0.0.1 - - [03/Feb/2019 17:28:05] &quot;GET /socket.io/?EIO=3&amp;transport=polling&amp;t=MYqC3Q3 HTTP/1.1&quot; 200 396 0.001240     disconnect  8650c5c7f735492e84a6e8774a20b069     127.0.0.1 - - [03/Feb/2019 17:29:05] &quot;GET /socket.io/?EIO=3&amp;transport=polling&amp;t=MYqC3QC&amp;sid=8650c5c7f735492e84a6e8774a20b069 HTTP/1.1&quot; 400 233 60.005087     (12281) accepted ('127.0.0.1', 46478)     127.0.0.1 - - [03/Feb/2019 17:29:23] &quot;GET /socket.io/? </code></pre> <p>and in chrome i see the clients connection tries:</p> <pre><code>index.js:83 POST http://localhost:5000/socket.io/?EIO=3&amp;transport=polling&amp;t=MYqDzXq&amp;sid=d08f2f55533b43ea81bd2f98201de277 400 (BAD REQUEST)     i.create @ index     index.js:83 POST http://localhost:5000/socket.io/?EIO=3&amp;transport=polling&amp;t=MYqDzXz&amp;sid=d08f2f55533b43ea81bd2f98201de277 400 (BAD REQUEST)     i.create @ index.     index.js:83 WebSocket connection to 'ws://localhost:5000/socket.io/?EIO=3&amp;transport=websocket&amp;sid=f23be764110d44cda684e633a990e0d7' failed: Error during WebSocket handshake: Unexpected response code: 400 </code></pre> <p>They seem to communicate - but something is wrong, so the connection is never fully established.</p>"	63304412	"<p>To send messages to the server from the JS Client script, you have to use emit instead of send.</p> <pre><code>// Sends a message to the server via sockets function send(message) {   socket.emit('msg',message); }; </code></pre>"
54527444	"Can I get url, that is generated by JavaScript, using Selenium and Python 3?"	python-3.x|selenium|parsing	2019-02-05 03:43:06.920000 UTC	"<p>I write parser using Selenium and Python 3.7 for next site - <a href=""https://www.oddsportal.com/soccer/germany/bundesliga/nurnberg-dortmund-fNa2KmU4/"" rel=""nofollow noreferrer"">https://www.oddsportal.com/soccer/germany/bundesliga/nurnberg-dortmund-fNa2KmU4/</a></p>  <p>I'm interested, to get the url, that is generated by JavaScript, using Selenium in Python 3?</p>  <p>I need to get the url for events from the sites from which the data is taken in the table.</p>  <p><a href=""https://i.stack.imgur.com/ouwbj.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/ouwbj.png"" alt=""enter image description here""></a></p>  <p>For example. It seems to me that the data in the first line (10Bet) is obtained from this page - <a href=""https://www.10bet.com/sports/football/germany-1-bundesliga/20190218/nurnberg-vs-dortmund/"" rel=""nofollow noreferrer"">https://www.10bet.com/sports/football/germany-1-bundesliga/20190218/nurnberg-vs-dortmund/</a></p>  <p>How can get url to this page?</p>"	54527980	"<p>To get the <code>URL</code> of all the links on a page, you can store all the elements with tagname <code>a</code> in a <code>WebElement</code> list and then you can fetch the <code>href</code> attribute to get the link of each <code>WebElement</code>.</p>  <p>you can refer to the following code for all the link present in hole page :</p>  <pre><code>List&lt;WebElement&gt; links = driver.findElements(By.tagName(""a"")); //This will store all the link WebElements into a list      for(WebElement ele: links) // This way you can take the Url of each link     {     String url = ele.getAttribute(""href""); //To get the link you can use getAttribute() method with ""href"" as an argument      System.out.println(url);     } </code></pre>  <p>In case you need the particilar link explicitly you need to pass the xpath of the element </p>  <pre><code>WebElement ele = driver.findElements(By.xpath(""Pass the xapth of the element"")); </code></pre>  <p>and after that you need to do this</p>  <pre><code>String url = ele.getAttribute(""href"") //to get the url of the particular element  </code></pre>  <p>I have also shared the link with you so you can go and check i have highlighted elements in that</p>  <p><a href=""https://i.stack.imgur.com/OOtdV.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/OOtdV.png"" alt=""enter image description here""></a></p>  <p>let us know if that helped or not</p>"
54527444	"Can I get url, that is generated by JavaScript, using Selenium and Python 3?"	python-3.x|selenium|parsing	2019-02-05 03:43:06.920000 UTC	"<p>I write parser using Selenium and Python 3.7 for next site - <a href=""https://www.oddsportal.com/soccer/germany/bundesliga/nurnberg-dortmund-fNa2KmU4/"" rel=""nofollow noreferrer"">https://www.oddsportal.com/soccer/germany/bundesliga/nurnberg-dortmund-fNa2KmU4/</a></p>  <p>I'm interested, to get the url, that is generated by JavaScript, using Selenium in Python 3?</p>  <p>I need to get the url for events from the sites from which the data is taken in the table.</p>  <p><a href=""https://i.stack.imgur.com/ouwbj.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/ouwbj.png"" alt=""enter image description here""></a></p>  <p>For example. It seems to me that the data in the first line (10Bet) is obtained from this page - <a href=""https://www.10bet.com/sports/football/germany-1-bundesliga/20190218/nurnberg-vs-dortmund/"" rel=""nofollow noreferrer"">https://www.10bet.com/sports/football/germany-1-bundesliga/20190218/nurnberg-vs-dortmund/</a></p>  <p>How can get url to this page?</p>"	54533125	"<p>Try the below code, which will prints the required URL's as per your requirement : </p>  <pre><code>from selenium import webdriver driver = webdriver.Chrome('C:\\NotBackedUp\\chromedriver.exe') driver.maximize_window() driver.get('https://www.oddsportal.com/soccer/germany/bundesliga/nurnberg-dortmund-fNa2KmU4/')  # Locators for locating the required URL's xpath = ""//div[@id='odds-data-table']//tbody//tr"" rows = ""//div[@id='odds-data-table']//tbody//tr/td[1]"" print(""=&gt; Required URL's is/are : "") # Fetching &amp; Printing the required URL's for i in range(1, len(driver.find_elements_by_xpath(rows)), 1):     anchor = driver.find_elements_by_xpath(xpath+""[""+str(i)+""]/td[2]/a"")     if len(anchor) &gt; 0:         print(anchor[0].get_attribute('href'))     else:         a = driver.find_elements_by_xpath(""//div[@id='odds-data-table']//tbody//tr[""+(str(i+1))+""]/td[1]//a[2]"")         if len(a) &gt; 0:             print(a[0].get_attribute('href'))  print('Done...') </code></pre>  <p>I hope it helps...</p>"
54572241	Python's getattr equivalent in my javascript code?	javascript|python	2019-02-07 11:23:33.813000 UTC	"<p>I'm following a article that was in python and I'm trying to implement the same thing but in javascript, I just don't undestrand the part when he uses <code>getattr</code>. I think it's something like <code>node.constructor.name</code>, but I'm not sure because I don't understand how he can call <code>visitor(node)</code>.</p>  <pre><code>class NodeVisitor(object):     def visit(self, node):         method_name = 'visit_' + type(node).__name__         visitor = getattr(self, method_name, self.generic_visit)         return visitor(node)      def generic_visit(self, node):         raise Exception('No visit_{} method'.format(type(node).__name__)) </code></pre>  <p>To understand more about it and to see the rest of the code, here is the <a href=""https://ruslanspivak.com/lsbasi-part7/"" rel=""nofollow noreferrer"">article</a></p>"	54572400	"<p><code>getattr</code> gets an attribute (i.e. <code>.foo</code>) from an object, given the attribute name as a string. So <code>getattr(o, 'foo')</code> is equivalent to <code>o.foo</code>. The third argument is the default value which will be returned if the object does not have that attribute.</p>  <p>The equivalent in Javascript is:</p>  <pre><code>o['foo'] || bar </code></pre>  <p>You can use any variable for <code>'foo'</code> here. If <code>o</code> does not have that property, <code>undefined</code> is returned (in Python it would raise an <code>AttributeError</code>, in Javascript it merely produces <code>undefined</code>), at which point the <code>||</code> operator would return its second operand instead.</p>  <p>Putting it together, something like:</p>  <pre><code>const methodName = `visit_${ node.constructor.name }`; const visitor = this[methodName] || this.genericVisit; return visitor.call(this, node) </code></pre>  <p>Note that you will have to care about propagating <code>this</code> correctly. I'm making a lot of assumptions about your class structure here, but something like this should do.</p>"
54578829	Get textarea value from HTML page to Python Flask using Javascript	javascript|html	2019-02-07 17:17:08.877000 UTC	"<p>I'm having a bit of trouble with figuring out how to get a post from Javascript to work, to my Python Flask server.</p>  <p>Here's the important part of what I've got in my html file</p>  <pre><code>&lt;script src=""//ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js &lt;/script&gt; &lt;script type=text/javascript&gt;     $('a#test').bind('click', function() {         var textBox = document.getElementById('targetTextArea').value;         $.post('/postmethod', {text: textBox} );     }); &lt;/script&gt;  &lt;!--textarea--&gt; &lt;textarea rows=""1"" cols=""20"" id=""targetTextArea""&gt; &lt;/textarea&gt;  &lt;!--button--&gt; &lt;form method=""post"" role=""form""&gt; &lt;a href=# id=test&gt;     &lt;input type=""button"" value=""submit"" id=""submit"" onClick=""writeOut()""&gt; &lt;/a&gt; &lt;/form&gt; </code></pre>  <p>and here's what I've got in my Python flask file</p>  <pre><code>@app.route('/postmethod', methods = ['POST']) def postmethod():     data = request.form['text']     print ""Hello world!""     print data     return data </code></pre>  <p>When I run my python script the textarea and button are there as they should be, but when I type into the textarea and click the button nothing is printed. Please help.</p>"	54578873	"<p>id's value should be in quotes</p>  <pre><code>&lt;a href=""#"" id=""test""&gt;         &lt;input type=""button"" value=""submit"" id=""submit"" onClick=""writeOut()""&gt;     &lt;/a&gt; </code></pre>"
54578829	Get textarea value from HTML page to Python Flask using Javascript	javascript|html	2019-02-07 17:17:08.877000 UTC	"<p>I'm having a bit of trouble with figuring out how to get a post from Javascript to work, to my Python Flask server.</p>  <p>Here's the important part of what I've got in my html file</p>  <pre><code>&lt;script src=""//ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js &lt;/script&gt; &lt;script type=text/javascript&gt;     $('a#test').bind('click', function() {         var textBox = document.getElementById('targetTextArea').value;         $.post('/postmethod', {text: textBox} );     }); &lt;/script&gt;  &lt;!--textarea--&gt; &lt;textarea rows=""1"" cols=""20"" id=""targetTextArea""&gt; &lt;/textarea&gt;  &lt;!--button--&gt; &lt;form method=""post"" role=""form""&gt; &lt;a href=# id=test&gt;     &lt;input type=""button"" value=""submit"" id=""submit"" onClick=""writeOut()""&gt; &lt;/a&gt; &lt;/form&gt; </code></pre>  <p>and here's what I've got in my Python flask file</p>  <pre><code>@app.route('/postmethod', methods = ['POST']) def postmethod():     data = request.form['text']     print ""Hello world!""     print data     return data </code></pre>  <p>When I run my python script the textarea and button are there as they should be, but when I type into the textarea and click the button nothing is printed. Please help.</p>"	54580309	"<p>You try with the long way?  Replace <code>$.post('/postmethod', {text: textBox} );</code> for</p>  <pre><code>$.ajax({         method: ""POST"",         url: ""postmethod"", //here can be '/postmethod'         dataType: 'text',         data: {text: textBox},         success: function(result) {             // example             $('body').html(result)         } }); </code></pre>  <p>This should print on page the content of the variable ""data"" of python code.</p>  <p>Another thing,</p>  <p>I see that you are using two ways for the submit button, if you use</p>  <pre><code>$('a#test').bind('click', function() { //code }); </code></pre>  <p>then, the  <code>onClick=""writeOut()""</code> is not neccessary.</p>  <p>I hope you find it useful, regards.</p>"
54578829	Get textarea value from HTML page to Python Flask using Javascript	javascript|html	2019-02-07 17:17:08.877000 UTC	"<p>I'm having a bit of trouble with figuring out how to get a post from Javascript to work, to my Python Flask server.</p>  <p>Here's the important part of what I've got in my html file</p>  <pre><code>&lt;script src=""//ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js &lt;/script&gt; &lt;script type=text/javascript&gt;     $('a#test').bind('click', function() {         var textBox = document.getElementById('targetTextArea').value;         $.post('/postmethod', {text: textBox} );     }); &lt;/script&gt;  &lt;!--textarea--&gt; &lt;textarea rows=""1"" cols=""20"" id=""targetTextArea""&gt; &lt;/textarea&gt;  &lt;!--button--&gt; &lt;form method=""post"" role=""form""&gt; &lt;a href=# id=test&gt;     &lt;input type=""button"" value=""submit"" id=""submit"" onClick=""writeOut()""&gt; &lt;/a&gt; &lt;/form&gt; </code></pre>  <p>and here's what I've got in my Python flask file</p>  <pre><code>@app.route('/postmethod', methods = ['POST']) def postmethod():     data = request.form['text']     print ""Hello world!""     print data     return data </code></pre>  <p>When I run my python script the textarea and button are there as they should be, but when I type into the textarea and click the button nothing is printed. Please help.</p>"	54585259	"<p>The solution I found was to add</p>  <pre><code>$(function() { }); </code></pre>  <p>around it</p>  <pre><code>$(function() {     $('a#test').bind('click', function() {         var textBox = document.getElementById('targetTextArea').value;         $.post('/postmethod', {text: textBox} );         return false;     }); }); </code></pre>  <p>and also the return false prevents the page of redirecting</p>  <p>sorry guys, I'm new to Javascript. Thank you very much!</p>"
54583233	Creating dictionary using python from javascript var data	javascript|python|dictionary	2019-02-07 22:23:54.227000 UTC	"<p>trying to figure out how to do this and have yet to find a good solution.  I pulled this data out of an XML response.  It was in a var tag.  Now what I would like to do is create a dictionary out of it.  The domain.com should be paired with the number right listed behind it.  </p>  <p>This is the data:</p>  <pre><code>[     'cb131.domain1.com', '147827',      'cb143.domain2.com', '147825',      'cb175.domain1.com', '147454',      'cb190.domain.com', '146210',      'cb201.domain.com', '146208',      'cb219.domain.com', '146042',      'cb225.domain.com', '146282',      'cb900.domain.com', '148461',      'cb901.domain.com', '148493',      'cb902.domain.com', '148495',      'cb903.domain.com', '148497',      'cb904.domain.com','148499',      'cb905.domain.com', '148501',      'cb906.domain.com', '148503',      'cb907.domain.com', '148505',      'cb908.domain.com', '148507',      'cb909.domain.com', '148509' ] </code></pre>  <p>So for example cb131.domain1.com should be paired with 147827, cb143.domain2.com paired with 147825 and so on.</p>  <p>Drawing a blank on a good quick solution on how to do this.  Hopefully someone can help.</p>  <p>Thanks!</p>  <p>Edited with answer I choose below:</p>  <p>I choose this answer and also to help anyone else I add a nice way to print out the results (data is the string I obtained):</p>  <pre><code>import ast i = iter(ast.literal_eval(data)) dic = dict(zip(i, i)) for key , value in dic.items():     print(key, "" :: "", value) </code></pre>"	54583294	"<p>I do not yet know Python that I can write a snippet, but:</p>  <ul> <li>initialize an empty dictionary in Python</li> <li>create a for loop counting index from 0 to length of your array in steps of two.  <ul> <li>inside add a dictionary entry with key of value at index and value at index + 1</li> <li>perhaps check for duplicates</li> </ul></li> </ul>  <p>Does this answer help you?</p>  <p>This is Python - quickly google'd:</p>  <pre><code>dictionary = { } for idx in range(0, len(data), 2)    dictionary[data[idx]] = data[idx + 1] </code></pre>"
54583233	Creating dictionary using python from javascript var data	javascript|python|dictionary	2019-02-07 22:23:54.227000 UTC	"<p>trying to figure out how to do this and have yet to find a good solution.  I pulled this data out of an XML response.  It was in a var tag.  Now what I would like to do is create a dictionary out of it.  The domain.com should be paired with the number right listed behind it.  </p>  <p>This is the data:</p>  <pre><code>[     'cb131.domain1.com', '147827',      'cb143.domain2.com', '147825',      'cb175.domain1.com', '147454',      'cb190.domain.com', '146210',      'cb201.domain.com', '146208',      'cb219.domain.com', '146042',      'cb225.domain.com', '146282',      'cb900.domain.com', '148461',      'cb901.domain.com', '148493',      'cb902.domain.com', '148495',      'cb903.domain.com', '148497',      'cb904.domain.com','148499',      'cb905.domain.com', '148501',      'cb906.domain.com', '148503',      'cb907.domain.com', '148505',      'cb908.domain.com', '148507',      'cb909.domain.com', '148509' ] </code></pre>  <p>So for example cb131.domain1.com should be paired with 147827, cb143.domain2.com paired with 147825 and so on.</p>  <p>Drawing a blank on a good quick solution on how to do this.  Hopefully someone can help.</p>  <p>Thanks!</p>  <p>Edited with answer I choose below:</p>  <p>I choose this answer and also to help anyone else I add a nice way to print out the results (data is the string I obtained):</p>  <pre><code>import ast i = iter(ast.literal_eval(data)) dic = dict(zip(i, i)) for key , value in dic.items():     print(key, "" :: "", value) </code></pre>"	54583305	"<p>This should do it. Assuming the list is saved to a variable <code>l</code>:</p>  <pre><code>keys = l[::2] vals = l[1::2] dic  = dict(zip(keys, vals)) </code></pre>"
54583233	Creating dictionary using python from javascript var data	javascript|python|dictionary	2019-02-07 22:23:54.227000 UTC	"<p>trying to figure out how to do this and have yet to find a good solution.  I pulled this data out of an XML response.  It was in a var tag.  Now what I would like to do is create a dictionary out of it.  The domain.com should be paired with the number right listed behind it.  </p>  <p>This is the data:</p>  <pre><code>[     'cb131.domain1.com', '147827',      'cb143.domain2.com', '147825',      'cb175.domain1.com', '147454',      'cb190.domain.com', '146210',      'cb201.domain.com', '146208',      'cb219.domain.com', '146042',      'cb225.domain.com', '146282',      'cb900.domain.com', '148461',      'cb901.domain.com', '148493',      'cb902.domain.com', '148495',      'cb903.domain.com', '148497',      'cb904.domain.com','148499',      'cb905.domain.com', '148501',      'cb906.domain.com', '148503',      'cb907.domain.com', '148505',      'cb908.domain.com', '148507',      'cb909.domain.com', '148509' ] </code></pre>  <p>So for example cb131.domain1.com should be paired with 147827, cb143.domain2.com paired with 147825 and so on.</p>  <p>Drawing a blank on a good quick solution on how to do this.  Hopefully someone can help.</p>  <p>Thanks!</p>  <p>Edited with answer I choose below:</p>  <p>I choose this answer and also to help anyone else I add a nice way to print out the results (data is the string I obtained):</p>  <pre><code>import ast i = iter(ast.literal_eval(data)) dic = dict(zip(i, i)) for key , value in dic.items():     print(key, "" :: "", value) </code></pre>"	54583316	"<p>Assuming you have the above in a python array called <code>data</code>, you can do:</p>  <pre><code>new_data = [] for i in range(0, len(data), 2):     new_data.append((data[i], data[i+1])) </code></pre>  <p>Now new_data would be a list of tuples.  You could certainly create a better data structure to hold these pairs if you want.</p>"
54583233	Creating dictionary using python from javascript var data	javascript|python|dictionary	2019-02-07 22:23:54.227000 UTC	"<p>trying to figure out how to do this and have yet to find a good solution.  I pulled this data out of an XML response.  It was in a var tag.  Now what I would like to do is create a dictionary out of it.  The domain.com should be paired with the number right listed behind it.  </p>  <p>This is the data:</p>  <pre><code>[     'cb131.domain1.com', '147827',      'cb143.domain2.com', '147825',      'cb175.domain1.com', '147454',      'cb190.domain.com', '146210',      'cb201.domain.com', '146208',      'cb219.domain.com', '146042',      'cb225.domain.com', '146282',      'cb900.domain.com', '148461',      'cb901.domain.com', '148493',      'cb902.domain.com', '148495',      'cb903.domain.com', '148497',      'cb904.domain.com','148499',      'cb905.domain.com', '148501',      'cb906.domain.com', '148503',      'cb907.domain.com', '148505',      'cb908.domain.com', '148507',      'cb909.domain.com', '148509' ] </code></pre>  <p>So for example cb131.domain1.com should be paired with 147827, cb143.domain2.com paired with 147825 and so on.</p>  <p>Drawing a blank on a good quick solution on how to do this.  Hopefully someone can help.</p>  <p>Thanks!</p>  <p>Edited with answer I choose below:</p>  <p>I choose this answer and also to help anyone else I add a nice way to print out the results (data is the string I obtained):</p>  <pre><code>import ast i = iter(ast.literal_eval(data)) dic = dict(zip(i, i)) for key , value in dic.items():     print(key, "" :: "", value) </code></pre>"	54583340	"<p>You can create an iterator from the list after using <code>ast.literal_eval</code> to parse it from the input text, <code>zip</code> the iterator with itself, and pass the generated sequence of tuples to the dict constructor:</p>  <pre><code>import ast i = iter(ast.literal_eval(data)) dict(zip(i, i)) </code></pre>"
54642550	Crawl a web page and call javascript functions in Python	javascript|python|web-scraping|beautifulsoup|web-crawler	2019-02-12 03:53:03.533000 UTC	"<p>I need to crawl a website, however, its content is dynamic. Are there any packages in Python that could call js functions? For example, suppose I have a link and JS functions 1, 2, and 3 in JS that I should call on that webpage, and I need the final webpage after all JS function calls.</p>"	54642676	"<p>Executing client-side javascript can get very complicated, so the most reliable way to run all javascript on a page just like a user would would be to use a real browser in headless mode.  Specifically for Python, there is a Python+Selenium combo for working with headless Chrome.  If you are willing to trade Python for Nodejs, a more powerful toolset is Puppeteer+headless Chrome (it lets you do a lot more than Selenium). There is also an early unofficial port of Puppeteer to Python but I haven't tried it and can't comment on how stable it is <a href=""https://pypi.org/project/pyppeteer/"" rel=""nofollow noreferrer"">https://pypi.org/project/pyppeteer/</a></p>"
54685702	"How to make a python request, load javascript, fill in the form and click submit"	python|python-2.7	2019-02-14 08:06:53.243000 UTC	"<p>So there is a page with the following contents;</p>  <pre><code>&lt;input type=""text"" name=""input1""&gt; &lt;input type=""text"" name=""input2""&gt; &lt;button onclick=""dosomething()"" id=""check""&gt;Check&lt;/button&gt; </code></pre>  <p>This page gets loaded in with javascript, so you need to wait until it's fully loaded. After that the text files has to be filled in, and click the submit button. If it succeeds, it will set a cookie and redirect you. If it doesn't succeeds, it doesn't do anything.</p>  <p>How can I make this work in python? I couldn't really find a answer that would work for me. This python code will be runned in Windows.</p>"	54687005	<p>Most likely you could just send direct request with form's field. Based on form's method it'll be GET or POST request. Later you can catch and save coockies and head to redirected page.  If it doesn't work you could also try Selenium to emulate user's behaviour</p>
54688217	Why does running Javascript in Python + Seleniuim get an undefined error?	javascript|python|selenium	2019-02-14 10:28:22.203000 UTC	"<p>I'm trying to use Javascript to get a table body element on a page, if  I run it as soon as I can I get undefined, but if I wait a few seconds it works.</p>  <pre><code>def get_row_list(browser):     table_body = browser.execute_script(""""""         var tbody = document.getElementsByClassName(""sortable"")[0].children[1]         return tbody     """""")     while table_body == None:         browser.execute_script(""""""             var tbody = document.getElementsByClassName(""sortable"")[0].children[1]             return tbody         """""")     return table_body.find_elements_by_tag_name(""tr"") </code></pre>  <p>If I run this too early I get <code>Message: TypeError: document.getElementsByClassName(...)[0] is undefined</code></p>"	54688281	"<p>To get to why this is not working, the crucial component here is the error you recieve when it is too early.</p>  <p>Basically, the document has not loaded. This means that your DOM (Document Object Model) representation is not ready to be parsed yet.</p>  <p>Essentially what your code is going, is that the browser is executing the script before waiting for the document to be loaded. To get around this emit a signal when the DOM is ready.</p>"
54688217	Why does running Javascript in Python + Seleniuim get an undefined error?	javascript|python|selenium	2019-02-14 10:28:22.203000 UTC	"<p>I'm trying to use Javascript to get a table body element on a page, if  I run it as soon as I can I get undefined, but if I wait a few seconds it works.</p>  <pre><code>def get_row_list(browser):     table_body = browser.execute_script(""""""         var tbody = document.getElementsByClassName(""sortable"")[0].children[1]         return tbody     """""")     while table_body == None:         browser.execute_script(""""""             var tbody = document.getElementsByClassName(""sortable"")[0].children[1]             return tbody         """""")     return table_body.find_elements_by_tag_name(""tr"") </code></pre>  <p>If I run this too early I get <code>Message: TypeError: document.getElementsByClassName(...)[0] is undefined</code></p>"	54688352	"<p>The element <code>sortable</code> is not rendered yet...</p>  <p>Ues <a href=""https://selenium-python.readthedocs.io/waits.html"" rel=""nofollow noreferrer"">WebDriverWait</a> to wait for the element to load: </p>  <pre><code>from selenium.webdriver.common.by import By from selenium.webdriver.support.ui import WebDriverWait from selenium.webdriver.support import expected_conditions as EC  WebDriverWait(driver, 10).until(         EC.presence_of_all_elements_located((By.CLASS_NAME, ""sortable"")) </code></pre>  <p>Hope this helps you!</p>"
54688217	Why does running Javascript in Python + Seleniuim get an undefined error?	javascript|python|selenium	2019-02-14 10:28:22.203000 UTC	"<p>I'm trying to use Javascript to get a table body element on a page, if  I run it as soon as I can I get undefined, but if I wait a few seconds it works.</p>  <pre><code>def get_row_list(browser):     table_body = browser.execute_script(""""""         var tbody = document.getElementsByClassName(""sortable"")[0].children[1]         return tbody     """""")     while table_body == None:         browser.execute_script(""""""             var tbody = document.getElementsByClassName(""sortable"")[0].children[1]             return tbody         """""")     return table_body.find_elements_by_tag_name(""tr"") </code></pre>  <p>If I run this too early I get <code>Message: TypeError: document.getElementsByClassName(...)[0] is undefined</code></p>"	54688375	"<p>I don't know if this works while working with JS in Python, but this sure helps while executing JS only. </p>  <p>Try:</p>  <pre><code>table_body = browser.execute_script(""""""     document.onload = function() {       document.getElementsByClassName(""sortable"")[0].children[1];       return tbody;     } """""") </code></pre>  <p>This should wait till your DOM is loaded and then looks for the element required</p>"
54701959	Sort dynamically rendered table from Python/Flask in HTML using JavaScript	javascript|python-3.x|html|flask|jinja2	2019-02-15 02:40:03.427000 UTC	"<p>This is my first time building a web app and I wanted to start from scratch to learn the basics. So I had a Python script that I wanted to practice with that printed tables of data on the terminal and decided to use Flask, HTML, CSS, JS to display that table on a web page. I got that working so far.</p>  <p><strong>Now, I want to sort that table by clicking on the table headers.</strong></p>  <p>This is the overall breakdown of my code and what I got up to so far:</p>  <p><strong>Python script</strong></p>  <pre><code>from flask import Flask, render_template, request, url_for app = Flask(__name__)  def get_table(): ... return dict    //returns list of dictionaries, for example...                 //dict = [{'name':'Joe','age':'25'},                //        {'name':'Mike','age':'20'},                 //        {'name':'Chris','age':'29'}]     @app.route(""/"") def home():     return render_template('home.html')   @app.route(""/table"", methods = ['POST','GET']) def table():     if request.method == 'GET':       //When button pressed on homepage         dict_table = get_table()      //return list of dictionaries of names and ages         return render_template('table.html', dict_table=dict_table)  if __name__ == '__main__':     app.run(debug=True) </code></pre>  <p><strong>HTML file table.html</strong></p>  <pre><code>&lt;!DOCTYPE html&gt; &lt;html&gt; &lt;head&gt;     &lt;title&gt;Display Table&lt;/title&gt;     &lt;script type=""text/javascript"" src=""/scripts/app.js""&gt;&lt;/script&gt; &lt;/head&gt; &lt;body&gt;         &lt;table id=""table""&gt;         {% if dict_table %}         &lt;tr&gt;             {% for key in dict_table[0] %}                 &lt;th onclick=""sortTable(1)"" style=""cursor:crosshair""&gt;{{ key }}&lt;/th&gt;             {% endfor %}         &lt;/tr&gt;         {% endif %}          {% for dict in dict_table %}         &lt;tr&gt;             {% for value in dict.values() %}                 &lt;td&gt;{{ value }}&lt;/td&gt;             {% endfor %}         &lt;/tr&gt;         {% endfor %}     &lt;/table&gt; &lt;/body&gt; &lt;/html&gt; </code></pre>  <p>So the table displays correctly on my web browser. I used the sort function they taught on the W3 schools website in my app.js script.</p>  <p><strong>app.js</strong></p>  <pre><code>function sortTable(n) {   var table, rows, switching, i, x, y, shouldSwitch, dir, switchcount = 0;   table = document.getElementById(""myTable"");   switching = true;   //Set the sorting direction to ascending:   dir = ""asc"";    /*Make a loop that will continue until   no switching has been done:*/   while (switching) {     //start by saying: no switching is done:     switching = false;     rows = table.rows;     /*Loop through all table rows (except the     first, which contains table headers):*/     for (i = 1; i &lt; (rows.length - 1); i++) {       //start by saying there should be no switching:       shouldSwitch = false;       /*Get the two elements you want to compare,       one from current row and one from the next:*/       x = rows[i].getElementsByTagName(""TD"")[n];       y = rows[i + 1].getElementsByTagName(""TD"")[n];       /*check if the two rows should switch place,       based on the direction, asc or desc:*/       if (dir == ""asc"") {         if (x.innerHTML.toLowerCase() &gt; y.innerHTML.toLowerCase()) {           //if so, mark as a switch and break the loop:           shouldSwitch= true;           break;         }       } else if (dir == ""desc"") {         if (x.innerHTML.toLowerCase() &lt; y.innerHTML.toLowerCase()) {           //if so, mark as a switch and break the loop:           shouldSwitch = true;           break;         }       }     }     if (shouldSwitch) {       /*If a switch has been marked, make the switch       and mark that a switch has been done:*/       rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);       switching = true;       //Each time a switch is done, increase this count by 1:       switchcount ++;           } else {       /*If no switching has been done AND the direction is ""asc"",       set the direction to ""desc"" and run the while loop again.*/       if (switchcount == 0 &amp;&amp; dir == ""asc"") {         dir = ""desc"";         switching = true;       }     }   } } </code></pre>  <p>This is the example I got from <a href=""https://www.w3schools.com/howto/howto_js_sort_table.asp"" rel=""nofollow noreferrer"">https://www.w3schools.com/howto/howto_js_sort_table.asp</a></p>  <p><strong>These are my issues so far</strong></p>  <ol> <li>When I call that function sortTable, in the example they feed in the parameters 0 and 1 for sortTable(n) because their table is not dynamically rendered like mine. How do I handle this situation if im trying to use that function to sort my table since my table is dynamically created? I'm referring to the line <em></em> in my HTML file. I can't find sources where they teach how to handle this scenario and I would like to learn.</li> <li>If I feed it a parameter 1, when I click on my table header, nothing happens. Can someone guide me towards where my mistake is and how I can fix it? I'm thinking it's because the table gets created in the loop after the headers are created so it has nothing to iterate over. </li> </ol>  <p>I would like it if someone could guide me through this. I'm also open to hearing if there are better ways for me to do this as well, as long as it's not overly complicated and involve installing external applications like some solutions I've seen to similar problems like this (since i'm just a beginner and trying to learn). Thanks!</p>"	54702888	"<p>Paremeter <code>n</code> in the <code>sortTable</code> function is the number of the row. And when you render header of your table, you always pass 1. To fix it you can try</p>  <pre><code>{% for key in dict_table[0] %}   &lt;th onclick=""sortTable({{ loop.index0 }})"" style=""cursor:crosshair""&gt;{{ key }}&lt;/th&gt; {% endfor %} </code></pre>  <p>That should do the trick.</p>  <p>For further information visit this <a href=""http://jinja.pocoo.org/docs/2.10/tricks/"" rel=""nofollow noreferrer"">jinja tricks page</a> and the full <a href=""http://jinja.pocoo.org/docs/2.10/"" rel=""nofollow noreferrer"">jinja documentation</a>.</p>  <p><strong>UPD</strong> Also there is a list of <a href=""http://jinja.pocoo.org/docs/2.10/templates/#list-of-control-structures"" rel=""nofollow noreferrer"">control structures</a>.</p>"
54710198	Getting out difficult english words from text for vocabulary building using python or javascript	javascript|python|text	2019-02-15 13:17:03.430000 UTC	"<p>I want to get difficult words out of english text online like from gutenberg for vocabulary building using python or javascript . I don't wont to get simple words but unique vocabulary like regal , apocryphal ..etc.</p>  <p>How to ensure when I split text that I only get unique vocabulary not simple words.</p>"	54712299	"<p>As @Hoog suggested, here is the pseudocode:</p>  <pre><code>simple_words = [...] difficult_words = [word for word in english_vocabulary if word not in simple_words] </code></pre>"
54710198	Getting out difficult english words from text for vocabulary building using python or javascript	javascript|python|text	2019-02-15 13:17:03.430000 UTC	"<p>I want to get difficult words out of english text online like from gutenberg for vocabulary building using python or javascript . I don't wont to get simple words but unique vocabulary like regal , apocryphal ..etc.</p>  <p>How to ensure when I split text that I only get unique vocabulary not simple words.</p>"	54712437	"<p>You can also use <a href=""https://docs.python.org/2/tutorial/datastructures.html"" rel=""nofollow noreferrer"">pop()</a> to remove from english dictionary the most difficult words list.</p>"
54710198	Getting out difficult english words from text for vocabulary building using python or javascript	javascript|python|text	2019-02-15 13:17:03.430000 UTC	"<p>I want to get difficult words out of english text online like from gutenberg for vocabulary building using python or javascript . I don't wont to get simple words but unique vocabulary like regal , apocryphal ..etc.</p>  <p>How to ensure when I split text that I only get unique vocabulary not simple words.</p>"	54712705	"<p>I defined a ""non common word"" as a word that does not appear in the first 10000 most common English words.</p>  <p>The 10 k most common words is an arbitrary boundary, but as is stated in <a href=""https://github.com/first20hours/google-10000-english"" rel=""nofollow noreferrer"">the github repo</a>: </p>  <blockquote>   <p>According to analysis of the Oxford English Corpus, the 7,000 most common English lemmas account for approximately 90% of usage, so a 10,000 word training corpus is more than sufficient for practical training applications.</p> </blockquote>  <pre><code>import requests  english_most_common_10k = 'https://raw.githubusercontent.com/first20hours/google-10000-english/master/google-10000-english-usa-no-swears.txt'  # Get the file of 10 k most common words from TXT file in a github repo response = requests.get(english_most_common_10k) data = response.text  set_of_common_words = {x for x in data.split('\n')}  # Once we have the set of common words, we can just check. # The check is in average case O(1) operation, # but you can use for example some sort of search three with O(log(n)) complexity while True:     word = input()     if word in set_of_common_words:         print(f'The word ""{word}"" is common')     else:         print(f'The word ""{word}"" is difficult') </code></pre>"
54719325	How to run a python script from javascript?	javascript|python|json|discord.js	2019-02-16 02:33:55.137000 UTC	"<p>So I'm making a javascript discord bot, if's that's relevant at all.</p>  <p>I made a python script that scrapes one website and return a json object.</p>  <p>How can I make a javascript function that runs the python script, and stores the json object, in order for me to access it's content?</p>  <p>Thanks in advance..</p>"	54719675	"<p>You might consider looking at Node.js's <a href=""https://nodejs.org/api/child_process.html"" rel=""nofollow noreferrer"">Child Process API</a> to spawn and control a Python process. Here's a modified code snippet from the documentation that executes a Python script, collects its output on standard out while it runs, and parses its output as JSON when the script exits.</p>  <pre><code>const { spawn } = require('child_process'); const script = spawn('python', ['/path/to/script.py']); const chunks = [];  // there is a data chunk from the script available to read script.stdout.on('data', (data) =&gt; {     chunks.push(data) });  // no more data left to read, parse our JSON object script.stdout.on('end', () =&gt; {     let output_buf = Buffer.concat(chunks);     let object = JSON.parse(output_buf.toString());     ... });  </code></pre>"
54761382	Hash sha1 in Python and JavaScript	javascript|python|hash|sha1	2019-02-19 08:05:43.990000 UTC	"<p>I have done a script in Python which is: </p>  <pre><code>hashed_string = hashlib.sha1(str(string_to_hash).encode('utf-8')).hexdigest() </code></pre>  <p>and it works as I want, but I can't figure out how to do it in JavaScript. I have done this in JS:</p>  <pre><code>const crypto = require('crypto')  let shasum = crypto.createHash('sha1')  let hashed_string = shasum.update(JSON.stringify(string_to_hash).digest('hex')) </code></pre>  <p>But the result is not the same.</p>"	54762339	"<p>You are calling <a href=""http://nodejs.org/api/crypto.html#crypto_hash_digest_encoding"" rel=""nofollow noreferrer"">hash.digest()</a> inside <a href=""http://nodejs.org/api/crypto.html#crypto_hash_update_data_input_encoding"" rel=""nofollow noreferrer"">hash.update()</a>, but <code>digest()</code> needs to be called after <code>update()</code></p>  <p>e.g.</p>  <pre><code>const crypto = require('crypto')  let shasum = crypto.createHash('sha1') shasum.update(JSON.stringify(string_to_hash))  let hashed_string = shasum.digest('hex')) </code></pre>  <p>or</p>  <pre><code>const crypto = require('crypto')  let shasum = crypto.createHash('sha1') let hashed_string = shasum.update(JSON.stringify(string_to_hash)).digest('hex')) </code></pre>  <p>or</p>  <pre><code>const crypto = require('crypto')  let hashed_string = crypto.createHash('sha1').update(JSON.stringify(string_to_hash)).digest('hex')) </code></pre>  <p>Provided you are using the exact same string in Python that the <code>JSON.stringify()</code> method returns you will get the same result. Any additional characters will affect the result.</p>  <p>For example, here are the generated <code>SHA1</code> hashes for some similar strings.</p>  <pre><code>#1: {a:1,b:2}          // ca681fb779d3b6f82af9b243c480ce4fb07e7af4 #2: {a:1, b:2}         // 6327727c37c8d1893d9e341453dd1b8c7e72ffe8 #3: {""a"":1,""b"":2}      // 4acc71e0547112eb432f0a36fb1924c4a738cb49 #4: {""a"":1, ""b"":2}     // 98e0e65ec27728cd01356be19e354d92fb2f4b46 #5: {""a"":""1"", ""b"":""2""} // a89dd0ae872ef448a6ddafc23b0752b799fe0de1 </code></pre>  <p>Javascript:</p>  <pre><code>d = {a:1, b:2}  // Simple object JSON.stringify(d) // {""a"":1,""b"":2} : #3 Above </code></pre>  <p>Python:</p>  <pre><code>d = {""a"":1, ""b"":2} str(d) ""{'a': 1, 'b': 2}"" </code></pre>  <p>The string created in Python uses single quotes and is formatted with additional space characters so the resulting hash will not be the same.</p>  <pre><code>#6: {'a': 1, 'b': 2} // 326a92518b2b2bd864ff2d88eab7c12ca44d3fd3 </code></pre>"
54768576	Python Bokeh CustomJS: Debugging a JavaScript callback for the Taping-Tool	javascript|python-3.x|debugging|callback|bokeh	2019-02-19 14:29:20.903000 UTC	"<p>I am working with <code>Python 3.6.2</code> and <code>Bokeh 1.0.4</code> to create a custom JavaScript callback in my plot.</p>  <p>By tapping on one of the points in the plot, I'd like all points sharing the same attribute in the id-column to be highlighted.</p>  <p>Iterating over all datapoints with JavaScript and manipulating the respective 'selected'-attribute in the ColumnDataSource-object should do the trick.  Unfortunately I can not figure out how to correct this code.</p>  <pre><code># Import packages from bokeh.plotting import figure, show from bokeh.models import ColumnDataSource, CustomJS, HoverTool, TapTool   # Create the data for the points x = [0, 1, 2, 3] y = [0, 1, 0, 1] ids = ['A','B','A','B']  data = {'x':x, 'y':y, 'id':ids} source = ColumnDataSource(data)   # Add tools to the plot tap = TapTool() hover = HoverTool(tooltips=[(""X"", ""@x""),                             (""Y"", ""@y""),                             (""ID"", ""@id"")])   # Create a plotting figure p = figure(plot_width=400, plot_height=400, tools=[tap,hover])   # Code for the callback code = """""" // Set column name to select similar glyphs var column = 'id';  // Get data from ColumnDataSource var data = source.data;  // Get indices array of all selected items var selected = source.selected.indices;  // Array to store glyph-indices to highlight var select_inds = [];   // Check if only a single glyph is selected if(selected.length==1){      // Get the value of the column to find similar attributes/glyphs     attribute_value = data[column][selected[0]];      // Iterate over all entries in the ColumnDataSource     for (var i=0; i&lt;data[column].length; ++i){          // Check if items have the same attribute         if(data[column][i]==attribute_value){              // Add index to selected list             select_inds.push(i);             }         }     }  // Set selected glyphs in ColumnDataSource source.selected.indices = select_inds;  // Save changes to ColumnDataSource source.change.emit(); """"""   # Create a CustomJS callback with the code and the data callback = CustomJS(args={'source':source}, code=code)  # Add the callback to the ColumnDataSource source.callback=callback   # Plots circles p.circle('x', 'y', source=source, size=25, color='blue', alpha=1, hover_color='black', hover_alpha=1)  # Show plot show(p) </code></pre>  <p>An <a href=""https://stackoverflow.com/questions/44961192/how-to-create-a-bokeh-tap-tool-to-select-all-points-of-the-columndatasource-shar?rq=1"">older version</a> of this problem with <code>Bokeh 0.13.0</code> could not solve my problem. </p>"	54781317	"<p>You were almost there! The callback has to be added to the <code>TapTool</code> instead of the <code>ColumnDataSource</code>.</p> <pre><code># Import packages from bokeh.plotting import figure, show from bokeh.models import ColumnDataSource, CustomJS, HoverTool, TapTool   # Create the data for the points x = [0, 1, 2, 3] y = [0, 1, 0, 1] ids = ['A','B','A','B']  # Generate data source for the visualization data = {'x':x, 'y':y, 'id':ids} source = ColumnDataSource(data)   # Add tools to the plot tap = TapTool() hover = HoverTool(tooltips=[(&quot;X&quot;, &quot;@x&quot;),                             (&quot;Y&quot;, &quot;@y&quot;),                             (&quot;ID&quot;, &quot;@id&quot;)])   # Create a plotting figure p = figure(plot_width=400, plot_height=400, tools=[tap,hover])   # Code for the callback code = &quot;&quot;&quot; // Set column name to select similar glyphs var column = 'id';  // Get data from ColumnDataSource var data = source.data;  // Get indices array of all selected items var selected = source.selected.indices;  // Array to store glyph-indices to highlight var select_inds = [];  // Check if only a single glyph is selected if(selected.length==1){      // Get the value of the column to find similar attributes/glyphs     var attribute_value = data[column][selected[0]];      // Iterate over all entries in the ColumnDataSource     for (var i=0; i&lt;data[column].length; ++i){          // Check if items have the same attribute         if(data[column][i]==attribute_value){              // Add index to selected list             select_inds.push(i);             }         }     }  // Set selected glyphs in ColumnDataSource source.selected.indices = select_inds;  // Save changes to ColumnDataSource source.change.emit(); &quot;&quot;&quot;   # Create a CustomJS callback with the code and the data callback = CustomJS(args={'source':source}, code=code)  # Add the callback to the taptool tap.callback=callback   # Plots circles p.circle('x', 'y', source=source, size=25, color='blue', alpha=1, hover_color='black', hover_alpha=1)  # Show plot show(p) </code></pre>"
54779550	Trying to pass javascript arrays to Python Flask	javascript|python|html|flask	2019-02-20 05:43:53.197000 UTC	"<p>I am trying to pass some javascript arrays to Flask to set my templates page but all I get in the out put page is ""In the Host text box, you entered: None"" message, here is my code:</p>  <pre><code>&lt;!DOCTYPE html PUBLIC ""-//W3C//DTD HTML 4.01 Transitional//EN"" ""http://www.w3.org/TR/html4/loose.dtd""&gt; &lt;html&gt;     &lt;head&gt;         &lt;meta http-equiv=""Content-Type"" content=""text/html; charset=ISO-8859-1""&gt;         &lt;script src=""static/script.js""&gt;&lt;/script&gt;         &lt;title&gt;Comms Checker&lt;/title&gt;         &lt;/head&gt;         &lt;body&gt;     &lt;form name=""ResultPage"" action = ""passFails.html"" onsubmit=""return validateTestPage()"" method=""post""&gt;          Number of Hosts/Ports:&lt;br&gt;&lt;input type=""text"" id=""Number""&gt;&lt;br/&gt;&lt;br/&gt;         &lt;a href=""#"" id=""filldetails"" onclick=""addFields()""&gt;Enter Comms Details&lt;/a&gt;         &lt;div id=""container""/&gt;     &lt;/form&gt;     &lt;/body&gt; &lt;/html&gt; </code></pre>  <p>the code above calls the javascript function below:</p>  <pre><code>function addFields(){             // Number of inputs to create             var number = document.getElementById(""Number"").value;              // Container &lt;div&gt; where dynamic content will be placed             var container = document.getElementById(""container"");              // Clear previous contents of the container             while (container.hasChildNodes()) {                 container.removeChild(container.lastChild);             }              for (var i=1;i&lt;=number;i++){                 container.appendChild(document.createTextNode(""Host: "" + i));                 var host = document.createElement(""input"");                 host.type = ""text"";                 host.id = ""Host "" + i;                 container.appendChild(host);                  container.appendChild(document.createTextNode(""Port: "" + i));                 var port = document.createElement(""input"");                 port.type = ""text"";                 port.id = ""Port "" + i;                 container.appendChild(port);                  // Append a line break                 container.appendChild(document.createElement(""br""));                 container.appendChild(document.createElement(""br"")); }     var button = document.createElement(""input"");     button.setAttribute(""type"", ""button"");     button.setAttribute('value', 'Check');     button.setAttribute('onclick', 'checkVal()');     container.appendChild(button);      return true; }    function checkVal() {     var myHost=[];     var myPort=[]; // Number of inputs to create     var number = document.getElementById(""Number"").value;      for (var i = 1; i &lt;= number; i++) {          //pass myHost and myPort to first.py for further processing.           myHost.push(document.getElementById('Host ' + i).value);          myPort.push(document.getElementById('Port ' + i).value);          /*alert(""Value of Host: "" + i + "" is: "" + myHost[i]);         alert(""Value of Port: "" + i + "" is: "" + myPort[i]);*/     }      for (var i=0; i&lt;number; i++){          alert(""Value of Host: "" + i + "" is: "" + myHost[i]);         alert(""Value of Port: "" + i + "" is: "" + myPort[i]);     }      $.get(         url=""/passFails"",         data={host: myHost},         success = function (data) {             alert('page content: ' + data);         }     ); return true } </code></pre>  <p>the javascript code should pass the array/list ""myHost"" to Python, but for some reason it fails to do so with no error messages. the python script is as follows</p>  <pre><code>from flask import Flask, render_template, request import json import jsonify  app = Flask(__name__)   @app.route('/Results') def Results():      return render_template('Results.html')   @app.route('/passFails') def passFails():     data = request.args.get('host')     print(""The Value in passFails is :%s "" % data)     return render_template('/passFails.html', Value=data)   if __name__=='__main__':     app.run(debug=True) </code></pre>  <p>and finally, the above python script should pass the data to the last HTML page passFails.html where all the values in the array/list gets printed. the passFails page is as follows</p>  <pre><code>&lt;!DOCTYPE html&gt; &lt;html lang=""en""&gt; &lt;head&gt;     &lt;meta charset=""UTF-8""&gt;     &lt;title&gt;Title&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;h1&gt;In the Host text box, you entered: {{Value}}&lt;/h1&gt;  &lt;/body&gt; &lt;/html&gt; </code></pre>  <p>I just want to know why the code in javascript part is not able to pass the list to python OR if there is anything wrong in the Python script which is causing problem in receiving the array? Any Help will be greatly appreciated.</p>"	54783678	"<p>If you add a debug printing as a first line in a <code>passFails</code>, you'd see something like that:</p>  <pre><code>def passFails():     print(request.args)     # Out: ImmutableMultiDict([('host[]', '1'), ('host[]', '2'), ('host[]', '3')]) </code></pre>  <p>As you've said, you've <em>trying to pass some javascript arrays</em>, so your requests looks something like:</p>  <pre><code>$.get(     url=""/passFails"",     data={host: [1,2,3]},     success = function (data) {         alert('page content: ' + data);     } ); </code></pre>  <p>And it'll be converted (what you can and totally <em>should</em> see in your browser debug console) to a request-url like:</p>  <pre><code>http://localhost/passFails?host[]=1&amp;host[]=2&amp;host[]=3 </code></pre>  <p>So, your value couldn't be found at a <code>host</code> key. To make it work you could use <a href=""http://werkzeug.pocoo.org/docs/0.14/datastructures/#werkzeug.datastructures.MultiDict.getlist"" rel=""nofollow noreferrer""><code>request.args.getlist('host[]')</code></a>. Another option is to serialize the <code>myHost</code> value from array to a JSON string before sending a request, so you'd be able to access value as <code>request.args.get['host']</code>, but you'll have to deserialize it from a JSON representation in Flask.</p>"
54779550	Trying to pass javascript arrays to Python Flask	javascript|python|html|flask	2019-02-20 05:43:53.197000 UTC	"<p>I am trying to pass some javascript arrays to Flask to set my templates page but all I get in the out put page is ""In the Host text box, you entered: None"" message, here is my code:</p>  <pre><code>&lt;!DOCTYPE html PUBLIC ""-//W3C//DTD HTML 4.01 Transitional//EN"" ""http://www.w3.org/TR/html4/loose.dtd""&gt; &lt;html&gt;     &lt;head&gt;         &lt;meta http-equiv=""Content-Type"" content=""text/html; charset=ISO-8859-1""&gt;         &lt;script src=""static/script.js""&gt;&lt;/script&gt;         &lt;title&gt;Comms Checker&lt;/title&gt;         &lt;/head&gt;         &lt;body&gt;     &lt;form name=""ResultPage"" action = ""passFails.html"" onsubmit=""return validateTestPage()"" method=""post""&gt;          Number of Hosts/Ports:&lt;br&gt;&lt;input type=""text"" id=""Number""&gt;&lt;br/&gt;&lt;br/&gt;         &lt;a href=""#"" id=""filldetails"" onclick=""addFields()""&gt;Enter Comms Details&lt;/a&gt;         &lt;div id=""container""/&gt;     &lt;/form&gt;     &lt;/body&gt; &lt;/html&gt; </code></pre>  <p>the code above calls the javascript function below:</p>  <pre><code>function addFields(){             // Number of inputs to create             var number = document.getElementById(""Number"").value;              // Container &lt;div&gt; where dynamic content will be placed             var container = document.getElementById(""container"");              // Clear previous contents of the container             while (container.hasChildNodes()) {                 container.removeChild(container.lastChild);             }              for (var i=1;i&lt;=number;i++){                 container.appendChild(document.createTextNode(""Host: "" + i));                 var host = document.createElement(""input"");                 host.type = ""text"";                 host.id = ""Host "" + i;                 container.appendChild(host);                  container.appendChild(document.createTextNode(""Port: "" + i));                 var port = document.createElement(""input"");                 port.type = ""text"";                 port.id = ""Port "" + i;                 container.appendChild(port);                  // Append a line break                 container.appendChild(document.createElement(""br""));                 container.appendChild(document.createElement(""br"")); }     var button = document.createElement(""input"");     button.setAttribute(""type"", ""button"");     button.setAttribute('value', 'Check');     button.setAttribute('onclick', 'checkVal()');     container.appendChild(button);      return true; }    function checkVal() {     var myHost=[];     var myPort=[]; // Number of inputs to create     var number = document.getElementById(""Number"").value;      for (var i = 1; i &lt;= number; i++) {          //pass myHost and myPort to first.py for further processing.           myHost.push(document.getElementById('Host ' + i).value);          myPort.push(document.getElementById('Port ' + i).value);          /*alert(""Value of Host: "" + i + "" is: "" + myHost[i]);         alert(""Value of Port: "" + i + "" is: "" + myPort[i]);*/     }      for (var i=0; i&lt;number; i++){          alert(""Value of Host: "" + i + "" is: "" + myHost[i]);         alert(""Value of Port: "" + i + "" is: "" + myPort[i]);     }      $.get(         url=""/passFails"",         data={host: myHost},         success = function (data) {             alert('page content: ' + data);         }     ); return true } </code></pre>  <p>the javascript code should pass the array/list ""myHost"" to Python, but for some reason it fails to do so with no error messages. the python script is as follows</p>  <pre><code>from flask import Flask, render_template, request import json import jsonify  app = Flask(__name__)   @app.route('/Results') def Results():      return render_template('Results.html')   @app.route('/passFails') def passFails():     data = request.args.get('host')     print(""The Value in passFails is :%s "" % data)     return render_template('/passFails.html', Value=data)   if __name__=='__main__':     app.run(debug=True) </code></pre>  <p>and finally, the above python script should pass the data to the last HTML page passFails.html where all the values in the array/list gets printed. the passFails page is as follows</p>  <pre><code>&lt;!DOCTYPE html&gt; &lt;html lang=""en""&gt; &lt;head&gt;     &lt;meta charset=""UTF-8""&gt;     &lt;title&gt;Title&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;h1&gt;In the Host text box, you entered: {{Value}}&lt;/h1&gt;  &lt;/body&gt; &lt;/html&gt; </code></pre>  <p>I just want to know why the code in javascript part is not able to pass the list to python OR if there is anything wrong in the Python script which is causing problem in receiving the array? Any Help will be greatly appreciated.</p>"	54783919	"<p>In python file, you need to add methods = ['POST'], so your app route should be:<code>@app.route('/passFails', methods = ['POST'])</code>, and then you can check <code> if request.method == 'POST':    #write you code </code></p>"
54779550	Trying to pass javascript arrays to Python Flask	javascript|python|html|flask	2019-02-20 05:43:53.197000 UTC	"<p>I am trying to pass some javascript arrays to Flask to set my templates page but all I get in the out put page is ""In the Host text box, you entered: None"" message, here is my code:</p>  <pre><code>&lt;!DOCTYPE html PUBLIC ""-//W3C//DTD HTML 4.01 Transitional//EN"" ""http://www.w3.org/TR/html4/loose.dtd""&gt; &lt;html&gt;     &lt;head&gt;         &lt;meta http-equiv=""Content-Type"" content=""text/html; charset=ISO-8859-1""&gt;         &lt;script src=""static/script.js""&gt;&lt;/script&gt;         &lt;title&gt;Comms Checker&lt;/title&gt;         &lt;/head&gt;         &lt;body&gt;     &lt;form name=""ResultPage"" action = ""passFails.html"" onsubmit=""return validateTestPage()"" method=""post""&gt;          Number of Hosts/Ports:&lt;br&gt;&lt;input type=""text"" id=""Number""&gt;&lt;br/&gt;&lt;br/&gt;         &lt;a href=""#"" id=""filldetails"" onclick=""addFields()""&gt;Enter Comms Details&lt;/a&gt;         &lt;div id=""container""/&gt;     &lt;/form&gt;     &lt;/body&gt; &lt;/html&gt; </code></pre>  <p>the code above calls the javascript function below:</p>  <pre><code>function addFields(){             // Number of inputs to create             var number = document.getElementById(""Number"").value;              // Container &lt;div&gt; where dynamic content will be placed             var container = document.getElementById(""container"");              // Clear previous contents of the container             while (container.hasChildNodes()) {                 container.removeChild(container.lastChild);             }              for (var i=1;i&lt;=number;i++){                 container.appendChild(document.createTextNode(""Host: "" + i));                 var host = document.createElement(""input"");                 host.type = ""text"";                 host.id = ""Host "" + i;                 container.appendChild(host);                  container.appendChild(document.createTextNode(""Port: "" + i));                 var port = document.createElement(""input"");                 port.type = ""text"";                 port.id = ""Port "" + i;                 container.appendChild(port);                  // Append a line break                 container.appendChild(document.createElement(""br""));                 container.appendChild(document.createElement(""br"")); }     var button = document.createElement(""input"");     button.setAttribute(""type"", ""button"");     button.setAttribute('value', 'Check');     button.setAttribute('onclick', 'checkVal()');     container.appendChild(button);      return true; }    function checkVal() {     var myHost=[];     var myPort=[]; // Number of inputs to create     var number = document.getElementById(""Number"").value;      for (var i = 1; i &lt;= number; i++) {          //pass myHost and myPort to first.py for further processing.           myHost.push(document.getElementById('Host ' + i).value);          myPort.push(document.getElementById('Port ' + i).value);          /*alert(""Value of Host: "" + i + "" is: "" + myHost[i]);         alert(""Value of Port: "" + i + "" is: "" + myPort[i]);*/     }      for (var i=0; i&lt;number; i++){          alert(""Value of Host: "" + i + "" is: "" + myHost[i]);         alert(""Value of Port: "" + i + "" is: "" + myPort[i]);     }      $.get(         url=""/passFails"",         data={host: myHost},         success = function (data) {             alert('page content: ' + data);         }     ); return true } </code></pre>  <p>the javascript code should pass the array/list ""myHost"" to Python, but for some reason it fails to do so with no error messages. the python script is as follows</p>  <pre><code>from flask import Flask, render_template, request import json import jsonify  app = Flask(__name__)   @app.route('/Results') def Results():      return render_template('Results.html')   @app.route('/passFails') def passFails():     data = request.args.get('host')     print(""The Value in passFails is :%s "" % data)     return render_template('/passFails.html', Value=data)   if __name__=='__main__':     app.run(debug=True) </code></pre>  <p>and finally, the above python script should pass the data to the last HTML page passFails.html where all the values in the array/list gets printed. the passFails page is as follows</p>  <pre><code>&lt;!DOCTYPE html&gt; &lt;html lang=""en""&gt; &lt;head&gt;     &lt;meta charset=""UTF-8""&gt;     &lt;title&gt;Title&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;h1&gt;In the Host text box, you entered: {{Value}}&lt;/h1&gt;  &lt;/body&gt; &lt;/html&gt; </code></pre>  <p>I just want to know why the code in javascript part is not able to pass the list to python OR if there is anything wrong in the Python script which is causing problem in receiving the array? Any Help will be greatly appreciated.</p>"	54786968	"<p>Change <code>.get</code> to <code>.getlist</code></p> <p><code>request.args.getlist('host')</code></p> <p><a href=""https://programtalk.com/python-examples/flask.request.args.getlist/"" rel=""nofollow noreferrer"">examples</a></p> <p>Peace</p>"
54779550	Trying to pass javascript arrays to Python Flask	javascript|python|html|flask	2019-02-20 05:43:53.197000 UTC	"<p>I am trying to pass some javascript arrays to Flask to set my templates page but all I get in the out put page is ""In the Host text box, you entered: None"" message, here is my code:</p>  <pre><code>&lt;!DOCTYPE html PUBLIC ""-//W3C//DTD HTML 4.01 Transitional//EN"" ""http://www.w3.org/TR/html4/loose.dtd""&gt; &lt;html&gt;     &lt;head&gt;         &lt;meta http-equiv=""Content-Type"" content=""text/html; charset=ISO-8859-1""&gt;         &lt;script src=""static/script.js""&gt;&lt;/script&gt;         &lt;title&gt;Comms Checker&lt;/title&gt;         &lt;/head&gt;         &lt;body&gt;     &lt;form name=""ResultPage"" action = ""passFails.html"" onsubmit=""return validateTestPage()"" method=""post""&gt;          Number of Hosts/Ports:&lt;br&gt;&lt;input type=""text"" id=""Number""&gt;&lt;br/&gt;&lt;br/&gt;         &lt;a href=""#"" id=""filldetails"" onclick=""addFields()""&gt;Enter Comms Details&lt;/a&gt;         &lt;div id=""container""/&gt;     &lt;/form&gt;     &lt;/body&gt; &lt;/html&gt; </code></pre>  <p>the code above calls the javascript function below:</p>  <pre><code>function addFields(){             // Number of inputs to create             var number = document.getElementById(""Number"").value;              // Container &lt;div&gt; where dynamic content will be placed             var container = document.getElementById(""container"");              // Clear previous contents of the container             while (container.hasChildNodes()) {                 container.removeChild(container.lastChild);             }              for (var i=1;i&lt;=number;i++){                 container.appendChild(document.createTextNode(""Host: "" + i));                 var host = document.createElement(""input"");                 host.type = ""text"";                 host.id = ""Host "" + i;                 container.appendChild(host);                  container.appendChild(document.createTextNode(""Port: "" + i));                 var port = document.createElement(""input"");                 port.type = ""text"";                 port.id = ""Port "" + i;                 container.appendChild(port);                  // Append a line break                 container.appendChild(document.createElement(""br""));                 container.appendChild(document.createElement(""br"")); }     var button = document.createElement(""input"");     button.setAttribute(""type"", ""button"");     button.setAttribute('value', 'Check');     button.setAttribute('onclick', 'checkVal()');     container.appendChild(button);      return true; }    function checkVal() {     var myHost=[];     var myPort=[]; // Number of inputs to create     var number = document.getElementById(""Number"").value;      for (var i = 1; i &lt;= number; i++) {          //pass myHost and myPort to first.py for further processing.           myHost.push(document.getElementById('Host ' + i).value);          myPort.push(document.getElementById('Port ' + i).value);          /*alert(""Value of Host: "" + i + "" is: "" + myHost[i]);         alert(""Value of Port: "" + i + "" is: "" + myPort[i]);*/     }      for (var i=0; i&lt;number; i++){          alert(""Value of Host: "" + i + "" is: "" + myHost[i]);         alert(""Value of Port: "" + i + "" is: "" + myPort[i]);     }      $.get(         url=""/passFails"",         data={host: myHost},         success = function (data) {             alert('page content: ' + data);         }     ); return true } </code></pre>  <p>the javascript code should pass the array/list ""myHost"" to Python, but for some reason it fails to do so with no error messages. the python script is as follows</p>  <pre><code>from flask import Flask, render_template, request import json import jsonify  app = Flask(__name__)   @app.route('/Results') def Results():      return render_template('Results.html')   @app.route('/passFails') def passFails():     data = request.args.get('host')     print(""The Value in passFails is :%s "" % data)     return render_template('/passFails.html', Value=data)   if __name__=='__main__':     app.run(debug=True) </code></pre>  <p>and finally, the above python script should pass the data to the last HTML page passFails.html where all the values in the array/list gets printed. the passFails page is as follows</p>  <pre><code>&lt;!DOCTYPE html&gt; &lt;html lang=""en""&gt; &lt;head&gt;     &lt;meta charset=""UTF-8""&gt;     &lt;title&gt;Title&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;h1&gt;In the Host text box, you entered: {{Value}}&lt;/h1&gt;  &lt;/body&gt; &lt;/html&gt; </code></pre>  <p>I just want to know why the code in javascript part is not able to pass the list to python OR if there is anything wrong in the Python script which is causing problem in receiving the array? Any Help will be greatly appreciated.</p>"	54840559	"<p>Finally, I found the answer, all I had to do was to include the following script tag in my HTML file for the javascript to to user the $.get() function to send data to python. that was the problem and it is successfully solved:</p>  <pre><code>&lt;script src=""http://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js""&gt;&lt;/script&gt; </code></pre>  <p>Thanks to all of you guys for sharing your responses.</p>"
54817969	How the scrapy on python3 can get text datas working on the javascript	python|web-scraping|scrapy|web-crawler	2019-02-21 23:45:26.800000 UTC	"<p><a href=""https://www.reddit.com/r/gameofthrones/"" rel=""nofollow noreferrer"">https://www.reddit.com/r/gameofthrones/</a></p>  <p><a href=""https://i.stack.imgur.com/l4c56.jpg"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/l4c56.jpg"" alt=""enter image description here""></a></p>  <p>In this page, I try to get a time info from some time text like '14 days ago'.</p>  <p>In the browser, when I move a mouse point to that text, it show the date-time based information. But if I view the web page source, I can't find it. So I think it work based on Javascript.</p>  <p>I am not web-developer, and I'm not sure how can I trace the problem.</p>  <p>My question is: how can I trace the data working based on the javascript using chrome dev-tools and scrapy shell?</p>"	54819733	"<pre class=""lang-sh prettyprint-override""><code>$ scrapy shell https://www.reddit.com/r/gameofthrones/  </code></pre>  <p>...</p>  <pre class=""lang-py prettyprint-override""><code>&gt;&gt;&gt; response.css('[data-click-id=""timestamp""]::text').get() '15 days ago' </code></pre>"
54817969	How the scrapy on python3 can get text datas working on the javascript	python|web-scraping|scrapy|web-crawler	2019-02-21 23:45:26.800000 UTC	"<p><a href=""https://www.reddit.com/r/gameofthrones/"" rel=""nofollow noreferrer"">https://www.reddit.com/r/gameofthrones/</a></p>  <p><a href=""https://i.stack.imgur.com/l4c56.jpg"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/l4c56.jpg"" alt=""enter image description here""></a></p>  <p>In this page, I try to get a time info from some time text like '14 days ago'.</p>  <p>In the browser, when I move a mouse point to that text, it show the date-time based information. But if I view the web page source, I can't find it. So I think it work based on Javascript.</p>  <p>I am not web-developer, and I'm not sure how can I trace the problem.</p>  <p>My question is: how can I trace the data working based on the javascript using chrome dev-tools and scrapy shell?</p>"	54821557	"<p>Reddit has an <a href=""https://www.reddit.com/dev/api/"" rel=""nofollow noreferrer"">official API</a>. When that is the case I would seriously consider using it instead of HTML scraping.</p>  <p>On the other hand, if you <em>really</em> want to do HTML scraping then I would suggest you use something like <a href=""https://github.com/scrapy-plugins/scrapy-splash"" rel=""nofollow noreferrer"">Scrapy Splash</a> to trigger that Javascript. Trying to find the raw data hidden away in Javascript objects probably isn't worth the effort. Especially if the Javascript does additional processing which you'll need to replicate because it won't run on plain Scrapy anyway.</p>"
54817969	How the scrapy on python3 can get text datas working on the javascript	python|web-scraping|scrapy|web-crawler	2019-02-21 23:45:26.800000 UTC	"<p><a href=""https://www.reddit.com/r/gameofthrones/"" rel=""nofollow noreferrer"">https://www.reddit.com/r/gameofthrones/</a></p>  <p><a href=""https://i.stack.imgur.com/l4c56.jpg"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/l4c56.jpg"" alt=""enter image description here""></a></p>  <p>In this page, I try to get a time info from some time text like '14 days ago'.</p>  <p>In the browser, when I move a mouse point to that text, it show the date-time based information. But if I view the web page source, I can't find it. So I think it work based on Javascript.</p>  <p>I am not web-developer, and I'm not sure how can I trace the problem.</p>  <p>My question is: how can I trace the data working based on the javascript using chrome dev-tools and scrapy shell?</p>"	54822239	"<p><a href=""https://i.stack.imgur.com/i4so1.jpg"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/i4so1.jpg"" alt=""enter image description here""></a></p>  <p>this picture result captured on the explorer.</p>"
54817969	How the scrapy on python3 can get text datas working on the javascript	python|web-scraping|scrapy|web-crawler	2019-02-21 23:45:26.800000 UTC	"<p><a href=""https://www.reddit.com/r/gameofthrones/"" rel=""nofollow noreferrer"">https://www.reddit.com/r/gameofthrones/</a></p>  <p><a href=""https://i.stack.imgur.com/l4c56.jpg"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/l4c56.jpg"" alt=""enter image description here""></a></p>  <p>In this page, I try to get a time info from some time text like '14 days ago'.</p>  <p>In the browser, when I move a mouse point to that text, it show the date-time based information. But if I view the web page source, I can't find it. So I think it work based on Javascript.</p>  <p>I am not web-developer, and I'm not sure how can I trace the problem.</p>  <p>My question is: how can I trace the data working based on the javascript using chrome dev-tools and scrapy shell?</p>"	54822366	"<p>You need to use Reddit's read-only (no participation) subdomain:</p>  <p><a href=""https://np.reddit.com/r/gameofthrones/"" rel=""nofollow noreferrer"">https://np.reddit.com/r/gameofthrones/</a></p>  <p>Note that it is <code>np</code> and not <code>www</code>. In this view you get the full date and time in the HTML in the <code>&lt;time&gt;</code> tag (in any browser) without running Javascript: <a href=""https://i.stack.imgur.com/Ss17h.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/Ss17h.png"" alt=""time tag""></a></p>  <p>Example:</p>  <pre><code>scrapy shell 'https://np.reddit.com/r/gameofthrones/'  &gt;&gt;&gt; response.css('time::attr(datetime)').get() '2010-03-02T22:52:12+00:00' </code></pre>"
54853461	How to scrape dynamic javascript content on a website in python?	javascript|python|web-scraping	2019-02-24 15:28:29.393000 UTC	"<p>I need to scrape this website in python (<a href=""https://www.winamax.fr/paris-sportifs/live"" rel=""nofollow noreferrer"">https://www.winamax.fr/paris-sportifs/live</a>) to get and save in a csv file the latest odds but it's a javascript dynamically updated content (AJAX? not so familiar with js...). I've tried with selenium and nothing worked.</p> <p>I've found the js script handling all the data at this adress (<a href=""https://static.winamax.fr/betting/client/1.31.1/12.main.js"" rel=""nofollow noreferrer"">https://static.winamax.fr/betting/client/1.31.1/12.main.js</a>) which uses the webpackJsonp module so I guess the data is in <em><strong>json</strong></em> format (correct me if I'm wrong, again I'm not very familiar with javascript).</p> <p>That displays all the infos but it's really messy and I can only read the titles (like &quot;events live&quot;, &quot;events to come&quot;, &quot;favorites&quot; etc) not the actual data from matchs, here is the raw version (a big one line code, that's why it more digestable to read with the link provided above)</p> <pre><code>(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{696:function(t,e,n){&quot;use strict&quot;;var r=n(55),o=n.n(r),a=n(52),i=n(3),u=n(4),c=n.n(u),s=n(10),f=n(275);function l(t){return function(t){if(Array.isArray(t)){for(var e=0,n=new Array(t.length);e&lt;t.length;e++)n[e]=t[e];return n}}(t)||function(t){if(Symbol.iterator in Object(t)||&quot;[object Arguments]&quot;===Object.prototype.toString.call(t))return Array.from(t)}(t)||function(){throw new TypeError(&quot;Invalid attempt to spread non-iterable instance&quot;)}()}function p(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}var m=f.a.STANDARD,h=f.a.LIVE,v=f.a.FAVORITES,y=Object(a.createSelectorCreator)(a.defaultMemoize,s.j),d=[],E=function(t){return Object(a.createSelector)([function(t,e){return e.location.pathname},function(t,e){return e.match.params.sportId},function(t,e){return e.match.params.categoryId},function(t,e){return e.match.params.tournamentId},function(t,e){return e.match.params.hour}],function(e,n,r,o,a){return function(t){return function(e,n,r,o,a){return function(n){if(&quot;home&quot;===t){if(&quot;live&quot;===n)return{text:c()(&quot;EVENTS_LIVE&quot;),type:h};if(&quot;edito&quot;===n)return{text:c()(&quot;NEW_TITLE&quot;),type:m};if(&quot;to_come&quot;===n)return{text:c()(&quot;EVENTS_TO_COME&quot;),type:m}}else if(&quot;live&quot;===t){if(&quot;live&quot;===n)return e.match(/favorites/)?{text:c()(&quot;CURRENT_FAVORITES&quot;),type:v}:{text:c()(&quot;EVENTS_LIVE&quot;),type:m};if(&quot;prematch&quot;===n)return e.match(/favorites/)?{text:c()(&quot;TOCOME_FAVORITES&quot;),type:v}:{text:c()(&quot;EVENTS_TO_LIVE&quot;),type:m}}else if(&quot;tv&quot;===t){if(&quot;live&quot;===n)return e.match(/favorites/)?{text:c()(&quot;CURRENT_FAVORITES&quot;),type:v}:{text:c()(&quot;EVENTS_LIVE&quot;),type:h};if(&quot;prematch&quot;===n)return e.match(/favorites/)?{text:c()(&quot;TOCOME_FAVORITES&quot;),type:v}:{text:c()(&quot;EVENTS_TO_COME&quot;),type:m}}else if(&quot;favorites&quot;===t){if(&quot;live&quot;===n)return{text:c()(&quot;CURRENT_FAVORITES&quot;),type:v};if(&quot;prematch&quot;===n)return{text:c()(&quot;TOCOME_FAVORITES&quot;),type:v}}else if(&quot;catalog&quot;===t){if(&quot;live&quot;===n)return{text:c()(&quot;EVENTS_LIVE&quot;),type:m};if(&quot;prematch&quot;===n)return{text:c()(&quot;EVENTS_TO_COME&quot;),type:m}}else if(&quot;calendar&quot;===t)return{text:c()(&quot;NEXT_HOURS&quot;,{count:s.h.castNumber(a)}),type:m};return{text:void 0,type:m}}}}(t)(e,n,r,o,a)})},O=function(t){return Object(a.createSelector)([function(t,e){return e.match.params.sportId},function(t,e){return e.match.params.categoryId},function(t,e){return e.match.params.tournamentId}],function(e,n,r){return function(t){return function(e,n,r){return function(o){return&quot;home&quot;===t?&quot;live&quot;===o.hlType?&quot;live&quot;:&quot;highlight&quot;:[&quot;tv&quot;,&quot;favorites&quot;].indexOf(t)&gt;-1?&quot;LIVE&quot;===o.status?&quot;live&quot;:&quot;highlight&quot;:&quot;live&quot;===t?&quot;LIVE&quot;===o.status?&quot;live&quot;:&quot;prematch&quot;:&quot;catalog&quot;===t?(void 0!==r?a=&quot;tournament&quot;:void 0!==n?a=&quot;category&quot;:void 0!==e&amp;&amp;(a=&quot;sport&quot;),&quot;LIVE&quot;===o.status?&quot;live&quot;:a):&quot;highlight&quot;;var a}}}(t)(e,n,r)})},b=function(t){return Object(a.createSelector)([function(t){return t.entities},function(t,e){return e.match.params.sportId},function(t,e){return e.match.params.categoryId},function(t,e){return e.match.params.tournamentId},function(t,e){return e.match.params.hour},function(t,e){return e.location.pathname}],function(e,n,r,o,a,i){var u,c=t;return[&quot;live&quot;,&quot;tv&quot;,&quot;catalog&quot;].indexOf(t)&gt;-1?i.indexOf(&quot;favorites&quot;)&gt;-1?c=&quot;favorites&quot;:void 0!==o?(c=&quot;tournaments&quot;,u=o):void 0!==r?(c=&quot;categories&quot;,u=r):void 0!==n&amp;&amp;(c=&quot;sports&quot;,u=n):&quot;calendar&quot;===t&amp;&amp;(c=&quot;calendar&quot;,u=a),u?e[c][u]:e[c]})},g=function(t){return Object(a.createSelector)([function(t,e){return e.match.params.sportId},function(t,e){return e.match.params.categoryId},function(t,e){return e.match.params.tournamentId},function(t,e){return e.location.pathname}],function(e,n,r,o){var a=&quot;matches&quot;;return&quot;live&quot;===t?o.indexOf(&quot;favorites&quot;)&gt;-1?a=&quot;liveMatches&quot;:void 0===r&amp;&amp;void 0===n&amp;&amp;void 0===e||(a=&quot;liveMatches&quot;):&quot;tv&quot;===t&amp;&amp;(o.indexOf(&quot;favorites&quot;)&gt;-1?a=&quot;tvMatches&quot;:void 0===r&amp;&amp;void 0===n&amp;&amp;void 0===e||(a=&quot;tvMatches&quot;)),a})},T=function(t){return Object(a.createSelector)([b(t),g(t),function(t){return t.entities.matches}],function(t,e,n){var r=t&amp;&amp;t[e]||d;return Object(i.map)(r,function(t){return n[t]})})},I=function(t){return y([T(t),function(t){return t.entities.sports},function(t){return t.entities.categories},function(t){return t.entities.tournaments}],function(t,e,n,r){return Object(i.reduce)(t,function(t,o){if(void 0!==o&amp;&amp;null!==o){var a=o.sportId,i=o.tournamentId,u=o.categoryId;if(99999!==a){var c,f=e[a];if(o.tvChannels&amp;&amp;(c=s.f.convertToLowerCase(o.tvChannels)),void 0!==f&amp;&amp;null!==f){var l=n[u];if(void 0!==l&amp;&amp;null!==l){var m=r[i];void 0!==m&amp;&amp;null!==m&amp;&amp;t.push(function(t){for(var e=1;e&lt;arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{},r=Object.keys(n);&quot;function&quot;===typeof Object.getOwnPropertySymbols&amp;&amp;(r=r.concat(Object.getOwnPropertySymbols(n).filter(function(t){return Object.getOwnPropertyDescriptor(n,t).enumerable}))),r.forEach(function(e){p(t,e,n[e])})}return t}({},o,{tvChannels:c,sportName:f.sportName,categoryName:l.categoryName,tournamentName:m.tournamentName}))}}}}return t},[])})},S=function(t){return Object(a.createSelector)([b(t),g(t),I(t)],function(t,e,n){return{isLoading:void 0===t||t&amp;&amp;void 0===t[e],isNull:null===t||t&amp;&amp;null===t[e]||!1,matches:n}})};e.a=function(t){return function(){return y([S(t),O(t),E(t),function(t){return t.entities.grids}],function(e,n,r,a){var u=e.matches,s=e.isLoading,f=e.isNull;if(s||f)return{list:d,isEmpty:0===u.length,isLoading:s,isNull:f};var p={default:function(){return!0}};&quot;home&quot;===t?p={live:[&quot;hlType&quot;,&quot;live&quot;],edito:[&quot;hlType&quot;,&quot;edito&quot;],to_come:function(t){return t&amp;&amp;&quot;live&quot;!==t.hlType&amp;&amp;&quot;edito&quot;!==t.hlType}}:&quot;live&quot;!==t&amp;&amp;&quot;tv&quot;!==t&amp;&amp;&quot;catalog&quot;!==t&amp;&amp;&quot;favorites&quot;!==t||(p={live:[&quot;status&quot;,&quot;LIVE&quot;],prematch:[&quot;status&quot;,&quot;PREMATCH&quot;]});var h=Object(i.reduce)(p,function(e,s,f){var p=Object(i.filter)(u,s);return p.length&gt;0?(&quot;catalog&quot;===t&amp;&amp;&quot;prematch&quot;===f||e.push({type:&quot;separator&quot;,payload:{item:r(f)}}),p.forEach(function(r,a,i){if(&quot;catalog&quot;===t){var u,s,f=i[a-1],l=o.a.unix(r.matchStart).format(&quot;l&quot;),p=r.isOutright;a&gt;0&amp;&amp;(u=o.a.unix(f.matchStart).format(&quot;l&quot;),s=f.isOutright),&quot;LIVE&quot;!==r.status&amp;&amp;(r.isOutright?s!==p&amp;&amp;e.push({type:&quot;separator&quot;,payload:{item:{text:c()(&quot;BETS_OUTRIGHTS&quot;),type:m}}}):u!==l&amp;&amp;e.push({type:&quot;separator&quot;,payload:{item:{text:o.a.unix(r.matchStart).format(c()(&quot;formats.dateShort&quot;)),type:m}}}))}e.push({type:n(r),payload:{item:r}})}),&quot;home&quot;===t&amp;&amp;&quot;edito&quot;===f&amp;&amp;a&amp;&amp;a.length&amp;&amp;e.push.apply(e,l(Object(i.map)(a,function(t){return{type:&quot;grid&quot;,payload:{item:t}}})))):&quot;home&quot;===t&amp;&amp;0===p.length&amp;&amp;&quot;edito&quot;===f&amp;&amp;a&amp;&amp;a.length&amp;&amp;(e.push({type:&quot;separator&quot;,payload:{item:{text:c()(&quot;NEW_TITLE&quot;),type:m}}}),e.push.apply(e,l(Object(i.map)(a,function(t){return{type:&quot;grid&quot;,payload:{item:t}}})))),e},[]);return{list:h,isEmpty:0===h.length,isLoading:s,isNull:f}})}}},837:function(t,e,n){&quot;use strict&quot;;n.r(e);n(6);var r=n(0),o=n.n(r),a=n(12),i=n(4),u=n.n(i),c=n(277),s=n.n(c),f=n(274),l=n(111),p=n(35),m=n(696),h=n(712),v=n(171),y=n(698),d=n(694);function E(t){return(E=&quot;function&quot;===typeof Symbol&amp;&amp;&quot;symbol&quot;===typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&amp;&amp;&quot;function&quot;===typeof Symbol&amp;&amp;t.constructor===Symbol&amp;&amp;t!==Symbol.prototype?&quot;symbol&quot;:typeof t})(t)}function O(t,e){for(var n=0;n&lt;e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,&quot;value&quot;in r&amp;&amp;(r.writable=!0),Object.defineProperty(t,r.key,r)}}function b(t,e){return!e||&quot;object&quot;!==E(e)&amp;&amp;&quot;function&quot;!==typeof e?function(t){if(void 0===t)throw new ReferenceError(&quot;this hasn't been initialised - super() hasn't been called&quot;);return t}(t):e}function g(t){return(g=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function T(t,e){return(T=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var I=function(t){function e(){return function(t,e){if(!(t instanceof e))throw new TypeError(&quot;Cannot call a class as a function&quot;)}(this,e),b(this,g(e).apply(this,arguments))}var n,a,i;return function(t,e){if(&quot;function&quot;!==typeof e&amp;&amp;null!==e)throw new TypeError(&quot;Super expression must either be null or a function&quot;);t.prototype=Object.create(e&amp;&amp;e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&amp;&amp;T(t,e)}(e,r[&quot;Component&quot;]),n=e,(a=[{key:&quot;componentWillMount&quot;,value:function(){var t=this.props,e=t.location,n=t.match;this.dispatchRoute(n.params,e.pathname)}},{key:&quot;componentWillReceiveProps&quot;,value:function(t){var e=t.match.params,n=t.location.pathname;this.props.location.pathname!==n&amp;&amp;this.dispatchRoute(e,n)}},{key:&quot;dispatchRoute&quot;,value:function(t,e){var n=l.a.LIVE,r=t.sportId,o=t.categoryId,a=t.tournamentId;e.indexOf(&quot;favorites&quot;)&gt;-1?n+=&quot;:favorites&quot;:void 0!==a?n+=&quot;:tournament:&quot;.concat(a):void 0!==o?n+=&quot;:category:&quot;.concat(o):void 0!==r&amp;&amp;(n+=&quot;:sport:&quot;.concat(r)),this.props.askRoute(n)}},{key:&quot;render&quot;,value:function(){var t=this.props,e=t.isLoading,n=t.isNull,r=t.isEmpty,a=t.list;return e?o.a.createElement(s.a,{title:u()(&quot;DOCUMENT_TITLE.LIVE&quot;)},o.a.createElement(v.a,{loading:!0})):o.a.createElement(s.a,{title:u()(&quot;DOCUMENT_TITLE.LIVE&quot;)},o.a.createElement(&quot;section&quot;,{className:&quot;event-list&quot;},!n&amp;&amp;!r&amp;&amp;o.a.createElement(h.a,{items:a}),(n||r)&amp;&amp;o.a.createElement(&quot;p&quot;,{className:&quot;no-results centered-message-betting&quot;},u()(&quot;EVENTS_NO&quot;))))}}])&amp;&amp;O(n.prototype,a),i&amp;&amp;O(n,i),e}();e.default=Object(f.a)(d.a,y.a,Object(a.connect)(function(){var t=Object(m.a)(&quot;live&quot;)();return function(e,n){return t(e,n)}},function(t){return{askRoute:function(e){t(p.a.send({route:e}))}}}))(I)}}]); </code></pre> <p>So I simply need to scrape this data and return it to pretty much the same format of the website (from the most global to the most refined data):</p> <ol> <li>Total number of live games (all sports included) with all their infos, bets and odds available. Within this list I can select any game individually and see its infos, odds and bets available.</li> <li>total number of live games by each sport (ex: football (8), basketball (6) ect..) with all their infos, bets and odds available.</li> <li>A list of all live tournaments/leagues by each sport (ex: if footaball is selected, return british premier league, spanish liga, french ligue 1 ect ect) with all their infos, bets and odds available.</li> <li>When a specific tournament/league is selected in a sport (ex: british premier league in football), display the list all of its live games with all their infos, bets and odds available.</li> <li>Lastly, within this list of point 4/, I need like in point 1/ to be able to select any live game individually to see its infos, odds and bets available.</li> </ol> <p>Any help, suggestions &amp; ideas will be greatly appreciated.</p> <p>j.d</p>"	54854526	"<p>The website <a href=""https://www.winamax.fr/paris-sportifs/live"" rel=""nofollow noreferrer"">https://www.winamax.fr/paris-sportifs/live</a> gets 'fresh' data periodically using <a href=""https://en.wikipedia.org/wiki/WebSocket"" rel=""nofollow noreferrer"">WebSocket</a>  .</p>  <p>Navigate to the WS tab (under Network tab) and see the frames of data coming from the server to the client.</p>  <p>Try to use a WebSocket client like <a href=""https://pypi.org/project/websocket_client/"" rel=""nofollow noreferrer"">https://pypi.org/project/websocket_client/</a> and point it to the site you try to scrape.</p>"
54936206	how to pass JavaScript variable value into python variable(flask)	javascript|python|html|flask	2019-03-01 00:15:14.750000 UTC	"<p>I want to send this variable value in python variable to perform different tasks.</p>  <pre><code>var d=""string"" </code></pre>  <p>I don't want to send variable values through URL.  I want to use some like this code.   </p>  <pre><code>@app.route(""/"", methods=['POST']) def hello1():     d = request.form['n'] #here i take value from name of html element </code></pre>"	54936266	"<p>use an AJAX post.</p>  <pre><code>let myVar = 'Hello' $.post('http://localhost:5000/getjs', {myVar}, function(){     // Do something once posted. }) </code></pre>  <p>and your Flask will be something like this</p>  <pre><code>@app.route('/getjs', methods=['POST']) def get_js():     if request.method == 'post':         js_variable = request.form         return js_variable </code></pre>  <p>Alternatively you can do this:</p>  <pre><code>@app.route('/getjs/&lt;variable&gt;')     def get_js(variable):         js_variable = variable         return js_variable </code></pre>  <p>so when you direct your url to <a href=""http://localhost:5000/getjs/apples"" rel=""nofollow noreferrer"">http://localhost:5000/getjs/apples</a> js_variable will be 'apples'</p>"
54936206	how to pass JavaScript variable value into python variable(flask)	javascript|python|html|flask	2019-03-01 00:15:14.750000 UTC	"<p>I want to send this variable value in python variable to perform different tasks.</p>  <pre><code>var d=""string"" </code></pre>  <p>I don't want to send variable values through URL.  I want to use some like this code.   </p>  <pre><code>@app.route(""/"", methods=['POST']) def hello1():     d = request.form['n'] #here i take value from name of html element </code></pre>"	54963005	"<p>Use native javascript 'fetch'. </p>  <p>Ari Victor's solution requires an external library: jquery </p>  <pre><code>var url = 'http://localhost:5000/getjs'; var data = {field_name: 'field_value'};  fetch(url, {   method: 'POST',   body: JSON.stringify(data),    headers:{     'Content-Type': 'application/json'   } }).then(res =&gt; res.json()) .then(response =&gt; console.log('Success:', JSON.stringify(response))) .catch(error =&gt; console.error('Error:', error)); </code></pre>"
54937179	How to get data using javascript in Python?	javascript|python	2019-03-01 02:36:58.050000 UTC	"<p>I want to use javascript to get the data in a webpage.</p>  <p>In the first image, there is a highlighted link for you to click.</p>  <p>After that, you will get the webpage in the second image.</p>  <p>The desired data is highlighted.</p>  <p>I can get the data using <code>requests</code> and <code>BeautifulSoup</code>.</p>  <p>The data in the second image is retrieved using javascript from somewhere before displaying to us.</p>  <p>How to get the data using javascript?</p>  <pre><code>import requests from bs4 import BeautifulSoup import lxml  fig1_url = r'https://huangshigongyuanzy.fang.com/' fig2_url = r'https://huangshigongyuanzy.fang.com/house/2612049076/fangjia.htm'  headers = {'user-agent':r'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36'} resp = requests.get(fig2_url, headers=headers) resp.encoding='GB18030'  soup = BeautifulSoup(resp.text, 'lxml') for i in soup.find('div', {'id': 'priceListOpen'}).findAll('tr'):   for j in i.findAll('td'):     print(j.text+'|',end = ' ')   print('\n' + '-'*50) </code></pre>  <p>You can run the snippet <a href=""https://i.stack.imgur.com/Mz8kk.png"" rel=""nofollow noreferrer"">here</a>. <a href=""https://i.stack.imgur.com/Mz8kk.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/Mz8kk.png"" alt=""enter image description here""></a> <a href=""https://i.stack.imgur.com/EKw9B.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/EKw9B.png"" alt=""enter image description here""></a></p>"	54937418	"<p>I opened the <code>fig2_url</code> and I found that this page was using <strong>server rendering</strong>. So, you have to use some tools to craw the data from it.</p>  <p>This <a href=""https://scotch.io/tutorials/scraping-the-web-with-node-js"" rel=""nofollow noreferrer"">article</a> provided us with a perfect tutorial. </p>  <p>When you craw a website, first thing to look for are terms of use. Some Site explicitly address the possibility of using their website with scraping APIs. Always be sure to take a look at these before.</p>"
54937179	How to get data using javascript in Python?	javascript|python	2019-03-01 02:36:58.050000 UTC	"<p>I want to use javascript to get the data in a webpage.</p>  <p>In the first image, there is a highlighted link for you to click.</p>  <p>After that, you will get the webpage in the second image.</p>  <p>The desired data is highlighted.</p>  <p>I can get the data using <code>requests</code> and <code>BeautifulSoup</code>.</p>  <p>The data in the second image is retrieved using javascript from somewhere before displaying to us.</p>  <p>How to get the data using javascript?</p>  <pre><code>import requests from bs4 import BeautifulSoup import lxml  fig1_url = r'https://huangshigongyuanzy.fang.com/' fig2_url = r'https://huangshigongyuanzy.fang.com/house/2612049076/fangjia.htm'  headers = {'user-agent':r'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36'} resp = requests.get(fig2_url, headers=headers) resp.encoding='GB18030'  soup = BeautifulSoup(resp.text, 'lxml') for i in soup.find('div', {'id': 'priceListOpen'}).findAll('tr'):   for j in i.findAll('td'):     print(j.text+'|',end = ' ')   print('\n' + '-'*50) </code></pre>  <p>You can run the snippet <a href=""https://i.stack.imgur.com/Mz8kk.png"" rel=""nofollow noreferrer"">here</a>. <a href=""https://i.stack.imgur.com/Mz8kk.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/Mz8kk.png"" alt=""enter image description here""></a> <a href=""https://i.stack.imgur.com/EKw9B.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/EKw9B.png"" alt=""enter image description here""></a></p>"	54937825	"<p>Have you looked into using Selenium webdriver? I was looking into it for another project and it looked promising. It actually invokes your browser, so it should do the javascript for you (I think):</p>  <pre><code>from selenium import webdriver fig2_url = r'https://huangshigongyuanzy.fang.com/house/2612049076/fangjia.htm' driver = webdriver.Firefox() driver.get(fig2_url) driver.page_source.encode('GB18030')  soup = BeautifulSoup(driver.page_source, 'lxml') for i in soup.find('div', {'id': 'priceListOpen'}).findAll('tr'):   for j in i.findAll('td'):     print(j.text+'|',end = ' ')   print('\n' + '-'*50) </code></pre>  <p>Seems to work.</p>  <p>Caveats:</p>  <ol> <li><p>It relies on Mozilla <a href=""https://github.com/mozilla/geckodriver/releases"" rel=""nofollow noreferrer"">geckodriver</a>, on github.</p></li> <li><p>You can't fake the headers, as with requests; but then, since it's actually opening using Firefox, you probably don't need to.</p></li> <li><p>At least with the above code, it opens a browser and geckodrive window; there may be some way to suppress that, but I haven't looked into it. This was just a bare-bones attempt. [edit: the question <a href=""https://stackoverflow.com/questions/5370762/how-to-hide-firefox-window-selenium-webdriver/23898148#23898148"">How to hide Firefox window (Selenium WebDriver)?</a> describes how to get around this with PhantomJS. I haven't tried it.]</p></li> </ol>"
54970403	Evaluation expression:- Python vs Javascript	javascript|python	2019-03-03 15:27:53.697000 UTC	"<p>I'm replicating an equation in javascript in python.</p>  <p>Here's the equation in Javascript:-</p>  <pre><code>var q = 1; var c = [608875978, 500902236, -1359500678, -1631660920]; var x = c[q &gt;&gt;&gt; 2] &gt;&gt;&gt; 24 - q % 4 * 8 &amp; 255; </code></pre>  <p>Output <code>:- x = 74</code></p>  <p>Similar in Python:-</p>  <pre><code>def rshift(val, n):     return (val % 0x100000000) &gt;&gt; n  i = 1 words = [608875978, 500902236, -1359500678, -1631660920] x = rshift((words[rshift(i, 2)]), 24) - i % 4 * 8 &amp; 255 print(x) </code></pre>  <p>Output <code>:- x = 28</code></p>  <p>I'm sure <code>rshift</code> is returning the right value. What exactly is wrong with Python evaluation vs JS evaluation?</p>"	54970609	"<p>I just tried the same in python and it outputs <code>74</code>:</p>  <pre><code>q = 1; c = [608875978, 500902236, -1359500678, -1631660920]; x = c[q &gt;&gt; 2] &gt;&gt; 24 - q % 4 * 8 &amp; 255; print(x) // prints `74` </code></pre>  <p>Note: In python, I just replaced <code>&gt;&gt;&gt;</code> with <code>&gt;&gt;</code>.</p>  <p>I'm not python expert - I just started learning from yesterday. So, I can't analyze your example code now. But you should fix - there might be some issue.</p>  <hr>  <p>As far as I know, any language follow the same math rule.</p>"
54980804	Evaluating expression :- Javascript vs Python	javascript|python	2019-03-04 10:02:09.280000 UTC	"<p>The following expression results different result in Javascript in Python and Javascript:-</p>  <p>Python:-</p>  <pre><code>a, b, c, e, f, h = 271733878, 4023233417, 5858469028, -389564586, 2562383102, 1634886000  a = a + (c &amp; b | ~c &amp; f) + h + e  # 4965557782 </code></pre>  <p>Javascript:-</p>  <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-js lang-js prettyprint-override""><code>a = 271733878; b = 4023233417; c = 5858469028; e = -389564586 f = 2562383102; h = 1634886000;  a = a + (c &amp; b | ~c &amp; f) + h + e; // 670590486  console.log(a)</code></pre> </div> </div> </p>  <p>How is the evaluation of the same expression differ in 2 languages?</p>"	54980914	"<p><code>~c</code> is evaluated differently in Python and Javascript.</p>  <p><code>~c</code> is the negation of the c value. This is done by inverting the bits of the value. As such, the value differs in different languages because they probably use a different amount of bits to store int values, which will result in a different ~value.</p>  <p>Javascript: </p>  <pre><code>~c = -1563501733 </code></pre>  <p>Python:</p>  <pre><code>~c = -5858469029 </code></pre>"
55040466	How to execute scrapy python in a javascript file?	python|node.js|scrapy	2019-03-07 09:37:45.017000 UTC	"<p>I have a <code>python</code> script that I launched with the command <code>scrapy crawl mynamefile</code>.</p>  <p>I would like to run the <code>python</code> cli command <code>scrapy crawl</code> from a <code>js</code> file in my <code>node js</code> application, then display it in the console.</p>  <p>The problem is that I don't how to import the <code>scrapy</code> <code>python</code> library in node.</p>  <p>Thanks for your help!</p>"	55067793	"<p>I don't think it is a good idea to run Python code from NodeJS. If you are for some reason forced to do that, you probably need to call Python script in a child process (see for example <a href=""https://medium.com/@HolmesLaurence/integrating-node-and-python-6b8454bfc272"" rel=""nofollow noreferrer"">this article</a>).</p>  <p>Alternatively, you might use something like <a href=""https://github.com/scrapinghub/scrapyrt"" rel=""nofollow noreferrer"">Scrapyrt</a>, which exposes HTTP API for your Scrapy project and provides on-demand scraping ability.</p>  <p>Yet the best option seems to be using some native JavaScript scraping solution, like <a href=""https://sdk.apify.com/"" rel=""nofollow noreferrer"">Apify</a>.</p>"
55070682	How to parse information with python from a webpage that uses php and javascript	python|web-scraping|beautifulsoup	2019-03-08 20:40:25.993000 UTC	"<p>I'm trying to get all the events and additional metadata to those events from this webpage : <a href=""https://alando-palais.de/events"" rel=""nofollow noreferrer"">https://alando-palais.de/events</a></p>  <p>My problem is, that the result(html) doesn't contain the information I'm looking for. I guess, they are ""hidden"" behind some php script.  This url: '<a href=""https://alando-palais.de/wp/wp-admin/admin-ajax.php"" rel=""nofollow noreferrer"">https://alando-palais.de/wp/wp-admin/admin-ajax.php</a>'</p>  <p>Any idea, on how to wait until the page is completely loaded, or what kind of method do I have to use, to get the event information?</p>  <p>This is my script right now :-) :</p>  <pre><code>from bs4 import BeautifulSoup from urllib.request import urlopen, urljoin from urllib.parse import urlparse import re import requests  if __name__ == '__main__':     target_url = 'https://alando-palais.de/events'     #target_url = 'https://alando-palais.de/wp/wp-admin/admin-ajax.php'      soup = BeautifulSoup(requests.get(target_url).text, 'html.parser')     print(soup)      links = soup.find_all('a', href=True)     for x,link in enumerate(links):         print(x, link['href'])   #    for image in images: #        print(urljoin(target_url, image)) </code></pre>  <p>Expected output would be something like:</p>  <ul> <li>Date: 08.03.2019 </li> <li>Title: Penthouse Club Special: Maiwai &#038; Friends</li> <li>img: <a href=""https://alando-palais.de/wp/wp-content/uploads/2019/02/0803_MaiwaiFriends-500x281.jpg"" rel=""nofollow noreferrer"">https://alando-palais.de/wp/wp-content/uploads/2019/02/0803_MaiwaiFriends-500x281.jpg</a>""</li> </ul>  <p>That's something out of this result:</p>  <pre><code>&lt;div class=""vc_gitem-zone vc_gitem-zone-b vc_custom_1547045488900 originalbild vc-gitem-zone-height-mode-auto vc_gitem-is-link"" style=""background-image: url(https://alando-palais.de/wp/wp-content/uploads/2019/02/0803_MaiwaiFriends-500x281.jpg) !important;""&gt;     &lt;a href=""https://alando-palais.de/event/penthouse-club-special-maiwai-friends"" title=""Penthouse Club Special: Maiwai &amp;#038; Friends"" class=""vc_gitem-link vc-zone-link""&gt;&lt;/a&gt;    &lt;img src=""https://alando-palais.de/wp/wp-content/uploads/2019/02/0803_MaiwaiFriends-500x281.jpg"" class=""vc_gitem-zone-img"" alt=""""&gt;  &lt;div class=""vc_gitem-zone-mini""&gt;         &lt;div class=""vc_gitem_row vc_row vc_gitem-row-position-top""&gt;&lt;div class=""vc_col-sm-6 vc_gitem-col vc_gitem-col-align-left""&gt;   &lt;div class=""vc_gitem-post-meta-field-Datum eventdatum vc_gitem-align-left""&gt; 08.03.2019     &lt;/div&gt; </code></pre>"	55071109	"<p>I better recommend you <a href=""https://selenium-python.readthedocs.io/"" rel=""nofollow noreferrer"">selenium</a> to bypass all the server restrictions.</p>  <p><strong>Edited</strong></p>  <pre><code>from selenium import webdriver  driver = webdriver.Firefox() driver.get(""https://alando-palais.de/events"") elems = driver.find_elements_by_xpath(""//a[@href]"") for elem in elems:     print elem.get_attribute(""href"") </code></pre>"
55070682	How to parse information with python from a webpage that uses php and javascript	python|web-scraping|beautifulsoup	2019-03-08 20:40:25.993000 UTC	"<p>I'm trying to get all the events and additional metadata to those events from this webpage : <a href=""https://alando-palais.de/events"" rel=""nofollow noreferrer"">https://alando-palais.de/events</a></p>  <p>My problem is, that the result(html) doesn't contain the information I'm looking for. I guess, they are ""hidden"" behind some php script.  This url: '<a href=""https://alando-palais.de/wp/wp-admin/admin-ajax.php"" rel=""nofollow noreferrer"">https://alando-palais.de/wp/wp-admin/admin-ajax.php</a>'</p>  <p>Any idea, on how to wait until the page is completely loaded, or what kind of method do I have to use, to get the event information?</p>  <p>This is my script right now :-) :</p>  <pre><code>from bs4 import BeautifulSoup from urllib.request import urlopen, urljoin from urllib.parse import urlparse import re import requests  if __name__ == '__main__':     target_url = 'https://alando-palais.de/events'     #target_url = 'https://alando-palais.de/wp/wp-admin/admin-ajax.php'      soup = BeautifulSoup(requests.get(target_url).text, 'html.parser')     print(soup)      links = soup.find_all('a', href=True)     for x,link in enumerate(links):         print(x, link['href'])   #    for image in images: #        print(urljoin(target_url, image)) </code></pre>  <p>Expected output would be something like:</p>  <ul> <li>Date: 08.03.2019 </li> <li>Title: Penthouse Club Special: Maiwai &#038; Friends</li> <li>img: <a href=""https://alando-palais.de/wp/wp-content/uploads/2019/02/0803_MaiwaiFriends-500x281.jpg"" rel=""nofollow noreferrer"">https://alando-palais.de/wp/wp-content/uploads/2019/02/0803_MaiwaiFriends-500x281.jpg</a>""</li> </ul>  <p>That's something out of this result:</p>  <pre><code>&lt;div class=""vc_gitem-zone vc_gitem-zone-b vc_custom_1547045488900 originalbild vc-gitem-zone-height-mode-auto vc_gitem-is-link"" style=""background-image: url(https://alando-palais.de/wp/wp-content/uploads/2019/02/0803_MaiwaiFriends-500x281.jpg) !important;""&gt;     &lt;a href=""https://alando-palais.de/event/penthouse-club-special-maiwai-friends"" title=""Penthouse Club Special: Maiwai &amp;#038; Friends"" class=""vc_gitem-link vc-zone-link""&gt;&lt;/a&gt;    &lt;img src=""https://alando-palais.de/wp/wp-content/uploads/2019/02/0803_MaiwaiFriends-500x281.jpg"" class=""vc_gitem-zone-img"" alt=""""&gt;  &lt;div class=""vc_gitem-zone-mini""&gt;         &lt;div class=""vc_gitem_row vc_row vc_gitem-row-position-top""&gt;&lt;div class=""vc_col-sm-6 vc_gitem-col vc_gitem-col-align-left""&gt;   &lt;div class=""vc_gitem-post-meta-field-Datum eventdatum vc_gitem-align-left""&gt; 08.03.2019     &lt;/div&gt; </code></pre>"	55071635	"<p>You could mimic the xhr post made by the page</p>  <pre><code>from bs4 import BeautifulSoup import requests import pandas as pd  url = 'https://alando-palais.de/wp/wp-admin/admin-ajax.php'  data = {    'action': 'vc_get_vc_grid_data',   'vc_action': 'vc_get_vc_grid_data',   'tag': 'vc_basic_grid',   'data[visible_pages]' : 5,   'data[page_id]' : 30,   'data[style]' : 'all',   'data[action]' : 'vc_get_vc_grid_data',   'data[shortcode_id]' : '1551112413477-5fbaaae1-0622-2',   'data[tag]' : 'vc_basic_grid',   'vc_post_id' : '30',   '_vcnonce' : 'cc8cc954a4'    }  res = requests.post(url, data = data) soup = BeautifulSoup(res.content, 'lxml') dates = [item.text.strip() for item in soup.select('.vc_gitem-zone[style*=""https://alando-palais.de""]')] textInfo = [item for item in soup.select('.vc_gitem-link')][::2] imageLinks = [item['src'].strip() for item in soup.select('img')] titles = [] links = [] for item in textInfo:     titles.append(item['title'])     links.append(item['href']) results = pd.DataFrame(list(zip(titles, dates, links, imageLinks)),columns = ['title', 'date', 'link', 'imageLink']) print(results) </code></pre>  <hr>  <p>Or with selenium:</p>  <pre><code>from selenium import webdriver from selenium.webdriver.common.by import By from selenium.webdriver.support.ui import WebDriverWait from selenium.webdriver.support import expected_conditions as EC import pandas as pd  url = 'https://alando-palais.de/events#' driver = webdriver.Chrome() driver.get(url)  dates = [item.text.strip() for item in WebDriverWait(driver,10).until(EC.presence_of_all_elements_located((By.CSS_SELECTOR, "".vc_gitem-zone[style*='https://alando-palais.de']""))) if len(item.text)] textInfo = [item for item in driver.find_elements_by_css_selector('.vc_gitem-link')][::2] textInfo = textInfo[: int(len(textInfo) / 2)] imageLinks = [item.get_attribute('src').strip() for item in driver.find_elements_by_css_selector('a + img')][::2] titles = [] links = []  for item in textInfo:     titles.append(item.get_attribute('title'))     links.append(item.get_attribute('href')) results = pd.DataFrame(list(zip(titles, dates, links, imageLinks)),columns = ['title', 'date', 'link', 'imageLink'])  print(results)  driver.quit() </code></pre>"
55084084	How to expose a web server with REST API and HTML/JavaScript applications from an existing Python application?	python-3.x|http|wsgi	2019-03-10 03:09:03.563000 UTC	"<p>I have an existing Python application that crawls the Internet continuously. It uses the <code>requests</code> package to make HTTP requests to various Internet websites such as GitHub, Twitter, etc. and downloads the available data on to a filesystem. It also makes HTTP requests to the REST APIs of GitHub repositories and Twitter and downloads a lot of metadata. It keeps doing this in an infinite loop. After every iteration it invokes <code>time.sleep(3600)</code> to sleep for 1 hour before the next iteration.</p>  <p>Now I want to expose an HTTP server on port 80 from this application so that any client can connect to port 80 of this app to query its internal state. For example if someone runs <code>curl http://myapp/status</code> it should respond with <code>{""status"": ""crawling""}</code> or <code>{""status"": ""sleeping""}</code>. If someone visits <code>http://myapp/status</code> with their web browser, it should display an HTML page showing the status. Based on the user agent detected, it would serve both REST API responses or HTML pages. If for any reason, my app goes down or crashes, the HTTP requests to port 80 should of course fail.</p>  <p>How can I expose such an HTTP server from the application? I thought of using Django because as the project goes it has to do a lot of heavy lifting such as authentication, protection against CSRF attacks, accepting user input and querying against the data it has, and so on. Django seems good for this purpose. But the problem with Django is that I cannot embed Django in my current app. I have to run a separate <code>uwsgi</code> server to serve the Django app. The same problem exists with Flask as well.</p>  <p>What is the right way to solve a problem like this in Python?</p>"	55793703	"<p>The way I see it, you have two high-level ways of tackling this problem:</p>  <ol> <li>Have separate applications (a ""server"" and a ""crawler"") that have some shared datastore (database, Redis, etc). Each application would operate independently and the crawler could just update its status in the shared datastore. This approach could probably scale better: if you spin it up in something like Docker Swarm, you could scale the crawler instances as much as you can afford.</li> <li>Have a single application that spawns separate threads for the crawler and server. Since they're in the same process, you can share information between them a bit quicker (though if it's just the crawler status that shouldn't matter much). The advantage to this option seems to just be difficulty of spinning it up -- you wouldn't need a shared datastore, and you wouldn't need to manage more than one service.</li> </ol>  <p>I would personally tend towards (1) here, because each of the pieces are simpler. What follows is a solution to (1), and a quick and dirty solution to (2).</p>  <h2>1. Separate Processes with shared Datastore</h2>  <p>I would use <a href=""https://docs.docker.com/compose/"" rel=""nofollow noreferrer"">Docker Compose</a> to handle spinning up all of the services. It adds an extra layer of complexity (as you need to have Docker installed), but it greatly simplifies managing the services. </p>  <h3>The whole Docker Compose stack</h3>  <p>Building on the example configuration <a href=""https://www.decodingdevops.com/docker-compose-example-yml-file/"" rel=""nofollow noreferrer"">here</a> I would make a <code>./docker-compose.yaml</code> file that looks like</p>  <pre><code>version: '3' services:   server:     build: ./server     ports:       - ""80:80""     links:       - redis     environment:       - REDIS_URL=redis://cache   crawler:     build: ./crawler     links:       - redis     environment:       - REDIS_URL=redis://cache   redis:     image: ""redis/alpine""     container_name: cache     expose:        - 6379 </code></pre>  <p>I would organize the applications into separate directories, like <code>./server</code> and <code>./crawler</code>, but that's not the only way to do it. However you organize them, your <code>build</code> arguments in the configuration above should match.</p>  <h3>The server</h3>  <p>I would write a simple server in <code>./server/app.py</code> that does something like</p>  <pre class=""lang-py prettyprint-override""><code>import os  from flask import Flask import redis  app = Flask(__name__) r_conn = redis.Redis(     host=os.environ.get('REDIS_HOST'),     port=6379 )  @app.route('/status') def index():     stat = r_conn.get('crawler_status')     try:         return stat.decode('utf-8')     except:         return 'error getting status', 500  app.run(host='0.0.0.0', port=8000) </code></pre>  <p>Along with it a <code>./server/requirements.txt</code> file with the dependencies</p>  <pre><code>Flask redis </code></pre>  <p>And finally a <code>./server/Dockerfile</code> that tells Docker how to build your server</p>  <pre><code>FROM alpine:latest # install Python RUN apk add --no-cache python3 &amp;&amp; \     python3 -m ensurepip &amp;&amp; \     rm -r /usr/lib/python*/ensurepip &amp;&amp; \     pip3 install --upgrade pip setuptools &amp;&amp; \     rm -r /root/.cache # copy the app and make it your current directory RUN mkdir -p /opt/server COPY ./ /opt/server WORKDIR /opt/server # install deps and run server RUN pip3 install -qr requirements.txt EXPOSE 8000 CMD [""python3"", ""app.py""] </code></pre>  <h3>Stop to check things are alright</h3>  <p>At this point, if you open a CMD prompt or terminal in the directory with <code>./docker-compose.yaml</code> you should be able to run <code>docker-compose build &amp;&amp; docker-compose up</code> to check that everything builds and runs happily. You will need to disable the <code>crawler</code> section of the YAML file (since it hasn't been written yet) but you should be able to spin up a server that talks to Redis. If you're happy with it, uncomment the <code>crawler</code> section of the YAML and proceed.</p>  <h3>The crawler process</h3>  <p>Since Docker handles restarting the crawler process, you can actually just write this as a very simple Python script. Something like <code>./crawler/app.py</code> could look like</p>  <pre class=""lang-py prettyprint-override""><code>from time import sleep import os import sys  import redis  TIMEOUT = 3600  # seconds between runs r_conn = redis.Redis(     host=os.environ.get('REDIS_HOST'),     port=6379 )  # ... update status and then do the work ... r_conn.set('crawler_status', 'crawling') sleep(60) # ... okay, it's done, update status ... r_conn.set('crawler_status', 'sleeping')  # sleep for a while, then exit so Docker can restart sleep(TIMEOUT) sys.exit(0) </code></pre>  <p>And then like before you need a <code>./crawler/requirements.txt</code> file</p>  <pre><code>redis </code></pre>  <p>And a (very similar to the server's) <code>./crawler/Dockerfile</code></p>  <pre><code>FROM alpine:latest # install Python RUN apk add --no-cache python3 &amp;&amp; \     python3 -m ensurepip &amp;&amp; \     rm -r /usr/lib/python*/ensurepip &amp;&amp; \     pip3 install --upgrade pip setuptools &amp;&amp; \     rm -r /root/.cache # copy the app and make it your current directory RUN mkdir -p /opt/crawler COPY ./ /opt/crawler WORKDIR /opt/crawler # install deps and run server RUN pip3 install -qr requirements.txt # NOTE that no port is exposed CMD [""python3"", ""app.py""] </code></pre>  <h3>Wrapup</h3>  <p>In 7 files, you have two separate applications managed by Docker as well as a Redis instance. If you want to scale it, you can look into the <a href=""https://docs.docker.com/compose/reference/up/"" rel=""nofollow noreferrer""><code>--scale</code></a> option for <code>docker-compose up</code>. This is not necessarily the <em>simplest</em> solution, but it manages some of the unpleasant bits about process management. For reference, I also made a Git repo for it <a href=""https://gitlab.com/afiorillo/dockercompose-flask-redis"" rel=""nofollow noreferrer"">here</a>.</p>  <p>To run it as a headless service, just run <code>docker-compose up -d</code>.</p>  <p>From here, you can and should add nicer logging to the crawler. You can of course use Django instead of Flask for the server (though I'm more familiar with Flask and Django may introduce new dependencies). And of course you can always make it more complicated.</p>  <h2>2. Single process with threading</h2>  <p>This solution does not require any Docker, and should only require a single Python file to manage. I won't write a full solution unless OP wants it, but the basic sketch would be something like</p>  <pre class=""lang-py prettyprint-override""><code>import threading import time  from flask import Flask  STATUS = ''  # run the server on another thread def run_server():     app = Flask(__name__)     @app.route('/status')     def index():         return STATUS server_thread = threading.Thread(target=run_server) server_thread.start()  # run the crawler on another thread def crawler_loop():     while True:         STATUS = 'crawling'         # crawl and wait         STATUS = 'sleeping'         time.sleep(3600) crawler_thread = threading.Thread(target=crawler_loop) crawler_thread.start()  # main thread waits until the app is killed try:     while True:         sleep(1) except:     server_thread.kill()     crawler_thread.kill() </code></pre>  <p>This solution doesn't handle anything to do with keeping the services alive, really much to do with error handling, and the block at the end won't handle signals from the OS very well. That said, it's a quick and dirty solution that should get you off the ground.</p>"
55084491	Why doesn't this cycling function in javaScript return 0 every time? How would I do something similar in python?	javascript|python|function|counter|cycle	2019-03-10 04:43:10.807000 UTC	"<p>I'm new to programming and am learning a bit of javaScript after knowing a bit of Python. I'm using javaScript to control elements inside a mobile AR app and I created a very simple cycler function that works exactly as I want it to but honestly I'm trying to understand WHY it works! I wanted a function that would cycle 1,2,3 on each tap. First tap would return '1', second tap '2', third tap '3', then repeat this sequence on additional taps. Here is what I came up with after lots of trial, error and googling:</p>  <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-js lang-js prettyprint-override""><code>const cycler = {      current: -1,      cycle: function() {       if (cycler.current == 3) {        cycler.current = 0;       } else {        cycler.current++;       }       console.log(cycler.current);      } }  cycler.cycle() cycler.cycle() cycler.cycle() cycler.cycle() cycler.cycle()</code></pre> </div> </div> </p>  <p>On the tap event, I call cycler.cycle(); and it works...returning 1,2,3,1,2,3,etc. corresponding to my taps...but I don't understand why it doesn't just return 0 every time I tap. Why isn't 'current' being reset to '-1' every time I call this? How would I do something similar in python? How do I think about this? Thanks for any insight!</p>"	55084519	"<p>When the object gets created in memory it sets the initial current value to -1, and unless the object gets removed, and recreated in memory, the value will be whatever you last set it to.</p>"
55084491	Why doesn't this cycling function in javaScript return 0 every time? How would I do something similar in python?	javascript|python|function|counter|cycle	2019-03-10 04:43:10.807000 UTC	"<p>I'm new to programming and am learning a bit of javaScript after knowing a bit of Python. I'm using javaScript to control elements inside a mobile AR app and I created a very simple cycler function that works exactly as I want it to but honestly I'm trying to understand WHY it works! I wanted a function that would cycle 1,2,3 on each tap. First tap would return '1', second tap '2', third tap '3', then repeat this sequence on additional taps. Here is what I came up with after lots of trial, error and googling:</p>  <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-js lang-js prettyprint-override""><code>const cycler = {      current: -1,      cycle: function() {       if (cycler.current == 3) {        cycler.current = 0;       } else {        cycler.current++;       }       console.log(cycler.current);      } }  cycler.cycle() cycler.cycle() cycler.cycle() cycler.cycle() cycler.cycle()</code></pre> </div> </div> </p>  <p>On the tap event, I call cycler.cycle(); and it works...returning 1,2,3,1,2,3,etc. corresponding to my taps...but I don't understand why it doesn't just return 0 every time I tap. Why isn't 'current' being reset to '-1' every time I call this? How would I do something similar in python? How do I think about this? Thanks for any insight!</p>"	55084544	"<p>Your <code>cycler</code> is an object literal in javascript. It has a property, <code>current</code>, and a method, <code>cycle</code>. Calling the method does not re-create the object, it just runs the function.<br> As you know, the function simply increments the value of the <code>current</code> property (unless the current value is <code>3</code>, of course, in which case it resets the value to <code>0</code>.)</p>  <p>In python you might make a class that creates a counter object. Its constructor would contain code very similar to the object you created here.<br> If you keep making new instances from that class and call <code>.cycle</code> once on each instance, your log will contain a bunch of <code>0</code>s as you were expecting.<br> However, if you call <code>.cycle</code> on the same instance repeatedly, you'll get the behavior you found here.</p>"
55130720	How to load javascript values into python from web page?	javascript|python-3.x	2019-03-12 21:12:01.293000 UTC	"<p>When I inspect the code on a webpage, I can see the html and the javascript. I've used Beautiful Soup to import and parse the html, but there is a large section written in javascript, which pulls variables from a programmable logic controller (PLC). I can't find the data in python after I load and parse with Beautiful Soup - it's only the html code. </p>  <p>The PLC is being read directly by the webpage and I see the live values updating in front of me, but I can't import them directly. The screen shot is what the code looks like from the inspect window. Let's say I want to import that variable <code>id=""aout7""</code> with attribute <code>class=""on""</code>, how can I do that?</p>  <p><a href=""https://i.stack.imgur.com/ZvBS9.jpg"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/ZvBS9.jpg"" alt=""Inspect View Source of webpage""></a></p>"	55130988	"<p>Webpages are best run in a browser. There are API-s for remote controlling a browser/browser engine, a popular one is <a href=""https://www.seleniumhq.org"" rel=""nofollow noreferrer"">Selenium</a>, and it has Python bindings: see <a href=""https://pypi.org/project/selenium/"" rel=""nofollow noreferrer"">https://pypi.org/project/selenium/</a> - the page contains instructions for installing:</p>  <pre><code>pip install -U selenium </code></pre>  <p>and some introductory examples, like this snippet issuing a Yahoo search:</p>  <pre><code>from selenium import webdriver from selenium.webdriver.common.keys import Keys  browser = webdriver.Firefox()  browser.get('http://www.yahoo.com') assert 'Yahoo' in browser.title  elem = browser.find_element_by_name('p')  # Find the search box elem.send_keys('seleniumhq' + Keys.RETURN)  browser.quit() </code></pre>  <p>You will need something similar, just with <code>find_element_by_id</code> (<a href=""https://selenium-python.readthedocs.io/locating-elements.html"" rel=""nofollow noreferrer"">https://selenium-python.readthedocs.io/locating-elements.html</a>), and use the <code>text</code> attribute of elements to read their content.</p>"
55147852	Click on Javascript Link using Selenium Python	python|selenium|web-crawler|selenium-chromedriver	2019-03-13 17:22:52.497000 UTC	"<p>I need to click on the ""Visualizar cruzeiros"" button on this site: <a href=""https://www.disneytravelcenter.com/MIN-000000000031063/sites++disney-cruise-line++cruises-destinations++alaska++view-sailings++view-sailings/"" rel=""nofollow noreferrer"">https://www.disneytravelcenter.com/MIN-000000000031063/sites++disney-cruise-line++cruises-destinations++alaska++view-sailings++view-sailings/</a></p>  <p>Unfortunately, I cannot do it by simply using:</p>  <p><code>visualizar = driver.find_element_by_css_selector('#jb-card-txt-blk-redirect-link-zone-' + zona + 'night-' + str(c)+ '.redirectLink')  visualizar.click()</code></p>  <p>Or using: </p>  <pre><code>visualizar= driver.find_element_by_class_name('redirectLink') visualizar.click() </code></pre>  <p>Or using: </p>  <pre><code>visualizar= driver.find_element_by_xpath('//*[@id=""jb-card-txt-blk-redirect-link-zone-' + zona + 'night-' + str(c) +'""]') visualizar.click() </code></pre>  <p>How am I supposed to click on this button then?</p>  <p>OBS: The ""zona"" and str(c) are loop variables, but they don't change the result of the code, actually.</p>"	55148263	"<p>Have you tried using xpath <code>//a[contains(text(),'Visualizar cruzeiros')</code>? This should return more than one element, you need to get the second one.<br> Try to write a test case with selenium IDE, it may give you a hint how to access the element.</p>"
55147852	Click on Javascript Link using Selenium Python	python|selenium|web-crawler|selenium-chromedriver	2019-03-13 17:22:52.497000 UTC	"<p>I need to click on the ""Visualizar cruzeiros"" button on this site: <a href=""https://www.disneytravelcenter.com/MIN-000000000031063/sites++disney-cruise-line++cruises-destinations++alaska++view-sailings++view-sailings/"" rel=""nofollow noreferrer"">https://www.disneytravelcenter.com/MIN-000000000031063/sites++disney-cruise-line++cruises-destinations++alaska++view-sailings++view-sailings/</a></p>  <p>Unfortunately, I cannot do it by simply using:</p>  <p><code>visualizar = driver.find_element_by_css_selector('#jb-card-txt-blk-redirect-link-zone-' + zona + 'night-' + str(c)+ '.redirectLink')  visualizar.click()</code></p>  <p>Or using: </p>  <pre><code>visualizar= driver.find_element_by_class_name('redirectLink') visualizar.click() </code></pre>  <p>Or using: </p>  <pre><code>visualizar= driver.find_element_by_xpath('//*[@id=""jb-card-txt-blk-redirect-link-zone-' + zona + 'night-' + str(c) +'""]') visualizar.click() </code></pre>  <p>How am I supposed to click on this button then?</p>  <p>OBS: The ""zona"" and str(c) are loop variables, but they don't change the result of the code, actually.</p>"	55151431	"<p>Found out the answer to my problem:</p>  <pre><code>button = driver.find_elements_by_xpath('//*[@id=""jb-card-txt-blk-redirect-link-zone-' + zona + 'night-' + str(c) + '""]')[2] button.click() </code></pre>"
55153335	Python requests: post javascript commands	javascript|python|python-3.x|web-scraping|python-requests	2019-03-14 00:53:30.043000 UTC	"<p>So, I'm trying to get the content of a site, but this content only appear when I click the 'Chart' link, wich is a javascript command like this:</p>  <pre><code>javascript:__doPostBack(&amp;#39;fcc1$dgrC$ctl02$ctl00&amp;#39;,&amp;#39;&amp;#39; </code></pre>  <p>from a element like this:</p>  <pre><code>&lt;a href=""javascript:__doPostBack(&amp;#39;fcc1$dgrC$ctl02$ctl00&amp;#39;,&amp;#39;&amp;#39;)""&gt;Chart&lt;/a&gt; </code></pre>  <p>This is the site:</p>  <p><a href=""https://i.stack.imgur.com/AP8cB.png"" rel=""nofollow noreferrer"">enter image description here</a></p>  <p>And this is what happens when you click on 'Chart':</p>  <p><a href=""https://i.stack.imgur.com/fKdMi.png"" rel=""nofollow noreferrer"">enter image description here</a></p>  <p>You can see that the link doesnt changes, so the only way to get the chart code is by somehow send that javascript command</p>  <p>How to find all the chart links? How can I do a 'virtual click' on the chart links? And after that, how to get the new html?</p>  <p>I really appreciate your help!</p>"	55153408	"<p>If those links are indeed ""clicked"" by javascript listeners, you may have trouble finding a real link to click. </p>  <p>Instead, you could use a tool to simulate a web browser in python and ""click"" on that link to get to the next page. The best one I've used is Mechanical Soup: <a href=""https://mechanicalsoup.readthedocs.io/en/stable/introduction.html"" rel=""nofollow noreferrer"">https://mechanicalsoup.readthedocs.io/en/stable/introduction.html</a>. </p>"
55153335	Python requests: post javascript commands	javascript|python|python-3.x|web-scraping|python-requests	2019-03-14 00:53:30.043000 UTC	"<p>So, I'm trying to get the content of a site, but this content only appear when I click the 'Chart' link, wich is a javascript command like this:</p>  <pre><code>javascript:__doPostBack(&amp;#39;fcc1$dgrC$ctl02$ctl00&amp;#39;,&amp;#39;&amp;#39; </code></pre>  <p>from a element like this:</p>  <pre><code>&lt;a href=""javascript:__doPostBack(&amp;#39;fcc1$dgrC$ctl02$ctl00&amp;#39;,&amp;#39;&amp;#39;)""&gt;Chart&lt;/a&gt; </code></pre>  <p>This is the site:</p>  <p><a href=""https://i.stack.imgur.com/AP8cB.png"" rel=""nofollow noreferrer"">enter image description here</a></p>  <p>And this is what happens when you click on 'Chart':</p>  <p><a href=""https://i.stack.imgur.com/fKdMi.png"" rel=""nofollow noreferrer"">enter image description here</a></p>  <p>You can see that the link doesnt changes, so the only way to get the chart code is by somehow send that javascript command</p>  <p>How to find all the chart links? How can I do a 'virtual click' on the chart links? And after that, how to get the new html?</p>  <p>I really appreciate your help!</p>"	55153541	<p>doPostBack just sets the __EVENTTARGET and __EVENTARGUMENT form fields and submits the form. Those &#39;'s are just quotes BTW.</p>
55165036	javascript keeps returning NaN% from python var	javascript|python|flask|justgage	2019-03-14 14:27:29.030000 UTC	"<p>I have a flask app that I am working on. I'm using a js gauge system and I want the value to be a variable that I scrape off of a web page. I scrape the page just fine and return the values I want but when I give that value to the script it returns NaN%. I can cal the variable in the html section just fine.</p>  <p><strong>JS Snippet</strong></p>  <pre><code> var g2 = new JustGage({         id: 'g2',         value: '{{a0}}',         min: 0,         max: 100,         symbol: '%',         pointer: true,         pointerOptions: {           toplength: -15,           bottomlength: 10,           bottomwidth: 12,           color: '#8e8e93',           stroke: '#ffffff',           stroke_width: 3,           stroke_linecap: 'round'         },         gaugeWidthScale: 1,         counter: true       }); </code></pre>  <p><strong>Flask Part</strong></p>  <pre><code>g_data = ast.literal_eval(soup.get_text()) a0 = g_data['ainputs'][3:8] a1 = g_data['ainputs'][12:17] a2 = g_data['ainputs'][21:26] a3 = g_data['ainputs'][30:35] a4 = g_data['ainputs'][39:45] </code></pre>  <p>Now I have tried to use float and int on the variable, but neither one returns anything besides NaN%. If I put the variable in the value spot without quotes, none of the gauges display anything.</p>"	55171210	<p>Apparently I wasn't passing the variables to the right view. I am sorry. Just using <code>{{a0}}</code> works now.</p>
55178483	"Python requests module giving ""Please enable JavaScript to view the page content"" on local but working on AMI and Heroku server"	javascript|python|web-scraping|python-requests	2019-03-15 08:32:59.537000 UTC	"<pre><code>import requests r = requests.get('https://my.cigna.com') print(r.text) </code></pre>  <p>When I run the above code on the local system It gives me below response(check last line)</p>  <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-html lang-html prettyprint-override""><code>&lt;!DOCTYPE html&gt;\r\n&lt;html&gt;&lt;head&gt;\r\n&lt;meta http-equiv=""Pragma"" content=""no-cache""/&gt;\r\n&lt;meta http-equiv=""Expires"" content=""-1""/&gt;\r\n&lt;meta http-equiv=""C acheControl"" content=""no-cache""/&gt;\r\n&lt;meta http-equiv=""Content-Type"" content=""text/html; charset=utf-8""/&gt;\r\n&lt;link rel=""shortcut icon"" href=""data:;bas e64,iVBORw0KGgo=""/&gt;\r\n\r\n&lt;script&gt;\r\n\r\n(function(){\r\nwindow[""bobcmn""] = ""11111110101010200000005200000005200000000251c47c46200000096300000000300 000000300000006/TSPD/300000008TSPD_101300000005https3000000b00832d38fa5ab2000bef1c6292d5d65850e93300734653e4ce2c59efe6632d24f66fbd7d1f0f1f7e1082c3139f f0a2800873fd1b935f9eeef417fa5c01bffa575ead6603ec35dcc40233cad0a332514761bee131cffbe1575200000000200000000"";\r\n\r\nwindow.Cus=!!window.Cus;try{(functi on(){(function(){var z={decrypt:function(z){try{return JSON.parse(function(z){z=z.split(""l"");var s="""";for(var _=0;_&lt;z.length;++_)s+=String.fromCharCod e(z[_]);return s}(z))}catch(_){}}};return z={configuration:z.decrypt(""123l34l97l99l116l105l118l101l34l58l34l110l111l34l44l34l100l101l98l117l103l103l10 5l110l103l34l58l34l110l111l34l44l34l109l111l100l117l108l101l49l34l58l34l101l110l97l98l108l101l100l34l44l34l109l111l100l117l108l101l50l34l58l34l101l110 l97l98l108l101l100l34l44l34l109l111l100l117l108l101l51l34l58l34l101l110l97l98l108l101l100l34l44l34l109l111l100l117l108l101l52l34l58l34l101l110l97l98l1 08l101l100l34l125"")}})();\nvar Sz=44;try{var Iz,Jz,Lz=Z(118)?1:0,zZ=Z(358)?1:0,ZZ=Z(706)?0:1,sZ=Z(440)?1:0,SZ=Z(844)?0:1;for(var lZ=(Z(87),0);lZ&lt;Jz;++ lZ)Lz+=(Z(870),2),zZ+=Z(279)?2:1,ZZ+=(Z(127),2),sZ+=Z(732)?1:2,SZ+=Z(198)?3:2;Iz=Lz+zZ+ZZ+sZ+SZ;window.zz===Iz&amp;&amp;(window.zz=++Iz)}catch(zs){window.zz=I z}var Ss=!0;function S(z,s){z+=s;return z.toString(36)}\nfunction _s(z){var s=93;!z||document[I(s,211,198,208,198,191,198,201,198,209,214,176,209,190, 209,194)]&amp;&amp;document[J(s,211,198,208,198,191,198,201,198,209,214,176,209,190,209,194)]!==S(68616527573,s)||(Ss=!1);return Ss}function Is(){}_s(window[I s[S(1086810,Sz)]]===Is);_s(typeof ie9rgb4!==S(1242178186155,Sz));_s(RegExp(""\\x3c"")[S(1372161,Sz)](function(){return""\\x3c""})&amp;!RegExp(S(42845,Sz))[S(1 372161,Sz)](function(){return""\'x3\'+\'d\';""}));\nvar js=window[J(Sz,141,160,160,141,143,148,113,162,145,154,160)]||RegExp(I(Sz,153,155,142,149,168,14 1,154,144,158,155,149,144),J(Sz,149))[S(1372161,Sz)](window[""\\x6e\\x61vi\\x67a\\x74\\x6f\\x72""][""\\x75\\x73e\\x72A\\x67\\x65\\x6et""]),Js=+new Date+(Z (476)?6E5:537525),zS,ZS,_S,IS=window[J(Sz,159,145,160,128,149,153,145,155,161,160)],jS=js?Z(845)?23770:3E4:Z(731)?6069:6E3;\ndocument[I(Sz,141,144,144 ,113,162,145,154,160,120,149,159,160,145,154,145,158)]&amp;&amp;document[I(Sz,141,144,144,113,162,145,154,160,120,149,159,160,145,154,145,158)](I(Sz,162,149,1 59,149,142,149,152,149,160,165,143,148,141,154,147,145),function(z){var s=15;document[I(s,133,120,130,120,113,120,123,120,131,136,98,131,112,131,116)] &amp;&amp;(document[I(s,133,120,130,120,113,120,123,120,131,136,98,131,112,131,116)]===S(1058781968,s)&amp;&amp;z[J(s,120,130,99,129,132,130,131,116,115)]?_S=!0:docum ent[J(s,133,120,130,120,113,\n120,123,120,131,136,98,131,112,131,116)]===S(68616527651,s)&amp;&amp;(zS=+new Date,_S=!1,JS()))});function JS(){if(!document[J(6 7,180,184,168,181,188,150,168,175,168,166,183,178,181)])return!0;var z=+new Date;if(z&gt;Js&amp;&amp;(Z(175)?6E5:391380)&gt;z-zS)return _s(!1);var s=_s(ZS&amp;&amp;!_S&amp;&amp;zS+ jS&lt;z);zS=z;ZS||(ZS=!0,IS(function(){ZS=!1},Z(22)?1:0));return s}JS();var LS=[Z(100)?17795081:12388952,Z(902)?2147483647:27611931586,Z(659)?2147483647: 1558153217];\nfunction I(z){var s=arguments.length,_=[];for(var L=1;L&lt;s;++L)_.push(arguments[L]-z);return String.fromCharCode.apply(String,_)}function  oS(z){var s=73;z=typeof z===S(1743045603,s)?z:z[J(s,189,184,156,189,187,178,183,176)](Z(681)?21:36);var _=window[z];if(!_[I(s,189,184,156,189,187,178 ,183,176)])return;var L=""""+_;window[z]=function(z,s){ZS=!1;return _(z,s)};window[z][J(s,189,184,156,189,187,178,183,176)]=function(){return L}}for(var  z_=(Z(30),0);z_&lt;LS[S(1294399161,Sz)];++z_)oS(LS[z_]);\n_s(!1!==window[J(Sz,111,161,159)]);window.OZ={ss:""080c2c1eda01800069124f1b5a83fc96fafe0a0dbc83 e2e583cf1f4bc9a341edae4a30a47d7c4b3813be508797f9bc851524c4d9baf10876ef1f1078d2e9eb2e566dd9b7b6a562958391630c37574b49bfc5623b576c20cd27c302ee516a176224 f2fbb00a43bff05b8edd78ac57568a9b648b2973acfc228913dee8be06ecf802d0499c07d98d5d""};function J(z){var s=arguments.length,_=[],L=1;while(L&lt;s)_[L-1]=argume nts[L++]-z;return String.fromCharCode.apply(String,_)}function s_(z){var s=+new Date,_;!document[I(99,212,216,200,213,220,182,200,207,200,198,215,210, 213,164,207,207)]||s&gt;Js&amp;&amp;(Z(129)?6E5:494155)&gt;s-zS?_=_s(!1):(_=_s(ZS&amp;&amp;!_S&amp;&amp;zS+jS&lt;s),zS=s,ZS||(ZS=!0,IS(function(){ZS=!1},Z(173)?1:0)));return!(argument s[z]^_)}function Z(z){return 481&gt;z}\n(function i_(s){s&amp;&amp;""number""!==typeof s||(""number""!==typeof s&amp;&amp;(s=1E3),s=Math.max(s,1),setInterval(function(){i_(s -10)},s))})(!0);})();}catch(x){\n}finally{ie9rgb4=void(0);};function ie9rgb4(a,b){return a&gt;&gt;b&gt;&gt;0};\n\r\n})();\r\n\r\n&lt;/script&gt;\r\n\r\n&lt;script type=""te xt/javascript"" src=""/TSPD/0832d38fa5ab2000c3e644a33889f1e28c37ed3e7e11517eab4ec9c87769bb4e4892f69070fe1752?type=10""&gt;&lt;/script&gt;\r\n&lt;noscript&gt;Please enab le JavaScript to view the page content.&lt;br/&gt;Your support ID is: 11583418831671342532.&lt;/noscript&gt;\r\n&lt;/head&gt;&lt;body&gt;\r\n&lt;/body&gt;&lt;/html&gt;</code></pre> </div> </div>  </p>  <p>but when I run it on my <code>Heroku</code> or <code>AMI</code> server it works fine and gives </p>  <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-html lang-html prettyprint-override""><code>&lt;!DOCTYPE HTML PUBLIC ""-//IETF//DTD HTML//EN""&gt; &lt;HTML&gt; &lt;HEAD&gt; &lt;meta http-equiv=""Content-Type"" content=""text/html; charset=UTF-8""&gt; &lt;TITLE&gt;&lt;/TITLE&gt; &lt;script&gt;  var bizrouter_uri = ""/rte/public/validatetoken"";  function getQueryStringValue (key) {   return unescape(window.location.search.replace(new RegExp(""^(?:.*[&amp;\\?]"" + escape(key).replace(/[\.\+\*]/g, ""\\$&amp;"") + ""(?:\\=([^&amp;]*))?)?.*$"",  ""i""), ""$1"")); }  function setCookie(cname, cvalue, exhours) {     var d = new Date();     d.setTime(d.getTime() + (exhours*60*60*1000));     var expires = ""expires=""+d.toGMTString();     var cook = cname + ""="" + cvalue + "";"" + expires + "";path=/"";     document.cookie = cook;     //document.cookie = cname + ""="" + cvalue + ""; "" + expires + ""; domain="" + document.domain + ""; path=/""; }  function postForm() {   var myToken = getQueryStringValue(""token"");    //create the Token text cookie   if (myToken) {     setCookie(""HW_TOKEN_TEXT"", myToken, 1);     document.webseal.action = bizrouter_uri;     document.webseal.token.value = myToken;   } else {     setCookie(""HW_TOKEN_TEXT"", """", 0);   }   setCookie(""HW_TOKEN_DNS"", window.location.protocol  + ""//"" + document.domain, 1);     document.webseal.submit(); }  &lt;/script&gt; &lt;/HEAD&gt; &lt;body onLoad=""postForm();""&gt;                              &lt;form name=""webseal"" method=""post"" action=""/web/public/guest"" &gt;                      &lt;input type=""hidden"" name=""token"" value=""default"" /&gt;                 &lt;/form&gt; &lt;/HTML&gt;</code></pre> </div> </div> </p>  <p>Not able to figure out, how to run it on local system. Any help will appreciable.</p>  <p>NOTE: This is not regarding to ""how to scrape JS content/how to scrape website with JS enabled"". This is for if it is working on AMI and Heroku then why not working on local system</p>"	55407692	"<p>First of all, the response payload indicated the there is a F5 load-balancer between you and the web server '<a href=""https://my.cigna.com"" rel=""nofollow noreferrer"">https://my.cigna.com</a>'. Because this is a known signature from F5: </p>  <pre><code>Please enable JavaScript to view the page content.&lt;br/&gt;Your support ID is:  11583418831671342532. </code></pre>  <p>Secondary, there is a way to bypass it by using a Javascript capable http client, such as Selenium + Chrome, as indicated by @Maaz:</p>  <pre><code>import time  from selenium import webdriver import selenium.webdriver.chrome.service as service  service = service.Service('/path/to/chromedriver') service.start() capabilities = {'chrome.binary': '/path/to/custom/chrome'} driver = webdriver.Remote(service.service_url, capabilities) driver.get('http://www.google.com/xhtml'); time.sleep(5) # Let the user actually see something! driver.quit() </code></pre>  <p>For implementation explanation, you can refer to this page:  <a href=""http://chromedriver.chromium.org/getting-started"" rel=""nofollow noreferrer"">http://chromedriver.chromium.org/getting-started</a></p>"
55179435	"flask python,javascript variable issue?"	javascript|python|flask|jinja2	2019-03-15 09:31:53.370000 UTC	"<p>my flask code section that have issue <strong>main.py</strong>   </p>  <pre><code>from flask import Flask, render_template, url_for import pandas as pd  import json  app = Flask(__name__)   @app.route('/') def home():     df = pd.read_csv('test.csv')     df = df.groupby('name')['marks'].sum()     j = df.to_json(orient='index')     return render_template(""work.html"",s=j)  if __name__ == ""__main__"":     app.run(debug=True) </code></pre>  <p>and i want to pass j into my javascript file that is look like that <strong>work.js</strong></p>  <pre><code>//pie chart var s = {{ j|safe }}; var keys = [];    for(var k in s) keys.push(k); var value = [];    for (var k in s) value.push(s[k]);  var data = [{   values: value,   labels: keys,   type: 'pie' }];  var layout = {   height: 400,   width: 500 }; Plotly.newPlot('myDiv1', data); </code></pre>  <p><strong>work.html</strong></p>  <pre><code>&lt;html&gt;         &lt;head&gt;         &lt;meta http-equiv=""content-type"" content=""text/html; charset=UTF-8"" /&gt;         &lt;script src=""https://cdn.plot.ly/plotly-latest.min.js""&gt;&lt;/script&gt;         &lt;link rel=""stylesheet"" type=""text/css"" href=""styles.css""&gt;         &lt;/head&gt;         &lt;body&gt;         &lt;div class=""navbar""&gt;&lt;span&gt;data representation with Plotly.js&lt;/span&gt;&lt;/div&gt;          &lt;div class=""wrapper""&gt;             &lt;div id=""myDiv1""&gt;&lt;/div&gt;             &lt;script type=""text/javascript"" src={{ url_for('static', filename='work.js')}}&gt;              &lt;/script&gt;         &lt;/div&gt;         &lt;/body&gt; &lt;/html&gt; </code></pre>  <p>how to pass j variable in flask to s variable in javascript file that render with html page and show right content or say that no graph shown Thank you</p>"	55179608	"<p>You can't do that. You have to return that json in your flask method and make an <a href=""http://api.jquery.com/jquery.ajax/"" rel=""nofollow noreferrer"">ajax request</a> from javascript.</p>  <pre><code>from flask import jsonify  @app.route('/') def home():     j = df.to_json(orient='index')     return jsonify(j) </code></pre>  <p>I don't know if flask has something like <code>JsonResponse</code> as django has. If yes you should use that like: <code>return JsonResponse(j)</code></p>  <pre><code>$.ajax({url: ""your_url"", success: function(result){     //result is what you returned from flask }}); </code></pre>"
55305327	Convert Javascript RegEx.exec which returns group matches to Python	javascript|regex|python-3.x	2019-03-22 17:55:42.290000 UTC	"<p>I have this representative code in Javascript:</p>  <pre><code>    NameRegEx = /\w+ \w+ ("".*?""|\S+) ("".*?""|\S+)/;     term = NameRegEx.exec(""add cmd item configname AAA 10.0.0.1 80 -option NONE -option2 YES -Option3 180""); </code></pre>  <p>This works and ""term"" is an array that contains: </p>  <pre><code>0: ""add cmd item configname"" 1: ""item"" 2: ""configname"" </code></pre>  <p>I haven't been able to find an equivalent to the exec function in Python, and would appreciate some assistance! I have a number of similar RegEx commands I also need to convert, so I need a close Python alternative.</p>  <p>EDIT: This is NOT the same as the linked duplicates as they did not address the fact of how the values returned were different. However Pushpesh Kumar Rajwanshi's addressed that issue with the below modification to the regex and below explanation:</p>  <pre><code>s = 'add cmd item configname AAA 10.0.0.1 80 -option NONE -option2 YES -Option3 180' arr = [s for s in re.findall(r'(\w+ \w+ ("".*?""|\S+) ("".*?""|\S+))',s)[0]] print(arr) </code></pre>  <p>Yes, that additional parenthesis was needed because you wanted full string to be captured as well in the array results. Otherwise findall just includes the results for ONLY groups and in case there is no group then whole match. </p>  <p>Reopened, because questions, linked as duplicates, do not fully address the problem.</p>"	55312788	"<p>Firstly, thank you everyone who all agreed that this post should be reopened as linked posts didn't help OP for what he was looking for.</p>  <p>And while answering, my primary intention was to keep the solution close to <code>exec</code> function call in JS (and not the performance which of course would be better for <code>search</code> rather than <code>findall</code> as the later does more work than needed but uses only first element in array), and as <code>exec</code> function in JS returns an array of results, a similar function in Python that returned results like array was <code>findall</code>.</p>  <p>Just like OP's regex <code>/\w+ \w+ ("".*?""|\S+) ("".*?""|\S+)/</code> in JS didn't had global flag ON, which means he was only interested in the first match only, I used first element <code>[0]</code> of <code>findall</code> result where my Python code solution was this,</p>  <pre><code>import re s = 'add cmd item configname AAA 10.0.0.1 80 -option NONE -option2 YES -Option3 180' arr = [s for s in re.findall(r'(\w+ \w+ ("".*?""|\S+) ("".*?""|\S+))', s)[0]] print(arr) </code></pre>  <p>Which printed,</p>  <pre><code>['add cmd item configname', 'item', 'configname'] </code></pre>  <p>But the same can also be achieved by <code>search</code> function too and since it searches iteratively one by one, hence it will be better than <code>findall</code> since <code>findall</code> finds all possible results by scanning whole string in one operation unlike <code>search</code> but uses only first by accessing first element in array. Hence posting a solution using <code>search</code> function too similar to <code>findall</code> which can also be used by OP and will perform better as this will only look for first match only. Since <code>groups()</code> returns a tuple but OP wanted an array, hence this code is needed so OP can get the results in array exactly as he wanted as returned by <code>exec</code> method in JS.</p>  <pre><code>import re s = 'add cmd item configname AAA 10.0.0.1 80 -option NONE -option2 YES -Option3 180' m = re.search(r'(\w+ \w+ ("".*?""|\S+) ("".*?""|\S+))', s) if (m):  arr = [s for s in m.groups()]  print(arr) </code></pre>  <p>Prints,</p>  <pre><code>['add cmd item configname', 'item', 'configname'] </code></pre>  <p>But yes, one change was needed in the regex from JS that enclose the whole regex into an extra parenthesis without which it would have not given the results OP was looking for.</p>  <p>You can actually create a function <code>exec</code> in Python to mimic it from JS somewhat like this,</p>  <pre><code>import re  def exec(regex, s):  m = re.search(regex, s)  if (m):   return [s for s in m.groups()]   arr = exec(r'(\w+ \w+ ("".*?""|\S+) ("".*?""|\S+))', 'add cmd item configname AAA 10.0.0.1 80 -option NONE -option2 YES -Option3 180') print(arr) </code></pre>  <p>Which also gives same output and is reusable hence good way of doing things,</p>  <pre><code>['add cmd item configname', 'item', 'configname'] </code></pre>  <p>At last, I am glad that through a healthy debate through comments, OP could get a working solution for the problem.</p>  <p>If you face any issues anytime or have any queries, please feel free to let me know.</p>"
55318862	How to convert javascript array to a python dictionary	javascript|arrays|python-2.7|flask	2019-03-23 22:11:53.583000 UTC	"<p>I want to try to make a little webserver where you can put location data into a database using a grid system in Javascript. I've found a setup that I really liked and maked an example in CodePen: <a href=""https://codepen.io/anon/pen/XGxEaj"" rel=""nofollow noreferrer"">https://codepen.io/anon/pen/XGxEaj</a>. A user can click in a grid to point out the location. In the console log I see the data that is generated as output. For every cell in the grid it has a dictionary that looks like this:</p>  <pre class=""lang-js prettyprint-override""><code>click: 4 height: 50 width: 50 x: 1 xnum: 1 y: 1 ynum: 1 </code></pre>  <p>A complete overview of output data looks like this, where their are 10 arrays for every row, 10 arrays for every column of that row, and then a dictionary with the values: <a href=""https://i.stack.imgur.com/IkYP3.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/IkYP3.png"" alt=""enter image description here""></a></p>  <p>Now i want to get this information back to python in a dictionary as well, so i can store particular information in a database. But I can't figure out what the best way is to do that. Hopefully you could provide a little push in the right direction, links to usefull pages or code snippets to guide me. </p>  <p>Thanks for any help in advance! </p>"	55319063	"<p>You should use the python <a href=""https://docs.python.org/3/library/json.html"" rel=""nofollow noreferrer"">json</a> module.</p> <p>Here is how you can perform such operation using the module.</p> <pre><code>import json json_data = '{&quot;a&quot;: 1, &quot;b&quot;: 2, &quot;c&quot;: 3, &quot;d&quot;: 4, &quot;e&quot;: 5}' loaded_json = json.loads(json_data) </code></pre>"
55318862	How to convert javascript array to a python dictionary	javascript|arrays|python-2.7|flask	2019-03-23 22:11:53.583000 UTC	"<p>I want to try to make a little webserver where you can put location data into a database using a grid system in Javascript. I've found a setup that I really liked and maked an example in CodePen: <a href=""https://codepen.io/anon/pen/XGxEaj"" rel=""nofollow noreferrer"">https://codepen.io/anon/pen/XGxEaj</a>. A user can click in a grid to point out the location. In the console log I see the data that is generated as output. For every cell in the grid it has a dictionary that looks like this:</p>  <pre class=""lang-js prettyprint-override""><code>click: 4 height: 50 width: 50 x: 1 xnum: 1 y: 1 ynum: 1 </code></pre>  <p>A complete overview of output data looks like this, where their are 10 arrays for every row, 10 arrays for every column of that row, and then a dictionary with the values: <a href=""https://i.stack.imgur.com/IkYP3.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/IkYP3.png"" alt=""enter image description here""></a></p>  <p>Now i want to get this information back to python in a dictionary as well, so i can store particular information in a database. But I can't figure out what the best way is to do that. Hopefully you could provide a little push in the right direction, links to usefull pages or code snippets to guide me. </p>  <p>Thanks for any help in advance! </p>"	55319101	"<p>This can be achieved by converting your JS object into JSON:</p>  <pre><code>var json = JSON.stringify(myJsObj); </code></pre>  <p>And then converting your Python object to JSON:</p>  <pre><code>import json myPythonObj = json.loads(json) </code></pre>  <p>More information about the JSON package for Python can be found <a href=""https://www.w3schools.com/python/python_json.asp"" rel=""nofollow noreferrer"">here</a> and more information about converting JS objects to and from JSON can be found <a href=""https://www.w3schools.com/js/js_json_intro.asp"" rel=""nofollow noreferrer"">here</a></p>"
55361795	How to scroll a webpage using selenium webdriver in Python without using javascript method execute_script()	python-3.x|selenium|selenium-webdriver|scroll|webdriver	2019-03-26 16:19:00.157000 UTC	"<p>I am trying to scroll a web page by using mouse and scroll bar. I am exploring any other option than</p>  <pre><code>""driver.execute_script(""window.scrollBy(0, 5000'))"" </code></pre>  <p>I did try options like chrome actions, however nothing seems to be working. Would need some guidance if anyone has any idea how to solve this. </p>"	55587059	"<p>If your <em>usecase</em> is to <code>scroll()</code> the <a href=""https://developer.mozilla.org/en-US/docs/Web/API/Window"" rel=""nofollow noreferrer"">window containing the DOM document</a>, there is no better way other then using the either of the following <a href=""https://developer.mozilla.org/en-US/docs/Web/API/Window#Methods"" rel=""nofollow noreferrer"">Window Methods</a>:</p>  <ul> <li><a href=""https://developer.mozilla.org/en-US/docs/Web/API/Window/scrollBy"" rel=""nofollow noreferrer"">Window.scrollBy()</a></li> <li><a href=""https://developer.mozilla.org/en-US/docs/Web/API/Window/scrollTo"" rel=""nofollow noreferrer"">Window.scrollTo()</a></li> </ul>  <p>If your <em>usecase</em> is to <code>scroll()</code> an <a href=""https://developer.mozilla.org/en-US/docs/Web/API/Element"" rel=""nofollow noreferrer"">Element</a> there is no better way other then using the <a href=""https://developer.mozilla.org/en-US/docs/Web/API/Element#Methods"" rel=""nofollow noreferrer"">Element Method</a>:</p>  <ul> <li><a href=""https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollIntoView"" rel=""nofollow noreferrer"">Element.scrollIntoView()</a></li> </ul>  <blockquote>   <p>You can find a detailed discussion in <a href=""https://stackoverflow.com/questions/54681172/what-is-the-difference-between-the-different-scroll-options/54689339#54689339"">What is the difference between the different scroll options?</a></p> </blockquote>  <hr>  <p>However, if you want to avoid the <code>execute_script()</code> to interact with a <em>WebElement</em> you have two (2) other options available as follows:</p>  <ul> <li><p>Using <a href=""https://seleniumhq.github.io/selenium/docs/api/py/webdriver/selenium.webdriver.common.action_chains.html#selenium.webdriver.common.action_chains.ActionChains.move_to_element"" rel=""nofollow noreferrer"">move_to_element()</a> from <a href=""https://seleniumhq.github.io/selenium/docs/api/py/webdriver/selenium.webdriver.common.action_chains.html#module-selenium.webdriver.common.action_chains"" rel=""nofollow noreferrer"">selenium.webdriver.common.action_chains</a>. This method will automatically <em>scroll</em> the element within the <a href=""https://www.w3schools.com/css/css_rwd_viewport.asp"" rel=""nofollow noreferrer"">Viewport</a>.</p>  <ul> <li><p>Example code:</p>  <pre><code>menu = driver.find_element_by_css_selector("".nav"") hidden_submenu = driver.find_element_by_css_selector("".nav #submenu1"") ActionChains(driver).move_to_element(menu).click(hidden_submenu).perform() </code></pre></li> </ul></li> <li><p>Using <a href=""https://seleniumhq.github.io/selenium/docs/api/py/webdriver_support/selenium.webdriver.support.expected_conditions.html#selenium.webdriver.support.expected_conditions.element_to_be_clickable"" rel=""nofollow noreferrer"">element_to_be_clickable()</a> from <a href=""https://seleniumhq.github.io/selenium/docs/api/py/webdriver_support/selenium.webdriver.support.expected_conditions.html#module-selenium.webdriver.support.expected_conditions"" rel=""nofollow noreferrer"">selenium.webdriver.support.expected_conditions</a>. This <strong>expected_conditions</strong> when used in conjunction with <a href=""https://seleniumhq.github.io/selenium/docs/api/py/webdriver_support/selenium.webdriver.support.wait.html#module-selenium.webdriver.support.wait"" rel=""nofollow noreferrer"">selenium.webdriver.support.wait</a> will automatically <em>scroll</em> the element within the <a href=""https://www.w3schools.com/css/css_rwd_viewport.asp"" rel=""nofollow noreferrer"">Viewport</a>.</p>  <ul> <li><p>Example code:</p>  <pre><code>WebDriverWait(browser, 20).until(EC.element_to_be_clickable((By.LINK_TEXT, ""Cart""))).click() </code></pre></li> </ul></li> </ul>"
55395181	ERR_TOO_MANY_REDIRECTS error while trying to login through a webpage that uses frames and Javascript using Selenium and Python	javascript|python|selenium|iframe|web-scraping	2019-03-28 10:21:46.210000 UTC	"<p>I am trying to automate my login to a webpage to download a daily xml. I understand that I need to have the actual frame url I think is</p>  <p><a href=""http://shop.braintrust.gr/shop/store/customerauthenticateform.asp"" rel=""nofollow noreferrer"">http://shop.braintrust.gr/shop/store/customerauthenticateform.asp</a></p>  <p>I examine the form and the fields and I do the following</p>  <pre><code>browser = webdriver.Chrome('C:\\chromedriver.exe') browser.get('http://shop.braintrust.gr/shop/store/customerauthenticateform.asp') print('Browser Opened') username = browser.find_element_by_name('UserID') username.send_keys(email) password = browser.find_element_by_name('password') # time.sleep(2) password.send_keys(pwd) </code></pre>  <p>but I get a blank page saying that browser did a lot of redirections this means that it is impossible to login? How can I login? thank you</p>"	55395354	"<h2>ERR_TOO_MANY_REDIRECTS</h2>  <p><a href=""https://kinsta.com/blog/err_too_many_redirects/"" rel=""nofollow noreferrer"">ERR_TOO_MANY_REDIRECTS</a> (also known as a redirect loop) is one of the regular website errors. Typically this error occurs after a recent change to your website, a mis-configuration of redirects on your server or wrong settings with third-party services. </p>  <p>This error have <strong>no relation</strong> with <em>Selenium</em> as such and can be reproduced through <em>Manual Steps</em>.</p>  <p>The reason for <code>ERR_TOO_MANY_REDIRECTS</code> is that, something is causing your website to go into an <em>infinite redirection loop</em>. Essentially the site is stuck (such as <code>URL 1</code> points to <code>URL 2</code> and <code>URL 2</code> points back to <code>URL 1</code>, or the domain has redirected you too many times) and unlike some other errors, these rarely resolve themselves and will probably need you to take action to fix it. There are a couple different variations of this error depending upon the browser you’re running.</p>  <hr>  <h2>Solution</h2>  <p>Some common approach to check and fix the error as as follows:</p>  <ul> <li><a href=""https://kinsta.com/blog/err_too_many_redirects/#delete-cookies"" rel=""nofollow noreferrer"">Delete Cookies on That Specific Site</a>: Google and Mozilla both in fact recommends right below the error to <em><code>try clearing your cookies.</code></em> Cookies can sometimes contain faulty data in which could cause the ERR_TOO_MANY_REDIRECTS error. This is one recommendation you can try even if you’re encountering the error on a site you don’t own. Due to the fact that cookies retain your <em><strong>logged in</strong></em> status on sites and other settings, in these cases simply deleting the cookie(s) on the site that is having the problem. This way you won’t impact any of your other sessions or websites that you frequently visit.</li> <li><a href=""https://kinsta.com/blog/err_too_many_redirects/#clear-cache"" rel=""nofollow noreferrer"">Clear Browser Cache</a>: If you want to check and see if it might be your browser cache, without clearing your cache, you can always open up your browser in incognito mode. Or test another browser and see if you still see the <code>ERR_TOO_MANY_REDIRECTS</code> error.</li> <li><a href=""https://kinsta.com/blog/err_too_many_redirects/#nature-of-redirect-loop"" rel=""nofollow noreferrer"">Determine Nature of Redirect Loop</a>: If clearing the cache didn’t work, then you’ll want to see if you can determine the nature of the redirect loop. For example, if a site has a 301 redirect loop back to itself, which is causing a large chain of faulty redirects. You can follow all the redirects and determine whether or not its looping back to itself, or perhaps is an HTTP to HTTPS loop.</li> <li><a href=""https://kinsta.com/blog/err_too_many_redirects/#HTTPS-settings"" rel=""nofollow noreferrer"">Check Your HTTPS Settings</a>: Another thing to check is your HTTPS settings. A lot of times it is observed <code>ERR_TOO_MANY_REDIRECTS</code> occur when someone has just migrated their WordPress site to HTTPS and either didn’t finish or setup something incorrectly.</li> <li><a href=""https://kinsta.com/blog/err_too_many_redirects/#third-party-services"" rel=""nofollow noreferrer"">Check Third-Party Services</a>: <code>ERR_TOO_MANY_REDIRECTS</code> is also often commonly caused by reverse-proxy services such as Cloudflare. This usually happens when their Flexible SSL option is enabled and you already have an SSL certificate installed with your WordPress host. Why? Because, when flexible is selected, all requests to your hosting server are sent over HTTP. Your host server most likely already has a redirect in place from HTTP to HTTPS, and therefore a redirect loop occurs.</li> <li><a href=""https://kinsta.com/blog/err_too_many_redirects/#redirects-on-server"" rel=""nofollow noreferrer"">Check Redirects on Your Server</a>: Besides HTTP to HTTPS redirects on your server, it can be good to check and make sure there aren’t any additional redirects setup wrong. For example, one bad 301 redirect back to itself could take down your site. Usually, these are found in your server’s config files.</li> </ul>"
55424164	Web scraping for JavaScript contents using Python	javascript|python-3.x|web-scraping	2019-03-29 19:12:58.273000 UTC	"<p>I'm trying to get the data of 'SALES HISTORY' from <a href=""https://nonfungible.com/market/history/axieinfinity"" rel=""nofollow noreferrer"">here</a> .</p>  <p>Since the data is coming from JavaScript, I refereed to this <a href=""https://towardsdatascience.com/data-science-skills-web-scraping-javascript-using-python-97a29738353f"" rel=""nofollow noreferrer"">link</a> and tried to scrape the data. However when i run the below code, the new window doesn't show the web page properly.</p>  <p>I would be appreciated if you could advice how to get the data in this case.</p>  <pre><code># import libraries import urllib.request from bs4 import BeautifulSoup from selenium import webdriver import time import pandas as pd # specify the url urlpage = 'https://nonfungible.com/market/history/axieinfinity'  print(urlpage) # run Chrome webdriver from executable path of your choice driver = webdriver.Chrome(executable_path = r'C:\Users\trey\AppData\Local\Programs\Python\Python36\Scripts\chromedriver') </code></pre>  <p>I expect the output of the data set which contains Contract/Transaction hash/Seller/Buyer/Name/Birth Date columns.</p>"	55424300	"<p>You don't need to scrape the site to get the sales history data, as you can get it from their JSON API end-point.</p>  <p>Here's the link to the end-point from the web page you posted:</p>  <p><a href=""https://api.nonfungible.com/api/v3/project/list"" rel=""nofollow noreferrer"">https://api.nonfungible.com/api/v3/project/list</a></p>  <p>You can use Python JSON library to extract the data that you want. To find whether a site has a usable JSON API, use the network monitor from your browser developer console to find the XHR requests made to the site, and check if it contains the data you require. This would make more sense than scraping the HTML/JS.</p>"
55425271	Javascript flavor regex for identifying valid Python strings enclosed within triple quotes	javascript|python|regex|google-code-prettify	2019-03-29 20:45:23.863000 UTC	"<p>I'm trying to write a <a href=""https://quantumcomputing.meta.stackexchange.com/a/388/26"">Prettify-style syntax highlighter</a> for <a href=""https://qiskit.org/documentation/terra/index.html"" rel=""nofollow noreferrer"">Qiskit Terra</a> (which closely follows the Python syntax). Apparently, Prettify uses Javascript flavor regex. For instance, <code>/^\""(?:[^\""\\]|\\[\s\S])*(?:\""|$)/, null, '""'</code> is the regex corresponding to valid strings in <a href=""https://en.wikipedia.org/wiki/Q_Sharp"" rel=""nofollow noreferrer"">Q#</a>. Basically I'm trying to put together the equivalent regex expression for Python. </p>  <p>Now, I know that Python supports strings within triple quotes i.e. <code>'''&lt;string&gt;'''</code> and <code>""""""&lt;string&gt;""""""</code> are valid strings (this format is especially used for <a href=""https://en.wikipedia.org/wiki/Docstring"" rel=""nofollow noreferrer"">docstrings</a>). To deal with this case I wrote the corresponding <strong>capturing group</strong> as:</p>  <pre><code>(^\'{3}(?:[^\\]|\\[\s\S])*(?:\'{3}$)) </code></pre>  <p>Here is the <a href=""https://regex101.com/r/k4adk2/5"" rel=""nofollow noreferrer"">regex101 link</a>. </p>  <p>This <a href=""https://regex101.com/r/k4adk2/6"" rel=""nofollow noreferrer"">works okay</a> except in some cases like:</p>  <pre><code>''' 'This ""is"" my' &amp;&amp; ""first 'regex' sentence."" ''' &amp;&amp; ''' 'This ""is"" the second.' ''' </code></pre>  <p>Clearly here it should have considered <code>''' 'This ""is"" my' &amp;&amp; ""first 'regex' sentence."" '''</code> as one string and <code>''' 'This ""is"" the second.' '''</code> as another. But no, the regex I wrote groups together the whole thing as one string (check the <a href=""https://regex101.com/r/k4adk2/5"" rel=""nofollow noreferrer"">regex101 link</a>). That is, it doesn't conclude the string even when it encounters a <code>'''</code> (corresponding to the <code>'''</code> at the beginning). </p>  <p>How should I modify the regex <code>(^\'{3}(?:[^\\]|\\[\s\S])*(?:\'{3}$))</code> to take into account this case? I'm aware of this: <a href=""https://stackoverflow.com/questions/7124778/how-to-match-anything-up-until-this-sequence-of-characters-in-a-regular-expres"">How to match “anything up until this sequence of characters” in a regular expression?</a> but it doesn't quite answer my question, at least not directly. </p>"	55426436	"<p>I Don't know what else you want to use this for but the following regex does what you want with the example given with the MULTILINE flag on.</p>  <pre><code>My_search = re.findall(""(?:^\'{3})(.*)(?:\'{3})"", My_string, re.MULTILINE)  print(My_search[0]) print(My_search[1]) </code></pre>  <p>Output is,</p>  <pre><code>'This ""is"" my' &amp;&amp; ""first 'regex' sentence.""  'This ""is"" the second.'  </code></pre>  <p>You can also see it working here <a href=""https://regex101.com/r/k4adk2/11"" rel=""nofollow noreferrer"">https://regex101.com/r/k4adk2/11</a></p>"
55426945	How to use JavascriptExecutor instead of send_keys in Python selenium	python|selenium-webdriver|textarea|sendkeys	2019-03-30 00:13:50.820000 UTC	"<p>I have written a script in python using send_key to type some text in a textarea on this <a href=""http://www.bioinformatics.org/sms2/translate.html"" rel=""nofollow noreferrer"">webpage</a>. However, it is really slow to use send_key as my text is really chunky. </p>  <pre><code>from selenium import webdriver  text = ""gckugcgaygartty"" link_url =""http://www.bioinformatics.org/sms2/translate.html""  driver = webdriver.Chrome('chromedriver', chrome_options=options) driver.get(link_url)  driver.find_element_by_tag_name(""textarea"").clear() driver.find_element_by_tag_name(""textarea"").send_keys(""gckugcgaygartty"") </code></pre>  <p>I then tried to replace the send_keys with execute_script() like following but it didn't work (no errors but nothing changed on the webpage), could anyone give me some advice please?</p>  <pre><code>driver.execute_script(""document.getElementById('main_form').getElementsByTagName('textarea')[0].click()"")    driver.execute_script(""document.getElementById('main_form').getElementsByTagName('textarea')[0].setAttribute('value', 'gckugcgaygartty' )"") </code></pre>"	55428328	"<blockquote>   <p><strong>Modification</strong> : Changed setAttribute function with value property</p> </blockquote>  <p><strong>Use following Code :</strong> </p>  <pre><code>driver.execute_script(""document.getElementsByTagName('textarea')[0].value='your_lengthy_data'"") </code></pre>  <h1>OR</h1>  <pre><code>driver.execute_script(""document.getElementById('main_form').getElementsByTagName('textarea')[0].value='your_lengthy_data'"") </code></pre>"
55450788	Calling a python analytics library from javascript/React.js	javascript|python|ajax|flask	2019-04-01 08:24:25.427000 UTC	<p>I'm very new to writing java script code and and have recently joined a team that are building a website in React.js (in docker containers etc.). One of my roles is to create an analytics library in python that can be called to provide the data to be displayed. Can someone tell me what the best technology for doing this is?</p>  <p>I have been told that the best way is to use Flask but in other places on the web I have seen mention of AJAX. As I have no knowledge of either of these packages a push in the right direct would be really beneficial. At the moment the calls are likely to be synchronous calls but async updates are almost certainly going to come along at some point.</p>	55450831	"<p>You can use <code>Flask</code>, if your application is going to a small one. If you think your application / project is going to be a huge one, you can use use <code>Django</code> framework. </p>  <p>Both the Python Liraries support API / REST. For using REST with Flask you can refer <a href=""https://flask-restful.readthedocs.io/en/latest/"" rel=""nofollow noreferrer"">here</a> and <a href=""https://blog.miguelgrinberg.com/post/designing-a-restful-api-with-python-and-flask"" rel=""nofollow noreferrer"">here</a>. For using REST with Django you can refer <a href=""https://www.django-rest-framework.org/"" rel=""nofollow noreferrer"">here</a> </p>"
55465786	An example of compiling a python function to javascript	javascript|python	2019-04-02 01:42:38.687000 UTC	"<p>Let's suppose I have the following function:</p>  <pre><code>def hello():     print ""hello"" </code></pre>  <p>How would I use a program like <code>transcript</code> to translate this into valid javascript?</p>"	55465807	"<p>You can run it by using the following as per the documentation <a href=""https://www.transcrypt.org/docs/html/installation_use.html"" rel=""nofollow noreferrer"">here</a> :</p>  <pre><code>transcrypt -b hello.py </code></pre>  <p>However, this gives me a very odd output:</p>  <pre><code>export var hello=function(){print(""hello"")};hello(); </code></pre>  <p>I would expect it to give something like:</p>  <pre><code>console.log('hello') </code></pre>  <p>But this instead is opening up the Print dialogue?</p>"
55480924	How to enable javascript in selenium webdriver Chrome using python	javascript|python|selenium|google-chrome|selenium-webdriver	2019-04-02 17:58:36.510000 UTC	"<p>I am trying to open <a href=""https://www.guidestar.org/"" rel=""noreferrer"">https://www.guidestar.org/</a> using selenium webdriver but it is able to detect I am a bot. The email I received says that javascript was not enabled so they were blocking my IP address. Can anyone suggest a code to enable javascripts</p>  <pre><code>user_agent = 'Chrome/73.0.3683.86' username = os.getenv(""USERNAME"") userProfile = ""C:\\Users\\"" + username + ""\\AppData\\Local\\Google\\Chrome\\User Data\\Default"" options = webdriver.ChromeOptions() options.add_argument(f'user-agent={user_agent}') options.add_argument(""user-data-dir={}"".format(userProfile)) driver = webdriver.Chrome(chrome_options=options) driver.get(""http://www.guidestar.org"") </code></pre>  <p>I expected the website not to detect that I am a robot</p>"	55481435	"<p>As supputuri mentioned, add the following chrome option to your argument:</p>  <pre><code>options.add_argument(""javascript.enabled"", True) </code></pre>"
55480924	How to enable javascript in selenium webdriver Chrome using python	javascript|python|selenium|google-chrome|selenium-webdriver	2019-04-02 17:58:36.510000 UTC	"<p>I am trying to open <a href=""https://www.guidestar.org/"" rel=""noreferrer"">https://www.guidestar.org/</a> using selenium webdriver but it is able to detect I am a bot. The email I received says that javascript was not enabled so they were blocking my IP address. Can anyone suggest a code to enable javascripts</p>  <pre><code>user_agent = 'Chrome/73.0.3683.86' username = os.getenv(""USERNAME"") userProfile = ""C:\\Users\\"" + username + ""\\AppData\\Local\\Google\\Chrome\\User Data\\Default"" options = webdriver.ChromeOptions() options.add_argument(f'user-agent={user_agent}') options.add_argument(""user-data-dir={}"".format(userProfile)) driver = webdriver.Chrome(chrome_options=options) driver.get(""http://www.guidestar.org"") </code></pre>  <p>I expected the website not to detect that I am a robot</p>"	57482644	"<p>answers provided here won't work. instead, use</p>  <pre><code>    options.add_argument(""--enable-javascript"") </code></pre>"
55492695	javascript error: arguments[0].scrollIntoView is not a function using selenium on python	python|selenium|scroll	2019-04-03 10:16:15.137000 UTC	"<p>I'm using Selenium on python and I would like to scroll to an element to click on it. Everywhere I see that the rigth things to do to go directly to the element is to use :</p>  <pre><code>driver = webdriver.Chrome() driver.get(url) element = driver.find_elements_by_class_name('dg-button') driver.execute_script(""return arguments[0].scrollIntoView();"", element) </code></pre>  <p>But I have this error : ""javascript error: arguments[0].scrollIntoView is not a function"".</p>  <p>What to I do wrong ? Thanks</p>"	55492827	"<p>Please use the line of code mentioned below instead of the one you are using:</p>  <pre><code>driver.execute_script(""arguments[0].scrollIntoView();"", element) </code></pre>  <p><strong>Updated answer:</strong><br> You can also use <code>location_once_scrolled_into_view</code> it gives the coordinates of the element but it does scrolls the element into view as well. You can use it like:</p>  <pre><code>element = driver.find_elements_by_class_name('dg-button') element.location_once_scrolled_into_view </code></pre>"
55492695	javascript error: arguments[0].scrollIntoView is not a function using selenium on python	python|selenium|scroll	2019-04-03 10:16:15.137000 UTC	"<p>I'm using Selenium on python and I would like to scroll to an element to click on it. Everywhere I see that the rigth things to do to go directly to the element is to use :</p>  <pre><code>driver = webdriver.Chrome() driver.get(url) element = driver.find_elements_by_class_name('dg-button') driver.execute_script(""return arguments[0].scrollIntoView();"", element) </code></pre>  <p>But I have this error : ""javascript error: arguments[0].scrollIntoView is not a function"".</p>  <p>What to I do wrong ? Thanks</p>"	55493091	"<p><a href=""https://stackoverflow.com/questions/54681172/what-is-the-difference-between-the-different-scroll-options/54689339#54689339""><code>scrollIntoView()</code></a> is part of the DOM API and you need to run it on an <em>WebElement</em> but not on a <em>List</em> of <em>WebElement(s)</em>.</p>  <p>You need to change <code>find_element(s)</code> to <code>find_element</code>:</p>  <pre><code>element = driver.find_element_by_class_name('dg-button') driver.execute_script(""return arguments[0].scrollIntoView();"", element) </code></pre>"
55492695	javascript error: arguments[0].scrollIntoView is not a function using selenium on python	python|selenium|scroll	2019-04-03 10:16:15.137000 UTC	"<p>I'm using Selenium on python and I would like to scroll to an element to click on it. Everywhere I see that the rigth things to do to go directly to the element is to use :</p>  <pre><code>driver = webdriver.Chrome() driver.get(url) element = driver.find_elements_by_class_name('dg-button') driver.execute_script(""return arguments[0].scrollIntoView();"", element) </code></pre>  <p>But I have this error : ""javascript error: arguments[0].scrollIntoView is not a function"".</p>  <p>What to I do wrong ? Thanks</p>"	68439250	"<p>If you need to use it on a List of elements, than you can override it with Python, so you can navigate to the element that you want</p> <p>e.g. first element of a List</p> <pre><code>element = driver.find_elements_by_class_name('dg-button') driver.execute_script(&quot;return arguments[0].scrollIntoView();&quot;, element[0]) </code></pre> <p>e.g. last element of a List</p> <pre><code>element = driver.find_elements_by_class_name('dg-button') driver.execute_script(&quot;return arguments[0].scrollIntoView();&quot;, element[-1]) </code></pre> <p>Hope that it helps :)</p>"
55549164	"How to connect backend (python, flask) with frontend (html, css, javascript)"	javascript|python|post|flask|get	2019-04-06 12:41:47.407000 UTC	"<p>Info: for backend I'm using python with flask (for the moment it accepts http get methods) and for frontend I'm using html, css and javascript.</p>  <p>Problem: I'm trying to make a http request (first time I tried POST and then GET) but the browser did not allow me to do that: ""Access to XMLHttpRequest at 'localhost:5000/test' from origin 'null' has been blocked by CORS policy: Cross origin requests are only supported for protocol schemes: http, data, chrome, chrome-extension, https."".</p>  <p>What another choices do I have? (I would like some simple choices, it is just a homework).</p>  <p>I've tried to make http POST and GET request. I've read that I cannot make http request from browser. I've read that I need (for example) an apache server. - too complicated, I need something more simple. I've tried: <a href=""https://flask-cors.readthedocs.io/en/latest/"" rel=""nofollow noreferrer"">https://flask-cors.readthedocs.io/en/latest/</a></p>  <pre><code>document.getElementById(""btn"").addEventListener('click', add); function add() {     const url = ""localhost:5000/test"";     const http = new XMLHttpRequest();     http.open(""GET"", url);     http.send();     http.onreadystatechange=(e)=&gt; {         console.log(http.responseText)     } } </code></pre>  <pre><code>from flask import Flask from flask_cors import CORS from flask import request from flask import jsonify import json import mysql.connector import random import string import time  time.sleep(3) app = Flask(__name__)  @app.route(""/test"") def test():     return ""It's working""   if __name__ == ""__main__"":     app.run(host='0.0.0.0', port=5000) </code></pre>  <p>I expect that in the browser console to be printed message: ""It's working"", but I get the error: Access to XMLHttpRequest at 'localhost:5000/test' from origin 'null' has been blocked by CORS policy: Cross origin requests are only supported for protocol schemes: http, data, chrome, chrome-extension, https.</p>  <p>LE: Flask server is inside a docker container. Ports are mapped ""5000:5000'.</p>"	55549331	"<p>Add the following line below <code>app = Flask(__name__)</code>:</p>  <pre><code>CORS(app) </code></pre>  <p>Check out <code>flask-cors</code> <a href=""https://flask-cors.readthedocs.io/en/latest/#simple-usage"" rel=""nofollow noreferrer"">simple usage</a></p>"
55549164	"How to connect backend (python, flask) with frontend (html, css, javascript)"	javascript|python|post|flask|get	2019-04-06 12:41:47.407000 UTC	"<p>Info: for backend I'm using python with flask (for the moment it accepts http get methods) and for frontend I'm using html, css and javascript.</p>  <p>Problem: I'm trying to make a http request (first time I tried POST and then GET) but the browser did not allow me to do that: ""Access to XMLHttpRequest at 'localhost:5000/test' from origin 'null' has been blocked by CORS policy: Cross origin requests are only supported for protocol schemes: http, data, chrome, chrome-extension, https."".</p>  <p>What another choices do I have? (I would like some simple choices, it is just a homework).</p>  <p>I've tried to make http POST and GET request. I've read that I cannot make http request from browser. I've read that I need (for example) an apache server. - too complicated, I need something more simple. I've tried: <a href=""https://flask-cors.readthedocs.io/en/latest/"" rel=""nofollow noreferrer"">https://flask-cors.readthedocs.io/en/latest/</a></p>  <pre><code>document.getElementById(""btn"").addEventListener('click', add); function add() {     const url = ""localhost:5000/test"";     const http = new XMLHttpRequest();     http.open(""GET"", url);     http.send();     http.onreadystatechange=(e)=&gt; {         console.log(http.responseText)     } } </code></pre>  <pre><code>from flask import Flask from flask_cors import CORS from flask import request from flask import jsonify import json import mysql.connector import random import string import time  time.sleep(3) app = Flask(__name__)  @app.route(""/test"") def test():     return ""It's working""   if __name__ == ""__main__"":     app.run(host='0.0.0.0', port=5000) </code></pre>  <p>I expect that in the browser console to be printed message: ""It's working"", but I get the error: Access to XMLHttpRequest at 'localhost:5000/test' from origin 'null' has been blocked by CORS policy: Cross origin requests are only supported for protocol schemes: http, data, chrome, chrome-extension, https.</p>  <p>LE: Flask server is inside a docker container. Ports are mapped ""5000:5000'.</p>"	55549467	"<p>If you are using same machine, you do not need to use <code>flask-cors</code>. </p>  <p><strong>Update:</strong> As you are using Docker you can use <code>flask-cors</code> to handle CORS.</p>  <p>I found that the AJAX calls were not correct in your JS code. <code>const url = ""localhost:5000/test"";</code> does not provide information on request protocol.</p>  <p>I followed these steps to run Flask application successfully using Docker and accessing the <code>/test</code> endpoint using JS outside Docker.</p>  <ul> <li>I updated AJAX request</li> <li>Added <code>Dockerfile</code> to run Flask application inside Docker</li> <li>Build and run the <code>Dockerfile</code></li> <li>Get the IP address of running Docker container.</li> <li>Used the IP address in AJAX call in JS code which is outside Docker.</li> </ul>  <p><strong>Folder structure:</strong></p>  <pre><code>. ├── backend.py ├── Dockerfile ├── readme.md └── requirements.txt </code></pre>  <p><code>requirements.txt</code>:</p>  <pre><code>Flask==1.0.2 Flask-Cors==3.0.7 </code></pre>  <p><code>Dockerfile</code>:</p>  <pre><code>FROM python:3 ENV PYTHONBUFFERED 1 RUN mkdir /code WORKDIR /code ADD requirements.txt /code/ RUN pip install -r requirements.txt ADD . /code/ CMD [""python"", ""backend.py"" ] </code></pre>  <p><strong>Build Docker file:</strong> </p>  <pre><code>docker build -t flask-docker . </code></pre>  <p><strong>Run Docker:</strong> </p>  <pre><code>docker run -p 5000:5000 flask-docker  * Serving Flask app ""backend"" (lazy loading) * Environment: production   WARNING: Do not use the development server in a production environment.   Use a production WSGI server instead. * Debug mode: off * Running on http://0.0.0.0:5000/ (Press CTRL+C to quit) </code></pre>  <p><strong>Get Docker container ID:</strong></p>  <pre><code>docker ps  CONTAINER ID        IMAGE                   COMMAND                CREATED             STATUS              PORTS                    NAMES 69cb7d5d243a        flask-docker            ""python backend.py""    15 minutes ago      Up 15 minutes       0.0.0.0:5000-&gt;5000/tcp </code></pre>  <p><strong>Get Docker container IP address:</strong></p>  <pre><code>docker inspect --format '{{ .NetworkSettings.IPAddress }}' 69cb7d5d243a    172.17.0.2 </code></pre>  <p><strong>Use this IP address in AJAX request in HTML file:</strong></p>  <pre><code>&lt;html&gt; &lt;head&gt;   &lt;title&gt;Frontend&lt;/title&gt; &lt;/head&gt; &lt;body&gt;   &lt;div id=""data""&gt;&lt;/div&gt;   &lt;button type=""button"" id=""btn""&gt;Grab data&lt;/button&gt;   &lt;script type=""text/javascript""&gt;   document.getElementById(""btn"").addEventListener('click', add);   function add()   {     const api_url = ""http://172.17.0.2:5000/test"";     var xhttp = new XMLHttpRequest();     xhttp.onreadystatechange = function() {       if (this.readyState == 4 &amp;&amp; this.status == 200) {         document.getElementById(""data"").append(this.responseText);       }     };     xhttp.open(""GET"", api_url, true);     xhttp.send();   }   &lt;/script&gt; &lt;/body&gt; &lt;/html&gt;   </code></pre>  <p><code>backend.py</code>:</p>  <pre><code>from flask import Flask, request, jsonify from flask_cors import CORS   app = Flask(__name__) CORS(app)      @app.route(""/test"") def test():     return ""It's working""      if __name__ == ""__main__"":     app.run(host='0.0.0.0', port=5000) </code></pre>  <p><strong>Output:</strong></p>  <p><a href=""https://i.stack.imgur.com/GbeHZ.png"" rel=""noreferrer""><img src=""https://i.stack.imgur.com/GbeHZ.png"" alt=""frontend output""></a></p>"
55552758	How can I pass an object with an embedded object from JavaScript (jQuery/ajax) to Python (Flask)?	javascript|python|jquery|json|flask	2019-04-06 19:35:56.847000 UTC	"<p>I am attempting to pass structured data from a web page to a flask handler, but I am getting key errors.</p>  <p>In the web page's JavaScript, I have an object that has two elements, one a value, the other an object.</p>  <p>The problem is on the Flask/Python side.   I can get the first element (<code>""cid""</code>) with this:</p>  <pre><code>print request.form [""cid""] </code></pre>  <p>That works.  But, I can't access or get to any of the att(ribute) values (<code>""att""</code>).</p>  <p>So, this, <code>request.form [""att""]</code> returns <code>KeyError: 'att'</code></p>  <p>I am able to access <code>request.form[""att[sw1]""]</code> but this is flattening my data type.</p>  <p>I'd like to get the att elements as a list or dictionary so that I can loop through them in my application.  I essentially want <code>request.form[""att""][""sw1""]</code> or <code>request.form.att[""sw1""]</code>.</p>  <pre><code>   var controllerData = {               sw1  : $('#sw1').val(),               sw2  : $('#sw2').val(),               sw3  : $('#sw3').val(),               sw4  : $('#sw4').val()}     var updateData = {cid : 1, att: controllerData };     $.ajax({      type: ""POST"",      url:  ""/SetSettings"",      data: updateData,      success: function(d) { },      error: function(d) {alert('Error saving settings!');},      dataType: ""json""    }); </code></pre>"	55552803	"<p>You must serialize your data object to string with <a href=""https://developer.mozilla.org/ru/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify"" rel=""nofollow noreferrer"">JSON.stringify()</a>.</p>  <pre><code>$.ajax({    type: ""POST"",    url:  ""/SetSettings"",    data: JSON.stringify(updateData),    success: function(d) { },    error: function(d) {alert('Error saving settings!');},    dataType: ""json"" }); </code></pre>  <p>PS: Some object, e.g. <code>window</code> or object containing cyclic dependencies cannot be serialized this way</p>"
55571157	selenium python javascript click button	python	2019-04-08 10:19:32.833000 UTC	"<p>I am having problems with my selenium script. I want to webscrape a website that is running on javascript. I have been gathering a lot of information on the internet but i can't find the solution. <a href=""https://i.stack.imgur.com/Wgvcj.png"" rel=""nofollow noreferrer"">picture of the html code</a> <a href=""https://i.stack.imgur.com/nNOVB.png"" rel=""nofollow noreferrer"">picture of my code</a> In this post i have also submitted a printscreen of the HTML code. Basically: i want click on the accept button when i load the website but i can't figure how to do this.</p>  <p>searching on different websites for the solution.</p>  <p>Can you guys help me with my script, i have been trying and testing a lot but i can't figure it out. thank you.</p>  <p>code:</p>  <pre class=""lang-py prettyprint-override""><code>from config import keys from selenium import webdriver from selenium.webdriver.support.ui import WebDriverWait from selenium.webdriver.common.by import By from selenium.webdriver.support import expected_conditions as EC import time   def order(k):      chrome_path =      r""C:\Users\ltewo\PycharmProjects\livebetting\chromedriver.exe""     driver = webdriver.Chrome(chrome_path)     driver.get(keys['url'])     xpath_button_accept = ""//div[@class='cookieButtons']//a[@class='button      accept']""     button_accept = driver.find_element_by_xpath(xpath_button_accept)     xpath_button_accept.click()   if __name__ == '__main__':     order(keys) </code></pre>"	55571269	"<p>Try this:</p>  <pre><code>#update driver.implicity_wait(10)   xpath_button_accept = ""//div[@class='cookieButtons']//a[@class='button accept']""  button_accept = your_browser.find_element_by_xpath(xpath_button_accept) button_accept.click() </code></pre>"
55571157	selenium python javascript click button	python	2019-04-08 10:19:32.833000 UTC	"<p>I am having problems with my selenium script. I want to webscrape a website that is running on javascript. I have been gathering a lot of information on the internet but i can't find the solution. <a href=""https://i.stack.imgur.com/Wgvcj.png"" rel=""nofollow noreferrer"">picture of the html code</a> <a href=""https://i.stack.imgur.com/nNOVB.png"" rel=""nofollow noreferrer"">picture of my code</a> In this post i have also submitted a printscreen of the HTML code. Basically: i want click on the accept button when i load the website but i can't figure how to do this.</p>  <p>searching on different websites for the solution.</p>  <p>Can you guys help me with my script, i have been trying and testing a lot but i can't figure it out. thank you.</p>  <p>code:</p>  <pre class=""lang-py prettyprint-override""><code>from config import keys from selenium import webdriver from selenium.webdriver.support.ui import WebDriverWait from selenium.webdriver.common.by import By from selenium.webdriver.support import expected_conditions as EC import time   def order(k):      chrome_path =      r""C:\Users\ltewo\PycharmProjects\livebetting\chromedriver.exe""     driver = webdriver.Chrome(chrome_path)     driver.get(keys['url'])     xpath_button_accept = ""//div[@class='cookieButtons']//a[@class='button      accept']""     button_accept = driver.find_element_by_xpath(xpath_button_accept)     xpath_button_accept.click()   if __name__ == '__main__':     order(keys) </code></pre>"	55571700	"<p>You should <a href=""https://selenium-python.readthedocs.io/waits.html"" rel=""nofollow noreferrer"">wait</a> for that element to load on the page, so use:</p>  <pre class=""lang-py prettyprint-override""><code>WebDriverWait(browser, delay).until(EC.presence_of_element_located((By.XPATH, 'XpathOfMyElement'))) </code></pre>  <p>I noticed that the cookie panel was inside an <strong>iframe</strong> and was not directly accessible, I have updated the below, please check it's working now.</p>  <p>Updated your code:</p>  <pre class=""lang-py prettyprint-override""><code>from config import keys from selenium import webdriver from selenium.webdriver.support.ui import WebDriverWait from selenium.webdriver.common.by import By from selenium.webdriver.support import expected_conditions as EC import time   def order(keys):      chrome_path = r""C:\Users\ltewo\PycharmProjects\livebetting\chromedriver.exe""     driver = webdriver.Chrome(chrome_path)     driver.get(keys['url'])     driver.switch_to.frame('r42CookieBar')     button_accept = driver.find_element_by_class_name('accept')     button_accept.click()  if __name__ == '__main__':      order(keys) </code></pre>"
55572967	Python - How to print a javascript variable of a website in selenium?	python|selenium	2019-04-08 11:58:17.497000 UTC	"<p>I'm new to selenium, this is my first day of learning it so please go easy on me.</p>  <p>So I want to print <code>umidTokenFromHeader</code> a javascript variable of this website <a href=""https://member.lazada.co.id/user/login"" rel=""nofollow noreferrer"">https://member.lazada.co.id/user/login</a>. Here's my code so far</p>  <pre><code>#!/usr/bin/python  from selenium import webdriver from selenium.webdriver.common.keys import Keys  driver = webdriver.Chrome() driver.get(""https://member.lazada.co.id/user/login"") # print (umidTokenFromHeader) driver.close() </code></pre>  <p>On the Console tab of Chrome Developer Tools, <code>umidTokenFromHeader</code> looks like this:</p>  <p><a href=""https://i.stack.imgur.com/Ex7iC.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/Ex7iC.png"" alt=""enter image description here""></a></p>  <p>I found this question <a href=""https://stackoverflow.com/questions/13994393/reading-javascript-variables-using-selenium-webdriver"">Reading JavaScript variables using Selenium WebDriver </a>but I don't understand Java at all How do I do this on selenium with python ?</p>"	55582879	"<p>You can use a JavaScript and <code>execute_script()</code> to return the value of <code>umidTokenFromHeader</code> variable. Then you can capture that value in <code>element</code> variable and finally print it.</p>  <pre><code>#!/usr/bin/python  from selenium import webdriver from selenium.webdriver.common.keys import Keys  driver = webdriver.Chrome() driver.get(""https://member.lazada.co.id/user/login"") element = driver.execute_script(""return umidTokenFromHeader"") print (element) driver.close() </code></pre>"
55594074	convert python timestamp into minutes using JavaScript react	javascript|python|reactjs|timestamp	2019-04-09 13:28:47.940000 UTC	"<p>I'm working on a project using python(3.7) and React in which I'm getting a <code>timestamp</code> from python and need to display it inside <code>react component</code> and need to display it as <code>minutes</code>.</p>  <p>Here's what I tried:</p>  <pre><code>{Math.round((new Date().getTime() - new Date(message.timestamp).getTime())/60000)} minutes ago </code></pre>  <p>it displayed as:</p>  <pre><code>NaN minutes ago </code></pre>  <p>If I display it as:</p>  <pre><code>{message.timestamp} </code></pre>  <p>then it returns:</p>  <pre><code>2019-04-09 13:01:22.036902+00:00 </code></pre>  <p>So, how can I display only minutes from that <code>timestamp</code>?</p>"	55594218	"<p>Make use of <a href=""https://momentjs.com"" rel=""nofollow noreferrer"">momentjs</a> library and format your string as you want </p>  <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-js lang-js prettyprint-override""><code>const a = ""2019-04-09 13:01:22.036902+00:00"" console.log(moment(a).format('hh:mm A'))</code></pre> <pre class=""snippet-code-html lang-html prettyprint-override""><code>&lt;script src=""//cdnjs.cloudflare.com/ajax/libs/moment.js/2.10.3/moment.js""&gt;&lt;/script&gt;</code></pre> </div> </div> </p>  <p>Using <code>Date</code> </p>  <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-js lang-js prettyprint-override""><code>var a = new Date(""2019-04-09 13:01:22.036902+00:00"")   a.getMinutes()  console.log(""hours:""+a.getHours(),""minutes:""+a.getMinutes())</code></pre> </div> </div> </p>  <p>As per comment If your looking for difference between two timestamps then</p>  <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-js lang-js prettyprint-override""><code>const timediff= moment().diff(moment(""2019-04-09 13:01:22.036902+00:00""),'minutes')   console.log('timediff',timediff)</code></pre> <pre class=""snippet-code-html lang-html prettyprint-override""><code>&lt;script src=""//cdnjs.cloudflare.com/ajax/libs/moment.js/2.10.3/moment.min.js""&gt;&lt;/script&gt;</code></pre> </div> </div> </p>"
55594074	convert python timestamp into minutes using JavaScript react	javascript|python|reactjs|timestamp	2019-04-09 13:28:47.940000 UTC	"<p>I'm working on a project using python(3.7) and React in which I'm getting a <code>timestamp</code> from python and need to display it inside <code>react component</code> and need to display it as <code>minutes</code>.</p>  <p>Here's what I tried:</p>  <pre><code>{Math.round((new Date().getTime() - new Date(message.timestamp).getTime())/60000)} minutes ago </code></pre>  <p>it displayed as:</p>  <pre><code>NaN minutes ago </code></pre>  <p>If I display it as:</p>  <pre><code>{message.timestamp} </code></pre>  <p>then it returns:</p>  <pre><code>2019-04-09 13:01:22.036902+00:00 </code></pre>  <p>So, how can I display only minutes from that <code>timestamp</code>?</p>"	55594277	<p>You could try </p>  <p>{Math.round((new Date().getTime() - Date.parse(String(message.timestamp)))/60000)} minutes ago</p>  <p>I think that should work</p>
55595919	How do I grab the table content from a webpage with javascript using python?	javascript|python|selenium-webdriver|web-scraping	2019-04-09 15:06:30.853000 UTC	"<p>I like to grab the table content from this <a href=""https://www.blockchain.com/stats?"" rel=""nofollow noreferrer"">page</a>. The following is my code and I got NaN (without the data). How come the numbers are not showing up? How do I grab the table with the corresponding data? Thanks.</p>  <p><a href=""https://i.stack.imgur.com/KFXnI.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/KFXnI.png"" alt=""enter image description here""></a></p>"	55596356	"<p>You can get a nice json format from the api:</p>  <pre><code>import requests import pandas as pd  url = 'https://api.blockchain.info/stats'  headers = {'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/73.0.3683.86 Safari/537.36'} params = {'cors': 'true'}  data = requests.get(url, headers=headers, params=params).json()  # if you want it as a table df = pd.DataFrame(data.items()) </code></pre>  <p><strong>Option 2:</strong></p>  <p>Let the page fully render. There is abetter way to use <code>wait</code> with Selenium, but just quickly threw a 5 second wait in there to show:</p>  <pre><code>from selenium import webdriver import pandas as pd import time  url = 'https://www.blockchain.com/stats'   browser = webdriver.Chrome('C:/chromedriver_win32/chromedriver.exe') browser.get(url) time.sleep(5)  dfs = pd.read_html(browser.page_source) print(dfs[0])  browser.close() </code></pre>  <p><strong>Output:</strong></p>  <pre><code>                    0                   1                   2   3 0         Blocks Mined                 150                 150 NaN 1  Time Between Blocks        9.05 minutes        9.05 minutes NaN 2       Bitcoins Mined  1,875.00000000 BTC  1,875.00000000 BTC NaN </code></pre>"
55654506	Use Python or Javascript to Upload Multiple Files to OneDrive via Zapier	javascript|python|onedrive|zapier	2019-04-12 15:00:32.480000 UTC	"<p>I'll start by saying I have programming experience from a classroom setting and and can read and write code, but I don't do it on a daily basis.</p>  <p>However, I'm looking to upload multiple image files to OneDrive using Python or Javascript via Zapier. My input is a string of URLs, separated by commas that are direct download links to these image files. I want to loop through each one and upload it to OneDrive. Has anyone done something like this or do you have suggestions on where I should start?</p>  <p>Thanks in advance! -DLMN</p>"	55716709	"<p>If I have understood your requirements correctly the following should work:</p>  <p>I am going to make the assumption you have already setup your trigger step which is where you are getting the list of download URLs. The following action step should then be a code step which takes this string of URLs as input.</p>  <p>The code step will act as a staging area to prepare output to the final OneDrive action step which will handle the uploading. </p>  <p>In the code step you will need to isolate the individual URLs. If the list of URLs is in a string presumably they are comma delimited. You can store each individual URL in a list using Python's split() function:</p>  <pre><code>url_list = input_data.get(""url_list"").split("","") </code></pre>  <p>You will need to return a dictionary object in order to use the output in your final OneDrive step, but you want to execute your final step on a list of inputs. So you will need to return a list of dictionary objects. You can do something like the following:</p>  <pre><code>output_list = [] for url in url_list:     ouput_list.append({""url"" : url}) </code></pre>  <p>And finally <code>return</code> the <code>output_list</code></p>  <p>Because you are returning a list the following code step will execute for each item within the list. Because the list contains dictionary objects they will be mapped as url : ""someuploadurl"" in your following steps. This should allow you to upload multiple files to OneDrive for a given list of URLs. </p>  <p>Further explanation can be found in <a href=""https://stackoverflow.com/questions/52982304/zapier-to-create-multiple-rows-in-google-sheet-from-tsheets-data/52999676#52999676"">this</a> answer as well.<br> Take a look at Zapier's <a href=""https://zapier.com/help/code-python/"" rel=""nofollow noreferrer"">code documentation</a> if you need clarification for getting input from trigger steps into your code step.</p>"
55654866	Is it possible use a Javascript variable as an index for a Python List in a Flask Template?	javascript|python|flask|jinja2	2019-04-12 15:21:38.653000 UTC	"<p>On the last line is <code>pic_list</code> is the python list. Is it possible to index the Python list using a javascript variable within a Flask Jinja2 template?</p>  <pre><code>function moveright(cur_pos, list_length) {   if (current_position !== -9999) {     current_position = cur_pos;   }   if (current_position &lt; list_length - 1) {     current_position = current_position + 1;   } else {     current_position = 0;   }   document.getElementById('image').src = {     {       pic_list[current_position]     }   }; } </code></pre>"	55690888	"<p>I'm not sure I understand the question. Why don't you try to pass the Python list over to JavaScript by converting the collection into a JSON string?</p>  <p>1.Use the <code>json.dumps()</code> method to convert the list into a JSON string.</p>  <pre><code>@app.route('/test') def custom_view():     pic_list = ['banana', 'orange', 'apple']     return render_template('index.html', data=json.dumps(pic_list)) </code></pre>  <p>2.Pass the JSON string to the template</p>  <pre><code>&lt;script&gt;     console.log({{ data|safe }}); &lt;/script&gt; </code></pre>  <p>You <strong>SHOULD AVOID</strong> this procedure if the collection contains <a href=""http://flask.pocoo.org/docs/1.0/security/#cross-site-scripting-xss"" rel=""nofollow noreferrer"">user-supplied data</a>.</p>"
55666678	listCollection returns empty when using javascript sdk while it was created through python using boto3	aws-sdk|boto3|amazon-rekognition	2019-04-13 14:40:19.157000 UTC	"<p>I created a collection using boto3 with following code:</p>  <pre><code>rekognition = boto3.client('rekognition',         aws_access_key_id=""__myclientId"",         aws_secret_access_key=""__secret"" ) rekognition.create_collection(      CollectionId='myPhotos' ) </code></pre>  <p>which is appearing as created when I fetch it using the following code in python boto3:</p>  <pre><code>response = rekognition.list_collections() print(response) </code></pre>  <p>But when I try to fetch the same collection using Javascript SDK ""aws-sdk"" in nodeJs using following code I get empty results:</p>  <pre><code>const AWS = require('aws-sdk'); AWS.config.update({             accessKeyId : ""__myclientId"",             secretAccessKey : ""__secret"",             region: ""us-east-1"" });  let rekognition = new AWS.Rekognition(); rekognition.listCollections({}, function (err, data) {      console.log(err, data); }); </code></pre>  <p><strong>RESPONSE JS:</strong></p>  <pre><code>{ CollectionIds: [], FaceModelVersions: [] } </code></pre>"	55668394	"<p>Solved it was missing the region in first code. Because of missing region it assumes some default region and because of that the collection doesn't show up when search for it in us-east-1 region to solve this need to pass region like this:</p>  <pre><code>rekognition = boto3.client('rekognition',         aws_access_key_id=""__myclientId"",         aws_secret_access_key=""__secret"",         region_name= ""us-east-1"" ) </code></pre>"
55676448	How to fire a javascript event using Python	javascript|python|html|selenium	2019-04-14 14:36:26.697000 UTC	"<p>I'm trying to create a Python script that navigates to the Facebook marketplace and inputs the Min and Max price. I can't figure out how to fire the java script event to update the page with the items within the Min/Max price range. Any help would be appreciated</p>  <pre><code>``` From selenium import webdriver  usr = ""username"" pwd = ""password""  driver = webdriver.Chrome(executable_path=r""C:\webdriver\chromedriver.exe"") driver.get('https://www.facebook.com') username_box = driver.find_element_by_id('email')  username_box.send_keys(usr)  password_box = driver.find_element_by_id('pass')  password_box.send_keys(pwd) login_box = driver.find_element_by_id('loginbutton')  login_box.click()   driver.get('https://www.facebook.com/marketplace/toronto/vehicles/')  elem = driver.find_elements_by_class_name('_58al') elem[0].send_keys(""5000"") elem[1].send_keys(""10000"") ``` </code></pre>"	55676665	"<p>Instead of waiting for the event to trigger upon submitting your values, you could directly append your values to the URI and navigate with <code>driver.get()</code> knowing with confidence the page will display your results :)</p>  <pre><code>https://www.facebook.com/marketplace/[randomints]/?minPrice=100&amp;maxPrice=200 </code></pre>  <p>However, if you'd like to continue with submitting values you could consider using <code>click()</code> on  the following class name <code>_78o5</code> which at a glance, does seem to fire off the refresh event.</p>"
55742220	Converting python callback function to javascript	javascript|python|bokeh	2019-04-18 08:39:41.153000 UTC	"<p>I would like some help translating my callback function in bokeh from python to javascript. My code is showed next (I've deleted most of it since it was not important to the translation.)</p>  <pre><code>#returns a CDS of a dataframe based on one parameter def create_df(option):      return ColumnDataSource(incident_df)  all_df = create_df('all') critical_df = create_df('1') high_df = create_df('2') avg_low_df = create_df('3/4') data_points = create_df('all')     color_mapper=LinearColorMapper(palette=RdBu7,low=data_points.data['freq'].min(),high=data_points.data['freq'].max())  radio_button_group = RadioButtonGroup(         labels=[""All Priorities"", ""1 - Critical"", ""2 - High"", ""3/4 - Average/Low""], active=0)  #Define the callback function def callback(attr, old, new):     if radio_button_group.active == 0:         new_cds = all_df     if radio_button_group.active == 1:         new_cds = critical_df      if radio_button_group.active == 2:         new_cds = high_df     if radio_button_group.active == 3:         new_cds = avg_low_df     data_points.data = new_cds.data     color_mapper.low=min(data_points.data['freq'])     color_mapper.high=max(data_points.data['freq'])  radio_button_group.on_change('active', callback) </code></pre>"	55744416	"<p>Your Python callback could be translated to JS callback like this (provided it was working in Python):</p>  <pre><code>from bokeh.models import CustomJS  code = """"""     if (radio_button_group.active == 0)         new_cds = all_df     if (radio_button_group.active == 1)         new_cds = critical_df      if (radio_button_group.active == 2)         new_cds = high_df     if (radio_button_group.active == 3)         new_cds = avg_low_df      data_points.data = new_cds.data     color_mapper.low = Math.min.apply(null, data_points.data['freq'])     color_mapper.high = Math.max.apply(null, data_points.data['freq'])  """""" callback = CustomJS(args = dict(data_points = data_points,                                 color_mapper = color_mapper                                 radio_button_group = radio_button_group                                 all_df = all_df,                                 critical_df = critical_df,                                 high_df = high_df,                                 avg_low_df = avg_low_df),                      code = code)  radio_button_group.js_on_change('active', callback) </code></pre>"
55747671	Cannot register a U2F key with javascript & python APIs	javascript|django|fido-u2f	2019-04-18 14:00:35.467000 UTC	"<p>I'm trying to implement U2F authentication devices in my django app. The primary issue now is, all of my front-end registration calls fail. </p>  <p>I'm using the <code>u2f-api.js</code> script and the <code>python-u2flib-server</code> python script to implement this. </p>  <p>I am following this pattern:</p>  <p>1) Generate a key/challenge with the u2flib</p>  <pre><code>from u2flib_server import u2f app_id = 'https://127.0.0.1' reg = u2f.begin_registration(app_id) print reg  # {'registeredKeys': [],     'registerRequests': [{'challenge': u'pLzGmABMwBzQkco6INeFNuPsAG6KhgfVeYFeV0QBf1g', version': 'U2F_V2'}],     'appId': 'https://127.0.0.1'} </code></pre>  <p>2) Register the key from browser</p>  <pre><code>var reg_data = {'registeredKeys': [], 'registerRequests': [{'challenge': 'pLzGmABMwBzQkco6INeFNuPsAG6KhgfVeYFeV0QBf1g', 'version': 'U2F_V2'}], 'appId': 'https://127.0.0.1'}  u2f.register(reg_data['appId'], reg_data['registerRequests'], [], function(resp) { console.log(resp) }); </code></pre>  <p>This consistently returns a <code>{errorCode: 2}</code> response, which essentially means bad request. However, I'm unable to determine what part of this request is invalid.</p>  <p>I am using <code>runserver_plus --cert certname</code> to run my local webserver so the site is served via HTTPS. I've also tried using NGROK to access my site over HTTPS and attempted the same code. I consistently get the same response.  </p>  <p>I would appreciate any help, pointers or guidance on my implementation as I've been struggling for a few days and the existing documentation around U2F libraries and implementations is pretty thin. </p>  <p>-- Update -- </p>  <p>I've actually made slight progress here. I am able to receive the generate the key response. However, I am still unable to register this key with the python library. </p>  <p>I end up having something like this on the server side:</p>  <pre><code>response = {'challenge': 'okGbjnbE2V9cT42X2wm-PA9pm7k3KpTETVEv2SqEUxE', 'registrationData': 'BRS5y7dFXs0O60o2cUFc-SZtKG3jibpFQGuwQDyTQkSWeQUNWn\\u2026bEwIhALYcM1NospvymAbv83lTlpLjaa2ICSFQv-5RYfzkPCc9', 'version': 'U2F_V2', 'clientData': 'eyJjaGFsbGVuZ2UiOiJva0dianBnRTJWOWNUNDJYMndtLVBBOX\\u2026R5cCI6Im5hdmlnYXRvci5pZC5maW5pc2hFbnJvbGxtZW50In0'}  register_request = {'registeredKeys': [], 'registerRequests': [{'challenge': 'okGbjpgE2V9cD32X2wm-PA9pm7k3KpKN5VEv2SqEUxE', 'version': 'U2F_V2'}], 'appId': 'https://127.0.0.1:8000'}  u2f.complete_registration(register_request, response) </code></pre>  <p>However, this results in the following error:</p>  <pre><code>Traceback (most recent call last):   File ""&lt;console&gt;"", line 1, in &lt;module&gt;   File ""/usr/local/lib/python2.7/dist-packages/u2flib_server/u2f.py"", line 45, in complete_registration     return U2fRegisterRequest.wrap(request).complete(response, valid_facets)   File ""/usr/local/lib/python2.7/dist-packages/u2flib_server/model.py"", line 419, in complete     _validate_client_data(resp.clientData, req.challenge, Type.REGISTER,   File ""/usr/local/lib/python2.7/dist-packages/u2flib_server/model.py"", line 339, in clientData     return ClientData.wrap(self['clientData'])   File ""/usr/local/lib/python2.7/dist-packages/u2flib_server/model.py"", line 261, in wrap     return data if isinstance(data, cls) else cls(data)   File ""/usr/local/lib/python2.7/dist-packages/u2flib_server/model.py"", line 328, in __init__     super(ClientData, self).__init__(*args, **kwargs)   File ""/usr/local/lib/python2.7/dist-packages/u2flib_server/model.py"", line 239, in __init__     kwargs = json.loads(arg.decode('utf-8'))   File ""/usr/lib/python2.7/json/__init__.py"", line 339, in loads     return _default_decoder.decode(s)   File ""/usr/lib/python2.7/json/decoder.py"", line 364, in decode     obj, end = self.raw_decode(s, idx=_w(s, 0).end())   File ""/usr/lib/python2.7/json/decoder.py"", line 382, in raw_decode     raise ValueError(""No JSON object could be decoded"") ValueError: No JSON object could be decoded </code></pre>  <p>I'm stuck again! I've tried creating a json dumps out of the values before passing them to <code>u2f.register</code> to no avail- I get the exact same error.</p>"	55953593	"<p>After a lot of research, digging up random blog posts and a lot of trial and error, I've finally been able to complete this task with the above mentioned libraries. I will post here an example of how I have achieved this. First, ensure you are running your local webserver over https at <code>https://localhost:8000</code> (or whatever port- but <code>localhost</code> is needed).</p> <ol> <li><p>First, generate a challenge from the python library</p> <pre><code> def get(self, request, *args, **kwargs):      user_devices = [..get user device JSON blobs if they exist, or just blank]      register_request = u2f.begin_registration('https://127.0.0.1:8000', user_devices)      # return value to front end       return render(request, self.template_name, {          'register_request': register_request      }) </code></pre> </li> <li><p>In the front end, signal browser to begin U2F registration. This will emit a signal to the key to ready itself. Post the result from the registration to your register completion endpoint</p> <pre><code> registerRequest = {{ register_request | safe }} //json result of above   var regReq = {'challenge':registerRequest.challenge, 'version': registerRequest.version}  window.u2f.register(this.appID, [regReq], [], function(keyAuthResponse) {      $.ajax({url: '/path-to-registration/',               type: &quot;POST&quot;,              data: keyAuthResponse,               success: function(res){ console.log('sent verification' }      })  }) </code></pre> </li> <li><p>On your server side, accept and verify the key</p> <pre><code> data = reg{'challenge': request.POST.get('challenge'),             'clientData': request.POST.get('clientData'),             'registrationData': request.POST.get('registrationData'),              'version': request.POST.get('version'),  })  #You need hte original register request, either in session or elsewhere to fetch  register_request = request.session.get('_u2f_registration_request')  device_details, facets =  u2f.complete_registration(register_request, data) </code></pre> </li> </ol> <p>The <code>complete_registration</code> will return no errors if the device registered.</p> <p>I hope this serves to help someone in the future.</p>"
55773592	Why cannot python call Javascript() from within a python function?	javascript|python|jupyter-notebook	2019-04-20 12:39:12.080000 UTC	"<p>I used the code suggested from <a href=""https://stackoverflow.com/questions/31893930/download-csv-from-an-ipython-notebook"">Download CSV from an iPython Notebook</a> to dynamically build the javascript code and pass it to the browser using Javascript() in python when called from a jupyter notebook. Code works great. If I embed the same code in a python function and call the python function from the same jupyter notebook, the call Javascript() in python no longer works. How can I make the reusable function work?</p>  <p>I am trying this on Chrome Version 73.0.3683.103 (Official Build) (64-bit) running on Windows 10. Apologies if already answered. I have scoured SO and google. </p>  <p>This works..</p>  <pre class=""lang-py prettyprint-override""><code>from IPython.display import Javascript js_download = """""" var csv = '%s';  var filename = 'results.csv'; var blob = new Blob([csv], { type: 'text/csv;charset=utf-8;' }); if (navigator.msSaveBlob) { // IE 10+     navigator.msSaveBlob(blob, filename); } else {     var link = document.createElement(""a"");     if (link.download !== undefined) { // feature detection         // Browsers that support HTML5 download attribute         var url = URL.createObjectURL(blob);         link.setAttribute(""href"", url);         link.setAttribute(""download"", filename);         link.style.visibility = 'hidden';         document.body.appendChild(link);         link.click();         document.body.removeChild(link);     } } """""" % data_in_dataframes.to_csv(index=False).replace('\r','\\r').replace('\n','\\n').replace(""'"",""\'"") Javascript(js_download) </code></pre>  <p>This does not work, it fails to execute Javascript(js_download), but neither does it give any error that I can see in the jupyter notebook nor the java console in the browser. It is as if it never executed Javascript(js_download).</p>  <pre class=""lang-py prettyprint-override""><code>from IPython.display import Javascript def js_download_csv(df_download, s_filename='results.csv'):     js_download =   """"""     var csv = '%s';     var filename = '%s';     var blob = new Blob([csv], { type: 'text/csv;charset=utf-8;' });     if (navigator.msSaveBlob) { // IE 10+         navigator.msSaveBlob(blob, filename);     } else {         var link = document.createElement(""a"");         if (link.download !== undefined) { // feature detection             // Browsers that support HTML5 download attribute             var url = URL.createObjectURL(blob);             link.setAttribute(""href"", url);             link.setAttribute(""download"", filename);             link.style.visibility = 'hidden';             document.body.appendChild(link);             link.click();             document.body.removeChild(link);         }     }     """""" % (df_download.to_csv(index=False).replace('\r','\\r').replace('\n','\\n').replace(""'"",""\'""), s_filename)     Javascript(js_download)     return None js_download_csv(df_download, s_filename) </code></pre>  <p>Apologies if I have left anything obvious out. I can find no errors or logs with any information regarding what is happening.</p>  <p>Any suggestions welcome.</p>"	55789924	"<p>I have found a partial answer, in that while I do not why this problem occurs, I have found how to overcome it. In <a href=""https://medium.com/@tomgrek/reactive-python-javascript-communication-in-jupyter-notebook-e2a879e25906"" rel=""noreferrer"">https://medium.com/@tomgrek/reactive-python-javascript-communication-in-jupyter-notebook-e2a879e25906</a> we see in the article the following gotcha:</p>  <blockquote>   <blockquote>     <p>A big gotcha: something somewhere needs to return Javascript as its output, otherwise it doesn’t get executed in the notebook.</p>   </blockquote> </blockquote>  <p>So, if we change the code to the following (i.e. return the Javascript call), it works.</p>  <pre><code>from IPython.display import Javascript def js_download_csv(df_download, s_filename='results.csv'):     js_download =   """"""     var csv = '%s';     var filename = '%s';     var blob = new Blob([csv], { type: 'text/csv;charset=utf-8;' });     if (navigator.msSaveBlob) { // IE 10+         navigator.msSaveBlob(blob, filename);     } else {         var link = document.createElement(""a"");         if (link.download !== undefined) { // feature detection             // Browsers that support HTML5 download attribute             var url = URL.createObjectURL(blob);             link.setAttribute(""href"", url);             link.setAttribute(""download"", filename);             link.style.visibility = 'hidden';             document.body.appendChild(link);             link.click();             document.body.removeChild(link);         }     }     """""" % (df_download.to_csv(index=False).replace('\r','\\r').replace('\n','\\n').replace(""'"",""\'""), s_filename)     return Javascript(js_download) js_download_csv(df_download, s_filename) </code></pre>"
55780457	Is it possible to get audio track data from libVLC by using javascript/python	javascript|python|node.js|libvlc	2019-04-21 06:29:01.753000 UTC	<p>I am trying to extract audio track information (specifically language of the audio) from a live stream that i will be playing with libVLC . Is it possible to do this in javascript or python without writing new code for a wrapper?</p>	55788853	"<p>Not sure about javascript, but the Python wrapper will let you do this.</p>"
55798917	Connecting between Python and JavaScript	javascript|python	2019-04-22 18:07:00.970000 UTC	"<p>I'm setting up a new server, and want to support UTF-8 fully in my web application. I use python for the server and JavaScript for the client. I want to know if there are build-in functions to pass between short to bytes in both languages like the fuction i attached (its in C++). More important for me is to know how to send and get bytes from a socket on both languages. </p>  <p><code>void ConnectionHandler::shortToBytes(short num, char *bytesArr) {     bytesArr[0] = ((num &gt;&gt; 8) &amp; 0xFF);     bytesArr[1] = (num &amp; 0xFF); }</code></p>"	55799136	"<p>Short answers to your Python side of questions is to use ctypes(<a href=""https://docs.python.org/3/library/ctypes.html"" rel=""nofollow noreferrer"">https://docs.python.org/3/library/ctypes.html</a>) module for the conversion of a byte to a short, and the socket module for server handling(<a href=""https://docs.python.org/3/library/socket.html"" rel=""nofollow noreferrer"">https://docs.python.org/3/library/socket.html</a>). </p>  <p>As for the javascript side I can't really help there.</p>"
55810264	How to save image to server with javascript and python	javascript|python|django	2019-04-23 11:32:38.770000 UTC	"<p>I am working on a Django application, where the user can click a button to start the webcam. Once the webcam is started, the user can save the image onto the Django server. Right now my code can snap a picture with javascript. But I am stuck trying to save the image onto the django server. This is my code so far</p>  <p><b>html template</b></p>  <pre><code>&lt;center&gt;     &lt;button type=""button"" name=""button"" class='btn btn-outline-dark btn-lg' id='start'&gt;Start Video Capture&lt;/button&gt;     &lt;div class=""container-fluid mt-2""&gt;         &lt;video id=""video"" width=""640"" height=""480"" autoplay&gt;&lt;/video&gt;&lt;br&gt;         &lt;button type=""button"" data-toggle=""modal"" data-target=""#image_model"" class=""btn btn-lg btn-dark"" id=""snap""&gt;Snap Photo&lt;/button&gt;     &lt;/div&gt; &lt;/center&gt;  &lt;form action=""{% url 'img_submit' %}"" method=""post"" class=""image_submit_form""&gt;     {% csrf_token %}     &lt;input type=""submit"" value=""Use Image"" class=""btn btn-primary"" id=""use_image""&gt; &lt;/form&gt; </code></pre>  <p><b>javascript</b></p>  <pre><code>// Grab elements, create settings, etc. var video = document.getElementById('video'); // Elements for taking the snapshot var canvas = document.getElementById('canvas'); var context = canvas.getContext('2d');  document.getElementById('start').addEventListener(""click"", function() {     // Get access to the camera!     if (navigator.mediaDevices &amp;&amp; navigator.mediaDevices.getUserMedia) {         navigator.mediaDevices.getUserMedia({             video: true         }).then(function(stream) {             //video.src = window.URL.createObjectURL(stream);             video.srcObject = stream;             video.play();         });     }      $('#snap').fadeIn();      // Trigger photo take     document.getElementById(""snap"").addEventListener(""click"", function() {         context.drawImage(video, 0, 0, 640, 480);          var url = canvas.toDataURL();          $(""#use_image"").click(function() {             let $form = $("".image_submit_form"");             let form_data = new FormData($form[0]);             $.ajax({                 url: $form.attr('action'),                 type: $form.attr('method'),                 dataType: ""json"",                 data: {                     url: url,                     csrfmiddlewaretoken: '{{ csrf_token }}'                 },                 success: function(json) {                     alert(""Successfully sent the URL to Django"");                 },                 error: function(xhr, errmsg, err) {                     alert(""Could not send URL to Django. Error: "" + xhr.status + "": "" + xhr.responseText);                 }             });         });     });  }); </code></pre>  <p>I am trying to use ajax to send the canvas image to django views where I can save the image to the server with python.</p>  <p>This is my python code so far. I am trying to check if I got the right data to save</p>  <p><b>django views</b></p>  <pre><code>def img_submit(request):     url = request.POST.get('url')     return HttpResponse(url) </code></pre>  <p>But this returns none. How do I access the image through python and how do I save the image then?</p>  <p>Thanks</p>"	55810458	"<p>two things:</p>  <ol> <li><p>In your <code>$.ajax</code> call, I'd suggest using <code>method: ""POST""</code>.  Read more here: <a href=""http://api.jquery.com/jquery.ajax/"" rel=""nofollow noreferrer"">http://api.jquery.com/jquery.ajax/</a> , but the default seems to be ""GET"".  I don't use jQuery often so this is just an inexperienced suggestion from me, anyone who has used it, feel free to comment and I'll update my answer.</p></li> <li><p>In your Django code, it looks like you reference the POST variable which is expectable, but I'm not sure how the file is transmitted in your AJAX request, maybe it is sent as a file in which case you will want to check the docs again: <a href=""https://docs.djangoproject.com/en/2.2/ref/request-response/#django.http.HttpRequest.POST"" rel=""nofollow noreferrer"">https://docs.djangoproject.com/en/2.2/ref/request-response/#django.http.HttpRequest.POST</a> references another page for files: <a href=""https://docs.djangoproject.com/en/2.2/ref/request-response/#django.http.HttpRequest.FILES"" rel=""nofollow noreferrer"">https://docs.djangoproject.com/en/2.2/ref/request-response/#django.http.HttpRequest.FILES</a> (Again, on further consideration I'm not sure this is the right track to try, but after you change your JS code, if the POST variable doesn't have the right stuff, try the FILES variable.)</p></li> </ol>  <p>Finally, I'm not sure if POST is a QueryDict, but the docs seem to point to it, you can list the data to see if you are getting <em>anything</em> at all, try adding something like this for img_submit:</p>  <pre><code>def img_submit(request):     url = request.POST.dict()     return HttpResponse(url) </code></pre>"
55860518	Web-scraping a javascript table with python BueatifulSoup	python-3.x|web-scraping	2019-04-26 03:42:58.017000 UTC	"<p>I can't get one javascript table with BueatifulSoup, returning empty array</p>  <p>I tried to get data from this page. <a href=""https://www.hkex.com.hk/Mutual-Market/Stock-Connect/Statistics/Historical-Daily?sc_lang=en#select4=1&amp;select5=2&amp;select3=0&amp;select2=3&amp;select1=24"" rel=""nofollow noreferrer"">https://www.hkex.com.hk/Mutual-Market/Stock-Connect/Statistics/Historical-Daily?sc_lang=en#select4=1&amp;select5=2&amp;select3=0&amp;select2=3&amp;select1=24</a></p>  <pre><code>import requests, json text = requests.get(""https://www.hkex.com.hk/Mutual-Market/Stock-Connect/Statistics/Historical-Daily?sc_lang=en#select4=0&amp;select5=2&amp;select3=0&amp;select2=3&amp;select1=24"") data = json.loads(text)  print(data['Scty']) </code></pre>"	55860768	"<p>There is another url you can use - found by looking at the network tab. A little string manipulation on the response text and you have a string that can be loaded with <code>json</code> and contains everything on the page (including for all 4 drop down geographies). There is no need for bs4. You can extract everything you want with <code>json</code> library.</p>  <p>Explore it <a href=""https://jsoneditoronline.org/?id=5e7e19a4b7d444a28ca8d41d45aac1d6"" rel=""nofollow noreferrer"">here</a>.</p>  <pre><code>import requests import json  r = requests.get('https://www.hkex.com.hk/eng/csm/DailyStat/data_tab_daily_20190425e.js?_=1556252093686') data = json.loads(r.text.replace('tabData = ','')) </code></pre>  <p>For example, path to first row of table on landing page:</p>  <p><a href=""https://i.stack.imgur.com/4khV7.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/4khV7.png"" alt=""enter image description here""></a></p>"
55882471	Javascript code not extracted with python code	javascript|python|html|selenium|phantomjs	2019-04-27 16:15:52.763000 UTC	"<p>I am trying to extract .mp4 link from a website, which is shown only in ""Inspect Element"" tab in web browsers.</p>  <p>I read on the internet that i need to use selenium and for example PhantomJS to get that code. I tried it but i get HTML file which is visible in ""Show source code""</p>  <pre><code>from selenium import webdriver  driver = webdriver.PhantomJS(executable_path=r'C:\Users\Nevendary\Desktop\phantomjs-2.1.1-windows\bin\phantomjs') driver.get(""https://filmovitica.com/pucanj-u-sljiviku-preko-reke-1978-domaci-film-gledaj-online/"") driver.implicitly_wait(30)  print(driver.page_source) </code></pre>  <p>I expect to get code that includes: <a href=""https://fs40.gounlimited.to/tea5u5akd32qzxfffpqyfndb6resauu5w43w7enoxkvu6sjtrf5hfhbz3ika/v.mp4"" rel=""nofollow noreferrer"">https://fs40.gounlimited.to/tea5u5akd32qzxfffpqyfndb6resauu5w43w7enoxkvu6sjtrf5hfhbz3ika/v.mp4</a>"" </p>  <p>but I get just normal HTML of the website</p>"	55883284	"<p>Instead of <code>PhantomJS</code> try use <code>ChromeDriver</code> with <code>headless</code> options.This gives me the output you are after.</p>  <pre><code>chrome_options = webdriver.ChromeOptions() chrome_options.add_argument('--headless') driver=webdriver.Chrome(executable_path='path of chrome driver',options=chrome_options) driver.get(""https://filmovitica.com/pucanj-u-sljiviku-preko-reke-1978-domaci-film-gledaj-online/"") print(driver.page_source) </code></pre>  <p>Note: You can download chromedriver from following link if you don't have chromedriver installed based on your browser compatibility.Please read release notes before downloading any chrome driver for compatibility. <a href=""http://chromedriver.chromium.org/downloads"" rel=""nofollow noreferrer"">Download Chrome driver</a></p>  <p>Another way to do it using Beautiful Soup which is python library.</p>  <pre><code> import requests     from bs4 import BeautifulSoup     data=requests.get('https://filmovitica.com/pucanj-u-sljiviku-preko-reke-1978-domaci-film-gledaj-online/')     soup=BeautifulSoup(data.text,'html.parser')     print(soup) </code></pre>  <p>Note : It is easy to install <code>pip install beautifulsoup4</code> You can check following link about Beautiful Soup <a href=""https://www.crummy.com/software/BeautifulSoup/bs4/doc/"" rel=""nofollow noreferrer"">Beautiful Soup</a></p>"
55882471	Javascript code not extracted with python code	javascript|python|html|selenium|phantomjs	2019-04-27 16:15:52.763000 UTC	"<p>I am trying to extract .mp4 link from a website, which is shown only in ""Inspect Element"" tab in web browsers.</p>  <p>I read on the internet that i need to use selenium and for example PhantomJS to get that code. I tried it but i get HTML file which is visible in ""Show source code""</p>  <pre><code>from selenium import webdriver  driver = webdriver.PhantomJS(executable_path=r'C:\Users\Nevendary\Desktop\phantomjs-2.1.1-windows\bin\phantomjs') driver.get(""https://filmovitica.com/pucanj-u-sljiviku-preko-reke-1978-domaci-film-gledaj-online/"") driver.implicitly_wait(30)  print(driver.page_source) </code></pre>  <p>I expect to get code that includes: <a href=""https://fs40.gounlimited.to/tea5u5akd32qzxfffpqyfndb6resauu5w43w7enoxkvu6sjtrf5hfhbz3ika/v.mp4"" rel=""nofollow noreferrer"">https://fs40.gounlimited.to/tea5u5akd32qzxfffpqyfndb6resauu5w43w7enoxkvu6sjtrf5hfhbz3ika/v.mp4</a>"" </p>  <p>but I get just normal HTML of the website</p>"	55883932	"<p>Instead of searching the page source you can directly get the <code>src</code> attribute of the video element, which contains the link you are after. </p>  <p>The video link is in an <code>iframe</code>. getting the page source without switching to the frame would not return the video link. </p>  <p>I've used chromedriver for the example.</p>  <p><strong>Try This:</strong></p>  <pre class=""lang-py prettyprint-override""><code>from selenium import webdriver from selenium.webdriver.support.ui import WebDriverWait from selenium.webdriver.support import expected_conditions as EC from selenium.webdriver.common.by import By  driver = webdriver.Chrome(executable_path=""chromedriver.exe"")  wait = WebDriverWait(driver, 20) driver.get(""https://filmovitica.com/pucanj-u-sljiviku-preko-reke-1978-domaci-film-gledaj-online/"")  vframe = driver.find_element_by_xpath(""//iframe[@width='900']"")  driver.switch_to.frame(vframe)  videoElement = wait.until(EC.visibility_of(driver.find_element(By.CSS_SELECTOR, ""#vplayer &gt; div &gt; div.container &gt; video"")))  print(videoElement.get_attribute('src'))  driver.quit()   </code></pre>"
55882471	Javascript code not extracted with python code	javascript|python|html|selenium|phantomjs	2019-04-27 16:15:52.763000 UTC	"<p>I am trying to extract .mp4 link from a website, which is shown only in ""Inspect Element"" tab in web browsers.</p>  <p>I read on the internet that i need to use selenium and for example PhantomJS to get that code. I tried it but i get HTML file which is visible in ""Show source code""</p>  <pre><code>from selenium import webdriver  driver = webdriver.PhantomJS(executable_path=r'C:\Users\Nevendary\Desktop\phantomjs-2.1.1-windows\bin\phantomjs') driver.get(""https://filmovitica.com/pucanj-u-sljiviku-preko-reke-1978-domaci-film-gledaj-online/"") driver.implicitly_wait(30)  print(driver.page_source) </code></pre>  <p>I expect to get code that includes: <a href=""https://fs40.gounlimited.to/tea5u5akd32qzxfffpqyfndb6resauu5w43w7enoxkvu6sjtrf5hfhbz3ika/v.mp4"" rel=""nofollow noreferrer"">https://fs40.gounlimited.to/tea5u5akd32qzxfffpqyfndb6resauu5w43w7enoxkvu6sjtrf5hfhbz3ika/v.mp4</a>"" </p>  <p>but I get just normal HTML of the website</p>"	55884064	"<p>Inspecting the html it does indeed seem that link is generated inside the same url that the iframe uses. You can use requests to get that:</p>  <pre><code>import requests from bs4 import BeautifulSoup res = requests.get('https://filmovitica.com/pucanj-u-sljiviku-preko-reke-1978-domaci-film-gledaj-online/') soup = bs(res.content, 'lxml') print(soup.select_one('iframe[allowfullscreen]')['src']) </code></pre>  <p>You can locate how it is (your string) generated in one of the script tags within the uri (see line highlighted at start in blue:</p>  <p><a href=""https://i.stack.imgur.com/Vo47d.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/Vo47d.png"" alt=""enter image description here""></a></p>  <p>Later in that js:</p>  <p><a href=""https://i.stack.imgur.com/urxEG.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/urxEG.png"" alt=""enter image description here""></a></p>"
55904866	JavaScript / Python interaction in Linux without a REST framework?	javascript|python|ajax|linux|apache	2019-04-29 13:54:36.343000 UTC	"<p>I'm working on some changes to a page that needs to retrieve information from some files under <strong>/proc</strong> so the page can display version information to the user. Currently, the page is generated entirely by the Python script, which allows me to just read the file and put everything in the page at creation time.</p>  <p>However, this led to the issue that the version numbers wouldn't update when a new version of the software was uploaded. I don't want to regenerate the page every time a new package is installed, so I made the main page static and want to instead just query the information from a Python script and return it to the page to populate the page when loaded.</p>  <p>The Python scripts are set up as CGI and have sudo access, so there's no issue with them retrieving those files. However, if I wanted to use something like AJAX to call the Python script, is there any way I could return the data without using a REST framework such as Flask or Django? The application needs to be lightweight and preferably not rely on a new framework.</p>  <p>Is there a way I can do this with vanilla JavaScript and Python?</p>"	55907807	"<p>Ok, so the solution was fairly simple, I just made a few syntactical errors that led to it not working the first few times I tried it.</p>  <p>So the request looked like this:</p>  <pre><code>window.onload = function() {     var xhr = new XMLHttpRequest();     xhr.onreadystatechange = function() {         if((this.readyState == 4) &amp;&amp; (this.status == 200)) {             var response = JSON.parse(this.responseText);             // Do stuff with the JSON here...         }     };     xhr.open(""GET"", scriptURL, true);     xhr.send(); } </code></pre>  <p>From there, the Python script simply needed to do something like this to return JSON data containing my version numbers:</p>  <pre><code>import sys, cgi, json result = {} result['success'] = True result['message'] = ""The command completed successfully"" d = {} ... write version information to the 'd' map ... result['data'] = d sys.stdout.write(""Content-Type: text/plain\n\n"") sys.stdout.write(json.dumps(result)) sys.stdout.write(""\n"") sys.stdout.close() </code></pre>  <p>The most persistent problem that took me forever to find was I forgot a closing quotation in my script tag, which caused the whole page to not load.</p>"
55931395	HTTP code 400 as converting Javascript POST to Python POST	javascript|python	2019-05-01 03:48:46.867000 UTC	"<p>I'm converting piece of Javascript code to Python code. The code is sending POST to text extracting server. In JS code, POST is sent successfully, and the response is correct. But in Python, I've got HTTP code 400.</p>  <p>In <b>request.post(url=url, headers=headers, data={data.encode('UTF-8')})</b>,<br> I've tried ""data"" parameter as <em>normal string</em> and <em>dictionary</em> type.</p>  <p>Javascript code:</p>  <pre><code> var request = new XMLHttpRequest();         var url = ""http://35.240.240.251/api/v1/real-estate-extraction"";     request.open(""POST"", url, false);     request.setRequestHeader(""Content-Type"", ""application/json;charset=UTF-8"");     var responseText = document.getElementById('response');      request.onload = (res) =&gt; {         data = res['target']['response'];         data = JSON.parse(data);          for (var i = 0 ; i &lt; data[0].tags.length ; i++){             if (data[0].tags[i].type == ""addr_street""){                 features.push(data[0].tags[i].content);                 document.write(""street: "" + data[0].tags[i].content + ""\n"");             }         } };      // var input = prompt(""Input:"");     request.send(JSON.stringify([inputUser]));  </code></pre>  <p><br> Python code:</p>  <pre class=""lang-py prettyprint-override""><code>import requests import json  url = ""http://35.240.240.251/api/v1/real-estate-extraction""  data = 'Chính chủ 02 lô đất Củ Chi , liền kề nhau.  Dt: 1.000m2 giá 770 triệu/ 1.000m2 , ' \        'sổ còn thơm mùi giấy chưa qua kinh doanh , ' \        'không dính quy hoạch gi cả . Liên Hệ : 0948881115 để đặt cọc nhanh lẹ.'  request = requests.Session() request.verify = False  headers = {        'Content-Type': 'application/json;charset=UTF-8', }  response = request.post(url=url, headers=headers, data={data.encode('UTF-8')})  print(response.status_code) #result: 400 </code></pre>"	55931798	"<p>Updated Code:</p>  <pre><code>import requests import json  url = ""http://35.240.240.251/api/v1/real-estate-extraction""  data_text = 'Chính chủ 02 lô đất Củ Chi , liền kề nhau.  Dt: 1.000m2 giá 770 triệu/ 1.000m2 , ' \        'sổ còn thơm mùi giấy chưa qua kinh doanh , ' \        'không dính quy hoạch gi cả . Liên Hệ : 0948881115 để đặt cọc nhanh lẹ.'  data_list = [ data_text ]  request = requests.Session()  ## request.verify = False  ##headers = { ##       'Content-Type': 'application/json;charset=UTF-8', ##}  headers = { }  response = request.post(url=url, headers=headers, json=data_list)  print('RESPONSE_CODE: %s' % response.status_code)   print('RESPONSE_DATA:\n %s' % json.dumps(response.json(), ensure_ascii=False, sort_keys=True, indent=4, separators=(',', ': '))) </code></pre>  <p>... You can use <code>json=</code> in the <code>post</code> and it requests will handle the content-type header for you automatically</p>  <p>... the output from running the code is:</p>  <pre><code>RESPONSE_CODE: 200 RESPONSE_DATA:  [     {         ""score"": 694.771240234375,         ""tags"": [             {                 ""content"": ""chính chủ 02 lô"",                 ""type"": ""normal""             },             {                 ""content"": ""đất"",                 ""type"": ""realestate_type""             },             {                 ""content"": ""củ chi"",                 ""type"": ""addr_district""             },             {                 ""content"": "", liền kề nhau . dt :"",                 ""type"": ""normal""             },             {                 ""content"": ""1 . 000 m 2"",                 ""type"": ""area""             },             {                 ""content"": ""giá"",                 ""type"": ""normal""             },             {                 ""content"": ""770 triệu / 1 . 000 m 2"",                 ""type"": ""price""             },             {                 ""content"": "", sổ còn thơm mùi giấy chưa qua"",                 ""type"": ""normal""             },             {                 ""content"": ""kinh doanh"",                 ""type"": ""potential""             },             {                 ""content"": "", không dính quy hoạch gi cả . liên hệ : 0948881115 để đặt cọc nhanh lẹ ."",                 ""type"": ""normal""             }         ]     } ] </code></pre>  <p>(It would be better to check the documentation for the API to confirm how it is really supposed to be used)</p>"
55944605	convert python function to Javascript/node.js	javascript|python|node.js	2019-05-02 01:30:26.870000 UTC	"<p>trying to simulate similar behavior of a python function with node.js. </p>  <p>Here is the python function:</p>  <p><em>Input (for both of the function):</em></p>  <pre><code>(9x11)JHASGJHAYGGSDFLRAAAA(16x7)ABCDEFG </code></pre>  <pre><code>def evaluate_expression(sub_string):     var re = require('re')     regex = r'^([(](\d+)[xX](\d+)[)])?'     prog = re.compile(regex)     op = prog.match(sub_string)     print('in evaluate exp', sub_string)     expression_list = list(op.groups())     # print(expression_list)     str_len = int(expression_list[1])     itr = int(expression_list[2])     endindex = op.end()     return str_len, itr, endindex-1 </code></pre>  <p><em>Output:</em></p>  <pre><code>5 9 11 </code></pre>  <p>in JS i have tried so far:</p>  <pre><code>evaluate_expression = (sub_string)=&gt;{     const a =/^([(](\d+)[xX](\d+)[)])?/g;     const b = sub_string.match(a);     // console.log(sub_string)     let extratkted = b[0].split(""x"");     return {       str_len:extratkted[0].split(""("")[1],       itr:extratkted[1].split("")"")[0],     endpoint:extratkted.length+extratkted.length+extratkted.length-2   }   } </code></pre>  <p><em>Output:</em></p>  <pre><code>{str_len:9,itr:11,endpoint:4} </code></pre>  <p>where Expected output: <code>{str_len:5,itr:9,endpoint:11}</code></p>"	55944837	"<p>It seem you have good values but they are assigned in wrong order. </p>  <p>In Python you use <code>[1]</code> and <code>[2]</code> but in Javascript you use different order <code>[1]</code>, and <code>[0]</code>. If you assign values in different order then you should get correct result.</p>  <hr>  <p>In Python you have <code>endindex-1</code> but in JavaScript you do something similar to <code>endindex-2</code> so you get <code>4</code> instead of <code>5</code>.</p>"
55984356	How to parse JavaScript code in html source in Python?	javascript|python|json|ajax|web-scraping	2019-05-04 16:05:21.617000 UTC	"<p>I am trying to web scrape some data inside a JavaScript tag in a HTML source.</p> <p>The situation: I can get to the appropriate <code>&lt;script&gt;&lt;/script&gt;</code> tag. But inside that tag, there is a big string, which needs to be converted and then parsed so I can get the precise data that I need.</p> <p>The problem is: I don't know how to do that and can't find a clear and satisfying answer to do it.</p> <p>Here is the code:</p> <p>My goal is to get this data: <code>&quot;xe7fd4c285496ab91&quot;</code> which is the identification number of the content, also called <code>&quot;contentId&quot;</code>.</p> <pre><code>import requests import bs4 import re  url = 'https://www.khanacademy.org/computing/computer-programming/programming/drawing-basics/pt/making-drawings-with-code' response = requests.get(url) soup = bs4.BeautifulSoup(response.text,'html.parser') # by the way I am not sure if this is the right way to parse the link  item = soup.find(string=re.compile('contentId')) # with this line I can get directly to the exact JavaScript tag that I need  print(item) # but as you can see, it's a pretty big string, and I need to parse it to get the desired data. But you can find that the desired data &quot;xe7fd4c285496ab91&quot; is in it. </code></pre> <p>I tried to use <code>json.parse()</code> but it is not working:</p> <pre><code>import json jsonparsed=json.parse(item) </code></pre> <p>Get this error:</p> <pre><code>AttributeError: 'NavigableString' object has no attribute 'json' </code></pre> <p>My question is: How can I get the desired data? Is there a function to convert the string into JavaScript so I can parse it? Or a way to convert this string into a JSON file?</p> <p>(Keep in mind that I will do this on multiple links with similar HTML/JavaScript).</p>"	55986182	"<p>You could just stick with regex on text alone without searching for script</p>  <pre><code>import re import requests  r = requests.get('https://www.khanacademy.org/computing/computer-programming/programming/drawing-basics/pt/making-drawings-with-code') p = re.compile(r'contentId"":""((?:(?!"").)*)')   i = p.findall(r.text)[0] print(i) </code></pre>  <p>Regex </p>  <p><a href=""https://i.stack.imgur.com/Mj2X7.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/Mj2X7.png"" alt=""enter image description here""></a></p>"
56018314	How to call python dir value in javascript	javascript|python	2019-05-07 08:17:59.473000 UTC	"<p>How to call python dictionary value in javascript file?</p>  <p>my java script code is</p>  <pre><code> &lt;script&gt;     var _data = {};     var _data = how to Store value ??,  &lt;/script&gt; </code></pre>  <p>My python code is</p>  <pre><code>drives_a = [chr(x) + ':' for x in range(65, 90) if os.path.exists(chr(x) + ':')] list_with_tuples = [(x, x) for x in drives_a] </code></pre>"	56018653	"<p>Which web framework do you use? Django?</p>  <p>If it is django then:</p>  <p>First dump to json the data in your view:</p>  <pre><code>your_data  = __import__(""json"").dumps(your_python_dict_list_etc) return render (request, ""your_template.html"", {""your_data"":your_data}) </code></pre>  <p>Then you can use it like this in your template:</p>  <pre><code> &lt;script&gt;     var json_data = {{ your_data }};  &lt;/script&gt; </code></pre>"
56038839	Want to transfer data from python to javascript using JSON	javascript|python|json	2019-05-08 10:41:16.373000 UTC	"<p>I have a python code from which I get an output variable (python list) which i dump into a json file. The resulting json file is this </p>  <pre><code>[""Arham"", "" "", ""0.0"", "" "", ""Fayyaz Bhai"", "" "", ""2.48"", "" "", ""Khan sahab"", "" "", ""2.25"", "" "", ""Osama"", "" "", ""0.0"", "" "", ""Yasir (paadri)"", "" "", ""0.0"", "" ""] </code></pre>  <p><strong>Is there any way to parse this .json file (in javascript) ?</strong></p>"	56039797	"<p>You can also dump list or dictionary easily into a file using <strong>json</strong> library.</p>  <pre><code>import json  a = [{'sampleval1': 1, 'sampleval2': 2, 'sampleval3': 3},{'sampleval1': 1, 'sampleval2': 2, 'sampleval3': 3}] json.dumps(a) json.dump(a, open('text.json',w), indent=4) </code></pre>"
56038839	Want to transfer data from python to javascript using JSON	javascript|python|json	2019-05-08 10:41:16.373000 UTC	"<p>I have a python code from which I get an output variable (python list) which i dump into a json file. The resulting json file is this </p>  <pre><code>[""Arham"", "" "", ""0.0"", "" "", ""Fayyaz Bhai"", "" "", ""2.48"", "" "", ""Khan sahab"", "" "", ""2.25"", "" "", ""Osama"", "" "", ""0.0"", "" "", ""Yasir (paadri)"", "" "", ""0.0"", "" ""] </code></pre>  <p><strong>Is there any way to parse this .json file (in javascript) ?</strong></p>"	56040252	"<p>If you using nodejs:</p>  <pre><code>let parsed = require('./test.json') console.log(parsed[0]) // Arham </code></pre>  <p>Just 'require' needed JSON file, and it will be parsed automatically. Arrays are valid JSON so you will get your array of strings.</p>"
56087295	Python3 scraping a bunch of javascript variables from webpage into a python dict object	javascript|python|python-3.x|dictionary|web-scraping	2019-05-11 04:53:32.227000 UTC	"<p>I'm using requests and BeautifulSoup4 to download and scrape information from a webpage, I have it successfully narrowing down to everything inside of a particular &lt;script&gt; tag that i'm trying to get data out of. For the purposes of getting this part of the code working, I'm skipping all the requests and BS4 stuff and just adding this string at the beginning of my code like so:</p>  <pre><code>Content = '''// &lt;![CDATA[ devicetype = ""computer""; isios = false; videocdn = ""media""; videopath = ""updates/na/vid01""; poster = {     ""file"": ""preview/vidsplash.jpg"",     ""st"": ""1557499029"",     ""et"": ""1557502629"",     ""hs"": ""f3ad16f42fec5224d323915cdfbf43ed"" }; attachname = ""some-video-00001234""; videos[0] = {     ""wmv"": {         ""file"": ""wmv/01.wmv"",         ""name"": ""01"",         ""duration"": 502,         ""size"": ""195.1MB"",         ""wid"": 854,         ""hgt"": 480,         ""st"": ""1557499029"",         ""et"": ""1557502629"",         ""hs"": ""a0cfdef3b8b9e3dea576368a5bfbaef9"",         ""caps"": []     },     ""h264"": {         ""file"": ""h264/01.mp4"",         ""name"": ""01"",         ""duration"": 502,         ""size"": ""73.9MB"",         ""wid"": 854,         ""hgt"": 480,         ""st"": ""1557499029"",         ""et"": ""1557502629"",         ""hs"": ""32901a1870d0b32458b465ac9c3d6cad"",         ""caps"": [{             ""file"": ""001.jpg"",             ""fs"": {                 ""st"": ""1557499029"",                 ""et"": ""1557502629"",                 ""hs"": ""5b328642a84fa6406bda527c18e46c27""             },             ""tn"": {                 ""st"": ""1557499029"",                 ""et"": ""1557502629"",                 ""hs"": ""0a4ad7d0edf1b92538b8127f8e297c41""             }         }, {             ""file"": ""002.jpg"",             ""fs"": {                 ""st"": ""1557499029"",                 ""et"": ""1557502629"",                 ""hs"": ""4390c0d9b321b5e86c88cb8ca5e56ede""             },             ""tn"": {                 ""st"": ""1557499029"",                 ""et"": ""1557502629"",                 ""hs"": ""9cf83158268379df660d6d01750a047c""             }         }]     } }; // ]]&gt;''' </code></pre>  <p>Also note this is prettified. Normally the ""poster"" and ""videos[0]"" variables would each be in its own line, not multi lines and indented like it is. And this isn't the complete set of data from the &lt;script&gt; tag, I just stripped down the repeated parts just so y'all could get an idea of the structure of the data. Also note that ""videos[0]"" will repeat a similar data structure into ""videos[1]"" and so on a variable number of times.</p>  <p>What i'm trying to do is get that big multi line string somehow converted into a proper dictionary that i can manipulate in my python code to extract the bits i need</p>  <p><code>print(NewContent)</code></p>  <p>Output:</p>  <p><code>{'devicetype' = 'computer', 'isios' = False, ""videocdn"" = ""media""}</code></p>  <p>And so on.</p>  <p>I've been messing around with js2py trying to get it to do what I need it to do, but so far the farthest I've gotten was with this code:</p>  <pre><code>splitrawlines = CONTENT.splitlines() rawvars = [] for line in splitrawlines:     # need to add the videos declaration in case it gets to a line where it expects it to already be declared.     rawvars.append(js2py.eval_js(""videos = [];\n"" + line))  print(rawvars) </code></pre>  <p>Only problem is it doesn't output it as a dict, it outputs it as a list, which I could still probably make work, but it isn't even a list that python can manipulate, it's technically still a <code>js2py.base.JsObjectWrapper</code> object. I can convert that object to a string, but the only ways I can find of converting a string to a list is separating everything in the string by spaces and throwing each separated part into its own entries in the list. I basically have an already formatted list, just inside a string.</p>  <p>I may be going the wrong direction with that code but it's the closest I've gotten thus far. So I need to either find a way to convert a string that's basically already formatted as a full fledged list into an actual list object, or more preferably, find some different way of getting all the variables in random JavaScript code into native python variables that I can manipulate.</p>"	56087379	"<p>JavaScript data mostly is in JSON format so you can use python module <code>json</code> to convert it to python<code>s dictionary</code>.</p>  <p>As example data after <code>""videos[0] = ""</code> creates correct JSON data and you can use <code>data = json.loads(stringg)</code>to create dictionary - and then you can get ie. <code>data['wmv']['size']</code> </p>  <pre><code>data = '''{     ""wmv"": {         ""file"": ""wmv/01.wmv"",         ""name"": ""01"",         ""duration"": 502,         ""size"": ""195.1MB"",         ""wid"": 854,         ""hgt"": 480,         ""st"": ""1557499029"",         ""et"": ""1557502629"",         ""hs"": ""a0cfdef3b8b9e3dea576368a5bfbaef9"",         ""caps"": []     },     ""h264"": {         ""file"": ""h264/01.mp4"",         ""name"": ""01"",         ""duration"": 502,         ""size"": ""73.9MB"",         ""wid"": 854,         ""hgt"": 480,         ""st"": ""1557499029"",         ""et"": ""1557502629"",         ""hs"": ""32901a1870d0b32458b465ac9c3d6cad"",         ""caps"": [{             ""file"": ""001.jpg"",             ""fs"": {                 ""st"": ""1557499029"",                 ""et"": ""1557502629"",                 ""hs"": ""5b328642a84fa6406bda527c18e46c27""             },             ""tn"": {                 ""st"": ""1557499029"",                 ""et"": ""1557502629"",                 ""hs"": ""0a4ad7d0edf1b92538b8127f8e297c41""             }         }, {             ""file"": ""002.jpg"",             ""fs"": {                 ""st"": ""1557499029"",                 ""et"": ""1557502629"",                 ""hs"": ""4390c0d9b321b5e86c88cb8ca5e56ede""             },             ""tn"": {                 ""st"": ""1557499029"",                 ""et"": ""1557502629"",                 ""hs"": ""9cf83158268379df660d6d01750a047c""             }         }]     } }'''  import json  data = json.loads(data)  print(data['wmv']['size'])  # 195.1MB </code></pre>  <p>If every variable is one line then you can use <code>split('\n')</code> to get lines and then use <code>split('=')</code> to get key and value. </p>  <p>Then you have to only check if value starts with <code>{</code> or <code>[</code> to use <code>json</code>. Other values can be normal string so they don't need <code>json</code> - it may need only to remove <code>""</code>.</p>  <pre><code>Content = '''// &lt;![CDATA[ devicetype = ""computer""; isios = false; videocdn = ""media""; videopath = ""updates/na/vid01""; poster = {""file"": ""preview/vidsplash.jpg"",""st"": ""1557499029"",""et"": ""1557502629"",""hs"": ""f3ad16f42fec5224d323915cdfbf43ed""}; attachname = ""some-video-00001234"";'''  import json  results = {}  for line in Content.split('\n'):     if ' = ' in line:         line = line[:-1]  # remove `;`          key, val = line.split(' = ', 1)          if val.startswith( ('[', '{') ):             results[key] = json.loads(val)         elif val.startswith('""'):             val = val[1:-1] # remove `""`             results[key] = val         elif val == 'false':             results[key] = False         elif val == 'true':             results[key] = True  print(results['devicetype']) print(results['isios']) print(results['videocdn']) print(results['poster']['file'])  # computer # False # media # preview/vidsplash.jpg </code></pre>"
56093391	Trying to port a tensorflow python to javascript	node.js|tensorflow|tensorflow.js	2019-05-11 18:57:38.287000 UTC	"<p>I'm trying to port this python code to javascript, I'm getting very different results in my js script so I wanted to make sure that my <strong>dense layers</strong> are correct:</p>  <h2>Python</h2>  <pre><code>let trainValues = // data source let trainLabels = // data source  model = tf.keras.models.Sequential([   tf.keras.layers.Dense(24, activation=tf.nn.relu),   tf.keras.layers.Dense(2, activation=tf.nn.softmax) ])  model.compile(optimizer='adam',   loss='sparse_categorical_crossentropy',   metrics=['accuracy'])   model.fit(x=trainValues, y=trainLabels, epochs=5) </code></pre>  <h2>Node.js</h2>  <pre><code>let trainValues = // data source let trainLabels = // data source  const model = tf.sequential(); model.add(tf.layers.dense({inputShape: [24], units: 24, activation: 'relu'})); model.add(tf.layers.dense({units: 1, activation: 'softmax'})); model.compile({     loss: tf.losses.softmaxCrossEntropy,     optimizer: tf.train.adam(),     metrics: ['accuracy'] });  trainValues = tf.tensor2d(trainValues); trainLabels = tf.tensor1d(trainLabels);  await model.fit(trainValues, trainLabels, {     epochs: 5 }); </code></pre>"	56093540	"<p>Your second dense layers seem to have a different number of units (<code>2</code> in python, <code>1</code> in JavaScript).</p>  <p>In addition, your loss functions are different (<code>sparse_categorical_crossentropy</code> in python, <code>softmaxCrossEntropy</code> in JavaScript). Instead of providing one of the <code>tf.losses.*</code> functions, you can simply pass a string here (as defined <a href=""https://github.com/tensorflow/tfjs-layers/blob/d086a5d014b2f74ec498b044b6127e57f5c83070/src/metrics.ts#L257"" rel=""nofollow noreferrer"">here</a>).</p>  <p>To have an identical model in JavaScript the code should look like this:</p>  <pre class=""lang-js prettyprint-override""><code>const model = tf.sequential(); model.add(tf.layers.dense({inputShape: [24], units: 24, activation: 'relu'})); model.add(tf.layers.dense({units: 2, activation: 'softmax'})); model.compile({     loss: 'sparseCategoricalCrossentropy',     optimizer: tf.train.adam(),     metrics: ['accuracy'] }); </code></pre>  <p>I'm assuming that the number of input units is <code>24</code> and that you correctly handled the data.</p>"
56093783	Finding all even factorizations of a given number n - javascript python	javascript|python|python-3.x|number-theory|factorization	2019-05-11 19:53:43.747000 UTC	"<p>Currently i am implementing an algorithm that relies on finding all even factorizations of a given number n, including n.</p>  <p>I've tried some things, but overall i am not able to handle the problem well. Maybe its a good idea to handle it recursively, but i am not that good with javascript yet, especially with the higher level aspects of the language which might come in handy.</p>  <pre><code>function evens(n) { evens = [] for (var i = 2; i &lt; n/2 - 1; i++){     if (i % 2 != 0){         continue;     }     else {         if ((n/i) % 2 == 0) {             evens.push([n/i, i])         }     } } return evens } </code></pre>  <p>This is some code that goes some of the way, but i am not yet able to recursively implement it considering all the right base cases. I also thought that it could be done with a tree like structure in which paths are even factors, but my cs knowledge is pretty bad.</p>  <p>Suggestions in Python are also welcome, but javascript would be best.</p>  <p>Just to make everything more clear: all even factorizations of 136 for example are [[68, 2], [34, 2, 2], [34, 4], [136]].</p>  <p>Thankfull for any help :)</p>"	56095530	"<p>After cdlane correctly pointed out a flaw in my solution, I have retracted my original solution, and ported cdlane's elegant python solution to javascript.</p>  <pre><code>function even_factorization(n) {   let solutions = [];    function even_divisors(n) {       var divisors = [];       for (let i = 2; i &lt;= n; i += 2) {         if (n % i === 0) divisors.push(i);       }       return divisors;   }    function remove_similarities(combos) {     for (let i = 0; i &lt; combos.length; i++) {       for (let j = i + 1; j &lt; combos.length; j++) {         if (combos[i].sort((a,b) =&gt; a - b).join("" "") === combos[j].sort((a,b) =&gt; a - b).join("" "")) {           combos.splice(j--,1);         }       }     }     return combos;   }    even_divisors(n).forEach(divisor =&gt; {     if (divisor === n)       solutions.push([divisor]);     else {         even_factorization(n / divisor).forEach(solution =&gt; {           solutions.push([divisor, ...solution]);         });     }   });    return remove_similarities(solutions); } </code></pre>  <p>Running with 218960 returns...</p>  <ul> <li>[[2,2,2,27370],[2,2,10,5474],[2,2,14,3910],[2,2,34,1610],[2,2,46,1190],[2,2,70,782],[2,2,170,322],[2,2,230,238],[2,2,54740],[2,4,27370],[2,10,14,782],[2,10,34,322],[2,10,46,238],[2,10,10948],[2,14,34,230],[2,14,46,170],[2,14,7820],[2,20,5474],[2,28,3910],[2,34,46,70],[2,34,3220],[2,46,2380],[2,68,1610],[2,70,1564],[2,92,1190],[2,140,782],[2,170,644],[2,230,476],[2,238,460],[2,322,340],[2,109480],[4,10,5474],[4,14,3910],[4,34,1610],[4,46,1190],[4,70,782],[4,170,322],[4,230,238],[4,54740],[8,27370],[10,14,34,46],[10,14,1564],[10,28,782],[10,34,644],[10,46,476],[10,68,322],[10,92,238],[10,21896],[14,20,782],[14,34,460],[14,46,340],[14,68,230],[14,92,170],[14,15640],[20,34,322],[20,46,238],[20,10948],[28,34,230],[28,46,170],[28,7820],[34,46,140],[34,70,92],[34,6440],[40,5474],[46,68,70],[46,4760],[56,3910],[68,3220],[70,3128],[92,2380],[136,1610],[140,1564],[170,1288],[184,1190],[230,952],[238,920],[280,782],[322,680],[340,644],[460,476],[218960]]</li> </ul>  <p>...and running with 136 returns...</p>  <ul> <li>[[2,2,34],[2,68],[4,34],[136]]</li> </ul>"
56093783	Finding all even factorizations of a given number n - javascript python	javascript|python|python-3.x|number-theory|factorization	2019-05-11 19:53:43.747000 UTC	"<p>Currently i am implementing an algorithm that relies on finding all even factorizations of a given number n, including n.</p>  <p>I've tried some things, but overall i am not able to handle the problem well. Maybe its a good idea to handle it recursively, but i am not that good with javascript yet, especially with the higher level aspects of the language which might come in handy.</p>  <pre><code>function evens(n) { evens = [] for (var i = 2; i &lt; n/2 - 1; i++){     if (i % 2 != 0){         continue;     }     else {         if ((n/i) % 2 == 0) {             evens.push([n/i, i])         }     } } return evens } </code></pre>  <p>This is some code that goes some of the way, but i am not yet able to recursively implement it considering all the right base cases. I also thought that it could be done with a tree like structure in which paths are even factors, but my cs knowledge is pretty bad.</p>  <p>Suggestions in Python are also welcome, but javascript would be best.</p>  <p>Just to make everything more clear: all even factorizations of 136 for example are [[68, 2], [34, 2, 2], [34, 4], [136]].</p>  <p>Thankfull for any help :)</p>"	56096859	"<blockquote>   <p>Maybe its a good idea to handle it recursively</p> </blockquote>  <p>Here's my attempt at a recursive solution in Python:</p>  <pre><code>def even_factorization(n):     solutions = []      def even_divisors(n):  # 136 generates [2, 4, 8, 34, 68, 136]         return (d for d in range(2, n + 1, 2) if n % d == 0)      def remove_similarities(array):  # [[2, 2, 34], [2, 34, 2], [34, 2, 2]] -&gt; [[2, 2, 34]]         return list(map(list, set(map(lambda a: tuple(sorted(a)), array))))      for divisor in even_divisors(n):         if divisor == n:             solutions.append([divisor])         else:             for solution in even_factorization(n // divisor):                 solutions.append([divisor] + solution)      return remove_similarities(solutions)  # return 'solutions' to see raw data </code></pre>  <p>For 136 returns:</p>  <pre><code>[[2, 2, 34], [4, 34], [2, 68], [136]] </code></pre>  <p>for 218960 returns:</p>  <pre><code>[[184, 1190], [8, 27370], [4, 54740], [2, 70, 1564], [56, 3910], [2, 2, 170, 322], [280, 782], [70, 3128], [4, 46, 1190], [2, 2, 34, 1610], [2, 14, 34, 230], [2, 14, 7820], [20, 34, 322], [10, 14, 34, 46], [14, 92, 170], [20, 46, 238], [218960], [2, 322, 340], [10, 68, 322], [34, 46, 140], [10, 14, 1564], [2, 10, 10948], [10, 92, 238], [4, 170, 322], [92, 2380], [14, 20, 782], [10, 21896], [238, 920], [28, 34, 230], [10, 28, 782], [2, 2, 46, 1190], [2, 28, 3910], [10, 34, 644], [34, 6440], [2, 92, 1190], [46, 4760], [2, 170, 644], [2, 68, 1610], [4, 70, 782], [340, 644], [2, 34, 46, 70], [2, 20, 5474], [14, 68, 230], [2, 34, 3220], [4, 34, 1610], [4, 10, 5474], [28, 7820], [14, 34, 460], [322, 680], [10, 46, 476], [2, 2, 54740], [4, 230, 238], [2, 2, 2, 27370], [34, 70, 92], [2, 140, 782], [14, 15640], [2, 10, 46, 238], [2, 10, 14, 782], [2, 14, 46, 170], [2, 238, 460], [136, 1610], [2, 2, 10, 5474], [20, 10948], [4, 14, 3910], [40, 5474], [2, 2, 70, 782], [2, 2, 230, 238], [230, 952], [68, 3220], [2, 46, 2380], [2, 230, 476], [2, 10, 34, 322], [140, 1564], [460, 476], [170, 1288], [2, 4, 27370], [46, 68, 70], [14, 46, 340], [2, 109480], [28, 46, 170], [2, 2, 14, 3910]] </code></pre>"
56104216	Inserting a python dictionary key/values into javascript lists with Jinja/Flask	python|jinja2	2019-05-12 23:15:09.443000 UTC	"<p>I'm using ChartJs to display some data, my chart is defined like so:</p>  <pre><code>var myChart = new Chart(ctx1, {        type: 'pie',        data: {            labels: ['label1', 'label2', 'label3', 'label4'],            datasets: [{                label: 'Chart 1',                data: [12, 19, 100, 5],                backgroundColor: [                    'rgba(255, 99, 132, 1)',                    'rgba(54, 162, 235, 1)',                    'rgba(255, 206, 86, 1)',                    'rgba(75, 192, 192, 1)',                ],                borderColor: [                    'rgba(255, 99, 132, 1)',                    'rgba(54, 162, 235, 1)',                    'rgba(255, 206, 86, 1)',                    'rgba(75, 192, 192, 1)',                ],                borderWidth: 1            }]        },        options: {        }    }); </code></pre>  <p>The variable <code>label</code> I would like to populate with keys from a python dictionary</p>  <pre><code>chart_data = {'A':10, 'B':5, 'C':7, 'D':15} </code></pre>  <p>and the <code>data</code> variable populated with the dictionary values, so what I'd end up with in my javascript is</p>  <pre><code>           labels: ['A', 'B', 'C', 'D'],            datasets: [{                label: 'Chart 1',                data: [10, 5, 7, 15], </code></pre>  <p>I'm just not sure how to iterate a dictionary with Jinja to only return the keys, and to only return the values, into a JavaScript list.</p>  <p>Can I use a Jinja for/loop to iterate inside a javascript list? It doesnt seem to work</p>  <pre><code>some_js_var = [{% for x in y %} {{ x }} {% endfor %}] </code></pre>"	56104390	"<p>I assigned my python dictionary to a JS variable like so:</p>  <pre><code>var data_from_python = {{ python_dict|tojson }} </code></pre>  <p>Then to just assign the keys to a variable as a list:</p>  <pre><code>labels: Object.keys(data_from_python), </code></pre>  <p>and same the values in the data</p>  <pre><code>data: Object.values(data_from_python) </code></pre>  <p>What I end up with is</p>  <pre><code>labels: ['A', 'B', 'C', 'D'] data: [10, 5, 7, 15] </code></pre>"
56104460	Is there way to change the value of a variable in a python script from javascript?	javascript|python	2019-05-13 00:07:20.247000 UTC	<p>I have a python script and apache web server running in a raspberry pi. I want to change the value of a variable in my python script from a web page using javascript. It is possible?</p>	56131444	"<p>We can use socket.  for easily using socket, we can use socket.io  </p>  <p><strong>Start.html</strong></p>  <pre><code>&lt;!doctype html&gt; &lt;html&gt; &lt;head&gt;     &lt;script type=""text/javascript"" src=""//cdnjs.cloudflare.com/ajax/libs/socket.io/1.3.6/socket.io.min.js""&gt;&lt;/script&gt; &lt;/head&gt;  &lt;body&gt;     &lt;h1&gt;Socket.IO GPIO control&lt;/h1&gt;     &lt;button id=""btnGpio""&gt;Change GPIO&lt;/button&gt;      &lt;script&gt;         var socket = io.connect('http://localhost:5000');         var index = 0;         socket.on('connect', function () {             console.log('connected')              document.getElementById('btnGpio').addEventListener('click', () =&gt; {                 index = index + 1;                 console.log('index', index)                 socket.emit('change_gpio', { status: (index % 2 == 0) })             })         });     &lt;/script&gt; &lt;/body&gt; &lt;/html&gt; </code></pre>  <p><strong>socket_server.py</strong></p>  <pre><code>from flask import Flask, render_template from flask_socketio import SocketIO, emit  app = Flask(__name__) @app.route(""/"") def home():     return render_template(""Start.html"")  socketio = SocketIO(app)  pin = True @socketio.on('change_gpio') def handle_my_custom_event(json):     pin = json['status']     print('pin = ' , pin)  @socketio.on('connect', namespace='/') def test_connect():     print('Connected')   if __name__ == '__main__':     socketio.run(app) </code></pre>  <p>Install library with pip</p>  <pre><code>pip install flask pip install flask-socketio </code></pre>  <p><strong>Document:</strong><br> <a href=""https://flask-socketio.readthedocs.io/en/latest/"" rel=""nofollow noreferrer"">https://flask-socketio.readthedocs.io/en/latest/</a></p>"
56112799	How to execute Python script from Javascript or Nodejs?	javascript|python|html|node.js	2019-05-13 12:52:57.737000 UTC	"<p>I am trying to use the list from my python output into a dropdown menu in an HTML form.</p>  <p>I have a website built in HTML/ CCS, a server with nodeJS, and several scripts i want to use in python3.</p>  <p>I tested multiple thngs but I can't manage to make it work.</p>  <ol> <li><p>I tried putting some Javascript but I can't get the infos from the python script</p></li> <li><p>I tried running the script from nodeJS, but the script takes a lot of time so it doesn't work. </p></li> </ol>  <p>here is my app.js : </p>  <pre><code>app.post(""/getData"", function (request, response) {     var IP = request.body.IP;     var user = request.body.user;     var password = request.body.password;     const testscript = exec('python getCPG.py ' + IP + user + password);     console.log(""test1"");     testscript.stdout.on('data', function (data) {         console.log(""test2"");         console.log(data);         // sendBackInfo();     });     //response.sendFile(path.join(__dirname + '/public/views/indexwithIP.html'));     //app.post(""/LUNProvisionning"", function (request, response) {     //    console.log(request.body.serveur);     //    console.log(request.body.volumetrie);     //    console.log(request.body.type);     //    response.sendFile(path.join(__dirname + '/public/views/index.html'));     //});      response.sendFile(path.join(__dirname + '/public/views/index.html')); }); </code></pre>  <p>Here is my html form: </p>  <pre><code>    &lt;form action=""/getData"" method=""post"" name=""getData""&gt;         &lt;fieldset&gt;             &lt;legend&gt;LUN Provisionning&lt;/legend&gt;             &lt;label&gt;IP baie : &lt;/label&gt;             &lt;input name=""IP"" id=""IP"" required&gt;             &lt;br /&gt;             &lt;label&gt;user baie : &lt;/label&gt;             &lt;input type=""text"" placeholder=""3paradm"" name=""user"" id=""userbaie"" required&gt;             &lt;label&gt;Password baie : &lt;/label&gt;             &lt;input type=""password"" name=""password"" id=""PWbaie"" required&gt;             &lt;br /&gt;         &lt;/fieldset&gt;     &lt;/form&gt; </code></pre>  <p>This sends data to the servers which runs the python script. But the server takes too much time to get an answer.  Then I will try to put the answer in a dropdown form. I had to create 2 form or else it wouldn't work using JavaSscript and putting a button.</p>  <p>Here is the output of my python script: </p>  <pre><code>SSD_r1 SSD_r5 SSD_r6 fs_cpg CPG4S2 </code></pre>  <p>edit ""adding python script"" Here is the python script: </p>  <pre><code>from hpe3parclient import client, exceptions import sys  IPbaie = sys.argv[1] userbaie = sys.argv[2] pwbaie = sys.argv[3]  cl = client.HPE3ParClient(""http://"" + IPbaie + "":8008/api/v1"") cl.setSSHOptions(IPbaie, userbaie, pwbaie)  def getCPG(): #retourn une liste         temp = []         cpg = cl.getCPGs()         listcpg = cpg['members']         for x in listcpg:                 temp.append(x.get('name'))         return(temp)  try:     cl.login(userbaie, pwbaie)     print(""login successful."") except exceptions.HTTPUnauthorized as ex:     print (""login failed."") try:     listcpg = getCPG()     for x in listcpg:         print (x) except exceptions.HTTPUnauthorized as ex:     print (""You must login first"") except Exception as ex:     print (ex)  cl.logout() print (""logout worked"")  </code></pre>  <p>Thank you</p>"	56112891	"<p>I would suggest putting an API in front of your server-python scripts. This adds a layer of abstraction between the front and backend (which is good for security). Your javascript function could call the API endpoint, and retrieve the output.</p>  <p>Regarding the slowness of the python script: Not sure how to help there without seeing the code. </p>"
56112799	How to execute Python script from Javascript or Nodejs?	javascript|python|html|node.js	2019-05-13 12:52:57.737000 UTC	"<p>I am trying to use the list from my python output into a dropdown menu in an HTML form.</p>  <p>I have a website built in HTML/ CCS, a server with nodeJS, and several scripts i want to use in python3.</p>  <p>I tested multiple thngs but I can't manage to make it work.</p>  <ol> <li><p>I tried putting some Javascript but I can't get the infos from the python script</p></li> <li><p>I tried running the script from nodeJS, but the script takes a lot of time so it doesn't work. </p></li> </ol>  <p>here is my app.js : </p>  <pre><code>app.post(""/getData"", function (request, response) {     var IP = request.body.IP;     var user = request.body.user;     var password = request.body.password;     const testscript = exec('python getCPG.py ' + IP + user + password);     console.log(""test1"");     testscript.stdout.on('data', function (data) {         console.log(""test2"");         console.log(data);         // sendBackInfo();     });     //response.sendFile(path.join(__dirname + '/public/views/indexwithIP.html'));     //app.post(""/LUNProvisionning"", function (request, response) {     //    console.log(request.body.serveur);     //    console.log(request.body.volumetrie);     //    console.log(request.body.type);     //    response.sendFile(path.join(__dirname + '/public/views/index.html'));     //});      response.sendFile(path.join(__dirname + '/public/views/index.html')); }); </code></pre>  <p>Here is my html form: </p>  <pre><code>    &lt;form action=""/getData"" method=""post"" name=""getData""&gt;         &lt;fieldset&gt;             &lt;legend&gt;LUN Provisionning&lt;/legend&gt;             &lt;label&gt;IP baie : &lt;/label&gt;             &lt;input name=""IP"" id=""IP"" required&gt;             &lt;br /&gt;             &lt;label&gt;user baie : &lt;/label&gt;             &lt;input type=""text"" placeholder=""3paradm"" name=""user"" id=""userbaie"" required&gt;             &lt;label&gt;Password baie : &lt;/label&gt;             &lt;input type=""password"" name=""password"" id=""PWbaie"" required&gt;             &lt;br /&gt;         &lt;/fieldset&gt;     &lt;/form&gt; </code></pre>  <p>This sends data to the servers which runs the python script. But the server takes too much time to get an answer.  Then I will try to put the answer in a dropdown form. I had to create 2 form or else it wouldn't work using JavaSscript and putting a button.</p>  <p>Here is the output of my python script: </p>  <pre><code>SSD_r1 SSD_r5 SSD_r6 fs_cpg CPG4S2 </code></pre>  <p>edit ""adding python script"" Here is the python script: </p>  <pre><code>from hpe3parclient import client, exceptions import sys  IPbaie = sys.argv[1] userbaie = sys.argv[2] pwbaie = sys.argv[3]  cl = client.HPE3ParClient(""http://"" + IPbaie + "":8008/api/v1"") cl.setSSHOptions(IPbaie, userbaie, pwbaie)  def getCPG(): #retourn une liste         temp = []         cpg = cl.getCPGs()         listcpg = cpg['members']         for x in listcpg:                 temp.append(x.get('name'))         return(temp)  try:     cl.login(userbaie, pwbaie)     print(""login successful."") except exceptions.HTTPUnauthorized as ex:     print (""login failed."") try:     listcpg = getCPG()     for x in listcpg:         print (x) except exceptions.HTTPUnauthorized as ex:     print (""You must login first"") except Exception as ex:     print (ex)  cl.logout() print (""logout worked"")  </code></pre>  <p>Thank you</p>"	56113173	<p>It seems that there should be a space character after the name of the script:</p>  <p><code>const testscript = exec('python getCPG.py ' + IP + user + password);</code></p>
56112799	How to execute Python script from Javascript or Nodejs?	javascript|python|html|node.js	2019-05-13 12:52:57.737000 UTC	"<p>I am trying to use the list from my python output into a dropdown menu in an HTML form.</p>  <p>I have a website built in HTML/ CCS, a server with nodeJS, and several scripts i want to use in python3.</p>  <p>I tested multiple thngs but I can't manage to make it work.</p>  <ol> <li><p>I tried putting some Javascript but I can't get the infos from the python script</p></li> <li><p>I tried running the script from nodeJS, but the script takes a lot of time so it doesn't work. </p></li> </ol>  <p>here is my app.js : </p>  <pre><code>app.post(""/getData"", function (request, response) {     var IP = request.body.IP;     var user = request.body.user;     var password = request.body.password;     const testscript = exec('python getCPG.py ' + IP + user + password);     console.log(""test1"");     testscript.stdout.on('data', function (data) {         console.log(""test2"");         console.log(data);         // sendBackInfo();     });     //response.sendFile(path.join(__dirname + '/public/views/indexwithIP.html'));     //app.post(""/LUNProvisionning"", function (request, response) {     //    console.log(request.body.serveur);     //    console.log(request.body.volumetrie);     //    console.log(request.body.type);     //    response.sendFile(path.join(__dirname + '/public/views/index.html'));     //});      response.sendFile(path.join(__dirname + '/public/views/index.html')); }); </code></pre>  <p>Here is my html form: </p>  <pre><code>    &lt;form action=""/getData"" method=""post"" name=""getData""&gt;         &lt;fieldset&gt;             &lt;legend&gt;LUN Provisionning&lt;/legend&gt;             &lt;label&gt;IP baie : &lt;/label&gt;             &lt;input name=""IP"" id=""IP"" required&gt;             &lt;br /&gt;             &lt;label&gt;user baie : &lt;/label&gt;             &lt;input type=""text"" placeholder=""3paradm"" name=""user"" id=""userbaie"" required&gt;             &lt;label&gt;Password baie : &lt;/label&gt;             &lt;input type=""password"" name=""password"" id=""PWbaie"" required&gt;             &lt;br /&gt;         &lt;/fieldset&gt;     &lt;/form&gt; </code></pre>  <p>This sends data to the servers which runs the python script. But the server takes too much time to get an answer.  Then I will try to put the answer in a dropdown form. I had to create 2 form or else it wouldn't work using JavaSscript and putting a button.</p>  <p>Here is the output of my python script: </p>  <pre><code>SSD_r1 SSD_r5 SSD_r6 fs_cpg CPG4S2 </code></pre>  <p>edit ""adding python script"" Here is the python script: </p>  <pre><code>from hpe3parclient import client, exceptions import sys  IPbaie = sys.argv[1] userbaie = sys.argv[2] pwbaie = sys.argv[3]  cl = client.HPE3ParClient(""http://"" + IPbaie + "":8008/api/v1"") cl.setSSHOptions(IPbaie, userbaie, pwbaie)  def getCPG(): #retourn une liste         temp = []         cpg = cl.getCPGs()         listcpg = cpg['members']         for x in listcpg:                 temp.append(x.get('name'))         return(temp)  try:     cl.login(userbaie, pwbaie)     print(""login successful."") except exceptions.HTTPUnauthorized as ex:     print (""login failed."") try:     listcpg = getCPG()     for x in listcpg:         print (x) except exceptions.HTTPUnauthorized as ex:     print (""You must login first"") except Exception as ex:     print (ex)  cl.logout() print (""logout worked"")  </code></pre>  <p>Thank you</p>"	56116083	"<p>How about using <code>child_process.execFile</code> since <code>exec</code> has been deprecated according to: <a href=""https://www.npmjs.com/package/exec"" rel=""nofollow noreferrer"">https://www.npmjs.com/package/exec</a><br></p>  <pre><code>const {execFile} = require('child_process'); const testscript = execFile('python3', ['file_name.py', 'command_line_arg1', 'command_line_arg2', 'command_line_arg3'], (error, stdout, stderr) =&gt; {     if (error) throw error;     console.log(stdout);     }) </code></pre>  <p>This would print every <code>print</code> statement in your python file. So I would suggest you should remove them.</p>"
56118640	"How can I write Python print( statement, end=' ') in JavaScript?"	javascript|python	2019-05-13 19:19:33.357000 UTC	"<p>I want to add a space after <code>console.log</code> in JavaScript, not new line. Like in Python:</p>  <pre><code>for i in range(5):     print(i, end=' ') </code></pre>"	56118672	<pre><code>console.log(i + ' ') </code></pre>  <p>This will print a string <code>i</code> and a space after.</p>
56141950	how to run python code from javascript or html?	javascript|python|html|css	2019-05-15 04:49:45.833000 UTC	"<p>I wrote the code in python which reads the CSV file. Now, I want to run that python code from the javascript or HTML </p>  <p>Here is the python code </p>  <pre><code>     with open('C:\\Users\\Desktop\\Summer.csv') as csvDataFile:      csvReader = csv.reader(csvDataFile)      for row in csvReader:         print(row) </code></pre>  <p>Here is the html and javascript code </p>  <pre><code>        $.ajax({         url: ""C:\\Users\\Pictures\\test.py"",         success: function(response) {             // here you do whatever you want with the response variable         }         });      } </code></pre>"	56142081	"<pre><code>with open('C:\\Users\\Desktop\\Summer.csv') as csvDataFile:         csvReader = csv.reader(csvDataFile)          for row in csvReader:            print(row)      </code></pre>  <p>bind this code in a function in py file </p>  <pre><code> $.ajax({         url: ""..\test.py\somefunctionName"",         success: function(response) {             // here you do whatever you want with the response variable         }         });      } </code></pre>  <p>Use url paramater to invoke that function and you are good to go</p>"
56195001	Do JavaScript classes have a method equivalent to Python classes' __call__?	javascript|python	2019-05-18 00:25:23.723000 UTC	"<p>In Python, you can implement <code>__call__()</code> for a class such that calling an instance of the class itself executes the <code>__call__()</code> method.</p>  <pre><code>class Example:     def __call__(self):         print(""the __call__ method"")  e = Example() e() # ""the __call__ method""  </code></pre>  <p>Do JavaScript classes have an equivalent method?</p>  <p><strong>Edit</strong></p>  <p>A summary answer incorporating the discussion here:</p>  <ul> <li>Python and JavaScript objects are not similar enough for a <em>true</em> equivalent (prototype vs. class based, <code>self</code>, vs. <code>this</code>)</li> <li>The API <em>can</em> be achieved however using <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy"" rel=""noreferrer"">proxy</a> or modifying the prototype – and maybe using <code>bind</code>?</li> <li>One should generally not do this: it is too far removed from the JS's structure and from the normal use of of JavaScript, potentially creating confusion among other JS devs, your future-self, and could result in idiosyncratic side-effects.</li> </ul>"	56195018	"<p>The only way to do this would be for the constructor to explicitly return a function, which can be called. (In Javascript, if you don't explicitly <code>return</code> inside a constructor, the newly created instance gets returned - but such an instance will be a plain object, not a function.)</p>  <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-js lang-js prettyprint-override""><code>class Example {   constructor() {     return function() {       console.log('function running');     }   } }  const e = new Example(); e();</code></pre> </div> </div> </p>  <p>But this would be <em>really weird</em> to do, and would not allow you to reference any of the properties on the prototype, or anything like that. Better to avoid it, or to make a plain function that returns a function:</p>  <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-js lang-js prettyprint-override""><code>const example = () =&gt; () =&gt; console.log('function running'); const e = example(); e();</code></pre> </div> </div> </p>"
56195001	Do JavaScript classes have a method equivalent to Python classes' __call__?	javascript|python	2019-05-18 00:25:23.723000 UTC	"<p>In Python, you can implement <code>__call__()</code> for a class such that calling an instance of the class itself executes the <code>__call__()</code> method.</p>  <pre><code>class Example:     def __call__(self):         print(""the __call__ method"")  e = Example() e() # ""the __call__ method""  </code></pre>  <p>Do JavaScript classes have an equivalent method?</p>  <p><strong>Edit</strong></p>  <p>A summary answer incorporating the discussion here:</p>  <ul> <li>Python and JavaScript objects are not similar enough for a <em>true</em> equivalent (prototype vs. class based, <code>self</code>, vs. <code>this</code>)</li> <li>The API <em>can</em> be achieved however using <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy"" rel=""noreferrer"">proxy</a> or modifying the prototype – and maybe using <code>bind</code>?</li> <li>One should generally not do this: it is too far removed from the JS's structure and from the normal use of of JavaScript, potentially creating confusion among other JS devs, your future-self, and could result in idiosyncratic side-effects.</li> </ul>"	56195118	"<p>You can get this done, but in a rather weird way.</p>  <p>There isn't anything like <code>__call__()</code>, <code>__add__()</code> or <code>__sub__()</code> in JavaScript - JavaScript does not support operator overloading.</p>  <p>However if you really want to make objects callable, you can do it by giving a function a different prototype:</p>  <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-js lang-js prettyprint-override""><code>function createCallableObject(cls, fn) {     // wrap the original function to avoid modifying it     const wrapper = (...args) =&gt; fn(...args)     // set the prototype of the wrapped function so we can call class methods     Object.setPrototypeOf(wrapper, cls.prototype)     return wrapper }  class Example {     method() { console.log('This is an instance of class Example') } } function example() { console.log('This is a function') }  const obj = createCallableObject(Example, example) obj() // 'This is a function' obj.method() // 'This is an instance of class Example' console.log(obj.constructor) // 'class Example { ... }'</code></pre> </div> </div> </p>"
56195001	Do JavaScript classes have a method equivalent to Python classes' __call__?	javascript|python	2019-05-18 00:25:23.723000 UTC	"<p>In Python, you can implement <code>__call__()</code> for a class such that calling an instance of the class itself executes the <code>__call__()</code> method.</p>  <pre><code>class Example:     def __call__(self):         print(""the __call__ method"")  e = Example() e() # ""the __call__ method""  </code></pre>  <p>Do JavaScript classes have an equivalent method?</p>  <p><strong>Edit</strong></p>  <p>A summary answer incorporating the discussion here:</p>  <ul> <li>Python and JavaScript objects are not similar enough for a <em>true</em> equivalent (prototype vs. class based, <code>self</code>, vs. <code>this</code>)</li> <li>The API <em>can</em> be achieved however using <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy"" rel=""noreferrer"">proxy</a> or modifying the prototype – and maybe using <code>bind</code>?</li> <li>One should generally not do this: it is too far removed from the JS's structure and from the normal use of of JavaScript, potentially creating confusion among other JS devs, your future-self, and could result in idiosyncratic side-effects.</li> </ul>"	56195166	"<p>I basically agree with @CertainPerformace that this isn't really something you would do in normal JS code. Having said that, proxies offer a lot of possibilities and you can create something that is surprisingly close to (on the surface) to Python's <code>__call__()</code>.</p>  <p>For example:</p>  <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-js lang-js prettyprint-override""><code>class F extends Function{     constructor(someID, arr, n){         super()         this.id = someID         this.arr = arr         this.n = n          return new Proxy(this, {             apply(target, thisArg, argumentsList) {               return target.__call__(...argumentsList);             }         })     }     __call__(a){                  // simple mult functions         return a * this.n     }      *[Symbol.iterator](){         // make it iterable for demo purposes         yield *this.arr.map(this) // call itself in a map!     } }   let f = new F(""FrankenFunction"", [1, 2, 3, 4], 5)  // access instance variable console.log(""id:"", f.id)  // call it  console.log(""calling with 100: "", f(100))  // use the iterator // get multiples of calling this on arr console.log([...f])  // change the __call__ function to power instead F.prototype.__call__ = function(a){     return  a ** this.n  } // change n to get squares: f.n = 2  // call it again with new __call__ console.log(""calling with 10:"", f(10))  // 10**2 console.log([...f]) // or iterate</code></pre> </div> </div> </p>  <p>I really not sure if any of this is a good idea, but it's an interesting experiment.</p>"
56206871	How to access django python returned JSON data in the javascript part of an htmlpage	javascript|python|django	2019-05-19 10:24:11.383000 UTC	"<p>I want to know how to access the a django python returned JSON data in the javascript part of an html page. This is JSON data that I'm getting from the server end which I've logged in the browser console</p>  <p><strong>{""movieName"": ""Avengers"", ""releaseYear"": ""2019"", ""boxOffice"": ""2.3B""}</strong></p>  <p><strong>68</strong></p>  <p>Here is my sample code</p>  <p>Javascript part</p>  <pre><code>var dataFromDjango = ""{{ myData | escapejs | safe }}""; console.log(dataFromDjango); var t = Object.keys(dataFromDjango).length; console.log(t); </code></pre>  <p>Python code</p>  <pre><code>context = {} context['movieName'] = 'Avengers' context['releaseYear'] = str(2019) context['boxOffice'] = '2.3B'  jsonData = json.dumps(context) return render(request, ""InterfacePage.html"", {""myData"" : jsonData}) </code></pre>  <p>I was expecting the length of keys to be 3.</p>"	56206941	"<p>You need to parse it from a JSON string to a JS object. Note, you shouldn't use <code>escapejs</code> here.</p>  <pre><code>var dataFromDjango = JSON.parse(""{{ myData | safe }}""); </code></pre>"
56206871	How to access django python returned JSON data in the javascript part of an htmlpage	javascript|python|django	2019-05-19 10:24:11.383000 UTC	"<p>I want to know how to access the a django python returned JSON data in the javascript part of an html page. This is JSON data that I'm getting from the server end which I've logged in the browser console</p>  <p><strong>{""movieName"": ""Avengers"", ""releaseYear"": ""2019"", ""boxOffice"": ""2.3B""}</strong></p>  <p><strong>68</strong></p>  <p>Here is my sample code</p>  <p>Javascript part</p>  <pre><code>var dataFromDjango = ""{{ myData | escapejs | safe }}""; console.log(dataFromDjango); var t = Object.keys(dataFromDjango).length; console.log(t); </code></pre>  <p>Python code</p>  <pre><code>context = {} context['movieName'] = 'Avengers' context['releaseYear'] = str(2019) context['boxOffice'] = '2.3B'  jsonData = json.dumps(context) return render(request, ""InterfacePage.html"", {""myData"" : jsonData}) </code></pre>  <p>I was expecting the length of keys to be 3.</p>"	56206943	"<p>You here present your JSON blob as a string. Indeed, you write something like:</p>  <pre><code>""{\""movieName\"": \""Avengers\"", \""releaseYear\"": \""2019\"", \""boxOffice\"": \""2.3B\""}""; </code></pre>  <p>in your JavaScript file. The <code>Object.keys(dataFromDjango) will return the indices of the string, so an array from</code>0<code>to</code>68`.</p>  <p>You can present the JSON blob to JavaScript with:</p>  <pre><code>var dataFromDjango = <b>JSON.parse('</b>{{ myData | safe }}<b>')</b>;</code></pre>  <p>so here we let JavaScript conver the string back into a JavaScript object, this is probably the safest option since if the string contains prombe,s then JavaScript will error on the parsing of the JSON blob.</p>"
56216084	When returning variable to javascript to Python we always need to jsonify it?	javascript|python|flask	2019-05-20 07:23:42.577000 UTC	<p>I am using flask and from my understanding JSON format consists of two types which are arrays and objects. After converting python variable into something like:</p>  <pre><code>data = [{key:value}] </code></pre>  <p>why do I always have to</p>  <pre><code>return jsonify(data) </code></pre>  <p>in order to send it back to js?</p>	56216136	"<p>JavaScript runs on the client computer. Python runs on the server. These are two different machines. They communicate over the network. You can only send sequences of bytes over the network. JSON is a way of serializing objects, i.e. turning Python objects into a portable (i.e. machine, CPU, os independent) sequence of bytes.</p>  <p>There's nothing particularly special about JSON, you could use some other format like XML or even binary protobuf. The good thing about JSON is that both Python and JavaScript have JSON parsers built-in.</p>"
56232828	I am unable to return my python dictionary created in my Flask Server to my Javascript HTML Page	ajax|post|flask	2019-05-21 07:04:31.043000 UTC	"<p>I'm trying to build a REST api using a flask back-end which can be called using an AJAX call from my index.html page. This back-end server takes in parameters from my index.html page, computes values based on them and then returns the result so that it can be plotted on my index.html page. </p>  <p>I've been able to pass values back only when I am using a single variable (Eg. alphaValues) which is then JSONified and returned. </p>  <pre><code> @app.route('/api', methods=['GET', 'POST']) //Thi @cross_origin() def main_interface():     if request.method == 'POST':         data = request.get_json()          parameters = {             'local_pool_size': data[""local_pool_size""],             'plots': int(data[""plots""]),             'soil_effect': data[""soil_effect""]=='true'         }          \\I then pass these parameters into another function to obtain an ordered dictionary of values to be plotted onto a graph.         valueDict = get_plotting_variable(parameters)         \\I first convert the elements in my original ordered dictionary to          dictionaries by accessing their key pairs         alphaValues = dict(valueDict[""alpha_mean""])         alphaStd = dict(valueDict[""alpha_std""])         betaValues = dict(valueDict[""beta""])         pairWiseBeta = dict(valueDict[""pairwise_beta""])          \\I then assign these to a larger dictionary         values = {""alphaValues"":alphaValues,""betaValues"": betaValues, ""Std"": alphaStd, ""Pairwise_Beta"": pairWiseBeta}           \\Lastly, I then return these to my original function           return jsonify(values) </code></pre>  <p>and this is my AJAX call</p>  <pre><code> $.ajax({             type: ""POST"",             url: ""http://127.0.0.1:5000/api"",             data: JSON.stringify(values),             dataType: 'json',       contentType: 'application/json',       success: function(data){         var result = JSON.parse(data)         console.log(result)         generateGraph(data)       },       error: function(){         console.log(""AJAX call was not succesful"")       }     }) </code></pre>  <p>I expect to get the dictionary of values produced in my flask back-end returned to my AJAX and logged in but I keep getting the notice that my AJAX call is not successful instead. Any help with this would be great.</p>  <p>EDIT: AS suggested by @tech at the spark foundation, I've modified my AJAX call to</p>  <pre><code>error: function(xhr, textStatus, error){         console.log(xhr.statusText);         console.log(textStatus);         console.log(error);       }  </code></pre>  <p>This in turn gives me</p>  <pre><code>OK parsererror SyntaxError: Unexpected token N in JSON at position 24     at parse (&lt;anonymous&gt;)     at Nb (jquery.min.js:4)     at A (jquery.min.js:4)     at XMLHttpRequest.&lt;anonymous&gt; (jquery.min.js:4) </code></pre>  <p>Here is the Python Dictionary Generated</p>  <pre><code>{'alphaValues':  {5: [0.0, 2.725, 3.025, 3.075, 3.225, 3.3, 3.325, 3.35, 3.325, 3.375, 3.375, 3.45, 3.45, 3.475, 3.525, 3.6, 3.65, 3.65, 3.675, 3.725, 3.725, 3.8, 3.9, 3.9, 3.9, 3.95, 3.875, 3.85, 3.9, 3.95, 3.975, 3.975, 4.0, 4.0, 4.0],  10: [0.0, 3.9, 4.7, 5.225, 5.275, 5.375, 5.4, 5.45, 5.475, 5.6, 5.625, 5.675, 5.775, 5.875, 5.85, 5.95, 5.9, 5.9, 5.925, 5.9, 6.0, 6.1, 6.2, 6.275, 6.275, 6.35, 6.45, 6.45, 6.45, 6.45, 6.5, 6.5, 6.6, 6.575, 6.6]},   'betaValues':    {5: [nan, 20.550458715596328, 20.49586776859504, 21.13821138211382, 20.77519379844961, 20.90909090909091, 20.751879699248118, 20.597014925373134, 20.751879699248118, 20.74074074074074, 20.74074074074074, 20.289855072463766, 20.289855072463766, 20.14388489208633, 20.425531914893618, 20.0, 19.726027397260275, 19.726027397260275, 19.591836734693878, 19.328859060402685, 19.328859060402685, 19.210526315789476, 18.974358974358974, 18.974358974358974, 18.71794871794872, 18.734177215189874, 18.322580645161292, 18.7012987012987, 18.71794871794872, 18.734177215189874, 18.364779874213838, 18.364779874213838, 18.5, 18.5, 18.5],  10: [nan, 13.58974358974359, 13.829787234042552, 13.397129186602871, 13.080568720379146, 13.209302325581396, 13.148148148148147, 13.394495412844035, 13.15068493150685, 12.857142857142858, 12.8, 12.863436123348018, 12.987012987012987, 12.936170212765957, 12.991452991452991, 13.109243697478991, 13.050847457627118, 13.220338983050846, 13.333333333333334, 12.88135593220339, 13.166666666666666, 13.114754098360656, 12.903225806451612, 13.227091633466134, 13.067729083665338, 12.755905511811024, 12.713178294573643, 12.713178294573643, 12.713178294573643, 12.55813953488372, 12.615384615384615, 12.923076923076923, 12.727272727272728, 12.623574144486692, 12.575757575757576]},   'Std': { 5: [0.0, 1.0951598056904754, 1.0121141239998581, 1.1042531412678886, 1.1288821904875637, 1.1445523142259597, 1.1042531412678886, 1.1302654555457317, 1.126665433924375, 1.1333026956643137, 1.1551515052147923, 1.16081867662439, 1.1390785749894519, 1.0951598056904754, 1.0720890821195783, 1.019803902718557, 0.9886859966642595, 0.9886859966642595, 0.9588404455382553, 0.9483538369195328, 0.9483538369195328, 0.9273618495495703, 0.8888194417315589, 0.8888194417315589, 0.8888194417315589, 0.8645808232895291, 0.9536115561380326, 0.9367496997597596, 0.9433981132056604, 0.804673846971554, 0.7901740314639554, 0.85110222652746, 0.8366600265340756, 0.8366600265340756, 0.8366600265340756],  10: [0.0, 1.1789826122551597, 1.5198684153570663, 1.680587694825831, 1.4830289949963893, 1.460950033368698, 1.445683229480096, 1.413329402510257, 1.4315638302220408, 1.445683229480096, 1.4779631253857453, 1.5229494410518032, 1.5081031131855676, 1.5031217515557413, 1.5256146302392357, 1.5803480629279107, 1.5620499351813308, 1.5297058540778354, 1.5392774278862145, 1.5459624833740306, 1.61245154965971, 1.5132745950421556, 1.4352700094407325, 1.466074691139575, 1.4997916521970642, 1.5256146302392357, 1.448274835796024, 1.4654350889752845, 1.448274835796024, 1.4309088021254186, 1.466287829861518, 1.4317821063276353, 1.42828568570857, 1.464368464560747, 1.4966629547095764] },   'Pairwise_Beta': { 5: [nan, 0.9685347985347992, 0.9705921855921865, 0.9712652625152634, 0.9719337606837615, 0.9725106837606844, 0.9725946275946282, 0.9728596866096871, 0.9725925925925928, 0.9727910052910055, 0.9727238502238506, 0.9731298331298334, 0.9734386446886449, 0.9730830280830283, 0.9741010378510381, 0.9741514041514042, 0.9738497150997155, 0.9735322547822552, 0.9731583231583237, 0.9732590557590561, 0.9732590557590561, 0.9736685999186003, 0.973365893365894, 0.973365893365894, 0.973009768009769, 0.9727823565323572, 0.9717353479853486, 0.9719357956857962, 0.9720573870573878, 0.9728266178266184, 0.9724893162393168, 0.9724145299145304, 0.9726373626373631, 0.9726373626373631, 0.9726373626373631],  10: [nan, 0.9415123765123767, 0.9440232808502043, 0.9441587507933655, 0.9435878402224549, 0.9450385725385717, 0.9454057979057974, 0.9459681522181519, 0.9454410866910864, 0.9458243857282312, 0.9456121371505981, 0.9456204728320108, 0.9463243878628488, 0.9467223410492636, 0.9470962904616744, 0.947465358715358, 0.9471922628653389, 0.9467350277927197, 0.9466976435245661, 0.9455731999481994, 0.9468551279665526, 0.9471695428963522, 0.9469077071537472, 0.9474763476007815, 0.9473207304259337, 0.9460809102494618, 0.9465638982267934, 0.9466766095895043, 0.9461385685706941, 0.9454942840802562, 0.9453452529329218, 0.9458877664986253, 0.9462166963043653, 0.9463834810865348, 0.9462469829692677] }} </code></pre>"	56235120	"<p>Assuming that <code>get_plotting_variable</code> function is doing calculations using <code>Pandas</code>, The <code>NaN</code> values returned in <code>Dataframe</code> is not handled when the ajax receives the response and tries to parse it.</p>  <p>You need to replace <code>NaN</code> values with <code>None</code> which can be achieved using a single line </p>  <pre><code>df1 = df.where((pd.notnull(df)), None) </code></pre>"
56238955	Python-Selenium : Not able to scrape image from html/javascript string	python|selenium|beautifulsoup	2019-05-21 13:03:55.053000 UTC	"<p>I have one HTML string which I am opening in browser from PhanthomJs and trying to save the outcome URL. </p>  <p>My code looks as below. </p>  <pre><code>driver.get(""data:text/html;charset=utf-8,{html_content}"".format(html_content=html_content)) element = driver.find_element_by_tag_name('body') elem =  element.find_element_by_tag_name('noscript') print elem.find_element_by_tag_name('img') </code></pre>  <p>The <code>html_content</code> look like below. </p>  <pre><code>&lt;script language=""javascript"" src=""https://somejs""&gt;&lt;/script&gt; &lt;noscript&gt; &lt;a href=""https://track.adform.net/C/?bn=15864640;C=0"" target=""_blank""&gt; &lt;img src=""https://actualimage.net/verbserve/?bn=155679864640;srctype=4;ord=[timestamp]"" border=""0"" width=""728"" height=""90"" alt=""""/&gt; &lt;/a&gt; &lt;/noscript&gt; </code></pre>  <p>Above html render an image when I ran it locally as html file. </p>  <p>I wanted to save that image with the code I have mentioned above. But unfortunately I am not able to find the img using <code>find_element_by_tag_name</code> </p>  <p>I am getting below error. </p>  <pre><code>selenium.common.exceptions.NoSuchElementException: Message: {""errorMessage"":""Unable to find element with tag name 'img'"",""request"" </code></pre>  <p>Please let me know what might I am doing wrong here. </p>"	56239058	"<p>Try this, if simple HTML content not web page content</p> <pre><code>from bs4 import BeautifulSoup  html_content = &quot;&quot;&quot; &lt;script language=&quot;javascript&quot; src=&quot;https://somejs&quot;&gt;&lt;/script&gt; &lt;noscript&gt; &lt;a href=&quot;https://track.adform.net/C/?bn=15864640;C=0&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://actualimage.net/verbserve/?bn=155679864640;srctype=4;ord=[timestamp]&quot; border=&quot;0&quot; width=&quot;728&quot; height=&quot;90&quot; alt=&quot;&quot;/&gt; &lt;/a&gt; &lt;/noscript&gt;&quot;&quot;&quot;    sp = BeautifulSoup(html_content,'html.parser')  elem =  sp.find('noscript')  img = elem.find('img')  print(img['src']) </code></pre> <p>O/P:</p> <p><a href=""https://actualimage.net/verbserve/?bn=155679864640;srctype=4;ord=%5Btimestamp%5D"" rel=""nofollow noreferrer"">https://actualimage.net/verbserve/?bn=155679864640;srctype=4;ord=[timestamp]</a></p> <p><strong>scrape</strong> web page content by website url:</p> <pre><code>driver = webdriver.Chrome(&quot;/usr/bin/chromedriver&quot;) driver.get('http://www.test.com')  sp = BeautifulSoup(driver.page_source,'html.parser')  elem =  sp.find('noscript')  img = elem.find('img')  print(img['src']) </code></pre> <p>Where <code>&quot;/usr/bin/chromedriver&quot;</code> chrome drive path</p>"
56242758	Python equivalent for JavaScript's DataView	javascript|python-3.x	2019-05-21 16:34:13.740000 UTC	"<p>I load a byte array from a base-64 encoded string and I'd like to parse it.</p>  <p>However values are encoded in different ways and I'd like to replicate <code>DataView</code>'s behavior.</p>  <p>Example:</p>  <pre><code>function parse(data){     view = new DataView(data.buffer);      return {         headerSize : view.getUint8(0),         numberOfPlanes : view.getUint16(1, true),         width: view.getUint16(3, true),         height: view.getUint16(5, true),         offset: view.getUint16(7, true)     }; } </code></pre>  <p>Usage:</p>  <pre><code>data = new Uint8Array([8, 96, 0, 0, 2, 0, 1, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]) parse(data) </code></pre>  <p>Returns <code>{headerSize: 8, numberOfPlanes: 96, width: 512, height: 256, offset: 8}</code></p>  <p>Later on I'll need to use <code>DataView.getFloat32</code>.</p>  <p>Right now I have something like this:</p>  <pre><code>def get_bin(a):     ba = bin(a)[2:]     return ""0"" * (8 - len(ba)) + ba   def getUInt16(arr, ind):     a = arr[ind]     b = arr[ind + 1]     return int(get_bin(b) + get_bin(a), 2)  def getFloat32(arr, ind):     return bin_to_float("""".join(get(i) for i in arr[ind : ind + 4][::-1]))   def bin_to_float(binary):     return struct.unpack(""!f"", struct.pack(""!I"", int(binary, 2)))[0] </code></pre>  <p>But a library could be more efficient and versatile</p>  <p>Float example: <code>[111,  62, 163,  36]</code> should yield <code>7.079574826789837e-17</code></p>"	56243296	"<p>This should cover enough of your use cases or at least get you to the point where you can make minor changes. Hopefully you can somewhat follow what I am doing but feel free to ask questions.</p>  <pre><code>from functools import reduce import struct class DataView:     def __init__(self, array, bytes_per_element=1):         """"""         bytes_per_element is the size of each element in bytes.         By default we are assume the array is one byte per element.         """"""         self.array = array         self.bytes_per_element = 1      def __get_binary(self, start_index, byte_count, signed=False):         integers = [self.array[start_index + x] for x in range(byte_count)]         bytes = [integer.to_bytes(self.bytes_per_element, byteorder='little', signed=signed) for integer in integers]         return reduce(lambda a, b: a + b, bytes)      def get_uint_16(self, start_index):         bytes_to_read = 2         return int.from_bytes(self.__get_binary(start_index, bytes_to_read), byteorder='little')      def get_uint_8(self, start_index):         bytes_to_read = 1         return int.from_bytes(self.__get_binary(start_index, bytes_to_read), byteorder='little')      def get_float_32(self, start_index):         bytes_to_read = 4         binary = self.__get_binary(start_index, bytes_to_read)         return struct.unpack('&lt;f', binary)[0] # &lt;f for little endian   def parse(byte_array):     d = DataView(byte_array)     return {         ""headerSize"": d.get_uint_8(0),         ""numverOfPlanes"": d.get_uint_16(1),         ""width"": d.get_uint_16(3),         ""hieght"": d.get_uint_16(5),         ""offset"": d.get_uint_16(7),     }  result = parse([8, 96, 0, 0, 2, 0, 1, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]) import json print(json.dumps(result, indent=2))  d = DataView([111, 62, 163, 36]) d.get_float_32(0)  </code></pre>  <p><strong>Output:</strong></p>  <pre><code>{   ""headerSize"": 8,   ""numverOfPlanes"": 96,   ""width"": 512,   ""hieght"": 256,   ""offset"": 8 } 7.079574826789837e-17 </code></pre>"
56296978	Can't press on javascript:void(0) in selenium python	python|selenium	2019-05-24 17:13:03.097000 UTC	"<p>I'm trying to click on a javascript:void(0) href in selenium python however it isn't working out for me. I have tried using the following:</p>  <pre><code>element = WebDriverWait(driver,  20).until(EC.presence_of_element_located((By.XPATH, ""//*[@id='32de8167-e65c-  436a-9a6e-2561854c2c3c']""))) driver.execute_script(""arguments[0].click();"", element) </code></pre>  <p>I get the following error:</p>  <pre><code>raise TimeoutException(message, screen, stacktrace) selenium.common.exceptions.TimeoutException: Message:  </code></pre>  <p>When I'm using:</p>  <pre><code>driver.find_element_by_xpath(""//*[@id='32de8167-e65c-436a-9a6e-2561854c2c3c']"").click() </code></pre>  <p>I get the following error:</p>  <pre><code>Message: no such element: Unable to locate element: {""method"":""xpath"",""selector"":""//*[@id='32de8167-e65c-436a-9a6e-2561854c2c3c']""} </code></pre>  <p>When I try to click on a javascript:void(0) with onlick inside the href link it is working but in this case it isn't working out for me.</p>  <p>In this case:</p>  <pre><code>&lt;a id=""3ca786c0-2a8d-4055-b6ce-800d77c6ad59"" href=""javascript:void(0);""&gt;Word nu member.&lt;/a&gt; </code></pre>"	56297059	"<p>The second approach gives an error that is unrelated to the javascript. It cannot find the element. That is not strange, given the <code>id</code> in your xpath does not match that in the html.</p>"
56333525	"Different results for factorial calculation in C, Python and JavaScript"	c|factorial	2019-05-27 23:49:05.447000 UTC	"<p>I wrote some simple code in Python, JavaScript and C.  I found that the Python and JavaScript results are the same, but C gives me another -wrong- result and I can't understand what is the error.</p>  <p>C code:</p>  <pre><code>int fact(int n){     if(n==1){         return 1;     }else{         return (n*fact(n-1));     } }  int main(void){     printf(""%i \n"",fact(13)); } </code></pre>  <p>JS code:</p>  <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-js lang-js prettyprint-override""><code>function fact(n){     if (n==1){         return (1);     }else{         return (n*fact(n-1));     } }  console.log(fact(13));</code></pre> </div> </div> </p>  <p>Python code:</p>  <pre><code>def fact(n):     if(n == 0):         return 1     else:         return n * fact(n - 1)  print(fact(13)) </code></pre>  <p>Can you explain?</p>"	56336966	"<p>Being interpreted languages, they (probably) automatically choose the data type for variables according to the size of the data.</p>  <p>However, in C you specified that <code>""int""</code> has to be used - and it is way too small to hold 13!</p>  <p>If you switch <code>""int""</code> for <code>""unsigned long long int""</code> (yes, use ""long"" twice), then your program will return proper results for a longer time, until it fails again - exceeding the size of 64-bits.</p>"
56364407	Need to make same javascript function in python	javascript|node.js|python-3.x	2019-05-29 15:52:34.767000 UTC	"<p>I'm trying to use some API with Python. Can't translate this JavaScript function: </p>  <pre><code>const requestUrl = '/api/v1/account/balance' //add  const data = {   request: requestUrl,   currency: ""ETH"",   nonce: parseInt(Date.now().toString() / 1000) }; const stringifiedData = JSON.stringify(data); const payload = new Buffer(stringifiedData).toString('base64') console.log(payload); </code></pre>  <p></p>  <p>the outcome result: <code>eyJyZXF1ZXN0IjoiL2FwaS92MS9hY2NvdW50L2JhbGFuY2UiLCJjdXJyZW5jeSI6IkVUSCIsIm5vbmNlIjoxNTU5MTQzOTI2fQ==</code></p>  <p>I'm trying to do same with python3:</p>  <pre><code>from flask import Flask, json app = Flask(__name__) timestam = datetime.datetime.now() timenow = int (timestam.strftime(""%s"")) nonce = str(timenow)  @app.route(""/"") def func1():     reuquestUrl= '/api/v1/account/balance'     data = {        ""request"":reuquestUrl,         ""currency"":""ETH"",        ""nonce"":nonce    }    stringfieldData=json.dumps(data)    payload = str(base64.b64encode(b'stringfieldData'))              return payload </code></pre>  <p></p>  <p>it returns <code>b'c3RyaW5nZmllbGREYXRh'</code> or something like this.  I also tried jsonify with almost same result. Any suggestions?</p>"	56364612	"<p>you are b64 encoding the string <code>'strigifiedData'</code> itself, instead of the contents of the variable with that name (because <code>b'stringfieldData'</code> is a <code>bytes</code> object literal)</p>  <p>in addition, b64 encode returns a <code>bytes</code> object, so if you want to return a string, you need to <code>.decode()</code> it.</p>  <p>try this please, let me know if it helped:</p>  <pre class=""lang-py prettyprint-override""><code>def func1():     reuquestUrl= '/api/v1/account/balance'     data = {""request"":reuquestUrl, ""currency"":""ETH"",""nonce"":nonce}     stringfieldData=json.dumps(data)     payload = base64.b64encode(stringfieldData.encode())     return payload.decode() </code></pre>"
56416737	Passing variables from Javascript to a Python script	javascript|python|json	2019-06-02 16:11:43.367000 UTC	"<p>I am trying to use Javascript to call a Python script. Also, I must pass variables to the Python script from my Javascript. Once the result is returned in Python, I want to pass this result back to Javascript. I am not sure what the best way to do this is. </p>  <p>I have seen various implementations with flask and json, but I am confused by which would be the best way to do this. </p>  <p>To give an example, this is what I am trying to do:</p>  <p><strong>Javascript.js</strong></p>  <pre><code>myJSVariable1 = “Hello “  myJSVariable2 = “World!”   result = callPythonScript(myJSVariable1, myJSVariable2)  console.log(result) </code></pre>  <p><strong>pythonScript.py</strong></p>  <pre><code>print(myJSVariable1, myJSVariable2) </code></pre>  <p>In this example, I would expect that console.log(result) return “Hello World!” as pythonScript.py prints the result of myJSVariable1 concatenated with myJSVariable2. </p>  <p>Does anyone have any recommendations for doing something like this? </p>"	56417424	"<p>Variables are a concept that is intimately tied to a single programming language, and in fact even a single programming language implementation. Passing variables between programming languages and even between different implementations of the <em>same</em> programming language is usually impossible, unless those implementations have been <em>specifically</em> written to allow for such a <em>polyglot programming</em> style.</p>  <p>There are four programming language implementation frameworks I am aware of that are explicitly designed to allow for programming language implementations to be written in such a way that they support polyglot programming:</p>  <ul> <li><a href=""http://parrot.org/"" rel=""nofollow noreferrer"">Parrot</a></li> <li><a href=""https://rubinius.com/"" rel=""nofollow noreferrer"">Rubinius</a></li> <li><a href=""https://github.com/IronLanguages/dlr"" rel=""nofollow noreferrer"">Dynamic Language Runtime</a></li> <li><a href=""https://github.com/oracle/graal/tree/master/truffle"" rel=""nofollow noreferrer"">Truffle</a></li> </ul>  <p>However, it seems that, unfortunately, none of those has both a production-quality Python and ECMAScript implementation:</p>  <ul> <li><p>Parrot is abandoned, there has not been a release since 2016-02-16 and no commit since 2017-10-02.</p>  <ul> <li><p>Also, none of the Python implementations for Parrot were ever even close to production-ready:</p></li> <li><p><a href=""https://bitbucket.org/allison/pynie/"" rel=""nofollow noreferrer"">Pynie</a></p></li> <li><a href=""http://web.archive.org/web/20100923213256/http://pirate.tangentcode.com/"" rel=""nofollow noreferrer"">Pirate</a></li> <li><p><a href=""http://www.sidhe.org/~dan/blog/archives/000371.html"" rel=""nofollow noreferrer"">pie-thon</a></p></li> <li><p>The same is true of the ECMAScript implementations for Parrot:</p></li> <li><p><a href=""https://github.com/parrot/ecmascript"" rel=""nofollow noreferrer"">Parrot/ecmascript</a></p></li> <li>PJS</li> </ul></li> <li><p>On Rubinius, at the moment, no language implementation except Ruby is production-ready:</p>  <ul> <li><a href=""http://vic.github.io/typhon/"" rel=""nofollow noreferrer"">Typhon</a></li> <li><a href=""https://github.com/brixen/tofu"" rel=""nofollow noreferrer"">Tofu</a> (ECMAScript implementation; you will notice that nothing except the README was ever written)</li> </ul></li> <li><p>A stripped down, frozen version of the DLR is shipped as part of .NET, but Microsoft itself has abandoned it. <a href=""https://github.com/IronLanguages/dlr"" rel=""nofollow noreferrer"">It is still being developed</a> as part of the <a href=""https://github.com/IronLanguages"" rel=""nofollow noreferrer"">IronLanguages</a> project, though.</p>  <ul> <li><a href=""https://github.com/IronLanguages/ironpython2"" rel=""nofollow noreferrer"">IronPython</a> is a mature, production-ready implementation of Python 2 on the DLR, however <a href=""https://github.com/IronLanguages/ironpython3"" rel=""nofollow noreferrer"">Python 3 support</a> is not production-ready yet.</li> <li><p>Unfortunately, all ECMAScript implementations on the DLR have been abandoned:</p></li> <li><p>Managed JScript was an official ECMAScript implementation by Microsoft, which was intended to be one of the poster childs for the DLR, but it was never published and has long since been abandoned.</p></li> <li><a href=""https://ironjs.wordpress.com/"" rel=""nofollow noreferrer"">IronJS</a> is abandoned.</li> </ul></li> <li><p>Truffle is actively maintained, actively developed, and production-ready.</p>  <ul> <li><a href=""https://github.com/graalvm/graaljs"" rel=""nofollow noreferrer"">GraalJS</a> is actively maintained, actively developed, and production-ready.</li> <li><p>Unfortunately, both Python implementations for Truffle are currently still in development:</p></li> <li><p><a href=""https://github.com/graalvm/graalpython"" rel=""nofollow noreferrer"">GraalPython</a></p></li> <li><a href=""https://github.com/securesystemslab/zippy"" rel=""nofollow noreferrer"">ZipPy</a></li> </ul></li> </ul>  <p>So, as you can see, while there are some polyglot programming language implementation frameworks, and there are some Python and ECMAScript implementations for those frameworks, there is unfortunately not a single framework which has production-ready implementations of both Python and ECMAScript: DLR has Python (2) but not ECMAScript, Truffle has ECMAScript but not Python.</p>  <p>However, there is another problem with your idea of passing variables: neither Python nor ECMAScript reify variables, IOW, variables are not objects (or primitives) in those languages. And you can only pass <em>values</em>, i.e. objects and primitives.</p>"
56418643	Python Selenium - Javascript Button won't click	python|selenium|xpath|css-selectors|webdriverwait	2019-06-02 20:16:12.043000 UTC	"<p>I'm trying to create a script, which signs up on a website, but I am somehow not able to let it click the <strong>Sign up for free »</strong> button. No error messages or anything at all. The animation looks like the button has been clicked, but the site won't load up the next page.  </p>  <p>The HTML source code is as followed: <a href=""https://i.imgur.com/PXKfWMD.png"" rel=""nofollow noreferrer"">https://i.imgur.com/PXKfWMD.png</a></p>  <pre><code>&lt;div class=""main_full_container""&gt;    &lt;div id=""main"" class=""main_container content_container""&gt;        &lt;div class=""flex_container""&gt;           &lt;main class=""main_content""&gt;     &lt;div&gt; &lt;div&gt;  &lt;form method=""post"" action="""" class=""js-register_form""&gt;  &lt;input type=""hidden"" name=""register_auth"" class=""js-register_auth"" value=""99ce8""&gt;  &lt;div&gt;   &lt;div class=""login_row""&gt;    &lt;div class=""login_row__icon""&gt;     &lt;svg class=""ysvg"" style=""width: 60px; height:60px""&gt;&lt;use xlink:href=""/images/93636_0529/bg/icons/sprites/desktop/main/sprite.svg#letter""&gt;&lt;/use&gt;&lt;/svg&gt;    &lt;/div&gt;    &lt;div class=""login_row__text""&gt;     &lt;div class=""login_row__headline""&gt;         Sign up for free!     &lt;/div&gt;     &lt;div class=""login_row__subheadline""&gt;         &lt;/div&gt;    &lt;/div&gt;   &lt;/div&gt;   &lt;div class=""flex_row--centered""&gt;    &lt;input type=""hidden"" name=""action"" value=""register""&gt;    &lt;a name=""Email""&gt;&lt;/a&gt;    &lt;div class=""register__container""&gt;     &lt;div class=""topmargin""&gt;         &lt;label&gt;             &lt;div style=""padding:0 3px 3px""&gt;E-Mail&lt;/div&gt;             &lt;input class=""js-register_email"" id=""email"" type=""email"" name=""email"" required="""" value=""""&gt;                                  &lt;/div&gt;     &lt;div class=""topmargin""&gt;                                      &lt;div class=""ysb-pos-middle""&gt;                 &lt;button class=""ysb js-register ysb-highlight"" type=""submit""&gt;Sign up for free »&lt;/button&gt;         &lt;/div&gt;       &lt;/div&gt;     &lt;/div&gt;    &lt;/div&gt;    &lt;div class=""login_alternatives""&gt;     &lt;div class=""login_alternatives__or""&gt;&lt;span&gt;or&lt;/span&gt;&lt;/div&gt;     &lt;div&gt;         &lt;a href=""https://accounts.google.com/o/oauth2/""&gt;Sign in with Google&lt;/a&gt;     &lt;/div&gt;         &lt;a class=""js-social_media_login_info small"" href=""#""&gt;Meaning&lt;/a&gt;    &lt;/div&gt;    &lt;/div&gt;  &lt;/form&gt; &lt;/div&gt; &lt;/div&gt;  &lt;script type=""text/javascript""&gt;document.forms[0].email.focus();&lt;/script&gt;    &lt;/main&gt;        &lt;/div&gt;    &lt;/div&gt; &lt;/div&gt; </code></pre>  <p>After I typed in the e-mail through the input field, I want the bot the to click the <strong><code>Sign up for free »</code></strong> button. The XPath of the button is:</p>  <pre><code>//*[@id=""main""]/div/main/div/div/form/div/div[2]/div/div[2]/div/button </code></pre>  <p>I already tried different things.. </p>  <p>Through the normal click-function: </p>  <pre><code>driver.find_element_by_xpath('//*[@id=""main""]/div/main/div/div/form/div/div[2]/div/div[2]/div/button').click() </code></pre>  <p>Through ""execute script"": </p>  <pre><code>driver.execute_script(""arguments[0].click();"", driver.find_element_by_xpath('//*[@id=""main""]/div/main/div/div/form/div/div[2]/div/div[2]/div/button')) </code></pre>  <p>And also tried the solving approaches from this thread: <a href=""https://stackoverflow.com/questions/45947320/python-selenium-button-wont-click"">Python Selenium Button Won&#39;t Click</a></p>  <p><img src=""https://i.imgur.com/4UusBqg.png"" alt=""code""></p>  <p>(Obviously not at once, but neither of them worked.)</p>  <p>Furthermore adding a sleep time didn't lead to any helpful effects.</p>  <p>I don't get any error messages, except a TimeOut when I use one of the last approaches. The script clicks the button, but nothing happens. Any help is highly appreciated! Thanks in advance</p>"	56418847	"<p>Have you tried this:</p>  <pre><code>find_element_by_tag_name(""button"").click() </code></pre>  <p>If that doesn't work there is also <code>submit()</code>:</p>  <pre><code>find_element_by_tag_name(""button"").submit() </code></pre>"
56441648	Trying to convert python to javascript opencv.js	javascript|html|opencv	2019-06-04 10:02:37.017000 UTC	"<p>I'm trying to develop a javascript code using opencv.js, I have python code with the same requirement, I converted many lines but some are very hard to find, please guide me.</p>  <p>last 3 lines from python code unable to find for javascript opencv.js.</p>  <pre><code>def find_marker(image):      gray = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)     gray = cv2.GaussianBlur(gray, (5, 5), 0)     edged = cv2.Canny(gray, 35, 125)     cnts = cv2.findContours(edged.copy(), cv2.RETR_LIST, cv2.CHAIN_APPROX_SIMPLE)      cnts = imutils.grab_contours(cnts) //these three line are unable to find for javascript.     c = max(cnts, key = cv2.contourArea) return cv2.minAreaRect(c) </code></pre>"	56443670	"<p>In the first line, the code is using the function in imutils python package. If you see the grab_contours method in imutils.convenience file located at <a href=""https://github.com/jrosebr1/imutils/blob/master/imutils/convenience.py"" rel=""nofollow noreferrer"">https://github.com/jrosebr1/imutils/blob/master/imutils/convenience.py</a>, you can see how it is implemented. This is very simple to implement as a one liner in js.</p>  <pre class=""lang-js prettyprint-override""><code>cnts = (cnts.length == 2) ? cnts[0] : (cnts.length == 3) ? cnts[1] : cnts </code></pre>  <p>In second line, max is the inbuilt function of python for iterating through an iterable and to find the maximum based on the key. This same functionality can be achieved in js as follows</p>  <pre class=""lang-js prettyprint-override""><code>c = cnts.reduce(function(max, cur) {     // here key is the cv2.contourArea function,     // we apply that on the cnts[i] and finds the cnts[i]     // such that cv2.contourArea(cnts[i]) is maximum     if(cv2.contourArea(max) &lt; cv2.countourArea(cur)) {         return cur     } else {         return max     } }); </code></pre>  <p>Now for the third line I assume cv2.minAreaRect function is present in the js version too. I'm not sure though. But hope the above code works for you. Thank you.</p>"
56500725	Click a javascript text with python and selenium	selenium-webdriver	2019-06-07 20:14:11.857000 UTC	"<p>On the following page, I want to click the text ""Mietpreise"" with selenium.  <a href=""https://www.homeday.de/de/preisatlas"" rel=""nofollow noreferrer"">https://www.homeday.de/de/preisatlas</a></p>  <p>I tried different things, but did not get it work. Latest source is:</p>  <pre><code>from selenium import webdriver from selenium.webdriver.common.keys import Keys  driver = webdriver.Firefox() driver.get(""https://www.homeday.de/de/preisatlas"")  driver.find_element_by_class_name(""filter-switcher__item"").click() </code></pre>"	56500878	"<p>You can try using the <code>Xpath</code> of the element, which you find by using ""Inspect Element"" on the button, and right clicking the snippet of code to copy the Xpath:</p>  <pre class=""lang-py prettyprint-override""><code>from selenium import webdriver browser = webdriver.Firefox() browser.get(""https://www.homeday.de/de/preisatlas"") browser.find_element_by_xpath(""/html/body/div[1]/div/div/div/main/section/div[2]/div[1]/form/div[2]/p[2]"").click() </code></pre>  <p>It uses an absolute path and doesn't require much work to acquire.</p>"
56547731	XOR operator in javascript different from XOR operator in python	javascript|python	2019-06-11 16:04:29.880000 UTC	"<p>I am trying to replicate some javascript code into python, and for some reason the XOR operator (^) in javascript gives me a different value than the XOR operator (^) in python. I have an example below. I know the values should be different because of Math.random(), but why is it like 4 significant digits longer? </p>  <p>Javascript:</p>  <pre><code>    console.log(Math.floor(2147483648 * Math.random()) ^ 1560268851466)     = 1596700165 </code></pre>  <p>Python:</p>  <pre><code>    import math     math.floor(2147483648 * random.random()) ^ 1560268851466     = 1559124407072 </code></pre>"	56547878	"<p>Your Python result is correct, given XOR's input bits.  Your longer operand is on the order of 2^40, and so is your final result.</p>  <p>The Javascript result has been truncated to 32 bits, the shorter operand.</p>"
56547731	XOR operator in javascript different from XOR operator in python	javascript|python	2019-06-11 16:04:29.880000 UTC	"<p>I am trying to replicate some javascript code into python, and for some reason the XOR operator (^) in javascript gives me a different value than the XOR operator (^) in python. I have an example below. I know the values should be different because of Math.random(), but why is it like 4 significant digits longer? </p>  <p>Javascript:</p>  <pre><code>    console.log(Math.floor(2147483648 * Math.random()) ^ 1560268851466)     = 1596700165 </code></pre>  <p>Python:</p>  <pre><code>    import math     math.floor(2147483648 * random.random()) ^ 1560268851466     = 1559124407072 </code></pre>"	56548309	"<p><a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Bitwise_Operators"" rel=""nofollow noreferrer"">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Bitwise_Operators</a>:</p>  <blockquote>   <p>Bitwise operators treat their operands as a sequence of <strong><em>32 bits</em></strong> (zeroes and ones), rather than as decimal, hexadecimal, or octal numbers. For example, the decimal number nine has a binary representation of 1001. Bitwise operators perform their operations on such binary representations, but they return standard JavaScript numerical values.</p> </blockquote>  <p>However the particular code you are using can be ""fixed"" via <code>XOR</code>-ing the 32-bit part of your number, and simply adding the rest:</p>  <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-js lang-js prettyprint-override""><code>// 1560268851466 = 0x16B_4745490A console.log( (Math.floor(2147483648 * Math.random()) ^ 0x4745490A) + 0x16B00000000);</code></pre> </div> </div> </p>  <p>(As <code>2147483648</code> is <code>0x8000000</code>, the random part is ""fine"", it does not get truncated)</p>"
56565453	Python Selenium: Clicking on button with JavaScript onFocus validation	javascript|python|selenium	2019-06-12 15:13:36.197000 UTC	"<p>I am trying to automate the webpage navigation using Selenium Python. I want to click on a HTML button that executes JavaScript code that validates if a button is in focus upon the onclick action.</p>  <p>In this specific case I have no problem in selecting a valid object using Selenium, however simple <code>element.click()</code> doesn't seem to work.</p>  <p>HTML source:</p>  <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-html lang-html prettyprint-override""><code>&lt;td width=""1%""&gt;   &lt;!--Begin /jsp/com/tibco/wfc/ButtonUI.jsp--&gt;   &lt;script language=""javascript""&gt;     var isFocus = ""false"";   &lt;/script&gt;   &lt;button class=""button_normal"" name=""OK"" style=""width:100px"" onfocus=""isFocus='true'"" onblur=""isFocus='false'"" onmouseover=""this.className='button_rollover'"" onmouseout=""this.className='button_normal'"" onmousedown=""this.className='button_pressed'"" onmouseup=""this.className='button_rollover'""     onclick=""javascript:if(isFocus=='false'){ return false}; showProgressMeter();submitCommand(event,'com_tibco_wfc_Button_498466961', 'com_tibco_wfc_DefaultFrame_1501194824', false, false, 'null', 'o', '', false);;return false;""&gt;OK&lt;/button&gt;   &lt;!--End /jsp/com/tibco/wfc/ButtonUI.jsp--&gt; &lt;/td&gt;</code></pre> </div> </div> </p>  <p>Python / Selenium attributes:</p>  <pre class=""lang-py prettyprint-override""><code>warning_ok_button = driver.find_element_by_xpath(""//button[@name='OK']"") attrib = driver.execute_script('var items = {}; for (index = 0; index &lt; arguments[0].attributes.length; ++index) { items[arguments[0].attributes[index].name] = arguments[0].attributes[index].value }; return items;',warning_ok_button) pprint(attrib) {'class': 'button_normal',  'name': 'OK',  'onblur': ""isFocus='false'"",  'onclick': ""javascript:if(isFocus=='false'){ return false}; ""             ""showProgressMeter();submitCommand(event,'com_tibco_wfc_Button_498466961', ""             ""'com_tibco_wfc_DefaultFrame_1501194824', false, false, 'null', ""             ""'o', '', false);;return false;"",  'onfocus': ""isFocus='true'"",  'onmousedown': ""this.className='button_pressed'"",  'onmouseout': ""this.className='button_normal'"",  'onmouseover': ""this.className='button_rollover'"",  'onmouseup': ""this.className='button_rollover'"",  'style': 'width:100px'} </code></pre>  <p><code>warning_ok_button.click()</code> only seems to be changing the class of a button from <code>button_normal</code> to <code>button_rollover</code></p>"	56567087	<p>Have you tried clicking the <code>&lt;td&gt;</code> by xpath?</p>
56565453	Python Selenium: Clicking on button with JavaScript onFocus validation	javascript|python|selenium	2019-06-12 15:13:36.197000 UTC	"<p>I am trying to automate the webpage navigation using Selenium Python. I want to click on a HTML button that executes JavaScript code that validates if a button is in focus upon the onclick action.</p>  <p>In this specific case I have no problem in selecting a valid object using Selenium, however simple <code>element.click()</code> doesn't seem to work.</p>  <p>HTML source:</p>  <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-html lang-html prettyprint-override""><code>&lt;td width=""1%""&gt;   &lt;!--Begin /jsp/com/tibco/wfc/ButtonUI.jsp--&gt;   &lt;script language=""javascript""&gt;     var isFocus = ""false"";   &lt;/script&gt;   &lt;button class=""button_normal"" name=""OK"" style=""width:100px"" onfocus=""isFocus='true'"" onblur=""isFocus='false'"" onmouseover=""this.className='button_rollover'"" onmouseout=""this.className='button_normal'"" onmousedown=""this.className='button_pressed'"" onmouseup=""this.className='button_rollover'""     onclick=""javascript:if(isFocus=='false'){ return false}; showProgressMeter();submitCommand(event,'com_tibco_wfc_Button_498466961', 'com_tibco_wfc_DefaultFrame_1501194824', false, false, 'null', 'o', '', false);;return false;""&gt;OK&lt;/button&gt;   &lt;!--End /jsp/com/tibco/wfc/ButtonUI.jsp--&gt; &lt;/td&gt;</code></pre> </div> </div> </p>  <p>Python / Selenium attributes:</p>  <pre class=""lang-py prettyprint-override""><code>warning_ok_button = driver.find_element_by_xpath(""//button[@name='OK']"") attrib = driver.execute_script('var items = {}; for (index = 0; index &lt; arguments[0].attributes.length; ++index) { items[arguments[0].attributes[index].name] = arguments[0].attributes[index].value }; return items;',warning_ok_button) pprint(attrib) {'class': 'button_normal',  'name': 'OK',  'onblur': ""isFocus='false'"",  'onclick': ""javascript:if(isFocus=='false'){ return false}; ""             ""showProgressMeter();submitCommand(event,'com_tibco_wfc_Button_498466961', ""             ""'com_tibco_wfc_DefaultFrame_1501194824', false, false, 'null', ""             ""'o', '', false);;return false;"",  'onfocus': ""isFocus='true'"",  'onmousedown': ""this.className='button_pressed'"",  'onmouseout': ""this.className='button_normal'"",  'onmouseover': ""this.className='button_rollover'"",  'onmouseup': ""this.className='button_rollover'"",  'style': 'width:100px'} </code></pre>  <p><code>warning_ok_button.click()</code> only seems to be changing the class of a button from <code>button_normal</code> to <code>button_rollover</code></p>"	56567935	"<p>Thanks to @supputuri I was able to tackle this challenge. The trick over here was to trigger, <code>onfocus</code> event followed by <code>onclick</code> event associated with my button element. </p>  <pre class=""lang-py prettyprint-override""><code>driver.execute_script(""arguments[0].onfocus()"",warning_ok_button) driver.execute_script(""arguments[0].click()"",warning_ok_button) </code></pre>"
56596399	Create dynamic number of sliders in html from python list and display value with javascript?	javascript|python|html	2019-06-14 10:34:34.303000 UTC	"<p>I want to create a dynamic number of sliders with value output according to a python dictionary <code>{{ sliders }}</code> fed in by a flask app.</p>  <p>So far I have come up with this code to display the sliders, but displaying their current value underneath each slider does not work.</p>  <p>The JS script will just display the default value of each slider not their current one. Why is that and how to fix it?</p>  <pre><code>&lt;div class=""content-section""&gt;         &lt;form method=""POST"" action=""{{url_for('deployment')}}""&gt;             &lt;fieldset class=""form-group""&gt;                 {% for slider in sliders %}                     &lt;div class=""slidecontainer""&gt;                         &lt;p&gt;{{ slider['name'] }}&lt;/p&gt;                         &lt;input type=""range"" min=""{{ slider['min'] }}"" max=""{{ slider['max'] }}"" step=""{{ slider['step'] }}"" class=""slider"" id=""{{ slider['slider_id'] }}"" name=""{{ slider['name'] }}""&gt;                         &lt;p&gt;Value: &lt;span id=""{{ slider['value_id'] }}""&gt;&lt;/span&gt;&lt;/p&gt;                     &lt;/div&gt;                 {% endfor %}             &lt;/fieldset&gt;             &lt;input type=""submit"" value=""Submit"" /&gt;         &lt;/form&gt;          {% for slider in sliders %}             &lt;script&gt;             var slider = document.getElementById(""{{ slider['slider_id'] }}"");             var output = document.getElementById(""{{ slider['value_id'] }}"");             output.innerHTML = slider.value;              slider.oninput = function() {               ""{{ slider['value_id'] }}"".innerHTML = this.value;             }             &lt;/script&gt;         {% endfor %}      &lt;/div&gt; </code></pre>"	56598362	"<p>You are missing the  </p>  <pre><code>document.getElementById() </code></pre>  <p>in the <code>oninput</code>-function.</p>  <p>It should be</p>  <pre><code>slider.oninput = function() {   document.getElementById(""{{ slider['value_id'] }}"").innerHTML = this.value; } </code></pre>"
56597002	How to login website with javascript in Python?	javascript|python-requests	2019-06-14 11:11:57.683000 UTC	"<p>I want to login a website <code>https://creis.fang.com/</code>.</p>  <p>My code is:</p>  <pre><code>import requests  url = 'https://creis.fang.com/' headers = {'User-Agent': 'Mozilla/5.0 (Windows NT 6.1; WOW64; rv:52.0) Gecko/20100101 Firefox/52.0'}  data = {'cnname':'login_id', 'cnpassword':'pass1', 'cntempcode':'pass2', 'cnproductselect':'企业版'} s = requests.Session() res = s.post(url = url, data = data, headers = headers, allow_redirects=False) </code></pre>  <p>However, it failed.</p>  <p>What should I do?</p>  <p>Thanks</p>"	56597053	"<p>In headers, you need to pass the type of object you are sending... </p>  <p>Try </p>  <pre><code>headers={ 'Content-Type':'application/json' } </code></pre>  <p>By the way, you should check which is the endpoint that server has for login, <em><a href=""https://creis.fang.com/"" rel=""nofollow noreferrer"">https://creis.fang.com/</a></em> is the domain, but the endpoints are unique and you need to know which it is</p>"
56597002	How to login website with javascript in Python?	javascript|python-requests	2019-06-14 11:11:57.683000 UTC	"<p>I want to login a website <code>https://creis.fang.com/</code>.</p>  <p>My code is:</p>  <pre><code>import requests  url = 'https://creis.fang.com/' headers = {'User-Agent': 'Mozilla/5.0 (Windows NT 6.1; WOW64; rv:52.0) Gecko/20100101 Firefox/52.0'}  data = {'cnname':'login_id', 'cnpassword':'pass1', 'cntempcode':'pass2', 'cnproductselect':'企业版'} s = requests.Session() res = s.post(url = url, data = data, headers = headers, allow_redirects=False) </code></pre>  <p>However, it failed.</p>  <p>What should I do?</p>  <p>Thanks</p>"	56597218	"<p>Maybe you need a simulate the browser with Selenium:</p>  <p><a href=""https://selenium-python.readthedocs.io/"" rel=""nofollow noreferrer"">https://selenium-python.readthedocs.io/</a></p>"
56611826	Python/Django escape list of strings for JSON parsing by Javascript	javascript|python|json|django	2019-06-15 15:40:59.230000 UTC	"<p>Know these questions are annoying but I'm really stuck so would appreciate help. I'm trying to send a list of strings to the frontend and load into a javascript object. Relevant parts of the Django application:</p>  <p>In views.py in the handler function:</p>  <pre><code>import json def home(request):     test_list = [""(hello world\"")""]     return render(request, 'app/home.html', {""test_list"": json.dumps(test_list)}) </code></pre>  <p>In home.html:</p>  <pre><code>let parsed = JSON.parse('{{test_list|safe}}'); </code></pre>  <p>I get the error:</p>  <pre><code>Uncaught SyntaxError: Unexpected token ) in JSON at position 15 </code></pre>  <p>Things I have tried:</p>  <pre><code>- running json.dumps directly on each (str) element of the list, not just on the whole list.  - Manually adding a backslash to each of ("", ', (, ), [, ] )  - Manually adding two backslashes to each of ("", ', (, ), [, ] )  - Not using |safe in the template </code></pre>  <p>What has worked is just removing each of ("", ', (, ), [, ] ). But I can't have them removed. I need them escaped.</p>  <p>Here is what Google Chrome tells me the template resolves to at the line that fails:</p>  <pre><code>let parsed = JSON.parse('[""(hello world\"")""]'); </code></pre>  <p>Help much appreciated.</p>"	56612212	"<p>If you define</p>  <pre><code>str = ""(hello world\"")""; </code></pre>  <p>then <code>JSON.parse(str);</code> will give an error (<code>Unexpected token ( in JSON at position 0</code>)  because there is no JSON object starting with a <code>(</code> (see <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON#Full_JSON_syntax"" rel=""nofollow noreferrer"">MDN: full JSON syntax</a>)</p>  <p>In order to have parentheses in your string you need to create a string that contains them using double quotes (since JSON accepts only double quotes).</p>  <p>If the enclosing quotes are double you need to escape the nested double quotes, see the snippet below:</p>  <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-js lang-js prettyprint-override""><code>// using double quotes outside: need escaping for the inner double quotes to avoid confusion str = ""\""(hello world)\""""; console.log(JSON.parse(str));  // using single quotes outside: no need to escape str = '""(hello world)""'; console.log(JSON.parse(str));</code></pre> </div> </div> </p>"
56611826	Python/Django escape list of strings for JSON parsing by Javascript	javascript|python|json|django	2019-06-15 15:40:59.230000 UTC	"<p>Know these questions are annoying but I'm really stuck so would appreciate help. I'm trying to send a list of strings to the frontend and load into a javascript object. Relevant parts of the Django application:</p>  <p>In views.py in the handler function:</p>  <pre><code>import json def home(request):     test_list = [""(hello world\"")""]     return render(request, 'app/home.html', {""test_list"": json.dumps(test_list)}) </code></pre>  <p>In home.html:</p>  <pre><code>let parsed = JSON.parse('{{test_list|safe}}'); </code></pre>  <p>I get the error:</p>  <pre><code>Uncaught SyntaxError: Unexpected token ) in JSON at position 15 </code></pre>  <p>Things I have tried:</p>  <pre><code>- running json.dumps directly on each (str) element of the list, not just on the whole list.  - Manually adding a backslash to each of ("", ', (, ), [, ] )  - Manually adding two backslashes to each of ("", ', (, ), [, ] )  - Not using |safe in the template </code></pre>  <p>What has worked is just removing each of ("", ', (, ), [, ] ). But I can't have them removed. I need them escaped.</p>  <p>Here is what Google Chrome tells me the template resolves to at the line that fails:</p>  <pre><code>let parsed = JSON.parse('[""(hello world\"")""]'); </code></pre>  <p>Help much appreciated.</p>"	56619317	"<p>After another full day of research I've come up with a very elegant solution that appears to work for all cases.</p>  <p>Basically, the Python json module is capable of encoding and decoding properly. So what was required was not to mess with that, but rather to figure out how best to maintain it's results when pushing to the frontend.</p>  <p>What I then realised is that certain escape characters where obviously being ""resolved"" somewhere (I still do know know where or how exactly). The trick to preventing this is to call repr on the output of json.dumps</p>  <p>So the working code now is:</p>  <pre><code>import json def home(request):     test_list = [""(hello world\"")""]     return render(request, 'app/home.html', {""test_list"": repr(json.dumps(test_list))}) </code></pre>  <p>and</p>  <pre><code>let parsed = JSON.parse({{test_list|safe}}); </code></pre>  <p>The two changes are adding repr in the views file, and removing the ' from the start and end of {{test_list|safe}} in the template (python's json handles that as well)</p>"
56615320	Is there a way to pass a Python variable to Javascript without writing it to a file?	javascript|python	2019-06-16 01:07:55.613000 UTC	"<p>Let's say I have a simple Python variable, such as the following:</p>  <pre><code>x = 5 </code></pre>  <p>I'd like to create a web page that uses javascript to further process that variable, running on the same computer (a Raspberry Pi).</p>  <pre><code>&lt;!DOCTYPE html&gt; &lt;html&gt; &lt;body&gt;  &lt;script&gt; document.write(x); &lt;/script&gt;  &lt;/body&gt; &lt;/html&gt; </code></pre>  <p>Because the Raspberry Pi uses a micro SD card, I would like to limit the number of read/write cycles.  Is there a way to store this Python variable in memory (or some other way) which could be accessed by the Javascript code?</p>  <p>I know some will suggest rewriting the Python code in Javascript, but I already have a large Python program that I would prefer NOT to have to rewrite due to time and the original effort involved in its creation.  And if you are curious, I'm using the Javascript to display data with Highcharts - which is preferred for my project.</p>"	56615353	"<p>You can pass the variable in the URL.</p>  <p>Using JavaScript, you can extract URL parameters. See this response for instance: <a href=""https://stackoverflow.com/a/50769370/2223027"">https://stackoverflow.com/a/50769370/2223027</a></p>"
56615320	Is there a way to pass a Python variable to Javascript without writing it to a file?	javascript|python	2019-06-16 01:07:55.613000 UTC	"<p>Let's say I have a simple Python variable, such as the following:</p>  <pre><code>x = 5 </code></pre>  <p>I'd like to create a web page that uses javascript to further process that variable, running on the same computer (a Raspberry Pi).</p>  <pre><code>&lt;!DOCTYPE html&gt; &lt;html&gt; &lt;body&gt;  &lt;script&gt; document.write(x); &lt;/script&gt;  &lt;/body&gt; &lt;/html&gt; </code></pre>  <p>Because the Raspberry Pi uses a micro SD card, I would like to limit the number of read/write cycles.  Is there a way to store this Python variable in memory (or some other way) which could be accessed by the Javascript code?</p>  <p>I know some will suggest rewriting the Python code in Javascript, but I already have a large Python program that I would prefer NOT to have to rewrite due to time and the original effort involved in its creation.  And if you are curious, I'm using the Javascript to display data with Highcharts - which is preferred for my project.</p>"	56615358	"<p>I can't think of a direct way of achieving this. But I think you could use <a href=""https://socket.io/"" rel=""nofollow noreferrer"">socket-io</a> on both sides and communicate through it.</p>  <p>EDIT:</p>  <p>As S.Pellegrino noted, depending on op's needs, building a REST API from what is called in the question a 'large Python program' might be a good option. </p>"
56615320	Is there a way to pass a Python variable to Javascript without writing it to a file?	javascript|python	2019-06-16 01:07:55.613000 UTC	"<p>Let's say I have a simple Python variable, such as the following:</p>  <pre><code>x = 5 </code></pre>  <p>I'd like to create a web page that uses javascript to further process that variable, running on the same computer (a Raspberry Pi).</p>  <pre><code>&lt;!DOCTYPE html&gt; &lt;html&gt; &lt;body&gt;  &lt;script&gt; document.write(x); &lt;/script&gt;  &lt;/body&gt; &lt;/html&gt; </code></pre>  <p>Because the Raspberry Pi uses a micro SD card, I would like to limit the number of read/write cycles.  Is there a way to store this Python variable in memory (or some other way) which could be accessed by the Javascript code?</p>  <p>I know some will suggest rewriting the Python code in Javascript, but I already have a large Python program that I would prefer NOT to have to rewrite due to time and the original effort involved in its creation.  And if you are curious, I'm using the Javascript to display data with Highcharts - which is preferred for my project.</p>"	56615411	"<p>A couple ideas:</p>  <ol> <li>Run a web server in your Python application and expose an endpoint that returns that data. In your Javascript app, call this API (accessible on <code>0.0.0.0</code>) and consume the data. Caveat: you'll have to setup a web server in your Python app and keep it running.</li> </ol>  <p>Here's a better idea:</p>  <ol start=""2""> <li>Run a Redis instance on your Pi. Redis is an in-memory cache provider, and you can configure it not to persist any data to the disk. As such, it'll become an in-memory broker between your Python and Javascript applications. Redis runs as a local web server on your Pi and exposes endpoints for writing and reading data. From your Python app, call the Redis endpoint to write some data, and from your Javascript app, call Redis to read what you need. </li> </ol>  <p><a href=""https://redis.io/topics/ARM"" rel=""nofollow noreferrer"">https://redis.io/topics/ARM</a></p>"
56624460	"Would it be possible in Javascript or Python to implement something like ""non standard evaluation"" in R?"	javascript|python|r|pandas|dataframe	2019-06-17 03:41:27.013000 UTC	"<p>In R you can write functions that allow arguments to be unquoted attributes of a pre-defined object. For example, the interface to the DataFrame object allows the following:</p>  <pre><code># df has columns ""A"" and ""B"" df = mutate(df, C=A*B) </code></pre>  <p>Now <code>df</code> has a new column ""C"" that is the product of columns ""A"" and ""B"".</p>  <p>There is also the ""formula"" type which is unquoted: </p>  <pre><code>lm(data=df, A~B) </code></pre>  <p>This ""Non-Standard Evaluation.""</p>  <ul> <li><a href=""http://adv-r.had.co.nz/Computing-on-the-language.html#capturing-expressions"" rel=""noreferrer"">http://adv-r.had.co.nz/Computing-on-the-language.html#capturing-expressions</a>  </li> <li><a href=""https://cran.r-project.org/web/packages/lazyeval/vignettes/lazyeval.html"" rel=""noreferrer"">https://cran.r-project.org/web/packages/lazyeval/vignettes/lazyeval.html</a></li> </ul>  <p>Is it fundamentally possible to do something similar in Javascript or Python.</p>"	66940058	"<p>No, it is not possible to have NSE in Python and JavaScript.</p> <hr /> <p>Why is that? That is because in Python and JS, arguments are evaluated BEFORE they are passed to the function, while it is not the case in R.</p> <hr /> <p>Let's consider the two similar codes in R and Python:</p> <h2>main.R</h2> <pre><code>enthusiastic_print &lt;- function(x) {    print(&quot;Welcome!&quot;)    print(x) }  enthusiastic_print(&quot;a&quot; + 3) </code></pre> <h2>main.py</h2> <pre><code>def enthusiastic_print(x):    print(&quot;Welcome!&quot;)    print(x) }  enthusiastic_print(&quot;a&quot; + 3) </code></pre> <p>They will both procude an error. But now, let's have a look at when the error occurs:</p> <h2>.R</h2> <pre><code>[1] &quot;Welcome!&quot; Error in &quot;a&quot; + 3 : non-numeric argument to binary operator exit status 1 </code></pre> <h2>.py</h2> <pre><code>Traceback (most recent call last):   File &quot;main.py&quot;, line 6, in &lt;module&gt;     enthusiastic_print(&quot;a&quot; + 3) TypeError: can only concatenate str (not &quot;int&quot;) to str </code></pre> <p>You can see that Python evaluates what is passed to the function BEFORE the call. While R, keeps the complete expression passed as argument and evaluates it only when it is necessary.</p> <hr /> <p>You can even write this code in R that will produce NO error:</p> <pre><code>foo &lt;- function(x) {   print(&quot;Welcome in foo!&quot;)   print(&quot;I never mess with args...&quot;) }  foo(&quot;a&quot; + 3) </code></pre> <hr /> <p>You can also capture what was passed as argument and not evaluate it:</p> <pre><code>verbatim_arg &lt;- function(x) {   print(substitute(x)) }    verbatim_arg(&quot;a&quot; + 3) </code></pre> <p>which produces:</p> <pre><code>&quot;a&quot; + 3 </code></pre> <hr /> <p>Finally, that's the functions <code>substitute()</code> combined with <code>eval()</code> which permit to use formulas and all the other NSE stuff.</p> <hr /> <h3>Supplementary:</h3> <p>You can do the same test in node.js</p> <pre><code>function enthusiastic_print(x) {   console.log(&quot;Welcome!&quot;)   console.log(x) }  enthusiastic_print(&quot;a&quot;.notAMethod()) </code></pre>"
56624460	"Would it be possible in Javascript or Python to implement something like ""non standard evaluation"" in R?"	javascript|python|r|pandas|dataframe	2019-06-17 03:41:27.013000 UTC	"<p>In R you can write functions that allow arguments to be unquoted attributes of a pre-defined object. For example, the interface to the DataFrame object allows the following:</p>  <pre><code># df has columns ""A"" and ""B"" df = mutate(df, C=A*B) </code></pre>  <p>Now <code>df</code> has a new column ""C"" that is the product of columns ""A"" and ""B"".</p>  <p>There is also the ""formula"" type which is unquoted: </p>  <pre><code>lm(data=df, A~B) </code></pre>  <p>This ""Non-Standard Evaluation.""</p>  <ul> <li><a href=""http://adv-r.had.co.nz/Computing-on-the-language.html#capturing-expressions"" rel=""noreferrer"">http://adv-r.had.co.nz/Computing-on-the-language.html#capturing-expressions</a>  </li> <li><a href=""https://cran.r-project.org/web/packages/lazyeval/vignettes/lazyeval.html"" rel=""noreferrer"">https://cran.r-project.org/web/packages/lazyeval/vignettes/lazyeval.html</a></li> </ul>  <p>Is it fundamentally possible to do something similar in Javascript or Python.</p>"	66941968	"<p>Well, the sympy library kind of does something similar in python, by letting you define placeholder variables which will only be evaluated later.</p>"
56641374	Trying To Scrape HTML After JavaScript Using Python... No Luck	javascript|python|web-scraping|beautifulsoup|selenium-chromedriver	2019-06-18 03:26:51.917000 UTC	"<p>I've tried just about everything... PyQt5, Selenium, BS4, requests_html, etc... Still cannot get what I'm looking for.</p>  <p>I am trying to web scrape the data from <code>https://www.tokenanalyst.io/exchange</code> , specifically these dollar values. It appears as though this data is generated AFTER some Javascript code. I have not been able to successfully scrape said data. Is anyone able to successfully return the HTML code or integers?</p>"	56641889	"<p>Since the question is a bit unclear. It did not show what methods you tried. For the websites similar to that, you can't use beautiful soup. However, Selenium and chromedriver would be a nice choice since you can always scrape html for data. You have to <a href=""https://selenium-python.readthedocs.io/locating-elements.html"" rel=""nofollow noreferrer"">locate what you want to scrape</a> But to me, this method is a bit slow.</p>"
56641374	Trying To Scrape HTML After JavaScript Using Python... No Luck	javascript|python|web-scraping|beautifulsoup|selenium-chromedriver	2019-06-18 03:26:51.917000 UTC	"<p>I've tried just about everything... PyQt5, Selenium, BS4, requests_html, etc... Still cannot get what I'm looking for.</p>  <p>I am trying to web scrape the data from <code>https://www.tokenanalyst.io/exchange</code> , specifically these dollar values. It appears as though this data is generated AFTER some Javascript code. I have not been able to successfully scrape said data. Is anyone able to successfully return the HTML code or integers?</p>"	56642160	"<p>You can parse JSON values from their API:</p>  <pre><code>import requests import json  exchanges = ['Bitfinex', 'Binance', 'Bitstamp', 'Bittrex', 'Poloniex', 'BitMEX']  data = {} for e in exchanges:     url_inflow = 'https://api.tokenanalyst.io/analytics/last?job=btc_{}_{}_24h_rolling_v5&amp;format=json'.format(e, 'inflow')     url_outflow = 'https://api.tokenanalyst.io/analytics/last?job=btc_{}_{}_24h_rolling_v5&amp;format=json'.format(e, 'outflow')      j_inflow = json.loads(requests.get(url_inflow).text)     j_outflow = json.loads(requests.get(url_outflow).text)      print(e)     print(j_inflow)     print(j_outflow)      data[e] = (j_inflow[0]['inflow_usd'], j_outflow[0]['outflow_usd'])  print('*' * 80)  for k, v in data.items():     print('Exchange: {} Inflow_USD: {} Outflow_USD: {}'.format(k, v[0], v[1])) </code></pre>  <p>Prints:</p>  <pre><code>Bitfinex [{'avg_txn_value': 3.4021, 'entity': 'Bitfinex', 'inflow': 945.79000615, 'number_of_entity_receiving_addresses': 246, 'number_of_nonentity_sending_addresses': 1427, 'number_of_txns': 278, 'period_ending_at': '2019-06-17T22:12:27.500Z', 'inflow_usd': 8707062.91194768, 'avg_txn_value_usd': 31320.164666700002, 'inflow_usd_pct_change': '-54.67230315707747', 'avg_txn_value_usd_pct_change': '-47.98800964713564', 'inflow_pct_change': '-55.32126412430956', 'avg_txn_value_pct_change': '-48.7326702833032'}] [{'avg_txn_value': 3.199, 'entity': 'Bitfinex', 'number_of_entity_sending_addresses': 245, 'number_of_nonentity_receiving_addresses': 644, 'number_of_txns': 258, 'outflow': 2060.15622225, 'period_ending_at': '2019-06-17T22:12:21.346Z', 'outflow_usd': 18966059.82187373, 'avg_txn_value_usd': 29450.400273, 'outflow_usd_pct_change': '-16.706252918178574', 'avg_txn_value_usd_pct_change': '-33.13281601840719', 'outflow_pct_change': '-17.898777454731185', 'avg_txn_value_pct_change': '-34.09015988132521'}] Binance [{'avg_txn_value': 3.6763, 'entity': 'Binance', 'inflow': 13205.11846359, 'number_of_entity_receiving_addresses': 3282, 'number_of_nonentity_sending_addresses': 24453, 'number_of_txns': 3592, 'period_ending_at': '2019-06-17T22:12:35.270Z', 'inflow_usd': 121569489.80424081, 'avg_txn_value_usd': 33844.900111999996, 'inflow_usd_pct_change': 78.7755357787967, 'avg_txn_value_usd_pct_change': 75.14686308991297, 'inflow_pct_change': 76.21343804513097, 'avg_txn_value_pct_change': 72.6367691946466}] [{'avg_txn_value': 1.2547, 'entity': 'Binance', 'number_of_entity_sending_addresses': 1, 'number_of_nonentity_receiving_addresses': 9317, 'number_of_txns': 151, 'outflow': 11689.74225155, 'period_ending_at': '2019-06-17T22:12:25.426Z', 'outflow_usd': 107617251.76503526, 'avg_txn_value_usd': 11550.9275469, 'outflow_usd_pct_change': 18.73881008764625, 'avg_txn_value_usd_pct_change': 27.803672981371243, 'outflow_pct_change': 17.03881519689553, 'avg_txn_value_pct_change': 25.97389558232931}] Bitstamp [{'avg_txn_value': 4.9848, 'entity': 'Bitstamp', 'inflow': 4845.21760603, 'number_of_entity_receiving_addresses': 363, 'number_of_nonentity_sending_addresses': 5109, 'number_of_txns': 972, 'period_ending_at': '2019-06-18T03:13:29.366Z', 'inflow_usd': 44827992.052730404, 'avg_txn_value_usd': 46119.4094784, 'inflow_usd_pct_change': 20.9229998843688, 'avg_txn_value_usd_pct_change': 12.338050679950097, 'inflow_pct_change': 19.18043979551204, 'avg_txn_value_pct_change': 10.71920394473812}] [{'avg_txn_value': 2.1021, 'entity': 'Bitstamp', 'number_of_entity_sending_addresses': 211, 'number_of_nonentity_receiving_addresses': 2818, 'number_of_txns': 86, 'outflow': 5923.80448966, 'period_ending_at': '2019-06-17T22:05:56.784Z', 'outflow_usd': 54531167.56325086, 'avg_txn_value_usd': 19350.734403000002, 'outflow_usd_pct_change': 23.4058365064299, 'avg_txn_value_usd_pct_change': '-13.467075488325623', 'outflow_pct_change': 21.635752626972593, 'avg_txn_value_pct_change': '-14.70826909031891'}] Bittrex [{'avg_txn_value': 0.455, 'entity': 'Bittrex', 'inflow': 613.35675971, 'number_of_entity_receiving_addresses': 1362, 'number_of_nonentity_sending_addresses': 4700, 'number_of_txns': 1348, 'period_ending_at': '2019-06-18T03:13:29.480Z', 'inflow_usd': 5674781.647690997, 'avg_txn_value_usd': 4209.66364, 'inflow_usd_pct_change': '-3.5874967447576775', 'avg_txn_value_usd_pct_change': '-15.028043006702655', 'inflow_pct_change': '-4.976848484294497', 'avg_txn_value_pct_change': '-16.252530830112274'}] [{'avg_txn_value': 0.326, 'entity': 'Bittrex', 'number_of_entity_sending_addresses': 1396, 'number_of_nonentity_receiving_addresses': 2029, 'number_of_txns': 154, 'outflow': 661.49258585, 'period_ending_at': '2019-06-17T22:05:52.827Z', 'outflow_usd': 6089323.694561165, 'avg_txn_value_usd': 3000.9701800000003, 'outflow_usd_pct_change': '-15.905765601357832', 'avg_txn_value_usd_pct_change': '-24.950292648797074', 'outflow_pct_change': '-17.11197960936857', 'avg_txn_value_pct_change': '-26.026775584297702'}] Poloniex [{'avg_txn_value': 0.9987, 'entity': 'Poloniex', 'inflow': 551.29290849, 'number_of_entity_receiving_addresses': 688, 'number_of_nonentity_sending_addresses': 2832, 'number_of_txns': 552, 'period_ending_at': '2019-06-18T03:13:29.395Z', 'inflow_usd': 5100566.399692748, 'avg_txn_value_usd': 9239.9803896, 'inflow_usd_pct_change': 40.079661028653504, 'avg_txn_value_usd_pct_change': 8.863578042174874, 'inflow_pct_change': 38.06104400126806, 'avg_txn_value_pct_change': 7.294800171895152}] [{'avg_txn_value': 0.5784, 'entity': 'Poloniex', 'number_of_entity_sending_addresses': 2, 'number_of_nonentity_receiving_addresses': 1048, 'number_of_txns': 302, 'outflow': 606.13545851, 'period_ending_at': '2019-06-17T22:05:48.914Z', 'outflow_usd': 5579737.53383171, 'avg_txn_value_usd': 5324.420712, 'outflow_usd_pct_change': '-8.109879467421727', 'avg_txn_value_usd_pct_change': '-21.789008537427183', 'outflow_pct_change': '-9.427914542915346', 'avg_txn_value_pct_change': '-22.9108356657337'}] BitMEX [{'avg_txn_value': 0.6535, 'entity': 'Bitmex', 'inflow': 2120.51020525, 'number_of_entity_receiving_addresses': 3392, 'number_of_nonentity_sending_addresses': 10107, 'number_of_txns': 3245, 'period_ending_at': '2019-06-18T03:13:29.505Z', 'inflow_usd': 19618977.383054644, 'avg_txn_value_usd': 6046.187228, 'inflow_usd_pct_change': '-41.10742264036966', 'avg_txn_value_usd_pct_change': '-33.7342645462863', 'inflow_pct_change': '-41.95609373631447', 'avg_txn_value_pct_change': '-34.68918648810713'}] [{'avg_txn_value': 1.9551, 'entity': 'Bitmex', 'number_of_entity_sending_addresses': 2101, 'number_of_nonentity_receiving_addresses': 2063, 'number_of_txns': 2231, 'outflow': 4033.36989488, 'period_ending_at': '2019-06-17T22:06:16.970Z', 'outflow_usd': 37128904.2314252, 'avg_txn_value_usd': 17997.536193, 'outflow_usd_pct_change': 247.60891113166488, 'avg_txn_value_usd_pct_change': 97.97896643193221, 'outflow_pct_change': 242.62294817100863, 'avg_txn_value_pct_change': 95.13923545264}] ******************************************************************************** Exchange: Bitfinex Inflow_USD: 8707062.91194768 Outflow_USD: 18966059.82187373 Exchange: Binance Inflow_USD: 121569489.80424081 Outflow_USD: 107617251.76503526 Exchange: Bitstamp Inflow_USD: 44827992.052730404 Outflow_USD: 54531167.56325086 Exchange: Bittrex Inflow_USD: 5674781.647690997 Outflow_USD: 6089323.694561165 Exchange: Poloniex Inflow_USD: 5100566.399692748 Outflow_USD: 5579737.53383171 Exchange: BitMEX Inflow_USD: 19618977.383054644 Outflow_USD: 37128904.2314252 </code></pre>"
56682776	"How to call python from javascript (nodejs) program, without creating child process"	javascript|node.js|python-3.x	2019-06-20 09:18:15.453000 UTC	"<p>I have hardware running on nodejs, and I have written machine learning code in python3. I want to call python3 program from nodejs (javascript) and pass data as arguments to python program. </p>  <p>I have found some of the methods like using spawn, python-shell, etc. which calls python by creating a child process.</p>  <p>But I want to call python from the parent process itself, without creating a child process.  Means, only process, that is parent nodejs process should be running.</p>  <p>test.py</p>  <pre><code>def someFunction():   #some code here   #print the arguments received.  someFunction ()  </code></pre>  <p>test.js</p>  <pre><code>call test.py from this test.js and need to pass arguments to python program as well. call test.py with arguments as ('xyz', 'abc') </code></pre>  <p>I expect the output: xyz abc</p>  <p>Didn't find any way to call without creating and starting child process.</p>"	56682848	"<p>You can't. You're spawning an external program, that needs a process of its own.</p>  <hr>  <p>OK, that's not entirely true. You <em>could</em> write a complete Python interpreter or a virtual machine (which you could run an OS in and then run Python in that) in JavaScript and then you could run it entirely within the Node.js process … but that would be a huge amount of work.</p>"
56685190	How can I run a javascript code using a python web server?	javascript|python|server	2019-06-20 11:40:27.643000 UTC	"<p>I have used BaseHTTPRequestHandler to create the server. I can run a normal html file without any problem but when I try to call a js program using </p>  <pre><code>&lt;script type=""application/javascript"";charset=""utf8"", src=""prueba.js""&gt;  &lt;/script&gt; </code></pre>  <p>in my html file it doesn't work. My file prueba.js is just a line containing console.log('hello');. When I execute my server starts running but it prints anything instead of 'Hello' in the browser console. </p>  <p>I have already tried to change the MIME type from text/html to text/javascript and application/javascript and nothing changed.</p>"	56685228	"<p>The markup is incorrectly formatted. When browsers encounter incorrect syntax, they have various strategies to recover. In the case of Chrome (which I'm using), eliminating the comma between attributes allowed a test script to load. But you should also replace the semicolon with a space.</p>  <pre><code>&lt;script type=""application/javascript"" charset=""utf8"" src=""prueba.js""&gt;&lt;/script&gt; </code></pre>  <p>The correct <code>type</code> attribute <a href=""https://stackoverflow.com/a/4195504/684776"">is <code>text/javascript</code></a> if you're using HTML4. </p>  <pre><code>&lt;script type=""text/javascript"" charset=""utf8"" src=""prueba.js""&gt;&lt;/script&gt; </code></pre>  <p>The attribute is optional if you're using HTML5.</p>  <pre><code>&lt;script charset=""utf8"" src=""prueba.js""&gt;&lt;/script&gt; </code></pre>  <p>And you <a href=""https://stackoverflow.com/a/52106781/684776"">can omit the <code>charset</code> attribute</a> if its value matches the encoding of your HTML document.</p>  <pre><code>&lt;script src=""prueba.js""&gt;&lt;/script&gt; </code></pre>"
56694651	How do I convert line 6 and 7 from python into javascript?	javascript|python	2019-06-20 22:30:09.947000 UTC	"<p>I'm trying to convert this function from python into javascript. but I have no clue how I can convert the for loops from line 6 and 7 into javascript.</p>  <pre class=""lang-py prettyprint-override""><code>async def compute_wn8(stats_totals, exp_stat_totals) -&gt; float:         """"""Compute the WN8 of a player.""""""         wn8 = 0         if stats_totals and exp_stat_totals:             stat_keys = ('dmgs', 'spots', 'kills', 'defs', 'wins')             dmgs, spots, kills, defs, wins = (stats_totals[stat] for stat in stat_keys)             exp_dmgs, exp_spots, exp_kills, exp_defs, exp_wins = (exp_stat_totals[stat] for stat in stat_keys)              r_dmg = dmgs / exp_dmgs if exp_dmgs &gt; 0 else 0             r_spot = spots / exp_spots if exp_spots &gt; 0 else 0             r_kill = kills / exp_kills if exp_kills &gt; 0 else 0             r_def = defs / exp_defs if exp_defs &gt; 0 else 0             r_win = wins / exp_wins if exp_wins &gt; 0 else 0              r_dmg_c = max(0., (r_dmg - 0.22) / 0.78)             r_spot_c = max(0., min(r_dmg_c + 0.1, (r_spot - 0.38) / 0.62))             r_kill_c = max(0., min(r_dmg_c + 0.2, (r_kill - 0.12) / 0.88))             r_def_c = max(0., min(r_dmg_c + 0.1, (r_def - 0.10) / 0.90))             r_win_c = max(0., (r_win - 0.71) / 0.29)              wn8 += 980 * r_dmg_c             wn8 += 210 * r_dmg_c * r_kill_c             wn8 += 155 * r_kill_c * r_spot_c             wn8 += 75 * r_def_c * r_kill_c             wn8 += 145 * min(1.8, r_win_c)         return wn8 </code></pre>  <p>This is how far I got:</p>  <pre class=""lang-py prettyprint-override""><code>async function compute_wn8(stats_totals, exp_stat_totals)         //Compute the WN8 of a player.         wn8 = 0         if(stats_totals &amp;&amp; exp_stat_totals){             stat_keys = ('dmgs', 'spots', 'kills', 'defs', 'wins')             dmgs, spots, kills, defs, wins = (stats_totals[stat] for stat in stat_keys)             exp_dmgs, exp_spots, exp_kills, exp_defs, exp_wins = (exp_stat_totals[stat] for stat in stat_keys)              if(exp_dmgs&gt;0) {r_dmg = dmgs / exp_dmgs} else r_dmg = 0;             if(xp_spots&gt;0) {r_spot = spots / exp_spots} else xp_spots = 0;             if(exp_kills &gt; 0) {r_kill = kills / exp_kills} else exp_kills = 0;             if(exp_defs &gt; 0) {r_def = defs / exp_defs} else exp_defs = 0;             if(exp_wins &gt; 0) {r_win = wins / exp_wins} else exp_wins = 0;              r_dmg_c = max(0., (r_dmg - 0.22) / 0.78)             r_spot_c = max(0., min(r_dmg_c + 0.1, (r_spot - 0.38) / 0.62))             r_kill_c = max(0., min(r_dmg_c + 0.2, (r_kill - 0.12) / 0.88))             r_def_c = max(0., min(r_dmg_c + 0.1, (r_def - 0.10) / 0.90))             r_win_c = max(0., (r_win - 0.71) / 0.29)              wn8 += 980 * r_dmg_c             wn8 += 210 * r_dmg_c * r_kill_c             wn8 += 155 * r_kill_c * r_spot_c             wn8 += 75 * r_def_c * r_kill_c             wn8 += 145 * min(1.8, r_win_c)         return wn8         }    </code></pre>  <p>but I have no clue how to convert these two lines into javascript:</p>  <pre class=""lang-py prettyprint-override""><code>dmgs, spots, kills, defs, wins = (stats_totals[stat] for stat in stat_keys) exp_dmgs, exp_spots, exp_kills, exp_defs, exp_wins = (exp_stat_totals[stat] for stat in stat_keys) </code></pre>  <p>I hope anyone of you guys can help me :)</p>"	56694711	"<p>Assuming you have <code>stat_totals</code> in an object, you can convert the python comprehension + unpacking into a javascript <code>map</code> + destructure:</p>  <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-js lang-js prettyprint-override""><code>let stats_totals = {  dmgs:10, spots:20, kills:30, defs:40, wins:50}  let stat_keys = ['dmgs', 'spots', 'kills', 'defs', 'wins']  // dmgs, spots, kills, defs, wins = (stats_totals[stat] for stat in stat_keys) let [dmgs, spots, kills, defs, wins] = stat_keys.map(stat =&gt; stats_totals[stat] )  console.log(dmgs, spots, kills, defs, wins)</code></pre> </div> </div> </p>  <p>The same idea should work for the other line given an object <code>exp_stat_totals</code>.</p>  <p>You may also be able to directly destructure the object:</p>  <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-js lang-js prettyprint-override""><code>let stats_totals = {  dmgs:10, spots:20, kills:30, defs:40, wins:50}  let {dmgs, spots, kills, defs, wins} = stats_totals console.log(dmgs, spots, kills, defs, wins)</code></pre> </div> </div> </p>"
56694651	How do I convert line 6 and 7 from python into javascript?	javascript|python	2019-06-20 22:30:09.947000 UTC	"<p>I'm trying to convert this function from python into javascript. but I have no clue how I can convert the for loops from line 6 and 7 into javascript.</p>  <pre class=""lang-py prettyprint-override""><code>async def compute_wn8(stats_totals, exp_stat_totals) -&gt; float:         """"""Compute the WN8 of a player.""""""         wn8 = 0         if stats_totals and exp_stat_totals:             stat_keys = ('dmgs', 'spots', 'kills', 'defs', 'wins')             dmgs, spots, kills, defs, wins = (stats_totals[stat] for stat in stat_keys)             exp_dmgs, exp_spots, exp_kills, exp_defs, exp_wins = (exp_stat_totals[stat] for stat in stat_keys)              r_dmg = dmgs / exp_dmgs if exp_dmgs &gt; 0 else 0             r_spot = spots / exp_spots if exp_spots &gt; 0 else 0             r_kill = kills / exp_kills if exp_kills &gt; 0 else 0             r_def = defs / exp_defs if exp_defs &gt; 0 else 0             r_win = wins / exp_wins if exp_wins &gt; 0 else 0              r_dmg_c = max(0., (r_dmg - 0.22) / 0.78)             r_spot_c = max(0., min(r_dmg_c + 0.1, (r_spot - 0.38) / 0.62))             r_kill_c = max(0., min(r_dmg_c + 0.2, (r_kill - 0.12) / 0.88))             r_def_c = max(0., min(r_dmg_c + 0.1, (r_def - 0.10) / 0.90))             r_win_c = max(0., (r_win - 0.71) / 0.29)              wn8 += 980 * r_dmg_c             wn8 += 210 * r_dmg_c * r_kill_c             wn8 += 155 * r_kill_c * r_spot_c             wn8 += 75 * r_def_c * r_kill_c             wn8 += 145 * min(1.8, r_win_c)         return wn8 </code></pre>  <p>This is how far I got:</p>  <pre class=""lang-py prettyprint-override""><code>async function compute_wn8(stats_totals, exp_stat_totals)         //Compute the WN8 of a player.         wn8 = 0         if(stats_totals &amp;&amp; exp_stat_totals){             stat_keys = ('dmgs', 'spots', 'kills', 'defs', 'wins')             dmgs, spots, kills, defs, wins = (stats_totals[stat] for stat in stat_keys)             exp_dmgs, exp_spots, exp_kills, exp_defs, exp_wins = (exp_stat_totals[stat] for stat in stat_keys)              if(exp_dmgs&gt;0) {r_dmg = dmgs / exp_dmgs} else r_dmg = 0;             if(xp_spots&gt;0) {r_spot = spots / exp_spots} else xp_spots = 0;             if(exp_kills &gt; 0) {r_kill = kills / exp_kills} else exp_kills = 0;             if(exp_defs &gt; 0) {r_def = defs / exp_defs} else exp_defs = 0;             if(exp_wins &gt; 0) {r_win = wins / exp_wins} else exp_wins = 0;              r_dmg_c = max(0., (r_dmg - 0.22) / 0.78)             r_spot_c = max(0., min(r_dmg_c + 0.1, (r_spot - 0.38) / 0.62))             r_kill_c = max(0., min(r_dmg_c + 0.2, (r_kill - 0.12) / 0.88))             r_def_c = max(0., min(r_dmg_c + 0.1, (r_def - 0.10) / 0.90))             r_win_c = max(0., (r_win - 0.71) / 0.29)              wn8 += 980 * r_dmg_c             wn8 += 210 * r_dmg_c * r_kill_c             wn8 += 155 * r_kill_c * r_spot_c             wn8 += 75 * r_def_c * r_kill_c             wn8 += 145 * min(1.8, r_win_c)         return wn8         }    </code></pre>  <p>but I have no clue how to convert these two lines into javascript:</p>  <pre class=""lang-py prettyprint-override""><code>dmgs, spots, kills, defs, wins = (stats_totals[stat] for stat in stat_keys) exp_dmgs, exp_spots, exp_kills, exp_defs, exp_wins = (exp_stat_totals[stat] for stat in stat_keys) </code></pre>  <p>I hope anyone of you guys can help me :)</p>"	56697498	"<p>I've converted code from one language to another in the past. You should avoid translating it literally, but instead trying to understand what the code does and translate that. Differentiating what is logic and what are peculiarities or implementation details of that language.</p>  <p>Although Mark Meyer gave you an answer that translates these lines literally to JS, and it works, I'd recommend not using that code. It's complicated and slow in JS. </p>  <p>Because, unlike Python understanding these comprehensions, JS is not smart enough yet to understand that <code>stat_keys</code> is a static list of property names and to optimize these Aray#map calls followed by the array destructuring.</p>  <p>That's how I'd translate your function:</p>  <pre><code>// Compute the WN8 of a player. // why is this function async in your code? function compute_wn8(stats_totals, exp_stat_totals) {     if (!stats_totals || !exp_stat_totals) {         return 0;     }      const r_dmg    = exp_stat_totals.dmgs &gt; 0 ? stats_totals.dmgs / exp_stat_totals.dmgs : 0;     const r_spot   = exp_stat_totals.spots &gt; 0 ? stats_totals.spots / exp_stat_totals.spots : 0;     const r_kill   = exp_stat_totals.kills &gt; 0 ? stats_totals.kills / exp_stat_totals.kills : 0;     const r_def    = exp_stat_totals.defs &gt; 0 ? stats_totals.defs / exp_stat_totals.defs : 0;     const r_win    = exp_stat_totals.wins &gt; 0 ? stats_totals.wins / exp_stat_totals.wins : 0;     const r_dmg_c  = Math.max(0, (r_dmg - 0.22) / 0.78);     const r_spot_c = Math.max(0, Math.min(r_dmg_c + 0.1, (r_spot - 0.38) / 0.62));     const r_kill_c = Math.max(0, Math.min(r_dmg_c + 0.2, (r_kill - 0.12) / 0.88));     const r_def_c  = Math.max(0, Math.min(r_dmg_c + 0.1, (r_def - 0.10) / 0.90));     const r_win_c  = Math.max(0, (r_win - 0.71) / 0.29);      return 980 * r_dmg_c         + 210 * r_dmg_c * r_kill_c         + 155 * r_spot_c * r_kill_c         + 75 * r_def_c * r_kill_c         + 145 * Math.min(1.8, r_win_c); } </code></pre>  <p>besides that, even in python, I'm not sure wether this</p>  <pre><code>stat_keys = ('dmgs', 'spots', 'kills', 'defs', 'wins') dmgs, spots, kills, defs, wins = (stats_totals[stat] for stat in stat_keys) exp_dmgs, exp_spots, exp_kills, exp_defs, exp_wins = (exp_stat_totals[stat] for stat in stat_keys)  r_dmg = dmgs / exp_dmgs if exp_dmgs &gt; 0 else 0 r_spot = spots / exp_spots if exp_spots &gt; 0 else 0 r_kill = kills / exp_kills if exp_kills &gt; 0 else 0 r_def = defs / exp_defs if exp_defs &gt; 0 else 0 r_win = wins / exp_wins if exp_wins &gt; 0 else 0 </code></pre>  <p>is any better <em>(shorter, more readable, faster, anything)</em> than this:</p>  <pre><code>r_dmg = stats_totals.dmgs / exp_stat_totals.dmgs if exp_stat_totals.dmgs &gt; 0 else 0 r_spot = stats_totals.spots / exp_stat_totals.spots if exp_stat_totals.spots &gt; 0 else 0 r_kill = stats_totals.kills / exp_stat_totals.kills if exp_stat_totals.kills &gt; 0 else 0 r_def = stats_totals.defs / exp_stat_totals.defs if exp_stat_totals.defs &gt; 0 else 0 r_win = stats_totals.wins / exp_stat_totals.wins if exp_stat_totals.wins &gt; 0 else 0 </code></pre>  <p>and please, please declare your variables and use <code>;</code> in JS. Your future self will thank you.</p>"
56723984	Javascript Event Handler in Python web page not working	javascript|python|event-handling	2019-06-23 12:41:33.293000 UTC	"<p>I have a web page generated by Python which needs to have a Javascript event handler enabled.  The code below returns an error: node is not defined.</p>  <p>The following question has an answer which looks very promising, but I am missing the ""node"" variable assignment.  I would add a comment, but the system won't let me do so.  It says I need a reputation of 50 to add a comment.</p>  <p><a href=""https://stackoverflow.com/questions/5597060/detecting-arrow-key-presses-in-javascript"">Detecting arrow key presses in JavaScript</a></p>  <pre><code>&lt;BODY&gt; &lt;script type=""text/javascript""&gt; node.addEventListener(""keydown"", function(event) {     const key = event.key; // ""ArrowRight"", ""ArrowLeft"", ""ArrowUp"", or ""ArrowDown"" }); switch (event.key) {     case ""ArrowLeft"":         // Left pressed         alert( ""Left Arrow"" );         break;     case ""ArrowRight"":         // Right pressed         alert( ""Right Arrow"" );         break;     case ""ArrowUp"":         // Up pressed         alert( ""Up Arrow"" );         break;     case ""ArrowDown"":         // Down pressed         alert( ""Down Arrow"" );         break; } &lt;/script&gt; </code></pre>"	56724051	"<p>Assuming you want to listen for keydown events on your entire page you can replace <code>node</code> with <code>document</code> which is already defined within JS. You'll also need to move your switch statement inside the event listener's callback function like so:</p>  <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-js lang-js prettyprint-override""><code>document.addEventListener(""keydown"", function(event) {   event.preventDefault(); // prevent page from scrolling   const key = event.key; // ""ArrowRight"", ""ArrowLeft"", ""ArrowUp"", or ""ArrowDown""   switch (key) { // change to event.key to key to use the above variable     case ""ArrowLeft"":       // Left pressed       alert(""Left Arrow"");       break;     case ""ArrowRight"":       // Right pressed       alert(""Right Arrow"");       break;     case ""ArrowUp"":       // Up pressed       alert(""Up Arrow"");       break;     case ""ArrowDown"":       // Down pressed       alert(""Down Arrow"");       break;   } });</code></pre> <pre class=""snippet-code-css lang-css prettyprint-override""><code>body {   height: 200vh; }</code></pre> <pre class=""snippet-code-html lang-html prettyprint-override""><code>&lt;p&gt;Some text&lt;/p&gt;</code></pre> </div> </div> </p>  <p><em>Explanation:</em></p>  <p>Essentially <code>document</code> represents your entire page. You can add an event listener to your document (ie page) such that a function will execute when something happens. In our code, we're adding a <code>keydown</code> event listener which means we want to execute some code when a key is pressed down. The code which will run is the code in the <code>function(event) {...}</code>. When an event occurs, we can get specific details about that event from the <code>event</code> argument passed into the triggered function. We can get many details from the <code>event</code> object passed into our function, and one of those is the <code>key</code> which was pressed. In our code we get the key pressed using <code>evet.key</code> and then store it in a variable called <code>key</code>. We then use a <code>switch</code> statement to check which key was pressed, and execute the relevent code if a specific key appears.</p>"
56742791	Javascript enumerable property in Python	python	2019-06-24 19:27:23.070000 UTC	"<p>I have classes that I want to represent in JSON</p>  <p>In Javascript, a getter property can be included or excluded of a Json.stringfy() if defined as enumerable: true/false like this:</p>  <pre><code>class Example {      constructor(){         Object.defineProperties(this, {             notEnumerableProperty: {                 get: function () {                     return 'this is not enumerable';                 },                 enumerable: false             },             enumerableProperty: {                 get: function () {                     return 'this is a enumerable';                 },                 enumerable: true             }         });     }  }  const instance = new Example;  JSON.stringify(instance); // output ""{""enumerableProperty"":""this is a enumerable""}"" </code></pre>  <p>In Python we can define a getter function as a property like in Javascript using @property  decorator.  But it doesn't list in a JSON:</p>  <pre><code>#JSONEncoder as seen in https://stackoverflow.com/questions/3768895/how-to-make-a-class-json-serializable from json import JSONEncoder  class MyEncoder(JSONEncoder):   def default(self, o):       return o.__dict__       #My class class Example():    def __init__(self):     self.value = 'this value is enumerable'    @property   def enumerableProperty(self):     return 'It cannot enumerable';    @property   def notEnumerableProperty(self):     return 'It is not enumerable';  instance = Example() toJson = MyEncoder().encode(instance)  print(toJson) #output: {""value"": ""this value is enumerable""} </code></pre>  <p>Is it possible to allow a property be enumerated into a JSON like in Javascript?</p>"	56743373	"<p>You could use custom JSON encoder (<a href=""https://docs.python.org/3.6/library/json.html#json.JSONEncoder"" rel=""nofollow noreferrer"">doc</a>) and use <code>inspect.getmembers()</code> to get properties of class (<a href=""https://docs.python.org/3.6/library/inspect.html#inspect.getmembers"" rel=""nofollow noreferrer"">doc</a>):</p>  <pre><code>import inspect import json  class my_class:     def __init__(self):         self.__foo = 'Hello World!'         self.i = 111      @property     def foo(self):         return self.__foo  class MyEncoder(json.JSONEncoder):     def default(self, o):         properties = [(name, getattr(o, name)) for name, value in inspect.getmembers(o.__class__, lambda p: isinstance(p, property))]         values = [(name, value) for name, value in o.__dict__.items() if not name.startswith('_')]         return dict(properties + values)  m = my_class() print(json.dumps(m, cls=MyEncoder)) </code></pre>  <p>Prints:</p>  <pre><code>{""foo"": ""Hello World!"", ""i"": 111} </code></pre>"
56742791	Javascript enumerable property in Python	python	2019-06-24 19:27:23.070000 UTC	"<p>I have classes that I want to represent in JSON</p>  <p>In Javascript, a getter property can be included or excluded of a Json.stringfy() if defined as enumerable: true/false like this:</p>  <pre><code>class Example {      constructor(){         Object.defineProperties(this, {             notEnumerableProperty: {                 get: function () {                     return 'this is not enumerable';                 },                 enumerable: false             },             enumerableProperty: {                 get: function () {                     return 'this is a enumerable';                 },                 enumerable: true             }         });     }  }  const instance = new Example;  JSON.stringify(instance); // output ""{""enumerableProperty"":""this is a enumerable""}"" </code></pre>  <p>In Python we can define a getter function as a property like in Javascript using @property  decorator.  But it doesn't list in a JSON:</p>  <pre><code>#JSONEncoder as seen in https://stackoverflow.com/questions/3768895/how-to-make-a-class-json-serializable from json import JSONEncoder  class MyEncoder(JSONEncoder):   def default(self, o):       return o.__dict__       #My class class Example():    def __init__(self):     self.value = 'this value is enumerable'    @property   def enumerableProperty(self):     return 'It cannot enumerable';    @property   def notEnumerableProperty(self):     return 'It is not enumerable';  instance = Example() toJson = MyEncoder().encode(instance)  print(toJson) #output: {""value"": ""this value is enumerable""} </code></pre>  <p>Is it possible to allow a property be enumerated into a JSON like in Javascript?</p>"	56744349	"<p>this sort of thing is very ""non-Pythonic"", but you might be able to get some mileage out of creating a custom <code>property</code> decorator and then having a custom <code>JSONEncoder</code> that checks for this.  the decorator would be something like:</p>  <pre><code>class property_nonenum(property):     __slots__ = {'__doc__'} </code></pre>  <p>which we could check for in an encoder by doing:</p>  <pre><code>import json  class JsonObjectEncoder(json.JSONEncoder):     def default(self, obj):         ignore = set()         cls = type(obj)         for name in dir(cls):             if name.startswith('_'):                 continue             x = getattr(cls, name, None)             if callable(x):                 # don't want methods                 ignore.add(name)             elif isinstance(x, property):                 # ignore properties that aren't enumerable                 if isinstance(x, property_nonenum):                     ignore.add(name)         result = {}         for name in dir(obj):             if name.startswith('_') or name in ignore:                 continue             result[name] = getattr(obj, name)         return result </code></pre>  <p>and we can test this with a dummy class:</p>  <pre><code>class Example:     __slots__ = {'foo'}      def __init__(self):         self.foo = 10      @property     def bar(self):         return 20      @property_nonenum     def baz(self):         return 30      def myfn(self):         return 40      myval = 50   print(json.dumps(Example(), cls=JsonObjectEncoder)) </code></pre>  <p>which gives me: <code>{""bar"": 20, ""foo"": 10, ""myval"": 50}</code></p>"
56745062	Data scraping from a webpage with javascript using python	python|python-3.x|web-scraping|beautifulsoup|python-requests-html	2019-06-24 23:24:47.657000 UTC	"<p>I'm trying to scrape the title off of a webpage. Initially, I tried using BeautifulSoup but found out that the page itself wouldn't load without Javascript. So I'm using some code that I found off Google that use the request-html library:</p>  <pre><code>from requests_html import HTMLSession from bs4 import BeautifulSoup session = HTMLSession() resp = session.get(""https://www150.statcan.gc.ca/t1/tbl1/en/tv.action?pid=3210001601"") resp.html.render() soup = BeautifulSoup(resp.html.html, ""lxml"")  soup.find_all('h1') </code></pre>  <p>But there's always an error along the line of:</p>  <pre><code>D:\Python\TitleSraping\venv\Scripts\python.exe ""D:/Python/TitleSraping/venv/Text Scraping.py"" Traceback (most recent call last):   File ""D:\Python\TitleSraping\venv\lib\site-packages\pyppeteer\execution_context.py"", line 106, in evaluateHandle     'userGesture': True, pyppeteer.errors.NetworkError: Protocol error (Runtime.callFunctionOn): Cannot find context with specified id  During handling of the above exception, another exception occurred:  Traceback (most recent call last):   File ""D:/Python/TitleSraping/venv/Text Scraping.py"", line 5, in &lt;module&gt;     resp.html.render()   File ""D:\Python\TitleSraping\venv\lib\site-packages\requests_html.py"", line 598, in render     content, result, page = self.session.loop.run_until_complete(self._async_render(url=self.url, script=script, sleep=sleep, wait=wait, content=self.html, reload=reload, scrolldown=scrolldown, timeout=timeout, keep_page=keep_page))   File ""D:\Program Files (x86)\Python\lib\asyncio\base_events.py"", line 584, in run_until_complete     return future.result()   File ""D:\Python\TitleSraping\venv\lib\site-packages\requests_html.py"", line 531, in _async_render     content = await page.content()   File ""D:\Python\TitleSraping\venv\lib\site-packages\pyppeteer\page.py"", line 780, in content     return await frame.content()   File ""D:\Python\TitleSraping\venv\lib\site-packages\pyppeteer\frame_manager.py"", line 379, in content     '''.strip())   File ""D:\Python\TitleSraping\venv\lib\site-packages\pyppeteer\frame_manager.py"", line 295, in evaluate     pageFunction, *args, force_expr=force_expr)   File ""D:\Python\TitleSraping\venv\lib\site-packages\pyppeteer\execution_context.py"", line 55, in evaluate     pageFunction, *args, force_expr=force_expr)   File ""D:\Python\TitleSraping\venv\lib\site-packages\pyppeteer\execution_context.py"", line 109, in evaluateHandle     _rewriteError(e)   File ""D:\Python\TitleSraping\venv\lib\site-packages\pyppeteer\execution_context.py"", line 238, in _rewriteError     raise type(error)(msg) pyppeteer.errors.NetworkError: Execution context was destroyed, most likely because of a navigation.  Process finished with exit code 1 </code></pre>  <p>Does anyone know what this means? I'm quite new to this, so I apologize if I'm using any terminology improperly.</p>"	56745144	"<p>Seems like a bug in underlying library <code>puppeteer</code>, caused by processing some javascript. Here's one workaround from <a href=""https://github.com/kennethreitz/requests-html/issues/251"" rel=""nofollow noreferrer"">https://github.com/kennethreitz/requests-html/issues/251</a>, maybe it'll help.</p>  <p><code>resp.html.render(sleep=1, keep_page=True)</code></p>"
56745062	Data scraping from a webpage with javascript using python	python|python-3.x|web-scraping|beautifulsoup|python-requests-html	2019-06-24 23:24:47.657000 UTC	"<p>I'm trying to scrape the title off of a webpage. Initially, I tried using BeautifulSoup but found out that the page itself wouldn't load without Javascript. So I'm using some code that I found off Google that use the request-html library:</p>  <pre><code>from requests_html import HTMLSession from bs4 import BeautifulSoup session = HTMLSession() resp = session.get(""https://www150.statcan.gc.ca/t1/tbl1/en/tv.action?pid=3210001601"") resp.html.render() soup = BeautifulSoup(resp.html.html, ""lxml"")  soup.find_all('h1') </code></pre>  <p>But there's always an error along the line of:</p>  <pre><code>D:\Python\TitleSraping\venv\Scripts\python.exe ""D:/Python/TitleSraping/venv/Text Scraping.py"" Traceback (most recent call last):   File ""D:\Python\TitleSraping\venv\lib\site-packages\pyppeteer\execution_context.py"", line 106, in evaluateHandle     'userGesture': True, pyppeteer.errors.NetworkError: Protocol error (Runtime.callFunctionOn): Cannot find context with specified id  During handling of the above exception, another exception occurred:  Traceback (most recent call last):   File ""D:/Python/TitleSraping/venv/Text Scraping.py"", line 5, in &lt;module&gt;     resp.html.render()   File ""D:\Python\TitleSraping\venv\lib\site-packages\requests_html.py"", line 598, in render     content, result, page = self.session.loop.run_until_complete(self._async_render(url=self.url, script=script, sleep=sleep, wait=wait, content=self.html, reload=reload, scrolldown=scrolldown, timeout=timeout, keep_page=keep_page))   File ""D:\Program Files (x86)\Python\lib\asyncio\base_events.py"", line 584, in run_until_complete     return future.result()   File ""D:\Python\TitleSraping\venv\lib\site-packages\requests_html.py"", line 531, in _async_render     content = await page.content()   File ""D:\Python\TitleSraping\venv\lib\site-packages\pyppeteer\page.py"", line 780, in content     return await frame.content()   File ""D:\Python\TitleSraping\venv\lib\site-packages\pyppeteer\frame_manager.py"", line 379, in content     '''.strip())   File ""D:\Python\TitleSraping\venv\lib\site-packages\pyppeteer\frame_manager.py"", line 295, in evaluate     pageFunction, *args, force_expr=force_expr)   File ""D:\Python\TitleSraping\venv\lib\site-packages\pyppeteer\execution_context.py"", line 55, in evaluate     pageFunction, *args, force_expr=force_expr)   File ""D:\Python\TitleSraping\venv\lib\site-packages\pyppeteer\execution_context.py"", line 109, in evaluateHandle     _rewriteError(e)   File ""D:\Python\TitleSraping\venv\lib\site-packages\pyppeteer\execution_context.py"", line 238, in _rewriteError     raise type(error)(msg) pyppeteer.errors.NetworkError: Execution context was destroyed, most likely because of a navigation.  Process finished with exit code 1 </code></pre>  <p>Does anyone know what this means? I'm quite new to this, so I apologize if I'm using any terminology improperly.</p>"	56745179	<p>You need to load the JS because if you don't load it the HTML code wont load. You can use Selenium</p>
56745062	Data scraping from a webpage with javascript using python	python|python-3.x|web-scraping|beautifulsoup|python-requests-html	2019-06-24 23:24:47.657000 UTC	"<p>I'm trying to scrape the title off of a webpage. Initially, I tried using BeautifulSoup but found out that the page itself wouldn't load without Javascript. So I'm using some code that I found off Google that use the request-html library:</p>  <pre><code>from requests_html import HTMLSession from bs4 import BeautifulSoup session = HTMLSession() resp = session.get(""https://www150.statcan.gc.ca/t1/tbl1/en/tv.action?pid=3210001601"") resp.html.render() soup = BeautifulSoup(resp.html.html, ""lxml"")  soup.find_all('h1') </code></pre>  <p>But there's always an error along the line of:</p>  <pre><code>D:\Python\TitleSraping\venv\Scripts\python.exe ""D:/Python/TitleSraping/venv/Text Scraping.py"" Traceback (most recent call last):   File ""D:\Python\TitleSraping\venv\lib\site-packages\pyppeteer\execution_context.py"", line 106, in evaluateHandle     'userGesture': True, pyppeteer.errors.NetworkError: Protocol error (Runtime.callFunctionOn): Cannot find context with specified id  During handling of the above exception, another exception occurred:  Traceback (most recent call last):   File ""D:/Python/TitleSraping/venv/Text Scraping.py"", line 5, in &lt;module&gt;     resp.html.render()   File ""D:\Python\TitleSraping\venv\lib\site-packages\requests_html.py"", line 598, in render     content, result, page = self.session.loop.run_until_complete(self._async_render(url=self.url, script=script, sleep=sleep, wait=wait, content=self.html, reload=reload, scrolldown=scrolldown, timeout=timeout, keep_page=keep_page))   File ""D:\Program Files (x86)\Python\lib\asyncio\base_events.py"", line 584, in run_until_complete     return future.result()   File ""D:\Python\TitleSraping\venv\lib\site-packages\requests_html.py"", line 531, in _async_render     content = await page.content()   File ""D:\Python\TitleSraping\venv\lib\site-packages\pyppeteer\page.py"", line 780, in content     return await frame.content()   File ""D:\Python\TitleSraping\venv\lib\site-packages\pyppeteer\frame_manager.py"", line 379, in content     '''.strip())   File ""D:\Python\TitleSraping\venv\lib\site-packages\pyppeteer\frame_manager.py"", line 295, in evaluate     pageFunction, *args, force_expr=force_expr)   File ""D:\Python\TitleSraping\venv\lib\site-packages\pyppeteer\execution_context.py"", line 55, in evaluate     pageFunction, *args, force_expr=force_expr)   File ""D:\Python\TitleSraping\venv\lib\site-packages\pyppeteer\execution_context.py"", line 109, in evaluateHandle     _rewriteError(e)   File ""D:\Python\TitleSraping\venv\lib\site-packages\pyppeteer\execution_context.py"", line 238, in _rewriteError     raise type(error)(msg) pyppeteer.errors.NetworkError: Execution context was destroyed, most likely because of a navigation.  Process finished with exit code 1 </code></pre>  <p>Does anyone know what this means? I'm quite new to this, so I apologize if I'm using any terminology improperly.</p>"	56745180	"<p>Try Seleneum.  </p>  <p>Seleneum is a library that allows programs to interact with web pages by taking control of the browser.</p>  <p>Here is an example in  <a href=""https://stackoverflow.com/questions/5585343/getting-the-return-value-of-javascript-code-in-selenium/5585345#5585345"">an answer</a> to someone else's question.</p>"
56745062	Data scraping from a webpage with javascript using python	python|python-3.x|web-scraping|beautifulsoup|python-requests-html	2019-06-24 23:24:47.657000 UTC	"<p>I'm trying to scrape the title off of a webpage. Initially, I tried using BeautifulSoup but found out that the page itself wouldn't load without Javascript. So I'm using some code that I found off Google that use the request-html library:</p>  <pre><code>from requests_html import HTMLSession from bs4 import BeautifulSoup session = HTMLSession() resp = session.get(""https://www150.statcan.gc.ca/t1/tbl1/en/tv.action?pid=3210001601"") resp.html.render() soup = BeautifulSoup(resp.html.html, ""lxml"")  soup.find_all('h1') </code></pre>  <p>But there's always an error along the line of:</p>  <pre><code>D:\Python\TitleSraping\venv\Scripts\python.exe ""D:/Python/TitleSraping/venv/Text Scraping.py"" Traceback (most recent call last):   File ""D:\Python\TitleSraping\venv\lib\site-packages\pyppeteer\execution_context.py"", line 106, in evaluateHandle     'userGesture': True, pyppeteer.errors.NetworkError: Protocol error (Runtime.callFunctionOn): Cannot find context with specified id  During handling of the above exception, another exception occurred:  Traceback (most recent call last):   File ""D:/Python/TitleSraping/venv/Text Scraping.py"", line 5, in &lt;module&gt;     resp.html.render()   File ""D:\Python\TitleSraping\venv\lib\site-packages\requests_html.py"", line 598, in render     content, result, page = self.session.loop.run_until_complete(self._async_render(url=self.url, script=script, sleep=sleep, wait=wait, content=self.html, reload=reload, scrolldown=scrolldown, timeout=timeout, keep_page=keep_page))   File ""D:\Program Files (x86)\Python\lib\asyncio\base_events.py"", line 584, in run_until_complete     return future.result()   File ""D:\Python\TitleSraping\venv\lib\site-packages\requests_html.py"", line 531, in _async_render     content = await page.content()   File ""D:\Python\TitleSraping\venv\lib\site-packages\pyppeteer\page.py"", line 780, in content     return await frame.content()   File ""D:\Python\TitleSraping\venv\lib\site-packages\pyppeteer\frame_manager.py"", line 379, in content     '''.strip())   File ""D:\Python\TitleSraping\venv\lib\site-packages\pyppeteer\frame_manager.py"", line 295, in evaluate     pageFunction, *args, force_expr=force_expr)   File ""D:\Python\TitleSraping\venv\lib\site-packages\pyppeteer\execution_context.py"", line 55, in evaluate     pageFunction, *args, force_expr=force_expr)   File ""D:\Python\TitleSraping\venv\lib\site-packages\pyppeteer\execution_context.py"", line 109, in evaluateHandle     _rewriteError(e)   File ""D:\Python\TitleSraping\venv\lib\site-packages\pyppeteer\execution_context.py"", line 238, in _rewriteError     raise type(error)(msg) pyppeteer.errors.NetworkError: Execution context was destroyed, most likely because of a navigation.  Process finished with exit code 1 </code></pre>  <p>Does anyone know what this means? I'm quite new to this, so I apologize if I'm using any terminology improperly.</p>"	56745192	"<p>As Ivan said, here you have full code: sleep=1, keep_page=True make the trick</p>  <pre><code>from requests_html import HTMLSession from bs4 import BeautifulSoup  session = HTMLSession() resp = session.get(""https://www150.statcan.gc.ca/t1/tbl1/en/tv.action?pid=3210001601"") resp.html.render(sleep=1, keep_page=True) soup = BeautifulSoup(resp.html.html, ""lxml"") print(soup.find_all('title')) </code></pre>  <p>Response:</p>  <pre><code>[&lt;title&gt;     Milled wheat and wheat flour produced&lt;/title&gt;] </code></pre>"
56773409	How to pass variable from python3 to javascript?	javascript|python|arguments	2019-06-26 12:58:55.537000 UTC	"<p>I make a connection with DB and select some information with a query in a python file. All information is stored in a variable. Then I start a js, but I want to send this information from python to the js file to use it there. Should I start the script like with some argument and how should I get it in the js file?</p>"	56773671	<p>Why not create an <code>json</code> file that contain all your data ? Run your python script then update this json and finally call your js file that import this json</p>  <p>With es6 its easy to import a json in a js file :</p>  <pre><code>import * as data from './example.json'; </code></pre>
56797184	How do I send a python variable over to javascript? The python is a cgi script?	javascript|python|ajax|post|cgi	2019-06-27 18:55:12.053000 UTC	"<p>I have a javascript file where I am trying to set a variable using data sent from a python cgi script.</p>  <p>I am trying to use the ajax get method, and setting the variable within that method. Here is how I am doing it in the javascript.</p>  <pre><code>$.get('cgi-bin/populate_usernames.py', function(data) {     users = data });  console.log(users) </code></pre>  <p>In the python code, I have the following:</p>  <pre><code>#!/usr/bin/python import os  data = [""Bob"", ""Jim""] </code></pre>  <p>For some reason, the console log fails because users is undefined. I think it is because the content type is incorrect for data. Is there a way for me to send a JSON array from the python code so that users has the correct contents of Jim and Bob?</p>"	56797967	"<p>For simple data structures like lists, you can use an external standard like JSON to pass information between two languages.</p>  <pre><code>import json data = [""Bob"", ""Jim""] json_string = json.dumps(data) </code></pre>  <p>Then pass the json string to the javascript environment in whatever way is possible in your application.</p>"
56820558	Can I use Python instead of Javascript in front-end development?	javascript|python|html	2019-06-29 20:09:19.973000 UTC	"<p>I am asking this because I don't want to use Javascript; instead I want to use Python as an alternative. If this is not possible, please give an alternative apart from jQuery.</p>"	56820672	"<p>There are a couple of projects to bring python to browsers, for example <a href=""http://brython.info"" rel=""nofollow noreferrer"">http://brython.info</a>, all are not production-ready.</p>  <p>You can use transpiled languages (your code transformed into JS to be run by a browser). Typescript is one of the options.</p>  <p>In the end web development == Javascript, so you should grit your teeth and just use the right tool for the job. There are many frameworks available to make JS development less painful: vue.js, angular, react, many others...</p>"
56820558	Can I use Python instead of Javascript in front-end development?	javascript|python|html	2019-06-29 20:09:19.973000 UTC	"<p>I am asking this because I don't want to use Javascript; instead I want to use Python as an alternative. If this is not possible, please give an alternative apart from jQuery.</p>"	56820729	<p>Yes.You can first you need to download XMAPP AND Python3 then open XMAPP -> apache config notepad will be open then find AddHandler.  AddHandler-> AddHandler cgi-script.cgi.pl.asp.py -> save it.Then the .py extension created.</p>
56829816	Scraping Javascript variables into Python	javascript|python|beautifulsoup	2019-07-01 03:50:06.577000 UTC	"<p>I want to scrape the following data from <a href=""http://maps.latimes.com/neighborhoods/population/density/neighborhood/list/"" rel=""nofollow noreferrer"">http://maps.latimes.com/neighborhoods/population/density/neighborhood/list/</a>:</p>  <pre><code>  var hoodFeatures = {             type: ""FeatureCollection"",             features: [{                 type: ""Feature"",                 properties: {                     name: ""Koreatown"",                     slug: ""koreatown"",                     url: ""/neighborhoods/neighborhood/koreatown/"",                     has_statistics: true,                     label: 'Rank: 1&lt;br&gt;Population per Sqmi: 42,611',                     population: ""115,070"",                     stratum: ""high""                 },                 geometry: { ""type"": ""MultiPolygon"", ""coordinates"": [ [ [ [ -118.286908, 34.076510 ], [ -118.289208, 34.052511 ], [ -118.315909, 34.052611 ], [ -118.323009, 34.054810 ], [ -118.319309, 34.061910 ], [ -118.314093, 34.062362 ], [ -118.313709, 34.076310 ], [ -118.286908, 34.076510 ] ] ] ] }             }, </code></pre>  <p>From the above html, I want to take each of:</p>  <pre><code>name population per sqmi population geometry </code></pre>  <p>and turn it into a data frame by name</p>  <p>So far I've tried</p>  <pre><code>import requests import json from bs4 import BeautifulSoup  response_obj = requests.get('http://maps.latimes.com/neighborhoods/population/density/neighborhood/list/').text soup = BeautifulSoup(response_obj,'lxml') </code></pre>  <p>The object has the script info, but I don't understand how to use the json module as advised in this thread: <a href=""https://stackoverflow.com/questions/13298201/parsing-variable-data-out-of-a-javascript-tag-using-python"">Parsing variable data out of a javascript tag using python</a></p>  <pre><code>json_text = '{%s}' % (soup.partition('{')[2].rpartition('}')[0],) value = json.loads(json_text) value </code></pre>  <p>I get this error</p>  <pre><code>TypeError                                 Traceback (most recent call last) &lt;ipython-input-12-37c4c0188ed0&gt; in &lt;module&gt;       1 #Splits the text on the first bracket and last bracket of the javascript into JSON format ----&gt; 2 json_text = '{%s}' % (soup.partition('{')[2].rpartition('}')[0],)       3 value = json.loads(json_text)       4 value       5 #import pprint  TypeError: 'NoneType' object is not callable </code></pre>  <p>Any suggestions? Thanks</p>"	56830357	"<p>You can't really use <code>json.loads</code> because <code>hoodFeatures</code> object is not really a json. In a  proper json, every key is surrounded with double quotes <code>""</code></p>  <p>You could try adding quotes around keys manually (using regular expressions).<br> Another option is using Selenium to execute that JS and get the <code>JSON.stringify</code> output of it.</p>  <h1>Answer using manual cleanup:</h1>  <p>This one cleans up JS code and turns it into a JSON that can be parsed properly. However keep in mind that it is by no means robust, and may break at any sight of unexpected input.</p>  <pre class=""lang-py prettyprint-override""><code>import json import re  js = '''  var hoodFeatures = {             type: ""FeatureCollection"",             features: [             {                 type: ""Feature"",                 properties: {                     name: ""Beverlywood"",                     slug: ""beverlywood"",                     url: ""/neighborhoods/neighborhood/beverlywood/"",                     has_statistics: true,                     label: 'Rank: 131&lt;br&gt;Population per Sqmi: 7,654',                     population: ""6,080"",                     stratum: ""middle""                 },                 geometry: {  }             }]         } '''  if __name__ == '__main__':     unprefixed = js.split('{', maxsplit=1)[1]     unsuffixed = unprefixed.rsplit('}', maxsplit=1)[0]     quotes_replaced = unsuffixed.replace('\'', '""')     rebraced = f'{{{quotes_replaced}}}'     keys_quoted = []     for line in rebraced.splitlines():         line = re.sub('^\s+([^:]+):', '""\\1"":', line)         keys_quoted.append(line)     json_raw = '\n'.join(keys_quoted)     # print(json_raw)     parsed = json.loads(json_raw)     for feat in parsed['features']:         props = feat['properties']         name, pop = props['name'], int(props['population'].replace(',', ''))         geo = feat['geometry']         pop_per_sqm = re.findall('per Sqmi: ([\d,]+)', props['label'])[0].replace(',', '')         pop_per_sqm = int(pop_per_sqm)          print(name, pop, pop_per_sqm, geo)  </code></pre>"
56829816	Scraping Javascript variables into Python	javascript|python|beautifulsoup	2019-07-01 03:50:06.577000 UTC	"<p>I want to scrape the following data from <a href=""http://maps.latimes.com/neighborhoods/population/density/neighborhood/list/"" rel=""nofollow noreferrer"">http://maps.latimes.com/neighborhoods/population/density/neighborhood/list/</a>:</p>  <pre><code>  var hoodFeatures = {             type: ""FeatureCollection"",             features: [{                 type: ""Feature"",                 properties: {                     name: ""Koreatown"",                     slug: ""koreatown"",                     url: ""/neighborhoods/neighborhood/koreatown/"",                     has_statistics: true,                     label: 'Rank: 1&lt;br&gt;Population per Sqmi: 42,611',                     population: ""115,070"",                     stratum: ""high""                 },                 geometry: { ""type"": ""MultiPolygon"", ""coordinates"": [ [ [ [ -118.286908, 34.076510 ], [ -118.289208, 34.052511 ], [ -118.315909, 34.052611 ], [ -118.323009, 34.054810 ], [ -118.319309, 34.061910 ], [ -118.314093, 34.062362 ], [ -118.313709, 34.076310 ], [ -118.286908, 34.076510 ] ] ] ] }             }, </code></pre>  <p>From the above html, I want to take each of:</p>  <pre><code>name population per sqmi population geometry </code></pre>  <p>and turn it into a data frame by name</p>  <p>So far I've tried</p>  <pre><code>import requests import json from bs4 import BeautifulSoup  response_obj = requests.get('http://maps.latimes.com/neighborhoods/population/density/neighborhood/list/').text soup = BeautifulSoup(response_obj,'lxml') </code></pre>  <p>The object has the script info, but I don't understand how to use the json module as advised in this thread: <a href=""https://stackoverflow.com/questions/13298201/parsing-variable-data-out-of-a-javascript-tag-using-python"">Parsing variable data out of a javascript tag using python</a></p>  <pre><code>json_text = '{%s}' % (soup.partition('{')[2].rpartition('}')[0],) value = json.loads(json_text) value </code></pre>  <p>I get this error</p>  <pre><code>TypeError                                 Traceback (most recent call last) &lt;ipython-input-12-37c4c0188ed0&gt; in &lt;module&gt;       1 #Splits the text on the first bracket and last bracket of the javascript into JSON format ----&gt; 2 json_text = '{%s}' % (soup.partition('{')[2].rpartition('}')[0],)       3 value = json.loads(json_text)       4 value       5 #import pprint  TypeError: 'NoneType' object is not callable </code></pre>  <p>Any suggestions? Thanks</p>"	56830413	"<p>I'm not really sure how to do that with the beautiful soup, yet another option might be to likely design an expression and extract our desired values: </p>  <pre><code>(?:name|population per sqmi|population)\s*:\s*""?(.*?)\s*[""']|(?:geometry)\s*:\s*({.*}) </code></pre>  <h3><a href=""https://regex101.com/r/ZhsD7i/1/"" rel=""nofollow noreferrer"">Demo</a></h3>  <h3>Test</h3>  <pre><code>import re  regex = r""(?:name|population per sqmi|population)\s*:\s*\""?(.*?)\s*[\""']|(?:geometry)\s*:\s*({.*})""  test_str = (""var hoodFeatures = {\n""     ""            type: \""FeatureCollection\"",\n""     ""            features: [{\n""     ""                type: \""Feature\"",\n""     ""                properties: {\n""     ""                    name: \""Koreatown\"",\n""     ""                    slug: \""koreatown\"",\n""     ""                    url: \""/neighborhoods/neighborhood/koreatown/\"",\n""     ""                    has_statistics: true,\n""     ""                    label: 'Rank: 1&lt;br&gt;Population per Sqmi: 42,611',\n""     ""                    population: \""115,070\"",\n""     ""                    stratum: \""high\""\n""     ""                },\n""     ""                geometry: { \""type\"": \""MultiPolygon\"", \""coordinates\"": [ [ [ [ -118.286908, 34.076510 ], [ -118.289208, 34.052511 ], [ -118.315909, 34.052611 ], [ -118.323009, 34.054810 ], [ -118.319309, 34.061910 ], [ -118.314093, 34.062362 ], [ -118.313709, 34.076310 ], [ -118.286908, 34.076510 ] ] ] ] }\n""     ""            },\n"")  matches = re.finditer(regex, test_str, re.MULTILINE | re.IGNORECASE)  for matchNum, match in enumerate(matches, start=1):      print (""Match {matchNum} was found at {start}-{end}: {match}"".format(matchNum = matchNum, start = match.start(), end = match.end(), match = match.group()))      for groupNum in range(0, len(match.groups())):         groupNum = groupNum + 1          print (""Group {groupNum} found at {start}-{end}: {group}"".format(groupNum = groupNum, start = match.start(groupNum), end = match.end(groupNum), group = match.group(groupNum))) </code></pre>"
56858014	How to scrape data from javascript code from HTML page by using python	python-3.x	2019-07-02 18:10:22.210000 UTC	"<p>I am working to <strong>scrape</strong> the actual data of graph from the site. But this data in javascript code and store in the list. Then please tell me the how to <strong>scrape</strong> this data by using python.</p> <p><a href=""https://i.stack.imgur.com/5Ne6U.jpg"" rel=""nofollow noreferrer"">click here and see the HTML page image.<br /> In this image show script tag and in this tag one column[] list.In this list data is store  </a></p> <p>Then please send the solution of this problem.</p> <p>This is my python code</p> <hr /> <p>from bs4 import BeautifulSoup<br /> import urllib.request urlpage = 'http://www.stockgraph.com/'  //This is not original url ,above give<br /> the link of  image of html page.</p> <p>page = urllib.request.urlopen(urlpage)</p> <p>soup = BeautifulSoup(page,'html.parser')<br /> script=soup.find('script',attrs={'class':'col-md-9 col-md-push-3'})<br /> print(script)</p> <hr /> <p>In the above code open url and find out the script tag but I can't <strong>scrape</strong> javascript code. please tell me the solution.<br /> My data in script tag and store in the list then how to <strong>scrape</strong> this data</p>"	56858169	"<p>To get you off in the right direction, I will try to guide you in what you need to do.</p>  <p>First you need to use something to read your webpage like urllib</p>  <pre><code>import urllib2 response = urllib2.urlopen(""http://google.com"") page_source = response.read() </code></pre>  <p>You will then need to parse this code using another Module like BeautifulSoup</p>  <p>Follow some documents to get you started on scraping your website  <a href=""https://www.freecodecamp.org/news/how-to-scrape-websites-with-python-and-beautifulsoup-5946935d93fe/"" rel=""nofollow noreferrer"">https://www.freecodecamp.org/news/how-to-scrape-websites-with-python-and-beautifulsoup-5946935d93fe/</a></p>"
56879762	Using javascript or python regular expressions I want to determine if the number is 1-99 how to make it?	javascript	2019-07-04 02:02:51.377000 UTC	"<pre><code>var category = prompt(""where do you go? (1~99)"", """"); </code></pre>  <p>hello</p>  <p>Using regular expressions I want to determine if the category is 1-99.</p>  <p>How can I solve it?</p>  <p>Thank you if you let me know.</p>"	56879813	"<p>You can use character classes to match digits, like this <code>[0-9]</code>. If you put two of them together you'll match 00 - 99. If you put a <code>?</code> after one of them, then it's optional, so you'll match 0 - 99. To enforce 1-99, make the non-optional one like this <code>[1-9]</code>. Finally, you need to make sure there's nothing before or after the one or two digits using ^, which matches the beginning of the string, and $ which matches the end. </p>  <pre><code>if (category.match(/^[1-9][0-9]?$/)){     console.log(""ok"") } else {     console.log(""not ok"") } </code></pre>"
56879762	Using javascript or python regular expressions I want to determine if the number is 1-99 how to make it?	javascript	2019-07-04 02:02:51.377000 UTC	"<pre><code>var category = prompt(""where do you go? (1~99)"", """"); </code></pre>  <p>hello</p>  <p>Using regular expressions I want to determine if the category is 1-99.</p>  <p>How can I solve it?</p>  <p>Thank you if you let me know.</p>"	56879868	"<p>In JavaScript you can use test() method with RE for 1-99 as shown below:</p>  <pre><code>var one_to_ninetynine = /^[1-9][0-9]?$/i;  if(one_to_ninetynine.test(category)) {     console.log(""The number is between 1-99""); } else {     console.log(""The number is NOT between 1-99""); } </code></pre>"
56880331	Javascript Ajax upload file to Python backend	javascript|python	2019-07-04 03:36:12.920000 UTC	"<p>I got stuck how to make my code work, I am trying to upload file using javascript to my python code.</p>  <p>here my HTML</p>  <pre><code>&lt;div class=""form-group""&gt;     &lt;label for=""upload_list"" class=""control-label""&gt;Upload List&lt;/label&gt;     &lt;input name=""upload_list"" id=""upload_list"" type=""file"" class=""form-control"" multiple=""true"" /&gt; &lt;/div&gt;  &lt;a id=""make_order"" role=""button"" class=""btn btn-primary"" href=""#""&gt; </code></pre>  <p>here my JS that handle the upload.</p>  <pre><code>$(""a#make_rfq_order"").bind(""click"", function(ev) {     var customer_upload_list = $('#upload_list').val();      ajax.jsonRpc('/shop/order', 'call', {         'upload_list': customer_upload_list     }); }); </code></pre>  <p>and here my python code</p>  <pre><code>def customer_order(self, **post):     if post.get('upload_list'):         .....         if order and order.id:             .....             if post.get('upload_list'):                 .....                 values.update({                     'name': '{0}_{1}'.format('file', upload_list.filename),                     })              order.write(values)      return True </code></pre>  <p>if I use <code>'name': '{0}_{1}'.format('file', upload_list),</code> its work, but only handle the file name,</p>  <p>how to get the actual file submited to my server?...</p>"	56953446	"<p>I'm unable to comment, so I'm answering as best I can, but knowing a bit more about your python server would help (are you using a specific framework or did you code your own python server from scratch, etc...)</p>  <p>I think you're sending the path of the file, not the file itself with this part:</p>  <pre><code>    var customer_upload_list = $('#upload_list').val(); </code></pre>  <p>Try the below instead:</p>  <pre><code>    var file = $('#upload_list').get(0).files[0]; </code></pre>  <p>Also, it looks like you're trying to include support for multiple files.  Have you tried building a FormData by iterating over the selected files and adding the FormData to the POST?</p>  <p>Something like this may work, or at least get you in the right direction:</p>  <pre><code>    var files = new FormData();     for(var i=0;i&lt; $('#upload_list').val().length;i++){         var file = $('#upload_list').get(0).files[i];         files.append('files[]', file);     }      $.ajax({       url: 'upload.php',       type: 'POST',       data: files     }); </code></pre>  <p>the received data will be in list form on the server side, so remember to alter the code to look for a list.</p>  <p>You may have to play around with other paramaters in the POST, like contentType and dataType or processData, but I think the above is sufficient to get a result</p>"
56922823	Why does javascript fetch() return 403 meanwhile python-requests returns 200?	javascript|python|amazon-s3|python-requests|fetch	2019-07-07 14:01:44.780000 UTC	"<p>Using S3's generated pre-signed URL, python is able to make the request fine, however, javascript fetch and XMLHttpRequest returns 403 forbidden error whenever data is specified in the body. They are both invoked locally.</p>  <p>Relevant medium articles, fetch documentation, XMLHttpRequest documentation, requests documentation.</p>  <p>python-requests:</p>  <pre><code>req = requests.put(url, data='placeholder') </code></pre>  <p>JavaScript:</p>  <pre><code>fetch(url, {     method: 'PUT',     body: 'placeholder' } </code></pre>  <p>JavaScript returns 200 when the body is not specified, however, returns 403 when the body is specified. Python returns status 200 with or without the data parameter.</p>"	57023942	"<p>Essentially the problem was that Javascript fetch auto-generated the header 'Content-Type'. The API Gateway/Lambda that presigned this URL does not expect a 'Content-Type' header, thus JavaScript was erroring out while Python wasn't. I solved it by specifying a Content-Type that was permissible by the Lambda and hard-coded it on the JavaScript side.</p>"
56929521	How to connect python script as a server with python and javascript apps as client?	javascript|python|architecture	2019-07-08 06:39:04.843000 UTC	"<p>The task is to connect next entities somehow:</p>  <ul> <li>Python scripts on Ubuntu (server) - doing something on schedule and by calling</li> <li>Python script on Windows (client) - simply send command to server and recieve ""answer""</li> <li>Android js-built app (cordova) - same purpose as windows-client</li> <li>Database - stores all commands from clients and answers from server</li> </ul>  <p>I'm thinking in way of something what will trigger any database changing </p>  <blockquote>   <p>(client->db, db->server-server->db, db->client)</p> </blockquote>  <p>but I don't know is it real and is it right solution. Maybe here is another and more straightforward way</p>"	56952889	"<p>There are a number of easy to use and well documented Python frameworks for setting up web applications (which I would venture, is going to be the easiest way to achieve what you are trying to do)</p>  <p>Flask -<a href=""http://flask.pocoo.org/"" rel=""nofollow noreferrer"">http://flask.pocoo.org/</a> has extensive documentation, a large user base and not at all intimidating new users, while powerful enough to build most kinds of web-based things on. You can use Flask to expose functionality on your server via standard HTTP requests, which will make accessing them from your windows and android clients trivial.</p>  <p>Flask also plays very nicely with sqlalchemy, so getting a database behind your application should be relatively easy.</p>"
56940396	"python 2 web server local host error. The server responded with a non-JavaScript MIME type of ""text/plain"""	python|content-type|simplehttpserver	2019-07-08 18:05:44.577000 UTC	"<p>(First time) I used <code>python -m SimpleHTTPServer 8000</code> using python 2.7.15 to generate a web server for my simple JavaScript game (still learning), but it seems that it has some error, which makes the canvas of my HTML file wont show.</p>  <p>The JavaScript works totally fine in my GitHub page, but it won't show in local web server. <a href=""https://jcloh98.github.io/jsgame/simplegame2.html"" rel=""nofollow noreferrer"">https://jcloh98.github.io/jsgame/simplegame2.html</a></p>  <p>All the codes are exactly the same as the website. That's all the code I used. </p>  <p>This is the error showed in the console log.</p>  <blockquote>   <p>Failed to load module script: The server responded with a non-JavaScript MIME type of ""text/plain"". Strict MIME type checking is enforced for module scripts per HTML spec.</p> </blockquote>  <p><a href=""https://jcloh98.github.io/jsgame/simplegame2.html"" rel=""nofollow noreferrer"">https://jcloh98.github.io/jsgame/simplegame2.html</a></p>  <p>It is expected to show a black canvas with a aqua paddle at the bottom of the canvas, like <a href=""https://jcloh98.github.io/jsgame/simplegame2.html"" rel=""nofollow noreferrer"">https://jcloh98.github.io/jsgame/simplegame2.html</a></p>"	56942022	"<p>Instead of using <code>python -m SimpleHTTPServer 8000</code>, create a .py file named ""localhost.py"" and run the .py file in the same directory of the webpage.</p>  <p>localhost.py force the file with extension "".js"" has ""application/javascript"" as the content type.</p>  <p><strong>localhost.py</strong></p>  <pre><code>#Use to create local host import SimpleHTTPServer import SocketServer  PORT = 8000  Handler = SimpleHTTPServer.SimpleHTTPRequestHandler Handler.extensions_map.update({     "".js"": ""application/javascript"", });  httpd = SocketServer.TCPServer(("""", PORT), Handler)  print ""Serving at port"", PORT print(Handler.extensions_map["".js""]) httpd.serve_forever() </code></pre>  <p>Thanks Bergi for helping me to solve this problem out.</p>"
56981252	JavaScript fetch encodes emojis differently from Python Requests	javascript|python|http|unicode|python-requests	2019-07-11 03:29:53.590000 UTC	"<p>I'm trying to change my Wi-Fi SSID to be an emoji, but the web UI doesn't allow it. Instead, I capture a valid PUT request to the router's API, copy it as a <code>fetch</code> call using Chrome's Dev Tools, change the SSID to an emoji, and replay the request. It works great.</p>  <p>However, when I try to do it using Python Requests, it escapes the emoji (<code></code>) to the corresponding JavaScript escapes: <code>\uD83E\uDD20</code>. When this gets sent along to the router, it somehow gets translated to <code>&gt;</code> (a greater than sign followed by a space). This is frustrating because I'd assume that both methods would encode the emoji the same way.</p>  <p>Since it works with JavaScript's <code>fetch</code>, there must be some difference in the way the message or the emoji is being encoded.</p>  <p><strong>Fetch Call:</strong> (emoji just shows up as the emoji, even when inspecting the request with Dev Tools) (edited for brevity)</p>  <pre class=""lang-js prettyprint-override""><code>fetch(""https://192.168.1.1/api/wireless"", {     ""credentials"": ""omit"",     ""headers"": {         ""accept"": ""application/json, text/plain, */*"",         ""content-type"": ""application/json;charset=UTF-8"",         ""x-xsrf-token"": ""[The token for this login session]""     },     ""referrer"": ""https://192.168.1.1/"",     ""referrerPolicy"": ""no-referrer-when-downgrade"",     ""body"": ""{         \""wifi\"": [{             \""boring key 1\"": \""boring value\"",             \""boring key 2\"": \""boring value\"",             \""ssid\"": \""\"",             \""boring key 3\"": \""boring value\"",             \""boring key 4\"": \""boring value\""         }]     }"",     ""method"": ""PUT"",     ""mode"": ""cors"" }); </code></pre>  <p><strong>Requests Call:</strong> (edited for brevity)</p>  <pre class=""lang-py prettyprint-override""><code>res = session.put('https://192.168.1.1/api/wireless',                     verify=False,                     json={                        ""wifi"":[{                            ""boring key 1"":""boring value"",                            ""boring key 2"":""boring value"",                            ""ssid"":"""",                            ""boring key 3"":                            ""boring value"",                            ""boring key 4"":""boring value""                        }]                    }) </code></pre>  <p>So what's the difference in the way they're being encoded? And how can I see what fetch's actual output is? (Dev Tools just shows an emoji, no escape sequences.)</p>"	56981401	"<p>The default JSON handling done by the <code>json</code> argument in <code>requests</code> library will essentially have <code>ensure_ascii</code> be True, such that this type of encoded form be provided.  Essentially, that <code>put</code> call will be sent to the server as:</p> <pre class=""lang-none prettyprint-override""><code>PUT / HTTP/1.1 Host: 192.168.1.1 User-Agent: python-requests/2.21.0 Accept-Encoding: gzip, deflate Accept: */* Connection: keep-alive Content-Length: 24 Content-Type: application/json  {&quot;demo&quot;: &quot;\ud83e\udd20&quot;} </code></pre> <p>Which is not what you want.  In order to do what you want, you will have to manually encode the JSON and provided the headers explicitly, like so:</p> <pre class=""lang-py prettyprint-override""><code>requests.put(     'https://192.168.1.1',     data=json.dumps({&quot;demo&quot;: &quot;&quot;}, ensure_ascii=False).encode('utf8'),     headers={'Content-Type': 'application/json'}, ) </code></pre>"
56997934	Implement JavaScript Int32Array array in Python	javascript|python	2019-07-11 22:12:26.337000 UTC	"<p>I'm trying to implement something like <code>Int32Array</code> in Python. I currently have two problems:</p>  <ul> <li>Convert big numbres to int32</li> <li>Take into account little or big encoding</li> </ul>  <p>Using Chrome console, I got the following results:</p>  <pre><code>var int32 = new Int32Array(2); int32[0] = 12345678901234567890 Int32Array(2):     [-350287872, 0]  var int16 = new Int16Array(2); int16[0] = 12345678901234567890 Int16Array(2):    [2048, 0] int16[1] = 12345678901234567890 Int16Array(2):    [2048, 2048] </code></pre>  <p>When I try to convert an big integer using <code>to_bytes(4)</code> function, I got an error:</p>  <pre><code>&gt;&gt;&gt; (12345678901234567890).to_bytes(4) AttributeError: 'long' object has no attribute 'to_bytes' </code></pre>  <p>Any ideas?</p>"	73424038	"<p>convert int32 to bytes</p> <pre class=""lang-py prettyprint-override""><code>offset_int =6422915 offset_bytes = offset_int.to_bytes(4, 'little') print(offset_bytes) #return b'\x83\x01b\x00' </code></pre> <p>convert bytes to int32</p> <pre class=""lang-py prettyprint-override""><code># declaring byte value byte_val = b'\x83\x01b\x00'  # converting to int # byteorder is big where MSB is at start int_val = int.from_bytes(byte_val, &quot;little&quot;) print(int_val) # return 6422915 </code></pre> <p>if you want Int16 to bytes</p> <pre><code>offset_int =65535 offset_bytes = offset_int.to_bytes(2, 'little') print(offset_bytes) #return b'\xff\xff' </code></pre>"
57003235	Can anyone translate this function from python to javascript?	javascript|python-2.7|authentication|sha256	2019-07-12 08:37:56.953000 UTC	"<p>I have a script in python that takes a salt and returns proof using sha256.</p>  <p>I do not know very much about javascript, or about any of the libraries. </p>  <pre><code>import sys from hashlib import sha256  def generate_proof(salt):     secret_salt =  SECRET + salt     hexadecimal = secret_salt.decode('hex')     proof = sha256(hexadecimal).hexdigest()     return proof </code></pre>  <p>Could someone please translate or explain how I can translate this method into javascript?</p>  <p>I think my biggest problem is finding the sha256 equivalent library in JS.</p>"	57003501	"<pre><code>//  node.js const filename = process.argv[2]; const crypto = require('crypto'); const fs = require('fs');  const hash = crypto.createHash('sha256');  const input = fs.createReadStream(filename); input.on('readable', () =&gt; {   // Only one element is going to be produced by the   // hash stream.   const data = input.read();   if (data)     hash.update(data);   else {     console.log(`${hash.digest('hex')} ${filename}`);   } }); </code></pre>"
57011598	How do I Create a JavaScript API That I Can Call From Python?	javascript|java|python|node.js|api	2019-07-12 17:28:17.763000 UTC	"<p>I wrote a program (more of a website currently) in JavaScript using Node.js. You can find it here: <a href=""https://github.com/bhofff/Wikipedia-Image-Data-Tool"" rel=""nofollow noreferrer"">https://github.com/bhofff/Wikipedia-Image-Data-Tool</a></p>  <p>I'm a little confused on a couple things pertaining to JavaScript and also would like to know how to run a function containing a JavaScript API from a python file. </p>  <h2>First some background.</h2>  <p>The purpose of the program is to use the Wikipedia API to download all the images on a specific page, their respective descriptions and then the main body page. It creates a new file for each page on my desktop, named after the page, and all the files go in there. </p>  <p>As of now the Wiki.js file that handles getting all the data from Wikipedia is run on a server from and index.ejs (which is like and html). Node runs the app.js which starts the server. You go to <a href=""http://localhost:3000/wiki"" rel=""nofollow noreferrer"">http://localhost:3000/wiki</a> and type in the name of the Wikipedia page you want and it sends that to Wiki.js which collects image URLs and text strings and sends them to wikiController.js which is not hosted on the server and handles creating the folder with the page name and downloading the image and text files to it.</p>  <h2>My Questions.</h2>  <ol> <li><p>My First question is whether the Wiki.js has to be hosted on a server. I believe it does but just curious.</p></li> <li><p>Assuming it does and I host it on a server what do I need so that a python script can call it from my computer (sending the page name) and receive the data back? Basically I want to wrap Wiki.js in an API that can be called by a python script. </p></li> <li><p>Next I want to not use Node.js for downloading anything. This question is the most confusing for me because, even though I wrote all the code for wikiController.js, I don't actually know where it operates, on the client or the server? My understanding is that:</p>  <p>I) Node runs app.js,</p>  <p>II) Then inside app.js I do:</p></li> </ol>  <pre><code>    var express = require('express');     var wikiController = require('./controllers/WikiController');     var app = express();     wikiController(app); </code></pre>  <p>which runs wikiController.js and send some kind of var/object (app) so that it can be used in wikiController.js??</p>  <p>III) Then we start hosting the server:</p>  <pre><code>    app.listen(3000, function() {         console.log('we be listening to da port of 3000');     }); </code></pre>  <p>But ""wikiController(app);"" happens first, so is wikiController.js just editing the ""app"" object/whatever-it-is so that on the next line when the server starts it knows what the html(ejs) for the pare is and what to do for all the requests?</p>  <p>This ties back to my first question because I thought ""Java creates applications that run in a virtual machine or browser while JavaScript code is run on a browser only."" Is node what is allowing me to run the JavaScript on my computer? I am very confused.</p>  <ol start=""4""> <li><p>An API will work if I host it on GitHub right? feels like a stupid question but I just want to be sure.</p></li> <li><p>can I use a .py or a .java to run app.js and localhost the server (assuming I already re codded app.js to not use Node)?</p></li> </ol>  <pre><code>    //example 1     $.ajax({         type: 'POST',         url: '/wiki/' + 'descriptions',         data: tempDes,         success: function(sendData) {         }     });     //example 2     $.ajax({         type: 'POST',         url: '/wiki/' + foldername,         data: foldername,         success: function(folderData) {         }     }); </code></pre>  <h2>How I want it to work.</h2>  <p>1) I host the server probably from GitHub.</p>  <p>2) thing1.py calls thing2(python or java or JavaScript I don't care) and sends two strings to thing2 ('Title of page', 'File directory location').</p>  <p>3) thing2 send the 'Title of page' to the server/API on GitHub</p>  <p>4) GitHub server which will do everything it already does in Wiki.js but instead of the second POST request it does in each function (e.g. lines 145-151, 159-166 <em>also shown above</em>) it sends the data (images and text strings), in the ""success:"" field of the API, back to thing2 which downloads it.</p>  <p>Thank you so much for any help in advance!</p>"	57012090	"<p>Okay, so let's take this bit by bit, roughly in the order that you asked, but deviating in some places.</p>  <p>There are quite a few issues here. The first and most important of these is that you don't really understand what Node.js is or what it does. As you suggested, Node.js is a server-side implementation of JavaScript-- in other words, it allows you to run JavaScript on a server, completely separate from your web browser (in this case, the server is <code>localhost</code>). I would really recommend going back to learn the basics about the framework you're using before attempting to implement something like this.</p>  <p>If <code>Wiki.js</code> is interacting with your Node.js server, yes, you'll want that on the server. Since I don't know the details of what <code>Wiki.js</code> contains, it's hard to be more specific than that. Again, going back to the basics of Node.js would probably be helpful here.</p>  <p><code>wikiController</code> runs on your server, as evidenced by the fact that you're calling it in <code>app.js</code>, which <em>is</em> your server. Calling <code>wikiController(app);</code> does ""edit"" the <code>app</code> object, presumably extending its functionality once you start listening for connections. </p>  <p>GitHub isn't a server host. GitHub pages are static HTML, so you can't run an API on them. I would recommend you take a look at <a href=""https://glitch.com/"" rel=""nofollow noreferrer"">Glitch</a>, which will allow you to host a Node.js server to test your API. It's free with some limitations, but they probably won't affect you while you're testing. It also integrates with GitHub so you can commit your changes to your GitHub repository and have them automatically updated on your web server.</p>  <p>In order to ""use a .py or a .java to run app.js"", you would need to make a web request in either Python or Java directed at <code>localhost</code> if you're running your Node.js app locally, or at your public web URL should you choose to host it on the web.</p>  <p>As I see it , most of the issues you're experiencing here are due to a lack of foundational knowledge of Node.js, JavaScript, and APIs in general. This isn't a bad thing, but I'd recommend looking for an in-depth course or guide on creating a simple server, then going from there.</p>"
57013439	Parsing date string form javascript to python	javascript|python|date|datetime	2019-07-12 20:04:35.273000 UTC	"<p>I have a javascript date object, which i turn into a string, and send to my backend to parse using python.</p>  <p>here is an example of the javascript date string <code>'Mon Aug 18 2014 21:11:54 GMT+0200 (Centraleuropæisk sommertid)</code></p>  <p>I have made a python helper function to help parse the date. </p>  <pre><code>def datetime_converter(datetime_str):     return datetime.strptime(datetime_str, ""%a, %d %b %Y %H:%M:%S %Z"") </code></pre>  <p>this should correctly parse the date according to <a href=""https://stackoverflow.com/questions/8153631/js-date-object-to-python-datetime"">this answer</a> </p>  <p>i think the problem is that there is an extra text attached to the end (It's danish since I'm from Denmark) <code>(Centraleuropæisk sommertid)</code></p>  <p>does anybody know a workaround for this? i could split the string for a <code>(</code> but that does not seem like a good solution.</p>  <p>Here is the exception i get <code>data 'Mon Aug 18 2014 21:11:54 GMT+0200 (Centraleuropæisk sommertid)' does not match format '%a, %d %b %Y %H:%M:%S %Z'</code></p>"	57013564	<p>This should work for your case:</p>  <pre><code>from email import utils utils.parsedate_to_datetime('Mon Aug 18 2014 21:11:54 GMT+0200 (Centraleuropæisk sommertid)') </code></pre>  <p>You can convert in the format you want hereon.</p>
57013439	Parsing date string form javascript to python	javascript|python|date|datetime	2019-07-12 20:04:35.273000 UTC	"<p>I have a javascript date object, which i turn into a string, and send to my backend to parse using python.</p>  <p>here is an example of the javascript date string <code>'Mon Aug 18 2014 21:11:54 GMT+0200 (Centraleuropæisk sommertid)</code></p>  <p>I have made a python helper function to help parse the date. </p>  <pre><code>def datetime_converter(datetime_str):     return datetime.strptime(datetime_str, ""%a, %d %b %Y %H:%M:%S %Z"") </code></pre>  <p>this should correctly parse the date according to <a href=""https://stackoverflow.com/questions/8153631/js-date-object-to-python-datetime"">this answer</a> </p>  <p>i think the problem is that there is an extra text attached to the end (It's danish since I'm from Denmark) <code>(Centraleuropæisk sommertid)</code></p>  <p>does anybody know a workaround for this? i could split the string for a <code>(</code> but that does not seem like a good solution.</p>  <p>Here is the exception i get <code>data 'Mon Aug 18 2014 21:11:54 GMT+0200 (Centraleuropæisk sommertid)' does not match format '%a, %d %b %Y %H:%M:%S %Z'</code></p>"	57013605	"<p>So I would suggest using the javascript Date <code>.toISOString()</code> method (<a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString"" rel=""nofollow noreferrer"">MDN Docs</a>) instead, which gives you an <a href=""https://en.wikipedia.org/wiki/ISO_8601"" rel=""nofollow noreferrer"">ISO8601</a>-formatted date-string (<code>YYYY-MM-DDTHH:MM:SSZ</code>), and then you could simply change the parser function accordingly:</p>  <pre class=""lang-py prettyprint-override""><code>def datetime_converter(datetime_str: str) -&gt; datetime:     return datetime.strptime(datetime_str, ""%Y-%m-%dT%H:%M:%S%z"") </code></pre>  <p>Since python 3.6, you are also able type-annotate your python code, following the <a href=""https://www.python.org/dev/peps/pep-0526/"" rel=""nofollow noreferrer"">PEP-528</a> standard</p>"
57016572	Downloading JavaScript-loaded audio using Selenium and Python	javascript|python|selenium|selenium-webdriver|web-scraping	2019-07-13 05:57:26.547000 UTC	"<p>I'm trying to write a script to automate the downloading of the text and audio files from a website, using Python and Selenium.</p>  <p>The website: <a href=""https://learn.dict.naver.com/conversation#/korean-en/20190713"" rel=""nofollow noreferrer"">https://learn.dict.naver.com/conversation#/korean-en/20190713</a> (yyyymmdd)</p>  <pre><code>import requests from time import sleep from selenium import webdriver from selenium.webdriver.firefox.options import Options  url = 'https://learn.dict.naver.com/conversation#/korean-en/20190713'  options = Options() options.headless = True  driver = webdriver.Firefox(options=options, executable_path = 'geckodriver') driver.get(url) sleep(3) driver.find_element_by_class_name('btn_listen').click() #for the first one </code></pre>  <p>The audio plays/loads on click, but I don't know how to ""capture"" the file as it loads and download it.</p>  <p>For example, the first play button loads this URL: <a href=""https://dict-dn.pstatic.net/v?_lsu_sa_=3348a15dcd343766a69b01513e9444f36d1462055f0edfbd60a21c73bbe96741685d375f6b45b579a9df6f95d82950485fa22dddfc987cc04ba7a344d3daaff10b8f5ed218b169623e2b926412981ebffcd2ee2a025bbfea806ec1ee58c519fab30368be2e72c258347eb029646cd69ca0c931d102f1fcdef76df1a85dc49c52df2a6431603057d8f62c0c613ec86b1c"" rel=""nofollow noreferrer"">https://dict-dn.pstatic.net/v?_lsu_sa_=3348a15dcd343766a69b01513e9444f36d1462055f0edfbd60a21c73bbe96741685d375f6b45b579a9df6f95d82950485fa22dddfc987cc04ba7a344d3daaff10b8f5ed218b169623e2b926412981ebffcd2ee2a025bbfea806ec1ee58c519fab30368be2e72c258347eb029646cd69ca0c931d102f1fcdef76df1a85dc49c52df2a6431603057d8f62c0c613ec86b1c</a></p>  <p>Copying that into the browser, an audio file loads that can be downloaded manually. I want to download it automatically (bonus points for being able to rename it dynamically).</p>  <p>I've already tried a few options.set_preference()s, but they seem to primarily relate to a file which is meant to download (i.e. a ""Click here to download"" button), not simply play.</p>  <p>Thanks!</p>"	57017701	"<p>You can use <a href=""/questions/tagged/requests"" class=""post-tag"" title=""show questions tagged &#39;requests&#39;"" rel=""tag"">requests</a> to download mp3 files and get other useful information about sentences in text format on the page.<br> Below code is example for the <a href=""https://learn.dict.naver.com/conversation#/korean-en/20190713"" rel=""nofollow noreferrer"">https://learn.dict.naver.com/conversation#/korean-en/20190713</a>. Use json in <code>data</code> variable to see information you can use. </p>  <pre><code>import requests import json  callback = 'angular.callbacks._0'  headers = {     'Referer': 'https://learn.dict.naver.com/conversation',     'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_5) AppleWebKit/537.36 (KHTML, like Gecko) '                   'Chrome/75.0.3770.100 Safari/537.36',     'DNT': '1', } params = (     ('callback', callback), )  with requests.Session() as session:     response = session.get('https://gateway.dict.naver.com/krdict/kr/koen/today/20190713/conversation.dict',                            headers=headers, params=params)      data = json.loads(response.text.lstrip(f""{callback}("").rstrip("")""))[""data""]     sentences = data[""sentences""]      for sentence in sentences:         audio_id = sentence[""id""]         sentence_pron_file = sentence[""sentence_pron_file""]          response = requests.post(f'https://learn.dict.naver.com/dictPronunciation.dict?filePaths={sentence_pron_file}')         audio_url = response.json()[""url""][0]         audio_file = session.get(audio_url)          with open(f'./{audio_id}.mp3', 'wb') as f:             f.write(audio_file.content) </code></pre>"
57022726	How to click href javascript:void(0) and hidefocus=true with selenium python?	python|selenium|xpath|css-selectors|webdriverwait	2019-07-13 20:49:17.720000 UTC	"<p>How to click the href? <a href=""https://i.stack.imgur.com/CCLHp.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/CCLHp.png"" alt=""""></a> I've tried </p>  <pre><code>driver.find_element_by_xpath(""/div/a[@id='switcher_plogin']"") </code></pre>  <p>I got an error like this:<a href=""https://i.stack.imgur.com/bkARW.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/bkARW.png"" alt=""enter image description here""></a> I'd appreciate any help. Thanks.</p>"	57022991	"<p>To click on the link Use <code>WebDriverWait</code> and <code>element_to_be_clickable</code> along with following option.</p>  <p><strong>Xpath</strong>:</p>  <pre><code>WebDriverWait(driver, 20).until(EC.element_to_be_clickable((By.XPATH,""//div[@id='bottom_qlogin']/a[@id='switcher_plogin']""))).click() </code></pre>  <p><strong>CSS Selector</strong>:</p>  <pre><code>WebDriverWait(driver, 20).until(EC.element_to_be_clickable((By.CSS_SELECTOR,""#bottom_qlogin #switcher_plogin""))).click() </code></pre>  <p>You need to imports following to execute above code.</p>  <pre><code>from selenium.webdriver.common.by import By from selenium.webdriver.support.ui import WebDriverWait from selenium.webdriver.support import expected_conditions as EC </code></pre>"
57022726	How to click href javascript:void(0) and hidefocus=true with selenium python?	python|selenium|xpath|css-selectors|webdriverwait	2019-07-13 20:49:17.720000 UTC	"<p>How to click the href? <a href=""https://i.stack.imgur.com/CCLHp.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/CCLHp.png"" alt=""""></a> I've tried </p>  <pre><code>driver.find_element_by_xpath(""/div/a[@id='switcher_plogin']"") </code></pre>  <p>I got an error like this:<a href=""https://i.stack.imgur.com/bkARW.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/bkARW.png"" alt=""enter image description here""></a> I'd appreciate any help. Thanks.</p>"	57026148	"<ol> <li>Make sure that the link doesn't belong to <a href=""https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe"" rel=""nofollow noreferrer"">iframe</a>, otherwise you will have to call <a href=""https://selenium-python.readthedocs.io/api.html#selenium.webdriver.remote.webdriver.WebDriver.switch_to_frame"" rel=""nofollow noreferrer"">WebDriver.switch_to_frame</a> function first in order to change the context to the iframe where the link lives</li> <li>Make sure that the link doesn't belong to <a href=""https://developer.mozilla.org/en-US/docs/Web/Web_Components/Using_shadow_DOM"" rel=""nofollow noreferrer"">Shadow DOM</a> otherwise you will have to locate the relevant <a href=""https://developer.mozilla.org/en-US/docs/Web/API/ShadowRoot"" rel=""nofollow noreferrer"">ShadowRoot</a> element first using <a href=""https://selenium-python.readthedocs.io/api.html#selenium.webdriver.support.event_firing_webdriver.EventFiringWebDriver.execute_script"" rel=""nofollow noreferrer"">execute_script</a> function, cast the result to the WebElement and use WebElement's find() function to locate the link</li> <li>It might be the case the link is not immediately present in <a href=""https://en.wikipedia.org/wiki/Document_Object_Model"" rel=""nofollow noreferrer"">DOM</a> so you might need to introduce <a href=""https://www.seleniumhq.org/docs/04_webdriver_advanced.jsp#explicit-waits"" rel=""nofollow noreferrer"">Explicit Wait</a> </li> <li>If there are no other elements having <a href=""https://www.w3schools.com/tags/att_global_id.asp"" rel=""nofollow noreferrer"">ID attribute</a> of <code>switcher_plogin</code> you might want to reconsider the <a href=""https://w3c.github.io/webdriver/#locator-strategies"" rel=""nofollow noreferrer"">locator strategy</a> and stick to the ID instead of XPath. </li> </ol>  <p>Suggested code change:</p>  <p>replace this:</p>  <pre><code>driver.find_element_by_xpath(""/div/a[@id='switcher_plogin']"") </code></pre>  <p>with this:</p>  <pre><code>WebDriverWait(driver, 10).until(expected_conditions.presence_of_element_located((By.ID, ""switcher_plogin""))) </code></pre>  <p>References:</p>  <ul> <li><a href=""https://selenium-python.readthedocs.io/waits.html#explicit-waits"" rel=""nofollow noreferrer"">Selenium Python: Explicit Waits</a> </li> <li><a href=""http://How%20to%20use%20Selenium%20to%20test%20web%20applications%20using%20AJAX%20technology"" rel=""nofollow noreferrer"">How to use Selenium to test web applications using AJAX technology</a></li> <li>You might also want to look at <a href=""https://github.com/mgxian/qq_login/blob/master/lol_qq_login.py"" rel=""nofollow noreferrer"">https://github.com/mgxian/qq_login/blob/master/lol_qq_login.py</a></li> </ul>"
57022726	How to click href javascript:void(0) and hidefocus=true with selenium python?	python|selenium|xpath|css-selectors|webdriverwait	2019-07-13 20:49:17.720000 UTC	"<p>How to click the href? <a href=""https://i.stack.imgur.com/CCLHp.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/CCLHp.png"" alt=""""></a> I've tried </p>  <pre><code>driver.find_element_by_xpath(""/div/a[@id='switcher_plogin']"") </code></pre>  <p>I got an error like this:<a href=""https://i.stack.imgur.com/bkARW.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/bkARW.png"" alt=""enter image description here""></a> I'd appreciate any help. Thanks.</p>"	57034705	"<p>The desired element is a <a href=""https://www.javascript.com/"" rel=""nofollow noreferrer"">JavaScript</a> enabled element so to <code>click()</code> on the element you need to induce <em>WebDriverWait</em> for the desired <code>element_to_be_clickable()</code> and you can use either of the following solutions:</p>  <ul> <li><p>Using <code>CSS_SELECTOR</code>:</p>  <pre><code>WebDriverWait(driver, 10).until(EC.element_to_be_clickable((By.CSS_SELECTOR, ""a.link#switcher_plogin""))).click() </code></pre></li> <li><p>Using <code>XPATH</code>:</p>  <pre><code>WebDriverWait(driver, 10).until(EC.element_to_be_clickable((By.XPATH, ""//a[@class='link' and @id='switcher_plogin']""))).click() </code></pre></li> <li><p><strong>Note</strong> : You have to add the following imports :</p>  <pre><code>from selenium.webdriver.support.ui import WebDriverWait from selenium.webdriver.common.by import By from selenium.webdriver.support import expected_conditions as EC </code></pre></li> </ul>  <blockquote>   <p><strong>Note</strong>: You can find a relevant discussion in <a href=""https://stackoverflow.com/questions/47993443/selenium-selenium-common-exceptions-nosuchelementexception-when-using-chrome/47995294#47995294"">Selenium “selenium.common.exceptions.NoSuchElementException” when using Chrome</a></p> </blockquote>"
57046606	Click a button under a data-bind written by JavaScript using Python Webdriver	python|selenium-webdriver	2019-07-15 20:15:09.900000 UTC	"<p>I'm able to login to a website but I couldn't figure it out how to click ""Download as CSV"". I've tried XPATH and CSS Selector. </p>  <p>Here is the picture of the HTML. <a href=""https://i.stack.imgur.com/E96vX.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/E96vX.png"" alt=""enter image description here""></a></p>  <p>The dashboard is combined with many widgets. Don't know if that would impact anything.  <a href=""https://i.stack.imgur.com/verxt.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/verxt.png"" alt=""enter image description here""></a> Please let me know if you need more information. Thank you  : )</p>  <p>Below is code</p>  <pre><code>from selenium import webdriver from selenium.webdriver.common.keys import Keys from selenium.webdriver.common.by import By from selenium.webdriver.support.ui import WebDriverWait from selenium.webdriver.support import expected_conditions as EC from selenium.webdriver.support.select import Select from selenium.webdriver.common.action_chains import ActionChains import time  #### location of chrome  driver = webdriver.Chrome(r'F:\User\Downloads\chromedriver.exe')  #### log in website 1 driver.get('https://www.yardipca.com/39444siteminderlive/')  ### 1st door ( login&amp; password) name_1st = driver.find_element_by_name('USER') name_1st.clear() name_1st.send_keys('my_account')  passowrd_1st = driver.find_element_by_name('PASSWORD') passowrd_1st.clear() passowrd_1st.send_keys('my_password')  ### login botton WebDriverWait(driver, 30).until(EC.element_to_be_clickable((By.XPATH,""/html/body/form/div/center/table[2]/tbody/tr[3]/td[2]/table/tbody/tr[8]/td[2]/input[6]""))).click() WebDriverWait(driver, 30).until(EC.element_to_be_clickable((By.LINK_TEXT,""P260 Live System (SAN/HOC)""))).click() WebDriverWait(driver, 30).until(EC.element_to_be_clickable((By.XPATH, '//*[@id=""acceptButton""]'))).click()  time.sleep(10)     #### log in website 2 driver.get('https://www.yardiasptx11.com/39444p260livehoc/jsp/index.jsp')  ### 2nd door ( login&amp; password) name_2nd = driver.find_element_by_name('userId') name_2nd.send_keys('my_account')  passowrd_2nd = driver.find_element_by_name('password') passowrd_2nd.send_keys('my_password')  ### login botton WebDriverWait(driver, 30).until(EC.element_to_be_clickable((By.XPATH, '//[@id=""standardLoginForm""]/div[3]/button'))).click() time.sleep(5)  ### Dropdown button WebDriverWait(driver, 30).until(EC.element_to_be_clickable((By.XPATH, '//*[@id=""widget_937242""]/div[1]/div[1]'))).click()  # //*[@id=""widget_937242""]/div[1]/div[1] # //*[@id=""widget_937242""]/div[1]/div[1]/a # //*[@id=""widget_937242""]/div[1]/div[1]/a/span  ### download file WebDriverWait(driver, 30).until(EC.element_to_be_clickable((By.CSS_SELECTOR,'#widget_937242 &gt; div.panel-heading.ui-sortable-handle &gt; div.btn-group.pull-right.print-hide.open &gt; ul &gt; li:nth-child(2) &gt; a'))).click()    time.sleep(10) </code></pre>  <p>The error popped up.</p>  <p>File ""f:\User\Downloads\yardi.py"", line 57, in </p>  <p>WebDriverWait(driver, 30).until(EC.element_to_be_clickable((By.XPATH, '//*[@id=""widget_937242""]/div<a href=""https://i.stack.imgur.com/E96vX.png"" rel=""nofollow noreferrer"">1</a>/div<a href=""https://i.stack.imgur.com/E96vX.png"" rel=""nofollow noreferrer"">1</a>'))).click()</p>  <p>File ""F:\Anaconda3\lib\site-packages\selenium\webdriver\support\wait.py"", line 80, in until raise TimeoutException(message, screen, stacktrace) selenium.common.exceptions.TimeoutException: Message:</p>"	57058294	"<p>It looks like the widget is always in the same place, I typically try clicking by using X/Y coordinates with a macro tool like AppRobotic if you're running this on Windows. If it's an issue with the page loading slowly, I usually try stopping the page load, and interacting with the page a bit, something like this should work for you:</p>  <pre><code>import win32com.client from win32com.client import Dispatch x = win32com.client.Dispatch(""AppRobotic.API"") from selenium import webdriver from selenium.webdriver.common.by import By from selenium.webdriver.support.ui import WebDriverWait from selenium.webdriver.support import expected_conditions as EC  driver = webdriver.Chrome('chromedriver.exe') driver.get('https://www.google.com') # wait 20 seconds x.Wait(20000) # scroll down a couple of times in case page javascript is waiting for user interaction x.Type(""{DOWN}"") x.Wait(2000) x.Type(""{DOWN}"") x.Wait(2000) # forcefully stop pageload at this point driver.execute_script(""window.stop();"") # if clicking Download as CSV button with Selenium still does not work here, use screen coordinates x.MoveCursor(xCoord, yCoord) x.MouseLeftClick x.Wait(2000) </code></pre>"
57046606	Click a button under a data-bind written by JavaScript using Python Webdriver	python|selenium-webdriver	2019-07-15 20:15:09.900000 UTC	"<p>I'm able to login to a website but I couldn't figure it out how to click ""Download as CSV"". I've tried XPATH and CSS Selector. </p>  <p>Here is the picture of the HTML. <a href=""https://i.stack.imgur.com/E96vX.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/E96vX.png"" alt=""enter image description here""></a></p>  <p>The dashboard is combined with many widgets. Don't know if that would impact anything.  <a href=""https://i.stack.imgur.com/verxt.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/verxt.png"" alt=""enter image description here""></a> Please let me know if you need more information. Thank you  : )</p>  <p>Below is code</p>  <pre><code>from selenium import webdriver from selenium.webdriver.common.keys import Keys from selenium.webdriver.common.by import By from selenium.webdriver.support.ui import WebDriverWait from selenium.webdriver.support import expected_conditions as EC from selenium.webdriver.support.select import Select from selenium.webdriver.common.action_chains import ActionChains import time  #### location of chrome  driver = webdriver.Chrome(r'F:\User\Downloads\chromedriver.exe')  #### log in website 1 driver.get('https://www.yardipca.com/39444siteminderlive/')  ### 1st door ( login&amp; password) name_1st = driver.find_element_by_name('USER') name_1st.clear() name_1st.send_keys('my_account')  passowrd_1st = driver.find_element_by_name('PASSWORD') passowrd_1st.clear() passowrd_1st.send_keys('my_password')  ### login botton WebDriverWait(driver, 30).until(EC.element_to_be_clickable((By.XPATH,""/html/body/form/div/center/table[2]/tbody/tr[3]/td[2]/table/tbody/tr[8]/td[2]/input[6]""))).click() WebDriverWait(driver, 30).until(EC.element_to_be_clickable((By.LINK_TEXT,""P260 Live System (SAN/HOC)""))).click() WebDriverWait(driver, 30).until(EC.element_to_be_clickable((By.XPATH, '//*[@id=""acceptButton""]'))).click()  time.sleep(10)     #### log in website 2 driver.get('https://www.yardiasptx11.com/39444p260livehoc/jsp/index.jsp')  ### 2nd door ( login&amp; password) name_2nd = driver.find_element_by_name('userId') name_2nd.send_keys('my_account')  passowrd_2nd = driver.find_element_by_name('password') passowrd_2nd.send_keys('my_password')  ### login botton WebDriverWait(driver, 30).until(EC.element_to_be_clickable((By.XPATH, '//[@id=""standardLoginForm""]/div[3]/button'))).click() time.sleep(5)  ### Dropdown button WebDriverWait(driver, 30).until(EC.element_to_be_clickable((By.XPATH, '//*[@id=""widget_937242""]/div[1]/div[1]'))).click()  # //*[@id=""widget_937242""]/div[1]/div[1] # //*[@id=""widget_937242""]/div[1]/div[1]/a # //*[@id=""widget_937242""]/div[1]/div[1]/a/span  ### download file WebDriverWait(driver, 30).until(EC.element_to_be_clickable((By.CSS_SELECTOR,'#widget_937242 &gt; div.panel-heading.ui-sortable-handle &gt; div.btn-group.pull-right.print-hide.open &gt; ul &gt; li:nth-child(2) &gt; a'))).click()    time.sleep(10) </code></pre>  <p>The error popped up.</p>  <p>File ""f:\User\Downloads\yardi.py"", line 57, in </p>  <p>WebDriverWait(driver, 30).until(EC.element_to_be_clickable((By.XPATH, '//*[@id=""widget_937242""]/div<a href=""https://i.stack.imgur.com/E96vX.png"" rel=""nofollow noreferrer"">1</a>/div<a href=""https://i.stack.imgur.com/E96vX.png"" rel=""nofollow noreferrer"">1</a>'))).click()</p>  <p>File ""F:\Anaconda3\lib\site-packages\selenium\webdriver\support\wait.py"", line 80, in until raise TimeoutException(message, screen, stacktrace) selenium.common.exceptions.TimeoutException: Message:</p>"	57081901	<p>It's within the iframe so I switch the iframe that I want o act on.</p>
57064226	What i'm doing wrong when implementing Python code to Javascript?	javascript|python	2019-07-16 19:28:54.040000 UTC	"<p>I have the next <strong>python</strong> code:</p>  <pre><code>letter = ['a', 'b', 'c', 'd'] word = ""Black"" for i in word:     if i in letter:         print(i) </code></pre>  <p>So, I'm trying to do the same in <strong>JS</strong>:</p>  <pre><code>var letter = ['a', 'b', 'c', 'd']; var word = ""Black""; var dictionary = []; var dictionaryCoincidence = [];  for (var i = 0; i &lt; word.length; i++) {     dictionary.push(word[i]); }  for (var i = 0; i &lt; dictionary.length; i++) {     if (dictionary[i] == letter[i]) {         dictionaryCoincidence.push(dictionary[i]);     } }  console.log(dictionary); console.log(dictionaryCoincidence); </code></pre>  <p>But, it doesn't work!</p>"	57064287	"<p>You don't really need second for loop.. Just check the word[i] is in the letter array or not, and you can do it by using ""includes"" or ""indexOf""..</p>  <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-js lang-js prettyprint-override""><code>var letter = ['a', 'b', 'c', 'd'];         var word = ""Black"";         var dictionary = [];         var dictionaryCoincidence = [];             for (var i = 0; i &lt; word.length; i++) {         dictionary.push(word[i]);         if (letter.includes(word[i])) {           dictionaryCoincidence.push(dictionary[i]);         }        }                  console.log(dictionary); console.log(dictionaryCoincidence);</code></pre> </div> </div> </p>"
57064226	What i'm doing wrong when implementing Python code to Javascript?	javascript|python	2019-07-16 19:28:54.040000 UTC	"<p>I have the next <strong>python</strong> code:</p>  <pre><code>letter = ['a', 'b', 'c', 'd'] word = ""Black"" for i in word:     if i in letter:         print(i) </code></pre>  <p>So, I'm trying to do the same in <strong>JS</strong>:</p>  <pre><code>var letter = ['a', 'b', 'c', 'd']; var word = ""Black""; var dictionary = []; var dictionaryCoincidence = [];  for (var i = 0; i &lt; word.length; i++) {     dictionary.push(word[i]); }  for (var i = 0; i &lt; dictionary.length; i++) {     if (dictionary[i] == letter[i]) {         dictionaryCoincidence.push(dictionary[i]);     } }  console.log(dictionary); console.log(dictionaryCoincidence); </code></pre>  <p>But, it doesn't work!</p>"	57064292	"<p>You can use <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/includes"" rel=""nofollow noreferrer"">Array.includes()</a> to check if some element belongs to an array, then use a <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/for...of"" rel=""nofollow noreferrer"">for ... of</a> loop to traverse the string and do something like this:</p>  <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-js lang-js prettyprint-override""><code>const letter = ['a', 'b', 'c', 'd']; const word = ""Black"";  for (const char of word) {     if (letter.includes(char))         console.log(char); }</code></pre> <pre class=""snippet-code-css lang-css prettyprint-override""><code>.as-console {background-color:black !important; color:lime;} .as-console-wrapper {max-height:100% !important; top:0;}</code></pre> </div> </div> </p>"
57064226	What i'm doing wrong when implementing Python code to Javascript?	javascript|python	2019-07-16 19:28:54.040000 UTC	"<p>I have the next <strong>python</strong> code:</p>  <pre><code>letter = ['a', 'b', 'c', 'd'] word = ""Black"" for i in word:     if i in letter:         print(i) </code></pre>  <p>So, I'm trying to do the same in <strong>JS</strong>:</p>  <pre><code>var letter = ['a', 'b', 'c', 'd']; var word = ""Black""; var dictionary = []; var dictionaryCoincidence = [];  for (var i = 0; i &lt; word.length; i++) {     dictionary.push(word[i]); }  for (var i = 0; i &lt; dictionary.length; i++) {     if (dictionary[i] == letter[i]) {         dictionaryCoincidence.push(dictionary[i]);     } }  console.log(dictionary); console.log(dictionaryCoincidence); </code></pre>  <p>But, it doesn't work!</p>"	57064303	"<p>In the spirit of functional python I suggest using <code>filter</code> since it works like the <code>filter</code> in python. The question is on both Python and Javascript so :)</p>  <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-js lang-js prettyprint-override""><code>var letter = ['a', 'b', 'c', 'd']; var word = ""Black""; var filtered = word.split("""").filter(x =&gt; letter.includes(x)) console.log(filtered)</code></pre> </div> </div> </p>"
57064226	What i'm doing wrong when implementing Python code to Javascript?	javascript|python	2019-07-16 19:28:54.040000 UTC	"<p>I have the next <strong>python</strong> code:</p>  <pre><code>letter = ['a', 'b', 'c', 'd'] word = ""Black"" for i in word:     if i in letter:         print(i) </code></pre>  <p>So, I'm trying to do the same in <strong>JS</strong>:</p>  <pre><code>var letter = ['a', 'b', 'c', 'd']; var word = ""Black""; var dictionary = []; var dictionaryCoincidence = [];  for (var i = 0; i &lt; word.length; i++) {     dictionary.push(word[i]); }  for (var i = 0; i &lt; dictionary.length; i++) {     if (dictionary[i] == letter[i]) {         dictionaryCoincidence.push(dictionary[i]);     } }  console.log(dictionary); console.log(dictionaryCoincidence); </code></pre>  <p>But, it doesn't work!</p>"	57064356	"<p>You must use two loop : one loop for dictionary and one loop for letters like this:</p>  <pre><code>    var letter = ['a', 'b', 'c', 'd'];     var word = ""Blackd"";     var dictionary = [];     var dictionaryCoincidence = [];     for (var i = 0; i &lt; word.length; i++) {     dictionary.push(word[i]);    }     for (var i = 0; i &lt; dictionary.length; i++) {        for(var j = 0; j &lt; letter.length ; j++){            if (dictionary[i] == letter[j]) {              dictionaryCoincidence.push(dictionary[i]);            }         }    }     console.log(dictionary);    console.log(dictionaryCoincidence); </code></pre>"
57064226	What i'm doing wrong when implementing Python code to Javascript?	javascript|python	2019-07-16 19:28:54.040000 UTC	"<p>I have the next <strong>python</strong> code:</p>  <pre><code>letter = ['a', 'b', 'c', 'd'] word = ""Black"" for i in word:     if i in letter:         print(i) </code></pre>  <p>So, I'm trying to do the same in <strong>JS</strong>:</p>  <pre><code>var letter = ['a', 'b', 'c', 'd']; var word = ""Black""; var dictionary = []; var dictionaryCoincidence = [];  for (var i = 0; i &lt; word.length; i++) {     dictionary.push(word[i]); }  for (var i = 0; i &lt; dictionary.length; i++) {     if (dictionary[i] == letter[i]) {         dictionaryCoincidence.push(dictionary[i]);     } }  console.log(dictionary); console.log(dictionaryCoincidence); </code></pre>  <p>But, it doesn't work!</p>"	57064527	"<p>Try changing the second loop to</p>  <pre><code>for (var i = 0; i &lt; dictionary.length; i++) {     if (letter.includes(dictionary[i])) {         dictionaryCoincidence.push(dictionary[i]);     } } </code></pre>  <p>You need to check that the dictionary[i] is in the letter array, and not that it equals to letter[i]</p>  <ol> <li>It gives you the result [a,c] . B is not included, because it’s uppercase. Cast dictionary[i] to lowercase if you need the letter B to.</li> <li>You can use letter.indexOf method instead of includes(). So condition letter.indexOf(dictionary[i])>-1 also works</li> </ol>"
57066785	How do I get JavaScript and Python to communicate continuously via Flask?	javascript|python|flask|frontend|backend	2019-07-16 23:46:01.917000 UTC	"<p>I am very new to JavaScript, Python, and web development, but I am trying to create a webpage that takes in data whenever a key is pressed and sends it to a python back end for processing. The Python back end will then send information back to the JavaScript page, and the JavaScript page will respond to it. This process needs to happen continuously, or until it is terminated by a certain response from the Python portion. I already have a script written that gathers all of the data I need on the Javascript end, and I have a Python application that processes it (it needs a little editing to take in one array at a time, but that is not the question). Currently, my trouble has centered around getting them to communicate. I am using Flask as this is in the early stages of development, and I've read it makes for an easy and efficient tool.</p>  <p>I started by trying to follow tutorials on how to get the thing up and running, without too much success. All of the tutorials I've found online are centered around an example, leaving me rather confused about the general. The code I am showing below is what I have to work with from one of the tutorials. I know that render_template opens up the file given (in this case index.html). My first question is: would I put the JavaScript portion as a script within that index file? I've read that logic should generally be kept out of the templates, but I'm not sure how else I'd run this script- it is supposed to run continually underneath what the user is doing on the website. Some other tutorials have indicated that perhaps the answer is to use multiple @app.route statements, but I am not even certain what @app.route is doing exactly. I know it is a decorator, but for what function and what it is changing it to eludes me even after basic research. What does @app.route do? Another tutorial I followed gave me something like what is shown below, but I'm a little confused as to what each @app.route is doing. I'm also not sure what request.get_json() is. From what I have read, JSON is a way of describing data by its attributes rather than including all of the data itself, but I'm not sure what request does (I know it was imported from flask). </p>  <p>From here, the JavaScript needs to have a post function, right? I am assuming that Python would ""get"" what JavaScript ""posted"", but the second tutorial's code seems to indicate otherwise (as the function that requests the data (I assume) via request.get_json() is also listed as methods = ['POST']). I am also assuming that I am able to run a 'POST' request on the front-end as part of a function that responds to an Event Listener (on keypress). After Python gets what JavaScript posted Python would post a response and JavaScript would get that and respond to it in kind. I am assuming that is how that all works.</p>  <p>Finally, does someone have an explanation or resource on how JavaScript posts or gets requests? I have some resources I can try, but I haven't had much time to fully explore them yet. I have included in the code section what I have tried so far. </p>  <p>In summary, I feel a bit overwhelmed as I rush into the world of front-end and back-end development. I feel as if I understand the overarching ideas behind it, but many of the specifics have been very confusing to me. Let me know if there's anything I need to know that I have no clue about yet- thank you for the help, I'm sorry this isn't as specific as it could be.  </p>  <pre><code>// Tutorial Python code import os from flask import Flask, render_template  app = Flask(__name__)  @app.route(""/"") def index():     return render_template(""index.html"", message = ""Hello Flask!"", contacts = ['c1', 'c2', 'c3', 'c4', 'c5']);   if __name__ == ""__main__"":     app.run()  // Corresponding Tutorial HTML &lt;!DOCTYPE html&gt; &lt;html&gt;   &lt;head&gt;     &lt;title&gt;Flask Template Example&lt;/title&gt;   &lt;/head&gt;    &lt;body&gt;     &lt;div&gt;       &lt;p&gt;{{ message }}&lt;/p&gt;        &lt;p&gt;{{ contacts }}&lt;/p&gt;       &lt;p&gt;My Contacts:&lt;/p&gt;       &lt;ul&gt;         {% for contact in contacts %}         &lt;li&gt;{{ contact }}&lt;/li&gt;         {% endfor %}       &lt;/ul&gt;     &lt;/div&gt;   &lt;/body&gt;  &lt;/html&gt;  // Second tutorial Python, two @app.route  import sys  from flask import Flask, render_template, request, redirect, Response import random, json  app = Flask(__name__)  @app.route('/') def output():   return render_template('index.html', name='Joe')  @app.route('/reciever', methods = ['POST']) def worker():   data = request.get_json()   result = ''    for item in data:     result += str(item['make']) + '\n'    return result  if __name__ == ""__main__"":   app.run()  // JavaScript communication first attempt (I was sending them to the second tutorial's Python code)  var sentArray = {""array"" : [key, start, finish, holdtime, ud, uu, dd, 1]}; $.post(""reciever"",sentArray,function(){ });     event.preventDefault();  // JavaScript communication second attempt  var sentArray = {""array"" : [key, start, finish, holdtime, ud, uu, dd, 1]}; fetch('/typing', {   method: 'POST',    headers: {     'Content-Type': 'application/json'   }    body:       {""array"" : [key, start, finish, holdtime, ud, uu, dd, 1]} } }); event.preventDefault(); </code></pre>  <p>Currently, I receive a 500 error, indicating I'm not handling something properly. I'm not sure what, frankly there are hundreds of ways I could be doing this wrong. Thanks for the help!</p>"	57068050	"<p>try using ajax, it allows you to send post or get requests in the background, I learned ajax with this: <a href=""https://www.youtube.com/watch?v=zJdQxS3ZpNI"" rel=""nofollow noreferrer"">vid</a></p>"
57067923	Returned python values break html table after inserting in javascript array	javascript|python|flask	2019-07-17 02:55:07.650000 UTC	"<p>I am trying to display values returned from a backend python function into an html table by interfacing the python function with XMLHttpRequest(). 1) The table works with javascript array without the python function returned value. 2) The python function call works when the javascript variable is passed to an element id in the html body. 3) It breaks the table when the python returned value is passed to a javascript array to display in the table. Thank you.</p>  <p>module</p>  <pre class=""lang-py prettyprint-override""><code>    class GetName:         ...         def get_name():             return ""Johnny Test"" </code></pre>  <p>flask server</p>  <pre class=""lang-py prettyprint-override""><code>    ...     @app.route('/record_status', methods=['POST'])     def get_value():         json = request.get_json()         status = json['status']         if status == ""true"":             res = GetName.get_name()             return jsonify(result=res) </code></pre>  <pre class=""lang-js prettyprint-override""><code>    var myJSON;     // When the user clicks the button, open the modal      btn.onclick = function() {       modal.style.display = ""block"";      // XMLHttpRequest       var xhr = new XMLHttpRequest();       xhr.onreadystatechange = function() {       if (xhr.readyState == 4 &amp;&amp; xhr.status == 200) {             //var myObj = JSON.parse(this.responseText);             var myObj = JSON.parse(xhr.responseText);              myJSON = JSON.stringify(myObj);             document.getElementById(""demo"").innerHTML = myJSON;           // alert(xhr.responseText);           }       };       xhr.open(""POST"", ""/record_status"");       xhr.setRequestHeader(""Content-Type"",     ""application/json;charset=UTF-8"");       xhr.send(JSON.stringify({ status: ""true"" }));        //function GenerateTable() {                 //Build an array containing Customer records.       var customers = new Array();       customers.push([""Customer Id"", ""Name"", ""Country""]);       customers.push([1, 'John smith', ""United States""]);       customers.push([2, ""Anita Ross"", ""Canada""]);       customers.push([3, myJSON, ""Mexico""]); </code></pre>  <p>condition 1) and 2) in working order. The table breaks once the var myJSON is inserted in the array</p>"	57068021	"<p>there is a much easier way to go about doing this, you could use ajax from jquery. if you need help figuring it out just reply back or try watching this vid: its how I learned <a href=""https://www.youtube.com/watch?v=zJdQxS3ZpNI"" rel=""nofollow noreferrer"">Click here for vid</a></p>"
57067923	Returned python values break html table after inserting in javascript array	javascript|python|flask	2019-07-17 02:55:07.650000 UTC	"<p>I am trying to display values returned from a backend python function into an html table by interfacing the python function with XMLHttpRequest(). 1) The table works with javascript array without the python function returned value. 2) The python function call works when the javascript variable is passed to an element id in the html body. 3) It breaks the table when the python returned value is passed to a javascript array to display in the table. Thank you.</p>  <p>module</p>  <pre class=""lang-py prettyprint-override""><code>    class GetName:         ...         def get_name():             return ""Johnny Test"" </code></pre>  <p>flask server</p>  <pre class=""lang-py prettyprint-override""><code>    ...     @app.route('/record_status', methods=['POST'])     def get_value():         json = request.get_json()         status = json['status']         if status == ""true"":             res = GetName.get_name()             return jsonify(result=res) </code></pre>  <pre class=""lang-js prettyprint-override""><code>    var myJSON;     // When the user clicks the button, open the modal      btn.onclick = function() {       modal.style.display = ""block"";      // XMLHttpRequest       var xhr = new XMLHttpRequest();       xhr.onreadystatechange = function() {       if (xhr.readyState == 4 &amp;&amp; xhr.status == 200) {             //var myObj = JSON.parse(this.responseText);             var myObj = JSON.parse(xhr.responseText);              myJSON = JSON.stringify(myObj);             document.getElementById(""demo"").innerHTML = myJSON;           // alert(xhr.responseText);           }       };       xhr.open(""POST"", ""/record_status"");       xhr.setRequestHeader(""Content-Type"",     ""application/json;charset=UTF-8"");       xhr.send(JSON.stringify({ status: ""true"" }));        //function GenerateTable() {                 //Build an array containing Customer records.       var customers = new Array();       customers.push([""Customer Id"", ""Name"", ""Country""]);       customers.push([1, 'John smith', ""United States""]);       customers.push([2, ""Anita Ross"", ""Canada""]);       customers.push([3, myJSON, ""Mexico""]); </code></pre>  <p>condition 1) and 2) in working order. The table breaks once the var myJSON is inserted in the array</p>"	57068045	"<p>The <code>onreadystatechange</code> is executed after the <code>customers</code> is created. So, your last customer data contains <code>undefined</code>.</p>  <p>Looks like you need to move the <code>customers</code> array creation to the <code>onreadystatechange</code> function.</p>  <pre class=""lang-js prettyprint-override""><code>      xhr.onreadystatechange = function() {           if (xhr.readyState == 4 &amp;&amp; xhr.status == 200) {             //var myObj = JSON.parse(this.responseText);             var myObj = JSON.parse(xhr.responseText);              var myJSON = JSON.stringify(myObj);             document.getElementById(""demo"").innerHTML = myJSON;           // alert(xhr.responseText);              var customers = [];             customers.push([""Customer Id"", ""Name"", ""Country""]);             customers.push([1, 'John smith', ""United States""]);             customers.push([2, ""Anita Ross"", ""Canada""]);             customers.push([3, myJSON, ""Mexico""]);           }       }; </code></pre>"
57067923	Returned python values break html table after inserting in javascript array	javascript|python|flask	2019-07-17 02:55:07.650000 UTC	"<p>I am trying to display values returned from a backend python function into an html table by interfacing the python function with XMLHttpRequest(). 1) The table works with javascript array without the python function returned value. 2) The python function call works when the javascript variable is passed to an element id in the html body. 3) It breaks the table when the python returned value is passed to a javascript array to display in the table. Thank you.</p>  <p>module</p>  <pre class=""lang-py prettyprint-override""><code>    class GetName:         ...         def get_name():             return ""Johnny Test"" </code></pre>  <p>flask server</p>  <pre class=""lang-py prettyprint-override""><code>    ...     @app.route('/record_status', methods=['POST'])     def get_value():         json = request.get_json()         status = json['status']         if status == ""true"":             res = GetName.get_name()             return jsonify(result=res) </code></pre>  <pre class=""lang-js prettyprint-override""><code>    var myJSON;     // When the user clicks the button, open the modal      btn.onclick = function() {       modal.style.display = ""block"";      // XMLHttpRequest       var xhr = new XMLHttpRequest();       xhr.onreadystatechange = function() {       if (xhr.readyState == 4 &amp;&amp; xhr.status == 200) {             //var myObj = JSON.parse(this.responseText);             var myObj = JSON.parse(xhr.responseText);              myJSON = JSON.stringify(myObj);             document.getElementById(""demo"").innerHTML = myJSON;           // alert(xhr.responseText);           }       };       xhr.open(""POST"", ""/record_status"");       xhr.setRequestHeader(""Content-Type"",     ""application/json;charset=UTF-8"");       xhr.send(JSON.stringify({ status: ""true"" }));        //function GenerateTable() {                 //Build an array containing Customer records.       var customers = new Array();       customers.push([""Customer Id"", ""Name"", ""Country""]);       customers.push([1, 'John smith', ""United States""]);       customers.push([2, ""Anita Ross"", ""Canada""]);       customers.push([3, myJSON, ""Mexico""]); </code></pre>  <p>condition 1) and 2) in working order. The table breaks once the var myJSON is inserted in the array</p>"	57119808	"<p>Following Avi Baruch's link and some modifications to suit the project, the html is created with ajax to interface with the python function, the response is jsonified within the python function and assigned to a dictionary key called data, while rendering a response template with a variable name myList. The response template allows to loop over the returned data to be passed unto the modal content in <code>&lt;div id=""dvTable""&gt;&lt;/div&gt;</code>. Hope someone finds this useful, thanks all.</p>  <pre><code>#get_data.py : backend module return values   class GetData:     def __init__(self):         pass      def records(self):         return [(1, 'John Smith', 'Canada'),                 (2, 'Jane Doe', 'United States'),                 (3, 'John Doe', 'Mexico')] </code></pre>  <pre><code>#app.py  from flask import Flask, render_template, jsonify from get_data import GetData app = Flask(__name__)  @app.route('/') def index():     return render_template('index.html')  @app.route('/_get_data/', methods=['POST']) def _get_data():     data = GetData()     myList = data.records()     return jsonify({'data': render_template('response.html', myList=myList)})  if __name__ == ""__main__"":     app.run(debug=True)  </code></pre>  <pre class=""lang-html prettyprint-override""><code>&lt;!--templates/index.html--&gt; &lt;!doctype html&gt; &lt;html lang=""en""&gt;     &lt;head&gt;         &lt;meta charset=""utf-8""&gt;         &lt;style&gt; body {font-family: Arial, Helvetica, sans-serif;}  /* The Modal (background) */ .modal {   display: none; /* Hidden by default */   position: fixed; /* Stay in place */   z-index: 1; /* Sit on top */   padding-top: 100px; /* Location of the box */   left: 0;   top: 0;   width: 100%; /* Full width */   height: 100%; /* Full height */   overflow: auto; /* Enable scroll if needed */   background-color: rgb(0,0,0); /* Fallback color */   background-color: rgba(0,0,0,0.4); /* Black w/ opacity */ }  /* Modal Content */ .modal-content {   background-color: #fefefe;   margin: auto;   padding: 20px;   border: 1px solid #888;   width: 80%; }  /* The Close Button */ .close {   color: #aaaaaa;   float: right;   font-size: 28px;   font-weight: bold; }  .close:hover, .close:focus {   color: #000;   text-decoration: none;   cursor: pointer; } &lt;/style&gt;     &lt;/head&gt;      &lt;body&gt;  &lt;!-- Trigger/Open The Modal --&gt; &lt;button id=""myBtn""&gt;Open Modal&lt;/button&gt;  &lt;!-- The Modal --&gt; &lt;div id=""myModal"" class=""modal""&gt;    &lt;!-- Modal content --&gt;   &lt;div class=""modal-content""&gt;     &lt;span class=""close""&gt;&amp;times;&lt;/span&gt;     &lt;div id=""dvTable""&gt;&lt;/div&gt;   &lt;/div&gt; &lt;/div&gt; &lt;style&gt; table {   font-family: arial, sans-serif;   border-collapse: collapse;   width: 100%; }  td, th {   border: 1px solid #dddddd;   text-align: left;   padding: 8px; }  tr:nth-child(even) {   background-color: #dddddd; } &lt;/style&gt;  &lt;script src=""https://code.jquery.com/jquery-3.4.1.js""   integrity=""sha256-WpOohJOqMqqyKL9FccASB9O0KwACQJpFTUBLTYOVvVU=""   crossorigin=""anonymous""&gt; &lt;/script&gt;  &lt;script&gt; // Get the modal var modal = document.getElementById(""myModal"");  // Get the button that opens the modal var btn = document.getElementById(""myBtn"");  // Get the &lt;span&gt; element that closes the modal var span = document.getElementsByClassName(""close"")[0];   // When the user clicks the button, open the modal  btn.onclick = function() {   modal.style.display = ""block"";   //var Table = document.getElementById(""dvTable"").innerHTML = """";   //prevent duplicates   $(""#dvTable tr"").remove();         //get the data and append to the table        $.ajax({             url: ""/_get_data/"",             type: ""POST"",             success: function(resp){                 $('div#dvTable').append(resp.data);             }         }); }  // When the user clicks on &lt;span&gt; (x), close the modal span.onclick = function() {   modal.style.display = ""none"";  }  // When the user clicks anywhere outside of the modal, close it window.onclick = function(event) {   if (event.target == modal) {     modal.style.display = ""none"";   } } &lt;/script&gt;  &lt;/body&gt; &lt;/html&gt; </code></pre>  <pre><code>&lt;!--templates/response.html: layout template to iterate through the data--&gt;      &lt;table&gt;             &lt;tr&gt;                 &lt;th&gt;Customer ID&lt;/th&gt;                 &lt;th&gt;Name&lt;/th&gt;                 &lt;th&gt;Country&lt;/th&gt;             &lt;/tr&gt;             {% for elem in myList %}             &lt;tr&gt;                 &lt;td&gt;{{elem[0]}}&lt;/td&gt;                 &lt;td&gt;{{elem[1]}}&lt;/td&gt;                 &lt;td&gt;{{elem[2]}}&lt;/td&gt;             &lt;/tr&gt;             {% endfor %}     &lt;/table&gt;    </code></pre>"
57090795	How to scrape specific information from javascript webpage by Selenium Python?	python|selenium-webdriver	2019-07-18 09:02:36.923000 UTC	"<p>I can't scrape the 'Resolution' field from the javascript webpage, as I believe. Webpage address: <a href=""https://support.na.sage.com/selfservice/viewdocument.do?noCount=true&amp;externalId=60390&amp;sliceId=1&amp;noCount=true&amp;isLoadPublishedVer=&amp;docType=kc&amp;docTypeID=DT_Article&amp;stateId=4183&amp;cmd=displayKC&amp;dialogID=197243&amp;ViewedDocsListHelper=com.kanisa.apps.common.BaseViewedDocsListHelperImpl&amp;openedFromSearchResults=true"" rel=""nofollow noreferrer"">https://support.na.sage.com/selfservice/viewdocument.do?noCount=true&amp;externalId=60390&amp;sliceId=1&amp;noCount=true&amp;isLoadPublishedVer=&amp;docType=kc&amp;docTypeID=DT_Article&amp;stateId=4183&amp;cmd=displayKC&amp;dialogID=197243&amp;ViewedDocsListHelper=com.kanisa.apps.common.BaseViewedDocsListHelperImpl&amp;openedFromSearchResults=true</a> I need to extract Description, Cause, and Resolution.</p>  <p>Tried various ways to get element, including:</p>  <ul> <li>find_element_by_xpath</li> <li>find_element_by_id</li> <li>find_element_by_class_name.</li> </ul>  <p>Nothing gave the desired result. Could you direct me in which way should I work?</p>"	57091242	"<p><a href=""https://support.na.sage.com/selfservice/viewContent.do?externalId=60390&amp;sliceId=1"" rel=""nofollow noreferrer"">https://support.na.sage.com/selfservice/viewContent.do?externalId=60390&amp;sliceId=1</a> This is the correct url that you can crawl html, use Network tab of your browser devtool to find that. Example with Chrome <a href=""https://i.stack.imgur.com/YGGKC.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/YGGKC.png"" alt=""enter image description here""></a></p>"
57091137	"Code dynamic dropdown using Python, sqlite3, HTML and JavaScript"	javascript|python|json|sqlite	2019-07-18 09:20:13.373000 UTC	"<p>I want to fetch userdata from sqlite DB table and list them as a dropdown list in my HTML code. I am new to Python. I tried writing a code, but it failed. list_fetched is my users list that I fetched from db table.</p> <pre><code>@app.route('/trail', methods=['POST', 'GET']) def index():     list_tested = db_dropdown()     return render_template(&quot;try.html&quot;, trail1=list_fetchted)       return &quot;hi&quot;   try.html:  &lt;html&gt;   &lt;head&gt;    &lt;/head&gt;   &lt;body&gt;     &lt;p&gt;Hello World&lt;/p&gt;     &lt;button type=&quot;submit&quot; onclick=&quot;clicked()&quot;&gt;Submit&lt;/button&gt; &lt;script&gt;       var trail1 = {{ trail1|tojson }};       function clicked()       {       alert(&quot;trail1[0]&quot;)       }     &lt;/script&gt;   &lt;/body&gt; &lt;/html&gt; </code></pre> <p>No value is getting displayed.</p>"	57091542	"<p>I would recommend looking at the quick start guide for Flask, it may give some advice on your problem and help with your future learning.  (<a href=""https://flask.palletsprojects.com/en/1.0.x/quickstart/"" rel=""nofollow noreferrer"">https://flask.palletsprojects.com/en/1.0.x/quickstart/</a>) I have a solution for your issue (I have removed any sqlite access but sure you can put that in):</p>  <pre><code>from flask import Flask, render_template  app = Flask(__name__)  @app.route('/') def hello():     return render_template(""try.html"", trial1=['1', '2']) </code></pre>  <p>Then your try.html file needs to be placed in /templates/try.html in your project directory. By default this is where Flask references templates.</p>  <pre><code>&lt;html&gt;   &lt;head&gt;    &lt;/head&gt;   &lt;body&gt;     &lt;p&gt;Hello World&lt;/p&gt;     &lt;button type=""submit"" onclick=""clicked()""&gt;Submit&lt;/button&gt; &lt;script&gt;       var trail1 = {{ trial1|tojson }};       function clicked()       {       alert(trail1[0])       }     &lt;/script&gt;   &lt;/body&gt; &lt;/html&gt; </code></pre>  <p>Enjoy learning python :)</p>"
57102352	How to get records of uids where skill='Python' and skill = 'Javascript'	mysql	2019-07-18 20:40:16.737000 UTC	"<p>So basically I need to get people where their skill = 'Python' and skill='Javascript' however I am getting an empty set when I run this query:</p>  <pre class=""lang-sql prettyprint-override""><code>SELECT uid  FROM personal_hard_skills  WHERE  (skill='Python' AND level &gt;)  AND skill='Javascript'; </code></pre>  <p>I searched the internet and people were suggesting using a form of an intersection query. Would that work with different from the same table?</p>  <p>So for context if I run the query to get everything in this table:</p>  <pre><code>mysql&gt; SELECT uid FROM personal_hard_skills; +----+-------+-----------------+------------+-------+---------------------+ | id | uid   | skill           | skill_code | level | timestamp           | +----+-------+-----------------+------------+-------+---------------------+ | 25 | Dave  | Javascript      |          1 |  3.00 | 2019-07-18 19:50:19 | | 26 | Dave  | Python          |          3 |  5.00 | 2019-07-18 19:50:19 | | 27 | John  | Javascript      |          1 |  1.00 | 2019-07-18 19:51:23 | | 28 | John  | Python          |          3 |  3.45 | 2019-07-18 19:51:23 | | 29 | John  | Adobe Photoshop |          8 |  4.20 | 2019-07-18 19:51:23 | | 30 | John  | HTML            |         64 |  2.50 | 2019-07-18 19:51:24 | | 31 | John  | CSS             |         49 |  0.82 | 2019-07-18 19:51:24 | | 35 | Helen | Javascript      |          1 |  4.35 | 2019-07-18 19:51:52 | | 36 | Helen | Python          |          3 |  4.99 | 2019-07-18 19:51:52 | | 37 | Helen | CSS             |         49 |  3.50 | 2019-07-18 19:51:52 | +----+-------+-----------------+------------+-------+---------------------+ 10 rows in set (0.03 sec) </code></pre>  <p>But when I run this query: </p>  <pre><code>mysql&gt; SELECT uid FROM personal_hard_skills WHERE skill='Python' AND skill='Javascript'; Empty set (0.03 sec) </code></pre>"	57102370	"<p>You could use aggregation:</p>  <pre><code>SELECT uid  FROM personal_hard_skills  WHERE skill IN ('Python','Javascript') GROUP BY uid HAVING COUNT(DISTINCT skill) = 2; </code></pre>  <p>EDIT:</p>  <pre><code>SELECT uid FROM personal_hard_skills  WHERE (skill = 'Python' AND level &gt;= 4.0) OR (skill = 'JavaScript' AND level &gt;= 2.0) GROUP BY uid HAVING COUNT(DISTINCT skill) = 2; </code></pre>"
57102352	How to get records of uids where skill='Python' and skill = 'Javascript'	mysql	2019-07-18 20:40:16.737000 UTC	"<p>So basically I need to get people where their skill = 'Python' and skill='Javascript' however I am getting an empty set when I run this query:</p>  <pre class=""lang-sql prettyprint-override""><code>SELECT uid  FROM personal_hard_skills  WHERE  (skill='Python' AND level &gt;)  AND skill='Javascript'; </code></pre>  <p>I searched the internet and people were suggesting using a form of an intersection query. Would that work with different from the same table?</p>  <p>So for context if I run the query to get everything in this table:</p>  <pre><code>mysql&gt; SELECT uid FROM personal_hard_skills; +----+-------+-----------------+------------+-------+---------------------+ | id | uid   | skill           | skill_code | level | timestamp           | +----+-------+-----------------+------------+-------+---------------------+ | 25 | Dave  | Javascript      |          1 |  3.00 | 2019-07-18 19:50:19 | | 26 | Dave  | Python          |          3 |  5.00 | 2019-07-18 19:50:19 | | 27 | John  | Javascript      |          1 |  1.00 | 2019-07-18 19:51:23 | | 28 | John  | Python          |          3 |  3.45 | 2019-07-18 19:51:23 | | 29 | John  | Adobe Photoshop |          8 |  4.20 | 2019-07-18 19:51:23 | | 30 | John  | HTML            |         64 |  2.50 | 2019-07-18 19:51:24 | | 31 | John  | CSS             |         49 |  0.82 | 2019-07-18 19:51:24 | | 35 | Helen | Javascript      |          1 |  4.35 | 2019-07-18 19:51:52 | | 36 | Helen | Python          |          3 |  4.99 | 2019-07-18 19:51:52 | | 37 | Helen | CSS             |         49 |  3.50 | 2019-07-18 19:51:52 | +----+-------+-----------------+------------+-------+---------------------+ 10 rows in set (0.03 sec) </code></pre>  <p>But when I run this query: </p>  <pre><code>mysql&gt; SELECT uid FROM personal_hard_skills WHERE skill='Python' AND skill='Javascript'; Empty set (0.03 sec) </code></pre>"	57102844	"<p>Combining feedback from the original post and comments, this should work:</p>  <pre class=""lang-sql prettyprint-override""><code>SELECT uid   FROM personal_hard_skills   WHERE (skill = 'Python' AND level &gt;= 4.0)   OR (skill = 'JavaScript' AND level &gt;= 2.0); </code></pre>  <p>The issue in the original post was <code>AND</code>-- no <code>personal_hard_skills</code> can have a skill of 'Python' <em>and</em> 'JavaScript'.</p>"
57117401	"scraping website with requests, turning javascript variable data into python object"	python	2019-07-19 17:47:17.407000 UTC	"<p>I am scraping a webpage that has a bunch of relevant information stored in a javascript variable</p>  <pre><code>response = requests.get('') r = response.text </code></pre>  <p>inside <code>r</code>, there is a javascript variable that has a bunch of data I want</p>  <p>This is what is returned from the server: </p>  <pre><code>&lt;!DOCTYPE html&gt; &lt;html&gt; &lt;head&gt; ....  &lt;script&gt;  var candidate_details_input_string =  = '{ ...}' &lt;/script&gt; .... &lt;/head&gt; &lt;/html&gt; </code></pre>  <p>Inside <code>candidate_details_input_string</code> is a bunch of stuff and I use <code>.split()</code> to isolate the list I want</p>  <pre><code>x = r.split('candidate_completed_list\\"":')[1].split(']')[0]+']' </code></pre>  <p>However, this returns the javascript string, but I'm in Python. It looks something like this:</p>  <pre><code>x = '[{\\""i_form_name\\"":\\""Applicant_Information_Form\\"",\\""completed_time\\"":\\""2017-02-03T19:12:00.000Z\\""},{\\""i_form_name\\"":\\""Voluntary_Self_Identification_of_Disability_template\\"",\\""completed_time\\"":\\""2017-02-03T19:14:00.000Z\\""},{\\""i_form_name\\"":\\""Voluntary_Self_Identification_of_Disability_template\\"",\\""completed_time\\"":\\""2017-02-05T19:21:00.000Z\\""},{\\""i_form_name\\"":\\""Government_Entity_Questions_Form\\"",\\""completed_time\\"":\\""2018-07-03T00:29:00.000Z\\""}]' </code></pre>  <p>This is a javascript string and normally would JSON.parse(), but can't since I'm scraping it in python.</p>  <p>Is there anyway to turn this into a Python object I can work with? My default answer is do it by hand, replace all of the <code>\\</code> and switch the <code>'</code> into <code>""</code></p>"	57117479	"<p>You're getting JSON back from requests.  Try using the built in json library of python, you shouldn't have to do any manual parsing yourself.</p>  <pre><code>import json import requests  response = requests.get('') r = todos = json.loads(response.text) </code></pre>"
57117401	"scraping website with requests, turning javascript variable data into python object"	python	2019-07-19 17:47:17.407000 UTC	"<p>I am scraping a webpage that has a bunch of relevant information stored in a javascript variable</p>  <pre><code>response = requests.get('') r = response.text </code></pre>  <p>inside <code>r</code>, there is a javascript variable that has a bunch of data I want</p>  <p>This is what is returned from the server: </p>  <pre><code>&lt;!DOCTYPE html&gt; &lt;html&gt; &lt;head&gt; ....  &lt;script&gt;  var candidate_details_input_string =  = '{ ...}' &lt;/script&gt; .... &lt;/head&gt; &lt;/html&gt; </code></pre>  <p>Inside <code>candidate_details_input_string</code> is a bunch of stuff and I use <code>.split()</code> to isolate the list I want</p>  <pre><code>x = r.split('candidate_completed_list\\"":')[1].split(']')[0]+']' </code></pre>  <p>However, this returns the javascript string, but I'm in Python. It looks something like this:</p>  <pre><code>x = '[{\\""i_form_name\\"":\\""Applicant_Information_Form\\"",\\""completed_time\\"":\\""2017-02-03T19:12:00.000Z\\""},{\\""i_form_name\\"":\\""Voluntary_Self_Identification_of_Disability_template\\"",\\""completed_time\\"":\\""2017-02-03T19:14:00.000Z\\""},{\\""i_form_name\\"":\\""Voluntary_Self_Identification_of_Disability_template\\"",\\""completed_time\\"":\\""2017-02-05T19:21:00.000Z\\""},{\\""i_form_name\\"":\\""Government_Entity_Questions_Form\\"",\\""completed_time\\"":\\""2018-07-03T00:29:00.000Z\\""}]' </code></pre>  <p>This is a javascript string and normally would JSON.parse(), but can't since I'm scraping it in python.</p>  <p>Is there anyway to turn this into a Python object I can work with? My default answer is do it by hand, replace all of the <code>\\</code> and switch the <code>'</code> into <code>""</code></p>"	57117633	"<p>You can use <code>ast.literal_eval</code> in this case:</p>  <pre><code>data = '''&lt;!DOCTYPE html&gt; &lt;html&gt; &lt;head&gt; ....  &lt;script&gt;  var candidate_details_input_string = '{""i_form_name"":""Applicant_Information_Form""}'; &lt;/script&gt; .... &lt;/head&gt; &lt;/html&gt;'''  import re from ast import literal_eval  s = re.findall(r'var candidate_details_input_string\s*=\s*\'(.*?\})\s*\'\s*;', data, flags=re.DOTALL)[0] data = literal_eval(s) print(data) </code></pre>  <p>Prints:</p>  <pre><code>{'i_form_name': 'Applicant_Information_Form'} </code></pre>"
57117401	"scraping website with requests, turning javascript variable data into python object"	python	2019-07-19 17:47:17.407000 UTC	"<p>I am scraping a webpage that has a bunch of relevant information stored in a javascript variable</p>  <pre><code>response = requests.get('') r = response.text </code></pre>  <p>inside <code>r</code>, there is a javascript variable that has a bunch of data I want</p>  <p>This is what is returned from the server: </p>  <pre><code>&lt;!DOCTYPE html&gt; &lt;html&gt; &lt;head&gt; ....  &lt;script&gt;  var candidate_details_input_string =  = '{ ...}' &lt;/script&gt; .... &lt;/head&gt; &lt;/html&gt; </code></pre>  <p>Inside <code>candidate_details_input_string</code> is a bunch of stuff and I use <code>.split()</code> to isolate the list I want</p>  <pre><code>x = r.split('candidate_completed_list\\"":')[1].split(']')[0]+']' </code></pre>  <p>However, this returns the javascript string, but I'm in Python. It looks something like this:</p>  <pre><code>x = '[{\\""i_form_name\\"":\\""Applicant_Information_Form\\"",\\""completed_time\\"":\\""2017-02-03T19:12:00.000Z\\""},{\\""i_form_name\\"":\\""Voluntary_Self_Identification_of_Disability_template\\"",\\""completed_time\\"":\\""2017-02-03T19:14:00.000Z\\""},{\\""i_form_name\\"":\\""Voluntary_Self_Identification_of_Disability_template\\"",\\""completed_time\\"":\\""2017-02-05T19:21:00.000Z\\""},{\\""i_form_name\\"":\\""Government_Entity_Questions_Form\\"",\\""completed_time\\"":\\""2018-07-03T00:29:00.000Z\\""}]' </code></pre>  <p>This is a javascript string and normally would JSON.parse(), but can't since I'm scraping it in python.</p>  <p>Is there anyway to turn this into a Python object I can work with? My default answer is do it by hand, replace all of the <code>\\</code> and switch the <code>'</code> into <code>""</code></p>"	57117863	"<p>You can load your x variable into a json(dictionary). We need to replace those <code>\</code> and all is well:</p>  <pre class=""lang-py prettyprint-override""><code>import json  x = '[{\\""i_form_name\\"":\\""Applicant_Information_Form\\"",\\""completed_time\\"":\\""2017-02-03T19:12:00.000Z\\""},{\\""i_form_name\\"":\\""Voluntary_Self_Identification_of_Disability_template\\"",\\""completed_time\\"":\\""2017-02-03T19:14:00.000Z\\""},{\\""i_form_name\\"":\\""Voluntary_Self_Identification_of_Disability_template\\"",\\""completed_time\\"":\\""2017-02-05T19:21:00.000Z\\""},{\\""i_form_name\\"":\\""Government_Entity_Questions_Form\\"",\\""completed_time\\"":\\""2018-07-03T00:29:00.000Z\\""}]'  data = json.loads(x.replace('\\',''))  print(data) </code></pre>"
57124675	How to query ipython (jupyterlab?) kernel from javascript in the notebook?	ipython|jupyter	2019-07-20 12:21:56.083000 UTC	"<p>You can write some html and js and display things in the notebook but what is the standard way of querying the ""backend"" ... i.e. sending requests to the python process driving the notebook?</p>"	57125235	"<p>Use the Jupyter messaging protocol:<br> <a href=""https://jupyter-client.readthedocs.io/en/stable/messaging.html"" rel=""nofollow noreferrer"">https://jupyter-client.readthedocs.io/en/stable/messaging.html</a></p>"
57158553	Convert Python dict to Javascript Object and access the key and value	javascript|python|json	2019-07-23 07:10:15.870000 UTC	"<p>Trying to access just the value or key of the JSON object but it displays as undefined.</p>  <p>Tried to <code>json.parse</code> but same results.</p>  <pre><code>now = datetime.now() date_time = now.strftime(""%m/%d/%Y, %H:%M:%S"") print(date_time) chatrooms[chatroom][username][date_time] = message message = json.dumps(chatrooms[chatroom][username]) emit(""append messages"", message, broadcast=True) </code></pre>  <pre><code>socket.on('append messages', data =&gt; {              const li = document.createElement('li');              // parse the messages;              var response = jQuery.parseJSON(data)              message = `${response.date_time}`; </code></pre>  <p>The message that was sent in, but I am getting undefined. I tried ridding of the jQuery Parse, but it is not working.</p>"	57174076	"<p>So I finally solved the issue, first you have to use json.dumps(foo) from the python side via socketemit and then to convert it to a Javascript Object - you have to again use json.parse(foo). Then it is in an Object literal which can be accessed using a for loop to get at the value and key! Like so</p>  <pre><code>  for (var i in foo) {             var key = i;             var val = foo[i]; } </code></pre>"
57169568	How would I translate this JavaScript code to Python code?	javascript|python|function	2019-07-23 17:41:47.167000 UTC	"<p>Sorry, I know this may be an odd questions, but I made this basic JavaScript program, and I'm not exactly sure what I should look up to know how to translate it to a python program with the same functionality. I know how the code works, but I don't know what the technical term for it is so I am struggling to find out how to do it in python. Any help would be greatly appreciated. Thanks!</p>  <hr>  <pre><code>var myArray = [];  var myCache = {      add: function a(x){         myArray.shift();         myArray.push(x);     },      access: function b(z){         var zLocation = myArray.indexOf(z);         var temp1 = myArray.slice(0,zLocation);         var temp2 = myArray.slice(zLocation+1, myArray.length);         temp1 = temp1.concat(temp2);         temp1.push(z);         myArray = temp1;     },      print: function c(){         console.log(""Current array is: "" + myArray);     },      size: function d(y){         yArray.length = y;     } };  myCache.add(7);  </code></pre>  <hr>  <p>I don't know how to add the add, access, print, and size functionality to something I create in Python. Thanks!</p>"	57169713	"<p>Just use <a href=""https://github.com/PiotrDabkowski/Js2Py"" rel=""nofollow noreferrer"">Js2PY</a>. It's written in Python so of course you'd have to have Python but other than that your good. If you want to go the long way then learn Python which would be better because once you have your code in Python you know how to change it.</p>"
57169568	How would I translate this JavaScript code to Python code?	javascript|python|function	2019-07-23 17:41:47.167000 UTC	"<p>Sorry, I know this may be an odd questions, but I made this basic JavaScript program, and I'm not exactly sure what I should look up to know how to translate it to a python program with the same functionality. I know how the code works, but I don't know what the technical term for it is so I am struggling to find out how to do it in python. Any help would be greatly appreciated. Thanks!</p>  <hr>  <pre><code>var myArray = [];  var myCache = {      add: function a(x){         myArray.shift();         myArray.push(x);     },      access: function b(z){         var zLocation = myArray.indexOf(z);         var temp1 = myArray.slice(0,zLocation);         var temp2 = myArray.slice(zLocation+1, myArray.length);         temp1 = temp1.concat(temp2);         temp1.push(z);         myArray = temp1;     },      print: function c(){         console.log(""Current array is: "" + myArray);     },      size: function d(y){         yArray.length = y;     } };  myCache.add(7);  </code></pre>  <hr>  <p>I don't know how to add the add, access, print, and size functionality to something I create in Python. Thanks!</p>"	57170388	"<p>As python is an object oriented language, the way to get an object is basically to create a class which acts as the blueprint/prototype for different instantiations of that object. So your code translated to python could look more or less like this:</p>  <p><em>(all of you python pros, please forgive me, I'm not =D)</em></p>  <pre class=""lang-py prettyprint-override""><code>class MyCache:     def __init__(self, *args, **kwargs):         # in python the most similar to a javascript array is a list         # to make it a bit more readable `myArray` is called `_cache` here         self._cache = []      def add(self, x):         # do not try to pop() from an empty list, will throw an error         if self._cache:             self._cache.pop(0)          self._cache.append(x)      def access(self, z):         # index() is a bit whimpy in python...         try:             i = self._cache.index(z);             # I think we don't need the .slice() stuff here,             # can just .pop() at the index in python             self._cache.pop(i)             self._cache.append(z)         except ValueError as err:             print(err)      def size(self, y):         # not sure what you want to do here, initialize the cache with         # an array/list of a specific length?         self._cache = [None] * y      # print is a reserved word in python...     def status(self):         print(""Current array is: "")         print(self._cache)  # instantiate the class (e.g. get a cache object) # and do some stuff with it.. cache = MyCache() cache.add(7) cache.status() cache.add(10) cache.status() cache.add(3) cache.status() cache.access(3) cache.status() </code></pre>  <p>not sure if this is actually doing what you're expecting it to do, you'll always have only 1 value in the cache because the <code>add()</code> method will always remove one...so the <code>access</code> method kind of doesn't make sense...but maybe it was just your simplified example code?</p>"
57182170	Website: Send data from javascript (client) to python (server)	javascript|python|simplehttpserver	2019-07-24 11:46:49.787000 UTC	"<p>I have wrote a website using html/css and javascript and I am running this site using a simple python script </p>  <pre><code>import http.server import socketserver  PORT = 8000 Handler = http.server.SimpleHTTPRequestHandler  with socketserver.TCPServer(("""", PORT), Handler) as httpd:     print(""serving at port"", PORT)     httpd.serve_forever() </code></pre>  <p>the website is running just fine. However I am trying to understand how can I send data from the js client to the python server? Let's settle a simple example. Let's assume that I have a simple html text input and a simple html button and I am writing some text to the field, how am I supposed to send this text, when I am pressing the button, to the server?</p>  <p>NOTE: I am using pure javascript so far</p>"	57182637	"<p>You should implement in Python a handler that can handle a POST or a PUT request onto a given URL. And in javascript, you just send your HTTP request on this URL with the correct HTTP method and with data in the body of your request.</p>"
57189809	How Do I Stop Recursive GET For Python/Django/Javascript?	javascript|django|django-models|django-forms|django-views	2019-07-24 19:15:13.697000 UTC	"<p>I've spent the last couple days trying to figure out the answer to this SO...<a href=""https://stackoverflow.com/questions/57155919/modelchoicefield-invalid-literal-for-int-with-base-10"">ModelChoiceField invalid literal for int() with base 10: &#39;&#39;</a>  </p>  <p>Leveraging this solution, <a href=""https://stackoverflow.com/questions/8029532/how-to-prevent-submitting-the-html-forms-input-field-value-if-it-empty"">How to prevent submitting the HTML form&#39;s input field value if it empty</a>  I'm really close.  </p>  <p>The problem is...I'm using a django DetailView and overriding GET to try and get the value that is being passed by Javascript, but it's essentially looping when I perform my GET.  I'm new to Javascript, and it's entirely possible that my Javascript program is incorrect.  Here is my code....</p>  <p>My Django FormView...</p>  <pre><code>class AuthorByNameView(LoginRequiredMixin,FormView):     form_class = AuthorByNameForm     template_name = 'author_by_name.html'      def get_form_kwargs(self):         kwargs = super(AuthorByNameView, self).get_form_kwargs()         kwargs['dropdown'] = self.request.GET.get(""dropdown"")         return kwargs </code></pre>  <p>My Django DetailView...</p>  <pre><code>class AuthorDetailView(LoginRequiredMixin,DetailView):     model = Author     template_name = 'author_detail.html'      def get_object(self, queryset=None):         return get_object_or_404(Author, id=self.request.GET.get(""dropdown""))  def get(self, request, *args, **kwargs):     dropdown=self.request.GET.get(""dropdown"")     if dropdown is not None:         if Author.objects.filter(Q(id=self.request.GET.get(""dropdown""))).distinct():             self.object = self.get_object()         context = self.get_context_data(object=self.object)         return self.render_to_response(context)     else:         print(dropdown)         messages.add_message(self.request, messages.INFO, 'Please enter a valid request number.')         return HttpResponseRedirect(reverse('Main:author_detail')) </code></pre>  <p>My HTML....</p>  <pre><code>&lt;form method=""GET"" autocomplete=off action=""{% url 'Main:author_detail' %}""&gt; </code></pre>  <p>My FORM....</p>  <pre><code>class AssociateByNameForm(forms.Form):  dropdown = forms.ModelChoiceField(queryset=User.objects.none(),required=False)  def __init__(self, *args, **kwargs):     dropdown = kwargs.pop('dropdown', None)     super(AssociateByNameForm, self).__init__(*args, **kwargs)     self.fields['dropdown'].widget.attrs['class'] = 'choices'     self.fields['dropdown'].empty_label = ''     self.fields['dropdown'].queryset = Author.objects.filter(is_active=True).order_by('last_name','first_name')     self.fields['dropdown'].label_from_instance = lambda obj: ""%s"" % obj.get_full_name() </code></pre>  <p>My Javascript....</p>  <pre><code>$(document).ready(function () {   $('form').submit(function() {     var dropdown = $('#id_dropdown').val();     if (dropdown === undefined || dropdown === """") {       $('#id_dropdown').attr('name', '' );     }   }); }); </code></pre>  <p>From what I can tell via my print statements....When the detailview is called, the Javascript is sending the value of NONE recursively to the GET request.  The Python backend is then overrun by the error messages I've defined in my GET method.  </p>  <p>Is there some way to correct this so that the GET method only gets the value of NONE one time?  I'm trying to return an error message via my DetailView in the event that a user clicks submit on the FORM.  I am using this same code in many other places and it works just fine.  The difference is that in this case I'm using a ModelChoiceField and having to manipulate the value if the user clicks on the form and the value is blank.  I am trying to send a value of NONE to prevent an invalid literal BASE10 message.  </p>  <p>I'm open to other approaches, but it would seem that if I can just prevent the request.GET.get from receiving or the Javascript from sending NONE numerous times, this code would do exactly what I want.  I suspect maybe the Javascript code is maybe missing a return?  Just a guess on my part as I'm very new to Javasript.</p>  <p>Thanks in advance for any thoughts.</p>"	57191324	"<p>I was returning the wrong URL here...</p>  <pre><code>else:     print(dropdown)     messages.add_message(self.request, messages.INFO, 'Please enter a valid request number.')     return HttpResponseRedirect(reverse('Main:author_detail')) </code></pre>  <p>Once I corrected the URL the recursion stopped.</p>"
57206899	Child_Processes calling function from javascript node js to python breaking with imports	javascript|python|node.js|child-process	2019-07-25 16:56:18.947000 UTC	"<p>I am using <code>node js</code> for my application as well as <code>react.</code></p>  <p>I am trying to use <code>child_process</code> to call a python function from my node js code, using <a href=""https://stackoverflow.com/questions/23450534/how-to-call-a-python-function-from-node-js"">this post</a> to guide me. It seems pretty straightforward, until I realized that the <code>child_process</code> was used to call a python script, not a main method with functions.</p>  <p>I am relatively new to Python, so forgive me if I mix up terminology here and there. Here is a very basic version of my python file below: </p>  <pre><code>import sys # other imports   def __main__():      one = function_one()      two = function_two()      arr = [one, two]      print(arr)      sys.stdout.flush()  def function_one():      # do stuff, pretend it returns 'hello' def function_two():      # do stuff, pretend it returns 'world'  if __name__ == '__main__':      __main__() </code></pre>  <p>The end result should be <code>['hello', 'world']</code>, but it seems like I am not getting returned anything. As you can see, I am printing <code>arr</code> and flushing it afterwards, so it should work. </p>  <p>The only way I can get it to work is if my file looks like this: </p>  <pre><code>import sys print('hello world') sys.stdout.flush() </code></pre>  <p>As you can see, without the main method or additional functions. <strong>Is there a reason to this or am I just implementing it wrongly? Thanks!</strong></p>  <p><strong>EDIT:</strong></p>  <p>After trying a couple different things, I found out that some of my imports were breaking, such as <code>pandas</code> or <code>seaborn</code>. It works if I remove those specific imports, even if I'm calling <code>__main__</code> through the if statement. Any ideas why?</p>"	57208619	"<p>You declare a function called <code>__main__</code> and then never call it. I think you've mixed things up with a known pattern that prevents code from being executed when a script is imported as a module. The correct implementation of this pattern would look like this:</p>  <pre><code>import sys  def myMainFunction(argv):     # the code here  if __name__ == ""__main__"":     myMainFunction(sys.argv) </code></pre>  <p><code>__name__</code> <a href=""https://www.geeksforgeeks.org/__name__-special-variable-python/"" rel=""nofollow noreferrer"">is a special variable</a> in Python. It is automatically set to <code>""__main__""</code> if the script was executed directly. If it was imported, it would hold the module's name instead.</p>  <p>Back to your problem. If you don't plan to import that script as a module, here's a solution I suggested in the comments:</p>  <p><em>Node.js:</em></p>  <pre><code>const spawn = require('child_process').spawn; const pythonProcess = spawn('python', ['script.py']);  pythonProcess.stdout.on('data', (data) =&gt; {     console.log(data.toString()); }); </code></pre>  <p><em>Python:</em></p>  <pre><code>import sys  def function_one():     return 'hello' def function_two():     return 'world'  one = function_one() two = function_two() arr = [one, two] print(arr) sys.stdout.flush() </code></pre>"
57206899	Child_Processes calling function from javascript node js to python breaking with imports	javascript|python|node.js|child-process	2019-07-25 16:56:18.947000 UTC	"<p>I am using <code>node js</code> for my application as well as <code>react.</code></p>  <p>I am trying to use <code>child_process</code> to call a python function from my node js code, using <a href=""https://stackoverflow.com/questions/23450534/how-to-call-a-python-function-from-node-js"">this post</a> to guide me. It seems pretty straightforward, until I realized that the <code>child_process</code> was used to call a python script, not a main method with functions.</p>  <p>I am relatively new to Python, so forgive me if I mix up terminology here and there. Here is a very basic version of my python file below: </p>  <pre><code>import sys # other imports   def __main__():      one = function_one()      two = function_two()      arr = [one, two]      print(arr)      sys.stdout.flush()  def function_one():      # do stuff, pretend it returns 'hello' def function_two():      # do stuff, pretend it returns 'world'  if __name__ == '__main__':      __main__() </code></pre>  <p>The end result should be <code>['hello', 'world']</code>, but it seems like I am not getting returned anything. As you can see, I am printing <code>arr</code> and flushing it afterwards, so it should work. </p>  <p>The only way I can get it to work is if my file looks like this: </p>  <pre><code>import sys print('hello world') sys.stdout.flush() </code></pre>  <p>As you can see, without the main method or additional functions. <strong>Is there a reason to this or am I just implementing it wrongly? Thanks!</strong></p>  <p><strong>EDIT:</strong></p>  <p>After trying a couple different things, I found out that some of my imports were breaking, such as <code>pandas</code> or <code>seaborn</code>. It works if I remove those specific imports, even if I'm calling <code>__main__</code> through the if statement. Any ideas why?</p>"	57223711	"<p>So, my problem was that in my spawn, python was pointing to version <code>2.7</code>, not <code>3.6.</code> Just alter the spawn to point to <code>python3.6</code> and it'll fix the import issues.</p>"
57245025	python javascript IBMCloud remake Watson-voice-bot for Japanese	javascript|python|ibm-cloud|ibm-watson|ibm-cloud-infrastructure	2019-07-28 21:14:59.983000 UTC	"<p>I am sorry for troubling you when you are busy. I don't mind any hints or expectations, so I would appreciate it if you could tell me. this is the first time for me to question here. I am a Japanese student.</p>  <p>This time, I want to remake watson-voice-bot, the open source code for IBM Cloud, for Japanese. However, I've tried a lot of things for a long time, but they only speak English. I will continue to challenge, but I would be very happy if someone could give me some advice.</p>  <p>This code is made using the apis of three services: speech to text, text to speech, and watson assistant. The main function is a chatbot that gets the human voice on the web site and the AI responds by voice.</p>  <p><a href=""https://www.youtube.com/watch?v=umf5egQPPRI"" rel=""nofollow noreferrer"">https://www.youtube.com/watch?v=umf5egQPPRI</a></p>  <p>What is certain now is to set the url for a foreign language in the source code to convert it to English.</p>  <p>So I tried to set the environment variables properly, but I remained English-speaking. Of course, natural language data sets have Japanese.</p>  <p>recorder.js and welcome.py, etc. tried various things, such as changing the value i think suspicious, but the chat bot itself will not work.</p>  <p>Especially in recorder.js, I thought that values such as recordeng would lead to a solution, but i can't come up with a clear solution because I don't have enough knowledge about Javascript.</p>  <p>Part of recorder.js</p>  <pre><code>  recorder.setupDownload = function(blob){      if($('#isRecording').prop('value')=='recordEng')     {       window.postEnglishAudio(blob);       var url = (window.URL || window.webkitURL).createObjectURL(blob);       var link = document.getElementById(""saveEnglish"");       link.href = url;       link.download = 'EnglishRecording.wav';       link.target = '_blank';     }     else {       window.postHindiAudio(blob);       var url = (window.URL || window.webkitURL).createObjectURL(blob);       var link = document.getElementById(""saveHindi"");       link.href = url;       link.download = 'HindiRecording.wav';       link.target = '_blank';      }     document.getElementById(""isRecording"").value=""none"";     // var url = (window.URL || window.webkitURL).createObjectURL(blob);     // var link = document.getElementById(""save"");     // link.href = url;     // link.download = filename || 'output.wav';    } </code></pre>  <p>Part of welcome.py</p>  <pre><code>@app.route('/api/text-to-speech', methods=['POST']) def getSpeechFromText():     tts_kwargs = {             'username': textToSpeechUser,             'password': textToSpeechPassword,             'iam_apikey': textToSpeechIAMKey,             'url': textToSpeechUrl     }      inputText = request.form.get('text')     ttsService = TextToSpeechV1(**tts_kwargs)      def generate():         audioOut = ttsService.synthesize(             inputText,             'audio/wav',             'ja-JP_EmiVoice').get_result()          data = audioOut.content          yield data      return Response(response=generate(), mimetype=""audio/x-wav"") </code></pre>"	57274702	"<p>Please show your TTS code, as the error will most likely be because you are not correctly setting the language model in the STT Recognize method.</p>  <p>In the TTS Synthesize methods that you do show, it's possible to tell what you are doing wrong. You are specifying positional arguments, but if you take a look at the Python SDK - <a href=""https://github.com/watson-developer-cloud/python-sdk/blob/master/ibm_watson/text_to_speech_v1.py"" rel=""nofollow noreferrer"">https://github.com/watson-developer-cloud/python-sdk/blob/master/ibm_watson/text_to_speech_v1.py</a></p>  <pre class=""lang-py prettyprint-override""><code> def synthesize(self,                 text,                 voice=None,                 customization_id=None,                 accept=None,                 **kwargs): </code></pre>  <p>The order is text, then voice. You should specify the arguments as keywords, as shown in the API documentation - <a href=""https://cloud.ibm.com/apidocs/text-to-speech?code=python#synthesize-audio-get"" rel=""nofollow noreferrer"">https://cloud.ibm.com/apidocs/text-to-speech?code=python#synthesize-audio-get</a></p>  <p>so in your case:</p>  <pre class=""lang-py prettyprint-override""><code> audioOut = ttsService.synthesize(           inputText,           accept = 'audio/wav',           voice = 'ja-JP_EmiVoice').get_result() </code></pre>  <p>For a full example of how to use the Python SDK for Watson take a look at the API Documentation - <a href=""https://cloud.ibm.com/apidocs/text-to-speech?code=python#synthesize-audio"" rel=""nofollow noreferrer"">https://cloud.ibm.com/apidocs/text-to-speech?code=python#synthesize-audio</a> </p>  <p>Your code should look something like - </p>  <pre class=""lang-py prettyprint-override""><code> from ibm_watson import TextToSpeechV1  @app.route('/api/text-to-speech', methods=['POST']) def getSpeechFromText():     tts_kwargs = {             'username': textToSpeechUser,             'password': textToSpeechPassword,             'iam_apikey': textToSpeechIAMKey,             'url': textToSpeechUrl     }      inputText = request.form.get('text')     ttsService = TextToSpeechV1(                     iam_apikey=textToSpeechIAMKey,                     url=textToSpeechUrl                   )      def generate():         audioOut = ttsService.synthesize(             inputText,             voice='ja-JP_EmiVoice',             accept='audio/wav').get_result()          data = audioOut.content          yield data      return Response(response=generate(), mimetype=""audio/x-wav"")   </code></pre>"
57250442	Python requests code gives Javascript disabled or not supported by web browser	python|python-requests|postman	2019-07-29 09:03:00.517000 UTC	"<p>I'm trying to get a webpage using a company's API, it works perfectly in Postman but when I take the code generated by Postman into python requests it returns a different response.</p>  <p>I set up my proxy and added my base auth but it still won't work</p>  <pre><code>url = ""https://www.test.com/confluence/rest/api/content/&lt;id&gt;""  querystring = {""expand"":""space,body.view,version,container""}  headers = {     'Content-Type': ""application/json"",     'Authorization': ""****"",     'User-Agent': ""PostmanRuntime/7.15.2"",     'Accept': ""*/*"",     'Cache-Control': ""no-cache"",     'Postman-Token': ""****"",     'Host': ""www.test.com"",     'Cookie': ""****"",     'Accept-Encoding': ""gzip, deflate"",     'Connection': ""keep-alive"",     'cache-control': ""no-cache""     }  response = requests.request(""GET"", url, headers=headers, params=querystring, proxies=urllib.request.getproxies()) </code></pre>  <p>Postman returns a JSON response containing the entire webpage + ID and any other necessary info. Python returns an HTML webpage with this error embedded</p>  <pre><code>JavaScript is either disabled in or not supported by the Web browser. To continue logon, use a Web browser that supports JavaScript or enable JavaScript in your current browser. </code></pre>"	57267856	"<p>If you are trying to use a webpage that is purely renders by JavaScript, it may be useful for you to use selenium.  This is a package that create a webbrowser that can render JavaScript.  There are some nice documentation here : <a href=""https://selenium-python.readthedocs.io/"" rel=""nofollow noreferrer"">https://selenium-python.readthedocs.io/</a> </p>  <p>The installation is quite long but it is worth the try. </p>"
57253548	Why the hex value is different in python and Javascript (Node Js)	python-3.x|hex	2019-07-29 12:06:49.243000 UTC	"<p>I have been trying to encrypt something in Node JS and decrypt it in Python.</p>  <p>When I give the key(Secret key, base64 decoded) to Fernet.js, it forms a hex string which is equal to:</p>  <pre><code>f790b0a226bc96a92de49b5e9c05e1ee </code></pre>  <p>But when I give the same key in Python and try to convert into hex, the value is:</p>  <pre><code>730ff4c7af3d46923e8ed451ee813c87f790b0a226bc96a92de49b5e9c05e1ee </code></pre>  <p>Why there is a difference? </p>  <p>code sample for NodeJS:</p>  <pre><code>let s = 'cw_0x689RpI-jtRR7oE8h_eQsKImvJapLeSbXpwF4e4=' new Buffer(s)).toString('hex') </code></pre>  <p>Python:</p>  <pre><code>be = base64.urlsafe_b64decode('cw_0x689RpI-jtRR7oE8h_eQsKImvJapLeSbXpwF4e4=') be.hex() </code></pre>"	57254380	"<pre><code>import base64 , binascii  key = ""cw_0x689RpI-jtRR7oE8h_eQsKImvJapLeSbXpwF4e4="" key = base64.urlsafe_b64decode(key)   # 32 bytes f = binascii.hexlify(key)  # first 16  SigningKey = key[:16] # next 16  EncKey = key[16:]   print (binascii.hexlify(SigningKey)) # 730ff4c7af3d46923e8ed451ee813c87 print (binascii.hexlify(EncKey)) # f790b0a226bc96a92de49b5e9c05e1ee </code></pre>"
57294901	IPython notebook: Passing variables from Python cell to Javascript cells	javascript|jupyter-notebook|ipython	2019-07-31 16:03:53.383000 UTC	"<p>I am trying to pass some integers and some dictionaries from a python cell to a Javascript cell in Jupyter notebook. However, I googled a lot but still can not find a proper way to manage it... Could anyone help? Thanks!!</p>  <p>For example, I have the following dict in Python:</p>  <pre class=""lang-py prettyprint-override""><code>data = {       ""a"": 0,       ""b"": 1     } </code></pre>  <p>How could I access data in a Javascript cell?</p>"	57295355	"<p>Somehow I make it work in a way not so nice:</p>  <p>First, define the dictionary in a javascript cell:</p>  <p>%%javascript</p>  <p>data = {};</p>  <p>Then pass the value in a Python cell:</p>  <p>data={ ""a"": 0, ""b"": 1 }</p>  <p>from IPython.display import Javascript</p>  <p>Javascript(""data=""+json.dumps(data))</p>"
57296147	Use Asyncio with for loop in Python similar to map method and promise.all in Javascript	javascript|python|python-3.x|python-asyncio|google-apps	2019-07-31 17:29:02.100000 UTC	"<p>I am trying to run through a for loop asynchronously in Python like you can do in Javascript using the map method and promise.all. I have searched everywhere on how to do this, but the code below is still running synchronously (doing one by one, instead of letting the loop do other iterations while it is finishing off the previous like promise.all allows you). Any help would be appreciated.</p>  <pre><code>from jwt import scopes                                                    from googleapiclient.discovery import build from google.oauth2 import service_account import json import asyncio  key = 'file.json' ID = 'ID' rg = 'A1'  j2 = service_account.Credentials.from_service_account_file(key, scopes=scopes).with_subject('me@emial.com')  ar = [] cl = build('classroom', 'v1', credentials=j2)  def cour():     co = []     result1 = cl.courses().list().execute()     courses = result1.get('courses', [])     for cc in courses:         co.append(cc['id'])     return co  cco = cour()  async def main():     async def subs2(i):         await asyncio.sleep(0)         result2 = cl.courses().courseWork().list(courseId=i).execute()          works = result2.get('courseWork', [])          for work in works:             result = cl.courses().courseWork().studentSubmissions().list(courseId=work['courseId'], courseWorkId=work['id']).execute()             subs = result.get('studentSubmissions', [])              for sub in subs:                 try:                     ar.append(sub['assignedGrade'])                     ar.append(sub['courseId'])                     ar.append(sub['courseWorkId'])                     ar.append(sub['userId'])                 except KeyError as name:                      pass      coros = [subs2(i) for i in cco]     await asyncio.gather(*coros)  if __name__ == '__main__':     cour()     loop = asyncio.get_event_loop()     loop.run_until_complete(main())     loop.close() </code></pre>"	57296296	"<p>I think you are misunderstanding the way <code>asyncio</code> provides concurrency. It does not spawn any additional threads or processes. The event loop, and all the coroutines running on it, execute in a single thread. In order to get concurrency, your coroutines need to <code>await</code> a call doing asynchronous I/O, or some other operation which yields control to the asyncio event loop.</p>  <p>In your example, the coroutine you are trying to get to run concurrently doesn't actually do any asynchronous I/O. So each time the coroutine executes, it's going to block the event loop until it completes. This means each one will execute sequentially. In order to get concurrency, you need to either use an asyncio-friendly library instead of the one (<code>googleapiclient</code>) you're currently using, or farm the blocking work off to a background thread, using <a href=""https://docs.python.org/3/library/asyncio-eventloop.html#asyncio.loop.run_in_executor"" rel=""nofollow noreferrer""><code>loop.run_in_executor</code></a>.</p>"
57296451	How can I unescape a string from python using javascript	javascript	2019-07-31 17:52:51.923000 UTC	<p>So I'm trying to work on passing a url from my backend to my frontend and it has some escaping going on such that by the time the string gets to the frontend it looks something like <code>&amp;#34www.test.com&amp;#34</code>.</p>  <p>Is there a way I can unescape this string or is my best solution here to just manually replace substrings of <code>&amp;#34</code> with quotes? </p>  <p>Thanks for your help!</p>	57296578	"<pre><code>'&amp;#34www.test.com&amp;#34'.replace(/&amp;#34/g,'') </code></pre>  <p>output:</p>  <pre><code> ""www.test.com"" </code></pre>"
57318733	How can I pass a variable from a javascript form to python (on the same computer)?	javascript|python	2019-08-02 01:00:12.963000 UTC	"<p>I have a javascript form with three sliders where a user can select three different values:</p>  <pre><code>&lt;form action=""submit.php""&gt; &lt;div class=""container""&gt;  &lt;div class=""slidecontainer""&gt;     &lt;input type=""range"" min=""0"" max=""100"" value=""50"" class=""slider"" id=""red""&gt; &lt;/div&gt;  &lt;div class=""slidecontainer""&gt;   &lt;input type=""range"" min=""0"" max=""100"" value=""50"" class=""slider"" id=""green""&gt; &lt;/div&gt;  &lt;div class=""slidecontainer""&gt;   &lt;input type=""range"" min=""0"" max=""100"" value=""50"" class=""slider"" id=""blue""&gt; &lt;/div&gt;  &lt;button type=""submit"" class=""button""&gt;Submit&lt;/button&gt; &lt;/div&gt; &lt;/div&gt; &lt;/form&gt; </code></pre>  <p>I'd like to pass all three values (red, green, blue) to python so I can use them with other code, on the same computer.  I tried using ajax and the example I saw <a href=""https://stackoverflow.com/questions/2894946/passing-javascript-variable-to-python"">here</a>, but I think I'm submitting the form incorrectly.  How can I post the data instead of calling submit.php so that I can read it with python?</p>"	57318807	"<p>Simple. Use <a href=""https://docs.cherrypy.org/en/latest/tutorials.html#id6"" rel=""nofollow noreferrer"">Cherrypy</a></p>  <p>Put that in a file (say main.py):</p>  <pre><code>import random import string  import cherrypy   class StringGenerator(object):     @cherrypy.expose     def index(self):         return """"""&lt;html&gt;           &lt;head&gt;&lt;/head&gt;           &lt;body&gt; &lt;form name=""search"" action=""/home"" method=""get""&gt; Search: &lt;input type=""text"" name=""box""&gt; &lt;input type=""submit"" value=""Submit""&gt; &lt;div class=""container""&gt;  &lt;div class=""slidecontainer""&gt;     &lt;input type=""range"" min=""0"" max=""100"" value=""50"" class=""slider"" id=""red""&gt; &lt;/div&gt;  &lt;div class=""slidecontainer""&gt;   &lt;input type=""range"" min=""0"" max=""100"" value=""50"" class=""slider"" id=""green""&gt; &lt;/div&gt;  &lt;div class=""slidecontainer""&gt;   &lt;input type=""range"" min=""0"" max=""100"" value=""50"" class=""slider"" id=""blue""&gt; &lt;/div&gt;  &lt;button type=""submit"" class=""button""&gt;Submit&lt;/button&gt; &lt;/div&gt; &lt;/div&gt; &lt;/form&gt;           &lt;/body&gt;         &lt;/html&gt;""""""      @cherrypy.expose     def generate(self, length=8):         return ''.join(random.sample(string.hexdigits, int(length)))      @cherrypy.expose     def home(self, box):         print(""You've entered in the form: ""+ str(box))          return ""THANKS""   if __name__ == '__main__':     cherrypy.quickstart(StringGenerator()) </code></pre>  <p>Then in a terminal:</p>  <pre><code>python main.py </code></pre>  <p>Then go to : <a href=""http://127.0.0.1:8080"" rel=""nofollow noreferrer"">http://127.0.0.1:8080</a> &amp; see magic happening when you click submit (the one next to the search box I added to your code):</p>  <pre><code>You've entered in the form: I entered something in the form... </code></pre>  <p>I litteraly just pasted an example from the doc (&amp; tweaked to fit your code a bit more). Other than </p>  <pre><code>pip install cherrypy </code></pre>  <p>you really have nothing else to do to get started. By far the easiest way to make a webserver in python imo.</p>  <p>Essentially, when you do </p>  <pre><code>@cherrypy.expose </code></pre>  <p>the name of that method becomes   <a href=""https://127.0.0.1:8080/my_new_endpoint"" rel=""nofollow noreferrer"">https://127.0.0.1:8080/my_new_endpoint</a> </p>  <p>You can easily serve stuff to different endpoints &amp; pass arguments (as shown). So you can very easily add new enpoints. See docs for details.</p>  <p>Have fun!</p>"
57319939	How to pass python variable to javascript in django template for Dygraph	javascript|python|django|dygraphs	2019-08-02 04:24:06.060000 UTC	"<p>I want to send a pandas dataframe output that is in Django Views.py, to the template in order to graph in a Dygraph.</p>  <p>The Dygraph will display if I leave the array definition in the template with the Dygraph script.  If I copy that same array definition to views.py and render it to the template the graph won't display.</p>  <p>The example array from Dygraphs (<a href=""http://dygraphs.com/data.html#array"" rel=""nofollow noreferrer"">http://dygraphs.com/data.html#array</a>).  And it works correctly. output.html:</p>  <pre><code>&lt;div id=""graphdiv""&gt;&lt;/div&gt;  &lt;script&gt; new Dygraph( document.getElementById(""graphdiv""),  [               [1,10,100],               [2,20,80],               [3,50,60],               [4,70,80]             ] , ); &lt;/script&gt; </code></pre>  <p>Below is my intent with the array defined in views.py, but this won't render the graph.</p>  <pre><code>Views.py:  def output(request):       DAT =   [                 [1,10,100],                 [2,20,80],                 [3,50,60],                 [4,70,80]               ]      #DAT = json.dumps(DAT) This doesn't seem to help either.      data = {      'DAT': DAT,     }     return render(request, 'cylon/output.html', data)  ------------------------------------------------------ Output.html:  &lt;div id=""graphdiv""&gt;&lt;/div&gt;  &lt;script&gt; new Dygraph( document.getElementById(""graphdiv""),  ""{{DAT}}"" , ); &lt;/script&gt; </code></pre>"	57327942	"<p>I think you need to pass json data and after decode it.</p>  <p><strong>Python</strong></p>  <pre><code>import json  def output(request):      DAT = [         [1,10,100],         [2,20,80],         [3,50,60],         [4,70,80]     ]      data = {      'DAT': json.dumps(DAT),     }     return render(request, 'cylon/output.html', data) </code></pre>  <p><strong>HTML</strong></p>  <pre><code>&lt;script&gt;   var coordinates = JSON.parse('{{ DAT }}');   new Dygraph(document.getElementById(""graphdiv""), coordinates); &lt;/script&gt; </code></pre>"
57324630	How to split Javascript code (bs4) using Python	javascript|python|beautifulsoup	2019-08-02 10:27:23.327000 UTC	"<p>So I have been having some issues when trying to scrape Javascript values from a bs4 code.</p>  <p>Basically the javascript looks like </p>  <pre><code>&lt;script type=""text/javascript""&gt; var FancyboxI18nClose = 'Close'; var FancyboxI18nNext = 'Next'; var FancyboxI18nPrev = 'Previous'; var PS_CATALOG_MODE = false; var ajaxsearch = true; var attribute_anchor_separator = '-'; var blocksearch_type = 'top'; var combinationsFromController = {""163972"":{""attributes_values"":{""15"":""40""},""attributes"":[75],""price"":0,""specific_price"":false,""ecotax"":0,""weight"":0.6,""quantity"":1,""reference"":""IDP20059--IDPA163972"",""unit_impact"":0,""minimal_quantity"":""1"",""date_formatted"":"""",""available_date"":"""",""id_image"":-1,""list"":""'75'""}}; var comparator_max_item = 0; &lt;/script&gt; </code></pre>  <p>and what I am trying to do here is to scrape the value <code>var combinationsFromController =</code> however what I tried to do is:</p>  <pre><code>bs4 = soup(requests.text, 'html.parser')  for nosto_sku_tag in bs4.find_all('script', {'type': 'text/javascript'}):     if 'combinationsFromController' in nosto_sku_tag.text.strip():         print(nosto_sku_tag)         for att, values in json.loads(                 re.findall('var combinationsFromController = (\{.*}?);', nosto_sku_tag.text.strip())[0][:-1]).values():             print(values) </code></pre>  <p>Which gives me an error of <code>Expecting ',' delimiter: line 1 column 4112 (char 4111)</code></p>  <p>I did realized that whenever I try to do </p>  <pre><code>for nosto_sku_tag in bs4.find_all('script', {'type': 'text/javascript'}):     if 'combinationsFromController' in nosto_sku_tag.text.strip():         print(nosto_sku_tag)         print(""---------"") </code></pre>  <p>The outprint gives me:</p>  <pre><code>var FancyboxI18nClose = 'Close'; var FancyboxI18nNext = 'Next'; var FancyboxI18nPrev = 'Previous'; var PS_CATALOG_MODE = false; var ajaxsearch = true; var attribute_anchor_separator = '-'; var blocksearch_type = 'top'; var combinationsFromController = {""163972"":{""attributes_values"":{""15"":""40""},""attributes"":[75],""price"":0,""specific_price"":false,""ecotax"":0,""weight"":0.6,""quantity"":1,""reference"":""IDP20059--IDPA163972"",""unit_impact"":0,""minimal_quantity"":""1"",""date_formatted"":"""",""available_date"":"""",""id_image"":-1,""list"":""'75'""}}; var comparator_max_item = 0; ---------------------------- </code></pre>  <p>Which seems to mean that the javascript code is as one code which I believe maybe needs to split, However I tried to use regex for it but it didn't help me.</p>  <p>So my question is how am I able to scrape <strong>ONLY</strong> the value <code>var combinationsFromController =</code>?</p>"	57325121	"<p>Use the following regex pattern to isolate the entire javascript object which is assigned to that variable.</p>  <pre><code>combinationsFromController = (.*?); </code></pre>  <p>Try it <a href=""https://regex101.com/r/IHtlB0/1"" rel=""nofollow noreferrer"">here</a>.</p>  <p>E.g.</p>  <pre><code>import requests, re, json  r = requests.get(url) p = re.compile(r'combinationsFromController = (.*?);', re.DOTALL) data = json.loads(p.findall(r.text)[0]) </code></pre>  <hr>  <p><a href=""https://i.stack.imgur.com/wNWu1.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/wNWu1.png"" alt=""enter image description here""></a></p>"
57333991	How to send a 2D array of floats from javascript to python with flask	javascript|python|arrays|flask	2019-08-02 22:13:58.803000 UTC	"<p>I am building a web app that will allow the user to draw an MNIST style digit in a 28*28 p5 canvas and uses a CNN that I built in python to classify the digit. I have a function that takes the canvas and turns it into a 2d array of floats. </p>  <pre class=""lang-py prettyprint-override""><code>function savedigit() {   vals = create2DArray(w, w); //function to create a 2d array with rows and columns   for (let i = 0; i &lt; w; i++) {     for (let j = 0; j &lt; w; j++) {       let p = Pixels[i][j];       vals[i][j]=(round((1-p.value)*100));     }   }   reset(); //resets the canvas   return vals } </code></pre>  <p>I want to send that 2D array that is generated to the flask app so the CNN can classify it. I have no idea how to do this because im a beginner to flask and i couldn't find any help for this on google. the program for drawing on the canvas and generating the array is found <a href=""https://editor.p5js.org/davidgraygs4@gmail.com/sketches/AvKRzvvVP"" rel=""nofollow noreferrer"">here</a></p>"	57334207	"<p>You are looking for ajax request: the client sends a request to the backend which returns a response. From the client's point of view, the backend is just a black box. Here is a code to show you the principle. You may have to adapt it to your case.</p>  <pre><code>// Browser side (async () =&gt; {   const rawResponse = await fetch('http://localhost:5000/api/mnist', {     method: 'POST',     headers: {       'Accept': 'application/json',       'Content-Type': 'application/json'     },     body: JSON.stringify(YOUR_2D_ARRAY)   });   const content = await rawResponse.json();    console.log(content);   // alert(content); // uncomment this line if you do not know how to read logs. })(); </code></pre>  <p>The flask application receives a post request which can be handled this way:</p>  <pre><code>from flask import Flask, request  @app.route('/api/mnist', methods=['POST']) def mnist():     data = request.get_json()     # you may want to convert the type here     number_predicted = clf.predict(data)     return number_predicted, 200 </code></pre>"
57363375	Creating PDFs from HTML/Javascript in Python with no OS dependencies	python|pdf	2019-08-05 17:25:38.290000 UTC	"<p>Is there any way to use Python to create PDF documents from HTML/CSS/Javascript, <em><strong>without</strong></em> introducing any OS-level dependencies?</p> <p>It seems every existing solution requires special supplemental software, but upon reviewing PDF formatting specifications and HTML/CSS/Javascript rendering, there doesn't appear to be a reason why a Python solution can't exist without them.  Some solutions come close, such as <a href=""https://github.com/miyakogi/pyppeteer"" rel=""nofollow noreferrer"">pyppeteer</a>, but it still leans on a headless Chrome installation locally.  These dependencies mean that microservices can't be leveraged, even though PDF generation would otherwise seem to be a viable use case for them.</p> <p>While similar questions have come up many times over on SO, there doesn't appear to have been a viable technique shown without having to install specialized dependencies on the OS.</p> <p>Some similar questions which routinely recommend <code>wkhtmltopdf</code> or are otherwise out of date (e.g., <a href=""https://bugs.chromium.org/p/chromium/issues/detail?id=311308"" rel=""nofollow noreferrer"">moving PDF printing support outside of Chrome is dead now</a>):</p> <ul> <li><a href=""https://stackoverflow.com/questions/23359083/how-to-convert-webpage-into-pdf-by-using-python"">How to convert webpage into PDF by using Python</a></li> <li><a href=""https://stackoverflow.com/questions/48510979/how-to-convert-a-local-html-file-to-pdf-using-python-in-windows"">How to convert a local HTML file to PDF using Python in Windows</a></li> <li><a href=""https://stackoverflow.com/questions/26555877/html-to-pdf-conversion-using-chrome-pdfium"">HTML to PDF conversion using Chrome pdfium</a></li> <li><a href=""https://stackoverflow.com/questions/29527123/how-does-chrome-render-pdfs-from-html-so-well"">How does Chrome render PDFs from HTML so well?</a></li> <li><a href=""https://stackoverflow.com/questions/10235354/convert-a-html-css-javascript-file-to-pdf-using-python"">Convert a HTML/CSS/Javascript file to PDF using Python?</a></li> </ul> <p>If I've somehow missed a viable approach, please feel free to mark this as a duplicate with my thanks!</p> <p><em>Edit February 2021:</em> It appears that the <code>cefpython</code> project may meet these demands - <a href=""https://github.com/cztomczak/cefpython/issues/362"" rel=""nofollow noreferrer"">PDF printing support</a> seems like it could be implemented in the near future.</p>"	62916299	"<p>Try this library: <strong>xhtml2pdf</strong></p> <p>It worked for me. Here is the documentation: <a href=""https://xhtml2pdf.readthedocs.io/en/latest/usage.html#using-with-python-standalone"" rel=""nofollow noreferrer"">doc</a></p> <p>Some sample code:</p> <pre><code>from xhtml2pdf import pisa               def convert_html_to_pdf(source_html, output_filename):     # open output file for writing (truncated binary)     result_file = open(output_filename, &quot;w+b&quot;)      # convert HTML to PDF     pisa_status = pisa.CreatePDF(             source_html,                # the HTML to convert             dest=result_file)           # file handle to recieve result      # close output file     result_file.close()                 # close output file      # return False on success and True on errors     return pisa_status.err  # Define your data source_html = open('2020-06.html') output_filename = &quot;test.pdf&quot; convert_html_to_pdf(source_html, output_filename) </code></pre>"
57363375	Creating PDFs from HTML/Javascript in Python with no OS dependencies	python|pdf	2019-08-05 17:25:38.290000 UTC	"<p>Is there any way to use Python to create PDF documents from HTML/CSS/Javascript, <em><strong>without</strong></em> introducing any OS-level dependencies?</p> <p>It seems every existing solution requires special supplemental software, but upon reviewing PDF formatting specifications and HTML/CSS/Javascript rendering, there doesn't appear to be a reason why a Python solution can't exist without them.  Some solutions come close, such as <a href=""https://github.com/miyakogi/pyppeteer"" rel=""nofollow noreferrer"">pyppeteer</a>, but it still leans on a headless Chrome installation locally.  These dependencies mean that microservices can't be leveraged, even though PDF generation would otherwise seem to be a viable use case for them.</p> <p>While similar questions have come up many times over on SO, there doesn't appear to have been a viable technique shown without having to install specialized dependencies on the OS.</p> <p>Some similar questions which routinely recommend <code>wkhtmltopdf</code> or are otherwise out of date (e.g., <a href=""https://bugs.chromium.org/p/chromium/issues/detail?id=311308"" rel=""nofollow noreferrer"">moving PDF printing support outside of Chrome is dead now</a>):</p> <ul> <li><a href=""https://stackoverflow.com/questions/23359083/how-to-convert-webpage-into-pdf-by-using-python"">How to convert webpage into PDF by using Python</a></li> <li><a href=""https://stackoverflow.com/questions/48510979/how-to-convert-a-local-html-file-to-pdf-using-python-in-windows"">How to convert a local HTML file to PDF using Python in Windows</a></li> <li><a href=""https://stackoverflow.com/questions/26555877/html-to-pdf-conversion-using-chrome-pdfium"">HTML to PDF conversion using Chrome pdfium</a></li> <li><a href=""https://stackoverflow.com/questions/29527123/how-does-chrome-render-pdfs-from-html-so-well"">How does Chrome render PDFs from HTML so well?</a></li> <li><a href=""https://stackoverflow.com/questions/10235354/convert-a-html-css-javascript-file-to-pdf-using-python"">Convert a HTML/CSS/Javascript file to PDF using Python?</a></li> </ul> <p>If I've somehow missed a viable approach, please feel free to mark this as a duplicate with my thanks!</p> <p><em>Edit February 2021:</em> It appears that the <code>cefpython</code> project may meet these demands - <a href=""https://github.com/cztomczak/cefpython/issues/362"" rel=""nofollow noreferrer"">PDF printing support</a> seems like it could be implemented in the near future.</p>"	65071493	"<p>So to clarify and formalize what others have said:</p> <ul> <li><p>If you want to create PDF documents from HTML/CSS/javascript content, you will necessarily need a <strong>javascript engine</strong> (because you obviously need to execute the javascript if it affects the visuals of the document). This is the most complex component that you need.</p> </li> <li><p>As for now, there is <strong>no ECMAscript compliant engine written in pure python</strong> that is well-maintained (that would be a huge project)... There will probably never be one, since compilers and VMs for languages need to be performant and are thus usually written in a performant low-level language.</p> </li> <li><p>So you will always need <strong>compiled binaries</strong> for that and the HTML renderers which are less complex but also need to be performant if used in browsers, so usually they're also C++ or the likes.</p> </li> <li><p>The javascript engine and HTML renderer are the major part of a browser, so a headless browser is a good solution to this requirement.</p> </li> </ul>"
57393258	parsing path variables from python(tornado) to javascript	javascript|python|image|render|tornado	2019-08-07 11:21:26.513000 UTC	"<p>I have a code in python where I'm trying to send dynamic path of few images to javascript, but for some reason the '\'(delimiter) gets removed. I'm trying to achieve this by sending one image at a time. I'm using tornado as python server and have javascript code with html.</p>  <p><strong>server.py</strong></p>  <pre><code>import tornado.ioloop import tornado.web import time import os  class one(tornado.web.RequestHandler):     def get(self):          self.write('Hello')  class Article(tornado.web.RequestHandler):     def get(self):          dir_path = os.path.dirname(os.path.realpath(__file__))         dir_path=os.path.join(dir_path, 'images')         file='2000px-Python-logo-notext.svg_.jpg'         file=os.path.join(dir_path, file)          var1 = 'Orignal_Appp'         self.render('template.html', var=var1, file1=file)  application = tornado.web.Application([     (r""/"", one),     (r""/articles"", Article), ],debug=True)  if __name__ == ""__main__"":     application.listen(8888)     tornado.ioloop.IOLoop.instance().start() </code></pre>  <p><strong>template.html</strong></p>  <pre><code>&lt;html&gt; &lt;title&gt;  &lt;/title&gt; &lt;body&gt; &lt;br&gt;  &lt;h1 align=""center""&gt; &lt;/h1&gt;  &lt;br&gt; &lt;div id='div2' align=""center""&gt; &lt;h4&gt;{{var}}&lt;/h4&gt; &lt;/div&gt; &lt;div id='div1' align=""center"" &gt;  &lt;p&gt;&lt;img id=""dynamicImg"" src="""" style=""width:300px;height:300px;""/&gt;&lt;/p&gt;  &lt;/div&gt; &lt;/body&gt;  &lt;script&gt;     var N = ""{{ file1 }}"";      var img = document.getElementById('dynamicImg');      img.src = N     document.write(N) &lt;/script&gt;  &lt;/html&gt; </code></pre>  <p>The output of image path from ""document.write(N)"":</p>  <pre><code>D:namanimagesimages0px-Python-logo-notext.svg_.jpg </code></pre>  <p>It should be something like :</p>  <pre><code>D:\naman\images\images\2000px-Python-logo-notext.svg_.jpg </code></pre>  <p>Also if in server.py I pass 'images/2000px-Python-logo-notext.svg_.jpg' as hard coded path value instead of variable, it works fine. So, my understanding is javascript is parsing the path and removing the '\' backward slash. I am pretty sure sure, its because of the backslash character, and I think this doesn't happen in flask. So it could be related to tornado, although I'm not sure. This might as well have a very common/general solution. let me know.</p>  <p>hard coded:</p>  <pre><code>self.render('template.html', var=var1, file1='images/2000px-Python-logo-notext.svg_.jpg') </code></pre>  <p>variable : </p>  <pre><code>self.render('template.html', var=var1, file1=file) </code></pre>  <p>I'm on windows 10, Python 3.7.3, tornado==5.1.1, but I would like to know about other platforms(linux) as well. Also, this may be a very common problem that I may have overlooked. I'm not sure. I looked around for this scenario and as well as other scenarios, but may be this question is duplicate, please direct me to the question with the solution, in such case. If anyone knows of any javascript function to overcome this issue Any information, help would be appreciative.</p>  <p>Thanks in advance!</p>"	57422551	"<p><code>var N = ""{{ file1 }}"";</code> gets turned into <code>var N = ""D:\naman\images\images\2000px-Python-logo-notext.svg_.jpg"";</code>, and <a href=""https://stackoverflow.com/questions/3903488/javascript-backslash-in-variables-is-causing-an-error"">backslash is a special character</a> in javascript strings. </p>  <p>You need to <em>escape</em> this string for use in a javascript string literal. Tornado's default escaping behavior is appropriate for HTML (where characters like angle brackets are special but backslashes are not). The simplest way to do this is to use the <code>json_encode</code> function (which will turn a python string into a javascript string):</p>  <pre><code>var N = {% raw json_encode(file1) %}; </code></pre>  <p>Note that there are no quote marks here - <code>json_encode</code> is responsible for adding them. </p>  <p>Escaping is tricky - you should be sure to test your app with paths containing special characters including backslashes, angle brackets, whitespace, ampersands and plus signs. </p>"
57415705	Python: Foursquare API and Requests requires cookies and javascript	python|api|automation|foursquare|blocked	2019-08-08 15:07:37.647000 UTC	"<p><strong>Issue</strong></p>  <p>I am trying to contact the Foursquare API, specifically the checkin/resolve endpoint. In the past this has worked, but lately I am getting blocked with an error message saying I am a bot, and that cookies and javascript cannot be read.</p>  <p><strong>Code</strong></p>  <pre class=""lang-py prettyprint-override""><code>response = ""Swarmapp URL"" # from previous functions, this isn't the problem checkin_id = response.split(""c/"")[1] # To get shortID url = ""https://api.foursquare.com/v2/checkins/resolve"" params = dict(  client_id = ""client_id"",  client_secret = ""client_secret"",  shortId = checkin_id,  v = ""20180323"") headers = {'User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.36'} time.sleep(8.5) # Limit of 500 requests an hour resp = requests.get(url = url, params=params, headers = headers)  data = json.loads(resp.text)  </code></pre>  <p>This code will work for about 30-40 requests, then error and return an HTML file including: ""Please verify you are human"", ""Access to this page has been denied because we believe you are using automation tools to browse the website."", ""Your browser does not support cookies"" and so on.</p>  <p>I've tried Googling and searching this site for similar errors, but I can't find anything that has helped. Foursquare API does not say anything about this either.</p>  <p>Any suggestions?</p>"	57427645	"<p><strong>Answer</strong> According to the Foursquare API documentation, this code should work:</p>  <pre class=""lang-py prettyprint-override""><code>import json, requests url = 'https://api.foursquare.com/v2/checkins/resolve'  params = dict(   client_id='CLIENT_ID',   client_secret='CLIENT_SECRET',   v='20180323',   shortId = 'swarmPostID' ) resp = requests.get(url=url, params=params) data = json.loads(resp.text) </code></pre>  <p>However, the bot detection Foursquare uses evidently contradicts the functionality of the API. I found that implementing a <code>try except</code> catch with a wait timer fixed the issue.</p>  <pre class=""lang-py prettyprint-override""><code>import json, requests  url = 'https://api.foursquare.com/v2/checkins/resolve'  params = dict(   client_id='CLIENT_ID',   client_secret='CLIENT_SECRET',   v='20180323',   shortId = 'swarmPostID' ) try:     resp = requests.get(url=url, params=params) except:     time.sleep(60) # Avoids bot detection     resp = requests.get(url=url, params=params)     try:         resp = requests.get(url=url, params=params)     except:         print(""Post is private or deleted."")         continue data = json.loads(resp.text) </code></pre>  <p>This seems like a very weird fix. Either Foursquare has implemented a DDoS prevention system that contradicts its own functionality, or their <code>checkin/resolve</code> endpoint is broken. Either way, the code works.</p>"
57458375	How to pass a dict parameter from Python to Frida RPC JavaScript function?	rpc|frida	2019-08-12 09:10:20.857000 UTC	"<p>I want to pass dict to RPC, here is my agent.js:</p>  <pre><code>rpc.exports = {     signrequesturlwithparameters: function (param_dict,secret,signMethod) {      var result=ObjC.classes.GSNetworkUtils.signRequestUrlWithParameters_secret_signMethod_(param_dict,secret,signMethod);     return String(ObjC.classes.NSString.stringWithString_(result));     } }; </code></pre>  <p>RPC invoke example;</p>  <pre><code>script.load() signrequesturlwithparameters= getattr(script.exports, 'signrequesturlwithparameters') _dict={""imsi"":""46001"",""device_model"":""iPhone7,2""} secret=""93AA27467E8"";  signMethod=""md5""; a=signrequesturlwithparameters(_dict,secret,signMethod) print(a) </code></pre>  <p>There is an error, can I pass a dict from Python to JavaSript RPC function? How should I modify the Python or JavaScript code to make it work?</p>  <p>Update: I tried JSON.parse,but it seems frida's javascript cannot use <code>JSON</code>.Another issue is when I want to pass a variable parameter dict to <code>a=signrequesturlwithparameters(_dict,secret,signMethod)</code>,how should I use <code>setObject_forKey_(""key1"",""value1"")</code>? I think I should resolve the variable parameter dict in frida javascript,then I tried to pass <code>str(dict)</code> from python to frida javascript and  tried to resolve the string dict to dict in frida javascript with <code>ObjC.classes.NSJSONSerialization</code>,more details is <a href=""https://github.com/frida/frida/issues/985"" rel=""nofollow noreferrer"">here</a>,but still fail,can you help me?</p>"	57475844	"<p>You can use <code>json.dumps</code> in py side &amp; <code>JSON.parse</code> in JS side, but I think your issue is @ <code>signRequestUrlWithParameters_secret_signMethod_</code> I do not think it expecting JSON but <code>NSDictionary</code> or something similar.</p>  <pre class=""lang-js prettyprint-override""><code>var NSDict = ObjC.classes.NSMutableDictionary.alloc().init();    NSDict.setObject_forKey_(""key1"", ""value1"");      NSDict.setObject_forKey_(""key2"", ""value2""); signRequestUrlWithParameters_secret_signMethod_(NSDict, ...); </code></pre>"
57459957	Javascript python communication	cefpython	2019-08-12 11:01:38.547000 UTC	"<p>With CEFPython can we create the prototype of a javascript function and build the function in python?</p>  <pre><code>&lt;button onclick=""somme(b,a)""&gt;SOMME&lt;/button&gt; &lt;label id='prompt'&gt;Bonjour&lt;/label&gt;  def somme(self,b,a):     self.ExecuteJavascript(document.getElementById('id').innerHTML = ""somme =""+b+a) </code></pre>"	57461760	"<p>Yes, you can do this using Javascript bindings, see a snippet here: <a href=""https://github.com/cztomczak/cefpython/blob/master/examples/snippets/javascript_bindings.py"" rel=""nofollow noreferrer"">https://github.com/cztomczak/cefpython/blob/master/examples/snippets/javascript_bindings.py</a></p>  <p>Read more about javascript bindings in the Tutorial document.</p>"
57467436	Reversing XOR Javascript Obfuscation Function with Python	javascript|python|obfuscation|deobfuscation	2019-08-12 19:50:28.683000 UTC	"<p>So I was looking at a compromised WordPress site and saw this injected js. It basically had one round of obfuscation (charCodeAt(13-3,9-2, etc). Then, it output the following:</p>  <pre><code>var key = 'eooquewZmf'; var enced = '&lt;encoded_base64_blob&gt;';  function xor_enc(string, key) {   var res = '';   for (var i = 0; i &lt; string.length; i++) {     res += String.fromCharCode(string.charCodeAt(i) ^ key.charCodeAt(i % key.length));   }   return res; } </code></pre>  <p>I really was trying to understand the obfuscation technique by writing a deobfuscator in Python, rather than just getting the clear text data by running the JS file and getting the clear text.</p>  <p>So I first tried to understand what was happening with the code:</p>  <h2>Variables</h2>  <p>key = xor key, enced = the text to decode</p>  <h2>Function</h2>  <p>xor_enc appears to take two arguements, ""string"" and ""key"". A variable ""res"" is an emptry string A for loop is initialised and will go from 0 to the length of the string, one character at a time The ""res"" variable will be populated by:</p>  <p>a) Each character of ""string"" will be converted to a char b) The position of i % (modulo) by the complete length of the key (10 characters)</p>  <p>Then a XOR b. Which will then be returned.</p>  <p>So I think my main issue is understanding b and replicating it in Python. This is what I have so far: <a href=""https://repl.it/repls/CluelessUnsungDisc"" rel=""nofollow noreferrer"">https://repl.it/repls/CluelessUnsungDisc</a>, but it's fubar and is returning the following error:</p>  <pre><code>File ""main.py"", line 8, in &lt;module&gt;     newstring += chr(ord(dec[letter]) ^ ord(letter % len(key))) TypeError: ord() expected string of length 1, but int found </code></pre>  <p>I don't know if its my brackets or nesting, but ord is not seeing the character position properly.</p>  <p>The original JS is here: <a href=""https://pastebin.com/yMz6aP7V"" rel=""nofollow noreferrer"">https://pastebin.com/yMz6aP7V</a> ((Remember, its JS from a compromised WordPress site, so can be malicious)</p>  <p>Anyhelp will be appreciated!</p>  <pre><code>based =""&lt;base64&gt;"" dec = base64.b64decode(based) print(dec) key = 'eooquewZmf' newstring = '' for letter in range(len(dec)):     newstring += chr(ord(dec[letter]) ^ ord(letter % len(key)))     print(newstring)  File ""main.py"", line 8, in &lt;module&gt;     newstring += chr(ord(dec[letter]) ^ ord(letter % len(key))) TypeError: ord() expected string of length 1, but int found </code></pre>"	57467566	"<p>You're supposed to be XORing with an element of <code>key</code>. <code>letter % len(key)</code> is the index of that element (it just cycles through the key with wraparound).</p>  <p><code>b64decode()</code> returns a <code>bytes</code> object rather than a string, so you can just access the elements as integers, you don't need to call <code>ord()</code>.</p>  <pre><code>import base64  def b64_xor(b64,key):   dec = base64.b64decode(b64)   newstring = ''   for i, letter in enumerate(dec):     newstring += chr(letter ^ ord(key[i % len(key)]))   print(newstring) </code></pre>  <p><a href=""http://ideone.com/NZ1jaV"" rel=""nofollow noreferrer"">DEMO</a></p>"
57480151	Equivalent of python's range in Javascript	javascript|python	2019-08-13 14:42:28.813000 UTC	"<p>I want to know what is the equivalent code for the python's range(start,stop,step=1). If anyone knows, I am really grateful for the help.</p>"	57480233	"<p>You can try this code instead, but you need to create a function first: </p>  <pre class=""lang-js prettyprint-override""><code>var number_array = [];  function range(start,stop) {     for (i =start; i &lt; (stop+1); i++) {         number_array.push(i);     }     return number_array; } </code></pre>"
57480151	Equivalent of python's range in Javascript	javascript|python	2019-08-13 14:42:28.813000 UTC	"<p>I want to know what is the equivalent code for the python's range(start,stop,step=1). If anyone knows, I am really grateful for the help.</p>"	57480306	"<p>JavaScript doesn't have a range method. Please refer to the <a href=""https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Looping_code"" rel=""nofollow noreferrer"">Looping Code</a> section in MDN's JavaScript guide for further info.</p> <p>Also, try doing some research or giving examples of what you'd like to achieve before asking such questions. A code is sample or a simple description would be sufficient.</p>"
57480151	Equivalent of python's range in Javascript	javascript|python	2019-08-13 14:42:28.813000 UTC	"<p>I want to know what is the equivalent code for the python's range(start,stop,step=1). If anyone knows, I am really grateful for the help.</p>"	57481263	"<p>The lazily evaluated version of <code>range()</code>; what used to be <code>xrange()</code>;</p>  <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-js lang-js prettyprint-override""><code>function* range(start, end, step) {   const numArgs = arguments.length;   if (numArgs &lt; 1) start = 0;   if (numArgs &lt; 2) end = start, start = 0;   if (numArgs &lt; 3) step = end &lt; start ? -1 : 1;    // ignore the sign of the step   //const n = Math.abs((end-start) / step);   const n = (end - start) / step;    if (!isFinite(n)) return;    for (let i = 0; i &lt; n; ++i)     yield start + i * step; }  console.log(""optional arguments:"", ...range(5)); console.log(""and the other direction:"", ...range(8, -8)); console.log(""and with steps:"", ...range(8, -8, -3));  for(let nr of range(5, -5, -2))    console.log(""works with for..of:"", nr);  console.log(""and everywhere you can use iterators""); const [one, two, three, four] = range(1,4); const obj = {one, two, three, four}; console.log(obj)</code></pre> <pre class=""snippet-code-css lang-css prettyprint-override""><code>.as-console-wrapper{top:0;max-height:100%!important}</code></pre> </div> </div> </p>"
57487328	Running a Python script with exec node then parsing to javascript with function node in Node red	javascript|python|node-red	2019-08-14 02:08:23.217000 UTC	"<p>I have a python script that controls a vibration sensor connected to my raspberry pi. I have that python script in the exec node. I need to parse the python code into javascript using the function node. (I'm doing this in node-red on the raspberry pi).</p>  <p>The JavaScript code I'm running does not return the value I need from the python code. I need the variable ""sensor"" to return in the javascript code.</p>  <p>python code:</p>  <pre><code>import time  import RPi.GPIO as GPIO  vibe = 4  GPIO.setmode(GPIO.BCM) GPIO.setup(vibe, GPIO.IN)  def callback(Vibe):     if GPIO.input(vibe):         sensor = ""vibration""         print(sensor)      else:         print(""error"")  GPIO.add_event_detect(vibe, GPIO.BOTH, bouncetime=300) GPIO.add_event_callback(vibe, callback)  while True:     time.sleep(1)  GPIO.cleanup() </code></pre>  <p>javascript code:</p>  <pre><code>var vibrationSensor = msg.payload;  var sensor = str.substr(1,15);  msg.payload = {      ""vibration"": sensor,  };  return msg; </code></pre>  <p>What it looks like in node-red:</p>  <p><img src=""https://i.stack.imgur.com/2HITp.png"" alt=""img""></p>"	57489327	"<p>Since the python code will never exit, you need to use the Daemon node rather than the exec node</p>"
57525529	Iterating over JavaScript array returnws from python list	javascript|python|jinja2|plotly	2019-08-16 13:28:43.573000 UTC	"<p>I am trying to traverse a Python list by converting it into a JavaScript array and then use it in the plotly.plot function.</p>  <p>For now I have used jinja syntax to convert my python list to a JS array but when i tried to get a value by indexing, it does not give me a result.</p>  <pre><code>var allgraphs ={{allchart|safe}};       names=[]     for (i = 0; i &lt;allgraphs.length-1; i++)      {     var mynum = {{numbers|safe}}       name = 'chart';     value=name.concat(i);     names.push(value);     Plotly.plot(names[i],allgraphs[i],{});      }     &lt;/script&gt; </code></pre>  <p>is there any way to do this?</p>"	57525704	"<p>You could use an intermediate standardized format like JSON.</p>  <p>encode it in your python using </p>  <pre class=""lang-py prettyprint-override""><code>import json jsonString = json.dumps(yourArray) </code></pre>  <p>and the on the javascript part you do</p>  <pre class=""lang-js prettyprint-override""><code>let jsonString = // the value of jsonString at the end of preceding python snippets let yourArray = JSON.parse(variable) </code></pre>  <p>then use <code>yourArray</code> like you would do with any other js array since it's one of them</p>"
57540443	Loading python TensorFlow Layers models into JavaScript	javascript|python|tensorflow|webpack|tensorflow.js	2019-08-17 22:46:25.857000 UTC	"<p>The core <code>TensorFlow</code> libraries provide the ability to convert a model created in <code>Python</code> to be saved into a <code>JSON</code> file describing the graph and weights to be executed in a browser environment.</p>  <p>In the examples you are required to load the whole <code>TensorFlow</code> library in the browser, which is extremely heavy. Also tree shaking is not available for this library.</p>  <p>My question is: how would I load just the necessary elements from <code>TensorFlow JS</code> into the client/browser to reduce the overall size of my bundled application?</p>  <p>EDIT: We are trying to reduce the over size of the bundled library.</p>"	57560165	"<p>The Tensorflow.js API combines four packages:</p>  <ul> <li><a href=""https://github.com/tensorflow/tfjs/tree/master/tfjs-core"" rel=""nofollow noreferrer"">tfjs-core</a>: Functionality like mathematical functions and backend support</li> <li><a href=""https://github.com/tensorflow/tfjs/tree/master/tfjs-layers"" rel=""nofollow noreferrer"">tfjs-layers</a>: Support of layers to create models (depends on <code>tfjs-core</code>)</li> <li><a href=""https://github.com/tensorflow/tfjs/tree/master/tfjs-data"" rel=""nofollow noreferrer"">tfjs-data</a>: Data handling (depends on <code>tfjs-core</code>)</li> <li><a href=""https://github.com/tensorflow/tfjs/tree/master/tfjs-converter"" rel=""nofollow noreferrer"">tfjs-converter</a>: Support for converting models to Tensorflow.js</li> </ul>  <p>Depending on what tasks exactly you need to perform, it might be sufficent to only use some of the packages. That said, keep in mind that <code>tfjs-layers</code> and <code>tfjs-data</code> require <code>tfjs-core</code> to be imported.</p>  <p><strong>Code Sample</strong></p>  <p>The following lines only import the Core and Layers API:</p>  <pre class=""lang-js prettyprint-override""><code>import * as tfc from '@tensorflow/tfjs-core'; import * as tfl from '@tensorflow/tfjs-layers';  // Examples how to use the APIs const vectr = tfc.tensor(/* .. */); const model = tfl.sequential(); const dense = tfl.layers.dense(/* .. */); </code></pre>  <p>Note that functions like <a href=""https://js.tensorflow.org/api/latest/#matMul"" rel=""nofollow noreferrer""><code>tf.matMul</code></a> are used by calling <code>tfc.matMul</code>, but some functions of the layers API (like <a href=""https://js.tensorflow.org/api/latest/#layers.dense"" rel=""nofollow noreferrer""><code>tf.layers.dense</code></a>) are used by calling <code>tfl.layers.dense</code> while others (like <a href=""https://js.tensorflow.org/api/latest/#sequential"" rel=""nofollow noreferrer""><code>tf.sequential</code></a>) are used by calling <code>tfl.sequential</code>.</p>  <p><strong>Optimization</strong></p>  <p>To give you an idea on the potential optimization, let's look at the numbers:</p>  <pre><code>-------------------------------------- |     Package    |  Size  | Relative | |----------------|--------|----------| | tfjs           |    856 |     100% | | tfjs-core      |    506 |      59% | | tfjs-layers    |    228 |      27% | | tfjs-data      |     52 |       6% | | tfjs-converter |     80 |       9% | -------------------------------------- </code></pre>  <p><sub>Version 1.2.7, Size in KB (of the minified JS file), relative values compared to tfjs</sub></p>  <p>Using <code>tfjs-core</code> and <code>tfjs-layers</code> directly, it is possible to shrink the size by 122 KB or 14%. If you need more than that you can always try to rebuild the repository on your own, removing any unneeded functionality. Of course, this approach would mean a lot of manual work.</p>  <p><strong>Tree Shaking</strong></p>  <p>As you already noticed yourself, tree shaking is currently not supported, but you might want to follow the discussion for <a href=""https://github.com/tensorflow/tfjs/issues/353"" rel=""nofollow noreferrer"">support of tree-shaking</a> in the tfjs github repository regarding that topic.</p>"
57542781	how can I send data from python to javascript?	python|html	2019-08-18 08:09:16.983000 UTC	"<p>I am trying to build a command line tool via Python native, but I am also trying to build a gui-based web technology. How can I send a simple <code>print(""hello world"")</code> to <code>html/css/js</code> pages without using Flask, Jinja, or Django? If it's not possible, what is the best way to handle the server side bot from the gui?</p>"	57542974	"<p>Yes. There is a library in python for this. The package is called <a href=""https://github.com/ChrisKnott/Eel"" rel=""nofollow noreferrer"">Eel</a>, which you can design your GUI in html/css/javascript and have the backend logic in python.</p>  <p>Exposing your python function to your javascript file is extremely easy with this package with the following code,</p>  <pre><code>@eel.expose def my_python_function(a, b):     print(a, b, a + b) </code></pre>  <p>Similarly, any Javascript functions which are exposed like this</p>  <pre><code>eel.expose(my_javascript_function); function my_javascript_function(a, b, c, d) {   if (a &lt; b) {     console.log(c * d);   } } </code></pre>  <p>which can be retrieved in python by</p>  <pre><code>print('Calling Javascript...') eel.my_javascript_function(1, 2, 3, 4)  # This calls the Javascript function </code></pre>"
57548050	"Global Variable in Python, Javascript and C++"	javascript|python|scope|global	2019-08-18 20:14:05.047000 UTC	"<p>I have a quick question regarding variable scopes, I have been previously working with c++, then I came to work with js and python recently and I've noticed something regarding how variables can be used inside functions.</p>  <p>in C++ in order to use/modify a global variable I need to pass if first as an argument, either for printing or changing it's value.</p>  <pre><code>int increment(int); int value = 0;  int main() {     cout &lt;&lt; increment(value) &lt;&lt; endl;     return 0; }  int increment(int value) {     value += 1;      return value; } </code></pre>  <p>and if I happened to define increment parameter-less/argument-less (assuming that it's going to use the global varieble ""value""), i.e. </p>  <pre><code>int increment() {     value += 1;      return value; } </code></pre>  <p>and hence call the function with out passing any arguments <code>cout &lt;&lt; increment() &lt;&lt; endl;</code> , it will give an undefined variable, because the variable being locally used wasn't being introduced (passed) to the function scope, which I totally understand and seems much logical to me.</p>  <p>But in js and python <strong>using a global variable without passing it to the function in the definition first is completely viable</strong> :</p>  <pre><code>// Javascript : access and reassignment are viable var total = 0  function call(){   total++ ;   return total ; }  console.log(call()) // 1 </code></pre>  <pre><code># Python : only access is viable   value  = 0   def inc():     return ""The value is {}"".format(value)  print(inc()) # The value is 0 </code></pre>  <p>I'm just wondering why is it fine with python to allow functions to only access global variables (without even passing them to these functions beforehand) and not to reassign them as well, and where are these global variables and functions' definitions located in memory ?</p>"	57548094	"<p>Buddy you are using a name variable that wasn't defined in your c++ code, i'm talkin about <code>value +=1</code> inside of your increment function, instead of that it should be</p>  <pre><code>void increment(){     num +=1 ; } </code></pre>  <p>The <code>void increment()</code> is because you don't need to return a value because you are modifying a global variable.</p>  <p>Also, when you compile a c++ program the compiler assign a specific zone for your code and your data, look at this <a href=""https://www.ele.uva.es/~jesus/hardware_empotrado/Compiler.pdf"" rel=""nofollow noreferrer"">image</a> and at <a href=""https://www.geeksforgeeks.org/memory-layout-of-c-program/"" rel=""nofollow noreferrer"">this post</a></p>"
57595442	How to call a Python script in a Django server from JavaScript?	javascript|python|django	2019-08-21 16:00:34.087000 UTC	"<p>Salut! </p>  <p>I have a HTML running properly in a Django server, also I have a function in a Python file which send an e-mail. I would like to execute this function when an submit input is clicked. So, how can I call this function using JavaScript?</p>  <p>I've read about using AJAX, but I think that this could be code easily. Am I wrong?</p>"	57597148	"<p>Yes you're right !  With Django you can grab all the post that the user send and do something with these datas.</p>  <p>So for example in mail.html page :</p>  <pre><code>&lt;form method=""post"" enctype=""multipart/form-data""&gt; {% csrf_token %}  Name:&lt;br&gt; &lt;input type=""text"" name=""name""&gt;&lt;br&gt; E-mail:&lt;br&gt; &lt;input type=""text"" name=""mail""&gt;&lt;br&gt; Comment:&lt;br&gt; &lt;input type=""text"" name=""comment"" size=""50""&gt;&lt;br&gt;&lt;br&gt; &lt;input type=""submit"" value=""Send""&gt; &lt;input type=""reset"" value=""Reset""&gt; &lt;/form&gt; </code></pre>  <p>And in views.py :</p>  <pre><code>def send_mail(request):     if request.method == 'POST':         name = request.POST.get('name')         mail = request.POST.get('mail')         comment = request.POST.get('comment')         # YOUR SCRIPT TO SEND MAIL HERE WITH THE VARIABLES     else:          return render(request, 'mail.html') </code></pre>"
57605074	Downloading JavaScript-loaded audio using Python	javascript|python-3.x|selenium|web-scraping|python-requests	2019-08-22 08:26:32.523000 UTC	"<p>I'm trying to write a script to automate the downloading of english audio files from a website, using Python. </p>  <p>The audio plays/loads on click, but I don't know how to ""capture"" the file as it loads and download it. I don't know javascript language.</p>  <p>The website: <a href=""https://context.reverso.net/traduzione/inglese-italiano/pull+the+rug"" rel=""nofollow noreferrer"">https://context.reverso.net/traduzione/inglese-italiano/pull+the+rug</a></p>  <p>For example, the first play button:</p>  <pre><code>&lt;button data-id=""OPENSUBTITLES-2018.EN-IT_13515521"" class=""voice icon  stopped"" title=""Pronuncia"" data-lang=""en""&gt;&lt;/button&gt; </code></pre>  <p>loads this URL:</p>  <p><a href=""https://voice2.reverso.net/RestPronunciation.svc/v1/output=json/GetVoiceStream/voiceName=Heather22k?inputText=cHVsbCB0aGUgcnVnCgoKWW91IGp1c3QgbGV0IGhlciBrbm93IHRoYXQgeW91IGNhbiBwdWxsIHRoZSBydWcu"" rel=""nofollow noreferrer"">https://voice2.reverso.net/RestPronunciation.svc/v1/output=json/GetVoiceStream/voiceName=Heather22k?inputText=cHVsbCB0aGUgcnVnCgoKWW91IGp1c3QgbGV0IGhlciBrbm93IHRoYXQgeW91IGNhbiBwdWxsIHRoZSBydWcu</a></p>  <p>Copying that into the browser, an audio file loads that can be downloaded manually. I want to download it automatically.</p>  <p>Thanks!</p>"	57616385	<p>Resolved. The url inputText is generated encoding in base64 the written translation. </p>
57609706	Href shows different value in browser and it shows `javascript:` in selenium python	python|selenium|xpath|css-selectors|webdriverwait	2019-08-22 12:46:57.260000 UTC	"<p>I am currently working on python where I am supposed to extract all href value data using selenium in python.</p>  <p>When I access the website and check in through developer's tool it shows a proper href  value, but when I do it with selenium using <code>element.get_attribute('href')</code> it prints <code>javascript:</code></p>  <p>Is there a solution to this so I can get the href  value rather than 'javascript:'</p>  <p><img src=""https://i.stack.imgur.com/Rugyx.png"" alt=""This is how it is displayed in browser **(name blacked out for security reasons)**""></p>  <p>Code trials:</p>  <pre><code>driver = webdriver.Firefox(executable_path='geckodriver.exe') driver.get('website Name') a = driver.find_elements_by_class_name('tupData') print(a.get_attribute('href')) </code></pre>  <p>And all it prints is: <strong>javascript:</strong> </p>  <p>Is there a solution so that I can get  the href value rather than javascript: ??</p>"	57610968	"<p>try to find the anchor element which contains the href attribute, rather than the parent element</p>  <pre><code>elements = driver.find_elements_by_xpath(""//*[@class='tupData']//a"")  for element in elements:     print(element.get_attribute('href')) </code></pre>"
57609706	Href shows different value in browser and it shows `javascript:` in selenium python	python|selenium|xpath|css-selectors|webdriverwait	2019-08-22 12:46:57.260000 UTC	"<p>I am currently working on python where I am supposed to extract all href value data using selenium in python.</p>  <p>When I access the website and check in through developer's tool it shows a proper href  value, but when I do it with selenium using <code>element.get_attribute('href')</code> it prints <code>javascript:</code></p>  <p>Is there a solution to this so I can get the href  value rather than 'javascript:'</p>  <p><img src=""https://i.stack.imgur.com/Rugyx.png"" alt=""This is how it is displayed in browser **(name blacked out for security reasons)**""></p>  <p>Code trials:</p>  <pre><code>driver = webdriver.Firefox(executable_path='geckodriver.exe') driver.get('website Name') a = driver.find_elements_by_class_name('tupData') print(a.get_attribute('href')) </code></pre>  <p>And all it prints is: <strong>javascript:</strong> </p>  <p>Is there a solution so that I can get  the href value rather than javascript: ??</p>"	57612067	"<p>You need to reach till the <code>&lt;a&gt;</code> tag to retrieve the <code>href</code> attribute inducing <em>WebDriverWait</em> for the <code>visibility_of_element_located()</code> and you can use either of the following solutions:</p>  <ul> <li><p>Using <code>CSS_SELECTOR</code>:</p>  <pre><code>print(WebDriverWait(driver, 20).until(EC.visibility_of_element_located((By.CSS_SELECTOR, ""a.userName.name[href*='rexdex']""))).get_attribute(""href"")) </code></pre></li> <li><p>Using <code>XPATH</code>:</p>  <pre><code>print(WebDriverWait(driver, 20).until(EC.visibility_of_element_located((By.XPATH, ""//a[@class='userName name' and contains(@href,'rexdex')]""))).get_attribute(""href"")) </code></pre></li> <li><p><strong>Note</strong> : You have to add the following imports :</p>  <pre><code>from selenium.webdriver.support.ui import WebDriverWait from selenium.webdriver.common.by import By from selenium.webdriver.support import expected_conditions as EC </code></pre></li> </ul>"
57613663	Challenge with javascript/jquery $.get and python backend	javascript|python|flask	2019-08-22 16:31:25.390000 UTC	"<p>I have an HTML form to enter a username/password to register for a site.  I am attempting to implement a javascript/JQuery $.get to send an HTTP GET to check if the username is already in use.  On the server side, the ""username"" value (pulled by request.form.get()) is coming back as None.  The javascript source does not seem responsive either on the HTML page.</p>  <p>Javascript as below:</p>  <pre><code>var username = document.getElementById(""username""); var inputForm = document.getElementById(""form"");  document.getElementById(""submit"").addEventListener(""click"", function(event) {              event.preventDefault() });  inputForm.onclick = function(data) {     $.get(""/check?username="" + username.value, function() {         alert(""CHECKING"")         if (data == false) {             inputForm.submit();         }         else {             alert(""Sorry - that username is taken!"");         }     }); }; </code></pre>  <p>Python (Flask) on backend as follows:</p>  <pre><code>@app.route(""/check"", methods=[""GET""]) def check(): """"""Return true if username available, else false, in JSON format""""""  print(""***RUNNING CHECK***"") # get username from web form username = request.form.get(""username"") print(username)  # check that username is longer than 1, then pull list from DB to check against if len(username) &gt; 1:     usernames = db.execute(""SELECT username FROM users"")  # return false if username is available if username in usernames:     return jsonify(False)  # return true if username is NOT available else:     return jsonify(True) </code></pre>  <p>This is what comes back:</p>  <p>TypeError: object of type 'NoneType' has no len() INFO:werkzeug:192.168.179.21 - - [22/Aug/2019 16:20:41] ""GET /check?username=ajd HTTP/1.0"" 500 -</p>"	57613940	"<p>The client side issue that I can see are...</p>  <ul> <li>Checking the Javascript console will probably tell you that <code>data</code> is undefined. If should be added as a parameter to the callback function.</li> <li>You need to escape the get paramters with <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/encodeURIComponent"" rel=""nofollow noreferrer""><code>encodeURIComponenet</code></a>.</li> <li>You probably want to run this code when the input is received than when the form is clicked on.</li> </ul>  <pre><code>username.oninput = function(data) {   $.get(""/check?username="" + encodeURIComponenet(username.value), function(data) {     alert(""CHECKING"")     if (data == false) {       inputForm.submit();     } else {       alert(""Sorry - that username is taken!"");     }   }); }; </code></pre>"
57631543	How to send AJAX request from Javascript/React and receive data in Python REST API	javascript|python|ajax|rest|flask	2019-08-23 18:44:29.010000 UTC	"<p>I have my front end code written in react. I have a simple for where a user can fill out their name, title, department, and other basic string fields like that. When the user hits submit I have my javascript create an AJAX request to my REST API written in python+flask. When the request comes in however there is no data associated with the request. </p>  <p>I have tried printing every combination of the request object in python, but each comes back as either None, '', or an empty byte string. </p>  <p>react code:</p>  <pre><code>class AddPage extends React.Component {     constructor(props) {         super(props);         this.state = {             name: """",         }         this.handleInputChange = this.handleInputChange.bind(this);         this.handleSubmit = this.handleSubmit.bind(this);     }      handleSubmit(event) {         const Http = new XMLHttpRequest();         const url = '/api';         Http.open(""POST"", url);         Http.setRequestHeader(""Content-type"", ""application/json"");         Http.send(this.state);          Http.onreadystatechange = e =&gt; {             window.location.replace(""/add"");         }     }      handleInputChange(event) {         const target = event.target;         const targetName = event.target.name;         const value = target.value;          this.setState({             [targetName]: value,         });     }      render() {         return (             &lt;form onSubmit={this.handleSubmit} id=""addUser""&gt;                 &lt;label&gt;                 Name:                 &lt;input type=""text"" name=""name"" onChange={this.handleInputChange} /&gt;                 &lt;/label&gt;             &lt;/form&gt;         )     } } </code></pre>  <p>Python REST API</p>  <pre><code>from flask_classful import FlaskView, route from flask import Flask, jsonify, request  class API(FlaskView):     route_base = '/api'      def post(self):         if request.headers['Content-Type'] == 'application/json':             print(""before"")             posted_data = request.get_json()             print(""after"")             print(posted_data) </code></pre>  <p>The before gets printed, but not the after or posted data. When I run that code as is by just returning 'Done' I get this in the server log </p>  <p><code>before [pid: 32472|app: 0|req: 12/12] 127.0.0.1 () {46 vars in 739 bytes} [Fri Aug 23 13:35:32 2019] POST /api/ =&gt; generated 192 bytes in 1 msecs (HTTP/1.1 400) 2 headers in 74 bytes (1 switches on core 0)</code> So I know it receives the POST request properly, but I am unable to get the data.</p>"	57631728	<p>You need to get the data out of the request object inside your Flask service's method</p>  <pre><code>def post(self):     if request.headers['Content-Type'] == 'application/json':         posted_data = request.get_json()         print(posted_data) </code></pre>
57638995	Python selenium how to execute execute_script on a JavaScript element with arguments	javascript|python|selenium|selenium-webdriver|selenium-chromedriver	2019-08-24 14:47:26.647000 UTC	"<p>I'm trying to download documents from a website. When I inspect the element in my browser, this is what I get:</p>  <pre><code>&lt;td width=""3%"" align=""left"" id=""tdvPDF0"" colspan=""3""&gt; &lt;a href=""#"" onclick=""javaScript:downloadClicked('JRAOB2SNRXEAPX2', 0, 'PDF'); return false;"" onmouseover=""window.status='CTNF'; return true"" onmouseout=""window.status=''; return true""&gt;PDF&lt;/a&gt; /&amp;nbsp; &lt;a href=""#"" onclick=""javaScript:downloadClicked('JRAOB2SNRXEAPX2', 0, 'XML_LINK'); return false;"" onmouseover=""window.status='CTNF'; return true"" onmouseout=""window.status=''; return true""&gt;XML&lt;/a&gt; /&amp;nbsp; &lt;a href=""#"" onclick=""javaScript:downloadClicked('JRAOB2SNRXEAPX2', 0, 'DOCX'); return false;"" onmouseover=""window.status='CTNF'; return true"" onmouseout=""window.status=''; return true""&gt;DOCX&lt;/a&gt; &lt;/td&gt; </code></pre>  <p>I would like download all three documents, i.e. the PDF, XML, and DOCX. This JavaScript can accept three arguments. In this case they are: 1. JRAOB2SNRXEAPX2 (string) 2. 0 (integer) 3. PDF (string)</p>  <p>I have no idea of how to ascertain the correct input for the first argument (in this example: ""JRAOB2SNRXEAPX2"")</p>  <p>I would like to have my code work regardless of the first argument.</p>  <p>Previously, when I've encountered JavaScript functions I used the following:</p>  <pre class=""lang-py prettyprint-override""><code>driver.execute_script(name_of_JavaScript_script()) </code></pre>  <p>that would generally work, however I have never encountered a JavaScript with arguments as in this case, e.g. downloadClicked('JRAOB2SNRXEAPX2', 0, 'PDF')</p>  <p>I tried the following without success: </p>  <pre class=""lang-py prettyprint-override""><code>driver.execute_script(downloadClicked('JRAOB2SNRXEAPX2', 0, 'PDF')) driver.execute_script(downloadClicked(''JRAOB2SNRXEAPX2', 0, 'PDF'')) driver.execute_script(downloadClicked('JRAOB2SNRXEAPX2', 0, 'PDF')); return false; </code></pre>  <p>and many other similar options.</p>  <p>I've also tried:</p>  <pre class=""lang-py prettyprint-override""><code>javascript = driver.find_element_by_id('tdvPDF0').click() driver.execute_script(javascript) </code></pre>  <p>In addition I've tried:</p>  <pre class=""lang-py prettyprint-override""><code>driver.find_element_by_id('tdvPDF0').click() </code></pre>  <p>The code for the function currently looks like this:</p>  <pre class=""lang-py prettyprint-override""><code>def private_pair_ifw_downloader(driver, application_number, pause=1):     private_pair_enter_application(driver, application_number)     time.sleep(pause)     driver.execute_script('submitTab(""ifwtab"")')     time.sleep(pause)      driver.execute_script('""javaScript:downloadClicked(''JRAOB2SNRXEAPX2', 0, 'PDF''); return false;""') </code></pre>  <p>I expect for the code to invoke the JavaScript function which in turn should download the PDF file however, I received the following error:</p>  <p>Traceback (most recent call last):   File ""C:/Workspaces/patents_repo/USPTO_scraper/uspto_private_pair_scraper.py"", line 41, in      private_pair_ifw_downloader(driver, '15723211')   File ""C:\Workspaces\patents_repo\utils\web_utils.py"", line 211, in private_pair_ifw_downloader     driver.execute_script('""javaScript:downloadClicked(''JRAOB2SNRXEAPX2', 0, 'PDF''); return false;""')   File ""C:\Users\eitan\Anaconda3\lib\site-packages\selenium\webdriver\remote\webdriver.py"", line 636, in execute_script     'args': converted_args})['value']   File ""C:\Users\eitan\Anaconda3\lib\site-packages\selenium\webdriver\remote\webdriver.py"", line 321, in execute     self.error_handler.check_response(response)   File ""C:\Users\eitan\Anaconda3\lib\site-packages\selenium\webdriver\remote\errorhandler.py"", line 242, in check_response     raise exception_class(message, screen, stacktrace) selenium.common.exceptions.WebDriverException: Message: unknown error: Runtime.evaluate threw exception: SyntaxError: Unexpected identifier   (Session info: chrome=76.0.3809.100)</p>"	57640486	"<p>All you have to do is wrap your input to execute_script in double quotes.</p>  <pre><code>driver.execute_script(""downloadClicked('JRAOB2SNRXEAPX2', 0, 'PDF');"") </code></pre>"
57638995	Python selenium how to execute execute_script on a JavaScript element with arguments	javascript|python|selenium|selenium-webdriver|selenium-chromedriver	2019-08-24 14:47:26.647000 UTC	"<p>I'm trying to download documents from a website. When I inspect the element in my browser, this is what I get:</p>  <pre><code>&lt;td width=""3%"" align=""left"" id=""tdvPDF0"" colspan=""3""&gt; &lt;a href=""#"" onclick=""javaScript:downloadClicked('JRAOB2SNRXEAPX2', 0, 'PDF'); return false;"" onmouseover=""window.status='CTNF'; return true"" onmouseout=""window.status=''; return true""&gt;PDF&lt;/a&gt; /&amp;nbsp; &lt;a href=""#"" onclick=""javaScript:downloadClicked('JRAOB2SNRXEAPX2', 0, 'XML_LINK'); return false;"" onmouseover=""window.status='CTNF'; return true"" onmouseout=""window.status=''; return true""&gt;XML&lt;/a&gt; /&amp;nbsp; &lt;a href=""#"" onclick=""javaScript:downloadClicked('JRAOB2SNRXEAPX2', 0, 'DOCX'); return false;"" onmouseover=""window.status='CTNF'; return true"" onmouseout=""window.status=''; return true""&gt;DOCX&lt;/a&gt; &lt;/td&gt; </code></pre>  <p>I would like download all three documents, i.e. the PDF, XML, and DOCX. This JavaScript can accept three arguments. In this case they are: 1. JRAOB2SNRXEAPX2 (string) 2. 0 (integer) 3. PDF (string)</p>  <p>I have no idea of how to ascertain the correct input for the first argument (in this example: ""JRAOB2SNRXEAPX2"")</p>  <p>I would like to have my code work regardless of the first argument.</p>  <p>Previously, when I've encountered JavaScript functions I used the following:</p>  <pre class=""lang-py prettyprint-override""><code>driver.execute_script(name_of_JavaScript_script()) </code></pre>  <p>that would generally work, however I have never encountered a JavaScript with arguments as in this case, e.g. downloadClicked('JRAOB2SNRXEAPX2', 0, 'PDF')</p>  <p>I tried the following without success: </p>  <pre class=""lang-py prettyprint-override""><code>driver.execute_script(downloadClicked('JRAOB2SNRXEAPX2', 0, 'PDF')) driver.execute_script(downloadClicked(''JRAOB2SNRXEAPX2', 0, 'PDF'')) driver.execute_script(downloadClicked('JRAOB2SNRXEAPX2', 0, 'PDF')); return false; </code></pre>  <p>and many other similar options.</p>  <p>I've also tried:</p>  <pre class=""lang-py prettyprint-override""><code>javascript = driver.find_element_by_id('tdvPDF0').click() driver.execute_script(javascript) </code></pre>  <p>In addition I've tried:</p>  <pre class=""lang-py prettyprint-override""><code>driver.find_element_by_id('tdvPDF0').click() </code></pre>  <p>The code for the function currently looks like this:</p>  <pre class=""lang-py prettyprint-override""><code>def private_pair_ifw_downloader(driver, application_number, pause=1):     private_pair_enter_application(driver, application_number)     time.sleep(pause)     driver.execute_script('submitTab(""ifwtab"")')     time.sleep(pause)      driver.execute_script('""javaScript:downloadClicked(''JRAOB2SNRXEAPX2', 0, 'PDF''); return false;""') </code></pre>  <p>I expect for the code to invoke the JavaScript function which in turn should download the PDF file however, I received the following error:</p>  <p>Traceback (most recent call last):   File ""C:/Workspaces/patents_repo/USPTO_scraper/uspto_private_pair_scraper.py"", line 41, in      private_pair_ifw_downloader(driver, '15723211')   File ""C:\Workspaces\patents_repo\utils\web_utils.py"", line 211, in private_pair_ifw_downloader     driver.execute_script('""javaScript:downloadClicked(''JRAOB2SNRXEAPX2', 0, 'PDF''); return false;""')   File ""C:\Users\eitan\Anaconda3\lib\site-packages\selenium\webdriver\remote\webdriver.py"", line 636, in execute_script     'args': converted_args})['value']   File ""C:\Users\eitan\Anaconda3\lib\site-packages\selenium\webdriver\remote\webdriver.py"", line 321, in execute     self.error_handler.check_response(response)   File ""C:\Users\eitan\Anaconda3\lib\site-packages\selenium\webdriver\remote\errorhandler.py"", line 242, in check_response     raise exception_class(message, screen, stacktrace) selenium.common.exceptions.WebDriverException: Message: unknown error: Runtime.evaluate threw exception: SyntaxError: Unexpected identifier   (Session info: chrome=76.0.3809.100)</p>"	57642384	"<p>If you don't know the string you can try something like:</p>  <pre><code>driver.execute_script('document.querySelector(""a[onclick*=PDF]"").onclick()') </code></pre>"
57717970	In python I can write myarray[:3] to address elements of a list.Is it possible in javascript or node?	javascript|python|arrays|programming-languages	2019-08-29 21:34:36.250000 UTC	"<p>I just don't find how to ""translate"" to javascript</p>  <p>Using node 12.9.0.</p>  <pre><code>#in python l = [1,2,3] l = l[1:] #This is tail l = l[:: -1] #For some reason this reverses the list </code></pre>"	57717990	"<p>To get the ""tail"":</p>  <pre><code>l = l.slice(1); </code></pre>  <p>To get the ""top"":</p>  <pre><code>l = l.slice(0, 3); // Equivalent to l = l[:3] </code></pre>  <p>To reverse:</p>  <pre><code>l = l.reverse(); </code></pre>"
57730100	Translate a Javascript function to Python	javascript|python-3.x	2019-08-30 16:09:49.097000 UTC	"<p>I'am newbie in Python and i'am having a hard time trying to translate this Javascript arrow function into Python. I'am not able to make the part where i use substring in JS to get the next 3 values in my loop when i find '\x1D'. Any tips or suggestions ?</p>  <pre><code>module.exports = edi =&gt; {   let decompressedEdi = ''   let lastCompressor = 0   for (let i = 0; i &lt;= edi.length; i++) {     if (edi[i] === '\x1D') {       let decimal = parseInt(edi.substring(i + 1, i + 3), 16)       let repeater = edi[i + 3]       decompressedEdi +=         edi.substring(lastCompressor, i) + repeater.repeat(decimal)       lastCompressor = i + 4     }   }   decompressedEdi += edi.substring(lastCompressor, edi.length)   return decompressedEdi.replace(/(\r\n|\n|\r)/gm, '') } </code></pre>"	57730175	"<p>In python, strings can be sliced like arrays :</p>  <pre><code>for i, c in enumerate(edi):   if c == '\x1D':     decimal = int(edi[i+1:i+3], 16) </code></pre>  <p>The int function has the following signature: int(str, base)</p>"
57730100	Translate a Javascript function to Python	javascript|python-3.x	2019-08-30 16:09:49.097000 UTC	"<p>I'am newbie in Python and i'am having a hard time trying to translate this Javascript arrow function into Python. I'am not able to make the part where i use substring in JS to get the next 3 values in my loop when i find '\x1D'. Any tips or suggestions ?</p>  <pre><code>module.exports = edi =&gt; {   let decompressedEdi = ''   let lastCompressor = 0   for (let i = 0; i &lt;= edi.length; i++) {     if (edi[i] === '\x1D') {       let decimal = parseInt(edi.substring(i + 1, i + 3), 16)       let repeater = edi[i + 3]       decompressedEdi +=         edi.substring(lastCompressor, i) + repeater.repeat(decimal)       lastCompressor = i + 4     }   }   decompressedEdi += edi.substring(lastCompressor, edi.length)   return decompressedEdi.replace(/(\r\n|\n|\r)/gm, '') } </code></pre>"	57730255	"<pre class=""lang-py prettyprint-override""><code>from re import sub  def decompress(edi):     decompressed = """"     last_compressor = 0      for i, c in enumerate(edi):         if c == ""\x1D"":             repetitions = int(edi[i + 1: i + 3], 16)             repeating_char = edi[i + 3]              decompressed += edi[last_compressor:i] + repeating_char * repetitions             last_compressor = i + 4      decompressed += edi[last_compressor:-1]      return sub(""\r\n|\n|\r"", decompressed) </code></pre>  <hr>  <h2>How I read the code</h2>  <blockquote>   <p>Feel free to ignore this bit, but it might help.</p> </blockquote>  <p>Given <code>edi</code> which has a <code>len</code>, for each <code>edi</code> that matches <code>\x1D</code>, get the substring of <code>edi</code> from the <code>index + 1</code> to <code>index + 3</code> as a hexadecimal integer as set as <code>decimal</code>. The <code>repeater</code> is the <code>index + 3</code>'th element of <code>edi</code> for each element and it is expected to be a <code>str</code>. It will be repeated the hexadecimal number of times defined in <code>decimal</code>, but only after the substring of <code>edi</code> from <code>lastCompressor</code> to the current index. On each iteration where <code>\x1D</code> is matched, the <code>lastCompressor</code> is increased by 4.</p>"
57733882	Python code inside javascript is not recognized for visual studio code	javascript|python-3.7	2019-08-30 22:42:36.260000 UTC	"<p>I have some JS code inside an HTML file as <code>&lt;script&gt;&lt;/script&gt;</code>, but the back end calculations are made by python, in <strong>pycharm</strong>, this py code is recognized and working well, but in vs code is detected as an issue:</p>  <blockquote>   <p>'(' expected. <em>js</em></p> </blockquote>  <p>My question is, why is VS code detecting this as an error and how can I fix it?</p>  <pre><code>&lt;script&gt;     document.getElementById(""switch"").style.visibility = ""hidden"";     document.getElementById(""stay"").style.visibility = ""hidden"";          {% if error %}             #this code is python, not JS             alert('{ error }')         {% endif %}      var clicked = false;     var randomize = Math.random(1,4);      function shuffle(array) {         var currentIndex = array.length, temporaryValue, randomIndex; </code></pre>  <p><a href=""https://i.stack.imgur.com/hXwkz.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/hXwkz.png"" alt=""VS code screen""></a></p>"	57733904	"<p>It looks like you are using Jinja2 (or Django) templates. You need to have a plugin installed in Visual Studio Code to handle these templates.</p>  <p>There are a couple of choices but this is actively maintained:</p>  <p><a href=""https://marketplace.visualstudio.com/items?itemName=samuelcolvin.jinjahtml"" rel=""nofollow noreferrer"">https://marketplace.visualstudio.com/items?itemName=samuelcolvin.jinjahtml</a></p>"
57775463	How to execute Python code from Javascript for dummies	javascript|python|ajax|xmlhttprequest	2019-09-03 16:20:14.893000 UTC	"<p>I'm looking for an answer to this question that frames the issue for someone who doesn't really understand http requests and is attempting this for the first time.</p>  <p>I wanted to make a simple html web application for running an online experiment. Right now we don't have a server and we're just trying to make a prototype that functions on a local machine offline. I'm using a javascript framework for behavioral experiments that makes things easier, but I have this block of code indicating that want a python script called ""create_stimuli.py"" to execute its main function upon finishing the trial. I was hoping to pass one parameter collected from a form, the number of trials, to this python script.</p>  <pre><code>    var creating_stimuli = {     type: ""html-keyboard-response"",     stimulus: ""&lt;p&gt;Stimuli for this trial will be initialized upon continuing and experiment session with user will begin&lt;/p&gt;"" +              ""&lt;p&gt;Closing the tab or window for this experiment will result in data loss. Reaction times will be measured&lt;/p&gt;"",     prompt: ""press any key to continue"",     on_finish: function(data){         $.ajax({             url: ""/Scripts/create_stimuli.py"",             type: ""POST"",             //I do need to pass in a parameter             success: function(response) {                 //manipulate response variable here             }         })     } } </code></pre>  <p>My python file doesn't have any special conventions at the moment, it's just like a regular python program - it just has some import statements at the top. I'm not sure if I need something else.</p>  <p>The error message I get for executing this javascript is the following. jquery.min.js:2 Access to XMLHttpRequest at 'file:///D:/Scripts/create_stimuli.py' from origin 'null' has been blocked by CORS policy: Cross origin requests are only supported for protocol schemes: http, data, chrome, chrome-extension, https.</p>  <p>I genuinely don't quite understand what this error message means, though I can at least take the hint that I wasn't using protocol schemes correctly at all. And I'm not sure how to edit my javascript code to get it in the right direction.</p>  <p>From google searching, I find approaches that use Flask, AJAX, XMLHttpRequests, CGI and other approaches... Other than the fact that I need AJAX, I can't tell which tools I actually need to accomplish. Do I really need a whole web development framework like Flask just to execute a python script from Javascript?</p>"	57847004	"<p>Here's how you do it. This will give a quickstart for anyone intending to do behavioral experiments in JsPsych. The following code will allow you to pass in js variables using an AJAX call from Javascript to a python script. This logs a variable for number of trials in the console. if calling the script fails, an alert box is shown instead.</p>  <p>These links are helpful, particularly becasue the first talks about the potential importance of using an <code>__init__.py</code> script and organizing flask in a more modular way like how flask  documentation actually does <a href=""https://blog.miguelgrinberg.com/post/the-flask-mega-tutorial-part-xv-a-better-application-structure"" rel=""nofollow noreferrer"">https://blog.miguelgrinberg.com/post/the-flask-mega-tutorial-part-xv-a-better-application-structure</a></p>  <p>It is best to create a simple <code>__init__.py</code> that can reliably boot/work without bugs. Your <code>__init__.py</code> program probably need to be able to be able to handle the url request of ""/"", the home page for your app. <code>__init__.py</code> also needs to register the blueprint variable created for whatever python program you intend to execute ""remotely"" from javascript/via AJAX. In that Here's what that <code>__init__.py</code> function might look like.</p>  <pre><code>    import os     from flask import Flask     from flask import (         Blueprint, flash, g, redirect, render_template, request, session, url_for     )      def create_app(test_config=None):     # create and configure the app     app = Flask(__name__, instance_relative_config=True) # creates the flask instance     app.config.from_mapping(         SECRET_KEY='dev',     )      if test_config is None:         # load the instance config, if it exists, when not testing         app.config.from_pyfile('config.py', silent=True)     else:         # load the test config if passed in         app.config.from_mapping(test_config)      # ensure the instance folder exists     try:         os.makedirs(app.instance_path)     except OSError:         pass     from . import experiment // from '.' or this current directory, import the python program/module entitled ""experiment.py""     app.register_blueprint(experiment.bp) // register the blueprint variable created in experiment.py       app.add_url_rule('/', endpoint='index') //requests the url associated with '/'        return app </code></pre>  <p>I created a python program called experiment.py, it lives in the same directory as <code>__init__.py</code>. Both of these scripts are at the topmost level of this flask application directory structure, I'm following the structure in the blog post I included (and again, what's in Flask documentation) <code>experiment.py</code> servers the same purpose as <code>app.py</code>, which is what people used to commonly refer to scripts containing view functions/python code to execute (if I got the terminology right)</p>  <p>Anyways, experiment.py needs to use <code>blueprint.route('/url_path')</code> to mount python ""view functions"" to particular urls that can be requested. You also need to return ""render_template('index.html')"" to return the html for the homepage (but you technically can return anything else.</p>  <p>This is what <code>experiment.py</code> looks like</p>  <pre><code>        import functools  from flask import (     Blueprint, flash, g, redirect, render_template, request, session, url_for ) from werkzeug.security import check_password_hash, generate_password_hash      bp= Blueprint('experiment', __name__)      @bp.route('/')     def index():         return render_template(""index.html"")       @bp.route('/testing', methods=['GET', 'POST']) def testing_func():        trial_num = request.form['trials']     return trial_num   </code></pre>  <p>In your jS script, if you just use an AJAX script containing a dictionary/JSON dictionary, it gets embedded into a flask request object in the ""form"" parameter as form data. You can access data parameterized in a field, ""data"" (that lives in the AJAX script) in python using request.form['key_name']</p>  <p>For JS (and if you're using the jspsych framework, the AJAX request might look like.</p>  <pre><code>    var creating_stimuli = {         type: ""html-keyboard-response"",         stimulus: ""&lt;p&gt;Stimuli for this trial will be initialized upon continuing and experiment session with user will begin&lt;/p&gt;"" +                  ""&lt;p&gt;Closing the tab or window for this experiment will result in data loss. Reaction times will be measured&lt;/p&gt;"",         prompt: ""press any key to continue"",         on_finish: function(data){         $.ajax({         type: ""POST"", // declaring AJAX post request         url: ""/testing"", //Needs to go to the url mounted         data: {           trials:100         },         success: function(response) {           console.log(response);         },         error: function(xhr, textStatus, thrownError) {           alert('err');         }       });         }     }      timeline_arr.push(creating_stimuli); </code></pre>"
57798609	Javascript can load Python pickle dumped string but not file	python|node.js|pickle	2019-09-05 04:50:55.453000 UTC	"<p>Please see the following test code, I can use jpickle library to decode the Python pickle dumped string back.</p>  <pre><code>(base):~/python  Python 3.7.3 (default, Mar 27 2019, 16:54:48)  [Clang 4.0.1 (tags/RELEASE_401/final)] :: Anaconda, Inc. on darwin Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. &gt;&gt;&gt; import pickle &gt;&gt;&gt; pickle.dumps('Hello Python!') b'\x80\x03X\r\x00\x00\x00Hello Python!q\x00.' &gt;&gt;&gt;  (base)~$ node &gt; const jpickle = require('jpickle'); undefined &gt; jpickle.loads('\x80\x03X\r\x00\x00\x00Hello Python!q\x00.') 'Hello Python!' </code></pre>  <p>While when I am trying to write the pickled string to a file, I cannot load it back in nodejs. what's my mistake here? Thank you!</p>  <p>python code:</p>  <pre><code>import pickle with open('test.dat', 'wb') as fout:     pickle.dump('Hello Python!', fout) </code></pre>  <p>JS:</p>  <pre><code>const fs = require('fs'); const jpickle = require('jpickle'); const binary = fs.readFileSync('test.dat'); const data = jpickle.loads(binary) console.log(data) </code></pre>  <p>error msg:</p>  <pre><code>node_modules/jpickle/lib/jpickle.js:341             throw ""Unhandled opcode '"" + opcode + ""'"";             ^ Unhandled opcode '128' </code></pre>  <p>jpickle in package.json, need to be installed from GitHub, which is the latest version:</p>  <pre><code>    ""jpickle"": ""git+https://github.com/jlaine/node-jpickle.git""   } </code></pre>"	57809299	"<p>This seems worked for me. Thank <a href=""https://stackoverflow.com/users/18771/tomalak"">Tomalak</a> for the input.</p>  <pre><code>const binary = fs.readFileSync('test.dat', ""binary""); </code></pre>  <p>while this solution seems block the process...</p>"
57826485	How to make a custom GET request from JavaScript onClick in Python Selenium	python|selenium|web-scraping|python-requests	2019-09-06 17:43:01.910000 UTC	"<p><img src=""https://i.paste.pics/40c22d6a0e5fa5a511a77decbf1f294a.png"" alt=""Reference image""></p>  <p>Imports</p>  <pre><code>import pandas as pd from bs4 import BeautifulSoup from selenium import webdriver from selenium.webdriver.common.keys import Keys import requests from time import sleep </code></pre>  <p>Open the page</p>  <pre><code>driver = webdriver.Chrome() main_url = 'https://www.samsung.com/ph/storelocator/' driver.get(main_url) driver.execute_script(""window.scrollTo(0, 500)"") sleep(1) driver.find_element_by_class_name('cm-cookie-geo__close-cta').click() </code></pre>  <p>If I just GET the Request URL shown by the red arrow and replace the parameters with my desired parameters (change nradius=7), plain HTML is returned.</p>  <p>How can I get it to instead update the listing on the left panel like it would if I click the 10km button (except for 7km)?</p>  <p>I have tried using cookies as suggested <a href=""https://stackoverflow.com/questions/42087985/python-requests-selenium-passing-cookies-while-logging-in"">here</a> like this (without success):</p>  <pre><code># storing the cookies generated by the browser request_cookies_browser = driver.get_cookies()  params = {     'nRadius': 7,     'latitude': 14.607538,     'longitude': 121.020967,     'searchFlag': 'search',     'modelCode': '',     'categorySubTypeCode': '',     'localSearchCallYn': 'N' } s = requests.Session()  # passing the cookies generated from the browser to the session c = [s.cookies.set(c['name'], c['value']) for c in request_cookies_browser]  resp = s.post(main_url, params) # I get a 200 status_code  # passing the cookie of the response to the browser dict_resp_cookies = resp.cookies.get_dict() response_cookies_browser = [{'name':name, 'value':value} for name, value in dict_resp_cookies.items()] c = [driver.add_cookie(c) for c in response_cookies_browser]  driver.get(main_url) </code></pre>  <p>Edit 1: I am trying to get the latitude and longitude which aren't available through that GET url. It can be found on the main page with</p>  <pre><code>soup = BeautifulSoup(driver.page_source, 'lxml') latitude = soup.find('ul', {'id':'store-list'}).find_all('li').find('input', {'class':'lat','type':'hidden'})['value'] </code></pre>"	57826869	"<p>Looking at the page, it seems like you may be better off scraping the html for elements where the distance attribute is less than or equal to 7. This is because it seems like the website only has specific parameters for nradius when returning a search of stores on the map (ie. only allows 1, 2, 5, and 10 km). </p>  <p>The way that it works is it finds your location and finds all locations less than 10 km (regardless of what distance you have selected). It then displays the locations on the map based off of the distance you have selected (nradius' provided). All of the stores &lt;10km away are still listed in the html though.</p>  <p>However I've never done exactly what you're doing, so it could be something else. If you think that it is passing the cookies/headers between selenium and requests that is messing you up, you should check out the selenium-requests python package, which was developed to automatically handle needed cookie and request headers. </p>  <p>Good Luck!</p>"
57826485	How to make a custom GET request from JavaScript onClick in Python Selenium	python|selenium|web-scraping|python-requests	2019-09-06 17:43:01.910000 UTC	"<p><img src=""https://i.paste.pics/40c22d6a0e5fa5a511a77decbf1f294a.png"" alt=""Reference image""></p>  <p>Imports</p>  <pre><code>import pandas as pd from bs4 import BeautifulSoup from selenium import webdriver from selenium.webdriver.common.keys import Keys import requests from time import sleep </code></pre>  <p>Open the page</p>  <pre><code>driver = webdriver.Chrome() main_url = 'https://www.samsung.com/ph/storelocator/' driver.get(main_url) driver.execute_script(""window.scrollTo(0, 500)"") sleep(1) driver.find_element_by_class_name('cm-cookie-geo__close-cta').click() </code></pre>  <p>If I just GET the Request URL shown by the red arrow and replace the parameters with my desired parameters (change nradius=7), plain HTML is returned.</p>  <p>How can I get it to instead update the listing on the left panel like it would if I click the 10km button (except for 7km)?</p>  <p>I have tried using cookies as suggested <a href=""https://stackoverflow.com/questions/42087985/python-requests-selenium-passing-cookies-while-logging-in"">here</a> like this (without success):</p>  <pre><code># storing the cookies generated by the browser request_cookies_browser = driver.get_cookies()  params = {     'nRadius': 7,     'latitude': 14.607538,     'longitude': 121.020967,     'searchFlag': 'search',     'modelCode': '',     'categorySubTypeCode': '',     'localSearchCallYn': 'N' } s = requests.Session()  # passing the cookies generated from the browser to the session c = [s.cookies.set(c['name'], c['value']) for c in request_cookies_browser]  resp = s.post(main_url, params) # I get a 200 status_code  # passing the cookie of the response to the browser dict_resp_cookies = resp.cookies.get_dict() response_cookies_browser = [{'name':name, 'value':value} for name, value in dict_resp_cookies.items()] c = [driver.add_cookie(c) for c in response_cookies_browser]  driver.get(main_url) </code></pre>  <p>Edit 1: I am trying to get the latitude and longitude which aren't available through that GET url. It can be found on the main page with</p>  <pre><code>soup = BeautifulSoup(driver.page_source, 'lxml') latitude = soup.find('ul', {'id':'store-list'}).find_all('li').find('input', {'class':'lat','type':'hidden'})['value'] </code></pre>"	57828806	"<p>You can make a simple get request with requests and then parse with beautiful soup. The reason your code in the edit isn't working is because the html through the get request is formatted differently. The following worked for me.</p>  <h1>Code</h1>  <pre class=""lang-py prettyprint-override""><code>import requests from bs4 import BeautifulSoup  params = {     'nRadius': 7,     'latitude': 14.601026,     'longitude': 120.984192,     'searchFlag': 'search',     'modelCode': None,     'categorySubTypeCode': None,     'localSearchCallYn': 'N', } url = 'https://www.samsung.com/ph/storelocator/_jcr_content/par.cm-g-store-locator-storelist/' r = requests.get(url, params=params) soup = BeautifulSoup(r.text, 'html.parser')  for item_holder in soup.find_all('li'):     name = item_holder.find('h2', {'class': 'store-name'}).text     lat = item_holder.find('input', {'class': 'lat', 'type': 'hidden'})['value']     long = item_holder.find('input', {'class': 'long', 'type': 'hidden'})['value']     print('\n' + name)     print(lat, long)  </code></pre>  <h1>Output (partial)</h1>  <pre><code>WESTERN APPLIANCE - RECTO 14.604366 120.97991  ANSONS - BINONDO 14.6015268 120.97605479999993  SM APPLIANCE CENTER INC. - LUCKY CHINA TOWN 14.6031205 120.9741785  SM APPLIANCE CENTER INC. - MANILA 14.5904064 120.9830574 </code></pre>"
57849103	Javascript to input value into textbox instead of sendKeys() in Python	javascript|python|selenium	2019-09-09 06:53:23.080000 UTC	"<p>I cant use <code>send_Keys()</code> method to input values in the current website im working on. So im trying to use javascript to input values.</p>  <p>i tried <code>click()</code> and <code>clear()</code> together with <code>send_keys()</code> before i decided to use javascript but to my disappointment, it didnt work.</p>  <p>i use the javascript code to input value below</p>  <pre><code>driver.execute_script(""document.getElementById('CustCd').setAttribute('value', 'J590')"") </code></pre>  <p>and it worked.</p>  <p>But currently my code is inside a loop and the value changes, how can i replace <code>J590</code> with a variable that gets the value?</p>  <p>Here is the code that i tried</p>  <pre><code>ccr_No = XLUtlis.readData(path, 'ccr', r, 1) driver.execute_script(""document.getElementById('CCRNo').value=ccr_No"") </code></pre>  <p>I know its wrong, any help would be appreciated. My Javascript is weak.</p>  <p>Just some side note if anybody would be able to solve my <code>send_keys()</code> error. The function only takes in the first character that i send. For example, <code>send_keys(""J590"")</code> gives <code>J</code>, <code>send_keys(""J590-TE21"")</code> gives <code>J-</code></p>"	57849167	"<p>You need to insert the variable as variable, not literal</p>  <pre><code>value = 'J590' driver.execute_script(f""document.getElementById('CustCd').setAttribute('value', '{value}')"") </code></pre>"
57849103	Javascript to input value into textbox instead of sendKeys() in Python	javascript|python|selenium	2019-09-09 06:53:23.080000 UTC	"<p>I cant use <code>send_Keys()</code> method to input values in the current website im working on. So im trying to use javascript to input values.</p>  <p>i tried <code>click()</code> and <code>clear()</code> together with <code>send_keys()</code> before i decided to use javascript but to my disappointment, it didnt work.</p>  <p>i use the javascript code to input value below</p>  <pre><code>driver.execute_script(""document.getElementById('CustCd').setAttribute('value', 'J590')"") </code></pre>  <p>and it worked.</p>  <p>But currently my code is inside a loop and the value changes, how can i replace <code>J590</code> with a variable that gets the value?</p>  <p>Here is the code that i tried</p>  <pre><code>ccr_No = XLUtlis.readData(path, 'ccr', r, 1) driver.execute_script(""document.getElementById('CCRNo').value=ccr_No"") </code></pre>  <p>I know its wrong, any help would be appreciated. My Javascript is weak.</p>  <p>Just some side note if anybody would be able to solve my <code>send_keys()</code> error. The function only takes in the first character that i send. For example, <code>send_keys(""J590"")</code> gives <code>J</code>, <code>send_keys(""J590-TE21"")</code> gives <code>J-</code></p>"	57849683	"<p>First, the correct way to set the <strong>current</strong> value of an input is to assign to the <code>value</code> property. There is no <em>attribute</em> for the inputs current value (the <code>value</code> attribute is the input's <em>default</em> value, <a href=""http://stackoverflow.com/questions/43210254/javascript-program-works-well-in-ie-but-not-in-firefox-and-chrome-to-fill-in-i"">more here</a>).</p>  <p>The rest is a special case of a general-purpose question: ""How do I output a Python variable's value into JavaScript code?""</p>  <p><strong>If</strong> the string you're outputting doesn't contain quotes or backslashes, you may get away with using a format string and outputting the value in quotes <a href=""https://stackoverflow.com/a/57849167/157247"">as Guy shows</a>. (JavaScript has two kinds of quotes, <code>'</code> and <code>""</code>; you only need to escape the kind you use around the value.) Those kinds of assumptions tend to break down, though; as soon as the string is <code>Hi, I'm Joe</code> that approach breaks.</p>  <p>In the general case, to ensure proper escaping and that all values are written correctly, you can use JSON:</p>  <pre class=""lang-python prettyprint-override""><code>import json value = 'J590' driver.execute_script(f""document.getElementById('CustCd').value = {json.dumps(value)};"") </code></pre>  <p>That outputs:</p>  <pre class=""lang-js prettyprint-override""><code>document.getElementById('CustCd').value = ""J590""; </code></pre>  <p><a href=""http://ideone.com/8oK81S"" rel=""nofollow noreferrer"">Live Example</a></p>  <p>That way, you don't have to worry about quoting and escaping, it's all handled for you since valid JSON is valid JavaScript (thanks to a recent JavaScript specification fix; prior to that there was an edge case incompatibility that people almost never ran into).</p>  <p>It's also useful for numbers, or more complex things you might want to pass to hte JavaScript code. For instance:</p>  <pre class=""lang-python prettyprint-override""><code>import json  class Example:     foo = """"     bar = 0      def __init__(self, foo, bar):         self.foo = foo         self.bar = bar  value = Example(""I'm a string with \""quotes\"" in it."", 42) print(f""const obj = {json.dumps(value.__dict__)};"") num = 42 print(f""const num = {json.dumps(num)};"") </code></pre>  <p>That outputs:</p>  <pre class=""lang-js prettyprint-override""><code>const obj = {""foo"": ""I'm a string with \""quotes\"" in it."", ""bar"": 42}; const num = 42; </code></pre>  <p><code>obj</code> ends up being an object, because the initializer is a valid JavaScript object literal containing the data from the <code>Example</code> object. Similarly, <code>num</code> is a valid JavaScript number.</p>  <p><a href=""http://ideone.com/zJrURV"" rel=""nofollow noreferrer"">Live Example</a></p>"
57849103	Javascript to input value into textbox instead of sendKeys() in Python	javascript|python|selenium	2019-09-09 06:53:23.080000 UTC	"<p>I cant use <code>send_Keys()</code> method to input values in the current website im working on. So im trying to use javascript to input values.</p>  <p>i tried <code>click()</code> and <code>clear()</code> together with <code>send_keys()</code> before i decided to use javascript but to my disappointment, it didnt work.</p>  <p>i use the javascript code to input value below</p>  <pre><code>driver.execute_script(""document.getElementById('CustCd').setAttribute('value', 'J590')"") </code></pre>  <p>and it worked.</p>  <p>But currently my code is inside a loop and the value changes, how can i replace <code>J590</code> with a variable that gets the value?</p>  <p>Here is the code that i tried</p>  <pre><code>ccr_No = XLUtlis.readData(path, 'ccr', r, 1) driver.execute_script(""document.getElementById('CCRNo').value=ccr_No"") </code></pre>  <p>I know its wrong, any help would be appreciated. My Javascript is weak.</p>  <p>Just some side note if anybody would be able to solve my <code>send_keys()</code> error. The function only takes in the first character that i send. For example, <code>send_keys(""J590"")</code> gives <code>J</code>, <code>send_keys(""J590-TE21"")</code> gives <code>J-</code></p>"	57850118	"<p>Using <em>Javascript</em> to input the values of a variable you can use the following solution:</p>  <pre><code>ccr_No = XLUtlis.readData(path, 'ccr', r, 1) # ccr_No = J590 driver.execute_script(""document.getElementById('CCRNo').value='"" + ccr_No + ""';"") </code></pre>  <p>An example, to input the values of a variable within <em>Search Box</em> of <em>Google Home Page</em>:</p>  <ul> <li><p>Code Block:</p>  <pre><code>driver.get(""https://www.google.com/"") value = 'J590' driver.execute_script(""document.getElementsByName('q')[0].value='"" + value + ""';"") </code></pre></li> <li><p>Browser Snapshot:</p></li> </ul>  <p><a href=""https://i.stack.imgur.com/tndZx.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/tndZx.png"" alt=""variable""></a></p>  <blockquote>   <p>You can find a relevant discussion in <a href=""https://stackoverflow.com/questions/49596978/selenium-how-to-send-variable-character-strings-through-executescript/49597079#49597079"">Selenium : How to send variable character strings through executeScript()</a></p> </blockquote>"
57875836	How to display a Python list of strings that contains HTML and JavaScript in a template with JS	javascript|python|json|django	2019-09-10 17:37:40.643000 UTC	"<p>I have a python list that contains a list of strings. Those strings contain HTML and JavaScript. Right now, I am using <code>sentences = json.dumps(l)</code> in Django view, then in the template I use <code>{{sentences|safe}}</code>, it works for some strings, but it breaks on the strings that contain lots of HTML and JavaScript. How do I fix this problem?</p>  <p>Thank you for your help.</p>  <p>I tried <code>JSON.parse(sentences), {{sentences|escapejs}}, {{escape|safe}}</code></p>  <pre class=""lang-py prettyprint-override""><code># in django view sentences = json.dumps(l) return render(request, 'detail.html', {     'sentences': sentences   }) </code></pre>  <pre><code>// in template, attempt to pass the jsonified python list to js array var random = {{sentences|safe}};   SyntaxError: """" literal not terminated before end of script 73:78:35396 SyntaxError: unexpected token: identifier 73:78:12 SyntaxError: unexpected token: identifier 73:78:4 SyntaxError: unexpected token: identifier 73:78:20 SyntaxError: unexpected token: identifier 73:78:20 </code></pre>"	57876497	"<p>The third argument of <code>render</code> is <em>context</em>, which is a dictionary of variables that you want to access on your template.</p>  <p>In your code, you are setting <code>context={}</code>, which means <code>sentences</code> isn't being passed to your view.  Try doing this instead:</p>  <pre><code>sentences = json.dumps(l) context = {      'sentences': sentences } return render(request, 'detail.html', context) </code></pre>  <p>Now you should be able to access <code>sentences</code> on your template:</p>  <pre><code>&lt;script type=""text/javascript""&gt; var someVar = {{ sentences | safe }} #don't use ""random"" since that is a keyword &lt;/script&gt; </code></pre>  <p>Note that I included <code>&lt;script&gt;</code> tags around the <code>someVar</code> declaration.  Your code would render as plaintext otherwise.</p>"
57881774	How to encrypt a message python with a javascript example	javascript|python|encryption	2019-09-11 03:36:41.510000 UTC	"<p>Hey I need to encrypt a message in python but I have a javascript example.</p>  <p>This is what I have. </p>  <pre class=""lang-py prettyprint-override""><code>BLOCK_SIZE=16 message = 1234 passphrase = ""ed8b1a3b-5cf1-4ba5-87af-790905f6bae3"" def encrypt(message, passphrase):     # passphrase MUST be 16, 24 or 32 bytes long, how can I do that ?     IV = Random.new().read(BLOCK_SIZE)     aes = AES.new(passphrase, AES.MODE_ECB, IV)     return base64.b64encode(aes.encrypt(message))  print (encrypt(message , passphrase)) </code></pre>  <p>and here is the example</p>  <pre><code>import * as CryptoJS from 'crypto-js';    aesEncrypt(text, key){     let k = key.replace(/-/g, '').substring(0,16);     k = CryptoJS.enc.Utf8.parse(k);     const iv = CryptoJS.enc.Utf8.parse('0000000000000000');     const encrypted = CryptoJS.AES.encrypt(text.trim(), k, {       keySize: 16,       iv: iv,       mode: CryptoJS.mode.ECB,       padding: CryptoJS.pad.Pkcs7     });     console.log(encrypted.toString());     return encrypted.toString();   } </code></pre>"	57882355	"<ol> <li>always read the docs and check for similar questions prior to posting. Here is a link to a similar post as well as how to do this in a simple way directly from the docs. hope it helps.  </li> </ol>  <p>install The Crypo Lib  </p>  <pre><code>pip install cryptography </code></pre>  <p>Then Use The following </p>  <pre><code>&gt;&gt;&gt; from cryptography.fernet import Fernet &gt;&gt;&gt; # Put this somewhere safe! &gt;&gt;&gt; key = Fernet.generate_key() &gt;&gt;&gt; f = Fernet(key) &gt;&gt;&gt; token = f.encrypt(b""A really secret message. Not for prying eyes."") &gt;&gt;&gt; f.decrypt(token) </code></pre>  <p>Example Output 'A really secret message. Not for prying eyes.'</p>  <pre><code>from cryptography.fernet import Fernet  message = ""A really secret message. Not for prying eyes."" key = Fernet.generate_key()  def encrypt(message, key):         f = Fernet(key)         token = f.encrypt(b""A really secret message. Not for prying eyes."")         print(token)         decrypted = f.decrypt(token)         print(decrypted)   encrypt(message, key) </code></pre>  <p>Links -Doc Lib  <a href=""https://pypi.org/project/cryptography/"" rel=""nofollow noreferrer"">https://pypi.org/project/cryptography/</a></p>  <p>Similar Question On Stackoverflow with more verbose answers than mine above,</p>  <p><a href=""https://stackoverflow.com/questions/27335726/how-do-i-encrypt-and-decrypt-a-string-in-python"">How do I encrypt and decrypt a string in python?</a></p>"
57883598	How to get href from <a> tag which contains JavaScript using Python?	javascript|python|selenium|web-scraping	2019-09-11 06:51:49.143000 UTC	"<p>I am trying to get <code>href</code> from a tag using Python + Selenium, but the <code>href</code> is having <code>""JavaScript""</code> in it. So I am unable to get the target URL.</p>  <p>I am using <code>Python 3.7.3</code>, <code>selenium 3.141.0</code>.</p>  <p>HTML:</p>  <pre><code>&lt;a href=""javascript:GoPDF('FS1546')"" style=""TEXT-DECORATION: Underline""&gt;Aberdeen Standard Wholesale Australian Fixed Income&lt;/a&gt; </code></pre>  <p>Code:</p>  <pre><code>from selenium import webdriver driver = webdriver.Chrome(""chromedriver.exe"") driver.get(""http://www.colonialfirststate.com.au/Price_performance/performanceNPrice.aspx?menutabtype=performance&amp;CompanyCode=001&amp;Public=1&amp;MainGroup=IF&amp;BrandName=FC&amp;ProductIDs=91&amp;Product=FirstChoice+Wholesale+Investments&amp;ACCodes=&amp;ACText=&amp;SearchType=Performance&amp;Multi=False&amp;Hedge=False&amp;IvstType=Investment+products&amp;IvstGroup=&amp;APIR=&amp;FundIDs=&amp;FundName=&amp;FundNames=&amp;SearchProdIDs=&amp;Redirect=1"") print(driver.find_elements_by_xpath(""tbody/tr[5]/td[1]/a"") </code></pre>  <p>what I need is the target <code>URL</code> as:</p>  <blockquote>   <p><a href=""https://www3.colonialfirststate.com.au/content/dam/prospects/fs/1/5/fs1546.pdf?3"" rel=""nofollow noreferrer"">https://www3.colonialfirststate.com.au/content/dam/prospects/fs/1/5/fs1546.pdf?3</a></p> </blockquote>  <p>but its giving me:</p>  <blockquote>   <p>javascript:GoPDF('FS2311')</p> </blockquote>"	57883767	"<p>I checked the PDF url from the popup and found out how they are generating the URL. </p>  <p>They use file name (ex. FS2065) to generate the PDF URL. </p>  <p>The url of the PDF look like this,        <a href=""https://www3.colonialfirststate.com.au/content/dam/prospects/fs/2/0/fs2065.pdf?3"" rel=""nofollow noreferrer"">https://www3.colonialfirststate.com.au/content/dam/prospects/fs/2/0/fs2065.pdf?3</a></p>  <p>For all PDFs up to this part, it is having the same path </p>  <pre><code>https://www3.colonialfirststate.com.au/content/dam/prospects/ </code></pre>  <p>After that part we have a path generated using the fileID, </p>  <pre><code>fs/2/0/fs2065.pdf?3  | | |     |     ||  | | |     |     ++--- Not needed (But you can keep if you want)  | | |     |  | | |     +---- File Name  | | +---------- 4th character in the file name   | +------------ 3rd character in the file name   +-------------- First two characters in the file name  </code></pre>  <p>We can use this as a workaround to get the exact url. </p>  <pre><code>url = ""javascript:GoPDF('FS2311')"" # javascript URL    pdfFileId = url[18:-2].lower() # extracts the file name from the Javascript URL  pdfBaseUrl = ""https://www3.colonialfirststate.com.au/content/dam/prospects/%s/%s/%s/%s.pdf?3""%(pdfFileId[:2],pdfFileId[2],pdfFileId[3],pdfFileId)   print(pdfBaseUrl) # prints https://www3.colonialfirststate.com.au/content/dam/prospects/fs/2/3/fs2311.pdf?3 </code></pre>  <p>See it in action <a href=""https://repl.it/repls/DiligentCelebratedOpposites"" rel=""nofollow noreferrer"">here</a>. </p>"
57883598	How to get href from <a> tag which contains JavaScript using Python?	javascript|python|selenium|web-scraping	2019-09-11 06:51:49.143000 UTC	"<p>I am trying to get <code>href</code> from a tag using Python + Selenium, but the <code>href</code> is having <code>""JavaScript""</code> in it. So I am unable to get the target URL.</p>  <p>I am using <code>Python 3.7.3</code>, <code>selenium 3.141.0</code>.</p>  <p>HTML:</p>  <pre><code>&lt;a href=""javascript:GoPDF('FS1546')"" style=""TEXT-DECORATION: Underline""&gt;Aberdeen Standard Wholesale Australian Fixed Income&lt;/a&gt; </code></pre>  <p>Code:</p>  <pre><code>from selenium import webdriver driver = webdriver.Chrome(""chromedriver.exe"") driver.get(""http://www.colonialfirststate.com.au/Price_performance/performanceNPrice.aspx?menutabtype=performance&amp;CompanyCode=001&amp;Public=1&amp;MainGroup=IF&amp;BrandName=FC&amp;ProductIDs=91&amp;Product=FirstChoice+Wholesale+Investments&amp;ACCodes=&amp;ACText=&amp;SearchType=Performance&amp;Multi=False&amp;Hedge=False&amp;IvstType=Investment+products&amp;IvstGroup=&amp;APIR=&amp;FundIDs=&amp;FundName=&amp;FundNames=&amp;SearchProdIDs=&amp;Redirect=1"") print(driver.find_elements_by_xpath(""tbody/tr[5]/td[1]/a"") </code></pre>  <p>what I need is the target <code>URL</code> as:</p>  <blockquote>   <p><a href=""https://www3.colonialfirststate.com.au/content/dam/prospects/fs/1/5/fs1546.pdf?3"" rel=""nofollow noreferrer"">https://www3.colonialfirststate.com.au/content/dam/prospects/fs/1/5/fs1546.pdf?3</a></p> </blockquote>  <p>but its giving me:</p>  <blockquote>   <p>javascript:GoPDF('FS2311')</p> </blockquote>"	57899019	"<p>Kudos to the <a href=""https://stackoverflow.com/a/57883767/2480947"">accepted answer</a> for doing the background work.</p> <p>I'd recommend using <a href=""https://docs.python.org/3/library/urllib.parse.html#module-urllib.parse"" rel=""nofollow noreferrer"">urllib.parse</a> facilities from the standard library. URLs are not as straightforward as they first appear and the guys who wrote <code>urllib</code> are experts on the URL standard, <a href=""https://www.rfc-editor.org/rfc/rfc1808.html"" rel=""nofollow noreferrer"">RFC 808</a>.</p> <p>Since you are web scraping, further down the track you will probably need to apply the same process to a variety of URLs, including those with different domain names, multi-digit query components (<code>?1234</code> and a whole other set of possibilities) or even fragments (<code>?1234#example</code> etc.) The accepted answer will fail on all of these.</p> <p>The following code looks more complicated at first sight but delegates the tricky (and potentially brittle) URL stuff to <code>urllib</code>. It also uses more robust and flexible methods to extract the GoPDF fileId and the invariant part of the url.</p> <pre class=""lang-py prettyprint-override""><code>from urllib.parse import urlparse, urlunparse   def build_pdf_url(model_url, js_href):     url = urlparse(model_url)     pdf_fileid = get_fileid_from_js_href(js_href)     pdf_path = build_pdf_path(model_url, pdf_fileid)     return urlunparse((url.scheme, url.netloc, pdf_path, url.params,                       url.query, url.fragment))   def get_fileid_from_js_href(href):     &quot;&quot;&quot;extract fileid by extracting text between single quotes&quot;&quot;&quot;     return href.split(&quot;'&quot;)[1].lower()   def build_pdf_path(url, pdf_fileid):     prefix = pdf_fileid[:2]     major_version = pdf_fileid[2]     minor_version = pdf_fileid[3]     filename = pdf_fileid + '.pdf'     return '/'.join([invariant_path(url), prefix, major_version, minor_version, filename])   def invariant_path(url, dropped_components=4):     &quot;&quot;&quot;     return all but the dropped components of the URL 'path'     NOTE: path components are separated by '/'     &quot;&quot;&quot;     path_components = urlparse(url).path.split('/')     return '/'.join(path_components[:-dropped_components])   js_href = &quot;javascript:GoPDF('FS1546')&quot; model_url = &quot;https://www3.colonialfirststate.com.au/content/dam/prospects/fs/2/3/fs2311.pdf?3&quot; print(build_pdf_url(model_url, js_href))   $ python urlbuild.py https://www3.colonialfirststate.com.au/content/dam/prospects/fs/1/5/fs1546.pdf?3  </code></pre>"
57897894	How to use sockets to send information from javascript to python	javascript|python|node.js	2019-09-11 23:18:22.210000 UTC	"<p>I want to send information from my Node.js code to Python using sockets. How can I achieve that?</p>  <p>In pseudo-code, what I want is this:</p>  <p>js:</p>  <pre><code>sendInformation(information) </code></pre>  <p>python:</p>  <pre><code>recieveInformation() sendNewInformation() </code></pre>  <p>js:</p>  <pre><code>recievNewInformation() </code></pre>"	57897950	"<p>You should determine which code is the server and which one is the client. I assume your Python code is your server.  You can run a server in python using: </p>  <pre><code>import socket  HOST = '0.0.0.0' PORT = 9999      with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as s:     s.bind((HOST, PORT))     s.listen()     conn, addr = s.accept()     with conn:         print('Connected by', addr)         while True:             data = conn.recv(1024)             if not data:                 break             conn.sendall(data) </code></pre>  <p>And then you can connect your Nodejs client code to the server: </p>  <pre><code>var net = require('net');  var HOST = '127.0.0.1'; var PORT = 9999;  var client = new net.Socket(); client.connect(PORT, HOST, function() {   console.log('CONNECTED TO: ' + HOST + ':' + PORT);   // Write a message to the socket as soon as the client is connected, the server will receive it as message from the client  client.write('Message from client');  });  // Add a 'data' event handler for the client socket // data is what the server sent to this socket client.on('data', function(data) {   console.log('DATA: ' + data);   // Close the client socket completely   client.destroy(); });  // Add a 'close' event handler for the client socket client.on('close', function() {   console.log('Connection closed'); });  </code></pre>"
57938962	"How to build a light docker image supporting multiple languages (c, c++, rust, java, go, python, javascript, nodejs, etc..)"	docker|dockerfile	2019-09-14 20:16:49.590000 UTC	"<p>I'm a newbie to docker - and i'm looking to build a docker image which supports multiple language.</p>  <p>What i'm planning to do is to take alpine as a base and install all runtime libs for c++, c, rust, etc... I'm not sure what is the right way to do. I already searched for docker hub but did not find one.</p>"	57940963	"<p>As mentioned by @David, It is not recommended practice in the Docker and it will never create a lightweight image even if you go with alpine.</p>  <p>If you visit the offical docker hub of PHP, nodejs and golang you will be surprised.</p>  <ul> <li><p>Php approximately <strong>350MB</strong> (Alpine)</p></li> <li><p>Golang approximately <strong>360MB</strong> (Alpine)</p></li> <li><p>Nodejs approximately <strong>80MB</strong> (Alpine)</p></li> </ul>  <p>Leave the rest of that you mentioned in the question, for instance, subtract <strong>5MB</strong> in each due to OS alpine size still it above <strong>800MB</strong> which is ultimately become big and big by adding the rest.</p>  <p>Alternatively, you can multi-stage image but again you will have to manage and put conditional statements in your Dockerfile to deal with a command like <code>npm install</code> in nodejs and do <code>composer install</code> in PHP and bla bla.</p>  <p>You might build an image like this but again it will have to manage like a mess.</p>  <pre><code>ARG BASE_IMAGE=""go"" FROM golang:alpine as go  FROM node:alpine as node  FROM php:7.0-apache as php  FROM nginx:alpine as nginx  FROM ${BASE_IMAGE} ENV BASE_IMAGE=$BASE_IMAGE </code></pre>  <blockquote>   <p>Limiting each container to one process is a good <a href=""https://docs.docker.com/develop/develop-images/dockerfile_best-practices/"" rel=""nofollow noreferrer"">rule of thumb</a></p> </blockquote>  <p>If the rule of thumb for the container to have one process per container then I think it should have an environment for that process only.</p>  <p><a href=""https://docs.docker.com/develop/develop-images/dockerfile_best-practices/"" rel=""nofollow noreferrer"">dockerfile_best-practices</a></p>"
57938998	Java has .class file which is the executable file/ binary file. Same way what is it for Python or Javascript?	javascript|python	2019-09-14 20:21:52.480000 UTC	"<p>In java .class files hide the actual source code and can only be executed. Am new to Python and JavaScript languages, how is source code protected in these languages? Do they also have something similar to .class files where in the source code isn't visible ?</p>"	57939146	"<p>Python's equivalent to Java's <code>.class</code> file is the <code>.pyc</code> file. But this is even easier to decompile (translate back into Python) than <code>.class</code> files are. Javascript is distributed as Javascript, not compiled. Although it is often minified for performance.</p>  <p>The way you protect source code is with a license and copyright law. You may be looking for code obfuscators, but this will only deter casual hackers, and will only slow down someone determined. Even big-budget games with advanced DRM get cracked pretty quickly these days.</p>"
57938998	Java has .class file which is the executable file/ binary file. Same way what is it for Python or Javascript?	javascript|python	2019-09-14 20:21:52.480000 UTC	"<p>In java .class files hide the actual source code and can only be executed. Am new to Python and JavaScript languages, how is source code protected in these languages? Do they also have something similar to .class files where in the source code isn't visible ?</p>"	57939230	"<p>I think you are making quite a bit of confusion, here.</p>  <p>First of all, <code>.class</code> files are not for ""code protection"" (we will get to what this means later), but compiled files which will be executed. You, simply put, cannot execute <code>.java</code> files, they have to be compiled in <code>.class</code> files. This is because Java is compiled to Bytecode (the machine language for the Java Virtual Machine), which is executed by the JVM. Both Javascript and Python can be executed without being compiled (there is Javascript/Python interpreter which runs the <code>.js</code> or <code>.py</code> files directly). There are some intermediate files in Python, with the <code>pyc</code> extension, which are alike the <code>.class</code> files, but, again, they are not good for protecting your code.</p>  <p>Now, if you want somebody to be able to execute your code without being able to read it, you have to keep in mind two things:</p>  <ol> <li>Decompilers/deobfuscators and so exist and are very good at their job;</li> <li>While, in Java, the JVM executes compiled code, Python's and Javascript's interpreters execute the code as you write it;</li> </ol>  <p>You can try to obfuscate the code, but anybody will be able to deobfuscate it with the right tool. Does this mean that you Python code is less protected than your Java code? No, you can decompile <code>.class</code> and <code>.jar</code> files to read the source code (in fact, it is automatically done in IntelliJ Idea every time you navigate to the implementation of a library class or method).</p>  <p>So, if you want people to use your software but don't want them to copy it, you have two ways:</p>  <ol> <li>Do not distribute the software and go the SaaS way;</li> <li>Find a good lawyer and ask their advice about how to protect you product according to local law;</li> </ol>"
57947636	Transforming a nested sort loop in python to javascript	javascript|python|underscore.js	2019-09-15 19:42:10.453000 UTC	"<p>I'm trying to convert a sort and loop from python into javascript and can't figure it out :(</p>  <pre><code>G = {  0: {0: 100000, 1: 294, 2: 366},  1: {0: 294, 1: 100000, 2: 140},  2: {0: 366, 1: 140, 2: 100000} } </code></pre>  <p>I have this for loop in python:</p>  <pre><code>for W,u,v in sorted((G[u][v], u, v) for u in G for v in G[u]): </code></pre>  <p>And want to convert into javascript (using underscore if necessary), and add magic so that it turns into this:</p>  <pre><code>var y = [ [140, 1, 2), [140, 2, 1], [294, 0, 1], [294, 1, 0], [366, 0, 2], [366, 2, 0], [100000, 0, 0], [100000, 1, 1], [100000, 2, 2]] </code></pre>  <p>I have been able to get a list of the results in an array using two <code>for in</code> loops:</p>  <pre><code>for (u in x) {     for (v in x[u]) {         console.log([x[u][v], u, v])     } } </code></pre>  <p>This gives me:</p>  <pre><code>[100000, ""0"", ""0""] [294, ""0"", ""1""] [366, ""0"", ""2""] [294, ""1"", ""0""] [100000, ""1"", ""1""] [140, ""1"", ""2""] [366, ""2"", ""0""] [140, ""2"", ""1""] [100000, ""2"", ""2""] </code></pre>  <p>But now I'm trying to get those arrays to be sorted by index 0 and 1 I believe.</p>"	57947726	"<p>Maybe this will do it actually:</p>  <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-js lang-js prettyprint-override""><code>const original = {  0: {0: 100000, 1: 294, 2: 366},  1: {0: 294, 1: 100000, 2: 140},  2: {0: 366, 1: 140, 2: 100000} } const result = [] for (u in original) {     for (v in original[u]) {         result.push([original[u][v], u, v])     } } result.sort((a1, a2) =&gt; a1[1] - a2[1]).sort((a1, a2) =&gt; a1[0] - a2[0]) console.log(result)</code></pre> </div> </div> </p>"
57947636	Transforming a nested sort loop in python to javascript	javascript|python|underscore.js	2019-09-15 19:42:10.453000 UTC	"<p>I'm trying to convert a sort and loop from python into javascript and can't figure it out :(</p>  <pre><code>G = {  0: {0: 100000, 1: 294, 2: 366},  1: {0: 294, 1: 100000, 2: 140},  2: {0: 366, 1: 140, 2: 100000} } </code></pre>  <p>I have this for loop in python:</p>  <pre><code>for W,u,v in sorted((G[u][v], u, v) for u in G for v in G[u]): </code></pre>  <p>And want to convert into javascript (using underscore if necessary), and add magic so that it turns into this:</p>  <pre><code>var y = [ [140, 1, 2), [140, 2, 1], [294, 0, 1], [294, 1, 0], [366, 0, 2], [366, 2, 0], [100000, 0, 0], [100000, 1, 1], [100000, 2, 2]] </code></pre>  <p>I have been able to get a list of the results in an array using two <code>for in</code> loops:</p>  <pre><code>for (u in x) {     for (v in x[u]) {         console.log([x[u][v], u, v])     } } </code></pre>  <p>This gives me:</p>  <pre><code>[100000, ""0"", ""0""] [294, ""0"", ""1""] [366, ""0"", ""2""] [294, ""1"", ""0""] [100000, ""1"", ""1""] [140, ""1"", ""2""] [366, ""2"", ""0""] [140, ""2"", ""1""] [100000, ""2"", ""2""] </code></pre>  <p>But now I'm trying to get those arrays to be sorted by index 0 and 1 I believe.</p>"	57947778	"<p>You could take the object and build arrays by taking the keys an indices and then get the values as well as the indices. Then sort the array by the values at first second and third index.</p>  <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-js lang-js prettyprint-override""><code>var g = { 0: { 0: 100000, 1: 294, 2: 366 }, 1: { 0: 294, 1: 100000, 2: 140 }, 2: { 0: 366, 1: 140, 2: 100000 } },     result = Object         .assign([], g)         .reduce((r, o, i) =&gt; {             Object.assign([], o).forEach((v, j) =&gt; r.push([v, i, j]));             return r;         }, [])         .sort((a, b) =&gt; a[0] - b[0] || a[1] - b[1] || a[2] - b[2]);  console.log(result);</code></pre> <pre class=""snippet-code-css lang-css prettyprint-override""><code>.as-console-wrapper { max-height: 100% !important; top: 0; }</code></pre> </div> </div> </p>"
57949246	Scrape website with Python with javascript format	python|web-scraping	2019-09-16 00:49:09.543000 UTC	"<p>I don't have much experience scraping data from websites. I normally use Python ""requests"" and ""BeautifulSoup"".</p>  <p>I need to download the table from here <a href=""https://publons.com/awards/highly-cited/2019/"" rel=""nofollow noreferrer"">https://publons.com/awards/highly-cited/2019/</a> I do the usual with right click and Inspect, but the format is not the one I'm used to working with. I did a bit of reading and seems to be Javascript, where I could potentially extract the data from <a href=""https://publons.com/static/cache/js/app-59ff4a.js"" rel=""nofollow noreferrer"">https://publons.com/static/cache/js/app-59ff4a.js</a>. I read other posts that recommend Selenium and PhantomJS. However, I can't modify the paths as I'm not admin in this computer (I'm using Windows). Any idea on how to tackle this? Happy to go with R if Python isn't an option.</p>  <p>Thanks!</p>"	57950641	"<p>If you monitor the web traffic via dev tools you will see the API calls the page makes to update content. The info returned is in json format.</p>  <p>For example: page 1</p>  <pre><code>import requests  r = requests.get('https://publons.com/awards/api/2019/hcr/?page=1&amp;per_page=10').json() </code></pre>  <p>You can alter the page param in a loop to get all results.</p>  <p>The total number of results is already indicated in the first response via <code>r['count']</code> so easy enough to calculate the # pages to loop for at 10 results per page. Just be sure to be polite in how you make your requests.</p>  <p>Outline:</p>  <pre><code>import math, requests  with requests.Session() as s:     r = s.get('https://publons.com/awards/api/2019/hcr/?page=1&amp;per_page=10').json()     #do something with json. Parse items of interest into list and add to a final list? Convert to dataframe at end?     number_pages = math.ceil(r['count']/10)      for page in range(2, number_pages + 1):         #perhaps have a delay after X requests         r = s.get(f'https://publons.com/awards/api/2019/hcr/?page={page}&amp;per_page=10').json()         #do something with json. Parse items of interest into list and add to a final list? Convert to dataframe at end? </code></pre>"
57968115	"Javascript expression `[""Java"", ""Python"",""Javascript""][Symbol.iterator]().next().value` evaluates to first value of a given array"	javascript|arrays|iterator|symbols	2019-09-17 05:57:46.860000 UTC	"<p>I have been asked in interview to get the first value of an array without using index and any helper function. Then interviewer give me the below solution which works but not able to exactly figure out how?</p>  <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-js lang-js prettyprint-override""><code>const firstValue = [""Java"", ""Python"",""Javascript""][Symbol.iterator]().next().value;  console.log('First Value: ', firstValue);</code></pre> </div> </div> </p>  <p>If anyone can give more insight on would be helpful and appreciated. Thanks! </p>"	57968155	"<p>Here's the rundown:</p>  <ul> <li>Arrays are <em>iterable</em>, which means they have a method available via the property named with the Symbol <code>Symbol.iterator</code> which behaves as the spec says it should.</li> <li>When you call that method, it returns an iterator.</li> <li>Iterators have a <code>next</code> method you use to get the ""next"" result from the iterator: The first call returns the first result, the second call returns the second result, etc.</li> <li>The results are objects with a boolean <code>done</code> property and a <code>value</code> property with the actual value for that iteration. <em>(Technically, both are optional: <code>done</code> defaults to <code>false</code> and <code>value</code> defaults to <code>undefined</code>. But iterators provided by native JavaScript objects have both properties explicitly.)</em></li> </ul>  <p>So here's how that statement does the above:</p>  <pre><code>//                                +----------------------------------------------- create the array //                                |                       +----------------------- get its `Symbol.iterator` method //                                |                       |         +------------- call it //                                |                       |         |   +--------- call the `next` method of the iterator to get the first result object //                                |                       |         |   |      +-- get its `value` property //                                |                       |         |   |      | //                                |                       |         |   |      | //                                |                       |         |   |      | //                                |                       |         |   |      | //                                |                       |         |   |      | //                                |                       |         |   |      | //                 \vvvvvvvvvvvvvvvvvvvvvvvvvvvvv/\vvvvvvvvvvvvvvv/\/ \vvvv/ \vvv/ const firstValue = [""Java"", ""Python"",""Javascript""][Symbol.iterator]().next().value; </code></pre>  <p>Or perhaps more clearly:</p>  <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-js lang-js prettyprint-override""><code>// Create the array const array = [""Java"", ""Python"",""Javascript""]; // Get its `Symbol.iterator` method const iteratorMethod = array[Symbol.iterator]; // Call it const iterator = iteratorMethod.call(array); // Call the `next` method of the iterator to get the first result object const resultObject = iterator.next(); // Get its `value` property const firstValue = resultObject.value;  console.log(firstValue); // ""Java""</code></pre> </div> </div> </p>"
57968115	"Javascript expression `[""Java"", ""Python"",""Javascript""][Symbol.iterator]().next().value` evaluates to first value of a given array"	javascript|arrays|iterator|symbols	2019-09-17 05:57:46.860000 UTC	"<p>I have been asked in interview to get the first value of an array without using index and any helper function. Then interviewer give me the below solution which works but not able to exactly figure out how?</p>  <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-js lang-js prettyprint-override""><code>const firstValue = [""Java"", ""Python"",""Javascript""][Symbol.iterator]().next().value;  console.log('First Value: ', firstValue);</code></pre> </div> </div> </p>  <p>If anyone can give more insight on would be helpful and appreciated. Thanks! </p>"	57968177	"<p>The <code>[Symbol.iterator]</code> is a special property that make any object in JavaScript an <strong><em>Iterable</em></strong>. So in an Array which is an <em>Iterable</em> object this property is present.</p>  <p>The role of this property is to return an <strong><em>Iterator</em></strong> object having the <code>next()</code> method. Using the Iterator returned you can iterate through the Array or your data in the Iterable Object.</p>  <p>You can also create a custom Iterable object, from which you can get an Iterator by invoking its <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol/iterator"" rel=""nofollow noreferrer"">[Sysmbol.iterator]</a> method. This syntax []is new with ES6 where you can use any <code>Symbol</code> as the name for a method inside an class, this is known as computed property.</p>  <p>In the below snippet you can see how to use <code>[Symbol.iterator]</code> as a method name to make my own iterable object. This is a very simple example demonstrating the usage of <code>[Symbol.iterator]</code> there are other ways of doing the same:</p>  <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-js lang-js prettyprint-override""><code>class CustomIterable{     constructor(start, stop){       this.start = start;       this.stop = stop;    }    //This property makes this an Iterable    [Symbol.iterator](){     return this;    }    //This makes this an Iterator also    next(){     return this.start !== this.stop ? {value: this.start++, done: false}                                      : {value: this.stop, done: true};    }   }  const cutomIterable = new CustomIterable(0, 11); console.log(cutomIterable[Symbol.iterator]().next().value); //This object can be a target of the for..of loop for( let val of cutomIterable){   console.log(val); }</code></pre> </div> </div> </p>"
58024732	How would this Python code that is decoding a hex string and then encoding it to base64 be written in Javascript?	javascript|python|hex|decode|encode	2019-09-20 08:32:28.163000 UTC	"<p>I'm currently porting over code from a Python program that is decoding and encoding a string in a somewhat long sequence of decode() and encode() calls. In Python it looks as follows:</p>  <pre><code>import codecs input = '3E061F00000E10FE' data = codecs.encode(codecs.decode(input, ""hex""), ""base64"").decode().strip() </code></pre>  <p>When printed out in Python the result of data is: <code>PgYfAAAOEP4=</code></p>  <p>I tried to reconstruct this in Javascript and Python by taking apart the whole encode/decode sequence and separating each function call so I could compare the two to see if I got the correct result from the Javascript version of the code. I was unsuccessful since the results from the Javascript and Python versions of the code were different. </p>  <p>So my question is if anybody knows what the equivalent of the Python code would be in Javascript.</p>  <p>Edit: Just to be clear, I'm in a Node.js environment</p>"	58024867	"<p>This solution first converts the hex string to a byte array, and then performs a base64-encoding of that byte array:</p>  <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-js lang-js prettyprint-override""><code>const input = '3E061F00000E10FE'; const bytes = new Uint8Array(input.match(/.{1,2}/g).map(b =&gt; parseInt(b, 16))); const base64 = btoa(String.fromCharCode.apply(null, bytes));  console.log(base64);</code></pre> </div> </div> </p>  <p>This yields your expected output:</p>  <pre class=""lang-none prettyprint-override""><code>PgYfAAAOEP4= </code></pre>  <hr>  <p><sup>Inspired by <a href=""https://stackoverflow.com/a/50868276/3558960"">this answer</a> for the hex to <code>Uint8Array</code> conversion, and <a href=""https://stackoverflow.com/a/36046727/3558960"">this answer</a> for the <code>Uint8Array</code> to base64 conversion.</sup></p>"
58062548	sending JSON Object from python to javascript to populate dropdown list	javascript|python|jquery|ajax|drop-down-menu	2019-09-23 12:32:53.880000 UTC	"<p>I want to add a dropdown list to my table (for each row in same column).I managed to do this but only if the arrays are written in the javascript. </p>  <p>What I want to do now, is to populate my dropdown list with the values from an Excel file. Since that is not so easy I created a python file where I convert this excel file as a JSON file and take only the sheet from where the values should be imported. But What I don't know is how to call my JSON object from python in the javascript</p>  <p>convert_excel_file.py :</p>  <pre><code>import pandas as pd  path_to_excel = ""//10.0.254.14/data/file_to_read_from.xlsm"" export_m42OUs = pd.read_excel(path_to_excel,sheet_name='m42OUs') json_m42OUs = export_m42OUs.to_json(orient='records') print(json_m42OUs) </code></pre>  <p>which gives me JSON file that looks something like this :</p>  <pre><code>[{""OU_ID"":""OU00001"",""OU_IDName"":""Global""}, {""OU_ID"":""OU00086"",""OU_IDName"":""DEMO_01""}, {""OU_ID"":""OU00087"",""OU_IDName"":""DEMO_02""}, ...] </code></pre>  <p>I have to note that I can't just write the values in JS because the Excel file can be updated and new values can be added which is not the best solution for me.</p>  <p>I tried few codes I found on stack but none of them worked :/</p>  <p><strong>EDIT</strong> : I corrected the path now it doesn't show 404Error anymore but I still don't know how to get the data . I just tried this code :</p>  <pre><code> let dropdown = $('#OUsList');     dropdown.empty();      dropdown.append('&lt;option selected=""true"" disabeld&gt;Choose&lt;/option&gt;');     dropdown.prop('selectedIndex',0);      const url='http://107.0.0.1:5000/my_app/convert_excel_file.py';      //Populate dropdown with the list     $.getJSON(url, function(data){         $.each(data, function(key,entry){             dropdown.append($('&lt;option&gt;&lt;/option&gt;').attr('value', entry.OU_ID).text(entry.OU_IDName))         });     }); </code></pre>  <p><strong>EDIT 2:</strong> after 15 sec after runing the code it returned me this error: <code>jquery-1.12.4.js:10254 GET http://107.0.0.1:5000/my_app/convert_excel_file.py net::ERR_CONNECTION_TIMED_OUT</code></p>"	58063505	"<p>You need create to a simple web app to serve your JSON, Your javascript looks OK but your server side python is not ran the way you intend to.</p>  <p>I'd recommend you use some lightweight framework like <a href=""https://cherrypy.org/"" rel=""nofollow noreferrer"">CherryPy</a> to return a JSON HTPP response.</p>"
58071633	Remove duplicates from JavaScript array using Python	javascript|python|arrays|duplicates|unique	2019-09-24 00:29:11.223000 UTC	"<p>Suppose I have a JavaScript array of elements that looks something very similar to:</p>  <pre><code>var oui = new Array({     ""pfx"": ""000000"",     ""mask"": 24,     ""desc"": ""00:00:00   Officially Xerox, but 0:0:0:0:0:0 is more common"" },{     ""pfx"": ""000001"",     ""mask"": 24,     ""desc"": ""Xerox  Xerox Corporation"" },{     ""pfx"": ""000002"",     ""mask"": 24,     ""desc"": ""Xerox  Xerox Corporation"" },{     ""pfx"": ""000003"",     ""mask"": 24,     ""desc"": ""Xerox  Xerox Corporation"" },{     ""pfx"": ""000004"",     ""mask"": 24,     ""desc"": ""Xerox  Xerox Corporation"" },{     ""pfx"": ""000004"",     ""mask"": 24,     ""desc"": ""Let's pretend this is a repeat""    }); </code></pre>  <p>Imagine now that the file is very large, and some of the ""pfx"" values are repeated throughout the data set. Obviously manual de-duping is out of the question, so I'm trying to figure out the best way to approach it programmatically. How can I write a python script to read in the .JS file containing this data set to de-dupe and remove any duplicates? In other words, I would like to read in the JS file, parse the array, and produce another JavaScript file with a similar array, but only unique values for the pfx variable.</p>  <p>I've gone through a couple of other Stack Overflow questions that are similar in nature, but nothing seems to quite fit this case. In my python testing, I can rarely just get the pfx variables by themselves to remove the duplicates, or Python struggles to read it in as a proper JSON object (even without the ""var"" and ""new Array"" portion). I should also note, that the reason that I'm doing the de-duping in Python over another JavaScript function within the JS file (which I tried following examples like <a href=""https://wsvincent.com/javascript-remove-duplicates-array/"" rel=""nofollow noreferrer"">this</a>) is that it just inflates the size of the JavaScript that has to be loaded onto the page.</p>  <p>In the future, the array is likely to continue grow - thus to avoid unnecessary loading of JavaScript to keep page response times quick, I figured this was a step that could, and should, be performed offline, and added to the page.</p>  <p>For clarification, here is a model of the website I'm trying to mock up: <a href=""https://www.wireshark.org/tools/oui-lookup.html"" rel=""nofollow noreferrer"">https://www.wireshark.org/tools/oui-lookup.html</a>. It is very simple in nature.</p>  <p>Research:</p>  <p><a href=""https://stackoverflow.com/questions/10641893/convert-javascript-array-to-python-list"">Convert Javascript array to python list?</a></p>  <p><a href=""https://stackoverflow.com/questions/9229645/remove-duplicate-values-from-js-array/9229821#9229821"">Remove duplicate values from JS array</a></p>"	58073834	"<p>Since the structure is not nested, you can match the array with a regular expression, then parse it with JSON, remove duplicate objects with <code>filter</code> in Python, and then replace with the deduplicated JSON string.</p>  <p>Use array literal syntax (<code>[</code> and <code>]</code>) rather than <code>new Array</code> to keep things cleaner (best never to use <code>new Array</code>):</p>  <pre><code>import re import json str = ''' var oui = [{     ""pfx"": ""000000"",     ""mask"": 24,     ""desc"": ""00:00:00   Officially Xerox, but 0:0:0:0:0:0 is more common"" },{     ""pfx"": ""000001"",     ""mask"": 24,     ""desc"": ""Xerox  Xerox Corporation"" },{     ""pfx"": ""000002"",     ""mask"": 24,     ""desc"": ""Xerox  Xerox Corporation"" },{     ""pfx"": ""000003"",     ""mask"": 24,     ""desc"": ""Xerox  Xerox Corporation"" },{     ""pfx"": ""000004"",     ""mask"": 24,     ""desc"": ""Xerox  Xerox Corporation"" },{     ""pfx"": ""000004"",     ""mask"": 24,     ""desc"": ""Let's pretend this is a repeat""    }]; '''  def dedupe(match):    jsonStr = match.group()    list = json.loads(jsonStr)    seenPfxs = set()    def notDupe(obj):         thisPfx = obj['pfx']         if thisPfx in seenPfxs:             return False         seenPfxs.add(thisPfx)         return True    return json.dumps([obj for obj in list if notDupe(obj)])  dedupedStr = re.sub(r'(?s)\[[^\]]+\](?=;)', dedupe, str) print(dedupedStr) </code></pre>  <p>Output:</p>  <pre><code>var oui = [{""pfx"": ""000000"", ""mask"": 24, ""desc"": ""00:00:00   Officially Xerox, but 0:0:0:0:0:0 is more common""}, {""pfx"": ""000001"", ""mask"": 24, ""desc"": ""Xerox  Xerox Corporation""}, {""pfx"": ""000002"", ""mask"": 24, ""desc"": ""Xerox  Xerox Corporation""}, {""pfx"": ""000003"", ""mask"": 24, ""desc"": ""Xerox  Xerox Corporation""}, {""pfx"": ""000004"", ""mask"": 24, ""desc"": ""Xerox  Xerox Corporation""}]; </code></pre>  <p>If possible, you might consider storing the data in a separate tag, rather than being in inline Javascript - it'll be more maintainable. Eg, in your HTML, instead of</p>  <pre><code>var oui = [{     ""pfx"": ""000000"",     ""mask"": 24,     ""desc"": ""00:00:00   Officially Xerox, but 0:0:0:0:0:0 is more common"" },{ </code></pre>  <p>consider something like</p>  <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-js lang-js prettyprint-override""><code>var oui = JSON.parse(document.querySelector('[data-oui').textContent); console.log(oui);</code></pre> <pre class=""snippet-code-html lang-html prettyprint-override""><code>&lt;script data-oui type=""application/json""&gt;[{     ""pfx"": ""000000"",     ""mask"": 24,     ""desc"": ""00:00:00   Officially Xerox, but 0:0:0:0:0:0 is more common"" }]&lt;/script&gt;</code></pre> </div> </div> </p>  <p>Then you don't have to dynamically change the Javascript, but only the <code>&lt;script data-oui type=""application/json""&gt;</code> tag.</p>"
58111437	Dowload a file from the web through a Python call (javascript popup on the source site)	javascript|python|download|automation	2019-09-26 07:16:55.617000 UTC	"<p>i want to achieve 2 things:</p>  <ol> <li><p>automate the download of a csv file from this site <a href=""https://www.investing.com/equities/assura-group-historical-data"" rel=""nofollow noreferrer"">https://www.investing.com/equities/assura-group-historical-data</a></p></li> <li><p>automatically select the date range from a python call.</p></li> </ol>  <p>How can i make it happen? Thought of it as a kind of webscraping, but it is not really webscraping, it is more automated download of a file.</p>  <p>The problem is a javascript popup whenever i click on the download button. So i am struggling in finding an automated solution.</p>  <p>Many thanks for your help.</p>  <p>UPDATES: I followed the below suggestions but (as i am a very beginner), I stop here and i have no idea how to build the request with all the info. This is what i got from the browser:</p>  <p><em>Method</em> POST</p>  <p><em>Url</em> <a href=""https://www.investing.com/instruments/HistoricalDataAjax"" rel=""nofollow noreferrer"">https://www.investing.com/instruments/HistoricalDataAjax</a></p>  <p><em>Request Header</em> Host: www.investing.com User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.14; rv:69.0) Gecko/20100101 Firefox/69.0 Accept: text/plain, <em>/</em>; q=0.01 Accept-Language: en-US,en;q=0.5 Accept-Encoding: gzip, deflate, br Content-Type: application/x-www-form-urlencoded X-Requested-With: XMLHttpRequest Content-Length: 171 Connection: keep-alive Referer: <a href=""https://www.investing.com/equities/assura-group-historical-data"" rel=""nofollow noreferrer"">https://www.investing.com/equities/assura-group-historical-data</a> Cookie: </p>  <p><em>Request Body</em> curr_id=7351&amp;smlID=1160667&amp;header=AGRP+Historical+Data&amp;st_date=01%2F01%2F2001&amp;end_date=09%2F26%2F2019&amp;interval_sec=Daily&amp;sort_col=date&amp;sort_ord=DESC&amp;action=historical_data</p>  <p>Is this the right info needed to be able to create a python call and make the download automated? How can i put it togehter?</p>  <p>Please bear in mind that after i select the date range there is still a popup window for download and nothing is shown in the debugger when this event is triggered.</p>  <p><a href=""https://i.stack.imgur.com/P3kxA.png"" rel=""nofollow noreferrer"">Please check this screenshot</a> Thanks.</p>  <p>[b]UPPDATE 2[/b] Trying this but it is not working:</p>  <pre><code>import requests headers = {'Host': 'www.investing.com','User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.14; rv:69.0) Gecko/20100101 Firefox/69.0', 'Accept': 'text/plain, */*; q=0.01','Accept-Language': 'en-US,en;q=0.5','Accept-Encoding': 'gzip, deflate, br','Content-Type': 'application/x-www-form-urlencoded','X-Requested-With': 'XMLHttpRequest','Content-Length': '171','Connection': 'keep-alive','Referer': 'https://www.investing.com/equities/assura-group-historical-data'} payload = {'curr_id':'7351','smlID':'1160667','header':'AGRP+Historical+Data','st_date':'01%2F01%2F2001','end_date':'09%2F26%2F2019','interval_sec':'Daily','sort_col':'date','sort_ord':'DESC','action':'historical_data} session = requests.Session() session.post('https://www.investing.com/instruments/HistoricalDataAjax',headers=headers,data=payload) </code></pre>"	58111625	"<p>You may find some info using browser's developer tools (usually found pressing <code>F12</code>), <code>Network</code> tab.</p>  <p>You can see then how is built the request, in which format dates are specified, and you can replicate it in Python.</p>  <p>I usually use <a href=""https://requests.kennethreitz.org//en/master/"" rel=""nofollow noreferrer"">requests</a> library for HTTP calls.</p>"
58113687	Access python method from plain javascript	javascript	2019-09-26 09:30:05.937000 UTC	<p>I have this python method shown below in a separate file and want to access and get value using plain js <em>(no frame works used.)</em> is there any way i can achieve this?</p>  <pre><code>def myPythonCode :         ....         ...         return somevalue </code></pre>	58114418	"<p>You can use python wrapper for google V8 engine called <a href=""https://pypi.org/project/PyV8/"" rel=""nofollow noreferrer""><strong>PyV8</strong></a></p>  <p>It act as a bridge between the Python and JavaScript objects, and support to hosting Google's v8 engine in a python script.</p>"
58130097	Hide elements using selenium webdriver in python by executing a javascript	javascript|python|selenium-webdriver	2019-09-27 07:47:51.890000 UTC	<p>I want to hide elements on canvas element by executing a <code>javascript</code> in <code>python</code>. </p>  <p>I have tried below:</p>  <pre><code>    def hide_elements():         driver = LiveLibrary.get_webdriver_instance()          js_script = '''\         element1 = document.getElementsByClassName('someclass');         element1[0].style.display = 'none';         element2 = document.getElementsByClassName('another');         element2[0].style.display = 'none';         element3 = document.getElementsByClassName('highlight');         element3[0].style.display = 'none';         element4 = document.getElementsByClassName('overlay');         element4[0].style.display = 'none';         '''         driver.execute_script(js_script) </code></pre>  <p>The above works but as you can see there is a repetition of code. Is there a way I can simplify this rather than finding each element and hiding them?</p>	58130233	"<p>If only one of each class - I use ES&lt;5 to not break your webdriver:</p>  <pre><code>var cls = [""someclass"",""another"",""highlight"",""overlay""]; for (var i=0;i&lt;cls.length;i++) {   document.querySelector("".""+cls[i]).style.display = ""none""; } </code></pre>  <p>This would work in a browser: </p>  <pre><code>[...document.querySelectorAll(""[class^=class]"")].forEach(ele =&gt; ele.style.display = ""none""); </code></pre>  <p>For different classes: </p>  <pre><code>[""someclass"",""another"",""highlight"",""overlay""]   .forEach(cls =&gt; [...document.querySelectorAll("".""+cls)]   .forEach(ele =&gt; ele.style.display = ""none"")); </code></pre>  <p>For older JS versions:</p>  <pre><code>[""someclass"",""another"",""highlight"",""overlay""]   .forEach(function(cls) { [...document.querySelectorAll("".""+cls)]   .forEach(function(ele) { ele.style.display = ""none""})}); </code></pre>  <p>Even older:</p>  <pre><code>var cls= [""someclass"",""another"",""highlight"",""overlay""]; for (var i=0;i&lt;cls.length;i++) {   var elements = document.querySelectorAll("".""+cls[i]);   for (var j=0;j&lt;elements.length;j++) {     elements[j].style.display = ""none"";   } } </code></pre>"
58130097	Hide elements using selenium webdriver in python by executing a javascript	javascript|python|selenium-webdriver	2019-09-27 07:47:51.890000 UTC	<p>I want to hide elements on canvas element by executing a <code>javascript</code> in <code>python</code>. </p>  <p>I have tried below:</p>  <pre><code>    def hide_elements():         driver = LiveLibrary.get_webdriver_instance()          js_script = '''\         element1 = document.getElementsByClassName('someclass');         element1[0].style.display = 'none';         element2 = document.getElementsByClassName('another');         element2[0].style.display = 'none';         element3 = document.getElementsByClassName('highlight');         element3[0].style.display = 'none';         element4 = document.getElementsByClassName('overlay');         element4[0].style.display = 'none';         '''         driver.execute_script(js_script) </code></pre>  <p>The above works but as you can see there is a repetition of code. Is there a way I can simplify this rather than finding each element and hiding them?</p>	58130293	"<p><strong>use following code :</strong> </p>  <pre><code>js_script = '''\ document.getElementsByClassName('someclass')[0].setAttribute(""hidden"",""""); document.getElementsByClassName('another')[0].setAttribute(""hidden"",""""); document.getElementsByClassName('highlight')[0].setAttribute(""hidden"",""""); document.getElementsByClassName('overlay')[0].setAttribute(""hidden"","""");  ''' driver.execute_script(js_script) </code></pre>"
58141207	How to extract a javascript object as json from a HTML page using python or nodejs?	python|node.js	2019-09-27 20:52:51.513000 UTC	"<p><a href=""https://yeastmine.yeastgenome.org/yeastmine/customQuery.do"" rel=""nofollow noreferrer"">https://yeastmine.yeastgenome.org/yeastmine/customQuery.do</a></p>  <p>The above webpage has something like this. As far as I understand, JSON does not support single quote, only double quote is allowed. So the things in {} is not a valid JSON object. What is the best way to extract this object from the resulted HTML page and convert it to JSON? Thanks.</p>  <pre><code>var helpMap = {'NcRNAGene': ... </code></pre>  <p>This one mentions <code>JSON.stringify</code>. But I am not sure how to first get helpMap as JS object in the first place in python or nodejs.</p>  <p><a href=""https://stackoverflow.com/questions/4162749/convert-js-object-to-json-string"">Convert JS object to JSON string</a></p>"	58141308	"<p>In the console of that website you can write javascript. In this case you are right that JSON.Stringify is what you want here, you use it by passing the javascript object <code>helpMap</code> into it as a parameter, the result is the JSON-encoded string:</p>  <pre><code>jsonString = JSON.stringify(helpMap) console.log(jsonString) </code></pre>  <p>You should be able to copy that json string out of your console (in chrome there will be a ""Copy"" button at the end of it).</p>"
58141207	How to extract a javascript object as json from a HTML page using python or nodejs?	python|node.js	2019-09-27 20:52:51.513000 UTC	"<p><a href=""https://yeastmine.yeastgenome.org/yeastmine/customQuery.do"" rel=""nofollow noreferrer"">https://yeastmine.yeastgenome.org/yeastmine/customQuery.do</a></p>  <p>The above webpage has something like this. As far as I understand, JSON does not support single quote, only double quote is allowed. So the things in {} is not a valid JSON object. What is the best way to extract this object from the resulted HTML page and convert it to JSON? Thanks.</p>  <pre><code>var helpMap = {'NcRNAGene': ... </code></pre>  <p>This one mentions <code>JSON.stringify</code>. But I am not sure how to first get helpMap as JS object in the first place in python or nodejs.</p>  <p><a href=""https://stackoverflow.com/questions/4162749/convert-js-object-to-json-string"">Convert JS object to JSON string</a></p>"	58143530	"<p>Suppose the webpage is downloaded to x.html, run the following.</p>  <pre><code>grep '^ \+var helpMap' &lt; x.html | ./main.js </code></pre>  <p><code>main.js</code> has the following code.</p>  <pre><code>fs=require('fs'); data = fs.readFileSync(process.stdin.fd); eval(data.toString()); console.log(helpMap); </code></pre>  <p>Then use <code>JSON.stringify()</code> on <code>helpMap</code> if necesssary.</p>"
58142632	"How do I ""click"" with python selenium when object is not callable? Do I need javascript here, and how?"	javascript|selenium|python-3.7	2019-09-28 01:09:38.240000 UTC	"<pre><code>div = soup.find('div',{'class':'apply_button'}) div.input.click() </code></pre>  <p>This gets the correct tag, but returns 'NoneType' object is not callable SendKeys does not work either.</p>  <p>I don't understand javascript. Do I need to execute it to enable the button? Or is there some simple way to enable the button so that it can be clicked?</p>  <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-html lang-html prettyprint-override""><code>&lt;div class=""main_content""&gt;   &lt;p&gt;    &lt;script type=""text/javascript""&gt;dw(system_help_reboot);       &lt;/script&gt;Click the button below to restart the device.   &lt;/p&gt;   &lt;div class=""apply_button""&gt;    &lt;label id=""button_reboot""&gt;     &lt;script type=""text/javascript""&gt;create_button(system_label_reboot,""reboot_apply_button"");     &lt;/script&gt;     &lt;span class=""button_wrapper"" id=""span_reboot_apply_button""&gt;      &lt;input class=""button_dialog"" id=""reboot_apply_button"" type=""button"" value=""Reboot""/&gt;     &lt;/span&gt;    &lt;/label&gt;   &lt;/div&gt;  &lt;/div&gt;</code></pre> </div> </div> </p>"	58148058	"<p>It's not possible to run Javascript clicks through BeautifulSoup. But, if you want to use just Python / Selenium, you can JS click like this:</p>  <pre><code>elementToClick = driver.find_element_by_xpath(""//div[@class='apply_button']"") driver.executeScript(""arguments[0].click();"", elementToClick) </code></pre>"
58151669	How to sign message in python the same way it is signed in Javascript by using the ECDSA secp256k1 curve?	python|node.js|cryptography|digital-signature|ecdsa	2019-09-29 02:11:05.017000 UTC	"<p>I am trying to sign a byte array in python by the same way as it happens on the crypto library with the <a href=""https://www.npmjs.com/package/secp256k1"" rel=""nofollow noreferrer"">secp256k1 from NodeJS</a></p>  <p>This is the code on NodeJS/Browser:</p>  <pre><code>const secp256k1 = require('secp256k1')  var message = [2, 118, 145, 101, 166, 249, 149, 13, 2, 58, 65, 94, 230, 104, 184, 11, 185, 107, 92, 154, 226, 3, 93, 151, 189, 251, 68, 243, 86, 23, 90, 68, 255, 111, 3, 0, 0, 0, 0, 0, 0, 187, 226, 2, 0, 0, 0, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 4, 0, 84, 101, 115, 116, 105, 0, 0, 0, 0, 0, 0, 0];  var private_key_buffer = [122, 241, 114, 103, 51, 227, 157, 149, 221, 126, 157, 173, 31, 111, 43, 118, 208, 71, 123, 59, 96, 68, 57, 177, 53, 59, 151, 188, 36, 167, 40, 68]  const signature = secp256k1.sign(SHA3BUF(message), private_key_buffer) </code></pre>  <p>This is my implementation in python:</p>  <pre><code>import hashlib import ecdsa  message = bytearray([2, 118, 145, 101, 166, 249, 149, 13, 2, 58, 65, 94, 230, 104, 184, 11, 185, 107, 92, 154, 226, 3, 93, 151, 189, 251, 68, 243, 86, 23, 90, 68, 255, 111, 3, 0, 0, 0, 0, 0, 0, 187, 226, 2, 0, 0, 0, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 4, 0, 84, 101, 115, 116, 105, 0, 0, 0, 0, 0, 0, 0])  private_key_buffer = bytearray([122, 241, 114, 103, 51, 227, 157, 149, 221, 126, 157, 173, 31, 111, 43, 118, 208, 71, 123, 59, 96, 68, 57, 177, 53, 59, 151, 188, 36, 167, 40, 68])  signinKey = ecdsa.SigningKey.from_string(private_key_buffer, curve=ecdsa.SECP256k1)  signature = signinKey.sign_deterministic(message, hashfunc=hashlib.sha3_256) </code></pre>  <p>but by some reason, the signature I get in the javascript code is diferent from the python code:</p>  <pre><code>java script signature: [23, 54, 64, 151, 95, 33, 200, 66, 246, 166, 144, 182, 81, 179, 124, 223, 250, 50, 137, 169, 45, 181, 197, 74, 225, 207, 116, 125, 50, 241, 38, 52, 118, 215, 252, 94, 191, 154, 200, 195, 152, 73, 1, 197, 158, 24, 72, 177, 118, 39, 241, 82, 114, 107, 25, 106, 67, 205, 202, 4, 7, 57, 82, 237]  python script signature: [213, 69, 97, 237, 85, 226, 217, 201, 51, 14, 220, 92, 105, 59, 54, 92, 87, 88, 233, 147, 191, 15, 21, 86, 134, 202, 205, 223, 83, 134, 70, 39, 10, 19, 147, 20, 181, 180, 88, 103, 79, 55, 144, 98, 84, 2, 224, 127, 192, 200, 200, 250, 170, 129, 67, 99, 163, 72, 92, 253, 109, 108, 104, 206] </code></pre>  <p>So how can I make the python code output the same signature of the JS code?</p>"	58173175	"<p>For the <em>deterministic</em> ECDSA as described in <a href=""https://www.rfc-editor.org/rfc/rfc6979"" rel=""nofollow noreferrer"">RFC6979</a>, a hash algorithm is used in two places: One algorithm (<code>H1</code>) is used for hashing the message, another (<code>H2</code>) for determining the <code>k</code>-value. <code>k</code> is a parameter within the signature algorithm, whose role is described e.g. in <a href=""https://www.rfc-editor.org/rfc/rfc6979#section-2.4"" rel=""nofollow noreferrer"">RFC6979, section 2.4</a> or also <a href=""https://en.wikipedia.org/wiki/Elliptic_Curve_Digital_Signature_Algorithm#Signature_generation_algorithm"" rel=""nofollow noreferrer"">here</a>. For the non-deterministic variant <code>k</code> is determined randomly, for the deterministic variant as described in RFC6979.</p> <p>RFC6979 doesn't specify that <code>H1</code> and <code>H2</code> must be different, see <a href=""https://www.rfc-editor.org/rfc/rfc6979#section-3.6"" rel=""nofollow noreferrer"">RFC6979, section 3.6</a>. Nevertheless, it makes sense that an implementation offers the possibility to define both hash algorithms separately.</p> <ol> <li><p>The ECDSA implementation of Python <em>generally</em> allows two different hash algorithms to be applied. Before this is shown in the 2nd case, the following variant, which correponds to the posted Python-code, applies the <em>same</em> hash algorithm <code>H1 = H2 = SHA3-256</code>. The hash algorithm specified in the <code>sign_deterministic</code>-method defines both <code>H1</code> and <code>H2</code>:</p> <pre><code> import hashlib  import ecdsa   message = b'Everything should be made as simple as possible, but not simpler.'  private_key_buffer = bytearray.fromhex('0000000000000000000000000000000000000000000000000000000000000001')    sk = ecdsa.SigningKey.from_string(private_key_buffer, curve=ecdsa.SECP256k1)   signature = sk.sign_deterministic(message, hashfunc=hashlib.sha3_256)   print(signature.hex()) </code></pre> <p>The signature is:</p> <pre><code> r = 88ecdbc6a2762e7ad1160f7c984cd61385ff07982280538dd7d2103be2dce720  s = c1487df9feab7afda6e6115bdd4d9c5316e3f917a3235a5e47aee09624491304 </code></pre> </li> <li><p>The next variant uses <code>H1 = SHA3-256</code> for hashing the message and <code>H2 = SHA256</code> for <code>k</code>-determination. This is possible by replacing the <code>sign_deterministic</code>-method with the <code>sign_digest_deterministic</code>-method, which allows separate hashing of the message with <code>H1</code>. The hash algorithm specified in the <code>sign_digest_deterministic</code>-method then only defines <code>H2</code>:</p> <pre><code> import hashlib  import ecdsa   message = b'Everything should be made as simple as possible, but not simpler.'  private_key_buffer = bytearray.fromhex('0000000000000000000000000000000000000000000000000000000000000001')    digest = hashlib.sha3_256()  digest.update(message)  hash = digest.digest()   sk = ecdsa.SigningKey.from_string(private_key_buffer, curve=ecdsa.SECP256k1)   signature = sk.sign_digest_deterministic(hash, hashfunc=hashlib.sha256)   print(signature.hex()) </code></pre> <p>The signature is:</p> <pre><code> r = 64b10395957b78d3bd3db279e5fa4ebee36b58dd1becace4bc2d7e3a04cf6259  s = 19f1eee7495064ac679d7b64ab7213b921b650c0a3746f2938ffeede0ff1f2e8 </code></pre> </li> <li><p>The following code is functionally identical to the posted NodeJS-code:</p> <pre><code> const secp256k1 = require('secp256k1')  const sha3 = require('js-sha3')   message = 'Everything should be made as simple as possible, but not simpler.'  private_key_buffer = Buffer.from('0000000000000000000000000000000000000000000000000000000000000001','hex')   digest = sha3.sha3_256;  hash = Buffer.from(digest(message), 'hex')   signature = secp256k1.sign(hash, private_key_buffer)  console.log(signature.signature.toString('hex')) </code></pre> <p>and generates the <em>same</em> signature as in the 2nd case, i.e. apparently <code>H2 = SHA256</code>. I didn't find a way to change this to <code>SHA3-256</code> without much effort. However, according to the documentation it is possible to <a href=""https://github.com/cryptocoinjs/secp256k1-node/blob/master/API.md#signbuffer-message-buffer-privatekey--object-options---signature-buffer-recovery-number"" rel=""nofollow noreferrer"">replace the default generator</a> that implements RFC6979. This should also change <code>H2</code>, but could be more expensive.</p> </li> </ol> <p><em>In summary:</em> The simplest way to fix the incompatibility of both codes is to change the Python-code as described above in the 2nd case, i.e. to use the <code>sign_digest_deterministic</code>-method. The message is then hashed with <code>SHA3-256</code>, the <code>k</code>-generation takes place with <code>SHA256</code>. A more expensive alternative would be to implement an own generator to enable <code>k</code>-generation with <code>SHA3-256</code> in the NodeJS-code. Or of course, you try to find another ECDSA-library for the NodeJS-code that allows you to define <code>H1</code> and <code>H2</code> separately, analogous to the Python-code.</p> <p><strong>Update:</strong></p> <p><em>Canonical signature</em>: If <code>(r,s)</code> is a signature, then <code>(r, -s mod n) = (r, n - s)</code> is also a <a href=""https://en.wikipedia.org/wiki/Elliptic_Curve_Digital_Signature_Algorithm#Signature_generation_algorithm"" rel=""nofollow noreferrer""><em>valid</em> signature</a>. Here <a href=""https://en.wikipedia.org/wiki/Elliptic_Curve_Digital_Signature_Algorithm#Signature_generation_algorithm"" rel=""nofollow noreferrer""><code>n</code></a> is the order of the base point. If in case <code>s &gt; n/2</code> the part <code>-s mod n = n - s</code> is used instead of <code>s</code>, then the result for the signature is <em>unambiguous</em> and is limited to the area below <code>n/2</code>. This is called <em>canonical signature</em>, which is particularly relevant for the <a href=""https://github.com/bitcoin/bips/blob/master/bip-0062.mediawiki#low-s-values-in-signatures"" rel=""nofollow noreferrer"">Bitcoin topic</a> and also frequently used for <a href=""https://bitcointalk.org/index.php?topic=285142.msg3300992#msg3300992"" rel=""nofollow noreferrer"">test vectors</a>.</p>"
58175012	Using Python to write Javascript: look for indexOf new line	javascript|python	2019-09-30 20:38:43.747000 UTC	"<p>I'm using Python to write to a html file some  javascript code.</p>  <p>I'm trying to get the index position of the first occurrence of a new line after a string is found in the main text.</p>  <p>Example text:</p>  <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-html lang-html prettyprint-override""><code>This is a line of text A second line of text here log writing has started first line of log text second line of log text</code></pre> </div> </div> </p>  <p>So I'm trying to get the index position of the f in 'first', as that is the first character after a new line once 'log writing has started' has been found</p>  <p>OUT is the html file I'm writing to</p>  <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-js lang-js prettyprint-override""><code>OUT.write(' var log_string = document.getElementById(""logtext"").innerHTML;') OUT.write(' var screen_index = log_string.indexOf(""log writing has started"");') OUT.write(' var screen_log = log_string.indexOf(""\r"", screen_index);')</code></pre> </div> </div> </p>  <p>log_string = the big chunk of text</p>  <p>screen_index = the index of where that sentence begins</p>  <p>screen_log = the index of the next new line after 'screen_index'</p>  <p>The trouble I'm having is specifying the new line. Because I'm writing a python file that outputs a .html file, I think it's getting confused with the \r</p>  <p>The error I'm getting is:</p>  <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-html lang-html prettyprint-override""><code>Uncaught SyntaxError: Invalid or unexpected token</code></pre> </div> </div> </p>  <p>I've tried </p>  <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-js lang-js prettyprint-override""><code>OUT.write(' var screen_log = log_string.indexOf(r""\n"", screen_index);')</code></pre> </div> </div> </p>  <p>(adding an r before the ""\n"")</p>  <p>But then I get the error</p>  <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-js lang-js prettyprint-override""><code>Uncaught SyntaxError: missing ) after argument list</code></pre> </div> </div> </p>  <p>Any ideas? Thanks</p>"	58175129	"<p>Try escaping <code>\n</code>:</p>  <pre><code>OUT.write(' var screen_log = log_string.indexOf(""\\n"", screen_index);') </code></pre>  <p>In your code, when you write \n a new line is printed and the line is split in two.</p>"
58177835	Python >> Operator returns different output than in javascript >>>	javascript|python|bitwise-operators|bit-shift	2019-10-01 03:55:37.363000 UTC	"<pre><code>a = -506298134  d = 6 d = a &gt;&gt; d &amp; 0xFFFFFFFF d = twos_comp(d, 32)  def twos_comp(val, bits):     """"""compute the 2's complement of int value val""""""     if (val &amp; (1 &lt;&lt; (bits - 1))) != 0: # if sign bit is set e.g., 8bit: 128-255         val = val - (1 &lt;&lt; bits)        # compute negative value     return val </code></pre>  <p>d returns me following <code>-7910909</code></p>  <p>In Javascript</p>  <pre><code>a = -506298134  d = 6 d = a &gt;&gt;&gt; d &amp; 0xFFFFFFFF </code></pre>  <p>d returns <code>59197955</code></p>  <p>What can I do different to return the same value as javascript in python?</p>"	58177870	"<p><code>&gt;&gt;&gt;</code> is non-sign-extending, which is an effect you can get in Python by converting a negative number to a positive one with the number of bits you’re working with. So for JavaScript, 32-bit integers and unsigned result, just mask before instead of after:</p>  <pre><code>a = -506298134 d = 6 d = (a &amp; 0xFFFFFFFF) &gt;&gt; d # d == 59197955 </code></pre>"
58202624	Converting a javascript Coding to Python Coding for Elfish Program	javascript|python|coding-style	2019-10-02 13:32:20.570000 UTC	"<p>I was looking for a program to do the elfish instances. Then I found this javascript code on the web. </p>  <pre><code>var containsE; var containsL;  var containsF;   function elfish(str){      var checkLetter = str[str.length - 1];      if (checkLetter === ""e""){         containsE = true;     }     else if (checkLetter === ""l""){         containsL = true;      }     else if (checkLetter === ""f""){         containsF = true;      }     // base case      if (str.length === 0)         if (containsE &amp;&amp; containsL &amp;&amp; containsF){             return true;          }         else {             return false;          }     // if not base case          return elfish(str.slice(0, str.length - 1));  }  elfish(""whiteleaf"");  </code></pre>  <p>I wonder if it is possible to guide me to convert the code into python with an explanation? the python version is 2.73</p>"	58202920	<p>I think there is nothing special to explain here. Python is very self-explaining in your case. To keep it readable i added parenthesis in the if statement. You could just leave them:</p>  <pre><code>while True:     # type in which word you want     s = input()      # if some letter in your string was found     if ('e' in s) and ('l' in s) and ('f' in s):          print('true')     else:         print('false') </code></pre>
58224221	Send json string from python app to javascript in jinja template	javascript|python|json	2019-10-03 17:33:16.867000 UTC	"<p>I'm trying to send a list from python using Flask on a web server to a client with jinja and javascript. This should be simple using json. This is my python code:</p>  <pre><code>@app.route(""/demo"") def demo():     basket = [{""fruit"": ""apple"", ""amount"": 3}, {""fruit"": ""pear"", ""amount"": 1}, {""fruit"": ""kiwi"", ""amount"": 2}]     return render_template(""demo.html"", basket=json.dumps(basket)) </code></pre>  <p>This is a simplified code, in the final program the list will be the result of a database query. The jinja template is as follows:</p>  <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-js lang-js prettyprint-override""><code>{% extends ""layout.html"" %}  {% block title %}     Demo {% endblock %}  {% block main %}     &lt;script&gt;         console.log('{{ basket }}');         object = JSON.parse('{{ basket }}')     &lt;/script&gt;  {% endblock %}</code></pre> </div> </div> </p>  <p>However, javascript returns a parsing error:</p>  <blockquote>   <p>[{&#34;fruit&#34;: &#34;apple&#34;, &#34;amount&#34;: 3}, {&#34;fruit&#34;: &#34;pear&#34;, &#34;amount&#34;: 1}, {&#34;fruit&#34;: &#34;kiwi&#34;, &#34;amount&#34;: 2}]   demo:1 Uncaught SyntaxError: Unexpected token &amp; in JSON at position 2       at JSON.parse ()       at demo:54</p> </blockquote>  <p>It seems that the double quote "" is somehow translated to the HTML code &amp;#34 for the "" character. Subsequently JSON.parse cannot handle that. Tried breaking up the list in two arrays 'fruit' and 'amount', same error. I'm guessing that the client doesn't know that I'm sending json and that I should set content-type to application/json. Is that right, and if it is, how and where should I do this?</p>  <p>UPDATE after Makozaki's answer: Passing 'basket' as a python object (instead of a json object) combined with a jinja for loop works, but only if you rebuild arrays of single elements:</p>  <pre><code>&lt;script&gt;     fruit = [];     {% for item in basket %}         fruit.push('{{ item[""fruit""] }}')     {% endfor %}     console.log(fruit) &lt;/script&gt; </code></pre>  <p>Trying to push items consisting of 'fruit' and 'amount' will again contain all the escaped characters. And it seems silly that you would have to rebuild an array that is passed in its entirety as an object.</p>  <p>Turning off autoescape works as well, but in an unexpected way:</p>  <pre><code>&lt;script&gt;     {% autoescape false %}         object = {{ basket }};     {% endautoescape %} &lt;/script&gt; </code></pre>  <p>This returns exactly the object that is passed. But the funny thing is: you have to omit the single quotes before and after the double curly braces! (as opposed to the previous example)</p>  <p>Thanks for the inspiration!</p>"	58224433	"<p>In short <code>object|tojson|safe</code> is the way to do it, example from <a href=""https://flask.palletsprojects.com/en/1.1.x/api/#module-flask.json"" rel=""nofollow noreferrer"">JSON Support</a>.</p>  <pre><code>&lt;script type=text/javascript&gt;     doSomethingWith({{ user.username|tojson|safe }}); &lt;/script&gt; </code></pre>"
58246452	"When I try to convert a hex string to an integer in JavaScript, I don't get the same number as I do in python"	javascript|cryptojs	2019-10-05 07:56:04.023000 UTC	"<p>I've been trying to convert a hex string to an integer in JavaScript but the number I get isn't the same as the number I get in python.</p>  <p>Here's my code in JS:</p>  <pre><code>var x = CryptoJS.MD5('h').toString(); BigInt(parseInt(x, 16)); </code></pre>  <p>Here's what I get:</p>  <pre><code>49268479078006859472353325704298889216n </code></pre>  <p>And when I run this in python:</p>  <pre><code>int(hashlib.md5('h'.encode()).hexdigest(), 16) </code></pre>  <p>I get:</p>  <pre><code>49268479078006861543109070154241760913 </code></pre>"	58246666	"<p><code>parseInt</code> has already lost the precision for you by converting to a number before you convert to <code>BigInt</code>.</p>  <p>You can use… a <code>0x</code> prefix? It seems weird, like there’s a missing <code>BigInt.parse</code> API, but there you go.</p>  <pre><code>BigInt('0x' + x) </code></pre>"
58261157	How to have something similar to Javascript callbacks in Python	python|node.js|python-asyncio	2019-10-06 20:55:32.270000 UTC	"<p>I am trying to get my head around Python asyncio . This is a simple program i wrote . The logic i am trying to simulate is as follows:</p>  <ol> <li><p>I get a list of names from some database. Since we are going to do something with those names after we get them hence i made it a simple function and not an asynchronous one.</p></li> <li><p>After we get the data we again make a call to some external API using the name that we have. Now since this would be an expensive operation from IO standpoint and the API calls for individual names don't depend on each other it makes sense to make them anonymous.</p></li> </ol>  <p>I looked up this thread in Stackoverflow(<a href=""https://stackoverflow.com/questions/36647825/cooperative-yield-in-asyncio"">Cooperative yield in asyncio</a>) which says that to give back control to the event loop to do something else we have to do <code>asyncio.sleep(0)</code>.</p>  <p>Here i am comparing the async behaviour of Node.js and Python. If i give back control to the event loop using the above syntax my long running API call would remain suspended right and would not happen in the background as in Node.js?</p>  <p>In Node.js when we make an external API call we get something back called Promises on which we can wait to finish . It essentially means that the database call or API call is happening in the background and we get back something when it is done.</p>  <p>Am i missing something critical concept here about Python asynchronous programming ? Kindly throw some more light on this .</p>  <p>Below is the code and its output:</p>  <pre><code>import asyncio import time   async def get_message_from_api(name):     # This is supposed to be a long running operation like getting data from external API     print(f""Attempting to yield control to the other tasks....for {name}"")     await asyncio.sleep(0)     time.sleep(2)     return f""Creating message for {name}""   async def simulate_long_ops(name):     print(f""Long running operation starting for {name}"")     message = await get_message_from_api(name)     print(f""The message returned by the long running operation is {message}"")   def get_data_from_database():     return [""John"", ""Mary"", ""Sansa"", ""Tyrion""]   async def main():     names = get_data_from_database()     futures = []     for name in names:         futures.append(loop.create_task(simulate_long_ops(name)))     await asyncio.wait(futures)   if __name__ == '__main__':     try:         loop = asyncio.get_event_loop()         loop.run_until_complete(main())     except Exception as e:         print(e)     finally:         loop.close() </code></pre>  <p>Output:</p>  <pre><code>Long running operation starting for John Attempting to yield control to the other tasks....for John Long running operation starting for Mary Attempting to yield control to the other tasks....for Mary Long running operation starting for Sansa Attempting to yield control to the other tasks....for Sansa Long running operation starting for Tyrion Attempting to yield control to the other tasks....for Tyrion The message returned by the long running operation is Creating message for John The message returned by the long running operation is Creating message for Mary The message returned by the long running operation is Creating message for Sansa The message returned by the long running operation is Creating message for Tyrion </code></pre>"	58261546	"<p>The mistake in your code is that you call <code>time.sleep</code>. You should never call that function in asyncio code, it blocks the whole event loop; <code>await asyncio.sleep()</code> instead. In JavaScript terms, calling <code>time.sleep</code> is almost as bad as sleeping <a href=""https://stackoverflow.com/q/951021/1600898"">like this</a> instead of <a href=""https://stackoverflow.com/a/39914235/1600898"">like this</a>. (I say ""almost"" because <code>time.sleep</code> at least doesn't burn CPU cycles while waiting.)</p>  <p>Attempts to work around that mistake led to the second problem, the use of <code>asyncio.sleep(0)</code> to give control to the event loop. Although the idiom was added early, the behavior was documented only much <a href=""https://bugs.python.org/issue34476"" rel=""nofollow noreferrer"">later</a>. As Guido <a href=""https://github.com/python/asyncio/issues/284#issuecomment-153910205"" rel=""nofollow noreferrer"">hints</a> in the original issue, explicit yielding to the event loop is only appropriate for advanced usage and its use by beginners is most likely an error. If your long-running operation is async ― as is the case in your code, once <code>time.sleep()</code> is replaced with <code>await asyncio.sleep()</code> ― you don't need to drop to the event loop manually. Instead, the async operation will drop as needed on every <code>await</code>, just like it would in JavaScript.</p>  <blockquote>   <p>In Node.js when we make an external API call we get something back called Promises on which we can wait to finish.</p> </blockquote>  <p>In Python a <a href=""https://docs.python.org/3/library/asyncio-future.html#asyncio.Future"" rel=""nofollow noreferrer"">future</a> is a close counterpart, and the async models are very similar. One significant difference is that Python's async functions don't return scheduled futures, but lightweight coroutine objects which you must either await or pass to <a href=""https://docs.python.org/3/library/asyncio-task.html#creating-tasks"" rel=""nofollow noreferrer""><code>asyncio.create_task()</code></a> to get them to run. Since your code does the latter, it looks correct.</p>  <p>The return value of <code>create_task</code> is <a href=""https://docs.python.org/3/library/asyncio-task.html#asyncio.Task"" rel=""nofollow noreferrer"">an object</a> that implements the <code>Future</code> interface. Future sports an <a href=""https://docs.python.org/3/library/asyncio-future.html#asyncio.Future.add_done_callback"" rel=""nofollow noreferrer""><code>add_done_callback</code></a> method with the semantics you'd expect. But it's much better to simply <code>await</code> the future instead - it makes the code more readable and it's clear where the exceptions go.</p>  <p>Also, you probably want to use <a href=""https://docs.python.org/3/library/asyncio-task.html#asyncio.gather"" rel=""nofollow noreferrer""><code>asyncio.gather()</code></a> rather than <code>asyncio.wait()</code> to ensure that exceptions do not go unnoticed. If you are using Python 3.7, consider using <a href=""https://docs.python.org/3/library/asyncio-task.html#asyncio.run"" rel=""nofollow noreferrer""><code>asyncio.run()</code></a> to run the async main function.</p>"
58292563	Webscraping a Javascript React page using Python Selenium on an element that hides after few seconds	javascript|python|selenium|web-scraping|beautifulsoup	2019-10-08 19:03:35.970000 UTC	"<p>I'm trying to scrape a webpage that has a React element that hides the dropdown after few seconds. </p>  <p>This is what you see when you first get to the page and the tab I would like to scrape. </p>  <p><a href=""https://i.stack.imgur.com/VVY4r.jpg"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/VVY4r.jpg"" alt=""Dropdown element I want to scrape. Specifically the &#39;24&#39; people are viewing this event line.""></a></p>  <p>I'm trying to scrape the part that says <strong>Don't miss out! 24 people are viewing this event</strong></p>  <p>After few seconds, the tab disappears and gets replaced by another dropdown element that says <strong>Get notified at the right price!</strong></p>  <p><a href=""https://i.stack.imgur.com/V1Q5P.jpg"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/V1Q5P.jpg"" alt=""new dropdown that replaces the one i want to scrape. It hides the previous dropdown""></a></p>  <p>The source code reveals the <strong>view count</strong> drop down as being hidden after few seconds. The top of the code shows the new dropdown while the bottom with the <strong>'hide'</strong> in the div class being the dropdown I want to scrape. </p>  <p><a href=""https://i.stack.imgur.com/2A3fx.jpg"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/2A3fx.jpg"" alt=""The source code showing the hidden dropdown code""></a></p>  <p>I've tried getting the <strong>div class = ""urgency-component-container</strong> but due to it being hidden, it returns nothing. I've also tried getting the <strong>div class = ""dropdown-header-item""</strong> but that was returning nothing as well. </p>  <p>I've tried getting the XPath to the dropdown-header-item (//*[@id=""dropdown-header""]/div/div<a href=""https://i.stack.imgur.com/VVY4r.jpg"" rel=""nofollow noreferrer"">1</a>) but that didn't work either. </p>  <p>How can I scrape the dropdown that ""hides"" after few seconds? Thanks</p>  <p>EDIT:</p>  <p>the website url is : <a href=""https://www.stubhub.com/anaheim-ducks-tickets-anaheim-ducks-anaheim-honda-center-11-14-2019/event/104217448/?sort=price%20asc"" rel=""nofollow noreferrer"">https://www.stubhub.com/anaheim-ducks-tickets-anaheim-ducks-anaheim-honda-center-11-14-2019/event/104217448/?sort=price%20asc</a></p>  <p>The code I used was</p>  <pre><code>from selenium import webdriver from selenium.webdriver.common.keys import Keys import time  driver = webdriver.Chrome() url = 'https://www.stubhub.com/anaheim-ducks-tickets-anaheim-ducks-anaheim-honda-center-11-14-2019/event/104217448/?sort=price+asc' driver.get(url)  content = driver.find_element_by_class_name('dropdown-header-item') </code></pre>  <p>If I execute the code straightaway I get an error </p>  <pre><code>NoSuchElementException: Message: no such element: Unable to locate element: {""method"":""css selector"",""selector"":"".dropdown-header-item""} </code></pre>  <p>but if I wait few seconds and run it then I get </p>  <pre><code>Get notified at the right price!Set price alert </code></pre>"	58294817	"<p>Please try this and let me know how it goes.</p>  <pre><code>from selenium import webdriver from selenium.webdriver.common.keys import Keys import time  driver = webdriver.Chrome('/usr/local/bin/chromedriver')  # Optional argument, if not specified will search path. driver.delete_all_cookies() driver.implicitly_wait(15) driver.maximize_window() url = 'https://www.stubhub.com/anaheim-ducks-tickets-anaheim-ducks-anaheim-honda-center-11-14-2019/event/104217448/?sort=price+asc' driver.get(url) driver.refresh()  content = driver.find_element_by_xpath(""//div[@class='urgency-wrapper']//div[@class='dropdown-header-item']"").text print content  driver.quit() </code></pre>  <h2>output:</h2>  <blockquote>   <p>Don't miss out. 28 people are viewing this event.</p> </blockquote>"
58292563	Webscraping a Javascript React page using Python Selenium on an element that hides after few seconds	javascript|python|selenium|web-scraping|beautifulsoup	2019-10-08 19:03:35.970000 UTC	"<p>I'm trying to scrape a webpage that has a React element that hides the dropdown after few seconds. </p>  <p>This is what you see when you first get to the page and the tab I would like to scrape. </p>  <p><a href=""https://i.stack.imgur.com/VVY4r.jpg"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/VVY4r.jpg"" alt=""Dropdown element I want to scrape. Specifically the &#39;24&#39; people are viewing this event line.""></a></p>  <p>I'm trying to scrape the part that says <strong>Don't miss out! 24 people are viewing this event</strong></p>  <p>After few seconds, the tab disappears and gets replaced by another dropdown element that says <strong>Get notified at the right price!</strong></p>  <p><a href=""https://i.stack.imgur.com/V1Q5P.jpg"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/V1Q5P.jpg"" alt=""new dropdown that replaces the one i want to scrape. It hides the previous dropdown""></a></p>  <p>The source code reveals the <strong>view count</strong> drop down as being hidden after few seconds. The top of the code shows the new dropdown while the bottom with the <strong>'hide'</strong> in the div class being the dropdown I want to scrape. </p>  <p><a href=""https://i.stack.imgur.com/2A3fx.jpg"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/2A3fx.jpg"" alt=""The source code showing the hidden dropdown code""></a></p>  <p>I've tried getting the <strong>div class = ""urgency-component-container</strong> but due to it being hidden, it returns nothing. I've also tried getting the <strong>div class = ""dropdown-header-item""</strong> but that was returning nothing as well. </p>  <p>I've tried getting the XPath to the dropdown-header-item (//*[@id=""dropdown-header""]/div/div<a href=""https://i.stack.imgur.com/VVY4r.jpg"" rel=""nofollow noreferrer"">1</a>) but that didn't work either. </p>  <p>How can I scrape the dropdown that ""hides"" after few seconds? Thanks</p>  <p>EDIT:</p>  <p>the website url is : <a href=""https://www.stubhub.com/anaheim-ducks-tickets-anaheim-ducks-anaheim-honda-center-11-14-2019/event/104217448/?sort=price%20asc"" rel=""nofollow noreferrer"">https://www.stubhub.com/anaheim-ducks-tickets-anaheim-ducks-anaheim-honda-center-11-14-2019/event/104217448/?sort=price%20asc</a></p>  <p>The code I used was</p>  <pre><code>from selenium import webdriver from selenium.webdriver.common.keys import Keys import time  driver = webdriver.Chrome() url = 'https://www.stubhub.com/anaheim-ducks-tickets-anaheim-ducks-anaheim-honda-center-11-14-2019/event/104217448/?sort=price+asc' driver.get(url)  content = driver.find_element_by_class_name('dropdown-header-item') </code></pre>  <p>If I execute the code straightaway I get an error </p>  <pre><code>NoSuchElementException: Message: no such element: Unable to locate element: {""method"":""css selector"",""selector"":"".dropdown-header-item""} </code></pre>  <p>but if I wait few seconds and run it then I get </p>  <pre><code>Get notified at the right price!Set price alert </code></pre>"	58297257	"<p>Looks like site doesn't like scraping and throws up captcha for starters. If there wasn't a captcha then you want the .textContent property of the last element matched with class <code>dropdown-header-item</code></p>  <pre><code>from selenium import webdriver  d = webdriver.Chrome() d.get('https://www.stubhub.com/anaheim-ducks-tickets-anaheim-ducks-anaheim-honda-center-11-14-2019/event/104217448/?sort=price%20asc') elems = d.find_elements_by_css_selector('.dropdown-header-item') if len(elems) &gt; 0:     print(d.find_elements_by_css_selector('.dropdown-header-item')[-1].get_attribute('textContent').replace('\xa0', ' ')) else:     print('Nada') </code></pre>"
58306935	Unable to obtain the same sha256 hash in python and javascript	python|base64|sha256|hashlib|psd2	2019-10-09 14:54:29.903000 UTC	"<p>I am following the steps to call a PSD2 endpoint, base64 code the message, then get SHA256 to obtain the Hash from it and get the base64 of the hash. I am using the same values of the examples to check if I am doing it right. They also provide <a href=""https://caligatio.github.io/jsSHA/"" rel=""nofollow noreferrer"">a website</a> with a js library to check the result.</p>  <p><a href=""https://imgur.com/vsaTbvX"" rel=""nofollow noreferrer"">https://imgur.com/vsaTbvX</a></p>  <p>Input:</p>  <pre><code>ewogICJpbnN0cnVjdGVkQW1vdW50IiA6IHsKICAgICJjdXJyZW5jeSIgOiAiRVVSIiwKICAgICJhbW91bnQiIDogIjE2LjAwIgogIH0sCiAgImRlYnRvckFjY291bnQiIDogewogICAgImliYW4iIDogIkVTNTE0MDAwMDAwMTA1MDAwMDAwMDAwMSIsCiAgICAiY3VycmVuY3kiIDogIkVVUiIKICB9LAogICJjcmVkaXRvck5hbWUiIDogIkNyZWQuIE5hbWUiLAogICJjcmVkaXRvckFjY291bnQiIDogewogICAgImliYW4iIDogIkVTNjYyMTAwMDQxODQwMTIzNDU2Nzg5MSIsCiAgICAiY3VycmVuY3kiIDogIkVVUiIKICB9LAogICJjcmVkaXRvckFkZHJlc3MiIDogewogICAgInN0cmVldCIgOiAiRWplbXBsbyBkZSBjYWxsZSIsCiAgICAiYnVpbGRpbmdOdW1iZXIiIDogIjE1IiwKICAgICJjaXR5IiA6ICJDb3Jkb2JhIiwKICAgICJwb3N0YWxDb2RlIiA6ICIxNDEwMCIsCiAgICAiY291bnRyeSIgOiAiRVMiCiAgfSwKICAicmVtaXR0YW5jZUluZm9ybWF0aW9uVW5zdHJ1Y3R1cmVkIiA6ICJQYWdvIiwKICAiY2hhcmdlQmVhcmVyIiA6ICJDUkVEIgp9 </code></pre>  <p>Expected Output:</p>  <pre><code>pfHPQFso5E7SlQfg9kSVhZuod4k9KnFFEtFs472L5WI= </code></pre>  <p>What I am doing:</p>  <pre class=""lang-py prettyprint-override""><code>import base64 import hashlib   # get_input returns the input base64 in bytes result = base64.b64encode(hashlib.sha256(get_input()).digest()) </code></pre>  <p>In that case, the result is:</p>  <pre><code>b'JRtx3taNOfx00oj2xuyoAxocxfJnL/wEXLYf9+t9jCk=' </code></pre>  <p>Instead of the expected result.</p>  <p><b>This result is the same as the result in that JS page changing the input type from base64 to text</b>, so I assume the input is correct. But with hashlib there are not input type options. So my question is: What I have to do to get the expected output with that input in python?</p>"	58307052	"<p>Try to decode the result:</p>  <pre><code>result = base64.b64encode(hashlib.sha256(""hi"".encode()).digest()) print(result) print(result.decode('utf-8')) </code></pre>  <p>Output:</p>  <pre><code>b'j0NDRmSPa5bfid2pAcUXaxCm2Dlh3TwayItZstwyeqQ=' j0NDRmSPa5bfid2pAcUXaxCm2Dlh3TwayItZstwyeqQ= </code></pre>  <p>source: <a href=""https://docs.python.org/3/howto/unicode.html"" rel=""nofollow noreferrer"">https://docs.python.org/3/howto/unicode.html</a></p>"
58306935	Unable to obtain the same sha256 hash in python and javascript	python|base64|sha256|hashlib|psd2	2019-10-09 14:54:29.903000 UTC	"<p>I am following the steps to call a PSD2 endpoint, base64 code the message, then get SHA256 to obtain the Hash from it and get the base64 of the hash. I am using the same values of the examples to check if I am doing it right. They also provide <a href=""https://caligatio.github.io/jsSHA/"" rel=""nofollow noreferrer"">a website</a> with a js library to check the result.</p>  <p><a href=""https://imgur.com/vsaTbvX"" rel=""nofollow noreferrer"">https://imgur.com/vsaTbvX</a></p>  <p>Input:</p>  <pre><code>ewogICJpbnN0cnVjdGVkQW1vdW50IiA6IHsKICAgICJjdXJyZW5jeSIgOiAiRVVSIiwKICAgICJhbW91bnQiIDogIjE2LjAwIgogIH0sCiAgImRlYnRvckFjY291bnQiIDogewogICAgImliYW4iIDogIkVTNTE0MDAwMDAwMTA1MDAwMDAwMDAwMSIsCiAgICAiY3VycmVuY3kiIDogIkVVUiIKICB9LAogICJjcmVkaXRvck5hbWUiIDogIkNyZWQuIE5hbWUiLAogICJjcmVkaXRvckFjY291bnQiIDogewogICAgImliYW4iIDogIkVTNjYyMTAwMDQxODQwMTIzNDU2Nzg5MSIsCiAgICAiY3VycmVuY3kiIDogIkVVUiIKICB9LAogICJjcmVkaXRvckFkZHJlc3MiIDogewogICAgInN0cmVldCIgOiAiRWplbXBsbyBkZSBjYWxsZSIsCiAgICAiYnVpbGRpbmdOdW1iZXIiIDogIjE1IiwKICAgICJjaXR5IiA6ICJDb3Jkb2JhIiwKICAgICJwb3N0YWxDb2RlIiA6ICIxNDEwMCIsCiAgICAiY291bnRyeSIgOiAiRVMiCiAgfSwKICAicmVtaXR0YW5jZUluZm9ybWF0aW9uVW5zdHJ1Y3R1cmVkIiA6ICJQYWdvIiwKICAiY2hhcmdlQmVhcmVyIiA6ICJDUkVEIgp9 </code></pre>  <p>Expected Output:</p>  <pre><code>pfHPQFso5E7SlQfg9kSVhZuod4k9KnFFEtFs472L5WI= </code></pre>  <p>What I am doing:</p>  <pre class=""lang-py prettyprint-override""><code>import base64 import hashlib   # get_input returns the input base64 in bytes result = base64.b64encode(hashlib.sha256(get_input()).digest()) </code></pre>  <p>In that case, the result is:</p>  <pre><code>b'JRtx3taNOfx00oj2xuyoAxocxfJnL/wEXLYf9+t9jCk=' </code></pre>  <p>Instead of the expected result.</p>  <p><b>This result is the same as the result in that JS page changing the input type from base64 to text</b>, so I assume the input is correct. But with hashlib there are not input type options. So my question is: What I have to do to get the expected output with that input in python?</p>"	58317494	"<p>The website is decoding the input string from base64, hashing it, and then encoding the hash as base64.</p>  <pre><code>&gt;&gt;&gt; s = 'ewogICJpbnN0cnVjdGVkQW1vdW50IiA6IHsKICAgICJjdXJyZW5jeSIgOiAiRVVSIiwKICAgICJhbW91bnQiIDogIjE2LjAwIgogIH0sCiAgImRlYnRvckFjY291bnQiIDogewogICAgImliYW4iIDogIkVTNTE0MDAwMDAwMTA1MDAwMDAwMDAwMSIsCiAgICAiY3VycmVuY3kiIDogIkVVUiIKICB9LAogICJjcmVkaXRvck5hbWUiIDogIkNyZWQuIE5hbWUiLAogICJjcmVkaXRvckFjY291bnQiIDogewogICAgImliYW4iIDogIkVTNjYyMTAwMDQxODQwMTIzNDU2Nzg5MSIsCiAgICAiY3VycmVuY3kiIDogIkVVUiIKICB9LAogICJjcmVkaXRvckFkZHJlc3MiIDogewogICAgInN0cmVldCIgOiAiRWplbXBsbyBkZSBjYWxsZSIsCiAgICAiYnVpbGRpbmdOdW1iZXIiIDogIjE1IiwKICAgICJjaXR5IiA6ICJDb3Jkb2JhIiwKICAgICJwb3N0YWxDb2RlIiA6ICIxNDEwMCIsCiAgICAiY291bnRyeSIgOiAiRVMiCiAgfSwKICAicmVtaXR0YW5jZUluZm9ybWF0aW9uVW5zdHJ1Y3R1cmVkIiA6ICJQYWdvIiwKICAiY2hhcmdlQmVhcmVyIiA6ICJDUkVEIgp9' &gt;&gt;&gt; decoded = base64.b64decode(s) &gt;&gt;&gt; hash_ = hashlib.sha256(decoded) &gt;&gt;&gt; r = base64.b64encode(hash_.digest()) &gt;&gt;&gt; r.decode() 'pfHPQFso5E7SlQfg9kSVhZuod4k9KnFFEtFs472L5WI=' </code></pre>"
58318749	Which method is better: Python SDK (server side) or JavaScript SDK (client-side) to add to and update cloud firestore?	javascript|django|python-3.x|firebase|google-cloud-firestore	2019-10-10 08:38:45.927000 UTC	"<p>I have a Django web application with a postgresql database on an AWS server.  I want to keep this database in sync with a nosql cloud firestore database. We're using cloud firestore as the backend for a mobile app. This means that every form update or new object that is added to the web app needs to be in sync with cloud firestore. </p>  <p>I'm able to update cloud firestore using the Python SDK when each form is submitted via the web app. However, I want to know if this is the best method to keep these two databases in sync. Each time a form is submitted, I have to import the firebase SDK, and then use the methods to update cloud firestore. Obviously, this will take time, but I'm unsure if this method is better, or if using the JavaScript SDK will be better. In essence, which method will perform better?</p>"	58319963	"<ol> <li><p>When you are doing that from python SDK the read and write to cloud fire storage is done from the server means if you have x request and y number of users doing that, your server has to do x*y request to Cloudflare storage. in this case, your transaction from the server will be heavily based on a user basis but you can use admin SDK in python and give only admin to access to DB.</p></li> <li><p>If you want to use js for the same then request will be shared by users and the server will be free but each user should have access to DB write and read, you have to be more careful about authenticating users.</p></li> </ol>  <p>so if its all read requests and user-based filters are done well use from js, if you have doubts on authentications or you don't want to take a risk in that use from python.</p>"
58357375	What is inverse operation of Javascript's CryptoJS.enc.base64.stringify(data) in Python3/Django?	javascript|python|django|encryption|decoding	2019-10-12 18:46:39.233000 UTC	"<p>I'm trying to encrypt in Javascript and decrypt the same data in Python/Django.    </p>  <p><em>Disclaimer: Not Production level code, but to learn concept</em></p>  <p>I generate a key through Diffie Hellman (Ajax using jQuery), which I pass to the encrypt function below. Input is generally an ID and Password in JSON format.</p>  <p>This is how the encryption takes place. {Found the code somewhere.}</p>  <pre><code>function toWordArray(str){     return CryptoJS.enc.Utf8.parse(str); }  function toString(words){     return CryptoJS.enc.Utf8.stringify(words); }  function toBase64String(words){     return CryptoJS.enc.Base64.stringify(words); }  function encrypt(input, key){     console.log(""Input: "" + input);       var PROTOCOL_AES256 = 2;     var secret_key = CryptoJS.SHA256(key);     var header = toWordArray(""AMAZON"" + String.fromCharCode(PROTOCOL_AES256));     var iv = CryptoJS.lib.WordArray.random(16);     var body = CryptoJS.AES.encrypt(input, secret_key, {iv: iv});      // construct the packet     // HEADER + IV + BODY     header.concat(iv);     header.concat(body.ciphertext);      console.log(""Bytes before Base64 encoding: "" + header); //Line 1     // encode in base64     return toBase64String(header); } </code></pre>  <p>The output I get is as follows: </p>  <pre><code>final key: 47 signin:119:33 Input: {""name"":""Buzz"",""password"":""lightyear""} signin:55:25 Bytes before Base64 encoding: 414d415a4f4e02e8ec9b8a949eb754e305acfbe5207f1ebe75272c18146bca57ce399928c0ffd7e506d90e11b011da42b1bd8d2393ec59cc926cef33c2121da3f48dfd59925138 signin:67:25 Payload: QU1BWk9OAujsm4qUnrdU4wWs++Ugfx6+dScsGBRrylfOOZkowP/X5QbZDhGwEdpCsb2NI5PsWcySbO8zwhIdo/SN/VmSUTg= signin:137:37 XHRGEThttp://127.0.0.1:8000/Shenzen/actsignin/?encrypted_string=QU1BWk9OAujsm4qUnrdU4wWs%2B%2BUgfx6%2BdScsGBRrylfOOZkowP%2FX5QbZDhGwEdpCsb2NI5PsWcySbO8zwhIdo%2FSN%2FVmSUTg%3D [HTTP/1.1 500 Internal Server Error 24ms]  AES failed. </code></pre>  <p>Now I decode it in python as follows:</p>  <pre class=""lang-py prettyprint-override""><code>encrypted_string = request.GET['encrypted_string']  print(""Encrypted string decoded: "",base64.b64decode(encrypted_string)) #Line 2 print(""----"") sha256_key = SHA256.new(data=bytes(key)) cipher = AES.new(sha256_key.digest(),AES.MODE_CBC) print(cipher.decrypt(base64.b64decode(encrypted_string))) </code></pre>  <pre><code>[12/Oct/2019 18:39:41] ""GET /Shenzen/dh/?step=calcval&amp;level1=37 HTTP/1.1"" 200 16 Encrypted string decoded:  b""AMAZON\x02\xcb0\xb5~ \xbf&lt;\x96\x16\x0eJY@\x88\xfe\x94\xc28\xf2j\x19n\x8f\x8d\xdb\xb6yc\x89-L\x93\xa3\x9f\xc3i\xd5\xf4e4'|\xa1\x1f\x9d\xb9k\x95O\xb9&lt;\xc3\xa0\xd7\xa6B^\x85+SSToe"" ---- Internal Server Error: /Shenzen/actsignin/ Traceback (most recent call last):   File ""/home/tarunmaganti/Documents/AbhiramSlavery/ProjectLogin/hell/lib/python3.6/site-packages/django/core/handlers/exception.py"", line 34, in inner     response = get_response(request)   File ""/home/tarunmaganti/Documents/AbhiramSlavery/ProjectLogin/hell/lib/python3.6/site-packages/django/core/handlers/base.py"", line 115, in _get_response     response = self.process_exception_by_middleware(e, request)   File ""/home/tarunmaganti/Documents/AbhiramSlavery/ProjectLogin/hell/lib/python3.6/site-packages/django/core/handlers/base.py"", line 113, in _get_response     response = wrapped_callback(request, *callback_args, **callback_kwargs)   File ""/home/tarunmaganti/Documents/AbhiramSlavery/ProjectLogin/UrbanHell/Shenzen/views.py"", line 67, in actsignin     print(cipher.decrypt(base64.b64decode(encrypted_string)))   File ""/home/tarunmaganti/Documents/AbhiramSlavery/ProjectLogin/hell/lib/python3.6/site-packages/Crypto/Cipher/_mode_cbc.py"", line 246, in decrypt     raise ValueError(""Data must be padded to %d byte boundary in CBC mode"" % self.block_size) ValueError: Data must be padded to 16 byte boundary in CBC mode [12/Oct/2019 18:39:44] ""GET /Shenzen/actsignin/?encrypted_string=QU1BWk9OAsswtX4gvzyWFg5KWUCI%2FpTCOPJqGW6Pjdu2eWOJLUyTo5%2FDadX0ZTQnfKEfnblrlU%2B5PMOg16ZCXoUrU1NUb2U%3D HTTP/1.1"" 500 17651put  </code></pre>  <p>I expect that Output of Line 1 and Line 2 to be equal but this is what I get:</p>  <p>Javascript <code>Bytes before Base64 encoding: 414d415a4f4e02e8ec9b8a949eb754e305acfbe5207f1ebe75272c18146bca57ce399928c0ffd7e506d90e11b011da42b1bd8d2393ec59cc926cef33c2121da3f48dfd59925138 signin:67:25</code></p>  <p>Python <code>Encrypted string decoded:  b""AMAZON\x02\xcb0\xb5~ \xbf&lt;\x96\x16\x0eJY@\x88\xfe\x94\xc28\xf2j\x19n\x8f\x8d\xdb\xb6yc\x89-L\x93\xa3\x9f\xc3i\xd5\xf4e4'|\xa1\x1f\x9d\xb9k\x95O\xb9&lt;\xc3\xa0\xd7\xa6B^\x85+SSToe""</code></p>  <p>Can you explain what is happening? How to get the same string as javascript? or How to convert the string in Python into a decryptable(?) data.</p>"	58364928	"<ul> <li><p>In the JavaScript-code, a header (as hexstring: <code>414d415a4f4e02</code>), the random generated IV and the ciphertext are concatenated and Base64-encoded. In the Python-code, the concatenated data are Base64-decoded. However, the splitting into header, IV and ciphertext doesn't seem to be performed. Therefore the ciphertext and the IV are missing for the decryption. Instead of the ciphertext, the concatenated data are used for decryption, which is wrong. And the AES-instance is created without IV, which is also wrong.</p></li> <li><p>On the JavaScript-side, the concatenated data <em>before</em> the Base64-encoding are given in hexadecimal representation by:</p>  <pre><code>414d415a4f4e02e8ec9b8a949eb754e305acfbe5207f1ebe75272c18146bca57ce399928c0ffd7e506d90e11b011da42b1bd8d2393ec59cc926cef33c2121da3f48dfd59925138  </code></pre>  <p>On the Python-side, the concatenated data <em>after</em> the Base64-decoding are given in hexadecimal representation by:</p>  <pre><code>414d415a4f4e02cb30b57e20bf3c96160e4a594088fe94c238f26a196e8f8ddbb67963892d4c93a39fc369d5f46534277ca11f9db96b954fb93cc3a0d7a6425e852b5353546f65 </code></pre>  <p>The data obviously differ starting with the IV (i.e. starting with inclusively the 8th byte). The JavaScript-code generates a random IV with each run, so that the ciphertext is also different for each run. It is most likely that both data come from <em>different</em> runs, because the beginning is the same and the deviation starts with the part that is randomly generated in each run. Otherwise, the data would have to be changed elsewhere (and probably not by the posted code) in this characteristic way.</p></li> <li><p>There may also be a padding-issue. <a href=""https://cryptojs.gitbook.io/docs/#block-modes-and-padding"" rel=""nofollow noreferrer"">CryptoJS</a> uses PKCS7-padding by default. In contrast, <a href=""https://www.dlitz.net/software/pycrypto/api/current/Crypto.Cipher.blockalgo.BlockAlgo-class.html#encrypt"" rel=""nofollow noreferrer"">PyCrypto</a>/<a href=""https://pycryptodome.readthedocs.io/en/latest/src/cipher/classic.html#cbc-mode"" rel=""nofollow noreferrer"">PyCryptodome</a> doesn't use padding by default (i.e. the user must pad manually), so the padding on the Python-side may not be removed automatically during decryption.</p></li> </ul>"
58359332	"Getting Variables inside Javascript Function using BeautifulSoup, Python, Regex"	python|regex|python-3.x|beautifulsoup|lxml	2019-10-12 23:11:36.627000 UTC	"<p>There is an array <code>images</code> defined within a Javascript function that needs to be extracted and converted from the string into a Python list object. </p>  <p>Python's <code>Beautifulsoup</code> is being used to do the parsing.</p>  <pre><code>        var images = [             {                    src: ""http://example.com/bar/001.jpg"",                   title: ""FooBar One""              },               {                    src: ""http://example.com/bar/002.jpg"",                   title: ""FooBar Two""              },           ]         ; </code></pre>  <p><strong>Question:</strong> Why is my code below unable to capture this <code>images</code> array, and how can we fix it?</p>  <p>Thank you!</p>  <p><strong>Desired Output</strong> A Python list object.</p>  <pre><code>[     {            src: ""http://example.com/bar/001.jpg"",           title: ""FooBar One""      },       {            src: ""http://example.com/bar/002.jpg"",           title: ""FooBar Two""      },   ] </code></pre>  <p><strong>Actual Code</strong></p>  <pre><code>import re from bs4 import BeautifulSoup  # Example of a HTML source code containing `images` array html = ''' &lt;html&gt; &lt;head&gt; &lt;script type=""text/javascript""&gt;      $(document).ready(function(){         var images = [             {                    src: ""http://example.com/bar/001.jpg"",                   title: ""FooBar One""              },               {                    src: ""http://example.com/bar/002.jpg"",                   title: ""FooBar Two""              },           ]         ;         var other_data = [{""name"": ""Tom"", ""type"": ""cat""}, {""name"": ""Jerry"", ""type"": ""dog""}];  &lt;/script&gt; &lt;body&gt; &lt;p&gt;Some content&lt;/p&gt; &lt;/body&gt; &lt;/head&gt; &lt;/html&gt; '''  pattern = re.compile('var images = (.*?);') soup = BeautifulSoup(html, 'lxml') scripts = soup.find_all('script')  # successfully captures the &lt;script&gt; element for script in scripts:     data = pattern.match(str(script.string))  # NOT extracting the array!!     if data:         print('Found:', data.groups()[0])     # NOT being printed </code></pre>"	58359654	"<p><em>re.match</em>  matches from the beginning of the string. Your regex has to pass the entire string. Use</p>  <pre><code>pattern = re.compile('.*var images = (.*?);.*', re.DOTALL) </code></pre>  <p>The string is still not in a valid python list format. You have to do some manipulations before you can apply <code>ast.literal_eval</code></p>  <pre><code>for script in scripts:     data = pattern.match(str(script.string))     if data:         list_str = data.groups()[0]         # Remove last comma         last_comma_index = list_str.rfind(',')         list_str = list_str[:last_comma_index] + list_str[last_comma_index+1:]         # Modify src to 'src' and title to 'title'         list_str = re.sub(r'\s([a-z]+):', r'""\1"":', list_str)         # Strip         list_str = list_str.strip()         final_list = ast.literal_eval(list_str.strip())         print(final_list) </code></pre>  <p>Output</p>  <pre><code>[{'src': 'http://example.com/bar/001.jpg', 'title': 'FooBar One'}, {'src': 'http://example.com/bar/002.jpg', 'title': 'FooBar Two'}] </code></pre>"
58359332	"Getting Variables inside Javascript Function using BeautifulSoup, Python, Regex"	python|regex|python-3.x|beautifulsoup|lxml	2019-10-12 23:11:36.627000 UTC	"<p>There is an array <code>images</code> defined within a Javascript function that needs to be extracted and converted from the string into a Python list object. </p>  <p>Python's <code>Beautifulsoup</code> is being used to do the parsing.</p>  <pre><code>        var images = [             {                    src: ""http://example.com/bar/001.jpg"",                   title: ""FooBar One""              },               {                    src: ""http://example.com/bar/002.jpg"",                   title: ""FooBar Two""              },           ]         ; </code></pre>  <p><strong>Question:</strong> Why is my code below unable to capture this <code>images</code> array, and how can we fix it?</p>  <p>Thank you!</p>  <p><strong>Desired Output</strong> A Python list object.</p>  <pre><code>[     {            src: ""http://example.com/bar/001.jpg"",           title: ""FooBar One""      },       {            src: ""http://example.com/bar/002.jpg"",           title: ""FooBar Two""      },   ] </code></pre>  <p><strong>Actual Code</strong></p>  <pre><code>import re from bs4 import BeautifulSoup  # Example of a HTML source code containing `images` array html = ''' &lt;html&gt; &lt;head&gt; &lt;script type=""text/javascript""&gt;      $(document).ready(function(){         var images = [             {                    src: ""http://example.com/bar/001.jpg"",                   title: ""FooBar One""              },               {                    src: ""http://example.com/bar/002.jpg"",                   title: ""FooBar Two""              },           ]         ;         var other_data = [{""name"": ""Tom"", ""type"": ""cat""}, {""name"": ""Jerry"", ""type"": ""dog""}];  &lt;/script&gt; &lt;body&gt; &lt;p&gt;Some content&lt;/p&gt; &lt;/body&gt; &lt;/head&gt; &lt;/html&gt; '''  pattern = re.compile('var images = (.*?);') soup = BeautifulSoup(html, 'lxml') scripts = soup.find_all('script')  # successfully captures the &lt;script&gt; element for script in scripts:     data = pattern.match(str(script.string))  # NOT extracting the array!!     if data:         print('Found:', data.groups()[0])     # NOT being printed </code></pre>"	58359752	"<h2>Method 1</h2>  <p>Maybe, </p>  <pre><code> \bvar\s+images\s*=\s*(\[[^\]]*\]) </code></pre>  <p>might work to some extent:</p>  <h3>Test</h3>  <pre><code>import re from bs4 import BeautifulSoup  # Example of a HTML source code containing `images` array html = ''' &lt;html&gt; &lt;head&gt; &lt;script type=""text/javascript""&gt;      $(document).ready(function(){         var images = [             {                    src: ""http://example.com/bar/001.jpg"",                   title: ""FooBar One""              },               {                    src: ""http://example.com/bar/002.jpg"",                   title: ""FooBar Two""              },           ]         ;         var other_data = [{""name"": ""Tom"", ""type"": ""cat""}, {""name"": ""Jerry"", ""type"": ""dog""}];  &lt;/script&gt; &lt;body&gt; &lt;p&gt;Some content&lt;/p&gt; &lt;/body&gt; &lt;/head&gt; &lt;/html&gt; '''  soup = BeautifulSoup(html, 'html.parser') scripts = soup.find_all('script')  # successfully captures the &lt;script&gt; element  for script in scripts:     data = re.findall(         r'\bvar\s+images\s*=\s*(\[[^\]]*\])', script.string, re.DOTALL)     print(data[0]) </code></pre>  <h3>Output</h3>  <blockquote>   <p>[               {<br>                   src: ""<a href=""http://example.com/bar/001.jpg"" rel=""nofollow noreferrer"">http://example.com/bar/001.jpg</a>"",<br>                   title: ""FooBar One""                },<br>               {<br>                   src: ""<a href=""http://example.com/bar/002.jpg"" rel=""nofollow noreferrer"">http://example.com/bar/002.jpg</a>"",<br>                   title: ""FooBar Two""                },<br>           ]</p> </blockquote>  <hr>  <p>If you wish to simplify/modify/explore the expression, it's been explained on the top right panel of <a href=""https://regex101.com/r/Jbuc9o/1/"" rel=""nofollow noreferrer"">regex101.com</a>. If you'd like, you can also watch in <a href=""https://regex101.com/r/Jbuc9o/1/debugger"" rel=""nofollow noreferrer"">this link</a>, how it would match against some sample inputs.</p>  <hr>  <h2>Method 2</h2>  <p>Another option would be:</p>  <pre><code>import re  string = ''' &lt;html&gt; &lt;head&gt; &lt;script type=""text/javascript""&gt;      $(document).ready(function(){         var images = [             {                    src: ""http://example.com/bar/001.jpg"",                   title: ""FooBar One""              },               {                    src: ""http://example.com/bar/002.jpg"",                   title: ""FooBar Two""              },           ]         ;         var other_data = [{""name"": ""Tom"", ""type"": ""cat""}, {""name"": ""Jerry"", ""type"": ""dog""}];  &lt;/script&gt; &lt;body&gt; &lt;p&gt;Some content&lt;/p&gt; &lt;/body&gt; &lt;/head&gt; &lt;/html&gt; '''  expression = r'src:\s*""([^""]*)""\s*,\s*title:\s*""([^""]*)""'  matches = re.findall(expression, string, re.DOTALL)  output = [] for match in matches:     output.append(dict({""src"": match[0], ""title"": match[1]}))  print(output) </code></pre>  <h3>Output</h3>  <pre><code>[{'src': 'http://example.com/bar/001.jpg', 'title': 'FooBar One'}, {'src': 'http://example.com/bar/002.jpg', 'title': 'FooBar Two'}] </code></pre>  <h3><a href=""https://regex101.com/r/Jbuc9o/1/"" rel=""nofollow noreferrer"">Demo</a></h3>"
58359332	"Getting Variables inside Javascript Function using BeautifulSoup, Python, Regex"	python|regex|python-3.x|beautifulsoup|lxml	2019-10-12 23:11:36.627000 UTC	"<p>There is an array <code>images</code> defined within a Javascript function that needs to be extracted and converted from the string into a Python list object. </p>  <p>Python's <code>Beautifulsoup</code> is being used to do the parsing.</p>  <pre><code>        var images = [             {                    src: ""http://example.com/bar/001.jpg"",                   title: ""FooBar One""              },               {                    src: ""http://example.com/bar/002.jpg"",                   title: ""FooBar Two""              },           ]         ; </code></pre>  <p><strong>Question:</strong> Why is my code below unable to capture this <code>images</code> array, and how can we fix it?</p>  <p>Thank you!</p>  <p><strong>Desired Output</strong> A Python list object.</p>  <pre><code>[     {            src: ""http://example.com/bar/001.jpg"",           title: ""FooBar One""      },       {            src: ""http://example.com/bar/002.jpg"",           title: ""FooBar Two""      },   ] </code></pre>  <p><strong>Actual Code</strong></p>  <pre><code>import re from bs4 import BeautifulSoup  # Example of a HTML source code containing `images` array html = ''' &lt;html&gt; &lt;head&gt; &lt;script type=""text/javascript""&gt;      $(document).ready(function(){         var images = [             {                    src: ""http://example.com/bar/001.jpg"",                   title: ""FooBar One""              },               {                    src: ""http://example.com/bar/002.jpg"",                   title: ""FooBar Two""              },           ]         ;         var other_data = [{""name"": ""Tom"", ""type"": ""cat""}, {""name"": ""Jerry"", ""type"": ""dog""}];  &lt;/script&gt; &lt;body&gt; &lt;p&gt;Some content&lt;/p&gt; &lt;/body&gt; &lt;/head&gt; &lt;/html&gt; '''  pattern = re.compile('var images = (.*?);') soup = BeautifulSoup(html, 'lxml') scripts = soup.find_all('script')  # successfully captures the &lt;script&gt; element for script in scripts:     data = pattern.match(str(script.string))  # NOT extracting the array!!     if data:         print('Found:', data.groups()[0])     # NOT being printed </code></pre>"	58359790	"<p>Here's a way to get there, no regex, not even beautifulsoup - just plain Python string manipulation - in 4 easy steps :)</p>  <pre><code>step_1 = html.split('var images = [') step_2 = "" "".join(step_1[1].split()) step_3 = step_2.split('] ; var other_data = ') step_4= step_3[0].replace('}, {','}xxx{').split('xxx') print(step_4) </code></pre>  <p>Output:</p>  <pre><code>['{ src: ""http://example.com/bar/001.jpg"", title: ""FooBar One"" }',  '{ src: ""http://example.com/bar/002.jpg"", title: ""FooBar Two"" }, '] </code></pre>"
58359332	"Getting Variables inside Javascript Function using BeautifulSoup, Python, Regex"	python|regex|python-3.x|beautifulsoup|lxml	2019-10-12 23:11:36.627000 UTC	"<p>There is an array <code>images</code> defined within a Javascript function that needs to be extracted and converted from the string into a Python list object. </p>  <p>Python's <code>Beautifulsoup</code> is being used to do the parsing.</p>  <pre><code>        var images = [             {                    src: ""http://example.com/bar/001.jpg"",                   title: ""FooBar One""              },               {                    src: ""http://example.com/bar/002.jpg"",                   title: ""FooBar Two""              },           ]         ; </code></pre>  <p><strong>Question:</strong> Why is my code below unable to capture this <code>images</code> array, and how can we fix it?</p>  <p>Thank you!</p>  <p><strong>Desired Output</strong> A Python list object.</p>  <pre><code>[     {            src: ""http://example.com/bar/001.jpg"",           title: ""FooBar One""      },       {            src: ""http://example.com/bar/002.jpg"",           title: ""FooBar Two""      },   ] </code></pre>  <p><strong>Actual Code</strong></p>  <pre><code>import re from bs4 import BeautifulSoup  # Example of a HTML source code containing `images` array html = ''' &lt;html&gt; &lt;head&gt; &lt;script type=""text/javascript""&gt;      $(document).ready(function(){         var images = [             {                    src: ""http://example.com/bar/001.jpg"",                   title: ""FooBar One""              },               {                    src: ""http://example.com/bar/002.jpg"",                   title: ""FooBar Two""              },           ]         ;         var other_data = [{""name"": ""Tom"", ""type"": ""cat""}, {""name"": ""Jerry"", ""type"": ""dog""}];  &lt;/script&gt; &lt;body&gt; &lt;p&gt;Some content&lt;/p&gt; &lt;/body&gt; &lt;/head&gt; &lt;/html&gt; '''  pattern = re.compile('var images = (.*?);') soup = BeautifulSoup(html, 'lxml') scripts = soup.find_all('script')  # successfully captures the &lt;script&gt; element for script in scripts:     data = pattern.match(str(script.string))  # NOT extracting the array!!     if data:         print('Found:', data.groups()[0])     # NOT being printed </code></pre>"	58360893	"<p>You can use a shorter lazy regex and <code>hjson</code> library to deal with unquoted keys</p>  <pre><code>import re, hjson  html = ''' &lt;html&gt; &lt;head&gt; &lt;script type=""text/javascript""&gt;      $(document).ready(function(){         var images = [             {                    src: ""http://example.com/bar/001.jpg"",                   title: ""FooBar One""              },               {                    src: ""http://example.com/bar/002.jpg"",                   title: ""FooBar Two""              },           ]         ;         var other_data = [{""name"": ""Tom"", ""type"": ""cat""}, {""name"": ""Jerry"", ""type"": ""dog""}];  &lt;/script&gt; ''' p = re.compile(r'var images = (.*?);', re.DOTALL) data = hjson.loads(p.findall(html)[0]) print(data) </code></pre>"
58361070	How to return output of Javascript to python?	python	2019-10-13 06:18:44.390000 UTC	"<p>I wanted to create a python file say main.py that when i run it it will run my index.html here is the code:</p>  <pre><code>&lt;!DOCTYPE html&gt; &lt;html lang=""en""&gt; &lt;head&gt;     &lt;meta charset=""UTF-8""&gt;     &lt;meta name=""viewport"" content=""width=device-width, initial-scale=1.0""&gt;     &lt;meta http-equiv=""X-UA-Compatible"" content=""ie=edge""&gt;     &lt;title&gt;Speech API&lt;/title&gt; &lt;/head&gt; &lt;body&gt;     &lt;button  class=""talk""&gt;Talk&lt;/button&gt;     &lt;h3  class=""content""&gt;&lt;/h3&gt;     &lt;script src=""app.js""&gt;&lt;/script&gt; &lt;/body&gt; &lt;/html&gt; </code></pre>  <p>In my HTML file there is a button when I click it it will listen to my microphone and listen to what I talk and automatically recognize it. However, after It will run I want to automatically return the <strong>recognized words</strong> ""event.results[current][0].transcript "" back to python for printing and do some NLP for my specific application. Here is my JS code:</p>  <p>======app.js</p>  <pre><code>const btn = document.querySelector('.talk'); const content = document.querySelector('.content');  const SpeechRecognition = window.speechRecognition || window.webkitSpeechRecognition; const recognition = new SpeechRecognition();  recognition.onstart = function (){ console.log('voice is activated on the microphone'); }  recognition.onresult = function(event){     //console.log(event);     var current = event.resultIndex;     var transcript = event.results[current][0].transcript;     content.textContent = transcript;     console.log( event.results[current][0].transcript);     console.log( transcript); }  //add listerner  btn.addEventListener('click',() =&gt; {     recognition.start(); }); </code></pre>"	58636890	"<p>The Javascript runs in the browser and knows nothing about the server-side python script that generated it.</p>  <p>If you want to send data back to the server for processing, you should provide that service through a web API, which the Javascript calls.</p>"
58403850	"python equivalent to javascript's responseType = ""arraybuffer"";"	python|python-requests|http-headers	2019-10-15 23:34:42.573000 UTC	"<p>I'm using pythons requests library to make a get request that returns a arraybuffer.</p>  <p>when I use <code>requests.get(url)</code>, I end up getting back the text response which is very different from the arraybuffer response I am looking for.</p>  <p>I am able to get the arraybuffer response in node / js with this</p>  <pre><code>req.onload = function(event) {     var res = req.response;     console.log(res) } req.open(""GET"", url, true); req.responseType = ""arraybuffer""; res = req.send()  </code></pre>  <p>However, if <code>req.responseType = ""arraybuffer""</code> is excluded I get the incorrect text response, similar to in python</p>  <p>what is this equivalent to <code>req.responseType = ""arraybuffer""</code> in python requests (or another python http library)?</p>  <p>Thanks a bunch</p>"	61428718	<pre><code>import requests r = requests.get(url) retArray = [int(i) for i in r.content]  # It seems that variable retArray is much like the arraybuffer in the browser. # you can try it out. </code></pre>
58433609	How to extract all text from html excluding css and javascript with lxml in Python?	python|xpath|python-requests|lxml	2019-10-17 13:16:44.537000 UTC	<p>How can I extract all text from a html excluding any css and javascript?</p>  <p>I am trying the following code:</p>  <pre><code>r = requests.get(website) tree = html.fromstring(r.text) html_text = tree.xpath('//text()') </code></pre>  <p>But it also retrieves all css and javascript content from the website</p>	58447826	"<p>You can use the <a href=""https://lxml.de/api/lxml.html.HtmlMixin-class.html#drop_tree"" rel=""nofollow noreferrer""><code>drop_tree()</code></a> method to remove elements that you are not interested in.</p>  <pre><code>tree = html.fromstring(r.text)  unwanted = tree.xpath('//script|//style') for u in unwanted:     u.drop_tree()  html_text = tree.xpath('//text()')  </code></pre>"
58447100	PyQt5 How to update GUI when use evaluateJavaScript if python is still running	python|pyqt|qwebview	2019-10-18 08:41:34.503000 UTC	"<p>I would like to modify my GUI dynamically with the evaluateJavaScript command</p>  <p>I noticed that the GUI is updated only when python has finished working. I created this example code:</p>  <p>Base GUI:</p>  <pre><code>webView = QWebView() myObj = ExampleClass(webView) webView.page().mainFrame().addToJavaScriptWindowObject(""pyObj"", myObj) webView.setHtml(''' &lt;html&gt;     &lt;body&gt;         &lt;div id=""content""&gt;&lt;/div&gt;         &lt;button onClick=""pyObj.example()""&gt;start&lt;/button&gt;     &lt;/body&gt; &lt;/html&gt; ''') </code></pre>  <p>Python code for update Html GUI:</p>  <pre><code>class ExampleClass(QtCore.QObject):     def __init__(self, webView):         super(ExampleClass, self).__init__(webView)         self.webView = webView      @QtCore.pyqtSlot()     def example(self):         print(""start"")         for i in range(0,5):             print(i)             self.webView.page().mainFrame().evaluateJavaScript('document.getElementById(""content"").innerHTML = ""'+str(i)+'"";')             time.sleep(1)             #simulation of a heavy code             for a in range(0,999):                 for b in range(0,9999):                     c = a * b; </code></pre>  <p>Objective: after pressing the ""start"" button I would like to see the numbers 0 1 2 3 4 sequentially appear in my GUI. Current result: after pressing the ""start"" button for N seconds nothing happens and then the number 4 appears</p>"	58448500	"<p>In general GUI frameworks should not have blocking code, that blocks the event loop from running.</p>  <p>If you really need this you should use a thread / Qthread and send signals to update the GUI</p>"
58447100	PyQt5 How to update GUI when use evaluateJavaScript if python is still running	python|pyqt|qwebview	2019-10-18 08:41:34.503000 UTC	"<p>I would like to modify my GUI dynamically with the evaluateJavaScript command</p>  <p>I noticed that the GUI is updated only when python has finished working. I created this example code:</p>  <p>Base GUI:</p>  <pre><code>webView = QWebView() myObj = ExampleClass(webView) webView.page().mainFrame().addToJavaScriptWindowObject(""pyObj"", myObj) webView.setHtml(''' &lt;html&gt;     &lt;body&gt;         &lt;div id=""content""&gt;&lt;/div&gt;         &lt;button onClick=""pyObj.example()""&gt;start&lt;/button&gt;     &lt;/body&gt; &lt;/html&gt; ''') </code></pre>  <p>Python code for update Html GUI:</p>  <pre><code>class ExampleClass(QtCore.QObject):     def __init__(self, webView):         super(ExampleClass, self).__init__(webView)         self.webView = webView      @QtCore.pyqtSlot()     def example(self):         print(""start"")         for i in range(0,5):             print(i)             self.webView.page().mainFrame().evaluateJavaScript('document.getElementById(""content"").innerHTML = ""'+str(i)+'"";')             time.sleep(1)             #simulation of a heavy code             for a in range(0,999):                 for b in range(0,9999):                     c = a * b; </code></pre>  <p>Objective: after pressing the ""start"" button I would like to see the numbers 0 1 2 3 4 sequentially appear in my GUI. Current result: after pressing the ""start"" button for N seconds nothing happens and then the number 4 appears</p>"	58453246	"<p>As <a href=""https://stackoverflow.com/users/858675/gelonida"">@gelonida</a> points out, the solution in general is to use threads and notify the GUI through signals, so my answer provides a possible implementation.</p>  <p>To implement in threads, the for-loop must be rearranged in sequential tasks, for example using iterators, and then call the next one when the task has been completed through a signal. For the time-consuming task in this case I have created a worker who lives in another thread and the ""task"" method must be invoked.</p>  <pre class=""lang-py prettyprint-override""><code>import sys from PyQt5 import QtCore, QtWidgets, QtWebKitWidgets   class Worker(QtCore.QObject):     finished = QtCore.pyqtSignal()      @QtCore.pyqtSlot()     def task(self):         # simulation of a heavy code         for a in range(999):             for b in range(9999):                 c = a * b         self.finished.emit()   class ExampleClass(QtCore.QObject):     def __init__(self, webView):         super(ExampleClass, self).__init__(webView)         self.webView = webView          thread = QtCore.QThread(self)         thread.start()          self.m_worker = Worker()         self.m_worker.moveToThread(thread)         self.m_worker.finished.connect(self.execute)          self.m_numbers = None      @QtCore.pyqtSlot()     def example(self):         print(""example"")         self.m_numbers = iter(range(5))         self.execute()      @QtCore.pyqtSlot()     def execute(self):         if self.m_numbers is None:             return         try:             i = next(self.m_numbers)         except StopIteration:             return         else:             self.webView.page().mainFrame().evaluateJavaScript(                 'document.getElementById(""content"").innerHTML = ""{}"";'.format(i)             )             QtCore.QTimer.singleShot(1000, self.m_worker.task)   if __name__ == ""__main__"":     html = """"""&lt;html&gt;     &lt;body&gt;         &lt;div id=""content""&gt;&lt;/div&gt;         &lt;button onClick=""pyObj.example()""&gt;start&lt;/button&gt;     &lt;/body&gt; &lt;/html&gt;""""""      app = QtWidgets.QApplication(sys.argv)      view = QtWebKitWidgets.QWebView()     obj = ExampleClass(view)     view.page().mainFrame().addToJavaScriptWindowObject(""pyObj"", obj)     view.setHtml(html)     view.resize(640, 480)     view.show()     sys.exit(app.exec_()) </code></pre>"
58490978	Call JavaScript (3rd party library) from Python	javascript|python	2019-10-21 16:59:46.203000 UTC	"<p>I've already searched quite a bit but came to now clear conclusion as some projects (pyv8) seem to be dead and I'm not sure if that is suitable at all. The 3rd part lib requires a DOM, eg. a container element in which it runs. It also uses web assembly and in general is pretty heavy.</p>  <p>Not sure if libs like pyv8 would actually be suitable for that. Other approach would be to go with selenium and headless chrome or a local node.js service but both of these sound very heavy. Oh, and the lib must work in windows as that's simply company policy, windows servers so PyMiniRacer is out.</p>  <p>What are my other options?</p>"	58491237	"<p>Consider taking a look at this post: <a href=""https://stackoverflow.com/questions/8284765/how-do-i-call-a-javascript-function-from-python"">How do I call a Javascript function from Python?</a>. </p>  <p><strong>However</strong>, if your objective is to access JS code in a webpage for reasons such as webscraping, you could also consider using <strong><code>selenium webdriver</code> + <code>python</code></strong> to do so. Take a look at this <code>medium.com</code> post: <a href=""https://medium.com/@mahmudahsan/how-to-run-javascript-in-python-web-scraping-web-testing-16bd04894360"" rel=""nofollow noreferrer"">How to Run JavaScript in Python | Web Scraping | Web Testing</a> </p>  <p><strong>Other Resources</strong>:  </p>  <ol> <li><a href=""https://www.quora.com/How-do-we-use-JavaScript-with-Python"" rel=""nofollow noreferrer"">https://www.quora.com/How-do-we-use-JavaScript-with-Python</a>  </li> <li>Python to JS: <a href=""https://pypi.org/project/javascripthon/"" rel=""nofollow noreferrer"">https://pypi.org/project/javascripthon/</a></li> </ol>  <p>P.S: I am not sure if this would help you. There is another library (<a href=""https://pypi.org/project/PyExecJS/"" rel=""nofollow noreferrer"">PyExecJS</a>) which is maintained no longer; but I think you have looked it up already.</p>"
58502652	Scraping dynamically generated html by JavaScript with Python and Selenium	python|selenium|dynamic-html	2019-10-22 10:54:06.203000 UTC	"<p>I currently have a problem with dynamically generated html code on this side:</p> <p><a href=""http://www.economia-sniim.gob.mx/Nuevo/Home.aspx?opcion=Consultas/MercadosNacionales/PreciosDeMercado/Agricolas/ConsultaFrutasYHortalizas.aspx?SubOpcion=4%7C0"" rel=""nofollow noreferrer"">http://www.economia-sniim.gob.mx/Nuevo/Home.aspx?opcion=Consultas/MercadosNacionales/PreciosDeMercado/Agricolas/ConsultaFrutasYHortalizas.aspx?SubOpcion=4|0</a></p> <p>I would like to choose &quot;Origen&quot; and &quot;Date&quot; options in website, but I don't have all HTML code.</p> <p>Could someone give me a hint, how to <strong>scrape</strong> all dynamically generated html code ?</p> <p>Thanks,</p>"	58502782	"<p>The advantage with selenium is that you can actually start a browser session from your program and enable an event in javascript (like in this case scroll)</p>  <pre><code>In [8]: from bs4 import BeautifulSoup  In [9]: from selenium import webdriver  In [10]: driver = webdriver.Firefox()  In [11]: driver.get('http://cavemendev.com')  In [12]: html = driver.page_source  In [13]: soup = BeautifulSoup(html)  In [14]: driver.execute_script(""window.scrollTo(0, Y)"")  In [15]: for tag in soup.find_all('title'):    ....:     print tag.text </code></pre>  <p>Let me know if doesn't make much sense</p>"
58505125	Python script that reads a Json and converts it to a JavaScript	javascript|python	2019-10-22 13:13:24.370000 UTC	"<p>I have a JSON that I can catch her from the Web or download on my Linux... And I need to assemble a standardized code from this JSON.</p>  <p>I need to assemble a JavaScript always standard with as modifications that come from my JSON.</p>  <p>I need to change two values in my JavaScript.</p>  <p>Today currently works right, plus I that manual mount, wanted to assemble this automatica using Python or JavaScript.</p>  <p>My JSON:</p>  <pre><code>{     ""home"": [         {             ""base_url"": ""home"",             ""redirect_url"": ""/"",             ""type"": ""www.testemestradoolpt.com.br""         }     ],     ""portal"": [         {             ""base_url"": ""portal"",             ""redirect_url"": ""/"",             ""type"": ""www.testemestradoolpt.com.br""         }     ],     ""digital"": [         {             ""base_url"": ""digital"",             ""redirect_url"": ""/"",             ""type"": ""www.testemestradoolpt.com.br""         }      ] } </code></pre>  <p>My Java Script:</p>  <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-js lang-js prettyprint-override""><code>'use strict';  const querystring = require('querystring');   exports.handler = (event, context, callback) =&gt; {      const request = event.Records[0].cf.request;      const headers = request.headers;      const uri = request.uri;       var origin = request.origin[0].custom.domainName;      console.log(`Request #PATH# is ""${uri}""`);      console.log(`Request #INCOMING REQUEST ORIGIN# set to ""${origin}""`);           const regex = /^\/(digital|home|portal|)[^\/]*/i;  // **&lt;&lt;&lt;&lt; HERE**      if (regex.test(request.uri))      {              /* Set custom origin fields*/              request.origin = {                  custom: {                      domainName: 'www.testemestradoolpt.com.br' // **&lt;&lt; HERE**                  }              };              request.headers['host'] = [{ key: 'host', value: '*'}];              /**origin = request.origin.custom.domainName;  enable it for testing*/     }     /** for testing purposes don't use unless you need to, big performance hit     console.log(`###### - &gt; Request HOST ""${request.headers.host[0].value}""`);     console.log(`###### - &gt; Final Request Origin Server ""${origin}""`);     */     callback(null, request); };</code></pre> </div> </div> </p>  <p>If you notice I just need to add my <code>base_url</code> that comes from my JSON in the regular JavaScript expression field and only once the type that and the URL in the other field, the URL will always be the same.</p>  <p>I made a python script that brings me the base URL, more I need a python script that mounts to min the Javascript with the variables of the JSON as the Javascript above I sent, and I'm having a lot of trouble doing that , follow what I could do in Python:</p>  <pre class=""lang-py prettyprint-override""><code>import json  with open('dataload.json') as json_file:     data = json.load(json_file)     for p in data ['home']:          print(p['base_url']) </code></pre>"	58509837	"<p>You can use string.Template to easily substitute values in a string, i am not entirely sure what parts of the json you want to use to fill the template. below is one approach.</p>  <pre class=""lang-py prettyprint-override""><code>import json from string import Template  # load the template with open(""template.js"", ""rt"") as template_file:     js_template = Template(template_file.read())  with open('dataload.json') as json_file:     data = json.load(json_file)  # select data base = data[""home""][0][""base_url""] url = data[""home""][0][""type""]  # fill the template with the selected data print(js_template.safe_substitute(base=base, url=url)) </code></pre>  <p>template.js</p>  <pre class=""lang-js prettyprint-override""><code>'use strict';  const querystring = require('querystring');   exports.handler = (event, context, callback) =&gt; {      const request = event.Records[0].cf.request;      const headers = request.headers;      const uri = request.uri;       var origin = request.origin[0].custom.domainName;      console.log(`Request #PATH# is ""${uri}""`);      console.log(`Request #INCOMING REQUEST ORIGIN# set to ""${origin}""`);       const regex = /^\/($base)[^\/]*/i;  // **&lt;&lt;&lt;&lt; HERE**      if (regex.test(request.uri))      {              /* Set custom origin fields*/              request.origin = {                  custom: {                      domainName: '$url' // **&lt;&lt; HERE**                  }              };              request.headers['host'] = [{ key: 'host', value: '*'}];              /**origin = request.origin.custom.domainName;  enable it for testing*/     }     /** for testing purposes don't use unless you need to, big performance hit     console.log(`###### - &gt; Request HOST ""${request.headers.host[0].value}""`);     console.log(`###### - &gt; Final Request Origin Server ""${origin}""`);     */     callback(null, request); }; </code></pre>  <p>output</p>  <pre><code>'use strict';  const querystring = require('querystring');   exports.handler = (event, context, callback) =&gt; {      const request = event.Records[0].cf.request;      const headers = request.headers;      const uri = request.uri;       var origin = request.origin[0].custom.domainName;      console.log(`Request #PATH# is ""${uri}""`);      console.log(`Request #INCOMING REQUEST ORIGIN# set to ""${origin}""`);       const regex = /^\/(home)[^\/]*/i;  // **&lt;&lt;&lt;&lt; HERE**      if (regex.test(request.uri))      {              /* Set custom origin fields*/              request.origin = {                  custom: {                      domainName: 'www.testemestradoolpt.com.br' // **&lt;&lt; HERE**                  }              };              request.headers['host'] = [{ key: 'host', value: '*'}];              /**origin = request.origin.custom.domainName;  enable it for testing*/     }     /** for testing purposes don't use unless you need to, big performance hit     console.log(`###### - &gt; Request HOST ""${request.headers.host[0].value}""`);     console.log(`###### - &gt; Final Request Origin Server ""${origin}""`);     */     callback(null, request); }; </code></pre>"
58522317	Javascript won't work in IPython and Jupyter Notebook	javascript|jquery|html|jupyter-notebook|ipython	2019-10-23 11:55:35.020000 UTC	"<p>I am trying to add a datetime picker widget to my jupyter notebook APP. So I got the code from <a href=""http://www.daterangepicker.com/#examples"" rel=""nofollow noreferrer"">here</a></p>  <p>Anyways, I put the code into my cell, but it only shows me the input form and when I click it nothing happens.<br> I tested the code by creating a single .html file and it worked perfectly, however in jupyter notebook it doesn't.  <a href=""https://i.stack.imgur.com/TYP7V.png"" rel=""nofollow noreferrer"">only an empty form is shown as you can see on this pic</a></p>  <pre><code>from IPython.display import display, HTML  html_code = ''' &lt;head&gt; &lt;script type=""text/javascript"" src=""https://cdn.jsdelivr.net/jquery/latest/jquery.min.js""&gt;&lt;/script&gt; &lt;script type=""text/javascript"" src=""https://cdn.jsdelivr.net/momentjs/latest/moment.min.js""&gt;&lt;/script&gt; &lt;script type=""text/javascript"" src=""https://cdn.jsdelivr.net/npm/daterangepicker/daterangepicker.min.js""&gt;&lt;/script&gt; &lt;link rel=""stylesheet"" type=""text/css"" href=""https://cdn.jsdelivr.net/npm/daterangepicker/daterangepicker.css"" /&gt;  &lt;/head&gt;  &lt;body&gt;  &lt;input type=""text"" name=""datetimes"" /&gt;  &lt;script&gt; $(function() {   $('input[name=""datetimes""]').daterangepicker({     timePicker: true,     startDate: moment().startOf('hour'),     endDate: moment().startOf('hour').add(32, 'hour'),     locale: {       format: 'M/DD hh:mm A'     }   }); }); &lt;/script&gt; &lt;/body&gt;    '''  display(HTML(html_code)) </code></pre>"	58661080	"<p>You can implement what you want using <code>jp_proxy_widget</code>.  Below is the Python code:</p>  <pre><code>import jp_proxy_widget from jp_proxy_widget import js_context  js1 = ""https://cdn.jsdelivr.net/momentjs/latest/moment.min.js"" js2 = ""https://cdn.jsdelivr.net/npm/daterangepicker/daterangepicker.min.js"" css = ""https://cdn.jsdelivr.net/npm/daterangepicker/daterangepicker.css""  # Create a proxy widget to hold the input element. widget = jp_proxy_widget.JSProxyWidget()  # load the style and JS libraries widget.load_css(css) widget.load_js_files([js1, js2])  # Store the value from the date/time input in the Python variable 'value' value = ""No value yet.""  def change_value(v):     global value     value = v  # Initialize the proxy widget with an input element configured using # daterangepicker. widget.js_init(""""""      element.empty()     var input = $('&lt;input type=""text"" name=""datetimes"" size=""100""/&gt;').appendTo(element);     input.daterangepicker({     timePicker: true,     startDate: moment().startOf('hour'),     endDate: moment().startOf('hour').add(32, 'hour'),     locale: {        format: 'M/DD hh:mm A'      }   });   // when the input changes send the value back to python   input.change(function() { change_value(input.val());} );   change_value(input.val());  """""", change_value=change_value)  # Display the widget widget </code></pre>  <p>Here is a screen shot of that code executed in Jupyter:</p>  <p><a href=""https://i.stack.imgur.com/z7HG2.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/z7HG2.png"" alt=""enter image description here""></a></p>  <p>For more information on jp_proxy_widget go here: <a href=""https://github.com/AaronWatters/jp_proxy_widget"" rel=""nofollow noreferrer"">https://github.com/AaronWatters/jp_proxy_widget</a></p>"
58532497	Python Get Value of Javascript Variable	python|web-scraping	2019-10-24 00:16:28.860000 UTC	"<p>I'm <strong>scraping</strong> instagram page (<a href=""https://instagram.com/celmirashop"" rel=""nofollow noreferrer"">https://instagram.com/celmirashop</a>) and get script (HTML and some javascript). the result like this</p> <pre><code>&lt;script&gt;some script&lt;/script&gt; &lt;script&gt;some script&lt;/script&gt; &lt;script&gt;some script&lt;/script&gt; &lt;script&gt;window._sharedData = {&quot;config&quot;:{&quot;csrf_token&quot;:&quot;sSqrj6c8tfN1HwOIlwmpqONT2bAPhtNu&quot;,&quot;viewer&quot;:null etc....&lt;/script&gt; </code></pre> <p>I have creating script like this</p> <pre><code>import urllib.request import json import re from bs4 import BeautifulSoup  web = urllib.request.urlopen(&quot;https://instagram.com/celmirashop&quot;) soup = BeautifulSoup(web.read(), 'lxml') pattern = re.compile(r&quot;window._sharedData = .&quot;) script = soup.find(&quot;script&quot;,text=pattern) print(script) </code></pre> <p>and giving me a result a specific javascript that I want to. like this</p> <pre><code>&lt;script&gt;window._sharedData = {&quot;config&quot;:{&quot;csrf_token&quot;:&quot;sSqrj6c8tfN1HwOIlwmpqONT2bAPhtNu&quot;,&quot;viewer&quot;:null etc....&lt;/script&gt; </code></pre> <p>How can I get the value of window._sharedData ? and loop it. because I want save in mysql</p>"	58533310	"<p>Assuming ends with ; and occurs only once you can use the following regex pattern on the response.text</p>  <pre><code>import re  s = '''&lt;script&gt;window._sharedData = {""config"":{""csrf_token"":""sSqrj6c8tfN1HwOIlwmpqONT2bAPhtNu"",""viewer"":null""};&lt;/script&gt;''' p = re.compile(r'window\._sharedData = (.*);') print(p.findall(s)[0]) </code></pre>"
58532497	Python Get Value of Javascript Variable	python|web-scraping	2019-10-24 00:16:28.860000 UTC	"<p>I'm <strong>scraping</strong> instagram page (<a href=""https://instagram.com/celmirashop"" rel=""nofollow noreferrer"">https://instagram.com/celmirashop</a>) and get script (HTML and some javascript). the result like this</p> <pre><code>&lt;script&gt;some script&lt;/script&gt; &lt;script&gt;some script&lt;/script&gt; &lt;script&gt;some script&lt;/script&gt; &lt;script&gt;window._sharedData = {&quot;config&quot;:{&quot;csrf_token&quot;:&quot;sSqrj6c8tfN1HwOIlwmpqONT2bAPhtNu&quot;,&quot;viewer&quot;:null etc....&lt;/script&gt; </code></pre> <p>I have creating script like this</p> <pre><code>import urllib.request import json import re from bs4 import BeautifulSoup  web = urllib.request.urlopen(&quot;https://instagram.com/celmirashop&quot;) soup = BeautifulSoup(web.read(), 'lxml') pattern = re.compile(r&quot;window._sharedData = .&quot;) script = soup.find(&quot;script&quot;,text=pattern) print(script) </code></pre> <p>and giving me a result a specific javascript that I want to. like this</p> <pre><code>&lt;script&gt;window._sharedData = {&quot;config&quot;:{&quot;csrf_token&quot;:&quot;sSqrj6c8tfN1HwOIlwmpqONT2bAPhtNu&quot;,&quot;viewer&quot;:null etc....&lt;/script&gt; </code></pre> <p>How can I get the value of window._sharedData ? and loop it. because I want save in mysql</p>"	58533393	"<p>Here is a way:</p>  <pre><code>&gt;&gt;&gt; xxx = ''' ... &lt;script&gt;window._sharedData = {""config"":{""csrf_token"":""sSqrj6c8tfN1HwOIlwmpqONT2bAPhtNu"",""viewer"":null etc....&lt;/script&gt; ... ''' </code></pre>  <pre><code>&gt;&gt;&gt; xxx.split('""csrf_token"":""') ['\n&lt;script&gt;window._sharedData = {""config"":{', 'sSqrj6c8tfN1HwOIlwmpqONT2bAPhtNu"",""viewer"":null etc....&lt;/script&gt;\n']  &gt;&gt;&gt; xxx.split('""csrf_token"":""')[1].split('""')[0] 'sSqrj6c8tfN1HwOIlwmpqONT2bAPhtNu' </code></pre>  <p>Just note that BS, doesn't actually run any javascript, so the script tags, or any other javascript isn't actually being run.</p>  <p>You'll have to use something like selenium in order to do something more with it.</p>  <p>If you do go with selenium you can, do something like:</p>  <pre><code>import json import selenium.webdriver  options = selenium.webdriver.FirefoxOptions() options.add_argument(""--headless"")  driver = selenium.webdriver.Firefox(firefox_options=options)  driver.get('https://instagram.com/celmirashop')  # note this assumes there is no circular data, etc in the thing  # passed to`JSON.stringify`  # run this javascript in the firefox browser js = ""return JSON.stringify(window._sharedData)""  # load the hopefully stringified json to python  hello = json.loads(driver.execute_script(js))  for k, v in hello.items():     print(k, v) </code></pre>"
58555422	Python/Selenium not switching pages for Chrome 78 when executing Javascript	javascript|python|selenium|selenium-chromedriver	2019-10-25 09:05:31.020000 UTC	"<p>I have a script that switches site pages that contains tables. It have worked fine for months (last time with Chrome version 76), but after the installation of new Chrome version 78.0.3904.70 an error has been set: </p>  <pre><code>        driver.execute_script(""__doPostBack('action','Page${}')"".format(page))        File ""C:\ProgramData\Anaconda3\lib\site-packages\selenium\webdriver\remote\webdriver.py"", line 636, in execute_script         'args': converted_args})['value']        File ""C:\ProgramData\Anaconda3\lib\site-packages\selenium\webdriver\remote\webdriver.py"", line 321, in execute         self.error_handler.check_response(response)        File ""C:\ProgramData\Anaconda3\lib\site-packages\selenium\webdriver\remote\errorhandler.py"", line 242, in check_response         raise exception_class(message, screen, stacktrace)      JavascriptException: javascript error: 'caller', 'callee', and 'arguments' properties may not be accessed on strict mode functions or the arguments objects for calls to them       (Session info: chrome=78.0.3904.70) </code></pre>  <p>I've used the command <code>driver.execute_script(""__doPostBack('action','Page${}')"".format(page))</code> to switch the pages. I've searched and tryed by solutions using ""value"" but nothing worked.</p>  <p>I searched for chuncks of the messages <code>'args': converted_args})['value']</code> and </p>  <pre><code>JavascriptException: javascript error: 'caller', 'callee', and 'arguments' properties may not be accessed on strict mode functions or the arguments objects for calls to them   (Session info: chrome=78.0.3904.70) </code></pre>  <p>but none was helpful.</p>  <p>My Python version is 3.6 and Chromedriver version 78.0.3904.70. Windows 10 x64</p>"	58567249	"<p>Actually, something like this might work:</p>  <pre><code>el = driver.execute_script(""""""   return document.querySelector('[onclick*=""Page${}""]') """""" el.click() </code></pre>"
58566879	"JavaScript btoa() to Python b64decode().decode(""utf-8"")"	javascript|python|encoding|base64	2019-10-25 23:41:38.613000 UTC	"<p>In JavaScript, I encode these 2 strings:</p>  <pre><code>btoa(""test"") // ""dGVzdA=="" btoa(""testà"") // ""dGVzdOA="" </code></pre>  <p>Then in Python:</p>  <pre><code>base64.b64decode(""dGVzdA=="").decode(""utf-8"")  # ""test"" base64.b64decode(""dGVzdOA="").decode(""utf-8"")  # error... </code></pre>  <p>The first one works. The second one throws this error:</p>  <blockquote>   <p>UnicodeDecodeError: 'utf-8' codec can't decode byte 0xe0 in position   4: unexpected end of data</p> </blockquote>  <p>How can I retrieve <code>""testà""</code> in Python?</p>"	58566904	"<p>From <a href=""https://base64.guru/developers/javascript/examples/unicode-strings"" rel=""nofollow noreferrer"">here</a>. This seems to work:</p>  <pre><code>btoa(unescape(encodeURIComponent(""testà""))) </code></pre>"
58582440	Javascript variable to Python	javascript|python|django-forms|leaflet	2019-10-27 19:02:55.673000 UTC	"<p>I'm working locally using Django, and I created a template of a map using Leaflet. After doing some research I find that you can let the user click on the map to create a Marker and then pressing a button (export) to download the geoJSON of every figure or marker the user created. </p>  <p>What I want to do is not to download the geoJSON but to store it on a Database (it could be locally). Im not proficient at JavaScript so I'm really really stuck.</p>  <p>This is the map code</p>  <pre><code>&lt;!DOCTYPE html&gt; &lt;head&gt;     &lt;meta http-equiv=""content-type"" content=""text/html; charset=UTF-8"" /&gt;          &lt;script&gt;             L_NO_TOUCH = false;             L_DISABLE_3D = false;         &lt;/script&gt;      &lt;script src=""https://cdn.jsdelivr.net/npm/leaflet@1.5.1/dist/leaflet.js""&gt;&lt;/script&gt;     &lt;script src=""https://code.jquery.com/jquery-1.12.4.min.js""&gt;&lt;/script&gt;     &lt;script src=""https://maxcdn.bootstrapcdn.com/bootstrap/3.2.0/js/bootstrap.min.js""&gt;&lt;/script&gt;     &lt;script src=""https://cdnjs.cloudflare.com/ajax/libs/Leaflet.awesome-markers/2.0.2/leaflet.awesome-markers.js""&gt;&lt;/script&gt;     &lt;link rel=""stylesheet"" href=""https://cdn.jsdelivr.net/npm/leaflet@1.5.1/dist/leaflet.css""/&gt;     &lt;link rel=""stylesheet"" href=""https://maxcdn.bootstrapcdn.com/bootstrap/3.2.0/css/bootstrap.min.css""/&gt;     &lt;link rel=""stylesheet"" href=""https://maxcdn.bootstrapcdn.com/bootstrap/3.2.0/css/bootstrap-theme.min.css""/&gt;     &lt;link rel=""stylesheet"" href=""https://maxcdn.bootstrapcdn.com/font-awesome/4.6.3/css/font-awesome.min.css""/&gt;     &lt;link rel=""stylesheet"" href=""https://cdnjs.cloudflare.com/ajax/libs/Leaflet.awesome-markers/2.0.2/leaflet.awesome-markers.css""/&gt;     &lt;link rel=""stylesheet"" href=""https://rawcdn.githack.com/python-visualization/folium/master/folium/templates/leaflet.awesome.rotate.css""/&gt;     &lt;style&gt;html, body {width: 100%;height: 100%;margin: 0;padding: 0;}&lt;/style&gt;     &lt;style&gt;#map {position:absolute;top:0;bottom:0;right:0;left:0;}&lt;/style&gt;              &lt;meta name=""viewport"" content=""width=device-width,                 initial-scale=1.0, maximum-scale=1.0, user-scalable=no"" /&gt;             &lt;style&gt;                 #map_a3375e0d166f4ec89fd79df498d1f8b8 {                     position: relative;                     width: 100.0%;                     height: 100.0%;                     left: 0.0%;                     top: 0.0%;                 }             &lt;/style&gt;      &lt;script src=""https://cdnjs.cloudflare.com/ajax/libs/leaflet.draw/1.0.2/leaflet.draw.js""&gt;&lt;/script&gt;     &lt;link rel=""stylesheet"" href=""https://cdnjs.cloudflare.com/ajax/libs/leaflet.draw/1.0.2/leaflet.draw.css""/&gt;              &lt;style&gt;                 #export {                     position: absolute;                     top: 5px;                     right: 10px;                     z-index: 999;                     background: white;                     color: black;                     padding: 6px;                     border-radius: 4px;                     font-family: 'Helvetica Neue';                     cursor: pointer;                     font-size: 12px;                     text-decoration: none;                     top: 90px;                 }             &lt;/style&gt;      &lt;script src=""https://cdnjs.cloudflare.com/ajax/libs/leaflet.draw/1.0.2/leaflet.draw.js""&gt;&lt;/script&gt;     &lt;link rel=""stylesheet"" href=""https://cdnjs.cloudflare.com/ajax/libs/leaflet.draw/1.0.2/leaflet.draw.css""/&gt; &lt;/head&gt; &lt;body&gt;              &lt;div class=""folium-map"" id=""map_a3375e0d166f4ec89fd79df498d1f8b8"" &gt;&lt;/div&gt;      &lt;a href='#' id='export'&gt;Continue&lt;/a&gt; &lt;/body&gt; &lt;script&gt;              var map_a3375e0d166f4ec89fd79df498d1f8b8 = L.map(                 ""map_a3375e0d166f4ec89fd79df498d1f8b8"",                 {                     center: [46.8527, -121.7649],                     crs: L.CRS.EPSG3857,                     zoom: 13,                     zoomControl: true,                     preferCanvas: false,                 }             );                  var tile_layer_0cce79173c4743718c558aeea7872020 = L.tileLayer(                 ""https://stamen-tiles-{s}.a.ssl.fastly.net/terrain/{z}/{x}/{y}.jpg"",                 {""attribution"": ""Map tiles by \u003ca href=\""http://stamen.com\""\u003eStamen Design\u003c/a\u003e, under \u003ca href=\""http://creativecommons.org/licenses/by/3.0\""\u003eCC BY 3.0\u003c/a\u003e. Data by \u0026copy; \u003ca href=\""http://openstreetmap.org\""\u003eOpenStreetMap\u003c/a\u003e, under \u003ca href=\""http://creativecommons.org/licenses/by-sa/3.0\""\u003eCC BY SA\u003c/a\u003e."", ""detectRetina"": false, ""maxNativeZoom"": 18, ""maxZoom"": 18, ""minZoom"": 0, ""noWrap"": false, ""opacity"": 1, ""subdomains"": ""abc"", ""tms"": false}             ).addTo(map_a3375e0d166f4ec89fd79df498d1f8b8);               var options = {               position: ""topleft"",               draw: {""polyline"": {""allowIntersection"": false}},               edit: {""poly"": {""allowIntersection"": false}},             }             // FeatureGroup is to store editable layers.             var drawnItems = new L.featureGroup().addTo(                 map_a3375e0d166f4ec89fd79df498d1f8b8             );             options.edit.featureGroup = drawnItems;             var draw_control_ca0cd7071ba049ccb3dafbbf098f2b38 = new L.Control.Draw(                 options             ).addTo( map_a3375e0d166f4ec89fd79df498d1f8b8 );             map_a3375e0d166f4ec89fd79df498d1f8b8.on(L.Draw.Event.CREATED, function(e) {                 var layer = e.layer,                     type = e.layerType;                 var coords = JSON.stringify(layer.toGeoJSON());                 layer.on('click', function() {                     alert(coords);                     console.log(coords);                 });                 drawnItems.addLayer(layer);              });             map_a3375e0d166f4ec89fd79df498d1f8b8.on('draw:created', function(e) {                 drawnItems.addLayer(e.layer);             });              document.getElementById('export').onclick = function(e) {                 var data = drawnItems.toGeoJSON();                 var convertedData = 'text/json;charset=utf-8,'                     + encodeURIComponent(JSON.stringify(data));                 document.getElementById('export').setAttribute(                     'href', 'data:' + convertedData                 );                 document.getElementById('export').setAttribute(                     'download', ""my_data.geojson""                 );             }   &lt;/script&gt; </code></pre>  <p>And I know this is the part I have to change</p>  <pre><code>            document.getElementById('export').onclick = function(e) {                 var data = drawnItems.toGeoJSON();                 var convertedData = 'text/json;charset=utf-8,'                     + encodeURIComponent(JSON.stringify(data));                 document.getElementById('export').setAttribute(                     'href', 'data:' + convertedData                 );                 document.getElementById('export').setAttribute(                     'download', ""my_data.geojson""                 );             } </code></pre>  <p>Could anyone give me some direction/tutorial of how to acchieve what I want?</p>"	58582594	"<p>I would highly recommend the <a href=""https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch"" rel=""nofollow noreferrer"">fetch API</a>.  It's as close to a simple web request as you can get!</p>  <p>Your code might look like this:</p>  <pre><code>        // async function here allows you to use ""await"" keyword.         document.getElementById('export').onclick = async function(e) {              var data = drawnItems.toGeoJSON();              // make the request:             var rsp = await fetch(""path/to/server/upload/url"", {                 method: ""POST"",                 headers: {                     'Content-Type': 'application/json'                 },                 body: JSON.stringify(data),             });              console.log(""server responded with: "", await rsp.json());         } </code></pre>  <p>EDIT: The answer to your question HIGHLY depends on which database technology you are using. Some database servers host an HTTP API that allows you to <code>fetch</code> directly to them, such as <a href=""https://couchdb.apache.org/"" rel=""nofollow noreferrer"">CouchDB</a>, but this is exceedingly uncommon, even when using Couch (for security reasons, JavaScript in your browser has VERY limited IO options).</p>  <p>Here's the (by far) most common way to approach this problem:</p>  <ol> <li><p>send geoJSON from browser to server (code example above)</p></li> <li><p>server saves JSON to database</p></li> </ol>  <p>You have stated you are using Django. That's the server tech in #2.</p>  <p>On the server, the path you will take is:</p>  <ol> <li>create a <a href=""https://docs.djangoproject.com/en/2.2/topics/http/urls/"" rel=""nofollow noreferrer"">Django Route</a> at the URL endpoint where you put your <code>path/to/server/upload/url</code></li> <li>In the route's python function, you will save the data to the database connected to Django.</li> </ol>  <p>In Django, database interactions are typically done via <a href=""https://docs.djangoproject.com/en/2.2/topics/db/queries/"" rel=""nofollow noreferrer"">Django's ORM</a>, but you can use any methodology you want at this point.</p>  <p>The code above shows you how to get the geoJSON data from browser JS to your Django server so you can save it to a DB.</p>"
58601564	Scraping JavaScript page with python requests and asyncio in Jupyter notebook	python-3.x|asynchronous|jupyter-notebook|python-asyncio	2019-10-29 04:50:59.477000 UTC	"<p><strong>This is far from duplicate of <a href=""https://stackoverflow.com/questions/39757805/using-python-requests-and-beautiful-soup-to-pull-text"">this</a> question</strong> since that question doesn't even use requests for scraping but only for session and getting page content. I use it as well in such manner with Beautiful Soup.</p> <p>I have also tried <a href=""https://stackoverflow.com/questions/8049520/web-scraping-javascript-page-with-python"">this</a>. But they also didn't explain how to use requests effectively for getting JavaScript content.</p> <p>I'm trying to scrape info from web page which is rendered by JavaScript code. I'm using <code>requests</code> module in Jupyter notebook which.</p> <p>When I use following sample code:</p> <pre><code>import asyncio from requests_html import AsyncHTMLSession asession = AsyncHTMLSession()  r = await asession.get('http://python-requests.org') r.html.render() r.html.search('Python 2 will retire in only {months} months!')['months'] </code></pre> <p>I get error:</p> <blockquote> <p>RuntimeError: This event loop is already running</p> </blockquote> <p>I need some advice on how to implement this <a href=""https://github.com/jupyter/notebook/issues/3397#issuecomment-381440076"" rel=""nofollow noreferrer"">comment</a> to make it work since when I type in Jupyter notebook :</p> <pre><code>asyncio.get_event_loop() </code></pre> <p>I get:</p> <blockquote> <p>&lt;_WindowsSelectorEventLoop <strong>running=True</strong> closed=False debug=False&gt;</p> </blockquote> <p>so I need way to use existing loop in Jupyter notebook.</p>"	58602994	<p>I'm not much familiar with asyncio but I belive you are supposed to await your function if you are using <strong>AsyncHTMLSession</strong></p>  <pre><code>from requests_html import AsyncHTMLSession asession = AsyncHTMLSession()  async def get_results():     r = await asession.get('http://python-requests.org')     return r  a = asession.run(get_results) print(a[0].html.search('Python 2 will retire in only {months} months!')) # return None because text is not present there </code></pre>  <p>without AsyncHTMLSession</p>  <pre><code>from requests_html import HTMLSession session = HTMLSession()  r = session.get('http://python-requests.org')  r.html.render()  print(r.html.search('Python 2 will retire in only {months} months!')) # None </code></pre>
58602645	Websockets not working in javascript and python	javascript|python|websocket	2019-10-29 06:58:13.180000 UTC	"<p>I am wrote a basic Websocket client-server code while learning it. The server program is in Python and Client program is in Javascript. The server side is sending messages but client isn't receiving. Can you guys tell what's wrong?</p>  <p>Javascript Code:</p>  <pre><code>&lt;script type=""text/javascript""&gt;     let socket = new WebSocket(""ws://localhost:8765"");      socket.onconnect = function(event){         console.log('Connected.');     }      socket.onmesssage = function(event)     {         console.log(""Message received, "" + event.data);         var a = document.getElementById(""p1"");         a.innerHTML = ""You are client no.:"" + event.data;     } &lt;/script&gt; </code></pre>  <p>Python Code:</p>  <pre><code>import asyncio, websockets i=0  async def start(websocket, path):     global i     i += 1     await websocket.send(str(i))     print(""Number of clients: "" + str(i));  print('Started...') start_server = websockets.serve(start, ""localhost"", 8765)  asyncio.get_event_loop().run_until_complete(start_server) asyncio.get_event_loop().run_forever() </code></pre>  <p>The Javascript code doesn't work at all but Python code works(it print's statements after sending message).</p>"	58602938	"<p>There is a typo by the way.</p>  <p>It should be <code>socket.onmessage</code> NOT <code>onmesssage</code> There are <strong>3 s</strong> in your code. Change to..</p>  <pre><code>socket.onmessage = function(event)     {         console.log(""Message received, "" + event.data);         var a = document.getElementById(""p1"");         a.innerHTML = ""You are client no.:"" + event.data;     } </code></pre>"
58628640	Set a python variable in flask with a button and javascript	javascript|python-3.x|flask|jinja2|setter	2019-10-30 15:21:44.453000 UTC	"<p>I have a simple <code>Flask</code> app that contains a single variable called <code>variable</code>:</p>  <pre><code>from flask import Flask, render_template  app = Flask(__name__)  variable = 100  @app.route('/', methods=['GET']) @app.route('/index/', methods=['GET']) def index():     return render_template('index.html', variable=variable)  def main():     app.run(debug=True, port=5000)  if __name__ == '__main__':     main() </code></pre>  <p>The <code>index.html</code> file is as follows:</p>  <pre><code>variable = {{ variable }}  &lt;button onclick=""setVariable(101);""&gt;   set variable to 101 &lt;/button&gt;  &lt;script src=""https://ajax.googleapis.com/ajax/libs/jquery/3.1.1/jquery.min.js""&gt;&lt;/script&gt;  &lt;script&gt;   function setVariable(variable) {     console.log(`variable = ${variable}`);   } &lt;/script&gt; </code></pre>  <p><strong>Is there any way to set the variable value within the <code>setVariable</code> function?</strong> i.e. such that the value of <code>variable</code> is set to 101 in this example.</p>  <p>Basically the end goal is to dynamically set the value of <code>variable</code> using a button, which should furthermore update the <code>variable = {{ variable }}</code> line in the <code>index.html</code> file.</p>  <p><strong>EDIT</strong></p>  <p>The following implies you can not do this and must use an ajax request or something similar.</p>  <p><a href=""https://stackoverflow.com/a/43383967/5058116"">https://stackoverflow.com/a/43383967/5058116</a></p>"	58628999	"<p>I think you should consider to use <code>React</code> or <code>Vue</code>. Or please use database  (<code>MySQL</code> or <code>MongoDB</code> etc) to store persistent data, and dynamically read the data with ajax.</p>  <p>And another solution, using websocket like <a href=""https://www.meteor.com/"" rel=""nofollow noreferrer"">meteor</a> or nodejs may be nice.</p>"
58628640	Set a python variable in flask with a button and javascript	javascript|python-3.x|flask|jinja2|setter	2019-10-30 15:21:44.453000 UTC	"<p>I have a simple <code>Flask</code> app that contains a single variable called <code>variable</code>:</p>  <pre><code>from flask import Flask, render_template  app = Flask(__name__)  variable = 100  @app.route('/', methods=['GET']) @app.route('/index/', methods=['GET']) def index():     return render_template('index.html', variable=variable)  def main():     app.run(debug=True, port=5000)  if __name__ == '__main__':     main() </code></pre>  <p>The <code>index.html</code> file is as follows:</p>  <pre><code>variable = {{ variable }}  &lt;button onclick=""setVariable(101);""&gt;   set variable to 101 &lt;/button&gt;  &lt;script src=""https://ajax.googleapis.com/ajax/libs/jquery/3.1.1/jquery.min.js""&gt;&lt;/script&gt;  &lt;script&gt;   function setVariable(variable) {     console.log(`variable = ${variable}`);   } &lt;/script&gt; </code></pre>  <p><strong>Is there any way to set the variable value within the <code>setVariable</code> function?</strong> i.e. such that the value of <code>variable</code> is set to 101 in this example.</p>  <p>Basically the end goal is to dynamically set the value of <code>variable</code> using a button, which should furthermore update the <code>variable = {{ variable }}</code> line in the <code>index.html</code> file.</p>  <p><strong>EDIT</strong></p>  <p>The following implies you can not do this and must use an ajax request or something similar.</p>  <p><a href=""https://stackoverflow.com/a/43383967/5058116"">https://stackoverflow.com/a/43383967/5058116</a></p>"	58629314	"<p>You can use <a href=""https://en.wikipedia.org/wiki/Post/Redirect/Get"" rel=""nofollow noreferrer"">Post/Redirect/Get</a>. </p>  <p>Use a form in <code>index.html</code> to post value to <code>@app.route('/index/', methods=['GET', 'POST'])</code> in <code>app.py</code></p>  <p>Form in <code>index.html</code></p>  <pre><code>variable = {{ variable }}   &lt;form action=""{{ url_for('index') }}"" method=""post""&gt;     &lt;input type=""text"" value=""101"" name=""variable""&gt;     &lt;input type=""submit"" value=""set variable to 101""&gt; &lt;/form&gt;   {% with messages = get_flashed_messages() %} {% if messages %} &lt;ul&gt;     {% for message in messages %}     &lt;li style=""color:red""&gt;{{ message }}&lt;/li&gt;     {% endfor %} &lt;/ul&gt; {% endif %} {% endwith %} </code></pre>  <p>change <code>app.py</code> to process the form</p>  <pre class=""lang-py prettyprint-override""><code>from flask import Flask, render_template, request, redirect, url_for, flash  app = Flask(__name__) app.secret_key = b'_1#y2l""F4Q8z\n\xec]/'  variable = 100   @app.route('/', methods=['GET', 'POST']) @app.route('/index/', methods=['GET', 'POST']) def index():     global variable     if request.method == ""POST"":         try:             variable = int(request.form.get(""variable""))             return redirect(url_for('index'))         except:             flash(""Invalid type for variable"")         return redirect(url_for('index'))     return render_template('index.html', variable=variable)   if __name__ == '__main__':     app.run(debug=True, port=5000) </code></pre>  <p>Adding <code>app.secret_key = b'_1#y2l""F4Q8z\n\xec]/'</code> to <code>flash</code> error message if user tries to send anything other than numbers</p>"
58695280	Clicking on Javascript tab using Selenium and Python without unique class id or element name	python|selenium|xpath|webdriverwait|xpath-1.0	2019-11-04 14:16:50.850000 UTC	"<p>I have this HTML element code which I am currently struggling to figure out to use it for clicking on the tab that says Problem. As the ""Problem"" doesnt have a unique classname or element ID, I am unable to figure how to send a Click().</p>  <p>I have tried to check if z-index can be used as index(assumed) and used below line of code </p>  <pre><code>browser.switch_to_frame(a[3]) </code></pre>  <p>but it seems I am wrong.</p>  <p>HTML code as below</p>  <pre><code>&lt;div class=""TabsViewPort"" style=""position: relative; overflow: hidden; width: 896px; height: 22px; float: left;""&gt; &lt;div style=""overflow: visible; float: left; width: 897px; top: 0px; left: 0px;""&gt; &lt;dl class=""OuterOuterTab""&gt; &lt;dd class=""OuterTab"" artabid=""955000038"" arwindowid=""0"" style=""top: 1px; z-index: 1; left: 0px; visibility: inherit; display: block;""&gt;&lt;span class=""TabLeftRounded""&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=""Tab""&gt;&lt;a href=""javascript:"" class=""btn f1"" style=""color:#000000;""&gt;My&amp;nbsp;Profile&lt;/a&gt; &lt;/span&gt; &lt;span class=""TabRight""&gt;&amp;nbsp;&lt;/span&gt; &lt;/dd&gt; &lt;dd class=""OuterTabSelected"" artabid=""600000203"" arwindowid=""0"" style=""top: 1px; z-index: 3; left: 63px; visibility: inherit; display: block;""&gt;&lt;span class=""TabLeft""&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=""Tab""&gt;&lt;a href=""javascript:"" class=""btn f1""&gt;Approval&lt;/a&gt; &lt;/span&gt; &lt;span class=""TabRight""&gt;&amp;nbsp;&lt;/span&gt; &lt;/dd&gt; &lt;dd class=""OuterTab"" artabid=""536870915"" arwindowid=""0"" style=""top: 1px; z-index: 1; left: 409px; visibility: inherit; display: block;""&gt;&lt;span class=""TabLeft""&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=""Tab""&gt;&lt;a href=""javascript:"" class=""btn f1""&gt;Problem&lt;/a&gt; &lt;/span&gt; &lt;span class=""TabRight""&gt;&amp;nbsp;&lt;/span&gt; &lt;/dd&gt; &lt;/dl&gt; &lt;/div&gt; &lt;/div&gt; </code></pre>"	58695667	"<p>please find below xpath to click on third TAB</p>  <pre><code>(//span[@class=""Tab""])[3]/a </code></pre>"
58695280	Clicking on Javascript tab using Selenium and Python without unique class id or element name	python|selenium|xpath|webdriverwait|xpath-1.0	2019-11-04 14:16:50.850000 UTC	"<p>I have this HTML element code which I am currently struggling to figure out to use it for clicking on the tab that says Problem. As the ""Problem"" doesnt have a unique classname or element ID, I am unable to figure how to send a Click().</p>  <p>I have tried to check if z-index can be used as index(assumed) and used below line of code </p>  <pre><code>browser.switch_to_frame(a[3]) </code></pre>  <p>but it seems I am wrong.</p>  <p>HTML code as below</p>  <pre><code>&lt;div class=""TabsViewPort"" style=""position: relative; overflow: hidden; width: 896px; height: 22px; float: left;""&gt; &lt;div style=""overflow: visible; float: left; width: 897px; top: 0px; left: 0px;""&gt; &lt;dl class=""OuterOuterTab""&gt; &lt;dd class=""OuterTab"" artabid=""955000038"" arwindowid=""0"" style=""top: 1px; z-index: 1; left: 0px; visibility: inherit; display: block;""&gt;&lt;span class=""TabLeftRounded""&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=""Tab""&gt;&lt;a href=""javascript:"" class=""btn f1"" style=""color:#000000;""&gt;My&amp;nbsp;Profile&lt;/a&gt; &lt;/span&gt; &lt;span class=""TabRight""&gt;&amp;nbsp;&lt;/span&gt; &lt;/dd&gt; &lt;dd class=""OuterTabSelected"" artabid=""600000203"" arwindowid=""0"" style=""top: 1px; z-index: 3; left: 63px; visibility: inherit; display: block;""&gt;&lt;span class=""TabLeft""&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=""Tab""&gt;&lt;a href=""javascript:"" class=""btn f1""&gt;Approval&lt;/a&gt; &lt;/span&gt; &lt;span class=""TabRight""&gt;&amp;nbsp;&lt;/span&gt; &lt;/dd&gt; &lt;dd class=""OuterTab"" artabid=""536870915"" arwindowid=""0"" style=""top: 1px; z-index: 1; left: 409px; visibility: inherit; display: block;""&gt;&lt;span class=""TabLeft""&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=""Tab""&gt;&lt;a href=""javascript:"" class=""btn f1""&gt;Problem&lt;/a&gt; &lt;/span&gt; &lt;span class=""TabRight""&gt;&amp;nbsp;&lt;/span&gt; &lt;/dd&gt; &lt;/dl&gt; &lt;/div&gt; &lt;/div&gt; </code></pre>"	58700674	"<p>If the element present inside an iframe then you need to switch to iframe first to access the element. You can Use following method to <code>frame_to_be_available_and_switch_to_it</code>()</p>  <p><strong>By locator ID</strong> </p>  <pre><code>WebDriverWait(driver,10).until(EC.frame_to_be_available_and_switch_to_it((By.ID,""id of the iframe""))) </code></pre>  <p>OR</p>  <p><strong>By locator NAME</strong></p>  <pre><code>WebDriverWait(driver,10).until(EC.frame_to_be_available_and_switch_to_it((By.NAME,""name of the iframe""))) </code></pre>  <p>Once You have switched to iframe you can access the element using following <code>xpath</code> </p>  <p>To click on the element Induce <code>WebDriverWait</code> and <code>element_to_be_clickable</code>()</p>  <pre><code>WebDriverWait(driver,10).until(EC.element_to_be_clickable((By.XPATH,""//span[@class='Tab']//a[text()='Problem']""))).click() </code></pre>  <p>You need to import following to execute above code.</p>  <pre><code>from selenium.webdriver.common.by import By from selenium.webdriver.support.ui import WebDriverWait from selenium.webdriver.support import expected_conditions as EC </code></pre>  <p>Hope this will help.</p>"
58695280	Clicking on Javascript tab using Selenium and Python without unique class id or element name	python|selenium|xpath|webdriverwait|xpath-1.0	2019-11-04 14:16:50.850000 UTC	"<p>I have this HTML element code which I am currently struggling to figure out to use it for clicking on the tab that says Problem. As the ""Problem"" doesnt have a unique classname or element ID, I am unable to figure how to send a Click().</p>  <p>I have tried to check if z-index can be used as index(assumed) and used below line of code </p>  <pre><code>browser.switch_to_frame(a[3]) </code></pre>  <p>but it seems I am wrong.</p>  <p>HTML code as below</p>  <pre><code>&lt;div class=""TabsViewPort"" style=""position: relative; overflow: hidden; width: 896px; height: 22px; float: left;""&gt; &lt;div style=""overflow: visible; float: left; width: 897px; top: 0px; left: 0px;""&gt; &lt;dl class=""OuterOuterTab""&gt; &lt;dd class=""OuterTab"" artabid=""955000038"" arwindowid=""0"" style=""top: 1px; z-index: 1; left: 0px; visibility: inherit; display: block;""&gt;&lt;span class=""TabLeftRounded""&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=""Tab""&gt;&lt;a href=""javascript:"" class=""btn f1"" style=""color:#000000;""&gt;My&amp;nbsp;Profile&lt;/a&gt; &lt;/span&gt; &lt;span class=""TabRight""&gt;&amp;nbsp;&lt;/span&gt; &lt;/dd&gt; &lt;dd class=""OuterTabSelected"" artabid=""600000203"" arwindowid=""0"" style=""top: 1px; z-index: 3; left: 63px; visibility: inherit; display: block;""&gt;&lt;span class=""TabLeft""&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=""Tab""&gt;&lt;a href=""javascript:"" class=""btn f1""&gt;Approval&lt;/a&gt; &lt;/span&gt; &lt;span class=""TabRight""&gt;&amp;nbsp;&lt;/span&gt; &lt;/dd&gt; &lt;dd class=""OuterTab"" artabid=""536870915"" arwindowid=""0"" style=""top: 1px; z-index: 1; left: 409px; visibility: inherit; display: block;""&gt;&lt;span class=""TabLeft""&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=""Tab""&gt;&lt;a href=""javascript:"" class=""btn f1""&gt;Problem&lt;/a&gt; &lt;/span&gt; &lt;span class=""TabRight""&gt;&amp;nbsp;&lt;/span&gt; &lt;/dd&gt; &lt;/dl&gt; &lt;/div&gt; &lt;/div&gt; </code></pre>"	58711394	"<p>The element with text as <strong>Problem</strong> is a <a href=""https://www.javascript.com/"" rel=""nofollow noreferrer"">JavaScript</a> enabled element so to <code>click()</code> on the element you have to induce <em>WebDriverWait</em> for the <em>element to be clickable</em> and you can use either of the following solutions:</p>  <ul> <li><p>Using <code>XPATH</code> A:</p>  <pre><code>WebDriverWait(driver, 20).until(EC.element_to_be_clickable((By.XPATH, ""//div[@class='TabsViewPort']//dl[@class='OuterOuterTab']//dd[@class='OuterTab']//a[@class='btn f1' and text()='Problem']""))).click() </code></pre></li> <li><p>Using <code>XPATH</code> B (shortened):</p>  <pre><code>WebDriverWait(driver, 20).until(EC.element_to_be_clickable((By.XPATH, ""//a[@class='btn f1' and text()='Problem']""))).click() </code></pre></li> <li><p><strong>Note</strong> : You have to add the following imports :</p>  <pre><code>from selenium.webdriver.support.ui import WebDriverWait from selenium.webdriver.common.by import By from selenium.webdriver.support import expected_conditions as EC </code></pre></li> </ul>"
58701077	Scraping HTML data with JavaScript or Python	javascript|python|web-scraping|beautifulsoup	2019-11-04 21:08:07.857000 UTC	"<p>I would like to scraping data from html and save it to text file I have the URL  can you please  If JavaScript will be preferable or python I can try</p>  <pre class=""lang-py prettyprint-override""><code># Import libraries import requests import urllib2 import time from bs4 import BeautifulSoup  # Set the URL you want to webscrape from url = 'theweathernetwork.com/ca/hourly-weather-forecast/ontario/london'  # Connect to the URL response = requests.get(url)  # Parse HTML and save to BeautifulSoup object soup = BeautifulSoup(response.text, ""html.parser"")  # To download the whole data set, let's do a for loop through all a tags </code></pre>"	58709366	"<p>You can get the data from the api (found through looking at DevTools -> XHR). But if you're trying to get the html, you'll need to use something like selenium so the page can render, and THEN grab the html source. </p>  <p>So, not sure if this is what you want, but the data is there and you can pull what ever it is you want to pull. Here is an example of the hourly data.</p>  <pre><code>import requests import pandas as pd  url = 'https://www.theweathernetwork.com/api/data/caon0383/hourly/cm/ci?ts=1012'  jsonData = requests.get(url).json()  df = pd.DataFrame(jsonData['hourly']['periods']) </code></pre>  <p><strong>Output:</strong></p>  <pre><code>print (df.to_string())                    b cc_class                  cdate  cloud_coverage dayname_alt dewpt_unit   dn   f  fc feelsLikeNight_unit fu   hour       ic icon              ii                        it   ms   n pop_class  pp      r  rain_bar_height rain_unit_language rain_value  rr  ru      s         sd  showrainunit  showsnowunit sky_tenths  snow_bar_height snow_unit_language snow_value  sr  su   t  tc tmau tmu            tsg            tsl tu   w  wd  wg wgk   wgu  wk    wu   wx 0            default      cc9    Tuesday, November 5              90         Tue          C  Tue   0   0                   C  C   6 am    sunny    8       chart-sun             Mainly cloudy  Nov   1      pop3  30      -                0                NaN          -   0  mm      -  Tue Nov 5         False         False          9                0                NaN          -   0  cm   4   4    C   C  1572951600000  1572933600000  C  14   W  21  21  km/h  14  km/h  O-N 1            default      cc7    Tuesday, November 5              70         Tue          C  Tue   0   0                   C  C   7 am    sunny    3    chart-stormy   A mix of sun and clouds  Nov   2      pop3  30      -                0                NaN          -   0  mm      -  Tue Nov 5         False         False          7                0                NaN          -   0  cm   4   4    C   C  1572955200000  1572937200000  C  16   W  24  24  km/h  16  km/h    B 2            default      cc7    Tuesday, November 5              70         Tue          C  Tue   0   0                   C  C   8 am    sunny    3    chart-stormy   A mix of sun and clouds  Nov   3      pop3  30      -                0                NaN          -   0  mm      -  Tue Nov 5         False         False          7                0                NaN          -   0  cm   4   4    C   C  1572958800000  1572940800000  C  20   W  29  29  km/h  20  km/h    B 3            default      cc7    Tuesday, November 5              70         Tue          C  Tue   0   0                   C  C   9 am    sunny    3    chart-stormy   A mix of sun and clouds  Nov   4      pop3  30      -                0                NaN          -   0  mm      -  Tue Nov 5         False         False          7                0                NaN          -   0  cm   4   4    C   C  1572962400000  1572944400000  C  22   W  33  33  km/h  22  km/h    B 4            default      cc7    Tuesday, November 5              70         Tue          C  Tue   1   1                   C  C  10 am    sunny    3    chart-stormy   A mix of sun and clouds  Nov   5      pop2  20      -                0                NaN          -   0  mm      -  Tue Nov 5         False         False          7                0                NaN          -   0  cm   5   5    C   C  1572966000000  1572948000000  C  24   W  37  37  km/h  24  km/h    B 5            default      cc6    Tuesday, November 5              60         Tue          C  Tue   0   0                   C  C  11 am    sunny    3    chart-stormy   A mix of sun and clouds  Nov   6      pop2  20      -                0                NaN          -   0  mm      -  Tue Nov 5         False         False          6                0                NaN          -   0  cm   5   5    C   C  1572969600000  1572951600000  C  28   W  42  42  km/h  28  km/h    B 6            default      cc6    Tuesday, November 5              60         Tue          C  Tue   1   1                   C  C  12 pm    sunny    3    chart-stormy   A mix of sun and clouds  Nov   7      pop2  20      -                0                NaN          -   0  mm      -  Tue Nov 5         False         False          6                0                NaN          -   0  cm   6   6    C   C  1572973200000  1572955200000  C  29   W  44  44  km/h  29  km/h    B 7            default      cc6    Tuesday, November 5              60         Tue          C  Tue   3   3                   C  C   1 pm    sunny    3    chart-stormy   A mix of sun and clouds  Nov   8      pop2  20      -                0                NaN          -   0  mm      -  Tue Nov 5         False         False          6                0                NaN          -   0  cm   7   7    C   C  1572976800000  1572958800000  C  29   W  44  44  km/h  29  km/h    B 8            default      cc6    Tuesday, November 5              60         Tue          C  Tue   2   2                   C  C   2 pm    sunny    3    chart-stormy   A mix of sun and clouds  Nov   9      pop2  20      -                0                NaN          -   0  mm      -  Tue Nov 5         False         False          6                0                NaN          -   0  cm   6   6    C   C  1572980400000  1572962400000  C  27   W  41  41  km/h  27  km/h    B 9            default      cc7    Tuesday, November 5              70         Tue          C  Tue   2   2                   C  C   3 pm    sunny    3    chart-stormy   A mix of sun and clouds  Nov  10      pop3  30      -                0                NaN          -   0  mm      -  Tue Nov 5         False         False          7                0                NaN          -   0  cm   6   6    C   C  1572984000000  1572966000000  C  24   W  36  36  km/h  24  km/h    B 10           default      cc8    Tuesday, November 5              80         Tue          C  Tue   1   1                   C  C   4 pm    sunny    4  chart-overcast  Cloudy with sunny breaks  Nov  11      pop3  30      -                0                NaN          -   0  mm      -  Tue Nov 5         False         False          8                0                NaN          -   0  cm   5   5    C   C  1572987600000  1572969600000  C  23   W  35  35  km/h  23  km/h   B+ 11           default      cc7    Tuesday, November 5              70         Tue          C  Tue   1   1                   C  C   5 pm    sunny   20  chart-overcast             Partly cloudy  Nov  12      pop3  30      -                0                NaN          -   0  mm      -  Tue Nov 5         False         False          7                0                NaN          -   0  cm   5   5    C   C  1572991200000  1572973200000  C  23   W  35  35  km/h  23  km/h   BN 12           ... </code></pre>"
58710739	does python have an equivalent function comment to javascript?	javascript|python|node.js|python-3.x|docstring	2019-11-05 11:47:40.593000 UTC	"<p>In Javascript the coder can comment functions as follows using the <code>@param</code> and <code>{string}</code> options.</p>  <p>Python has a docstring, but reading the <code>https://www.python.org/dev/peps/pep-0257/</code> Docstring Conventions i cannot see the equivalent to js.</p>  <p>Here is an example of a commented JS function:</p>  <pre><code>/**  * generate a random matrix  * @param {number} n the height of the matrix  * @param {number} m the width of the matrix  */ function generateRandomMatrix(n, m) {     mtrx = []     for (let i = 0; i &lt; n; i++) {         mtrx.push([])         for (let j = 0; j &lt; m; j++) {             mtrx[i].push(Math.round(Math.random()*10))         }     }     return mtrx }  </code></pre>  <p>What would be the python equivalent of the above <strong>comment</strong> (if such exists) ? In particular the <code>@param</code> and <code>{number}</code> features....</p>"	58710860	"<p>You can write something like this in Python: </p>  <pre><code>def get_full_name(first_name, last_name):     """"""     Construct full name from last name and first name      :param first_name: first name of Person      :param last_name: last name of Person     :return: concatenation of first and last name of Person     """"""     return first_name + last_name </code></pre>  <p>Pycharm has a very good integration with python docstrings and can do much of manual work for you. There are a lot of possible formats. The example above shows probably more prevalent format that is used by Sphinx to generate documentation.  </p>  <p>Take a look at this good description: <a href=""https://stackoverflow.com/questions/3898572/what-is-the-standard-python-docstring-format"">What is the standard Python docstring format?</a></p>"
58710739	does python have an equivalent function comment to javascript?	javascript|python|node.js|python-3.x|docstring	2019-11-05 11:47:40.593000 UTC	"<p>In Javascript the coder can comment functions as follows using the <code>@param</code> and <code>{string}</code> options.</p>  <p>Python has a docstring, but reading the <code>https://www.python.org/dev/peps/pep-0257/</code> Docstring Conventions i cannot see the equivalent to js.</p>  <p>Here is an example of a commented JS function:</p>  <pre><code>/**  * generate a random matrix  * @param {number} n the height of the matrix  * @param {number} m the width of the matrix  */ function generateRandomMatrix(n, m) {     mtrx = []     for (let i = 0; i &lt; n; i++) {         mtrx.push([])         for (let j = 0; j &lt; m; j++) {             mtrx[i].push(Math.round(Math.random()*10))         }     }     return mtrx }  </code></pre>  <p>What would be the python equivalent of the above <strong>comment</strong> (if such exists) ? In particular the <code>@param</code> and <code>{number}</code> features....</p>"	58710879	"<p>Yes. They're called docstrings. See <a href=""https://www.python.org/dev/peps/pep-0257/"" rel=""nofollow noreferrer"">https://www.python.org/dev/peps/pep-0257/</a></p>  <pre><code>def foo(bar: int, baz: int) -&gt; int:     """"""     Add two numbers      :param bar: explain bar     :param baz: explain baz     :return: int     """"""     return bar + baz </code></pre>"
58710739	does python have an equivalent function comment to javascript?	javascript|python|node.js|python-3.x|docstring	2019-11-05 11:47:40.593000 UTC	"<p>In Javascript the coder can comment functions as follows using the <code>@param</code> and <code>{string}</code> options.</p>  <p>Python has a docstring, but reading the <code>https://www.python.org/dev/peps/pep-0257/</code> Docstring Conventions i cannot see the equivalent to js.</p>  <p>Here is an example of a commented JS function:</p>  <pre><code>/**  * generate a random matrix  * @param {number} n the height of the matrix  * @param {number} m the width of the matrix  */ function generateRandomMatrix(n, m) {     mtrx = []     for (let i = 0; i &lt; n; i++) {         mtrx.push([])         for (let j = 0; j &lt; m; j++) {             mtrx[i].push(Math.round(Math.random()*10))         }     }     return mtrx }  </code></pre>  <p>What would be the python equivalent of the above <strong>comment</strong> (if such exists) ? In particular the <code>@param</code> and <code>{number}</code> features....</p>"	58710923	"<p>Comments about arguments for functions in Python should also be included in docstrings, and then you can use <a href=""https://www.sphinx-doc.org/en/master/usage/quickstart.html"" rel=""nofollow noreferrer"">Sphinx</a> to automatically generate documentation. Sphinx was originally created for the Python documentation itself.</p>  <p>By default, Sphinx takes in the following format of docstring (see <a href=""https://sphinx-rtd-tutorial.readthedocs.io/en/latest/docstrings.html"" rel=""nofollow noreferrer"">here</a>):</p>  <pre><code>:param [ParamName]: [ParamDescription], defaults to [DefaultParamVal] :type [ParamName]: [ParamType](, optional) ... :raises [ErrorType]: [ErrorDescription] ... :return: [ReturnDescription] :rtype: [ReturnType] </code></pre>  <p>But you can use the <a href=""https://www.sphinx-doc.org/en/master/usage/extensions/napoleon.html"" rel=""nofollow noreferrer"">Napoleon extension for Sphinx</a> to read the much more readable (and therefore Pythonic) <a href=""http://google.github.io/styleguide/pyguide.html#383-functions-and-methods"" rel=""nofollow noreferrer"">Google Style Docstrings</a>:</p>  <pre><code>def fetch_bigtable_rows(big_table, keys, other_silly_variable=None):     """"""Fetches rows from a Bigtable.      Retrieves rows pertaining to the given keys from the Table instance     represented by big_table.  Silly things may happen if     other_silly_variable is not None.      Args:         big_table: An open Bigtable Table instance.         keys: A sequence of strings representing the key of each table row             to fetch.         other_silly_variable: Another optional variable, that has a much             longer name than the other args, and which does nothing.     """""" </code></pre>"
58710739	does python have an equivalent function comment to javascript?	javascript|python|node.js|python-3.x|docstring	2019-11-05 11:47:40.593000 UTC	"<p>In Javascript the coder can comment functions as follows using the <code>@param</code> and <code>{string}</code> options.</p>  <p>Python has a docstring, but reading the <code>https://www.python.org/dev/peps/pep-0257/</code> Docstring Conventions i cannot see the equivalent to js.</p>  <p>Here is an example of a commented JS function:</p>  <pre><code>/**  * generate a random matrix  * @param {number} n the height of the matrix  * @param {number} m the width of the matrix  */ function generateRandomMatrix(n, m) {     mtrx = []     for (let i = 0; i &lt; n; i++) {         mtrx.push([])         for (let j = 0; j &lt; m; j++) {             mtrx[i].push(Math.round(Math.random()*10))         }     }     return mtrx }  </code></pre>  <p>What would be the python equivalent of the above <strong>comment</strong> (if such exists) ? In particular the <code>@param</code> and <code>{number}</code> features....</p>"	58710925	"<p>In python you will comment like this in the docstring.</p>  <pre class=""lang-py prettyprint-override""><code>def generate_random_matrix(n, m):     """"""generate a random matrix       Parameters      -----------------      n : int          the height of the matrix      m : int           the width of the matrix       Returns      ----------      An array with shape (n, m)     """"""     pass </code></pre>  <p>There is several guideline have a look to this <a href=""https://stackoverflow.com/questions/3898572/what-is-the-standard-python-docstring-format"">anwser</a>. </p>"
58710739	does python have an equivalent function comment to javascript?	javascript|python|node.js|python-3.x|docstring	2019-11-05 11:47:40.593000 UTC	"<p>In Javascript the coder can comment functions as follows using the <code>@param</code> and <code>{string}</code> options.</p>  <p>Python has a docstring, but reading the <code>https://www.python.org/dev/peps/pep-0257/</code> Docstring Conventions i cannot see the equivalent to js.</p>  <p>Here is an example of a commented JS function:</p>  <pre><code>/**  * generate a random matrix  * @param {number} n the height of the matrix  * @param {number} m the width of the matrix  */ function generateRandomMatrix(n, m) {     mtrx = []     for (let i = 0; i &lt; n; i++) {         mtrx.push([])         for (let j = 0; j &lt; m; j++) {             mtrx[i].push(Math.round(Math.random()*10))         }     }     return mtrx }  </code></pre>  <p>What would be the python equivalent of the above <strong>comment</strong> (if such exists) ? In particular the <code>@param</code> and <code>{number}</code> features....</p>"	58711145	"<p>Python has two types of comments. One for snippets, or single line comments (#) and another for multiple. </p>  <p>What you require would be the second one:</p>  <pre><code>def pyhton_function(parameter1): """""" This type of comment is preferable for longer text and function description.  Function returns double the parameter 1 received  """""" return parameter1 </code></pre>  <p>Might be worthy of note that anything inside "" "" cannot be a comment. i.e:</p>  <pre><code>print(""#this is not a comment"") </code></pre>"
58760876	Get elements by javascript with Python Selenium	javascript|python|selenium|webdriver	2019-11-08 05:25:31.847000 UTC	"<p>I'm trying to get lists in python selenium using javascript like below</p>  <pre><code>lists = browser.execute_script(""document.getElementById('permalink-overlay').getElementsByClassName('u-dir')"") </code></pre>  <p>But, terminal shows an error of <code>'NoneType' object</code></p>  <p>How can I get lists from python selenium by javascript?</p>"	58763483	"<p>you do it wrong</p>  <pre><code>lists = browser.execute_script(""var x = document.getElementById('permalink-overlay').getElementsByClassName('u-dir'); return x;"") </code></pre>  <p>or something like that</p>"
58790242	Why does get request work in python but not in javascript?	javascript|python|request	2019-11-10 15:45:01.307000 UTC	"<p>I wrote some code that does a get request in python 3.5 and it returns with a successful status code.  Now, I want to convert it to javascript but i am getting a 401 unauthorized error.</p>  <p>Here is what my python code works like that is working:</p>  <pre class=""lang-py prettyprint-override""><code>import requests import pprint  base = ""http://fantasy.espn.com/apis/v3/games/ffl/seasons/"" year = ""2019"" mid = ""/segments/0/leagues/"" leagueId = ""myLeagueId"" url = base + year + mid + leagueId swid = ""{mySWIDcookie}"" espn_s2 = ""myEspn_s2cookie""   r = requests.get(url,                  cookies={""SWID"": swid,                           ""espn_s2"": espn_s2 })   d = r.json() pprint.pprint(d) </code></pre>  <p>And here is what my JavaScript conversion looks like that returns unsuccessful.</p>  <pre><code>const base = ""http://fantasy.espn.com/apis/v3/games/ffl/seasons/""; const year = ""2019""; const mid = ""/segments/0/leagues/""; const leagueId = ""myLeagueId""; const url = base + year + mid + leagueId; const swid = ""{mySWIDcookie}""; const espn_s2 = ""myEspn_s2cookie""; let headers = new Headers(); headers.set(""Set-Cookie"", ""SWID=swid; espn_s2=myEspn_s2cookie;""); var myInit = { method: ""Get"", headers: headers}; var request = new Request(url,myInit); fetch(request).then(function(response) {     return response.text(); }).then(function(text) {     console.log(text); }) </code></pre>  <p>Does anyone see what I'm doing wrong?  Thanks.</p>"	58790314	"<p>Please check the docs of fetch, 1st parameter is the url, the second parameter is an object speficying the request options    </p>  <p>Here is an example, hope it helps    </p>  <pre><code>// Default options are marked with *       const response = await fetch(url, {         method: 'POST', // *GET, POST, PUT, DELETE, etc.         mode: 'cors', // no-cors, *cors, same-origin         cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached         credentials: 'same-origin', // include, *same-origin, omit         headers: {           'Content-Type': 'application/json'           // 'Content-Type': 'application/x-www-form-urlencoded',         },         redirect: 'follow', // manual, *follow, error         referrer: 'no-referrer', // no-referrer, *client         body: JSON.stringify(data) // body data type must match ""Content-Type"" header       });       return await response.json(); // parses JSON response into native JavaScript objects     } </code></pre>"
58791630	WebScraping javascript page in python	javascript|python|selenium|beautifulsoup|request	2019-11-10 18:19:52.667000 UTC	"<p><strong>Hello World,</strong></p>  <p>New in Python, I am trying to webscrape a javascript page : <a href=""https://search.gleif.org/#/search/"" rel=""nofollow noreferrer"">https://search.gleif.org/#/search/</a> </p>  <p>Please find below the result from my code (using request)</p>  <pre><code>&lt;!DOCTYPE html&gt; &lt;html&gt; &lt;head&gt;&lt;meta charset=""utf-8""/&gt; &lt;meta content=""width=device-width,initial-scale=1"" name=""viewport""/&gt; &lt;title&gt;LEI Search 2.0&lt;/title&gt; &lt;link href=""/static/icons/favicon.ico"" rel=""shortcut icon"" type=""image/x-icon""/&gt; &lt;link href=""https://fonts.googleapis.com/css?family=Open+Sans:200,300,400,600,700,900&amp;amp;subset=cyrillic,cyrillic-ext,greek,greek-ext,latin-ext,vietnamese"" rel=""stylesheet""/&gt; &lt;link href=""/static/css/main.045139db483277222eb714c1ff8c54f2.css"" rel=""stylesheet""/&gt;&lt;/head&gt; &lt;body&gt; &lt;div id=""app""&gt;&lt;/div&gt; &lt;script src=""/static/js/manifest.2ae2e69a05c33dfc65f8.js"" type=""text/javascript""&gt;&lt;/script&gt; &lt;script src=""/static/js/vendor.6bd9028998d5ca3bb72f.js"" type=""text/javascript""&gt;&lt;/script&gt; &lt;script src=""/static/js/main.5da23c5198041f0ec5af.js"" type=""text/javascript""&gt;&lt;/script&gt; &lt;/body&gt; &lt;/html&gt; </code></pre>  <p><strong>The question:</strong> Instead of retrieving the above script: <br>     ""src=""/static/js/manifest.2ae2e69a05c33dfc65f8.js"" type=""text/javascript""""</p>  <h2><strong>I would like to have the content of the table in order to store it.</strong></h2>  <p><strong>Table that I want to scrape</strong> <a href=""https://i.stack.imgur.com/aQ98G.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/aQ98G.png"" alt=""enter image description here""></a></p>"	59018098	"<p>Following code is written using <a href=""https://pypi.org/project/selenium/"" rel=""nofollow noreferrer"">PySelenium</a>.</p>  <pre><code>import time from selenium import webdriver  country = [] legal_name = [] lei = []  driver = webdriver.Chrome() driver.implicitly_wait(5)  for i in range(1,30395):     driver.get('https://search.gleif.org/#/search/fulltextFilterId=LEIREC_FULLTEXT&amp;currentPage='+str(i)+'&amp;perPage=50&amp;expertMode=false#results-section')      time.sleep(5)      country += [i.get_attribute('innerHTML') for i in driver.find_elements_by_xpath('//*[@class=""table-cell country""]/a')]     legal_name += [i.get_attribute('innerHTML') for i in driver.find_elements_by_xpath('//*[@class=""table-cell legal-name""]/a')]     lei += [i.get_attribute('innerHTML') for i in driver.find_elements_by_xpath('//*[@class=""table-cell lei""]/a')] </code></pre>  <h3>Logging in (Change this with the respective elements.)</h3>  <pre><code>driver.find_element_by_id(""UserName"").send_keys(""xxxx"") driver.find_element_by_name(""Password"").send_keys(""yyyy"") driver.find_element_by_class(""loginButton"").click() </code></pre>  <h3>Get page content</h3>  <p><code>print(driver.page_source)</code></p>"
58824671	How can I convert python's datetime.utcnow() to Javascript's Date.UTC?	javascript|python|django	2019-11-12 18:32:36.927000 UTC	"<p>I want to pass date value from Django View ( Python ) to Django template in which I'm using Javascript:</p>  <p>Python:</p>  <pre><code>my_date = datetime.utcnow()  &lt;-- output: 2019-11-12 18:23:30.239216 </code></pre>  <p>Javascript:</p>  <pre><code>var date = new Date( Date.UTC( {{ my_date }} ) );  </code></pre>  <p>Tried this:</p>  <pre><code>  my_date= my_date.strftime( '%Y, %m, %d' ) &lt;-- this doesn't work correctly since Date.UTC expects month index not month number </code></pre>  <p>How can I make the conversion and why Javascript method is using month index and not the number of the month which is more natural ?</p>"	58824721	"<p>You just need to pass that string to <code>Date</code> constructor.</p>  <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-js lang-js prettyprint-override""><code>const input = '2019-11-12 18:23:30.239216'; const jsDate = new Date(input); console.log(jsDate); //</code></pre> </div> </div> </p>"
58824671	How can I convert python's datetime.utcnow() to Javascript's Date.UTC?	javascript|python|django	2019-11-12 18:32:36.927000 UTC	"<p>I want to pass date value from Django View ( Python ) to Django template in which I'm using Javascript:</p>  <p>Python:</p>  <pre><code>my_date = datetime.utcnow()  &lt;-- output: 2019-11-12 18:23:30.239216 </code></pre>  <p>Javascript:</p>  <pre><code>var date = new Date( Date.UTC( {{ my_date }} ) );  </code></pre>  <p>Tried this:</p>  <pre><code>  my_date= my_date.strftime( '%Y, %m, %d' ) &lt;-- this doesn't work correctly since Date.UTC expects month index not month number </code></pre>  <p>How can I make the conversion and why Javascript method is using month index and not the number of the month which is more natural ?</p>"	58851014	"<p>One of the accepted formats for Date.UTC is:</p>  <pre><code>Example: 2019,10,14,9,0,0  </code></pre>  <p>Which represents: November 14, 2019 - 09:00:00</p>  <p>This can be done in Python with the following code:</p>  <pre><code>new_date = \         str(my_date.year) + "","" + \         str(my_date.month - 1) + "","" + \         str(my_date.day) + "","" + \         str(my_date.hour) + "","" + \         str(my_date.minute) + "","" + \         str(my_date.second) </code></pre>  <p>Works also with IE browser.</p>"
58826576	Python Selenium : is execute_script able to wait for javascript content to load?	javascript|python|selenium|wait	2019-11-12 20:59:27.343000 UTC	"<p>I am trying to automate a simple action with python and selenium (with safari) : I have a webpage with a list on top of it going from ""A"" to ""Z"", each letter activate a Javascript on the page (at least I guess, i don't know really well Javascript and HTML) when you click on it, making a table below the letter list to reload and output a list of stocks (""A"" give you the stocks starting with letter A, ""B"" all the stocks starting with letter B, etc...) My goal is to click on each button, list all the stocks of the table, store the list in Python and then go to next letter. So I created a method that clicks on the letter passed as an argument, but I want python to wait for the table to 'load' before allowing it to go to the next line of my code because for now it is creating problems as the script goes on the next letter before the table is loaded.</p>  <p>The command I use to click on the buttons is :</p>  <pre class=""lang-py prettyprint-override""><code>driver.execute_script(""arguments[0].click();"",driver.find_element_by_xpath(f""//li[text()='{Stock_Letter.upper()}']"")) </code></pre>  <p>where driver is my selenium webdriver, and Stock_Letter is the method's argument containing the element i want to click To loop all the letters I use : </p>  <pre class=""lang-py prettyprint-override""><code>    alphaB = [""a"",""b"",""c"",""d"",""e"",""f"",""g"",""h"",""i"",""j"",""k"",""l"",""m"",""n"",""o"",""p"",""q"",""r"",""s"",""t"",""u"",""v"",""w"",""x"",""y"",""z""]      for lettre in alphaB:         Session.GoToGamePage(page='buysell', Stock_Letter=lettre.upper()) </code></pre>  <p>(Session is my Object, and GoToGamePage is the method I use to click the expected letter, it contains other stuffs game related)</p>  <p>I tried to use the wait.until method of selenium but the problem is that the first element of the table has the same HTML attributes no matter the letter, so unless it exists a selenium expected condition to wait for special text, I don't know how to do it ? Or even an expected condition to wait for the first letter of an attribute to be some value, but I can't find a complete documentation on expected conditions ?? My first guess would be to code the waiting in the execute_script command but I really don't know how to do it ?  If you need any further information on the webpage itself let me know, here is the first table row data :</p>  <pre class=""lang-html prettyprint-override""><code>&lt;td class=""allf""&gt;&lt;a href=""display-EDENp.aspx""&gt;EDENRED&lt;/a&gt;&lt;/td&gt; </code></pre>  <p>The webpage concerned is this one : <a href=""https://school.abcbourse.com/skemafinance/tab_market.aspx"" rel=""nofollow noreferrer"">https://school.abcbourse.com/skemafinance/tab_market.aspx</a></p>  <p>but you need to create an account (really quick) on <a href=""https://school.abcbourse.com/skemafinance"" rel=""nofollow noreferrer"">https://school.abcbourse.com/skemafinance</a> and use the code 195 (feel free to participate in the trading contest if you want to !)</p>"	58826633	"<p>To answer your first question -- no, <code>execute_script</code> does not do any waiting. It just runs some Javascript on the page, and that's it. You mentioned that the first element in your table has the same HTML attributes as all the others, so you can't just wait on that element. That makes sense.</p>  <p>You could try waiting on the presence of ALL elements located by your selector and see if that helps.</p>  <pre><code>WebDriverWait(driver, 10).until(         EC.presence_of_all_elements_located((By.XPATH, ""//li[text()='{Stock_Letter.upper()}']""))) </code></pre>  <p>You can also use <code>text_to_be_present_in_element</code> to wait on <code>element.Text</code> to equal something, or you can wait on <code>text_to_be_present_in_element_value</code> to wait on an element's <code>value</code> attribute to equal something, depending on what the HTML looks like. </p>  <p>This documentation may help:</p>  <p><a href=""https://selenium-python.readthedocs.io/waits.html"" rel=""nofollow noreferrer"">https://selenium-python.readthedocs.io/waits.html</a></p>"
58826576	Python Selenium : is execute_script able to wait for javascript content to load?	javascript|python|selenium|wait	2019-11-12 20:59:27.343000 UTC	"<p>I am trying to automate a simple action with python and selenium (with safari) : I have a webpage with a list on top of it going from ""A"" to ""Z"", each letter activate a Javascript on the page (at least I guess, i don't know really well Javascript and HTML) when you click on it, making a table below the letter list to reload and output a list of stocks (""A"" give you the stocks starting with letter A, ""B"" all the stocks starting with letter B, etc...) My goal is to click on each button, list all the stocks of the table, store the list in Python and then go to next letter. So I created a method that clicks on the letter passed as an argument, but I want python to wait for the table to 'load' before allowing it to go to the next line of my code because for now it is creating problems as the script goes on the next letter before the table is loaded.</p>  <p>The command I use to click on the buttons is :</p>  <pre class=""lang-py prettyprint-override""><code>driver.execute_script(""arguments[0].click();"",driver.find_element_by_xpath(f""//li[text()='{Stock_Letter.upper()}']"")) </code></pre>  <p>where driver is my selenium webdriver, and Stock_Letter is the method's argument containing the element i want to click To loop all the letters I use : </p>  <pre class=""lang-py prettyprint-override""><code>    alphaB = [""a"",""b"",""c"",""d"",""e"",""f"",""g"",""h"",""i"",""j"",""k"",""l"",""m"",""n"",""o"",""p"",""q"",""r"",""s"",""t"",""u"",""v"",""w"",""x"",""y"",""z""]      for lettre in alphaB:         Session.GoToGamePage(page='buysell', Stock_Letter=lettre.upper()) </code></pre>  <p>(Session is my Object, and GoToGamePage is the method I use to click the expected letter, it contains other stuffs game related)</p>  <p>I tried to use the wait.until method of selenium but the problem is that the first element of the table has the same HTML attributes no matter the letter, so unless it exists a selenium expected condition to wait for special text, I don't know how to do it ? Or even an expected condition to wait for the first letter of an attribute to be some value, but I can't find a complete documentation on expected conditions ?? My first guess would be to code the waiting in the execute_script command but I really don't know how to do it ?  If you need any further information on the webpage itself let me know, here is the first table row data :</p>  <pre class=""lang-html prettyprint-override""><code>&lt;td class=""allf""&gt;&lt;a href=""display-EDENp.aspx""&gt;EDENRED&lt;/a&gt;&lt;/td&gt; </code></pre>  <p>The webpage concerned is this one : <a href=""https://school.abcbourse.com/skemafinance/tab_market.aspx"" rel=""nofollow noreferrer"">https://school.abcbourse.com/skemafinance/tab_market.aspx</a></p>  <p>but you need to create an account (really quick) on <a href=""https://school.abcbourse.com/skemafinance"" rel=""nofollow noreferrer"">https://school.abcbourse.com/skemafinance</a> and use the code 195 (feel free to participate in the trading contest if you want to !)</p>"	69406550	"<p>Might be useful to someone- python selenium</p> <p>in this example I am using SweetAlert2 (<a href=""https://sweetalert2.github.io/#usage"" rel=""nofollow noreferrer"">https://sweetalert2.github.io/#usage</a>) to pop up an alert and then use WebDriverWait wait to know when I close the alert and continue on with my code:</p> <pre><code>result = df.to_html(classes='table table-striped table-hover', header = &quot;true&quot;, justify = &quot;center&quot;) result = result.replace('\n','').replace('&lt;thead&gt;', '&lt;thead class=&quot;thead-dark&quot;&gt;')  driver.execute_script(         '''         Swal.fire({   title: '&lt;strong&gt;&lt;u&gt;Item Found&lt;/u&gt;&lt;/strong&gt;',   html:'%s',   showCloseButton: true,   showCancelButton: true,   imageHeight: 1000,   focusConfirm: false, })         ''' % result)  while True:     try:          element_present = EC.presence_of_element_located((By.XPATH,'//div[@class=&quot;swal2-popup swal2-modal swal2-show&quot;]'))         WebDriverWait(driver, 1).until(element_present)     except:         break </code></pre>"
58839264	Python+Selenium reconstruct true HTML after executing javascript on page	javascript|python|forms|selenium	2019-11-13 14:24:45.277000 UTC	"<p>I have this super simple code running in selenium</p>  <pre><code>&lt;input name=""X"" id=""unique"" value="""" type=""text""&gt;  &lt;script&gt;     document.getElementById(""unique"").value=""123""; &lt;/script&gt; </code></pre>  <p>I am able to get input value<code>123</code> by calling <code>driver.execute_script('return document.getElementById(""unique"").value')</code></p>  <p>but I am not able to get real HTML code with updated value ""123"" using any of these methods  </p>  <ol> <li><code>driver.page_source</code> - no updated value </li> <li><code>driver.execute_script(""return document.documentElement.outerHTML"")</code>  no updated value </li> <li><code>driver.execute_script(""return document.getElementById(""unique"").outerHTML"")</code>  no updated value either</li> </ol>  <p>is there any solution to this problem?</p>"	58841973	"<p>Why don't you just try using regular Selenium <code>find_element</code> to get the attribute? The point of using Selenium is so that you can access their built-in functionality to do this for you. Javascript is just meant to be a workaround for unique issues.</p>  <p>This will fetch the <code>value</code> attribute on the <code>input</code> element you posted:</p>  <pre><code>input_value = driver.find_element_by_xpath(""//input[@id='unique']"").get_attribute(""value"") </code></pre>  <p>This is functionally the same as <code>driver.execute_script('return document.getElementById(""unique"").value')</code></p>"
58839264	Python+Selenium reconstruct true HTML after executing javascript on page	javascript|python|forms|selenium	2019-11-13 14:24:45.277000 UTC	"<p>I have this super simple code running in selenium</p>  <pre><code>&lt;input name=""X"" id=""unique"" value="""" type=""text""&gt;  &lt;script&gt;     document.getElementById(""unique"").value=""123""; &lt;/script&gt; </code></pre>  <p>I am able to get input value<code>123</code> by calling <code>driver.execute_script('return document.getElementById(""unique"").value')</code></p>  <p>but I am not able to get real HTML code with updated value ""123"" using any of these methods  </p>  <ol> <li><code>driver.page_source</code> - no updated value </li> <li><code>driver.execute_script(""return document.documentElement.outerHTML"")</code>  no updated value </li> <li><code>driver.execute_script(""return document.getElementById(""unique"").outerHTML"")</code>  no updated value either</li> </ol>  <p>is there any solution to this problem?</p>"	58847625	"<p>Try it like this:</p>  <pre><code>document.getElementById(""unique"").setAttribute('value', '123'); </code></pre>  <p>This way will definitely update the DOM</p>"
58871017	JavaScript is not waiting till the python execution is completed	javascript|node.js|callback|async-await	2019-11-15 05:47:05.357000 UTC	"<p>I have installed python shell npm and using it to call the python script from node.js. At the end of the python script execution a json file will be written to the local system. </p>  <p>The thing is my javascript is not waiting for the python execution to be completed and trying to read the file that is not yet written. So i am not getting the expected result or getting error. Any help would be very much appreciated. Thanks!</p>  <p>Here is my code:</p>  <pre><code>import * as filePaths from './filePaths'; import * as scriptParameters from './pythonScriptParameters'; import * as constantmessages from './constantMessages'; import * as logger from '../Utilities/logger'; import fs from 'fs'; ​ const { PythonShell } = require('python-shell'); ​ export async function runManufacturingTest(){ ​  PythonShell.run(scriptParameters.scriptFileName, scriptParameters.options, function(err, results) {     if (err) {           logger.error(err, '[ config - runManufacturingTest() ]');       }       const provisioningresultjson = fs.readFileSync(filePaths.provisioningresults);       const parsedResult = JSON.parse(provisioningresultjson);       \\ Rest of the code ​​​} } </code></pre>  <p>​</p>"	58876359	"<p>you should Convert callbacks to promise. So you can await the js thread till promise is resolved/rejected.</p>  <p>You can give a try to this.</p>  <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-js lang-js prettyprint-override""><code>export async function runManufacturingTest() {   const { success, err = '', results } = await new Promise((resolve, reject) =&gt; {     PythonShell.run(scriptParameters.scriptFileName, scriptParameters.options, function(       err,       results     ) {       if (err) {         logger.error(err, '[ config - runManufacturingTest() ]');         reject({ success: false, err });       }       resolve({ success: true, results });     });      if (success) {       const provisioningresultjson = fs.readFileSync(filePaths.provisioningresults);       const parsedResult = JSON.parse(provisioningresultjson);       // rest of your Code     }   }); }</code></pre> </div> </div> </p>"
58873616	javascript json to python flask	javascript|python	2019-11-15 09:09:53.750000 UTC	"<p>I have a dynamic editable table. Once the user finished the edit with the submit button i need to send JSON stringify data to python flask.</p>  <p>This is the javascript that on button click create the alert with the JSON object... what should i add in the same function to send this data to python flask and render an Html template?</p>  <pre><code>$(function () { $(""[id*=btnFirstGenerateJson"").click(function () {     var array1 = {};     $(""[id*=tblfirstTable] .DataRow"").each(function () {          var option = $(this).find('td').eq(1).find('select').children(""option:selected"")          if(option.length&gt;0){             value = option.text();         } else {             value = $(this).find('td').eq(1).text().trim();         }          if (value!=undefined) {              k = $(this).find('td').eq(0).text().trim();             value = value.replace(/\t/g, '');             value = value.replace('\n',' ');             array1[k]=value         }     });     alert(JSON.stringify(array1)); }); </code></pre>  <p>});</p>"	58873947	"<p>Add this to your code snippet in your Javascript:</p>  <pre><code>var xhr = new XMLHttpRequest(); var data = JSON.stringify(array1); #Send the json data using the xhr variable xhr.send(data); </code></pre>  <p>Then in your flask application, you can retrieve the json files by using this code snippet inside your flask application:</p>  <pre><code>@app.route('/flask_page',methods=[ ""GET"",'POST']) def uploadLabel():     #Retrieve the json file using request.files.get method of flask     json_file = request.files.get('file')     print(json_file)     print(json_file.filename)     json_file.save(""./""+json_file.filename) </code></pre>"
58888466	Pass python list to JavaScript in a jinja template	javascript|python|flask|jinja2	2019-11-16 07:16:47.920000 UTC	"<p>I'm building a CRUD app using flask. I'm done with the create, read and delete. left with update part. The record to be updated will be shown in an html form to enable editing of the shown database record.</p>  <p>My problem is when the database record is shown in the form, i want a checkbox to be checked or a drop down list item to be selected depending on a value in the database record.</p>  <p>Is there a way to pass the result of a database query (1 record) to JavaScript as a JavaScript array, obtain the items in the JavaScript array, and use them in JavaScript statements to control check boxes?</p>  <pre><code>@app.route('/update/&lt;int:id&gt;/') def update(id):      cur=mysql.connection.cursor()     cur.execute(""SELECT * FROM profiles where entity_id = %s"", (id,))     row=list(cur.fetchall())     cur.close()     return render_template('profile-update.html', data = row)  </code></pre>  <p>below is the template</p>  <pre><code>&lt;!DOCTYPE html&gt;  &lt;html&gt; &lt;head&gt;  &lt;/head&gt; &lt;body class=""hold-transition skin-blue layout-top-nav""&gt;    &lt;div class=""form-check form-check-inline""&gt;     &lt;input class=""form-check-input"" type=""radio"" name=""inlineRadioOptions""                   id=""inlineRadio1"" value=""option1""&gt;     &lt;label class=""form-check-label"" for=""inlineRadio1""&gt;company&lt;/label&gt;   &lt;/div&gt;   &lt;div class=""form-check form-check-inline""&gt;     &lt;input class=""form-check-input"" type=""radio"" name=""inlineRadioOptions""      id=""inlineRadio2"" value=""option2""&gt;     &lt;label class=""form-check-label"" for=""inlineRadio2""&gt;partnership&lt;/label&gt;   &lt;/div&gt;   &lt;div class=""form-check form-check-inline""&gt;     &lt;input class=""form-check-input"" type=""radio"" name=""inlineRadioOptions""       id=""inlineRadio3"" value=""option3""`enter code here`&gt;   &lt;/div&gt; &lt;/body&gt; &lt;/html&gt; </code></pre>  <p>i have research extensively on this but the suggested solutions do not seem to work</p>"	58888888	"<p>You use the data passed into your template using <a href=""https://jinja.palletsprojects.com/en/2.10.x/"" rel=""nofollow noreferrer"">jinja markup</a>.</p>  <p>/templates/demo_template.html</p>  <pre><code>*{{data}}* </code></pre>  <p>/main.py</p>  <pre><code>import flask  app = flask.Flask(__name__)  @app.route('/demo') def demo():     data = [dict(greeting='hello!'),dict(greeting='world!')]     return flask.render_template('demo_template.html', data=data)  if __name__ == ""__main__"":     app.run() </code></pre>  <p><a href=""https://i.stack.imgur.com/VFWKw.png"" rel=""nofollow noreferrer"">the output in browser</a></p>"
58895875	how to retrieve Python array in javascript (Flask to React communication)	python|arrays|reactjs|list|flask	2019-11-16 22:40:38.413000 UTC	"<p>I dumped Python array to a response with <code>json.dumps</code> and now I'm trying to retrieve the data as Javascript list.</p>  <pre><code>@app.route('/get_scales') @cross_origin() def get_scales():     classes = inspect.getmembers(sys.modules['mingus.core.scales'], inspect.isclass)     scales = [class_[0] for class_ in classes if ('Error' not in class_[0] and class_[0] != '_Scale')]      return json.dumps(scales) </code></pre>  <pre><code>  getScales() {     // create a new XMLHttpRequest     var xhr = new XMLHttpRequest();      // get a callback when the server responds     xhr.addEventListener(""load"", () =&gt; {       // update the state of the component with the result here       console.log(xhr.responseText);     });     // open the request with the verb and the url     xhr.open(""GET"", ""http://127.0.0.1:5000/get_scales"");     // send the request     xhr.send();      var formatted_response = JSON.stringify(xhr.responseText);     console.log(JSON.parse(xhr.responseText));     return xhr.responseText;   } </code></pre>  <p>When I made the function in getScales log to console type of xhr.responseText it shows String, but then when trying to parse it with JSON.parse it throws an error. Trying to stringify it first, like above doesn't help either.</p>"	58896098	"<p>I don't know what error it gave, but I think it was actually because xhr.response, wasn't there yet when you tried to use it. This is because XMLrequests function asynchronously, meaning that while the XMLrequest is still waiting for a response, the rest of your code continues executing. Try this instead:</p>  <pre><code>xhr.open('GET', url, false); </code></pre>  <p>the ""false"" parameter basically says you want your XMLrequest to function synchronously. So the rest of your code will wait for it to finish. </p>  <p>Do keep in mind that your performance may suffer because of this in a lot of situations. So if you have multiple XMLrequests at a time or Sequentially, you could consider using HTML5 <a href=""https://www.w3schools.com/HTML/html5_webworkers.asp"" rel=""nofollow noreferrer"">Workers</a> for this.</p>  <p>Or If you don't want your requests to function synchronously (if you can avoid having your XMLrequest function synchronously, you definitely should) you could also try something like this (something like this is defentintely the best option for performance, so if you can use it):</p>  <pre><code>  getScales() {      // create a new XMLHttpRequest     var xhr = new XMLHttpRequest();      // get a callback when the server responds     xhr.addEventListener(""load"", () =&gt; {       // update the state of the component with the result here       console.log(xhr.responseText);       var formatted_response = JSON.stringify(xhr.responseText);       console.log(JSON.parse(xhr.responseText));       return xhr.responseText;     });      // open the request with the verb and the url     xhr.open(""GET"", ""http://127.0.0.1:5000/get_scales"");      // send the request     xhr.send();   } </code></pre>"
58896344	Similar Javascript and python code does not give same result	javascript|python	2019-11-17 00:00:08.503000 UTC	"<p>I have a problem, I have 2 scripts one is in javascript and one is python. I want to use python to generate the value so I tried to rewrite javascript code to python but the output is not the same and I can't seem to figure out what values are incorrect! Any help is appreciated I am very bad at javascript, but I have a basic/decent understanding of python.</p>  <p>My javascript Code:</p>  <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-js lang-js prettyprint-override""><code>&lt;html&gt;&lt;head&gt;&lt;script type=""text/javascript""&gt;&lt;!-- function leastFactor(n) {  if (isNaN(n) || !isFinite(n)) return NaN;  if (typeof phantom !== 'undefined') return 'phantom';  if (typeof module !== 'undefined' &amp;&amp; module.exports) return 'node';  if (n==0) return 0;  if (n%1 || n*n&lt;2) return 1;  if (n%2==0) return 2;  if (n%3==0) return 3;  if (n%5==0) return 5;  var m=Math.sqrt(n);  for (var i=7;i&lt;=m;i+=30) {   if (n%i==0)      return i;   if (n%(i+4)==0)  return i+4;   if (n%(i+6)==0)  return i+6;   if (n%(i+10)==0) return i+10;   if (n%(i+12)==0) return i+12;   if (n%(i+16)==0) return i+16;   if (n%(i+22)==0) return i+22;   if (n%(i+24)==0) return i+24;  }  return n; } function go() {  var p=2998236216354; var s=1750047503; var n; if ((s &gt;&gt; 15) &amp; 1)/* else p-= */p+= 80068513* 16; else /* else p-= */p-= 60707526*/* *13; */16;/* p+= */if ((s &gt;&gt; 7) &amp; 1)/* else p-= */p+=/* else p-= */116987388* 8; else  p-= 172213350*/* else p-= */8;if ((s &gt;&gt; 2) &amp; 1)/* *13; */p+=/* p+= */54228284*/* 120886108* */5;/* *13; */else /* p+= */p-= 542313502*/* 120886108* */3;/* *13; */if ((s &gt;&gt; 10) &amp; 1) p+=66991160*/* 120886108* */13;else /* p+= */p-= 158065083* 11;if ((s &gt;&gt; 2) &amp; 1)/* else p-= */p+=311247981*/* *13; */5;/* *13; */else /* else p-= */p-= 376627923* 3; p-=910005807;  n=leastFactor(p); { document.cookie=""RNKEY=""+n+""*""+p/n+"":""+s+"":3025753160:1""; } } //--&gt;&lt;/script&gt;&lt;/head&gt; &lt;body onload=""go()""&gt; Loading ... &lt;/body&gt; &lt;/html&gt;</code></pre> </div> </div> </p>  <p>My Python Code:</p>  <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-js lang-js prettyprint-override""><code>import math   def least_factor(n):   if n == 0:     return 0;     if n % 1 or n * n &lt; 2: return 1   if n % 2 == 0: return 2   if n % 3 == 0: return 3   if n % 5 == 0: return 5     m = math.sqrt(n)     for i in range(7, int(m + 1), 30):     if n % i == 0: return i     if n % (i + 4): return i + 4     if n % (i + 6): return i + 6     if n % (i + 10): return i + 10     if n % (i + 12): return i + 12     if n % (i + 16): return i + 16     if n % (i + 22): return i + 22     if n % (i + 24): return i + 24    return n   def go():   p = 2998236216354   s = 1750047503   n = None      if (s &gt;&gt; 15) &amp; 1: p += 80068513 * 16   else: p -= 60707526 * 16     if (s &gt;&gt; 7) &amp; 1: p += 116987388 * 8   else: p -= 172213350 * 8     if (s &gt;&gt; 2) &amp; 1: p += 54228284 * 5   else: p -= 542313502 * 3     if (s &gt;&gt; 10) &amp; 1: p += 66991160 * 13   else: p -= 158065083 * 11     if (s &gt;&gt; 2) &amp; 1: p += 311247981  * 5   else: p -= 376627923 * 3     p -= 910005807   n = least_factor(p)     return f'RNKEY={n}*{p / n}:{s}:3025753160:1'   print(go())</code></pre> </div> </div> </p>  <p>The output on javascript is: RNKEY=1691507*1771981:1750047503:3025753160:1</p>  <p>But on Python the output is: RNKEY=11*272483478669.72726:1750047503:3025753160:1</p>  <p>Can someone help me understand where in my python code I am giving the wrong values?</p>  <p>Thanks in advance!</p>"	58896422	"<p>In your Python code, in the for loop, you have a line</p>  <pre><code>if n % (i + 4): return i + 4 </code></pre>  <p>This if condition is true if <code>n % (i+4)</code> is <em>not</em> equal to 0, so if n is <em>not</em> divisible by i+4. This is the opposite of what you want, and the opposite of what your JavaScript code does.</p>  <p>It should be, for example,</p>  <pre><code>if not n % (i + 4): return i + 4 </code></pre>"
58896477	How to parse returned Javascript code from get request in Python	python|beautifulsoup	2019-11-17 00:28:31.857000 UTC	"<p>I'm sending the following get request </p>  <pre><code>&lt;a href=""#"" onclick=""new Ajax.Request('/book/reviews/4981?authenticity_token=vxZvklgqILI3SBwtJLDN5DicJKt93LiOWxYwFa%2BrWDdsJxTTAs46WvPN3L1PKNW3qpmacr%2BnWYXexhR%2BfoB3Cw%3D%3D&amp;amp;amp;hide_last_page=true&amp;amp;amp;language_code=en&amp;amp;amp;page=4', {asynchronous:true, evalScripts:true, method:'get', parameters:'authenticity_token=' + encodeURIComponent('FUvf1v6N9TgtBKVmo5I3YLm3yVwb//WU9zZDdj1oWd3GeqSXpGnv0OmBZfbICi8zK7J3hdmEFJ9y5mcd7EN24Q==')}); return false;""&gt;4&lt;/a&gt; </code></pre>  <p>in Python, which I have written as </p>  <pre><code>import urllib  URL = 'https://www.goodreads.com/book/reviews/4981?authenticity_token=vxZvklgqILI3SBwtJLDN5DicJKt93LiOWxYwFa%2BrWDdsJxTTAs46WvPN3L1PKNW3qpmacr%2BnWYXexhR%2BfoB3Cw%3D%3D&amp;amp;amp;hide_last_page=true&amp;amp;amp;language_code=en&amp;amp;amp;page=4'  s = 'FUvf1v6N9TgtBKVmo5I3YLm3yVwb//WU9zZDdj1oWd3GeqSXpGnv0OmBZfbICi8zK7J3hdmEFJ9y5mcd7EN24Q=='  PARAMS = {'asynchronous':True,   'evalScripts':True,   'method':'get',   'parameters':'authenticity_token=' + urllib.parse.quote(s.encode(""utf-8"")) }  r = requests.get(url = URL, params = PARAMS)  </code></pre>  <p>I'm new to this, but it seems to be encoded in something that's not ASCII looking text. The returned code also contains HTML code, which is really what I want.  Here's a piece of what is returned:</p>  <pre><code>b'Element.update(""reviews"", ""\\n\\u003cdiv class=\\""bookReviewsPaginationCount\\""\\u003e\\n     \\u003cspan class=\\""smallText\\""\\u003e\\nShowing 91-120\\n\\u003c/span\\u003e\\n\\n\\u003c/div\\u003e\\n\\n\\n\\u003cdiv id=\\""reviewControls\\""\\n     class=\\""reviewControls u-defaultType clearFix\\""\\u003e\\n   \\u003cdiv class=\\""reviewControls--left\\""\\u003e\\n     \\u003cspan class=\\""stars staticStars notranslate\\""\\u003e\\u003cspan size=\\""12x12\\"" class=\\""staticStar p10\\""\\u003e\\u003c/span\\u003e\\u003cspan size=\\""12x12\\"" class=\\""staticStar p10\\""\\u003e\\u003c/span\\u003e\\u003cspan size=\\""12x12\\"" class=\\""staticStar p10\\""\\u003e\\u003c/span\\u003e\\u003cspan size=\\""12x12\\"" class=\\""staticStar p10\\""\\u003e\\u003c/span\\u003e\\u003cspan size=\\""12x12\\"" class=\\""staticStar p3\\""\\u003e\\u003c/span\\u003e\\u003c/span\\u003e\\n     \\u003cspan class=\\""u-visuallyHidden\\""\\u003eAverage rating\\u003c/span\\u003e\\n    4.07\\n    \\u003cspan class=\\""greyText\\""\\u003e\\u0026nbsp;\\u0026middot;\\u0026nbsp;\\u003c/span\\u003e\\n  \\u003c/div\\u003e\\n  \\u003cdiv class=\\""reviewControls__ratingDetails reviewControls--left rating_graph\\""\\u003e\\n    \\u003cspan id=\\""reviewControls__ratingDetailsMiniGraph\\""\\u003e\\n    \\u003cscript type=\\""text/javascript\\""\\u003e\\n     //\\u003c![CDATA[\\n      $j(document).ready(function() {\\n        var vis = renderRatingGraph(\\n            [436969, 351497, 175037, 52003, 27985],\\n            \\""reviewControls__ratingDetailsMiniGraph\\"");\\n        $j(\\""#reviewControls__ratingDetailsMiniGraph\\"").prependTo(\\""#rating_details_tip\\"");\\n      });\\n   </code></pre>  <p>Is there a way to parse the code? I've tried:</p>  <p><a href=""https://stackoverflow.com/questions/25170753/beautifulsoup-scrape-from-javascript-encoded-variable]"">BeautifulSoup scrape from javascript (encoded) variable</a></p>  <p>but it does not work with the code that I have returned. </p>  <p>Thanks</p>"	58896815	"<p>The returned string looks like jQuery code that is used to generated HTML element using string literal. You probably need to grab that string literal using slice <code>r.text[27:-2]</code> and then use <code>encode().decode('unicode_escape')</code> to get the string that can be parsed by BeatifulSoup.  </p>  <pre><code>import urllib import urllib.parse import requests from bs4 import BeautifulSoup as Soup  URL = 'https://www.goodreads.com/book/reviews/4981?authenticity_token=vxZvklgqILI3SBwtJLDN5DicJKt93LiOWxYwFa%2BrWDdsJxTTAs46WvPN3L1PKNW3qpmacr%2BnWYXexhR%2BfoB3Cw%3D%3D&amp;amp;amp;hide_last_page=true&amp;amp;amp;language_code=en&amp;amp;amp;page=4'  s = 'FUvf1v6N9TgtBKVmo5I3YLm3yVwb//WU9zZDdj1oWd3GeqSXpGnv0OmBZfbICi8zK7J3hdmEFJ9y5mcd7EN24Q=='  PARAMS = {'asynchronous':True,   'evalScripts':True,   'method':'get',   'parameters':'authenticity_token=' + urllib.parse.quote(s.encode(""utf-8"")) }  r = requests.get(url = URL, params = PARAMS)  soup = Soup(r.text.encode('utf-8'), 'html.parser')  html_str = r.text[27:-2].encode().decode('unicode_escape') soup = Soup(html_str, ""html.parser"") print(soup) </code></pre>"
58921310	selenium open browser console and paste some javascript code using python	python|selenium|selenium-chromedriver	2019-11-18 19:08:17.050000 UTC	"<p>I have a javascript which I want to put in console when page loaded but i am unable to open console using selenium in python I can access devtoos using this <code>--auto-open-devtools-for-tabs</code> but not able to open console.</p>  <pre><code>from selenium import webdriver from selenium.webdriver.common.keys import Keys from selenium.webdriver.common.action_chains import ActionChains from selenium.common.exceptions import NoSuchElementException import os import time from urllib.parse import quote_plus  driverPath = ""chromedriver.exe"" dataPath = ""whatsapp-assistant-bot-master/Data""  options = webdriver.ChromeOptions() options.add_argument(""--user-data-dir="" + dataPath) options.add_argument(""--auto-open-console-for-tabs="" + dataPath) driver = webdriver.Chrome(options=options, executable_path=driverPath)  driver.get('http://google.com') print('Please Scan the QR Code and press enter')   driver.find_element_by_id(""gsr"").send_keys(Keys.F12)    input() driver.quit() </code></pre>"	58921333	"<p>Answered here, you don't have to open the console, you can run your js code through selenium </p>  <p><a href=""https://stackoverflow.com/a/7794217/8692977"">Running javascript in Selenium using Python</a></p>"
58932996	Variable passed to from javascript to Python via AJAX - is not found	javascript|python|jquery|ajax|flask	2019-11-19 11:26:11.237000 UTC	"<p>What I am trying to do is pass a value from my js to python via ajax (so that I could use it, later on, to apply some filtering to my database). </p>  <p>But, every time I am trying to get it in python- I get the following error: </p>  <blockquote>   <p>TypeError: 'NoneType' object is not subscriptable.</p> </blockquote>  <p>Here is my js code:</p>  <pre><code>    $(document).ready(function(){  // code to read selected table row cell data (values). $(""#myTable"").on('click','button.btn.btn-primary',function(){      // get the current row       var currentRow=$(this).closest(""tr"");      var col1 = currentRow.find(""td:eq(0)"").text(); // get current row 1st TD value       var ids = {         'user_id': col1     };      $.ajax({         url: '/',         contentType: 'application/json',         dataType: 'json',         data: JSON.stringify(ids),         type: 'POST',          success: function(response) {             console.log(response);         },         error: function(error) {             console.log(error);         }     });       alert(col1); });  }); </code></pre>  <p>Here is my python:</p>  <pre><code>    @app.route('/', methods=['GET', 'POST'])     @login_required     def index():         if request.method == ""POST"":             data = {}              data['id'] = request.json['user_id']             return jsonify(data)          return render_template('index.html', title='Homepage') </code></pre>  <p>The post request seems to be working ok. The error is given only when I try to fetch it python:</p>  <pre><code>    data['id'] = request.json['user_id'] </code></pre>  <p>Any suggestion on how to go about it?</p>  <p>P.S I am not very good with js. Just starting out. Will appreciate any help and guidance.</p>"	58933162	"<p>Don't use JSON.stringify for passing data into POST request. In POST request of AJAX, you have to pass whole object. on Server side in python you can retrive data by key which you have used in object key, in your code <code>user_id</code></p>  <pre><code>$.ajax({         url: '/',         contentType: 'application/json',         dataType: 'json',         data: ids,         type: 'POST',          success: function(response) {             console.log(response);         },         error: function(error) {             console.log(error);         }     }); </code></pre>  <p>I hope this will work, best of luck !!</p>"
58932996	Variable passed to from javascript to Python via AJAX - is not found	javascript|python|jquery|ajax|flask	2019-11-19 11:26:11.237000 UTC	"<p>What I am trying to do is pass a value from my js to python via ajax (so that I could use it, later on, to apply some filtering to my database). </p>  <p>But, every time I am trying to get it in python- I get the following error: </p>  <blockquote>   <p>TypeError: 'NoneType' object is not subscriptable.</p> </blockquote>  <p>Here is my js code:</p>  <pre><code>    $(document).ready(function(){  // code to read selected table row cell data (values). $(""#myTable"").on('click','button.btn.btn-primary',function(){      // get the current row       var currentRow=$(this).closest(""tr"");      var col1 = currentRow.find(""td:eq(0)"").text(); // get current row 1st TD value       var ids = {         'user_id': col1     };      $.ajax({         url: '/',         contentType: 'application/json',         dataType: 'json',         data: JSON.stringify(ids),         type: 'POST',          success: function(response) {             console.log(response);         },         error: function(error) {             console.log(error);         }     });       alert(col1); });  }); </code></pre>  <p>Here is my python:</p>  <pre><code>    @app.route('/', methods=['GET', 'POST'])     @login_required     def index():         if request.method == ""POST"":             data = {}              data['id'] = request.json['user_id']             return jsonify(data)          return render_template('index.html', title='Homepage') </code></pre>  <p>The post request seems to be working ok. The error is given only when I try to fetch it python:</p>  <pre><code>    data['id'] = request.json['user_id'] </code></pre>  <p>Any suggestion on how to go about it?</p>  <p>P.S I am not very good with js. Just starting out. Will appreciate any help and guidance.</p>"	58933199	<p>Instead of </p>  <p><code>data['id'] = request.json['user_id']</code> </p>  <p>try</p>  <p><code>data: ids</code> in AJAX call and</p>  <p><code>data['id'] = request.POST.get('user_id')</code> in Python.</p>
58932996	Variable passed to from javascript to Python via AJAX - is not found	javascript|python|jquery|ajax|flask	2019-11-19 11:26:11.237000 UTC	"<p>What I am trying to do is pass a value from my js to python via ajax (so that I could use it, later on, to apply some filtering to my database). </p>  <p>But, every time I am trying to get it in python- I get the following error: </p>  <blockquote>   <p>TypeError: 'NoneType' object is not subscriptable.</p> </blockquote>  <p>Here is my js code:</p>  <pre><code>    $(document).ready(function(){  // code to read selected table row cell data (values). $(""#myTable"").on('click','button.btn.btn-primary',function(){      // get the current row       var currentRow=$(this).closest(""tr"");      var col1 = currentRow.find(""td:eq(0)"").text(); // get current row 1st TD value       var ids = {         'user_id': col1     };      $.ajax({         url: '/',         contentType: 'application/json',         dataType: 'json',         data: JSON.stringify(ids),         type: 'POST',          success: function(response) {             console.log(response);         },         error: function(error) {             console.log(error);         }     });       alert(col1); });  }); </code></pre>  <p>Here is my python:</p>  <pre><code>    @app.route('/', methods=['GET', 'POST'])     @login_required     def index():         if request.method == ""POST"":             data = {}              data['id'] = request.json['user_id']             return jsonify(data)          return render_template('index.html', title='Homepage') </code></pre>  <p>The post request seems to be working ok. The error is given only when I try to fetch it python:</p>  <pre><code>    data['id'] = request.json['user_id'] </code></pre>  <p>Any suggestion on how to go about it?</p>  <p>P.S I am not very good with js. Just starting out. Will appreciate any help and guidance.</p>"	58933205	<p>The way to get infos about a POST do you can use</p>  <pre><code>request.get_json() # and you access the variable that you wanna  # This is another way request.data # Will returns a dict  # When do you needs access a get parameters request.args.get('param') </code></pre>
58966636	Python scrape all javascript mailto	javascript|python|html|web-scraping	2019-11-21 03:02:03.553000 UTC	"<p>I need to scrape a website that has emails displaying as 'email'. When you click the hyperlink it automatically opens your email and has a new message with said email ready to send. </p>  <p>I thought i could just go through the html and scrape the email out. However the email are listed as a javascript object (which i'm unfamiliar). </p>  <p>the email is coded as:</p>  <pre><code>&lt;li class=""email""&gt;&lt;a href='javascript:let(""179 540 458 268 179 597 380 355 635 44 188 274"",649,387)'&gt;email&lt;/a&gt;&lt;/li&gt; </code></pre>  <p>I am trying to figure out how to extract and decode this into a regular email format. </p>"	58994372	"<p>The page uses obfuscation via a series of javascript functions. The code is copyrighted so I am unsure of the legabilities of coding it across into python which is pretty trivial. The code is located here: <a href=""https://barrowjackson.yourkwoffice.com/mcj/template_content/scripts/deobscure.js"" rel=""nofollow noreferrer"">https://barrowjackson.yourkwoffice.com/mcj/template_content/scripts/deobscure.js</a></p>  <p>The author has a website but I doubt that will say ""sure you can write your own version of this in a different language""....</p>  <p>You can also easily map out the characters into your own lookup dictionary as the relevant character set is not large. When you click on a link you can see the decoded value in the network traffic. </p>  <p>You only need the first argument of the function call you see in the actual page e.g.</p>  <pre><code>let(""179 540 458 268 179 597 380 355 635 44 188 274"",649,387) </code></pre>  <p>Grab the first argument: ""179 540 458 268 179 597 380 355 635 44 188 274"" and translate that.</p>"
58972457	Looking for the python equivalent to this javascript code	javascript|python|loops|for-loop|substring	2019-11-21 10:17:24.783000 UTC	"<p>I am learning python for my job to be able to manipulate statistical data. I already have a knowledge of C# and javascript and can solve this issue using these languages however I'm having difficulty translating the solution to python. </p>  <p>THE ISSUE Count all unique four letter words in a .txt file.  Any word with an apostrophe in should be ignored.  Ignore the case of the word (i.e. Tool and tool should only be counted as one word).  Print out (so that the user can see) the number of unique four letter words. </p>  <p>Divide up the four letter words based upon the last two letters of the word (the word ending).  Count up how many words you have for each of these endings. </p>  <p>Print out a list of word endings and the number of words you found for each ending.</p>  <p>I have solved this issue in Javascript below:</p>  <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-js lang-js prettyprint-override""><code>var listOfWords = ['card','alma','soon','bard','moon','dare']; var groupings = {};  for(var i = 0; i &lt; listOfWords.length; i++); {     var ending = listOfWords[i].substring(2,4)     if(groupings[ending] === undefined)     {         groupings[ending] = {}         groupings[ending].words = []         groupings[ending].count = 0     }     groupings[ending].words.push(listOfWords[i])     groupings[ending].count++ };  console.debug(groupings);</code></pre> </div> </div> </p>  <p>Here is what I have so far in python:</p>  <pre><code>import re text = open(""words.txt"") regex = re.compile(r'\b\w{4}\b') allFours = [] groupings = []  for line in text:     four_letter_words = regex.findall(line)     for word in four_letter_words:                 allFours.append(word)  mylist = list(dict.fromkeys(allFours)) uniqueWordCount = len(mylist) print(uniqueWordCount) for i = 0; i &lt; mylist.length; i++:     var ending = mylist[i] </code></pre>  <p>I hope I have explained everything clearly any questions just ask. All help is greatly appreciated, thank you. </p>"	58972831	"<blockquote>   <p>THE ISSUE Count all unique four letter words in a .txt file. Any word with an apostrophe in should be ignored. Ignore the case of the word (i.e. Tool and tool should only be counted as one word). Print out (so that the user can see) the number of unique four letter words.</p>      <p>Divide up the four letter words based upon the last two letters of the word (the word ending). Count up how many words you have for each of these endings.</p> </blockquote>  <ul> <li>unique -> set</li> <li>4-letter -> better just check the length than use regex, regexes are slow</li> <li>ignore words with apostrophes -> <code>""'"" not in word</code></li> <li>ignore case -> convert all to lower, easy</li> <li>divide the set based on last 2 letters -> make a dict</li> </ul>  <pre><code>result = set() with open(""words.txt"") as fd:     for line in fd:         matching_words = {word for word in line.lower().split() if len(word)==4 and ""'"" not in word}         result.update(matching_words) print(result) print(len(result)) </code></pre>  <p><code>line.lower()</code> makes the whole line lower letter, then <code>.split()</code> with default arguments splits it on whitespace.</p>  <pre><code>result_dict = {} for word in result:     # better to use default dict here but you'll need to read docs for that     result_dict[word[2:]] = result_dict.get(word[2:], []) + [word] print(result_dict) print({key: len(value) for key, value in result_dict.items()}) </code></pre>"
59021845	How do I convert Python Code to JavaScript	javascript|node.js|python-3.x	2019-11-24 20:03:56.473000 UTC	"<p>I was trying to convert my code from Python to JS, because I want to use HTML with my JavaScript code. My question is, how do I convert this code from Python to JavaScript without parsing Python. Sorry for the messy wording. </p>  <pre class=""lang-py prettyprint-override""><code> #Python Code   import requests  import json  import datetime    url = https://www.alphavantage.co/query?function=TIME_SERIES_INTRADAY&amp;symbol=jpmf&amp;interval=60min&amp;apikey=testkey     response = requests.get(url)    assert response.status_code == 200    data =json.loads(response.text)   </code></pre>"	59021985	"<p>Without using any frameworks:</p>  <pre class=""lang-js prettyprint-override""><code>const https = require('https');  https.get('https://www.alphavantage.co/query?function=TIME_SERIES_INTRADAY&amp;symbol=jpmf&amp;interval=60min&amp;apikey=testkey', (res) =&gt; {   console.log('statusCode:', res.statusCode);   console.log('headers:', res.headers);    res.on('data', (d) =&gt; {     process.stdout.write(d);   });  }).on('error', (e) =&gt; {   console.error(e); }); </code></pre>  <p>Just see node <a href=""https://nodejs.org/api/https.html#https_https_get_options_callback"" rel=""nofollow noreferrer"">documents</a></p>"
59024625	Selenium cannot enable javascript in python	python|selenium|web-scraping|webdriver	2019-11-25 02:49:51.093000 UTC	"<p>how do I enable javascript in selenium using python? I tried several methods but mine isnt working. Does anyone know how could i fix this issue? Thanks</p>  <p>My code</p>  <pre><code>from selenium import webdriver import urllib import urllib.request import string from bs4 import BeautifulSoup import mysql.connector import time  chrome_path = r""C:\chromedriver.exe"" driver = webdriver.Chrome(chrome_path) driver.add_argument(""--enable-javascript"") </code></pre>  <p>Error i got </p>  <pre><code>Exception has occurred: AttributeError 'WebDriver' object has no attribute 'add_argument'   File ""C:\Users\bustillo-ronald\Desktop\python-basics\Scrape\propertyguru.py"", line 11, in &lt;module&gt;     driver.add_argument(""--enable-javascript"") </code></pre>"	59024778	"<p>You need to create an instance of a <code>ChromeOptions</code> object first and <code>add_argument</code> to that. Then pass the <code>options</code> object as an argument to the <code>Chrome</code> webdriver.</p>  <p>something like this</p>  <pre class=""lang-py prettyprint-override""><code>options = webdriver.ChromeOptions() options.add_argument(""--enable-javascript"")  # Now back to your code driver = webdriver.Chrome(chrome_path, options=options)  ... </code></pre>"
59034335	How to upload file in Selenium if input is created after javascript PYTHON	javascript|python|selenium|input|webdriver	2019-11-25 14:44:38.637000 UTC	"<p>By default there is no input in the site im visiting. There is a script that runs and it is the only place where i am being able to find </p>  <pre><code>&lt;input type='file'/&gt;  ; (function(e) {     var c = {};     c.fileapi = e(""&lt;input type='file'/&gt;"").get(0).files !== undefined;     c.formdata = window.FormData !== undefined;     e.fn.ajaxSubmit = function(g) {         if (!this.length) {             d(""ajaxSubmit: skipping submit process - no element selected"");             return this         }         var f, u, j, l = this;         if (typeof g == ""function"") {             g = {                 success: g             }         }         f = this.attr(""method"");         u = this.attr(""action"");         j = (typeof u === ""string"") ? e.trim(u) : """";         j = j || window.location.href || """";         if (j) {             j = (j.match(/^([^#]+)/) || [])[1]         }         g = e.extend(true, {             url: j,             success: e.ajaxSettings.success,             type: f || ""GET"",             iframeSrc: /^https/i.test(window.location.href || """") ? ""javascript:false"" : ""about:blank""         }, g);         var p = {};         this.trigger(""form-pre-serialize"", [this, g, p]);         if (p.veto) {             d(""ajaxSubmit: submit vetoed via form-pre-serialize trigger"");             return this         }         if (g.beforeSerialize &amp;&amp; g.beforeSerialize(this, g) === false) { </code></pre>  <p>Do you know how can i send_keys to that element? Is it complex?</p>"	59034674	"<p>I think you can still try to use <code>send_keys</code> on <code>//input[@type='file']</code>. It's a bit weird that they've included the entire JS function for their file upload logic, but not uncommon. The <code>&lt;input&gt;</code> element should accept key strokes regardless.</p>  <p>You might also need to execute some JS to potentially reveal the element if this is hidden -- this is optional, but if just <code>send_keys</code> doesn't work then this might help:</p>  <pre><code># locate file input file_input = driver.find_element_by_xpath(""//input[@type='file']"")  # optional: JS to reveal the element driver.execute_script(""arguments[0].display = 'block';"", file_input)  # send keys file_input.send_keys(""C:\Path\To\File"") </code></pre>"
59059672	how to inject javascript for loop in selenium - python	python|selenium	2019-11-26 21:35:05.547000 UTC	"<p>i'm encountering some problems with executing java script for loop into selenium script. Probably there is something wrong with syntax. Basicaly the goal is to inject loop which repeats 10x and clicks the button, followed with 2 sec delay.</p>  <pre><code> submit = WebDriverWait(self.browser, 20).until(EC.element_to_be_clickable((By.XPATH, ""//div[@class='content']//form//div[3]//div[@class='button-row']//button[1]"")))                 if submit:                     submit.click()                     time.sleep(self.random_number)                     try:                         self.browser.execute_script(""""""                         for(var i=0; i&lt;10; i++){                         setTimeout(()=&gt;{                                     document.querySelector(""button[id='wyszukaj'"").click();                                 },2000);}"""""")                     except:                         print(""do nothin </code></pre>  <p>g"")</p>"	59059817	"<p>Why are you trying to execute javascript code when the same can be accomplished in python?</p>  <pre><code>submit = WebDriverWait(self.browser,20).until(EC.element_to_be_clickable((By.XPATH, ""//div[@class='content']//form//div[3]//div[@class='button-row']//button[1]"")))                 if submit:                     submit.click()                     time.sleep(self.random_number)                     try:                          for i in range(10):                             my_button = WebDriverWait(self.browser,20).until(EC.element_to_be_clickable((By.ID, ""wyszukaj"")))                             my_button.click()                             time.sleep(2)                                                 except:                         print(""do nothing"") </code></pre>"
59144599	WebScraping JavaScript-Rendered Content using Selenium in Python	python|selenium-webdriver|web-scraping|webdriverwait|window-handles	2019-12-02 18:17:01.387000 UTC	"<p>I am very new to web scraping and have been trying to use Selenium's functions to simulate a browser accessing the Texas public contracting webpage and then download embedded PDFs. The website is this: <a href=""http://www.txsmartbuy.com/sp"" rel=""nofollow noreferrer"">http://www.txsmartbuy.com/sp</a>. </p>  <p>So far, I've successfully used Selenium to select an option in one of the dropdown menus ""Agency Name"" and to click the search button. I've listed my Python code below.</p>  <pre><code>import os os.chdir(""/Users/fsouza/Desktop"") #Setting up directory  from bs4 import BeautifulSoup #Downloading pertinent Python packages from selenium import webdriver from selenium.webdriver.support.ui import WebDriverWait from selenium.webdriver.support import expected_conditions as EC from selenium.common.exceptions import TimeoutException from selenium.webdriver.common.keys import Keys from selenium.webdriver.common.by import By  chromedriver = ""/Users/fsouza/Desktop/chromedriver"" #Setting up Chrome driver driver = webdriver.Chrome(executable_path=chromedriver) driver.get(""http://www.txsmartbuy.com/sp"") delay = 3 #Seconds  WebDriverWait(driver, delay).until(EC.presence_of_element_located((By.XPATH, ""//select[@id='agency-name-filter']/option[69]"")))     health = driver.find_element_by_xpath(""//select[@id='agency-name-filter']/option[68]"") health.click() search = driver.find_element_by_id(""spBtnSearch"") search.click() </code></pre>  <p>Once I get to the results page, I get stuck. </p>  <p><strong>First</strong>, I can't access any of the resulting links using the html page source. But if I manually inspect individual links in Chrome, I do find the pertinent tags (<code>&lt;a href...</code>) relating to individual results. I'm guessing this is because of JavaScript-rendered content. </p>  <p><strong>Second</strong>, even if Selenium were able to see these individual tags, they have no class or id. The best way to call them, I think, would be by calling <code>&lt;a</code> tags by the order shown (see code below) but this didn't work either. Instead, the link calls some other 'visible' tag (something in the footer, which I don't need). </p>  <p><strong>Third</strong>, assuming these things did work, how can I figure out the number of <code>&lt;a&gt;</code> tags showing on the page (in order to loop this code over an over for every single result)?</p>  <pre><code>driver.execute_script(""document.getElementsByTagName('a')[27].click()"") </code></pre>  <p>I would appreciate your attention to this––and please excuse any stupidity on my part, considering that I'm just starting out.</p>"	59149840	"<p>To get <code>&lt;a&gt;</code> tags you mean in the result, use the following <code>xpath</code>:</p>  <pre><code>//tbody//tr//td//strong//a </code></pre>  <p>After click <code>search</code> button, you can extract them with loop. First you need all the elements located with <code>.visibility_of_all_elements_located</code>:</p>  <pre><code>search.click()  elements = WebDriverWait(driver, 60).until(EC.visibility_of_all_elements_located((By.XPATH, ""//tbody//tr//td//strong//a"")))  print(len(elements))  for element in elements:     get_text = element.text      print(get_text)     url_number = element.get_attribute('onclick').replace('window.open(""/sp/', '').replace('"");return false;', '')     get_url = 'http://www.txsmartbuy.com/sp/' +url_number     print(get_url) </code></pre>  <p>Result one of them:</p>  <blockquote>   <p>IFB HHS0006862, Blanket, San Angelo Canteen Resale. 529-96596.   <a href=""http://www.txsmartbuy.com/sp/HHS0006862"" rel=""nofollow noreferrer"">http://www.txsmartbuy.com/sp/HHS0006862</a></p> </blockquote>"
59144599	WebScraping JavaScript-Rendered Content using Selenium in Python	python|selenium-webdriver|web-scraping|webdriverwait|window-handles	2019-12-02 18:17:01.387000 UTC	"<p>I am very new to web scraping and have been trying to use Selenium's functions to simulate a browser accessing the Texas public contracting webpage and then download embedded PDFs. The website is this: <a href=""http://www.txsmartbuy.com/sp"" rel=""nofollow noreferrer"">http://www.txsmartbuy.com/sp</a>. </p>  <p>So far, I've successfully used Selenium to select an option in one of the dropdown menus ""Agency Name"" and to click the search button. I've listed my Python code below.</p>  <pre><code>import os os.chdir(""/Users/fsouza/Desktop"") #Setting up directory  from bs4 import BeautifulSoup #Downloading pertinent Python packages from selenium import webdriver from selenium.webdriver.support.ui import WebDriverWait from selenium.webdriver.support import expected_conditions as EC from selenium.common.exceptions import TimeoutException from selenium.webdriver.common.keys import Keys from selenium.webdriver.common.by import By  chromedriver = ""/Users/fsouza/Desktop/chromedriver"" #Setting up Chrome driver driver = webdriver.Chrome(executable_path=chromedriver) driver.get(""http://www.txsmartbuy.com/sp"") delay = 3 #Seconds  WebDriverWait(driver, delay).until(EC.presence_of_element_located((By.XPATH, ""//select[@id='agency-name-filter']/option[69]"")))     health = driver.find_element_by_xpath(""//select[@id='agency-name-filter']/option[68]"") health.click() search = driver.find_element_by_id(""spBtnSearch"") search.click() </code></pre>  <p>Once I get to the results page, I get stuck. </p>  <p><strong>First</strong>, I can't access any of the resulting links using the html page source. But if I manually inspect individual links in Chrome, I do find the pertinent tags (<code>&lt;a href...</code>) relating to individual results. I'm guessing this is because of JavaScript-rendered content. </p>  <p><strong>Second</strong>, even if Selenium were able to see these individual tags, they have no class or id. The best way to call them, I think, would be by calling <code>&lt;a</code> tags by the order shown (see code below) but this didn't work either. Instead, the link calls some other 'visible' tag (something in the footer, which I don't need). </p>  <p><strong>Third</strong>, assuming these things did work, how can I figure out the number of <code>&lt;a&gt;</code> tags showing on the page (in order to loop this code over an over for every single result)?</p>  <pre><code>driver.execute_script(""document.getElementsByTagName('a')[27].click()"") </code></pre>  <p>I would appreciate your attention to this––and please excuse any stupidity on my part, considering that I'm just starting out.</p>"	59156403	"<p>To scrape the JavaScript-Rendered Content using <a href=""https://stackoverflow.com/questions/54459701/what-is-selenium-and-what-is-webdriver/54482491#54482491"">Selenium</a> you need to:</p> <ul> <li><p>Induce <em>WebDriverWait</em> for the desired <a href=""https://stackoverflow.com/questions/58695280/clicking-on-javascript-tab-using-seleniumpython-without-unique-class-id-or-elem/58711394#58711394""><code>element to be clickable()</code></a>.</p> </li> <li><p>Induce <em>WebDriverWait</em> for the <a href=""https://stackoverflow.com/questions/57943876/i-need-help-finding-an-element-with-a-locator/57944216#57944216""><code>visibility of all elements located()</code></a>.</p> </li> <li><p>Open each link in a <a href=""https://stackoverflow.com/questions/28431765/open-web-in-new-tab-selenium-python/51893230#51893230"">new tab</a> using <kbd>Ctrl</kbd> and <a href=""https://selenium.dev/selenium/docs/api/py/webdriver_remote/selenium.webdriver.remote.webelement.html#selenium.webdriver.remote.webelement.WebElement.click"" rel=""nofollow noreferrer""><code>click()</code></a> through <a href=""https://stackoverflow.com/questions/57730636/how-to-open-a-link-embeded-in-a-webelement-with-in-the-main-tab-in-a-new-tab-of/57733103#57733103"">ActionChains</a></p> </li> <li><p>Induce <em>WebDriverWait</em> and <a href=""https://stackoverflow.com/questions/57640584/how-to-open-each-product-within-a-website-in-a-new-tab-for-scrapping-using-selen/57641549#57641549"">switch to the new tab</a> to webscrape.</p> </li> <li><p>Switch back to the main page.</p> </li> <li><p>Code Block:</p> <pre><code>  from selenium import webdriver   from selenium.webdriver.common.by import By   from selenium.webdriver.support.ui import WebDriverWait   from selenium.webdriver.support import expected_conditions as EC   from selenium.webdriver.common.action_chains import ActionChains   from selenium.webdriver.common.keys import Keys   import time    options = webdriver.ChromeOptions()    options.add_argument(&quot;start-maximized&quot;)   options.add_experimental_option(&quot;excludeSwitches&quot;, [&quot;enable-automation&quot;])   options.add_experimental_option('useAutomationExtension', False)   driver = webdriver.Chrome(options=options, executable_path=r'C:\Utility\BrowserDrivers\chromedriver.exe')   driver.get(&quot;http://www.txsmartbuy.com/sp&quot;)   windows_before  = driver.current_window_handle   WebDriverWait(driver, 10).until(EC.element_to_be_clickable((By.XPATH, &quot;//select[@id='agency-name-filter' and @name='agency-name']&quot;))).click()   WebDriverWait(driver, 10).until(EC.element_to_be_clickable((By.XPATH, &quot;//select[@id='agency-name-filter' and @name='agency-name']//option[contains(., 'Health &amp; Human Services Commission - 529')]&quot;))).click()   WebDriverWait(driver, 10).until(EC.element_to_be_clickable((By.XPATH, &quot;//a[@id='spBtnSearch']/i[@class='icon-search']&quot;))).click()   for link in WebDriverWait(driver, 5).until(EC.visibility_of_all_elements_located((By.XPATH, &quot;//table/tbody//tr/td/strong/a&quot;))):       ActionChains(driver).key_down(Keys.CONTROL).click(link).key_up(Keys.CONTROL).perform()       WebDriverWait(driver, 10).until(EC.number_of_windows_to_be(2))       windows_after = driver.window_handles       new_window = [x for x in windows_after if x != windows_before][0]       driver.switch_to_window(new_window)       time.sleep(3)       print(&quot;Focus on the newly opened tab and here you can scrape the page&quot;)       driver.close()       driver.switch_to_window(windows_before)   driver.quit() </code></pre> </li> <li><p>Console Output:</p> <pre><code>  Focus on the newly opened tab and here you can scrape the page   Focus on the newly opened tab and here you can scrape the page   Focus on the newly opened tab and here you can scrape the page   .   . </code></pre> </li> <li><p>Browser Snapshot:</p> </li> </ul> <p><img src=""https://i.stack.imgur.com/0kZzq.gif"" alt=""scrape"" /></p> <hr /> <h2>References</h2> <p>You can find a couple of relevant detailed discussions in:</p> <ul> <li><a href=""https://stackoverflow.com/questions/52277877/how-to-open-multiple-hrefs-within-a-webtable-to-scrape-through-selenium/52281843#52281843"">How to open multiple hrefs within a webtable to scrape through selenium</a></li> <li><a href=""https://stackoverflow.com/questions/65623799/staleelementreferenceexception-even-after-adding-the-wait-while-collecting-the-d/65631425#65631425"">StaleElementReferenceException even after adding the wait while collecting the data from the wikipedia using web-scraping</a></li> <li><a href=""https://stackoverflow.com/questions/59706039/unable-to-access-the-remaining-elements-by-xpaths-in-a-loop-after-accessing-the/59712944#59712944"">Unable to access the remaining elements by xpaths in a loop after accessing the first element- Webscraping Selenium Python</a></li> <li><a href=""https://stackoverflow.com/questions/57640584/how-to-open-each-product-within-a-website-in-a-new-tab-for-scraping-using-seleni/57641549#57641549"">How to open each product within a website in a new tab for scraping using Selenium through Python</a></li> </ul>"
59149354	How to send data from Python script to JavaScript and vice-versa?	javascript|python|json	2019-12-03 02:24:09.220000 UTC	<p>I am trying to make a calculator (with matrix calculation also). I want to make interface in JavaScript and calculation stuff in Python. But I don't know how to send parameters from python to JavaScript and from JavaScript to python.</p>  <p>Edit: I want to send data via JSON (if possible).</p>	59149367	"<p>You would have to essentially set both of them up as API's and access them via endpoints. </p>  <p>For Javascript, you can use node to set up your API endpoint, and for Python use Flask.</p>"
59149354	How to send data from Python script to JavaScript and vice-versa?	javascript|python|json	2019-12-03 02:24:09.220000 UTC	<p>I am trying to make a calculator (with matrix calculation also). I want to make interface in JavaScript and calculation stuff in Python. But I don't know how to send parameters from python to JavaScript and from JavaScript to python.</p>  <p>Edit: I want to send data via JSON (if possible).</p>	59149374	"<p>I presume you are talking about displaying on a webpage? You will need to have some web framework like flask, django etc to process the web page request, then render the html.</p>  <p>Typically, when you render the html, you can generate json objects so your javascript can read.</p>  <p>Alternatively your javascript will make an ajax call to the server so that you python can return json response.</p>  <p>I've used <a href=""https://cherrypy.org/"" rel=""nofollow noreferrer"">https://cherrypy.org/</a> to implement some APIs, you don't need heavy frameworks like Django if you are only displaying a simple page.</p>"
59149354	How to send data from Python script to JavaScript and vice-versa?	javascript|python|json	2019-12-03 02:24:09.220000 UTC	<p>I am trying to make a calculator (with matrix calculation also). I want to make interface in JavaScript and calculation stuff in Python. But I don't know how to send parameters from python to JavaScript and from JavaScript to python.</p>  <p>Edit: I want to send data via JSON (if possible).</p>	59149393	"<p>So you would want to create a  <a href=""https://www.fullstackpython.com/flask.html"" rel=""nofollow noreferrer"">server with Python</a> in which your JavaScript <a href=""https://developer.mozilla.org/en-US/docs/Web/Guide/AJAX"" rel=""nofollow noreferrer"">makes AJAX calls to</a> endpoints that you create with your Python server.</p>  <p>In your calculator example, you would send the parameters of the calculation to the server (lets say /calculate endpoint). The server would make the calculation, and would return the value back to the JavaScript front end for it to display.</p>"
59149354	How to send data from Python script to JavaScript and vice-versa?	javascript|python|json	2019-12-03 02:24:09.220000 UTC	<p>I am trying to make a calculator (with matrix calculation also). I want to make interface in JavaScript and calculation stuff in Python. But I don't know how to send parameters from python to JavaScript and from JavaScript to python.</p>  <p>Edit: I want to send data via JSON (if possible).</p>	59149650	"<p>In your javascript, you need to make a AJAX call to your server where your python is running. A package like axio will make things much easier:</p>  <p>The following javascript will invoke the RESTAPI and perform according to the response</p>  <pre><code>var promise = axios.create({ baseURL: ""https://yourhost/rootpath/"", timeout: 100000 }).get(""path/to/rest"") promise.then((response) = &gt; {... do something ...}) </code></pre>  <p>On your Flask application, you define a function which is attached to your specified RESTApi Paht like this:</p>  <pre><code>@app.route('path/to/rest', methods=['GET']) def do_something():     return {""result"" : ""value"" } </code></pre>"
59150737	Scrape the data from a website that loads the data from JavaScript / JSON Array (POST request) using Python	python|web|web-scraping|beautifulsoup|scrapy	2019-12-03 05:35:49.477000 UTC	"<p>I am trying to scrape the data from <a href=""https://www.ikh.se/sv/arbetskladsel--skyddsutrustning--skyddsprodukter/brandskydds--och-forsta-forbandsprodukter"" rel=""nofollow noreferrer"">this link</a></p>  <p>I have tried this way </p>  <pre class=""lang-py prettyprint-override""><code>from bs4 import BeautifulSoup import urllib.request import csv  # specify the url urlpage =  'https://www.ikh.se/sysNet/getProductsJSON/getProductsJSONDB.aspx?' \  'sua=1&amp;lang=2&amp;navid=19277994'  # query the website and return the html to the variable 'page' page = urllib.request.urlopen(urlpage) # parse the html using beautiful soup and store in variable 'soup' soup = BeautifulSoup(page, 'html.parser') tag = soup.find('div', attrs={'class':'dnsCell'}) text = (''.join(tag.stripped_strings)) print (page) </code></pre>  <p>I got the HTML dom but the product list dom are missing. Actually I guess the product list dom manages by a JSON array that requests from <a href=""https://www.ikh.se/sysNet/getProductsJSON/getProductsJSONDB.aspx?sua=2&amp;lang=2&amp;navid=11994180"" rel=""nofollow noreferrer"">this link</a> but <strong>I am not sure</strong> about the product list dom load method. I am right or wrong. I want to scrape the all product details from this <a href=""https://www.ikh.se/sv/ikh-se-framsida"" rel=""nofollow noreferrer"">site</a> and export in Excel.</p>"	59150759	"<p>The requests library does not load the Javascript. If you want to download completely rendered website, use selenium library : <a href=""https://selenium-python.readthedocs.io/"" rel=""nofollow noreferrer"">https://selenium-python.readthedocs.io/</a></p>"
59160771	Is it possbile to import a javascript program in python?	javascript|python|node.js	2019-12-03 15:51:22.467000 UTC	<p>I am working on a research project. Where few of the libraries are written in javascript. Is there any possibility to import a javascript program in python as a module and be able to use its functions?</p>	59160815	"<p>You can do it using Jiphy library. This should help you in achieving this.</p>  <p>pip install jiphy</p>  <p>Learn more about library. <a href=""https://pypi.org/project/jiphy/"" rel=""nofollow noreferrer"">jiphy Library</a></p>  <p><a href=""https://gist.github.com/oakfang/f65e10dd10992045c968"" rel=""nofollow noreferrer"">Example to use Javascript in python</a></p>"
59160771	Is it possbile to import a javascript program in python?	javascript|python|node.js	2019-12-03 15:51:22.467000 UTC	<p>I am working on a research project. Where few of the libraries are written in javascript. Is there any possibility to import a javascript program in python as a module and be able to use its functions?</p>	59160873	"<p>Firstly, you need to install the Naked module like so:</p>  <pre class=""lang-sh prettyprint-override""><code>$ pip install Naked </code></pre>  <p>After that you can use:</p>  <pre class=""lang-py prettyprint-override""><code>from Naked.toolshed.shell import execute_js, muterun_js  response = muterun_js('file.js') if response.exitcode == 0:   print(response.stdout) else:   sys.stderr.write(response.stderr) </code></pre>"
59162890	Javascript Button to Download ZipFile Generated by Python3 Flask	javascript|python|python-3.x|flask|zip	2019-12-03 17:59:43.627000 UTC	"<p>I am generating a ZipFile with Python 3.7 on Ubuntu 18.04 and serving it with Flask 1.0.2. I know the Flask code works because I can type the endpoint in my browser explicitly and get a valid ZipFile that I can decompress on Windows 10. I am now trying to get my Javascript code to download the ZipFile with a Button Click. The problem is that the resulting file is declared ""Corrupt"" by Windows and cannot be decompressed. How can I make the Javascript download the file correctly?</p>  <p>The Flask code is shown here:</p>  <pre><code>@app.route(""/get_new_training_data"", methods=[""GET""]) def create_and_serve_training_data_zipfile():      # Define the location of the new training data     newDataLocation = ""%s"" % (configuration.NEW_TRAINING_DATA_LOCATION)      # Ensure it exists or throw and error     if os.path.isdir(newDataLocation):          print(""[%s] Creating new ZipFile for download from: %s"" % (os.path.basename(__file__), newDataLocation))          # Create a zipfile in memory and send it back to the user         # The zipfile will contain the training data collected through         # the webbrowser button controls         try:              memoryFile = BytesIO()             with zipfile.ZipFile(memoryFile, 'w', zipfile.ZIP_DEFLATED) as zf:                 for root, dirs, files in os.walk(newDataLocation):                     for file in files:                         print(""[%s] Adding file to ZipFile: %s"" % (os.path.basename(__file__), file))                         zf.write(os.path.join(root, file))             memoryFile.seek(0)             return send_file(memoryFile, mimetype='application/zip', attachment_filename='ImageData.zip', as_attachment=True)          except Exception as err:              newStatus = {""download_image_data"": ""Failed: Error Could not create Zipfile: %s""%(err)}              print(""[%s] Error downloading new Training Data - JSON Response is: %s"" % (             os.path.basename(__file__), newStatus))              return jsonify(newStatus), 500      else:          newStatus = {""download_image_data"": ""Failed: Error Training Data directory does not exist""}          print(""[%s] Error downloading new Training Data - JSON Response is: %s"" % (os.path.basename(__file__), newStatus))          return jsonify(newStatus), 500 </code></pre>  <p>The Javascript code is here:</p>  <pre><code>// Add an on click for the download data button var downloadTrainingDataButton = document.getElementById(""downloadTrainingData""); downloadTrainingDataButton.onclick = function() {      console.log(""Downloading New Training Data ..."");      // Do a web request to download a zip file of the training data     var logRequestXmlHttp = new XMLHttpRequest();     logRequestXmlHttp.open( ""GET"", ""http://{{host_ip}}/get_new_training_data"", true ); // false for synchronous request     logRequestXmlHttp.onload = function(e) {         code = logRequestXmlHttp.response;          if (logRequestXmlHttp.status == 200) {              var blob = new Blob([this.response], {type: ""application/zip""});             var url = window.URL.createObjectURL(blob);             var link = document.createElement('a');             document.body.appendChild(link);             link.style = ""display: none"";             link.href = url;             link.download = ""ImageData.zip"";             link.click();              setTimeout(() =&gt; {             window.URL.revokeObjectURL(url);             link.remove(); } , 100);              console.log(""Success downloading zip file"");          }      };     logRequestXmlHttp.onerror = function () {         console.log(""Error with downloading zip file: "" + logRequestXmlHttp.responseText + "" Code: "" + code);     };     logRequestXmlHttp.send( null );  } </code></pre>  <p>Thanks.</p>"	59199030	"<p>To download files you can use the <a href=""http://developer.mozilla.org/en-US/docs/Web/HTML/Element/a#download"" rel=""nofollow noreferrer"">HTML5 download attribute</a> on an anchor tag to let it know it needs to download a resource instead of navigating to it. This is probably the easiest way to achieve what you want.</p>  <p>For example:</p>  <pre><code>&lt;a href=""http://{{host_ip}}/get_new_training_data"" download=""training_data.zip""&gt;Download Training Data&lt;/a&gt; </code></pre>"
59174876	How to implement Javascript String.fromCharCode in Python3 to accept a minus	python|ascii	2019-12-04 11:21:28.423000 UTC	"<p>I have to make a character in Python like the following Javascript code:</p>  <pre class=""lang-js prettyprint-override""><code>char = String.fromCharCode(-31) console.log(char); </code></pre>  <p>Here is my code:</p>  <pre class=""lang-py prettyprint-override""><code>chr(-31) </code></pre>  <p>But I got error in python:<code>ValueError: chr() arg not in range(0x110000)</code></p>  <p>I know the problem is passing a minus number into the <code>chr</code> function, but I don't know witch function able to process the minus number.</p>"	59175067	"<p>Unfortunately, there isn't really a <code>chr()</code> function in Python that supports receiving a negative number. JavaScript behaviour is odd and it shouldn't really be accepting a negative number for this as that doesn't make sense.</p>  <p>What it's actually doing is wrapping around to 65535, which you can see with:</p>  <pre><code>char = String.fromCharCode(-31) console.log(char.charCodeAt()) // 65505  char = String.fromCharCode(-1) char.charCodeAt() // 65535 </code></pre>  <p>So what you can do if you need to take in negative numbers in Python is use <code>65536-&lt;number&gt;</code> e.g.</p>  <pre><code>&gt;&gt;&gt; chr(65536-31) '￡' </code></pre>"
59174876	How to implement Javascript String.fromCharCode in Python3 to accept a minus	python|ascii	2019-12-04 11:21:28.423000 UTC	"<p>I have to make a character in Python like the following Javascript code:</p>  <pre class=""lang-js prettyprint-override""><code>char = String.fromCharCode(-31) console.log(char); </code></pre>  <p>Here is my code:</p>  <pre class=""lang-py prettyprint-override""><code>chr(-31) </code></pre>  <p>But I got error in python:<code>ValueError: chr() arg not in range(0x110000)</code></p>  <p>I know the problem is passing a minus number into the <code>chr</code> function, but I don't know witch function able to process the minus number.</p>"	59175076	"<p>I'd argue that Python's behaviour is better here: you're passing in something that doesn't have a defined Unicode code point!  That said, <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/fromCharCode"" rel=""nofollow noreferrer"">the JavaScript docs</a> say:</p>  <blockquote>   <p>A sequence of numbers that are UTF-16 code units. The range is between 0 and 65535 (0xFFFF). Numbers greater than 0xFFFF are truncated. No validity checks are performed.</p> </blockquote>  <p>So in Python you'd just do:</p>  <pre class=""lang-py prettyprint-override""><code>chr(-31 &amp; 0xffff) </code></pre>"
59192803	How to scrape a data from a dynamic website containing Javascript using Python?	javascript|excel|python-3.x|selenium-webdriver|web-scraping	2019-12-05 10:13:44.773000 UTC	"<p>I am trying to scrape data from <a href=""https://www.doordash.com/food-delivery/chicago-il-restaurants/"" rel=""nofollow noreferrer"">https://www.doordash.com/food-delivery/chicago-il-restaurants/</a></p>  <p>The idea is to scrape all the data regarding the different restaurant listings on the website. The site is divided into different cities, but I only require restaurant data for <strong><em>Chicago</em></strong>. </p>  <p>All restaurant listings for the city have to be scraped along with any other relevant data about the respective restaurants (Ex: Reviews, Rating, Cuisine, address, state etc). I need to capture all the respective details(currently 4,326 listings) for the city in the Excel. </p>  <p>I have tried to extract the restaurant name, cuisine, ratings and review inside the class named ""StoreCard_root___1p3uN"". But No datas have been displayed. The output is blank.</p>  <pre><code> from selenium import webdriver  chrome_path = r""D:\python project\chromedriver.exe""  driver = webdriver.Chrome(chrome_path)  driver.get(""https://www.doordash.com/food-delivery/chicago-il-restaurants/"")  driver.find_element_by_xpath(""""""//*[@id=""SeoApp""]/div/div[1]/div/div[2]/div/div[2]/div/div[2]/div[1]/div[3]"""""").click()  posts = driver.find_elements_by_class_name(""StoreCard_root___1p3uN"")  for post in posts:     print(post.text) ```   </code></pre>"	59193176	"<p>you can use the <code>API</code> url as the data rendered from it actually via <code>XHR</code> request.</p>  <p>iterate over the <code>API</code> link below and <code>scrape</code> whatever you want.</p>  <p><a href=""https://api.doordash.com/v2/seo_city_stores/?delivery_city_slug=chicago-il-restaurants&amp;store_only=true&amp;limit=50&amp;offset=0"" rel=""nofollow noreferrer"">https://api.doordash.com/v2/seo_city_stores/?delivery_city_slug=chicago-il-restaurants&amp;store_only=true&amp;limit=50&amp;offset=0</a></p>  <p>You will just loop over this parameter <code>offset=0</code> by increasing it +50 each time as each page will shown <code>50</code> items till you reach <code>4300</code> as it's the last page ! simply by <code>range(0, 4350, 50)</code></p>  <pre><code>import requests import pandas as pd  data = [] for item in range(0, 4350, 50):     print(f""Extracting item# {item}"")     r = requests.get(         f""https://api.doordash.com/v2/seo_city_stores/?delivery_city_slug=chicago-il-restaurants&amp;store_only=true&amp;limit=50&amp;offset={item}"").json()     for item in r['store_data']:         item = (item['name'], item['city'], item['category'],                 item['num_ratings'], item['average_rating'], item['average_cost'])         data.append(item)  df = pd.DataFrame(     data, columns=['Name', 'City', 'Category', 'Num Ratings', 'Average Ratings', 'Average Cost']) df.to_csv('output.csv', index=False) print(""done"") </code></pre>  <p>Sample of Output:</p>  <p><a href=""https://i.stack.imgur.com/Cn1ER.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/Cn1ER.png"" alt=""enter image description here""></a></p>  <p>View Output online: <a href=""https://sheet.zoho.com/sheet/editor.do?doc=e740575ab41a17897efd7ddab9c9fd69ca2ee63fd8ffb3fd654ce529416c9d1c773852d3791d39addb9dec1515469326649ee7425eeba02100a490cb98d643b3"" rel=""nofollow noreferrer"">Click Here</a></p>  <p>Full Data is here: <a href=""http://www.sharecsv.com/s/c86acd31ad18883762bf3c7cf8cce93d/output.csv"" rel=""nofollow noreferrer"">Click Here</a></p>"
59192803	How to scrape a data from a dynamic website containing Javascript using Python?	javascript|excel|python-3.x|selenium-webdriver|web-scraping	2019-12-05 10:13:44.773000 UTC	"<p>I am trying to scrape data from <a href=""https://www.doordash.com/food-delivery/chicago-il-restaurants/"" rel=""nofollow noreferrer"">https://www.doordash.com/food-delivery/chicago-il-restaurants/</a></p>  <p>The idea is to scrape all the data regarding the different restaurant listings on the website. The site is divided into different cities, but I only require restaurant data for <strong><em>Chicago</em></strong>. </p>  <p>All restaurant listings for the city have to be scraped along with any other relevant data about the respective restaurants (Ex: Reviews, Rating, Cuisine, address, state etc). I need to capture all the respective details(currently 4,326 listings) for the city in the Excel. </p>  <p>I have tried to extract the restaurant name, cuisine, ratings and review inside the class named ""StoreCard_root___1p3uN"". But No datas have been displayed. The output is blank.</p>  <pre><code> from selenium import webdriver  chrome_path = r""D:\python project\chromedriver.exe""  driver = webdriver.Chrome(chrome_path)  driver.get(""https://www.doordash.com/food-delivery/chicago-il-restaurants/"")  driver.find_element_by_xpath(""""""//*[@id=""SeoApp""]/div/div[1]/div/div[2]/div/div[2]/div/div[2]/div[1]/div[3]"""""").click()  posts = driver.find_elements_by_class_name(""StoreCard_root___1p3uN"")  for post in posts:     print(post.text) ```   </code></pre>"	67447856	"<p>I was faced with this issue too, but I solved it using selenium and BeautifulSoup by doing the following:</p> <ol> <li>Make sure the algorithm clicks button to reveal Menu and prices if necessary</li> <li>The menu and prices have to be processed because they will might come off as nested list after the extraction from parsing so the get_text() function won't work on them right away. The code and explanation can be found in this medium article</li> </ol> <p><a href=""https://tadeogundele.medium.com/web-scraping-with-selenium-why-your-code-works-but-returns-an-empty-list-still-f736cbe761a2"" rel=""nofollow noreferrer"">Tackling empty list web scraping with selenium</a></p>"
59192803	How to scrape a data from a dynamic website containing Javascript using Python?	javascript|excel|python-3.x|selenium-webdriver|web-scraping	2019-12-05 10:13:44.773000 UTC	"<p>I am trying to scrape data from <a href=""https://www.doordash.com/food-delivery/chicago-il-restaurants/"" rel=""nofollow noreferrer"">https://www.doordash.com/food-delivery/chicago-il-restaurants/</a></p>  <p>The idea is to scrape all the data regarding the different restaurant listings on the website. The site is divided into different cities, but I only require restaurant data for <strong><em>Chicago</em></strong>. </p>  <p>All restaurant listings for the city have to be scraped along with any other relevant data about the respective restaurants (Ex: Reviews, Rating, Cuisine, address, state etc). I need to capture all the respective details(currently 4,326 listings) for the city in the Excel. </p>  <p>I have tried to extract the restaurant name, cuisine, ratings and review inside the class named ""StoreCard_root___1p3uN"". But No datas have been displayed. The output is blank.</p>  <pre><code> from selenium import webdriver  chrome_path = r""D:\python project\chromedriver.exe""  driver = webdriver.Chrome(chrome_path)  driver.get(""https://www.doordash.com/food-delivery/chicago-il-restaurants/"")  driver.find_element_by_xpath(""""""//*[@id=""SeoApp""]/div/div[1]/div/div[2]/div/div[2]/div/div[2]/div[1]/div[3]"""""").click()  posts = driver.find_elements_by_class_name(""StoreCard_root___1p3uN"")  for post in posts:     print(post.text) ```   </code></pre>"	71913649	"<p>I have checked out the API that αԋɱҽԃ αмєяιcαη mentions. They also had an endpoint for restaurant info.</p> <p>URL <a href=""https://api.doordash.com/v2/restaurant/%5BrestaurantId%5D/"" rel=""nofollow noreferrer"">https://api.doordash.com/v2/restaurant/[restaurantId]/</a></p> <p>It was working until recently when it started returning {&quot;detail&quot;:&quot;Request was throttled.&quot;}</p> <p>Has anyone had the same issue / found a workaround?</p>"
59221808	Python: javascript error: missing ) after argument list	javascript|python|selenium	2019-12-07 00:01:22.913000 UTC	"<p>When running the python script below I'm getting an error message ""javascript error: missing ) after argument list"".  The script is failing at ""driver.execute_script(tab)"".  I've tried adjusting it but I'm not able to solve it.</p>  <pre><code>import selenium from selenium import webdriver  driver = webdriver.Chrome()  driver.get('http://techstepacademy.com/training-ground')  list = ['http://yahoo.com', 'http://google.com','http://techstepacademy.com/training-ground']  for url in list:     tab = ""window.open("" + url + "",'_blank')""     driver.execute_script(tab) </code></pre>"	59222085	"<p>add quotes around url.   </p>  <pre><code> tab = ""window.open("" + '""' + url + '""' + "",'_blank')"" </code></pre>"
59221808	Python: javascript error: missing ) after argument list	javascript|python|selenium	2019-12-07 00:01:22.913000 UTC	"<p>When running the python script below I'm getting an error message ""javascript error: missing ) after argument list"".  The script is failing at ""driver.execute_script(tab)"".  I've tried adjusting it but I'm not able to solve it.</p>  <pre><code>import selenium from selenium import webdriver  driver = webdriver.Chrome()  driver.get('http://techstepacademy.com/training-ground')  list = ['http://yahoo.com', 'http://google.com','http://techstepacademy.com/training-ground']  for url in list:     tab = ""window.open("" + url + "",'_blank')""     driver.execute_script(tab) </code></pre>"	59222644	"<p>You can avoid those quotes completely:</p>  <pre><code>driver.execute_script(""window.open(arguments[0])"", url) </code></pre>"
59237358	Converting subset sum algorithm from JavaScript to Python	javascript|python|python-3.x|list	2019-12-08 16:18:21.040000 UTC	"<p>I have the following code in JavaScript to compute the minimum elements in array whose sum equals <code>n</code>:</p>  <pre><code>function findMinSum(arr, n){     if(!arr) return      let min      for (let i=0; i&lt;arr.length; i++) {          /* if a number equals the sum, it's obviously          * the shortest set, just return it          */         if (arr[i] == n) return [arr[i]]               /* recursively call on subset with          * sum adjusted for removed element           */         let next = findMinSum(arr.slice(i+1), n-arr[i])          /* we only care about next if it's shorter then           * the shortest thing we've seen so far          */         if (next){             if(min === undefined || next.length &lt; min.length){                 min = [arr[i], ...next]             }         }     }     return min &amp;&amp; min  /* if we found a match return it, otherwise return undefined */ } </code></pre>  <p>I got this code from <a href=""https://stackoverflow.com/a/55771349/12500294"">here</a>.</p>  <p>I wanted to convert it to Python, so I did the following:</p>  <pre><code>def findMinSum(arr, n):     if not arr:         return      min = []     min_len = len(min)     for i in range(0, len(arr)):          if(arr[i] == n):             return (arr[i])          next = []         next = findMinSum(arr[i+1:], n-arr[i])          if(next == list):             next_len = len(next)         else:             next_len = next          if(next):             print(next) # printing next for debugging purpose              if( ( not min ) or (next_len &lt; min_len) ):                 min = [ next, arr[i]]      return min  arr = [8, 6, 1, 5, 9, 3] get_min = findMinSum(arr, 14)  print(get_min)  </code></pre>  <p>But when I run this code, I get the following error:</p>  <pre class=""lang-none prettyprint-override""><code>3 [3, 1] 9 [[3, 1], 6] 3 [3, 9] Traceback (most recent call last):   File ""test1.py"", line 34, in &lt;module&gt;     min2 = findMinSum(arr, 14)   File ""test1.py"", line 25, in findMinSum     if( ( not min ) or (next_len &lt; min_len) ): TypeError: '&lt;' not supported between instances of 'list' and 'int' </code></pre>  <p>The expected output should be <code>[8, 6]</code> or <code>[9, 5]</code>.</p>  <p>I can't think of any other way to write the code as I'm a newbie to Python. Also I don't want to import any other module except numpy.</p>  <p>Where did I go wrong with this translation?</p>"	59237636	"<p>There are a variety of issues here.</p>  <ul> <li>Never overwrite builtins. Python defines <code>min</code>, <code>next</code> and <code>list</code>. If you overwrite them, you may run into very subtle bugs.</li> <li>Python doesn't have arrays, it has lists. Never cache calls to <code>len</code>--this code doesn't update <code>min_len = len(min)</code>, so the value is stale in future comparisons in this loop if <code>min</code> is ever updated.</li> <li>Avoid unnecessary parentheses around conditionals and return statements since parenthesis are used for creating tuples. <code>return (arr[i])</code> should be <code>return [arr[i]]</code> (a single element list).</li> <li><code>min = [ next, arr[i]]</code> doesn't match <code>[arr[i], ...next]</code> either in ordering or unpacking/spreading. Use <code>min = [arr[i], *next]</code> to flatten <code>next</code>.</li> <li>JS and Python treat <code>undefined</code>/<code>None</code> and boolean array/list values differently. JS treats an empty array as truthy but Python treats empty lists as falsey. <code>min = []</code> doesn't capture the original JS code which sets <code>min = undefined</code> implicitly, so <code>if not min</code> checks both whether <code>min</code> is null <em>or empty</em>, which is not comparable to the original JS version.</li> <li>No need to check types; checking for <code>None</code> or <code>not None</code> is sufficient.</li> <li><code>if (next) { if (more stuff ...</code> can just be one block using <code>and</code>. No reason to nest (this is a problem in the original).</li> <li>Use <code>enumerate</code> instead of <code>range</code> to iterate over a list in most cases (if you do use range, <code>range(0, len(some_list))</code> can be <code>range(len(some_list))</code>.</li> <li>Adhere to <a href=""https://www.python.org/dev/peps/pep-0008/"" rel=""nofollow noreferrer"">PEP-8</a>. Use <code>snake_case</code> for function and variable names.</li> </ul>  <p>Here's my re-write:</p>  <pre><code>def find_smallest_sum(lst, n):     if not lst:         return None      smallest = None      for i, e in enumerate(lst):         if e == n:             return [e]          next_lst = find_smallest_sum(lst[i+1:], n - e)          if next_lst is not None and (smallest is None or len(next_lst) &lt; len(smallest)):             smallest = [e, *next_lst]      return smallest  if __name__ == ""__main__"":     print(find_smallest_sum([10, 0, -1, 20, 25, 30], 59))  # =&gt; [10, -1, 20, 30]     print(find_smallest_sum([8, 6, 1, 5, 9, 3], 14))       # =&gt; [5, 9] </code></pre>"
59237769	Avoid Selenium to be detected by javascript duck typing in python?	python|python-2.7|selenium|selenium-webdriver|selenium-chromedriver	2019-12-08 17:06:15.177000 UTC	"<p>Is there any way to change Selenium properties in order to avoid its own detection by duck typing method in Javascript?</p>  <p>Last time I was hardly looking to make Selenium to be fully undetected and identically to Chrome. Almost succeed but just found this new detection method which I cannot bypass: duck typing in Javascript.</p>  <p>Here is the Javascript detection code:</p>  <pre><code>// Opera 8.0+ var isOpera = (!!window.opr &amp;&amp; !!opr.addons) || !!window.opera || navigator.userAgent.indexOf(' OPR/') &gt;= 0;  // Firefox 1.0+ var isFirefox = typeof InstallTrigger !== 'undefined';  // Safari 3.0+ ""[object HTMLElementConstructor]""  var isSafari = /constructor/i.test(window.HTMLElement) || (function (p) { return p.toString() === ""[object SafariRemoteNotification]""; })(!window['safari'] || (typeof safari !== 'undefined' &amp;&amp; safari.pushNotification));  // Internet Explorer 6-11 var isIE = /*@cc_on!@*/false || !!document.documentMode;  // Edge 20+ var isEdge = !isIE &amp;&amp; !!window.StyleMedia;  // Chrome 1 - 71 var isChrome = !!window.chrome &amp;&amp; (!!window.chrome.webstore || !!window.chrome.runtime);  // Blink engine detection var isBlink = (isChrome || isOpera) &amp;&amp; !!window.CSS;   var output = 'Detecting browsers by ducktyping:&lt;hr&gt;'; output += 'isFirefox: ' + isFirefox + '&lt;br&gt;'; output += 'isChrome: ' + isChrome + '&lt;br&gt;'; output += 'isSafari: ' + isSafari + '&lt;br&gt;'; output += 'isOpera: ' + isOpera + '&lt;br&gt;'; output += 'isIE: ' + isIE + '&lt;br&gt;'; output += 'isEdge: ' + isEdge + '&lt;br&gt;'; output += 'isBlink: ' + isBlink + '&lt;br&gt;'; document.body.innerHTML = output; </code></pre>  <p>Source: <a href=""https://jsfiddle.net/6spj1059/"" rel=""nofollow noreferrer"">https://jsfiddle.net/6spj1059/</a> Look what are the results for this js code in real Chrome browser: <a href=""https://i.stack.imgur.com/SAg82.png"" rel=""nofollow noreferrer"">results for real Chrome browser</a></p>  <p>While all of them are FALSE when open the same <strong>jsfiddle</strong> link in Selenium.</p>  <p>Here is what I did into Python. I tried to change window title in python by asserting it as Chrome since just by setting it directly isn't possible. Also tried to first navigate to the chrome://newtab url and after that to the url I want but also fails.</p>  <pre><code>browser.get(""chrome://newtab"") try:     assert u'New Tab' in browser.title     print ""Assertion succeed!""     print browser.title except AssertionError:     _, _, tb = sys.exc_info()     traceback.print_tb(tb)  # Fixed format     tb_info = traceback.extract_tb(tb)     filename, line, func, text = tb_info[-1]      print('An error occurred on line {} in statement {}'.format(line, text))     exit(1)  print(""Page Title is :"", browser.title) clear_cache_and_cookies(browser)  browser.get(url16) print browser.title print type(browser.title) print u'New Tab' print type(u'New Tab') </code></pre>  <p>Thank you for your help!</p>"	59246148	"<p>Should be:</p>  <pre><code>driver.execute_script(""""""   window.chrome.webstore = true """""") </code></pre>"
59262263	How to keep track of mouse events and position using selenium and javascript in python?	javascript|python|selenium	2019-12-10 07:30:33.153000 UTC	"<p>I am working to get the element details while clicking on that element inside the selenium web driver in python by executing a javascript function on the page.</p>  <p>But it is not working as I expected, even I have used the async method to get the element details from javascript to python. But I still can't able to get the element details in serverside python code.</p>  <p>Please provide a better solution for this case. </p>  <p><strong>sample code</strong></p>  <pre><code>@asyncio.coroutine def mouseevent(driver):             while true:                 mouse =driver.execute_script('''                      var x= onclick = function(e){                         return e.target;                     }                 ''')                 print(mouse)  driver=webdriver.Chrome(Chrome)  driver.implicitly_wait(30) driver.maximize_window() driver.get(""https://www.google.com/"")   loop = asyncio.get_event_loop()  tasks = [     asyncio.ensure_future(mouseevent(driver))] loop.run_until_complete(asyncio.wait(tasks)) loop.close() </code></pre>  <p>Thanks in Advance. </p>"	59267531	"<p>Maybe there is better method but this code  works for me.</p>  <hr>  <p>First I create variable <code>window.x</code> with default value at start so I can check its value all the time - even if I don't click any element.</p>  <pre><code>driver.execute_script('window.x = null;') </code></pre>  <p>Later I assign to <code>body</code> function which will be executed when I click <code>body</code> - it will assign value to <code>window.x</code> </p>  <pre><code>driver.execute_script('document.body.addEventListener(""click"", function(e) { window.x = e.target;})') </code></pre>  <p>And in loop I only check value in this variable. </p>  <pre><code>while True:     print(driver.execute_script('return window.x'))     time.sleep(0.5) </code></pre>  <hr>  <p>It would need to check if value was changed between loop or it should run function which copy value from <code>window.x</code> to ie. <code>window.y</code>, next it clearn <code>window.x</code> and it returns <code>window.y</code> - this way it will get value only once.</p>  <pre><code>while True:     print(driver.execute_script('window.y = window.x; window.x = null; return window.y'))     time.sleep(0.5) </code></pre>  <hr>  <pre><code>import selenium.webdriver import time  url = 'https://stackoverflow.com' driver = selenium.webdriver.Firefox() driver.get(url)  driver.execute_script('window.x = null;')  driver.execute_script('document.body.addEventListener(""click"", function(e) { window.x = e.target;})')  while True:     print(driver.execute_script('window.y = window.x; window.x = null; return window.y'))     time.sleep(0.5) </code></pre>  <hr>  <p><strong>EDIT:</strong> I found answers which should better resolve problem: <a href=""https://stackoverflow.com/questions/7790725/javascript-track-mouse-position"">Javascript - Track mouse position</a></p>"
59302894	JavaScript equivalent of Python's oauth2client POST request to Google Reminders	javascript|python|post|google-oauth	2019-12-12 10:49:29.953000 UTC	"<p>I would like to port this open source Python library for Google Reminders to JavaScript:</p>  <p><a href=""https://github.com/jonahar/google-reminders-cli"" rel=""nofollow noreferrer"">https://github.com/jonahar/google-reminders-cli</a></p>  <p>I have ported the authorization with the help of <a href=""https://developers.google.com/identity/protocols/OAuth2UserAgent"" rel=""nofollow noreferrer"">https://developers.google.com/identity/protocols/OAuth2UserAgent</a></p>  <p>My JavaScript version: <a href=""https://github.com/Jinjinov/google-reminders-js"" rel=""nofollow noreferrer"">https://github.com/Jinjinov/google-reminders-js</a></p>  <p>Now I need to port the Python's oauth2client POST request:</p>  <pre><code>body = {     '5': 1,  # boolean field: 0 or 1. 0 doesn't work ¯\_(ツ)_/¯     '6': num_reminders,  # number number of reminders to retrieve }  HEADERS = {     'content-type': 'application/json+protobuf', }      response, content = self.auth_http.request(         uri='https://reminders-pa.clients6.google.com/v1internalOP/reminders/list',         method='POST',         body=json.dumps(body),         headers=HEADERS,     ) </code></pre>  <p>My XMLHttpRequest POST request returns:</p>  <ul> <li>HTTP 400 - Bad Request - if I use 'application/x-www-form-urlencoded'</li> <li>HTTP 401 - Unauthorized - if I use 'application/json'</li> </ul>  <p>My code (full code with authorization and access token is on GitHub):</p>  <pre><code>function encodeObject(params) {     var query = [];     for (let key in params) {       let val = encodeURIComponent(key) + ""="" + encodeURIComponent(params[key]);       query.push(val);     }     return query.join('&amp;'); }  function list_reminders(num_reminders, access_token, callback) {      var body = {         '5': 1,  // boolean field: 0 or 1. 0 doesn't work ¯\_(ツ)_/¯         '6': num_reminders,  // number of reminders to retrieve     };      body['access_token'] = access_token;      //body = JSON.stringify(body);     body = encodeObject(body);      var xhr = new XMLHttpRequest();      xhr.open('POST', 'https://reminders-pa.clients6.google.com/v1internalOP/reminders/list' + '?' + body);     xhr.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');      //xhr.open('POST', 'https://reminders-pa.clients6.google.com/v1internalOP/reminders/list');     //xhr.setRequestHeader('Content-type', 'application/json');      xhr.onreadystatechange = function (e) {         if (xhr.readyState === 4 &amp;&amp; xhr.status === 200) {             var content_dict = JSON.parse(xhr.response);              if (!('1' in content_dict)) {                 console.log('No reminders found');             }             else {                 var reminders_dict_list = content_dict['1'];                 var reminders = [];                  for(var reminder_dict of reminders_dict_list) {                     reminders.push(build_reminder(reminder_dict));                 }                  callback(reminders);             }         }         else if (xhr.readyState === 4 &amp;&amp; xhr.status === 401) {             callback(null);         }     }      //xhr.send(body);     xhr.send(null); } </code></pre>"	59347265	"<p>I was trying to send both, the body and the access token in the same way.</p>  <p>The solution is to send the access token as url encoded and the body as json:</p>  <pre><code>function list_reminders(num_reminders, access_token, callback) {     /*     returns a list of the last num_reminders created reminders, or     None if an error occurred     */      var xhr = new XMLHttpRequest();      xhr.open('POST', 'https://reminders-pa.clients6.google.com/v1internalOP/reminders/list' + '?' + 'access_token=' + access_token);     xhr.setRequestHeader('Content-type', 'application/json+protobuf');      xhr.onreadystatechange = function (e) {         if (xhr.readyState === 4 &amp;&amp; xhr.status === 200) {             var content_dict = JSON.parse(xhr.response);              if (!('1' in content_dict)) {                 console.log('No reminders found');             }             else {                 var reminders_dict_list = content_dict['1'];                 var reminders = [];                  for(var reminder_dict of reminders_dict_list) {                     reminders.push(build_reminder(reminder_dict));                 }                  callback(reminders);             }         }         else if (xhr.readyState === 4 &amp;&amp; xhr.status === 401) {             callback(null);         }     }      var body = {         '5': 1,  // boolean field: 0 or 1. 0 doesn't work ¯\_(ツ)_/¯         '6': num_reminders,  // number of reminders to retrieve     };      xhr.send(JSON.stringify(body)); } </code></pre>"
59306538	JavaScript MD5 differs from Python/Bash md5sum	javascript|python|md5|md5sum	2019-12-12 14:15:36.853000 UTC	"<p>I have the following snippet</p>  <pre><code>    function runUpload( file ) {         key_name = file.name         if( file.type === 'image/png'  ||                  file.type === 'image/jpg'  ||              file.type === 'image/jpeg' ||                 file.type === 'image/gif'  ||                 file.type === 'image/bmp'  ){             var reader = new FileReader(),                     image = new Image();             reader.readAsDataURL( file );             reader.onload = function( _file ){                 keyhash = md5(atob(_file.target.result.split(',')[1]));                 ZZ('key').el.src = _file.target.result;                 ZZ('key').el.style.display = 'block';             }          }      } </code></pre>  <p>The reason that the split happens is because if I left it at just:</p>  <pre><code>_file.target.result </code></pre>  <p>The resulting string would be:</p>  <pre><code>data:text/plain;base64,SEVMTE8= </code></pre>  <p>It uses <a href=""https://raw.githubusercontent.com/blueimp/JavaScript-MD5/master/js/md5.min.js"" rel=""nofollow noreferrer"">https://raw.githubusercontent.com/blueimp/JavaScript-MD5/master/js/md5.min.js</a></p>  <p>The value of keyhash is different from when I do:</p>  <pre><code>cat file.png | md5sum </code></pre>  <p>Also when doing the python below, it gives me a different value to the JS version but the same as Linux</p>  <pre><code>import hashlib  def md5Checksum(filePath):     with open(filePath, 'rb') as fh:         m = hashlib.md5()         while True:             data = fh.read(8192)             if not data:                 break             m.update(data)         return m.hexdigest()  print('The MD5 checksum of text.txt is', md5Checksum('000000.png')) </code></pre>  <p>Am I missing something obvious or should they all return the same value?</p>  <p>JS: <code>dc839221df178f70c08fa510a3d76a3b</code><br> Python and MD5SUM: <code>9310dad66d4a73e29a761fb724f2825</code></p>  <p>In fact, if I have a file called HELLO.txt and the only content in there is: <code>HELLO</code></p>  <p>base64'ing it in Linux/Python give the same result which is different to when JS does it.</p>  <pre><code>SEVMTE8K vs SEVMTE8= </code></pre>  <p>I think it may be something to do with new lines, break likes, return carriages etc</p>  <p>JavaScript has it as one continuous stream whereas editing the file in an text editor shows line breaks</p>  <p>Thanks</p>"	59325831	<p>The only explanation is that encoding is different. Figure out encoding in JS (ISO-8859-1) to that in python (UTF-8). </p>
59311107	"Python and Webkit, watching serial port thread, how to avoid core dump running javascript"	python|multithreading|serial-port|webkit|gtk3	2019-12-12 18:52:54.003000 UTC	"<p>I'm writing a game that uses python and webkit, and a webpage is the front-end/GUI.  The PC is connected to an Arduino that controls a coin hopper and other i/o.  When the Arduino sends 'coinin' over serial, I capture this in a serial-watching thread, then run some javascript on the webpage to 'add' a coin to the game.  </p>  <p>For simplicity in troubleshooting, I set up an example that runs a test thread instead of reading serial, but the problem is the same.  The thread tries to add a coin every second by running 'addcoin()' on the webpage.  If you uncomment the run_javascript() line, the program core dumps.  </p>  <p>I came up with a keyboard hack workaround.  The test thread, instead of trying to run_javascript() directly, does an os.system call to xdotool to type the letters 'conn' to the program window.  That window has a key-event listener, and when it gets the letters 'conn' in keybuffer[], it then runs the desired run_javascript() call to the webpage.  If you copy the two files to a folder, and run the python program, you'll see the coin text count up every second (Hit BackSpace to end the program).  If you try to run the javascript from the thread instead, you'll see the program core dump.</p>  <p>The question is, is there a better way to do this, without having to use the keyboard hack to run the javascript?  Although the hack gets around the problem, it introduces a weakness in the game.  You can cheat a coin in by typing 'conn' on the keyboard.  I'd like to find some other way to trigger the event, without having to use the keyboard event.</p>  <p><strong>Sample webpage index.htm</strong></p>  <pre><code>&lt;html&gt; &lt;script language=""JavaScript""  type=""text/javascript""&gt; var mycoins=0; document.onkeydown = function(evt) {     evt = evt || window.event;     cancelKeypress = (evt.ctrlKey &amp;&amp; evt.keyCode == 84);         return false; };  function addcoin() { mycoins+=1; id('mycoins').innerHTML=""You Have ""+mycoins.toString()+"" coins"" }  function id(myID){return document.getElementById(myID)} &lt;/script&gt; &lt;html&gt; &lt;body&gt; &lt;div id=mycoins&gt;You Have 0 Coins&lt;/div&gt; &lt;/body&gt; &lt;/html&gt;  </code></pre>  <p><strong>sample python</strong></p>  <pre><code>#!/usr/bin/python import gi gi.require_version('Gtk', '3.0') from gi.repository import Gtk, Gdk gi.require_version('WebKit2', '4.0') from gi.repository import WebKit2 import os,time,sys,threading,serial defaultpath = os.path.dirname(os.path.realpath(__file__)) killthread=False keybuffer=[] buffkeys=['c','o','n','h','p','e'] myname=os.path.basename(__file__) serial_ports=['/dev/ttyUSB0','/dev/ttyUSB1','/dev/ttyACM0','/dev/ttyACM1'] checkserial=True;  class  BrowserView:     def __init__(self):        global checkserial        window = Gtk.Window()        window.connect(""key-press-event"", self._key_pressed, window)        self.view = WebKit2.WebView()                      self.view.load_uri('file:///'+defaultpath+'/index.htm')        self.view.connect(""notify::title"", self.window_title_change)         window.add(self.view)        window.fullscreen()        window.show_all()        '''        ######not used for this example#######################################        serial_port=""""         for x in serial_ports:           #print 'trying ',x           if os.popen('ls '+x+' &gt;/dev/null 2&gt;&amp;1 ; echo $?').read().strip()=='0':              serial_port=x              break;        baud=9600        if len(serial_port)&gt;1:           self.ser = serial.Serial(serial_port, baud, timeout=0)        else:           self.view.load_uri('file:///'+defaultpath+'/signDOWN.htm?Serial%20Port%20Error|Keno%20will%20auto%20close')           checkserial=False;        if checkserial:           thread = threading.Thread(target=self.read_from_port)           thread.start()        #######################################################################         '''        #####thread test#############        thread = threading.Thread(target=self.testthread)        thread.start()              def testthread(self):        while True:           os.system('xdotool search --name '+myname+' type conn')           #self.view.run_javascript('addcoin()')                        #causes core dump           if killthread==True:              break;           time.sleep(1)      def read_from_port(self):        while True:           if self.ser.inWaiting()&gt;0:              response=self.ser.readline()              print(response)              if 'coinin' in response:                 os.system('xdotool search --name '+myname+' type conn')                 #self.view.run_javascript('addcoin()')                  #causes core dump               if killthread==True:              break;           time.sleep(1)      def checkbuffer(self):        global keybuffer        if 'conn' in ''.join(str(x) for x in keybuffer):           self.view.run_javascript('addcoin()')           keybuffer=[]      def window_title_change(self, widget, param):             if not self.view.get_title():           return        os.chdir(defaultpath)          if self.view.get_title().startswith(""pythondiag:::""):           message = self.view.get_title().split("":::"",1)[1]           os.system('zenity --notification --text='+message+' --timeout=2')       def _key_pressed(self, widget, event, window):         global keybuffer         mykey=Gdk.keyval_name(event.keyval)         isakey=False         for x in buffkeys:            if mykey==x:               isakey=True;         if isakey:            keybuffer.append(Gdk.keyval_name(event.keyval))         else:            keybuffer=[]         self.checkbuffer()         if mykey == 'BackSpace':             self.myquit()      def myquit(self):        global killthread        killthread=True        try:           self.ser.write('clear\n')        except:           pass        Gtk.main_quit()  if __name__ == ""__main__"":     BrowserView()     Gtk.main() </code></pre>"	59383101	"<p><strong>Update:</strong> This answer is updated for general case, original answer below.</p>  <p>Although GIL allows only one python thread being run at given time, we know nothing about other thread state at the moment of context switch (it's just like executing multithreaded programm on a single-core machine.) That's why you should call any <em>not MT-safe methods</em> from the thread they ""belong"" to (that includes GTK calls, which ""belong"" to main event loop).</p>  <p>If you want to call such a function, you should schedule it's execution in the main loop. Probably the easiest approach is to use <a href=""http://lazka.github.io/pgi-docs/index.html#GLib-2.0/functions.html#GLib.idle_add"" rel=""nofollow noreferrer""><code>idle_add</code></a>. Also note, that <code>idle_add</code>'ed function <a href=""http://lazka.github.io/pgi-docs/index.html#GLib-2.0/callbacks.html#GLib.SourceFunc"" rel=""nofollow noreferrer"">should</a> return <code>True</code> or <code>False</code> whether it should be called again later or not, respectively.</p>  <p>Your code shoul look like this:</p>  <pre class=""lang-py prettyprint-override""><code>from gi.repository import GLib  ...  class ThreadedWork:   def function(self, arg):     ''' function to be called in mainloop'''     if arg:       return GLib.SOURCE_REMOVE     return GLib.SOURCE_CONTINUE    def scheduler(self, function, arg):     ''' scheduler (purely for readability issues) '''     GLib.idle_add(function, arg)    def thread_func(self):     ''' long long thread function '''     while True:        # Do some long work        # After it is done, schedule execution of mainloop functions.        self.scheduler(self.function, True)        time.sleep(1)  </code></pre>  <hr>  <p><strong>Original answer:</strong> Looks like it's due to <a href=""https://webkitgtk.org/reference/webkit2gtk/stable/WebKitWebView.html#webkit-web-view-run-javascript"" rel=""nofollow noreferrer""><code>run_javascript</code></a> being not MT-safe (unlike <a href=""https://webkitgtk.org/reference/webkit2gtk/stable/WebKitWebView.html#webkit-javascript-result-ref"" rel=""nofollow noreferrer"">this method</a>, for example). </p>  <pre class=""lang-py prettyprint-override""><code>from gi.repository import GLib  ...  class  BrowserView:   def javascript_runner(self, script_name):     GLib.idle_add(self.view.run_javascript, script_name)    def testthread(self):        while True:           os.system('xdotool search --name '+myname+' type conn')           # After long work is done, schedule execution of mainloop functions.           self.javascript_runner('addcoin()')            if killthread: # btw, there is no need to check ==True explicitly              break           time.sleep(1)  </code></pre>"
59311107	"Python and Webkit, watching serial port thread, how to avoid core dump running javascript"	python|multithreading|serial-port|webkit|gtk3	2019-12-12 18:52:54.003000 UTC	"<p>I'm writing a game that uses python and webkit, and a webpage is the front-end/GUI.  The PC is connected to an Arduino that controls a coin hopper and other i/o.  When the Arduino sends 'coinin' over serial, I capture this in a serial-watching thread, then run some javascript on the webpage to 'add' a coin to the game.  </p>  <p>For simplicity in troubleshooting, I set up an example that runs a test thread instead of reading serial, but the problem is the same.  The thread tries to add a coin every second by running 'addcoin()' on the webpage.  If you uncomment the run_javascript() line, the program core dumps.  </p>  <p>I came up with a keyboard hack workaround.  The test thread, instead of trying to run_javascript() directly, does an os.system call to xdotool to type the letters 'conn' to the program window.  That window has a key-event listener, and when it gets the letters 'conn' in keybuffer[], it then runs the desired run_javascript() call to the webpage.  If you copy the two files to a folder, and run the python program, you'll see the coin text count up every second (Hit BackSpace to end the program).  If you try to run the javascript from the thread instead, you'll see the program core dump.</p>  <p>The question is, is there a better way to do this, without having to use the keyboard hack to run the javascript?  Although the hack gets around the problem, it introduces a weakness in the game.  You can cheat a coin in by typing 'conn' on the keyboard.  I'd like to find some other way to trigger the event, without having to use the keyboard event.</p>  <p><strong>Sample webpage index.htm</strong></p>  <pre><code>&lt;html&gt; &lt;script language=""JavaScript""  type=""text/javascript""&gt; var mycoins=0; document.onkeydown = function(evt) {     evt = evt || window.event;     cancelKeypress = (evt.ctrlKey &amp;&amp; evt.keyCode == 84);         return false; };  function addcoin() { mycoins+=1; id('mycoins').innerHTML=""You Have ""+mycoins.toString()+"" coins"" }  function id(myID){return document.getElementById(myID)} &lt;/script&gt; &lt;html&gt; &lt;body&gt; &lt;div id=mycoins&gt;You Have 0 Coins&lt;/div&gt; &lt;/body&gt; &lt;/html&gt;  </code></pre>  <p><strong>sample python</strong></p>  <pre><code>#!/usr/bin/python import gi gi.require_version('Gtk', '3.0') from gi.repository import Gtk, Gdk gi.require_version('WebKit2', '4.0') from gi.repository import WebKit2 import os,time,sys,threading,serial defaultpath = os.path.dirname(os.path.realpath(__file__)) killthread=False keybuffer=[] buffkeys=['c','o','n','h','p','e'] myname=os.path.basename(__file__) serial_ports=['/dev/ttyUSB0','/dev/ttyUSB1','/dev/ttyACM0','/dev/ttyACM1'] checkserial=True;  class  BrowserView:     def __init__(self):        global checkserial        window = Gtk.Window()        window.connect(""key-press-event"", self._key_pressed, window)        self.view = WebKit2.WebView()                      self.view.load_uri('file:///'+defaultpath+'/index.htm')        self.view.connect(""notify::title"", self.window_title_change)         window.add(self.view)        window.fullscreen()        window.show_all()        '''        ######not used for this example#######################################        serial_port=""""         for x in serial_ports:           #print 'trying ',x           if os.popen('ls '+x+' &gt;/dev/null 2&gt;&amp;1 ; echo $?').read().strip()=='0':              serial_port=x              break;        baud=9600        if len(serial_port)&gt;1:           self.ser = serial.Serial(serial_port, baud, timeout=0)        else:           self.view.load_uri('file:///'+defaultpath+'/signDOWN.htm?Serial%20Port%20Error|Keno%20will%20auto%20close')           checkserial=False;        if checkserial:           thread = threading.Thread(target=self.read_from_port)           thread.start()        #######################################################################         '''        #####thread test#############        thread = threading.Thread(target=self.testthread)        thread.start()              def testthread(self):        while True:           os.system('xdotool search --name '+myname+' type conn')           #self.view.run_javascript('addcoin()')                        #causes core dump           if killthread==True:              break;           time.sleep(1)      def read_from_port(self):        while True:           if self.ser.inWaiting()&gt;0:              response=self.ser.readline()              print(response)              if 'coinin' in response:                 os.system('xdotool search --name '+myname+' type conn')                 #self.view.run_javascript('addcoin()')                  #causes core dump               if killthread==True:              break;           time.sleep(1)      def checkbuffer(self):        global keybuffer        if 'conn' in ''.join(str(x) for x in keybuffer):           self.view.run_javascript('addcoin()')           keybuffer=[]      def window_title_change(self, widget, param):             if not self.view.get_title():           return        os.chdir(defaultpath)          if self.view.get_title().startswith(""pythondiag:::""):           message = self.view.get_title().split("":::"",1)[1]           os.system('zenity --notification --text='+message+' --timeout=2')       def _key_pressed(self, widget, event, window):         global keybuffer         mykey=Gdk.keyval_name(event.keyval)         isakey=False         for x in buffkeys:            if mykey==x:               isakey=True;         if isakey:            keybuffer.append(Gdk.keyval_name(event.keyval))         else:            keybuffer=[]         self.checkbuffer()         if mykey == 'BackSpace':             self.myquit()      def myquit(self):        global killthread        killthread=True        try:           self.ser.write('clear\n')        except:           pass        Gtk.main_quit()  if __name__ == ""__main__"":     BrowserView()     Gtk.main() </code></pre>"	59416253	"<p>I wanted to post the complete test code for anyone looking for a way to run webkit while also running a thread to get information back from the serial port (or any thread), and then do something useful with it.  I searched for a solution to this for about week before asking the question, but couldn't find anything that specifically worked with webkit.  </p>  <p>If you want to use the serial part, uncomment that section, and comment the testthread section.  If you have any questions on how to use this, please ask and I'll do my best to answer them.</p>  <p>run_javascript('your_js_function()') is how python directs the webpage to do something.</p>  <p>The def window_title_change(self, widget, param): function is how you communicate from the webpage back to python.  You also have to have the  'self.view.connect(""notify::title"", self.window_title_change)' line in the BrowserView Class, as shown in the sample code, so python will detect the change, and act on it.</p>  <p>For example, on your webpage, include this function:</p>  <pre><code>    function python(x)     {         document.title=""""         document.title=x     } </code></pre>  <p>Then to call python from your webpage to do something for you, simply call python like this:</p>  <pre><code>    python('pythondiag:::'hello python'); </code></pre>  <p>On the python side, you can write any function you need, to do anything you need to do to interact with the system.  Webkit is a great solution to use HTML and javascript as a front-end/GUI, and then interact with your PC through python.</p>  <p><strong>Thanks to Alexander Dmitriev's excellent solution to the original problem,</strong> here is the complete code with NO CORE DUMP...WOOHOO!  I hope this can help others that have had this problem.</p>  <p><strong>Sample webpage index.htm</strong></p>  <pre><code>&lt;html&gt; &lt;script language=""JavaScript""  type=""text/javascript""&gt; var mycoins=0; document.onkeydown = function(evt) {     evt = evt || window.event;     cancelKeypress = (evt.ctrlKey &amp;&amp; evt.keyCode == 84);         return false; };  function addcoin() { mycoins+=1; id('mycoins').innerHTML=""You Have ""+mycoins.toString()+"" coins"" }  function id(myID){return document.getElementById(myID)} &lt;/script&gt; &lt;html&gt; &lt;body&gt; &lt;div id=mycoins&gt;You Have 0 Coins&lt;/div&gt; &lt;/body&gt; &lt;/html&gt;  </code></pre>  <p><strong>sample python</strong></p>  <pre><code>#!/usr/bin/python import gi gi.require_version('Gtk', '3.0') from gi.repository import Gtk, Gdk, GLib gi.require_version('WebKit2', '4.0') from gi.repository import WebKit2 import os,time,sys,threading,serial defaultpath = os.path.dirname(os.path.realpath(__file__)) killthread=False myname=os.path.basename(__file__) serial_ports=['/dev/ttyUSB0','/dev/ttyUSB1','/dev/ttyACM0','/dev/ttyACM1'] checkserial=True;  class  BrowserView:     def __init__(self):        global checkserial        window = Gtk.Window()        window.connect(""key-press-event"", self._key_pressed, window)        self.view = WebKit2.WebView()                      self.view.load_uri('file:///'+defaultpath+'/index.htm')        self.view.connect(""notify::title"", self.window_title_change)         window.add(self.view)        window.fullscreen()        window.show_all()        '''        ######Uncomment this to use the serial port watcher#####################        serial_port=""""         for x in serial_ports:           #print 'trying ',x           if os.popen('ls '+x+' &gt;/dev/null 2&gt;&amp;1 ; echo $?').read().strip()=='0':              serial_port=x              break;        baud=9600        if len(serial_port)&gt;1:           self.ser = serial.Serial(serial_port, baud, timeout=0)        else:           self.view.load_uri('file:///'+defaultpath+'/signDOWN.htm?Serial%20Port%20Error|Keno%20will%20auto%20close')           checkserial=False;        if checkserial:           thread = threading.Thread(target=self.read_from_port)           thread.start()        #########################################################################         '''        #####thread test--comment out to use the serial port watcher#############        thread = threading.Thread(target=self.testthread)        thread.start()        #########################################################################      def javascript_runner(self, script_name):        GLib.idle_add(self.view.run_javascript, script_name)      def testthread(self):        while True:           self.javascript_runner('addcoin()')           if killthread:               break           time.sleep(1)      def read_from_port(self):        while True:           if self.ser.inWaiting()&gt;0:              response=self.ser.readline()              print(response)              if 'coinin' in response:                 self.javascript_runner('addcoin()')                                if killthread:              break;           time.sleep(1)      def window_title_change(self, widget, param):             if not self.view.get_title():           return        os.chdir(defaultpath)          if self.view.get_title().startswith(""pythondiag:::""):           message = self.view.get_title().split("":::"",1)[1]           os.system('zenity --notification --text='+message+' --timeout=2')      def _key_pressed(self, widget, event, window):        mykey=Gdk.keyval_name(event.keyval)        print mykey        if mykey == 'BackSpace':            self.myquit()      def myquit(self):        global killthread        killthread=True        try:           self.ser.write('clear\n')        except:           pass        Gtk.main_quit()  if __name__ == ""__main__"":     BrowserView()     Gtk.main() </code></pre>"
59338606	Send Audio data represent as numpy array from python to Javascript	javascript|python-3.x|numpy|flask|html5-audio	2019-12-14 19:51:51.213000 UTC	"<p>I have a TTS (text-to-speech) system that produces audio in numpy-array form whose data type is <code>np.float32</code>. This system is running in the backend and I want to transfer the data from the backend to the frontend to be played when a certain event happens.</p> <p>The obvious solution for this problem is to write the audio data on disk as a wav file and then pass the path to the frontend to be played. This worked fine, but I don't want to do that for administrative reasons. I just want to transfer only the audio data (numpy array) to the frontend.</p> <p>What I have done till now is the following:</p> <h2>backend</h2> <pre class=""lang-py prettyprint-override""><code>text = &quot;Hello&quot; wav, sr = tts_model.synthesize(text) data = {&quot;snd&quot;, wav.tolist()} flask_response = app.response_class(response=flask.json.dumps(data),                                     status=200,                                     mimetype='application/json' ) # then return flask_response </code></pre> <h2>frontend</h2> <pre class=""lang-js prettyprint-override""><code>// gets wav from backend let arrayData = new Float32Array(wav); let blob = new Blob([ arrayData ]); let url = URL.createObjectURL(blob); let snd = new Audio(url); snd.play() </code></pre> <p>That what I have done till now, but the JavaScript throws the following error:</p> <pre><code>Uncaught (in promise) DOMException: Failed to load because no supported source was found. </code></pre> <p>This is the gist of what I'm trying to do. I'm so sorry, you can't repreduce the error as you don't have the TTS system, so this is an <a href=""https://drive.google.com/open?id=1kTW6HQFGaAcKG8OuXiO_-fkmny6XI5LJ"" rel=""nofollow noreferrer"">audio file</a> generated by it which you can use to see what I'm doing wrong.</p> <h2>Other things I tried:</h2> <ul> <li>Change the audio datatype to <code>np.int8</code>, <code>np.int16</code> to be casted in the JavaScript by <code>Int8Array()</code> and <code>int16Array()</code> respectively.</li> <li>tried different types when creating the <code>blob</code> such as <code>{&quot;type&quot;: &quot;application/text;charset=utf-8;&quot;}</code> and <code>{&quot;type&quot;: &quot;audio/ogg; codecs=opus;&quot;}</code>.</li> </ul> <p>I have been struggling in this issue for so long, so any help is appriciated !!</p>"	59339529	"<p>Your sample as is does not work out of the box. (Does not play)</p>  <p>However with:</p>  <ul> <li>StarWars3.wav: OK. retrieved from <a href=""https://www2.cs.uic.edu/~i101/SoundFiles/"" rel=""nofollow noreferrer"">cs.uic.edu</a></li> <li>your sample encoded in PCM16 instead of PCM32: OK (check the wav metadata)</li> </ul>  <p>Flask</p>  <pre><code>from flask import Flask, render_template, json import base64  app = Flask(__name__)  with open(""sample_16.wav"", ""rb"") as binary_file:     # Read the whole file at once     data = binary_file.read()     wav_file = base64.b64encode(data).decode('UTF-8')  @app.route('/wav') def hello_world():     data = {""snd"": wav_file}     res = app.response_class(response=json.dumps(data),         status=200,         mimetype='application/json')     return res  @app.route('/') def stat():     return render_template('index.html')  if __name__ == '__main__':     app.run(debug = True) </code></pre>  <p>js</p>  <pre><code>   &lt;audio controls&gt;&lt;/audio&gt;   &lt;script&gt;     ;(async _ =&gt; {       const res = await fetch('/wav')       let {snd: b64buf} = await res.json()       document.querySelector('audio').src=""data:audio/wav;base64, ""+b64buf;     })()   &lt;/script&gt; </code></pre>  <h2>Original Poster Edit</h2>  <p>So, what I ended up doing before (using this solution) that solved my problem is to:</p>  <ul> <li>First, change the datatype from <code>np.float32</code> to <code>np.int16</code>:</li> </ul>  <pre><code>wav = (wav * np.iinfo(np.int16).max).astype(np.int16) </code></pre>  <ul> <li>Write the numpy array into a temporary wav file using <code>scipy.io.wavfile</code>:</li> </ul>  <pre><code>from scipy.io import wavfile wavfile.write("".tmp.wav"", sr, wav) </code></pre>  <ul> <li>Read the bytes from the tmp file:</li> </ul>  <pre><code># read the bytes with open("".tmp.wav"", ""rb"") as fin:     wav = fin.read() </code></pre>  <ul> <li>Delete the temporary file</li> </ul>  <pre><code>import os os.remove("".tmp.wav"") </code></pre>"
59338606	Send Audio data represent as numpy array from python to Javascript	javascript|python-3.x|numpy|flask|html5-audio	2019-12-14 19:51:51.213000 UTC	"<p>I have a TTS (text-to-speech) system that produces audio in numpy-array form whose data type is <code>np.float32</code>. This system is running in the backend and I want to transfer the data from the backend to the frontend to be played when a certain event happens.</p> <p>The obvious solution for this problem is to write the audio data on disk as a wav file and then pass the path to the frontend to be played. This worked fine, but I don't want to do that for administrative reasons. I just want to transfer only the audio data (numpy array) to the frontend.</p> <p>What I have done till now is the following:</p> <h2>backend</h2> <pre class=""lang-py prettyprint-override""><code>text = &quot;Hello&quot; wav, sr = tts_model.synthesize(text) data = {&quot;snd&quot;, wav.tolist()} flask_response = app.response_class(response=flask.json.dumps(data),                                     status=200,                                     mimetype='application/json' ) # then return flask_response </code></pre> <h2>frontend</h2> <pre class=""lang-js prettyprint-override""><code>// gets wav from backend let arrayData = new Float32Array(wav); let blob = new Blob([ arrayData ]); let url = URL.createObjectURL(blob); let snd = new Audio(url); snd.play() </code></pre> <p>That what I have done till now, but the JavaScript throws the following error:</p> <pre><code>Uncaught (in promise) DOMException: Failed to load because no supported source was found. </code></pre> <p>This is the gist of what I'm trying to do. I'm so sorry, you can't repreduce the error as you don't have the TTS system, so this is an <a href=""https://drive.google.com/open?id=1kTW6HQFGaAcKG8OuXiO_-fkmny6XI5LJ"" rel=""nofollow noreferrer"">audio file</a> generated by it which you can use to see what I'm doing wrong.</p> <h2>Other things I tried:</h2> <ul> <li>Change the audio datatype to <code>np.int8</code>, <code>np.int16</code> to be casted in the JavaScript by <code>Int8Array()</code> and <code>int16Array()</code> respectively.</li> <li>tried different types when creating the <code>blob</code> such as <code>{&quot;type&quot;: &quot;application/text;charset=utf-8;&quot;}</code> and <code>{&quot;type&quot;: &quot;audio/ogg; codecs=opus;&quot;}</code>.</li> </ul> <p>I have been struggling in this issue for so long, so any help is appriciated !!</p>"	66227596	"<h2>Convert wav array of values to bytes</h2> <p>Right after synthesis you can convert numpy array of wav to byte object then encode via base64.</p> <pre class=""lang-python prettyprint-override""><code>import io from scipy.io.wavfile import write  bytes_wav = bytes() byte_io = io.BytesIO(bytes_wav) write(byte_io, sr, wav) wav_bytes = byte_io.read()  audio_data = base64.b64encode(wav_bytes).decode('UTF-8') </code></pre> <p>This can be used directly to create html audio tag as source (with flask):</p> <pre class=""lang-jinja prettyprint-override""><code>&lt;audio controls src=&quot;data:audio/wav;base64, {{ audio_data }}&quot;&gt;&lt;/audio&gt; </code></pre> <p>So, all you need is to convert <code>wav</code>, <code>sr</code> to <code>audio_data</code> representing raw <code>.wav</code> file. And use as parameter of <code>render_template</code> for your flask app. (Solution without sending)</p> <p>Or if you send <code>audio_data</code>, in <code>.js</code> file where you accept response, use <code>audio_data</code> to construct url (would be placed as <code>src</code> attribute like in html):</p> <pre class=""lang-js prettyprint-override""><code>// get audio_data from response  let snd = new Audio(&quot;data:audio/wav;base64, &quot; + audio_data); snd.play() </code></pre> <p>because:</p> <blockquote> <p><code>Audio(url)</code> Return value: A new HTMLAudioElement object, configured to be used for playing back the audio from the file specified by url.The new object's preload property is set to auto and <strong>its src property is set to the specified URL</strong> or null if no URL is given. If a URL is specified, the browser begins to asynchronously load the media resource before returning the new object.</p> </blockquote>"
59407951	Executing javascript in python results in KeyError	javascript|python|string|selenium|formatting	2019-12-19 10:38:46.667000 UTC	"<p>I'm having a hard time while trying to execute script in python selenium... I'm trying to check if certain element is in specified parent, and if it is, it should return true. </p>  <p>Here is my code:</p>  <pre><code>    for box in range(len(browser.find_elements(*selector))):      result = browser.execute_script(""""""     var nodesArray = Array.prototype.slice.call(document.querySelectorAll("".o-boxes__item""));     if(document.querySelector(""div:nth-child({}) &gt; div &gt; div.m-package-box__body &gt; div:nth-child(10) &gt; div &gt; label"") === nodesArray[{}]){         false     }else{         nodesArray[{}].contains(document.querySelector(""div:nth-child({}) &gt; div &gt; div.m-package-box__body &gt; div:nth-child(10) &gt; div &gt; label""));     }"""""".format(box+1, box, box, box+1))     print(str(result))  </code></pre>  <p>and when I run it, it gives me this output in console:</p>  <pre><code>nodesArray[{}].contains(document.querySelector(""div:nth-child({}) &gt; div &gt; div.m-package-box__body &gt; div:nth-child(10) &gt; div &gt; label"")); &gt;           }"""""".format(box+1, box, box, box+1)) E           KeyError: '\n            false\n        '  tests/test_shopEshop.py:111: KeyError </code></pre>  <p>I don't know what else I could do... I've tried to change the code in execute_script part, tried to change the string formatting (f formating, .format method, hard coded parameters) but nothing works and I'm starting to give up...</p>"	59452121	"<p>@Jortega here is my whole test</p>  <pre><code>    def test_package_box_href(browser, base_url, testrail_data_file, commentary):     '''         Sprawdza czy atrybut href w button w package boxie zgadza         się z adresem URL do którego prowadzi oraz przy zmianach zaznaczonego toggle     '''     Menu(browser).go_to_page(Menu(browser).SHOP, Menu(browser).SHOP_SHOP)     page_old = GenericTemplateOld(browser)      testrail = ApiTestrailRequest(testrail_data_file[""run_id""], '32252')     verification = Assertions(browser, testrail_data_file, commentary)      selector = page_old.PACKAGE_BOXES_BUTTON      WebDriverWait(browser, 10).until(             EC.url_to_be(base_url + '/sklepy-internetowe/')         )      for box in range(len(browser.find_elements(*selector))):          print(len(browser.find_elements(*selector)))         script =""""""         var nodesArray = Array.prototype.slice.call(document.querySelectorAll("".o-boxes__item""));          if(document.querySelector(""div:nth-child({}) &gt; div &gt; div.m-package-box__body &gt; div:nth-child(10) &gt; div &gt; label"") === nodesArray[{}]){             return false;         }else{             return nodesArray[{}].contains(document.querySelector(""div:nth-child({}) &gt; div &gt; div.m-package-box__body &gt; div:nth-child(10) &gt; div &gt; label""));         }         """""".format(1,0,0,1) </code></pre>  <p>E           KeyError: '\n            return false;\n        '</p>"
59407951	Executing javascript in python results in KeyError	javascript|python|string|selenium|formatting	2019-12-19 10:38:46.667000 UTC	"<p>I'm having a hard time while trying to execute script in python selenium... I'm trying to check if certain element is in specified parent, and if it is, it should return true. </p>  <p>Here is my code:</p>  <pre><code>    for box in range(len(browser.find_elements(*selector))):      result = browser.execute_script(""""""     var nodesArray = Array.prototype.slice.call(document.querySelectorAll("".o-boxes__item""));     if(document.querySelector(""div:nth-child({}) &gt; div &gt; div.m-package-box__body &gt; div:nth-child(10) &gt; div &gt; label"") === nodesArray[{}]){         false     }else{         nodesArray[{}].contains(document.querySelector(""div:nth-child({}) &gt; div &gt; div.m-package-box__body &gt; div:nth-child(10) &gt; div &gt; label""));     }"""""".format(box+1, box, box, box+1))     print(str(result))  </code></pre>  <p>and when I run it, it gives me this output in console:</p>  <pre><code>nodesArray[{}].contains(document.querySelector(""div:nth-child({}) &gt; div &gt; div.m-package-box__body &gt; div:nth-child(10) &gt; div &gt; label"")); &gt;           }"""""".format(box+1, box, box, box+1)) E           KeyError: '\n            false\n        '  tests/test_shopEshop.py:111: KeyError </code></pre>  <p>I don't know what else I could do... I've tried to change the code in execute_script part, tried to change the string formatting (f formating, .format method, hard coded parameters) but nothing works and I'm starting to give up...</p>"	66024960	"<p>i had similar issue i removed .format()  and resorted to  old school % formatting, like so</p> <pre><code>stuff_in_string = &quot;Shepherd %s is %d years old.&quot; % (shepherd, age)  print(stuff_in_string) </code></pre> <p>hope this helps in your case, i believe .format looks for {} brackets and that cause it to consider anything inside it as variable</p>"
59468701	Python and JavaScript basic communication	javascript|python|leaflet	2019-12-24 12:14:45.050000 UTC	"<p>I have a local HTML page: leaflet.html, which is displayed in an embedded browser inside a python-tkinter application.</p>  <p>Inside leaflet.html there is a simple JavaScript piece of code that contains a function:</p>  <pre><code>addMarkerIn(longitude, latitude) { } </code></pre>  <p>It is not important what this function does, what I need is to call addMarkerIn from python when a specific event occurs. Is it possible to avoid building a full http server environment and communicate through other methods such as named pipes? </p>"	59468772	"<p>Maybe <a href=""https://stackoverflow.com/questions/59213379/make-function-not-to-wait-for-other-function-inside-it/59213542#59213542"">this answer I wrote once</a> helps you out?</p>  <p>You could make a function in python called <code>addMarkerIn</code> and call it with <code>subprocess</code></p>"
59468701	Python and JavaScript basic communication	javascript|python|leaflet	2019-12-24 12:14:45.050000 UTC	"<p>I have a local HTML page: leaflet.html, which is displayed in an embedded browser inside a python-tkinter application.</p>  <p>Inside leaflet.html there is a simple JavaScript piece of code that contains a function:</p>  <pre><code>addMarkerIn(longitude, latitude) { } </code></pre>  <p>It is not important what this function does, what I need is to call addMarkerIn from python when a specific event occurs. Is it possible to avoid building a full http server environment and communicate through other methods such as named pipes? </p>"	59468912	<p>You can add socket connection between js on html page and python backend. Using some library (like socket.io) it seems to be the simplest way.</p>
59473861	Python Equivalent to Javascript querySelector	python|html|beautifulsoup	2019-12-24 22:31:33.090000 UTC	"<p>In the Google Chrome's Inspect element tool you can: <code>right-click on an element &gt; copy &gt; copy js path</code> and you get a nice snippet of code like the following: <code>document.querySelector(""#left-container &gt; div.left-content &gt; div &gt; div &gt; ul"")</code> that easily gives you the ""path"" to a selected element in Javascript.</p>  <p>My question is if there is an easy way to turn this javascript snippet into Python possibly using BeautifulSoup that can give me the elements I want from a webpage. </p>"	59473877	"<p>BeautifulSoup has <a href=""https://www.crummy.com/software/BeautifulSoup/bs4/doc/#css-selectors"" rel=""noreferrer"">CSS selectors</a> support - use <code>select()</code> or <code>select_one()</code> methods:</p>  <pre><code>soup = BeautifulSoup(html, 'html.parser') elements = soup.select(""#left-container &gt; div.left-content &gt; div &gt; div &gt; ul"") </code></pre>  <p>Make sure to use version 4.7.0 or above to have support for the most CSS4 selectors.</p>"
59528188	how to automatically retrieve the request URL (for python) from an XHR request of a page loaded via JavaScript	python|web-scraping|xmlhttprequest	2019-12-30 09:07:53.393000 UTC	"<p>Here is the URL that I'm trying to <strong>scrape</strong>: <a href=""https://www.sec.gov/ix?doc=/Archives/edgar/data/320193/000032019319000076/a10-qq320196292019.htm"" rel=""nofollow noreferrer"">https://www.sec.gov/ix?doc=/Archives/edgar/data/320193/000032019319000076/a10-qq320196292019.htm</a></p> <p>I'm trying to <strong>scrape</strong> the webpage using Python which mean I will require the XHR request for this page as it is loaded via JavaScript.</p> <p>Upon inspection of the Network under Developer Tools, I can see the XHR request: a10-qq320196292019.htm which produces the request URL: <a href=""https://www.sec.gov/Archives/edgar/data/320193/000032019319000076/a10-qq320196292019.htm"" rel=""nofollow noreferrer"">https://www.sec.gov/Archives/edgar/data/320193/000032019319000076/a10-qq320196292019.htm</a></p> <p>My question is two-fold,</p> <ol> <li>How can I automatically get this request URL if i am only accessing using the URL given initially and,</li> <li>How do I know that this is THE XHR request I need? This particular URL works for my needs but I noticed that there were many other XHR reqeusts as well. How does one differentiate?</li> </ol>"	59531436	"<p>In this case, I don't think you need to go that route. The link you're using <a href=""https://www.datatracks.co.uk/ixbrl-blog/what-is-ixbrl/"" rel=""nofollow noreferrer"">is an ixbrl view of the actual html document.</a> The url for the html doc is embedded in that first link. All you have to do is extract it:</p>  <pre><code>url = 'https://www.sec.gov/ix?doc=/Archives/edgar/data/320193/000032019319000076/a10-qq320196292019.htm' html_url = url.replace('/ix?doc=','') html_url </code></pre>  <p>Output:</p>  <blockquote>   <p>'<a href=""https://www.sec.gov/Archives/edgar/data/320193/000032019319000076/a10-qq320196292019.htm"" rel=""nofollow noreferrer"">https://www.sec.gov/Archives/edgar/data/320193/000032019319000076/a10-qq320196292019.htm</a></p> </blockquote>"
59531282	How can I scrape nodes text from a javascript Piechart graph using Python	python|selenium|web-scraping|graph|beautifulsoup	2019-12-30 12:59:27.997000 UTC	"<p>How can I scrape nodes from a javascript Piechart graph using Python like this?</p>  <p><a href=""https://www.dice.com/skills/javascript"" rel=""nofollow noreferrer"">https://www.dice.com/skills/javascript</a></p>  <p><a href=""https://i.stack.imgur.com/9iudS.png"" rel=""nofollow noreferrer"">Piechart graph</a></p>  <p>Hint: I want the scraped texts from the graph represent the graph nodes, not ordinary texts.</p>"	59531635	"<p>Actually the page is rendered via <code>JavaScript</code> so we can use <code>selenium</code> or using <code>requests</code> and <code>bs4</code> because the desired output is located in <code>script</code> tag which can be captured with <code>regex</code></p>  <pre><code>from selenium import webdriver from bs4 import BeautifulSoup from selenium.webdriver.firefox.options import Options from bs4 import BeautifulSoup  options = Options() options.add_argument('--headless')  driver = webdriver.Firefox(options=options) driver.get(     'https://www.dice.com/skills/javascript')  soup = BeautifulSoup(driver.page_source, 'html.parser')  for item in soup.findAll(""div"", {'class': 'node'}):     print(item.text) driver.quit() </code></pre>  <p>Output:</p>  <pre class=""lang-none prettyprint-override""><code>JavaScript CSS HTML5 jQuery jQuery UI AngularJS Bootstrap jQuery jQuery UI CSS HTML5 AngularJS Ajax jQuery UI jQuery Aptana Zend Studio Ajax CSS AngularJS jQuery HTML5 HTML Bootstrap CSS Node.js React.js MongoDB AngularJS Express.js NoSQL </code></pre>  <p>Updated:</p>  <pre class=""lang-py prettyprint-override""><code>import requests from bs4 import BeautifulSoup   r = requests.get(""https://www.dice.com/skills/javascript"")  soup = BeautifulSoup(r.text, 'html.parser')  script = soup.findAll(""script"")[8].get_text(""\t"", strip=True)  start = script.find(""{"") end = script.find("";"")  print(script[start:end]) </code></pre>  <p>Output:</p>  <pre class=""lang-none prettyprint-override""><code>{""name"":""JavaScript"",""children"":[{""name"":""CSS"",""children"":[{""name"":""HTML5""},{""name"":""jQuery""},{""name"":""jQuery UI""},{""name"":""AngularJS""},{""name"":""Bootstrap""}]},{""name"":""jQuery"",""children"":[{""name"":""jQuery UI""},{""name"":""CSS""},{""name"":""HTML5""},{""name"":""AngularJS""},{""name"":""Ajax""}]},{""name"":""jQuery UI"",""children"":[{""name"":""jQuery""},{""name"":""Aptana""},{""name"":""Zend Studio""},{""name"":""Ajax""},{""name"":""CSS""}]},{""name"":""AngularJS"",""children"":[{""name"":""jQuery""},{""name"":""HTML5""},{""name"":""HTML""},{""name"":""Bootstrap""},{""name"":""CSS""}]},{""name"":""Node.js"",""children"":[{""name"":""React.js""},{""name"":""MongoDB""},{""name"":""AngularJS""},{""name"":""Express.js""},{""name"":""NoSQL""}]}]} </code></pre>"
