34608402	Python/mechanize on javascript page with csrf	javascript|python|mechanize|csrf	2016-01-05 09:40:14.090000 UTC	"<p>I want to use python/mechanize to control my modem/router box. While I can login and navigate through the menus, I am not able to change any value (browser submit has no effect). The pages use javascript, but I think that I did the equivalent with mechanize in my script. Can it be it because of the <em>antiCSRF.js</em> file inclusion that prevents me to change any value?</p>  <p>The html/js code of the page:</p>  <pre><code>&lt;head&gt; &lt;script type=""text/javascript""&gt;         function main_reboot_button()         {             var confrm = confirm(""Do you want to continue..."")             if(confrm){                          document.getElementById(""main_reboot"").value = ""1"";                 document.getElementById(""main-reboot-form"").submit();                 return false;             }             else {                 return false;             }         } &lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;div class=""panel-body panel-align""&gt; &lt;div class=""panel panel-default accor_brd accor_brd_RB_Curved content_blk""&gt;   &lt;form method=""post"" action=""bbox-maintenance.lp"" id=""main-reboot-form"" style=""padding-top:20px;""&gt;   &lt;div class=""control_blk clearfix""&gt;     &lt;input type=""hidden"" name= ""main_reboot"" id=""main_reboot"" value=""0""&gt;&lt;/input&gt;     &lt;label for=""input01"" class=""control-label txt-head""&gt;Reboot Modem&lt;/label&gt;     &lt;button class=""btn_proximus_standalone"" onclick='return main_reboot_button()'&gt;Restart&lt;/button&gt;   &lt;/div&gt;   &lt;/form&gt;  &lt;/div&gt; &lt;/div&gt; &lt;/body&gt; &lt;script type='text/javascript' src='js/antiCSRF.js'&gt;&lt;/script&gt; </code></pre>  <p>The antiCSRF.js file:</p>  <pre><code>function readCookie(name) {   var nameEQ = name + ""="";   var ca = document.cookie.split(';');   for(var i=0;i &lt; ca.length;i++) {     var c = ca[i];     while (c.charAt(0)==' ') c = c.substring(1,c.length);     if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length);   }  return null; } var forms=document.getElementsByTagName(""form""); var rn = readCookie('xAuth_SESSION_ID'); for (var i=0; i&lt;forms.length; i++) {   var temp = document.createElement(""INPUT"");   temp.type = ""hidden"";   temp.name = ""rn"";   temp.value = rn;   forms[i].insertBefore(temp, forms[i].firstChild); } </code></pre>  <p>The part of the python code I use to make the request (after login stuff):</p>  <pre><code>browser.open(""http://192.168.1.1/bbox-maintenance.lp"")     browser.select_form(nr = 0) browser.form.find_control(""main_reboot"").readonly = False browser.form['main_reboot'] = ""1"" browser.submit() </code></pre>  <p>As a result, the box is not rebooted while it should have been. The python script shows no error.</p>"	"<p>I finally found the solution (by understanding better how works antiCSRF). I need to read the cookie value, add a new element with name 'rn' to the form and set it to the cookie value.</p>  <p>Adding those lines after browser.select_form does the trick:</p>  <pre><code>browser.form.new_control('text','rn',{'value':''}) browser.form.fixup() browser.form['rn'] = cj[0].value  </code></pre>"
34628763	What is the equivalent of python's _ in javascript?	javascript|python	2016-01-06 08:40:07.480000 UTC	"<p>In python <code>_</code> is used as a <a href=""https://stackoverflow.com/a/5893946/647991"">throwaway variable</a>. Is there an idiomatic accepted name in javascript?</p>"	"<p>Generally, you will declare the signature of a function as an array. Simply omit one of them</p> <pre><code>const foo = (bar,baz,) =&gt; bar+baz; foo(3,4,5) // → 7 </code></pre> <p>This obviously works as long as the declaration of function argument is the last one; unlike <a href=""https://stackoverflow.com/a/63374710/891440"">this answer</a>, which is valid for already-declared variables embedded in arrays. This:</p> <pre><code>const foo = (, bar,baz) =&gt; bar+baz; </code></pre> <p>will fail with:</p> <pre><code>Uncaught SyntaxError: expected expression, got ',' </code></pre> <p>You can hack your way into this using any expression. However, you'll need to use the self same expression in every invocation</p> <pre><code>const quux = ([], bar,baz) =&gt; bar+baz; quux(42,3,4); // → Uncaught TypeError: (destructured parameter) is not iterable quux([],3,4); // → 7 </code></pre> <p>That constant can be anything, so you can as well call it &quot;dummy&quot;, but you will still have to repeat in every invocation.</p>"
34628763	What is the equivalent of python's _ in javascript?	javascript|python	2016-01-06 08:40:07.480000 UTC	"<p>In python <code>_</code> is used as a <a href=""https://stackoverflow.com/a/5893946/647991"">throwaway variable</a>. Is there an idiomatic accepted name in javascript?</p>"	"<p>Rigth now, you can use array destructuring, no need for a var.</p> <p><a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment"" rel=""noreferrer"">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment</a></p> <p>For example:</p> <pre><code>[,b] = [1,2]; console.log(b); </code></pre> <p>will output :</p> <pre><code>2 </code></pre> <p>And the value 1 won't be assigned to any unused var.</p>"
34628763	What is the equivalent of python's _ in javascript?	javascript|python	2016-01-06 08:40:07.480000 UTC	"<p>In python <code>_</code> is used as a <a href=""https://stackoverflow.com/a/5893946/647991"">throwaway variable</a>. Is there an idiomatic accepted name in javascript?</p>"	"<p>There isn't an accepted throwaway variable naming in JavaScript like in Python. <Br/>Although, generally in the software engineering world, engineers tend to call those variables:</p>  <p><strong>dummy, temp</strong>, trash, black_hole, garbage.</p>  <p>Use these variable namings or whatever name that will imply to the engineer reading your code that these variables have no specific use.<br /></p>  <p>With that in mind, I would strongly not recommend using signs such as below as a throwaway variable:<br/></p>  <p><code>_</code>, <code>$</code><br /></p>  <p>Unless there is an explicit convention like in Python, don't use these signs as a throwaway variable, otherwise, it may interfere with other naming conventions and libraries in other languages, like the underscore and the jQuery libraries in JS.</p>  <p>And of course, if you find a specific use for that variable later on, make sure to rename it.</p>"
34636361	What could be an alternate of iteritems() [from python] in javascript	javascript|python|dictionary	2016-01-06 15:07:54.297000 UTC	<p>How can I perform an action similar to python's <code>.iteritems()</code> in javascript?</p>	"<p>In ECMAScript 2015, <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/entries"" rel=""nofollow""><code>Map</code> objects have <code>entries()</code> method</a>. That is the closest, compared to Python's <code>iteritems</code>.</p>  <pre class=""lang-js prettyprint-override""><code>var myMap = new Map(); myMap.set(""0"", ""foo""); myMap.set(1, ""bar""); myMap.set({}, ""baz"");  var mapIter = myMap.entries();  console.log(mapIter.next().value); // [""0"", ""foo""] console.log(mapIter.next().value); // [1, ""bar""] console.log(mapIter.next().value); // [Object, ""baz""] </code></pre>  <p>Or use it with <code>for..of</code> loop, like this</p>  <pre><code>for (let items of myMap.entries()) {   console.log(items); } </code></pre>"
34707532	"Python POST Request Not Returning HTML, Requesting JavaScript Be Enabled"	javascript|python-3.5	2016-01-10 15:58:44.657000 UTC	"<p>I'm trying to sign in to my Wells Fargo account and scrape my transaction history so that I can use them to track my finances. I am able to do the scraping part if I can get to the HTML of the page. The problem I'm having is getting there and the below code is returning a whole lot of gibberish to me.</p>  <pre><code>####Bring in BeautifulSoup and urllib. import bs4 import urllib.request import requests  ####Navigate to the website. url = 'https://connect.secure.wellsfargo.com/auth/login/do' payload = {""j_username"":""USERNAME"", ""j_password"":""PASSWORD""} r = requests.post(url, payload) print(r.text) </code></pre>  <p>This code is outputting the following:</p>  <pre><code>    &lt;html&gt;&lt;head&gt;&lt;meta http-equiv=""Pragma"" content=""no-cache""/&gt;      &lt;meta http-equiv=""Expires"" content=""-1""/&gt;      &lt;meta http-equiv=""CacheControl"" content=""no-cache""/&gt;      &lt;script&gt;      (function(){          var securemsg;          var dosl7_common;      window[""bobcmn""] = ""1011200000002200000001300000021application/x-www-form-urlencoded3000000088adfa450300000008TSPD_101300000014%2fauth%2flogin%2fdo300000000300000006/TSPD/300000008TSPD_101300000005https3000000b6#sCmnToken#0BC26lnGAWSD9m6NkEoMZy0dIjA7Os6O4oLerWkImSHetiQqPjvoid03xpkXMNwHZ4wUmjd9+FeNk7M7zEe5ESlixC/1O8E7X61l10gL4ddUAhMNR4LaIYlGkq+hckjmRwTXudNvohk90GvOs8Ea9fFIoAAAAAE=#eCmnToken#200000000"";        try{(function(){try{var jS,JS,LS=1,oS=1,OS=1,zS=1,S_=1,__=1,i_=1,I_=1,j_=1;for(var L_=0;L_&lt;JS;++L_)LS+=2,oS+=2,OS+=2,zS+=2,S_+=2,__+=2,i_+=2,I_+=2,j_+=3;jS=LS+oS+OS+zS+S_+__+i_+I_+j_;window.i===jS&amp;&amp;(window.i=++jS)}catch(o_){window.i=jS}var O_=window.sdkljshr489=!0;function z_(S){window.sdkljshr489&amp;&amp;S&amp;&amp;(O_=!1);return O_}function Z_(){}z_(window[Z_.name]===Z_);z_(""undefined""===window.vodsS0);window.vodsS0=null;z_(/\x3c/.test(function(){return""\x3c""})&amp;/x3d/.test(function(){return""0"";""x3d""}));     var s_=/mobi/i.test(navigator.userAgent),Si=+new Date,_i=s_?3E4:3E3;function ii(){return z_(Si+_i&lt;(Si=+new Date))}     (function Ii(){var J=!1;function l(J){for(var l=0;J--;)l+=L(document.documentElement,null);return l}function L(J,l){var Z=""vi"";l=l||new z;return _S(J,function(J){J.setAttribute(""data-""+Z,l.SS());return L(J,l)},null)}function z(){this.O=1;this.L=0;this._=this.O;this.j=null;this.SS=function(){this.j=this.L+this._;if(!isFinite(this.j))return this.reset(),this.SS();this.L=this._;this._=this.j;this.j=null;return this._};this.reset=function(){this.O++;this.L=0;this._=this.O}}var Z=!1;function s(J,l){var L=     document.createElement(J);l=l||document.body;l.appendChild(L);L&amp;&amp;L.style&amp;&amp;(L.style.display=""none"")}function iS(l,L){L=L||l;var z=""|"";function s(J){J=J.split(z);var l=[];for(var L=0;L&lt;J.length;++L){var Z="""",lS=J[L].split("","");for(var SS=0;SS&lt;lS.length;++SS)Z+=lS[SS][SS];l.push(Z)}return l}var _S=0,IS=""datalist,details,embed,figure,hrimg,strong,article,formaddress|audio,blockquote,area,source,input|canvas,form,link,tbase,option,details,article"";IS.split(z);IS=s(IS);IS=new RegExp(IS.join(z),""g"");while(IS.exec(l))IS=     new RegExp((""""+new Date)[8],""g""),J&amp;&amp;(Z=O_),++_S;return L(_S&amp;&amp;1)}function _S(J,l,L){(L=L||Z)&amp;&amp;s(""div"",J);J=J.children;var z=0;for(var _S in J){L=J[_S];try{L instanceof HTMLElement&amp;&amp;(l(L),++z)}catch(IS){}}return z}iS(Ii,l)})();window.oi={iI:""08c787b5a40180002943d30328de8438de8cc553d459dcd4fc6c4cb17feaa34f085900356d674a1888119e0ea122f11994fc63fbabf471ce1f60053949777f087711d376633d1c30cd2e2f14295017cd8afeedacf0c4783d8b9ec0abec9808a830fa17d4cc351f649688f2b9c98cc0961ddcaf13fb0e7020486252f76f751366cdb10741f04ad6fd""};function _(S){return 753&gt;S}function I(){var S=arguments.length;for(var J=0;J&lt;S;++J)arguments[J]-=38;return String.fromCharCode.apply(String,arguments)}function O(S){return S.toString(36)}(function ji(J){return J?0:ji(J)*ji(J)})(ii());var v;})();}finally{sdkljshr489=false;ie9rgb4=void(0);};     eval((ie9rgb4=function (){var m='function () {/*fQb f_TcC}-di`U_V YU)bWR$+dbikuVe^SdY_^uvkdbikfQb ZCy:Cy&lt;C-!y_C-!y?C-!+V_bufQb &lt;O-}+&lt;O,:C+xx&lt;Ov&lt;Cx-""y_Cx-""y?Cx-#+ZC-&lt;Cx_Cx?C+gY^T_g{Y---ZCssugY^T_g{Y-xxZCvmSQdSXu_OvkgY^T_g{Y-ZCmfQb ?O-gY^T_g{cT[\\ZcXb$()-n}+Ve^SdY_^ jOuCvkgY^T_g{cT[\\ZcXb$()ssCssu?O-n!v+bUdeb^ ?OmVe^SdY_^ JOuvkmjOugY^T_gKJO{^Q]UM---JOv+jOuoe^TUVY^UTo---gY^T_g{f_TcC}v+gY^T_g{f_TcC}-^e\\\\+jOu|Lh#S|{dUcduVe^SdY_^uvkbUdeb^oLh#Somvs|h#T|{dUcduVe^SdY_^uvkbUdeb^o}o+oh#Tomvv+\r\nfQb cO-|]_RY|Y{dUcdu^QfYWQd_b{ecUb1WU^dvyCY-x^Ug 4QdUyOY-cO/#5$*#5#+Ve^SdY_^ YYuvkbUdeb^ jOuCYxOY,uCY-x^Ug 4QdUvvmuVe^SdY_^uvkfQb C-kTUSbi`d*Ve^SdY_^uCvkdbikbUdeb^ :C?&gt;{`QbcUuVe^SdY_^uCvkC-C{c`\\Yduo\\ov+fQb :-oo+V_bufQb \\-}+\\,C{\\U^WdX+xx\\v:x-CdbY^W{Vb_]3XQb3_TUuCK\\Mv+bUdeb^ :muCvvmSQdSXu\\vkmmm+bUdeb^ C-kS_^VYWebQdY_^*C{TUSbi`duo!""#\\#$\\)\'\\))\\!!&amp;\\!}%\\!!(\\!}!\\#$\\%(\\#$\\!!}\\!!!\\#$\\$$\\#$\\!}}\\!}!\\)(\\!!\'\\!}#\\!}#\\!}%\\!!}\\!}#\\#$\\%(\\#$\\!!}\\!!!\\#$\\$$\\#$\\!})\\!!!\\!}}\\!!\'\\!}(\\!}!\\$)\\#$\\%(\\#$\\!}!\\!!}\\)\'\\)(\\!}(\\!}!\\!}}\\#$\\$$\\#$\\!})\\!!!\\!}}\\!!\'\\!}(\\!}!\\%}\\#$\\%(\\#$\\!}!\\!!}\\)\'\\)(\\!}(\\!}!\\!}}\\#$\\$$\\#$\\!})\\!!!\\!}}\\!!\'\\!}(\\!}!\\%!\\#$\\%(\\#$\\!}!\\!!}\\)\'\\)(\\!}(\\!}!\\!}}\\#$\\$$\\#$\\!})\\!!!\\!}}\\!!\'\\!}(\\!}!\\%""\\#$\\%(\\#$\\!}!\\!!}\\)\'\\)(\\!}(\\!}!\\!}}\\#$\\!""%ovmmvuv+\r\ncUSebU]cW-kcZC*Ve^SdY_^uCvkbUdeb^ cUSebU]cWK?u""(()\'vMucUSebU]cW{jYuuOu!&amp;}vy}vyCyOu)""""v/}*!vyVe^SdY_^uvkbUdeb^ CdbY^WK9u!$}y!%""y!$)y!$\'y!}%y!$""y!#%y!%""y!}%y!$)y!#(y!#)vMu=QdXK?u""&amp;""}&amp;}!!vMu=QdXK?u!&amp;%}$\'#\'#$vMuvwuOu))#v/#$""*""%&amp;vxuOu""""$v/!*}vvruOu"")\'v/""%&amp;*#""""vvmvK?u)!(""#)vMuoovmyjC*Ve^SdY_^uCvkbUdeb^uuCsuOu""%#v/""%%*""""}vv,,uOu)$\'v/""!*""$vluCsuOu$(&amp;v/&amp;%""(}*&amp;&amp;%%%vv,,uOu)}!v/%*(vlC..uOu(()v/)*(vsuOu&amp;&amp;""v/&amp;%""(}*\'##\'\'vlC..uOu%%)v/""$*#""vsuOu!&amp;$v/""%%*#""\'vv...uOu!)""vy}vmy9}*Ve^SdY_^uCy:vkV_bufQb \\-ooy&lt;-uOu%&amp;)vy\r\n}v+&lt;,CK?u!"")$#))""}%vM+&lt;xxv\\x-CdbY^WKoLe}}&amp;&amp;b_]3Lh&amp;(Qb3_TUoMuCK9u!#\'y!$""y!#%y!%""y!}%y!$)y!#(y!#)y!}#y!%$vMuu&lt;xCK?u!"")$#))""}%vMz:vrCK?u!"")$#))""}%vMvv+bUdeb^ \\myYZC*Ve^SdY_^uCy:vkbUdeb^ cUSebU]cW{9}uCyCK?u!"")$#))""}%vMz:vmy&lt;O*Ve^SdY_^uCy:vkYVuCK?u!"")$#))""}%vMn-:K?u!"")$#))""}%vMvdXb_g cUSebU]cW{:CuCvycUSebU]cW{:Cu:vyoo+V_bufQb \\-ooy&lt;-uOu\'&amp;#vy}v+&lt;,CK?u!"")$#))""}%vM+&lt;xxv\\x-CdbY^WKoLe}}&amp;&amp;bLh&amp;V]Le}}$#XLh&amp;!bLe}}$#_Lh&amp;$UoMuCK9u!#\'y\r\n!$""y!#%y!%""y!}%y!$)y!#(y!#)y!}#y!%$vMu&lt;vN:KoLe}}&amp;#XQbLh$#_TU1doMu&lt;vv+bUdeb^ \\my&lt;C*Ve^SdY_^uCy:vkbUdeb^uuC...uOu""""!vy}vvxu:...uOu"""")vy}vvsuOu)$&amp;v/""!$\'$(#&amp;$\'*$"")$)&amp;\'"")%vv...uOu&amp;$#vy}vmyO:*Ve^SdY_^uCy:vkbUdeb^uuC...uOu()(vy}vvz:suOu!}&amp;v/$"")$)&amp;\'"")%*""!$\'$(#&amp;$\'vv...uOu#\'}vy}vmy_%*Ve^SdY_^uCy:y\\vkdbikYVuCK?u!"")$#))""}%vMn-uOu(""#v/""""*!&amp;vvdXb_goo+YVu:K?u!"")$#))""}%vMn-uOu&amp;}&amp;v/(*&amp;vvdXb_goo+fQb &lt;-cUSebU]cW{c_uCv+&lt;KOu()vy}M-cUSebU]cW{jCu&lt;KOu\'(&amp;vy}Mv+&lt;KOu\'(#v/}*!M-cUSebU]cW{jCu&lt;KOu)!(v/\r\n}*!Mv+&lt;KOu)""(v/!*""M-cUSebU]cW{jCu&lt;KOu&amp;\'}vy""Mv+&lt;KOu\'(%v/""*#M-cUSebU]cW{jCu&lt;KOu!\')vy#Mv+fQb j-cUSebU]cW{c_u:vyJ-cUSebU]cW{jCujKOu\'$}vy}Mvyc-cUSebU]cW{jCujKOu(\'}v/}*!MvyYC-u\\/Ou)""&amp;v/""!$\'$(#&amp;$\'*$""$\'})\'""#}$*uOu)&amp;#vy}vv...uOu$\'#vy}v+YVu\\vV_bufQb OC-Ou""""!v/!%*!""+OC.-uOu""%#vy}v+OCzzvfQb CC-cUSebU]cW{&lt;CuJ,,uOu#\'%v/$*#vNJ...uOu$#%v/%*#vyJvy\\C-cUSebU]cW{&lt;CuYCy&lt;KYC...uOu""""#v/!!*!}vsuOu""}\'v/#*""vMvyc-cUSebU]cW{O:ucyCCN\\CvyYC-cUSebU]cW{O:uYCyOu""}%v/""&amp;%$$#%\'&amp;)*""!$!&amp;$}&amp;(""vycC-cUSebU]cW{&lt;Cuc,,uOu\'\'\'vy$vNc...uOu!\')v/\r\n%*""vycvyJC-  *************************************************************  """"}""!&amp;2) %%}%""&amp;""6 3%21#225 2""24}2""( ""22$%1)"" %32#&amp;1}$ 3""4\'661\' 2%4}36#! ""34))5(2 %24515!4 )2&amp;$3""2} 53&amp;#6""""&amp; \'%&amp;11#)3 }""&amp;4)#}1 )3})}&amp;1) 52}5#&amp;#6 \'""}\'&amp;\'(% }%}}%\'!# )%26$1("" 5""2(\'1!$ \'22!""215 }32&amp;!2#( )""4""(5)2 5%4%25}4 \'343562\' }24246""! (&amp;4#4""4$ 6!4$5""$"" &amp;(442#6( !641(#&amp;5 (!25!&amp;34 6&amp;2)""&amp;%2 &amp;62}\'\'5! !(2\'$\'\'\' ((}(%15&amp; 66}6&amp;1\'} &amp;&amp;}&amp;#231 !!}!}2%3 (6&amp;%)566 6(&amp;""15&amp;) &amp;!&amp;2664# !&amp;&amp;336$% 1}}15""\'( 4\'}44""55 $5}$(#%$ #)}#2#3"" 1\'&amp;\'""&amp;&amp;! 4}&amp;}!&amp;6\' $)&amp;)$\'$4 #5&amp;5\'\'42 154!&amp;1$1 4)4&amp;%143 $}46}2&amp;&amp; #\'4(#26} 1)2315%# 4522)53% $\'2""36\'6 #}2%665) 24246""!3 31213""(1 %#2#)##} ""$2$1#1&amp; 214}#&amp;}% 344\'}&amp;)# %$45%\'"") ""#4)&amp;\'26 2#&amp;&amp;\'1""5 3$&amp;!$12( %4&amp;(!2}"" ""1&amp;6""2)$ 2$}225#\' 3#}3(51! %1}%46!2 ""4}""56(4oK?u!\'$#))!)(#vMuuu\\ON\r\n9CK9u!#\'y!$""y!#%y!%""y!}%y!$)y!#(y!#)y!}#y!%$vMu\\vvsuOu$&amp;&amp;v/""%%*#\'!vvwuOu\'!!v/)*&amp;vyOu""}!v/(*!!v+\\ON-uOu$!$vyz!v+\\O-=QdXK?u!##($vMu\\Ov+\\On-`QbcU9^duJv/uJCxxycUdDY]U_eduCyuOu!#}vy}vvv*:uvmU\\cU :uvmVe^SdY_^ :uvkfQb C-cUSebU]cWK?u!#""$()#vMu:Ox9u)&amp;vxcxoLe}}#QoxYCx9u)&amp;vx\\OyoLh#}Le}}##ov+T_c\\\'OS_]]_^{9Ju&lt;yCyooyOu""($v/%5#*$}\'#yYYuvvmV_bufQb \\-cUSebU]cW{?CugY^T_g{_Y{Y9yoLe}}#}Lh#!ovy\\-T_c\\\'OS_]]_^{::u\\yn!vy&lt;-cUSebU]cW{:Cu\\KOu&amp;#""vy}Mvy\r\nj-\\KOu!!#v/!*}MyJ-\\KOu$&amp;v/""*!Myc-\\KOu!)%v/#*""MyYC-\\KOu&amp;&amp;#vy$MyOC-\\KOu(%$vy%MyCC-\\KOu$}\'v/&amp;*#MK9u!#\'y!$""y!#%y!%""y!}%y!$)y!#(y!#)y!}#y!%$vMuuOu$$&amp;vy}vvy\\C-1bbQiujvycC-=QdXK?u##"")&amp;vMuCCzOCKoLe}}&amp;#Lh&amp;(Le}}&amp;!Lh\'""Le}}$#Lh&amp;VLe}}&amp;$Lh&amp;%Le}}$!Lh\'$oMuuOu&amp;%$vy}vvxuOu!)""v/!*}vyjvyJC-uOu\'""%vy}v+JC,j+JCxxv\\CKJCM-OC+fQb JC-uOu)""}vy}vy:Oy9Cy\\O+cUdDY]U_eduCyuOu""\'\'vy}vvmv+\r\nVe^SdY_^ OuCvkbUdeb^ \'%#.CmVe^SdY_^ 9uvkfQb C-QbWe]U^dc{\\U^WdX+V_bufQb :-}+:,C+xx:vQbWe]U^dcK:Mz-#(+bUdeb^ CdbY^W{Vb_]3XQb3_TU{Q``\\iuCdbY^WyQbWe]U^dcvmVe^SdY_^ ?uCvkbUdeb^ C{d_CdbY^Wu#&amp;vmuVe^SdY_^ ZYu:vkbUdeb^ :/}*ZYu:vwZYu:vmvuYYuvv+fQb f+mvuv+mVY^Q\\\\ikcT[\\ZcXb$()-VQ\\cU+YU)bWR$-f_YTu}v+m+*/;}'.slice(15,-4);for(var i=0,c=8,j=0,l,r='';l=m.charCodeAt(i);++i)c=String.fromCharCode(l&lt;33||l&gt;=126?l:(93+l-((-76E-3+''+({}).a).slice(7).charCodeAt(j%'1')))%93+33),r+=c,j-=c.indexOf('\x0d');return r;})());      })();      &lt;/script&gt;      &lt;noscript&gt;Please enable JavaScript to view the page content.&lt;/noscript&gt;      &lt;/head&gt;&lt;body&gt;      &lt;/body&gt;&lt;/html&gt; </code></pre>  <p>I apologize for the hideous formatting but I didn't know what to do with it. Also, I removed a large, arbitrary portion in the middle that I replaced with the asterisks for the sake of length.</p>  <p>To me, the key thing I'm seeing is ""Please enable JavaScript to view the page content."" Is this output actually JS and how do I handle whatever it is with Python? I simply have no clue what this is telling me and I greatly appreciate any help you can provide.</p>  <p>Thanks.</p>"	"<p>It can be used by using <a href=""https://splash.readthedocs.io/en/stable/"" rel=""nofollow noreferrer"">Splash</a> (another JS renderer besides Selenium). Since I use Scrapy, I use Scrapy-Splash. In my Scrapy spider, I use Splash but not just that. The Splash request should be helped with a lua script to get extra command to get cookies from the web page or else it will still get blocked by the F5 security mechanism. After getting the cookies, re-request the page using the generated cookies, and done!</p>  <p>The code in Scrapy will be like this:</p>  <pre><code>def start_requests(self):     lua_script = '''     function main(splash)       local url = splash.args.url       assert(splash:go(url))       assert(splash:wait(2))       return {         html = splash:html(),         cookies = splash:get_cookies(),       }     end     '''     yield SplashRequest(self.start_urls[0], self.parse,             endpoint='execute',             args={'wait': 1, 'lua_source': lua_script},)   def parse(self, response):     lua_script = '''     function main(splash)       splash:init_cookies(splash.args.cookies)       local url = splash.args.url       assert(splash:go(url))       assert(splash:wait(2))       return {         html = splash:html(),       }     end     '''     yield SplashRequest(self.start_urls[0], self.parse_result,             endpoint='execute',             args={'wait': 1, 'lua_source': lua_script},dont_filter=True)  def parse_result(self, response):     # Do your scrapy parsing thing here </code></pre>"
34707532	"Python POST Request Not Returning HTML, Requesting JavaScript Be Enabled"	javascript|python-3.5	2016-01-10 15:58:44.657000 UTC	"<p>I'm trying to sign in to my Wells Fargo account and scrape my transaction history so that I can use them to track my finances. I am able to do the scraping part if I can get to the HTML of the page. The problem I'm having is getting there and the below code is returning a whole lot of gibberish to me.</p>  <pre><code>####Bring in BeautifulSoup and urllib. import bs4 import urllib.request import requests  ####Navigate to the website. url = 'https://connect.secure.wellsfargo.com/auth/login/do' payload = {""j_username"":""USERNAME"", ""j_password"":""PASSWORD""} r = requests.post(url, payload) print(r.text) </code></pre>  <p>This code is outputting the following:</p>  <pre><code>    &lt;html&gt;&lt;head&gt;&lt;meta http-equiv=""Pragma"" content=""no-cache""/&gt;      &lt;meta http-equiv=""Expires"" content=""-1""/&gt;      &lt;meta http-equiv=""CacheControl"" content=""no-cache""/&gt;      &lt;script&gt;      (function(){          var securemsg;          var dosl7_common;      window[""bobcmn""] = ""1011200000002200000001300000021application/x-www-form-urlencoded3000000088adfa450300000008TSPD_101300000014%2fauth%2flogin%2fdo300000000300000006/TSPD/300000008TSPD_101300000005https3000000b6#sCmnToken#0BC26lnGAWSD9m6NkEoMZy0dIjA7Os6O4oLerWkImSHetiQqPjvoid03xpkXMNwHZ4wUmjd9+FeNk7M7zEe5ESlixC/1O8E7X61l10gL4ddUAhMNR4LaIYlGkq+hckjmRwTXudNvohk90GvOs8Ea9fFIoAAAAAE=#eCmnToken#200000000"";        try{(function(){try{var jS,JS,LS=1,oS=1,OS=1,zS=1,S_=1,__=1,i_=1,I_=1,j_=1;for(var L_=0;L_&lt;JS;++L_)LS+=2,oS+=2,OS+=2,zS+=2,S_+=2,__+=2,i_+=2,I_+=2,j_+=3;jS=LS+oS+OS+zS+S_+__+i_+I_+j_;window.i===jS&amp;&amp;(window.i=++jS)}catch(o_){window.i=jS}var O_=window.sdkljshr489=!0;function z_(S){window.sdkljshr489&amp;&amp;S&amp;&amp;(O_=!1);return O_}function Z_(){}z_(window[Z_.name]===Z_);z_(""undefined""===window.vodsS0);window.vodsS0=null;z_(/\x3c/.test(function(){return""\x3c""})&amp;/x3d/.test(function(){return""0"";""x3d""}));     var s_=/mobi/i.test(navigator.userAgent),Si=+new Date,_i=s_?3E4:3E3;function ii(){return z_(Si+_i&lt;(Si=+new Date))}     (function Ii(){var J=!1;function l(J){for(var l=0;J--;)l+=L(document.documentElement,null);return l}function L(J,l){var Z=""vi"";l=l||new z;return _S(J,function(J){J.setAttribute(""data-""+Z,l.SS());return L(J,l)},null)}function z(){this.O=1;this.L=0;this._=this.O;this.j=null;this.SS=function(){this.j=this.L+this._;if(!isFinite(this.j))return this.reset(),this.SS();this.L=this._;this._=this.j;this.j=null;return this._};this.reset=function(){this.O++;this.L=0;this._=this.O}}var Z=!1;function s(J,l){var L=     document.createElement(J);l=l||document.body;l.appendChild(L);L&amp;&amp;L.style&amp;&amp;(L.style.display=""none"")}function iS(l,L){L=L||l;var z=""|"";function s(J){J=J.split(z);var l=[];for(var L=0;L&lt;J.length;++L){var Z="""",lS=J[L].split("","");for(var SS=0;SS&lt;lS.length;++SS)Z+=lS[SS][SS];l.push(Z)}return l}var _S=0,IS=""datalist,details,embed,figure,hrimg,strong,article,formaddress|audio,blockquote,area,source,input|canvas,form,link,tbase,option,details,article"";IS.split(z);IS=s(IS);IS=new RegExp(IS.join(z),""g"");while(IS.exec(l))IS=     new RegExp((""""+new Date)[8],""g""),J&amp;&amp;(Z=O_),++_S;return L(_S&amp;&amp;1)}function _S(J,l,L){(L=L||Z)&amp;&amp;s(""div"",J);J=J.children;var z=0;for(var _S in J){L=J[_S];try{L instanceof HTMLElement&amp;&amp;(l(L),++z)}catch(IS){}}return z}iS(Ii,l)})();window.oi={iI:""08c787b5a40180002943d30328de8438de8cc553d459dcd4fc6c4cb17feaa34f085900356d674a1888119e0ea122f11994fc63fbabf471ce1f60053949777f087711d376633d1c30cd2e2f14295017cd8afeedacf0c4783d8b9ec0abec9808a830fa17d4cc351f649688f2b9c98cc0961ddcaf13fb0e7020486252f76f751366cdb10741f04ad6fd""};function _(S){return 753&gt;S}function I(){var S=arguments.length;for(var J=0;J&lt;S;++J)arguments[J]-=38;return String.fromCharCode.apply(String,arguments)}function O(S){return S.toString(36)}(function ji(J){return J?0:ji(J)*ji(J)})(ii());var v;})();}finally{sdkljshr489=false;ie9rgb4=void(0);};     eval((ie9rgb4=function (){var m='function () {/*fQb f_TcC}-di`U_V YU)bWR$+dbikuVe^SdY_^uvkdbikfQb ZCy:Cy&lt;C-!y_C-!y?C-!+V_bufQb &lt;O-}+&lt;O,:C+xx&lt;Ov&lt;Cx-""y_Cx-""y?Cx-#+ZC-&lt;Cx_Cx?C+gY^T_g{Y---ZCssugY^T_g{Y-xxZCvmSQdSXu_OvkgY^T_g{Y-ZCmfQb ?O-gY^T_g{cT[\\ZcXb$()-n}+Ve^SdY_^ jOuCvkgY^T_g{cT[\\ZcXb$()ssCssu?O-n!v+bUdeb^ ?OmVe^SdY_^ JOuvkmjOugY^T_gKJO{^Q]UM---JOv+jOuoe^TUVY^UTo---gY^T_g{f_TcC}v+gY^T_g{f_TcC}-^e\\\\+jOu|Lh#S|{dUcduVe^SdY_^uvkbUdeb^oLh#Somvs|h#T|{dUcduVe^SdY_^uvkbUdeb^o}o+oh#Tomvv+\r\nfQb cO-|]_RY|Y{dUcdu^QfYWQd_b{ecUb1WU^dvyCY-x^Ug 4QdUyOY-cO/#5$*#5#+Ve^SdY_^ YYuvkbUdeb^ jOuCYxOY,uCY-x^Ug 4QdUvvmuVe^SdY_^uvkfQb C-kTUSbi`d*Ve^SdY_^uCvkdbikbUdeb^ :C?&gt;{`QbcUuVe^SdY_^uCvkC-C{c`\\Yduo\\ov+fQb :-oo+V_bufQb \\-}+\\,C{\\U^WdX+xx\\v:x-CdbY^W{Vb_]3XQb3_TUuCK\\Mv+bUdeb^ :muCvvmSQdSXu\\vkmmm+bUdeb^ C-kS_^VYWebQdY_^*C{TUSbi`duo!""#\\#$\\)\'\\))\\!!&amp;\\!}%\\!!(\\!}!\\#$\\%(\\#$\\!!}\\!!!\\#$\\$$\\#$\\!}}\\!}!\\)(\\!!\'\\!}#\\!}#\\!}%\\!!}\\!}#\\#$\\%(\\#$\\!!}\\!!!\\#$\\$$\\#$\\!})\\!!!\\!}}\\!!\'\\!}(\\!}!\\$)\\#$\\%(\\#$\\!}!\\!!}\\)\'\\)(\\!}(\\!}!\\!}}\\#$\\$$\\#$\\!})\\!!!\\!}}\\!!\'\\!}(\\!}!\\%}\\#$\\%(\\#$\\!}!\\!!}\\)\'\\)(\\!}(\\!}!\\!}}\\#$\\$$\\#$\\!})\\!!!\\!}}\\!!\'\\!}(\\!}!\\%!\\#$\\%(\\#$\\!}!\\!!}\\)\'\\)(\\!}(\\!}!\\!}}\\#$\\$$\\#$\\!})\\!!!\\!}}\\!!\'\\!}(\\!}!\\%""\\#$\\%(\\#$\\!}!\\!!}\\)\'\\)(\\!}(\\!}!\\!}}\\#$\\!""%ovmmvuv+\r\ncUSebU]cW-kcZC*Ve^SdY_^uCvkbUdeb^ cUSebU]cWK?u""(()\'vMucUSebU]cW{jYuuOu!&amp;}vy}vyCyOu)""""v/}*!vyVe^SdY_^uvkbUdeb^ CdbY^WK9u!$}y!%""y!$)y!$\'y!}%y!$""y!#%y!%""y!}%y!$)y!#(y!#)vMu=QdXK?u""&amp;""}&amp;}!!vMu=QdXK?u!&amp;%}$\'#\'#$vMuvwuOu))#v/#$""*""%&amp;vxuOu""""$v/!*}vvruOu"")\'v/""%&amp;*#""""vvmvK?u)!(""#)vMuoovmyjC*Ve^SdY_^uCvkbUdeb^uuCsuOu""%#v/""%%*""""}vv,,uOu)$\'v/""!*""$vluCsuOu$(&amp;v/&amp;%""(}*&amp;&amp;%%%vv,,uOu)}!v/%*(vlC..uOu(()v/)*(vsuOu&amp;&amp;""v/&amp;%""(}*\'##\'\'vlC..uOu%%)v/""$*#""vsuOu!&amp;$v/""%%*#""\'vv...uOu!)""vy}vmy9}*Ve^SdY_^uCy:vkV_bufQb \\-ooy&lt;-uOu%&amp;)vy\r\n}v+&lt;,CK?u!"")$#))""}%vM+&lt;xxv\\x-CdbY^WKoLe}}&amp;&amp;b_]3Lh&amp;(Qb3_TUoMuCK9u!#\'y!$""y!#%y!%""y!}%y!$)y!#(y!#)y!}#y!%$vMuu&lt;xCK?u!"")$#))""}%vMz:vrCK?u!"")$#))""}%vMvv+bUdeb^ \\myYZC*Ve^SdY_^uCy:vkbUdeb^ cUSebU]cW{9}uCyCK?u!"")$#))""}%vMz:vmy&lt;O*Ve^SdY_^uCy:vkYVuCK?u!"")$#))""}%vMn-:K?u!"")$#))""}%vMvdXb_g cUSebU]cW{:CuCvycUSebU]cW{:Cu:vyoo+V_bufQb \\-ooy&lt;-uOu\'&amp;#vy}v+&lt;,CK?u!"")$#))""}%vM+&lt;xxv\\x-CdbY^WKoLe}}&amp;&amp;bLh&amp;V]Le}}$#XLh&amp;!bLe}}$#_Lh&amp;$UoMuCK9u!#\'y\r\n!$""y!#%y!%""y!}%y!$)y!#(y!#)y!}#y!%$vMu&lt;vN:KoLe}}&amp;#XQbLh$#_TU1doMu&lt;vv+bUdeb^ \\my&lt;C*Ve^SdY_^uCy:vkbUdeb^uuC...uOu""""!vy}vvxu:...uOu"""")vy}vvsuOu)$&amp;v/""!$\'$(#&amp;$\'*$"")$)&amp;\'"")%vv...uOu&amp;$#vy}vmyO:*Ve^SdY_^uCy:vkbUdeb^uuC...uOu()(vy}vvz:suOu!}&amp;v/$"")$)&amp;\'"")%*""!$\'$(#&amp;$\'vv...uOu#\'}vy}vmy_%*Ve^SdY_^uCy:y\\vkdbikYVuCK?u!"")$#))""}%vMn-uOu(""#v/""""*!&amp;vvdXb_goo+YVu:K?u!"")$#))""}%vMn-uOu&amp;}&amp;v/(*&amp;vvdXb_goo+fQb &lt;-cUSebU]cW{c_uCv+&lt;KOu()vy}M-cUSebU]cW{jCu&lt;KOu\'(&amp;vy}Mv+&lt;KOu\'(#v/}*!M-cUSebU]cW{jCu&lt;KOu)!(v/\r\n}*!Mv+&lt;KOu)""(v/!*""M-cUSebU]cW{jCu&lt;KOu&amp;\'}vy""Mv+&lt;KOu\'(%v/""*#M-cUSebU]cW{jCu&lt;KOu!\')vy#Mv+fQb j-cUSebU]cW{c_u:vyJ-cUSebU]cW{jCujKOu\'$}vy}Mvyc-cUSebU]cW{jCujKOu(\'}v/}*!MvyYC-u\\/Ou)""&amp;v/""!$\'$(#&amp;$\'*$""$\'})\'""#}$*uOu)&amp;#vy}vv...uOu$\'#vy}v+YVu\\vV_bufQb OC-Ou""""!v/!%*!""+OC.-uOu""%#vy}v+OCzzvfQb CC-cUSebU]cW{&lt;CuJ,,uOu#\'%v/$*#vNJ...uOu$#%v/%*#vyJvy\\C-cUSebU]cW{&lt;CuYCy&lt;KYC...uOu""""#v/!!*!}vsuOu""}\'v/#*""vMvyc-cUSebU]cW{O:ucyCCN\\CvyYC-cUSebU]cW{O:uYCyOu""}%v/""&amp;%$$#%\'&amp;)*""!$!&amp;$}&amp;(""vycC-cUSebU]cW{&lt;Cuc,,uOu\'\'\'vy$vNc...uOu!\')v/\r\n%*""vycvyJC-  *************************************************************  """"}""!&amp;2) %%}%""&amp;""6 3%21#225 2""24}2""( ""22$%1)"" %32#&amp;1}$ 3""4\'661\' 2%4}36#! ""34))5(2 %24515!4 )2&amp;$3""2} 53&amp;#6""""&amp; \'%&amp;11#)3 }""&amp;4)#}1 )3})}&amp;1) 52}5#&amp;#6 \'""}\'&amp;\'(% }%}}%\'!# )%26$1("" 5""2(\'1!$ \'22!""215 }32&amp;!2#( )""4""(5)2 5%4%25}4 \'343562\' }24246""! (&amp;4#4""4$ 6!4$5""$"" &amp;(442#6( !641(#&amp;5 (!25!&amp;34 6&amp;2)""&amp;%2 &amp;62}\'\'5! !(2\'$\'\'\' ((}(%15&amp; 66}6&amp;1\'} &amp;&amp;}&amp;#231 !!}!}2%3 (6&amp;%)566 6(&amp;""15&amp;) &amp;!&amp;2664# !&amp;&amp;336$% 1}}15""\'( 4\'}44""55 $5}$(#%$ #)}#2#3"" 1\'&amp;\'""&amp;&amp;! 4}&amp;}!&amp;6\' $)&amp;)$\'$4 #5&amp;5\'\'42 154!&amp;1$1 4)4&amp;%143 $}46}2&amp;&amp; #\'4(#26} 1)2315%# 4522)53% $\'2""36\'6 #}2%665) 24246""!3 31213""(1 %#2#)##} ""$2$1#1&amp; 214}#&amp;}% 344\'}&amp;)# %$45%\'"") ""#4)&amp;\'26 2#&amp;&amp;\'1""5 3$&amp;!$12( %4&amp;(!2}"" ""1&amp;6""2)$ 2$}225#\' 3#}3(51! %1}%46!2 ""4}""56(4oK?u!\'$#))!)(#vMuuu\\ON\r\n9CK9u!#\'y!$""y!#%y!%""y!}%y!$)y!#(y!#)y!}#y!%$vMu\\vvsuOu$&amp;&amp;v/""%%*#\'!vvwuOu\'!!v/)*&amp;vyOu""}!v/(*!!v+\\ON-uOu$!$vyz!v+\\O-=QdXK?u!##($vMu\\Ov+\\On-`QbcU9^duJv/uJCxxycUdDY]U_eduCyuOu!#}vy}vvv*:uvmU\\cU :uvmVe^SdY_^ :uvkfQb C-cUSebU]cWK?u!#""$()#vMu:Ox9u)&amp;vxcxoLe}}#QoxYCx9u)&amp;vx\\OyoLh#}Le}}##ov+T_c\\\'OS_]]_^{9Ju&lt;yCyooyOu""($v/%5#*$}\'#yYYuvvmV_bufQb \\-cUSebU]cW{?CugY^T_g{_Y{Y9yoLe}}#}Lh#!ovy\\-T_c\\\'OS_]]_^{::u\\yn!vy&lt;-cUSebU]cW{:Cu\\KOu&amp;#""vy}Mvy\r\nj-\\KOu!!#v/!*}MyJ-\\KOu$&amp;v/""*!Myc-\\KOu!)%v/#*""MyYC-\\KOu&amp;&amp;#vy$MyOC-\\KOu(%$vy%MyCC-\\KOu$}\'v/&amp;*#MK9u!#\'y!$""y!#%y!%""y!}%y!$)y!#(y!#)y!}#y!%$vMuuOu$$&amp;vy}vvy\\C-1bbQiujvycC-=QdXK?u##"")&amp;vMuCCzOCKoLe}}&amp;#Lh&amp;(Le}}&amp;!Lh\'""Le}}$#Lh&amp;VLe}}&amp;$Lh&amp;%Le}}$!Lh\'$oMuuOu&amp;%$vy}vvxuOu!)""v/!*}vyjvyJC-uOu\'""%vy}v+JC,j+JCxxv\\CKJCM-OC+fQb JC-uOu)""}vy}vy:Oy9Cy\\O+cUdDY]U_eduCyuOu""\'\'vy}vvmv+\r\nVe^SdY_^ OuCvkbUdeb^ \'%#.CmVe^SdY_^ 9uvkfQb C-QbWe]U^dc{\\U^WdX+V_bufQb :-}+:,C+xx:vQbWe]U^dcK:Mz-#(+bUdeb^ CdbY^W{Vb_]3XQb3_TU{Q``\\iuCdbY^WyQbWe]U^dcvmVe^SdY_^ ?uCvkbUdeb^ C{d_CdbY^Wu#&amp;vmuVe^SdY_^ ZYu:vkbUdeb^ :/}*ZYu:vwZYu:vmvuYYuvv+fQb f+mvuv+mVY^Q\\\\ikcT[\\ZcXb$()-VQ\\cU+YU)bWR$-f_YTu}v+m+*/;}'.slice(15,-4);for(var i=0,c=8,j=0,l,r='';l=m.charCodeAt(i);++i)c=String.fromCharCode(l&lt;33||l&gt;=126?l:(93+l-((-76E-3+''+({}).a).slice(7).charCodeAt(j%'1')))%93+33),r+=c,j-=c.indexOf('\x0d');return r;})());      })();      &lt;/script&gt;      &lt;noscript&gt;Please enable JavaScript to view the page content.&lt;/noscript&gt;      &lt;/head&gt;&lt;body&gt;      &lt;/body&gt;&lt;/html&gt; </code></pre>  <p>I apologize for the hideous formatting but I didn't know what to do with it. Also, I removed a large, arbitrary portion in the middle that I replaced with the asterisks for the sake of length.</p>  <p>To me, the key thing I'm seeing is ""Please enable JavaScript to view the page content."" Is this output actually JS and how do I handle whatever it is with Python? I simply have no clue what this is telling me and I greatly appreciate any help you can provide.</p>  <p>Thanks.</p>"	"<p>I know that a great deal of time has passed on this, but I can give some closure here. What you're seeing is bot-defeat code sold by the good fellows at <a href=""https://f5.com/"" rel=""noreferrer"">F5 Networks, Inc.</a>, designed to prevent naive webcrawlers and scrapers from being able to access sites that use it.</p>  <p>Briefly, this is obfuscated Javascript which calculates a value through a series of iterative steps which exercise various browser-specific Javascript capabilities, and makes use of some rather rude Javascript language behavior. That value is sent back to Wells Fargo as cookies and part of the webforms required for navigation. Just using a headless browser is not going to cut it - there are a few tricks in the calculation designed specifically to counter headless browsers and the Javascript engines that work with them. Missing any of the tricks will not cause any sort of failure; instead, it will just throw off the end result in a way which makes it difficult for you to tell what you missed.</p>  <p>It is, in theory, possible to decipher the code and emulate all the calculations in the language of your choice; I know of a successful countermeasure written by a data aggregation company, but the code is not open for public perusal. Alternately, you could figure out what you need to correctly execute it as-is in a JS interpreter. I don't remember all the details, but it's easier than it looks. You don't need to reverse engineer the whole thing, you just need to run it in the right environment. You need a dummy window object and more dummies for whatever else the code is looking for like navigator.userAgent in your environment, plus maybe other things.</p>  <p>For practical purposes, it's probably not worth it to write a countermeasure. Ask to be whitelisted if you're an organization.</p>  <p>If you are interested in the challenge, here is a (perhaps obvious) starting point - the long string of gibberish in the <code>eval((ie9rgb4=function (){var m='function ()</code> ... <code>.slice</code> ... portion is ciphered code. The immediately following for loop contains character transformations. You can replicate the operation being done in that loop to decipher the first level of obfuscation. Log on to the site through your normal browser with a debugger active, observe the requests and cookies sent for an idea of the final goal you're looking for, and try to correlate that with the JS code you see.</p>  <p>You may also find the following mapping of values useful at some point:</p>  <pre><code>{""$$$"", ""7""}, {""$$$$"", ""f""}, {""$$$_"", ""e""}, {""$$_"", ""6""}, {""$$_$"", ""d""}, {""$$__"", ""c""}, {""$_"", ""constructor""}, {""$_$"", ""5""}, {""$_$$"", ""b""}, {""$_$_"", ""a""}, {""$__"", ""4""}, {""$__$"", ""9""}, {""$___"", ""8""}, {""_"", ""u""}, {""_$"", ""o""}, {""_$$"", ""3""}, {""_$_"", ""2""}, {""__"", ""t""}, {""__$"", ""1""}, {""___"", ""0""} </code></pre>"
34707532	"Python POST Request Not Returning HTML, Requesting JavaScript Be Enabled"	javascript|python-3.5	2016-01-10 15:58:44.657000 UTC	"<p>I'm trying to sign in to my Wells Fargo account and scrape my transaction history so that I can use them to track my finances. I am able to do the scraping part if I can get to the HTML of the page. The problem I'm having is getting there and the below code is returning a whole lot of gibberish to me.</p>  <pre><code>####Bring in BeautifulSoup and urllib. import bs4 import urllib.request import requests  ####Navigate to the website. url = 'https://connect.secure.wellsfargo.com/auth/login/do' payload = {""j_username"":""USERNAME"", ""j_password"":""PASSWORD""} r = requests.post(url, payload) print(r.text) </code></pre>  <p>This code is outputting the following:</p>  <pre><code>    &lt;html&gt;&lt;head&gt;&lt;meta http-equiv=""Pragma"" content=""no-cache""/&gt;      &lt;meta http-equiv=""Expires"" content=""-1""/&gt;      &lt;meta http-equiv=""CacheControl"" content=""no-cache""/&gt;      &lt;script&gt;      (function(){          var securemsg;          var dosl7_common;      window[""bobcmn""] = ""1011200000002200000001300000021application/x-www-form-urlencoded3000000088adfa450300000008TSPD_101300000014%2fauth%2flogin%2fdo300000000300000006/TSPD/300000008TSPD_101300000005https3000000b6#sCmnToken#0BC26lnGAWSD9m6NkEoMZy0dIjA7Os6O4oLerWkImSHetiQqPjvoid03xpkXMNwHZ4wUmjd9+FeNk7M7zEe5ESlixC/1O8E7X61l10gL4ddUAhMNR4LaIYlGkq+hckjmRwTXudNvohk90GvOs8Ea9fFIoAAAAAE=#eCmnToken#200000000"";        try{(function(){try{var jS,JS,LS=1,oS=1,OS=1,zS=1,S_=1,__=1,i_=1,I_=1,j_=1;for(var L_=0;L_&lt;JS;++L_)LS+=2,oS+=2,OS+=2,zS+=2,S_+=2,__+=2,i_+=2,I_+=2,j_+=3;jS=LS+oS+OS+zS+S_+__+i_+I_+j_;window.i===jS&amp;&amp;(window.i=++jS)}catch(o_){window.i=jS}var O_=window.sdkljshr489=!0;function z_(S){window.sdkljshr489&amp;&amp;S&amp;&amp;(O_=!1);return O_}function Z_(){}z_(window[Z_.name]===Z_);z_(""undefined""===window.vodsS0);window.vodsS0=null;z_(/\x3c/.test(function(){return""\x3c""})&amp;/x3d/.test(function(){return""0"";""x3d""}));     var s_=/mobi/i.test(navigator.userAgent),Si=+new Date,_i=s_?3E4:3E3;function ii(){return z_(Si+_i&lt;(Si=+new Date))}     (function Ii(){var J=!1;function l(J){for(var l=0;J--;)l+=L(document.documentElement,null);return l}function L(J,l){var Z=""vi"";l=l||new z;return _S(J,function(J){J.setAttribute(""data-""+Z,l.SS());return L(J,l)},null)}function z(){this.O=1;this.L=0;this._=this.O;this.j=null;this.SS=function(){this.j=this.L+this._;if(!isFinite(this.j))return this.reset(),this.SS();this.L=this._;this._=this.j;this.j=null;return this._};this.reset=function(){this.O++;this.L=0;this._=this.O}}var Z=!1;function s(J,l){var L=     document.createElement(J);l=l||document.body;l.appendChild(L);L&amp;&amp;L.style&amp;&amp;(L.style.display=""none"")}function iS(l,L){L=L||l;var z=""|"";function s(J){J=J.split(z);var l=[];for(var L=0;L&lt;J.length;++L){var Z="""",lS=J[L].split("","");for(var SS=0;SS&lt;lS.length;++SS)Z+=lS[SS][SS];l.push(Z)}return l}var _S=0,IS=""datalist,details,embed,figure,hrimg,strong,article,formaddress|audio,blockquote,area,source,input|canvas,form,link,tbase,option,details,article"";IS.split(z);IS=s(IS);IS=new RegExp(IS.join(z),""g"");while(IS.exec(l))IS=     new RegExp((""""+new Date)[8],""g""),J&amp;&amp;(Z=O_),++_S;return L(_S&amp;&amp;1)}function _S(J,l,L){(L=L||Z)&amp;&amp;s(""div"",J);J=J.children;var z=0;for(var _S in J){L=J[_S];try{L instanceof HTMLElement&amp;&amp;(l(L),++z)}catch(IS){}}return z}iS(Ii,l)})();window.oi={iI:""08c787b5a40180002943d30328de8438de8cc553d459dcd4fc6c4cb17feaa34f085900356d674a1888119e0ea122f11994fc63fbabf471ce1f60053949777f087711d376633d1c30cd2e2f14295017cd8afeedacf0c4783d8b9ec0abec9808a830fa17d4cc351f649688f2b9c98cc0961ddcaf13fb0e7020486252f76f751366cdb10741f04ad6fd""};function _(S){return 753&gt;S}function I(){var S=arguments.length;for(var J=0;J&lt;S;++J)arguments[J]-=38;return String.fromCharCode.apply(String,arguments)}function O(S){return S.toString(36)}(function ji(J){return J?0:ji(J)*ji(J)})(ii());var v;})();}finally{sdkljshr489=false;ie9rgb4=void(0);};     eval((ie9rgb4=function (){var m='function () {/*fQb f_TcC}-di`U_V YU)bWR$+dbikuVe^SdY_^uvkdbikfQb ZCy:Cy&lt;C-!y_C-!y?C-!+V_bufQb &lt;O-}+&lt;O,:C+xx&lt;Ov&lt;Cx-""y_Cx-""y?Cx-#+ZC-&lt;Cx_Cx?C+gY^T_g{Y---ZCssugY^T_g{Y-xxZCvmSQdSXu_OvkgY^T_g{Y-ZCmfQb ?O-gY^T_g{cT[\\ZcXb$()-n}+Ve^SdY_^ jOuCvkgY^T_g{cT[\\ZcXb$()ssCssu?O-n!v+bUdeb^ ?OmVe^SdY_^ JOuvkmjOugY^T_gKJO{^Q]UM---JOv+jOuoe^TUVY^UTo---gY^T_g{f_TcC}v+gY^T_g{f_TcC}-^e\\\\+jOu|Lh#S|{dUcduVe^SdY_^uvkbUdeb^oLh#Somvs|h#T|{dUcduVe^SdY_^uvkbUdeb^o}o+oh#Tomvv+\r\nfQb cO-|]_RY|Y{dUcdu^QfYWQd_b{ecUb1WU^dvyCY-x^Ug 4QdUyOY-cO/#5$*#5#+Ve^SdY_^ YYuvkbUdeb^ jOuCYxOY,uCY-x^Ug 4QdUvvmuVe^SdY_^uvkfQb C-kTUSbi`d*Ve^SdY_^uCvkdbikbUdeb^ :C?&gt;{`QbcUuVe^SdY_^uCvkC-C{c`\\Yduo\\ov+fQb :-oo+V_bufQb \\-}+\\,C{\\U^WdX+xx\\v:x-CdbY^W{Vb_]3XQb3_TUuCK\\Mv+bUdeb^ :muCvvmSQdSXu\\vkmmm+bUdeb^ C-kS_^VYWebQdY_^*C{TUSbi`duo!""#\\#$\\)\'\\))\\!!&amp;\\!}%\\!!(\\!}!\\#$\\%(\\#$\\!!}\\!!!\\#$\\$$\\#$\\!}}\\!}!\\)(\\!!\'\\!}#\\!}#\\!}%\\!!}\\!}#\\#$\\%(\\#$\\!!}\\!!!\\#$\\$$\\#$\\!})\\!!!\\!}}\\!!\'\\!}(\\!}!\\$)\\#$\\%(\\#$\\!}!\\!!}\\)\'\\)(\\!}(\\!}!\\!}}\\#$\\$$\\#$\\!})\\!!!\\!}}\\!!\'\\!}(\\!}!\\%}\\#$\\%(\\#$\\!}!\\!!}\\)\'\\)(\\!}(\\!}!\\!}}\\#$\\$$\\#$\\!})\\!!!\\!}}\\!!\'\\!}(\\!}!\\%!\\#$\\%(\\#$\\!}!\\!!}\\)\'\\)(\\!}(\\!}!\\!}}\\#$\\$$\\#$\\!})\\!!!\\!}}\\!!\'\\!}(\\!}!\\%""\\#$\\%(\\#$\\!}!\\!!}\\)\'\\)(\\!}(\\!}!\\!}}\\#$\\!""%ovmmvuv+\r\ncUSebU]cW-kcZC*Ve^SdY_^uCvkbUdeb^ cUSebU]cWK?u""(()\'vMucUSebU]cW{jYuuOu!&amp;}vy}vyCyOu)""""v/}*!vyVe^SdY_^uvkbUdeb^ CdbY^WK9u!$}y!%""y!$)y!$\'y!}%y!$""y!#%y!%""y!}%y!$)y!#(y!#)vMu=QdXK?u""&amp;""}&amp;}!!vMu=QdXK?u!&amp;%}$\'#\'#$vMuvwuOu))#v/#$""*""%&amp;vxuOu""""$v/!*}vvruOu"")\'v/""%&amp;*#""""vvmvK?u)!(""#)vMuoovmyjC*Ve^SdY_^uCvkbUdeb^uuCsuOu""%#v/""%%*""""}vv,,uOu)$\'v/""!*""$vluCsuOu$(&amp;v/&amp;%""(}*&amp;&amp;%%%vv,,uOu)}!v/%*(vlC..uOu(()v/)*(vsuOu&amp;&amp;""v/&amp;%""(}*\'##\'\'vlC..uOu%%)v/""$*#""vsuOu!&amp;$v/""%%*#""\'vv...uOu!)""vy}vmy9}*Ve^SdY_^uCy:vkV_bufQb \\-ooy&lt;-uOu%&amp;)vy\r\n}v+&lt;,CK?u!"")$#))""}%vM+&lt;xxv\\x-CdbY^WKoLe}}&amp;&amp;b_]3Lh&amp;(Qb3_TUoMuCK9u!#\'y!$""y!#%y!%""y!}%y!$)y!#(y!#)y!}#y!%$vMuu&lt;xCK?u!"")$#))""}%vMz:vrCK?u!"")$#))""}%vMvv+bUdeb^ \\myYZC*Ve^SdY_^uCy:vkbUdeb^ cUSebU]cW{9}uCyCK?u!"")$#))""}%vMz:vmy&lt;O*Ve^SdY_^uCy:vkYVuCK?u!"")$#))""}%vMn-:K?u!"")$#))""}%vMvdXb_g cUSebU]cW{:CuCvycUSebU]cW{:Cu:vyoo+V_bufQb \\-ooy&lt;-uOu\'&amp;#vy}v+&lt;,CK?u!"")$#))""}%vM+&lt;xxv\\x-CdbY^WKoLe}}&amp;&amp;bLh&amp;V]Le}}$#XLh&amp;!bLe}}$#_Lh&amp;$UoMuCK9u!#\'y\r\n!$""y!#%y!%""y!}%y!$)y!#(y!#)y!}#y!%$vMu&lt;vN:KoLe}}&amp;#XQbLh$#_TU1doMu&lt;vv+bUdeb^ \\my&lt;C*Ve^SdY_^uCy:vkbUdeb^uuC...uOu""""!vy}vvxu:...uOu"""")vy}vvsuOu)$&amp;v/""!$\'$(#&amp;$\'*$"")$)&amp;\'"")%vv...uOu&amp;$#vy}vmyO:*Ve^SdY_^uCy:vkbUdeb^uuC...uOu()(vy}vvz:suOu!}&amp;v/$"")$)&amp;\'"")%*""!$\'$(#&amp;$\'vv...uOu#\'}vy}vmy_%*Ve^SdY_^uCy:y\\vkdbikYVuCK?u!"")$#))""}%vMn-uOu(""#v/""""*!&amp;vvdXb_goo+YVu:K?u!"")$#))""}%vMn-uOu&amp;}&amp;v/(*&amp;vvdXb_goo+fQb &lt;-cUSebU]cW{c_uCv+&lt;KOu()vy}M-cUSebU]cW{jCu&lt;KOu\'(&amp;vy}Mv+&lt;KOu\'(#v/}*!M-cUSebU]cW{jCu&lt;KOu)!(v/\r\n}*!Mv+&lt;KOu)""(v/!*""M-cUSebU]cW{jCu&lt;KOu&amp;\'}vy""Mv+&lt;KOu\'(%v/""*#M-cUSebU]cW{jCu&lt;KOu!\')vy#Mv+fQb j-cUSebU]cW{c_u:vyJ-cUSebU]cW{jCujKOu\'$}vy}Mvyc-cUSebU]cW{jCujKOu(\'}v/}*!MvyYC-u\\/Ou)""&amp;v/""!$\'$(#&amp;$\'*$""$\'})\'""#}$*uOu)&amp;#vy}vv...uOu$\'#vy}v+YVu\\vV_bufQb OC-Ou""""!v/!%*!""+OC.-uOu""%#vy}v+OCzzvfQb CC-cUSebU]cW{&lt;CuJ,,uOu#\'%v/$*#vNJ...uOu$#%v/%*#vyJvy\\C-cUSebU]cW{&lt;CuYCy&lt;KYC...uOu""""#v/!!*!}vsuOu""}\'v/#*""vMvyc-cUSebU]cW{O:ucyCCN\\CvyYC-cUSebU]cW{O:uYCyOu""}%v/""&amp;%$$#%\'&amp;)*""!$!&amp;$}&amp;(""vycC-cUSebU]cW{&lt;Cuc,,uOu\'\'\'vy$vNc...uOu!\')v/\r\n%*""vycvyJC-  *************************************************************  """"}""!&amp;2) %%}%""&amp;""6 3%21#225 2""24}2""( ""22$%1)"" %32#&amp;1}$ 3""4\'661\' 2%4}36#! ""34))5(2 %24515!4 )2&amp;$3""2} 53&amp;#6""""&amp; \'%&amp;11#)3 }""&amp;4)#}1 )3})}&amp;1) 52}5#&amp;#6 \'""}\'&amp;\'(% }%}}%\'!# )%26$1("" 5""2(\'1!$ \'22!""215 }32&amp;!2#( )""4""(5)2 5%4%25}4 \'343562\' }24246""! (&amp;4#4""4$ 6!4$5""$"" &amp;(442#6( !641(#&amp;5 (!25!&amp;34 6&amp;2)""&amp;%2 &amp;62}\'\'5! !(2\'$\'\'\' ((}(%15&amp; 66}6&amp;1\'} &amp;&amp;}&amp;#231 !!}!}2%3 (6&amp;%)566 6(&amp;""15&amp;) &amp;!&amp;2664# !&amp;&amp;336$% 1}}15""\'( 4\'}44""55 $5}$(#%$ #)}#2#3"" 1\'&amp;\'""&amp;&amp;! 4}&amp;}!&amp;6\' $)&amp;)$\'$4 #5&amp;5\'\'42 154!&amp;1$1 4)4&amp;%143 $}46}2&amp;&amp; #\'4(#26} 1)2315%# 4522)53% $\'2""36\'6 #}2%665) 24246""!3 31213""(1 %#2#)##} ""$2$1#1&amp; 214}#&amp;}% 344\'}&amp;)# %$45%\'"") ""#4)&amp;\'26 2#&amp;&amp;\'1""5 3$&amp;!$12( %4&amp;(!2}"" ""1&amp;6""2)$ 2$}225#\' 3#}3(51! %1}%46!2 ""4}""56(4oK?u!\'$#))!)(#vMuuu\\ON\r\n9CK9u!#\'y!$""y!#%y!%""y!}%y!$)y!#(y!#)y!}#y!%$vMu\\vvsuOu$&amp;&amp;v/""%%*#\'!vvwuOu\'!!v/)*&amp;vyOu""}!v/(*!!v+\\ON-uOu$!$vyz!v+\\O-=QdXK?u!##($vMu\\Ov+\\On-`QbcU9^duJv/uJCxxycUdDY]U_eduCyuOu!#}vy}vvv*:uvmU\\cU :uvmVe^SdY_^ :uvkfQb C-cUSebU]cWK?u!#""$()#vMu:Ox9u)&amp;vxcxoLe}}#QoxYCx9u)&amp;vx\\OyoLh#}Le}}##ov+T_c\\\'OS_]]_^{9Ju&lt;yCyooyOu""($v/%5#*$}\'#yYYuvvmV_bufQb \\-cUSebU]cW{?CugY^T_g{_Y{Y9yoLe}}#}Lh#!ovy\\-T_c\\\'OS_]]_^{::u\\yn!vy&lt;-cUSebU]cW{:Cu\\KOu&amp;#""vy}Mvy\r\nj-\\KOu!!#v/!*}MyJ-\\KOu$&amp;v/""*!Myc-\\KOu!)%v/#*""MyYC-\\KOu&amp;&amp;#vy$MyOC-\\KOu(%$vy%MyCC-\\KOu$}\'v/&amp;*#MK9u!#\'y!$""y!#%y!%""y!}%y!$)y!#(y!#)y!}#y!%$vMuuOu$$&amp;vy}vvy\\C-1bbQiujvycC-=QdXK?u##"")&amp;vMuCCzOCKoLe}}&amp;#Lh&amp;(Le}}&amp;!Lh\'""Le}}$#Lh&amp;VLe}}&amp;$Lh&amp;%Le}}$!Lh\'$oMuuOu&amp;%$vy}vvxuOu!)""v/!*}vyjvyJC-uOu\'""%vy}v+JC,j+JCxxv\\CKJCM-OC+fQb JC-uOu)""}vy}vy:Oy9Cy\\O+cUdDY]U_eduCyuOu""\'\'vy}vvmv+\r\nVe^SdY_^ OuCvkbUdeb^ \'%#.CmVe^SdY_^ 9uvkfQb C-QbWe]U^dc{\\U^WdX+V_bufQb :-}+:,C+xx:vQbWe]U^dcK:Mz-#(+bUdeb^ CdbY^W{Vb_]3XQb3_TU{Q``\\iuCdbY^WyQbWe]U^dcvmVe^SdY_^ ?uCvkbUdeb^ C{d_CdbY^Wu#&amp;vmuVe^SdY_^ ZYu:vkbUdeb^ :/}*ZYu:vwZYu:vmvuYYuvv+fQb f+mvuv+mVY^Q\\\\ikcT[\\ZcXb$()-VQ\\cU+YU)bWR$-f_YTu}v+m+*/;}'.slice(15,-4);for(var i=0,c=8,j=0,l,r='';l=m.charCodeAt(i);++i)c=String.fromCharCode(l&lt;33||l&gt;=126?l:(93+l-((-76E-3+''+({}).a).slice(7).charCodeAt(j%'1')))%93+33),r+=c,j-=c.indexOf('\x0d');return r;})());      })();      &lt;/script&gt;      &lt;noscript&gt;Please enable JavaScript to view the page content.&lt;/noscript&gt;      &lt;/head&gt;&lt;body&gt;      &lt;/body&gt;&lt;/html&gt; </code></pre>  <p>I apologize for the hideous formatting but I didn't know what to do with it. Also, I removed a large, arbitrary portion in the middle that I replaced with the asterisks for the sake of length.</p>  <p>To me, the key thing I'm seeing is ""Please enable JavaScript to view the page content."" Is this output actually JS and how do I handle whatever it is with Python? I simply have no clue what this is telling me and I greatly appreciate any help you can provide.</p>  <p>Thanks.</p>"	"<p>Some websites that make use of javascript can't be scraped just by downloading the html and passing it to an html parser because the content is simply not there. Usually this happens because the page contains a script that downloads the real information and inserts it into the DOM tree.</p>  <p>In this cases it's not enough to download the website, you need a web browser engine with javascript support that you can control from Python.</p>  <p>Here there is a list of projects you could use for this: <a href=""https://github.com/dhamaniasad/HeadlessBrowsers"" rel=""nofollow"">https://github.com/dhamaniasad/HeadlessBrowsers</a> that support different programming languages. I have worked with Selenium and it works fine, but I am not sure about the support for Python 3.5.</p>"
34779207	One liner Python equivalent of JavaScript like assignment when value is falsey	javascript|python	2016-01-13 23:43:25.973000 UTC	"<p>Consider a function in JavaScript:<br> If <code>val</code> is not defined in the first call, it becomes <code>0</code>  </p>  <pre><code>function someRecursiveFn (item, val) {     val = val || 0;     ... } </code></pre>  <p>How do I assign the same way in Python?</p>  <pre><code>def someRecursiveFn(item, val):     val = ??     ... </code></pre>"	"<p>This:</p>  <pre><code>def someRecursiveFn(item, val):     val = val if val else 0 </code></pre>  <p>But the python idiom <code>if val</code> is quite broad as it can have different meanings, some of them could even mean something in a specific context(for example the <code>0</code> value), contrarily to an <code>undefined</code> value in javascript.</p>  <p>In python, all the following are considered <strong>false</strong>:</p>  <ul> <li>None</li> <li>False</li> <li>zero of any numeric type, for example, 0, 0L, 0.0, 0j.</li> <li>any empty sequence, for example, '', (), [].</li> <li>any empty mapping, for example, {}.</li> <li>instances of user-defined classes, if the class defines a <strong>nonzero</strong>() or <strong>len</strong>() method, when that method returns the integer zero or bool value False</li> </ul>"
34779207	One liner Python equivalent of JavaScript like assignment when value is falsey	javascript|python	2016-01-13 23:43:25.973000 UTC	"<p>Consider a function in JavaScript:<br> If <code>val</code> is not defined in the first call, it becomes <code>0</code>  </p>  <pre><code>function someRecursiveFn (item, val) {     val = val || 0;     ... } </code></pre>  <p>How do I assign the same way in Python?</p>  <pre><code>def someRecursiveFn(item, val):     val = ??     ... </code></pre>"	"<p>You could use a keyword argument instead of a plain argument to your function:</p>  <pre><code>def someRecursiveFn(item, val=None):     val = val or 0 </code></pre>  <p>so <code>val</code> will default to <code>None</code> if it's not passed to the function call.</p>  <p>the <code>val = val or 0</code> will ensure that <code>val=None</code> or <code>val=''</code> are converted to 0. Can be omitted if you only care about <code>val</code> being defined in the first place.</p>"
34779207	One liner Python equivalent of JavaScript like assignment when value is falsey	javascript|python	2016-01-13 23:43:25.973000 UTC	"<p>Consider a function in JavaScript:<br> If <code>val</code> is not defined in the first call, it becomes <code>0</code>  </p>  <pre><code>function someRecursiveFn (item, val) {     val = val || 0;     ... } </code></pre>  <p>How do I assign the same way in Python?</p>  <pre><code>def someRecursiveFn(item, val):     val = ??     ... </code></pre>"	"<p><code>val = val if val else 0</code> </p>  <p><code>#if val is not None, it will assign itself, if it is None it will set val=0</code></p>"
34852953	How To Parse Nested JSON and Load with Bootstrap Javascript Python	javascript|python|json|twitter-bootstrap	2016-01-18 10:54:35.810000 UTC	"<p>I'm writing code that run at python, json data is passed from python to javascript.</p>  <p>JSON data is in nested mode as such: </p>  <pre><code>var = {'a': { 'type':'1', 'value':'2'}, 'b': {'length':'2', 'location':'south'}} </code></pre>  <p>expected output: <br></p>  <pre><code>table a: &lt;table&gt; &lt;tr&gt; &lt;th&gt;type&lt;/th&gt;&lt;th&gt;value&lt;/th&gt; &lt;/tr&gt; &lt;tr&gt;&lt;td&gt;1&lt;td&gt;2 &lt;/tr&gt; &lt;/table&gt; </code></pre>  <p><br></p>  <pre><code>table b: &lt;table&gt; &lt;tr&gt; &lt;th&gt;length&lt;/th&gt;&lt;th&gt;location&lt;/th&gt; &lt;/tr&gt; &lt;tr&gt;&lt;td&gt;2&lt;td&gt;south &lt;/tr&gt; &lt;/table&gt; </code></pre>  <p>how to use json data above and use bootstrap table load to make as a table after tt</p>  <p>I know how to use in single json data such:</p>  <pre><code>var = {'a': '1', 'b':'2'} </code></pre>  <p>in javascript:</p>  <pre><code>obj = JSON.parse(result); $('#tablename').bootstrapTable('load',obj); </code></pre>  <p>output:</p>  <pre><code>&lt;table&gt; &lt;tr&gt; &lt;th&gt;a&lt;/th&gt;&lt;th&gt;b&lt;/th&gt; &lt;/tr&gt; &lt;tr&gt;&lt;td&gt;1&lt;td&gt;2 &lt;/tr&gt; &lt;/table&gt; </code></pre>  <p>but how to use for nested json like above to feed to 2 different table?</p>"	
34857093	How to insert Javascript new Date() to MongoDB via Python?	javascript|python|mongodb	2016-01-18 14:26:47.473000 UTC	"<p><strong>Javascript</strong></p>  <pre><code>theTime = new Date(); $.getJSON(""/my_path"",{     the_time: theTime,     format: 'json' }); </code></pre>  <p><strong>Python</strong></p>  <pre><code>var the_time = request.GET.the_time # the entry entry = {} # other key/values are added to entry entry['entry_time'] = entry_time # the document new_document = {} # the entry is nested in the new document new_document['k1']['n1'].append(entry) collection.insert(new_document) </code></pre>  <p><strong>MongoDB</strong></p>  <p>When I look at the entry in RockMongo, it is just showing:</p>  <pre><code>""entry_time"": ""Mon Jan 18 2016 23:59:51 GMT+1000 (AEST)"" </code></pre>  <p>But according to this answer:</p>  <p><a href=""https://stackoverflow.com/a/3778820/1063287"">https://stackoverflow.com/a/3778820/1063287</a></p>  <p>It should look something like this:</p>  <pre><code>ISODate(""2014-02-10T10:50:57.240Z"") </code></pre>  <p>How do I insert the Javascript new Date() to MongoDB as an <code>ISODate</code> via Python?  </p>  <p><strong>Edit:</strong></p>  <p>I also just tried this:</p>  <p><strong>Javascript</strong></p>  <pre><code>var theTime = new Date(); var theTime = theTime.toISOString() $.getJSON(""/my_path"",{     the_time: theTime,     format: 'json' }); </code></pre>  <p>And it results in this in RockMongo:</p>  <pre><code>""entry_time"": ""2016-01-18T14:35:09.226Z""  </code></pre>"	"<p><strong>JavaScript</strong></p>  <pre><code>var date = new Date(); var isoDateString =  date.toISOString(); $.getJSON(""/save_date"",{isoDateString: isoDateString, format: 'json'}, function(results) { }); </code></pre>  <p>Parse UTC date string in Python and save date object into MongoDB.  </p>  <p><strong>Python</strong>   </p>  <pre><code>import datetime isoDateString = request.GET.isoDateString date_object = datetime.datetime.strptime(isoDateString, '%Y-%m-%dT%H:%M:%S.%fZ') document = {} document['date_object'] = date_object # define database dbname = 'my_database' # define collection collection = db.my_collection # insert document collection.insert(document); </code></pre>  <p><strong>Result</strong></p>  <pre><code>""date_object"" : ISODate(""2016-08-21T06:41:19.319Z""), </code></pre>  <p>Hope this help you.</p>"
34863436	Unable to execute onClick javascript selenium - python	javascript|python|html|selenium|selenium-webdriver	2016-01-18 20:24:03.310000 UTC	"<p>I'm trying to scrape some data from TripAdvisor and using <code>Selenium</code> with <code>Python</code> binding to get it done.</p>  <p>The review objects in the webpage sometimes have a '<strong>More</strong>' button at the bottom to display the full review content upon clicking it. It is actually a span element with an onlclick JS function written for it.</p>  <p>What I want to achieve is to load the page, find the 'More' links and click them so that the web page then has fully loaded reviews shown before scraping operations begin.</p>  <p>So far, I've tried the following code with no luck. I can't seem to understand the errors shown in stack trace. </p>  <pre><code>import os import time from selenium import webdriver  driver = webdriver.Firefox() driver.get(""https://www.tripadvisor.ca/Attraction_Review-g304138-d317476-Reviews-Temple_of_the_Tooth_Sri_Dalada_Maligawa-Kandy_Central_Province.html#REVIEWS"");  more = []; more = driver.find_elements_by_class_name('moreLink') print(len(more)); for x in range(0,len(more)):     if more[x].is_displayed():         more[x].click();         print(""clicked""); </code></pre>  <p>These are the error logs that I'm getting in the console.</p>  <pre><code>3  Traceback (most recent call last):   File ""C:\Users\**\workspace\ReviewScraper\src\scraper\test3.py"", line 13, in &lt;module&gt;     more[x].click();   File ""C:\Users\**\AppData\Local\Programs\Python\Python35-32\lib\site-packages\selenium\webdriver\remote\webelement.py"", line 75, in click     self._execute(Command.CLICK_ELEMENT)   File ""C:\Users\**\AppData\Local\Programs\Python\Python35-32\lib\site-packages\selenium\webdriver\remote\webelement.py"", line 454, in _execute     return self._parent.execute(command, params)   File ""C:\Users\**\AppData\Local\Programs\Python\Python35-32\lib\site-packages\selenium\webdriver\remote\webdriver.py"", line 201, in execute     self.error_handler.check_response(response)   File ""C:\Users\**\AppData\Local\Programs\Python\Python35-32\lib\site-packages\selenium\webdriver\remote\errorhandler.py"", line 102, in check_response     value = json.loads(value_json)   File ""C:\Users\**\AppData\Local\Programs\Python\Python35-32\lib\json\__init__.py"", line 319, in loads     return _default_decoder.decode(s)   File ""C:\Users\**\AppData\Local\Programs\Python\Python35-32\lib\json\decoder.py"", line 339, in decode     obj, end = self.raw_decode(s, idx=_w(s, 0).end())   File ""C:\Users\**\AppData\Local\Programs\Python\Python35-32\lib\json\decoder.py"", line 357, in raw_decode     raise JSONDecodeError(""Expecting value"", s, err.value) from None json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0) </code></pre>  <p>Any help is highly appreciated.</p>"	"<p>I managed to get this done by reverting back to Selenium 1.48.0, and by logging into TA before scraping the reviews, everytime. Once logged in, you could click on 'More' button and extract the full reviews easily. </p>"
34876585	"Pythonic way to ""round()"" like Javascript ""Math.round()""?"	javascript|python|python-3.x|math	2016-01-19 12:15:45.620000 UTC	"<p>I want the most Pythonic way to round numbers just like Javascript does (through <code>Math.round()</code>). They're actually slightly different, but this difference can make huge difference for my application.</p>  <p><strong>Using <code>round()</code> method from Python 3:</strong></p>  <pre><code>// Returns the value 20 x = round(20.49)  // Returns the value 20 x = round(20.5)  // Returns the value -20 x = round(-20.5)  // Returns the value -21 x = round(-20.51) </code></pre>  <p><strong>Using <code>Math.round()</code> method from Javascript*:</strong></p>  <pre><code>// Returns the value 20 x = Math.round(20.49);  // Returns the value 21 x = Math.round(20.5);  // Returns the value -20 x = Math.round(-20.5);  // Returns the value -21 x = Math.round(-20.51); </code></pre>  <p>Thank you!</p>  <p><strong>References:</strong></p>  <ul> <li><a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/round"" rel=""noreferrer"">Math.round() explanation at Mozilla Developers Network (MDN)</a></li> </ul>"	<p>Instead of using round() function in python you can use the floor function and ceil function in python to accomplish your task.</p>  <p>floor(x+0.5)</p>  <p>or</p>  <p>ceil(x-0.5)</p>
34876585	"Pythonic way to ""round()"" like Javascript ""Math.round()""?"	javascript|python|python-3.x|math	2016-01-19 12:15:45.620000 UTC	"<p>I want the most Pythonic way to round numbers just like Javascript does (through <code>Math.round()</code>). They're actually slightly different, but this difference can make huge difference for my application.</p>  <p><strong>Using <code>round()</code> method from Python 3:</strong></p>  <pre><code>// Returns the value 20 x = round(20.49)  // Returns the value 20 x = round(20.5)  // Returns the value -20 x = round(-20.5)  // Returns the value -21 x = round(-20.51) </code></pre>  <p><strong>Using <code>Math.round()</code> method from Javascript*:</strong></p>  <pre><code>// Returns the value 20 x = Math.round(20.49);  // Returns the value 21 x = Math.round(20.5);  // Returns the value -20 x = Math.round(-20.5);  // Returns the value -21 x = Math.round(-20.51); </code></pre>  <p>Thank you!</p>  <p><strong>References:</strong></p>  <ul> <li><a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/round"" rel=""noreferrer"">Math.round() explanation at Mozilla Developers Network (MDN)</a></li> </ul>"	"<p>The behavior of Python's <code>round</code> function changed between Python 2 and Python 3.  But it looks like you want the following, which will work in either version:</p>  <pre><code>math.floor(x + 0.5) </code></pre>  <p>This should produce the behavior you want.</p>"
34876585	"Pythonic way to ""round()"" like Javascript ""Math.round()""?"	javascript|python|python-3.x|math	2016-01-19 12:15:45.620000 UTC	"<p>I want the most Pythonic way to round numbers just like Javascript does (through <code>Math.round()</code>). They're actually slightly different, but this difference can make huge difference for my application.</p>  <p><strong>Using <code>round()</code> method from Python 3:</strong></p>  <pre><code>// Returns the value 20 x = round(20.49)  // Returns the value 20 x = round(20.5)  // Returns the value -20 x = round(-20.5)  // Returns the value -21 x = round(-20.51) </code></pre>  <p><strong>Using <code>Math.round()</code> method from Javascript*:</strong></p>  <pre><code>// Returns the value 20 x = Math.round(20.49);  // Returns the value 21 x = Math.round(20.5);  // Returns the value -20 x = Math.round(-20.5);  // Returns the value -21 x = Math.round(-20.51); </code></pre>  <p>Thank you!</p>  <p><strong>References:</strong></p>  <ul> <li><a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/round"" rel=""noreferrer"">Math.round() explanation at Mozilla Developers Network (MDN)</a></li> </ul>"	"<pre><code>import math def roundthemnumbers(value):     x = math.floor(value)     if (value - x) &lt; .50:         return x     else:         return math.ceil(value) </code></pre>  <p>Haven't had my coffee yet, but that function should do what you need.  Maybe with some minor revisions.</p>"
34877986	Sequence of item in recursive call method using javascript / Python(same prob except syntax)	javascript|recursion	2016-01-19 13:23:57.237000 UTC	"<p>working with recursive method makes me thing about the sequence of items how they pop out from array and how they were displayed in console log, can anybody help me to understand it, here below given array will pop out in the sequence 11, 21, 13, 14 but the alert after recursive call the alert will show the value in sequence, 14, 13, 21, 11 ? Thanks in advance</p>  <pre><code>var arr = [11, 21, 13, 14]  function reverse(arr){     alert('in method')     if(arr.length &gt; 0){     var item = arr.splice(0, 1);     alert(""item before recursive call "" + item)     reverse(arr)     alert(""item after recursive call "" + item)   } }  reverse(arr)  </code></pre>"	<p>the alert does reverse cause you are calling  reverse(arr) so the array is called out in a reversed order</p>
34877986	Sequence of item in recursive call method using javascript / Python(same prob except syntax)	javascript|recursion	2016-01-19 13:23:57.237000 UTC	"<p>working with recursive method makes me thing about the sequence of items how they pop out from array and how they were displayed in console log, can anybody help me to understand it, here below given array will pop out in the sequence 11, 21, 13, 14 but the alert after recursive call the alert will show the value in sequence, 14, 13, 21, 11 ? Thanks in advance</p>  <pre><code>var arr = [11, 21, 13, 14]  function reverse(arr){     alert('in method')     if(arr.length &gt; 0){     var item = arr.splice(0, 1);     alert(""item before recursive call "" + item)     reverse(arr)     alert(""item after recursive call "" + item)   } }  reverse(arr)  </code></pre>"	"<p>it's due to Tail Call recursion(or tail-end recursion) and  the value of <strong>item</strong> is saved on the call stack.  <strong>In assembly</strong> With out Tail call :</p>  <pre><code> `foo:   call B   call A   ret </code></pre>  <p>Tail call elimination replaces the last two lines with a single jump instruction</p>  <pre><code>foo: call B jmp  A </code></pre>  <p>for more info you can use this link <a href=""http://www.sitepoint.com/recursion-functional-javascript/"" rel=""nofollow"">http://www.sitepoint.com/recursion-functional-javascript/</a>`` </p>"
34878532	Feeding a server information from JavaScript methods in Python?	javascript|python|ajax|client-server|urllib2	2016-01-19 13:49:26.830000 UTC	"<p>I'm looking to automate registering to workouts by letting Python do it at set times (e.g every wednesday at 00:00). Looking at the source code I get when I am logged in, the site has the following snippet:</p>  <pre><code>function getBookingDetails(booking_id, activity_id, center_id, activity_date, clicked_element) { $.ajax({     type:""GET"",     dataType:""json"",     url:""//censored"",     data:{         action:""get_booking_details"",         booking_id:booking_id,         activity_id:activity_id,         center_id:center_id,         date:activity_date     },     success:function (data) {         if (data.success) {             //console.log(data);             showBookingModal(data);         } else if (data.error_message) {             alert(data.error_message);         }     } }); }  $(document).ready(function() {  $('.buymodalclose').click(function() {     $('#buymodal').modal('hide'); })  $('#confirm-booking-button').click(function () { $(this).attr(""disabled"", ""disabled""); $('#modal_form').hide(); $('#modal_loading').show();  $.ajax({     type:""GET"",     dataType:""json"",     url:""//censored"",     data:{         action:""confirm_booking"",         center_id:$(this).data('centerid'),         booking_id:$(this).data('bookingid'),         activity_id:$(this).data('activityid')     },     success:function (data) {         if (data.success) {             bookingResult(data); </code></pre>  <p>Is there any way I can feed the parameters (and possibly get them?) directly to the server? E.g by sending a <code>urllib request</code> ?</p>  <p>The other way I suppose would be to read the page step by step, extract the information needed and in some way send that information to the booking page?</p>"	
34941103	Issue with fetching data from python handler to javascript using jinja2 and google app engine	javascript|python|google-app-engine|jinja2|webapp2	2016-01-22 07:20:11.270000 UTC	"<p>I am working on a python based Google App Engine project.</p>  <p>And in that I was trying to send <strong>data(python list)</strong> from <strong>python handler to javascript using jinja2</strong> but cannot receive data in javascript. </p>  <p>I even tried to send simple key-value instead of list and json but that too didn't worked. </p>  <p>Here is my code for python handler : </p>  <pre><code>mainDataList=[]  keyList = ['key1','key2','key3'] valueList = ['value1', 'value2', 'value3']  mainDataList.append(keyList) mainDataList.append(valueList)  template_values={     'keyList':mainDataList[0],     'valueList':mainDataList[1], }  template = jinja_environment.get_template('main.html') self.response.out.write(template.render(template_values)) </code></pre>  <p>Code inside head tag </p>  <pre><code>&lt;script type=""text/javascript""&gt;         var keyListToPopulate = {{ keyList | safe }};         var valueListToPopulate = {{ valueList | safe }};     &lt;/script&gt; </code></pre>  <p>Can you please help me with the error I am making.</p>"	"<p>Putting data into inline javascript like that is just string processing.  You need to put the right string into your template variables.  <code>json.dumps()</code> produces the string that you need.  Something like this should work:</p>  <pre><code>template = jinja_environment.get_template('main.html') self.response.out.write(template.render({""keyList"":json.dumps(range(5)),                                          ""valueList"":json.dumps([""A"", ""B""])}                                         )) </code></pre>"
34995922	Use python to add to javascript array in javascript file	javascript|python|arrays	2016-01-25 15:14:35.617000 UTC	"<p>I have this array stored in <code>versions.js</code></p>  <pre><code>var cc_versions = [      ""2016-01-22"",     ""2016-01-21"",  ];  var cs_versions = [      ""2016-01-23"",     ""2016-01-21"",  ]; </code></pre>  <p>I have been trying to figure out a way to write new data to the top of the array inside the javascript file with python. I run a python script on my computer almost every day and I want to update this array when I run it so that I can have a website load the versions. Is it possible to do this? I know I could write to the file, but it would just go to the bottom of the file outside of the array. Also there will be multiple arrays, so I'm trying to find some python script that can interact with a javascript file so I can target specific arrays.</p>"	"<p>You could also try using Genshi template language. One of the tags there is </p>  <pre><code>&lt;?python ... ?&gt; </code></pre>  <p>for example:</p>  <pre><code>&lt;?python         import json         dateInit = []         selectInit = []         for fi in form_items:             if (fi[""type""] == ""date""):                 dateInit.append(fi[""id""])             if ""attrs"" in fi and ""format-select"" in fi[""attrs""]:                 selectInit.append(fi[""id""])             if not ""attrs"" in fi:                 fi[""attrs""] = {}         jsonDateInit = json.dumps(dateInit)         jsonSelectInit = json.dumps(selectInit)   ?&gt; </code></pre>  <p>Your response should contain form_items dictionary processed somewhere on the back-end. Then in javascript you can 'accept' the variables using '$'-sign:</p>  <pre><code>var dateitems = JSON.stringify($jsonDateInit); var select_items = JSON.stringify($jsonSelectInit); </code></pre>"
34995922	Use python to add to javascript array in javascript file	javascript|python|arrays	2016-01-25 15:14:35.617000 UTC	"<p>I have this array stored in <code>versions.js</code></p>  <pre><code>var cc_versions = [      ""2016-01-22"",     ""2016-01-21"",  ];  var cs_versions = [      ""2016-01-23"",     ""2016-01-21"",  ]; </code></pre>  <p>I have been trying to figure out a way to write new data to the top of the array inside the javascript file with python. I run a python script on my computer almost every day and I want to update this array when I run it so that I can have a website load the versions. Is it possible to do this? I know I could write to the file, but it would just go to the bottom of the file outside of the array. Also there will be multiple arrays, so I'm trying to find some python script that can interact with a javascript file so I can target specific arrays.</p>"	"<pre><code>import json   NEW_VARIABLES = [1, 2, 3]  with open('your/json/file.json') as data_file:     json_data = json.load(data_file)  # insert at the beginning of the list json_data['cc_version'].insert(0, 'something new') json_data['cs_version'] = NEW_VARIABLES + json_data['cs_version']   # write to json file after modifying data  with open('your/json/file.json', 'w') as output_file:     json.dump(json_data, output_file) </code></pre>"
34995922	Use python to add to javascript array in javascript file	javascript|python|arrays	2016-01-25 15:14:35.617000 UTC	"<p>I have this array stored in <code>versions.js</code></p>  <pre><code>var cc_versions = [      ""2016-01-22"",     ""2016-01-21"",  ];  var cs_versions = [      ""2016-01-23"",     ""2016-01-21"",  ]; </code></pre>  <p>I have been trying to figure out a way to write new data to the top of the array inside the javascript file with python. I run a python script on my computer almost every day and I want to update this array when I run it so that I can have a website load the versions. Is it possible to do this? I know I could write to the file, but it would just go to the bottom of the file outside of the array. Also there will be multiple arrays, so I'm trying to find some python script that can interact with a javascript file so I can target specific arrays.</p>"	"<p>I ended up using json as suggested in the comments </p>  <pre><code>import json with open(""cc_versions.txt"") as data:     json = json.load(data)  dates = json[""dates""]  dates.append(""2016-01-21"") dates = set(dates) dates = sorted(dates, key=lambda d: map(int, d.split('-'))) dates = dates[::-1]  import json     with open(""cc_versions.txt"", ""w"") as outfile:     json.dump({'dates':dates}, outfile, indent=4) </code></pre>"
35021121	python selenium check if javascript alert/pupup is open	javascript|jquery|python|selenium	2016-01-26 18:27:44.587000 UTC	"<p>I have this html code :</p>  <pre><code>&lt;html&gt; &lt;head&gt; &lt;meta http-equiv=""Content-Type"" content=""text/html; charset=utf-8"" /&gt; &lt;/head&gt; &lt;body&gt; &lt;script type=""text/javascript""&gt; alert(""Hello world""); &lt;/script&gt; &lt;/body&gt; &lt;/html&gt; </code></pre>  <p>Whit python selenium i need to check if this hello popup is open, problem is this popup have every time different text content, how can i check if this popup is open or not ?</p>  <p>My start code :</p>  <pre><code>driver = webdriver.Chrome() driver.get(""https://google.com/test.html"") </code></pre>"	"<p>try this</p>  <pre><code>from selenium.common.exceptions import NoAlertPresentException from selenium import webdriver import unittest  class Foo(unittest.TestCase):      def setUp(self):         self.selenium = webdriver.Firefox()         self.selenium.maximize_window()      def is_alert_visible(self):         alert = self.selenium.switch_to_alert()         try:             return alert.text         except (NoAlertPresentException,):             return False      def test_page(self):         self.selenium.get('url')         self.assertTrue(self.is_alert_visible())      def tearDown(self):         self.selenium.quit()  if __name__ == '__main__':     unittest.main() </code></pre>  <p>or you can use <code>webdriverwait</code> to wait specific amount of time for that alert and raise <code>TimeoutException</code> if it doesn't show up</p>  <pre><code>from selenium.webdriver.support.ui import WebDriverWait as Wait from selenium.webdriver.support import expected_conditions as EC from selenium.common.exceptions import TimeoutException  def is_alert_visible(self):     try:         alert = Wait(self.selenium, 5).until(EC.alert_is_present())         return alert.text     except (TimeoutException,):         return False  def test_page(self):     self.selenium.get('url')     self.assertTrue(self.is_alert_visible()) </code></pre>"
35027461	Sending form data to HTML Page and Retrieving it with Javascript without any PHP/Python	javascript|html|forms	2016-01-27 01:51:23.783000 UTC	"<p>I've read a few articles and a question thread on sending form data to another html page, but the solutions didn't solve the issue for me.</p>  <p>Basically, I have a form with a bunch of data:</p>  <pre><code>&lt;form id=""registration"" name=""registration"" action=""register.html"" method=""POST""&gt; </code></pre>  <p>In register.html, I tried accessing an input text field with id and name as ""username"" with this:</p>  <p>var x = document.getElementById(""registration"").elements.namedItem(""username"").value;</p>  <p>The console stated that it cannot read property of null. How can I access these values with Javascript only? Frameworks are fine but not PHP /Python.</p>"	"<p>I ran into something like this the other day.  Turns out you can just get the values with jQuery.  </p>  <pre><code>var userName = $(""input[type=text][name=username]"").val(); </code></pre>  <p>Just put it into a function that's called in the form's onsubmit.</p>  <pre><code>&lt;script&gt;   function getFormData() {     var userName = $(""input[type=text][name=username]"").val();     // Do what you want with the data     return true;   } &lt;/script&gt; &lt;form id=""registration"" name=""registration"" action=""register.html"" onsubmit=""return getFormData();"" method=""POST""&gt;   &lt;input type=""text"" name=""username"" /&gt; &lt;/form&gt; </code></pre>  <p>However, this doesn't keep the data when you load the next page.  To do that, just commit the value into sessionStorage.</p>  <pre><code>function saveFormData() {   var userName = $(""input[type=text][name=username]"").val();   sessionStorage.setItem(""user"", userName);   return true; } </code></pre>  <p>And then on the next page (the one you're calling resgister.html) you can use this code to retrieve it.</p>  <pre><code>var userName = sessionStorage.getItem(""user""); </code></pre>  <p>I hope this helps!</p>"
35027461	Sending form data to HTML Page and Retrieving it with Javascript without any PHP/Python	javascript|html|forms	2016-01-27 01:51:23.783000 UTC	"<p>I've read a few articles and a question thread on sending form data to another html page, but the solutions didn't solve the issue for me.</p>  <p>Basically, I have a form with a bunch of data:</p>  <pre><code>&lt;form id=""registration"" name=""registration"" action=""register.html"" method=""POST""&gt; </code></pre>  <p>In register.html, I tried accessing an input text field with id and name as ""username"" with this:</p>  <p>var x = document.getElementById(""registration"").elements.namedItem(""username"").value;</p>  <p>The console stated that it cannot read property of null. How can I access these values with Javascript only? Frameworks are fine but not PHP /Python.</p>"	"<p>A webpage can't receive POST data. Send it using method=""GET"" instead, then retrieve it on the target page using JS as follows:</p>  <pre><code>&lt;script&gt; var params = window.location.search.slice(1).split(""&amp;""); // params is [""say=Hi"", ""to=Mom""] &lt;/script&gt; </code></pre>"
35027461	Sending form data to HTML Page and Retrieving it with Javascript without any PHP/Python	javascript|html|forms	2016-01-27 01:51:23.783000 UTC	"<p>I've read a few articles and a question thread on sending form data to another html page, but the solutions didn't solve the issue for me.</p>  <p>Basically, I have a form with a bunch of data:</p>  <pre><code>&lt;form id=""registration"" name=""registration"" action=""register.html"" method=""POST""&gt; </code></pre>  <p>In register.html, I tried accessing an input text field with id and name as ""username"" with this:</p>  <p>var x = document.getElementById(""registration"").elements.namedItem(""username"").value;</p>  <p>The console stated that it cannot read property of null. How can I access these values with Javascript only? Frameworks are fine but not PHP /Python.</p>"	"<p>You can easily target the selectors by querySelector. The value will no longer be null.</p>  <pre><code>&lt;form id=""registration"" name=""registration"" action=""register.html"" method=""POST""&gt;   &lt;input type=""text"" class=""username"" value=""abcdefg""&gt; &lt;/form&gt;  &lt;script&gt; var x = document.querySelector(""#registration .username"").value; //check your code in devtools console.log(x); &lt;/script&gt; </code></pre>  <p><a href=""https://jsfiddle.net/qmbo5atc/"" rel=""nofollow"">jsfiddle</a></p>"
35027461	Sending form data to HTML Page and Retrieving it with Javascript without any PHP/Python	javascript|html|forms	2016-01-27 01:51:23.783000 UTC	"<p>I've read a few articles and a question thread on sending form data to another html page, but the solutions didn't solve the issue for me.</p>  <p>Basically, I have a form with a bunch of data:</p>  <pre><code>&lt;form id=""registration"" name=""registration"" action=""register.html"" method=""POST""&gt; </code></pre>  <p>In register.html, I tried accessing an input text field with id and name as ""username"" with this:</p>  <p>var x = document.getElementById(""registration"").elements.namedItem(""username"").value;</p>  <p>The console stated that it cannot read property of null. How can I access these values with Javascript only? Frameworks are fine but not PHP /Python.</p>"	"<p>I'm sure that none of this can be safe, so use caution.</p>  <p>If you don't care about the info being super obvious, then you can make the action of the the form the new page you want, and the method can be 'GET'.</p>  <p>EDIT: I should mention this will go through the url, as such</p>  <pre><code>domain.com?someKey=someValue&amp;someOtherKey=someOtherValue </code></pre>  <p>On the new page, you can parse the url for the query string for everything.</p>  <p>You can grab that stuff out of the 'href' property from the location.</p>  <pre><code>window.location.href  // * Credit for this puppy goes to theharls, nice and fast var params = window.location.search.slice(1).split(""&amp;""); //=&gt; [""say=Hi"", ""to=Mom""] </code></pre>  <p>Another option on (modern ?) browsers is Local Storage. Use javascript to to set things like,</p>  <pre><code>localStorage.setItem('foo', 'bar'); </code></pre>  <p>Great reference for local storage here. <a href=""https://developer.mozilla.org/en-US/docs/Web/API/Window/localStorage"" rel=""nofollow"">https://developer.mozilla.org/en-US/docs/Web/API/Window/localStorage</a> </p>"
35134035	Selenium - Python - Javascript drop-down menu option value	javascript|python|selenium	2016-02-01 15:17:50.123000 UTC	"<p>Any thoughts on how to select and click on one of the two drop down options for this code snippet. I have tried numerous approaches suggested in the forum, but could not get any to work.  Thanks in advance!</p>  <pre><code> &lt;div class=""dropdownButton""&gt;     &lt;li id=""Li1"" class=""r_dd1"" onclick=""showDropdown1(event,this);""&gt;         &lt;a class=""r_ddh1"" id=""columnYearType""&gt;10 Years&lt;/a&gt;         &lt;ul style=""display: block;""&gt;             &lt;li&gt;&lt;a href=""javascript:SRT_stocFund.CurrentPeriod(5, this)""&gt;5&amp;nbsp;&lt;span class=""columnType""&gt;Years&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;              &lt;li&gt;&lt;a href=""javascript:SRT_stocFund.CurrentPeriod(10, this)""&gt;                 10 &lt;span class=""columnType""&gt;                     Years                                         &lt;/span&gt;&lt;/a&gt;             &lt;/li&gt;         &lt;/ul&gt;     &lt;/li&gt; &lt;/div&gt; </code></pre>  <p>The xpath for the javascript:SRT_stocFund.CurrentPeriod 5 and 10 year options are:</p>  <pre><code>//*[@id=""Li1""]/ul/li[1]/a  //*[@id=""Li1""]/ul/li[2]/a </code></pre>"	"<p>Perhaps the following will work:</p>  <pre><code>Select select = new Select(driver.findElement(By.xpath(""//path_to_drop_down""))); select.deselectAll(); select.selectByVisibleText(""10 Years""); </code></pre>"
35146632	Web Socket between Javascript and Python	javascript|python|sockets	2016-02-02 06:35:01.783000 UTC	"<p>I have a blog on blogger.com, and they have a section where you can put html/javascript code in. I'm a total beginner to javascript/html but I'm somewhat adept at python. I want to open a listening socket on python(my computer) so that everytime a guest looks at my blog the javascript sends my python socket some data, like ip or datetime for example. I looked around on the internet, and ended up with the tornado module for my listening socket, but I have a hard time figuring out the javascript code. </p>  <p>Basically it involves no servers.</p>"	"<p>Maybe you need to deploy the website on your own server,because listening for client connecting is server side things,but the blogger.com host the server,the javascript section who provide to you is just for static pages.</p>  <p>If the blogger.com provide you api,that have some function like </p>  <p><code>app.on(""connection"",function(){ /*send data to your python program*/ })</code></p>"
35154766	Elasticsearch result from Python client not parsed as json object by javascript	javascript|python|json|parsing|elasticsearch	2016-02-02 13:25:08.780000 UTC	"<p>I am unable to create a Javascript object from the Elasticsearch(2.1.1) response I get from my Python (2.7) client.</p>  <p>Python code:</p>  <pre><code>es=Elasticsearch(); @app.route('/output') def findSpots():     lat = request.args.get('lati')     lon = request.args.get('longi')     res=es.search(index=""park_reg"", doc_type=""parksgn"",body={""from"": 0, ""size"": 1, ""query"": {""filtered"": {""filter"":  {""geo_distance"":  {""distance"": ""500km"",""location"": {""lat"":lat,""lon"":lon}}}}}})  return render_template(""output.html"",lat=lat,lon=lon, res=json.dumps(res)) </code></pre>  <p>Javascript code:</p>  <pre><code>var res = ""{{res}}""; console.log(typeof(res)); //Gives string document.write(res); document.write(""&lt;/br&gt;"") document.write(""&lt;/br&gt;"")  //Tried this as JSON.parse(res) was giving an error var resStr =JSON.stringify(res); document.write(resStr); document.write(""&lt;/br&gt;"") document.write(""&lt;/br&gt;"")  var resJSON = JSON.parse(resStr); document.write(resJSON); </code></pre>  <p>Response:</p>  <pre><code>{""hits"": {""hits"": [{""_score"": 1.0, ""_type"": ""parksgn"", ""_id"": ""13452823"", ""_source"": {""canParkDays"": [""""], ""x"": 965522.6237, ""seqnum"": 5, ""ordernum"": ""P-087419"", ""signdesc"": ""2 HOUR PARKING 9AM-7PM EXCEPT SUNDAY"", ""canParkDuration"": -1, ""noParkDays"": [""""], ""SG_MUTCD_C"": ""R7-182R"", ""signfc"": """", ""canParkTime"": [""""], ""location"": {""lat"": ""40.591472"", ""lon"": ""-74.06743""}, ""arrow"": """", ""canPark"": ""true"", ""y"": 154772.6633, ""distfromcurb"": 310, ""borough"": ""S"", ""noParkTime"": [""""], ""id"": 13452823}, ""_index"": ""park_reg""}], ""total"": 376893, ""max_score"": 1.0}, ""_shards"": {""successful"": 5, ""failed"": 0, ""total"": 5}, ""took"": 35, ""timed_out"": false}  ""{""hits"": {""hits"": [{""_score"": 1.0, ""_type"": ""parksgn"", ""_id"": ""13452823"", ""_source"": {""canParkDays"": [""""], ""x"": 965522.6237, ""seqnum"": 5, ""ordernum"": ""P-087419"", ""signdesc"": ""2 HOUR PARKING 9AM-7PM EXCEPT SUNDAY"", ""canParkDuration"": -1, ""noParkDays"": [""""], ""SG_MUTCD_C"": ""R7-182R"", ""signfc"": """", ""canParkTime"": [""""], ""location"": {""lat"": ""40.591472"", ""lon"": ""-74.06743""}, ""arrow"": """", ""canPark"": ""true"", ""y"": 154772.6633, ""distfromcurb"": 310, ""borough"": ""S"", ""noParkTime"": [""""], ""id"": 13452823}, ""_index"": ""park_reg""}], ""total"": 376893, ""max_score"": 1.0}, ""_shards"": {""successful"": 5, ""failed"": 0, ""total"": 5}, ""took"": 35, ""timed_out"": false}""  {""hits"": {""hits"": [{""_score"": 1.0, ""_type"": ""parksgn"", ""_id"": ""13452823"", ""_source"": {""canParkDays"": [""""], ""x"": 965522.6237, ""seqnum"": 5, ""ordernum"": ""P-087419"", ""signdesc"": ""2 HOUR PARKING 9AM-7PM EXCEPT SUNDAY"", ""canParkDuration"": -1, ""noParkDays"": [""""], ""SG_MUTCD_C"": ""R7-182R"", ""signfc"": """", ""canParkTime"": [""""], ""location"": {""lat"": ""40.591472"", ""lon"": ""-74.06743""}, ""arrow"": """", ""canPark"": ""true"", ""y"": 154772.6633, ""distfromcurb"": 310, ""borough"": ""S"", ""noParkTime"": [""""], ""id"": 13452823}, ""_index"": ""park_reg""}], ""total"": 376893, ""max_score"": 1.0}, ""_shards"": {""successful"": 5, ""failed"": 0, ""total"": 5}, ""took"": 35, ""timed_out"": false} </code></pre>  <p>I verified ""res"" is a valid JSON, but still it isn't working. ""resJSON"" also gives string.</p>"	"<p>So this is what my response looked like on the console:</p>  <pre><code>""{&amp;#34;hits&amp;#34;: {&amp;#34;hits&amp;#34;: [{&amp;#34;_score&amp;#34;: 1.0, &amp;#34;_type&amp;#34;: &amp;#34;parksgn&amp;#34;, &amp;#34;_id&amp;#34;: &amp;#34;13452823&amp;#34;, &amp;#34;_source&amp;#34;: {&amp;#34;canParkDays&amp;#34;: [&amp;#34;&amp;#34;], &amp;#34;x&amp;#34;: 965522.6237, &amp;#34;seqnum&amp;#34;: 5, &amp;#34;ordernum&amp;#34;: &amp;#34;P-087419&amp;#34;, &amp;#34;signdesc&amp;#34;: &amp;#34;2 HOUR PARKING 9AM-7PM EXCEPT SUNDAY&amp;#34;, &amp;#34;canParkDuration&amp;#34;: -1, &amp;#34;noParkDays&amp;#34;: [&amp;#34;&amp;#34;], &amp;#34;SG_MUTCD_C&amp;#34;: &amp;#34;R7-182R&amp;#34;, &amp;#34;signfc&amp;#34;: &amp;#34;&amp;#34;, &amp;#34;canParkTime&amp;#34;: [&amp;#34;&amp;#34;], &amp;#34;location&amp;#34;: {&amp;#34;lat&amp;#34;: &amp;#34;40.591472&amp;#34;, &amp;#34;lon&amp;#34;: &amp;#34;-74.06743&amp;#34;}, &amp;#34;arrow&amp;#34;: &amp;#34;&amp;#34;, &amp;#34;canPark&amp;#34;: &amp;#34;true&amp;#34;, &amp;#34;y&amp;#34;: 154772.6633, &amp;#34;distfromcurb&amp;#34;: 310, &amp;#34;borough&amp;#34;: &amp;#34;S&amp;#34;, &amp;#34;noParkTime&amp;#34;: [&amp;#34;&amp;#34;], &amp;#34;id&amp;#34;: 13452823}, &amp;#34;_index&amp;#34;: &amp;#34;park_reg&amp;#34;}], &amp;#34;total&amp;#34;: 376893, &amp;#34;max_score&amp;#34;: 1.0}, &amp;#34;_shards&amp;#34;: {&amp;#34;successful&amp;#34;: 5, &amp;#34;failed&amp;#34;: 0, &amp;#34;total&amp;#34;: 5}, &amp;#34;took&amp;#34;: 18, &amp;#34;timed_out&amp;#34;: false}"" </code></pre>  <p>Just replacing &amp;#34 with double quotes ("") did the trick</p>  <pre><code>var res = ""{{res}}"".split(""&amp;#34;"").join(""\"""") var resJSON = JSON.parse(res) console.log(typeof(resJSON)) </code></pre>"
35211618	Issue scraping javascript generated content with Selenium and python	javascript|python|selenium|web-scraping	2016-02-04 21:05:59.217000 UTC	"<p>I'm trying to scrape real estate data off of this website: <a href=""http://www.seloger.com/list.htm?cp=40250&amp;org=advanced_search&amp;idtt=2&amp;pxmin=50000&amp;pxmax=200000&amp;surfacemin=20&amp;surfacemax=100&amp;idtypebien=2&amp;idtypebien=1&amp;idtypebien=11"" rel=""nofollow"">example</a> As you can see the relevant content is placed into article tags.</p>  <p>I'm running selenium with phantomjs:</p>  <pre><code>driver = webdriver.PhantomJS(executable_path=PJSpath) </code></pre>  <p>Then I generate the URL in python, because all search results are part of the link, so I can search what I'm looking for in the program without needing to fill out the form.</p>  <p>Before calling</p>  <pre><code>driver.get(engine_link) </code></pre>  <p>I copy engine_link to the clipboard and it opens fine in chrome. Next I wait for all possible redirects to happen:</p>  <pre><code>def wait_for_redirect(wdriver):     elem = wdriver.find_element_by_tag_name(""html"")     count = 0     while True:         count += 1         if count &gt; 5:             print(""Waited for redirect for 5 seconds!"")             return         time.sleep(1)         try:             elem = wdriver.find_element_by_tag_name(""html"")         except StaleElementReferenceException:             return </code></pre>  <p>Now at last I want to iterate over all <code>&lt;article&gt;</code> tags on the current page:</p>  <pre><code>for article in driver.find_elements_by_tag_name(""article""): </code></pre>  <p>But this loop never returns anything. The program doesn't find any article tags, I've tried it with xpath and css selectors. Moreover, the articles are enclosed in a section tag, that can't be found either.</p>  <p>Is there a problem with this specific type of tags in Selenium or am I missing something JS related here? At the bottom of the page there are JavaScript templates whose naming suggests that they generate the search results.</p>  <p>Any help appreciated!</p>"	"<p><a href=""https://stackoverflow.com/a/18433763/771848"">Pretend not to be <code>PhantomJS</code></a> and add an <a href=""https://selenium-python.readthedocs.org/waits.html#explicit-waits"" rel=""nofollow noreferrer"">Explicit Wait</a> (worked for me):</p>  <pre><code>from selenium import webdriver from selenium.webdriver import DesiredCapabilities from selenium.webdriver.common.by import By from selenium.webdriver.support.wait import WebDriverWait from selenium.webdriver.support import expected_conditions as EC  # set a custom user-agent user_agent = ""Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/29.0.1547.57 Safari/537.36"" dcap = dict(DesiredCapabilities.PHANTOMJS) dcap[""phantomjs.page.settings.userAgent""] = user_agent  driver = webdriver.PhantomJS(desired_capabilities=dcap) driver.get(""http://www.seloger.com/list.htm?cp=40250&amp;org=advanced_search&amp;idtt=2&amp;pxmin=50000&amp;pxmax=200000&amp;surfacemin=20&amp;surfacemax=100&amp;idtypebien=2&amp;idtypebien=1&amp;idtypebien=11"")  # wait for arcitles to be present wait = WebDriverWait(driver, 10) wait.until(EC.presence_of_element_located((By.TAG_NAME, ""article"")))  # get articles for article in driver.find_elements_by_tag_name(""article""):     print(article.text) </code></pre>"
35261768	"multiple dynamic instances of form using python, javascript, or ajax"	javascript|jquery|python|ajax	2016-02-08 02:57:51.983000 UTC	"<p>I would like to accomplish the following within a single webpage:</p>  <p>Prompt the user to enter an amount of days. Based on the number they enter, multiple instances of a form will be created. So if they enter 5 days, then there may be 5 buttons that appear and they click on each button and fill each form and when they are done entering the values they hit submit when they are done with all of the forms. </p>  <p>I would appreciate any insight on what the best approach would be to accomplishing this. I'm doing some back-end code in python and using JavaScript for the front-end, and I did some reading and I feel like this might be accomplished with AJAX...that is if I am understanding the articles correctly. </p>  <p>Thank you.</p>"	
35266360	ipython notebook requires javascript - on firefox web browser	javascript|firefox|ipython-notebook|jupyter-notebook	2016-02-08 09:40:17.807000 UTC	"<p>I'm trying to run jupyter notebook from a terminal on Xfce Ubuntu machine.  I typed in the command:</p>  <p>jupyter notebook --browser=firefox</p>  <p>The firefox browser opens, but it is empty and with the following error:</p>  <p>""IPython Notebook requires JavaScript. Please enable it to proceed.""</p>  <p>I searched the web on how to enable JavaScript on Ipython NoteBook but didn't find an answer. I would appreciate a lot any help. Thanks!</p>"	"<ol> <li><p>In the address bar, type ""about:config"" (with no quotes), and press Enter. Click ""I'll be careful, I promise"".</p></li> <li><p>In the search bar, search for ""javascript.enabled"" (with no quotes). Right click the result named ""javascript.enabled"" and click ""Toggle"". JavaScript is now enabled.</p></li> <li><p>To Re-disable JavaScript, repeat these steps.</p></li> </ol>"
35266360	ipython notebook requires javascript - on firefox web browser	javascript|firefox|ipython-notebook|jupyter-notebook	2016-02-08 09:40:17.807000 UTC	"<p>I'm trying to run jupyter notebook from a terminal on Xfce Ubuntu machine.  I typed in the command:</p>  <p>jupyter notebook --browser=firefox</p>  <p>The firefox browser opens, but it is empty and with the following error:</p>  <p>""IPython Notebook requires JavaScript. Please enable it to proceed.""</p>  <p>I searched the web on how to enable JavaScript on Ipython NoteBook but didn't find an answer. I would appreciate a lot any help. Thanks!</p>"	"<p>javascript has to be enabled in firefox browser it is turned off. to turn it on do this</p>  <blockquote>   <p>To enable JavaScript for Mozilla Firefox: Click the Tools drop-down menu and select Options. Check the boxes next to Block pop-up windows, Load images automatically, and Enable JavaScript. Refresh your browser by right-clicking anywhere on the page and selecting Reload, or by using the Reload button in the toolbar.</p> </blockquote>"
35292714	django : how to read a date from javascript to python function	javascript|django|datetime	2016-02-09 12:57:40.887000 UTC	"<p>in my javascript file, I have a function</p>  <pre><code>function saveMyData(event, dayDelta, minuteDelta) {  montitre = event.title; mondepart = event.start; mafin = event.end;`  $.getJSON(""{% url events_drag %}"", {'title': montitre, 'start': mondepart,  'end': mafin},  function(data) {  });  } </code></pre>  <p>if i put a message alert inside the function</p>  <pre><code>alert(mafin); </code></pre>  <p>I display :</p>  <pre><code>Tue Aug 04 2015 16:00:00 GMT+0200 </code></pre>  <p>I want to send <code>mafin</code> to a python function with <code>getJSON</code> and read <code>mafin</code> with this code :</p>  <pre><code>def eventsdrag(request):     end = float(request.GET.get('end'))     end = datetime.datetime.fromtimestamp(end) </code></pre>  <p>How to convert <code>'Tue Aug 04 2015 16:00:00 GMT+0200'</code> in a number and read this number with <code>request.GET.get</code>?</p>"	
35296860	Executing a page's JavaScript at a low level with Python?	python|html|web-scraping|lxml|urllib2	2016-02-09 16:16:12.027000 UTC	"<p>When <a href=""https://www.geckoboard.com/careers/"" rel=""nofollow noreferrer"">this</a> page is scraped with urllib2:</p>  <pre><code>url = https://www.geckoboard.com/careers/ response = urllib2.urlopen(url) content = response.read()  </code></pre>  <p>the following element (the link to the job) is nowhere to be found in the source (<code>content</code>) </p>  <p><a href=""https://i.stack.imgur.com/z6k2M.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/z6k2M.png"" alt=""enter image description here""></a></p>  <p>Taking a look at the full source that gets rendered in a browser:</p>  <p><a href=""https://i.stack.imgur.com/tbr3F.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/tbr3F.png"" alt=""enter image description here""></a></p>  <p>So it would appear that the FRONT-END ENGINEER element is dynamically loaded by Javascript. Is it possible to have this Javascript executed by urllib2 (or other low-level library) without involving e.g. Selenium, BeautifulSoup, or other?</p>"	"<p>I think you're looking for something like this: <a href=""https://github.com/scrapinghub/splash"" rel=""nofollow"">https://github.com/scrapinghub/splash</a></p>"
35296860	Executing a page's JavaScript at a low level with Python?	python|html|web-scraping|lxml|urllib2	2016-02-09 16:16:12.027000 UTC	"<p>When <a href=""https://www.geckoboard.com/careers/"" rel=""nofollow noreferrer"">this</a> page is scraped with urllib2:</p>  <pre><code>url = https://www.geckoboard.com/careers/ response = urllib2.urlopen(url) content = response.read()  </code></pre>  <p>the following element (the link to the job) is nowhere to be found in the source (<code>content</code>) </p>  <p><a href=""https://i.stack.imgur.com/z6k2M.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/z6k2M.png"" alt=""enter image description here""></a></p>  <p>Taking a look at the full source that gets rendered in a browser:</p>  <p><a href=""https://i.stack.imgur.com/tbr3F.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/tbr3F.png"" alt=""enter image description here""></a></p>  <p>So it would appear that the FRONT-END ENGINEER element is dynamically loaded by Javascript. Is it possible to have this Javascript executed by urllib2 (or other low-level library) without involving e.g. Selenium, BeautifulSoup, or other?</p>"	<p>The pieces of information are loaded using some <code>ajax request</code>. You could use <code>firebug</code> extension for <code>mozilla</code> or google chrome has it's own tool to get theese details. Just hit <code>f12</code> in google chrome while opening the URL. You can find the complete details there.</p>  <p>There you will find a request with url <code>https://app.recruiterbox.com/widget/13587/openings/</code></p>  <p>Information from the above url is rendered in that web page.</p>
35296860	Executing a page's JavaScript at a low level with Python?	python|html|web-scraping|lxml|urllib2	2016-02-09 16:16:12.027000 UTC	"<p>When <a href=""https://www.geckoboard.com/careers/"" rel=""nofollow noreferrer"">this</a> page is scraped with urllib2:</p>  <pre><code>url = https://www.geckoboard.com/careers/ response = urllib2.urlopen(url) content = response.read()  </code></pre>  <p>the following element (the link to the job) is nowhere to be found in the source (<code>content</code>) </p>  <p><a href=""https://i.stack.imgur.com/z6k2M.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/z6k2M.png"" alt=""enter image description here""></a></p>  <p>Taking a look at the full source that gets rendered in a browser:</p>  <p><a href=""https://i.stack.imgur.com/tbr3F.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/tbr3F.png"" alt=""enter image description here""></a></p>  <p>So it would appear that the FRONT-END ENGINEER element is dynamically loaded by Javascript. Is it possible to have this Javascript executed by urllib2 (or other low-level library) without involving e.g. Selenium, BeautifulSoup, or other?</p>"	"<p>From what I understand, you are building something <em>generic</em> for multiple web-sites and don't want to go deep down in how a certain site is loaded, what requests are made under-the-hood to construct the page. In this case, a <em>real browser is your friend</em> - load the page in a real browser automated via <a href=""https://selenium-python.readthedocs.org/"" rel=""nofollow noreferrer""><code>selenium</code></a> - then, once the page is loaded, pass the <code>.page_source</code> to <code>lxml.html</code> (from what I see this is your HTML parser of choice) for further parsing.</p>  <p>If you don't want a browser to show up or you don't have a display, you can go headless - <a href=""http://phantomjs.org/"" rel=""nofollow noreferrer""><code>PhantomJS</code></a> or a regular browser on a <a href=""https://stackoverflow.com/questions/6183276/how-do-i-run-selenium-in-xvfb"">virtual display</a>.</p>  <p>Here is a sample code to get you started:</p>  <pre><code>from lxml.html import fromstring from selenium import webdriver  driver = webdriver.PhantomJS() driver.set_page_load_timeout(15) driver.get(""https://www.geckoboard.com/careers/"")  # TODO: you might need a delay here  tree = fromstring(driver.page_source)  driver.close()  # TODO: parse HTML </code></pre>  <p>You should also know that, there are plenty of <a href=""https://selenium-python.readthedocs.org/locating-elements.html"" rel=""nofollow noreferrer"">methods to locate elements in selenium</a> and you might not even need a separate HTML parser here.</p>"
35323095	How to use JavaScript/Ajax and Python to edit local SQL database?	javascript|python|sql|ajax	2016-02-10 18:26:25.723000 UTC	"<p>I've developed the front-end of a web site using JavaScript.</p>  <p>I have a button that when it's clicked retrieves an integer value from another object on the website.</p>  <p>I have a local SQL database. How do I make SQL calls when this button is clicked?</p>  <p>I've seen answers with JavaScript/Ajax and PHP, but I don't want to use PHP.</p>  <p>Using JavaScript only, can I open a local SQL db and make SQL calls?  If yes, how?</p>  <p>If I can't do this using JavaScript only, can I use JavaScript/Ajax and Python? If yes, please post a reference or simple example.</p>"	"<p><strong>JQuery</strong> is a brilliant way to create live Database feeds in Website development. You can simple import the JavaScript files from CDN or Google or download and use it here: <a href=""https://jquery.com"" rel=""nofollow"">https://jquery.com</a></p>  <p>Front end:</p>  <pre><code>$(document).ready(function(){     $(""#idHere"").click(function(){         var testdata = document.getElementByID(""#idHere"").value;         var anothertestdata = document.getElementByID(""#idHere"").value;         $.ajax({         url: ""/inc/Database.php"",         data: {         example: testdata,        anotherexample: anothertestdata     },     success: function( data ) {         $( ""#idHere"" ).html( ""&lt;strong&gt;"" + data + ""&lt;/strong&gt; "" );     }   }); }); }); </code></pre>  <p>PHP file:</p>  <pre><code>if(isset($_GET['testdata'])):     $db = mysqli_connect($db_host, $db_user, $db_pass, $db_name);     $query = ""SELECT * FROM TABLE"";     $result = mysqli_query($db, $query);     while($row = mysqli_fetch_array($result)):         echo $row['CollumnName'];     endwhile;     $db-&gt;close(); endif; </code></pre>  <p>Anything <code>echo</code>'d will show in the response.</p>  <p>Using JavaScript to open a Database is hard, long and has MANY security issues. I would not recommend in doing so.</p>"
35323095	How to use JavaScript/Ajax and Python to edit local SQL database?	javascript|python|sql|ajax	2016-02-10 18:26:25.723000 UTC	"<p>I've developed the front-end of a web site using JavaScript.</p>  <p>I have a button that when it's clicked retrieves an integer value from another object on the website.</p>  <p>I have a local SQL database. How do I make SQL calls when this button is clicked?</p>  <p>I've seen answers with JavaScript/Ajax and PHP, but I don't want to use PHP.</p>  <p>Using JavaScript only, can I open a local SQL db and make SQL calls?  If yes, how?</p>  <p>If I can't do this using JavaScript only, can I use JavaScript/Ajax and Python? If yes, please post a reference or simple example.</p>"	"<p>Technically it <strong>is</strong> possible to connect to a database using client-side JavaScript. However, as others have already pointed out, doing so is considered to be really bad practice for a few reasons - the most important of them being security.</p>  <p>When the browser is asked to load a certain page it will go ahead and ask the server for the content that is found at that URL. This means HTML files, external JavaScript files, images, stylesheets and other resources that are needed in order for the page to get rendered. Since the user has access to the these files, especially your JavaScript code, it means he has access to your database credentials. You could try to minify/obfuscate the code, but that won't make it any safer.</p>  <p>If you do understand all the consequences and for some reason you still want to do it, take a look at <a href=""https://stackoverflow.com/questions/857670/how-to-connect-to-sql-server-database-from-javascript-in-the-browser"">this example.</a> </p>  <p>The best way to go at it is to have a server handle the interaction with the database. Depending on your language of choice, you could build that part of the application using PHP (among with an HTTP server such as Apache), Java, Python and so on. You could even use JavaScript (see <a href=""https://nodejs.org/en/"" rel=""nofollow noreferrer"">Node.js</a>).</p>  <p>Since you asked for a <strong>Python</strong> snippet, here's one that connects to a MySQL database and creates an HTTP server that listens for connections on port 8080. For each GET request it will receive, the script will query the database and send back the result as text/html.</p>  <pre><code>#!/usr/bin/python import MySQLdb from BaseHTTPServer import BaseHTTPRequestHandler, HTTPServer  PORT_NUMBER = 8080  class Handler(BaseHTTPRequestHandler):      def do_GET(self):          # prepare a cursor object using cursor() method         cursor = db.cursor()          # execute SQL query using execute() method         cursor.execute(""SELECT VERSION()"")          # Fetch a single row using fetchone() method         data = cursor.fetchone()          self.send_response(200)         self.send_header('Content-type','text/html')         self.end_headers()          self.wfile.write(data)         return  try:      db = MySQLdb.connect(host=""localhost"", user=""root"", passwd=""yourpwd"", db=""pw_exam"")      server = HTTPServer(('', PORT_NUMBER), myHandler)     print 'Started httpserver on port ' , PORT_NUMBER      server.serve_forever()  except KeyboardInterrupt:     print '^C received, shutting down the web server'     server.socket.close() </code></pre>"
35323095	How to use JavaScript/Ajax and Python to edit local SQL database?	javascript|python|sql|ajax	2016-02-10 18:26:25.723000 UTC	"<p>I've developed the front-end of a web site using JavaScript.</p>  <p>I have a button that when it's clicked retrieves an integer value from another object on the website.</p>  <p>I have a local SQL database. How do I make SQL calls when this button is clicked?</p>  <p>I've seen answers with JavaScript/Ajax and PHP, but I don't want to use PHP.</p>  <p>Using JavaScript only, can I open a local SQL db and make SQL calls?  If yes, how?</p>  <p>If I can't do this using JavaScript only, can I use JavaScript/Ajax and Python? If yes, please post a reference or simple example.</p>"	"<p>You can't do this from the javascript in the browser for a simple reason - if your database is available to your javascript code, it is also available for any web site user. And someone will just delete all your data or will replace it with something funny.</p>  <p>That is why we usually also have the server-side application and it can basically be in any language - php, python or javascript.</p>  <p>And there are frameworks and libraries to simplify your job also for any language.</p>  <p>For example, for python you can use <a href=""http://flask.pocoo.org/"" rel=""nofollow"">flask</a> and <a href=""http://www.sqlalchemy.org/"" rel=""nofollow"">sqlalchemy</a>.</p>  <p>If you want javascript everywhere, then use <a href=""http://nodejs.org"" rel=""nofollow"">nodejs</a> on the server and <a href=""http://expressjs.com/"" rel=""nofollow"">expressjs</a> as server-side framework is one of most popular options for node. And you can find node.js packages to make SQL queries to your database too.</p>  <p>The general flow of your application can look like this:</p>  <ul> <li>Your client-side application is opened in the browser and it needs some data from the database</li> <li>It sends the AJAX request to the sever</li> <li>Server makes a database request and returns the data as json</li> <li>Client-side application displays this data</li> </ul>  <p>It works similar when data need to be modified. The difference here is that your database is ""covered"" by server side, so you can be sure that only allowed operations are performed. Like nobody is able to drop the database, or only a registered user can edit the profile data (and only own profile data editing is possible), etc.</p>"
35325979	what is the equivalent in Javascript of this Python code?	javascript|python	2016-02-10 21:11:53.240000 UTC	"<p>Here is a python code, I want to translate it to javascript, any help?</p>  <pre><code>result = list() ... if not string in result:    result.append(string) </code></pre>  <p>Thanks!</p>"	
35326312	is this the javascript translation of this loop in python code?	javascript|python	2016-02-10 21:29:23.323000 UTC	"<p>For example, this is how it would be done in Python:</p>  <pre><code>for current in range (start, end): </code></pre>  <p>Question: is this the translation to JavaScript?</p>  <pre><code>for(current = start; current &lt; end; current++){} </code></pre>"	"<p>You should always use ""use strict"" in your JS code. With ""use strict"", the code must look like:</p>  <pre><code>for(var current = start; current &lt; end; current++){} </code></pre>  <p>Reference for ""use strict"": <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Strict_mode"" rel=""nofollow"">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Strict_mode</a></p>"
35346456	Combining Python and Javascript in a chrome plugin	javascript|python|google-chrome-extension	2016-02-11 17:46:12.477000 UTC	"<p>I'm writing a chrome extension that injects a content script into every page the user goes to. What i want to do is to get the output of a python function for some use in the content script (can't write it in javascript, since it requires raw sockets to connect to my remote SSL server).</p>  <p>I've read that one might use CGI and Ajax or the like, to get output from the python code into the javascript code, but i ran into 3 problems:</p>  <ol> <li><p>I cannot allow hosting the python code on a local server, since it is security sensitive data that only the local computer should be able to know. </p></li> <li><p>Chrome demands that HTTP and HTTPS can not mix- if the user goes to an HTTPS website, i can't host the python code on a HTTP server.</p></li> <li><p>I don't think Chrome even supports CGI on extensions-when i try to access a local file, all it does is print out the text (the python code itself) instead of what i defined to be its output (I tried to do so using Flask). As I said in 1, I shouldn't even try this anyway, but this is just a side note.</p></li> </ol>  <p>So my question is, how do i get the output of my python functions inside a Content Script, built with javascript?</p>"	"<p><strong>The only way to get the output of a Python script inside a content script built with Javascript is to call the file with XMLHttpRequest.</strong> As you noted, you will have to use an HTTPS connection if the page is served over HTTPS. A workaround for this is to make a call to your background script, which can then fetch the data in whichever protocol it likes, and return it to your content script.</p>"
35346456	Combining Python and Javascript in a chrome plugin	javascript|python|google-chrome-extension	2016-02-11 17:46:12.477000 UTC	"<p>I'm writing a chrome extension that injects a content script into every page the user goes to. What i want to do is to get the output of a python function for some use in the content script (can't write it in javascript, since it requires raw sockets to connect to my remote SSL server).</p>  <p>I've read that one might use CGI and Ajax or the like, to get output from the python code into the javascript code, but i ran into 3 problems:</p>  <ol> <li><p>I cannot allow hosting the python code on a local server, since it is security sensitive data that only the local computer should be able to know. </p></li> <li><p>Chrome demands that HTTP and HTTPS can not mix- if the user goes to an HTTPS website, i can't host the python code on a HTTP server.</p></li> <li><p>I don't think Chrome even supports CGI on extensions-when i try to access a local file, all it does is print out the text (the python code itself) instead of what i defined to be its output (I tried to do so using Flask). As I said in 1, I shouldn't even try this anyway, but this is just a side note.</p></li> </ol>  <p>So my question is, how do i get the output of my python functions inside a Content Script, built with javascript?</p>"	"<p><a href=""https://developer.chrome.com/extensions/nativeMessaging"" rel=""nofollow"">Native Messaging</a> may be your answer here.</p>  <p>You can designate a Native Host application that an extension or app will be able to invoke (probably through a background page in case of an extension), and that can be a Python script.</p>  <p>In fact, <a href=""https://chromium.googlesource.com/chromium/src/+/master/chrome/common/extensions/docs/examples/api/nativeMessaging"" rel=""nofollow"">the sample app</a> for it uses a Python script.</p>"
35364084	Asynchronous unblocked Execution/triggering of python script through javascript	javascript|python|ajax|cgi	2016-02-12 13:40:27.720000 UTC	"<p>I am currently working on an application ROFFLE, I may not be very good in terming correctly, <b>What I am able to do right now?</b> <br> User goes on a website, he clicks on a button and an ajax request is done to python file (test.py) but when he exits, the request is aborted and the processing done till yet has gone waste</p>  <p><b>What I want to do?</b> <br> As user clicks the button, the processing starts. The script should not be killed even if the user leaves the webpage. In simple words, the <code>Javascript</code> part should be limited to trigger/queue the python script to execute (with input provided online) which has to be deployed by a web server that supports it via <code>CGI</code></p>  <p><i><b>How can this be implemented?</b></i></p>  <p>Please note:<br> 1. This is a web application and cannot be a software <br></p>"	"<p>From the question I read that you have already managed to run a Python script in a web server via CGI and you already know how to do an HTTP (ajax) request from your JavaScript to that web service. </p>  <p>When you now close the page in your browser (or an excavator cuts your line), the backend python script is <strong>not</strong> terminated. In fact, how should the backend even know that you have closed the page? Your Python script is still running in the backend, but no one will be left to capture the HTTP response of the web server and display it to you.</p>  <p>However, when you want to start some kind of demon, a program that is supposed to run in the backend for a very long time, then your Python script should spin off that task via a <code>Popen</code> in a variant that keeps the child process alive, even when the script has returned it's HTTP response (and possibly even the web server has shut down).</p>  <p>This pattern is sometimes used to remote control little servers that mock IoT devices in test environments. Just start and stop the simulation via some fire-and-forget HTTP requests triggered from a simple interactive web page.</p>"
35369241	Python urllib2.unquote() vs Javascript unescape()	javascript|python|html|flask	2016-02-12 17:58:12.687000 UTC	"<p>I have a string which I encoded with <code>python urllib2.quote()</code>. The string in question is <code>""Z%C3%BCrich""</code>, which was encoded from <code>""Zürich""</code>. However, there seems to be a discrepancy between the way python handles this and the way JavaScript does.</p>  <p>In python:</p>  <pre><code>&gt;&gt;&gt; print urllib2.unquote(""Z%C3%BCrich"") Zürich </code></pre>  <p>In JavaScript:</p>  <pre><code>&gt; unescape(""Z%C3%BCrich"") 'ZÃ¼rich' </code></pre>  <p>These are taking in the same input string, but producing very different output strings. What am I doing wrong?</p>  <p>Note: This post is not a duplicate of <a href=""https://stackoverflow.com/questions/23158822/javascript-unescape-vs-python-urllib-unquote"">this post</a>, in which the author had the opposite problem.</p>"	"<p><sub>Posting my comments as an answer.</sub></p>  <p>You should use:</p>  <pre><code>decodeURI(""Z%C3%BCrich"") </code></pre>  <p>Instead of <code>unescape(""Z%C3%BCrich"")</code> in JavaScript.</p>  <p>Basically, <code>urllib2.quote()</code> is more like <code>encodeURI()</code> in JavaScript.  And <code>urllib2.unquote()</code> is <code>decodeURI()</code> rahter than <code>unescape()</code>. </p>  <p>You should always avoid <code>escape()</code> and <code>unescape()</code> function in JavaScript because they'll give you weird output...like you're getting now.</p>"
35369241	Python urllib2.unquote() vs Javascript unescape()	javascript|python|html|flask	2016-02-12 17:58:12.687000 UTC	"<p>I have a string which I encoded with <code>python urllib2.quote()</code>. The string in question is <code>""Z%C3%BCrich""</code>, which was encoded from <code>""Zürich""</code>. However, there seems to be a discrepancy between the way python handles this and the way JavaScript does.</p>  <p>In python:</p>  <pre><code>&gt;&gt;&gt; print urllib2.unquote(""Z%C3%BCrich"") Zürich </code></pre>  <p>In JavaScript:</p>  <pre><code>&gt; unescape(""Z%C3%BCrich"") 'ZÃ¼rich' </code></pre>  <p>These are taking in the same input string, but producing very different output strings. What am I doing wrong?</p>  <p>Note: This post is not a duplicate of <a href=""https://stackoverflow.com/questions/23158822/javascript-unescape-vs-python-urllib-unquote"">this post</a>, in which the author had the opposite problem.</p>"	"<p>The Javascript function <code>unescape()</code> is deprecated, you should use <code>decodeURI()</code> instead. <code>unescape()</code> is giving you the utf-8 encoded form of your string rather than the unicode you want.</p>"
35383275	How to escape UNICODE string in python (to javascript escape)	javascript|python|unicode	2016-02-13 17:53:15.090000 UTC	"<p>I have the following string <code>""◣⛭◣◃✺▲♢""</code> and I want to make that string into <code>""\u25E3\u26ED\u25E3\u25C3\u273A\u25B2\u2662""</code>. Exactly the same as this site does <a href=""https://mothereff.in/js-escapes"" rel=""nofollow"">https://mothereff.in/js-escapes</a></p>  <p>I was wondering if this is possible in python. I have tried allot of stuff from the unicode docs for python but failed miserably.</p>  <p>Example of what I tried before:</p>  <pre><code>#!/usr/bin/env python # -*- coding: latin-1 -*-  f = open('js.js', 'r').read()  print(ord(f[:1])) </code></pre>  <p>help would be appreciated!</p>"	"<p>Considering you're using Python 3:</p>  <pre><code>unicode_string=""◣⛭◣◃✺▲♢"" byte_string= unicode_string.encode('ascii', 'backslashreplace') print(byte_string) </code></pre>  <p>See <a href=""https://docs.python.org/2/library/codecs.html#codec-objects"" rel=""nofollow"">codecs</a> module documentation for more infotmation.</p>  <p>However, to work with JavaScript notation, there's a special module <a href=""https://docs.python.org/3/library/json.html#json.dumps"" rel=""nofollow"">json</a>, and then you could achieve the same thing:</p>  <pre><code>import json unicode_string=""◣⛭◣◃✺▲♢"" json_string=json.dumps(unicode_string) print(json_string) </code></pre>"
35383275	How to escape UNICODE string in python (to javascript escape)	javascript|python|unicode	2016-02-13 17:53:15.090000 UTC	"<p>I have the following string <code>""◣⛭◣◃✺▲♢""</code> and I want to make that string into <code>""\u25E3\u26ED\u25E3\u25C3\u273A\u25B2\u2662""</code>. Exactly the same as this site does <a href=""https://mothereff.in/js-escapes"" rel=""nofollow"">https://mothereff.in/js-escapes</a></p>  <p>I was wondering if this is possible in python. I have tried allot of stuff from the unicode docs for python but failed miserably.</p>  <p>Example of what I tried before:</p>  <pre><code>#!/usr/bin/env python # -*- coding: latin-1 -*-  f = open('js.js', 'r').read()  print(ord(f[:1])) </code></pre>  <p>help would be appreciated!</p>"	"<p>If you're in python 2, then I'd suspect you're getting something like this: </p>  <pre><code>&gt;&gt;&gt; s = ""◣⛭◣◃✺▲♢"" &gt;&gt;&gt; s[0] '\xe2' </code></pre>  <p>To get to the unicode code points in a UTF-8 encoded file (or buffer), you'll need to <a href=""https://docs.python.org/2/library/stdtypes.html#str.decode"" rel=""nofollow"">decode</a> it into a python <a href=""https://docs.python.org/2/library/functions.html#unicode"" rel=""nofollow"">unicode</a> object first (otherwise you'll see the bytes that make up the UTF-8 encoding).</p>  <pre><code>&gt;&gt;&gt; s_utf8 = s.decode('utf-8') &gt;&gt;&gt; s_utf8[0] u'\u25e3' &gt;&gt;&gt; ord(s_utf8[0]) 9699 &gt;&gt;&gt; hex(ord(s_utf8[0])) '0x25e3' </code></pre>  <p>In your case, you can go straight from the ord() to a literal unicode escape with something like this: </p>  <pre><code>&gt;&gt;&gt; ""\\u\x"" % (ord(s_utf8[0])) '\\u25e3' </code></pre>  <p>Or convert the entire string in one go with a list comprehension: </p>  <pre><code>&gt;&gt;&gt; ''.join([""\\u%04x"" % (ord(c)) for c in s_utf8]) '\\u25e3\\u26ed\\u25e3\\u25c3\\u273a\\u25b2\\u2662' </code></pre>  <p>Of course, when you're doing the conversion this way, you're going to display the code points for <em>all</em> the characters in the string. You'll have to decide which code points to show, or the ABCs will be escaped too:  </p>  <pre><code>&gt;&gt;&gt; ''.join([""\\u%04x"" % (ord(c)) for c in u""ABCD""]) '\\u0041\\u0042\\u0043\\u0044' </code></pre>  <p>Or, just use georg's suggestion to let python figure all that out for you. </p>"
35394788	Transfer array from python to javascript	javascript|python|arrays	2016-02-14 17:27:18.703000 UTC	"<p>I have a test.txt file that has two columns of data (x's and y's), eg:</p>  <pre><code>#test.txt 1 23 2 234 4 52 43 5 3 35 </code></pre>  <p>And a python program that reads in these values and stores them in x and y as so:</p>  <pre><code>#test.py # Read the file. f = open('test.txt', 'r')  # read the whole file into a single variable, which is a list of every  row of the file. lines = f.readlines() f.close()  # initialize some variable to be lists: x = [] y = []  # scan the rows of the file stored in lines, and put the values into some variables: for line in lines:     p = line.split()     x.append(float(p[0]))     y.append(float(p[1])) </code></pre>  <p>I want to take these values stored in x and y and transfer them to two similar arrays in a javascript program to display them as a graph. How can I transfer between python and javascript? </p>"	"<p>Its unclear as to why you want to transfer this, but you can write it out into a js file simply by formatting the list into <code>var someList = [[x1,y1], [x2,y2]]</code>. </p>  <p>Would be easier to build the string up withing <code>from line in lines</code> but in case you do have actual need of maintaining separate x and y lists</p>  <pre><code>zippedList = list(list(zipped) for zipped in zip(xList,yList)) print('var someList = {};'.format(zippedList)) </code></pre>  <p>which gives you</p>  <blockquote>   <p>var someList = [[1, 23], [2, 234], [4, 52], [43, 5], [3, 35]];</p> </blockquote>  <p>Write this out to a js file as needed or append to an existing html as</p>  <pre><code>with open('index.html','a') as f:     f.write('&lt;script&gt; var transferredList={}; &lt;/script&gt;'.format(zippedList)) </code></pre>"
35394788	Transfer array from python to javascript	javascript|python|arrays	2016-02-14 17:27:18.703000 UTC	"<p>I have a test.txt file that has two columns of data (x's and y's), eg:</p>  <pre><code>#test.txt 1 23 2 234 4 52 43 5 3 35 </code></pre>  <p>And a python program that reads in these values and stores them in x and y as so:</p>  <pre><code>#test.py # Read the file. f = open('test.txt', 'r')  # read the whole file into a single variable, which is a list of every  row of the file. lines = f.readlines() f.close()  # initialize some variable to be lists: x = [] y = []  # scan the rows of the file stored in lines, and put the values into some variables: for line in lines:     p = line.split()     x.append(float(p[0]))     y.append(float(p[1])) </code></pre>  <p>I want to take these values stored in x and y and transfer them to two similar arrays in a javascript program to display them as a graph. How can I transfer between python and javascript? </p>"	"<p>I didn't put the arrays stored in variables x and y, but you can do it if you know at least a bit of JavaScript.</p>  <pre><code>var Request=new XMLHttpRequest();//request object Request.open(""GET"",""test.txt"",true); /*  * Open request;  * Take 2 arguments, but third is optional (async).  * If you want async, then set onreadystatechange instead of onload event */ Request.onreadystatechange=function(){     if(this.status==400){//status is okay         var Lines=this.responseText.split(""\n"");         alert(Lines[0])//will alert the first line     }     /*      * this.status&gt;=500 are request issues or user network delay      * this.status=404 means file not found     */ } </code></pre>"
35394788	Transfer array from python to javascript	javascript|python|arrays	2016-02-14 17:27:18.703000 UTC	"<p>I have a test.txt file that has two columns of data (x's and y's), eg:</p>  <pre><code>#test.txt 1 23 2 234 4 52 43 5 3 35 </code></pre>  <p>And a python program that reads in these values and stores them in x and y as so:</p>  <pre><code>#test.py # Read the file. f = open('test.txt', 'r')  # read the whole file into a single variable, which is a list of every  row of the file. lines = f.readlines() f.close()  # initialize some variable to be lists: x = [] y = []  # scan the rows of the file stored in lines, and put the values into some variables: for line in lines:     p = line.split()     x.append(float(p[0]))     y.append(float(p[1])) </code></pre>  <p>I want to take these values stored in x and y and transfer them to two similar arrays in a javascript program to display them as a graph. How can I transfer between python and javascript? </p>"	"<p>Because you mention ""display"" together with <code>JavaScript</code>, I somewhat assume that your goal is to have <code>JavaScript</code> in a web browser displaying the data that your <code>python</code> script reads from the file in the backend. Transferring from backend <code>python</code> to frontend <code>JavaScript</code> is a piece of cake, because both languages ""speak"" JSON. </p>  <p>In the backend, you will do something like</p>  <pre><code>import json response = json.dumps(response_object) </code></pre>  <p>and in the frontend, you can right away use</p>  <pre><code>var responseObject = JSON.parse(responseString); </code></pre>  <p>It is also quite clear how the frontend will call the backend, namely using <code>ajax</code>, usually wrapped in a handy library like <code>jQuery</code>.</p>  <p>The field opens, when it comes to making your <code>python</code> script run in a web server. A good starting point for this would be <a href=""https://docs.python.org/2/howto/webservers.html"" rel=""nofollow"">the Python How-To</a> for using <code>python</code> in the web. You will have to consult with your web hosting service, too, because most hosters have clear guidance whether they admit <code>CGI</code>or, for example <code>FastCGI</code>. Once this is clear, maybe you want to take a look at the <code>Flask</code> micro-framework or something similar, which are offering many services you will need right out-of-the-box.</p>  <p>I have mentioned all the buzzwords here to enable your own investigation ;)</p>"
35394788	Transfer array from python to javascript	javascript|python|arrays	2016-02-14 17:27:18.703000 UTC	"<p>I have a test.txt file that has two columns of data (x's and y's), eg:</p>  <pre><code>#test.txt 1 23 2 234 4 52 43 5 3 35 </code></pre>  <p>And a python program that reads in these values and stores them in x and y as so:</p>  <pre><code>#test.py # Read the file. f = open('test.txt', 'r')  # read the whole file into a single variable, which is a list of every  row of the file. lines = f.readlines() f.close()  # initialize some variable to be lists: x = [] y = []  # scan the rows of the file stored in lines, and put the values into some variables: for line in lines:     p = line.split()     x.append(float(p[0]))     y.append(float(p[1])) </code></pre>  <p>I want to take these values stored in x and y and transfer them to two similar arrays in a javascript program to display them as a graph. How can I transfer between python and javascript? </p>"	"<p>Your question is slightly vague. There are two possible ways your question can be interpreted, here are the corresponding answers:</p>  <ol> <li>Your python code needs to transfer them to some javascript running in the browser/node.js application. In order to do this, the Python half of your application would need to either store the data in a database and expose the data via some sort of API, which the javascript half could consume. To go a little fancier, you could set up a connection between the two web servers (e.g. socket.io) and have the Python half send the arrays over the connection as they're created.</li> <li><p>This is what I believe you're trying to do based on the code you've posted: Preprocess some data in Python, and then pass it over to some other javascript piece of the puzzle where there's no real-time aspect to it. </p>  <p>In this case, you could simply write the arrays to JSON, and parse that in Javascript. To write to a file, you could do: </p>  <pre><code>import json data = {'x': x, 'y': y} # To write to a file: with open(""output.json"", ""w"") as f:     json.dump(data, f)  # To print out the JSON string (which you could then hardcode into the JS) json.dumps(data) </code></pre></li> </ol>"
35415042	How to get an url of javascript link using python?	javascript|jquery|python|html|jsf	2016-02-15 17:04:47.510000 UTC	"<p>In the following website: <a href=""http://dgp.cnpq.br/dgp/faces/consulta/consulta_parametrizada.jsf"" rel=""nofollow"">http://dgp.cnpq.br/dgp/faces/consulta/consulta_parametrizada.jsf</a></p>  <p>Using Selenium, I clicked in the button ""Filtros"", selected Sudeste as ""Região"", and selected Rio de Janeiro as ""UF"", then I clicked ""Pesquisar"". And it generated a list.</p>  <p>In this list, I need to copy the link, but the link is generated by script</p>  <pre class=""lang-html prettyprint-override""><code>&lt;a id=""idFormConsultaParametrizada:resultadoDataList:0:idBtnVisualizarEspelhoGrupo""      href=""#""      style=""width:16%""      onclick=""mojarra.jsfcljs(             document.getElementById('idFormConsultaParametrizada'),             {                 'idFormConsultaParametrizada:resultadoDataList:0:idBtnVisualizarEspelhoGrupo':'idFormConsultaParametrizada:resultadoDataList:0:idBtnVisualizarEspelhoGrupo'             },             '_blank'         );         return false     ""&gt;     Culturas e saberes urbanos e as modalidades de descrição e de representações visuais das cidades&lt;/a&gt; </code></pre>  <p>I tried right click, but it returns the main link. It only generates the link, that I want, with the action of the OnClick.</p>  <p>And the link generated looks like: <code>http://dgp.cnpq.br/dgp/espelhogrupo/2612134540655635</code>, it's always <code>dgp.cnpq.br/dgp/espelhogrupo/</code> + numbers</p>  <p>I would like to know, if there's a way to run the script from the onclick event and then get these numbers.</p>"	"<ol> <li>Look for these numbers somewhere else on the page - they may be contained in meta tags.</li> <li><p>If not, you can use regular expressions to find the desired digits like this:</p>  <p>dgp.cnpq.br/dgp/espelhogrupo/(\d+)</p></li> </ol>  <p>You need find this number on HTML page and get it with RegExp. If page hasn't number - check Ctrl + Shift + U -> Network -> XHR.</p>"
35440085	Why Javascript's Date(timestamp) and Python's datetime.fromtimestamp(timestamp) differ?	javascript|python|date	2016-02-16 18:14:47.837000 UTC	"<p>I have the following timestamp in JS: <strong>1436428916900</strong> When I enter this date in JS I got the following results: </p>  <blockquote>   <blockquote>     <p>Date(1436428916900)         ""Tue Feb 16 2016 20:09:42 GMT+0200 (EET)""</p>   </blockquote> </blockquote>  <p>I found several questions on SO and most of them offer following solution: </p>  <pre><code>import datetime my_time = 1436428916900 date = datetime.datetime.fromtimestamp(my_time / 1e3) </code></pre>  <p>But the problem is that this code results in the following result : </p>  <pre><code>datetime.datetime(2015, 7, 9, 11, 1, 56, 900000) </code></pre>  <p>which is absolutely different result from JS code.</p>  <p>Sources : <a href=""https://stackoverflow.com/questions/10286224/javascript-timestamp-to-python-datetime-conversion"">JavaScript timestamp to Python datetime conversion</a></p>  <p><a href=""https://stackoverflow.com/questions/9744775/how-to-convert-integer-timestamp-to-python-datetime"">How to convert integer timestamp to Python datetime</a></p>"	"<p>The JavaScript function <code>Date()</code> is different from the <code>Date</code> constructor invoked by <code>new Date(…)</code>.  The function silently ignores any parameters and returns a string representing the current time instead of a new <code>Date</code> instance. (See the <a href=""http://www.ecma-international.org/ecma-262/6.0/#sec-date-constructor"" rel=""nofollow"">EcmaScript 2015 Specification</a> for further reference.)</p>  <p>So you should use <code>new Date(timestamp)</code> in JavaScript, and you will get the same result in Python and JavaScript.</p>  <p>JavaScript is quite a special language.</p>"
35443332	"base64 encode in python, decode in javascript"	javascript|python|json|encoding	2016-02-16 21:27:04.853000 UTC	"<p>A Python backend reads a binary file, base64 encodes it, inserts it into a JSON doc and sends it to a JavaScript frontend:</p>  <pre><code>#Python with open('some_binary_file', 'rb') as in_file:     return base64.b64encode(in_file.read()).decode('utf-8') </code></pre>  <p>The JavaScript frontend fetches the base64 encoded string from the JSON document and turns it into a binary blob:</p>  <pre><code>#JavaScript b64_string = response['b64_string']; decoded_file = atob(b64_string); blob = new Blob([decoded_file], {type: 'application/octet-stream'}); </code></pre>  <p>Unfortunately when downloading the blob the encoding seems to be wrong but I'm not sure where the problem is. E.g. it is an Excel file that I can't open anymore. In the Python part I've tried different decoders ('ascii', 'latin1') but that doesn't make a difference. Is there a problem with my code?</p>"	"<p>I found the answer <a href=""https://stackoverflow.com/questions/16245767/creating-a-blob-from-a-base64-string-in-javascript"">here</a>. The problem was at the JavaScript side. It seems only applying <code>atob</code> to the base64 encoded string doesn't work for binary data. You'll have to convert that into a typed byte array. What I ended up doing (LiveScript):</p>  <pre><code>byte_chars = atob base64_str byte_numbers = [byte_chars.charCodeAt(index) for bc, index in byte_chars] byte_array = new Uint8Array byte_numbers blob = new Blob [byte_array], {type: 'application/octet-stream'} </code></pre>"
35473272	Get javascript variable's value in Django python url template tag	javascript|jquery|python|html|django	2016-02-18 05:06:25.077000 UTC	"<p>I have a django template section </p>  <pre><code>{% for l in items%}           &lt;td style=""text-align: center""            id=""{{m.id}}_{{m.set|slice:':7' }}_{{m.kidu}}_{{l}}""&gt;          &lt;/td&gt; {% endfor %} </code></pre>  <p>and JS section below:</p>  <pre><code>&lt;script&gt;  $(document).ready(function() {     {% for a in all_results %}             $('#{{a.id}}_{{a.set|slice:"":7""}}_{{ a.kidu}}_{{ a.adi|slice:"":2"" }}').html('{{  a.id }}');             $('#{{a.id}}_{{a.set|slice:"":7""}}_{{ a.kidu}}_{{ a.adi|slice:"":2"" }}').addClass('{{ a.state__name.split|join:""_"" }}');     {% endfor %} }); &lt;/script&gt; </code></pre>  <p>What am trying is to pass the id as an href link in my template, so that once the user click on the link he will redirected to that particular record detail view. </p>  <p>I tried as follows:</p>  <pre><code>&lt;script&gt;  $(document).ready(function() {     {% for a in all_results %}             $('#{{a.id}}_{{a.set|slice:"":7""}}_{{ a.kidu}}_{{ a.adi|slice:"":2"" }}').html('{{ href=""{% url 'req_detail_view' a.id %}""}}');             $('#{{a.id}}_{{a.set|slice:"":7""}}_{{ a.kidu}}_{{ a.adi|slice:"":2"" }}').addClass('{{ a.state__name.split|join:""_"" }}');     {% endfor %} }); &lt;/script&gt; </code></pre>  <p>But am getting as <code>Could not parse the remainder: '=""{% url 'req_detail_view' a.id %}""' from 'href=""{% url 'req_detail_view' a.id %}""'</code> Any idea guys? Thanks in advance</p>"	"<p>JUst remove <code>{{</code>, <code>}}</code>. Your code should be,</p>  <pre><code>.html(""href=\""{% url 'req_detail_view' a.id %}\""""); </code></pre>  <p>or</p>  <pre><code>.html(""&lt;a href=\""{% url 'req_detail_view' a.id %}\""&gt;Click here&lt;/a&gt;""); </code></pre>  <p><code>.html</code> is a jquery/javascript function used to set html to a particular tag. For ex,</p>  <p><code>$(#foo a).html(""&lt;a href=\""{% url 'req_detail_view' a.id %}\""&gt;Click here&lt;/a&gt;"");</code></p>  <p>This would change the html of all the anchor tags present inside the tag having <code>foo</code> as id.</p>"
35494914	How to use javascript with selenium python	javascript|python|selenium|selenium-webdriver|css-selectors	2016-02-19 00:01:21.033000 UTC	"<p>I am trying to execute a <code>javascript</code> using python selenium. I am basically trying to set the value using <code>execute.script</code> but somehow is it not doing anything. I want to edit the street address as you see below</p>  <pre><code>execute_script(driver, """"""var element = document.getElementsByClassName('input[ng-model=""formData.address.address1""]'); element.value = '328 91st Street'; """""") </code></pre>  <p><a href=""https://i.stack.imgur.com/NoFgg.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/NoFgg.png"" alt=""enter image description here""></a></p>  <p>Could anyone tell me what's the issue here? I am not getting an error also </p>"	"<p>This code is almost good to go...</p> <p><code>execute_script(driver, &quot;&quot;&quot;var element = document.getElementsByClassName('input[ng-model=&quot;formData.address.address1&quot;]'); element.value = '328 91st Street'; &quot;&quot;&quot;) </code></p> <p>Just remember that <code>getElementsByClassName</code> will return an array...</p> <p>And I guess you should use <strong><code>querySelector</code></strong> or <strong><code>querySelectorAll</code></strong> function...</p> <pre><code>// will select just one element  var element = document.querySelector('input[ng-model=&quot;formData.address.address1&quot;]');   // will select all elements var element = document.querySelectorAll('input[ng-model=&quot;formData.address.address1&quot;]');  </code></pre> <p><code>getElementsByClassName</code> you should inform a class... (I think it's hard to have a class like: <code>ng-model=&quot;formData.address.address1&quot;</code>)</p> <h3>Using <code>querySelector</code></h3> <blockquote> <p><code>var element = document.querySelector('input[ng-model=&quot;formData.address.address1&quot;]'); </code> <code>element.value = '328 91st Street';//Work!!!</code></p> </blockquote> <h3>In case you want to iterate in these NodeLists with <code>querySelectorAll</code></h3> <p>Basically,</p> <blockquote> <p><code>var element = document.querySelectorAll('input[ng-model=&quot;formData.address.address1&quot;]'); </code> <code>element.value = '328 91st Street';//WON'T WORK</code></p> </blockquote> <p>Do instead:</p> <blockquote> <p><code>var element = document.querySelectorAll('input[ng-model=&quot;formData.address.address1&quot;]'); </code> <code>element[0].value = '328 91st Street'; // change the value for the first element</code></p> <pre><code>for(int i = 0 ;i&lt;element.length;i++){ //change all elements    element[i].value =  '328 91st Street'; } </code></pre> </blockquote>"
35494914	How to use javascript with selenium python	javascript|python|selenium|selenium-webdriver|css-selectors	2016-02-19 00:01:21.033000 UTC	"<p>I am trying to execute a <code>javascript</code> using python selenium. I am basically trying to set the value using <code>execute.script</code> but somehow is it not doing anything. I want to edit the street address as you see below</p>  <pre><code>execute_script(driver, """"""var element = document.getElementsByClassName('input[ng-model=""formData.address.address1""]'); element.value = '328 91st Street'; """""") </code></pre>  <p><a href=""https://i.stack.imgur.com/NoFgg.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/NoFgg.png"" alt=""enter image description here""></a></p>  <p>Could anyone tell me what's the issue here? I am not getting an error also </p>"	"<p>There is a more robust way of doing it - locating the element with selenium using a CSS selector and passing the <code>WebElement</code> as well as a value into the script as an argument:</p>  <pre><code>elm = driver.find_element_by_css_selector('input[ng-model=""formData.address.address1""]') value = '328 91st Street'  driver.execute_script(""arguments[0].value = 'arguments[1]';"", elm, value) </code></pre>  <hr>  <p>Note that in your code, you have 2 major problems:</p>  <ul> <li>you are passing a CSS selector into the <code>getElementsByClassName()</code> call  - instead, it expects you to pass a class name as a string</li> <li><code>getElementsByClassName()</code> returns an array of elements and not a single element</li> </ul>"
35503291	Javascript iterate over python dict	javascript|python|django	2016-02-19 10:41:24.073000 UTC	"<p>I am creating a python dictionary and passing it over to javascript.</p>  <pre><code>var students = {{myStudents}} </code></pre>  <p>when generated becomes</p>  <pre><code>var students = [(u'Mark', u'b7'), (u'Phillipe', u'a67'), (u'John', u'a1')] </code></pre>  <p>Now I need to loop over the names (Mark, Philippe, etc...) and populate a dropdown list.</p>  <p>My problem, how can I access the key/value separately. Ultimately I could pass both lists separately, but I want to check if their is another non-bruteforce way.</p>"	<p>I tried the answers here and it didn't work for me. I figured out that all I had to do is to parse the JSON data. I thought that sharing this solution might be helpful for others: In the python file:</p>  <pre><code>import json json_data = json.dumps(your_dict) </code></pre>  <p>pass the json_data to your Javascript file. In your Javascript file:</p>  <pre><code>var keys = JSON.parse(json_data); for (var key in keys) {  } </code></pre>
35503291	Javascript iterate over python dict	javascript|python|django	2016-02-19 10:41:24.073000 UTC	"<p>I am creating a python dictionary and passing it over to javascript.</p>  <pre><code>var students = {{myStudents}} </code></pre>  <p>when generated becomes</p>  <pre><code>var students = [(u'Mark', u'b7'), (u'Phillipe', u'a67'), (u'John', u'a1')] </code></pre>  <p>Now I need to loop over the names (Mark, Philippe, etc...) and populate a dropdown list.</p>  <p>My problem, how can I access the key/value separately. Ultimately I could pass both lists separately, but I want to check if their is another non-bruteforce way.</p>"	"<p>If you really have a dict in <code>myStudents</code>, you could write your template as:</p>  <pre><code>var students = {{% for key, value in myStudents %}{""{{ key }}"": ""{{ value }}""},{% endfor %}} </code></pre>  <p>which will become</p>  <pre><code>var students = {""Mark"": ""b7"", ""Philippe"": ""a67"", ...} </code></pre>  <p>in your HTML source. You can then iterate it in Javascript using the following:</p>  <pre><code>for(var key in students) {   var value = students[key];   ... } </code></pre>"
35503291	Javascript iterate over python dict	javascript|python|django	2016-02-19 10:41:24.073000 UTC	"<p>I am creating a python dictionary and passing it over to javascript.</p>  <pre><code>var students = {{myStudents}} </code></pre>  <p>when generated becomes</p>  <pre><code>var students = [(u'Mark', u'b7'), (u'Phillipe', u'a67'), (u'John', u'a1')] </code></pre>  <p>Now I need to loop over the names (Mark, Philippe, etc...) and populate a dropdown list.</p>  <p>My problem, how can I access the key/value separately. Ultimately I could pass both lists separately, but I want to check if their is another non-bruteforce way.</p>"	"<p>Like @jsfan pointed out, python dictionary would render as follows: <code>{u'students': {u'Mark': u'b7', u'Phillipe': u'a67', u'John': u'a1'}}</code>. To iterate over the dictionary you use,</p>  <pre><code>  for (x in students) {     students[x]  } </code></pre>  <p>But if you wish to get value for a particular key, for example the value for key 'Mark', you use:</p>  <pre><code>for (x in students)  {     students[x]['Mark'] } </code></pre>"
35503291	Javascript iterate over python dict	javascript|python|django	2016-02-19 10:41:24.073000 UTC	"<p>I am creating a python dictionary and passing it over to javascript.</p>  <pre><code>var students = {{myStudents}} </code></pre>  <p>when generated becomes</p>  <pre><code>var students = [(u'Mark', u'b7'), (u'Phillipe', u'a67'), (u'John', u'a1')] </code></pre>  <p>Now I need to loop over the names (Mark, Philippe, etc...) and populate a dropdown list.</p>  <p>My problem, how can I access the key/value separately. Ultimately I could pass both lists separately, but I want to check if their is another non-bruteforce way.</p>"	"<p>Before passing the variable to Javascript, you want to</p>  <pre><code>import json json_var = json.dumps(var) </code></pre>  <p>and then pass <code>json_var</code> instead of <code>var</code> to the Javascript.</p>  <p>In Javascript you then iterate over it as</p>  <pre><code>for (k in students) { } </code></pre>  <p>using <code>k</code> to get the names and <code>students[k]</code> to get the value associated with the name.</p>  <p>If you want to stick with your list of tuples, use the value <code>students[k][0]</code> in the loop for the names and <code>students[k][1]</code> for the second value in the tuple.</p>"
35526019	Convert python to javascript	javascript|python	2016-02-20 16:40:35.117000 UTC	"<p>I have a python code .By this code i can searching in all column table. i want to convert that code to javaScript  my python code is :</p>  <pre><code>cmd_str = '&amp;filter=' fields = {'f1': 'v1', 'f2': None, 'f3': 34, 'f4': datetime.now()} for f, v in fields.items(): if v is not None: if type(v) is str: cmd_str += '%s|%s' % (f, v) elif type(v) is datetime: cmd_str += '{}[{}]={}'.format(f, type(v).__name__, v.isoformat()) else: cmd_str += '{}[{}]={}'.format(f, type(v).__name__, v) cmd_str += ',' cmd_str = cmd_str[:-1] print(cmd_str) </code></pre>  <p>I convert myself but I have some problems  </p>  <pre><code>var cmd_str = '&amp;filter='; var fields = {     f1 : 'v1',     f2 : '',     f3 : 34     f4 : datetime.now() }; var i; for( i = 0; i&lt;fields.length; i++) {     if(fields[i][key] !='')     {         if(typeof fields[i][key] === string)         {             cmd_str += '%s|%s' % (fields[i][key]);         }         else if(typeof fields[i][key] === Date)         {             cmd_str += '{}[{}]={}'.format(f, typeof v.__name__, v.isoformat())         }         else         {             cmd_str += '{}[{}]={}'.format(f, typeof v.__name__, v);             cmd_str += ',';             cmd_str = cmd_str[:-1];         }     } }  </code></pre>  <p>Can you fix problems for me? I dont know this line is ok in javaScript:</p>  <pre><code>  cmd_str += '%s|%s' % (fields[i][key]);   cmd_str += '{}[{}]={}'.format(f, typeof v.__name__, v.isoformat())   cmd_str += '{}[{}]={}'.format(f, typeof v.__name__, v);   cmd_str += ',';   cmd_str = cmd_str[:-1]; </code></pre>"	"<p>there is nothing about JS in your code,</p>  <ol> <li>string objects does not have <code>format</code> function</li> <li><code>%</code> is only numeric operator and doesn't format your string, <code>'string' % anything = NaN</code></li> <li>Date does not have <code>isoformat</code> function use <code>toISOString()</code></li> <li>JS not supporting python array <code>[:index]</code> style</li> </ol>"
35526019	Convert python to javascript	javascript|python	2016-02-20 16:40:35.117000 UTC	"<p>I have a python code .By this code i can searching in all column table. i want to convert that code to javaScript  my python code is :</p>  <pre><code>cmd_str = '&amp;filter=' fields = {'f1': 'v1', 'f2': None, 'f3': 34, 'f4': datetime.now()} for f, v in fields.items(): if v is not None: if type(v) is str: cmd_str += '%s|%s' % (f, v) elif type(v) is datetime: cmd_str += '{}[{}]={}'.format(f, type(v).__name__, v.isoformat()) else: cmd_str += '{}[{}]={}'.format(f, type(v).__name__, v) cmd_str += ',' cmd_str = cmd_str[:-1] print(cmd_str) </code></pre>  <p>I convert myself but I have some problems  </p>  <pre><code>var cmd_str = '&amp;filter='; var fields = {     f1 : 'v1',     f2 : '',     f3 : 34     f4 : datetime.now() }; var i; for( i = 0; i&lt;fields.length; i++) {     if(fields[i][key] !='')     {         if(typeof fields[i][key] === string)         {             cmd_str += '%s|%s' % (fields[i][key]);         }         else if(typeof fields[i][key] === Date)         {             cmd_str += '{}[{}]={}'.format(f, typeof v.__name__, v.isoformat())         }         else         {             cmd_str += '{}[{}]={}'.format(f, typeof v.__name__, v);             cmd_str += ',';             cmd_str = cmd_str[:-1];         }     } }  </code></pre>  <p>Can you fix problems for me? I dont know this line is ok in javaScript:</p>  <pre><code>  cmd_str += '%s|%s' % (fields[i][key]);   cmd_str += '{}[{}]={}'.format(f, typeof v.__name__, v.isoformat())   cmd_str += '{}[{}]={}'.format(f, typeof v.__name__, v);   cmd_str += ',';   cmd_str = cmd_str[:-1]; </code></pre>"	"<p>I changed to this code :</p>  <pre><code>var cmd_str = '&amp;filter='; var fields = { f1 : 'v1', f2 : '', f3 : 34 f4 : new Date() }; var i; for( i = 0; i&lt;fields.length; i++) {   if(fields[i][key] !='') {     if(typeof fields[i][key] === string)     {         cmd_str += fields[i] +'|'+ fields[i][key];     }     else if(typeof fields[i][key] === new Date())     {         cmd_str += fields[i] +'[datetime]='+ fields[i][key];     }     else     {         cmd_str += fields[i] +'[typeof fields[i][key]]='+ fields[i][key];         cmd_str += ',';         cmd_str = cmd_str[:-1];     }   } }  </code></pre>  <p>Is it right? I don't know how fix this line <code>cmd_str = cmd_str[:-1];</code> to remove last Comma ,</p>"
35526019	Convert python to javascript	javascript|python	2016-02-20 16:40:35.117000 UTC	"<p>I have a python code .By this code i can searching in all column table. i want to convert that code to javaScript  my python code is :</p>  <pre><code>cmd_str = '&amp;filter=' fields = {'f1': 'v1', 'f2': None, 'f3': 34, 'f4': datetime.now()} for f, v in fields.items(): if v is not None: if type(v) is str: cmd_str += '%s|%s' % (f, v) elif type(v) is datetime: cmd_str += '{}[{}]={}'.format(f, type(v).__name__, v.isoformat()) else: cmd_str += '{}[{}]={}'.format(f, type(v).__name__, v) cmd_str += ',' cmd_str = cmd_str[:-1] print(cmd_str) </code></pre>  <p>I convert myself but I have some problems  </p>  <pre><code>var cmd_str = '&amp;filter='; var fields = {     f1 : 'v1',     f2 : '',     f3 : 34     f4 : datetime.now() }; var i; for( i = 0; i&lt;fields.length; i++) {     if(fields[i][key] !='')     {         if(typeof fields[i][key] === string)         {             cmd_str += '%s|%s' % (fields[i][key]);         }         else if(typeof fields[i][key] === Date)         {             cmd_str += '{}[{}]={}'.format(f, typeof v.__name__, v.isoformat())         }         else         {             cmd_str += '{}[{}]={}'.format(f, typeof v.__name__, v);             cmd_str += ',';             cmd_str = cmd_str[:-1];         }     } }  </code></pre>  <p>Can you fix problems for me? I dont know this line is ok in javaScript:</p>  <pre><code>  cmd_str += '%s|%s' % (fields[i][key]);   cmd_str += '{}[{}]={}'.format(f, typeof v.__name__, v.isoformat())   cmd_str += '{}[{}]={}'.format(f, typeof v.__name__, v);   cmd_str += ',';   cmd_str = cmd_str[:-1]; </code></pre>"	"<p>I think few mistakes which i can see is 1) Loop structure is wrong . I didn't get what is key. 2) use instance of to check date. Because date is a object so when you do typeof(fields.f4) it will give you result as object. which is not required now. 3)for comma i am putting comma after every condition and at last taking sub string after removing last comma.  I tried code like this.</p>  <pre><code>var cmd_str = '&amp;filter='; var fields = { f1 : 'v1', f2 : '', f3 : 34, f4 : new Date() }; var i; for(i in fields) {   if(fields[i]!='') {     if(typeof(fields[i]) === ""string"")     {         cmd_str += i +'|'+ fields[i]+',';     }     else if(fields[i] instanceof Date)     {         cmd_str += i +'[datetime]='+ fields[i]+',';     }     else     {         cmd_str += i + typeof (fields[i])+""=""+fields[i];         cmd_str += ',';      }   } }  cmd_str = cmd_str.substring(0, cmd_str.length - 1);  </code></pre>"
35548542	Escape backslash in JSON String in JavaScript and Python 2.7	javascript|python|json|python-2.7|escaping	2016-02-22 08:03:18.900000 UTC	"<p>Here is my JSON string to loads or Parse:</p>  <pre><code>json_str = '[{""executable_path"": ""C:\\GCafeClient\\CafeClient.exe"", ""arguments"": ""-package 100003""}]' </code></pre>  <p>This was valid if I test it <a href=""https://jsonformatter.curiousconcept.com/"" rel=""nofollow"">in json formatter</a> or <a href=""http://www.jsoneditoronline.org/"" rel=""nofollow"">here</a>(Also it makes sense right--I have escaped backslash.</p>  <p>But when I do <code>json.loads(json_str)</code> in Python 2.7 or <code>JSON.parse(json_str)</code> in JavaScript in Chrome. I got errors:</p>  <pre><code>ValueError: Invalid \escape: line 1 column 25 (char 24) </code></pre>  <p>and</p>  <pre><code>Uncaught SyntaxError: Unexpected token G </code></pre>  <p>If I put it this way, then it will work for both:</p>  <pre><code>json_str = '[{""executable_path"": ""C:\\\\GCafeClient\\\\CafeClient.exe"", ""arguments"": ""-package 100003""}]' </code></pre>  <p>Why is this so?</p>"	"<p>I will just post my own understanding here for this question:</p>  <pre><code># python json_str = '[{""executable_path"": ""C:\\\\GCafeClient\\\\CafeClient.exe"", ""arguments"": ""-package 100003""}]' # which is equivalent to json_str = r'[{""executable_path"": ""C:\\GCafeClient\\CafeClient.exe"", ""arguments"": ""-package 100003""}]' # and JSON format requires backslash to be escaped </code></pre>"
35548542	Escape backslash in JSON String in JavaScript and Python 2.7	javascript|python|json|python-2.7|escaping	2016-02-22 08:03:18.900000 UTC	"<p>Here is my JSON string to loads or Parse:</p>  <pre><code>json_str = '[{""executable_path"": ""C:\\GCafeClient\\CafeClient.exe"", ""arguments"": ""-package 100003""}]' </code></pre>  <p>This was valid if I test it <a href=""https://jsonformatter.curiousconcept.com/"" rel=""nofollow"">in json formatter</a> or <a href=""http://www.jsoneditoronline.org/"" rel=""nofollow"">here</a>(Also it makes sense right--I have escaped backslash.</p>  <p>But when I do <code>json.loads(json_str)</code> in Python 2.7 or <code>JSON.parse(json_str)</code> in JavaScript in Chrome. I got errors:</p>  <pre><code>ValueError: Invalid \escape: line 1 column 25 (char 24) </code></pre>  <p>and</p>  <pre><code>Uncaught SyntaxError: Unexpected token G </code></pre>  <p>If I put it this way, then it will work for both:</p>  <pre><code>json_str = '[{""executable_path"": ""C:\\\\GCafeClient\\\\CafeClient.exe"", ""arguments"": ""-package 100003""}]' </code></pre>  <p>Why is this so?</p>"	"<p>You need to escape the '\' twice, the first time for the Python/JavaScript literal and the second time for JSON. </p>  <p>So <code>""C:\\GCafeClient""</code> will evaluate to <code>""C:\GCafeClient""</code>, which is not accepted JSON as it contains an unescaped '\' and will throw an error. </p>  <p>On the other hand <code>""C:\\\\GCafeClient""</code> will evaluate to the JSON being <code>""C:\\GCafeClient""</code>, therefore the '\' is escaped and accepted. </p>"
35566861	Python Selenium Enable Javascript Issue	python|selenium-webdriver	2016-02-23 00:56:33.413000 UTC	"<p>I am trying to scrape some info from a website using python selenium. However, when I submit the form, the result page keeps showing me ""Your web browser requires JavaScript to access the page"". Can anyone let me know how to solve this?</p>  <p>Please see below for my code:</p>  <pre><code>from selenium import webdriver  profile = webdriver.FirefoxProfile() profile.set_preference(""general.useragent.override"", ""Mozilla/5.0 (X11; Linux x86_64; rv:38.0) Gecko/20100101 Firefox/38.0"") profile.set_preference(""javascript.enabled"", True) broswer = webdriver.Firefox(profile) broswer.get(http://www.cathaypacific.com/cx/en_CA.html)  input = broswer.find_element_by_id('depart-label') input.clear() input.send_keys('Hong')  WebDriverWait(broswer, 10, poll_frequency=0.1).until(lambda drv:    len(drv.find_elements_by_css_selector(""ul.ui-autocomplete li"")) &gt; 0) broswer.find_element_by_css_selector(""ul.ui-autocomplete li"").click()  time.sleep(3) input = broswer.find_element_by_id('destination-label') input.send_keys('van') WebDriverWait(broswer, 10, poll_frequency=0.1).until(lambda drv: len(drv.find_elements_by_css_selector(""ul.ui-autocomplete li"")) &gt; 0) broswer.find_element_by_css_selector(""#ui-id-2 li"").click()  broswer.find_element_by_class_name(""button-submit"").click() </code></pre>"	"<p>There is nothing wrong with the code itself. It worked for me for the first time.</p>  <p>Now, the real problem is that this particular website is using a third-party <em>anti web-scraping service called <a href=""http://www.distilnetworks.com/"" rel=""nofollow noreferrer"">Distil Networks</a></em>, which apparently has a <em>way of detecting a selenium-webdriver powered browser</em>, more information here:</p>  <ul> <li><a href=""https://stackoverflow.com/questions/33225947/can-a-website-detect-when-you-are-using-selenium-with-chromedriver"">Can a website detect when you are using selenium with chromedriver?</a> </li> </ul>"
35567724	How to define custom properties in enumeration in Python (Javascript-like)	python|python-3.x	2016-02-23 02:31:58.723000 UTC	"<p>In JavaScript we can do this:</p>  <pre><code>var Color = {     YELLOW: { value: 1, displayString: ""Yellow"" },     GREEN: { value: 2, displayString: ""Green"" }, } </code></pre>  <p>So I can call:</p>  <pre><code>Color.YELLOW.displayString </code></pre>  <p>In Java we can do this:</p>  <pre><code>public enum Color {      YELLOW (1, ""Yellow""),     GREEN (2, ""Green""),      private Color(String value, int displayString){         this.value = value;         this.displayString = displayString;     }      private final int value;     private final String displayString;      public String getValue() {return value;}     public String getDisplayString() {return displayString;} } </code></pre>  <p>So I can call:</p>  <pre><code>Color.YELLOW.getDisplayString() </code></pre>  <p>After much research I haven't found a clean way to do this in Python using the built-in Enum module. How can I do this?</p>  <p>Thanks</p>"	"<p>You should normally never include literals like this in your code. The content should come from a file or database. But you can see how to build it up</p>  <pre><code>&gt;&gt;&gt; from collections import namedtuple &gt;&gt;&gt; Color = namedtuple(""color"", ""YELLOW,GREEN"")(         namedtuple(""yellow"", ""value,display_string"")(1, ""yellow""),         namedtuple(""green"", ""value,display_string"")(2, ""green"")) &gt;&gt;&gt; Color.YELLOW.display_string 'yellow' </code></pre>  <p>This also works for older Pythons that don't support enum</p>"
35567724	How to define custom properties in enumeration in Python (Javascript-like)	python|python-3.x	2016-02-23 02:31:58.723000 UTC	"<p>In JavaScript we can do this:</p>  <pre><code>var Color = {     YELLOW: { value: 1, displayString: ""Yellow"" },     GREEN: { value: 2, displayString: ""Green"" }, } </code></pre>  <p>So I can call:</p>  <pre><code>Color.YELLOW.displayString </code></pre>  <p>In Java we can do this:</p>  <pre><code>public enum Color {      YELLOW (1, ""Yellow""),     GREEN (2, ""Green""),      private Color(String value, int displayString){         this.value = value;         this.displayString = displayString;     }      private final int value;     private final String displayString;      public String getValue() {return value;}     public String getDisplayString() {return displayString;} } </code></pre>  <p>So I can call:</p>  <pre><code>Color.YELLOW.getDisplayString() </code></pre>  <p>After much research I haven't found a clean way to do this in Python using the built-in Enum module. How can I do this?</p>  <p>Thanks</p>"	"<p>You can use a <a href=""http://learnpythonthehardway.org/book/ex39.html"" rel=""nofollow"">dictionary in python</a>:</p>  <pre><code>Color = {      'YELLOW': { 'value': 1, 'displayString': ""Yellow"" },     'GREEN': { 'value': 2, 'displayString': ""Green"" } } Color['YELLOW']['displayString'] </code></pre>"
35567724	How to define custom properties in enumeration in Python (Javascript-like)	python|python-3.x	2016-02-23 02:31:58.723000 UTC	"<p>In JavaScript we can do this:</p>  <pre><code>var Color = {     YELLOW: { value: 1, displayString: ""Yellow"" },     GREEN: { value: 2, displayString: ""Green"" }, } </code></pre>  <p>So I can call:</p>  <pre><code>Color.YELLOW.displayString </code></pre>  <p>In Java we can do this:</p>  <pre><code>public enum Color {      YELLOW (1, ""Yellow""),     GREEN (2, ""Green""),      private Color(String value, int displayString){         this.value = value;         this.displayString = displayString;     }      private final int value;     private final String displayString;      public String getValue() {return value;}     public String getDisplayString() {return displayString;} } </code></pre>  <p>So I can call:</p>  <pre><code>Color.YELLOW.getDisplayString() </code></pre>  <p>After much research I haven't found a clean way to do this in Python using the built-in Enum module. How can I do this?</p>  <p>Thanks</p>"	"<p>Here is another approach, that is the code from: <a href=""https://github.com/hzdg/django-enumfields"" rel=""noreferrer"">https://github.com/hzdg/django-enumfields</a></p>  <pre class=""lang-py prettyprint-override""><code>import enum import inspect  class ColorEnumMeta(enum.EnumMeta):     def __new__(mcs, name, bases, attrs):         DisplayStrings = attrs.get('DisplayStrings')          if DisplayStrings is not None and inspect.isclass(DisplayStrings):             del attrs['DisplayStrings']             if hasattr(attrs, '_member_names'):                 attrs._member_names.remove('DisplayStrings')          obj = super().__new__(mcs, name, bases, attrs)         for m in obj:             m.display_string = getattr(DisplayStrings, m.name, None)          return obj  class Color(enum.Enum, metaclass=ColorEnumMeta):     yellow = 1     green = 2      class DisplayStrings:         yellow = 'Yellow'         green = 'Green'  print(Color.yellow.display_string)  # 'Yellow' </code></pre>  <p>or something that is based on this code, but a bit shorter:</p>  <pre class=""lang-py prettyprint-override""><code>import enum  class ColorEnumMeta(enum.EnumMeta):     def __new__(mcs, name, bases, attrs):         obj = super().__new__(mcs, name, bases, attrs)         obj._value2member_map_ = {}         for m in obj:             value, display_string = m.value             m._value_ = value             m.display_string = display_string             obj._value2member_map_[value] = m          return obj  class Color(enum.Enum, metaclass=ColorEnumMeta):     yellow = 1, 'Yellow'     green = 2, 'Green'  print(Color.yellow.display_string)  # 'Yellow' </code></pre>"
35567724	How to define custom properties in enumeration in Python (Javascript-like)	python|python-3.x	2016-02-23 02:31:58.723000 UTC	"<p>In JavaScript we can do this:</p>  <pre><code>var Color = {     YELLOW: { value: 1, displayString: ""Yellow"" },     GREEN: { value: 2, displayString: ""Green"" }, } </code></pre>  <p>So I can call:</p>  <pre><code>Color.YELLOW.displayString </code></pre>  <p>In Java we can do this:</p>  <pre><code>public enum Color {      YELLOW (1, ""Yellow""),     GREEN (2, ""Green""),      private Color(String value, int displayString){         this.value = value;         this.displayString = displayString;     }      private final int value;     private final String displayString;      public String getValue() {return value;}     public String getDisplayString() {return displayString;} } </code></pre>  <p>So I can call:</p>  <pre><code>Color.YELLOW.getDisplayString() </code></pre>  <p>After much research I haven't found a clean way to do this in Python using the built-in Enum module. How can I do this?</p>  <p>Thanks</p>"	"<p>There are two concepts involved here: enumerations and attribute-style access to object members that can be initialised inline. For the latter, you'll need some kind of custom class, but since you want something very straightforward, a <code>namedtuple</code> is sufficient for that. So, combining <code>namedtuple</code> and <code>enum</code>, this could be a solution:</p>  <pre><code>from enum import Enum from collections import namedtuple  Color = namedtuple('Color', ['value', 'displayString'])  class Colors(Enum):      @property     def displayString(self):         return self.value.displayString      yellow = Color(1, 'Yellow')     green = Color(2, 'Green')  print(Colors.yellow.displayString) </code></pre>"
35579428	Round-trip passing of data from Javascript to Redis (via Python) and back?	javascript|python|ajax|flask|redis	2016-02-23 13:53:22.593000 UTC	"<p>I'm refactoring a project that I've used as a learning tool for myself, that is a HTML5 canvas game, where I have a hexagonal grid of tiles built with javascript objects and canvas. Everything is stored in a javascript object structure. </p>  <p>I'm trying to learn more about Python. I set up a basic Python Flask route, was able to POST an AJAX request from the javascript to the Flask route, was able to submit to Redis, was able to retrieve from Redis... but I can't seem to figure out what piece I'm missing for passing the information from Python back to the javascript object. </p>  <p>HTML:           </p>  <pre><code>&lt;head&gt;     &lt;script type=text/javascript src=""{{ url_for('static', filename='jquery-2.2.0.min.js') }}""&gt;&lt;/script&gt;  &lt;/head&gt; &lt;script type=""text/javascript""&gt;  $(function() {     var data =          {             row: '3',             col: '3',         };     $('#sendBtn').click(function() {         $.ajax({             type: 'POST',             url: '/saveMap',             contentType: ""application/json; charset=utf-8"",             data: JSON.stringify(data),             success: function(response) {                 console.log(response.row)             },             error: function(error) {                 console.log(error);             }         });     }); }); &lt;/script&gt;  &lt;body&gt;     &lt;button id=""sendBtn"" class=""btn btn-lg btn-primary btn-block"" type=""button""&gt;Send&lt;/button&gt;  &lt;/body&gt;  &lt;/html&gt; </code></pre>  <p>Python:     from flask import Flask, render_template, json, request     import redis</p>  <pre><code>app = Flask(__name__) r = redis.Redis(""localhost"")  @app.route(""/"") def main():     return render_template('index.html')  @app.route('/saveMap',methods=['POST']) def saveMap():     if request.method == ""POST"":         r.set(""test"", request.json)         result = r.get(""test"")         return result  if __name__ == ""__main__"":     app.run(debug=True) </code></pre>  <p>So, when clicking the #sendBtn, the request goes through, comes back, shows up as a response in the Network tab as </p>  <pre><code>{u'col': u'3', u'row': u'3'} </code></pre>  <p>but within the success part of the AJAX call, when I try to call response.row, it gives me an ""undefined"".</p>  <p>I feel like I'm so close, what am I missing here?</p>"	"<p>The problem is that <code>r.get(""test"")</code> returns a <code>str</code> that <em>looks</em> like a dict. Using <code>jsonify</code>, <code>pickle.dumps</code>, and <code>pickle.loads</code> will solve your problem.</p>  <pre><code>from flask import Flask, render_template, request, jsonify import redis, pickle  app = Flask(__name__) r = redis.Redis(""localhost"")  @app.route(""/"") def main():     return render_template('index.html')  @app.route('/saveMap',methods=['POST']) def saveMap():     if request.method == ""POST"":         r.set(""test"", pickle.dumps(request.json))         result = pickle.loads(r.get(""test""))         return jsonify(result)  if __name__ == ""__main__"":     app.run(debug=True) </code></pre>  <p>edit: changed from using <code>eval</code> to using <code>pickle</code> just to be safe as reptilicus mentioned</p>"
35579428	Round-trip passing of data from Javascript to Redis (via Python) and back?	javascript|python|ajax|flask|redis	2016-02-23 13:53:22.593000 UTC	"<p>I'm refactoring a project that I've used as a learning tool for myself, that is a HTML5 canvas game, where I have a hexagonal grid of tiles built with javascript objects and canvas. Everything is stored in a javascript object structure. </p>  <p>I'm trying to learn more about Python. I set up a basic Python Flask route, was able to POST an AJAX request from the javascript to the Flask route, was able to submit to Redis, was able to retrieve from Redis... but I can't seem to figure out what piece I'm missing for passing the information from Python back to the javascript object. </p>  <p>HTML:           </p>  <pre><code>&lt;head&gt;     &lt;script type=text/javascript src=""{{ url_for('static', filename='jquery-2.2.0.min.js') }}""&gt;&lt;/script&gt;  &lt;/head&gt; &lt;script type=""text/javascript""&gt;  $(function() {     var data =          {             row: '3',             col: '3',         };     $('#sendBtn').click(function() {         $.ajax({             type: 'POST',             url: '/saveMap',             contentType: ""application/json; charset=utf-8"",             data: JSON.stringify(data),             success: function(response) {                 console.log(response.row)             },             error: function(error) {                 console.log(error);             }         });     }); }); &lt;/script&gt;  &lt;body&gt;     &lt;button id=""sendBtn"" class=""btn btn-lg btn-primary btn-block"" type=""button""&gt;Send&lt;/button&gt;  &lt;/body&gt;  &lt;/html&gt; </code></pre>  <p>Python:     from flask import Flask, render_template, json, request     import redis</p>  <pre><code>app = Flask(__name__) r = redis.Redis(""localhost"")  @app.route(""/"") def main():     return render_template('index.html')  @app.route('/saveMap',methods=['POST']) def saveMap():     if request.method == ""POST"":         r.set(""test"", request.json)         result = r.get(""test"")         return result  if __name__ == ""__main__"":     app.run(debug=True) </code></pre>  <p>So, when clicking the #sendBtn, the request goes through, comes back, shows up as a response in the Network tab as </p>  <pre><code>{u'col': u'3', u'row': u'3'} </code></pre>  <p>but within the success part of the AJAX call, when I try to call response.row, it gives me an ""undefined"".</p>  <p>I feel like I'm so close, what am I missing here?</p>"	"<p>Try <code>console.log(response)</code> to see what's actually coming back. If it is JSON getting returned, you may still need to parse it before you can access it like an object, and it may be getting wrapped somehow depending on whether there's middleware involved in your server processing.</p>"
35584569	Python: Parse JSON string with embedded Javascript constants/variables	javascript|python|json|string	2016-02-23 17:45:27.077000 UTC	"<p>How can I parse a JSON string that has embedded Javascript constants or variables?</p>  <p>For example, how to parse a JSON string like this one?</p>  <pre class=""lang-json prettyprint-override""><code>  {     ""menu"": {       ""id"": ""file"",       ""value"": ""File"",       ""popup"": {         ""menuitem"": [           {             ""value"": ""New"",             ""onclick"": Handlers.NEW           },           {             ""value"": ""Open"",             ""onclick"": Handlers.OPEN           },           {             ""value"": ""Custom"",             ""onclick"": ""function(){doSomething(Handlers.OPEN);}""            }         ]       }     }   } </code></pre>  <p>All validators of course consider the JSON to be invalid, yet it is perfectly valid when evaluated in a context where the corresponding Javascript objects are defined.</p>  <p>The first thing that comes to mind is to pre-process the string before feeding it to the JSON parser, but that is tricky, since the same strings can occur inside existing strings (as shown in the sample JSON), and it would require some regex fiddling in order to reliably detect whether e.g. <code>Handlers.NEW</code> is used as an undecorated value, or inside an existing string value.</p>  <p>Is there a clean way to handle this use case without having to do manual regex replacements?</p>"	"<p>You can use the ast-module:</p>  <pre><code>import ast  data = """"""{     ""menu"": {       ""id"": ""file"",       ""value"": ""File"",       ""popup"": {         ""menuitem"": [           {             ""value"": ""New"",             ""onclick"": Handlers.NEW           },           {             ""value"": ""Open"",             ""onclick"": Handlers.OPEN           },           {             ""value"": ""Custom"",             ""onclick"": ""function(){doSomething(Handlers.OPEN);}""            }         ]       }     }   }""""""  def transform(item):     if isinstance(item, ast.Dict):         return dict(zip(map(transform,item.keys), map(transform, item.values)))     elif isinstance(item, ast.List):         return map(transform, item.elts)     elif isinstance(item, ast.Str):         return item.s     else:         return item  print transform(ast.parse(data).body[0].value) </code></pre>"
35584569	Python: Parse JSON string with embedded Javascript constants/variables	javascript|python|json|string	2016-02-23 17:45:27.077000 UTC	"<p>How can I parse a JSON string that has embedded Javascript constants or variables?</p>  <p>For example, how to parse a JSON string like this one?</p>  <pre class=""lang-json prettyprint-override""><code>  {     ""menu"": {       ""id"": ""file"",       ""value"": ""File"",       ""popup"": {         ""menuitem"": [           {             ""value"": ""New"",             ""onclick"": Handlers.NEW           },           {             ""value"": ""Open"",             ""onclick"": Handlers.OPEN           },           {             ""value"": ""Custom"",             ""onclick"": ""function(){doSomething(Handlers.OPEN);}""            }         ]       }     }   } </code></pre>  <p>All validators of course consider the JSON to be invalid, yet it is perfectly valid when evaluated in a context where the corresponding Javascript objects are defined.</p>  <p>The first thing that comes to mind is to pre-process the string before feeding it to the JSON parser, but that is tricky, since the same strings can occur inside existing strings (as shown in the sample JSON), and it would require some regex fiddling in order to reliably detect whether e.g. <code>Handlers.NEW</code> is used as an undecorated value, or inside an existing string value.</p>  <p>Is there a clean way to handle this use case without having to do manual regex replacements?</p>"	"<pre><code>import ast  s=""""""{ ""menu"": {   ""id"": ""file"",   ""value"": ""File"",   ""popup"": {     ""menuitem"": [       {         ""value"": ""New"",         ""onclick"": Handlers.NEW       },       {         ""value"": ""Open"",         ""onclick"": Handlers.OPEN       },       {         ""value"": ""Custom"",         ""onclick"": ""function(){doSomething(Handlers.OPEN);}""        }     ]   } } }""""""  def evaluate(obj):     if isinstance(obj, ast.Module):         return evaluate(obj.body[0])     elif isinstance(obj, ast.Expr):         return evaluate(obj.value)     elif isinstance(obj, ast.Dict):         return {key.s: parse(value) for key, value in zip(obj.keys, obj.values)}     elif isinstance(obj, ast.List):         return [parse(element) for element in obj.elts]     elif isinstance(obj, ast.Str):         return obj.s     elif isinstance(obj, ast.Attribute):         return evaluate(obj.value) + ""."" + obj.attr     elif isinstance(obj, ast.Name):         return obj.id     elif isinstance(obj, ast.Num):         return obj.n     else:         print(""I apparently forgot"", type(obj))  x = evaluate(ast.parse(s)) print(x) </code></pre>  <p>This parses the string into an Abstract Syntax Tree, and then recursively builds a Python object out of it, converting attributes into strings.</p>"
35589952	Print python variable in alert box in Javascript	javascript|python|html|alert	2016-02-23 22:59:57.190000 UTC	"<p>I'm not able to print a python variable into a Javascript alert box. Any ideas? This is my code so far I'v tried different variations and nothing seems to work.</p>  <pre><code>#!/bin/python variable=""hi"" print ""Content-type: text/html"" print print '''&lt;html&gt; &lt;head&gt;&lt;title&gt;Python Script&lt;/title&gt;&lt;/head&gt; &lt;meta charset=""utf-8""&gt; &lt;meta name=""viewport"" content=""width=device-width, initial-scale=1""&gt; &lt;link rel=""stylesheet"" href=""http://maxcdn.bootstrapcdn.com/bootstrap/3.3.5/css/bootstrap.min.css""&gt; &lt;script src=""https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js""&gt;&lt;/script&gt; &lt;script src=""http://maxcdn.bootstrapcdn.com/bootstrap/3.3.5/js/bootstrap.min.js""&gt;&lt;/script&gt; &lt;link rel=""stylesheet"" href=""http://maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css""&gt;  &lt;!-- HTML5 shim and Respond.js IE8 support of HTML5 elements and media queries --&gt; &lt;!--[if lt IE 9]&gt; &lt;script src=""https://oss.maxcdn.com/libs/html5shiv/3.7.0/html5shiv.js""&gt;&lt;/script&gt; &lt;script src=""https://oss.maxcdn.com/libs/respond.js/1.3.0/respond.min.js""&gt;&lt;/script&gt; &lt;![endif]--&gt; &lt;script type=""text/javascript"" src=""http://code.jquery.com/jquery-2.1.1.min.js""&gt;&lt;/script&gt; &lt;script type=""text/javascript"" src=""http://maxcdn.bootstrapcdn.com/bootstrap/3.3.1/js/bootstrap.min.js""&gt;&lt;/script&gt; &lt;body&gt; ''' print ""&lt;script&gt;"" print ""alert('Hello! I am an alert box!!  %s ');"" print ""&lt;/script&gt;""% (variable) ''' &lt;/body&gt; &lt;/html&gt;''' </code></pre>"	"<pre><code>print ""alert('Hello! I am an alert box!!  %s ');""% (variable) print ""&lt;/script&gt;"" </code></pre>  <p>you have to do the substitution on the same string with the placeholder ...</p>"
35589952	Print python variable in alert box in Javascript	javascript|python|html|alert	2016-02-23 22:59:57.190000 UTC	"<p>I'm not able to print a python variable into a Javascript alert box. Any ideas? This is my code so far I'v tried different variations and nothing seems to work.</p>  <pre><code>#!/bin/python variable=""hi"" print ""Content-type: text/html"" print print '''&lt;html&gt; &lt;head&gt;&lt;title&gt;Python Script&lt;/title&gt;&lt;/head&gt; &lt;meta charset=""utf-8""&gt; &lt;meta name=""viewport"" content=""width=device-width, initial-scale=1""&gt; &lt;link rel=""stylesheet"" href=""http://maxcdn.bootstrapcdn.com/bootstrap/3.3.5/css/bootstrap.min.css""&gt; &lt;script src=""https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js""&gt;&lt;/script&gt; &lt;script src=""http://maxcdn.bootstrapcdn.com/bootstrap/3.3.5/js/bootstrap.min.js""&gt;&lt;/script&gt; &lt;link rel=""stylesheet"" href=""http://maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css""&gt;  &lt;!-- HTML5 shim and Respond.js IE8 support of HTML5 elements and media queries --&gt; &lt;!--[if lt IE 9]&gt; &lt;script src=""https://oss.maxcdn.com/libs/html5shiv/3.7.0/html5shiv.js""&gt;&lt;/script&gt; &lt;script src=""https://oss.maxcdn.com/libs/respond.js/1.3.0/respond.min.js""&gt;&lt;/script&gt; &lt;![endif]--&gt; &lt;script type=""text/javascript"" src=""http://code.jquery.com/jquery-2.1.1.min.js""&gt;&lt;/script&gt; &lt;script type=""text/javascript"" src=""http://maxcdn.bootstrapcdn.com/bootstrap/3.3.1/js/bootstrap.min.js""&gt;&lt;/script&gt; &lt;body&gt; ''' print ""&lt;script&gt;"" print ""alert('Hello! I am an alert box!!  %s ');"" print ""&lt;/script&gt;""% (variable) ''' &lt;/body&gt; &lt;/html&gt;''' </code></pre>"	<pre><code>print '''&lt;script&gt; alert('Hello! I am an alert box!!  %s '); &lt;/script&gt;''' % (variable) </code></pre>
35635988	"Selenium and Python can't click href=""javascript:void(0);"" with .click()"	javascript|python|selenium|beautifulsoup	2016-02-25 18:59:31.310000 UTC	"<p>I have been stuck on trying to click the href=""javascript:void(0);"" on a page.</p>  <p>My problem is that I am not able to select this using selenium, and my end goal is to click on one. The page is fully loaded, and this is what all the links on the page have as the href.</p>  <p>my code is this:</p>  <pre><code>a = soup.find_all('a') for names in a:     try:         print (names['href'])         if names['href'] == ""javascript:void(0);"":             print ""IM IN HUR""             names.click()             break     except:         continue </code></pre>  <p>But the ""name.click()"" statement never works.I have not found any way to click on javascript:void(0). Any help would be much appreciated.</p>"	"<p>You have to use Selenium WebDriver to interact with web browser. Your variable <code>names</code> is an object of Beautiful Soup which is a Python package for parsing HTML/XML, it cannot interact with web browser. Try code below:</p>  <pre><code>aElements = browser.find_elements_by_tag_name(""a"") for name in aElements:     if(name.get_attribute(""href"") is not None and ""javascript:void"" in name.get_attribute(""href"")):         print(""IM IN HUR"")         name.click()         break </code></pre>"
35686627	encoding special characters in javascript/python	javascript|python|mongodb|special-characters	2016-02-28 18:38:56.493000 UTC	"<p>I'm having a lot of problems with properly processing certain special characters in my application.</p>  <p>Here's what I'm doing at the moment: </p>  <ol> <li>User enters a location, data is retrieved via the Google Geolocation API (full name, lat and lon) and is sent via ajax (as a JSON string) to a python script </li> <li>The python script parses the JSON string, reads the parameters and executes a http request to an API, which runs on nodejs</li> <li>Data is inserted into MongoDB</li> </ol>  <p>The problem is when there's a special character in the location name. The original location name I'm testing on has the character è. When the json is parsed in Python I get a \xc9 and after the process completes I always end up with a completely different (mostly invalid) character in the database than what was originally entered. I've tried all sorts of encoding and decoding (mostly from similar questions on stackoverflow), but I don't properly understand what exactly I should do.</p>  <p>Any tips would be appreciated. Thanks!</p>"	<p>Have you tried <code>var myEncodedString = encodeURIComponent('your string or whatever');</code> in your js code</p>
35692537	Get all the javascript file name and its contents in python perfectly	python|web-scraping|beautifulsoup	2016-02-29 05:27:56.073000 UTC	"<p>I want to scan some websites and would like to get all the java script files names and content.I tried python requests with BeautifulSoup but wasn't able to get the scripts details and contents.am I missing something ?</p>  <p>I have been trying lot of methods to find but I felt like stumbling in the dark. This is the code I am trying</p>  <pre><code>import requests from bs4 import BeautifulSoup r = requests.get(""http://www.marunadanmalayali.com/"") soup = BeautifulSoup(r.content) </code></pre>"	"<p>You can get all the linked JavaScript code use the below code:</p>  <pre><code>l = [i.get('src') for i in soup.find_all('script') if i.get('src')]  </code></pre>  <ul> <li><p><code>soup.find_all('script')</code> returns a list of all the <code>&lt;script&gt;</code> tags in the page.</p></li> <li><p>A <a href=""https://stackoverflow.com/questions/34835951/""><em>list comprehension</em></a> is used here to loop over all the elements in the list which returned by <code>soup.find_all('script')</code>.</p></li> <li><p><code>i</code> is a <em>dict like</em> object, use <code>.get('src')</code> to check if it has <code>src</code> attribute. If not, ignore it. Otherwise, put it into a list (which's called <code>l</code> in the example).</p></li> </ul>  <p>The output, in this case looks like below:</p>  <pre><code>['http://adserver.adtech.de/addyn/3.0/1602/5506153/0/6490/ADTECH;loc=700;target=_blank;grp=[group]',  'http://tags.expo9.exponential.com/tags/MarunadanMalayalicom/ROS/tags.js',  'http://tags.expo9.exponential.com/tags/MarunadanMalayalicom/ROS/tags.js',  'http://js.genieessp.com/t/057/794/a1057794.js',  'http://ib.adnxs.com/ttj?id=5620689&amp;cb=[CACHEBUSTER]&amp;pubclick=[INSERT_CLICK_TAG]',  'http://ib.adnxs.com/ttj?id=5531763',  'http://advs.adgorithms.com/ttj?id=3279193&amp;cb=[CACHEBUSTER]&amp;pubclick=[INSERT_CLICK_TAG]',  'http://xp2.zedo.com/jsc/xp2/fo.js',  'http://www.marunadanmalayali.com/js/mnmads.js',  'http://www.marunadanmalayali.com/js/jquery-2.1.0.min.js',  'http://www.marunadanmalayali.com/js/jquery.hoverIntent.minified.js',  'http://www.marunadanmalayali.com/js/jquery.dcmegamenu.1.3.3.js',  'http://www.marunadanmalayali.com/js/jquery.cookie.js',  'http://www.marunadanmalayali.com/js/swanalekha-ml.js',  'http://www.marunadanmalayali.com/js/marunadan.js?r=1875',  'http://www.marunadanmalayali.com/js/taboola_home.js',  'http://d8.zedo.com/jsc/d8/fo.js'] </code></pre>  <hr>  <p>My code missed some links because they're not in the HTML source actually.</p>  <p>You can see them in the console:</p>  <p><a href=""https://i.stack.imgur.com/qyvEG.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/qyvEG.png"" alt=""Chrome console""></a></p>  <p>But they're not in the source:</p>  <p><a href=""https://i.stack.imgur.com/Puvhe.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/Puvhe.png"" alt=""HTML source""></a></p>  <p>Usually, that's because these links were generated by JavaScript. And the <code>requests</code> module doesn't run any JavaScript in the page like <em>a real browser</em> - it only send a request to get the HTML source.</p>  <p>If you also need them, you have to use another module to run the JavaScript in that page, and you can see these links then. For that, I'd suggest use <a href=""http://selenium-python.readthedocs.org/"" rel=""nofollow noreferrer""><strong>selenium</strong></a> - which runs <em>a real browser</em> so it can runs JavaScript in the page.</p>  <p>For example (make sure that you have already installed selenium and a web driver for it):</p>  <pre><code>from bs4 import BeautifulSoup from selenium import webdriver  driver = webdriver.Chrome()  # use Chrome driver for example driver.get('http://www.marunadanmalayali.com/')  soup = BeautifulSoup(driver.page_source, ""html.parser"") l = [i.get('src') for i in soup.find_all('script') if i.get('src')]  __import__('pprint').pprint(l) </code></pre>"
35692537	Get all the javascript file name and its contents in python perfectly	python|web-scraping|beautifulsoup	2016-02-29 05:27:56.073000 UTC	"<p>I want to scan some websites and would like to get all the java script files names and content.I tried python requests with BeautifulSoup but wasn't able to get the scripts details and contents.am I missing something ?</p>  <p>I have been trying lot of methods to find but I felt like stumbling in the dark. This is the code I am trying</p>  <pre><code>import requests from bs4 import BeautifulSoup r = requests.get(""http://www.marunadanmalayali.com/"") soup = BeautifulSoup(r.content) </code></pre>"	"<p>You can use a select with <code>script[src]</code> which will only find script tags with a src, you don't need to call .get multiple times:</p>  <pre><code>import requests from bs4 import BeautifulSoup r = requests.get(""http://www.marunadanmalayali.com/"") soup = BeautifulSoup(r.content)  src = [sc[""src""] for sc in  soup.select(""script[src]"")] </code></pre>  <p>You can also specify <code>src=True</code> with find_all to do the same:</p>  <pre><code>src = [sc[""src""] for sc in soup.find_all(""script"",src=True)] </code></pre>  <p>Which will both give you the same output:</p>  <pre><code>['http://tags.expo9.exponential.com/tags/MarunadanMalayalicom/ROS/tags.js', 'http://tags.expo9.exponential.com/tags/MarunadanMalayalicom/ROS/tags.js', 'http://js.genieessp.com/t/052/954/a1052954.js', '//s3-ap-northeast-1.amazonaws.com/tms-t/marunadanmalayali-7219.js', 'http://advs.adgorithms.com/ttj?id=3279193&amp;cb=[CACHEBUSTER]&amp;pubclick=[INSERT_CLICK_TAG]', 'http://www.marunadanmalayali.com/js/mnmcombined1.min.js', 'http://www.marunadanmalayali.com/js/mnmcombined2.min.js'] </code></pre>  <p>Also if you use selenium, you can use it with <a href=""http://phantomjs.org/"" rel=""nofollow""><em>PhantomJs</em></a> for headless browsing, you don't need beautufulSoup at all if you use selenium, you can use the same css selector directly in selenium:</p>  <pre><code>from selenium import webdriver  driver = webdriver.PhantomJS() driver.get('http://www.marunadanmalayali.com/')  src = [sc.get_attribute(""src"") for sc in driver.find_elements_by_css_selector(""script[src]"")] print(src) </code></pre>  <p>Which gives you all the links:</p>  <pre><code>u'https://pixel.yabidos.com/fltiu.js?qid=836373f5137373f5131353&amp;cid=511&amp;p=165&amp;s=http%3a%2f%2fwww.marunadanmalayali.com%2f&amp;x=admeta&amp;nci=&amp;adtg=96331&amp;nai=', u'http://gum.criteo.com/sync?c=72&amp;r=2&amp;j=TRC.getRTUS', u'http://b.scorecardresearch.com/beacon.js', u'http://cdn.taboola.com/libtrc/impl.201-1-RELEASE.js', u'http://p165.atemda.com/JSAdservingMP.ashx?pc=1&amp;pbId=165&amp;clk=&amp;exm=&amp;jsv=1.84&amp;tsv=2.26&amp;cts=1459160775430&amp;arp=0&amp;fl=0&amp;vitp=0&amp;vit=&amp;jscb=&amp;url=&amp;fp=0;400;300;20&amp;oid=&amp;exr=&amp;mraid=&amp;apid=&amp;apbndl=&amp;mpp=0&amp;uid=&amp;cb=54613943&amp;pId0=64056124&amp;rank0=1&amp;gid0=64056124:1c59ac&amp;pp0=&amp;clk0=[External%20click-tracking%20goes%20here%20(NOT%20URL-encoded)]&amp;rpos0=0&amp;ecpm0=&amp;ntv0=&amp;ntl0=&amp;adsid0=', u'http://cdn.taboola.com/libtrc/marunadanaalayali-network/loader.js', u'http://s.atemda.com/Admeta.js', u'http://www.google-analytics.com/analytics.js', u'http://tags.expo9.exponential.com/tags/MarunadanMalayalicom/ROS/tags.js', u'http://tags.expo9.exponential.com/tags/MarunadanMalayalicom/ROS/tags.js', u'http://js.genieessp.com/t/052/954/a1052954.js', u'http://s3-ap-northeast-1.amazonaws.com/tms-t/marunadanmalayali-7219.js', u'http://d8.zedo.com/jsc/d8/fo.js', u'http://z1.zedo.com/asw/fm/1185/7219/9/fm.js?c=7219&amp;a=0&amp;f=&amp;n=1185&amp;r=1&amp;d=9&amp;adm=&amp;q=&amp;$=&amp;s=1936&amp;l=%5BINSERT_CLICK_TRACKER_MACRO%5D&amp;ct=&amp;z=0.025054786819964647&amp;tt=0&amp;tz=0&amp;pu=http%3A%2F%2Fwww.marunadanmalayali.com%2F&amp;ru=&amp;pi=1459160768626&amp;ce=UTF-8&amp;zpu=www.marunadanmalayali.com____1_&amp;tpu=', u'http://cas.criteo.com/delivery/ajs.php?zoneid=308686&amp;nodis=1&amp;cb=38688817829&amp;exclude=undefined&amp;charset=UTF-8&amp;loc=http%3A//www.marunadanmalayali.com/', u'http://ads.pubmatic.com/AdServer/js/showad.js', u'http://showads.pubmatic.com/AdServer/AdServerServlet?pubId=135167&amp;siteId=135548&amp;adId=600924&amp;kadwidth=300&amp;kadheight=250&amp;SAVersion=2&amp;js=1&amp;kdntuid=1&amp;pageURL=http%3A%2F%2Fwww.marunadanmalayali.com%2F&amp;inIframe=0&amp;kadpageurl=marunadanmalayali.com&amp;operId=3&amp;kltstamp=2016-3-28%2011%3A26%3A13&amp;timezone=1&amp;screenResolution=1024x768&amp;ranreq=0.8869257988408208&amp;pmUniAdId=0&amp;adVisibility=2&amp;adPosition=999x664', u'http://d8.zedo.com/jsc/d8/fo.js', u'http://z1.zedo.com/asw/fm/1185/7213/9/fm.js?c=7213&amp;a=0&amp;f=&amp;n=1185&amp;r=1&amp;d=9&amp;adm=&amp;q=&amp;$=&amp;s=1948&amp;l=%5BINSERT_CLICK_TRACKER_MACRO%5D&amp;ct=&amp;z=0.08655649935826659&amp;tt=0&amp;tz=0&amp;pu=http%3A%2F%2Fwww.marunadanmalayali.com%2F&amp;ru=&amp;pi=1459160768626&amp;ce=UTF-8&amp;zpu=www.marunadanmalayali.com____1_&amp;tpu=', u'http://advs.adgorithms.com/ttj?id=3279193&amp;cb=[CACHEBUSTER]&amp;pubclick=[INSERT_CLICK_TAG]', u'http://ib.adnxs.com/ttj?ttjb=1&amp;bdc=1459160761&amp;bdh=ZllBLkzcj2dGDVPeS0Sw_OTWjgQ.&amp;tpuids=eyJ0cHVpZHMiOlt7InByb3ZpZGVyIjoiY3JpdGVvIiwidXNlcl9pZCI6Il9KRC1PUmhLX3hLczd1cUJhbjlwLU1KQ2VZbDQ2VVUxIn1dfQ==&amp;view_iv=0&amp;view_pos=664,2096&amp;view_ws=400,300&amp;view_vs=3&amp;bdref=http%3A%2F%2Fwww.marunadanmalayali.com%2F&amp;bdtop=true&amp;bdifs=0&amp;bstk=http%3A%2F%2Fwww.marunadanmalayali.com%2F&amp;&amp;id=3279193&amp;cb=[CACHEBUSTER]&amp;pubclick=[INSERT_CLICK_TAG]', u'http://www.marunadanmalayali.com/js/mnmcombined1.min.js', u'http://www.marunadanmalayali.com/js/mnmcombined2.min.js', u'http://pixel.yabidos.com/iftfl.js?ver=1.4.2&amp;qid=836373f5137373f5131353&amp;cid=511&amp;p=165&amp;s=http%3a%2f%2fwww.marunadanmalayali.com%2f&amp;x=admeta&amp;adtg=96331&amp;nci=&amp;nai=&amp;nsi=&amp;cstm1=&amp;cstm2=&amp;cstm3=&amp;kqt=&amp;xc=&amp;test=&amp;od1=&amp;od2=&amp;co=0&amp;tps=34&amp;rnd=3m17uji8ftbf'] </code></pre>"
35809648	How can i call python or java method from javaScript?	javascript|java|python	2016-03-05 03:33:01.397000 UTC	"<pre><code>if (agentType == ""IOS"") {     apiVersion = requestJsonObj.version;     httpClient = {         httpGet: function (requestUrl, user_agent) {              return httpRequest(requestUrl, user_agent);         }     } }else if(agentType == ""Android""){     if(apiVersion&gt;apiVersion_LastOld){         httpClient = {             httpGet: function (requestUrl, user_agent) {                 return result=com.esvideo.parse.util.ParseHttpUtil.httpGet(requestUrl, user_agent)+"""";             }         }     } } </code></pre>  <p>someone write this code in javascript but i don't know how  it works.</p>"	"<p>You can't. There is no Python interpreter installed by default on an iOS device, and the Dalvik (not Java!) runtime on Android is not exposed to web pages.</p>"
35827729	thrift javascript client python server	javascript|python|json|thrift	2016-03-06 13:57:59.907000 UTC	"<p>In my python client I can get the answer for 1+1 .but when I use a javascript client I can't get a output.How should I call the add() method in python server using javascript. helloworld.thrift ,server.py and test.html javascript client files are mentioned below.how should I pass json object to python server and get the output corresponding to the add() method? .Here I pass the ""work"" json object.If it is wrong how should I call add() function in python and get the result for two integer values in correct way. Thank You.</p>  <p><strong>helloworld.thrift</strong>`</p>  <pre><code>service HelloWorld{ string ping(), i32 add(1:i32 num1,2:i32 num2)}` </code></pre>  <p><strong>server.py</strong></p>  <pre><code>    #!/usr/bin/env python  import socket import sys sys.path.append('./gen-py')  from helloworld import HelloWorld from helloworld.ttypes import *  from thrift.transport import TSocket from thrift.transport import TTransport from thrift.protocol import TBinaryProtocol from thrift.server import TServer  class HelloWorldHandler:   def ping(self):     return ""pong""    def add(self, n1, n2):   #print('add(%d,%d)' % (n1, n2))    return n1 + n2  handler = HelloWorldHandler() processor = HelloWorld.Processor(handler) transport = TSocket.TServerSocket(port = 9090) tfactory = TTransport.TBufferedTransportFactory() pfactory = TBinaryProtocol.TBinaryProtocolFactory()  server = TServer.TSimpleServer(processor, transport, tfactory, pfactory)  print ""Starting thrift server in python..."" server.serve() print ""done!"" </code></pre>  <p><strong>test.html</strong></p>  <pre><code>&lt;html xmlns=""http://www.w3.org/1999/xhtml"" xml:lang=""en"" lang=""en""&gt;    &lt;head&gt;        &lt;meta http-equiv=""Content-Type"" content=""text/html; charset=utf-8"" /&gt;          &lt;title&gt;Using Javascript Prompt and Alert for test&lt;/title&gt;                   &lt;script src=""thrift-0.9.3/lib/js/src/thrift.js""  type=""text/javascript""&gt;&lt;/script&gt;               &lt;script src=""gen-js/HelloWorld.js""        type=""text/javascript""&gt;&lt;/script&gt;               &lt;script src=""gen-js/helloworld_types.js""  type=""text/javascript""&gt;&lt;/script&gt;                &lt;script type=""text/javascript"" src=""http://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js""&gt;&lt;/script&gt;                &lt;script type=""text/javascript"" charset=""utf-8""&gt;                     var name;                  name=window.prompt(""please enter the variable"",""user"");                   document.writeln(""&lt;h1&gt;Hello,"" + name + ""    welcome to javascript and thrift&lt;/h1&gt;"");             function addition() {              var transport = new Thrift.Transport(""http://localhost:9090"");              var protocol  = new Thrift.Protocol(transport);              var client    = new HelloWorldClient(protocol);               var work = new object();              work.num1 = window.prompt(""please enter the number 1"",""num1"");              work.num2 = window.prompt(""please enter the number 2"",""num2"");              var result;                 result = client.add(1, work);              document.writeln(result);     }             &lt;/script&gt;    &lt;/head&gt;      &lt;body&gt;         &lt;h1&gt;Thrift javascript binding&lt;/h1&gt;          &lt;a href=""javascript:addition()""&gt;Hello&lt;/a&gt;    &lt;/body&gt; &lt;/html&gt; </code></pre>"	
35853630	Passing Parameters from Javascript to flask python script	javascript|python|angularjs|flask	2016-03-07 20:43:16.133000 UTC	"<p>Currently I have a angularjs file which uses $http.get to call my python flask script.</p>  <p>In this flask script I want to then call another python script (which is running pySolr), however the http.get call contains a parameter I wish to pass to this pySolr script.</p>  <p>Is there any documentation on this/ can it actually be done?</p>  <pre><code>$http.get('http://localhost:5000/python/solr', ""$scope.tag""); console.log($scope.tag); </code></pre>  <p>$scope.tag is the variable I need to get</p>  <p>My flask file is as follows:</p>  <pre><code>from flask import Flask app = Flask(__name__)  @app.route('/python/solr') def solr():     ""MY CODE TO CALL SOLR SCRIPT GOES HERE""   if __name__ == ""__main__"": app.run() </code></pre>"	<p>You should be able to do this using query parameters:</p>  <pre><code>$http.get('http://localhost:5000/python/solr?tag=' + $scope.tag); console.log($scope.tag); </code></pre>  <p>In flask</p>  <pre><code>from flask import request  @app.route('/python/solr') def solr():     print request.args  # should get tag here </code></pre>
35867087	import javascript files in ipython notebook to create a custom widget	javascript|python|ipython|jupyter-notebook|ipywidgets	2016-03-08 12:12:42.710000 UTC	"<p>I'm newer in ""ipython notebook"" and I would to create a custom widget with ipywidgets using html and javascript. I'm using a javascript library and I wanna know if there is a way to import it inside ipython notebook.</p>  <p>thank u in advance</p>"	"<p>You might want to look into custom.js file it can be found in the Users\username\.ipython\profile_default\static\custom (or jupyter depending on installed versions). Here you can add links to your js files and they will run each time you open the notebooks.</p>  <p>Also you can have a look into notebook extensions (like <a href=""https://github.com/ipython-contrib/IPython-notebook-extensions"" rel=""nofollow"">these</a> for example )</p>"
35867087	import javascript files in ipython notebook to create a custom widget	javascript|python|ipython|jupyter-notebook|ipywidgets	2016-03-08 12:12:42.710000 UTC	"<p>I'm newer in ""ipython notebook"" and I would to create a custom widget with ipywidgets using html and javascript. I'm using a javascript library and I wanna know if there is a way to import it inside ipython notebook.</p>  <p>thank u in advance</p>"	"<p>The way to import javascript files for use in a custom widget is to use require.config to load the script into the widget. For example, if you wanted to load fabric.js from <a href=""https://cdnjs.cloudflare.com/ajax/libs/fabric.js/2.7.0/fabric.min.js"" rel=""nofollow noreferrer"">https://cdnjs.cloudflare.com/ajax/libs/fabric.js/2.7.0/fabric.min.js</a>, you would do the following (note that you don't include the "".js"" in the path!)</p>  <pre><code>%%javascript require.undef('hello'); require.config({   //Define 3rd party plugins dependencies   paths: {     fabric: ""https://cdnjs.cloudflare.com/ajax/libs/fabric.js/2.7.0/fabric.min""   } }); define('hello', [""@jupyter-widgets/base"", 'fabric'], function(widgets) {... </code></pre>"
35867087	import javascript files in ipython notebook to create a custom widget	javascript|python|ipython|jupyter-notebook|ipywidgets	2016-03-08 12:12:42.710000 UTC	"<p>I'm newer in ""ipython notebook"" and I would to create a custom widget with ipywidgets using html and javascript. I'm using a javascript library and I wanna know if there is a way to import it inside ipython notebook.</p>  <p>thank u in advance</p>"	"<p>I found the solution you just need the put the file somewhere in your machine and then use the magic cell HTML like this:</p>  <pre><code>%%HTML &lt;script src=""path-to-your-file""&gt;&lt;/script&gt; </code></pre>"
35920645	How to Run Javascript code from Python pandas? Convert to csv method	javascript|python|csv|pandas	2016-03-10 15:27:21.450000 UTC	"<p>I have been working Python pandas DF. I usually Load a csv files, but at the same time I have excel files too. I find out pandas is very slow reading Excel files. I have JavaScript code that will convert from excel to csv. I am looking to way calling this script to automating conversion to csv to speed the pipeline. Basically do conversion behind scene. What is the best way to do this? I can share JS code anytime. </p>"	"<p>I follow <a href=""https://docs.python.org/3/library/subprocess.html"" rel=""nofollow"">subprocess</a> method and it worked perfectly for me. Here is what I added to my code, order to run javascript code from python.</p>  <pre><code>Import subprocess subprocess.check_call([""cscript"", ""yourjsfile.js""]) </code></pre>"
35920645	How to Run Javascript code from Python pandas? Convert to csv method	javascript|python|csv|pandas	2016-03-10 15:27:21.450000 UTC	"<p>I have been working Python pandas DF. I usually Load a csv files, but at the same time I have excel files too. I find out pandas is very slow reading Excel files. I have JavaScript code that will convert from excel to csv. I am looking to way calling this script to automating conversion to csv to speed the pipeline. Basically do conversion behind scene. What is the best way to do this? I can share JS code anytime. </p>"	"<p><a href=""https://stackoverflow.com/questions/35788729/start-node-app-from-python-script"">start node app from python script</a> explains how to use <code>python</code> <code>subprocess</code> to run a <code>node.js</code> script.</p>  <p><code>node.js</code> runs <code>javascript</code> code on a <code>v8</code> (chrome) engine.  It's is easy to install on both Linux and Windows.  There's an active SO tag, <a href=""https://stackoverflow.com/questions/tagged/node.js"">https://stackoverflow.com/questions/tagged/node.js</a></p>  <p>I like <code>coffeescript</code> as a way of writing <code>javascript</code> code with a syntax that is much more like Python.</p>  <p>I've see Python web stack questions (e.g. <code>django</code>) that talk about running <code>javascript</code>, though that might be on the client side rather than the serve.</p>"
35947397	Getting a javascript variable out of a python selenium call	javascript|python|selenium	2016-03-11 18:29:15.100000 UTC	"<p>I am currently using Python with selenium to monitor changes to our pbx.  A value I need is being called by a javascript call and is not actually being written to html so it's been a little confusing as to how I can extract the value.  If I inspect the element this is what I see</p>  <pre><code>&lt;input class=""SEditorInputText"" id=""extension_4"" maxlength=""15"" onkeyup=""javascript:onEditNumber(this);"" onchange=""javascript:onPropertyChange(this);"" type=""text""&gt; </code></pre>  <p>On the web page it displays the number 1001 which is our huntgroup number.  I am assuming that number is generated by the <b>onkeyup=""javascript:onEditNumber(this)</b> function, if so is there a way to get the output to console so that I may evaluate the number assigned?</p>  <p>Here's my selenium code thus far</p>  <pre><code>#!/usr/bin/env python  import time import sys, urllib2 from selenium import webdriver  driver = webdriver.Firefox()  login_username = '&lt;username&gt;' login_password = '&lt;password&gt;'  url = '&lt;login Url&gt;' scripts = '&lt;scripts Url&gt;'  driver.get(url)  username = driver.find_element_by_name(""username"") password = driver.find_element_by_name(""password"")  username.send_keys(login_username) password.send_keys(login_password)  link = driver.find_element_by_name(""loginbutton"") link.click()  driver.get(scripts)  aa = driver.find_element_by_xpath("".//input[contains(@onclick, 'compsci-main-aa.aef')]"").click()  opt1 = driver.find_element_by_id('extension_4') </code></pre>  <p>It so far works as expected going to the section in question but like I mentioned before, I need the value of that variable.  When complete this script will be running headless.</p>  <p>Thanks in advance.</p>"	"<p>I have not tested it yet, but just read in another question in SO.</p> <p>If you have a variable, say ,</p> <pre><code> var oneVariable = &quot;A_String_Variable&quot;; </code></pre> <p>Then, you would want to create a method  calling and returning <strong>window.oneVariable</strong> in python using <strong>driver.execute_script()</strong></p> <p>I will update this post after attempting this logic and testing. Please check this answer to get an Idea.</p> <p><a href=""https://stackoverflow.com/questions/46361494/how-to-get-the-localstorage-with-python-and-selenium-webdriver/46361900"">How to get the localStorage with Python and Selenium WebDriver</a></p> <pre><code> **-------------------------------** </code></pre> <p>So my tested and working code is- i have this variable in javasript- <code>var na ;</code> I am getting it on selenium like this -</p> <pre><code> newav = r&quot;file:///C://Users\\admin\\Desktop\\teast elete.html&quot; driver.get(newav) sleep(15) namee = driver.find_element_by_id(&quot;name&quot;).text print(namee) body = driver.find_element_by_id(&quot;body&quot;).get_attribute(&quot;innerHTML&quot;) print(body) bnb = driver.execute_script(&quot;&quot;&quot;return window.na&quot;&quot;&quot;) print(&quot;bnb&quot;) print(bnb) bnb = driver.execute_script(&quot;&quot;&quot;return na&quot;&quot;&quot;) print(&quot;bnb&quot;) print(bnb) </code></pre>"
35947397	Getting a javascript variable out of a python selenium call	javascript|python|selenium	2016-03-11 18:29:15.100000 UTC	"<p>I am currently using Python with selenium to monitor changes to our pbx.  A value I need is being called by a javascript call and is not actually being written to html so it's been a little confusing as to how I can extract the value.  If I inspect the element this is what I see</p>  <pre><code>&lt;input class=""SEditorInputText"" id=""extension_4"" maxlength=""15"" onkeyup=""javascript:onEditNumber(this);"" onchange=""javascript:onPropertyChange(this);"" type=""text""&gt; </code></pre>  <p>On the web page it displays the number 1001 which is our huntgroup number.  I am assuming that number is generated by the <b>onkeyup=""javascript:onEditNumber(this)</b> function, if so is there a way to get the output to console so that I may evaluate the number assigned?</p>  <p>Here's my selenium code thus far</p>  <pre><code>#!/usr/bin/env python  import time import sys, urllib2 from selenium import webdriver  driver = webdriver.Firefox()  login_username = '&lt;username&gt;' login_password = '&lt;password&gt;'  url = '&lt;login Url&gt;' scripts = '&lt;scripts Url&gt;'  driver.get(url)  username = driver.find_element_by_name(""username"") password = driver.find_element_by_name(""password"")  username.send_keys(login_username) password.send_keys(login_password)  link = driver.find_element_by_name(""loginbutton"") link.click()  driver.get(scripts)  aa = driver.find_element_by_xpath("".//input[contains(@onclick, 'compsci-main-aa.aef')]"").click()  opt1 = driver.find_element_by_id('extension_4') </code></pre>  <p>It so far works as expected going to the section in question but like I mentioned before, I need the value of that variable.  When complete this script will be running headless.</p>  <p>Thanks in advance.</p>"	"<p>I can think of two approaches for this.</p>  <ol> <li><p>If you know the name of the JavaScript function you want to execute, you can do something like:</p>  <p><code>num = driver.execute_script('return onEditNumber()')</code></p></li> <li><p>If you don't know the name of the JavaScript function but you know the element and the event that triggers it, you can do:</p>  <p><code>func_name = driver.find_element_by_id('extension_4').get_attribute('onkeyup')</code></p>  <p><code>func_name = func_name[func_name.index(':')+1:] #<em> this will strip off 'javascript:' from the string name, so now 'func_name' contains 'onEditNumber();'</em></code></p>  <p><code>num = driver.execute_script('return ' + func_name)</code></p></li> </ol>  <p>And if this JavaScript function returns a value, it will be stored in 'num'</p>"
35950573	Python Unicode string to Javascript	javascript|python|json|unicode	2016-03-11 21:50:14.063000 UTC	"<p>I want to get the output with single backslash in my json file which is an input to my javascript/HTML document. it is for visualization purposes using vis.js I am unable to get rid of Python's way of adding a backslash before a backslash. I have tried escaping backslash and using r'' type strings. </p>  <p>I have a dictionary: </p>  <pre><code>f = {'id':0,'group':'main', 'label':'Main', \ 'font':{'size': 60}, 'shape': 'icon', 'icon': {'face':'Ionicons',\ 'code': r'\uf276', 'size':200, 'color':'#f0a30a'}, \ 'color': {'background': 'pink', 'border': 'black'}}  In [91]: print f '{'group': 'main', 'color': {'border': 'black', 'background': 'pink'}, 'label': 'Main', 'shape': 'icon', 'font': {'size': 60}, 'id': 0, 'icon': {'size': 200, 'color': '#f0a30a', 'code': '\\uf276', 'face': 'Ionicons'}} </code></pre>  <p>I am dumping it into a json file using json.dumps</p>  <pre><code>In [92]: json.dumps(f) Out[92]: '{""group"": ""main"", ""color"": {""border"": ""black"", ""background"": ""pink""}, ""label"": ""Main"", ""shape"": ""icon"", ""font"": {""size"": 60}, ""id"": 0, ""icon"": {""size"": 200, ""color"": ""#f0a30a"", ""code"": ""\\\\uf276"", ""face"": ""Ionicons""}}'  In [93]: print json.dumps(f) {""group"": ""main"", ""color"": {""border"": ""black"", ""background"": ""pink""}, ""label"": ""Main"", ""shape"": ""icon"", ""font"": {""size"": 60}, ""id"": 0, ""icon"": {""size"": 200, ""color"": ""#f0a30a"", ""code"": ""\\uf276"", ""face"": ""Ionicons""}} </code></pre>  <p>I am saving this string into a file using json.dump(filename, f) and it is outputting this:</p>  <pre><code>{     ""group"": ""main"",      ""color"": {         ""border"": ""black"",          ""background"": ""pink""     },      ""label"": ""Main"",      ""shape"": ""icon"",      ""font"": {         ""size"": 60     },      ""id"": 0,      ""icon"": {         ""size"": 200,          ""color"": ""#f0a30a"",          ""code"": ""\\uf276"",          ""face"": ""Ionicons""     } }  </code></pre>"	"<p>The string containing the backslash is a <em>raw string</em>. It doesn't contain the unicode character you want, but instead an actual backslash, followed by ""uf276"".</p>  <p>Turn it into a normal string:</p>  <pre><code>f = {'id':0,'group':'main', 'label':'Main', \ 'font':{'size': 60}, 'shape': 'icon', 'icon': {'face':'Ionicons',\ 'code': '\uf276', 'size':200, 'color':'#f0a30a'}, \ 'color': {'background': 'pink', 'border': 'black'}} </code></pre>  <p>Then the json-dumping should work, too:</p>  <pre><code>&gt;&gt;&gt; print(json.dumps(f, indent=4)) {     ""shape"": ""icon"",     ""font"": {         ""size"": 60     },     ""label"": ""Main"",     ""color"": {         ""background"": ""pink"",         ""border"": ""black""     },     ""group"": ""main"",     ""id"": 0,     ""icon"": {         ""face"": ""Ionicons"",         ""color"": ""#f0a30a"",         ""size"": 200,         ""code"": ""\uf276""     } } </code></pre>"
35950573	Python Unicode string to Javascript	javascript|python|json|unicode	2016-03-11 21:50:14.063000 UTC	"<p>I want to get the output with single backslash in my json file which is an input to my javascript/HTML document. it is for visualization purposes using vis.js I am unable to get rid of Python's way of adding a backslash before a backslash. I have tried escaping backslash and using r'' type strings. </p>  <p>I have a dictionary: </p>  <pre><code>f = {'id':0,'group':'main', 'label':'Main', \ 'font':{'size': 60}, 'shape': 'icon', 'icon': {'face':'Ionicons',\ 'code': r'\uf276', 'size':200, 'color':'#f0a30a'}, \ 'color': {'background': 'pink', 'border': 'black'}}  In [91]: print f '{'group': 'main', 'color': {'border': 'black', 'background': 'pink'}, 'label': 'Main', 'shape': 'icon', 'font': {'size': 60}, 'id': 0, 'icon': {'size': 200, 'color': '#f0a30a', 'code': '\\uf276', 'face': 'Ionicons'}} </code></pre>  <p>I am dumping it into a json file using json.dumps</p>  <pre><code>In [92]: json.dumps(f) Out[92]: '{""group"": ""main"", ""color"": {""border"": ""black"", ""background"": ""pink""}, ""label"": ""Main"", ""shape"": ""icon"", ""font"": {""size"": 60}, ""id"": 0, ""icon"": {""size"": 200, ""color"": ""#f0a30a"", ""code"": ""\\\\uf276"", ""face"": ""Ionicons""}}'  In [93]: print json.dumps(f) {""group"": ""main"", ""color"": {""border"": ""black"", ""background"": ""pink""}, ""label"": ""Main"", ""shape"": ""icon"", ""font"": {""size"": 60}, ""id"": 0, ""icon"": {""size"": 200, ""color"": ""#f0a30a"", ""code"": ""\\uf276"", ""face"": ""Ionicons""}} </code></pre>  <p>I am saving this string into a file using json.dump(filename, f) and it is outputting this:</p>  <pre><code>{     ""group"": ""main"",      ""color"": {         ""border"": ""black"",          ""background"": ""pink""     },      ""label"": ""Main"",      ""shape"": ""icon"",      ""font"": {         ""size"": 60     },      ""id"": 0,      ""icon"": {         ""size"": 200,          ""color"": ""#f0a30a"",          ""code"": ""\\uf276"",          ""face"": ""Ionicons""     } }  </code></pre>"	"<pre><code>json.dumps(f, ensure_ascii=False).encode('utf8') </code></pre>  <p>will give you</p>  <pre><code>{     ""group"": ""main"",     ""color"": {         ""border"": ""black"",         ""background"": ""pink""     },     ""label"": ""Main"",     ""shape"": ""icon"",     ""font"": {         ""size"": 60     },     ""id"": 0,     ""icon"": {         ""size"": 200,         ""color"": ""#f0a30a"",         ""code"": ""\xef\x89\xb6"",         ""face"": ""Ionicons""     } } </code></pre>  <p><strong>EDIT</strong> Also the code should be <code>u'\uf276'</code></p>"
35976038	calling javascript procedure with python-eve	eve	2016-03-13 21:23:30.967000 UTC	<p>is there a way to implement some logic/coding into my GET request.</p>  <p>for example call an javascript procedure on the mongodb.</p>  <p>background is that i want to calculate average values for my stored geopoints within a given geo polygon.</p>  <p>best regards Harald</p>	"<p>You can hook callback functions to all <a href=""http://python-eve.org/features#database-event-hooks"" rel=""nofollow"">database</a> and <a href=""http://python-eve.org/features#pre-request-event-hooks"" rel=""nofollow"">requests</a> events. </p>  <pre><code>&gt;&gt;&gt; def add_average(resource, response): ...     response['average values'] = my_average_values  &gt;&gt;&gt; app = Eve() &gt;&gt;&gt; app.on_fetched_item += add_signature </code></pre>  <p>From your callback you could do a PyMongo <a href=""http://api.mongodb.org/python/current/api/pymongo/database.html?highlight=eval#pymongo.database.Database.eval"" rel=""nofollow""><code>eval</code></a> to execute the JavaScript code. Keep in mind however that <code>eval</code> has been deprecated since Mongo 3.0, and is not recommended. </p>  <p>Quoting MongoDB's <a href=""https://stackoverflow.com/a/16255503/323269"">Asya Kamsky</a>:</p>  <blockquote>   <p>In general, performance of <code>eval</code> will be poor and I would recommend implementing in Python anything you were planning on implementing in JS if you are writing a Python application.</p> </blockquote>"
35991032	How do I debug a Python program (I am coming from a Ruby on Rails/JavaScript background)?	python|debugging	2016-03-14 15:02:45.443000 UTC	"<p>I make web applications using Ruby on Rails as my backend. I use React and Flux on the frontend, which is JavaScript. I can fully use the debugging tools I need. I simply add the line of code ""debugger"" anywhere in my app, so that execution stops there. I use byebug gem in Rails. When the ""debugger"" line of code is executed on backend code, the debugging happens on the command line; when it happens in JavaScript code, the debugging happens in Chrome Dev Tools. In other words, I can work very quickly to debug.</p>  <p>What is the equivalent convenient debugging tool in Python? In other words, what should a person who can already program in general, and just wants to rapidly be able to debug in Python use? I am using Atom editor (like I use when I am making a web app).</p>"	"<p>You can use <code>pdb</code></p> <p>To add a breakpoint, insert:</p> <pre><code>import pdb; pdb.set_trace() </code></pre> <p>where you want to stop.</p> <p>NB: Since python 3.7, you just can do</p> <pre><code>breakpoint() </code></pre> <p>In the debugger mode you can use the following <a href=""https://docs.python.org/3/library/pdb.html"" rel=""noreferrer"">commands</a>.</p>"
36005177	"How do I pass an array as parameter from Ipython notebook to an html file, which contains some javascript functions?"	javascript|html|jupyter-notebook	2016-03-15 07:41:38.963000 UTC	"<p>I have one html file (file.html) which contains a javascript function as below :</p>  <h2>file.html</h2>  <pre><code>&lt;html&gt;  &lt;head&gt;   &lt;/head&gt; &lt;script&gt;     function demo()     {        do something using param1;     } &lt;/script&gt; &lt;/html&gt; </code></pre>  <p>'Param1' is the array that I need to pass from an IPython notebook everytime I call this file.html. The requirement is to show the the output of file.html in the notebook itself which I am doing using the following commands.</p>  <pre><code>from IPython.display import IFrame IFrame('file.html', width=1000, height=550) </code></pre>"	"<p>You probably want to pass your array as an URL parameter.</p>  <p>Say your array is <code>{'a', 'b', 'c', 'd'}</code> - you can do <code>IFrame('file.html?param1=a,b,c,d', width=1000, height=550)</code> and then fetch url parameters from javascript. It's up to you how you format your array as a text string tho.</p>  <p>About fetching url parameters : there is no standard way to do that in javascript <a href=""https://stackoverflow.com/questions/979975/how-to-get-the-value-from-the-url-parameter"">but here is an implementation</a>.</p>  <p>Then do whatever the you need/want with it inside <code>demo()</code>.</p>"
36044708	Clicking a href javascript link using python selenium	javascript|python|selenium|selenium-webdriver|selenium-ide	2016-03-16 19:00:32.153000 UTC	"<p>This is the element I want to click on using python selenium</p>  <pre><code>&lt;a href=""javascript:linksubmit()""&gt; </code></pre>  <p>The text of the link is </p>  <p>""Check Status of Application Materials""</p>  <p>I've been stuck on this for hours. Tried the following, none worked</p>  <pre><code>mydriver.find_element_by_xpath(""//a[@href='javascript:linksubmit()']"").click()  link = mydriver.find_element_by_partial_link_text('Check Status').click()  link = mydriver.find_element_by_css_selector(""a[title='Check Status of Application Materials']"").click() </code></pre>"	
36055921	Rendering Javascript to obtain static HTML in Python	python|html|rendering|html-rendering	2016-03-17 09:07:54.580000 UTC	"<p>I have a big amount of HTML files which I want to process using BeautifulSoup and generate some statistics. Although, I came across the problem that the HTML files contain scripts that may generate more HTML code which is not being processed. Therefore, I need to render all Javascript into static HTML before proceeding.</p>  <p>I have seen some options such as using Selenium, but it doesn't seem to fit since I don't want to launch a browser (it should be done in background).</p>  <p>Can someone please suggest an appropriate approach to this?</p>  <p>Thanks in advance!</p>"	"<p>Since you need a Javascript engine, using a headless browser is the way to go. Using Selenium web driver with the PhantomJS headless browser is probably your best option:</p>  <pre><code>driver = webdriver.PhantomJS() driver.get(""..."") bs = BeautifulSoup(driver.page_source) </code></pre>"
36080978	How to insert array variable from Python to Javascript	javascript|python|arrays	2016-03-18 09:42:58.863000 UTC	"<p>I have this issue passing the data from an array variable to the python javascript function. Below is the entire script</p>  <pre><code> array1 =[['X-val', 'Y-val'], [4, 5], [8, 12], [11, 14]];  self.response.out.write('&lt;script type=""text/javascript""&gt;'+                         'google.load(""visualization"", ""1"", {packages:[""corechart""]});'+                         'google.setOnLoadCallback(drawChart);'+                         'function drawChart() { '+                         'var data = google.visualization.arrayToDataTable({0});' +                         'var chart = new google.visualization.LineChart(document.getElementById(""casestrend""));chart.draw(data);} '+                         '&lt;/script&gt; '.json.dumps(array1)) </code></pre>  <p>This is the javascript code which i want to convert to the python format wherein the array required for arrayToDataTable() will be fetched through queries. Currently static version of it (array1 above) doesn't work</p>  <pre><code>&lt;script type=""text/javascript""&gt;                                                                                         google.load(""visualization"", ""1"", {packages:[""corechart""]});                                                          google.setOnLoadCallback(drawChart);                                                                                  function drawChart() {                                                                                                var data = google.visualization.arrayToDataTable([['X-val', 'Y-val'], [4, 5], [8, 12], [11, 14]]);                  var chart = new google.visualization.LineChart(document.getElementById('chart'));                                   chart.draw(data);                                                                                                   }                                                                                                                     &lt;/script&gt;   </code></pre>  <p>Please let me know how to pass the data (array) from the python to the javascript so that the chart gets loaded.</p>"	"<p>This will work.</p>  <pre><code>array1 =[['X-val', 'Y-val'], [4, 5], [8, 12], [11, 14]];  self.response.out.write(""""""&lt;script type=""text/javascript""&gt;     google.load(""visualization"", ""1"", {{packages:[""corechart""]}});     google.setOnLoadCallback(drawChart);     function drawChart() {{      var data = google.visualization.arrayToDataTable({0});     var chart = new google.visualization.LineChart(document.getElementById(""casestrend""));chart.draw(data);}}     &lt;/script&gt; """""".format(json.dumps(array1))) </code></pre>"
36080978	How to insert array variable from Python to Javascript	javascript|python|arrays	2016-03-18 09:42:58.863000 UTC	"<p>I have this issue passing the data from an array variable to the python javascript function. Below is the entire script</p>  <pre><code> array1 =[['X-val', 'Y-val'], [4, 5], [8, 12], [11, 14]];  self.response.out.write('&lt;script type=""text/javascript""&gt;'+                         'google.load(""visualization"", ""1"", {packages:[""corechart""]});'+                         'google.setOnLoadCallback(drawChart);'+                         'function drawChart() { '+                         'var data = google.visualization.arrayToDataTable({0});' +                         'var chart = new google.visualization.LineChart(document.getElementById(""casestrend""));chart.draw(data);} '+                         '&lt;/script&gt; '.json.dumps(array1)) </code></pre>  <p>This is the javascript code which i want to convert to the python format wherein the array required for arrayToDataTable() will be fetched through queries. Currently static version of it (array1 above) doesn't work</p>  <pre><code>&lt;script type=""text/javascript""&gt;                                                                                         google.load(""visualization"", ""1"", {packages:[""corechart""]});                                                          google.setOnLoadCallback(drawChart);                                                                                  function drawChart() {                                                                                                var data = google.visualization.arrayToDataTable([['X-val', 'Y-val'], [4, 5], [8, 12], [11, 14]]);                  var chart = new google.visualization.LineChart(document.getElementById('chart'));                                   chart.draw(data);                                                                                                   }                                                                                                                     &lt;/script&gt;   </code></pre>  <p>Please let me know how to pass the data (array) from the python to the javascript so that the chart gets loaded.</p>"	"<p>Your current solution doesn't work because <code>format</code> (you missed it, right?) calls before strings concatenated.</p>  <p>In current case I would prefer concatenation over format to prevent braces escaping:</p>  <pre><code>js_code = '''           &lt;script type=""text/javascript""&gt;           google.load(""visualization"", ""1"", {packages:[""corechart""]});           google.setOnLoadCallback(drawChart);           function drawChart() {            var data = google.visualization.arrayToDataTable(''' + json.dumps(array1) + ''');           var chart = new google.visualization.LineChart(document.getElementById(""casestrend""));chart.draw(data);}            &lt;/script&gt;           ''' </code></pre>"
36136598	Interacting with javascript scrollable container from python/selenium	javascript|python|selenium|web-scraping|census	2016-03-21 16:29:40.360000 UTC	"<p>I am trying to use Selenium/Python to automate downloading datasets from <a href=""http://factfinder.census.gov"" rel=""nofollow noreferrer"">http://factfinder.census.gov</a>. I am new to Javascript, so apologies if this is an easily resolved problem. I am working on the beginning portion of the code now, and it should:</p>  <ol> <li>Go <a href=""http://factfinder.census.gov/faces/nav/jsf/pages/searchresults.xhtml?refresh=t"" rel=""nofollow noreferrer"">here</a> </li> <li>Click the ""Topics"" button</li> <li>Once ""Topics"" is clicked and the new page loads, click on ""Dataset""</li> <li>Select the datasets I need, ideally by indexing the (sub) table.</li> </ol>  <p>I am stuck at step 3. Here is a screenshot; seems I want to access the div w/id ""scrollable_container_topics"" and then either iterate through or index to get its child nodes (in this case, I want the last child node). I have tried using script_execute and then locating the element by id and also by class name, but nothing has worked so far. I'd be grateful for any pointers.</p>  <p><a href=""https://i.stack.imgur.com/pmt1a.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/pmt1a.png"" alt=""enter image description here""></a></p>  <p>Here is my code:</p>  <pre><code>import os import re import time from selenium import webdriver from selenium.webdriver.common.keys import Keys from selenium.webdriver.common.by import By from selenium.webdriver.support import expected_conditions from selenium.webdriver.support.wait import WebDriverWait from selenium.webdriver.support.select import Select   # A list of all the variables we want to extract; corresponds to ""Topics"" field on site topics = [""B03003"", ""B05001""]  # A list of all the states we want to extract data for (currently, strings; is there a numeric code?) states = [""New Jersey"", ""Georgia""]  # A vector of all the years we want to extract data for [lower, upper) *Note* this != range of years covered by data years = range(2009, 2010)  # Define the class class CensusSearch:      # Initialize and set attributes of the query     def __init__(self, topic, state, year):          """"""         :type topic: str         :type state: str         :type year: int         """"""         self.topic = topic         self.state = state         self.year = year       def setUp(self):         # self.driver = webdriver.Chrome(""C:/Python34/Scripts/chromedriver.exe"")         self.driver = webdriver.Firefox()      def extractData(self):         driver = self.driver         driver.set_page_load_timeout(1000000000000)         driver.implicitly_wait(100)          # Navigate to site; this url = after you have already chosen ""Advanced Search""         driver.get(""http://factfinder.census.gov/faces/nav/jsf/pages/searchresults.xhtml?refresh=t"")         driver.implicitly_wait(10)          # FIlter by dataset (want the ACS 1, 3, and 5-year estimates)          driver.execute_script(""document.getElementsByClassName('leftnav_btn')[0].click()"") # click the ""Topics"" button         driver.implicitly_wait(20)           # This is where I am stuck; I've tried the following:          getData = driver.find_element_by_id(""ygtvlabelel172"")         getData.click()         driver.implicitly_wait(10)           # Filter geographically: select all counties in the United States and Puerto Rico         # Click ""Geographies"" button         driver.execute_script(""document.getElementsByClassName('leftnav_btn')[1].click()"")         driver.implicitly_wait(10)          drop_down = driver.find_element_by_class_name(""popular_summarylevel"")         select_box = Select(drop_down)         select_box.select_by_value(""050"")      # Once ""Geography"" is clicked, select ""County - 050"" from the drop-down menu; then select ""All US + Puerto Rico""     drop_down_counties = driver.find_element_by_id(""geoAssistList"")     select_box_counties = Select(drop_down_counties)     select_box_counties.select_by_index(1)      # Click the ""ADD TO YOUR SELECTIONS"" button     driver.execute_script(""document.getElementsByClassName('button-g')[0].click()"")     driver.implicitly_wait(10)      def tearDown(self):         self.driver.quit()      def main(self):         #print(getattr(self))         print(self.state)         print(self.topic)         print(self.year)         self.setUp()         self.extractData()         self.tearDown()   for a in topics:     for b in states:         for c in years:             query = CensusSearch(a, b, c)             query.main()  print(""done"") </code></pre>"	"<p>Several things to fix:</p>  <ul> <li>you don't have to use <code>document.getElement..</code> methods - selenium has it's own methods to locate elements on a page</li> <li>there is no need to manipulate implicit waits (plus, make sure you understand that calling <code>implicitly_wait()</code> would not behave as a <code>time.sleep()</code> - you would not get an immediate time delay) or page load timeouts in this case - just use <a href=""http://selenium-python.readthedocs.org/waits.html#explicit-waits"" rel=""nofollow"">Explicit Waits</a> before you perform actions on the page</li> </ul>  <p>Here is a working code that clicks ""Topics"" and then ""Dataset"":</p>  <pre><code>from selenium import webdriver from selenium.webdriver import ActionChains from selenium.webdriver.common.by import By from selenium.webdriver.support.wait import WebDriverWait from selenium.webdriver.support import expected_conditions as EC   driver = webdriver.Firefox() driver.get(""http://factfinder.census.gov/faces/nav/jsf/pages/searchresults.xhtml?refresh=t"")  wait = WebDriverWait(driver, 10) actions = ActionChains(driver)  # click ""Topics"" topics = wait.until(EC.element_to_be_clickable((By.CSS_SELECTOR, ""a#topic-overlay-btn""))) driver.execute_script(""arguments[0].click();"", topics)  # click ""Dataset"" dataset = wait.until(EC.element_to_be_clickable((By.CSS_SELECTOR, ""span[title=Dataset]""))) dataset.click() </code></pre>"
36178820	Passing data from Javascript back to Python	javascript|python	2016-03-23 12:55:42.677000 UTC	"<p>I am working on webapp2 python framework and wanted to pass data from the javascript back to python. I have dropdown and every time i trigger the change event, i want the value to be captured and query to be executed with the selected value.</p>  <pre><code>test=''; js_code_week_selected ='''&lt;script type=""text/javascript""&gt;                           var selected='';                           selected = $('#selectedlist').text();alert(selected);                           $('#selectedlist').change(function () {                           var firstDropVal = $('#selectedlist').val();                           '''+test+''' = firstDropVal;                           alert(firstDropVal);                            });                           &lt;/script&gt;  ''' self.response.out.write(js_code_week_selected) logging.info(test); </code></pre>"	"<p>Cross Origin support is required</p>  <p>Have a look into <a href=""http://enable-cors.org/"" rel=""nofollow"">enable-cors.org</a> and you can test virtually at <a href=""http://client.cors-api.appspot.com/client"" rel=""nofollow"">http://client.cors-api.appspot.com/client</a></p>"
36210215	Encoding message with publickey in javascript and decode it with privatekey in python	javascript|python|encryption	2016-03-24 21:22:46.663000 UTC	"<p>I had cryptography lessons some time ago and I didn't use this knowledge for too long. I cannot find the solution to my problem. I want to encrypt the password given by the user in html form with public key using JavaScript. Then I want to decode the password in the backend with python using the private key.</p>  <p>I have private key and public key generated with <a href=""https://cryptography.io/en/latest/hazmat/primitives/asymmetric/rsa/"" rel=""nofollow"">cryptography</a> package in Python. This is my code:</p>  <pre><code>from cryptography.hazmat.backends import default_backend from cryptography.hazmat.primitives.asymmetric import rsa from cryptography.hazmat.primitives import serialization private_key = rsa.generate_private_key(public_exponent=65537, key_size=1024, backend=default_backend()) public_key = private_key.public_key() tmp = public_key.public_bytes(encoding=serialization.Encoding.PEM, format=serialization.PublicFormat.SubjectPublicKeyInfo) pubKeySerial = tmp pubKeySerial = """" for pLine in tmp.splitlines():      if(""---"" not in pLine):         pubKeySerial = pubKeySerial + pLine </code></pre>  <p>The private key looks like that:</p>  <blockquote>   <p>-----BEGIN RSA PRIVATE KEY-----   MIICXAIBAAKBgQC/imA04asbusVtcSsM9KVdZE7ISeEPfzktIxtkGgVP8S4qUdN2 gh9nL+/8+J1SKBrltmWDRxByqdi36EyyqPRg9rAcY6VXJI4nHEiHHrtLdAUlxyAe   hnAvOEnCEqeKHmbcTsnilJRJfcf7ecFxwmrGBLQ4i1YLOWR/9NDXlox0/QIDAQAB   AoGAVD0weLFzRpvK7ooiC+2guMU/3NiZMe6bH93b0xealIEW86fPH8S0uPYdTx2s   WxCmW7bvSGA9vKA0XxW8farO5v7lxc4VJkefPuTeJo+oJ1+jV5VCTnQsgAjrXieP   T4MtxO6U77xUnyWlWDAdvWbc+LreVpmru77SHDVYJ7ZxcaUCQQDuk/7gAHhMgAC8   ZCK6XhoAfrYhh1hl5/Ynqb885p/l/cjnvi3cImaslOpmJ4aav15iZSC6Di0jmrDU   njZBABmDAkEAzYcOBEwX/dDlffcsYFNKKYrUpTK09pMuYqLO5RabGNMEUW//EVAc   +QnyCht0eJaZL93NM5KWHGpY57BFhtBvfwJAOL/hX50dAG1uP2G+VQBvRPDfF+ie 4Vak2dhp0e212Tpd4Kn/NJ7GN4UQoI4EWajtpZASkc8vc4mnSFv94cZJSwJAKxR4   +quch8ZGpE2wDozGychg5DOpvNmC6ofnyBsh7WUlzZAlLdLWD9lm03mHw1MFzwO1 5G6AanpcIkxPdn+wLwJBAJFXD2HfzFBuFqM9XPq6GKOHomyok7y1iQ+E+BO/WzEu   IMos+RRGH88YwdndajP7ksRCiv5xOhmS93mINwdhVy8=<br>   -----END RSA PRIVATE KEY-----</p> </blockquote>  <p>And the public key looks like that (the <em>pubKeySerial</em> variable):</p>  <blockquote>   <p>MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDkLspl01zeWMBm+LCs+AhT98TSpzg0fqnfvnVv1mejHRJsMP44BgkElQPLnUTKmKNWjZtx2wuYPOymNdqfVCe1XB/6634x3FDmrdkv6QBWXn5TI+WQ1AXxV7NsglIzaxNkYxBXdPGQl7MKkaEQnMq8zZeJueUx5W9Ec8pwGrigawIDAQAB</p> </blockquote>  <p>I pass the public key to javascript and encode some password written in the html form with <a href=""https://github.com/wwwtyro/cryptico"" rel=""nofollow"">cryptico</a>:</p>  <pre><code>var encrypted = cryptico.encrypt(password, publicKey); </code></pre>  <p>The <em>password</em> is just a word. The <em>publicKey</em> has exactly the same value as <em>pubKeySerial</em> variable written above. After the code above, for the password <em>mypassword</em>, the <em>encrypted.cipher</em> variable takes value:</p>  <blockquote>   <p>A8fe4LUhPTIIcN86B8Cd5mHe7RpXKyNCT5yzMh5qvwjuT3u7m7VIGWW/OjMoJ3uzE6tRHCTvBE2WyNKZujJLfdQ9nYTdhf05dja2y4yoIeyNObDe0KMfePlNtnnGR0vu0LSdSmwGxx+RPifs2OQ3NQaPVIq+YliROKUQGwKvvUUs/8SqkZFjQbQlcJu7p5X9Eo6X6TxUsT1WA93UUIVobfXC?oh4aFfA4xRuHDPOlz1HW3dibQg5cUMZ+4n+HSH7h9sY=</p> </blockquote>  <p>I pass the <em>encrypted.cipher</em> value to the python in the backend. The <em>encrypted.cipher</em> value is in the <em>self.password</em> variable in the code below:</p>  <pre><code>from settings import private_key from cryptography.hazmat.primitives import hashes from cryptography.hazmat.primitives.asymmetric import padding plaintext = private_key.decrypt(self.password, padding.OAEP(mgf=padding.MGF1(algorithm=hashes.SHA1()), algorithm=hashes.SHA1(), label=None)) </code></pre>  <p>In the <em>plaintext</em> line I receive the error:</p>  <blockquote>   <p>Ciphertext length must be equal to key size.</p> </blockquote>  <p>I have no idea what to do with that... I tried mixing other cryptography packages like <a href=""http://www.pyopenssl.org/en/stable/introduction.html"" rel=""nofollow"">pyOpenSSL</a> or <a href=""https://github.com/travist/jsencrypt"" rel=""nofollow"">jsencrypt</a> and I always get the error above.</p>  <p>Please help. Thank you for all the comments in advance.</p>"	
36220582	What is the python time.sleep() delay equivalent for node.js and javascript?	javascript|node.js|timedelay	2016-03-25 13:10:09.867000 UTC	"<p>In python, it is easy to create a time delay with <code>time.sleep()</code>. Is there any equivalent for node.js? I cannot find it. I suspect it may be due to asynchronous nature of node.js. Hoping someone on StackOverflow can provide an easy solution like <code>time.sleep()</code> in node.js or javascript.</p>"	
36253135	Run python script by clicking button in javascript	javascript|jquery|python|ajax	2016-03-27 21:54:56.447000 UTC	"<p>What I want is run python script just click on the button in the html page and show the python code result on my page.</p>  <p>Because it's just a small project, so I don't want to be overkill learning Django or other web frames even though I know it will work. </p>  <p>I made some searches, ajax seems the right solution for me, but I don't know how to execute python code by ajax. I know I can get some string back via ajax using following code:</p>  <pre><code>function loadXMLDoc() {     var xmlhttp;     xmlhttp=new XMLHttpRequest();     xmlhttp.onreadystatechange=function()     {       if (xmlhttp.readyState==4 &amp;&amp; xmlhttp.status==200)         {         document.getElementById(""myDiv"").innerHTML=xmlhttp.responseText;         }     }     xmlhttp.open(""GET"",""test1.txt"",true);     xmlhttp.send(); } </code></pre>  <p>Thanks in advance for anyone who can help.</p>"	"<p>I ran into a similar problem, and after searching for several hours, this is how i solved it. Assuming that the html file and the python file are the same folder.</p>  <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-js lang-js prettyprint-override""><code>&lt;script&gt; function runScript() {     var request = new XMLHttpRequest();     request.onreadystatechange = function() {         if (request.readyState === 4) {             if (request.status === 200) {                 alert('Successful .... ' + request.responseText);             } else {                 alert('Something went wrong, status was ' + request.status);             }         }     };     request.open('POST', 'test.py', true);     request.send(null);     return false;   };  document.getElementById('script-button').onclick = runScript; &lt;/script&gt;</code></pre> <pre class=""snippet-code-html lang-html prettyprint-override""><code>This goes to your html file ----------------------------- &lt;button type=""button"" id=""script-button""&gt;      add this line at the top of your python file   ---------------------------------------------      test.py   ------------      #!C:\Python34\python.exe -u   print(""Testing 123"")      add this directive to httpd.conf (Apache)   -----------------------------------------      # ""C:/xampp/cgi-bin"" should be changed to whatever your ScriptAliased # CGI directory exists, if you have that configured. # &lt;Directory ""C:/xampp/&lt;path to your project on the web server&gt;""&gt;     AllowOverride All     Options Indexes FollowSymLinks Includes ExecCGI     AddHandler cgi-script .py .pyc     Order allow,deny     Allow from all     Require all granted &lt;/Directory&gt;</code></pre> </div> </div> </p>"
36253135	Run python script by clicking button in javascript	javascript|jquery|python|ajax	2016-03-27 21:54:56.447000 UTC	"<p>What I want is run python script just click on the button in the html page and show the python code result on my page.</p>  <p>Because it's just a small project, so I don't want to be overkill learning Django or other web frames even though I know it will work. </p>  <p>I made some searches, ajax seems the right solution for me, but I don't know how to execute python code by ajax. I know I can get some string back via ajax using following code:</p>  <pre><code>function loadXMLDoc() {     var xmlhttp;     xmlhttp=new XMLHttpRequest();     xmlhttp.onreadystatechange=function()     {       if (xmlhttp.readyState==4 &amp;&amp; xmlhttp.status==200)         {         document.getElementById(""myDiv"").innerHTML=xmlhttp.responseText;         }     }     xmlhttp.open(""GET"",""test1.txt"",true);     xmlhttp.send(); } </code></pre>  <p>Thanks in advance for anyone who can help.</p>"	"<p>To extend @Liongold's comment, The full workflow goes like this:</p>  <h2>Overview of how this happens</h2>  <ul> <li>The javascript code for a button click gets executed.  This code is running on the client from a browser.</li> <li>The AJAX request gets sent over the internet just like an HTTP request, which is interpreted by a web application running on the computer that will run the Python code.</li> <li>The python code creates a response, and formats it for sending back to the client.</li> <li>The javascript reads the response as plain text, and decides what it means and how to use it.  JSON is a very popular format for exchanging data via AJAX</li> </ul>  <h2>What you need to do</h2>  <p>Either:</p>  <ol> <li>Learn a server-side python framework.  Flask is lightweight and will probably do what you want. The largest obstacle I've found here is dealing with Cross-origin (CORS) problems.  Get started at <a href=""http://flask.pocoo.org/docs/0.10/quickstart/"" rel=""nofollow"">http://flask.pocoo.org/docs/0.10/quickstart/</a> </li> </ol>  <p>OR</p>  <ol start=""2""> <li>See if you can port the python script INTO the browser.  Does the code need to be run on a specific computer ( the server ) or could it theoretically be converted into javascript and run within the webpage.  If the language difference is your only problem, have a look at <a href=""http://www.skulpt.org/"" rel=""nofollow"">http://www.skulpt.org/</a> </li> </ol>"
36255006	Python Selenium Web Scraping - Hidden Text / Javascript?	python|selenium|amazon	2016-03-28 02:22:08.650000 UTC	"<p>I'm trying to extract some text from a page using Python and Selenium The text is visible to me, but I can't work out how to extract it - I think the text was created in Java.</p>  <p>Im on the URL: ""<a href=""https://sellercentral.amazon.co.uk/hz/fba/profitabilitycalculator/index?lang=en_GB"" rel=""nofollow noreferrer"">https://sellercentral.amazon.co.uk/hz/fba/profitabilitycalculator/index?lang=en_GB</a>"" and have entered the product id 'B00FRJ1R4M' for example, pressed search, then entered '20' in the Amazon Fulfilment Item Price box and pressed calculate.</p>  <p>I'm trying to extract the '-5.59' but to no avail.</p>  <p><a href=""https://i.stack.imgur.com/8qfs8.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/8qfs8.png"" alt=""enter image description here""></a></p>  <p>The closest I think I've got is the follwing code:</p>  <pre><code>cost = driver.find_element_by_xpath(""//*[@id='afn-fees']/dl/dd[15]/input"")  print(cost.get_attribute('innerHTML')) print(driver.execute_script(""return arguments[0].innerHTML"", cost)) </code></pre>  <p>But this for returns 'None'.</p>  <p>Any help would be much appreciated.</p>"	"<p>You need to use <code>.get_attribute(""value"")</code>, since this is an <code>input</code>, and simplify your locator:</p>  <pre><code>cost = driver.find_element_by_css_selector(""input.cost-total"") print(cost.get_attribute(""value"")) </code></pre>  <p>Here <code>input.cost-total</code> CSS selector would match an <code>input</code> element having <code>cost-total</code> class, which is quite readable and reliable locator in this case.</p>"
36289331	Scraping images injected by javascript in Python with Selenium	python|selenium|selenium-webdriver|web-scraping	2016-03-29 15:59:53.610000 UTC	"<p>I'm trying to make a web scraper in Python on Mac OSX and an example I'm testing with is to load tags and images from a MyFonts page (eg <a href=""http://www.myfonts.com/fonts/fort-foundry/gin/"" rel=""nofollow"">here</a>). Originally I was using BeautifulSoup but I noticed that the site initially loads with a 'blank.png' in place of the font images I'm trying to grab, which then get replaced with the 'real' ones with js. I'm trying to use Selenium, can I use a webdriverwait to listen for the change in the img src similar to the example below, but not by an ID or Class?</p>  <pre><code>ff = webdriver.Firefox() ff.get(""http://www.myfonts.com/fonts/fort-foundry/gin/"") try:     element = WebDriverWait(ff, 10).until(EC.presence_of_element_located((By.ID, ""myDynamicElement""))) finally:     ff.quit() </code></pre>  <p>Ideally this should be waiting for <strong>not</strong> img src=""*/blank.png"" since the element doesn't change class or get a consistent name. Or should I just wait until the page finishes loading entirely? The scraper has to go through a lot of these, so I'm trying to keep it fairly quick.</p>  <p>I'm very new to Python so any help would be greatly appreciated.</p>"	"<p>First of all, make sure what you are doing is legal: <a href=""http://www.myfonts.com/info/legal/"" rel=""nofollow"">Legal page</a>.</p>  <p>Wait for <em>at least one font sample to be loaded</em> and then proceed to extracting:</p>  <pre><code># wait for at least one font sample to be loaded wait = WebDriverWait(ff, 10) wait.until(EC.presence_of_element_located((By.CSS_SELECTOR, ""#overview_samples .search-result-item"")))  # get font sample urls for sample in ff.find_elements_by_css_selector(""#overview_samples .search-result-item .sample .fontsample[title]""):     print(sample.get_attribute(""src"")) </code></pre>  <p>Prints:</p>  <pre><code>http://samples.myfonts.net/e_91/u/e7/19061adcc0c9ac025d0414e5ff11a1.gif http://samples.myfonts.net/a_91/u/e5/4d795cdae0cb99d1424b13020d0f6e.gif ... http://samples.myfonts.net/b_92/u/2c/4c21ddeb53f19f109306746dac6b24.gif </code></pre>"
36289331	Scraping images injected by javascript in Python with Selenium	python|selenium|selenium-webdriver|web-scraping	2016-03-29 15:59:53.610000 UTC	"<p>I'm trying to make a web scraper in Python on Mac OSX and an example I'm testing with is to load tags and images from a MyFonts page (eg <a href=""http://www.myfonts.com/fonts/fort-foundry/gin/"" rel=""nofollow"">here</a>). Originally I was using BeautifulSoup but I noticed that the site initially loads with a 'blank.png' in place of the font images I'm trying to grab, which then get replaced with the 'real' ones with js. I'm trying to use Selenium, can I use a webdriverwait to listen for the change in the img src similar to the example below, but not by an ID or Class?</p>  <pre><code>ff = webdriver.Firefox() ff.get(""http://www.myfonts.com/fonts/fort-foundry/gin/"") try:     element = WebDriverWait(ff, 10).until(EC.presence_of_element_located((By.ID, ""myDynamicElement""))) finally:     ff.quit() </code></pre>  <p>Ideally this should be waiting for <strong>not</strong> img src=""*/blank.png"" since the element doesn't change class or get a consistent name. Or should I just wait until the page finishes loading entirely? The scraper has to go through a lot of these, so I'm trying to keep it fairly quick.</p>  <p>I'm very new to Python so any help would be greatly appreciated.</p>"	"<p>I second what Alex said in regard to legality but you could also get the fonts if you mimic the Ajax request with requests and bs4:</p>  <pre><code>In [16]: import requests  In [17]: from bs4 import BeautifulSoup  In [18]: data = {    ....:     'seed': '24',    ....:     ""text"": ""Pangrams"",    ....:     ""src"": ""pangram.auto"",    ....:     ""size"": ""72"",    ....:     ""fg"": ""000000"",    ....:     ""bg"": ""ffffff"",    ....:     ""goodies"": ""_2x:0"",    ....:     ""w"": ""720"",    ....:     ""i[]"": [""fort-foundry/gin/regular,,720"", ""fort-foundry/gin/oblique,,720"", ""fort-foundry/gin/rough,,720"",    ....:             ""fort-foundry/gin/rough-oblique,,720"", ""fort-foundry/gin/round,,720"",""fort-foundry/gin/round-oblique,,720"",    ....:             ""fort-foundry/gin/lines,,720"", ""fort-foundry/gin/lines-oblique,,720""],    ....:     ""showimgs"": ""true""}  In [19]: js = requests.post(""http://www.myfonts.com/ajax-server/testdrive_new-ajax.php"", data=data).json()  In [20]:   In [20]: urls = [img[""src""] for img in BeautifulSoup("""".join(js.values()),""lxml"").find_all(""img"")]  In [21]: pp(urls) ['//samples.myfonts.net/a_91/u/af/5e840d069d35f2c8e5f7077bae7b1e.gif',  '//samples.myfonts.net/e_91/u/d6/1d63ad993299d182ae19eddb2c41e1.gif',  '//samples.myfonts.net/e_92/u/7c/15b8e24e4b077ae3b1c7a614afa8b5.gif',  '//samples.myfonts.net/b_92/u/ce/63dffdda8581fc83f6fe20874714e7.gif',  '//samples.myfonts.net/e_91/u/51/e8b7a0b5cccb2abf530b05e1d3fb04.gif',  '//samples.myfonts.net/b_91/u/6f/a5f870c719dcf9961e753b9f4afd7e.gif',  '//samples.myfonts.net/b_92/u/7c/94d652e4f146801e3c81f694898e07.gif',  '//samples.myfonts.net/b_91/u/47/39fa3ab779cabd1068abbca7ce98c5.gif'] </code></pre>  <p>The only ones you need to pass are the i[]: values, the rest can be used to change the size, background colour etc..</p>  <p>So if you did not care about changing the bg, fg or size etc and to get all the names using just bs4 and requests, you could get the font names from the the <code>search-result-item</code> class and construct the Ajax request using those:</p>  <pre><code>In [1]: import requests  In [2]: from bs4 import BeautifulSoup  In [3]: r = requests.get(""http://www.myfonts.com/fonts/fort-foundry/gin/"")  In [4]: soup = BeautifulSoup(r.content, ""lxml"")  # creates fort-foundry/gin/regular,,720"" etc.. In [5]: fonts = [""{},,720"".format(a[""href""].strip(""/"").split(""/"", 1)[1])                     for a in soup.select(""div .search-result-item h4 a[href]"")]  In [6]: data = {    ...:     ""i[]"": fonts    ...:      }  In [7]: js = requests.post(""http://www.myfonts.com/ajax-server/testdrive_new-ajax.php"", data=data).json()  In [8]: urls = [img[""src""] for img in BeautifulSoup("""".join(js.values()),""lxml"").select(""img[src]"")]  In [9]:   In [9]: from pprint import  pprint as pp  In [10]: pp(urls) ['//samples.myfonts.net/b_91/u/06/64bdafe9368dd401df4193a7608028.gif',  '//samples.myfonts.net/b_92/u/06/b8ad49c563d310a97147d8220f55ab.gif',  '//samples.myfonts.net/a_91/u/e7/8f84ce98f19e3f91ddc15304d636e7.gif',  '//samples.myfonts.net/e_91/u/71/9769a1ab626429d63d3c779fcaa3d7.gif',  '//samples.myfonts.net/b_92/u/65/fe416f15ea94b1f8603ddc675fd638.gif',  '//samples.myfonts.net/b_91/u/5d/3ced9e71910bc411a0d76316d18df1.gif',  '//samples.myfonts.net/e_92/u/cd/0df987a72bb0a43cba29b38c16b7a5.gif',  '//samples.myfonts.net/e_91/u/88/3f80a1108fd0a075c69b09e9c21a8d.gif'] </code></pre>"
36298270	Trying to send compressed json from python to javascript via websocket	javascript|python|json|websocket|zlib	2016-03-30 01:55:55.550000 UTC	"<p>I have a websocketserver that I use to communicate from my python to my javascript in the browser. Some of the json I need to send it too big so I used Zlib to compress it in python, like this:</p>  <pre><code>zlib.compress(json.dumps(self.data)) </code></pre>  <p>Now that it is compressed when I send it to my Javascript I have tried to decompress it with Zlib.js and Pako but nothing I try works. </p>  <p>When I do:</p>  <pre><code> function getBlob (blob, cb) {      var data = pako.inflate(blob);     var output = String.fromCharCode.apply(null, new Uint16Array(data));     cb(output);    } </code></pre>  <p>I get:</p>  <pre><code>pako.js:747 Uncaught unknown compression method </code></pre>  <p>Any help would be awesome! Thanks!</p>"	
36402718	How to send audio blob from javascript to python?	javascript|python|audio	2016-04-04 12:29:44.993000 UTC	"<p>I want to send a audio blob from JS to python script (which runs on server). My JS ajax .. looks something like this.</p>  <pre><code>var fileType = 'audio'; var fileName = 'output.wav'; var formData = new FormData(); formData.append(fileType + '-filename', fileName); formData.append(fileType + '-blob', blob);     $.ajax({     type: 'POST',     url: 'http://localhost/python/audio.py',     data: {audio:formData},         success: function(response) {         alert(respose);     }    });  </code></pre>  <p>and my python script looks like this.</p>  <pre><code>#!/usr/bin/python3 print(""Content-Type: text/html"") print() import ssl import cgi import wave import contextlib form = cgi.FieldStorage() fname = form.getvalue(""audio"", ""error"") with contextlib.closing(wave.open(fname,'r')) as f:     frames = f.getnframes()     rate = f.getframerate()     duration = frames / float(rate)     print(duration) </code></pre>  <p>Right now, I am just testing, so it should get me the duration of the audio file. The blob is generated through record.js</p>  <p>This is not working, as the python is unable to identify the file. Any solutions?</p>  <p>PS: I am using Xampp Server, to run on local host.</p>  <p>In response to  Wojtek Marczenko: The error is</p>  <pre><code>[Mon Apr 04 18:26:09.537912 2016] [cgi:error] [pid 5330] [client ::1:60802] AH01215: Traceback (most recent call last):: /home/shashank/project/dutchman/python/audio.py, referer: http://localhost/index.html [Mon Apr 04 18:26:09.537978 2016] [cgi:error] [pid 5330] [client ::1:60802] AH01215:   File ""/home/shashank/project/dutchman/python/audio.py"", line 10, in &lt;module&gt;: /home/shashank/project/dutchman/python/audio.py, referer: http://localhost/index.html [Mon Apr 04 18:26:09.538002 2016] [cgi:error] [pid 5330] [client ::1:60802] AH01215:     with contextlib.closing(wave.open(fname,'r')) as f:: /home/shashank/project/dutchman/python/audio.py, referer: http://localhost/index.html [Mon Apr 04 18:26:09.538024 2016] [cgi:error] [pid 5330] [client ::1:60802] AH01215:   File ""/usr/lib/python3.5/wave.py"", line 499, in open: /home/shashank/project/dutchman/python/audio.py, referer: http://localhost/index.html [Mon Apr 04 18:26:09.538036 2016] [cgi:error] [pid 5330] [client ::1:60802] AH01215:     return Wave_read(f): /home/shashank/project/dutchman/python/audio.py, referer: http://localhost/index.html [Mon Apr 04 18:26:09.538056 2016] [cgi:error] [pid 5330] [client ::1:60802] AH01215:   File ""/usr/lib/python3.5/wave.py"", line 163, in __init__: /home/shashank/project/dutchman/python/audio.py, referer: http://localhost/index.html [Mon Apr 04 18:26:09.538065 2016] [cgi:error] [pid 5330] [client ::1:60802] AH01215:     self.initfp(f): /home/shashank/project/dutchman/python/audio.py, referer: http://localhost/index.html [Mon Apr 04 18:26:09.538086 2016] [cgi:error] [pid 5330] [client ::1:60802] AH01215:   File ""/usr/lib/python3.5/wave.py"", line 128, in initfp: /home/shashank/project/dutchman/python/audio.py, referer: http://localhost/index.html [Mon Apr 04 18:26:09.538097 2016] [cgi:error] [pid 5330] [client ::1:60802] AH01215:     self._file = Chunk(file, bigendian = 0): /home/shashank/project/dutchman/python/audio.py, referer: http://localhost/index.html [Mon Apr 04 18:26:09.538110 2016] [cgi:error] [pid 5330] [client ::1:60802] AH01215:   File ""/usr/lib/python3.5/chunk.py"", line 61, in __init__: /home/shashank/project/dutchman/python/audio.py, referer: http://localhost/index.html [Mon Apr 04 18:26:09.538119 2016] [cgi:error] [pid 5330] [client ::1:60802] AH01215:     self.chunkname = file.read(4): /home/shashank/project/dutchman/python/audio.py, referer: http://localhost/index.html [Mon Apr 04 18:26:09.538132 2016] [cgi:error] [pid 5330] [client ::1:60802] AH01215: AttributeError: 'NoneType' object has no attribute 'read': /home/shashank/project/dutchman/python/audio.py, referer: http://localhost/index.html </code></pre>"	"<p>I had an error in retrieving the audio bytes, it turned out to be a cursor problem so beware.</p> <p>Files in a FormData request can be accessed at <code>request.files</code> then you can select the file you included in the FormData e.g. <code>request.files['audio']</code>.</p> <p>So now if you want to access the actual bytes of the file, in our case 'audio' using <code>.stream</code>, you should make sure first that your cursor points to the first byte and not to the end of the file, in which case you will get empty bytes.</p> <p>Hence, a good way to do it:</p> <pre><code>file = request.files['audio'] file.stream.seek(0) audio = file.read() </code></pre>"
36402718	How to send audio blob from javascript to python?	javascript|python|audio	2016-04-04 12:29:44.993000 UTC	"<p>I want to send a audio blob from JS to python script (which runs on server). My JS ajax .. looks something like this.</p>  <pre><code>var fileType = 'audio'; var fileName = 'output.wav'; var formData = new FormData(); formData.append(fileType + '-filename', fileName); formData.append(fileType + '-blob', blob);     $.ajax({     type: 'POST',     url: 'http://localhost/python/audio.py',     data: {audio:formData},         success: function(response) {         alert(respose);     }    });  </code></pre>  <p>and my python script looks like this.</p>  <pre><code>#!/usr/bin/python3 print(""Content-Type: text/html"") print() import ssl import cgi import wave import contextlib form = cgi.FieldStorage() fname = form.getvalue(""audio"", ""error"") with contextlib.closing(wave.open(fname,'r')) as f:     frames = f.getnframes()     rate = f.getframerate()     duration = frames / float(rate)     print(duration) </code></pre>  <p>Right now, I am just testing, so it should get me the duration of the audio file. The blob is generated through record.js</p>  <p>This is not working, as the python is unable to identify the file. Any solutions?</p>  <p>PS: I am using Xampp Server, to run on local host.</p>  <p>In response to  Wojtek Marczenko: The error is</p>  <pre><code>[Mon Apr 04 18:26:09.537912 2016] [cgi:error] [pid 5330] [client ::1:60802] AH01215: Traceback (most recent call last):: /home/shashank/project/dutchman/python/audio.py, referer: http://localhost/index.html [Mon Apr 04 18:26:09.537978 2016] [cgi:error] [pid 5330] [client ::1:60802] AH01215:   File ""/home/shashank/project/dutchman/python/audio.py"", line 10, in &lt;module&gt;: /home/shashank/project/dutchman/python/audio.py, referer: http://localhost/index.html [Mon Apr 04 18:26:09.538002 2016] [cgi:error] [pid 5330] [client ::1:60802] AH01215:     with contextlib.closing(wave.open(fname,'r')) as f:: /home/shashank/project/dutchman/python/audio.py, referer: http://localhost/index.html [Mon Apr 04 18:26:09.538024 2016] [cgi:error] [pid 5330] [client ::1:60802] AH01215:   File ""/usr/lib/python3.5/wave.py"", line 499, in open: /home/shashank/project/dutchman/python/audio.py, referer: http://localhost/index.html [Mon Apr 04 18:26:09.538036 2016] [cgi:error] [pid 5330] [client ::1:60802] AH01215:     return Wave_read(f): /home/shashank/project/dutchman/python/audio.py, referer: http://localhost/index.html [Mon Apr 04 18:26:09.538056 2016] [cgi:error] [pid 5330] [client ::1:60802] AH01215:   File ""/usr/lib/python3.5/wave.py"", line 163, in __init__: /home/shashank/project/dutchman/python/audio.py, referer: http://localhost/index.html [Mon Apr 04 18:26:09.538065 2016] [cgi:error] [pid 5330] [client ::1:60802] AH01215:     self.initfp(f): /home/shashank/project/dutchman/python/audio.py, referer: http://localhost/index.html [Mon Apr 04 18:26:09.538086 2016] [cgi:error] [pid 5330] [client ::1:60802] AH01215:   File ""/usr/lib/python3.5/wave.py"", line 128, in initfp: /home/shashank/project/dutchman/python/audio.py, referer: http://localhost/index.html [Mon Apr 04 18:26:09.538097 2016] [cgi:error] [pid 5330] [client ::1:60802] AH01215:     self._file = Chunk(file, bigendian = 0): /home/shashank/project/dutchman/python/audio.py, referer: http://localhost/index.html [Mon Apr 04 18:26:09.538110 2016] [cgi:error] [pid 5330] [client ::1:60802] AH01215:   File ""/usr/lib/python3.5/chunk.py"", line 61, in __init__: /home/shashank/project/dutchman/python/audio.py, referer: http://localhost/index.html [Mon Apr 04 18:26:09.538119 2016] [cgi:error] [pid 5330] [client ::1:60802] AH01215:     self.chunkname = file.read(4): /home/shashank/project/dutchman/python/audio.py, referer: http://localhost/index.html [Mon Apr 04 18:26:09.538132 2016] [cgi:error] [pid 5330] [client ::1:60802] AH01215: AttributeError: 'NoneType' object has no attribute 'read': /home/shashank/project/dutchman/python/audio.py, referer: http://localhost/index.html </code></pre>"	"<p>It looks like you're not properly sending the blob as form field. The proper way to attach blob to FormData would be <code>formData.append(fileType, blob, fileName);</code>. Also you should attach just the formData instead of nesting it in another object:</p>  <pre><code>var formData = new FormData(); formData.append(fileType, blob, fileName); $.ajax({     type: 'POST',     url: 'http://localhost/python/audio.py',     data: formData,     processData: false,  // prevent jQuery from converting the data     contentType: false,  // prevent jQuery from overriding content type     success: function(response) {         alert(response);     } }); </code></pre>  <p>Sources: <a href=""https://developer.mozilla.org/en-US/docs/Web/API/FormData/append"" rel=""nofollow noreferrer"">https://developer.mozilla.org/en-US/docs/Web/API/FormData/append</a> <a href=""http://www.mattlunn.me.uk/blog/2012/05/sending-formdata-with-jquery-ajax/"" rel=""nofollow noreferrer"">http://www.mattlunn.me.uk/blog/2012/05/sending-formdata-with-jquery-ajax/</a></p>  <p>On the python side, you need to use the CGI module according to the python docs (can't post more links). I believe the proper way would be like this:</p>  <pre><code>form = cgi.FieldStorage() fname = form[""audio""].filename print ""Got filename:"", fname  # in case of problems see if this looks ok  with contextlib.closing(wave.open(fname,'r')) as f:     ... </code></pre>"
36506547	Web Scraping javascript in Python / R	javascript|python|html|r|web-scraping	2016-04-08 18:13:56.540000 UTC	"<p>I'm doing some personal data science projects and one of them is to see how often certain songs are played on the radio. </p>  <p><a href=""http://www.iheart.com/live/radio-1045-3401/"" rel=""nofollow"">http://www.iheart.com/live/radio-1045-3401/</a></p>  <p>Looking at the above URL, when I look at page source, no values of interest populate. Not sure why, but when I use inspect element in chrome when I hover over the ""Now Playing"" header, I can see values for song and artist now playing.</p>  <p>Example:</p>  <pre><code>a class=""player-song"" href=""/artist/rem-3610/songs/-2450662/"" title=""Losing My Religion"" data-reactid="".1hpdfx1l4ow.a.1.0.1.1""&gt;Losing My Religion&lt;/a </code></pre>  <p>My two questions are:</p>  <ol> <li>Why isn't this showing up in page source, but I can see it under Inspect Element?</li> <li>How would I web scrape this info since it is not appearing in page source?</li> </ol>"	"<ol> <li><p>Most web pages that involve dynamic elements have page elements generated and inserted by Javascript that the browser parses and executes for you. You already guessed this, I suspect, based on the question title. </p>  <p>What you see in the page source is the raw HTML <em>before</em> Javascript kicks in and updates it. </p></li> <li><p>You want a <a href=""http://blog.arhg.net/2009/10/what-is-headless-browser.html"" rel=""nofollow"">headless browser</a>: a browser without a graphical user interface. This will parse and execute Javascript for you, and update page HTML accordingly. </p></li> </ol>  <hr>  <p>Here is a <a href=""https://github.com/dhamaniasad/HeadlessBrowsers"" rel=""nofollow"">full list of headless browsers</a>. Note that you can do this task in any language.</p>"
36516491	click to javascript button with python	python	2016-04-09 12:02:46.707000 UTC	"<p>I want write a bot for steam trade. But i cant found example for it with python. I think if i can click a button with python i can do it. Is it true? If i can click ""Accept Trade"" button its fine.</p>  <p>I can scrap source with beautifulsoup library but I couldn't any user operation with it.</p>  <p>Here is accept button's source code:</p>  <pre><code>&lt;div id=""trade_confirmbtn"" class=""trade_confirmbtn ellipsis"" onclick=""ConfirmTradeOffer();""&gt; </code></pre>  <p>And here is trade page link hierarchy:</p>  <pre><code>https://steamcommunity.com/tradeoffer/{{tradeid}}/ </code></pre>  <p>I have not a code yet. Thank you!</p>"	"<p><a href=""http://selenium-python.readthedocs.org/"" rel=""nofollow"">Selenium</a> is a python module that can interact with web-page resources, so that's an easy way to execute JavaScript code from within Python.</p>"
36546523	Scraping javascript rendered HTML page in python	python|web-scraping|web-crawler	2016-04-11 10:47:19.723000 UTC	"<p>I am scraping a website using python, but the website is being rendered with javascript and all the links are coming from javascript. So when I use <code>request.get(url)</code> it's only giving the source code, not the other links that are generated with javascript. Is there any way to scrape those links automatically?</p>  <p>I also tried something like what's described here: <a href=""https://impythonist.wordpress.com/2015/01/06/ultimate-guide-for-scraping-javascript-rendered-web-pages/"" rel=""nofollow"">Ultimate guide for scraping JavaScript rendered web pages</a>. But that is too slow to load.</p>  <p>So is there any faster way, using Mechanize, Phantom or some other library? (Note: I have already tried using PyQ4, but that is too slow - I'm looking for a faster solution).</p>"	"<p><strong>You can Try PhantomJs or Casperjs</strong></p>  <blockquote>   <p>There are more node wrappers written over phantom and casperjs one of the most efficient and scalable is ""ghost town""</p> </blockquote>"
36546523	Scraping javascript rendered HTML page in python	python|web-scraping|web-crawler	2016-04-11 10:47:19.723000 UTC	"<p>I am scraping a website using python, but the website is being rendered with javascript and all the links are coming from javascript. So when I use <code>request.get(url)</code> it's only giving the source code, not the other links that are generated with javascript. Is there any way to scrape those links automatically?</p>  <p>I also tried something like what's described here: <a href=""https://impythonist.wordpress.com/2015/01/06/ultimate-guide-for-scraping-javascript-rendered-web-pages/"" rel=""nofollow"">Ultimate guide for scraping JavaScript rendered web pages</a>. But that is too slow to load.</p>  <p>So is there any faster way, using Mechanize, Phantom or some other library? (Note: I have already tried using PyQ4, but that is too slow - I'm looking for a faster solution).</p>"	"<p>One approach that <strong>may not be the fastest</strong>, but is <strong>most likely to succeed</strong>, is to use Selenium. The following function should do the job: Given an URL that holds javascript generated content, retrieve the dynmaic website and return its rendered html. Note that instead of Chrome you can use any other supported browser (e.g., Firefox, Safari or IE). Have a look at the docs:</p> <p><a href=""https://www.selenium.dev/selenium/docs/api/py/api.html#"" rel=""nofollow noreferrer"">https://www.selenium.dev/selenium/docs/api/py/api.html#</a></p> <pre><code>def retrieve_html_from_js_website(url, path_to_chrome_binary, threshold_waiting_time=4):     import time     from selenium import webdriver     from selenium.webdriver.chrome.service import Service      user_agent = 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.102 Safari/537.36'     options = webdriver.ChromeOptions()     options.add_argument(f'user-agent=[{user_agent}]')     options.add_argument('--disable-blink-features=AutomationControlled')     options.add_experimental_option(&quot;excludeSwitches&quot;, [&quot;enable-automation&quot;])     options.add_experimental_option(&quot;detach&quot;, True)      with webdriver.Chrome(service=Service(path_to_chrome_binary), options=options) as driver:         # Note that there are many creative websites that use mechanisms          # to prevent browsers instantiated with Selenium from crawling          # their content. Some mechanisms are listed in the following:         # https://piprogramming.org/articles/How-to-make-Selenium-undetectable-and-stealth--7-Ways-to-hide-your-Bot-Automation-from-Detection-0000000017.html         driver.get(url)         time.sleep(threshold_waiting_time)         return driver.page_source </code></pre> <p>From here you can perform any parsing operation, such as extracting javascript generated URLs. For this particular task, I prefer using <em>Beautiful Soup</em>, although Selenium can do the job as well.</p> <p><a href=""https://beautiful-soup-4.readthedocs.io/en/latest/"" rel=""nofollow noreferrer"">https://beautiful-soup-4.readthedocs.io/en/latest/</a></p>"
36547264	Python Crawling Pastebin (JavaScript rendered webpages)	javascript|python|selenium|scrapy|web-crawler	2016-04-11 11:20:30.667000 UTC	"<p>I am facing a problem trying to crawl JavaScript rendered pages.</p>  <p>I am using the python-qt4 module, following this tutorial: <a href=""https://impythonist.wordpress.com/2015/01/06/ultimate-guide-for-scraping-javascript-rendered-web-pages/"" rel=""nofollow"">https://impythonist.wordpress.com/2015/01/06/ultimate-guide-for-scraping-javascript-rendered-web-pages/</a></p>  <p>In the tutorial, everything works perfectly with the example page: <a href=""http://pycoders.com/archive"" rel=""nofollow"">http://pycoders.com/archive</a></p>  <p>But I am trying this out with pastebin, with this URL:</p>  <p><a href=""http://pastebin.com/search?q=ssh"" rel=""nofollow"">http://pastebin.com/search?q=ssh</a></p>  <p>What I am trying is to get all the links, in order to click them, as well as be able to follow the pages (I don't know what I am going to use yet, maybe Scrapy but I want to take a look to other options).</p>  <p>The problem is that I am not able to extract the links, this is my code:</p>  <pre><code>import sys   from PyQt4.QtGui import *   from PyQt4.QtCore import *   from PyQt4.QtWebKit import *   from lxml import html   #Take this class for granted.Just use result of rendering. class Render(QWebPage):     def __init__(self, url):       self.app = QApplication(sys.argv)       QWebPage.__init__(self)       self.loadFinished.connect(self._loadFinished)       self.mainFrame().load(QUrl(url))       self.app.exec_()      def _loadFinished(self, result):       self.frame = self.mainFrame()       self.app.quit()    url = 'http://pastebin.com/search?q=ssh'   r = Render(url)   result = r.frame.toHtml() formatted_result = str(result.toAscii()) tree = html.fromstring(formatted_result) archive_links = tree.xpath('//a[@class=""gs-title""]/@data-ctoring') for i in archive_links:     print i </code></pre>  <p>The result is: I don't get anything.</p>"	"<p>Ideally, you should look into using <code>Pastebin</code> API - here is a <a href=""https://pypi.python.org/pypi/Pastebin/1.0.3"" rel=""nofollow"">Python wrapper</a>.</p>  <p>Alternative approach would involve browser automation via <a href=""http://selenium-python.readthedocs.org/"" rel=""nofollow""><code>selenium</code></a>. Working code that prints the search result links:</p>  <pre><code>from selenium import webdriver from selenium.webdriver.common.by import By from selenium.webdriver.support.ui import WebDriverWait from selenium.webdriver.support import expected_conditions as EC   driver = webdriver.Firefox() driver.get(""http://pastebin.com/search?q=ssh"")  # wait for the search results to be loaded wait = WebDriverWait(driver, 10) wait.until(EC.visibility_of_element_located((By.CSS_SELECTOR, "".gsc-result-info"")))  # get all search results links for link in driver.find_elements_by_css_selector("".gsc-results .gsc-result a.gs-title""):     print(link.get_attribute(""href"")) </code></pre>"
36564721	executing Javascript using Selenium in python (Tkinter as GUI)	javascript|python|selenium|tkinter	2016-04-12 05:59:17.810000 UTC	"<p>hi i am opening a website using selenium webdriver from a tkinter GUI.i have a entry and a button in gui when ever i give the url in entry and press the button the web browser starts opening now i want to add another functionality that if i select any text on that webpage using my mouse cursor and press another button again on GUI it should show the selected text in some other entry area in the tkinter GUI. So, Is it possible to add this functionality. here is my code:-</p>  <pre><code>url1 = Entry(top, bd =3, width = 50) url1.place(x=800 , y=100)  def open(url):     driver = webdriver.Firefox()     driver.set_window_size(600, 500)     driver.set_window_position(300,300)     driver.get(url)     driver.implicitly_wait(20)     driver.execute_script(""text = getSelectionText(); alert(text)"")  # submit button which is performing action on submit submit1 = Button(top, text=""Open"", width=15, bg='lightblue', command=lambda: open(url1.get())) submit1.place(x=1200, y=100)  </code></pre>"	"<p>The root cause is your web site doesn't have method <code>getSelectionText()</code>. You can add then call it, see code below:</p>  <pre><code>jsScript = ''' function getSelectionText() {     var text = """";     if (window.getSelection) {         text = window.getSelection().toString();     } else if (document.selection &amp;&amp; document.selection.type != ""Control"") {         text = document.selection.createRange().text;     }     return text; }  text = getSelectionText(); alert(text) '''  driver.execute_script(jsScript) </code></pre>"
36637317	Python javascript builder	javascript|python|builder	2016-04-15 02:33:47.980000 UTC	"<p>I am trying to make a builder for Javascript code in general with Python. I've tried everything I can think of, but I'm still having a syntax error. the error is this :</p>  <p>File ""test.py"", line 12     exploit = (""var word=prompt(""Give a word"","""");function pal(){if(word===word.split('').reverse().join('')){document.write(""hello this is a palindrome<br>""+word.split('').reverse().join('')+"" is the same as ""+word)}else{document.write(""Error 504(Not a palindrome)...hello this is not a palindrome<br>""+word.split('').reverse().join('')+"" is not the same as ""+word)}}pal();"")                                     ^ SyntaxError: invalid syntax</p>  <p>I was thing to convert the (""javascript code"") to a string but not working advices? thanks sorry if my question wasnt clear</p>  <p>My code:</p>  <pre><code>import time as t from os import path   def createFile(dest):    date=t.localtime(t.time())  ##Filename=month+date+year name=""%d_%d_%d.js""%(date[1],date[2],(date[0]%100))  exploit = (""var word=prompt(""Give a word"","""");function pal(){if(word===word.split('').reverse().join('')){document.write(""hello this is a palindrome&lt;br&gt;""+word.split('').reverse().join('')+"" is the same as ""+word)}else{document.write(""Error 504(Not a palindrome)...hello this is not a palindrome&lt;br&gt;""+word.split('').reverse().join('')+"" is not the same as ""+word)}}pal();"")  s = str(exploit)   if not(path.isfile(dest+name)):      f=open(dest+name,'w')      f.write(s)      f.close()  if __name__=='__main__':       createFile(""lol"")       raw_input(""done!!!"") </code></pre>"	"<p>For one thing you need to escape the quotes within the javascript string that you are assigning to <code>exploit</code>. Alternatively you can use a triple quoted string, which is much easier:</p>  <pre><code>explioit = '''var word=prompt(""Give a word"","""");function pal(){if(word===word.split('').reverse().join('')){document.write(""hello this is a palindrome&lt;br&gt;""+word.split('').reverse().join('')+"" is the same as ""+word)}else{document.write(""Error 504(Not a palindrome)...hello this is not a palindrome&lt;br&gt;""+word.split('').reverse().join('')+"" is not the same as ""+word)}}pal();''' </code></pre>  <p>That fixes that problem. Note also that you don't need <code>s = str(exploit)</code> - <code>exploit</code> is already a string.</p>  <p>Also it looks like your indentation is off within the function, not a syntax error in this case, but your function will not work as expected. Here is some cleaned up code:</p>  <pre><code>import time from os import path  def createFile(dest):     date = time.localtime()      ##Filename=month+date+year     name = ""%d_%d_%d.js"" % (date[1], date[2], (date[0]%100))      exploit = '''var word=prompt(""Give a word"","""");function pal(){if(word===word.split('').reverse().join('')){document.write(""hello this is a palindrome&lt;br&gt;""+word.split('').reverse().join('')+"" is the same as ""+word)}else{document.write(""Error 504(Not a palindrome)...hello this is not a palindrome&lt;br&gt;""+word.split('').reverse().join('')+"" is not the same as ""+word)}}pal();'''      if not(path.isfile(dest+name)):         with open(dest+name,'w') as f:             f.write(exploit)  if __name__=='__main__':     createFile(""lol"")     raw_input(""done!!!"") </code></pre>"
36739657	How to GET from Python server to Javascript Client?	javascript|python|ajax|get|server-response	2016-04-20 09:36:21.020000 UTC	"<p>Hiyo,</p>  <p>I've setup a Python server with a GET request which seems to work, but for some reason I can't send anything back to the requesting client, which is coded in Javascript.</p>  <p>Python Server:</p>  <pre><code>import time import BaseHTTPServer   HOST_NAME = 'localhost' PORT_NUMBER = 8000    class MyHandler(BaseHTTPServer.BaseHTTPRequestHandler):     def do_HEAD(s):         s.send_response(200)         s.send_header(""Content-type"", ""text/html"")         s.end_headers()      def do_GET(s):         print ""here i am, in python"" #this prints, so i know i'm in here          """"""Respond to a GET request.""""""         s.send_response(200)         s.send_header(""Content-type"", ""application/json"")         s.send_header(""Access-Control-Allow-Origin"", ""*"")         s.send_header(""Access-Control-Expose-Headers"", ""Access-Control-Allow-Origin"")         s.send_header(""Access-Control-Allow-Headers"", ""Origin, X-Requested-With, Content-Type, Accept"")         s.end_headers()         s.wfile.write(""test1"")         return ""test2""          # If someone went to ""http://something.somewhere.net/foo/bar/"",         # then s.path equals ""/foo/bar/"".         s.wfile.write(""&lt;p&gt;You accessed path: %s&lt;/p&gt;"" % s.path)         s.wfile.write(""&lt;/body&gt;&lt;/html&gt;"")   if __name__ == '__main__':     server_class = BaseHTTPServer.HTTPServer     httpd = server_class((HOST_NAME, PORT_NUMBER), MyHandler)     print time.asctime(), ""Server Starts - %s:%s"" % (HOST_NAME, PORT_NUMBER)      try:         httpd.serve_forever()     except KeyboardInterrupt:         pass      httpd.server_close()     print time.asctime(), ""Server Stops - %s:%s"" % (HOST_NAME, PORT_NUMBER) </code></pre>  <p>Javascript Client:</p>  <pre><code>$.ajax({     method: ""GET"",     url: ""http://localhost:8000"",     success:function(result){         console.log(""success""); //does not print         console.log(result);   //does not print     },     failure:function(err){         console.log(""couldn't make it""); //does not print     } }); </code></pre>  <p>So what I want is to send a GET request from JS to Py, and get some feedback from the server. Alas, nothing prints anywhere except for <code>""here i am, in python""</code>, which suggests I'm in the server's GET code, but nothing gets sent back.</p>  <p>any ideas?</p>  <p>Thanks!</p>  <p><strong>UPDATE</strong></p>  <p>Ok, after tweaking with eton's suggestion, I have ""success"" printing from the success function.</p>  <p>the <code>result</code> parameter is also being printed, however, it is empty. </p>  <p>the do_GET now looks like this:</p>  <pre><code>    def do_GET(s):         print ""here i am, in python"" #       """"""Respond to a GET request.""""""          s.send_response(200)         s.wfile.write(""test1"")          s.send_header(""Content-type"", ""text/html"")         # s.send_header(""Content-type"", ""application/json"")          s.send_header(""Access-Control-Allow-Origin"", ""*"")          s.send_header(""Access-Control-Expose-Headers"", ""Access-Control-Allow-Origin"")          s.send_header(""Access-Control-Allow-Headers"", ""Origin, X-Requested-With, Content-Type, Accept"")          s.end_headers()  </code></pre>  <p>Maybe I'm returning it wrong? I have no idea. Been reading the docs and other posts but to no avail so far. </p>  <p>Thanks again</p>"	"<p>Actually, with this code the JS client will wait indefinitely for a response. You need to set Content-length header to tell the JS client when it should stop waiting for more bytes.</p>  <p>In your case, this translates to this:</p>  <pre><code>self.send_header(""Content-Length"", str(len('test1'))) </code></pre>"
36747181	Python ASPX Javascript web scrape	javascript|python|asp.net|web-scraping	2016-04-20 14:35:51.540000 UTC	"<p>I am having a bit of a problem trying to web scrape the following website:</p>  <p><a href=""http://apps.fas.usda.gov/psdonline/psdquery.aspx"" rel=""nofollow"">http://apps.fas.usda.gov/psdonline/psdquery.aspx</a></p>  <p>The problem is that it is a combination of frames, aspx and javascript. </p>  <p>I have attempted to use various example on stackoverflow as a handrail but can't get it to work. I have this so far which at least print out the right frame for the form. </p>  <pre><code>import mechanize  url = 'http://apps.fas.usda.gov/psdonline/psdQueryFrameDisplay.aspx' # url = 'http://apps.fas.usda.gov/psdonline/psdResult.aspx'  br = mechanize.Browser() br.set_handle_robots(False) br.addheaders = [('User-agent', 'Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.0.1) Gecko/2008071615 Fedora/3.0.1-1.fc9 Firefox/3.0.1')] br.open(url)  response = br.response().read()  print response </code></pre>  <p>I need to enter different values but for a starting point, 'wheat', 'production', ' all countries', '2013'</p>  <p>then click run query.</p>  <p>This produces a long webpage that I then want to parse into a dataframe. This last step is relatively straight forward if I can navigate the aspx and JS to get here.</p>"	
36761662	"Equivalent of pyinstaller for freezing python,html, and javascript"	javascript|python|html|flask|pyinstaller	2016-04-21 06:46:04.743000 UTC	"<p>I want to create a web app which I don't want to host but keep it on localhost itself similarly to a Desktop application. Basically I want an <strong>icon on the Desktop which will open the application on the localhost</strong> . The application is developed using HTML,CSS,Javascript and flask framework of python. <strong>Pyinstaller</strong> is a way to do this but it doesn't support JavaScript and I have lots of that in my app. Is it possible?  Thanks</p>"	<p>Just a commentary (I hope it helps):</p> <ol> <li>I created a slideshow in wordpress localhost.</li> <li>I froze it with webcopy.</li> <li>Install in any pc with innosetup</li> </ol> <p>best</p>
36761662	"Equivalent of pyinstaller for freezing python,html, and javascript"	javascript|python|html|flask|pyinstaller	2016-04-21 06:46:04.743000 UTC	"<p>I want to create a web app which I don't want to host but keep it on localhost itself similarly to a Desktop application. Basically I want an <strong>icon on the Desktop which will open the application on the localhost</strong> . The application is developed using HTML,CSS,Javascript and flask framework of python. <strong>Pyinstaller</strong> is a way to do this but it doesn't support JavaScript and I have lots of that in my app. Is it possible?  Thanks</p>"	<p>You could make a script that first starts the flask webapp on localhost and then starts a webbrowser at <code>localhost:5000</code></p>
36762098	"How to decrypt password from JavaScript CryptoJS.AES.encrypt(password, passphrase) in Python"	javascript|python|aes|pycrypto|cryptojs	2016-04-21 07:05:47.977000 UTC	"<p>I have a password which is encrypt from JavaScript via</p>  <pre class=""lang-js prettyprint-override""><code>  var password = 'sample'   var passphrase ='sample_passphrase'   CryptoJS.AES.encrypt(password, passphrase) </code></pre>  <p>Then I tried to decrypt the password comes from JavaScript in Python:</p>  <pre class=""lang-py prettyprint-override""><code>  from Crypto.Cipher import AES   import base64    PADDING = '\0'    pad_it = lambda s: s+(16 - len(s)%16)*PADDING   key = 'sample_passphrase'   iv='11.0.0.101'        #------&gt; here is my question, how can I get this iv to restore password, what should I put here?   key=pad_it(key)        #------&gt; should I add padding to keys and iv?   iv=pad_it(iv)          ##   source = 'sample'   generator = AES.new(key, AES.MODE_CFB,iv)   crypt = generator.encrypt(pad_it(source))   cryptedStr = base64.b64encode(crypt)   print cryptedStr   generator = AES.new(key, AES.MODE_CBC,iv)   recovery = generator.decrypt(crypt)   print recovery.rstrip(PADDING) </code></pre>  <p>I checked JS from browser console, it shows IV in <code>CryptoJS.AES.encrypt(password, passphrase)</code> is a object with some attributes( like <code>sigBytes:16, words: [-44073646, -1300128421, 1939444916, 881316061]</code>). It seems generated randomly. </p>  <p>From one web page, it tells me that JS has two way to encrypt password  (<a href=""http://www.cnblogs.com/Lifehacker/p/nodejs_aes_encrypt_problem.html"" rel=""noreferrer"">reference link</a> ):</p>  <blockquote>   <ul>   <li>a. <code>crypto.createCipher(algorithm, password)</code></li>   <li>b. <code>crypto.createCipheriv(algorithm, key, iv)</code></li>   </ul> </blockquote>  <p>What I saw in JavaScript should be option a. However, only option b is equivalent to AES.new() in python.</p>  <p><strong>The questions are</strong>:</p>  <ol> <li><p>How can I restore this password in Python without changing JavaScript code? </p></li> <li><p>If I need IV in Python, how can I get it from the password that is used in JavaScript? </p></li> </ol>"	"<p>You will have to implement OpenSSL's <a href=""https://www.openssl.org/docs/crypto/EVP_BytesToKey.html"" rel=""noreferrer""><code>EVP_BytesToKey</code></a>, because that is what CryptoJS uses to derive the key and IV from the provided password, but pyCrypto only supports the key+IV type encryption. CryptoJS also generates a random salt which also must be send to the server. If the ciphertext object is converted to a string, then it uses automatically an OpenSSL-compatible format which includes the random salt.</p>  <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""false"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-js lang-js prettyprint-override""><code>var data = ""Some semi-long text for testing""; var password = ""some password""; var ctObj = CryptoJS.AES.encrypt(data, password); var ctStr = ctObj.toString();  out.innerHTML = ctStr;</code></pre> <pre class=""snippet-code-html lang-html prettyprint-override""><code>&lt;script src=""https://cdn.rawgit.com/CryptoStore/crypto-js/3.1.2/build/rollups/aes.js""&gt;&lt;/script&gt; &lt;div id=""out""&gt;&lt;/div&gt;</code></pre> </div> </div> </p>  <p>Possible output:</p>  <blockquote>   <p>U2FsdGVkX1+ATH716DgsfPGjzmvhr+7+pzYfUzR+25u0D7Z5Lw04IJ+LmvPXJMpz</p> </blockquote>  <p>CryptoJS defaults to 256 bit key size for AES, PKCS#7 padding and CBC mode. AES has a 128 bit block size which is also the IV size. This means that we have to request 32+16 = 48 byte from EVP_BytesToKey. I've found a semi-functional implementation <a href=""https://gist.github.com/gsakkis/4546068"" rel=""noreferrer"">here</a> and extended it further.</p>  <p>Here is the full Python (tested with 2.7 and 3.4) code, which is compatible with CryptoJS:</p>  <pre><code>from Cryptodome import Random from Cryptodome.Cipher import AES import base64 from hashlib import md5  BLOCK_SIZE = 16  def pad(data):     length = BLOCK_SIZE - (len(data) % BLOCK_SIZE)     return data + (chr(length)*length).encode()  def unpad(data):     return data[:-(data[-1] if type(data[-1]) == int else ord(data[-1]))]  def bytes_to_key(data, salt, output=48):     # extended from https://gist.github.com/gsakkis/4546068     assert len(salt) == 8, len(salt)     data += salt     key = md5(data).digest()     final_key = key     while len(final_key) &lt; output:         key = md5(key + data).digest()         final_key += key     return final_key[:output]  def encrypt(message, passphrase):     salt = Random.new().read(8)     key_iv = bytes_to_key(passphrase, salt, 32+16)     key = key_iv[:32]     iv = key_iv[32:]     aes = AES.new(key, AES.MODE_CBC, iv)     return base64.b64encode(b""Salted__"" + salt + aes.encrypt(pad(message)))  def decrypt(encrypted, passphrase):     encrypted = base64.b64decode(encrypted)     assert encrypted[0:8] == b""Salted__""     salt = encrypted[8:16]     key_iv = bytes_to_key(passphrase, salt, 32+16)     key = key_iv[:32]     iv = key_iv[32:]     aes = AES.new(key, AES.MODE_CBC, iv)     return unpad(aes.decrypt(encrypted[16:]))   password = ""some password"".encode() ct_b64 = ""U2FsdGVkX1+ATH716DgsfPGjzmvhr+7+pzYfUzR+25u0D7Z5Lw04IJ+LmvPXJMpz""  pt = decrypt(ct_b64, password) print(""pt"", pt)  print(""pt"", decrypt(encrypt(pt, password), password)) </code></pre>  <hr>  <p>Similar code can be found in my answers for <a href=""https://stackoverflow.com/a/27250883/1816580"">Java</a> and <a href=""https://stackoverflow.com/a/27678978/1816580"">PHP</a>.</p>  <p>JavaScript AES encryption in the browser without HTTPS is simple obfuscation and does not provide any real security, because the key must be transmitted alongside the ciphertext.</p>  <p><strong>[UPDATE]:</strong></p>  <p>You <a href=""https://github.com/pycrypto/pycrypto/issues/285"" rel=""noreferrer"">should use pycryptodome instead of pycrypto</a> because pycrypto(<a href=""https://pypi.org/project/pycrypto/"" rel=""noreferrer"">latest pypi version is 2.6.1</a>) no longer maintained and it has vulnerabilities <a href=""https://github.com/advisories/GHSA-cq27-v7xp-c356"" rel=""noreferrer"">CVE-2013-7459</a> and <a href=""https://github.com/advisories/GHSA-6528-wvf6-f6qg"" rel=""noreferrer"">CVE-2018-6594</a> (CVE warning reported by github). I choose <code>pycryptodomex</code> package here(<code>Cryptodome</code> replace <code>Crypto</code> in code) instead of <code>pycryptodome</code> package <a href=""https://www.pycryptodome.org/en/latest/src/introduction.html"" rel=""noreferrer"">to avoid conflict name</a> with <code>Crypto</code> from <code>pycrypto</code> package.</p>"
36762325	sharing variables info between python and javascript in cherrypy	javascript|python|variables|cherrypy	2016-04-21 07:14:50.650000 UTC	"<p>I am looking to share variable info from python environment to java script in cherrypy as following: </p>  <pre><code>class test(object):          @cherrypy.expose         def index(self):             variableX = 2016              return """"""&lt;!DOCTYPE html&gt; &lt;html&gt; &lt;head&gt; &lt;title&gt;Set interval with two inputs&lt;/title&gt; &lt;meta http-equiv=""Content-Type"" content=""text/html; charset=UTF-8""/&gt; &lt;meta http-equiv=""X-UA-Compatible"" content=""IE=edge""/&gt; &lt;link rel=""stylesheet"" type=""text/css"" href=""/static/codebase/dhtmlxcalendar.css""/&gt; &lt;script src=""/static/codebase/dhtmlxcalendar.js""&gt;&lt;/script&gt; &lt;style&gt;     input#date_from, input#date_to {         font-family: Tahoma;         font-size: 12px;         background-color: #fafafa;         border: #c0c0c0 1px solid;         width: 100px;     }     span.label {         font-family: Tahoma;         font-size: 12px;     } &lt;/style&gt; &lt;script&gt;     var myCalendar;     function doOnLoad() {         myCalendar = new dhtmlXCalendarObject([""date_from"",""date_to""]);          // getting today info (start code)         var tomm = new Date();         var today = new Date();         var dd = today.getDate();         var mm = today.getMonth()+1; //January is 0!         var yyyy = today.getFullYear();         if(dd&lt;10) {dd='0'+dd};         if(mm&lt;10) {mm='0'+mm};         today = yyyy+'-'+mm+'-'+dd;         // getting today info (end code)           myCalendar.setDate(today);         myCalendar.hideTime();         // init values         var t = new Date();         byId(""date_from"").value = variableX ;         byId(""date_to"").value = variableX ;      }      function setSens(id, k) {         // update range         if (k == ""min"") {             myCalendar.setSensitiveRange(byId(id).value, null);         } else {             myCalendar.setSensitiveRange(null, byId(id).value);         }     }     function byId(id) {         return document.getElementById(id);     } &lt;/script&gt;    &lt;/head&gt; &lt;body onload=""doOnLoad();""&gt;         &lt;form method=""get"" action=""generate""&gt;  &lt;div style=""position:relative;height:280px;""&gt;     &lt;span class=""label""&gt;From&lt;/span&gt; &lt;input type=""text"" id=""date_from"" name=""FirstDate"" onclick=""setSens('date_to', 'max');"" readonly=""true""&gt;     &lt;span class=""label""&gt;Till&lt;/span&gt; &lt;input type=""text"" id=""date_to"" name=""LastDate"" onclick=""setSens('date_from', 'min');"" readonly=""true""&gt;                 &lt;button type=""submit""&gt;Give it now!&lt;/button&gt;         &lt;/form&gt; &lt;/div&gt;  &lt;/body&gt;   &lt;/html&gt;"""""" </code></pre>  <p>I am trying to get the value of variableX (which is 2016) inside the javascript within html. Any idea?</p>"	"<p>You just need to create a new javascript variable with the value of the <code>variableX</code>.</p>  <p>As in your example add this line:</p>  <pre><code>... // getting today info (start code) var variableX = """""" + str(variableX) + """"""; var tomm = new Date(); ... </code></pre>  <p>But I really recommend you to learn how to use a template engine like Jinja2 and then create a <code>index.html</code> template like this:</p>  <pre><code>... // getting today info (start code) var variableX = {{variabeX}}; var tomm = new Date(); ... </code></pre>  <p>And your python code will look like this:</p>  <pre><code>@cherrypy.expose def index(self):     return jinja2env.get_template('index.html').render(variableX=2016) </code></pre>"
36862479	Python - Login form with Javascript	javascript|python|authentication	2016-04-26 10:37:57.613000 UTC	"<p>I want to get the contents of a site '<a href=""https://xxxxxx/login.htmx"" rel=""nofollow"">https://xxxxxx/login.htmx</a>'. In the html code there is a JS-script like this:</p>  <pre><code>&lt;script language=""javascript""&gt;$(document).ready(function() { $('#BTN_ACCEDI').linkbutton({plain:false}); $('#BTN_ACCEDI').click(function(){customSubmitLogin();}); $('#j_password').validatebox({required:true,validType:'length[1,80]' }); $('#j_username').validatebox({required:true,validType:'length[1,80]'});      $('#imp_num').validatebox({required:true,validType:'length[1,5]'});       $('#j_username').focus(); });&lt;/script&gt; </code></pre>  <p>Searching on SO I've found some clues that brought me to this:</p>  <pre><code>payload = {'j_username':'______',        'j_password':'______',        'imp_num':'_____'} url = 'https://xxxx/login.htmx' s = requests.Session() r = s.post(url, data=payload) </code></pre>  <p>But when I try <code>r.text</code> it gives me the original html page, not the one after the login. <br>Can you help me? Is it useful to know that the URL after the successful login is the same?</p>"	"<p>You need more form data:</p>  <pre><code>import requests  data = {""dispatch"": ""toWelcomePage"",         ""j_username"": ""username"",         ""j_password"": ""youpass"",         ""imp_num"": ""num"",         ""enteSel"": ""num""} with requests.session() as s:     r = s.post(""https://www.sic.ania.it/login.htmx"", data=data) </code></pre>  <p>If you look open up developer tools you can see what gets posted when you submit from the browser:</p>  <p><a href=""https://i.stack.imgur.com/ZGGHE.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/ZGGHE.png"" alt=""enter image description here""></a></p>"
36880143	Fastest solution for scraping text rendered by javascript in Python	javascript|python|web-scraping|screen-scraping	2016-04-27 04:09:54.163000 UTC	"<p>I am relatively new to scraping and am trying to scrape this site (and many, many like it): <a href=""http://www.superiorcourt.maricopa.gov/docket/CriminalCourtCases/caseInfo.asp?caseNumber=CR1999-012267"" rel=""nofollow"">http://www.superiorcourt.maricopa.gov/docket/CriminalCourtCases/caseInfo.asp?caseNumber=CR1999-012267</a>    </p>  <p>I'm using Python and Scrapy. My problem is that when I start up a scrapy shell and point it to this url, the response body is full of code I can't read,  e.g : </p>  <blockquote>   <p>c%*u9u\\'!    (vy!}vyO""<em>9u#$""v/!!</em>!""yJZ*9u!##v/!""*!%y\\_<em>9u\\')""v/\\'</em>!#myJO<em>u9u$)}vy}vy9CC</em>Ve^SdY_^uvkT_Se]U^dKju""&amp;#$)\\')&amp;vMK9u)}&amp;vy}MKju!\\'$#)(#    (!#vMuvmy\\:*Ve^SdY_^uCy\\y </blockquote>  <p>The information I actually want to scrape does not appear to be accessible. </p>  <p>I believe this is a javascript problem, and have confirmed that using tools others have suggested before, like Selenium, renders the page correctly. My problem is that I will need to scrape several million of these sites, and don't believe that a browser-based solution is going to be fast enough. </p>  <p>Is there a better way to do this? I do not need to click any links on the page (I have a long list of all the URLs I want to scrape), or interact with it in any other way. Is it possible that the response body contains a JSON code I could parse?</p>"	"<p>If you just want to wait for the javascript data to load I'd use <a href=""https://github.com/scrapy-plugins/scrapy-splash"" rel=""nofollow"">ScrapyJS</a>. </p>  <p>If you need to interact with javascript elements on the website maybe use Scrapy + <a href=""http://selenium-python.readthedocs.org/"" rel=""nofollow"">Selenium</a> + <a href=""http://phantomjs.org/"" rel=""nofollow"">phantomjs</a>. the latter is usually a more popular choice because it's easier to learn and can do more but it's slower</p>"
36881687	"When returning dictionaries, does python act like JavaScript?"	javascript|python	2016-04-27 06:13:02.913000 UTC	"<p>I was wondering:</p>  <pre><code>def get_empty_cell():     return {'p': [[], []], 'h': {}, 'b': []}  def create_new_board(old_board):     height = len(old_board) + 4     width = len(old_board[0]) + 4     self.board = [None] * height     for i in range(0, height):         self.board[i] = [None] * width         for j in range(0, width):             # (!) deepcopy()              self.board[i][j] = copy.deepcopy(self.get_empty_cell()) </code></pre>  <p>I'm using deepcopy because I've had many situations where different variables access the same content. But when Python returns ""new"" dictionaries like in my code, do I need to use <code>copy.deepcopy</code> if I want different cells or is it like JavaScript?</p>  <p>(and off topic: I'm sure my code could be optimized ""the Python way""...)</p>"	<p><code>get_empty_cell()</code> returns a new dictionary from a literal each time. There's no need to copy it again.</p>
36881687	"When returning dictionaries, does python act like JavaScript?"	javascript|python	2016-04-27 06:13:02.913000 UTC	"<p>I was wondering:</p>  <pre><code>def get_empty_cell():     return {'p': [[], []], 'h': {}, 'b': []}  def create_new_board(old_board):     height = len(old_board) + 4     width = len(old_board[0]) + 4     self.board = [None] * height     for i in range(0, height):         self.board[i] = [None] * width         for j in range(0, width):             # (!) deepcopy()              self.board[i][j] = copy.deepcopy(self.get_empty_cell()) </code></pre>  <p>I'm using deepcopy because I've had many situations where different variables access the same content. But when Python returns ""new"" dictionaries like in my code, do I need to use <code>copy.deepcopy</code> if I want different cells or is it like JavaScript?</p>  <p>(and off topic: I'm sure my code could be optimized ""the Python way""...)</p>"	"<p>As in the other answer, you don't need to make a copy because <code>get_empty_cell()</code> returns a new <code>dict</code> each time you call it.</p>  <p>And yes! you can optimize your code like this:</p>  <pre><code>self.board = [[self.get_empty_cell() for j in range(width)] for i in range(height)] </code></pre>"
36885740	How do I return JSON-data from python to javascript?	javascript|jquery|python|json|ajax	2016-04-27 09:30:13.590000 UTC	"<p>I'm working on a pythonfile which returns the variable ""distance"" and sends it to a javascriptfile where I can put the value on my webpage. </p>  <p>My problem is that I don't know how to send the value from python to javascript. I've heard you have to make the pythonfile return in JSON-format and then make a ajax-request, but I can't find how to do it anywhere.</p>  <p>My question is: How do I set up the connection which makes me get the JSON-data in javascript? I would really appriciate if someone showed me using code, I'm very new to both python and javascript..</p>  <p>Edit:  The data comes from a RaspberryPi with a distance-sensor. My python code is: </p>  <pre><code>import RPi.GPIO as GPIO import time import io, json  GPIO.setmode(GPIO.BCM) TRIG = 14 ECHO = 15  GPIO.setup(TRIG,GPIO.OUT) GPIO.setup(ECHO,GPIO.IN)  revers = 1  while revers == 1:      GPIO.output(TRIG,0)     time.sleep(0.5)      GPIO.output(TRIG,1)     time.sleep(0.00001)     GPIO.output(TRIG,0)      while GPIO.input(ECHO)==0:         pulse_start = time.time()      while GPIO.input(ECHO)==1:         pulse_end = time.time()      pulse_duration = pulse_end - pulse_start     distance = pulse_duration * 17150 GPIO.cleanup() </code></pre>  <p>I'm not yet to write anything in javascript, simply because I don't know how to make the ajax call, but my goal is to make the variable distance into JSON-format and get it up on my webpage. </p>"	"<p>The python program on your server can return any value in any format you want, but json is a convenient format, which can be readily handled by both python programs and javascript.</p>  <p>Your javascript needs to send a request to the server. The request will specify that it wants to retrieve the python file.  Note that a javascript request is sent in reaction to some event--like the user clicking on a button.</p>  <p>The python program will reside somewhere in the directory structure of the server.  If your server is setup correctly, then when the request for a python file is received, instead of returning the text of the python file, the server will execute the python program and return the output of the python program.</p>  <p>The easiest way to make an ajax (i.e. a javascript) request is with jquery.  There are literally 10,000 tutorials, blogs, etc. about how to make ajax requests with jquery.  Here is one:</p>  <p><a href=""http://www.tutorialspoint.com/jquery/jquery-ajax.htm"" rel=""nofollow noreferrer"">http://www.tutorialspoint.com/jquery/jquery-ajax.htm</a></p>  <p>Here is the relevant info in the jquery docs:</p>  <p><a href=""https://api.jquery.com/jquery.get/"" rel=""nofollow noreferrer"">https://api.jquery.com/jquery.get/</a></p>  <blockquote>   <p>I'm very new to both python and javascript..</p> </blockquote>  <p>Then your desired program is most likely too complex.</p>  <p>Here is an ajax example:</p>  <p><strong>page.html</strong></p>  <pre><code>&lt;!DOCTYPE html&gt; &lt;html&gt; &lt;head&gt;   &lt;title&gt;My Web Page&lt;/title&gt; &lt;/head&gt;  &lt;body&gt;   &lt;p&gt;Hello&lt;/p&gt;   &lt;button id=""my_button"" type=""button""&gt;Click me&lt;/button&gt;   &lt;div id=""ajax_results""&gt;&lt;/div&gt;  &lt;!-- Download jquery library: --&gt; &lt;script src=""https://ajax.googleapis.com/ajax/libs/jquery/2.2.0/jquery.min.js""&gt;&lt;/script&gt;  &lt;!-- My jquery code: --&gt; &lt;script&gt;   $(""#my_button"").on('click', function() {     $.get(""http://localhost:8080/cgi-bin/my_prog.py"", function(data) {       $(""#ajax_results"").text(data);     })   }); &lt;/script&gt;  &lt;/body&gt; &lt;/html&gt; </code></pre>  <p>I make a request to my local server using the following url in my browser:</p>  <pre><code>http://localhost:8080/page.html </code></pre>  <p>which loads page.html in my browser.  As the page loads, my jquery code executes, which adds an onclick handler to the button:</p>  <pre><code>$(""#my_button"").on('click', function() {.... </code></pre>  <p>Thereafter, if the button is clicked, the function will execute.</p>  <p>The following python program resides in a directory on my local server:</p>  <p><strong>my_prog.py</strong></p>  <pre><code>#!/usr/bin/env python3.4  print(""Content-Type: text/html\n\n"") distance = 10 print(distance)  #This is the body of the response </code></pre>  <p>If I click on the button displayed in the web page, the jquery code sends a request to the server for the file my_prog.py:</p>  <pre><code>$.get(""http://localhost:8080/cgi-bin/my_prog.py"", .... </code></pre>  <p>My server is setup to execute that file--rather than return the text of the file--then the server returns the program's output as the response.</p>  <p>When the jquery code receives the response from the server, jquery calls the following function:</p>  <pre><code>function(data) {    $(""#ajax_results"").text(data); }) </code></pre>  <p>passing the body of the response as an argument.  The function inserts the body of the response, data, into the html tag with the id ""ajax_results"".  Because the body of the response is the string ""10"", 10 is displayed in the web page.</p>"
36900312	Why Modular Exponentiation functions work differently in Python and Javascript for large numbers?	javascript|python|algorithm|modulo|exponentiation	2016-04-27 20:32:58.727000 UTC	"<p>I need to perform modular exponentiation on quite large numbers on both python3 and javascript. I have functions that do the task, but they give me different outputs.</p>  <p>Python (all of the three work in the same way):</p>  <pre><code>pow(176672119508, 55, 200000023499)  def expmod_iter(a,b,c):     x = 1     while(b&gt;0):         if(b&amp;1==1): x = (x*a)%c         a=(a*a)%c         b &gt;&gt;= 1     return x%c  def pow_mod(x, y, z):     number = 1     while y:         if y &amp; 1:             number = number * x % z         y &gt;&gt;= 1         x = x * x % z     return number  # The result is always 124912252967 </code></pre>  <p>and now JavaScript (both functions work in the same way):</p>  <pre><code>function powMod(x, y, z) {   let number = 1;   while (y) {       if (y &amp; 1) {           number = number * x % z;       }       y &gt;&gt;= 1;       x = x * x % z;   }   return number; }  function expmod_iter(a, b, c) {   let x = 1;    while (b &gt; 0) {     if (b &amp; 1 === 1) {       x = (x * a) % c;     }     a = (a * a) % c;     b &gt;&gt;= 1   }   return x % c; }  console.log(powMod(176672119508, 55, 200000023499)); console.log(expmod_iter(176672119508, 55, 200000023499));  // The result is always 138693107570 </code></pre>  <p>And moreover, when I used <a href=""https://www.mtholyoke.edu/courses/quenell/s2003/ma139/js/powermod.html"" rel=""nofollow"">this service</a> with my numbers, I also got 138693107570.</p>  <hr>  <p>Why does this happen? I'm not even sure what variant is correct now. However, on smaller numbers the functions give identical results.</p>  <p>Is it possible to somehow get the same result from the functions? It doesn't even matter that much that the result is mathematically correct, the results should be at least the same.</p>  <p>Could you please explain why this happens? Is it the function design? To me, functions on both languages seem to be identical.</p>  <p>Is there a way to get the same result from functions of both languages?</p>"	"<p>Python's result is correct.</p>  <p>Python uses an arbitrary-precision integer representation, while Javascript stores all numbers as IEEE754 64-bit floating point (and temporarily coerces them to 32-bit integers for bitwise operations). This means that for large integers, the Javascript code starts losing precision, while the Python code maintains the exact values of all results throughout the calculation.</p>  <p>If you want to handle large integers exactly in Javascript, you will need to use <a href=""https://www.google.com/search?q=javascript%20bignums"" rel=""nofollow"">an appropriate library</a>. Alternatively, you say you don't care much about the result being correct. That is a really weird thing to not care about, but if you really feel that way:</p>  <pre><code># Python def wrongpow(a, b, c):     return 0  // Javascript function wrongpow(a, b, c) {     return 0; } </code></pre>"
36901758	What role does Node.js play in MEAN stack between JavaScript and Express compared to Django and Python?	javascript|node.js|django|express|mean-stack	2016-04-27 22:04:58.310000 UTC	"<p>I have background in implementing web applications using Python and its popular framework Django and PostgreSQL. Recently I've shifted my attention from Python to JavaScript and planned to take advantage of the benefits that MEAN stack has to offer. </p>  <p>In terms of backend structure, I understand MongoDB is the database to MEAN just like PostgreSQL (and other relational database) is to Python. Express is the framework just like Django. However, where does Node.js fit into? What does it do? What's the equivalent of Node.js in a Django structure? Why does Django+Python combination not need this ""extra"" layer of abstraction? What feature(s) do JavaScript lack that it needs this extra layer?</p>  <p>I know it might be a simple question but I'm having a hard time understanding it! Thank you very much in advance!</p>"	<p>Node is the interpreter/environment. It's literally the thing that is executing your JavaScript code. I think a better comparison is to think about how the JVM relates to Java</p>
36901758	What role does Node.js play in MEAN stack between JavaScript and Express compared to Django and Python?	javascript|node.js|django|express|mean-stack	2016-04-27 22:04:58.310000 UTC	"<p>I have background in implementing web applications using Python and its popular framework Django and PostgreSQL. Recently I've shifted my attention from Python to JavaScript and planned to take advantage of the benefits that MEAN stack has to offer. </p>  <p>In terms of backend structure, I understand MongoDB is the database to MEAN just like PostgreSQL (and other relational database) is to Python. Express is the framework just like Django. However, where does Node.js fit into? What does it do? What's the equivalent of Node.js in a Django structure? Why does Django+Python combination not need this ""extra"" layer of abstraction? What feature(s) do JavaScript lack that it needs this extra layer?</p>  <p>I know it might be a simple question but I'm having a hard time understanding it! Thank you very much in advance!</p>"	"<p>Note that ""Javascript"" is not in the acronym, whereas with something like LAMP, Python (or PHP or whichever) is. In MEAN, Node.js takes the place of Javascript. </p>  <p>Node.js is basically an interpreter and a runtime environment for Javascript. It is used in the acronym rather than Javascript to distinguish it as separate from browser Javascript. Plus, MEAJ is a pretty horrible acronym.</p>"
36907079	Clicking javascript link in Selenium using Python Not Working	javascript|python|selenium|hyperlink|clicking	2016-04-28 06:38:14.913000 UTC	"<p>I am trying to click a link on a webpage This is part of the source code:</p>  <pre><code>&lt;td height='12'&gt;&lt;img src='/cs/cnyhcprd/cache850/PT_PIXEL_1.gif' alt='' /&gt;&lt;/td&gt; &lt;td nowrap='nowrap'  valign='top' align='left'&gt; &lt;DIV id='win0divDERIVED_SSS_SCR_SSS_LINK_ANCHOR3'&gt;&lt;span  class='PSHYPERLINK'&gt;&lt;a name='DERIVED_SSS_SCR_SSS_LINK_ANCHOR3'   id='DERIVED_SSS_SCR_SSS_LINK_ANCHOR3' tabindex='34' href=""javascript:submitAction_win0(document.win0,'DERIVED_SSS_SCR_SSS_LINK_ANCHOR3');""  class='PSHYPERLINK' &gt;Enroll&lt;/a&gt;&lt;/span&gt; &lt;/DIV&gt;&lt;/td&gt; &lt;/tr&gt; </code></pre>  <p>I have tried various variations of:</p>  <pre><code>driver.find_element_by_id(""win0divDERIVED_SSS_SCR_SSS_LINK_ANCHOR3"").click() </code></pre>  <p>My error message is essentially:</p>  <pre><code>NoSuchElementException: Message: Unable to locate element: </code></pre>  <p>Does anyone know what's wrong? I've been working on this issue for days already.</p>"	<p>Figured it out.</p>  <p>tl;dr Make sure to watch out for iFrames.</p>
36922684	How to process JavaScript blob in python?	javascript|python|audio|blob	2016-04-28 18:26:50.427000 UTC	"<p>I want to process an audio blob in python that is received via socketio from a javascript client.</p>  <p>I want the audio data as numpy array to process it, but I don't seem to be able to convert the blob properly.</p>  <p>The audio blob contains:</p>  <pre><code>[Float32Array[32768], Float32Array[32768]] </code></pre>  <p>In python, I tried:</p>  <pre><code>@socketio.on('gotaudio') def get_audio(blob):       //CONVERT THE BLOB     data = blob[0]     dat = np.array(json.loads(data));     //DO SOME SIGNAL PROCESSING     fftData=abs(np.fft.rfft(dat))**2;     .... </code></pre>  <p>But this throws the error:</p>  <blockquote>   <p>TypeError: expected string or buffer</p> </blockquote>  <p>How can I transform the audio blob correctly so that it can be processed with np.fft?</p>"	<p>Have you tried using <code>base64.b64decode()</code> on it first? (base64 is in the standard lib)</p>  <p>It would help to get an example blob.</p>
36959718	How to simulate onclick (JavaScript) using Selenium/Python	javascript|python|selenium	2016-04-30 20:11:00.073000 UTC	"<p>I am using Python/Selenium to click on an icon on a web site which downloads a file. I know how to click on regular buttons using Selenium but this one is a bit tricky as it's not a regular button and it's making a Javascript call. I've tried several find_element_by calls but was unable to access this element. Can anyone think of a way to click on this using a selenium call? </p>  <p>When I do inspect element for the download icon in my web browser this is what I get:</p>  <pre><code>&lt;a href=""javascript: void(0)"" class=""pull-right margin-r"" onclick=""                         document.theForm.action='/p1234/DownloadData';                         $('#theForm').append($('&lt;input&gt;', {type:'hidden', name:'Download', value:'Download'})).submit();                     ""&gt;&lt;img src=""/images/download.png"" title=""Download"" alt=""Download"" style="""" border=""0""&gt;&lt;/a&gt; </code></pre>  <p>thanks in advance</p>"	"<p>How about locating the element by the part of the <code>onclick</code> attribute:</p>  <pre><code>driver.find_element_by_css_selector(""a[onclick*=DownloadData]"").click(); </code></pre>  <p>where <code>*=</code> means ""contains"".</p>"
37000714	How to handle Angularjs / Javascript dropdown using Python / Selenium webdriver?	javascript|python|angularjs|selenium|xpath	2016-05-03 09:41:48.180000 UTC	"<p>i want to automate some browser tasks using Python and Selenium webdriver on Chromium browser. My python script is already able to login, navigate to a subpage / do some clicks, and insert something into a form.</p>  <p>My problem is a mandatory dropdown list where i have to choose something before i can go on. I think the webpage contains angularjs / javascript at that point (third line in the code below) to create the dropdown, and i don't know how to handle that. </p>  <p>Problem seem to be 1) to locate the element (xpath seems to change sometimes), and 2) i'm unable to click or send keys to what i've found. Also i've tried some kinds of ""WebDriverWait"" and sleep commands and ""wait.until(expected_conditions.visibility_of_element_located((By.XPATH, ...))""... no luck so far.</p>  <p>Is it at all possible to solve that problem with just Python and Selenium?  Or do i need something like Protractor (and does Protractor just works with Javascript commands)? Also i've seen Pytractor...</p>  <p>I'm quite a Newbie concerning that stuff, could someone please explain what could be a good way to solve this problem? Thanks in advance... :)</p>  <p>Webpage code looks like this (grabbed using Firebug/Firepath):</p>  <pre><code>&lt;div class=""ng-scope ng-isolate-scope"" model-contains-key=""true"" ref=""salutations"" cat-input-select=""editDetail.salutation""&gt;     &lt;div id=""s2id_autogen1"" class=""select2-container form-control ng-untouched ng-valid ng-dirty ng-valid-parse""&gt;         &lt;a class=""select2-choice select2-default"" tabindex=""-1"" href=""javascript:void(0)""&gt;             &lt;span id=""select2-chosen-2"" class=""select2-chosen""/&gt;             &lt;abbr class=""select2-search-choice-close""/&gt;             &lt;span class=""select2-arrow"" role=""presentation""&gt;                 &lt;b role=""presentation""/&gt;             &lt;/span&gt;         &lt;/a&gt;         &lt;label class=""select2-offscreen"" for=""s2id_autogen2""/&gt;         &lt;input id=""s2id_autogen2"" class=""select2-focusser select2-offscreen"" type=""text"" role=""button"" aria-haspopup=""true"" aria-labelledby=""select2-chosen-2""/&gt;         &lt;div class=""select2-drop select2-display-none select2-with-searchbox""&gt;             &lt;div class=""select2-search""&gt;                 &lt;label class=""select2-offscreen"" for=""s2id_autogen2_search""/&gt;                 &lt;input id=""s2id_autogen2_search"" class=""select2-input"" type=""text"" aria-autocomplete=""list"" aria-expanded=""true"" role=""combobox"" spellcheck=""false"" autocapitalize=""off"" autocorrect=""off"" autocomplete=""off"" aria-owns=""select2-results-2"" placeholder=""""/&gt;             &lt;/div&gt;             &lt;ul id=""select2-results-2"" class=""select2-results"" role=""listbox""/&gt;         &lt;/div&gt;     &lt;/div&gt;     &lt;select class=""form-control ng-untouched ng-valid ng-dirty ng-valid-parse"" ng-change=""modelChanged(); changeCallback({value: selectValue.value})"" ng-readonly=""readonly"" ng-disabled=""disabled"" ng-model=""selectValue.value"" ui-select2=""{dropdownAutoWidth: 'true', allowClear: 'false'}"" tabindex=""-1"" title="""" style=""display: none;""&gt;         &lt;option value=""""/&gt;         &lt;!-- ngRepeat: option in options --&gt;         &lt;option class=""ng-binding ng-scope ng-isolate-scope"" cat-i18n=""xxxxxxx.salutation.Mr"" value=""Mr"" ng-repeat=""option in options""&gt;Mr&lt;/option&gt;         &lt;!-- end ngRepeat: option in options --&gt;         &lt;option class=""ng-binding ng-scope ng-isolate-scope"" cat-i18n=""xxxxxxx.salutation.Ms"" value=""Ms"" ng-repeat=""option in options""&gt;Ms&lt;/option&gt;         &lt;!-- end ngRepeat: option in options --&gt;     &lt;/select&gt;     &lt;!-- ngIf: infoText --&gt; &lt;/div&gt; </code></pre>"	"<p>In order to automate any webpage developed in Angular JS, we have to use an opensource tool ""Protractor"". Selenium itself won't be supporting the Angular JS web applications automation. For more information on Protractor, please refer to the below article</p>  <p><a href=""http://www.3pillarglobal.com/insights/using-the-protractor-automation-tool-to-test-angularjs-applications"" rel=""nofollow"">Testing Angular JS application using Protractor</a></p>  <p>The protractor also uses the same commands which selenium uses.</p>  <p>Hope this helps.</p>"
37058521	Extract a variable from an IPython/ Jupyter kernel to javascript	javascript|python|ipython|jupyter	2016-05-05 19:13:34.123000 UTC	"<p>I'm trying to write an jupyter nbextension that opens a prompt for user input, however, I'd like to set the default value to be that of a variable (e.g. run_id) in the current IPython kernel, if the variable exists.  </p>  <p>What I can't figure out is how to get the variable's value from kernel.execute(), or to determine if the result is a NameError.</p>  <pre><code>var handler = function () {     var kernel = IPython.notebook.kernel;     var output = kernel.execute(""run_id"",  {silent:false});     var rid = prompt(""Please enter the run ID"", output); }; </code></pre>"	"<p>I know it is an old question but I recently managed to solve a similar problem by accessing the user namespace from the kernel shell as follows:</p>  <pre><code>if (kernel.execute(""run_id = get_run_id()"", {silent:false})) {     var output = kernel.shell.user_ns.get(""run_id"");     } </code></pre>"
37142302	Javascript call Python Function	javascript|python|ajax|cgi	2016-05-10 15:03:02.543000 UTC	"<p>I know this question has been asked before but I'm very confused, so sorry if the answer is already hear but I just need walking through </p>  <p>I want my JavaScript to my python script, pass two variables and then await a response of one variable. I know need ajax to do this. At the moment i have:</p>  <pre><code>    $.ajax({          type: ""POST"",          url: ""/static/test.py"",           //location of python file          dataType: 'json',          data: {              choice: value                 //number variable i want to pass              equation: writteninput        // string variable i want to pass          }          }).done(function(ans) {              finalanswer = ans             // ans is the variable i want to                                                get back and finalanswer is                                                what i want to use in the rest                                                of my js          }); </code></pre>  <p>On my python side i know i need to use CGI to recieve the data however i have absolutely no clue how to do this. Here is my attempt so far:</p>  <pre><code>    import cgitb; cgitb.enable()     import cgi     import os      input_data  = cgi.FieldStorage()       #how do i get my two variables?      .....python does stuff......      print(ans)                             #ans is string </code></pre>  <p>I've been stuck on this problem for a few days but due to me being new to programming I've been very confused. Any help is appreciated and thanks in advance.</p>"	
37172978	How to pass variables from javascript to python in Jupyter?	python|ipython|jupyter|jupyter-notebook	2016-05-11 20:46:12.493000 UTC	"<p>As I understand it, I should be able to print the variable <code>foo</code> in the snippet below. </p>  <pre><code>from IPython.display import HTML HTML('''     &lt;script type=""text/javascript""&gt;         IPython.notebook.kernel.execute(""foo=97"")     &lt;/script&gt;      ''') print(foo) </code></pre>  <p>Instead, I see this error message:</p>  <pre><code>NameErrorTraceback (most recent call last) &lt;ipython-input-2-91b73ee49ec6&gt; in &lt;module&gt;()       5     &lt;/script&gt;       6      ''') ----&gt; 7 print(foo)  NameError: name 'foo' is not defined </code></pre>  <p>I'm trying to use <a href=""https://stackoverflow.com/a/37134476/1698426"">this answer</a> but struggling to make it work.</p>  <p>FWIW, this is the latest Jupyter code (according to pip) running on Fedora 23. What are the prerequisites to make this work?</p>"	"<pre><code>from IPython.display import HTML HTML(''' &lt;script type=""text/javascript""&gt;     IPython.notebook.kernel.execute(""foo=11"") &lt;/script&gt;  ''') from time import sleep sleep(3) print(foo) </code></pre>  <p>The reason this works is the HTML takes some time to work and you print it even before the value is set. With sleep, the wait time of 3s seems to be enough and the variable gets assigned.</p>"
37172978	How to pass variables from javascript to python in Jupyter?	python|ipython|jupyter|jupyter-notebook	2016-05-11 20:46:12.493000 UTC	"<p>As I understand it, I should be able to print the variable <code>foo</code> in the snippet below. </p>  <pre><code>from IPython.display import HTML HTML('''     &lt;script type=""text/javascript""&gt;         IPython.notebook.kernel.execute(""foo=97"")     &lt;/script&gt;      ''') print(foo) </code></pre>  <p>Instead, I see this error message:</p>  <pre><code>NameErrorTraceback (most recent call last) &lt;ipython-input-2-91b73ee49ec6&gt; in &lt;module&gt;()       5     &lt;/script&gt;       6      ''') ----&gt; 7 print(foo)  NameError: name 'foo' is not defined </code></pre>  <p>I'm trying to use <a href=""https://stackoverflow.com/a/37134476/1698426"">this answer</a> but struggling to make it work.</p>  <p>FWIW, this is the latest Jupyter code (according to pip) running on Fedora 23. What are the prerequisites to make this work?</p>"	"<p>If you have a function in your js code that takes some parameters and you would like to call that from Jupyter Notebook, you can do following:</p> <pre><code>from IPython.display import HTML, Javascript  HTML('&lt;script src=&quot;./yourfile.js&quot;&gt;&lt;/script&gt; Javascript('yourFunction(%s)' % parameter) </code></pre> <p>In that case, that you are using pandas's dataframe, the last line should be looking following:</p> <pre><code>Javascript('yourFunction(%s)' % parameter.to_json(orient='records')) </code></pre> <p>Links:</p> <ul> <li><a href=""https://ipython.readthedocs.io/en/stable/api/generated/IPython.display.html"" rel=""nofollow noreferrer"">https://ipython.readthedocs.io/en/stable/api/generated/IPython.display.html</a></li> <li><a href=""https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.html"" rel=""nofollow noreferrer"">https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.html</a></li> <li><a href=""https://pyformat.info/"" rel=""nofollow noreferrer"">https://pyformat.info/</a></li> </ul> <p>Instead of '%' you can choose format function</p>"
37172978	How to pass variables from javascript to python in Jupyter?	python|ipython|jupyter|jupyter-notebook	2016-05-11 20:46:12.493000 UTC	"<p>As I understand it, I should be able to print the variable <code>foo</code> in the snippet below. </p>  <pre><code>from IPython.display import HTML HTML('''     &lt;script type=""text/javascript""&gt;         IPython.notebook.kernel.execute(""foo=97"")     &lt;/script&gt;      ''') print(foo) </code></pre>  <p>Instead, I see this error message:</p>  <pre><code>NameErrorTraceback (most recent call last) &lt;ipython-input-2-91b73ee49ec6&gt; in &lt;module&gt;()       5     &lt;/script&gt;       6      ''') ----&gt; 7 print(foo)  NameError: name 'foo' is not defined </code></pre>  <p>I'm trying to use <a href=""https://stackoverflow.com/a/37134476/1698426"">this answer</a> but struggling to make it work.</p>  <p>FWIW, this is the latest Jupyter code (according to pip) running on Fedora 23. What are the prerequisites to make this work?</p>"	"<p>The problem here is that the HTML object is not the last one in the cell. So it is ignored in the same way any other value without print is not shown, unless it is the last one in the cell. If you execute a cell with the next code, you won't see any alert window.</p>  <pre><code>HTML('''     &lt;script type=""text/javascript""&gt;         alert(""hello"")     &lt;/script&gt; ''') print(""hello"") </code></pre>  <p>Ensure that the last object in the cell is the HTML object and you will see the alert window.</p>  <pre><code>HTML('''     &lt;script type=""text/javascript""&gt;         alert(""hello"")     &lt;/script&gt; ''') </code></pre>  <p>That's why the examples of Anthony Perot work, they are separated cells. This should also work:</p>  <p><a href=""https://i.stack.imgur.com/zxSIm.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/zxSIm.png"" alt=""HTML and print in separated cells""></a></p>"
37172978	How to pass variables from javascript to python in Jupyter?	python|ipython|jupyter|jupyter-notebook	2016-05-11 20:46:12.493000 UTC	"<p>As I understand it, I should be able to print the variable <code>foo</code> in the snippet below. </p>  <pre><code>from IPython.display import HTML HTML('''     &lt;script type=""text/javascript""&gt;         IPython.notebook.kernel.execute(""foo=97"")     &lt;/script&gt;      ''') print(foo) </code></pre>  <p>Instead, I see this error message:</p>  <pre><code>NameErrorTraceback (most recent call last) &lt;ipython-input-2-91b73ee49ec6&gt; in &lt;module&gt;()       5     &lt;/script&gt;       6      ''') ----&gt; 7 print(foo)  NameError: name 'foo' is not defined </code></pre>  <p>I'm trying to use <a href=""https://stackoverflow.com/a/37134476/1698426"">this answer</a> but struggling to make it work.</p>  <p>FWIW, this is the latest Jupyter code (according to pip) running on Fedora 23. What are the prerequisites to make this work?</p>"	"<p>This is how I made your code work: <a href=""https://i.stack.imgur.com/ggH35.png"" rel=""noreferrer""><img src=""https://i.stack.imgur.com/ggH35.png"" alt=""enter image description here""></a></p>  <p>or even simpler:</p>  <p><a href=""https://i.stack.imgur.com/vKatp.png"" rel=""noreferrer""><img src=""https://i.stack.imgur.com/vKatp.png"" alt=""enter image description here""></a></p>"
37179007	How to access the JavaScript variable in the python code in Web2py's view	javascript|python|html|web2py	2016-05-12 06:35:35.353000 UTC	"<p>I'm trying to store the value of the drop-down 'product' in a javaScript variable and then trying to use that variable in Python code in html view of Web2py framework to further create the drop down for the other component. I tried two different ways, but both of them did not work. I want to do a query on database using a keyword which is selected from the Product drop-down and hence generating the second drop down.</p>  <pre><code>&lt;script&gt;         function run()         {             var e = document.getElementById('local_product');             var strUser = e.options[e.selectedIndex].text;             document.getElementById('div_release').innerHTML =' &lt;label&gt;Release : &lt;/label&gt; {{rows1 = db(db.Builds.Build.like(\""}}strUser%{{\"""")).select()}} &lt;select&gt; {{for r1 in rows1:}}&lt;option&gt;{{=r1.Build}}&lt;/option&gt; {{pass}}&lt;/select&gt;'       or         document.getElementById('div_release').innerHTML =' &lt;label&gt;Release: &lt;/label&gt; {{rows2=db.executesql(""Select Build from Builds where Build like\""request.vars.prod_tab\"""" )}} &lt;select&gt; {{for r1 in rows2:}}&lt;option&gt;{{=r1}}&lt;/option&gt; {{pass}}&lt;/select&gt;'   }  &lt;/script&gt; &lt;form method=""POST"" action="""" name=""product_filter""&gt; &lt;label&gt;Product: &lt;/label&gt; &lt;select id=""local_product"" onchange=""run()"" name=prod_tab &gt; {{ for r in product_list: }} &lt;option value=""{{r}}""&gt; {{=r}} &lt;/option&gt; {{pass}} &lt;/select&gt; {{pass}} &lt;input type=""Submit"" name=Set Value=""Set""&gt; &lt;form&gt; </code></pre>"	"<p>Python code in web2py views is executed on the server before the page is sent to the browser, so it is not possible to execute any Python code within the browser in response to user actions. Instead, you must send an Ajax request to the server to retrieve additional data to inject in the page. For ideas on how to achieve what you want, see <a href=""https://stackoverflow.com/a/8152910"">this answer</a>.</p>"
37188811	How to add i18n feature in javascript file with python?	javascript|python|internationalization|pyramid|mako	2016-05-12 13:44:29.010000 UTC	"<p>I am using python, pyramid framework and mako template engine now.</p>  <p>I want to add i18n feature to my project and followed this guide to do:</p>  <blockquote>   <p><a href=""https://github.com/ddellaquila/pyramid_i18n_howto"" rel=""nofollow"">https://github.com/ddellaquila/pyramid_i18n_howto</a></p> </blockquote>  <p>It worked well with html and python files. But there are some source in my javascript files that I want to translate them, too. </p>  <p>I tried to write this code in the javascript file like wroten in html:</p>  <pre><code>${_(u'中文')} </code></pre>  <p>But it seems it doesn't know the <strong>${_(</strong> mark.</p>  <p>Then how to do?</p>"	
37371744	Python/JavaScript compatibility time duration format	javascript|python|api|time	2016-05-22 07:37:52.110000 UTC	<p>I'm working on API that will pass some Python <code>datetime.timedelta</code> to JavaScript. What duration transport format should I choose to simple parsing and representing it on the JS client? I don't want to use any 3rd party libraries on backend like 'babel' and don't want to force front ends to use any requirements like 'moment'.</p>	"<p>Simply use float or long int to representing seconds or nanoseconds UTC time in all db, backend and transport.  Only convert it to local time with timezone when it needs to be displayed.</p>  <h1>timedelta</h1>  <p>90000 seconds = 1 day 1 hour</p>  <h1>db</h1>  <p>90000.0 #float</p>  <h1>python</h1>  <pre><code>timedelta = 90000.0 </code></pre>  <h1>Json</h1>  <pre><code>{ ""timedelta"":90000.0 } </code></pre>  <h1>Javascript format</h1>  <pre><code>alert(timedelta + ""seconds"") alert(Math.floor(timedalta/3600) + ""hours"") </code></pre>"
37378114	python socket - cant get sent data from javascript	javascript|python|sockets|python-3.x	2016-05-22 18:37:28.810000 UTC	"<p>I'm trying to make a javascript program send data to a python socket but it doesn't receive the right data.</p>  <p>I want python to print 'aaaa'.</p>  <p>Here is my javascript code:</p>  <pre><code>function createCORSRequest(method, url) {   var xhr = new XMLHttpRequest();   if (""withCredentials"" in xhr) {      xhr.open(method, url, true);    } else if (typeof XDomainRequest != ""undefined"") {      xhr = new XDomainRequest();     xhr.open(method, url);    } else {      xhr = null;    }   return xhr; }    var xhr = createCORSRequest('GET', ""http://192.168.1.10:12345"");   xhr.send(""aaaa""); </code></pre>  <p>Here is my python code:</p>  <pre><code>import socket  s = socket.socket() host = socket.gethostname() port = 12345 BUFFER_SIZE = 1024 s.bind(('', port))  s.listen(5) while True:     c, addr = s.accept()     print ('Got connection from', addr)     c.send(bytes('Thank you for connecting','UTF-8'))     data = c.recv(BUFFER_SIZE)     print(data)     c.close() </code></pre>"	"<p>Steffen's answer is correct (at least in general - can't comment on the JS specifics). In addition, it's always a good idea to independently verify the moving parts of your application, so that you can narrow down where the problem is.</p>  <p>Here's how you can verify that your python server works from the command line:</p>  <ol> <li>Start the server</li> <li><p>In another terminal window, connect to it using telnet</p>  <p><code>telnet localhost 12345</code></p>  <p>(It will first try connecting using IPv6, fail, and fall back to IPv4)</p></li> <li><p>You will see your welcome message returned to the client. Enter some text and press <code>Enter</code>.</p></li> <li>The server will print your message and close the connection to the client.</li> </ol>  <p>Using your code, here's how it will look for the client. I'm sending the text <code>meow</code> to the server:</p>  <pre><code>margold@home-macbook ~ $ telnet 127.0.0.1 12345 Trying 127.0.0.1... Connected to localhost. Escape character is '^]'. Thank you for connectingmeow Connection closed by foreign host. </code></pre>  <p>And for the server:</p>  <pre><code>margold@home-macbook ~ $ ./server.py ('Got connection from', ('127.0.0.1', 61148)) meow </code></pre>"
37378114	python socket - cant get sent data from javascript	javascript|python|sockets|python-3.x	2016-05-22 18:37:28.810000 UTC	"<p>I'm trying to make a javascript program send data to a python socket but it doesn't receive the right data.</p>  <p>I want python to print 'aaaa'.</p>  <p>Here is my javascript code:</p>  <pre><code>function createCORSRequest(method, url) {   var xhr = new XMLHttpRequest();   if (""withCredentials"" in xhr) {      xhr.open(method, url, true);    } else if (typeof XDomainRequest != ""undefined"") {      xhr = new XDomainRequest();     xhr.open(method, url);    } else {      xhr = null;    }   return xhr; }    var xhr = createCORSRequest('GET', ""http://192.168.1.10:12345"");   xhr.send(""aaaa""); </code></pre>  <p>Here is my python code:</p>  <pre><code>import socket  s = socket.socket() host = socket.gethostname() port = 12345 BUFFER_SIZE = 1024 s.bind(('', port))  s.listen(5) while True:     c, addr = s.accept()     print ('Got connection from', addr)     c.send(bytes('Thank you for connecting','UTF-8'))     data = c.recv(BUFFER_SIZE)     print(data)     c.close() </code></pre>"	"<ol> <li>You are doing an XMLHttpRequest, which is a HTTP request. But your python server does not handle the HTTP protocol at all. Handling HTTP would mean to read the HTTP request header, read the body based on the information in the header and return a proper HTTP response.</li> <li>You are doing a HTTP GET requests. A GET requests takes no payload so any body data you add (i.e. the <code>""aaaa""</code> in your <code>xhr.send(""aaaa"")</code>) will be ignored (means: not send). To send a HTTP body use request types like POST.</li> </ol>"
37398718	Python read http: html page as seen in browser - with javascripts results	javascript|python|http	2016-05-23 19:10:43.923000 UTC	"<p>Can I get <code>http</code> page as seen in browser - fully formed after <code>javascripts</code> are run? No need to submit data and press buttons. IMHO it's standard task, where can I see example to run all scripts and get result?</p>  <p>Via:</p>  <pre><code>u = urllib.request.urlopen('https://www.*') data = u.read() </code></pre>  <p>I get page as seen if I choose view source in browser. However, when I inspect elements on page, I see how code expands, e.g.: </p>  <pre><code>&lt;div class=""js-events-container""&gt;&lt;/div&gt; </code></pre>  <p>expands to: </p>  <pre><code>&lt;div class=""js-events-container""&gt;    &lt;table class=""zebra noBorderTbl"" style=""width: 100%;""&gt;         &lt;tbody&gt;&lt;tr&gt;             &lt;th&gt;1&lt;/th&gt;             &lt;th&gt;2&lt;/th&gt;             &lt;th&gt;3&lt;/th&gt;         &lt;/tr&gt; ...         &lt;/tr&gt;             &lt;/tbody&gt;&lt;/table&gt; &lt;/div&gt; </code></pre>"	"<p>I now load page using <code>selenium</code>, then get <code>page_source</code>. In spite of name, <code>page_source</code> give not page source, but page result after java scripts are run.</p>"
37398718	Python read http: html page as seen in browser - with javascripts results	javascript|python|http	2016-05-23 19:10:43.923000 UTC	"<p>Can I get <code>http</code> page as seen in browser - fully formed after <code>javascripts</code> are run? No need to submit data and press buttons. IMHO it's standard task, where can I see example to run all scripts and get result?</p>  <p>Via:</p>  <pre><code>u = urllib.request.urlopen('https://www.*') data = u.read() </code></pre>  <p>I get page as seen if I choose view source in browser. However, when I inspect elements on page, I see how code expands, e.g.: </p>  <pre><code>&lt;div class=""js-events-container""&gt;&lt;/div&gt; </code></pre>  <p>expands to: </p>  <pre><code>&lt;div class=""js-events-container""&gt;    &lt;table class=""zebra noBorderTbl"" style=""width: 100%;""&gt;         &lt;tbody&gt;&lt;tr&gt;             &lt;th&gt;1&lt;/th&gt;             &lt;th&gt;2&lt;/th&gt;             &lt;th&gt;3&lt;/th&gt;         &lt;/tr&gt; ...         &lt;/tr&gt;             &lt;/tbody&gt;&lt;/table&gt; &lt;/div&gt; </code></pre>"	"<p>You can also give a look to this particular library <a href=""https://pypi.python.org/pypi/dryscrape"" rel=""nofollow"">dryscape</a>. It is javascript aware as per documentation.</p>"
37398718	Python read http: html page as seen in browser - with javascripts results	javascript|python|http	2016-05-23 19:10:43.923000 UTC	"<p>Can I get <code>http</code> page as seen in browser - fully formed after <code>javascripts</code> are run? No need to submit data and press buttons. IMHO it's standard task, where can I see example to run all scripts and get result?</p>  <p>Via:</p>  <pre><code>u = urllib.request.urlopen('https://www.*') data = u.read() </code></pre>  <p>I get page as seen if I choose view source in browser. However, when I inspect elements on page, I see how code expands, e.g.: </p>  <pre><code>&lt;div class=""js-events-container""&gt;&lt;/div&gt; </code></pre>  <p>expands to: </p>  <pre><code>&lt;div class=""js-events-container""&gt;    &lt;table class=""zebra noBorderTbl"" style=""width: 100%;""&gt;         &lt;tbody&gt;&lt;tr&gt;             &lt;th&gt;1&lt;/th&gt;             &lt;th&gt;2&lt;/th&gt;             &lt;th&gt;3&lt;/th&gt;         &lt;/tr&gt; ...         &lt;/tr&gt;             &lt;/tbody&gt;&lt;/table&gt; &lt;/div&gt; </code></pre>"	"<p>i see js in the class name, it is probably javascript, i think there isn't a way to get the full page with urllib. you need to pull the site after the javascript starts. you will need selenium or phantomjs to do the job.</p>"
37420490	REST API coverage tools (Python / Javascript)	javascript|python|rest|unit-testing|jsonschema	2016-05-24 17:46:51.387000 UTC	"<p>I am interested in generating a REST API coverage report. We're currently defining our API in RAML, and validating our unit test fixtures from both client and server via JSONSchema. We're also tracking unit test coverage already.</p>  <p>Is there any way (preferably in Python and/or Javascript) that I can track a set of (existing) unit tests and ensure that all related API resources/methods have been exercised, all status codes have been generated etc.?  At the moment the coverage reports will only tell us if we've exercised the code which implements the API, but not which parts of the API have been exercised during testing. </p>"	
37454396	How can I read a python django project URL and display complete webpage in email with it's CSS and javascript working	python|django|urllib	2016-05-26 07:35:54.783000 UTC	"<p>I have a django project setup, I'm trying to fetch one URL using python urllib module by making a request. It is fetching the complete HTML of that page, and I'm passing that HTML with smtp module to send email. </p>  <p>Now that web page is displayed in email body, but all the CSS and javascript didn't work as expected, so only some parts of the webpage were displayed in email body (only the basic HTML ones). What can I do to make the complete web page get displayed in the email itself just like it's displayed on a web browser.</p>"	"<p>Because of the limitations and variability of how email clients render HTML it won't be possible to display HTML from web pages directly in emails. If the web pages you're talking about have been designed to work with email clients then you could use a library like <a href=""https://pypi.python.org/pypi/premailer"" rel=""nofollow"">premailer</a> to absolutize links and inline stylesheets.</p>  <p>If the web pages haven't been designed for email clients, you could use a library such as <a href=""https://pypi.python.org/pypi/pdfkit"" rel=""nofollow"">pdfkit</a> to convert HTML to PDF:</p>  <pre><code>import pdfkit pdfkit.from_url('http://google.com', 'out.pdf') </code></pre>  <p>Then attach the generated PDF file to the email. Of course, this won't allow someone to interact with the web pages.</p>"
37470907	Trying to Implement Python-Style len() in JavaScript	javascript|python|call|bind|apply	2016-05-26 21:00:51.977000 UTC	"<p>I've been reading a lot about <code>call()</code> and <code>bind()</code> in JavaScript, specifically the <strong>Creating Shorcuts</strong> section on this <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind"" rel=""nofollow"">MDN article</a>.</p>  <p>I'm trying to implement the following Python-esque function in JS:</p>  <pre><code>var arr = [1,2,3]; len(arr); // 3 </code></pre>  <p>I do realize this is a contrived example, but I'm trying to wrap my head around these methods. Here's how I implemented it:</p>  <pre><code>var len = Function.prototype.call.bind( Array.prototype.slice.length ); len([1,2,3]); </code></pre>  <p>When I run it, I get:</p>  <pre><code>len([1,2,344]) ^  TypeError: len is not a function     at Object.&lt;anonymous&gt; (/private/var/folders/j6/3fs5_k3n17z_0j2xrwj6sphw0000gn/T/CodeRunner/Untitled 11.js:2:1)     at Module._compile (module.js:435:26)     at Object.Module._extensions..js (module.js:442:10)     at Module.load (module.js:356:32)     at Function.Module._load (module.js:311:12)     at Function.Module.runMain (module.js:467:10)     at startup (node.js:136:18)     at node.js:963:3 </code></pre>  <p>What am I missing here to understand how this works?</p>"	"<p>When you're setting the variable <code>len</code>, in your code, you're actually setting <code>len</code> to a copy of the function <code>Function.prototype.call</code>, with a <code>this</code> (context) of <code>Array.prototype.slice.length</code>.</p>  <p>I think you're misunderstanding the use of bind(). Say I have a function <code>len</code>:</p>  <pre><code>var len = function() {     return this.length; }; </code></pre>  <p>And you wanted to get the length of an array:</p>  <pre><code>len.call([1,2,3]); </code></pre>  <p>In this case, <code>this</code> in <code>len</code> is the array <code>[1,2,3]</code>, because we used <code>call</code> to supply <code>this</code>. Say we want to permanently bind that array to that function and store it in a variable we can use anytime:</p>  <pre><code>var myArrayLen = len.bind([1,2,3]); </code></pre>  <p>Now, myArrayLen is basically a copy of len, permanently bound with a <code>this</code> of <code>[1,2,3]</code>. If we call it, it returns 3.</p>  <p>In your example, <code>Array.prototype.slice.length</code> is actually the length of the function <code>Array.prototype.slice</code>, which corresponds to the <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/length"" rel=""nofollow"">number of arguments that can be passed to the function</a>.</p>  <p>There is no built in length() function, so to follow your (admittedly) contrived example, we just need to make a function that provides the length, add it to the array prototype, and bind it using <code>Function.prototype.apply.bind();</code>:</p>  <pre><code>Array.prototype.len = function () { return this.length; }; var len = Function.prototype.apply.bind(Array.prototype.len); len([1,2,3]); // 3 </code></pre>"
37532585	JavaScript to Python: simplify encoding of HTML string	javascript|html|python-2.7|encode	2016-05-30 19:33:36.763000 UTC	"<p>I have a JavaScript module that needs to encode an HTML string that includes entities, and that needs to be correctly received in a Python 2.7 module.</p>  <p>The following works for every example I've tried:</p>  <ul> <li><p>On the sending side in JavaScript:</p>  <p><code>btoa(unescape(encodeURIComponent(*html-string*)))</code></p></li> <li><p>On the receiving side in Python 2.7:</p>  <p><code>base64.b64decode(self.request.get(u'*parameter-name*'))</code></p></li> </ul>  <p>But that's a lot of conversions.</p>  <p>I've tried many other approaches. For example, I of course tried it without <code>unescape(encodeURIComponent(...))</code>, and I've tried replacing <code>unescape</code> (which is deprecated) with <code>decodeURI</code> and with <code>decodeURIComponent</code>. None of those attempts worked.</p>  <p>I also tried sending with <code>encodeURIComponent()</code> and receiving with <code>urllib.unquote()</code>, which didn't crash and retained all my content, but inserted some garbage characters.</p>  <p>Any suggestion for a simpler approach than the one I ended up with would be appreciated.</p>  <p><em>NOTE: I don't know whether it's relevant, but the JavaScript module is in an Ionic/AngularJS project and the parameter is being serialized with <code>$httpParamSerializerJQLike</code>. Meanwhile, the Python 2.7 module is in a GAE application and the request is being handled by <code>webapp2</code>.</em></p>"	
37539013	HTML Form no longer calls Python through JavaScript	javascript|jquery|python|html|flask	2016-05-31 07:06:05.677000 UTC	"<p>I was displaying some data from a flask-app via an html table, including a dynamic form in this table:</p>  <pre><code>&lt;Table id=""Datenbank"" width=""800px"" align=""left"" &gt;         &lt;tr&gt;         &lt;th&gt;ID&lt;/th&gt;         &lt;th&gt;Wochentag&lt;/th&gt;         &lt;th&gt;Startzeitpunkt&lt;/th&gt;         &lt;th&gt;Wochentag&lt;/th&gt;         &lt;th&gt;Endzeitpunkt&lt;/th&gt;         &lt;th&gt;Text&lt;/th&gt;         &lt;th&gt;Option&lt;/th&gt;         &lt;/tr&gt;          &lt;form method=""post"" action=""/delete_data_via_table""&gt;         {% for element in datatable %}         &lt;tr&gt;             &lt;td align=""center""&gt; {{ element[0] }} &lt;/td&gt;             &lt;td align=""center""&gt; {{ element[5] }} &lt;/td&gt;             &lt;td align=""center""&gt; {{ element[4] }} &lt;/td&gt;             &lt;td align=""center""&gt; {{ element[7] }} &lt;/td&gt;             &lt;td align=""center""&gt; {{ element[6] }} &lt;/td&gt;             &lt;td align=""left""&gt;   {{ element[1] }} &lt;/td&gt;             &lt;td align=""center""&gt;&lt;button name=""WhichEntryDel"" id=""WhichEntryDel"" value=""{{ element[0] }}"" type=""submit""&gt;Entfernen&lt;/button&gt;&lt;/td&gt;         &lt;/tr&gt;         {% endfor %}         &lt;/form&gt; &lt;/table&gt; </code></pre>  <p>The value of the pressed button is transfered to a flask-app called ""delete_data_via_table"" to delete this row of the database.</p>  <p>I'm now using the jquery.dataTables to display the data:</p>  <pre><code>&lt;script type=""text/javascript"" language=""javascript"" src=""/static/js/jquery-1.12.3.min.js""&gt;&lt;/script&gt; &lt;script type=""text/javascript"" language=""javascript"" src=""/static/js/jquery.dataTables.js""&gt;&lt;/script&gt; &lt;script type=""text/javascript""&gt; $(document).ready(function() { $('#Datenbank').DataTable(); } ); &lt;/script&gt; </code></pre>  <p>and</p>  <pre><code>    &lt;Table id=""Datenbank"" class=""display"" width=""800px"" align=""left""&gt;         &lt;thead&gt;         &lt;tr&gt;         &lt;th&gt;ID&lt;/th&gt;         &lt;th&gt;Wochentag&lt;/th&gt;         &lt;th&gt;Startzeitpunkt&lt;/th&gt;         &lt;th&gt;Wochentag&lt;/th&gt;         &lt;th&gt;Endzeitpunkt&lt;/th&gt;         &lt;th&gt;Text&lt;/th&gt;         &lt;th&gt;Option&lt;/th&gt;         &lt;/tr&gt;         &lt;/thead&gt;         &lt;tbody&gt;         &lt;form method=""post"" action=""/delete_data_via_table""&gt;         {% for element in datatable %}         &lt;tr&gt;             &lt;td align=""center""&gt; {{ element[0] }} &lt;/td&gt;             &lt;td align=""center""&gt; {{ element[5] }} &lt;/td&gt;             &lt;td align=""center""&gt; {{ element[4] }} &lt;/td&gt;             &lt;td align=""center""&gt; {{ element[7] }} &lt;/td&gt;             &lt;td align=""center""&gt; {{ element[6] }} &lt;/td&gt;             &lt;td align=""left""&gt;   {{ element[1] }} &lt;/td&gt;             &lt;td align=""center""&gt;&lt;button name=""WhichEntryDel"" id=""WhichEntryDel"" value=""{{ element[0] }}"" type=""submit""&gt;Entfernen&lt;/button&gt;&lt;/td&gt;         &lt;/tr&gt;         {% endfor %}         &lt;/form&gt;         &lt;/tbody&gt; &lt;/table&gt; </code></pre>  <p><a href=""http://i.stack.imgur.com/4figy.jpg"" rel=""nofollow"">Example view of the table</a></p>  <p>The problem now is nothing happens if you press that button ... I guess that's because the javascript of the table isn't passing through the information.</p>  <p>Do you have any idea to fix that?</p>  <p>Thanks. :)</p>"	"<p>Thanks for the input, my code now looks like this:</p>  <p>Flask-app:</p>  <pre><code>@app.route('/_delete_data_via_table_v2') def delete_data_via_table_v2(): del_ID = request.args.get('a', 0, type=int) tmp_string = ""DELETE FROM ledtext WHERE ID = ""+ str(del_ID) g.db.execute(tmp_string) g.db.commit() flash ('Eintrag ' + str(del_ID) + ' erfolgreich gelöscht.') return jsonify() </code></pre>  <p>And HTML:</p>  <pre><code>&lt;script type=""text/javascript""&gt; $SCRIPT_ROOT = {{ request.script_root|tojson|safe }}; moment.locale('de');  $(document).ready(function() {     var table = $('#Datenbank').DataTable( {         /*""ajax"": ""data/arrays.txt"", */         ""columnDefs"": [ {             ""targets"": -1,             ""data"": null,             ""defaultContent"": ""&lt;button&gt;Entfernen&lt;/button&gt;""         } ]     } );      $('#Datenbank tbody').on( 'click', 'button', function () {         var data = table.row( $(this).parents('tr') ).data();         $.getJSON($SCRIPT_ROOT + '/_delete_data_via_table_v2', { a: data[0] } );         /* location.reload(true); */     } ); } ); &lt;/script&gt; </code></pre>  <p>If you press a button the app is called and the entry is deleted. But the Flash-Information and the table-view changes not before you manually reload the page (pressing F5).</p>  <p>Normally I use this code at the end of an app:</p>  <pre><code>return redirect(url_for('index')) </code></pre>  <p>But it's not working hear. Means: The page isn't rendered again and the flash-information not appears by itself.</p>  <p>Has anyone an idea how to fix it?</p>"
37539013	HTML Form no longer calls Python through JavaScript	javascript|jquery|python|html|flask	2016-05-31 07:06:05.677000 UTC	"<p>I was displaying some data from a flask-app via an html table, including a dynamic form in this table:</p>  <pre><code>&lt;Table id=""Datenbank"" width=""800px"" align=""left"" &gt;         &lt;tr&gt;         &lt;th&gt;ID&lt;/th&gt;         &lt;th&gt;Wochentag&lt;/th&gt;         &lt;th&gt;Startzeitpunkt&lt;/th&gt;         &lt;th&gt;Wochentag&lt;/th&gt;         &lt;th&gt;Endzeitpunkt&lt;/th&gt;         &lt;th&gt;Text&lt;/th&gt;         &lt;th&gt;Option&lt;/th&gt;         &lt;/tr&gt;          &lt;form method=""post"" action=""/delete_data_via_table""&gt;         {% for element in datatable %}         &lt;tr&gt;             &lt;td align=""center""&gt; {{ element[0] }} &lt;/td&gt;             &lt;td align=""center""&gt; {{ element[5] }} &lt;/td&gt;             &lt;td align=""center""&gt; {{ element[4] }} &lt;/td&gt;             &lt;td align=""center""&gt; {{ element[7] }} &lt;/td&gt;             &lt;td align=""center""&gt; {{ element[6] }} &lt;/td&gt;             &lt;td align=""left""&gt;   {{ element[1] }} &lt;/td&gt;             &lt;td align=""center""&gt;&lt;button name=""WhichEntryDel"" id=""WhichEntryDel"" value=""{{ element[0] }}"" type=""submit""&gt;Entfernen&lt;/button&gt;&lt;/td&gt;         &lt;/tr&gt;         {% endfor %}         &lt;/form&gt; &lt;/table&gt; </code></pre>  <p>The value of the pressed button is transfered to a flask-app called ""delete_data_via_table"" to delete this row of the database.</p>  <p>I'm now using the jquery.dataTables to display the data:</p>  <pre><code>&lt;script type=""text/javascript"" language=""javascript"" src=""/static/js/jquery-1.12.3.min.js""&gt;&lt;/script&gt; &lt;script type=""text/javascript"" language=""javascript"" src=""/static/js/jquery.dataTables.js""&gt;&lt;/script&gt; &lt;script type=""text/javascript""&gt; $(document).ready(function() { $('#Datenbank').DataTable(); } ); &lt;/script&gt; </code></pre>  <p>and</p>  <pre><code>    &lt;Table id=""Datenbank"" class=""display"" width=""800px"" align=""left""&gt;         &lt;thead&gt;         &lt;tr&gt;         &lt;th&gt;ID&lt;/th&gt;         &lt;th&gt;Wochentag&lt;/th&gt;         &lt;th&gt;Startzeitpunkt&lt;/th&gt;         &lt;th&gt;Wochentag&lt;/th&gt;         &lt;th&gt;Endzeitpunkt&lt;/th&gt;         &lt;th&gt;Text&lt;/th&gt;         &lt;th&gt;Option&lt;/th&gt;         &lt;/tr&gt;         &lt;/thead&gt;         &lt;tbody&gt;         &lt;form method=""post"" action=""/delete_data_via_table""&gt;         {% for element in datatable %}         &lt;tr&gt;             &lt;td align=""center""&gt; {{ element[0] }} &lt;/td&gt;             &lt;td align=""center""&gt; {{ element[5] }} &lt;/td&gt;             &lt;td align=""center""&gt; {{ element[4] }} &lt;/td&gt;             &lt;td align=""center""&gt; {{ element[7] }} &lt;/td&gt;             &lt;td align=""center""&gt; {{ element[6] }} &lt;/td&gt;             &lt;td align=""left""&gt;   {{ element[1] }} &lt;/td&gt;             &lt;td align=""center""&gt;&lt;button name=""WhichEntryDel"" id=""WhichEntryDel"" value=""{{ element[0] }}"" type=""submit""&gt;Entfernen&lt;/button&gt;&lt;/td&gt;         &lt;/tr&gt;         {% endfor %}         &lt;/form&gt;         &lt;/tbody&gt; &lt;/table&gt; </code></pre>  <p><a href=""http://i.stack.imgur.com/4figy.jpg"" rel=""nofollow"">Example view of the table</a></p>  <p>The problem now is nothing happens if you press that button ... I guess that's because the javascript of the table isn't passing through the information.</p>  <p>Do you have any idea to fix that?</p>  <p>Thanks. :)</p>"	"<p>I now solved it with adding ""<em>location.reload(false)</em>"". There may be a better solution.</p>  <pre><code>        $('#Datenbank tbody').on( 'click', 'button', function () {         var data = table.row( $(this).parents('tr') ).data();         $.getJSON($SCRIPT_ROOT + '/_delete_data_via_table_v2', {             a: data[0]                                              /* Übergibt die ID (als Nummer) */             }, function(data) {                                     /* Erforderlich für Aktualisierung */             location.reload(false) });                              /* Verursacht Aktualisierung (false bewirkt abgeschwächte Form des Neuladens) */             /* return false; */                                     /* Anscheinend überflüssig */             });     } ); </code></pre>"
37600718	How does Python or Javascript manage resizing arrays?	javascript|python|arrays|performance|memory	2016-06-02 19:39:40.383000 UTC	"<p>How do either of these languages manage resizing an array? So, say I create an array with 10 indexes, and then I need to add an element. In java, I would double the size of the array and keep adding. In languages like JS and Python, what mechanisms do they use to resize the array? </p>  <p>Do they also double the size of the array in memory? </p>"	"<p>It is an implementation detail, there is no guarantee that it will be done in any particular way.</p>"
37600718	How does Python or Javascript manage resizing arrays?	javascript|python|arrays|performance|memory	2016-06-02 19:39:40.383000 UTC	"<p>How do either of these languages manage resizing an array? So, say I create an array with 10 indexes, and then I need to add an element. In java, I would double the size of the array and keep adding. In languages like JS and Python, what mechanisms do they use to resize the array? </p>  <p>Do they also double the size of the array in memory? </p>"	"<p>In Python and Javascript, you just don't have to worry about it. In neither of the languages do you even need to declare the size of the List/Array. Feel free to add or remove elements without considering this.</p>  <p>I don't understand the concern with such finite memory usage when you're programming with these high-level languages. If you're writing in Javascript, your code is probably being interpreted and ran on an Intel I5 with 4+GB RAM. You're probably OK.</p>"
37600718	How does Python or Javascript manage resizing arrays?	javascript|python|arrays|performance|memory	2016-06-02 19:39:40.383000 UTC	"<p>How do either of these languages manage resizing an array? So, say I create an array with 10 indexes, and then I need to add an element. In java, I would double the size of the array and keep adding. In languages like JS and Python, what mechanisms do they use to resize the array? </p>  <p>Do they also double the size of the array in memory? </p>"	"<p>The relevant code for CPython is <a href=""https://hg.python.org/cpython/file/tip/Objects/listobject.c#l42"" rel=""nofollow"">here</a>:</p>  <pre><code>/* This over-allocates proportional to the list size, making room  * for additional growth.  The over-allocation is mild, but is  * enough to give linear-time amortized behavior over a long  * sequence of appends() in the presence of a poorly-performing  * system realloc().  * The growth pattern is:  0, 4, 8, 16, 25, 35, 46, 58, 72, 88, ...  */ new_allocated = (newsize &gt;&gt; 3) + (newsize &lt; 9 ? 3 : 6);  /* check for integer overflow */ if (new_allocated &gt; PY_SIZE_MAX - newsize) {     PyErr_NoMemory();     return -1; } else {     new_allocated += newsize; } </code></pre>  <p>So no, it does not double the size. If an append/extend is going to cause the length of the list to be <code>newsize</code>, the allocated memory of the backing array grows to about that plus an eighth.</p>  <p>For <a href=""http://hg.openjdk.java.net/jdk7/jdk7/jdk/file/tip/src/share/classes/java/util/ArrayList.java#l204"" rel=""nofollow"">Java OpenJDK 7 ArrayLists</a>:</p>  <pre><code>/**  * Increases the capacity to ensure that it can hold at least the  * number of elements specified by the minimum capacity argument.  *  * @param minCapacity the desired minimum capacity  */ private void grow(int minCapacity) {     // overflow-conscious code     int oldCapacity = elementData.length;     int newCapacity = oldCapacity + (oldCapacity &gt;&gt; 1);     if (newCapacity - minCapacity &lt; 0)         newCapacity = minCapacity;     if (newCapacity - MAX_ARRAY_SIZE &gt; 0)         newCapacity = hugeCapacity(minCapacity);     // minCapacity is usually close to size, so this is a win:     elementData = Arrays.copyOf(elementData, newCapacity); } </code></pre>  <p>So an extra half of the required capacity.</p>  <p>Please use an <code>ArrayList</code> rather than managing your own resizing array.</p>"
37602829	Python - write to javascript api	python	2016-06-02 21:57:48.333000 UTC	"<p>I have a .js file with the following content:</p>  <pre><code>function get_test1_data() {   return [ ['2016-02-12','32765','87917',-55152,'2016-04-27','10:52'], ['2016-02-19','32765','87917',-55152,'2016-04-27','10:52'], ['2016-02-26','32765','87917',-55152,'2016-04-27','10:52'], ['2016-03-04','32765','87917',-55152,'2016-04-27','10:52'], ['2016-03-11','40431','89100',-48669,'2016-05-02','14:54'], ['2016-03-18','40431','89100',-48669,'2016-05-02','14:56'], ['2016-03-25','40431','89100',-48669,'2016-05-02','15:59'], ['2016-04-01','40431','89100',-48669,'2016-05-02','16:29'], ['2016-04-08','38557','71392',-32835,'2016-06-02','19:08'], ['2016-04-15','38557','71392',-32835,'2016-06-02','19:11'], ['2016-04-22','38557','71392',-32835,'2016-06-02','19:13'], ['2016-04-29','38557','71392',-32835,'2016-06-02','19:15'], ['2016-05-06','38557','71392',-32835,'2016-06-02','19:16'], ['2016-05-13','38557','71392',-32835,'2016-06-02','19:17'], ['2016-05-20','38557','71392',-32835,'2016-06-02','19:18'], ['2016-05-27','38557','71392',-32835,'2016-06-02','19:20'], ['2016-06-03','38557','71392',-32835,'2016-06-02','19:27'], ['2016-06-10','38557','71392',-32835,'2016-06-02','20:45'], ['2016-06-17','38557','71392',-32835,'2016-06-02','20:46'],   ]; } </code></pre>  <p>I have a Python3 script which produce one of the above lines every now and then. </p>  <pre><code>'2016-02-12','32765','87917',-55152,'2016-04-27','10:52' </code></pre>  <p>Usually I add lines to .csv file. For this I use the following code:</p>  <pre><code>fd = open('test.csv','a') fd.write(z + ""\n"") fd.close() </code></pre>  <p>As .csv don't contain functions the code works as expected. I need to start adding the same lines into the .js file. For this reason I modified my script. The new line looks like this:</p>  <pre><code>['2016-02-12','32765','87917',-55152,'2016-04-27','10:52'], </code></pre>  <p>I tried to use the same code</p>  <pre><code>fd = open('test1.js','a') fd.write(zz + "","" + ""\n"") fd.close() </code></pre>  <p>but as expected new line is added at the end of the file:</p>  <pre><code>function get_test1_data() {   return [ ['2016-02-12','32765','87917',-55152,'2016-04-27','10:52'], ['2016-02-19','32765','87917',-55152,'2016-04-27','10:52'], ['2016-02-26','32765','87917',-55152,'2016-04-27','10:52'], ['2016-03-04','32765','87917',-55152,'2016-04-27','10:52'], ['2016-03-11','40431','89100',-48669,'2016-05-02','14:54'], ['2016-03-18','40431','89100',-48669,'2016-05-02','14:56'], ['2016-03-25','40431','89100',-48669,'2016-05-02','15:59'], ['2016-04-01','40431','89100',-48669,'2016-05-02','16:29'], ['2016-04-08','38557','71392',-32835,'2016-06-02','19:08'], ['2016-04-15','38557','71392',-32835,'2016-06-02','19:11'], ['2016-04-22','38557','71392',-32835,'2016-06-02','19:13'], ['2016-04-29','38557','71392',-32835,'2016-06-02','19:15'], ['2016-05-06','38557','71392',-32835,'2016-06-02','19:16'], ['2016-05-13','38557','71392',-32835,'2016-06-02','19:17'], ['2016-05-20','38557','71392',-32835,'2016-06-02','19:18'], ['2016-05-27','38557','71392',-32835,'2016-06-02','19:20'], ['2016-06-03','38557','71392',-32835,'2016-06-02','19:27'], ['2016-06-10','38557','71392',-32835,'2016-06-02','20:45'], ['2016-06-17','38557','71392',-32835,'2016-06-02','20:46'],   ]; }  ['2016-07-08','38557','71392',-32835,'2016-06-02','22:07'], ['2016-07-15','38557','71392',-32835,'2016-06-02','22:18'], </code></pre>  <p>Any suggestions on how to modify my code on how to start adding the line where it needs to be is appreciated.</p>  <p><strong>UPDATE</strong></p>  <p>In order to define my script output as data I modified the code like this:</p>  <pre><code>tup = (d2(test),a,b,c,st,st1) zz = str(tup) zz = ''.join(zz) zz = zz.replace(""("",""["") zz = zz.replace("")"",""]"") zz = zz.replace("" "","""") zz = str(zz) print (zz)  data = zz  # Make a string representing the `row` list with no space between items, # terminate the string with "",\n""      def format_row(row):     s = ','.join(['{!r}'.format(u) for u in row])     return '[{}],\n'.format(s)  def update_js(fname, data):     # Read old function source     with open(fname, 'r') as f:         lines = f.readlines()     body, tail = lines[:-2], lines[-2:]      # Convert data rows to strings and add to body list     for row in data:         body.append(format_row(row))      # Save new function source     with open(fname, 'w') as f:         f.writelines(body + tail)  update_js('test1.js', data) </code></pre>  <p>This is the output of <code>print (zz)</code></p>  <pre><code>['2017-01-27','38557','71392',-32835,'2016-06-03','16:03'] </code></pre>  <p>The problem now is the code canot see it as a single line but as separate symbols. Thereby it append it like this:</p>  <pre><code>function get_test1_data() {   return [ ['2016-02-12','32765','87917',-55152,'2016-04-27','10:52'], ['2016-02-19','32765','87917',-55152,'2016-04-27','10:52'], ['2016-02-26','32765','87917',-55152,'2016-04-27','10:52'], ['2016-03-04','32765','87917',-55152,'2016-04-27','10:52'], ['2016-03-11','40431','89100',-48669,'2016-05-02','14:54'], ['2016-03-18','40431','89100',-48669,'2016-05-02','14:56'], ['2016-03-25','40431','89100',-48669,'2016-05-02','15:59'], ['2016-04-01','40431','89100',-48669,'2016-05-02','16:29'], ['2016-04-08','38557','71392',-32835,'2016-06-02','19:08'], ['2016-04-15','38557','71392',-32835,'2016-06-02','19:11'], ['2016-04-22','38557','71392',-32835,'2016-06-02','19:13'], ['2016-04-29','38557','71392',-32835,'2016-06-02','19:15'], ['2016-05-06','38557','71392',-32835,'2016-06-02','19:16'], ['2016-05-13','38557','71392',-32835,'2016-06-02','19:17'], ['2016-05-20','38557','71392',-32835,'2016-06-02','19:18'], ['2016-05-27','38557','71392',-32835,'2016-06-02','19:20'], ['2016-06-03','38557','71392',-32835,'2016-06-02','19:27'], ['2016-06-10','38557','71392',-32835,'2016-06-02','20:45'], ['2016-06-17','38557','71392',-32835,'2016-06-02','20:46'], ['2016-07-08','38557','71392',-32835,'2016-06-02','22:07'], ['2016-07-15','38557','71392',-32835,'2016-06-02','22:18'], ['2016-07-08','38557','71392',-32835,'2016-06-02','22:07'], ['2016-07-08','38557','71392',-32835,'2016-06-02','22:07'], ['2016-07-08','38557','71392',-32835,'2016-06-02','22:07'], ['['], [""'""], ['2'], ['0'], ['1'], ['7'], ['-'], ['0'], ['1'], ['-'], ['2'], ['0'], [""'""], [','], [""'""], ['3'], ['8'], ['5'], ['5'], ['7'], [""'""], [','], [""'""], ['7'], ['1'], ['3'], ['9'], ['2'], [""'""], [','], ['-'], ['3'], ['2'], ['8'], ['3'], ['5'], [','], [""'""], ['2'], ['0'], ['1'], ['6'], ['-'], ['0'], ['6'], ['-'], ['0'], ['3'], [""'""], [','], [""'""], ['1'], ['5'], [':'], ['4'], ['6'], [""'""], [']'], ['['], [""'""], ['2'], ['0'], ['1'], ['7'], ['-'], ['0'], ['1'], ['-'], ['2'], ['7'], [""'""], [','], [""'""], ['3'], ['8'], ['5'], ['5'], ['7'], [""'""], [','], [""'""], ['7'], ['1'], ['3'], ['9'], ['2'], [""'""], [','], ['-'], ['3'], ['2'], ['8'], ['3'], ['5'], [','], [""'""], ['2'], ['0'], ['1'], ['6'], ['-'], ['0'], ['6'], ['-'], ['0'], ['3'], [""'""], [','], [""'""], ['1'], ['6'], [':'], ['0'], ['3'], [""'""], [']'], ]; } </code></pre>  <p>I try to fix it by using </p>  <pre><code>zz = ''.join(zz) zz = str(zz) </code></pre>  <p>but with no success.</p>"	"<p>Although your implementation does not look like a very good idea for a javascript file, you may want to look at <code>file.seek</code> with the file opened in binary mode to allow seeking from the end of the file with a negative offset. But finding the correct offset in bytes is hard enough.</p>  <p>I'll suggest you read the entire content of the file into python, modify and then rewrite.</p>"
37602829	Python - write to javascript api	python	2016-06-02 21:57:48.333000 UTC	"<p>I have a .js file with the following content:</p>  <pre><code>function get_test1_data() {   return [ ['2016-02-12','32765','87917',-55152,'2016-04-27','10:52'], ['2016-02-19','32765','87917',-55152,'2016-04-27','10:52'], ['2016-02-26','32765','87917',-55152,'2016-04-27','10:52'], ['2016-03-04','32765','87917',-55152,'2016-04-27','10:52'], ['2016-03-11','40431','89100',-48669,'2016-05-02','14:54'], ['2016-03-18','40431','89100',-48669,'2016-05-02','14:56'], ['2016-03-25','40431','89100',-48669,'2016-05-02','15:59'], ['2016-04-01','40431','89100',-48669,'2016-05-02','16:29'], ['2016-04-08','38557','71392',-32835,'2016-06-02','19:08'], ['2016-04-15','38557','71392',-32835,'2016-06-02','19:11'], ['2016-04-22','38557','71392',-32835,'2016-06-02','19:13'], ['2016-04-29','38557','71392',-32835,'2016-06-02','19:15'], ['2016-05-06','38557','71392',-32835,'2016-06-02','19:16'], ['2016-05-13','38557','71392',-32835,'2016-06-02','19:17'], ['2016-05-20','38557','71392',-32835,'2016-06-02','19:18'], ['2016-05-27','38557','71392',-32835,'2016-06-02','19:20'], ['2016-06-03','38557','71392',-32835,'2016-06-02','19:27'], ['2016-06-10','38557','71392',-32835,'2016-06-02','20:45'], ['2016-06-17','38557','71392',-32835,'2016-06-02','20:46'],   ]; } </code></pre>  <p>I have a Python3 script which produce one of the above lines every now and then. </p>  <pre><code>'2016-02-12','32765','87917',-55152,'2016-04-27','10:52' </code></pre>  <p>Usually I add lines to .csv file. For this I use the following code:</p>  <pre><code>fd = open('test.csv','a') fd.write(z + ""\n"") fd.close() </code></pre>  <p>As .csv don't contain functions the code works as expected. I need to start adding the same lines into the .js file. For this reason I modified my script. The new line looks like this:</p>  <pre><code>['2016-02-12','32765','87917',-55152,'2016-04-27','10:52'], </code></pre>  <p>I tried to use the same code</p>  <pre><code>fd = open('test1.js','a') fd.write(zz + "","" + ""\n"") fd.close() </code></pre>  <p>but as expected new line is added at the end of the file:</p>  <pre><code>function get_test1_data() {   return [ ['2016-02-12','32765','87917',-55152,'2016-04-27','10:52'], ['2016-02-19','32765','87917',-55152,'2016-04-27','10:52'], ['2016-02-26','32765','87917',-55152,'2016-04-27','10:52'], ['2016-03-04','32765','87917',-55152,'2016-04-27','10:52'], ['2016-03-11','40431','89100',-48669,'2016-05-02','14:54'], ['2016-03-18','40431','89100',-48669,'2016-05-02','14:56'], ['2016-03-25','40431','89100',-48669,'2016-05-02','15:59'], ['2016-04-01','40431','89100',-48669,'2016-05-02','16:29'], ['2016-04-08','38557','71392',-32835,'2016-06-02','19:08'], ['2016-04-15','38557','71392',-32835,'2016-06-02','19:11'], ['2016-04-22','38557','71392',-32835,'2016-06-02','19:13'], ['2016-04-29','38557','71392',-32835,'2016-06-02','19:15'], ['2016-05-06','38557','71392',-32835,'2016-06-02','19:16'], ['2016-05-13','38557','71392',-32835,'2016-06-02','19:17'], ['2016-05-20','38557','71392',-32835,'2016-06-02','19:18'], ['2016-05-27','38557','71392',-32835,'2016-06-02','19:20'], ['2016-06-03','38557','71392',-32835,'2016-06-02','19:27'], ['2016-06-10','38557','71392',-32835,'2016-06-02','20:45'], ['2016-06-17','38557','71392',-32835,'2016-06-02','20:46'],   ]; }  ['2016-07-08','38557','71392',-32835,'2016-06-02','22:07'], ['2016-07-15','38557','71392',-32835,'2016-06-02','22:18'], </code></pre>  <p>Any suggestions on how to modify my code on how to start adding the line where it needs to be is appreciated.</p>  <p><strong>UPDATE</strong></p>  <p>In order to define my script output as data I modified the code like this:</p>  <pre><code>tup = (d2(test),a,b,c,st,st1) zz = str(tup) zz = ''.join(zz) zz = zz.replace(""("",""["") zz = zz.replace("")"",""]"") zz = zz.replace("" "","""") zz = str(zz) print (zz)  data = zz  # Make a string representing the `row` list with no space between items, # terminate the string with "",\n""      def format_row(row):     s = ','.join(['{!r}'.format(u) for u in row])     return '[{}],\n'.format(s)  def update_js(fname, data):     # Read old function source     with open(fname, 'r') as f:         lines = f.readlines()     body, tail = lines[:-2], lines[-2:]      # Convert data rows to strings and add to body list     for row in data:         body.append(format_row(row))      # Save new function source     with open(fname, 'w') as f:         f.writelines(body + tail)  update_js('test1.js', data) </code></pre>  <p>This is the output of <code>print (zz)</code></p>  <pre><code>['2017-01-27','38557','71392',-32835,'2016-06-03','16:03'] </code></pre>  <p>The problem now is the code canot see it as a single line but as separate symbols. Thereby it append it like this:</p>  <pre><code>function get_test1_data() {   return [ ['2016-02-12','32765','87917',-55152,'2016-04-27','10:52'], ['2016-02-19','32765','87917',-55152,'2016-04-27','10:52'], ['2016-02-26','32765','87917',-55152,'2016-04-27','10:52'], ['2016-03-04','32765','87917',-55152,'2016-04-27','10:52'], ['2016-03-11','40431','89100',-48669,'2016-05-02','14:54'], ['2016-03-18','40431','89100',-48669,'2016-05-02','14:56'], ['2016-03-25','40431','89100',-48669,'2016-05-02','15:59'], ['2016-04-01','40431','89100',-48669,'2016-05-02','16:29'], ['2016-04-08','38557','71392',-32835,'2016-06-02','19:08'], ['2016-04-15','38557','71392',-32835,'2016-06-02','19:11'], ['2016-04-22','38557','71392',-32835,'2016-06-02','19:13'], ['2016-04-29','38557','71392',-32835,'2016-06-02','19:15'], ['2016-05-06','38557','71392',-32835,'2016-06-02','19:16'], ['2016-05-13','38557','71392',-32835,'2016-06-02','19:17'], ['2016-05-20','38557','71392',-32835,'2016-06-02','19:18'], ['2016-05-27','38557','71392',-32835,'2016-06-02','19:20'], ['2016-06-03','38557','71392',-32835,'2016-06-02','19:27'], ['2016-06-10','38557','71392',-32835,'2016-06-02','20:45'], ['2016-06-17','38557','71392',-32835,'2016-06-02','20:46'], ['2016-07-08','38557','71392',-32835,'2016-06-02','22:07'], ['2016-07-15','38557','71392',-32835,'2016-06-02','22:18'], ['2016-07-08','38557','71392',-32835,'2016-06-02','22:07'], ['2016-07-08','38557','71392',-32835,'2016-06-02','22:07'], ['2016-07-08','38557','71392',-32835,'2016-06-02','22:07'], ['['], [""'""], ['2'], ['0'], ['1'], ['7'], ['-'], ['0'], ['1'], ['-'], ['2'], ['0'], [""'""], [','], [""'""], ['3'], ['8'], ['5'], ['5'], ['7'], [""'""], [','], [""'""], ['7'], ['1'], ['3'], ['9'], ['2'], [""'""], [','], ['-'], ['3'], ['2'], ['8'], ['3'], ['5'], [','], [""'""], ['2'], ['0'], ['1'], ['6'], ['-'], ['0'], ['6'], ['-'], ['0'], ['3'], [""'""], [','], [""'""], ['1'], ['5'], [':'], ['4'], ['6'], [""'""], [']'], ['['], [""'""], ['2'], ['0'], ['1'], ['7'], ['-'], ['0'], ['1'], ['-'], ['2'], ['7'], [""'""], [','], [""'""], ['3'], ['8'], ['5'], ['5'], ['7'], [""'""], [','], [""'""], ['7'], ['1'], ['3'], ['9'], ['2'], [""'""], [','], ['-'], ['3'], ['2'], ['8'], ['3'], ['5'], [','], [""'""], ['2'], ['0'], ['1'], ['6'], ['-'], ['0'], ['6'], ['-'], ['0'], ['3'], [""'""], [','], [""'""], ['1'], ['6'], [':'], ['0'], ['3'], [""'""], [']'], ]; } </code></pre>  <p>I try to fix it by using </p>  <pre><code>zz = ''.join(zz) zz = str(zz) </code></pre>  <p>but with no success.</p>"	"<p>As I mentioned in the comments, you probably should be using JSON for this. It's really not good practice to embed large amounts of data into program source. But anyway...</p>  <p>As Moses Koledoye suggests, the way to do this (without using JSON) is to read the lines of your .js file into a list, modify that list, and save it back to the .js file. We need to append the new data before the last two lines of the .js file. A simple way to do that is to </p>  <ol> <li>break the list of lines into two lists, a body and a tail </li> <li>append the new data strings to the body list</li> <li>write the new body plus tail to the file.</li> </ol>  <p>The following code works on Python 2.7 and Python 3.</p>  <pre><code>data = [     ['2016-07-08', '38557', '71392', -32835, '2016-06-02', '22:07'],     ['2016-07-15', '38557', '71392', -32835, '2016-06-02', '22:18'], ]  # Make a string representing the `row` list with no space between items, # terminate the string with "",\n""      def format_row(row):     s = ','.join(['{!r}'.format(u) for u in row])     return '[{}],\n'.format(s)  def update_js(fname, data):     # Read old function source     with open(fname, 'r') as f:         lines = f.readlines()     body, tail = lines[:-2], lines[-2:]      # Convert data rows to strings and add to body list     for row in data:         body.append(format_row(row))      # Save new function source     with open(fname, 'w') as f:         f.writelines(body + tail)  update_js('test1.js', data) </code></pre>  <hr>  <h2>Update</h2>  <p>From your comments and the update to your question it appears that you will only ever be adding a single line at a time to your <code>.js</code> file. So here's a simplified version of my earlier function to do that task. Please take note of how I'm passing the data to it.</p>  <pre><code>def update_js(fname, row):     # Read old function source     with open(fname, 'r') as f:         lines = f.readlines()     body, tail = lines[:-2], lines[-2:]      # Convert data row to string and add to body list     s = ','.join(['{!r}'.format(u) for u in row])     body.append('[{}],\n'.format(s))      # Save new function source     with open(fname, 'w') as f:         f.writelines(body + tail)  d2_test = '2016-07-08' a, b, c = '38557', '71392', -32835 st, st1 = '2016-06-02', '22:07'  row = [d2_test, a, b, c, st, st1] print(row) update_js('test1.js', row) </code></pre>"
37617311	"Zapier: E164 GB/UK Mobile Number Parsing, Can it be done using Python/Javascript?"	javascript|python|parsing|twilio|zapier	2016-06-03 14:41:49.520000 UTC	"<p><em>Hello,</em></p>  <p>Currently trying to parse a UK mobile number from a web form into E164 format using Zapier. This is so in turn I can trigger a text using a Twilio and Zapier integration.</p>  <p>Twilio only takes the <a href=""https://www.twilio.com/docs/api/rest/response#phone-numbers"" rel=""nofollow"">E164</a> format, however most users will enter their number as:</p>  <p>""07000111333"" or ""447000111333""</p>  <p>Zapier currently has a parsing service which converts to E164 but this only works on US numbers. Is it possible to parse using a ""GB"" code, exactly as Google's android phone parsing javascript library does? and if so, is anyone aware how this can be integrated into a Zapier workflow? Using the ""Code"" element for example which lets you run Python or Javascript.</p>  <p><strong>In short, how can I parse UK mobile numbers on Zapier into E164 format?</strong></p>"	"<p>Twilio developer evangelist here.</p>  <p>As you've tagged this Python you could use the <a href=""https://github.com/daviddrysdale/python-phonenumbers"" rel=""nofollow"">Python phonenumbers library</a>. It's a port of Google's <a href=""https://github.com/googlei18n/libphonenumber"" rel=""nofollow"">libphonenumber</a>, which I can only guess is what Google use in Android.</p>  <p>According to the README, it's as easy as the following:</p>  <pre><code>&gt;&gt;&gt; import phonenumbers &gt;&gt;&gt; number = phonenumbers.parse(""07000111333"", ""GB"") &gt;&gt;&gt; print number Country Code: 44 National Number: 7000111333 Leading Zero: False </code></pre>  <p>Let me know if that helps at all.</p>"
37651859	Passing numpy arrays from python to javascript	python|node.js|numpy	2016-06-06 07:33:08.450000 UTC	"<p>I have a written a source program in python that calculates and returns a numpy array of 3 numbers. Now ,i am trying to pass this array to a javascript front end program to display. So far , i have tried using a child process in js invoking the python program, but i am stuck in the array transfer part.  I have also looked at python-shell npm package , but have no idea how to work with it. How do i proceed?  Is it better if i convert the array to a json file and send the json to the js program?</p>"	"<p>Python has a module to encode objects as JSON strings:</p>  <pre><code>import json  In [54]: json.dumps(np.arange(10).tolist()) Out[54]: '[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]' </code></pre>  <p>Arrays in Javascript are similar to Python lists.  <code>numpy</code> arrays add level of complexity that you don't need, especially with only 3 numbers.</p>"
37660035	How to send JSON response from python server to the javascript using ajax call	javascript|python|json|ajax	2016-06-06 14:28:14.803000 UTC	"<pre><code>elif self.path == ""/recQuery"":   r = requests.get('http://example.com') # This returns some json from a request to another server.   print r.json()   self.wfile.write(r.json()) </code></pre>  <p>.</p>  <pre><code>var http = new XMLHttpRequest(); var url = SERVER + ""/recQuery""; var params = JSON.stringify({   query: search_query }); http.open(""POST"", url, true);  http.setRequestHeader(""Content-type"", ""application/x-www-form-urlencoded""); http.send(params); console.log(http.responseText); </code></pre>  <p>How can i send data from python server to javascript using ajax call. The one i am using does not return anything in the console. Can you please tell me what i am doing wrong here. I need send the response of what i get from requests.get method to the ajax call. The json should be returned to the ajax call in response. Problem is with the self.wfile.write method, When i use this i dont get anything on javascript side. </p>"	"<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true""> <div class=""snippet-code""> <pre class=""snippet-code-js lang-js prettyprint-override""><code>var http = new XMLHttpRequest(); var url = SERVER + ""/recQuery""; var params = JSON.stringify({   query: search_query }); http.onreadystatechange = function() {   if (http.readyState == 4 &amp;&amp; http.status == 200) {     console.log(http.responseText);   } }; http.open(""POST"", url, true); http.setRequestHeader(""Content-type"", ""application/x-www-form-urlencoded""); http.send(params);</code></pre> </div> </div> </p>  <p>I was not fetching the response onreadystatechange. So this works for me. Thanks !</p>"
37675941	Remove unicode character from python when sending response back to javascript	javascript|python|json|unicode	2016-06-07 09:48:27.870000 UTC	"<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true""> <div class=""snippet-code""> <pre class=""snippet-code-js lang-js prettyprint-override""><code>elif self.path == ""/recQuery"":   content_length = int(self.headers.getheader('content-length')) cont_Length = content_length print ""Query Received"" body = self.rfile.read(content_length) keywords = body.replace(""\\"", """") result = json.loads(keywords) query = result['query']  r = requests.get('http://example.com') // This returns the JSON print r.json() self.wfile.write(r.json()) // Send response back to the javascript</code></pre> </div> </div> </p>  <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true""> <div class=""snippet-code""> <pre class=""snippet-code-js lang-js prettyprint-override""><code>{   u 'debug': [u 'time to fit model 0.02 s', u 'time to generate suggestions 0.06 s', u 'time to search documents 0.70 s', u 'time to misc operations 0.02 s'], u 'articles': [{     u 'is-saved': False,       u 'title': u 'Reinforcement and learning',       u 'abstract': u 'Evidence has been accumulating to support the process of reinforcement as a potential mechanism in speciation. In many species, mate choice decisionsare influenced by cultural factors, including learned mating preferences (sexual imprinting) or learned mate attraction signals (e.g., bird song). Ithas been postulated that learning can have a strong impact on the likelihood of speciation and perhaps on the process of reinforcement, but no modelshave explicitly considered learning in a reinforcement context. We review the evidence that suggests that learning may be involved in speciation and reinforcement, and present a model of reinforcement via learned preferences. We show that not only can reinforcement occur when preferences are learned by imprinting, but that such preferences can maintain species differenceseasily in comparison with both autosomal and sex-linked genetically inherited preferences. We highlight the need for more explicit study of the connection between the behavioral process of learning and the evolutionary process of reinforcement in natural systems.',       u 'date': u '2009-01-01T00:00:00',       u 'publication-forum': u 'EVOLUTIONARY ECOLOGY',       u 'publication-forum-type': u 'article',       u 'authors': u 'M R Servedio, S A Saether, G P Saetre',       u 'keywords': u 'imprinting, learning, preferences, model, reinforcement, speciation',       u 'id': u '572749dd12a0854514c1f764'   }, {     u 'is-saved': False,       u 'title': u 'Relational reinforcement learning',       u 'abstract': u 'Then, relational reinforcement learning is presented as a combination of reinforcement learning with relational learning. Its advantages - such as the possibility of using structural representations, making abstraction from specific goals pursued and exploiting the results of previous learning phases - are discussed.',       u 'date': u '2001-01-01T00:00:00',       u 'publication-forum': u 'MULTI-AGENT SYSTEMS AND APPLICATIONS',       u 'publication-forum-type': u 'article',       u 'authors': u 'K Driessens',       u 'keywords': u 'reinforcement, learning, reinforcement learning',       u 'id': u '572749dd12a0854514c1f765'   }, {     u 'is-saved': False,       u 'title': u 'Meta-learning in Reinforcement Learning',       u 'abstract': u 'Meta-parameters in reinforcement learning should be tuned to the environmental dynamics and the animal performance. Here, we propose a biologically plausible meta-reinforcement learning algorithm for tuning these meta-parameters in a dynamic, adaptive manner. We tested our algorithm in both a simulation of a Markov decision task and in a non-linear control task. Our results show that the algorithm robustly finds appropriate meta-parameter values, and controls the meta-parameter time course, in both static and dynamic environments. We suggest that the phasic and tonic components of dopamine neuron firing can encode the signal required for meta-learning of reinforcement learning. (C) 2002 Elsevier Science Ltd. All rights reserved.',       u 'date': u '2003-01-01T00:00:00',       u 'publication-forum': u 'NEURAL NETWORKS',       u 'publication-forum-type': u 'article',       u 'authors': u 'N Schweighofer, K Doya',       u 'keywords': u 'reinforcement learning, dopamine, dynamic environment, meta-learning, meta-parameters, neuromodulation, td error, reinforcement, learning',       u 'id': u '572749dd12a0854514c1f766'   }, {     u 'is-saved': False,       u 'title': u 'Evolutionary adaptive-critic methods for reinforcement learning',       u 'abstract': u 'In this paper, a novel hybrid learning method is proposed for reinforcement learning problems with continuous state and action spaces. The reinforcement learning problems are modeled as Markov decision processes (MDPs) and the hybrid learning method combines evolutionary algorithms with gradient-based Adaptive Heuristic Critic (AHC) algorithms to approximate the optimal policy of MDPs. The suggested method takes the advantages of evolutionary learning and gradient-based reinforcement learning to solve reinforcement learning problems. Simulation results on the learning control of an acrobot illustrate the efficiency of the presented method.',       u 'date': u '2002-01-01T00:00:00',       u 'publication-forum': u ""CEC'02: PROCEEDINGS OF THE 2002 CONGRESS ON EVOLUTIONARY COMPUTATION, VOLS1 AND 2"",       u 'publication-forum-type': u 'article',       u 'authors': u 'X Xu, H G He, D W Hu',       u 'keywords': u 'markov decision process, reinforcement, learning, model, reinforcement learning, robotics',       u 'id': u '572749dd12a0854514c1f767'   }, {     u 'is-saved': False,       u 'title': u 'Stable Fitted Reinforcement Learning',       u 'url': u 'http://books.nips.cc/papers/files/nips08/1052.pdf',       u 'abstract': u 'We describe the reinforcement learning problem, motivate algorithms which seek an approximation to the Q function, and present new convergence results for two such algorithms.',       u 'date': u '1995-01-01T00:00:00',       u 'publication-forum': u 'NIPS 1995',       u 'authors': u 'G. J. GORDON',       u 'keywords': u 'reinforcement, learning, reinforcement learning',       u 'id': u '572749dd12a0854514c1f768'   }, {     u 'is-saved': False,       u 'title': u 'Feudal Reinforcement Learning',       u 'url': u 'http://books.nips.cc/papers/files/nips05/0271.pdf',       u 'abstract': u ""One way to speed up reinforcement learning is to enable learning to happen simultaneously at multiple resolutions in space and time. This paper shows how to create a Q-learning managerial hierarchy in which high level managers learn how to set tasks to their submanagers who, in turn, learn how to satisfy them. Sub-managers need not initially understand their managers' commands. They simply learn to maximise their reinforcement in the context of the current command. We illustrate the system using a simple maze task.. As the system learns how to get around, satisfying commands at the multiple levels, it explores more efficiently than standard, flat, Q-learning and builds a more comprehensive map."",       u 'date': u '1992-01-01T00:00:00',       u 'publication-forum': u 'NIPS 1992',       u 'authors': u 'Peter Dayan, Geoffrey E. Hinton',       u 'keywords': u 'reinforcement, learning, reinforcement learning',       u 'id': u '572749dd12a0854514c1f769'   }, {     u 'is-saved': False,       u 'title': u 'Reinforcement learning in the multi-robot domain',       u 'abstract': u 'This paper describes a formulation of reinforcement learning that enables learning in noisy, dynamic environments such as in the complex concurrent multi-robot learning domain. The methodology involves minimizing the learning space through the use of behaviors and conditions, and dealing with the credit assignment problem through shaped reinforcement in the form of heterogeneous reinforcement functions and progress estimators. We experimentally validate the approach on a group of four mobile robots learning a foraging task.',       u 'date': u '1997-01-01T00:00:00',       u 'publication-forum': u 'AUTONOMOUS ROBOTS',       u 'publication-forum-type': u 'article',       u 'authors': u 'M J Mataric',       u 'keywords': u 'robotics, robot learning, group behavior, multi-agent systems, reinforcement learning, dynamic environment, reinforcement, learning',       u 'id': u '572749dd12a0854514c1f76a'   }, {     u 'is-saved': False,       u 'title': u 'A reinforcement learning approach to online clustering',       u 'abstract': u 'A general technique is proposed for embedding online clustering algorithmsbased on competitive learning in a reinforcement learning framework. The basic idea is that the clustering system can be viewed as a reinforcement learning system that learns through reinforcements to follow the clustering strategy we wish to implement. In this sense, the reinforcement guided competitive learning (RC;CL) algorithm is proposed that constitutes a reinforcement-based adaptation of learning vector quantization (LVQ) with enhanced clustering capabilities. In addition, we suggest extensions of RGCL and LVQ that are characterized by the property of sustained exploration and significantly improve the performance of those algorithms, as indicated by experimental tests on well-known data sets.',       u 'date': u '1999-01-01T00:00:00',       u 'publication-forum': u 'NEURAL COMPUTATION',       u 'publication-forum-type': u 'article',       u 'authors': u 'A Likas',       u 'keywords': u 'reinforcement, learning, reinforcement learning',       u 'id': u '572749dd12a0854514c1f76b'   }, {     u 'is-saved': False,       u 'title': u 'Kernel-Based Reinforcement Learning',       u 'abstract': u 'We consider the problem of approximating the cost-to-go functions in reinforcement learning. By mapping the state implicitly into a feature space, weperform a simple algorithm in the feature space, which corresponds to a complex algorithm in the original state space. Two kernel-based reinforcementlearning algorithms, the e-insensitive kernel based reinforcement learning(epsilon-KRL) and the least squares kernel based reinforcement learning (LS-KRL) are proposed. An example shows that the proposed methods can deal effectively with the reinforcement learning problem without having to exploremany states.',       u 'date': u '2006-01-01T00:00:00',       u 'publication-forum': u 'INTELLIGENT COMPUTING, PART I',       u 'publication-forum-type': u 'article',       u 'authors': u 'G H Hu, Y Q Qiu, L M Xiang',       u 'keywords': u 'reinforcement, learning, reinforcement learning',       u 'id': u '572749dd12a0854514c1f76c'   }, {     u 'is-saved': False,       u 'title': u 'Reinforcement Learning for Adaptive Routing',       u 'url': u 'http://arxiv.org/abs/cs/0703138',       u 'abstract': u 'Reinforcement learning means learning a policy--a mapping of observations into actions--based on feedback from the environment. The learning can be viewed as browsing a set of policies while evaluating them by trial through interaction with the environment. We present an application of gradient ascent algorithm for reinforcement learning to a complex domain of packet routing in network communication and compare the performance of this algorithm to other routing methods on a benchmark problem.',       u 'date': u '2007-01-01T00:00:00',       u 'publication-forum': u 'arXiv.org',       u 'authors': u 'Leonid Peshkin, Virginia Savova',       u 'keywords': u 'reinforcement, learning, reinforcement learning',       u 'id': u '572749dd12a0854514c1f76d'   }], u 'keywords_local': {     u 'dynamic programming': {         u 'distance': 0.6078647488472677,           u 'angle': 150.8840432613797       },       u 'on-line learning': {         u 'distance': 0.7752212048381117,           u 'angle': 51.8728440344057       },       u 'reinforcement learning': {         u 'distance': 1.0,           u 'angle': 132.93204012494624       },       u 'reinforcement': {         u 'distance': 0.8544341892190607,           u 'angle': 94.75966624638419       },       u 'neural dynamic programming': {         u 'distance': 0.8898672614396893,           u 'angle': 103.76832781320546       },       u 'genetic algorithms': {         u 'distance': 0.5448835956783193,           u 'angle': 0.0       },       u 'learning': {         u 'distance': 0.8544341892190607,           u 'angle': 180.0       },       u 'model': {         u 'distance': 0.6424412547642948,           u 'angle': 114.45637264648838       },       u 'navigation': {         u 'distance': 0.6125205579210247,           u 'angle': 88.55814464422271       },       u 'fuzzy logic': {         u 'distance': 0.6204073568578674,           u 'angle': 180.0       }   }, u 'keywords_semi_local': {     u 'latent learning': {         u 'distance': 0.0,           u 'angle': 132.93204012494624       },       u 'neural networks': {         u 'distance': 1.0,           u 'angle': 114.45637264648838       },       u 'meta-learning': {         u 'distance': 0.5606272601392779,           u 'angle': 121.07077066747541       },       u 'neuromodulation': {         u 'distance': 0.5606272601392779,           u 'angle': 121.07077066747541       },       u 'imprinting': {         u 'distance': 0.3549922259116784,           u 'angle': 51.8728440344057       },       u 'rough sets': {         u 'distance': 0.7556870841637823,           u 'angle': 0.0       },       u 'speciation': {         u 'distance': 0.3549922259116784,           u 'angle': 51.8728440344057       },       u 'robot learning': {         u 'distance': 0.5732466205043193,           u 'angle': 75.01844366338882       },       u 'multi-agent learning': {         u 'distance': 0.3539033107593776,           u 'angle': 165.77500580957724       },       u 'supply chain management': {         u 'distance': 0.7412680693648454,           u 'angle': 180.0       },       u 'td error': {         u 'distance': 0.5606272601392779,           u 'angle': 121.07077066747541       },       u 'robocup': {         u 'distance': 0.8025792169619675,           u 'angle': 88.55814464422271       },       u 'kernel-based learning': {         u 'distance': 0.7404347021238603,           u 'angle': 41.29183304013004       },       u 'swarm': {         u 'distance': 0.7556870841637823,           u 'angle': 0.0       },       u 'risk-sensitive control': {         u 'distance': 0.8340971241377915,           u 'angle': 94.75966624638419       },       u 'adaptive control': {         u 'distance': 0.34596782799450027,           u 'angle': 125.34609947124422       },       u 'group behavior': {         u 'distance': 0.5732466205043193,           u 'angle': 75.01844366338882       },       u 'meta-parameters': {         u 'distance': 0.5606272601392779,           u 'angle': 121.07077066747541       },       u ""bellman's equation"": {         u 'distance': 0.9584860393532658,           u 'angle': 71.16343972789532       },       u 'dynamic environment': {         u 'distance': 0.7014728291381438,           u 'angle': 103.76832781320546       },       u 'neural control': {         u 'distance': 0.8025792169619675,           u 'angle': 88.55814464422271       },       u 'transfer learning': {         u 'distance': 0.6876390048950136,           u 'angle': 150.8840432613797       },       u 'multi-agent systems': {         u 'distance': 0.5732466205043193,           u 'angle': 75.01844366338882       },       u 'monte carlo method': {         u 'distance': 0.7556870841637823,           u 'angle': 0.0       },       u 'learning mobile robots': {         u 'distance': 0.8025792169619675,           u 'angle': 88.55814464422271       },       u 'ethology': {         u 'distance': 0.7556870841637823,           u 'angle': 0.0       },       u 'parallel agents': {         u 'distance': 0.3539033107593776,           u 'angle': 165.7750058095772       },       u 'multi-task learning': {         u 'distance': 0.6876390048950136,           u 'angle': 150.8840432613797       },       u 'autonomous learning robots': {         u 'distance': 0.8025792169619675,           u 'angle': 88.55814464422271       },       u 'optimal control': {         u 'distance': 0.5327106780845866,           u 'angle': 37.59122818518838       }   }, u 'inputs': [     [u 'learning', 1.0, 0.8544341892190607, 1.1491961201808072, -1],     [u 'reinforcement learning', 0.978719279361022, 1.0, 1.1256696437503226, -1],     [u 'reinforcement', 1.0, 0.8544341892190607, 1.1491961201808072, -1]   ] }</code></pre> </div> </div> </p>  <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true""> <div class=""snippet-code""> <pre class=""snippet-code-js lang-js prettyprint-override""><code>function notifyServerForQuery() {  if(search_query != """")  {   var http = new XMLHttpRequest();   var url = SERVER + ""/recQuery"";   var params = JSON.stringify({query: search_query});   http.onreadystatechange = function() {         if (http.readyState == 4 &amp;&amp; http.status == 200) {      console.log(http.responseText);         }     };   http.open(""POST"", url, true);   http.setRequestHeader(""Content-type"", ""application/x-www-form-urlencoded"");   http.send(params);  } }</code></pre> </div> </div> </p>  <p>The problem I am facing is that when I send a response back to the JavaScript, the JSON has Unicode characters in it which are also sent back. So when I try to parse the JSON on the JavaScript side it throws an error. </p>  <p>The main thing I want to achieve is to remove the Unicode characters as seen in the JSON either with Python server side or JavaScript. Anything that does the trick is welcome.</p>"	"<p>You need to encode your output. </p>  <p>If I were you I'll use python3, since python2 encoding is a headache. Anyways I made a super encoding function to help you:</p>  <pre><code>def encode_dict(dic, encoding='utf-8'):     new_dict={}      for key, value in dic.items():          new_key=key.encode(encoding)          if isinstance(value, list):             new_dict[new_key]=[]             for item in value:                 if isinstance(item, unicode):                     new_dict[new_key].append(item.encode(encoding))                  elif isinstance(item, dict):                      new_dict[new_key].append(decode_dict(item))                  else:                     new_dict[new_key].append(item)          elif isinstance(value, unicode):             new_dict[new_key]=value.encode(encoding)          elif isinstance(value, dict):             new_dict[new_key]=decode_dict(value)      return new_dict </code></pre>  <p>So you do: <code>self.wfile.write(encode_dict(r.json()))</code></p>"
37689345	Can I call a JavaScript function on an iFrame or similar widget from Python?	javascript|python-3.x|d3.js|multilingual|jupyter-notebook	2016-06-07 21:05:26.177000 UTC	"<p>I am trying to mix Python code with D3 vizualizations. Right now I have a bunch of D3 vizualizations and JavaScript functions. I have a couple different ways of embedding the D3, but what I want is to call a function that affects the vizualization AFTER I create it.</p>  <p>For example:</p>  <pre><code>createD3Stuff() for i in [0,1,2,3]:     executeFunction(i) </code></pre>  <p>Where createD3Stuff() generates the vizualization, and executeFunction does something on that vizualization, like creates an element with id=i.</p>  <p>Is this possible? How can I do it?</p>  <p>Background information: I am using Jupyter Notebooks, but if there is some other way to get this to work I can switch. I know how to do all the d3 and javascript stuff, it is just getting the python and javascript to interact that is giving me trouble.</p>"	"<p>Of course you can.</p>  <p>Just try this:</p>  <pre><code>from IPython.display import HTML HTML(""&lt;script&gt;alert('hello world')&lt;/script&gt;"") </code></pre>"
37719751	"Python, Calling a program to open a file and run a javascript, PC vs MAC"	javascript|python|macos|adobe	2016-06-09 07:42:24.753000 UTC	"<p>I'm new to programming but am pretty keen on learning python and I'm starting to get the hang of it, I've recently come across an issue that i cant seem to fix. i am trying to locate an adobe illustrator file, open it in illustrator then run an illustrator JavaScript on the file. so far on a PC i have the following which works fine</p>  <pre><code>import os import subprocess import glob  illustrator = 'C:\\Program Files (x86)\Adobe\Adobe Illustrator CC\Support Files\Contents\Windows\Illustrator.exe' myjavascript = 'C:\\Program Files (x86)\\Adobe\\Adobe Illustrator CC\\Scripting\\Sample Scripts\\JavaScript\\myjavascript.jsx'  for a in glob.glob(""%s"" %illustrator_file_location):     print (a)     subprocess.check_call([illustrator, a])     print (""file open"")     subprocess.check_call([illustrator, myjavascript])     print (""script Complete"") </code></pre>  <p>this script does exactly what i want so long as illustrator is running before i run the script, if illustrator isn't running it doesn't tell python the file is open and the script will stall at:</p>  <pre><code>subprocess.check_call([illustrator, a]) </code></pre>  <p>but this isn't really a problem</p>  <p>The problem is when i come to run this script on a MAC (it needs to be run on a mac as illustrator runs much better) whenever illustrator is called in python a new instance of illustrator opens even if it is already running</p>  <p>the MAC script is as follows</p>  <pre><code>import os import subprocess import glob  illustrator = '/Applications/Adobe Illustrator CC/Adobe Illustrator.app/Contents/MacOS/Adobe Illustrator' myjavascript = '/Applications/Adobe Illustrator CC/Scripting/Sample Scripts/Javascript/myjavascript.jsx'  for a in glob.glob(""%s"" %illustrator_file_location):     print (a)     subprocess.check_call([illustrator, a])     print (""file open"")     subprocess.check_call([illustrator, myjavascript])     print (""script Complete"") </code></pre>  <p>i don't know if the problem is how i am launching illustrator from the application bundle on the mac, it opens ok, and will open the file but when it is called to run the JavaScript another instance of illustrator opens and runs the script rather than it running in the instance already open</p>  <p>also on the MAC illustrator will not tell python the file is open so again the script stalls on</p>  <pre><code>subprocess.check_call([illustrator, a]) </code></pre>  <p>so far i have got around this by using</p>  <pre><code>subprocess.Popen([illustrator, a]) time.sleep(30) </code></pre>  <p>(its a slow MAC)</p>  <p>Any help will be greatly appreciated</p>"	
37730203	Scraping hidden content from a javascript webpage with python	python|web-scraping	2016-06-09 15:26:42.580000 UTC	"<p>I'm trying to scrape the content from the following website:</p>  <p><a href=""https://mobile.admiral.at/en/event/event/all#/event/15a822ab-84a1-e511-90a2-000c297013a7"" rel=""nofollow"">https://mobile.admiral.at/en/event/event/all#/event/15a822ab-84a1-e511-90a2-000c297013a7</a></p>  <p>I have previously scraped the content successfully using dryscrape and the following code:</p>  <pre><code>import dryscrape import webkit_server from lxml import html  session = dryscrape.Session() session.set_timeout(20) session.set_attribute('auto_load_images', False) session.visit('https://mobile.admiral.at/en/event/event/all#/event/15a822ab-84a1-e511-90a2-000c297013a7') response = session.body() tree = html.fromstring(response)  print(tree.xpath('(//td[@class=""team-name""]/text())[1]')) </code></pre>  <p>The above example would print the home team (which in this case would be 'France')</p>  <p>It seems that the structure of the source has been changed, so I'm unable to scrape the contents properly.</p>  <p>What confuses me is that I'm able to see the tags using the Firefox Inspector tool, however it's not visible in the response when I pull the source.</p>  <p>I assume they must have hidden the content somehow to make it impossible (?) to scrape the data.</p>  <p>Could someone please point me in the right direction how to scrape the content properly.</p>"	"<p>The content that you need is loaded using jQuery (Ajax). I don't know if dryscrape has been updated lately, but the last time I used it didn't support ajax content loaded from jQuery...</p>  <p>Anyway.. just taking a look to the network inspector of chrome you will realize that the main content is loaded using an API. You can call to that API directly and you will get an awesome JSON with all the data of the page:</p>  <pre><code>import requests data = requests.get('https://mobile.admiral.at/;apiVer=json;api=main;jsonType=object;apiRw=1/en/api/event/get-event?id=15a822ab-84a1-e511-90a2-000c297013a7').json() </code></pre>"
37741035	how to call python method from odoo 9 javascript	javascript|python|odoo-9	2016-06-10 06:10:23.930000 UTC	"<p>I have a piece of code to call the python method in javascript , but the code did not work , and an error will be show .i.e.</p>  <pre><code> error: Some modules could not be started   Failed modules: [""group_js.costume""]   Debug:  Object {group_js.costume: Object} </code></pre>  <p>and my .py file is</p>  <pre><code>class group_js(osv.osv):   _name = ""group_js""   _description = ""Group JS""   _columns={       'js' : fields.text('Javascript',required = True , store=True),      }  @api.multi  def get_record(self):      return [(i.js) for i in self] </code></pre>  <p>my .js file is</p>  <pre><code>odoo.define('group_js.costume', function (instance) {      new instance.web.Model(""group_js"").call(""get_record"",[list_of_record]).then(function(result){      console.log(""hiiii"");    }); }); </code></pre>  <p>so i have no idea how to fix that , so please help me for fix this error .</p>  <p>Thanks</p>"	"<p>To call a method from the odoo python model you have Model().call() in javascript. </p>  <p>For example think of following model in py file.</p>  <pre><code>class group_js(models.Model):    _name = ""model.example""    _description = ""Example model""     def get_record(self):        return '' </code></pre>  <p>And from the javascript file you can call it as:</p>  <pre><code>new Model(""model.example"").call(""get_record"",[args]).then(function(result){      console.log(result);//show in console Hello }); </code></pre>  <p>Here the further details of call method:</p>  <pre><code>/**  * Call a method (over RPC) on the bound OpenERP model.  *  * @param {String} method name of the method to call  * @param {Array} [args] positional arguments  * @param {Object} [kwargs] keyword arguments  * @param {Object} [options] additional options for the rpc() method  * @returns {jQuery.Deferred&lt;&gt;} call result  */ </code></pre>"
37761484	How to get a float from python to JavaScript without cgi	javascript|php|python|ajax|raspberry-pi2	2016-06-11 08:11:55.590000 UTC	"<p>I am running an apache server from a Raspberry Pi and have a python script that returns sensor input by printing it. This properly prints it to the console. Currently I have a php script that gets this output and shuts off a light if the sensor is reading is high, before printing it again. This also works when run from the console. The last part is javascript that is supposed to get the output from the php. It does that using ajax, which runs the ""success"" function, but gets ""0"" from the php script. </p>  <p>My php script:</p>  <pre><code>&lt;?php  exec (""python temp.py"", $temp); if((float)$temp[0]&gt;28) { exec(""gpio read 0"",$state); if($state[0]==""1"") { include('gpio.php'); echo(""Overheated: "".$temp[0]); } } else { echo($temp[0]); } ?&gt; </code></pre>  <p>My js:</p>  <pre><code>$.ajax(     {         type: ""GET"",         url: ""temp.php"",         dataType: ""text"",         success: function(msg)         {             alert(""asd""+typeof msg);         document.getElementById('text').innerHTML = msg;             return msg;         },     error: function(jqXHR, textStatus, errorThrown){                 alert(jqXHR.responseText);             }  }); </code></pre>  <p>Any suggestions are greatly appreciated. Thank you.</p>"	"<p>Right. It's probably user permission issues, because you get the output running script under your user from terminal. And browser, which is running it under server's user, returns an empty string.</p>  <p>Check <code>www-data</code> (or whatever) permissions when running script from your server. Set error reporting and run:</p>  <pre><code>ini_set('display_errors', true); error_reporting(E_ALL);  echo exec('whoami'); </code></pre>  <p>If it prints out user who is not sudoer, set correct permissions to allow your <code>.py</code> script execution by that user.</p>"
37766107	Submiting Javascript Form and Scrape with Python	javascript|python|web-scraping|urllib	2016-06-11 16:34:48.650000 UTC	"<p>I have the following HTML/Javascript code in a website. It basically represents a website with two fields: a) name=""N"": Field were you mark the ""V"" letter; b) name=""ID"" were you input a number with max 8 characters.</p>  <pre><code>&lt;tr&gt;     &lt;td&gt;         &lt;form name=""form"" method=""post"" action=""javascript:BuscaR(document.form.N.value, document.form.ID.value)""&gt; &lt;table class=""aux""&gt;     &lt;tr&gt;         &lt;td&gt;             &lt;select name=""N"" class=""form""&gt;             &lt;option value=""V""&gt;V&lt;/option&gt;             &lt;/select&gt;         &lt;/td&gt;         &lt;td&gt;             &lt;input name=""ID"" type=""text"" class=""form""  maxlength=""8"" size=""8"" value=""ID"" onfocus=""javascript:clear_textbox3();"" onblur=""javascript:Valid(document.form.ID);""/&gt;         &lt;/td&gt;     &lt;/tr&gt;     &lt;tr&gt;         &lt;td&gt;             &lt;input type=""submit"" value=""Buscar"" class=""boton""/&gt;         &lt;/td&gt;     &lt;/tr&gt;     &lt;/table&gt;     &lt;/form&gt; &lt;/td&gt; </code></pre>  <p>I have done webscrapers with BeautifulSoup and urllib before. My idea is to produce a script which inputs and submits these ID numbers (from a huge database), and retrieves the data which the website responds (it returns a HTML).</p>  <p><strong>However, I can't find where does this form ""leads"" to. I mean, how do I input? How do I ""press"" submit in Python?</strong></p>  <p>On most <a href=""https://stackoverflow.com/questions/16425031/submiting-form-with-python"">posts</a>, we now what is the php URL were submitting the Form leads. So they can change the ID in <code>php.?N=V,ID=x</code> and ""brute force"" different numbers. Yet I cannot find this url in the website. What do I do?</p>  <p>The original website is <a href=""http://www.cne.gob.ve/web/index.php"" rel=""nofollow noreferrer"">http://www.cne.gob.ve/web/index.php</a> on the right side it says ""Consulte sus Datos. Proceso de validación y exclusión de registros presentados por el partido MUD."" and the box presents a search buttom.</p>  <p>Thank you all!</p>"	"<p>It is a simple get request, passing two params:</p>  <p><a href=""https://i.stack.imgur.com/q4HIf.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/q4HIf.png"" alt=""enter image description here""></a></p>  <p>So with requests:</p>  <pre><code>url = ""http://www.cne.gob.ve/web/registro_electoral/firmantes.php""  params = {""nacionalidad"":""V"", ""cedula"":""12345678""}  page = requests.get(url, params=params) print(page.content) </code></pre>  <p>If you pass a correct id you will get a table of data returned, using 12345678 you see a table returned and <em>Esta Cédula de Identidad no se encuentra en la base de datos de los registros presentados por el partido MUD</em> as obviously it is not a valid id. </p>"
37820589	"MD5 Bruteforce, Issue translating from Python to Javascript"	javascript|python|recursion|hash|md5	2016-06-14 19:31:34.187000 UTC	"<p>I prototyped this function yesterday in python to bruteforce an md5 hash and it works beautifully.  In this case it will print <code>Match: aa</code> and <code>4124bc0a9335c27f086f24ba207a4912</code>. Since this is the hash for the string ""aa"".</p>  <pre class=""lang-python prettyprint-override""><code>import hashlib  def crack(chars, st, hsh):     if chars == 0:         if hashlib.md5(st).hexdigest() == hsh:             print ""Match: "" + st             print hashlib.md5(st).hexdigest()     else:         for i in range(32,127):             new = st + str(unichr(i))             crack(chars - 1, new, hsh)  crack(2, """", ""4124bc0a9335c27f086f24ba207a4912"") </code></pre>  <p>Now I'm trying to implement it in javascript. I am already using an md5 library and it is working fine. Here's the code I wrote, the recursion is not working as expected. I will show the code and the console output to illustrate.</p>  <pre class=""lang-html prettyprint-override""><code>&lt;!DOCTYPE html&gt; &lt;html lang=""en""&gt; &lt;body&gt;     &lt;script src=""js/md5.min.js""&gt;&lt;/script&gt;     &lt;script&gt;      function crack(chars, st, hsh){         console.log(chars);         console.log(st);         if (chars == 0){             if (md5(st) == hsh){                 console.log(st);             }         }         else {             for  (i = 32; i &lt;= 126; i++){                 newst = st + String.fromCharCode(i);                 crack(chars - 1, newst, hsh);             }         }     }      crack(2, """", ""4124bc0a9335c27f086f24ba207a4912"");     &lt;/script&gt; &lt;/body&gt; &lt;/html&gt; </code></pre>  <p>Now the console output:</p>  <pre class=""lang-none prettyprint-override""><code>2 (space ascii 32) 1 (space ascii 32)  0 (space ascii 32)    0 ! 0 "" 0 # 0 $ 0 % 0 &amp; 0 etc. 0 ~ (ascii 126) </code></pre>  <p>What kind of sorcery is required to fix this?</p>"	"<p>Your loop iterator <code>i</code> is a global variable. Make it local with <code>var</code> or <code>let</code>:</p>  <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true""> <div class=""snippet-code""> <pre class=""snippet-code-js lang-js prettyprint-override""><code> function crack(chars, st, hsh) {    if (chars == 0) {      if (md5(st) == hsh) {        console.log(st);      }    } else {      for (var i = 32; i &lt;= 126; i++) {   // &lt;--- Declare i with var or let        var newst = st + String.fromCharCode(i);        crack(chars - 1, newst, hsh);      }    }  }   crack(2, """", ""4124bc0a9335c27f086f24ba207a4912"");</code></pre> <pre class=""snippet-code-html lang-html prettyprint-override""><code>&lt;script src=""https://cdnjs.cloudflare.com/ajax/libs/blueimp-md5/2.3.0/js/md5.min.js""&gt;&lt;/script&gt;</code></pre> </div> </div> </p>  <p>Incrementing a global iterator variable <code>i</code> in a recursive function call increases its value for the caller, too.</p>"
37829344	Can you have required keyword arguments in Javascript or Python?	javascript|python|ruby|keyword-argument	2016-06-15 07:55:32.057000 UTC	"<p>Can you have required keyword arguments in javascript or python? Is this a common feature of programming languages, or is it new and rare? They would be analogous to this implementation of keyword arguments in Ruby in Ruby 2.1+</p>  <pre><code>def obvious_total(subtotal:, tax:, discount:)   subtotal + tax - discount end  obvious_total(subtotal: 100, tax: 10, discount: 5) # =&gt; 105 </code></pre>  <p>(The above example comes directly from <a href=""https://robots.thoughtbot.com/ruby-2-keyword-arguments"" rel=""noreferrer"">https://robots.thoughtbot.com/ruby-2-keyword-arguments</a>)</p>  <p>I'd like to know because I was really interested in the perspective of the author of the above page. He basically suggests that required keyword arguments would help coders understand each other's code later on down the line, while only sacrificing succintness. Personally, I think that that is a decent trade off, and I wonder if it is commonly practiced or not. </p>  <p>It is quite a common occurrence, I think, to find poorly documented code, and to wonder which argument does what. That's why I always try to put good and succinct instructions at my methods. I could be crazy and this is a completely unnecessary feature, after all, I'm just a newbie coder who scripts stuff when he gets lazy.</p>"	"<p><a href=""http://python.org/dev/peps/pep-3102"" rel=""nofollow noreferrer"">PEP-3102</a> introduced <em>&quot;keyword-only arguments&quot;</em>, so in Python 3.x you could do:</p> <pre class=""lang-py prettyprint-override""><code>def obvious_total(*, subtotal, tax, discount):     &quot;&quot;&quot;Calculate the total and force keyword arguments.&quot;&quot;&quot;     return subtotal + tax - discount </code></pre> <p>In use:</p> <pre class=""lang-py prettyprint-override""><code>&gt;&gt;&gt; obvious_total(1, 2, 3) Traceback (most recent call last):   File &quot;&lt;stdin&gt;&quot;, line 1, in &lt;module&gt; TypeError: obvious_total() takes 0 positional arguments but 3 were given &gt;&gt;&gt; obvious_total(subtotal=1, tax=2, discount=3) 0 </code></pre> <hr /> <p>In JavaScript there is no way to have keyword arguments at all. The convention for this would be to define a single positional argument into which the user passes an object literal:</p> <pre class=""lang-js prettyprint-override""><code>function obviousTotal(input) {     return input.subtotal + input.tax - input.discount } </code></pre> <p>and then pass an object literal as <code>input</code>. In use:</p> <pre class=""lang-js prettyprint-override""><code>&gt; obviousTotal({ subtotal: 1, tax: 2, discount: 3 }) 0 </code></pre> <p>ES6 lets you simplify this a bit with <em>destructuring</em>:</p> <pre class=""lang-js prettyprint-override""><code>function obviousTotal({ discount, subtotal, tax }) {     return subtotal + tax - discount; } </code></pre> <p>but there is still no native support for required keyword arguments.</p>"
37840185	How do I read this stringified javascript variable into Python?	python|json|parsing|yaml|abstract-syntax-tree	2016-06-15 15:49:39.933000 UTC	"<p>I'm trying to read _pageData from <a href=""https://www.simpliowebstudio.com/wp-content/uploads/2014/07/aWfyh1"" rel=""nofollow"">https://www.simpliowebstudio.com/wp-content/uploads/2014/07/aWfyh1</a> into Python 2.7.11 so that I can process it, using this code:</p>  <pre><code>#!/usr/bin/env python # -*- coding: utf-8 -*- """""" Testing _pageData processing. """"""  import urllib2 import re import ast import json import yaml  BASE_URL = 'https://www.simpliowebstudio.com/wp-content/uploads/2014/07/aWfyh1'  def main():     """""" Do the business. """"""     response = urllib2.urlopen(BASE_URL, None)     results = re.findall('var _pageData = \\""(.*?)\\"";&lt;/script&gt;', response.read())     first_result = results[0]     # These all fail     data = ast.literal_eval(first_result)     # data = yaml.load(first_result)     # data = json.loads(first_result)  if __name__ == '__main__':     main() </code></pre>  <p>but get the following error:</p>  <pre><code>Traceback (most recent call last):   File ""./temp.py"", line 24, in &lt;module&gt;     main()   File ""./temp.py"", line 19, in main     data = ast.literal_eval(first_result)   File ""/usr/local/Cellar/python/2.7.11/Frameworks/Python.framework/Versions/2.7/lib/python2.7/ast.py"", line 49, in literal_eval     node_or_string = parse(node_or_string, mode='eval')   File ""/usr/local/Cellar/python/2.7.11/Frameworks/Python.framework/Versions/2.7/lib/python2.7/ast.py"", line 37, in parse     return compile(source, filename, mode, PyCF_ONLY_AST)   File ""&lt;unknown&gt;"", line 1     [[1,true,true,true,true,true,true,true,true,,\""at\"",\""\"",\""\"",1450364255674,\""\"",\""en_US\"",false,[]\n,\""https://www.google.com/maps/d/viewer?mid\\u003dzBghbRiSwHlg.k2ATNtn6BCk0\"",\""https://www.google.com/maps/d/embed?mid\\u003dzBghbRiSwHlg.k2ATNtn6BCk0\"",\""https://www.google.com/maps/d/edit?mid\\u003dzBghbRiSwHlg.k2ATNtn6BCk0\"",\""https://www.google.com/maps/d/thumbnail?mid\\u003dzBghbRiSwHlg.k2ATNtn6BCk0\"",,,true,\""https://www.google.com/maps/d/print?mid\\u003dzBghbRiSwHlg.k2ATNtn6BCk0\"",\""https://www.google.com/maps/d/pdf?mid\\u003dzBghbRiSwHlg.k2ATNtn6BCk0\"",\""https://www.google.com/maps/d/viewer?mid\\u003dzBghbRiSwHlg.k2ATNtn6BCk0\"",false,false,\""/maps/d\"",\""maps/sharing\"",\""//www.google.com/intl/en_US/help/terms_maps.html\"",true,\""https://docs.google.com/picker\"",[]\n,false,true,[[[\""//www.gstatic.com/mapspro/images/google-my-maps-logo-regular-001.png\"",143,25]\n,[\""//www.gstatic.com/mapspro/images/google-my-maps-logo-regular-2x-001.png\"",286,50]\n]\n,[[\""//www.gstatic.com/mapspro/images/google-my-maps-logo-small-001.png\"",113,20]\n,[\""//www.gstatic.com/mapspro/images/google-my-maps-logo-small-2x-001.png\"",226,40]\n]\n]\n,1,\""https://www.gstatic.com/mapspro/_/js/k\\u003dmapspro.gmeviewer.en_US.8b9lQX3ifcs.O/m\\u003dgmeviewer_base/rt\\u003dj/d\\u003d0/rs\\u003dABjfnFWonctWGGtD63MaO3UZxCxF6UPKJQ\"",true,true,false,true,\""US\"",false,true,true,5,false]\n,[\""mf.map\"",\""zBghbRiSwHlg.k2ATNtn6BCk0\"",\""Hollywood, FL\"",\""\"",[-80.16005,26.01043,-80.16005,26.01043]\n,[-80.16005,26.01043,-80.16005,26.01043]\n,[[,\""zBghbRiSwHlg.kq4rrF9BNRIg\"",\""Untitled layer\"",\""\"",[[[\""https://mt.googleapis.com/vt/icon/name\\u003dicons/onion/22-blue-dot.png\\u0026scale\\u003d1.0\""]\n,[]\n,1,1,[[,[26.01043,-80.16005]\n]\n,\""MDZBMzJCQjRBOTAwMDAwMQ~CjISKmdlby1tYXBzcHJvLm1hcHNob3AtbGF5ZXItNDUyOWUwMTc0YzhkNmI2ZBgAKAAwABIZACBawIJBU4Fe8v7vNSoAg0dtnhhVotEBLg\"",\""vdb:\"",\""zBghbRiSwHlg.kq4rrF9BNRIg\"",[26.01043,-80.16005]\n,[0,-32]\n,\""06A32BB4A9000001\""]\n,[[\""Hollywood, FL\""]\n]\n,[]\n]\n]\n,,1.0,true,true,,,,[[\""zBghbRiSwHlg.kq4rrF9BNRIg\"",1,,,,\""https://mapsengine.google.com/map/kml?mid\\u003dzBghbRiSwHlg.k2ATNtn6BCk0\\u0026lid\\u003dzBghbRiSwHlg.kq4rrF9BNRIg\"",,,,,0,2,true,[[[\""06A32BB4A9000001\"",[[[26.01043,-80.16005]\n]\n]\n,[]\n,[]\n,0,[[\""name\"",[\""Hollywood, FL\""]\n,1]\n,,[]\n,[]\n]\n,,0]\n]\n,[[[\""https://mt.googleapis.com/vt/icon/name\\u003dicons/onion/22-blue-dot.png\\u0026filter\\u003dff\\u0026scale\\u003d1.0\"",[16,32]\n,1.0]\n,[[\""0000FF\"",0.45098039215686275]\n,5000]\n,[[\""0000FF\"",0.45098039215686275]\n,[\""000000\"",0.25098039215686274]\n,3000]\n]\n]\n]\n]\n]\n,[]\n,,,,,1]\n]\n,[2]\n,,,\""mapspro\"",\""zBghbRiSwHlg.k2ATNtn6BCk0\"",,true,false,false,\""\"",2,false,\""https://mapsengine.google.com/map/kml?mid\\u003dzBghbRiSwHlg.k2ATNtn6BCk0\"",3807]\n]\n                                                 ^ SyntaxError: invalid syntax </code></pre>  <p>var _pageData is in this format:</p>  <pre><code>""[[1,true,true,true,true,true,true,true,true,,\""at\"",\""\"",\""\"",1450364255674,\""\"",\""en_US\"",false,[]\n,\""https://www.google.com/maps/d/viewer?mid\\u003dzBghbRiSwHlg.k2ATNtn6BCk0\"",\""https://www.google.com/maps/d/embed?mid\\u003dzBghbRiSwHlg.k2ATNtn6BCk0\"",\""https://www.google.com/maps/d/edit?mid\\u003dzBghbRiSwHlg.k2ATNtn6BCk0\"",\""https://www.google.com/maps/d/thumbnail?mid\\u003dzBghbRiSwHlg.k2ATNtn6BCk0\"",,,true,\""https://www.google.com/maps/d/print?mid\\u003dzBghbRiSwHlg.k2ATNtn6BCk0\"",\""https://www.google.com/maps/d/pdf?mid\\u003dzBghbRiSwHlg.k2ATNtn6BCk0\"",\""https://www.google.com/maps/d/viewer?mid\\u003dzBghbRiSwHlg.k2ATNtn6BCk0\"",false,false,\""/maps/d\"",\""maps/sharing\"",\""//www.google.com/intl/en_US/help/terms_maps.html\"",true,\""https://docs.google.com/picker\"",[]\n,false,true,[[[\""//www.gstatic.com/mapspro/images/google-my-maps-logo-regular-001.png\"",143,25]\n,[\""//www.gstatic.com/mapspro/images/google-my-maps-logo-regular-2x-001.png\"",286,50]\n]\n,[[\""//www.gstatic.com/mapspro/images/google-my-maps-logo-small-001.png\"",113,20]\n,[\""//www.gstatic.com/mapspro/images/google-my-maps-logo-small-2x-001.png\"",226,40]\n]\n]\n,1,\""https://www.gstatic.com/mapspro/_/js/k\\u003dmapspro.gmeviewer.en_US.8b9lQX3ifcs.O/m\\u003dgmeviewer_base/rt\\u003dj/d\\u003d0/rs\\u003dABjfnFWonctWGGtD63MaO3UZxCxF6UPKJQ\"",true,true,false,true,\""US\"",false,true,true,5,false]\n,[\""mf.map\"",\""zBghbRiSwHlg.k2ATNtn6BCk0\"",\""Hollywood, FL\"",\""\"",[-80.16005,26.01043,-80.16005,26.01043]\n,[-80.16005,26.01043,-80.16005,26.01043]\n,[[,\""zBghbRiSwHlg.kq4rrF9BNRIg\"",\""Untitled layer\"",\""\"",[[[\""https://mt.googleapis.com/vt/icon/name\\u003dicons/onion/22-blue-dot.png\\u0026scale\\u003d1.0\""]\n,[]\n,1,1,[[,[26.01043,-80.16005]\n]\n,\""MDZBMzJCQjRBOTAwMDAwMQ~CjISKmdlby1tYXBzcHJvLm1hcHNob3AtbGF5ZXItNDUyOWUwMTc0YzhkNmI2ZBgAKAAwABIZACBawIJBU4Fe8v7vNSoAg0dtnhhVotEBLg\"",\""vdb:\"",\""zBghbRiSwHlg.kq4rrF9BNRIg\"",[26.01043,-80.16005]\n,[0,-32]\n,\""06A32BB4A9000001\""]\n,[[\""Hollywood, FL\""]\n]\n,[]\n]\n]\n,,1.0,true,true,,,,[[\""zBghbRiSwHlg.kq4rrF9BNRIg\"",1,,,,\""https://mapsengine.google.com/map/kml?mid\\u003dzBghbRiSwHlg.k2ATNtn6BCk0\\u0026lid\\u003dzBghbRiSwHlg.kq4rrF9BNRIg\"",,,,,0,2,true,[[[\""06A32BB4A9000001\"",[[[26.01043,-80.16005]\n]\n]\n,[]\n,[]\n,0,[[\""name\"",[\""Hollywood, FL\""]\n,1]\n,,[]\n,[]\n]\n,,0]\n]\n,[[[\""https://mt.googleapis.com/vt/icon/name\\u003dicons/onion/22-blue-dot.png\\u0026filter\\u003dff\\u0026scale\\u003d1.0\"",[16,32]\n,1.0]\n,[[\""0000FF\"",0.45098039215686275]\n,5000]\n,[[\""0000FF\"",0.45098039215686275]\n,[\""000000\"",0.25098039215686274]\n,3000]\n]\n]\n]\n]\n]\n,[]\n,,,,,1]\n]\n,[2]\n,,,\""mapspro\"",\""zBghbRiSwHlg.k2ATNtn6BCk0\"",,true,false,false,\""\"",2,false,\""https://mapsengine.google.com/map/kml?mid\\u003dzBghbRiSwHlg.k2ATNtn6BCk0\"",3807]\n]\n"" </code></pre>  <p>I've tried replacing the \"" and \n and decoding the \uXXXX before using, without success. I've also tried replacing ,, with ,"""", and ,'', without success.</p>  <p>Thank you.</p>"	"<p>It seems like there are three kinds of syntactic errors in your string:</p>  <ul> <li><code>,</code> followed by <code>,</code></li> <li><code>[</code> followed by <code>,</code></li> <li><code>,</code> followed by <code>]</code></li> </ul>  <p>Assuming that those are supposed to be <code>null</code> elements (or <code>''</code>?), you can just replace those in the original string -- exactly like you did for the <code>,,</code> case, but you missed the others. Also, you have to do the <code>,,</code> replacement twice, otherwise you will miss cases such as <code>,,,,</code>. Then, you can load the JSON string with <code>json.loads</code>.</p>  <pre><code>&gt;&gt;&gt; s = ""your messed up json string"" &gt;&gt;&gt; s = re.sub(r"",\s*,"",  "", null,"", s) &gt;&gt;&gt; s = re.sub(r"",\s*,"",  "", null,"", s) &gt;&gt;&gt; s = re.sub(r""\[\s*,"", ""[ null,"", s) &gt;&gt;&gt; s = re.sub(r"",\s*\]"", "", null]"", s) &gt;&gt;&gt; json.loads(s) </code></pre>"
37840185	How do I read this stringified javascript variable into Python?	python|json|parsing|yaml|abstract-syntax-tree	2016-06-15 15:49:39.933000 UTC	"<p>I'm trying to read _pageData from <a href=""https://www.simpliowebstudio.com/wp-content/uploads/2014/07/aWfyh1"" rel=""nofollow"">https://www.simpliowebstudio.com/wp-content/uploads/2014/07/aWfyh1</a> into Python 2.7.11 so that I can process it, using this code:</p>  <pre><code>#!/usr/bin/env python # -*- coding: utf-8 -*- """""" Testing _pageData processing. """"""  import urllib2 import re import ast import json import yaml  BASE_URL = 'https://www.simpliowebstudio.com/wp-content/uploads/2014/07/aWfyh1'  def main():     """""" Do the business. """"""     response = urllib2.urlopen(BASE_URL, None)     results = re.findall('var _pageData = \\""(.*?)\\"";&lt;/script&gt;', response.read())     first_result = results[0]     # These all fail     data = ast.literal_eval(first_result)     # data = yaml.load(first_result)     # data = json.loads(first_result)  if __name__ == '__main__':     main() </code></pre>  <p>but get the following error:</p>  <pre><code>Traceback (most recent call last):   File ""./temp.py"", line 24, in &lt;module&gt;     main()   File ""./temp.py"", line 19, in main     data = ast.literal_eval(first_result)   File ""/usr/local/Cellar/python/2.7.11/Frameworks/Python.framework/Versions/2.7/lib/python2.7/ast.py"", line 49, in literal_eval     node_or_string = parse(node_or_string, mode='eval')   File ""/usr/local/Cellar/python/2.7.11/Frameworks/Python.framework/Versions/2.7/lib/python2.7/ast.py"", line 37, in parse     return compile(source, filename, mode, PyCF_ONLY_AST)   File ""&lt;unknown&gt;"", line 1     [[1,true,true,true,true,true,true,true,true,,\""at\"",\""\"",\""\"",1450364255674,\""\"",\""en_US\"",false,[]\n,\""https://www.google.com/maps/d/viewer?mid\\u003dzBghbRiSwHlg.k2ATNtn6BCk0\"",\""https://www.google.com/maps/d/embed?mid\\u003dzBghbRiSwHlg.k2ATNtn6BCk0\"",\""https://www.google.com/maps/d/edit?mid\\u003dzBghbRiSwHlg.k2ATNtn6BCk0\"",\""https://www.google.com/maps/d/thumbnail?mid\\u003dzBghbRiSwHlg.k2ATNtn6BCk0\"",,,true,\""https://www.google.com/maps/d/print?mid\\u003dzBghbRiSwHlg.k2ATNtn6BCk0\"",\""https://www.google.com/maps/d/pdf?mid\\u003dzBghbRiSwHlg.k2ATNtn6BCk0\"",\""https://www.google.com/maps/d/viewer?mid\\u003dzBghbRiSwHlg.k2ATNtn6BCk0\"",false,false,\""/maps/d\"",\""maps/sharing\"",\""//www.google.com/intl/en_US/help/terms_maps.html\"",true,\""https://docs.google.com/picker\"",[]\n,false,true,[[[\""//www.gstatic.com/mapspro/images/google-my-maps-logo-regular-001.png\"",143,25]\n,[\""//www.gstatic.com/mapspro/images/google-my-maps-logo-regular-2x-001.png\"",286,50]\n]\n,[[\""//www.gstatic.com/mapspro/images/google-my-maps-logo-small-001.png\"",113,20]\n,[\""//www.gstatic.com/mapspro/images/google-my-maps-logo-small-2x-001.png\"",226,40]\n]\n]\n,1,\""https://www.gstatic.com/mapspro/_/js/k\\u003dmapspro.gmeviewer.en_US.8b9lQX3ifcs.O/m\\u003dgmeviewer_base/rt\\u003dj/d\\u003d0/rs\\u003dABjfnFWonctWGGtD63MaO3UZxCxF6UPKJQ\"",true,true,false,true,\""US\"",false,true,true,5,false]\n,[\""mf.map\"",\""zBghbRiSwHlg.k2ATNtn6BCk0\"",\""Hollywood, FL\"",\""\"",[-80.16005,26.01043,-80.16005,26.01043]\n,[-80.16005,26.01043,-80.16005,26.01043]\n,[[,\""zBghbRiSwHlg.kq4rrF9BNRIg\"",\""Untitled layer\"",\""\"",[[[\""https://mt.googleapis.com/vt/icon/name\\u003dicons/onion/22-blue-dot.png\\u0026scale\\u003d1.0\""]\n,[]\n,1,1,[[,[26.01043,-80.16005]\n]\n,\""MDZBMzJCQjRBOTAwMDAwMQ~CjISKmdlby1tYXBzcHJvLm1hcHNob3AtbGF5ZXItNDUyOWUwMTc0YzhkNmI2ZBgAKAAwABIZACBawIJBU4Fe8v7vNSoAg0dtnhhVotEBLg\"",\""vdb:\"",\""zBghbRiSwHlg.kq4rrF9BNRIg\"",[26.01043,-80.16005]\n,[0,-32]\n,\""06A32BB4A9000001\""]\n,[[\""Hollywood, FL\""]\n]\n,[]\n]\n]\n,,1.0,true,true,,,,[[\""zBghbRiSwHlg.kq4rrF9BNRIg\"",1,,,,\""https://mapsengine.google.com/map/kml?mid\\u003dzBghbRiSwHlg.k2ATNtn6BCk0\\u0026lid\\u003dzBghbRiSwHlg.kq4rrF9BNRIg\"",,,,,0,2,true,[[[\""06A32BB4A9000001\"",[[[26.01043,-80.16005]\n]\n]\n,[]\n,[]\n,0,[[\""name\"",[\""Hollywood, FL\""]\n,1]\n,,[]\n,[]\n]\n,,0]\n]\n,[[[\""https://mt.googleapis.com/vt/icon/name\\u003dicons/onion/22-blue-dot.png\\u0026filter\\u003dff\\u0026scale\\u003d1.0\"",[16,32]\n,1.0]\n,[[\""0000FF\"",0.45098039215686275]\n,5000]\n,[[\""0000FF\"",0.45098039215686275]\n,[\""000000\"",0.25098039215686274]\n,3000]\n]\n]\n]\n]\n]\n,[]\n,,,,,1]\n]\n,[2]\n,,,\""mapspro\"",\""zBghbRiSwHlg.k2ATNtn6BCk0\"",,true,false,false,\""\"",2,false,\""https://mapsengine.google.com/map/kml?mid\\u003dzBghbRiSwHlg.k2ATNtn6BCk0\"",3807]\n]\n                                                 ^ SyntaxError: invalid syntax </code></pre>  <p>var _pageData is in this format:</p>  <pre><code>""[[1,true,true,true,true,true,true,true,true,,\""at\"",\""\"",\""\"",1450364255674,\""\"",\""en_US\"",false,[]\n,\""https://www.google.com/maps/d/viewer?mid\\u003dzBghbRiSwHlg.k2ATNtn6BCk0\"",\""https://www.google.com/maps/d/embed?mid\\u003dzBghbRiSwHlg.k2ATNtn6BCk0\"",\""https://www.google.com/maps/d/edit?mid\\u003dzBghbRiSwHlg.k2ATNtn6BCk0\"",\""https://www.google.com/maps/d/thumbnail?mid\\u003dzBghbRiSwHlg.k2ATNtn6BCk0\"",,,true,\""https://www.google.com/maps/d/print?mid\\u003dzBghbRiSwHlg.k2ATNtn6BCk0\"",\""https://www.google.com/maps/d/pdf?mid\\u003dzBghbRiSwHlg.k2ATNtn6BCk0\"",\""https://www.google.com/maps/d/viewer?mid\\u003dzBghbRiSwHlg.k2ATNtn6BCk0\"",false,false,\""/maps/d\"",\""maps/sharing\"",\""//www.google.com/intl/en_US/help/terms_maps.html\"",true,\""https://docs.google.com/picker\"",[]\n,false,true,[[[\""//www.gstatic.com/mapspro/images/google-my-maps-logo-regular-001.png\"",143,25]\n,[\""//www.gstatic.com/mapspro/images/google-my-maps-logo-regular-2x-001.png\"",286,50]\n]\n,[[\""//www.gstatic.com/mapspro/images/google-my-maps-logo-small-001.png\"",113,20]\n,[\""//www.gstatic.com/mapspro/images/google-my-maps-logo-small-2x-001.png\"",226,40]\n]\n]\n,1,\""https://www.gstatic.com/mapspro/_/js/k\\u003dmapspro.gmeviewer.en_US.8b9lQX3ifcs.O/m\\u003dgmeviewer_base/rt\\u003dj/d\\u003d0/rs\\u003dABjfnFWonctWGGtD63MaO3UZxCxF6UPKJQ\"",true,true,false,true,\""US\"",false,true,true,5,false]\n,[\""mf.map\"",\""zBghbRiSwHlg.k2ATNtn6BCk0\"",\""Hollywood, FL\"",\""\"",[-80.16005,26.01043,-80.16005,26.01043]\n,[-80.16005,26.01043,-80.16005,26.01043]\n,[[,\""zBghbRiSwHlg.kq4rrF9BNRIg\"",\""Untitled layer\"",\""\"",[[[\""https://mt.googleapis.com/vt/icon/name\\u003dicons/onion/22-blue-dot.png\\u0026scale\\u003d1.0\""]\n,[]\n,1,1,[[,[26.01043,-80.16005]\n]\n,\""MDZBMzJCQjRBOTAwMDAwMQ~CjISKmdlby1tYXBzcHJvLm1hcHNob3AtbGF5ZXItNDUyOWUwMTc0YzhkNmI2ZBgAKAAwABIZACBawIJBU4Fe8v7vNSoAg0dtnhhVotEBLg\"",\""vdb:\"",\""zBghbRiSwHlg.kq4rrF9BNRIg\"",[26.01043,-80.16005]\n,[0,-32]\n,\""06A32BB4A9000001\""]\n,[[\""Hollywood, FL\""]\n]\n,[]\n]\n]\n,,1.0,true,true,,,,[[\""zBghbRiSwHlg.kq4rrF9BNRIg\"",1,,,,\""https://mapsengine.google.com/map/kml?mid\\u003dzBghbRiSwHlg.k2ATNtn6BCk0\\u0026lid\\u003dzBghbRiSwHlg.kq4rrF9BNRIg\"",,,,,0,2,true,[[[\""06A32BB4A9000001\"",[[[26.01043,-80.16005]\n]\n]\n,[]\n,[]\n,0,[[\""name\"",[\""Hollywood, FL\""]\n,1]\n,,[]\n,[]\n]\n,,0]\n]\n,[[[\""https://mt.googleapis.com/vt/icon/name\\u003dicons/onion/22-blue-dot.png\\u0026filter\\u003dff\\u0026scale\\u003d1.0\"",[16,32]\n,1.0]\n,[[\""0000FF\"",0.45098039215686275]\n,5000]\n,[[\""0000FF\"",0.45098039215686275]\n,[\""000000\"",0.25098039215686274]\n,3000]\n]\n]\n]\n]\n]\n,[]\n,,,,,1]\n]\n,[2]\n,,,\""mapspro\"",\""zBghbRiSwHlg.k2ATNtn6BCk0\"",,true,false,false,\""\"",2,false,\""https://mapsengine.google.com/map/kml?mid\\u003dzBghbRiSwHlg.k2ATNtn6BCk0\"",3807]\n]\n"" </code></pre>  <p>I've tried replacing the \"" and \n and decoding the \uXXXX before using, without success. I've also tried replacing ,, with ,"""", and ,'', without success.</p>  <p>Thank you.</p>"	"<p>I started off using <code>ast.literal.eval(...)</code> because I was under the (mistaken?) impression that javascript arrays and Python lists were mutually compatible, so all I had to do was destringify _pageData.</p>  <p>However, I hadn't noticed that Python doesn't like <code>,,</code> <code>true</code>, <code>false</code> or <code>[,</code>. Fixing them does the trick (thank you @Two-Bit Alchemist and @tobias_k)</p>  <p>So, the following appears to work:</p>  <pre><code>#!/usr/bin/env python # -*- coding: utf-8 -*- """""" Testing _pageData processing. """"""  import urllib2 import re import ast import json import yaml  BASE_URL = 'https://www.simpliowebstudio.com/wp-content/uploads/2014/07/aWfyh1'  def main():     """""" Do the business. """"""     response = urllib2.urlopen(BASE_URL, None)     results = re.findall('var _pageData = \\""(.*?)\\"";&lt;/script&gt;', response.read())     first_result = results[0]     first_result = first_result.replace(',,,,,,', ',None,None,None,None,None,')     first_result = first_result.replace(',,,,,', ',None,None,None,None,')     first_result = first_result.replace(',,,,', ',None,None,None,')     first_result = first_result.replace(',,,', ',None,None,')     first_result = first_result.replace(',,', ',None,')     first_result = first_result.replace('[,', '[None,')                         first_result = first_result.replace('\\""', '\'')     first_result = first_result.replace('\\n', '')         first_result = first_result.replace('true', 'True')     first_result = first_result.replace('false', 'False')       data = ast.literal_eval(first_result)     for entry in  data:         print entry  if __name__ == '__main__':     main() </code></pre>"
37943137	Execute python function from javascript function	javascript|python|html	2016-06-21 11:25:34.830000 UTC	"<p>I have a table where each cell is a <code>textfield</code>. On clicking of a button, I want to collect the values from this table, row by row, and write it in a csv file.</p>  <p>For example, consider the below table. <a href=""https://i.stack.imgur.com/Z4lAE.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/Z4lAE.png"" alt=""enter image description here""></a> I want to create a file like <code>text.txt</code>, with the following content:</p>  <pre><code>abc,def,ghi jkl,mno,pqr uvw,xyz,123 </code></pre>  <p>I know we can't use JavaScript in HTML to create and write into a file due to a lot of permission issues, so I want to extract the values and pass an array to a python script that will create the file. </p>  <p>I had a look at <a href=""https://stackoverflow.com/questions/13175510/call-python-function-from-javascript-code"">this question</a>, but there, the onclick function is purely calling the python script. I need to first extract the values using javascript, and then call the python script. How do I proceed?</p>"	"<p>You need to do two things.</p>  <p>1) Write a javascript function to serialize your data and send it via POST to your script.</p>  <p>2) Write your python script and host it on your web server, ensuring that it takes in the data required to update your table.</p>  <p>How you implement step one will depend on the HTML in your page. (have you actually started to implement it yet?)</p>  <p><a href=""https://api.jquery.com/serialize/"" rel=""nofollow"">https://api.jquery.com/serialize/</a></p>"
37948066	Django: Unable to call python function from Javascript	javascript|python|angularjs|django	2016-06-21 15:04:44.157000 UTC	"<p>I have a Django project with the following structure. My project name is <em>SimpleWeb</em>. I have an application named <em>query</em>. Now I have an HTML page which has a dropdown menu and a submit button.</p>  <p>Here is what I am trying to do. When the user selects an item from the dropdown and hits submit, I want to call a python function in my <code>view.py</code> file, do something with that item and return a list back. </p>  <p>The problem is that I think that my function named <code>runQuery</code> is not being called for some reason. Below is my code</p>  <p><strong>SimpleWeb\urls.py</strong></p>  <pre><code>from django.conf.urls import include, url from django.contrib import admin  urlpatterns = [     url(r'^admin/', admin.site.urls),     url(r'^runQuery/$', include('query.urls')),     url(r'^$', include('query.urls')), ] </code></pre>  <p><strong>query\urls.py</strong></p>  <pre><code>from django.conf.urls import include, url from . import views  urlpatterns = [     url(r'^$', views.index, name='index'),     url(r'^runQuery', views.runQuery, name='runQuery'), ] </code></pre>  <p><strong>view.py</strong></p>  <pre><code>from django.shortcuts import render from django.http import HttpResponse  def index(request):     # this function powers the main page: 'http://127.0.0.1:8000/'     List = ['item1','item2','item3']     return render(request, 'query/home.html', {'list': List})   def runQuery(request):     # this function needs to be called using $http from javascript      # I want to get what user submitted in $http and do something with it here     # then return a list, below is a sample list      fruitList = ['apple', 'banana', 'orange']     return HttpResponse(fruitList) </code></pre>  <p><strong>script.js</strong></p>  <pre><code>angular.module('myApp', []); angular.module('myApp').controller('myCtrl', ['$scope', '$http', function ($scope, $http) {  $scope.submitButtonclicked = function(){     var userInput = $scope.data.dropdown /* item that user chooses from dropdown*/      $http({         method: 'GET',         url: '/runQuery',         params: {yourChoice: userInput}     }).then(function successCallback(response){         console.log(response); /* When I debug in chrome browser, I see that it logs an HTML page as the response instead of fruit list */     }, function errorCallback(response) {         console.log(""Oops, error occurred"");     });  }; }]); </code></pre>  <p>Again, I posted most of the code that I thought was relevant and might help you find a solution. My coworker told me that the way I have defined <code>runQuery</code> in my <code>urls.py</code> file could be messed up and that's why <code>runQuery()</code> function is not getting called properly. I don't know how to fix this. Thanks you :)</p>"	"<p>You coworker is correct, you are being redundant in you <code>urls.py</code> definitions.</p>  <p>For now, only use your main app's <code>SimpleWeb/urls.py</code> and build you URLs from there. Once you got that, you can learn how to separate them into parts and import them.</p>  <p>I guess these are the URLs you are looking for.</p>  <pre><code># SimpleWeb/urls.py urlpatterns = [     url(r'^$', query.views.index),     url(r'^runQuery$', query.views.runQuery), ] </code></pre>  <p>Next problem is you runQuery view, because it returns a <code>list</code>, but it has to return a <code>str</code></p>  <pre><code>def runQuery(request):     fruitList = ['apple', 'banana', 'orange']     return HttpResponse(fruitList)  # --&gt; error: this is not a str! </code></pre>  <p>Use <a href=""https://docs.djangoproject.com/en/1.9/ref/request-response/#jsonresponse-objects"" rel=""nofollow"">Django's <code>JsonResponse()</code></a> to return the list as a a JSON encoded string.</p>  <pre><code>def runQuery(request):     fruitList = ['apple', 'banana', 'orange']     return JsonResponse(fruitList) </code></pre>"
37948066	Django: Unable to call python function from Javascript	javascript|python|angularjs|django	2016-06-21 15:04:44.157000 UTC	"<p>I have a Django project with the following structure. My project name is <em>SimpleWeb</em>. I have an application named <em>query</em>. Now I have an HTML page which has a dropdown menu and a submit button.</p>  <p>Here is what I am trying to do. When the user selects an item from the dropdown and hits submit, I want to call a python function in my <code>view.py</code> file, do something with that item and return a list back. </p>  <p>The problem is that I think that my function named <code>runQuery</code> is not being called for some reason. Below is my code</p>  <p><strong>SimpleWeb\urls.py</strong></p>  <pre><code>from django.conf.urls import include, url from django.contrib import admin  urlpatterns = [     url(r'^admin/', admin.site.urls),     url(r'^runQuery/$', include('query.urls')),     url(r'^$', include('query.urls')), ] </code></pre>  <p><strong>query\urls.py</strong></p>  <pre><code>from django.conf.urls import include, url from . import views  urlpatterns = [     url(r'^$', views.index, name='index'),     url(r'^runQuery', views.runQuery, name='runQuery'), ] </code></pre>  <p><strong>view.py</strong></p>  <pre><code>from django.shortcuts import render from django.http import HttpResponse  def index(request):     # this function powers the main page: 'http://127.0.0.1:8000/'     List = ['item1','item2','item3']     return render(request, 'query/home.html', {'list': List})   def runQuery(request):     # this function needs to be called using $http from javascript      # I want to get what user submitted in $http and do something with it here     # then return a list, below is a sample list      fruitList = ['apple', 'banana', 'orange']     return HttpResponse(fruitList) </code></pre>  <p><strong>script.js</strong></p>  <pre><code>angular.module('myApp', []); angular.module('myApp').controller('myCtrl', ['$scope', '$http', function ($scope, $http) {  $scope.submitButtonclicked = function(){     var userInput = $scope.data.dropdown /* item that user chooses from dropdown*/      $http({         method: 'GET',         url: '/runQuery',         params: {yourChoice: userInput}     }).then(function successCallback(response){         console.log(response); /* When I debug in chrome browser, I see that it logs an HTML page as the response instead of fruit list */     }, function errorCallback(response) {         console.log(""Oops, error occurred"");     });  }; }]); </code></pre>  <p>Again, I posted most of the code that I thought was relevant and might help you find a solution. My coworker told me that the way I have defined <code>runQuery</code> in my <code>urls.py</code> file could be messed up and that's why <code>runQuery()</code> function is not getting called properly. I don't know how to fix this. Thanks you :)</p>"	"<p>You're not defining the URLs correctly so the router can't find the correct method. One way you could define the URLs:</p>  <p><strong>SimpleWeb\urls.py</strong></p>  <pre><code>from django.conf.urls import include, url from django.contrib import admin urlpatterns = [    url(r'^admin/', admin.site.urls),    url(r'', include('query.urls')), ] </code></pre>  <p><strong>query\urls.py</strong></p>  <pre><code>from django.conf.urls import include, url from . import views urlpatterns = [     url(r'^$', views.index, name='index'),     url(r'^runQuery', views.runQuery, name='runQuery'), ] </code></pre>  <p><strong>view.py</strong></p>  <p>Here you need to return a JSON object. One way to return it using the HttpResponse is by using simplejson.</p>  <pre><code>from django.shortcuts import render from django.http import HttpResponse from django.utils import simplejson  def index(request):      # this function powers the main page: 'http://127.0.0.1:8000/'      List = ['item1','item2','item3']      return render(request, 'query/home.html', {'list': List})   def runQuery(request):     # this function needs to be called using $http from javascript      # I want to get what user submitted in $http and do something with it here     # then return a list, below is a sample list      fruitList = simplejson.dumps(""fruitlist"" : ['apple', 'banana', 'orange'])     return HttpResponse(fruitList, content_type =""application/json"") </code></pre>"
37976957	Block Scoping in python - is it similar to javascript hoisting when inside a function?	javascript|python	2016-06-22 19:44:48.007000 UTC	"<p>I am currently trying to understand this piece of code in python</p>  <pre><code>def foo(a):   if a==12:     var = ""Same""   else:     var = ""different"" </code></pre>  <p>I read and understand the fact that python does not support block based scoping. So everything created inside a function (whether inside a loop or conditional statements) is openly available to other members of a function.I also read the scoping rules <a href=""https://stackoverflow.com/questions/291978/short-description-of-python-scoping-rules"">here</a> . At this point would it be same to assume that these inner scoped variables are hoisted inside a functions just like they are hoisted in javascript ?</p>"	"<p>You got it. Any name assigned inside a function that isn't explicitly declared with <code>global</code> (with Py3 adding <code>nonlocal</code> to indicate it's not in local scope, but to look in wrapping scopes rather than jumping straight to global scope) is a local variable from the beginning of the function (it has space reserved in an array of locals), but reading it prior to assignment raises <code>UnboundLocalError</code>.</p>"
37998675	Django Run Python script and Pass output to javascript file	javascript|python|django|django-templates|django-views	2016-06-23 17:57:29.907000 UTC	"<h3>I am new to Django</h3> <h1>What I need:</h1> <p>1 - Run a python Script 2 - pass data to javascript file</p> <p>I don't know whether the sentence I am framing is technically correct in terms of Django.</p> <p>The following is the javascript code and python code resp.</p> <pre><code>var trace2 = {     x: [-0.100387678599, -0.841098362432, -0.086900337279, -0.418153015989, -0.197122458852, 0.0391933774019, -0.759329967599, -1.29266640992, 0.950624526622, 1.52725553555, 2.25231901948, 1.84936962902, 0.833618714205, 2.42998331172, 1.73583322891, 3.19694965552, -0.909512478385, 0.983932265051, -0.992449424459, 2.349425425, -1.60550784046, 2.68216122416, 2.22665169157, -0.775707830008, 0.569030921894, 0.310849282625, 2.39935206131, -1.66045702411, 3.76747878057, 3.05333459172, -3.35932368186, 3.43730482552, -3.07611001807, -0.842850343527, 3.50008556345, 0.165085596719, -0.339561268287, -1.74747448536, 3.56148886503, 1.8353330132, -1.90428086596, -0.912688959871, -2.37825362991],     y: [0.14252201109, 0.745253687488, 1.16250599725, 2.47176489125, -1.69476239552, -0.48991323684, 1.84409425219, 0.367526589193, -0.328695718905, 2.14081057301, 2.03064486378, -0.904917704389, -0.736099553953, -0.479945186555, 1.05076717167, 2.31045246862, 3.56214860102, -1.24356092573, 2.81251569105, 0.0354567947856, -0.764543463049, -0.463534094967, 0.121969881263, 3.10372387334, -3.07803266701, 3.94722158567, -2.3010720086, 0.522405164718, 2.09399114056, -0.206807957036, -0.102937553009, 1.93741482093, 2.13939929808, 2.31731711195, 2.04266966673, -2.83044062307, -1.29617222855, -0.0602624529294, -0.288215534329, 3.93478999833, 0.185708369263, -0.495944639256, -0.147527715708],     z: [-0.0850216981743, 0.0772495602215, 0.822100957178, 0.234493023372, 1.32486987031, 1.35806542101, -0.737286816662, -0.563373179749, -0.0551875444142, -0.104727172455, 0.653748756692, 1.99993870003, 2.1181425229, 1.5259703198, -0.621228886025, 0.409865697587, 0.65584453111, 2.11519050918, 0.311775993159, 1.78321165695, 0.472856801961, 0.918408722859, 3.36357867891, 0.253121323865, 2.00494245448, 0.725818892026, -0.791414427718, 0.339800250917, 1.43633692227, -0.644759286391, 1.06252011487, -0.884604393579, 0.590838097803, -1.77517601605, 1.03386775027, -0.451081715245, 2.89900356475, 1.50485074307, -0.199970622936, 2.71850157406, -2.37896493905, -1.03295302469, 1.42318432732],     text: [&quot;size:4&quot;,  &quot;size:9&quot;,  &quot;size:6&quot;,  &quot;size:5&quot;,  &quot;size:1&quot;,  &quot;size:1&quot;,  &quot;size:5&quot;,  &quot;size:6&quot;, &quot;size:10&quot;,  &quot;size:1&quot;, &quot;size:11&quot;,  &quot;size:5&quot;, &quot;size:11&quot;,  &quot;size:8&quot;,  &quot;size:4&quot;,  &quot;size:2&quot;,  &quot;size:9&quot;,             &quot;size:11&quot;, &quot;size:9&quot;,  &quot;size:9&quot;,  &quot;size:4&quot;,  &quot;size:2&quot;,  &quot;size:7&quot;,  &quot;size:6&quot;,  &quot;size:3&quot;,  &quot;size:4&quot;,  &quot;size:3&quot;,  &quot;size:5&quot;, &quot;size:10&quot;,  &quot;size:9&quot;,  &quot;size:3&quot;,  &quot;size:7&quot;,  &quot;size:5&quot;,  &quot;size:5&quot;,             &quot;size:10&quot;,  &quot;size:4&quot;,  &quot;size:3&quot;,  &quot;size:1&quot;,  &quot;size:7&quot;, &quot;size:11&quot;,  &quot;size:5&quot;,  &quot;size:3&quot;,  &quot;size:4&quot;],     mode: 'markers',     marker: {         color: ['blue', 'yellow', 'blue', 'blue', 'green', 'green', 'red', 'blue', 'blue', 'blue', 'red', 'blue', 'red', 'green', 'blue', 'green', 'green', 'blue', 'green', 'red', 'blue', 'green', 'red', 'green', 'yellow', 'green', 'yellow', 'yellow', 'green', 'yellow', 'green', 'red', 'blue', 'blue', 'red', 'blue', 'yellow', 'red', 'green', 'blue', 'green', 'red', 'red'],         size: [ 4,  9,  6,  5,  1,  1,  5,  6, 10,  1, 11,  5, 11,  8,  4,  2,  9,                 11,  9,  9,  4,  2,  7,  6,  3,  4,  3,  5, 10,  9,  3,  7,  5,  5,                 10,  4,  3,  1,  7, 11,  5,  3,  4],         symbol: 'circle',         line: {             color: 'rgb(204, 204, 204)',             width: 1         },         opacity: 0.9     },     type: 'scatter3d',     }; var data = [trace2]; var layout = {margin: {     l: 0,     r: 0,     b: 0,     t: 0 },   showlegend : true};     Plotly.newPlot('myDiv', data, layout, { modeBarButtonsToRemove:     ['sendDataToCloud'], displaylogo : false }); </code></pre> <p>So i need to generate x ,y ,z in python script and embed those values into javascript.</p> <p>Below is my python code :</p> <pre><code>from scipy.interpolate import griddata import numpy as np import matplotlib.pyplot as plt from matplotlib import cm from mpl_toolkits.mplot3d import Axes3D  x = np.random.random(100) y = np.random.random(100) z = np.random.random(100)  xi=np.linspace(min(x), max(x),10)  yi=np.linspace(min(y),max(y),10)  zi = griddata((x,y), z, (xi, yi), method='linear') X,Y= np.meshgrid(xi,yi) Z = np.nan_to_num(griddata((x,y), z, (X, Y), method='nearest'))  fig = plt.figure() ax = fig.add_subplot(111, projection='3d') ax.scatter(x, y, z)  ax.plot_surface(X, Y, Z, rstride=1, cstride=1, cmap=cm.coolwarm,                    linewidth=0, antialiased=False)  plt.savefig('surface.pdf')  print type(Z)  print &quot;[&quot; for row in Z:  print str(list(row)) + &quot;,&quot; print &quot;]&quot; </code></pre> <p>So after following the comments i have come to the following point:</p> <pre><code>def index(request):  x = np.random.random(100) y = np.random.random(100) z = np.random.random(100)  xi=np.linspace(min(x), max(x),10) yi=np.linspace(min(y),max(y),10)  zi = griddata((x,y), z, (xi, yi), method='linear') X,Y= np.meshgrid(xi,yi) Z = np.nan_to_num(griddata((x,y), z, (X, Y), method='nearest'))  fig = plt.figure() ax = fig.add_subplot(111, projection='3d') ax.scatter(x, y, z)  ax.plot_surface(X, Y, Z, rstride=1, cstride=1, cmap=cm.coolwarm,                linewidth=0, antialiased=False)  template = loader.get_template('polls/index.html') context = {     'Z' : Z, } return HttpResponse(template.render(context , request)) </code></pre> <p>Thats my views.py</p> <p>and my index.html is</p> <pre><code>&lt;div class=&quot;displaySomething&quot;&gt;               &lt;script&gt;                 var xyz_data_array = {{ Z }}                 console.log(xyz_data_array);               &lt;/script&gt;             &lt;div&gt; </code></pre> <p>Am i not linking the path to template properly ? or is there anything i need to do?</p>"	"<p>in <strong>views.py</strong></p>  <pre><code>def my_view(request,...):     ...     render(""my_template.html"",context={""xyz_list"":[[1,2,3],[2,3,4],[4,5,6]]})  </code></pre>  <p>in <strong>my_template.html</strong></p>  <pre><code>... &lt;script&gt;     var xyz_data_array = {{ xyz_list }} ; &lt;/script&gt; </code></pre>  <p><em>note that this only works because the array is made up of simple primatives ... if the data contained was more complicated than numbers or simple strings this likely would not work</em></p>"
38004003	Returning variables in Python Selenium from Javascript and updating them with selenium	javascript|python|selenium	2016-06-24 00:39:34.663000 UTC	"<p>I am currently using <a href=""https://jobs.walmart.com/us/login?jobId=688590-5022"" rel=""nofollow noreferrer"">Walmart's job site</a> and I'm trying to log in using Selenium with python. So far I am using the following code:</p> <pre><code>from selenium import webdriver from selenium import webdriver from selenium.common.exceptions import NoSuchElementException from selenium.common.exceptions import NoSuchWindowException from selenium.common.exceptions import WebDriverException import argparse import time import traceback import sys  while True:         try:              func_name = driver.find_element_by_id('extension_4').get_attribute('onkeyup')             func_name = func_name[func_name.index(':')+1:]             num = driver.execute_script('return ' + func_name)              #js_functions.append(num)              print repr(num)          except NoSuchElementException:              exc_info = sys.exc_info()             traceback.print_exc()          except NoSuchWindowException:  # No Need to Continue if User closes Window             break;          try:             driver.execute_script('return username(arguments[0])', 'ikegwukc@yahoo.com')         except WebDriverException:             exc_info = sys.exc_info()             traceback.print_exc()                  time.sleep(2) </code></pre> <p>When I print num from this line:</p> <pre><code> num = driver.execute_script('return ' + func_name). </code></pre> <p>It prints the username and password. I then try to update the function given (for example username) with the following line:</p> <pre><code>driver.execute_script('return username(arguments[0])', 'test@yahoo.com') </code></pre> <p>it complains that there is no such function what am I doing wrong? I've been stuck on this for a few weeks now any guidance or solutions will really help me.</p>"	"<p>Unless you have a particular reason to use JS, selenium can do this for you:</p>  <pre><code>driver.find_element_by_id('username').send_keys(username_variable) driver.find_element_by_id('password').send_keys(password_variable) driver.find_element_by_id('event-submit').click() </code></pre>  <p>Did you have some other issue?</p>"
38007359	Importing Python Array to Javascript using Flask	javascript|python|html|arrays|null	2016-06-24 06:57:28.113000 UTC	"<p>I want to import a very big array from python to HTML</p>  <p>What I am doing Right now is </p>  <p>Python :</p>  <pre><code>@app.route(""/"") def Home():     return render_template(""PyHTML.html"",XV=XV,Time=Time) </code></pre>  <p>And in HTML</p>  <pre><code>var XV = ['{{XV[0]}}','{{XV[1]}}','{{XV[2]}}','{{XV[3]}}','{{XV[4]}}'] var Time = ['{{Time[0]}}','{{Time[1]}}','{{Time[2]}}','{{Time[3]}}','{{Time[4]}}'] </code></pre>  <p>What can be done for large dataset of XV and Time?</p>"	
38013689	JavaScript onload not recognized in extended html python flask	javascript|jquery|python|html|flask	2016-06-24 12:39:38.537000 UTC	"<p>I use a <code>basic.html</code> in my flask application which loads all needed ressources like footer navbar etc., all my other html sites extend this <code>basic.html</code></p>  <p>In my <code>main.js</code> I created a simple function:</p>  <pre><code>function fun() {   alert(""we have fun""); } </code></pre>  <p>I load my files like this in the <code>basic.html</code>:</p>  <pre><code>&lt;script type=text/javascript src=""{{ url_for('static', filename='js/jquery.min.js') }}""&gt;&lt;/script&gt;  &lt;script type=text/javascript src=""{{ url_for('static', filename='js/bootstrap.js') }}""&gt;&lt;/script&gt;  &lt;script type=text/javascript src=""{{ url_for('static', filename='js/main.js') }}""&gt;&lt;/script&gt; </code></pre>  <p>Now I want to use this function in my <code>page.html</code> which extends the <code>basic.html</code>:</p>  <pre><code>{% extends ""basic.html"" %}   {% block content %}  &lt;div class = ""container"" onload=""fun()""&gt; &lt;p&gt; Test &lt;/p&gt; &lt;/div&gt;  {% endblock %} </code></pre>  <p>Sadly nothing happens, but if I use the <code>onload=""fun()""</code> in the <code>basic.html</code> itself it works.</p>  <p>So how do I resolve this? </p>  <p>This is a very simplified version of one of my previous question, due to the fact that I am sitting on this since 4 hours I think I know what causes the issue but I cant solve it and all solutions I found do not work.</p>  <p>Here is my previous question: <a href=""https://stackoverflow.com/questions/38011204/flask-google-maps-api-autocomplete-jquery-not-recognized"">question</a></p>  <p>I think that <code>onload=""fun()""</code> is called before jQuery is even load or my main.js but I am still not 100% sure if this causes the error and I cant find a solution</p>"	"<p>Put that in your basic.html </p>  <pre><code>&lt;head&gt;  &lt;script src=""{{url_for('static', filename='js/main.js')}}""&gt;&lt;/script&gt;  &lt;/head&gt;  &lt;body onLoad=""fun();""&gt; </code></pre>  <p>onLoad needs to go in the body not in div</p>"
38013689	JavaScript onload not recognized in extended html python flask	javascript|jquery|python|html|flask	2016-06-24 12:39:38.537000 UTC	"<p>I use a <code>basic.html</code> in my flask application which loads all needed ressources like footer navbar etc., all my other html sites extend this <code>basic.html</code></p>  <p>In my <code>main.js</code> I created a simple function:</p>  <pre><code>function fun() {   alert(""we have fun""); } </code></pre>  <p>I load my files like this in the <code>basic.html</code>:</p>  <pre><code>&lt;script type=text/javascript src=""{{ url_for('static', filename='js/jquery.min.js') }}""&gt;&lt;/script&gt;  &lt;script type=text/javascript src=""{{ url_for('static', filename='js/bootstrap.js') }}""&gt;&lt;/script&gt;  &lt;script type=text/javascript src=""{{ url_for('static', filename='js/main.js') }}""&gt;&lt;/script&gt; </code></pre>  <p>Now I want to use this function in my <code>page.html</code> which extends the <code>basic.html</code>:</p>  <pre><code>{% extends ""basic.html"" %}   {% block content %}  &lt;div class = ""container"" onload=""fun()""&gt; &lt;p&gt; Test &lt;/p&gt; &lt;/div&gt;  {% endblock %} </code></pre>  <p>Sadly nothing happens, but if I use the <code>onload=""fun()""</code> in the <code>basic.html</code> itself it works.</p>  <p>So how do I resolve this? </p>  <p>This is a very simplified version of one of my previous question, due to the fact that I am sitting on this since 4 hours I think I know what causes the issue but I cant solve it and all solutions I found do not work.</p>  <p>Here is my previous question: <a href=""https://stackoverflow.com/questions/38011204/flask-google-maps-api-autocomplete-jquery-not-recognized"">question</a></p>  <p>I think that <code>onload=""fun()""</code> is called before jQuery is even load or my main.js but I am still not 100% sure if this causes the error and I cant find a solution</p>"	"<p>The problem is simple. You can't attach <code>onload</code> to a <code>div</code>.</p>  <blockquote>   <p>The onload event can only be used on the document(body) itself, frames, images, and scripts. In other words, it can be attached to only body and/or each external resource. The div is not an external resource and it's loaded as part of the body, so the onload event doesn't apply there.</p> </blockquote>  <p>Adding the script tag immediately after the div element will cause it to fire as soon as the div is rendered. So this will perfectly work:</p>  <pre><code>{% extends ""basic.html"" %} {% block content %}  &lt;div class=""container""&gt; &lt;p&gt; Test &lt;/p&gt; &lt;/div&gt;  &lt;script type=""text/javascript""&gt; fun(); &lt;/script&gt;  {% endblock %} </code></pre>  <p>Read more here: <a href=""https://stackoverflow.com/questions/4057236/how-to-add-onload-event-to-a-div-element"">How to add onload event to a div element?</a></p>  <p>Instead of appending a script tag with the function call, you can use another solution explained here: <a href=""https://stackoverflow.com/a/17071878/4395646"">https://stackoverflow.com/a/17071878/4395646</a></p>"
38021583	javascript to python array translation	javascript|python|arrays	2016-06-24 20:26:46.300000 UTC	"<p>We are working on a project where we are translating javaScript code into python. Everything is going pretty smoothly, except for this one line of code that has given us errors on multiple translations:</p>  <blockquote>   <p>""primes"" is an empty array BTW.</p> </blockquote>  <p>JavaScript:</p>  <pre><code> var primes = [];   if(primes[primes.length - 1] &gt; 3){...} </code></pre>  <p>Python:</p>  <pre><code> primes = []   if primes[len(primes) - 1] &gt; 3:       ...... </code></pre>  <p>This code works in javascript, however in Python we get an error. It seems as though we are trying to access an index of the list that doesn't exist.</p>  <p>This is the error: </p>  <blockquote>   <p>TypeError: object of type 'int' has no len()</p> </blockquote>  <p>Does anyone have a workaround?  </p>"	"<p>Python hasn't a safe get so you should change your code this way:</p>  <pre><code>primes = []  if primes and primes[len(primes) - 1] &gt; 3:     ... </code></pre>  <p>Even better, to get the last of the list you can use <code>primes[-1]</code></p>  <pre><code>primes = []  if primes and primes[-1] &gt; 3:     ... </code></pre>"
38051049	python: pyQT QApplication QwebPage instance to scrape javascript - how to completely destroy and reinitialize	python|pyqt|initialization|instance	2016-06-27 10:02:43.807000 UTC	"<p>I am using Scrapy (python) to scrape webpages generated at runtime with JavaScript. There are a number of options to do so, including dockerized middlewares such as Splash, Selenium and more.</p>  <p>I have howewer decided to tackle this problem by simply <strong>running a PyQT instance (with .QWebPage() ), which has a WebKit interpreter and can therefore parse .js</strong></p>  <p>Given the scale of the pages to crawl, i want to run a number of jobs sequentially and completely reinitialize PyQT between them. Howewer, I cannot seem to be able to reinitialize PyQT completely!</p>  <p>The code is complex, but I seem to have the same problem with this straightforward, self-contained example I lifted from a fellow StackOverflower: ;) </p>  <pre><code>from PyQt4 import QtCore, QtGui, QtWebKit import sys  class PyQTRenderer(object):      def __init__(self):         self.myApp = QtGui.QApplication(sys.argv)      def loadpage(self, url):         page = QtWebKit.QWebPage()         loop = QtCore.QEventLoop()         page.mainFrame().loadFinished.connect(loop.quit)         page.mainFrame().load(QtCore.QUrl(url))         loop.exec_()         return page.mainFrame().toHtml().toAscii()      def close(self):         print(""exiting app"")         self.myApp.closeAllWindows()         self.myApp.exit()     # something else maybe???   myRenderer = PyQTRenderer() print myRenderer.loadpage('https://google.com')[1:100], "" google"" print myRenderer.loadpage('https://bing.com')[1:100], "" bing"" myRenderer.close()  myRenderer2 = PyQTRenderer() print myRenderer2.loadpage('http://wikipedia.org')[1:100], ""wikipedia (fails)"" myRenderer2.close() </code></pre>  <p>the expected output should be </p>  <pre><code>!DOCTYPE html&gt;&lt;html itemscope  google !DOCTYPE html PUBLIC ""-//W3C/  bing !DOCTYPE html&gt;&lt;html lang=""mul wikipedia  </code></pre>  <p>instead I get:</p>  <pre><code>!DOCTYPE html&gt;&lt;html itemscope  google !DOCTYPE html PUBLIC ""-//W3C/  bing &lt;html&gt;&lt;head&gt;&lt;/head&gt;&lt; wikipedia (fails) </code></pre>  <p>if I try to use del(myRenderer), myRenderer2 throws a bunch of errors about not being able to connect to a number of QTApp network processes. It seems therefore that <em>closeAllWindows()</em> and <em>exit()</em> do not work as I'd think they would, and that the underlying pyQT libraries keep running in the background.</p>  <p>My question: how can I completely reinitialize PyQT in order to be able to instantiate different PyQTRenderer() sequentially?</p>  <p>Thanks in advance!</p>  <p>edit: myApp.quit() is also not a possible solution - at least in the current implementation - as all it does in my code is crashing the main python process.</p>"	
38057538	Get website content after JavaScript loading with python	javascript|python	2016-06-27 15:13:27.510000 UTC	"<p>I've got issue with getting an content:</p>  <pre><code>with dryscrape.Session() as c:     PASSWORD = '&lt;PASS&gt;'     USERNAME = '&lt;EMAIL&gt;'     URL = 'https://my.pingdom.com/'     c.get(URL)     soup = BeautifulSoup(c.get(URL).text, ""lxml"")     csrf = soup.select_one(""input[name=__csrf_magic]"")[""value""]     login_data = {         ""email"" : USERNAME,         ""password"" : PASSWORD,         ""__csrf_magic"" : csrf,} r = c.post(URL, data=login_data, headers={'User-Agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/45.0.2454.101 Safari/537.36'}) url = 'https://my.pingdom.com/newchecks/rums?ignoreActive=1' r = c.get(url).text print r </code></pre>  <p>And after login in browser i've got value of Load Time in source code, but when i'm using this scipt there is only an {{loadtime}} tag from <code>x-handlebars-template</code>. Any ideas how I can get it? This is server script so any selenium type of tips doesn't go in here. :)</p>"	
38138142	Send JSON object via POST from JavaScript to Python	javascript|python|json|django|dojo	2016-07-01 06:05:51.657000 UTC	"<p>There is a client-side JavaScript and server-side Python, powered by Django. There is a data object: <code>foo_data = {""foo"":1, ""bar"":2}</code>.</p>  <p>Now, I would like to send a post-request using <code>dojo/request/xhr</code>, and send <code>foo_data</code> along with another variable:</p>  <pre><code>xhr.post(document.location.href, {     data: {         'is_foo': true,         'data': foo_data     },     headers: { 'Content-Type': 'application/json' } }).then(function(text){     console.log('The server returned: ', text); }); </code></pre>  <p>And then read sent data in Django's <code>views.py</code> file:</p>  <pre><code>def post(self, request, *args, **kwargs):     json.loads(request.body) </code></pre>  <p>BUT, it doesn't work:</p>  <ul> <li>if I ssend <code>foo_data</code>, python doesn't recognize it correctly as JSON object and can't read it using <code>json.loads</code>.</li> <li>I can't encode <code>foo_data</code> using <code>JSON.parse</code> because it is already an object!</li> <li><code>request.POST</code> is an empty <code>QueryDict</code></li> <li><code>request.body</code> has string word <code>object</code> (instead of the real object)</li> </ul>  <p>Any ideas how to solve this?</p>  <p>Goal: send JSON object from JS --> Python and read it on server-side.</p>"	"<p>dojo.xhr has been deprecated, please consider using <code>dojo/request</code> more info here:</p>  <p><a href=""https://dojotoolkit.org/reference-guide/1.10/dojo/request/xhr.html#dojo-request-xhr"" rel=""nofollow"">https://dojotoolkit.org/reference-guide/1.10/dojo/request/xhr.html#dojo-request-xhr</a> </p>  <p>For a live example of post to a server, you can look source code for this page: <a href=""https://dojotoolkit.org/documentation/tutorials/1.8/ajax/demo/dojo-request-xhr-post.php"" rel=""nofollow"">https://dojotoolkit.org/documentation/tutorials/1.8/ajax/demo/dojo-request-xhr-post.php</a></p>  <p>Here some a simple example of usage:</p>  <pre><code>        require(dojo/request""],             function(request){                     // post the data to the server                     request.post(""your/server/script"", {                         // send your data here                         data: { yourData: 1},                         // wait 2 seconds for a response                         timeout: 2000                      }).then(function(response){                         // do smt here when operation is successfully executed                     });              }         ); </code></pre>  <p>Regarding your code sample in your question, you have't posted your server side code. But you could try to pass your data to the server using <code>JSON.stringify()</code>.</p>"
38149602	Is it possible to put JavaScript code into a JS file through Python?	javascript|python|file	2016-07-01 15:57:16.260000 UTC	"<pre><code>with open(""C:scripts/CUAppVersion.js"", 'a') as file: file.write(""if [CUID] = -1 then""     ""function GetCUID() { return 0; }"" ""else""     ""function GetCUID() { return [CUID] });"") </code></pre>  <p>That is my code and it succesfully  puts the JS into the JS file but it puts it on one line rather than as I typed it above. I am aware that my JS code isn't fully correct I do need to fix it.</p>  <p>How do I put that code into the JS file with the correct layout?</p>"	"<p>Add <code>\n</code> to the end of every line.</p>  <pre><code>with open(""C:scripts/CUAppVersion.js"", 'a') as file: file.write(""if [CUID] = -1 then\n""     ""function GetCUID() { return 0; }\n"" ""else\n""     ""function GetCUID() { return [CUID] });\n"") </code></pre>"
38149602	Is it possible to put JavaScript code into a JS file through Python?	javascript|python|file	2016-07-01 15:57:16.260000 UTC	"<pre><code>with open(""C:scripts/CUAppVersion.js"", 'a') as file: file.write(""if [CUID] = -1 then""     ""function GetCUID() { return 0; }"" ""else""     ""function GetCUID() { return [CUID] });"") </code></pre>  <p>That is my code and it succesfully  puts the JS into the JS file but it puts it on one line rather than as I typed it above. I am aware that my JS code isn't fully correct I do need to fix it.</p>  <p>How do I put that code into the JS file with the correct layout?</p>"	"<p>What about adding some endlines <code>\n</code>?</p>  <pre><code>with open(""C:scripts/CUAppVersion.js"", 'a') as file:     file.write(""if [CUID] = -1 then\n""         ""function GetCUID() { return 0; }\n""         ""else\n""         ""function GetCUID() { return [CUID] });\n"") </code></pre>"
38149602	Is it possible to put JavaScript code into a JS file through Python?	javascript|python|file	2016-07-01 15:57:16.260000 UTC	"<pre><code>with open(""C:scripts/CUAppVersion.js"", 'a') as file: file.write(""if [CUID] = -1 then""     ""function GetCUID() { return 0; }"" ""else""     ""function GetCUID() { return [CUID] });"") </code></pre>  <p>That is my code and it succesfully  puts the JS into the JS file but it puts it on one line rather than as I typed it above. I am aware that my JS code isn't fully correct I do need to fix it.</p>  <p>How do I put that code into the JS file with the correct layout?</p>"	"<p>Use multiline strings.</p>  <pre><code>with open(""C:/scripts/CUAppVersion.js"", 'a') as file:     file.write("""""" if [CUID] = -1 then     function GetCUID() { return 0; } else     function GetCUID() { return [CUID] }); """""".strip()) </code></pre>"
38150555	Check if page contains external JavaScript using python	javascript|python	2016-07-01 16:59:29.540000 UTC	"<p>I tried following,</p>  <pre><code>import requests response = requests.get('http://www.ebay.in') print (response.status_code) print (response.content) print response.content.find('tracker.js') # it returns nothing </code></pre>  <p>Basically I want to check if page contains a script with src attr = tracker.js</p>"	
38167758	Get Javascript code as string from url with Python	javascript|python|string|url	2016-07-03 07:40:54.727000 UTC	"<p>I am trying to get a script written in Javascript from a URL with Python 2.7. I have tried using urllib, urllib2, and requests. They all return an empty string. The url contains no HTML elements it is just the javascript code.</p>  <p>Here's the link: <a href=""http://go.pub2srv.com/apu.php?zoneid=676495"" rel=""nofollow noreferrer"">http://go.pub2srv.com/apu.php?zoneid=676495</a></p>  <p>And what I have tried:</p>  <pre><code>import requests r = requests.get('http://go.pub2srv.com/apu.php?zoneid=676495') print r.text </code></pre>  <p>returns <code>u' '</code>, same with urllib and urllib2. Any ideas?</p>  <p><strong>UPDATE:</strong> OK I got it to work. Looks like the website was filtering user agents.  This thread helped me out. <a href=""https://stackoverflow.com/questions/25491872/python-request-geturl-returns-empty-content"">Python request.get(url) returns empty content</a></p>  <p><code>import requests url = 'http://go.pub2srv.com/apu.php?zoneid=676495' user_agent = 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/36.0.1985.143 Safari/537.36' headers = {'User-Agent': user_agent} r = requests.get(url, headers=headers)</code></p>  <p>Thanks everyone.</p>"	"<p>try this:</p>  <pre><code>import urllib2  data = urllib2.openurl(""http://onclickads.net/apu.php?zoneid=676495"") js = """" for lines in data.readlines():    js = js +lines  print js </code></pre>"
38173455	What is the scope of a variable in a if block in: javascript vs C vs Python?	javascript|python|c|if-statement|scope	2016-07-03 19:09:50.217000 UTC	"<p>How is the scope of the a variable in those examples? And how it works in general?</p>  <p><strong>javascript</strong></p>  <pre><code>var a = 0; if(true){     var a = 1;     console.log(a); } console.log(a); </code></pre>  <p><strong>C</strong></p>  <pre><code>int a = 0; if(1){     int a = 1;     printf(""%i "", a); } printf(""%i "", a); </code></pre>  <p><strong>Python</strong></p>  <pre><code>a = 0 if True:     a = 1     print a print a </code></pre>"	"<p>In <code>Javascript</code> the output will be <code>1</code> both times as <code>var a = 1</code> sets <code>a</code> to <code>1</code> beyond just the <code>if</code> block. In <code>C</code> declaring <code>int a = 1</code> within the <code>if</code> declares a variable just for the <code>if</code> block so you will get the output <code>1</code> and then <code>0</code>. In <code>python</code> <code>a = 0</code> initializes the variable, but an assignment within an <code>if</code> in <code>python</code> goes beyond the <code>if</code> block as well so you will get <code>1</code> both times.</p>  <p><strong>tl;dr</strong>: <code>C</code> has block scoped, <code>Javascript</code> and <code>Python</code> have function scope </p>"
38173455	What is the scope of a variable in a if block in: javascript vs C vs Python?	javascript|python|c|if-statement|scope	2016-07-03 19:09:50.217000 UTC	"<p>How is the scope of the a variable in those examples? And how it works in general?</p>  <p><strong>javascript</strong></p>  <pre><code>var a = 0; if(true){     var a = 1;     console.log(a); } console.log(a); </code></pre>  <p><strong>C</strong></p>  <pre><code>int a = 0; if(1){     int a = 1;     printf(""%i "", a); } printf(""%i "", a); </code></pre>  <p><strong>Python</strong></p>  <pre><code>a = 0 if True:     a = 1     print a print a </code></pre>"	"<p>The output is:</p>  <p><strong>javascript</strong></p>  <pre><code>var a = 0; if(true){     var a = 1;     console.log(a);  //1 } console.log(a);      //1 </code></pre>  <p><strong>C</strong></p>  <pre><code>int a = 0; if(1){     int a = 1;     printf(""%i "", a);  //1 } printf(""%i "", a);      //0 </code></pre>  <p><strong>Python</strong></p>  <pre><code>a = 0 if True:     a = 1     print a   #1 print a       #1 </code></pre>  <p>That because <strong>javascript</strong> and <strong>Python</strong> doesn't have <em>block scope</em>; so anything declared in an <code>if</code> <em>block</em> has the same scope as anything declared exactly outside the <em>block</em> (and <strong>Python</strong> doesn't use declaration).</p>  <p><strong>C</strong> have <em>block scope</em>. If you declare a static variable inside a <em>block</em> <code>{...}</code>, the variable is no more accessible outside the <em>block</em>.</p>  <p>The same is for all the <em>block</em> types like <code>for</code>, <code>else</code>, <code>elseif</code>...</p>  <p>In <strong>javascript</strong> if you want to declare a variable exclusive inside a <em>block</em> you can use <code>let</code>:</p>  <blockquote>   <p>Variables declared by let have as their scope the block in which they   are defined, as well as in any contained sub-blocks . In this way, let   works very much like var. The main difference is that the scope of a   var variable is the entire enclosing function</p> </blockquote>  <p>source: <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/let"" rel=""nofollow"">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/let</a></p>  <p>and here a lot of examples about javascript scope: <a href=""https://toddmotto.com/everything-you-wanted-to-know-about-javascript-scope/"" rel=""nofollow"">https://toddmotto.com/everything-you-wanted-to-know-about-javascript-scope/</a></p>"
38227463	Converting JavaScript code to Python	javascript|python	2016-07-06 15:09:38.843000 UTC	"<p>This is the java script code  it's a decoder with 2 functions:<br> <code>getOffset</code>, and the main function <code>asdf</code>.</p>  <p>I want to decode this string: <code>LqMWJQzZYUWJQpEcYGII26XombQQoqnQQQQoqnqgoqnQQQQoqnQQQQoqnQQQQoqnqgoqnQQQQoqnQQuuuQQoqnQQQQoqnxioqnQQQQoqnQQMJCSVcCgnQQoqnQQQQoqnxioqnQQQQoqnQQniaQQoqnQQQQoqnqgoqnQQQQoqnQQWJQzhYAUoVMTAdAT33nvX3nB</code> </p>  <p>To this :</p>  <p><code>/ShowUrl-a_partnerKey.1-a_url.http%253A__5F____5F__2F__5F____5F____5F____5F__2F__5F____5F__www__5F____5F__2E__5F____5F__danielnyc__5F____5F__2E__5F____5F__com__5F____5F__2F__5F____5F__-a_urlKey.915edf949f66c826c.html</code></p>  <p>I want to convert this (working) javascript code to python:</p>  <pre><code>var d = ""LqMWJQzZYUWJQpEcYGII26XombQQoqnQQQQoqnqgoqnQQQQoqnQQQQoqnQQQQoqnqgoqnQQQQoqnQQuuuQQoqnQQQQoqnxioqnQQQQoqnQQMJCSVcCgnQQoqnQQQQoqnxioqnQQQQoqnQQniaQQoqnQQQQoqnqgoqnQQQQoqnQQWJQzhYAUoVMTAdAT33nvX3nB"" function asdf(d) { var h = {     """": [""&amp;"", ""="", ""p"", ""6"", ""?"", ""H"", ""%"", ""B"", "".com"", ""k"", ""9"", "".html"", ""n"", ""M"", ""r"", ""www."", ""h"", ""b"", ""t"", ""a"", ""0"", ""/"", ""d"", ""O"", ""j"", ""http://"", ""_"", ""L"", ""i"", ""f"", ""1"", ""e"", ""-"", ""2"", ""."", ""N"", ""m"", ""A"", ""l"", ""4"", ""R"", ""C"", ""y"", ""S"", ""o"", ""+"", ""7"", ""I"", ""3"", ""c"", ""5"", ""u"", 0, ""T"", ""v"", ""s"", ""w"", ""8"", ""P"", 0, ""g"", 0],     q: [0, ""__3F__"", 0, ""Photos"", 0, ""https://"", "".edu"", ""*"", ""Y"", ""&gt;"", 0, 0, 0, 0, 0, 0, ""`"", ""__2D__"", ""X"", ""&lt;"", ""slot"", 0, ""ShowUrl"", ""Owners"", 0, ""["", ""q"", 0, ""MemberProfile"", 0, ""ShowUserReviews"", '""', ""Hotel"", 0, 0, ""Expedia"", ""Vacation"", ""Discount"", 0, ""UserReview"", ""Thumbnail"", 0, ""__2F__"", ""Inspiration"", ""V"", ""Map"", "":"", ""@"", 0, ""F"", ""help"", 0, 0, ""Rental"", 0, ""Picture"", 0, 0, 0, ""hotels"", 0, ""ftp://""],     x: [0, 0, ""J"", 0, 0, ""Z"", 0, 0, 0, "";"", 0, ""Text"", 0, ""("", ""x"", ""GenericAds"", ""U"", 0, ""careers"", 0, 0, 0, ""D"", 0, ""members"", ""Search"", 0, 0, 0, ""Post"", 0, 0, 0, ""Q"", 0, ""$"", 0, ""K"", 0, ""W"", 0, ""Reviews"", 0, "","", ""__2E__"", 0, 0, 0, 0, 0, 0, 0, ""{"", ""}"", 0, ""Cheap"", "")"", 0, 0, 0, ""#"", "".org""],     z: [0, ""Hotels"", 0, 0, ""Icon"", 0, 0, 0, 0, "".net"", 0, 0, ""z"", 0, 0, ""pages"", 0, ""geo"", 0, 0, 0, ""cnt"", ""~"", 0, 0, ""]"", ""|"", 0, ""tripadvisor"", ""Images"", ""BookingBuddy"", 0, ""Commerce"", 0, 0, ""partnerKey"", 0, ""area"", 0, ""Deals"", ""from"", ""//"", 0, ""urlKey"", 0, ""'"", 0, ""WeatherUnderground"", 0, ""MemberSign"", ""Maps"", 0, ""matchID"", ""Packages"", ""E"", ""Amenities"", ""Travel"", "".htm"", 0, ""!"", ""^"", ""G""] }; var b = """"; for (var a = 0; a &lt; d.length; a++) {     var j = d.charAt(a);     var f = j;     if (h[j] &amp;&amp; a + 1 &lt; d.length) {         a++;         f += d.charAt(a)     } else {         j = """"     }     var g = getOffset(d.charCodeAt(a));     if (g &lt; 0 || typeof h[j][g] == ""String"") {         b += f     } else {         b += h[j][g]     } } return b} function getOffset(a) { if (a &gt;= 97 &amp;&amp; a &lt;= 122) {     return a - 61 } if (a &gt;= 65 &amp;&amp; a &lt;= 90) {     return a - 55 } if (a &gt;= 48 &amp;&amp; a &lt;= 71) {     return a - 48 } return -1} asdf(d) </code></pre>  <p>It returns (as expected):  </p>  <p><code>/ShowUrl-a_partnerKey.1-a_url.http%253A__5F____5F__2F__5F____5F____5F____5F__2F__5F____5F__www__5F____5F__2E__5F____5F__danielnyc__5F____5F__2E__5F____5F__com__5F____5F__2F__5F____5F__-a_urlKey.915edf949f66c826c.html</code></p>  <p>This is the Python code that I've tried : </p>  <pre><code>d = ""LqMWJQzZYUWJQpEcYGII26XombQQoqnQQQQoqnqgoqnQQQQoqnQQQQoqnQQQQoqnqgoqnQQQQoqnQQuuuQQoqnQQQQoqnxioqnQQQQoqnQQMJCSVcCgnQQoqnQQQQoqnxioqnQQQQoqnQQniaQQoqnQQQQoqnqgoqnQQQQoqnQQWJQzhYAUoVMTAdAT33nvX3nB""  def asdf(d):   h = {  """" : [""&amp;"", ""="", ""p"", ""6"", ""?"", ""H"", ""%"", ""B"", "".com"", ""k"", ""9"", "".html"", ""n"", ""M"", ""r"", ""www."", ""h"", ""b"", ""t"", ""a"", ""0"", ""/"", ""d"", ""O"", ""j"", ""http://"", ""_"", ""L"", ""i"", ""f"", ""1"", ""e"", ""-"", ""2"", ""."", ""N"", ""m"", ""A"", ""l"", ""4"", ""R"", ""C"", ""y"", ""S"", ""o"", ""+"", ""7"", ""I"", ""3"", ""c"", ""5"", ""u"", 0, ""T"", ""v"", ""s"", ""w"", ""8"", ""P"", 0, ""g"", 0],  ""q"": [0, ""__3F__"", 0, ""Photos"", 0, ""https://"", "".edu"", ""*"", ""Y"", ""&gt;"", 0, 0, 0, 0, 0, 0, ""`"", ""__2D__"", ""X"", ""&lt;"", ""slot"", 0, ""ShowUrl"", ""Owners"", 0, ""["", ""q"", 0, ""MemberProfile"", 0, ""ShowUserReviews"", '""', ""Hotel"", 0, 0, ""Expedia"", ""Vacation"", ""Discount"", 0, ""UserReview"", ""Thumbnail"", 0, ""__2F__"", ""Inspiration"", ""V"", ""Map"", "":"", ""@"", 0, ""F"", ""help"", 0, 0, ""Rental"", 0, ""Picture"", 0, 0, 0, ""hotels"", 0, ""ftp://""],  ""x"": [0, 0, ""J"", 0, 0, ""Z"", 0, 0, 0, "";"", 0, ""Text"", 0, ""("", ""x"", ""GenericAds"", ""U"", 0, ""careers"", 0, 0, 0, ""D"", 0, ""members"", ""Search"", 0, 0, 0, ""Post"", 0, 0, 0, ""Q"", 0, ""$"", 0, ""K"", 0, ""W"", 0, ""Reviews"", 0, "","", ""__2E__"", 0, 0, 0, 0, 0, 0, 0, ""{"", ""}"", 0, ""Cheap"", "")"", 0, 0, 0, ""#"", "".org""],  ""z"": [0, ""Hotels"", 0, 0, ""Icon"", 0, 0, 0, 0, "".net"", 0, 0, ""z"", 0, 0, ""pages"", 0, ""geo"", 0, 0, 0, ""cnt"", ""~"", 0, 0, ""]"", ""|"", 0, ""tripadvisor"", ""Images"", ""BookingBuddy"", 0, ""Commerce"", 0, 0, ""partnerKey"", 0, ""area"", 0, ""Deals"", ""from"", ""//"", 0, ""urlKey"", 0, ""'"", 0, ""WeatherUnderground"", 0, ""MemberSign"", ""Maps"", 0, ""matchID"", ""Packages"", ""E"", ""Amenities"", ""Travel"", "".htm"", 0, ""!"", ""^"", ""G""]  }  b = """"   for a in range(len(d)):      j=d[a]      f=j      list =[]      for key in h:         list.append(key)      if j in list and a+1 &lt; len(d):          a=a+1          f = f+d[a]      else:          j = """"      g = getOffset(ord(d[a]))      if g &lt; 0 or type(h[j][g]) is str:          b = b + f      else:          b = b+str(h[j][g])          print b  return b  def getOffset(a):     if(a &gt;= 97 and a &lt;= 122):         return(a-61)             if(a &gt;= 65 and a &lt;= 90):         return(a-55)     if(a &gt;= 48 and a &lt;=71):         return(a-48)     return(-1) print asdf(d)   </code></pre>  <p>But it gives me back the undecoded string:  <code>LqMWJQzZYUWJQpEcYGII26XombQQoqnQQQQoqnqgoqnQQQQoqnQQQQoqnQQQQoqnqgoqnQQQQoqnQQuuuQQoqnQQQQoqnxioqnQQQQoqnQQMJCSVcCgnQQoqnQQQQoqnxioqnQQQQoqnQQniaQQoqnQQQQoqnqgoqnQQQQoqnQQWJQzhYAUoVMTAdAT33nvX3nB</code></p>  <p>What's wrong with my code ? Why don't I get the same results as the javascript code ?</p>"	"<p>Actually, your Javascript code has an Error - if the error is fixed, then your JS code breaks, returning the original string, just as your Python code does.  </p>  <p><code>if (g &lt; 0 || typeof h[j][g] == ""String"")</code> is NOT behaving as you expected:   </p>  <p><code>typeof h[j][g] == ""String"")</code>  should be<br> <code>if (g &lt; 0 || typeof h[j][g] == ""string"")</code><br> (note uncapitalized <strong>string</strong>).</p>  <p>In fact the mistaken <code>typeof h[j][g] == ""String"")</code>, is actually the equivalent of<br> <code>if (g &lt; 0) {...</code></p>  <p>If you change that line in both versions of your code, you get the desired results in JS, and ALMOST the desired results in Python (which has another error).</p>  <hr>  <p><strong>Javascript version</strong>  </p>  <p>Change  :  </p>  <pre><code>var g = getOffset(d.charCodeAt(a));     if (g &lt; 0 || typeof h[j][g] == ""String"") {     #THIS LINE IS INCORRECT         b += f     } else {         b += h[j][g]     } </code></pre>  <p>To:</p>  <pre><code>var g = getOffset(d.charCodeAt(a));     if (g &lt; 0){                       # CHANGE THIS LINE         b += f     } else {         b += h[j][g]     } </code></pre>  <p>JS Result:  </p>  <p><code>/ShowUrl-a_partnerKey.1-a_url.http%253A__5F____5F__2F__5F____5F____5F____5F__2F__5F____5F__www__5F____5F__2E__5F____5F__danielnyc__5F____5F__2E__5F____5F__com__5F____5F__2F__5F____5F__-a_urlKey.915edf949f66c826c.html</code>  </p>  <hr>  <p><strong>Python version</strong>  </p>  <p>Change:</p>  <pre><code> g = getOffset(ord(d[a]))  if g &lt; 0 or type(h[j][g]) is str:    # THIS LINE IS INCORRECT      b = b + f  else:      b = b+str(h[j][g])      print b                          # THIS LINE SHOULD BE REMOVED </code></pre>  <p>To:  </p>  <pre><code> g = getOffset(ord(d[a]))             # CHANGED THIS LINE  if g &lt; 0:      b = b + f  else:      b = b+str(h[j][g])         #print b                         # REMOVED THIS LINE </code></pre>  <p>Results in:  </p>  <p><code>/ShowUrld-a_partnerKeyN.1-a_url.http%253A__5Fc____5Fc__2F__y5Fc____5Fc____5Fc____5Fc__2F__y5Fc____5Fc__www__5Fc____5Fc__2E__o5Fc____5Fc__danielnyc__5Fc____5Fc__2E__o5Fc____5Fc__com__5Fc____5Fc__2F__y5Fc____5Fc__-a_urlKeyS.915edf949f66c826c.html</code></p>  <p>Here are links to final code in:  </p>  <ul> <li><a href=""https://repl.it/@sherylhohman/StrictCumbersomeFoxterrier"" rel=""nofollow noreferrer"">JavaScript repl</a></li> <li><a href=""https://repl.it/@sherylhohman/QuietSubtleNortherncardinals"" rel=""nofollow noreferrer"">Python repl</a></li> </ul>  <hr>  <p><strong>Final PYTHON Fix</strong></p>  <p>Now, You have another Python Error.. When using <code>for a in ..</code> construct, you cannot internally change the value of <code>a</code>, as in the line: <code>a = a + 1</code>.</p>  <p>Well, you <em>can</em>, but that will lead to unexpected results.<br> Each time the <code>for a in..</code> top of the loop is reached, <code>a</code> will increment to the next value it <em>would have had</em>, regardless of what value you <em>temporarily</em> changed it to <em>within</em> the loop !!</p>  <p>Hence, <code>(2, 'M'), (7, 'Z'), ...</code> were not skipped, and you had intended!<br> This is why the Python result I showed above has a few more characters than you expected.  </p>  <p>See <a href=""https://stackoverflow.com/questions/15363138/scope-of-python-variable-in-for-loop"">these SO answers for great explanations and examples</a>, and <a href=""https://docs.python.org/2/tutorial/controlflow.html#for-statements"" rel=""nofollow noreferrer"">python docs here</a>, or <a href=""https://stackoverflow.com/questions/15902835/changing-iteration-variable-inside-for-loop-in-python"">this closed SO question</a>.</p>  <p>The easiest way to convert your code in this case is to simply use a <code>while</code> loop instead of a <code>for in</code> loop.  This way, the your inner logic remains essentially the same for both languages.</p>  <p>CHANGE:</p>  <pre><code> #for a in range(len(d)):     ## Remove and Change this to a WHILE loop as below   a = 0                       #  Manually initialize your loop   print(len(d))   while a &lt; len(d):           # Use WHILE loop instead      j = d[a]      ... </code></pre>  <p>AND..  </p>  <pre><code>    ...      g = getOffset(ord(d[a]))     if  g &lt; 0 :                   # Remember to UPDATE This Line (Remove #or type(h[j][g]) is str:)         b = b + f     else:         b = b + str(h[j][g])         #print b                  # REMOVE this line      a = a + 1                     # Manually increment your WHILE loop   return b </code></pre>  <p><a href=""https://repl.it/@sherylhohman/QuietSubtleNortherncardinals"" rel=""nofollow noreferrer"">FINAL PYTHON CODE on REPL.IT</a> )</p>  <p>FINAL PYTHON RESULT:  </p>  <p><code>/ShowUrl-a_partnerKey.1-a_url.http%253A__5F____5F__2F__5F____5F____5F____5F__2F__5F____5F__www__5F____5F__2E__5F____5F__danielnyc__5F____5F__2E__5F____5F__com__5F____5F__2F__5F____5F__-a_urlKey.915edf949f66c826c.html </code></p>"
38258805	How to write vector tiles gerneated by mapnik into mbtiles file in Javascript/Python?	vector-tiles	2016-07-08 04:10:14.880000 UTC	"<p>I am trying to write a JavaScirpt/Python script to pre-seed vector tiles. My plan is to gather data from a PostGIS database and generate tiles with mapnik, but I don't know how to finally save them into a file.</p>"	"<p>For Javascript, <a href=""https://github.com/mapbox/tippecanoe"" rel=""nofollow"">tippecanoe</a> to generate mbtiles from GeoJSON, which can be easily generated from PostGIS.</p>"
38286757	How do I scrape using Python and BeautifulSoup - Dealing with a Table using Javascript	python|web-scraping|beautifulsoup	2016-07-09 22:07:32.997000 UTC	"<p>I'm trying to learn how to scrape info using Python, and unfortunately i'm having a lot of trouble here. The issue i'm dealing with is that the information I want <em>doesn't seem to be</em> contained in the page source, it only appears after you check one of the boxes.  </p>  <p>The url in question is: <a href=""http://www.ncix.com/openbox/"" rel=""nofollow"">http://www.ncix.com/openbox/</a><br> and for example, i want all the information that appears on the page after you check ""Video Cards (20)"" under ""Categories."" When i look at the page source it appears there's a script called submitformfilter() that looks like this:  </p>  <pre><code>function submitformfilter() { var querystring = ""dofilter=1""; $(""input:checkbox:checked"").each(function() { querystring = querystring + '&amp;'+$(this).attr(""name"")+'='+$(this).val() } ); if($(""#promokw"").val() !="""") { querystring =   querystring+'&amp;promokw='+ $(""#promokw"").val(); } $.getJSON(""http://www.ncix.com/promo/openboxfilter.cfm?jsoncallback=?&amp;""+querystring); } function dosearch() { if($(""#promokw"").val() =="""") { alert(""Please enter the keyword.""); return false; } submitformfilter(); return false; } </code></pre>  <p>I have no idea how to parse the data i want in this case. Any help would be appreciated.  </p>"	"<p>You need to post data, in particular the <code>minorcatid</code> which relates to the video cards:</p>  <pre><code>import requests from bs4 import BeautifulSoup  data = {""dofilter"": ""1"",         ""minorcatid"": """"} </code></pre>  <p># not necessarily essential  but good to at least add a user-agent    headers = {         ""User-Agent"": ""Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.106 Safari/537.36"",         ""X-Requested-With"": ""XMLHttpRequest""}</p>  <pre><code>with requests.Session() as s:     # use bs4 to get the minorcatid programmatically     soup = BeautifulSoup(s.get(""http://www.ncix.com/openbox/"").content, ""lxml"")     _id = soup.select_one(""img[alt^=Video]"")[""src""].rsplit(""/"", 1)[1][:-4]     data[""minorcatid""] = _id     resp = s.post(""http://www.ncix.com/promo/openboxfilter.cfm"", data=data, headers=headers).text      print(resp) </code></pre>  <p>Which would give you the data from the callback, there is more form data but we get away with just passing the id.</p>  <p>You can see in chrome tools exactly what happens when you select the box:</p>  <p><a href=""https://i.stack.imgur.com/CEeh8.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/CEeh8.png"" alt=""enter image description here""></a></p>  <p>The response is the same as you see in the dev console:</p>  <p><a href=""https://i.stack.imgur.com/F51XD.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/F51XD.png"" alt=""enter image description here""></a></p>  <p>We pull the id from the img tag relating to Video Cards by parsing the src attribute from the original page:</p>  <pre><code>&lt;img src=""http://img.ncix.com/categoryimages/108.jpg"" width=""110"" height=""55"" title=""Video Cards"" alt=""Video Cards""&gt; </code></pre>  <p>The data is escaped when we get it so to get it into a nicer format we can decode using <em>unicode_escape</em>, after doing that we can parse the table and get whatever you want, for example the anchor tags than contain the link to each and the description:</p>  <pre><code>In [6]: with requests.Session() as s:    ...:         soup = BeautifulSoup(s.get(""http://www.ncix.com/openbox/"").content, ""lxml"")    ...:         _id = soup.select_one(""img[alt^=Video]"")[""src""].rsplit(""/"", 1)[1][:-4]    ...:         print(_id)    ...:         data[""minorcatid""] = _id    ...:         resp = s.post(""http://www.ncix.com/promo/openboxfilter.cfm"", data=data, headers=headers).content.decode(""unicode_escape"")    ...:         soup2 = BeautifulSoup(resp.replace(r'\""""', ''), ""lxml"")    ...:         for tr in soup2.select(""table tr""):    ...:                 print(tr.select_one(""div a[title^=SKU]""))   ...:            108 &lt;a href=""http://www.ncix.com/detail/gigabyte-radeon-r9-fury-x-42-110438.htm#openbox"" title=""SKU: 110438 Mfr part #: GV%2DR9FURYX%2D4GD%2DB""&gt;GIGABYTE Radeon R9 Fury X 1050MHZ 4GB 1GHz HBM HDMI DISPLAYPORTX3 PCI-E Video Card&lt;/a&gt; &lt;a href=""http://www.ncix.com/detail/gigabyte-geforce-gtx-970-oc-6d-102012.htm#openbox"" title=""SKU: 102012 Mfr part #: GV%2DN970WF3OC%2D4GD""&gt;GIGABYTE GeForce GTX 970 OC 1253 MHz 4GB 7.0GHZ GDDR5 2xDVI HDMI DisplayPort PCI-E Video Card&lt;/a&gt; &lt;a href=""http://www.ncix.com/detail/sapphire-radeon-x1950-pro-dual-96-24458.htm#openbox"" title=""SKU: 24458 Mfr part #: 11095%2D08%2D40R""&gt;Sapphire Radeon X1950 Pro Dual 580MHZ 1GB 1.4GHZ GDDR3 PCI-E 2XDVI-I TV Out Dual GPU Video Card&lt;/a&gt; &lt;a href=""http://www.ncix.com/detail/zotac-geforce-gt-730-zone-54-129574.htm#openbox"" title=""SKU: 129574 Mfr part #: ZT%2D71114%2D20L""&gt;Zotac GeForce GT 730 Zone Edition 1GB 902MHZ 1600MHz DDR3 DirectX 12 DVI + HDMI + VGA Video Card&lt;/a&gt; &lt;a href=""http://www.ncix.com/detail/club3d-radeon-r9-285-royal-43-101460.htm#openbox"" title=""SKU: 101460 Mfr part #: CGAX%2DR92856""&gt;CLUB3D Radeon R9 285 Royal Queen 945MHZ 2GB 5.5GHZ GDDR5 2xDVI HDMI DisplayPort PCI-E Video Card&lt;/a&gt; &lt;a href=""http://www.ncix.com/detail/soltek-refurbished-nvidia-fx5600-agp8x-c6-11182.htm#openbox"" title=""SKU: 11182 Mfr part #: SL%2D5600%2DXD%2DR""&gt;SOLTEK REFURBISHED nVIDIA FX5600 AGP8X /128BIT/128MB DDR *30DAY WARRANTY* CARD ONLY&lt;/a&gt; &lt;a href=""http://www.ncix.com/detail/chaintech-apogee-geforce-6800-gt-ad-12556.htm#openbox"" title=""SKU: 12556 Mfr part #: AA6800G""&gt;Chaintech APOGEE GeForce 6800 GT 256MB DDR3 AGP8X VGA DVI-I TV Out Video Card&lt;/a&gt; &lt;a href=""http://www.ncix.com/detail/sapphire-radeon-x800-gto2-256mb-1f-17166.htm#openbox"" title=""SKU: 17166 Mfr part #: 102%2DA47466%2D11%2DAT%20%2821067%2D01%2D20%29""&gt;Sapphire Radeon X800 GTO2 256MB GDDR3 PCI-E Dual DVI VIVO OEM Video Card&lt;/a&gt; &lt;a href=""http://www.ncix.com/detail/sapphire-radeon-x1600-pro-advantage-de-21813.htm#openbox"" title=""SKU: 21813 Mfr part #: 88%2D8C87%2D11%2DSA""&gt;Sapphire Radeon X1600 Pro Advantage PCI-E 256MB DDR VGA DVI-I TV Out Video Card&lt;/a&gt; &lt;a href=""http://www.ncix.com/detail/sapphire-radeon-hd-5850-725mhz-96-50790.htm#openbox"" title=""SKU: 50790 Mfr part #: 21162%2D00%2D40R""&gt;Sapphire Radeon HD 5850 725MHZ 1GB 4.0GHZ GDDR5 PCI-E Display Port 2XDVI HDMI DirectX 11 Video Card&lt;/a&gt; &lt;a href=""http://www.ncix.com/detail/sapphire-radeon-hd-6570-650mhz-1b-82646.htm#openbox"" title=""SKU: 82646 Mfr part #: 11191%2D03%2D20G""&gt;Sapphire Radeon HD 6570 650MHZ 512MB 4GHZ GDDR5 DVI HDMI PCI-E Video Card&lt;/a&gt; &lt;a href=""http://www.ncix.com/detail/sapphire-radeon-r9-fury-core-93-122143.htm#openbox"" title=""SKU: 122143 Mfr part #: 11247%2D03%2D40G""&gt;Sapphire Radeon R9 Fury Core 1050MHZ 4G HBM PCI-E HDMI/DVI-D Triple DP TRI-X OC+ (UEFI) Graphic Card&lt;/a&gt; &lt;a href=""http://www.ncix.com/detail/bfg-geforce-7600gs-oc-420mhz-cc-18204.htm#openbox"" title=""SKU: 18204 Mfr part #: BFGR76256GSOCE""&gt;BFG GeForce 7600GS OC 420MHZ PCI-E 256MB 800MHZ DDR2 VGA DVI-I HDTV Out Video Card&lt;/a&gt; &lt;a href=""http://www.ncix.com/detail/xfx-geforce-7800gtx-450mhz-256mb-f4-15636.htm#openbox"" title=""SKU: 15636 Mfr part #: PV%2DT70F%2DUNF7""&gt;XFX GeForce 7800GTX 450MHZ 256MB 256BIT 1.25GHZ DDR3 PCI-E Dual DVI-I TV-OUT Video Card&lt;/a&gt; &lt;a href=""http://www.ncix.com/detail/xfx-geforce-7600-gs-400mhz-6c-21791.htm#openbox"" title=""SKU: 21791 Mfr part #: PVT73PYDJ3""&gt;XFX GeForce 7600 GS 400MHZ PCI-E 512MB 128BIT 533MHZ DDR2 VGA DVI-I HDTV Out Video Card&lt;/a&gt; &lt;a href=""http://www.ncix.com/detail/xfx-radeon-r7-260x-dual-74-95523.htm#openbox"" title=""SKU: 95523 Mfr part #: R7%2D260X%2DCDF4""&gt;XFX Radeon R7 260X Dual Fan OC 1.1GHZ 2GB GDDR5 2xDVI HDMI DisplayPort PCI-E Video Card R7-260X-CDF4&lt;/a&gt; &lt;a href=""http://www.ncix.com/detail/evga-geforce-gtx-470-superclocked-8c-53391.htm#openbox"" title=""SKU: 53391 Mfr part #: 012%2DP3%2D1475%2DAR""&gt;EVGA GeForce GTX 470 SUPERCLOCKED+ 625MHZ Fermi 1280MB 3.4GHZ GDDR5 2XDVI Mini-HDMI PCI-E Video Card&lt;/a&gt; &lt;a href=""http://www.ncix.com/detail/evga-e-geforce-8600gt-540mhz-256mb-31-23715.htm#openbox"" title=""SKU: 23715 Mfr part #: 256%2DP2%2DN751%2DTR""&gt;EVGA E-GEFORCE 8600GT 540MHZ 256MB 1.4GHZ GDDR3 PCI-E Dual DVI-I HDTV Out DIRECTX10 Video Card&lt;/a&gt; &lt;a href=""http://www.ncix.com/detail/evga-e-geforce-8600gt-540mhz-512mb-2e-26168.htm#openbox"" title=""SKU: 26168 Mfr part #: 512%2DP2%2DN756%2DTR""&gt;EVGA E-GEFORCE 8600GT 540MHZ 512MB 800HZ DDR2 PCI-E VGA DVI-I HDTV Out DIRECTX10 Video Card&lt;/a&gt; &lt;a href=""http://www.ncix.com/detail/evga-e-geforce-7600-gt-co-13-17949.htm#openbox"" title=""SKU: 17949 Mfr part #: 256%2DP2%2DN555""&gt;EVGA E-GEFORCE 7600 GT CO Superclocked 580MHZ PCI-E 256MB 1.5GHZ GDDR3 Dual DVI HDTV Out Video Card&lt;/a&gt; &lt;a href=""http://www.ncix.com/detail/evga-geforce-gtx-980-4gb-5e-102000.htm#openbox"" title=""SKU: 102000 Mfr part #: 04G%2DP4%2D2982%2DKR""&gt;EVGA GeForce GTX 980 4GB Super Clocked GAMING Silent Cooling 1241MHZ Boost 1342MHZ Graphics Card&lt;/a&gt; &lt;a href=""http://www.ncix.com/detail/gigabyte-geforce-gtx-960-g1-73-108014.htm#openbox"" title=""SKU: 108014 Mfr part #: GV%2DN960G1%20GAMING%2D4GD""&gt;GIGABYTE GeForce GTX 960 G1 1307MHZ 4GB 7.0GHZ GDDR5 DVI HDMI 3xDisplayPort PCI-E Video Card&lt;/a&gt; &lt;a href=""http://www.ncix.com/detail/powercolor-radeon-hd-7870-pcs-70-78372.htm#openbox"" title=""SKU: 78372 Mfr part #: AX7870%202GBD5%2D2DHPPV3E""&gt;Powercolor Radeon HD 7870 PCS+ MYST.(TAHITI LE) 2GB 6Gbps GDDR5 DVI HDMI 2XMINIDP PCI-E Video Card&lt;/a&gt; &lt;a href=""http://www.ncix.com/detail/powercolor-radeon-hd-3850-pcs-f8-29730.htm#openbox"" title=""SKU: 29730 Mfr part #: AG3850%20512MD3%2DP""&gt;Powercolor Radeon HD 3850 PCs 668MHZ 512MB 1.65GHZ GDDR3 AGP 2XDVI HDTV Out Video Card&lt;/a&gt; &lt;a href=""http://www.ncix.com/detail/msi-geforce-gtx-580-twin-79-58685.htm#openbox"" title=""SKU: 58685 Mfr part #: N580GTX%20Twin%20Frozr%20II%2FOC""&gt;MSI GeForce GTX 580 Twin Frozr II OC 800MHZ 1536MB GDDR5 2xDVI Mini-HDMI PCI-E DirectX 11 Video Card&lt;/a&gt; &lt;a href=""http://www.ncix.com/detail/gigabyte-radeon-hd-rx3870-775mhz-12-27208.htm#openbox"" title=""SKU: 27208 Mfr part #: GV%2DRX387512H%2DB""&gt;GIGABYTE Radeon HD RX3870 775MHZ 512MB 2.4GHZ GDDR4 Dual DVI-I HDCP HDTV Out PCI-E Video Card&lt;/a&gt; &lt;a href=""http://www.ncix.com/detail/gigabyte-radeon-hd-r7-240-bc-90927.htm#openbox"" title=""SKU: 90927 Mfr part #: GV%2DR724OC%2D2GI%20REV2%2E0""&gt;GIGABYTE Radeon HD R7 240 OC 900MHZ 2GB 1.8GHZ GDDR3 DVI HDMI VGA PCI-E Video Card&lt;/a&gt; &lt;a href=""http://www.ncix.com/detail/gigabyte-geforce-gtx-980-ti-ff-121258.htm#openbox"" title=""SKU: 121258 Mfr part #: GV%2DN98TXTREME%20W%2D6GD""&gt;GIGABYTE GeForce GTX 980 Ti Xtreme Waterforce 1317MHZ 6GB 7.2GHZ GDDR5 HDMI/3XDPORT/PCI-E Video Card&lt;/a&gt; &lt;a href=""http://www.ncix.com/detail/ati-radeon-x1900xtx-650mhz-512mb-75-17528.htm#openbox"" title=""SKU: 17528 Mfr part #: 100%2D435805""&gt;ATI Radeon X1900XTX 650MHZ 512MB 256BIT 1.55GHZ GDDR3 PCI-E Dual DVI-I VIVO HDTV Video Card&lt;/a&gt; &lt;a href=""http://www.ncix.com/detail/asus-geforce-8800gtx-575mhz-768mb-d2-21403.htm#openbox"" title=""SKU: 21403 Mfr part #: EN8800GTX%2FHTDP%2F768M""&gt;ASUS GeForce 8800GTX 575MHZ 768MB 1.8GHZ GDDR3 Dual DVI-I HDTV Out DIRECTX10 Video Card&lt;/a&gt; &lt;a href=""http://www.ncix.com/detail/asus-geforce-gtx-750-oc-84-94415.htm#openbox"" title=""SKU: 94415 Mfr part #: GTX750%2DPHOC%2D1GD5""&gt;ASUS GeForce GTX 750 OC 1GB GDDR5 PCI-E Video Card&lt;/a&gt; &lt;a href=""http://www.ncix.com/detail/asus-geforce-gtx-550-ti-25-59650.htm#openbox"" title=""SKU: 59650 Mfr part #: ENGTX550%20TI%20DC%20TOP%2FDI%2F1GD5""&gt;ASUS GeForce GTX 550 Ti DC Top 975MHZ 1GB 4.1GHZ GDDR5 DVI HDMI VGA PCI-E Video Card&lt;/a&gt; &lt;a href=""http://www.ncix.com/detail/asus-geforce-gt-520-700mhz-54-70010.htm#openbox"" title=""SKU: 70010 Mfr part #: ENGT520SL%2FDI%2F2GD3%28LP%29""&gt;ASUS GeForce GT 520 700MHZ 2GB 1.2GHZ DDR3 Low Profile DVI HDMI PCI-E DirectX 11 Video Card&lt;/a&gt; &lt;a href=""http://www.ncix.com/detail/asus-geforce-gtx-980-ti-1a-111058.htm#openbox"" title=""SKU: 111058 Mfr part #: STRIX%2DGTX980TI%2DDC3OC%2D6GD5%2DGAMING""&gt;ASUS GeForce GTX 980 Ti Strix 1317MHZ 6GB 7.2GHZ GDDR5 DVI HDMI 3XDISPLAYPORT PCI-E Video Card&lt;/a&gt; </code></pre>  <p>All data contains is the necessary from data we need to post, you can see what requests does with it by looking at the body of the request:</p>  <pre><code>In [8]: with requests.Session() as s:    ...:         soup = BeautifulSoup(s.get(""http://www.ncix.com/openbox/"").content, ""lxml"")    ...:         _id = soup.select_one(""img[alt^=Video]"")[""src""].rsplit(""/"", 1)[1][:-4]    ...:         data[""minorcatid""] = _id    ...:         resp = s.post(""http://www.ncix.com/promo/openboxfilter.cfm"", data=data, headers=headers)    ...:         req = resp.request    ...:         print(req.body)    ...:       dofilter=1&amp;minorcatid=108 </code></pre>  <p>If anything needs to be encoded requests will take care of that for you.</p>"
38334715	Python/BeautifulSoup with JavaScript source	javascript|python|beautifulsoup	2016-07-12 16:43:42.393000 UTC	"<p>First of all, I am new to Python and BeautifulSoup. So forgive me if I am using the wrong terminology.</p>  <p>I am encountering an issue where when I inspect the element, I was able to find it, but when I go to 'view source', it wasn't there, and it seems that data was pulled via javascript and thus it may be dynamic.</p>  <p>My question is thus, how do I incorporate the data(source/elements/tag) that's 'uploaded' by javascript?</p>  <p>So far, I have the code below. I wasn't able to get the URL for each 'search'</p>  <pre><code>import urllib import urllib.request from bs4 import BeautifulSoup import csv  rootURL=""http://www.homestead.ca""  def HomeStead2(URL):     thePage = urllib.request.urlopen(URL)     soup = BeautifulSoup(thePage, ""html.parser"")     return soup  soup = HomeStead2(rootURL)  for dropdownlist in soup.find(""ul"", {""class"":""nav navbar-nav primary""}).find('ul').findAll('a'):  """"""NOTHING IS WORKING FROM HERE ONWARDS WHEN I TRY TO GET THE HREF""""""     citySoup = HomeStead2(rootURL + dropdownlist.get('href'))     for btnPreview in citySoup.find(""div"", {""class"":""search extended-search""}).findAll('li'):         try:             for ApartmentLink in btnPreview.findAll(""div"", {""class"":""property-container""}):                 print(ApartmentLink)         except:             print('skip') </code></pre>  <p><a href=""https://i.stack.imgur.com/ArCTv.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/ArCTv.png"" alt=""enter image description here""></a></p>"	"<p>You can do it all without selenium, once you visit each apartment url the data is retrieved from an ajax call to an api, all we need is the <em>city-id</em>:</p>  <pre><code>from bs4 import BeautifulSoup from urllib.parse import urljoin  root = ""http://www.homestead.ca""  data = {'keyword': 'false', 'max_bed': '100', 'geocode': '',         'min_rate': '0', 'offset': '0', 'max_rate': '4000',         'show_custom_fields': 'true', 'limit': '50', ''                                                      'pet_friendly': '', 'city_id': '', 'amenities': '',         'client_id': '6', 'max_bath': '10',         'auth_token': 'sswpREkUtyeYjeoahA2i',         'count': 'false', 'min_bath': '0',         'order': 'max_rate ASC, min_rate ASC, min_bed ASC, max_bath ASC',         'city_ids': '', 'region': '',         'property_types': 'low-rise-apartment,mid-rise-apartment,high-rise-apartment,luxury-apartment,townhouse,house,multi-unit-house,single-family-home,duplex,tripex,semi',         'min_bed': '-1',         'show_promotions': 'true'}  get = ""http://api.theliftsystem.com/v2/search"" with requests.Session() as s:     r = s.get(root)     soup = BeautifulSoup(r.content, ""lxml"")     lis = soup.select(""ul.child-pages.dropdown-menu li"")     for li in lis:         city_id = li[""data-city-id""]         data[""city_id""] = city_id         p = s.get(get, params=data)         print(p.json()) </code></pre>  <p>You can modify the data to match whatever query you want.</p>  <p>The output will be in json format like:</p>  <pre><code>[{'building_header': '', 'office_hours': '', 'name': 'North Park Tower', 'matched_suite_names': ['Bachelor', 'One Bedroom', 'Two Bedroom'], 'matched_beds': ['0', '1', '2'], 'id': 309, 'statistics': {'suites': {'rates': {'average': 950.0, 'max': 1275.0, 'min': 625.0}, 'square_feet': {'average': 0.0, 'max': '0.0', 'min': '0.0'}, 'bedrooms': {'average': '1.0', 'max': 2, 'min': 0}, 'bathrooms': {'average': 1.0, 'max': 1.0, 'min': 1.0}}}, 'geocode': {'longitude': '-80.2605725', 'latitude': '43.1703624', 'distance': None}, 'photo': '1443018148_2.jpg', 'min_availability_date': '', 'address': {'intersection': '', 'country_code': 'CAN', 'province_code': 'ON', 'address': '325 North Park Street', 'postal_code': 'N3R 2X4', 'province': 'Ontario', 'country': 'Canada', 'neighbourhood': '', 'city_id': 332, 'city': 'Brantford'}, 'permalink': 'http://www.homestead.ca/apartments/325-north-park-street-brantford', 'pet_friendly': True, 'thumbnail_path': 'http://s3.amazonaws.com/lws_lift/homestead/images/gallery/256/1443018148_2.jpg', 'details': {'location': '', 'suite': '', 'features': '', 'overview': ""Located on North Park Street and Memorial Avenue,this quiet building is within walking distance of the following: - Zehrs Plaza, North Park Plaza, Shoppers Drug Mart, Zehrs Grocery Store, Zellers, Pet Store, Party Supply Store, furniture store, variety store, Black's Photography, paint shop and veterinary clinic\xa0  - Restaurants and coffee shops\xa0  - Wayne Gretzky Recreational Arena\xa0  - Medical Clinic,Shoppers Home Health Care Clinic and Pharmacy\xa0  - Catholic Elementary School\xa0  - On bus route ""}, 'availability_status_label': 'Available Now', 'availability_status': 1, 'contact': {'email': 'rentals@homestead.ca', 'fax': '(519) 752-6855', 'alt_phone': '', 'name': '', 'phone': '519-752-3596', 'alt_extension': '', 'extension': ''}, 'parking': {'indoor': '', 'additional': '', 'outdoor': ''}, 'property_type': 'High-rise-apartment', 'website': {'url': '', 'title': '', 'description': ''}, 'availability_count': 6, 'client': {'email': 'bcadieux@homestead.ca', 'phone': '613-546-3146', 'id': 6, 'website': 'www.homestead.ca', 'name': 'Homestead Land Holdings'}, 'promotion': {'featured': 0}, 'photo_path': 'http://s3.amazonaws.com/lws_lift/homestead/images/gallery/full/1443018148_2.jpg'}, {'building_header': '', 'office_hours': '', 'name': 'Westgate Apartments', 'matched_suite_names': ['Bachelor', 'One Bedroom', 'Two Bedroom'], 'matched_beds': ['0', '1', '2'], 'id': 310, 'statistics': {'suites': {'rates': {'average': 975.0, 'max': 1300.0, 'min': 650.0}, 'square_feet': {'average': 0.0, 'max': '0.0', 'min': '0.0'}, 'bedrooms': {'average': '1.0', 'max': 2, 'min': 0}, 'bathrooms': {'average': 1.0, 'max': 1.0, 'min': 1.0}}}, 'geocode': {'longitude': '-80.2482991', 'latitude': '43.1733242', 'distance': None}, 'photo': '1443017488_1.jpg', 'min_availability_date': '', 'address': {'intersection': '', 'country_code': 'CAN', 'province_code': 'ON', 'address': '661 West Street', 'postal_code': 'N3R 6W9', 'province': 'Ontario', 'country': 'Canada', 'neighbourhood': '', 'city_id': 332, 'city': 'Brantford'}, 'permalink': 'http://www.homestead.ca/apartments/661-west-street-brantford', 'pet_friendly': True, 'thumbnail_path': 'http://s3.amazonaws.com/lws_lift/homestead/images/gallery/256/1443017488_1.jpg', 'details': {'location': '', 'suite': '', 'features': '', 'overview': 'Located in the North end of Brantford, Westgate Tower is in an area that resembles a city within a city. There are a variety of banks, grocery stores, drug stores, malls, a wide selection of fast food, fine dining restaurants and an after hours medical centre, within waking distance.'}, 'availability_status_label': 'Available Now', 'availability_status': 1, 'contact': {'email': 'rentals@homestead.ca', 'fax': '(519) 751-0379', 'alt_phone': '', 'name': '', 'phone': '519-751-3867', 'alt_extension': '', 'extension': ''}, 'parking': {'indoor': '', 'additional': '', 'outdoor': ''}, 'property_type': 'High-rise-apartment', 'website': {'url': '', 'title': '', 'description': ''}, 'availability_count': 6, 'client': {'email': 'bcadieux@homestead.ca', 'phone': '613-546-3146', 'id': 6, 'website': 'www.homestead.ca', 'name': 'Homestead Land Holdings'}, 'promotion': {'featured': 0}, 'photo_path': 'http://s3.amazonaws.com/lws_lift/homestead/images/gallery/full/1443017488_1.jpg'}, {'building_header': '', 'office_hours': '', 'name': 'Dornia Manor', 'matched_suite_names': ['One Bedroom', 'Two Bedroom', 'Three Bedroom'], 'matched_beds': ['1', '2', '3'], 'id': 308, 'statistics': {'suites': {'rates': {'average': 1124.5, 'max': 1350.0, 'min': 899.0}, 'square_feet': {'average': 0.0, 'max': '0.0', 'min': '0.0'}, 'bedrooms': {'average': '2.25', 'max': 3, 'min': 1}, 'bathrooms': {'average': 1.375, 'max': 2.0, 'min': 1.0}}}, 'geocode': {'longitude': '-80.2584034', 'latitude': '43.1706331', 'distance': None}, 'photo': '1443017947_1.jpg', 'min_availability_date': '', 'address': {'intersection': '', 'country_code': 'CAN', 'province_code': 'ON', 'address': '321 Fairview Drive', 'postal_code': 'N3R 2X6', 'province': 'Ontario', 'country': 'Canada', 'neighbourhood': '', 'city_id': 332, 'city': 'Brantford'}, 'permalink': 'http://www.homestead.ca/apartments/321-fairview-drive-brantford', 'pet_friendly': True, 'thumbnail_path': 'http://s3.amazonaws.com/lws_lift/homestead/images/gallery/256/1443017947_1.jpg', 'details': {'location': '', 'suite': '', 'features': '', 'overview': 'Dornia Manor is a quiet, ninety-two unit apartment building located in the North end of Brantford. We offer one, two and three bedroom units and one penthouse suite. The building is located in close proximity to many major services such as banking, shopping, health services, recreational facilities, beauty shops, dry cleaners, schools and churches. There is a bus stop at the front door and highway 403 is within minutes.'}, 'availability_status_label': 'Available Now', 'availability_status': 1, 'contact': {'email': 'rentals@homestead.ca', 'fax': '(519) 752-6855', 'alt_phone': '', 'name': '', 'phone': '519-752-3596', 'alt_extension': '', 'extension': ''}, 'parking': {'indoor': '', 'additional': '', 'outdoor': ''}, 'property_type': 'High-rise-apartment', 'website': {'url': '', 'title': '', 'description': ''}, 'availability_count': 8, 'client': {'email': 'bcadieux@homestead.ca', 'phone': '613-546-3146', 'id': 6, 'website': 'www.homestead.ca', 'name': 'Homestead Land Holdings'}, 'promotion': {'featured': 0}, 'photo_path': 'http://s3.amazonaws.com/lws_lift/homestead/images/gallery/full/1443017947_1.jpg'}] </code></pre>"
38341829	Is there a way to get which group is the one that matched in a regex. Prefer Javascript but Python OK too.	javascript|python	2016-07-13 02:43:31.563000 UTC	"<p>Is there a way to get which group matches a regex?  </p>  <p>for example (using js but could be re-expressed in Python etc):</p>  <p>`</p>  <pre><code>myRegex = /(this)|(that)|(other)/ig    //describes 3 group captures // The groups number (this==0, that==1, other==2)  --&gt; I'd like to get the capturing group number returned in the matches.  myString = ""this is awesome cause that is the other thing this needs""  //result desired getMyMatchesByCaptureIndex(myRegex,myString)  // function I'd like help with  //returns a result like this... [   //[indexOfGroup, indexOfBeginningOfMatch, lengthOfMatch]...   [0, 0,  4],     //a group 0 match at position 0  length of 4   [1, 22, 4],     //a group 1 match at position 22 length of 4   [2, 34, 4],     //a group 2 match at position 34 length of 4   [0, 46, 5]      //a group 0 match at position 46 length of 5 ] </code></pre>  <p>`</p>  <p>Prefer Javascript or Python if possible and allow more than 9 groups.  My simplified example could include more complex regex constructs inside the parenthesis but I used strings just for simplicity of asking.  (e.g. instead of (this) could be (t[0-9][A-F]...) etc)  so I'd really like this to be a regex or parser centric answer if possible!  </p>  <p>Thanks much!</p>"	"<p>We can use <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp/exec"" rel=""nofollow""><code>RegExp.exec</code></a> and <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp/lastIndex"" rel=""nofollow""><code>RegExp.lastIndex</code></a> to get all the information in one go:</p>  <pre><code>function matchesByCaptureIndex(regex, text) {   var match = null, result = [];   while (match = regex.exec(text)) {     var matchedGroup = match.slice(1).indexOf(match[0]);     var matchLength = match[0].length;     var startIndex = regex.lastIndex - matchLength;     result.push([matchedGroup, startIndex, matchLength]);   }   return result; } </code></pre>"
38410620	Python get web page contents that have javascripts - maybe Selenium	javascript|python|html|selenium	2016-07-16 11:15:32.357000 UTC	"<p>I need to analyse web page contents. Page has javascrips.  Can you advice on better way than using Selenium?</p>  <p>If not: page when loaded in browser has elements:</p>  <pre><code>&lt;div class=""js-container""&gt;    &lt;table class=""zebra"" style=""width: 100%;""&gt;         &lt;tbody&gt;&lt;tr&gt;             &lt;th&gt;A&lt;/th&gt;             &lt;th&gt;B&lt;/th&gt;             &lt;th&gt;C&lt;/th&gt;         &lt;/tr&gt;             &lt;tr&gt;                 &lt;td&gt;A1&lt;/td&gt;                 &lt;td&gt;A2&lt;/td&gt;                 &lt;td&gt;                     &lt;a href=""http://X"" style=""color: black""&gt;T1&lt;/a&gt;                 &lt;/td&gt;             &lt;/tr&gt;             &lt;tr&gt;                 ....             &lt;/tr&gt; .... </code></pre>  <p>I need to read a table, element by element. I run for example:</p>  <p><code>myList = myDriver.find_elements_by_class_name(""js-container"")</code>.</p>  <p>Then how do I get inner elements of ""js-container"" object?</p>  <p>The only element resulting myList has is: <code>print (myList[0])</code>:</p>  <pre><code>&lt;selenium.webdriver.remote.webelement.WebElement (session=""61238"", element=""{71293}"")&gt; </code></pre>"	"<p>Maybe you need BeautifulSoup - feeding to it Selenium driver.page_source. It is a python tool and it can build a tree based on the web page. <a href=""https://www.crummy.com/software/BeautifulSoup/bs4/doc/"" rel=""nofollow"">BeautifulSoup document</a></p>"
38410620	Python get web page contents that have javascripts - maybe Selenium	javascript|python|html|selenium	2016-07-16 11:15:32.357000 UTC	"<p>I need to analyse web page contents. Page has javascrips.  Can you advice on better way than using Selenium?</p>  <p>If not: page when loaded in browser has elements:</p>  <pre><code>&lt;div class=""js-container""&gt;    &lt;table class=""zebra"" style=""width: 100%;""&gt;         &lt;tbody&gt;&lt;tr&gt;             &lt;th&gt;A&lt;/th&gt;             &lt;th&gt;B&lt;/th&gt;             &lt;th&gt;C&lt;/th&gt;         &lt;/tr&gt;             &lt;tr&gt;                 &lt;td&gt;A1&lt;/td&gt;                 &lt;td&gt;A2&lt;/td&gt;                 &lt;td&gt;                     &lt;a href=""http://X"" style=""color: black""&gt;T1&lt;/a&gt;                 &lt;/td&gt;             &lt;/tr&gt;             &lt;tr&gt;                 ....             &lt;/tr&gt; .... </code></pre>  <p>I need to read a table, element by element. I run for example:</p>  <p><code>myList = myDriver.find_elements_by_class_name(""js-container"")</code>.</p>  <p>Then how do I get inner elements of ""js-container"" object?</p>  <p>The only element resulting myList has is: <code>print (myList[0])</code>:</p>  <pre><code>&lt;selenium.webdriver.remote.webelement.WebElement (session=""61238"", element=""{71293}"")&gt; </code></pre>"	"<p>Selenium can do this just fine.</p>  <pre><code>tableDescendants = myDriver.find_elements_by_css_selector(""table.zebra *"") for tableDescendant in tableDescendants     outer = tableDescendant.get_attribute(""outerHTML"")     inner = tableDescendant.get_attribute(""innerHTML"")     print outer[:outer.find(inner)] </code></pre>  <p>This code grabs all descendants of the <code>TABLE</code> tag, removes everything after the start of the <code>innerHTML</code> string and prints the result. <code>outerHTML</code> contains the element itself and all descendants and <code>innerHTML</code> contains only the descendants. So, to get only the HTML of the element itself, we need to remove <code>innerHTML</code> from <code>outerHTML</code>.</p>"
38483378	How to AES decrypt data encrypted in Javascript with Python?	javascript|python|aes|pycrypto|cryptojs	2016-07-20 13:58:20.233000 UTC	"<p>I have a javascript code from a page that looks like</p> <pre><code>var link = '{&quot;ct&quot;:&quot;AAQz1rUDqp849MRxu0tqGRGvPcLzVG24xa5zbYxpwVHH6Z2p95xPPzNhMIRMcaTPvijE71RQU1X3cQhtnXdRScA6UBiLWNs9vMul2gldnMTpT92sDYHl+hKBGy2dR22Un7ElToipSqeqRrwhEK8T9ROMChrBw8i7JOICpOYoVhqDB72BH2RG\/PqjRqsKittES5BVhTTY9cs+zQI0rM+FQA62bVCL57P3RD+E+aWJJLjUvoXBqct6Jc5W7li9mk9udgn9rPKkCbXSCvwIxcWS5C1kw4uSO7y0IlovaTWLAIw5nY0l4REjbC1wPWrtxDWLlr8J+\/sQdDF+P61VHz6yiC+w56QLDjVwz4kBl3r3uP\/VZ7kUuLwWHSHnbmmXv31f&quot;,&quot;iv&quot;:&quot;feae762ac889376169708872d9676319&quot;,&quot;s&quot;:&quot;9b2328e8a4ee2717&quot;}'; var msg = &quot;f12c8b59265dc1e898135211cc30be49&quot;;     var finalUrl = JSON.parse(CryptoJS.AES.decrypt(link, msg, {format: CryptoJSAesJson}).toString(CryptoJS.enc.Utf8)); </code></pre> <p>I figure that ct is encrypted msg, s is for Salt and iv is iv</p> <p>I am trying to decode the finalUrl with python.</p> <pre><code>AES = AESDecrypter() decryptor = AES.new(s, AES.MODE_CBC, IV=iv) dec = decryptor.decrypt(ct) </code></pre> <p>I know it is not going to work as I can't figure how to use</p> <pre><code>var msg = &quot;f12c8b59265dc1e898135211cc30be49&quot; </code></pre> <p>in Python. Also figured that <code>CryptoJSAesJson</code> may have some extra function. Someone please show me steps how I can retrieve the finalUrl with Python with the data given here. Any suggestion is really appreciated. Apology for my poor coding knowledge.</p>"	"<p>The actual AES key is derived by the following procedure (derived from <a href=""https://stackoverflow.com/a/27582253/5722339"">https://stackoverflow.com/a/27582253/5722339</a>):</p> <ol start=""0""> <li><p>Required libraries.</p> <pre><code>import base64; import hashlib; from Crypto.Cipher import AES; </code></pre> </li> <li><p>Decode the provided inputs to raw bytes from hex or base64 string.</p> <pre><code>ct = base64.b64decode(&quot;AAQz1rUDqp849MRx ... bmmXv31f&quot;); iv = bytes.fromhex(&quot;feae762ac889376169708872d9676319&quot;); salt = bytes.fromhex(&quot;9b2328e8a4ee2717&quot;);  # In your case, the pass phrase is NOT a hex-encoded byte array. #  It is directly used as bytes. pass_phrase = b&quot;f12c8b59265dc1e898135211cc30be49&quot;; </code></pre> </li> <li><p>Hash the pass phrase and the salt with MD5 digest to derive the first 128 bits (16 bytes) of the key.</p> <pre><code>md = hashlib.md5(); md.update(pass_phrase); md.update(salt); cache0 = md.digest(); </code></pre> </li> <li><p>Hash the previously derived 16 bytes, followed by the pass phrase and the salt with MD5 digest again to derive the latter 128 bits (16 bytes) of the key.</p> <pre><code>md = hashlib.md5(); md.update(cache0); md.update(pass_phrase); md.update(salt); cache1 = md.digest(); </code></pre> </li> <li><p>Concatenate the two byte arrays to acquire the 256 bits AES key.</p> <pre><code>key = cache0 + cache1; </code></pre> </li> <li><p>Finally, decrypt the cipher text using 256 bits AES with CBC mode.</p> <pre><code>cipher = AES.new(key, AES.MODE_CBC, iv); result = cipher.decrypt(ct); </code></pre> <p>The decrypted data is now stored in the <code>result</code> as a byte array.</p> </li> </ol> <p>Please node that while the cipher text <code>ct</code> in your sample input is base64 encoded, and the <code>salt</code> and <code>iv</code> are both hex encoded, the pass phrase is NOT hex encoded (although it looks like that).</p> <p>Also you might need to un-pad the output first before using it. The un-pad function can be achieved by using lambda: (solution from <a href=""https://stackoverflow.com/a/12525165/5722339"">https://stackoverflow.com/a/12525165/5722339</a>)</p> <pre><code>unpad = lambda s : s[:-ord(s[len(s)-1:])]; </code></pre> <p>The output of your sample input is: <code>http:\/\/pmd.dittotv3.com.edgesuite.net\/draco\/shows\/Zee_Bangla\/Dweep_Jwele_Jai\/July\/19072016\/Webisode\/Dweep_Jwele_Jai_Webisode_19072016_100.mp4?key1=ozee.com&amp;hdnea=st=1469018324~exp=1469020124~acl=%2F%2A~hmac=07e8cf2b49f51899f60b129f3a99eb792f45e779fbdae94d4a70215398fc590d</code></p>"
38488190	from Javascript to Python on click	javascript|django|highcharts	2016-07-20 18:29:08.973000 UTC	"<p>I'm working on a feature for a heatmap. When I click on a cell in the chart, a boxplot will pop up, and I am using django and highcharts models for the implementation.</p>  <p>Currently, I am stuck with the passing of variable from a javascript function to the python server side. I know for django there is a post and get method, but I don't have a form in this case, only the clicks. Whenever I click on a cell in the heatmap, I would like to pass the x-label and y-label strings to the python server, process and grab data in python, and then feed the data back to the pop-up boxplot. Thank you !</p>  <pre><code>$(function () {  $('#container').highcharts({      chart: {         type: 'heatmap'     },      plotOptions: {         series: {         events:{         click: function cellClick() {             var $div = $('&lt;div&gt;&lt;/div&gt;')             .dialog({                  title: this.name,                  width: 400,                  height: 300             });              window.chart = new Highcharts.Chart({                  chart: {                  renderTo: $div[0],                  type: 'boxplot'             },              series: [{                  name: 'Observations',                  data: [               //here I would like to insert data passed from the python view                // on click of a cell in the heatmap                   ],              }, {                 name: 'Outliers',                 color: Highcharts.getOptions().colors[0],                 type: 'scatter',                 data: [//data from python view],              }]            })                 }             }         }     },      xAxis: {         opposite: true,         categories: label,         labels:{                 formatter: function(){                 //I would like to pass factor_x to the server(python) on click                 //of a cell in the heatmap                     var factor_x = this.value;                      if (factor_x.length &gt; 6){                         return factor_x.substr(0,6) ;                     }else{                          return factor_x;                         }                 }             },     },       yAxis: {         categories: label2,         labels:{                 formatter: function(){                 // pass factor_y to the server side on-click                     var factor_y = this.value;                     if (factor_y.length &gt; 7){                         return factor_y.substr(0,7) + ""..."";                     }else{                          return factor_y;                     }                 }             },     },      series: [{         name: 'Factor Correlation',         data: correlation,     }]   }); }); </code></pre>"	"<p>The most secure way to handle this with Django is to pass the CSRF token along with each AJAX request you post data within. The easiest way to do this is to put this on your page (it appears you are using jQuery so this should work as is):</p>  <pre><code>function getCookie(name) {     var cookieValue = null;     if (document.cookie &amp;&amp; document.cookie != '') {         var cookies = document.cookie.split(';');         for (var i = 0; i &lt; cookies.length; i++) {             var cookie = jQuery.trim(cookies[i]);             // Does this cookie string begin with the name we want?             if (cookie.substring(0, name.length + 1) == (name + '=')) {                 cookieValue = decodeURIComponent(cookie.substring(name.length + 1));                 break;             }         }     }     return cookieValue; }  function csrfSafeMethod(method) {     // these HTTP methods do not require CSRF protection     return (/^(GET|HEAD|OPTIONS|TRACE)$/.test(method)); }  var csrftoken = getCookie('csrftoken'); $.ajaxSetup({     crossDomain: false, // obviates need for sameOrigin test     beforeSend: function(xhr, settings) {         if (!csrfSafeMethod(settings.type)) {             xhr.setRequestHeader(""X-CSRFToken"", csrftoken);         }     } }); </code></pre>  <p>What this does is grab the CSRF cookie that Django typically stores on the browser when someone accesses a form and send it along with the AJAX requests.</p>  <p>This means you will also need something like this on the page somewhere:</p>  <pre><code>&lt;form&gt;     {% csrf_token %} &lt;/form&gt; </code></pre>  <p>On your view function, you will want the <code>csrf_protect</code> decorator. You can also use <code>require_post</code> to only accept POST data on this view:</p>  <pre><code>@require_post @csrf_protect def my_view(request):     pass </code></pre>  <p>The most ideal way to handle the functionality you are looking for is when you need a plot, post it to a view like the above and then have another view for getting the latest results. This will also work better if multiple people can mess with it at the same time.</p>  <p>In jQuery that would mean <a href=""https://api.jquery.com/jquery.post/"" rel=""nofollow"">using something like</a>:</p>  <pre><code>$.post('/my_view/', some_json_data); </code></pre>  <p>And to collect the data you would use:</p>  <pre><code>$.get('/my_view_updates/', success: somefunctiontoparseresponse); </code></pre>"
38488190	from Javascript to Python on click	javascript|django|highcharts	2016-07-20 18:29:08.973000 UTC	"<p>I'm working on a feature for a heatmap. When I click on a cell in the chart, a boxplot will pop up, and I am using django and highcharts models for the implementation.</p>  <p>Currently, I am stuck with the passing of variable from a javascript function to the python server side. I know for django there is a post and get method, but I don't have a form in this case, only the clicks. Whenever I click on a cell in the heatmap, I would like to pass the x-label and y-label strings to the python server, process and grab data in python, and then feed the data back to the pop-up boxplot. Thank you !</p>  <pre><code>$(function () {  $('#container').highcharts({      chart: {         type: 'heatmap'     },      plotOptions: {         series: {         events:{         click: function cellClick() {             var $div = $('&lt;div&gt;&lt;/div&gt;')             .dialog({                  title: this.name,                  width: 400,                  height: 300             });              window.chart = new Highcharts.Chart({                  chart: {                  renderTo: $div[0],                  type: 'boxplot'             },              series: [{                  name: 'Observations',                  data: [               //here I would like to insert data passed from the python view                // on click of a cell in the heatmap                   ],              }, {                 name: 'Outliers',                 color: Highcharts.getOptions().colors[0],                 type: 'scatter',                 data: [//data from python view],              }]            })                 }             }         }     },      xAxis: {         opposite: true,         categories: label,         labels:{                 formatter: function(){                 //I would like to pass factor_x to the server(python) on click                 //of a cell in the heatmap                     var factor_x = this.value;                      if (factor_x.length &gt; 6){                         return factor_x.substr(0,6) ;                     }else{                          return factor_x;                         }                 }             },     },       yAxis: {         categories: label2,         labels:{                 formatter: function(){                 // pass factor_y to the server side on-click                     var factor_y = this.value;                     if (factor_y.length &gt; 7){                         return factor_y.substr(0,7) + ""..."";                     }else{                          return factor_y;                     }                 }             },     },      series: [{         name: 'Factor Correlation',         data: correlation,     }]   }); }); </code></pre>"	"<p>Okay so what you can do is write click functions for the cells of heatmaps.</p>  <p>In the onclick functions, you'll get the value of that cell by using the ""this"" variable in javascript, as it tells you what container or DOM element you clicked.</p>  <p>So now $(this).data or whatever attribute of that element has the required information (which you can check in your browser on your console by inspecting element) will give you the data you want to send to your views so that you can manipulate it.</p>  <p>So for that you'll call another function say send_data() from this onclick function and you'll pass this required information to that function maybe as one or two variables or as a list like this:</p>  <pre><code>send_data(info); </code></pre>  <p>where info is a list of all the required elements.</p>  <p>Now inside the send_data function you'll make an ajax call to the URL corresponding to the class or def in your views to which you want to supply this information like this:</p>  <pre><code>function send_data(req_info) {      $.ajax({        type: ""POST"",        url: ""/heatmap_cell_data/"",        data: req_info,        // dataType: 'json',         success: function(response){              console.log(response);        }     }); } </code></pre>  <p>Now in your urls.py you'll associate a def/class in views corresponding to the URL in your Ajax function. You'll receive this data in request.POST, then you'll do whatever you want to in that view and finally return an HTTPResponse(whatever data you want to) back to the javascript which you'll receive as response in your success function.</p>  <p>NOTE -> Sending an HTTPRespnse from views.py back to the Ajax request is a must or else you'll get an error that no HTTPResponse found.</p>  <p>Now you can use this response data to modify your heatmaps again.</p>  <p>I hope this was what you were looking for.</p>"
38532380	How to extract a value from a Python dictionary using Javascript?	javascript|python|dictionary|unicode|key	2016-07-22 17:38:34.500000 UTC	"<p>I have a Python dictionary that looks like this...</p>  <pre><code>{u'reason': u'invalidQuery', u'message': u'Encountered "" &lt;ID&gt; ""asd """" at line 1, column 1.\nWas expecting:\n    &lt;EOF&gt; \n    ', u'location': u'query'} </code></pre>  <p>How do I access the <code>u'message'</code> value using Javascript? It is being passed to the front end via Django REST Framework, shouldn't that convert it to a JSON object automatically? It isn't...</p>"	<p>This is not a valid JavaScript object.</p>
38532380	How to extract a value from a Python dictionary using Javascript?	javascript|python|dictionary|unicode|key	2016-07-22 17:38:34.500000 UTC	"<p>I have a Python dictionary that looks like this...</p>  <pre><code>{u'reason': u'invalidQuery', u'message': u'Encountered "" &lt;ID&gt; ""asd """" at line 1, column 1.\nWas expecting:\n    &lt;EOF&gt; \n    ', u'location': u'query'} </code></pre>  <p>How do I access the <code>u'message'</code> value using Javascript? It is being passed to the front end via Django REST Framework, shouldn't that convert it to a JSON object automatically? It isn't...</p>"	"<p>In views.py</p>  <pre><code>import json  json_object = json.dumps(your_object) </code></pre>  <p>In .html / .js</p>  <pre><code>var json_object = {{json_object|safe}}; </code></pre>  <p>The .py side converts it to a valid JSON object. The tag in html escapes invalid json characters like ""&amp;""</p>  <p>In case you are sending your object as a string to your template then you have to convert it to JSON again via JSON, for instance:</p>  <pre><code>JSON.parse(""{{json_object}}""); </code></pre>  <p>Or if the object is a string or a Python dict on the Django views level:</p>  <pre><code>json.loads(your_string) </code></pre>  <p>To convert it into a json object</p>"
38541744	Return javascript variable in Python / Flask	javascript|python|html|flask	2016-07-23 12:23:10.023000 UTC	"<p>I am working on a small Flask app and I am having trouble finding the way to access a javascript array from Python to be printed as csv.</p>  <p>The general setup of my Flask file is (I am trying to print in the console to see if this is working, then I can write as csv later):</p>  <pre><code>from flask import Flask, render_template, request @app.route('/assemblies', methods=['GET', 'POST']) def assemblies():     myColours = request.form.get('colours', type=str)     print myColours     return render_template('assemblies.html') if __name__ == '__main__':     app.run(debug=True) </code></pre>  <p>Then, in my html I have a dropdown selector:</p>  <pre class=""lang-html prettyprint-override""><code>&lt;select id=""Layer1""&gt;     &lt;option value=""0""&gt;Empty&lt;/option&gt;     &lt;option value=""1""&gt;Blue&lt;/option&gt;     &lt;option value=""2""&gt;Red&lt;/option&gt;     &lt;option value=""3""&gt;White&lt;/option&gt;     &lt;option value=""4""&gt;Gray&lt;/option&gt; &lt;/select&gt;&lt;br&gt; </code></pre>  <p>I access the selected value in Javascript like this:</p>  <pre><code>function getColours() {     var c = document.getElementById(""Layer1"");     var colour = c.options[c.selectedIndex].value;     return colour; } </code></pre>  <p>And in html I use a form to post the results:</p>  <pre class=""lang-html prettyprint-override""><code>&lt;form method=""post""&gt;     &lt;button onclick=""getColours()"" type=""submit"" value=""colour""&gt;Click me&lt;/button&gt;        &lt;/form&gt;  </code></pre>  <p>I know the html button is posting but I cannot access the results in Python. I am new to Flask and cannot find the problem in other questions or tutorials. Any help would be more than welcome.</p>"	"<p>Sorry to post directly as answer due to less reputation, but it should be comment.</p>  <p>Your <strong>select</strong> has no <code>name</code> attribute; it'll never be sent as part of the POST. Give it a name attribute as well as a value:</p>  <pre><code>&lt;select id=""Layer1"" name=""layer""&gt; </code></pre>  <p>You can retrieve all values of the list using <a href=""http://werkzeug.pocoo.org/docs/0.11/datastructures/#werkzeug.datastructures.MultiDict.getlist"" rel=""nofollow"">MultiDict.getlist()</a>:</p>  <pre><code>request.form.getlist('layer') </code></pre>"
38541744	Return javascript variable in Python / Flask	javascript|python|html|flask	2016-07-23 12:23:10.023000 UTC	"<p>I am working on a small Flask app and I am having trouble finding the way to access a javascript array from Python to be printed as csv.</p>  <p>The general setup of my Flask file is (I am trying to print in the console to see if this is working, then I can write as csv later):</p>  <pre><code>from flask import Flask, render_template, request @app.route('/assemblies', methods=['GET', 'POST']) def assemblies():     myColours = request.form.get('colours', type=str)     print myColours     return render_template('assemblies.html') if __name__ == '__main__':     app.run(debug=True) </code></pre>  <p>Then, in my html I have a dropdown selector:</p>  <pre class=""lang-html prettyprint-override""><code>&lt;select id=""Layer1""&gt;     &lt;option value=""0""&gt;Empty&lt;/option&gt;     &lt;option value=""1""&gt;Blue&lt;/option&gt;     &lt;option value=""2""&gt;Red&lt;/option&gt;     &lt;option value=""3""&gt;White&lt;/option&gt;     &lt;option value=""4""&gt;Gray&lt;/option&gt; &lt;/select&gt;&lt;br&gt; </code></pre>  <p>I access the selected value in Javascript like this:</p>  <pre><code>function getColours() {     var c = document.getElementById(""Layer1"");     var colour = c.options[c.selectedIndex].value;     return colour; } </code></pre>  <p>And in html I use a form to post the results:</p>  <pre class=""lang-html prettyprint-override""><code>&lt;form method=""post""&gt;     &lt;button onclick=""getColours()"" type=""submit"" value=""colour""&gt;Click me&lt;/button&gt;        &lt;/form&gt;  </code></pre>  <p>I know the html button is posting but I cannot access the results in Python. I am new to Flask and cannot find the problem in other questions or tutorials. Any help would be more than welcome.</p>"	"<p>Let's assume your python is right and you need to post to assemblies your code would be like this:</p>  <pre><code>&lt;form action=""/assemblies"" method=""post""&gt;     &lt;select name=""colours""&gt;     &lt;option value=""0""&gt;Empty&lt;/option&gt;     &lt;option value=""1""&gt;Blue&lt;/option&gt;     &lt;option value=""2""&gt;Red&lt;/option&gt;     &lt;option value=""3""&gt;White&lt;/option&gt;     &lt;option value=""4""&gt;Gray&lt;/option&gt;     &lt;/select&gt;     &lt;br&gt;     &lt;button type=""submit""&gt;Click me&lt;/button&gt;        &lt;/form&gt;  </code></pre>  <p>JS should be avoided where it can be avoided :) and this is not something dynamic, so this will send a post request with colours=""0"" for example if Empty is selected</p>"
38541744	Return javascript variable in Python / Flask	javascript|python|html|flask	2016-07-23 12:23:10.023000 UTC	"<p>I am working on a small Flask app and I am having trouble finding the way to access a javascript array from Python to be printed as csv.</p>  <p>The general setup of my Flask file is (I am trying to print in the console to see if this is working, then I can write as csv later):</p>  <pre><code>from flask import Flask, render_template, request @app.route('/assemblies', methods=['GET', 'POST']) def assemblies():     myColours = request.form.get('colours', type=str)     print myColours     return render_template('assemblies.html') if __name__ == '__main__':     app.run(debug=True) </code></pre>  <p>Then, in my html I have a dropdown selector:</p>  <pre class=""lang-html prettyprint-override""><code>&lt;select id=""Layer1""&gt;     &lt;option value=""0""&gt;Empty&lt;/option&gt;     &lt;option value=""1""&gt;Blue&lt;/option&gt;     &lt;option value=""2""&gt;Red&lt;/option&gt;     &lt;option value=""3""&gt;White&lt;/option&gt;     &lt;option value=""4""&gt;Gray&lt;/option&gt; &lt;/select&gt;&lt;br&gt; </code></pre>  <p>I access the selected value in Javascript like this:</p>  <pre><code>function getColours() {     var c = document.getElementById(""Layer1"");     var colour = c.options[c.selectedIndex].value;     return colour; } </code></pre>  <p>And in html I use a form to post the results:</p>  <pre class=""lang-html prettyprint-override""><code>&lt;form method=""post""&gt;     &lt;button onclick=""getColours()"" type=""submit"" value=""colour""&gt;Click me&lt;/button&gt;        &lt;/form&gt;  </code></pre>  <p>I know the html button is posting but I cannot access the results in Python. I am new to Flask and cannot find the problem in other questions or tutorials. Any help would be more than welcome.</p>"	"<pre><code>from flask import Flask, request, render_template  app = Flask(__name__)  @app.route('/assemblies') def assemblies():     mycolours = request.form.get('colours')     return render_template('assemblies.html', mycolours=mycolours)  @app.route('/select') def select():     return render_template('select.html') if (__name__ == ""__main__""):     app.run(debug=True) </code></pre>  <p>select.html</p>  <pre><code>&lt;form action=""/assemblies"" method=['GET', 'POST']&gt;     &lt;select name=""colours""&gt;         &lt;option value=""0""&gt;Empty&lt;/option&gt;         &lt;option value=""1""&gt;Blue&lt;/option&gt;         &lt;option value=""2""&gt;Red&lt;/option&gt;         &lt;option value=""3""&gt;White&lt;/option&gt;         &lt;option value=""4""&gt;Gray&lt;/option&gt;     &lt;/select&gt;     &lt;br&gt;     &lt;input type=""submit"" value=""submit""&gt;       &lt;/form&gt; </code></pre>  <p>assemblies.html template:</p>  <pre><code>&lt;p&gt;{{mycolours}}&lt;/p&gt; </code></pre>  <p>The output for mycolours is the value you select. For example if you select <code>empty</code> it prints <code>0</code> and if you select <code>white</code> it prints <code>3</code>.</p>"
38575729	Python parse javascript for variable name and it's value	python|regex|beautifulsoup	2016-07-25 19:13:42.737000 UTC	"<p>I'm trying to parse a javascript tag that has a variable named <code>options</code>. The value of options is an array, </p>  <pre><code>""options: [[], []]"" </code></pre>  <p>How can I return the options list?</p>  <p>Currently I'm using BeautifulSoup but having trouble finding the text and also how the search would then convert the data after options into a python list</p>  <p>There is other text surrounding this variable and it's value</p>"	"<pre><code>json.loads(re.search(""options: (.*)"",""adsasd\noptions: [[],[]]\nqqt"").group(1)) </code></pre>  <p>is one way I guess... not a very good way i dont think ... I think we are missing alot of details in order to actually provide a useful answer</p>  <p>althoug I suspect your data looks more like this</p>  <pre><code>"""""" {    key1:'value1',    options: [[],[]],    other:'somve other value' } """""" </code></pre>  <p>in which case you can just do</p>  <pre><code>data = yaml.load(my_input_text) print data['options'] </code></pre>  <p>(see below)</p>  <pre><code>&gt;&gt;&gt; data = yaml.load(""""""{   key1: 'value1',   options: [[],[]],   other: 'somve other value'}"""""") &gt;&gt;&gt; data {'key1': 'value1', 'other': 'somve other value', 'options': [[], []]} &gt;&gt;&gt; data['options'] [[], []] &gt;&gt;&gt; </code></pre>"
38579757	"Could I get [variable name, value] table from javascript code using python?"	javascript|python|lexer	2016-07-26 01:27:12.587000 UTC	"<p>I have a JavaScript file called <code>index.js</code>. I'm developing a tool, written in Python, that it navigates JavaScript code statically to check if a certain API is defined or not. In order to develop it, I need a data structure (table) which stores  <code>[variable, value]</code>.</p>  <p>Here is the example of JavaScript code.</p>  <pre><code>var a = ""hello""; var b = ""hi"";  a = ""world""; var c= certainAPI.method(parameter_1, parameter_2); </code></pre>  <p>After using a tool, here is the table that I want to get.</p>  <pre><code>--------------------------------------------------------- variable   |  value --------------------------------------------------------- a          | ""world"" --------------------------------------------------------- b          | ""hi"" --------------------------------------------------------- c          | certainAPI.method(parameter_1, parameter_2) --------------------------------------------------------- </code></pre>  <p>Are there any tools or modules that navigate JavaScript code and make such a table automatically? The structure type of table doesn't matter. <code>list</code>, <code>dict</code>... all types are fine. I just want to get (var, value) matching set.</p>"	"<p>Yes, there is a popular parser for JavaScript written in JavaScript. Its called <a href=""http://esprima.org"" rel=""nofollow"">Esprima</a></p>  <p>It helps you obtain the full syntax tree.</p>  <p>I found a port of it in Python. It is not popular, but you can check it out.</p>  <p><a href=""https://github.com/int3/pyesprima"" rel=""nofollow"">github.com/int3/pyesprima</a></p>"
38586396	How to execute an entire Javascript program from within a Python script	javascript|python|json|csv|geojson	2016-07-26 09:43:50.893000 UTC	"<p>So I am currently working on a project that involves the google maps API. In order to display data on this, the file needs to be in a geojson format. So far in order to accomplish this, I have been using two programs, 1 in javascript that converts a .json to a CSV, and another that converts a CSV to a geojson file, which can then be dropped on the map. However, I need to make both processes seamless, therefore I am trying to write a python script that checks the format of the file, and then converts it using the above programs and outputs the file. I tried to use many javascript to python converters to convert the javascript file to a python file, and even though the files were converted, I kept getting multiple errors for the past week that show the converted program not working at all and have not been able to find a way around it. I have only seen articles that discuss how to call a javascript function from within a python script, which I understand, but this program has a lot of functions and therefore I was wondering how to call the entire javascript program from within python and pass it the filename in order to achieve the end result. Any help is greatly appreciated.</p>"	"<p>I was able to write a conversion script, and it's working now, thanks!</p>"
38586396	How to execute an entire Javascript program from within a Python script	javascript|python|json|csv|geojson	2016-07-26 09:43:50.893000 UTC	"<p>So I am currently working on a project that involves the google maps API. In order to display data on this, the file needs to be in a geojson format. So far in order to accomplish this, I have been using two programs, 1 in javascript that converts a .json to a CSV, and another that converts a CSV to a geojson file, which can then be dropped on the map. However, I need to make both processes seamless, therefore I am trying to write a python script that checks the format of the file, and then converts it using the above programs and outputs the file. I tried to use many javascript to python converters to convert the javascript file to a python file, and even though the files were converted, I kept getting multiple errors for the past week that show the converted program not working at all and have not been able to find a way around it. I have only seen articles that discuss how to call a javascript function from within a python script, which I understand, but this program has a lot of functions and therefore I was wondering how to call the entire javascript program from within python and pass it the filename in order to achieve the end result. Any help is greatly appreciated.</p>"	"<p>While this is not exactly what you are asking for, propably using <a href=""https://docs.python.org/3/library/json.html"" rel=""nofollow"">json</a> and <a href=""https://pypi.python.org/pypi/geojson"" rel=""nofollow"">geojson</a> is easier. (If you dont want to use nodejs or the like)</p>"
38622385	How can I execute JavaScript code from Python?	javascript|python|python-3.x|python-3.5	2016-07-27 20:14:49.397000 UTC	"<p>Lets say that I have this code inside a JavaScript file:</p>  <pre><code>var x = 10; x = 10 - 5; console.log(x); function greet() {   console.log(""Hello World!""); } greet() </code></pre>  <p>How would I use Python to execute this code and <em>""print""</em> <code>x</code> and <code>Hello World!</code>?<br /> Here is some pseudo code that further explains what I'm thinking:</p>  <pre><code># 1. open the script script = open(""/path/to/js/files.js"", ""r"") # 2. get the script content script_content = script.read() # 3. close the script file script.close() # 4. execute the script content and ""print"" ""x"" and ""Hello World!"" x = js.exec(script_content) </code></pre>  <p>And, the expected result would look like this:</p>  <pre><code>&gt;&gt;&gt; 5 &gt;&gt;&gt; ""Hello World!"" </code></pre>"	"<p>The module <code>Naked</code> does exactly this. <code>pip install Naked</code> (or install from source if you prefer) and import the library shell functions as follows:</p> <pre class=""lang-python prettyprint-override""><code>from Naked.toolshed.shell import execute_js, muterun_js  response = muterun_js('file.js') if response.exitcode == 0:   print(response.stdout) else:   sys.stderr.write(response.stderr) </code></pre> <p>For your particular case, with file.js as</p> <pre><code>var x = 10; x = 10 - 5; console.log(x); function greet() {       console.log(&quot;Hello World!&quot;); } greet() </code></pre> <p>the output is <code>'5\nHello World!\n'</code>, which you can parse as desired.</p>"
38625204	"Translate row in Python to JavaScript: [(M[i], k // M[i])]"	javascript|python	2016-07-28 00:19:09.140000 UTC	"<p>I'm trying to translate the following script into JavaScript. There is one row which I have no idea what it does, I'm suspecting push to the array.</p>  <pre><code>def greedyCoinChanging(M, k):     n = len(M)     result = []     for i in xrange(n - 1, -1, -1):         result += [(M[i], k // M[i])] // &lt;-- what the hell is this in JavaScript?         k %= M[i]     return result </code></pre>"	"<p>In JavaScript, you don't have to use a tuple.  You can just use an array.</p>  <pre><code>result.push([M[i], Math.floor(k/M[i])]); </code></pre>  <p>Also, the integer division (<code>//</code>) can become <code>Math.floor(k/M[i])</code>;</p>"
38633308	extract data from javascript using Python	javascript|python|json|extract	2016-07-28 10:08:12.653000 UTC	"<p>I am a new user to Python, and I have inherited a Python notebook from my predecessor that I want to improve. The purpose of it is to grab product details from a website.</p>  <p>How it works:</p>  <ul> <li><p>It scrapes the script from a website using beautiful soup:</p>  <pre><code>source = urllib2.urlopen('http://www.testwebsite.html').read() soup = bs4.BeautifulSoup(source) job_postings = soup.findAll(""script"") job_postings = [jp for jp in job_postings if not jp.get('type') is None                  and ''.join(jp.get('type')) ==""text/javascript""                 and ''.join(jp.get('type')) ==""text/javascript""] </code></pre></li> </ul>  <p>it returns all the script in the webpage: (1st part of data)</p>  <blockquote>   <p>window.wf=window.wf||{};wf.appData=wf.appData||{};wf.appData.product_data_TEST123=wf.appData.product_data_TEST123||{};wf.appData.product_data_TEST123 = {""sku"":""TES123"",""is_grid_view"":false,,""default_img_display"":0,""manufacturer_name"":""Supplier1"",""product_name"":""product test"",""part_number"":""1234"",""list_price"":1000,""is_price_hidden"":false,""base_price"":1000,""has_opt"":true,""opt_details"":[{""option_ids"":[],""regular_price"":2681.25],""has_free_shipping"":false,,""total_qty"":1,""display_set_quantity"":1,""is_standard_layout"":true,""page_type"":""ProductPage""};Y_config.app.product_data_TEST123 = {""sku"":""TEST123"",........ same info here ....}; </blockquote>  <p>2 sd part of data:</p>  <blockquote>   \n      wf.extend({""YUI_config"":{""app"":{""pageAlias"":""ProductPage""}},""wf"":{""appData"":{""pageAlias"":""ProductPage"",,""mkcName"":""AU: FurnitureRoom"",""productReviews"":{""b_show_review_tags"":false,""kit_subgroup_price"":null,""catalog_currency"":""AUD"",""price_model"":null,""colors"":"""",,""available_after"":{""date"":""2016-07-28 18:05:16.000000"",""timezone"":""Australia\\/Sydney""},""inventory_info"":{""sku"":""TEST123"",,""latest_inventory_update"":""2016-07-29 00:45:06"",""option_ids"":[],""available_quantity"":17,""display_quantity"":17,"",""quantity_available_string"":"" more then 10 in Stock"",""short_lead_time_id"":2,""short_lead_time_string"":""Leaves warehouse in 1 to 3 business days""}}}; </blockquote>  <p>Then I extract the data I need:</p>  <pre><code>   jsonfile =  re.findall(r'wf.appData.product_data_[A-Z]{4}[0-9]{4} = (\{.*});YUI_config.app.product_data_',str(job_postings)) </code></pre>  <p>I have this:</p>  <blockquote>   <p>{""sku"":""TEST123"",""is_grid_view"":false,,""default_img_display"":0,""manufacturer_name"":""Supplier1"",""product_name"":""product test"",""part_number"":""1234"",""list_price"":1000,""is_price_hidden"":false,""base_price"":1000,""has_opt"":true,""opt_details"":[{""option_ids"":[],""regular_price"":2681.25],""has_free_shipping"":false,,""total_qty"":1,""display_set_quantity"":1,""is_standard_layout"":true,""page_type"":""ProductPage""}</p> </blockquote>  <p>My problem is now: I want to add the ""inventory_info"" list to my data</p>  <p>I've tried:</p>  <pre><code>     jsonfile =  re.findall(r'inventory_info' = (\{.*}),str(job_postings)) </code></pre>  <p>or</p>  <pre><code>    Jsonfile = re.compile('inventory_info' = ({.*?});', re.DOTALL) </code></pre>  <p>Neither of those work.</p>  <p>I'm knowledge of Python is very limited so I'm a bit lost now. Thanks for your help.</p>"	"<p>You may have already found the answer to your question but here it goes anyways.</p> <p>For getting <code>inventory_info</code>, you could always do a split (assuming job_postings is converted to type <code>string</code>), as so:</p> <pre><code>inventory_info = job_postings.split(&quot;inventory_info:&quot;)[1].split(&quot;}&quot;)[0] + &quot;}&quot;  job_postings += inventory_info </code></pre>"
38636084	Calling of a python script from a browser add-on written in JavaScript	javascript|python|browser-addons|kango-framework	2016-07-28 12:15:40.887000 UTC	<p>I am using the KangoExtension framework for developing an add-on. The add-on is written in JavaScript. How can I call a python-script which is a local file?</p>	
38648316	In JavaScript code how to get data from a Python JSON variable	javascript|python|json	2016-07-28 23:29:38.590000 UTC	"<p>The following code in Python:</p>  <pre><code>jsVar = (json.dumps(jsPass)) </code></pre>  <p>produces this output: </p>  <pre><code>{   ""TT1004"": [     [1004, 45.296109039999997, -75.926546579999993,       66.996664760000002, 150, false     ]   ],   ""TT1001"": [     [1001, 45.296471220000001, -75.923881289999997, 64.616423409999996, 150, false]   ],   ""TT1003"": [     [1003, 45.296109379999997, -75.926543379999998,       67.240025419999995, 150, false     ]   ],   ""TT1002"": [     [1002, 45.29626098, -75.924908610000003, 65.300880480000004, 150, true]   ] } </code></pre>  <p>The output passes validation on the JSON Formatter &amp; Validator website. </p>  <p>In the JavaScript code I’ve set the following:</p>  <pre><code>var myVar2 = {}; var myVar2 = jsVar; </code></pre>  <p>When I look at the output of the <code>console.log</code> or <code>.dir</code> methods for the JavaScript variable <code>myVar2</code>, there is no data. It returns <code>Object {  }</code> along with an empty <code>__proto__:Object</code>.</p>  <p>In order to test that the Python data that is generated is correct JS, I have manually placed the data into the JavaScript variable which logs the following:  </p>  <pre><code>{   TT1004: Array[1],   TT1001: Array[1],   TT1003: Array[1],   TT1002: Array[1] } </code></pre>  <p>What I need to learn is how to import the Python JSON jsVar variable into the JavaScript Code.</p>"	"<p><strong>From your original post</strong>:<br></p>  <blockquote>   <p>Python: <code>jsVar = (json.dumps(jsPass))</code></p>      <p>JavaScript code: <code>var myVar2 = jsVar;</code></p> </blockquote>  <p><strong>Q:</strong> How to access Python JSON variable from Javascript code?</p>  <p><strong>A:</strong> Python and Javascript are two different languages and you would run them  differently, for instance to run Python code you normally use the <code>python</code> binary and to execute Javascript you would use a JS engine like Google's <code>V8</code>.</p>  <p><strong>Note that:</strong> When you run your python and javascript code, that is essentially taken care by 2 different processes. That is, they will have different memory space hence it is not possible for your Javascript process to access memory space of your Python code, unless we are talking about Unix's <code>shared memory</code>. (I won't bother touching on this)</p>  <p>So if you are thinking about directly accessing a variable from 1 language or even process to another process then it is <strong>NOT</strong> possible. </p>  <p>However, keep in mind that a variable is just a reference to your content. What I'm trying to say is - you don't need the variable to be ported across, rather you need the content.</p>  <p>The easiest method for a newbie would be to serialize (layman term: save) the content to a <code>File</code> and then have the Javascript process read out the content and parse it back into an object.</p>  <p>I hope these guides will be useful to you;</p>  <p><strong>Python side:</strong><br> For writing JSON data to a File using Python - you can refer to this SO post for solution.<br> <a href=""https://stackoverflow.com/questions/12309269/how-do-i-write-json-data-to-a-file-in-python"">How do I write JSON data to a file in Python?</a></p>  <p><strong>Javascript side:</strong><br> For reading JSON data back out from a file you can easily do this through NodeJS.<br> <a href=""https://stackoverflow.com/questions/10011011/using-node-js-how-do-i-read-a-json-object-into-server-memory"">Using Node.JS, how do I read a JSON object into (server) memory?</a></p>"
38650665	sending dynamic html email containing javascript via a python script	javascript|python|email|bokeh|smtplib	2016-07-29 04:43:51.083000 UTC	"<ol> <li>at the first place, I could not help myself with the correct search terms on this.</li> <li>secondly, I couldnt pretty much make it working with standard smtplib or email package in python.</li> </ol>  <p>The question is, I have a normal html page(basically it contains a  that is generated from bokeh package in python, and all it does is generating an html page the javascript within renders a nice zoomable plot when viewed in a browser.</p>  <p>My aim is to send that report (the html basically) over to recipients in a mail. </p>"	"<p>Sorry, but you'll not be able to send an email with JavaScript embedded. That is a security risk. If you're lucky, an email provider will strip it before rendering, if you're unlucky, you'll be sent directly to spam and the provider will distrust your domain.</p>  <p>You're better off sending an email with a link to the chart.</p>"
38654926	Python/Javascript number precision	javascript|python	2016-07-29 09:12:51.113000 UTC	<p>Probably this question is already existed somewhere but can't find my specific issue.</p>  <p>I have a two numbers that I want to add and I don't want to use <strong>round()</strong> function since I am working with money.</p>  <pre><code>1.70 + 1.44 = 3.14 //Returns 3.1399999999999997 1.70 + 1.45 = 3.15 //Returns the correct answer 1.70 + 1.37 = 3.07 //Returns 3.0700000000000003 </code></pre>  <p>I tried it in Javascript but still the same issue.</p>	<p>Use <code>parseFloat</code> to precision :</p>  <pre><code>parseFloat(number).toFixed(precision); </code></pre>  <p>E.g.</p>  <pre><code>parseFloat(1.70 + 1.37).toFixed(2);  // RETURN 3.07 </code></pre>
38654926	Python/Javascript number precision	javascript|python	2016-07-29 09:12:51.113000 UTC	<p>Probably this question is already existed somewhere but can't find my specific issue.</p>  <p>I have a two numbers that I want to add and I don't want to use <strong>round()</strong> function since I am working with money.</p>  <pre><code>1.70 + 1.44 = 3.14 //Returns 3.1399999999999997 1.70 + 1.45 = 3.15 //Returns the correct answer 1.70 + 1.37 = 3.07 //Returns 3.0700000000000003 </code></pre>  <p>I tried it in Javascript but still the same issue.</p>	<p>one way you can achieve this is to multiply the values by (10 * precision) that you need and then divide the result by (10 * precision).</p>  <ul> <li>((1.70 * 100) + (1.37 * 100))/100 = 3.07 </li> <li>((1.70 * 100) + (1.45 *  100))/100 = 3.15 </li> <li>((1.70 * 100) + (1.44 * 100))/100 = 3.14</li> </ul>  <p>you can add a method to do this for you to keep it simple.</p>
38654926	Python/Javascript number precision	javascript|python	2016-07-29 09:12:51.113000 UTC	<p>Probably this question is already existed somewhere but can't find my specific issue.</p>  <p>I have a two numbers that I want to add and I don't want to use <strong>round()</strong> function since I am working with money.</p>  <pre><code>1.70 + 1.44 = 3.14 //Returns 3.1399999999999997 1.70 + 1.45 = 3.15 //Returns the correct answer 1.70 + 1.37 = 3.07 //Returns 3.0700000000000003 </code></pre>  <p>I tried it in Javascript but still the same issue.</p>	"<p>Since you're working with money, always use the <code>decimal.Decimal</code> class in Python. </p>"
38710603	Injecting data into javascript with Python Flask	javascript|python|flask	2016-08-02 01:46:37.297000 UTC	"<p>I am following the instructions from <a href=""http://www.highcharts.com/docs/getting-started/your-first-chart"" rel=""nofollow"">http://www.highcharts.com/docs/getting-started/your-first-chart</a> to create a sample chart. I have saved the main chunk of javascript locally, and am add the <code>&lt;script src=""/chart.js""&gt;&lt;/script&gt;</code> tag in my html to reference it.</p>  <p>On my side, I am using python flask to render a html template containing the script.</p>  <pre><code>@app.route('/view', methods=['POST', 'GET']) def show_graph_view():     query= request.form['query']     data = get_current_data(query)     return render_template('graph.html', data=data) </code></pre>  <p>I have a function to prepare some custom and current data I want to plot instead and I want the data to be available once the client brower loads. How do I add this data into the charts? </p>"	"<p>Is stumbled on this old answer in 2021 and I just wanted to add another option..</p> <p>Injecting Python seems to mess with your Javascript, but you can actually do this:</p> <pre><code>&lt;script&gt;     var names = []     var i = 0     // {% for i in range(0, names_len) %}               names[i++] = &quot;{{names[i]}}&quot;;     // {% endfor %}   &lt;/script&gt; </code></pre> <p>You can &quot;comment-out&quot; the injected Pyhton code, so your Javascript remains correct :)</p>"
38710603	Injecting data into javascript with Python Flask	javascript|python|flask	2016-08-02 01:46:37.297000 UTC	"<p>I am following the instructions from <a href=""http://www.highcharts.com/docs/getting-started/your-first-chart"" rel=""nofollow"">http://www.highcharts.com/docs/getting-started/your-first-chart</a> to create a sample chart. I have saved the main chunk of javascript locally, and am add the <code>&lt;script src=""/chart.js""&gt;&lt;/script&gt;</code> tag in my html to reference it.</p>  <p>On my side, I am using python flask to render a html template containing the script.</p>  <pre><code>@app.route('/view', methods=['POST', 'GET']) def show_graph_view():     query= request.form['query']     data = get_current_data(query)     return render_template('graph.html', data=data) </code></pre>  <p>I have a function to prepare some custom and current data I want to plot instead and I want the data to be available once the client brower loads. How do I add this data into the charts? </p>"	"<p>Assuming a globally accessible function, just call it in the module with the data converted to json on the server with the tojson and safe filters. </p>  <pre><code>&lt;script type=text/javascript&gt; doSomethingWith({{ data|tojson|safe }}); &lt;/script&gt; </code></pre>  <p>It's a bit hard to follow the logic when you mix together server side templating and client side scripting like this. But sometimes you gotta do it.</p>"
38773273	Slowly scroll in python selenium javascript	javascript|python|selenium|web-scraping	2016-08-04 16:55:46.237000 UTC	"<pre><code>url = correct_url(url) browser = webdriver.Chrome() browser.get(url) browser.find_element_by_xpath('//*[@title=""New chat""]').click() drawer_body = browser.find_elements_by_class_name('drawer-body') browser.execute_script('arguments[0].scrollTop = arguments[0].scrollHeight', drawer_body) </code></pre>  <blockquote>   <p>Get the 'div' element, this has a list and will be scrolled</p> </blockquote>  <p>drawer_body = browser.find_elements_by_class_name('drawer-body')    </p>  <blockquote>   <p>The line below scrolls very fast and reaches the bottom but this does not load data. Is there any way I can slowly scroll into drawer_body element?.</p> </blockquote>  <p>browser.execute_script('arguments[0].scrollTop = arguments[0].scrollHeight', drawer_body)</p>  <p>I am trying to implement the below script using python and selenium. <a href=""http://ctrlq.org/code/19966-whatsapp-phone-numbers"" rel=""nofollow"">http://ctrlq.org/code/19966-whatsapp-phone-numbers</a></p>"	"<pre><code>driver.execute_script('window.scrollBy(0, 500)') driver.execute_script('window.scrollBy(0, 500)') time.sleep(2) driver.execute_script('window.scrollBy(0, 500)') driver.execute_script('window.scrollBy(0, 500)') time.sleep(2) driver.execute_script('window.scrollBy(0, 500)') driver.execute_script('window.scrollBy(0, 500)') time.sleep(2) driver.execute_script('window.scrollBy(0, 500)') driver.execute_script('window.scrollBy(0, 500)') time.sleep(2) driver.execute_script('window.scrollBy(0, 500)') time.sleep(1) </code></pre>"
38773273	Slowly scroll in python selenium javascript	javascript|python|selenium|web-scraping	2016-08-04 16:55:46.237000 UTC	"<pre><code>url = correct_url(url) browser = webdriver.Chrome() browser.get(url) browser.find_element_by_xpath('//*[@title=""New chat""]').click() drawer_body = browser.find_elements_by_class_name('drawer-body') browser.execute_script('arguments[0].scrollTop = arguments[0].scrollHeight', drawer_body) </code></pre>  <blockquote>   <p>Get the 'div' element, this has a list and will be scrolled</p> </blockquote>  <p>drawer_body = browser.find_elements_by_class_name('drawer-body')    </p>  <blockquote>   <p>The line below scrolls very fast and reaches the bottom but this does not load data. Is there any way I can slowly scroll into drawer_body element?.</p> </blockquote>  <p>browser.execute_script('arguments[0].scrollTop = arguments[0].scrollHeight', drawer_body)</p>  <p>I am trying to implement the below script using python and selenium. <a href=""http://ctrlq.org/code/19966-whatsapp-phone-numbers"" rel=""nofollow"">http://ctrlq.org/code/19966-whatsapp-phone-numbers</a></p>"	"<p>try this</p>  <pre><code>drawer_body = browser.find_elements_by_class_name('drawer-body') location = drawer-body.location for i in range(location['x']//500):     browser.execute_script('window.scrollBy(0, 500)') </code></pre>"
38773273	Slowly scroll in python selenium javascript	javascript|python|selenium|web-scraping	2016-08-04 16:55:46.237000 UTC	"<pre><code>url = correct_url(url) browser = webdriver.Chrome() browser.get(url) browser.find_element_by_xpath('//*[@title=""New chat""]').click() drawer_body = browser.find_elements_by_class_name('drawer-body') browser.execute_script('arguments[0].scrollTop = arguments[0].scrollHeight', drawer_body) </code></pre>  <blockquote>   <p>Get the 'div' element, this has a list and will be scrolled</p> </blockquote>  <p>drawer_body = browser.find_elements_by_class_name('drawer-body')    </p>  <blockquote>   <p>The line below scrolls very fast and reaches the bottom but this does not load data. Is there any way I can slowly scroll into drawer_body element?.</p> </blockquote>  <p>browser.execute_script('arguments[0].scrollTop = arguments[0].scrollHeight', drawer_body)</p>  <p>I am trying to implement the below script using python and selenium. <a href=""http://ctrlq.org/code/19966-whatsapp-phone-numbers"" rel=""nofollow"">http://ctrlq.org/code/19966-whatsapp-phone-numbers</a></p>"	"<p>Most browsers support <em>Spacebar</em> key as a keyboard shortcut for scrolling page down. Using this feature, you can do the following:</p>  <ol> <li>Visit page</li> <li>Parse what is loaded so far</li> <li>Simulate press spacebar using Selenium</li> <li>Wait 2-3 seconds till more data is loaded</li> <li>Continue</li> </ol>  <p>One more hint: to avoid being stuck in a forever loop, you need to implement a check if the newly loaded data differs from the one before pressing spacebar, otherwise the script should quit, as there is no new data to parse.</p>"
38777840	why is this formula for a circle giving me an ellipsoid in Javascript but a circle in Python?	javascript|python|gps|geometry|trigonometry	2016-08-04 21:40:15.933000 UTC	"<p>I adapted the following code for python found on this <a href=""https://stackoverflow.com/a/15890673/2075859"">page</a>:  for a Javascript equivalent.</p>  <pre><code>import math  # inputs radius = 1000.0 # m - the following code is an approximation that stays reasonably accurate for distances &lt; 100km centerLat = 30.0 # latitude of circle center, decimal degrees centerLon = -100.0 # Longitude of circle center, decimal degrees  # parameters N = 10 # number of discrete sample points to be generated along the circle  # generate points circlePoints = [] for k in xrange(N):     # compute     angle = math.pi*2*k/N     dx = radius*math.cos(angle)     dy = radius*math.sin(angle)     point = {}     point['lat']=centerLat + (180/math.pi)*(dy/6378137)     point['lon']=centerLon + (180/math.pi)*(dx/6378137)/math.cos(centerLat*math.pi/180)     # add to list     circlePoints.append(point)  print circlePoints </code></pre>  <p>The distance between these points is constant, as it should be. </p>  <p>My JS version is, as far as I know, equivalent:</p>  <pre><code>  var nodesCount = 8;   var coords = [];    for (var i = 0; i &lt;= nodesCount; i++) {     var radius = 1000;     var angle = Math.PI*2*i/nodesCount;     var dx = radius*Math.cos(angle);     var dy = radius*Math.sin(angle);      coords.push([(rootLongitude + (180 / Math.PI) * (dx / EARTH_RADIUS) / Math.cos(rootLatitude * Math.PI / 180)),(rootLatitude + (180 / Math.PI) * (dy / EARTH_RADIUS))]);   } </code></pre>  <p>But when I output this, the coordinates are not equidistant from the center.  </p>  <p>This is enormously frustrating -- I've been trying to debug this for a day.  Can anyone see what's making the JS code fail?</p>"	"<p>You somehow got lat/lon reversed. </p>  <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-js lang-js prettyprint-override""><code>var linkDistance = 10; //$('#linkDistance').val(); var nodesCount = 8; var bandwidth = ""10 GB/s""; var centerLat = 35.088878; var centerLon = -106.65262; var EARTH_RADIUS = 6378137;  var mymap = L.map('mapid').setView([centerLat, centerLon], 11);  L.tileLayer('https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token=pk.eyJ1IjoibWFwYm94IiwiYSI6ImNpandmbXliNDBjZWd2M2x6bDk3c2ZtOTkifQ._QA7i5Mpkd_m30IGElHziw', {   maxZoom: 18,   attribution: 'Map data &amp;copy; &lt;a href=""http://openstreetmap.org""&gt;OpenStreetMap&lt;/a&gt; contributors, ' +     '&lt;a href=""http://creativecommons.org/licenses/by-sa/2.0/""&gt;CC-BY-SA&lt;/a&gt;, ' +     'Imagery © &lt;a href=""http://mapbox.com""&gt;Mapbox&lt;/a&gt;',   id: 'mapbox.streets' }).addTo(mymap);   function drawNext(centerLat, centerLon) {   var coords = [];    for (var i = 0; i &lt; nodesCount; i++) {     var radius = linkDistance * 1000;     var angle = Math.PI * 2 * i / nodesCount;     var dx = radius * Math.cos(angle);     var dy = radius * Math.sin(angle);      var lat = centerLon + (180 / Math.PI) * (dy / 6378137);     var lon = centerLat + (180 / Math.PI) * (dx / 6378137) / Math.cos(centerLon * Math.PI / 180);      coords.push([lat, lon]);   }    for (var i = 0; i &lt; coords.length; i++) {     new L.Circle(coords[i], 500, {       color: 'black',       fillColor: '#f03',       fillOpacity: 0.1     }).addTo(mymap);     console.log(""added circle to: "" + coords[i]);   }  }  drawNext(centerLon, centerLat);   var popup = L.popup();  function onMapClick(e) {   popup     .setLatLng(e.latlng)     .setContent(""You clicked the map at "" + e.latlng.toString())     .openOn(mymap); }  mymap.on('click', onMapClick);</code></pre> <pre class=""snippet-code-css lang-css prettyprint-override""><code>#mapid {   height: 500px; }</code></pre> <pre class=""snippet-code-html lang-html prettyprint-override""><code>&lt;script src=""https://npmcdn.com/leaflet@1.0.0-rc.2/dist/leaflet-src.js""&gt;&lt;/script&gt; &lt;link href=""https://npmcdn.com/leaflet@1.0.0-rc.2/dist/leaflet.css"" rel=""stylesheet""/&gt; &lt;div id=""mapid""&gt;&lt;/div&gt;</code></pre> </div> </div> </p>"
38787349	Translation from Python to JavaScript: HMAC-SHA256	javascript|python|sha256|hmac|cryptojs	2016-08-05 10:46:13.247000 UTC	"<p>I'd like to convert the following piece of Python code to JavaScript:</p>  <pre class=""lang-py prettyprint-override""><code>signature_string = self.format(""{apip_id}{identity_id}{method}{uri}{content_hash}{timestamp}{nonce}"") # pyhton unicode string in UTF-8 format signature_bytes = signature_string.encode('utf-8') # previous string is converted in a python bytes string apip_key_bytes = base64.b64decode(self.apip_key.encode('utf-8')) # pyhton unicode string is converted in a python bytes string and then in ?? hasher = hmac.new(apip_key_bytes, signature_bytes, hashlib.sha256) # hash is calculated hash_bytes = hasher.digest() # hash coded in a python bytes string return base64.b64encode(hash_bytes).decode('utf-8') # the hash in bytes is converted to a base64 string </code></pre>  <p>I tried to use crypto.JS and developed following code but I don't think I get the correct result, This is my conversion in JavaScript of the above code</p>  <pre><code>function stringToAsciiByteArray(str) {     var bytes = [];     for (var i = 0; i &lt; str.length; ++i) {         var charCode = str.charCodeAt(i);         if (charCode &gt; 0xFF) // char &gt; 1 byte since charCodeAt returns the    UTF-16 value         {         throw new Error('Character ' + String.fromCharCode(charCode) + '  can\'t be represented by a US-ASCII byte.');         }        bytes.push(charCode);     }     return bytes; }  var signature_bytes = stringToAsciiByteArray(signature_string); var apip_key_bytes = stringToAsciiByteArray(apip_key);  CryptoJS.enc.u8array = {     stringify: function(wordArray) {         // Shortcuts         var words = wordArray.words;         var sigBytes = wordArray.sigBytes;          // Convert         var u8 = new Uint8Array(sigBytes);         for (var i = 0; i &lt; sigBytes; i++) {             var byte = (words[i &gt;&gt;&gt; 2] &gt;&gt;&gt; (24 - (i % 4) * 8)) &amp; 0xff;             u8[i] = byte;         }          return u8;     },     parse: function(u8arr) {         // Shortcut         var len = u8arr.length;          // Convert         var words = [];         for (var i = 0; i &lt; len; i++) {             words[i &gt;&gt;&gt; 2] |= (u8arr[i] &amp; 0xff) &lt;&lt; (24 - (i % 4) * 8);         }          return CryptoJS.lib.WordArray.create(words, len);     } };  var wordArray1 = CryptoJS.enc.u8array.parse(signature_bytes); var wordArray2 = CryptoJS.enc.u8array.parse(apip_key_bytes); var hash_bytes = CryptoJS.HmacSHA256(wordArray1, wordArray2); return window.btoa(hash_bytes); </code></pre>  <p>The hash code I get after this procedure I don't think it's correct, it doesn't work, am I doing something wrong?</p>"	
38875202	Use Flask to run a python script using javascript	javascript|python|html|flask	2016-08-10 13:43:34.060000 UTC	"<p>I want to run a python script using javascript. </p>  <p>I installed Flask.</p>  <p>this is my html code : </p>  <pre><code>&lt;input type=""button"" value=""tester"" onclick=""addImage()"" /&gt;  &lt;p id=""result""&gt;&lt;/p&gt;  &lt;script&gt; function callPy(data1, data2){     $.ajax({         type: ""POST"",         url:""/test"",         data:{data1: data1, data2:data2},         success:callbackFunc     });  function callbackFunc(response) {     $('#result').html('&lt;li&gt;'+response.x+'&lt;/li&gt;'); } function addImage(){     callPy(1,2); } &lt;/script&gt; </code></pre>  <p>And this is my python code : </p>  <pre><code>  import csv from numpy import genfromtxt from numpy import matrix  from flask import Flask, render_template, redirect, url_for,request from flask import make_response app = Flask(__name__)  @app.route('/test', method='POST') def test():     if request.method == 'POST'     data1 = request.form['data1']     data2 = request.form['data2']     return ""ok""""     return render_template('watermark.html', message='azerty')   if __name__ == ""__main__"":     app.run(debug = True) </code></pre>  <p>But I have this error in the console :  <code>jquery.min.js:5 POST http://testFalsk/test 404 (Not Found)</code> What I have to make?</p>"	"<p>First, the parameter name for the allowed methods is <code>methods</code> (not <code>method</code>) and it accepts a list with the allowed methods. In this case, it will have only one element.</p>  <pre class=""lang-py prettyprint-override""><code>@app.route('/test', methods=['POST']) </code></pre>  <p>With this, the check for <code>request.method == 'POST'</code> isn't necessary, once this view will only accept this type of requests.</p>  <p>Next, there are some syntax errors in your code: the colon after the <code>if</code> statement and the ""ok"" return string (three double quotes). Also, you have two returns, which isn't valid. To get dict data (as in the <code>request.form</code>) the <code>get</code> method is recommended. It will return <code>None</code> if the key doesn't exist, in oppose to the current way that will throw an exception. <br> The corrected method would be as follows: </p>  <pre class=""lang-py prettyprint-override""><code>@app.route('/test', methods=['POST']) def test():     data1 = request.form.get('data1')     data2 = request.form.get('data2')      return render_template('watermark.html', message='azerty') </code></pre>  <p>Please let me know if you're still having problems or my answer isn't clear nor accurate.</p>  <p>Hope it helps.<br> Cheers</p>"
38931966	How to access dictionary-type items in a list (python or maybe javascript)	python|json|list|dictionary	2016-08-13 10:57:13.657000 UTC	"<p>I have some data stored in 'nutrients' JSONField in a django 'Food' model.</p>  <p>some sample datastructure at the bottom.</p>  <p>The data is Food.nutrients, but I don't know how/ best way access a particular item in the nutrients list - which is structured like [{dict type item},{dict type item},...]. </p>  <p>Each item is a dictionary with a 'name' key and 'nutrient_id' key, which I <em>feel</em> could help me pick out the item that I want. And then from the item dictionary I want to get the value for key 'value' (I didn't name the key 'value').</p>  <pre><code> [{u'dp': 1,   u'group': u'Minerals',   u'measures': [],   u'name': u'Manganese, Mn',   u'nutrient_id': 315,   u'se': u'',   u'sourcecode': [1],   u'unit': u'mg',   u'value': 0.094},  {u'dp': 1,   u'group': u'Minerals',   u'measures': [],   u'name': u'Selenium, Se',   u'nutrient_id': 317,   u'se': u'',   u'sourcecode': [1],   u'unit': u'\xb5g',   u'value': 0.4},  {u'dp': 1,   u'group': u'Vitamins',   u'measures': [],   u'name': u'Vitamin C, total ascorbic acid',   u'nutrient_id': 401,   u'se': u'',   u'sourcecode': [1],   u'unit': u'mg',   u'value': 4.0}] </code></pre>"	"<p>Let's suppose, you have the list of dictionaries in <code>nutrients</code>. Now you can filter the list to find the items matching a particular key with a specific value. For example, to find the dictionary with <code>name</code> having ""Manganese, Mn"", you can do: </p>  <pre><code>matches = filter(lambda n: n.get('name') == 'Manganese, Mn', nutrients) </code></pre>  <p>Now the <code>matches</code> list should contain the nutrients which contain ""Manganese, Mn"" in the <code>name</code> key. </p>  <p>You can access the first nutrient using index - <code>matches[0]</code>. Now you can access other keys too, like <code>matches[0].get('value')</code></p>"
38939519	"Trying to replicate Python's struct.unpack "">L"" in JavaScript with TypedArrays"	javascript|python	2016-08-14 05:44:13.137000 UTC	"<p>I am trying to reproduce the following Python code in JavaScript.</p>  <pre><code>import struct val = struct.unpack(""&gt;L"", ""MACS"")[0] </code></pre>  <p><code>val</code> is now <code>1296122707</code> (the same as <code>0x4d414353</code>). Trying the same with <code>htk1</code> gives <code>1752460081</code>, the same as <code>0x68746b31</code>.</p>  <p>I was trying to bring this to JavaScript so I got to studying and came across this documentation on Python: <a href=""https://docs.python.org/3/library/stdtypes.html#int.from_bytes"" rel=""nofollow noreferrer""><code>classmethod int.from_bytes()</code></a>.</p>  <p>So the above is the same as:</p>  <pre><code>int.from_bytes(b""MACS"", ""big"") </code></pre>  <p>However I am not able to port it to JavaScript. How can I make a start on doing so, or is it already available out there?</p>  <p>Here was my attempt:</p>  <pre><code>function unpackL(fourCharCode) {     var buf = new ArrayBuffer(8);     var view = new DataView(buf);     view.setUint8(0, String.charCodeAt(fourCharCode[0]), true);     view.setUint8(2, String.charCodeAt(fourCharCode[1]), true);     view.setUint8(4, String.charCodeAt(fourCharCode[2]), true);     view.setUint8(6, String.charCodeAt(fourCharCode[3]), true);     return new Uint32Array(buf); } </code></pre>  <p>However <code>unpackL('htk1')</code> gives me <code>Uint32Array [ 7602280, 3211371 ]</code>.</p>"	"<p>Here's a function that does this (returning undefined if the string is the wrong length):</p>  <pre><code>function stringToUnsignedInt(string) {   if (string.length !== 4) {     return undefined;   }    return (string.charCodeAt(0) &lt;&lt; 24) +          (string.charCodeAt(1) &lt;&lt; 16) +          (string.charCodeAt(2) &lt;&lt; 8) +          string.charCodeAt(3); }  console.log(stringToUnsignedInt(""MACS"") === 1296122707); // true console.log(stringToUnsignedInt(""htk1"") === 1752460081); // true </code></pre>"
39079075	How to enable Javascript to communicate with a Python 2.7 Bottle application via WebSockets?	python-2.7|websocket|bottle|gevent	2016-08-22 12:03:40.907000 UTC	"<p><strong>Environment</strong></p>  <pre><code>Python 2.7   bottle==0.12.9   gevent==1.1.2   gevent-websocket==0.9.5 greenlet==0.4.10 </code></pre>  <p><strong>Desired Behaviour</strong></p>  <p>On executing a Bottle route, from a <code>getJSON()</code> request of a single user on the frontend of a website, I want to utilise WebSockets to send data back to update a div in the front end of the website, which is visible to all users.  </p>  <p><strong>Current Behaviour</strong></p>  <p>After implementing the steps below, I am getting Python errors from <code>tail -100 /var/log/apache2/error.log</code> which ends in:</p>  <pre><code>[wsgi:error] [pid 8953:tid 140138351044352] [client 127.0.0.1:32820] LoopExit: ('This operation would block forever', &lt;Hub at 0x7f746570d7d0 epoll default pending=0 ref=0 fileno=13 resolver=&lt;gevent.resolver_thread.Resolver at 0x7f74656737d0 pool=&lt;ThreadPool at 0x7f7465615210 0/1/10&gt;&gt; threadpool=&lt;ThreadPool at 0x7f7465615210 0/1/10&gt;&gt;) </code></pre>  <p><strong>What I've Tried</strong></p>  <p>I am following this official <a href=""http://bottlepy.org/docs/dev/async.html#finally-websockets"" rel=""nofollow noreferrer"">brief Bottle example</a> to include WebSocket functionality in an existing Python 2.7 Bottle application.</p>  <p>This is the relevant Python code I have:</p>  <pre><code>from bottle import route, post, default_app, template, view, TEMPLATE_PATH, response, request, static_file, install, redirect, abort  application=default_app()  @route('/websocket') def handle_websocket():     wsock = request.environ.get('wsgi.websocket')     if not wsock:         abort(400, 'Expected WebSocket request.')      while True:         try:             message = wsock.receive()             wsock.send(""Your message was: %r"" % message)         except WebSocketError:             break  from gevent.pywsgi import WSGIServer from geventwebsocket import WebSocketError from geventwebsocket.handler import WebSocketHandler server = WSGIServer((""127.0.0.1"", 8080), application,                     handler_class=WebSocketHandler) server.serve_forever() </code></pre>  <p>Following <a href=""https://stackoverflow.com/a/31602136/1063287"">this answer</a>, I added the following above the last section of imports:</p>  <pre><code>from gevent import monkey, sleep monkey.patch_all() </code></pre>  <p>And the same error occurred after a <code>sudo systemctl restart apache2.service</code>:</p>  <pre><code>[wsgi:error] [pid 9252:tid 140619290474240] [client 127.0.0.1:33322] LoopExit: ('This operation would block forever', &lt;Hub at 0x7fe45f274c30 epoll default pending=0 ref=0 fileno=13 resolver=&lt;gevent.resolver_thread.Resolver at 0x7fe45f1bfa10 pool=&lt;ThreadPool at 0x7fe45f18a110 0/1/10&gt;&gt; threadpool=&lt;ThreadPool at 0x7fe45f18a110 0/1/10&gt;&gt;) </code></pre>  <p>And via virtualenv I have installed:</p>  <pre><code>pip install gevent pip install gevent-websocket </code></pre>  <p><strong>Javascript</strong></p>  <p>WebSockets, and the related terminology, are new to me, so I am just trying to get the simple example working and then build from there.  </p>  <pre><code>$(document).on(""click"","".my_class, function () { var ws = new WebSocket(""ws://localhost:8080/websocket""); ws.onopen = function() { ws.send(""Hello, world""); }; ws.onmessage = function (evt) { alert(evt.data); }; }); </code></pre>"	
39087614	How to trigger a variable/method in python from a html file with javascript	javascript|python|html|flask-sqlalchemy	2016-08-22 19:50:30.207000 UTC	"<p>I want to have a hyperlink on a html page run a variable that is defined in my python file. The variable is going to clear my database. Here is the code I am trying to use. </p>  <p><strong>Python</strong></p>  <pre><code>@app.route('/log') def log(): cleardb = db.session.delete() return render_template('log.html', cleardb=cleardb) </code></pre>  <p><strong>Html</strong></p>  <pre><code>&lt;a onclick=""myFunction()""&gt;Clear database&lt;/a&gt; </code></pre>  <p><strong>Javascript</strong></p>  <pre><code>&lt;script&gt; function myFunction() &lt;/script&gt; </code></pre>  <p>I don't know what javascript I need to run the variable. I want to make the cleardb get triggered so that it will delete the database.</p>  <p>Thanks</p>"	"<p>You need to make an ajax request with javascript to /log, it would look something like this:</p>  <pre><code>function myFunction() {   var xmlhttp = new XMLHttpRequest();     xmlhttp.onreadystatechange = function() {        if (xmlhttp.readyState == XMLHttpRequest.DONE ) {           if (xmlhttp.status == 200) {               //Do Success functionality here           }           else if (xmlhttp.status == 400) {             //Handle 400 errors here           }           else {             //All other errors go here           }        }    };     xmlhttp.open(""GET"", ""/log"", true);    xmlhttp.send(); } </code></pre>"
39090006	"Websocket: javascript as client and python as server, and web host on Linux"	javascript|python|websocket|server|tcp	2016-08-22 23:03:41.477000 UTC	"<p>I need to build a website in which Javascript is used as the client language to communicate with a python server over websockets. The website needs to be hosted on Linux. For now, I'm using command <code>python -m SimpleHTTPServer</code> to build a simple server, and the server is also on the Linux and using python.  </p>  <p>How do I go about at setting up the javascript client websocket communication? Or how should I approach the architecture?</p>"	"<p>Assuming that your python websocket server is up an running. You can connect with it through your website through either html5:</p>  <pre><code>socket= new WebSocket('ws://www.example.com:8000/somesocket'); socket.onopen= function() {     socket.send('hello'); }; socket.onmessage= function(s) {     alert('got reply '+s); }; </code></pre>  <p>Or via</p>  <p><a href=""http://raw-sockets.sysapps.org/#interface-tcpsocket"" rel=""nofollow"">http://raw-sockets.sysapps.org/#interface-tcpsocket</a></p>  <p><a href=""https://www.w3.org/TR/tcp-udp-sockets/"" rel=""nofollow"">https://www.w3.org/TR/tcp-udp-sockets/</a></p>  <pre><code>navigator.tcpPermission.requestPermission({remoteAddress:""127.0.0.1"", remotePort:6789}).then(   () =&gt; {     // Permission was granted     // Create a new TCP client socket and connect to remote host     var mySocket = new TCPSocket(""127.0.0.1"", 6789);      // Send data to server     mySocket.writeable.write(""Hello World"").then(         () =&gt; {              // Data sent sucessfully, wait for response             console.log(""Data has been sent to server"");             mySocket.readable.getReader().read().then(                 ({ value, done }) =&gt; {                     if (!done) {                         // Response received, log it:                         console.log(""Data received from server:"" + value);                     }                      // Close the TCP connection                     mySocket.close();                 }             );         },         e =&gt; console.error(""Sending error: "", e);     ); </code></pre>  <p>Whatever your server looks like, you always need to make sure your server and client use the same ""protocol"", i.e. they use the same variables to send and order in which to send them. </p>  <p>If you also need to set up a socket server in python, I suggest you look at some tutorials online as this is a non-trivial task: <a href=""http://www.binarytides.com/python-socket-server-code-example/"" rel=""nofollow"">http://www.binarytides.com/python-socket-server-code-example/</a></p>"
39096901	Call Javascript from python	javascript|python	2016-08-23 09:06:48.967000 UTC	"<p>I am looking for a way to call a js function from a python function. I am coming to you because I also need my js function to use DOM, so pyv8 for example is not a solution.. Do you guys have any idea? Is it even possible?</p>  <p>Thanks in advance.</p>"	"<p>According to <a href=""https://stackoverflow.com/a/30537286/6353933"">https://stackoverflow.com/a/30537286/6353933</a>,</p>  <pre><code>import js2py  js = """""" function escramble_758(){ var a,b,c a='+1 ' b='84-' a+='425-' b+='7450' c='9' document.write(a+c+b) } escramble_758() """""".replace(""document.write"", ""return "")  result = js2py.eval_js(js)  # executing JavaScript and converting the result to python string  </code></pre>  <p>Advantages of Js2Py include portability and extremely easy integration with python (since basically JavaScript is being translated to python).</p>  <p>To install:</p>  <pre><code>pip install js2py </code></pre>"
39096901	Call Javascript from python	javascript|python	2016-08-23 09:06:48.967000 UTC	"<p>I am looking for a way to call a js function from a python function. I am coming to you because I also need my js function to use DOM, so pyv8 for example is not a solution.. Do you guys have any idea? Is it even possible?</p>  <p>Thanks in advance.</p>"	"<p>PyExecJS seems to be a good option.</p>  <pre><code>&gt;&gt;&gt; import execjs &gt;&gt;&gt; execjs.eval(""'red yellow blue'.split(' ')"") ['red', 'yellow', 'blue'] &gt;&gt;&gt; ctx = execjs.compile("""""" ...     function add(x, y) { ...         return x + y; ...     } ... """""") &gt;&gt;&gt; ctx.call(""add"", 1, 2) 3 </code></pre>  <p>to install:</p>  <pre><code>$ pip install PyExecJS </code></pre>"
39118093	Using javascript to update HTML in python loop	javascript|python|html|multithreading|progress-bar	2016-08-24 08:24:26.257000 UTC	"<p>I'm currently trying to integrate a progress bar to my website. I've successfully put it in my web page, and I am trying to animate it now.</p>  <p>I have a js script that updates the progress bar every second, which is exactly what I want, but the problem is that if you refresh the page, the progress bar gets back to the beginning, even if it was in progress when the page was refreshed.</p>  <p>So I've decided to use python, to start a thread, so refreshing the page would not make the progress bar going back to 0%, and that is basically a loop that calculates the percentage of progress every second.</p>  <p>I'm now trying to find a way to make my progress bar moving by changing the HTML and the CSS every second.</p>  <p>So, my question is : Can I call a js function from my python thread? And if it's not possible, is there a way to update HTML directly from python? Like a library or something?</p>  <p>If you have any other idea about this, do not hesitate.</p>  <p>If you wonder how the code looks like, here is a part of the python : </p>  <pre><code>print ""starting test"" while s &lt;= total:    percent = (100 * s) / total    print percent    res[""data""][""value""] = percent    //!\\--&gt;Want to send RES to JS    time.sleep(1)    s = s + 1 print ""test is over"" </code></pre>  <p>and here is a part of the js : </p>  <pre><code>if (data.type == ""init"") {   console.log(""Receiving Init info""); } else if (data.type == ""record"") { console.log(""Receiving record info"");     if (data.data.object == ""progress-bar"") {     var elem = document.getElementById(""myBar"");     elem.style.width = data.data.value + '%';     document.getElementById(""label"").innerHTML = data.data.value * 1 + '%';     } } </code></pre>  <p>Thanks in advance!</p>"	"<p>You can use Web Sockets and in javascript you can receive the data from server and update the progress bar. Please check the article below:</p>  <p><a href=""https://www.fullstackpython.com/websockets.html"" rel=""nofollow"">Web Sockets</a></p>"
39133959	Can python functions run in html as javascript does?	javascript|python|function	2016-08-24 22:28:51.343000 UTC	"<p>How should I go about turning my JavaScript functions into Python functions so as to have my project's code structure as close as possible to what I already have? Would for instance Python functions run embedded in HTML as JavaScript functions do? Of course, I did not try that yet and I am assuming it is not that simple, but I don't understand why. Would it only be because browsers don't have Python available out of the box?</p>  <pre><code>&lt;script type=""text/python""&gt;     def myFunction (x):         if x &gt; 10:             print(""x is larger than 10"") &lt;/script&gt; </code></pre>  <p>instead of:</p>  <pre><code>&lt;script type=""text/javascript""&gt;     function myFunction () {         if (x &gt; 10) {             alert(""x is larger than 10"");         }     } &lt;/script&gt; </code></pre>"	"<p>It is not possible to run Python in any modern browser because, while theoretically possible, none contain a python interpreter. Javascript is the only language which runs in a browser without plugins like Flash or ActiveX.</p>  <p>One possibility for being able to write Python code that will eventually run in the browser is to use a ""transpiler"". This is a tool that will compile the python code into Javascript. So the browser is ultimately running the language it knows, but you're writing Python. There are already a number of languages like <a href=""http://coffeescript.org/"" rel=""nofollow noreferrer"">CoffeeScript</a>, <a href=""https://www.typescriptlang.org/"" rel=""nofollow noreferrer"">TypeScript</a> and even <a href=""https://facebook.github.io/react/docs/jsx-in-depth.html"" rel=""nofollow noreferrer"">React JSX templates</a> that compile down to raw javascript.</p>  <p>An example of a Python to Javascript transpiler is <a href=""http://www.transcrypt.org/"" rel=""nofollow noreferrer"">Transcript</a>. Just keep in mind, since it's not actually Python, there are no guarantees for performance or compatibility since that's largely up to how well the transpiler does it's conversion. You may start with a 2 line Python script that compiles into 30 lines of javascript in order to replicate what you're trying to do.</p>  <p>Below is an example of Transcript compilation:</p>  <p><a href=""https://i.stack.imgur.com/zwqWI.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/zwqWI.png"" alt=""enter image description here""></a></p>"
39187340	"simulate browser behaviour via Python (javascript, DOM)"	javascript|python|dom|browser|simulation	2016-08-28 01:53:04.003000 UTC	"<p>Is it possible to simulate a browser via Python?</p>  <p>Example:</p>  <p>There are actions on a website, that can be just done with javascript. Is it also possible, to load such a website (with executing all its javascript, http requests, DOM) in python and then run custom javascript on it, after DOM is built? Like the behaviour of a lightweight browser, just without all graphical rendering stuff.</p>"	
39203109	odoo 8 website javascript python	javascript|python|web|odoo-8	2016-08-29 09:42:39.703000 UTC	"<p>I'm a beginner with odoo and I must create a website. I want use JavaScript on my website. But when I read many forums, I don't understand how I can use JavaScript.</p>  <p>Actually, I have a checkbox on my website and I would like when you tick a checkbox, my result would change automatically. I don't know if it's possible with Odoo.</p>"	
39228200	How do i make javascript discover my python server etc using broadcast	javascript|python	2016-08-30 12:59:04.940000 UTC	"<p>I want to make a server using python, and the auto discover it using a web aplication.</p>  <p>I know i can make a python->python discovery using <a href=""https://stackoverflow.com/questions/18080094/how-to-make-a-server-discoverable-to-lan-clients"">How to make a server discoverable to LAN clients</a> from this thread. But i can't find a way to make the javascript discover that server.</p>  <p>It would be great if I could use the same connection, or at least the same port to make a socket server where i can send commands back and forth.</p>  <p>Any ideas?</p>"	
39245179	Access a dictionary used like JavaScript object in Python	python|dictionary	2016-08-31 09:02:07.857000 UTC	"<p>Okay, I have an object var with some values:</p>  <pre><code>mm = 0.001  screenDims = {} screenDims['width'] = mm * 500 screenDims['height'] = mm * 300 screenDims['depth'] = mm * 10 </code></pre>  <p>I've created a tiny function to use these values. Inside my function I have a line:</p>  <pre><code>def createScreen(screenDims,radialdist,theta):      #... some code that creates the object fine ...      bpy.ops.transform.resize(value=(screenDims.width, screenDims.height, screenDims.depth), ... ) </code></pre>  <p>When I execute this, it throws an error that my object variable <code>screenDims</code> doesn't have a value for <code>width</code>. </p>  <p>Is there some secret for passing in object vars? Is the variable out of scope because its inside the resize function? or value designator? </p>  <p>I'm confused. </p>"	"<p>There are two ways of accessing a dictionary element:-</p>  <ol> <li>Using get() method of dictionary -</li> </ol>  <blockquote>   <p>bpy.ops.transform.resize(value=(screenDims.get(""width""),   screenDims.get(""height""), screenDims.get(""depth"")), ... )</p> </blockquote>  <ol start=""2""> <li>You can read them the same way you wrote to create the dictionary-</li> </ol>  <blockquote>   <p>bpy.ops.transform.resize(value=(screenDims[""width""],   screenDims[""height""], screenDims[""depth""]), ... )</p> </blockquote>  <p>The benefit with using get method is that you can provide some default value to be returned in case the key is not present inside the dictionary. e.g.-</p>  <blockquote>   <p>screenDims.get(""height"",""default_value"")</p> </blockquote>  <p><strong>.</strong> (dot) operator is used for accessing attributes of an object, which can either be value or method.</p>"
39245179	Access a dictionary used like JavaScript object in Python	python|dictionary	2016-08-31 09:02:07.857000 UTC	"<p>Okay, I have an object var with some values:</p>  <pre><code>mm = 0.001  screenDims = {} screenDims['width'] = mm * 500 screenDims['height'] = mm * 300 screenDims['depth'] = mm * 10 </code></pre>  <p>I've created a tiny function to use these values. Inside my function I have a line:</p>  <pre><code>def createScreen(screenDims,radialdist,theta):      #... some code that creates the object fine ...      bpy.ops.transform.resize(value=(screenDims.width, screenDims.height, screenDims.depth), ... ) </code></pre>  <p>When I execute this, it throws an error that my object variable <code>screenDims</code> doesn't have a value for <code>width</code>. </p>  <p>Is there some secret for passing in object vars? Is the variable out of scope because its inside the resize function? or value designator? </p>  <p>I'm confused. </p>"	"<p>To access elements in a dictionary, you have to read them like you write them:</p>  <pre><code>    bpy.ops.transform.resize(value=(screenDims[""width""], screenDims[""height""], screenDims[""depth""]), ... ) </code></pre>  <p>There is a difference between <em>attributes</em> and <em>keys</em> in a dictionary. Keys are accessed using the bracket notation (like are elements in an array, so there is the analogy). </p>  <p>Attributes are used for methods and values whose existence is usually determined by the <em>type</em> of the object, while the index notation is used for elements in the container. This helps distinguishing methods such as <code>screenDims.clear()</code> which would delete all elements in the dictionary from an element set with </p>  <pre><code>screenDims[""clear""] = ... </code></pre>  <p>More informaiton on dictionaries is found <a href=""https://docs.python.org/3/tutorial/datastructures.html#dictionaries"" rel=""nofollow"">in the official Python Tutorial, section Dictionaries</a>.</p>"
39296646	Python: get the result of a request to to Javascript button	python|beautifulsoup|web-crawler	2016-09-02 16:05:35.330000 UTC	"<p>Python code is to go to: <a href=""http://www.youtube-mp3.org/"" rel=""nofollow"">http://www.youtube-mp3.org/</a> </p>  <p>Pass the form and convert button a link to a video and retrieve the resultant download link.</p>  <p>My python code:</p>  <pre><code>page = 'http://www.youtube-mp3.org/' video = ""http://www.youtube.com/watch?v=SOMETHING"" session = requests.Session() session = session.post('http://www.youtube-mp3.org/',data={'youtube-url': video}) soup= BeautifulSoup(session.text,'lxml') for link in soup.find_all('a'):     print(link) </code></pre>  <p>The problem is that even after passing the data to the convert button, the page is not reloaded and the source code remains the same, hence the download link is not in the source code and I do not know how to get it.</p>"	
39309558	How to access the same JSON file from both javascript and python?	javascript|python|json	2016-09-03 17:29:50.947000 UTC	"<p>NOTE: This is not for web programming. We use javascript to interface with low level hardware, hence let's not go with jQuery APIs etc.</p>  <p>I have a javascript file that performs a sequence of actions on a device, and I have a python file that will be invoked later to validate these actions. There is a set of hardware information hard-coded in both javascript file and python file. I want to avoid this duplication of information by putting these info into a JSON file so both can access it.</p>  <pre><code>// Javascript var hardware_info = JSON.parse(load('hardware.json')); // load() is probably not standard javascript API, but it basically copies that code into the existing script. </code></pre>  <p>Already failed by this step because '<code>hardware.json</code>' is not using javascript syntax...</p>  <p>I already validated the json using jshint/jslint, <code>hardware.json</code> looks like this:</p>  <pre><code>{     ""hardware1"": {         ""ID"": ""xxx""     },     ""hardware2"": {         ""ID"": ""yyy""     } } </code></pre>  <p>The following Python works well for accessing the json, there is not much to it:</p>  <pre><code>with open('hardware.json', 'r') as f:     data = json.load(f) </code></pre>"	"<p>It looks like <code>load()</code> <em>executes</em> the specified file, not read it and return the contents. If this is your <em>only</em> option to read another file, then I suggest you use <a href=""https://en.wikipedia.org/wiki/JSONP"" rel=""nofollow"">JSONP</a> instead of JSON.</p>  <p>JSONP works by adding a <em>callback</em> around the data. Instead of:</p>  <pre><code>{""key"": ""value""} </code></pre>  <p>the file contains a function call with the data being passed in:</p>  <pre><code>callback({""key"": ""value""}); </code></pre>  <p>This is meant to be executed by a JavaScript engine, causing it to execute the callback. <code>load()</code> would execute your file, and the callback function would be called as a result, passing in the data.</p>  <p>When used on the web, you'd call a JSONP service and pass in the name of the callback the service should add, but when just sharing a configuration file between a JS engine and Python, you'd hardcode that callback name.</p>  <p>In Python, you'd have to strip off the callback text before loading it as JSON data. That could be as easy as just removing the first N and last M characters:</p>  <pre><code>with open('hardware.json', 'r') as f:     jsonp_data = f.read()     # remove first 9 and last 3 characters to remove JSONP callback     data = json.loads(jsonp_data[9:-3]) </code></pre>  <p>A little more sophisticated technique could use newlines:</p>  <pre><code>callback( {""key"": ""value""} ); </code></pre>  <p>to make it easier to remove the first and last line in Python. Or you could use <code>jsonp_data.partition('(')[-1].jsonp.rpartition(')')[0]</code> to take everything between the first <code>(</code> and the last <code>)</code> character in the string. Etc.</p>"
39313421	Does python have an equivalent to Javascript's 'btoa'	python|base64	2016-09-04 03:58:57.077000 UTC	"<p>I'm trying to find an exact equivalent to javascript's function 'btoa', as I want to encode a password as base64. It appears that there are many options however, as listed here: </p>  <p><a href=""https://docs.python.org/3.4/library/base64.html"" rel=""noreferrer"">https://docs.python.org/3.4/library/base64.html</a></p>  <p>Is there an exact equivalent to 'btoa' in python? </p>"	"<p>if you are in django, usually a bit tricky with types.</p> <pre class=""lang-py prettyprint-override""><code>import json import base64   data = [{&quot;a&quot;: 1, &quot;b&quot;: 2}]  btoa = lambda x:base64.b64decode(x) atob = lambda x:base64.b64encode(bytes(x, 'utf-8')).decode('utf-8')  encoded = atob(json.dumps(data)) print(encoded) # W3siYSI6IDEsICJiIjogMn1d print(type(encoded)) # &lt;class 'str'&gt;  decoded = json.loads(btoa(encoded)) print(decoded) # [{'a': 1, 'b': 2}] print(type(decoded)) # &lt;class 'list'&gt; </code></pre>"
39313421	Does python have an equivalent to Javascript's 'btoa'	python|base64	2016-09-04 03:58:57.077000 UTC	"<p>I'm trying to find an exact equivalent to javascript's function 'btoa', as I want to encode a password as base64. It appears that there are many options however, as listed here: </p>  <p><a href=""https://docs.python.org/3.4/library/base64.html"" rel=""noreferrer"">https://docs.python.org/3.4/library/base64.html</a></p>  <p>Is there an exact equivalent to 'btoa' in python? </p>"	"<p>I tried the python code and got (with python3) <code>TypeError: a bytes-like object is required, not 'str'</code></p>  <p>When I added the encode it seems to work</p>  <pre><code>import base64  dataString = 'Hello World!' dataBytes = dataString.encode(""utf-8"") encoded = base64.b64encode(dataBytes)  print(encoded)  # res=&gt; b'SGVsbG8gV29ybGQh' </code></pre>"
39313421	Does python have an equivalent to Javascript's 'btoa'	python|base64	2016-09-04 03:58:57.077000 UTC	"<p>I'm trying to find an exact equivalent to javascript's function 'btoa', as I want to encode a password as base64. It appears that there are many options however, as listed here: </p>  <p><a href=""https://docs.python.org/3.4/library/base64.html"" rel=""noreferrer"">https://docs.python.org/3.4/library/base64.html</a></p>  <p>Is there an exact equivalent to 'btoa' in python? </p>"	"<p>Python's <a href=""https://docs.python.org/3/library/base64.html"" rel=""nofollow noreferrer"">Base64</a>:</p> <pre><code>import base64  encoded = base64.b64encode(b'Hello World!') print(encoded)  # value of encoded is SGVsbG8gV29ybGQh </code></pre> <p>Javascript's <a href=""http://www.w3schools.com/jsref/met_win_btoa.asp"" rel=""nofollow noreferrer"">btoa</a>:</p> <pre><code>var str = &quot;Hello World!&quot;; var enc = window.btoa(str);  var res = enc;  // value of res is SGVsbG8gV29ybGQh </code></pre> <p>As you can see they both produce the same result.</p>"
39314130	Python 2 Javascript (Pako) decompress error	javascript|python|websocket|zlib	2016-09-04 06:24:01.960000 UTC	"<p>Trying to compress string in the server (python/zlib), send data to client (websockets) and decompress via pako. Compression, sending and receiving data is ok. But I cant decompress the blob.</p>  <p>Here is the python (server-side) code. Sending to client via websocket:</p>  <p><code>sock.write_message(zlib.compress(""some text""), binary=True)</code></p>  <p>Here is client code (javascript, for decompress using pako):</p>  <pre><code>g_Socket.onmessage = function (e) {     console.log(e.data); //Blob     var result = pako.inflate(e.data, { to: 'string' }); </code></pre>  <p>The error is: pako.js:787 Uncaught unknown compression method</p>  <p>Any help please =(</p>"	
39314501	Javascript date string to python datetime object	javascript|python|django|datetime	2016-09-04 07:21:23.637000 UTC	"<p>The current datetime is passed via an <strong>ajax request</strong> to a <strong>django backend</strong> where it will be stored in the database. To store it in the database, the date must first be converted to a <code>datetime</code> object which can be done for a date of the in UTC format (Eg. <code>Sun, 04 Sep 2016 07:13:06 GMT</code>) easily by the following statement:</p>  <pre><code>&gt;&gt;&gt; from datetime import datetime &gt;&gt;&gt; datetime.strptime(""Sun, 04 Sep 2016 07:13:06 GMT"", ""%a, %d %b %Y %H:%M:%S %Z"") </code></pre>  <p>However in such a method, there is no preservation of the user's timezone.</p>  <p>The javascript <code>Date</code> constructor call i.e. <code>new Date()</code> returns a date in the following format:</p>  <pre><code>Sun Sep 04 2016 12:38:43 GMT+0530 (IST) </code></pre>  <p>which gives an error when converting to datetime object.</p>  <pre><code>&gt;&gt;&gt; datetime.strptime(""Sun, 04 Sep 2016 07:13:06 GMT+0530 (IST)"", ""%a, %d %b %Y %H:%M:%S %Z"")  ValueError: time data 'Sun Sep 04 2016 12:46:07 GMT+0530 (IST)' does not match format '%a, %d %b %Y %H:%M:%S %Z' </code></pre>  <p>1) How to resolve this problem? 2) Is there any better way to approach it?</p>"	"<p>Your first problem is that the input has a different format. But unfortunatelly for you, that is not your only problem and it wouldn't work even if you fixed that.</p>  <p>The truth is that even the first format would fail with a different timezone:</p>  <pre><code>datetime.strptime(""Sun, 04 Sep 2016 07:13:06 IST"", ""%a, %d %b %Y %H:%M:%S %Z"") </code></pre>  <p>fails with:</p>  <pre><code>ValueError: time data 'Sun, 04 Sep 2016 07:13:06 IST' does not match format '%a, %d %b %Y %H:%M:%S %Z' </code></pre>  <p><code>strptime</code> just isn't good enough for handling timezones.</p>  <p>Check these answers for your options:</p>  <ul> <li><a href=""https://stackoverflow.com/a/12282040/389289"">Answer to <em>Convert timestamps with offset to datetime obj using strptime</em></a></li> <li><a href=""https://stackoverflow.com/a/8525115/389289"">Answer to <em>Python strptime() and timezones?</em></a></li> </ul>"
39314501	Javascript date string to python datetime object	javascript|python|django|datetime	2016-09-04 07:21:23.637000 UTC	"<p>The current datetime is passed via an <strong>ajax request</strong> to a <strong>django backend</strong> where it will be stored in the database. To store it in the database, the date must first be converted to a <code>datetime</code> object which can be done for a date of the in UTC format (Eg. <code>Sun, 04 Sep 2016 07:13:06 GMT</code>) easily by the following statement:</p>  <pre><code>&gt;&gt;&gt; from datetime import datetime &gt;&gt;&gt; datetime.strptime(""Sun, 04 Sep 2016 07:13:06 GMT"", ""%a, %d %b %Y %H:%M:%S %Z"") </code></pre>  <p>However in such a method, there is no preservation of the user's timezone.</p>  <p>The javascript <code>Date</code> constructor call i.e. <code>new Date()</code> returns a date in the following format:</p>  <pre><code>Sun Sep 04 2016 12:38:43 GMT+0530 (IST) </code></pre>  <p>which gives an error when converting to datetime object.</p>  <pre><code>&gt;&gt;&gt; datetime.strptime(""Sun, 04 Sep 2016 07:13:06 GMT+0530 (IST)"", ""%a, %d %b %Y %H:%M:%S %Z"")  ValueError: time data 'Sun Sep 04 2016 12:46:07 GMT+0530 (IST)' does not match format '%a, %d %b %Y %H:%M:%S %Z' </code></pre>  <p>1) How to resolve this problem? 2) Is there any better way to approach it?</p>"	"<p>You can use python's <code>dateutil</code> module to parse your date.</p>  <pre><code>from dateutil import parser parser.parse(""Sun, 04 Sep 2016 07:13:06 GMT+0530 (IST)"") </code></pre>  <p>It gives the output as a datetime object:</p>  <pre><code>datetime.datetime(2016, 9, 4, 7, 13, 6, tzinfo=tzoffset(u'IST', -19800)) </code></pre>"
39352311	Attach file in Angular JS page using Selenium Python Javascript executor	javascript|python|angularjs|selenium	2016-09-06 15:05:36.007000 UTC	"<p>I need to upload a file to a webpage using selenium python Javascript executor.  The webpage code looks like.. </p>  <pre><code>&lt;label for=""file81""&gt; &lt;i class=""mdi mdi-attachment"" aria-hidden=""true""/&gt; &lt;span class=""sr-only""&gt;Attach files to this message&lt;/span&gt; &lt;/label&gt; &lt;input id=""file81"" class=""sr-only ng-pristine ng-valid ng-empty ng-touched"" type=""file"" multiple="""" onchange=""angular.element(this).scope().fileNameChanged(this)"" ng-model=""messageAttachment""/ </code></pre>  <p>Can anbody tell me how to upload file in this using javascript executor. Thanks</p>"	
39376972	Web Scraping Javascript Using Python	python|python-2.7	2016-09-07 18:36:44.067000 UTC	"<p>I am used to using BeautifulSoup to scrape a website, however this website is different. Upon soup.prettify() I get back Javascript code, lots of  stuff. I want to scrape this website for the data on the actual website (company name, telephone number etc). Is there a way of scraping these scripts such as Main.js to retrieve the data that is displayed on the website to me?  </p>  <p>Clear version:</p>  <p>Code is: </p>  <pre><code>&lt;script src=""/docs/Main.js"" type=""text/javascript"" language=""javascript""&gt;&lt;/script&gt; </code></pre>  <p>This holds the text that is on the website. I would like to scrape this text however it is populated using JS not HTML (which I used to use BeautifulSoup for).</p>"	"<p>You're asking if you can scrape text generated at runtime by Javascript. The answer is sort-of.</p>  <p>You'd need to run some kind of <a href=""https://github.com/dhamaniasad/HeadlessBrowsers"" rel=""nofollow"">headless browser</a>, like PhantomJS, in order to let the Javascript execute and populate the page. You'd then need to feed the HTML that the headless browser generates to BeautifulSoup in order to parse it.</p>"
39398592	Python: Get javascript file from href tag of html	javascript|python|html|web|web-scraping	2016-09-08 19:14:59.547000 UTC	"<p>Consider a website similar to this one:</p>  <p><a href=""http://a810-bisweb.nyc.gov/bisweb/COsByLocationServlet?requestid=1&amp;allbin=3055311"" rel=""nofollow"">http://a810-bisweb.nyc.gov/bisweb/COsByLocationServlet?requestid=1&amp;allbin=3055311</a></p>  <p>As one can see, the website contains links to pdf files referenced by an href tag in the page source, e.g.:</p>  <pre><code>&lt;a href=""javascript:$('form_cofo_pdf_view_B000114563.PDF').submit();""&gt;B000114563.PDF&lt;/a&gt; </code></pre>  <p>I would like to open the underlying file using python, effectively scraping the results.</p>  <pre><code>req = urllib2.Request(""link.com"") page = urllib2.urlopen(req) soup = BeautifulSoup(page)  links = [] for link in soup.findAll('a'):     links.append(link.get(""href"")) </code></pre>  <p>Normally I would just connect the base url with the href url to get the documents, but here, they are referenced with javascript. Hence I am not entirely sure how to access the files.</p>  <p>I would prefer to use urrlib2 and BeautifulSoup and not switch to Selenium to click on links. Does anyone have an idea to accomplish that? It would be greatly appreciated.</p>"	"<p>I downloaded few files and compared direct link with its name and all elements required in link you have in filename</p>  <p>Filename:</p>  <pre><code>form_cofo_pdf_view_B000114563.PDF </code></pre>  <p>Direct link:</p>  <pre><code>http://a810-bisweb.nyc.gov/bisweb/CofoDocumentContentServlet ?passjobnumber=null &amp;cofomatadata1=cofo &amp;cofomatadata2=B &amp;cofomatadata3=000 &amp;cofomatadata4=114000 &amp;cofomatadata5=B000114563.PDF </code></pre>  <p>So you can create direct link when you get filename from string <code>javascript:$('form_cofo_pdf_view_B000114563.PDF').submit();</code></p>  <p>Working code: <a href=""http://pastebin.com/kt72GSyYa"" rel=""nofollow"">http://pastebin.com/kt72GSyYa</a></p>"
39438799	"How to use a python script to open a rendered HTML page in browser, wait for user key inputs/run javascript, return input information to python script"	javascript|python	2016-09-11 17:31:18.707000 UTC	"<p>I am trying to write a python script that launches an HTML page on a browser (or at least renders the HTML page/code graphically somehow), at which point the script waits for a series of user key inputs from the page in the browser- the key presses will change the css of some DOM elements and when an enter key is pressed, information about the 'currently selected' element will return to the python script and close the browser. This requires traversing the DOM element tree (which I can do with BeautifulSoup) WHILE re-rendering style of elements on a visible browser. </p>  <p>I have been trying to find a library or webkit that lets me do this but I can only find headless tools... but it is necessary for this to have a visual display that a user can interact with. </p>  <p>I think I can figure out how to do everything in parts but I'm confused about the overall structure of how to allow communication between a python script on my machine and a javascript script in a browser. Any guidance is appreciated!</p>"	
39442316	Select option from javascript span with python and selenium	python|selenium	2016-09-12 01:33:34.580000 UTC	"<p>I'm trying to generate a bot to automatically make orders from walmart, but it seems like I just can't get selected the color and the quantity, since they are not really selectors and they have no id. I'm working with python and selenium.</p>  <p>The item using for tests right now is this one: <a href=""https://www.walmart.com/ip/8-x10-Picture-Frames-Set-of-6/10404226"" rel=""nofollow"">https://www.walmart.com/ip/8-x10-Picture-Frames-Set-of-6/10404226</a></p>  <p>About the quantity I think I was able to select the list with:</p>  <pre><code>quantity = walmart.find_element_by_css_selector(""span.product-quantity-dropdown-wrapper"") </code></pre>  <p>but after that I just can't select the quantity.</p>"	"<p>As far as <code>quantity</code> goes, you can operate <em>the actual <code>select</code> element</em> (via the <a href=""http://selenium-python.readthedocs.io/api.html#selenium.webdriver.support.select.Select"" rel=""nofollow""><code>Select</code> class</a>) which is not visually detected, but is actually visible. As for the color, you can <em>dynamically construct an XPath expression</em> to locate the color ""by name"". </p>  <p>Complete working implementation (selects white color and quantity = 2):</p>  <pre><code>import time from selenium.webdriver.common.by import By from selenium.webdriver.support.select import Select from selenium.webdriver.support.ui import WebDriverWait from selenium.webdriver.support import expected_conditions as EC from selenium import webdriver   driver = webdriver.Chrome(""/usr/local/bin/chromedriver"") driver.maximize_window() driver.get(""https://www.walmart.com/ip/8-x10-Picture-Frames-Set-of-6/10404226"")  color = ""White"" quantity = 2  wait = WebDriverWait(driver, 10)  # select color color_selector = wait.until(EC.visibility_of_element_located((By.XPATH, ""//span[@class = 'variant-swatch' and @title='{color}']/.."".format(color=color)))) color_selector.click()  # harcode delay - see if you can avoid it time.sleep(0.5)  # select quantity quantity_selector = wait.until(EC.visibility_of_element_located((By.ID, ""WMItemQtyDropDown""))) quantity_selector = Select(quantity_selector) quantity_selector.select_by_value(str(quantity)) </code></pre>  <p>That said, make sure you are not violating any Terms of Use and staying on the legal side. Make sure to explore the <a href=""https://developer.walmartlabs.com/"" rel=""nofollow"">Walmart API</a> as well (see @MattDMo's comment).</p>"
39488311	Python: Reproduce Splinter/ Selenium Behaviour for Testing a Website That Uses Javascript	javascript|python|selenium|splinter	2016-09-14 10:36:40.327000 UTC	"<p>I have a bot which interacts with a website using Splinter and Selenium. The website uses Javascript and updates in real time. The bot works well 90% of the time, but due to random events it will sometimes raise an Exception. It is very hard for me to debug these events, by the time I am in the debugger the website has changed. </p>  <p>Is there anyway I can record the website data and play it back, like with vcrpy? Or is there anyway I can record the behaviour so I can debug and test? </p>"	"<p>Closest thing you can do is to take screen shots of web page on various events. You will have to use EventFiringWebDriver. Whichever even you want to take screen shot call <code>screen_shot</code> function there.</p>  <pre><code>from selenium.webdriver.support.events import EventFiringWebDriver from selenium.webdriver.support.events import AbstractEventListener import os import time class ScreenShotListener(AbstractEventListener):     DIR_NAME = None     def screen_shot(self, driver):         dir = os.path.curdir         unique_filename = str(int(time.time() * 1000)) + "".png""         fpath = os.path.join(dir, unique_filename)         driver.get_screenshot_as_file(fpath)      def before_navigate_to(self, url, driver):         pass      def after_navigate_to(self, url, driver):         pass      def before_navigate_back(self, driver):         pass      def after_navigate_back(self, driver):         pass      def before_navigate_forward(self, driver):         pass      def after_navigate_forward(self, driver):         pass      def before_find(self, by, value, driver):         pass      def after_find(self, by, value, driver):         pass      def before_click(self, element, driver):         pass      def after_click(self, element, driver):         pass      def before_change_value_of(self, element, driver):         pass      def after_change_value_of(self, element, driver):         pass      def before_execute_script(self, script, driver):         pass      def after_execute_script(self, script, driver):         pass      def before_close(self, driver):         pass      def after_close(self, driver):         pass      def before_quit(self, driver):         pass      def after_quit(self, driver):         pass      def on_exception(self, exception, driver):         pass  driver = EventFiringWebDriver(driver, ScreenShotListener()) </code></pre>"
39508633	Javascript callback to python form that redirects after submission	javascript|jquery|python|forms	2016-09-15 10:20:00.570000 UTC	"<p>I have a python form that redirects to, depending the case, a  certain page when submitted. For tracking purposes i need to be able to get the url to which the form redirects and pass it to Google Analytics. I imagine there's a JS callback function that I could use but I can't really find a solution.</p>  <p>Below is a way of how I'm trying to implement this:</p>  <pre><code>&lt;form method=""post"" class=""uniForm"" id=""subscribeform""&gt;       &lt;button id=""download_button"" name=""action"" class=""button"" type=""submit"" value=""subscribe""&gt;{% trans ""Download"" %}&lt;/button&gt; &lt;/form&gt; </code></pre>  <p>The form_valid in view is doing this:</p>  <pre><code> def form_valid():            if self.kwargs['slug'] == 'document1':             return redirect('download/word/document1.pdf')         elif self.kwargs['slug'] == 'document2':             return redirect('download/word/document2.pdf') </code></pre>  <p>I have tried to create a js function that would fire at form submit:</p>  <pre><code>$(""#subscribeform"").on('submit', function(e){     e.preventDefault();     Utils.analyticsEvent({category_title: 'download', action_title:'success', callback: function(){location_url=window.location;}}); }); </code></pre>  <p>However this is not working, i can not get the url of the document to which i get redirected. Am I missing something?</p>"	
39544089	How can I access Python code from JavaScript in PyQT 5.7?	javascript|python|qt|pyqt	2016-09-17 07:27:01.557000 UTC	"<p>I used to do it by attaching an object</p>  <pre><code>self.page().mainFrame().addToJavaScriptWindowObject(""js_interface"", self.jsi) </code></pre>  <p>In 5.7 I do:</p>  <pre><code>self.page().setWebChannel(self.jsi) </code></pre>  <p>But I understandibly get a JavaScript error when I try to access exposed functions:</p>  <pre><code>js: Uncaught ReferenceError: js_interface is not defined </code></pre>  <p>Googling around I found that I should use qwebchannel.js, but I couldn't find the file or instructions on how to use it anywhere (there was some info, but only in some examples provided when installing QT, not PyQT).</p>"	"<p>I think it's big drawback, JS cannot directly communicate with Python in PyQT5.9+ like it used to with ""addToJavaScriptWindowObject"" command. And using websockets... what if Firewall is heavy and all ports blocked.</p>  <p>I guess I will rely on simple callback (long pooling type from Python to JS checking for changes/commands) method and no QTWebChannel usage.</p>"
39544089	How can I access Python code from JavaScript in PyQT 5.7?	javascript|python|qt|pyqt	2016-09-17 07:27:01.557000 UTC	"<p>I used to do it by attaching an object</p>  <pre><code>self.page().mainFrame().addToJavaScriptWindowObject(""js_interface"", self.jsi) </code></pre>  <p>In 5.7 I do:</p>  <pre><code>self.page().setWebChannel(self.jsi) </code></pre>  <p>But I understandibly get a JavaScript error when I try to access exposed functions:</p>  <pre><code>js: Uncaught ReferenceError: js_interface is not defined </code></pre>  <p>Googling around I found that I should use qwebchannel.js, but I couldn't find the file or instructions on how to use it anywhere (there was some info, but only in some examples provided when installing QT, not PyQT).</p>"	"<p>You can include <strong>qwebchannel.js</strong> into html page using the script tag:</p>  <pre><code>&lt;script src=""qrc:///qtwebchannel/qwebchannel.js""&gt;&lt;/script&gt; </code></pre>  <p>Then, create a web channel on the python side:</p>  <pre><code>from PyQt5.QtCore import QObject, pyqtSlot from PyQt5.QtWebChannel import QWebChannel from PyQt5.QtWebEngineWidgets import QWebEngineView  class CallHandler(QObject):     @pyqtSlot()     def test(self):         print('call received')  view = QWebEngineView() channel = QWebChannel() handler = CallHandler() channel.registerObject('handler', handler) view.page().setWebChannel(channel) </code></pre>  <p>JS code that interacts with the web channel:</p>  <pre><code>new QWebChannel(qt.webChannelTransport, function (channel) {     window.handler = channel.objects.handler;     window.handler.test(); }); </code></pre>"
39544089	How can I access Python code from JavaScript in PyQT 5.7?	javascript|python|qt|pyqt	2016-09-17 07:27:01.557000 UTC	"<p>I used to do it by attaching an object</p>  <pre><code>self.page().mainFrame().addToJavaScriptWindowObject(""js_interface"", self.jsi) </code></pre>  <p>In 5.7 I do:</p>  <pre><code>self.page().setWebChannel(self.jsi) </code></pre>  <p>But I understandibly get a JavaScript error when I try to access exposed functions:</p>  <pre><code>js: Uncaught ReferenceError: js_interface is not defined </code></pre>  <p>Googling around I found that I should use qwebchannel.js, but I couldn't find the file or instructions on how to use it anywhere (there was some info, but only in some examples provided when installing QT, not PyQT).</p>"	"<p>Take a look at <a href=""http://doc.qt.io/qt-5/qtwebchannel-standalone-example.html"" rel=""nofollow"">this page</a>. It contains a useful example (in c++ but easily translatable into python).</p>  <p>First of all, you have to use a websocket to communicate from html to your app and viceversa.</p>  <p>Then you can set up your QWebChannel.</p>"
39558904	Python scraping splash javascript click	javascript|python|xpath|splash-screen	2016-09-18 14:45:47.170000 UTC	"<p>I'm trying to use Splash to renderer a webpage with javascript content. I'm using lxml to parse the result. I need to expand hidden menus. I've found the method to click on element but I don't know how I can click on each result from an xpath search.</p>  <p>Below my xpath filter. </p>  <p>//div[contains(@class,'clickable_area')]</p>  <p>So, I need to perform a ""find all"" search on this xpath expression and for each of them, click on the object to display hidden informations.</p>  <p>If someone can help me... </p>  <p>Thanks</p>"	"<p>Here I will explain you how to get all submenu.</p>  <p><a href=""https://angel.co/new_tags/list_children?tag_id=data-tag_id"" rel=""nofollow"">https://angel.co/new_tags/list_children?tag_id=data-tag_id</a> eg. <a href=""https://angel.co/new_tags/list_children?tag_id=9217"" rel=""nofollow"">https://angel.co/new_tags/list_children?tag_id=9217</a> It will return all submenu of ""All Markets""</p>  <p>Then you can collect all ""data-tag_id"" and pass one by one to URL.</p>  <p>If there is no data-tag_id then it will return error.</p>"
39567674	Uploading file using Javascript and execute_script in Python Selenium	javascript|python|selenium|selenium-webdriver|upload	2016-09-19 07:34:15.067000 UTC	"<p>I am trying to use Selenium to automatically add a file on <a href=""https://twitter.com/statuses/778637767198830592"" rel=""nofollow noreferrer"">this</a> twitter link .</p>  <p>I have found that I can do this by doing:</p>  <pre><code>    # filePath is a proper path to an image     uploadPhoto = driver.find_elements_by_name('media_empty')[1]     uploadPhoto.send_keys(filePath)  </code></pre>  <p>However, I need to be able to do the same thing using Selenium's 'execute_script' command.  I have tried the following, but it's not working:</p>  <pre><code>    uploadPhoto = driver.find_elements_by_name('media_empty')[1]     driver.execute_script('arguments[0].innerHTML=\'' + filePath + '\';', uploadPhoto) </code></pre>  <p>Any ideas on how to add a photo the execute_script command and some JavaScript?</p>"	
39587355	How to send JSON data created by Python to JavaScript?	javascript|python|html|json|cherrypy	2016-09-20 06:43:07.557000 UTC	"<p>I am using Python <code>cherrypy</code> and <code>Jinja</code> to serve my web pages. I have two Python files: <em>Main.py</em> (handle web pages) and <em>search.py</em> (server-side functions).<br> I create a dynamic dropdown list (using <code>JavaScript</code>) based on a local <code>JSON</code> file called <em>component.json</em>(created by function <em>componentSelectBar</em> inside <em>search.py</em>).  </p>  <p>I want to ask how can my JavaScript retrieve JSON data <strong>without physically storing the JSON data into my local website root's folder</strong> and still fulfil the function of dynamic dropdown list.</p>  <p>The <em>componentSelectBar</em> function inside <em>search.py</em>:</p>  <pre><code>def componentSelectBar(self, brand, category):     args = [brand, category]     self.myCursor.callproc('findComponent', args)     for result in self.myCursor.stored_results():         component = result.fetchall()     if (len(component) == 0):         print ""component not found""         return ""no""      components = []     for com in component:         t = unicodedata.normalize('NFKD', com[0]).encode('ascii', 'ignore')         components.append(t)      j = json.dumps(components)     rowarraysFile = 'public/json/component.json'     f = open(rowarraysFile, 'w')     print &gt;&gt; f, j      print ""finish component bar""     return ""ok"" </code></pre>  <p>The <em>selectBar.js</em>:</p>  <pre><code>    $.getJSON(""static/json/component.json"", function (result) {         console.log(""retrieve component list"");         console.log(""where am i"");         $.each(result, function (i, word) {             $(""#component"").append(""&lt;option&gt;""+word+""&lt;/option&gt;"");         });     }); </code></pre>"	"<ol> <li>store results from componentSelectBar into database</li> <li>expose new api to get results from database and return json to browser</li> </ol>  <p>demo here:</p>  <pre><code>@cherrypy.expose def codeSearch(self, modelNumber, category, brand):     ...     result = self.search.componentSelectBar(cherrypy.session['brand'], cherrypy.session['category'])     # here store result into a database, for example, brand_category_search_result     ...  @cherrypy.expose @cherrypy.tools.json_out() def getSearchResult(self, category, brand):     # load json from that database, here is brand_category_search_result     a_json = loadSearchResult(category, brand)      return a_json </code></pre>  <p>document on CherryPy, hope helps: <a href=""http://docs.cherrypy.org/en/latest/basics.html#encoding-response"" rel=""nofollow"">Encoding response</a></p>  <p>In your broswer, you need to GET /getSearchResult for json:</p>  <pre><code>$.getJSON(""/getSearchResult/&lt;arguments here&gt;"", function (result) {     console.log(""retrieve component list"");     console.log(""where am i"");     $.each(result, function (i, word) {         $(""#component"").append(""&lt;option&gt;""+word+""&lt;/option&gt;"");     }); }); </code></pre>"
39587355	How to send JSON data created by Python to JavaScript?	javascript|python|html|json|cherrypy	2016-09-20 06:43:07.557000 UTC	"<p>I am using Python <code>cherrypy</code> and <code>Jinja</code> to serve my web pages. I have two Python files: <em>Main.py</em> (handle web pages) and <em>search.py</em> (server-side functions).<br> I create a dynamic dropdown list (using <code>JavaScript</code>) based on a local <code>JSON</code> file called <em>component.json</em>(created by function <em>componentSelectBar</em> inside <em>search.py</em>).  </p>  <p>I want to ask how can my JavaScript retrieve JSON data <strong>without physically storing the JSON data into my local website root's folder</strong> and still fulfil the function of dynamic dropdown list.</p>  <p>The <em>componentSelectBar</em> function inside <em>search.py</em>:</p>  <pre><code>def componentSelectBar(self, brand, category):     args = [brand, category]     self.myCursor.callproc('findComponent', args)     for result in self.myCursor.stored_results():         component = result.fetchall()     if (len(component) == 0):         print ""component not found""         return ""no""      components = []     for com in component:         t = unicodedata.normalize('NFKD', com[0]).encode('ascii', 'ignore')         components.append(t)      j = json.dumps(components)     rowarraysFile = 'public/json/component.json'     f = open(rowarraysFile, 'w')     print &gt;&gt; f, j      print ""finish component bar""     return ""ok"" </code></pre>  <p>The <em>selectBar.js</em>:</p>  <pre><code>    $.getJSON(""static/json/component.json"", function (result) {         console.log(""retrieve component list"");         console.log(""where am i"");         $.each(result, function (i, word) {             $(""#component"").append(""&lt;option&gt;""+word+""&lt;/option&gt;"");         });     }); </code></pre>"	"<p>To use that json data directly into javascript you can use </p>  <pre><code>var response = JSON.parse(component); console.log(component); //prints </code></pre>  <p>OR</p>  <p>You already created json file.If that file is in right format then you can read json data from that file using jQuery <code>jQuery.getJSON()</code> For more: <a href=""http://api.jquery.com/jQuery.getJSON/"" rel=""nofollow"">http://api.jquery.com/jQuery.getJSON/</a></p>"
39587355	How to send JSON data created by Python to JavaScript?	javascript|python|html|json|cherrypy	2016-09-20 06:43:07.557000 UTC	"<p>I am using Python <code>cherrypy</code> and <code>Jinja</code> to serve my web pages. I have two Python files: <em>Main.py</em> (handle web pages) and <em>search.py</em> (server-side functions).<br> I create a dynamic dropdown list (using <code>JavaScript</code>) based on a local <code>JSON</code> file called <em>component.json</em>(created by function <em>componentSelectBar</em> inside <em>search.py</em>).  </p>  <p>I want to ask how can my JavaScript retrieve JSON data <strong>without physically storing the JSON data into my local website root's folder</strong> and still fulfil the function of dynamic dropdown list.</p>  <p>The <em>componentSelectBar</em> function inside <em>search.py</em>:</p>  <pre><code>def componentSelectBar(self, brand, category):     args = [brand, category]     self.myCursor.callproc('findComponent', args)     for result in self.myCursor.stored_results():         component = result.fetchall()     if (len(component) == 0):         print ""component not found""         return ""no""      components = []     for com in component:         t = unicodedata.normalize('NFKD', com[0]).encode('ascii', 'ignore')         components.append(t)      j = json.dumps(components)     rowarraysFile = 'public/json/component.json'     f = open(rowarraysFile, 'w')     print &gt;&gt; f, j      print ""finish component bar""     return ""ok"" </code></pre>  <p>The <em>selectBar.js</em>:</p>  <pre><code>    $.getJSON(""static/json/component.json"", function (result) {         console.log(""retrieve component list"");         console.log(""where am i"");         $.each(result, function (i, word) {             $(""#component"").append(""&lt;option&gt;""+word+""&lt;/option&gt;"");         });     }); </code></pre>"	"<p>You are rendering a HTML and sending it as response. If you wish to do with JSON, this has to change. You should return JSON in your main.py, whereas you will send a HTML(GET or POST) from Javascript and render it back.</p>  <pre><code>def componentSelectBar(self, brand, category):     /* Your code goes here */     j = json.dumps(components)     // Code to add a persistent store here     rowarraysFile = 'public/json/component.json'     f = open(rowarraysFile, 'w')     print &gt;&gt; f, j     // Better to use append mode and append the contents to the file in python     return j //Instead of string ok   @cherrypy.expose def codeSearch(self):     json_request = cherrypy.request.body.read()     import json # This should go to the top of the file     input_dict = json.loads(json_request)     modelNumber = input_dict.get(""modelNumber"", """")     category = input_dict.get(""category"", """")     brand = input_dict.get(""brand"", """")     /* Your code goes here */     json_response = self.search.componentSelectBar(cherrypy.session['brand'], cherrypy.session['category'])     return json_response </code></pre>  <p>Here, I added only for the successful scenario. However, you should manage the failure scenarios(a JSON error response that could give as much detail as possible) in the <code>componentSelectBar</code> function. That will help you keep the <code>codeSearch</code> function as plain as possible and help in a long run(read maintaining the code). </p>  <p>And I would suggest you to read <a href=""https://www.python.org/dev/peps/pep-0008/"" rel=""nofollow"">PEP 8</a> and apply it to the code as it is kind of norm for all python programmers and help any one else who touches your code.</p>  <p>EDIT: This is a sample javascript function that will make a post request and get the JSON response:</p>  <pre><code>searchResponse: function(){   $.ajax({     url: 'http://localhost:8080/codeSearch', // Add your URL here     data: {""brand"" : ""Levis"", ""category"" : ""pants""}     async: False,      success: function(search_response) {       response_json = JSON.parse(search_response)       alert(response_json)       // Do what you have to do here;       // In this specific case, you have to generate table or any structure based on the response received     }   }) } </code></pre>"
39620351	Web Scraping with Javascript Contents using Python PyQt	javascript|python|web-scraping|pyqt	2016-09-21 15:10:50.170000 UTC	"<p>I am now performing a task of scraping content systematically from a course list which seems to be rendered by javascript. I followed some scripts using PyQt4 on the web but failed (which I copied below). More precisely, the script works at some websites with javascript which loads content with clicking on its specific link. However, the following website (ouhk, the link I copied below in the script) does not seem to carry link for directing users to specific content, namely Programme Information, Programme Structure and Fee, etc. Instead, it uses tag containers and FTP for storing and loading information (that I found from its source code). </p>  <p>I am wondering if there is anyway to modify the following script so that I can scrape those content by using PyQt4, or I have to look for other ways to achieve this purpose?</p>  <pre><code>import sys   from PyQt4.QtGui import *   from PyQt4.QtCore import *   from PyQt4.QtWebKit import *   from lxml import html   from bs4 import BeautifulSoup #import urllib.request #from urllib.parse import urljoin   #Take this class for granted.Just use result of rendering. class Render(QWebPage):     def __init__(self, url):       self.app = QApplication(sys.argv)       QWebPage.__init__(self)       self.loadFinished.connect(self._loadFinished)       self.mainFrame().load(QUrl(url))       self.app.exec_()      def _loadFinished(self, result):       self.frame = self.mainFrame()       self.app.quit()    url = 'http://www.ouhk.edu.hk/wcsprd/Satellite?pagename=OUHK/tcSchSing2014&amp;c=C_LIPACE&amp;cid=1450268562831&amp;lang=eng&amp;sch=LIP'   r = Render(url)   result = r.frame.toHtml() print result </code></pre>"	"<p>Look into using selenium Library! I have scraped multiple websites with this library. People state that it is slow, but for my purposes it works great.</p>  <p>Also if your kinda new to web scraping, look into what Xpaths are for scraping elements that would otherwise be difficult to get to. With Xpath, all you need to do in a chrome browser is right clickt he page, insspect element, unfold all the tags, and then right click the tag you want to scrape and click copy Xpath, then you can paste the path into modules in the selenium library. Really simple, heres a link for selenium information. </p>  <p><a href=""http://selenium-python.readthedocs.io/"" rel=""nofollow"">http://selenium-python.readthedocs.io/</a></p>"
39631465	making a python interpreter using javascript	javascript|python	2016-09-22 06:08:59.197000 UTC	"<p>I want to make a python interpreter by using Javascript. </p>  <p>Then you can input the python code and the Javascript in the webpage can interpret the code into javascript code and then run the code and return the result.</p>  <p>Because I have not much experience in this area, so I want some advice from the senior.</p>  <p>Thanks very much ...</p>"	"<p>There are many interpreters and source-to-source compilers that can convert Python to JavaScript. The <a href=""https://skulpt.org/"" rel=""nofollow noreferrer"">Skulpt</a> interpreter allows Python source code to run in a web browser on the client-side.</p>"
39631465	making a python interpreter using javascript	javascript|python	2016-09-22 06:08:59.197000 UTC	"<p>I want to make a python interpreter by using Javascript. </p>  <p>Then you can input the python code and the Javascript in the webpage can interpret the code into javascript code and then run the code and return the result.</p>  <p>Because I have not much experience in this area, so I want some advice from the senior.</p>  <p>Thanks very much ...</p>"	"<p>You can use <a href=""https://github.com/pypyjs/pypyjs"" rel=""nofollow noreferrer"">pypyjs</a>, and the detailed procedure is also available.</p>"
39631465	making a python interpreter using javascript	javascript|python	2016-09-22 06:08:59.197000 UTC	"<p>I want to make a python interpreter by using Javascript. </p>  <p>Then you can input the python code and the Javascript in the webpage can interpret the code into javascript code and then run the code and return the result.</p>  <p>Because I have not much experience in this area, so I want some advice from the senior.</p>  <p>Thanks very much ...</p>"	"<p>Well, an interpreter is not really a job for a beginner, also you'd better send the code to server side with AJAX, and then display the result in the page.</p>"
39642462	Riak MapReduce in single node using javascript and python	javascript|python|dictionary|riak	2016-09-22 14:57:17.670000 UTC	"<p>I want to perform MapReduce job on data in Riak DB using javascript. But stuck in very begining, i couldnot understand how it is returning value.</p>  <pre><code>client = riak.RiakClient() query = client.add('user') query.map(""""""             function(v){                var i=0;                i++;              return [i];              }          """""")  for result in query.run():     print ""%s"" % (result); </code></pre>  <p>For simplicity i have checked the above example. </p>  <p>Here query is bucket and user contain five sets of data in RiakDB.  i think map() returns single value but it returns array with 5 value, i think equivalent to five set of data in RiakDB. </p>  <pre><code>1 1 1 1 1 </code></pre>  <p>And here, why I can return only array? it treats each dataset independently, and returns for each. so i think i have five 1's. Due to this reason when i process fetched data inside map(), returns gives unexpected result for me.</p>  <p>so please give me some suggestion. i think it is basic thing but i couldnot get it. i highly appreciate your help. </p>"	"<p>When you run a MapReduce job, the map phase code is sent out to the vnodes where the data is stored and executed for each value in the data.  The resulting arrays are collected and passed to a single reduce phase, which also returns an array.  If there are sufficiently many results, the reduce phase may be run multiple times, with the previous reduce result and a batch of map results as input.</p>  <p>The fact that you are getting 5 results implies that 5 keys were seen in your bucket.  There is no global state shared between instances of the map phase function, so each will have an independent <code>i</code>, which is why each result is <code>1</code>.</p>  <p>You might try returning <code>[v.key]</code> so that you have something unique for each one, or if the values are expected to be small, you could return <code>[JSON.stringify(v)]</code> so you can see the entire structure that is passed to the map.</p>  <p>You should note that according to the <a href=""https://docs.basho.com/riak/kv/2.1.4/developing/app-guide/advanced-mapreduce/"" rel=""nofollow"">docs site</a> javascript Map Reduce has been officially deprecated, so you may want to use Erlang functions for new development.</p>"
39682812	TM1 REST API Python Requests ConnectionResetError MaxRetryError ProxyError but JavaScript/jQuery Works	jquery|python|rest|python-requests|cognos-tm1	2016-09-25 02:23:58.280000 UTC	"<p>I am trying to run a get request using the TM1 REST API and Python Requests but receive a ConnectionResetError / MaxRetryError / ProxyError. Here is my code:</p>  <pre><code>headers = {'Accept' : 'application/json; charset=utf-8',                'Content-Type': 'text/plain; charset=utf-8'           }  login = b64encode(str.encode(""{}:{}:{}"".format(user, password, namespace))).decode(""ascii"")  headers['Authorization'] = 'CAMNamespace {}'.format(login)  s = requests.Session() r = s.get(url+query, headers=headers, proxies=urllib.request.getproxies()) </code></pre>  <p>I've tried the get request with proxy auth / no auth / no proxies but i get the same 3 errors. </p>  <p>For reference, the same url is https and works in JavaScript/jQuery:</p>  <pre><code>function updateTable(){     $.ajax({         async:false,         headers: {             'Accept' : 'application/json; charset=utf-8',             'Content-Type': 'text/plain; charset=utf-8',             'Authorization' : 'CAMNamespace ' + btoa('username' + ':' + 'password' + ':' + 'namespace')         },         url: 'url_is_here',         success: function(data){data_is_here} } </code></pre>  <p>Here is the TraceBack:</p>  <pre><code>--------------------------------------------------------------------------- ConnectionResetError                      Traceback (most recent call last) C:\Users\vmora\AppData\Local\Continuum\Anaconda3\lib\site-packages\requests\packages\urllib3\connectionpool.py in urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, **response_kw)     571             if is_new_proxy_conn: --&gt; 572                 self._prepare_proxy(conn)     573   C:\Users\vmora\AppData\Local\Continuum\Anaconda3\lib\site-packages\requests\packages\urllib3\connectionpool.py in _prepare_proxy(self, conn)     779  --&gt; 780         conn.connect()     781   C:\Users\vmora\AppData\Local\Continuum\Anaconda3\lib\site-packages\requests\packages\urllib3\connection.py in connect(self)     288                                     server_hostname=hostname, --&gt; 289                                     ssl_version=resolved_ssl_version)     290   C:\Users\vmora\AppData\Local\Continuum\Anaconda3\lib\site-packages\requests\packages\urllib3\util\ssl_.py in ssl_wrap_socket(sock, keyfile, certfile, cert_reqs, ca_certs, server_hostname, ssl_version, ciphers, ssl_context, ca_cert_dir)     307     if HAS_SNI:  # Platform-specific: OpenSSL with enabled SNI --&gt; 308         return context.wrap_socket(sock, server_hostname=server_hostname)     309   C:\Users\vmora\AppData\Local\Continuum\Anaconda3\lib\ssl.py in wrap_socket(self, sock, server_side, do_handshake_on_connect, suppress_ragged_eofs, server_hostname)     376                          server_hostname=server_hostname, --&gt; 377                          _context=self)     378   C:\Users\vmora\AppData\Local\Continuum\Anaconda3\lib\ssl.py in __init__(self, sock, keyfile, certfile, server_side, cert_reqs, ssl_version, ca_certs, do_handshake_on_connect, family, type, proto, fileno, suppress_ragged_eofs, npn_protocols, ciphers, server_hostname, _context)     751                         raise ValueError(""do_handshake_on_connect should not be specified for non-blocking sockets"") --&gt; 752                     self.do_handshake()     753   C:\Users\vmora\AppData\Local\Continuum\Anaconda3\lib\ssl.py in do_handshake(self, block)     987                 self.settimeout(None) --&gt; 988             self._sslobj.do_handshake()     989         finally:  C:\Users\vmora\AppData\Local\Continuum\Anaconda3\lib\ssl.py in do_handshake(self)     632         """"""Start the SSL/TLS handshake."""""" --&gt; 633         self._sslobj.do_handshake()     634         if self.context.check_hostname:  ConnectionResetError: [WinError 10054] An existing connection was forcibly closed by the remote host  During handling of the above exception, another exception occurred:  MaxRetryError                             Traceback (most recent call last) C:\Users\vmora\AppData\Local\Continuum\Anaconda3\lib\site-packages\requests\adapters.py in send(self, request, stream, timeout, verify, cert, proxies)     402                     retries=self.max_retries, --&gt; 403                     timeout=timeout     404                 )  C:\Users\vmora\AppData\Local\Continuum\Anaconda3\lib\site-packages\requests\packages\urllib3\connectionpool.py in urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, **response_kw)     622             retries = retries.increment(method, url, error=e, _pool=self, --&gt; 623                                         _stacktrace=sys.exc_info()[2])     624             retries.sleep()  C:\Users\vmora\AppData\Local\Continuum\Anaconda3\lib\site-packages\requests\packages\urllib3\util\retry.py in increment(self, method, url, response, error, _pool, _stacktrace)     280         if new_retry.is_exhausted(): --&gt; 281             raise MaxRetryError(_pool, url, error or ResponseError(cause))     282   MaxRetryError: HTTPSConnectionPool(host='ip', port=49003): Max retries exceeded with url: /api/v1/Threads (Caused by ProxyError('Cannot connect to proxy.', ConnectionResetError(10054, 'An existing connection was forcibly closed by the remote host', None, 10054, None)))  During handling of the above exception, another exception occurred:  ProxyError                                Traceback (most recent call last) &lt;ipython-input-36-0d70f21b1422&gt; in &lt;module&gt;()       1 s = requests.Session() ----&gt; 2 r = s.get(url+query, headers=headers)  C:\Users\vmora\AppData\Local\Continuum\Anaconda3\lib\site-packages\requests\sessions.py in get(self, url, **kwargs)     485      486         kwargs.setdefault('allow_redirects', True) --&gt; 487         return self.request('GET', url, **kwargs)     488      489     def options(self, url, **kwargs):  C:\Users\vmora\AppData\Local\Continuum\Anaconda3\lib\site-packages\requests\sessions.py in request(self, method, url, params, data, headers, cookies, files, auth, timeout, allow_redirects, proxies, hooks, stream, verify, cert, json)     473         }     474         send_kwargs.update(settings) --&gt; 475         resp = self.send(prep, **send_kwargs)     476      477         return resp  C:\Users\vmora\AppData\Local\Continuum\Anaconda3\lib\site-packages\requests\sessions.py in send(self, request, **kwargs)     583      584         # Send the request --&gt; 585         r = adapter.send(request, **kwargs)     586      587         # Total elapsed time of the request (approximately)  C:\Users\vmora\AppData\Local\Continuum\Anaconda3\lib\site-packages\requests\adapters.py in send(self, request, stream, timeout, verify, cert, proxies)     463      464             if isinstance(e.reason, _ProxyError): --&gt; 465                 raise ProxyError(e, request=request)     466      467             raise ConnectionError(e, request=request)  ProxyError: HTTPSConnectionPool(host='ip', port=49003): Max retries exceeded with url: /api/v1/Threads (Caused by ProxyError('Cannot connect to proxy.', ConnectionResetError(10054, 'An existing connection was forcibly closed by the remote host', None, 10054, None))) </code></pre>"	<p>A couple of people at work helped me solve my problem. The http and https proxies that I had set in my environment variables were causing the issue. I removed them / restarted / and was then able to query the api.</p>
39718574	Python list to django javascript as text	javascript|python|django|python-3.x	2016-09-27 07:25:36.220000 UTC	"<p>Hello my generated python output list is </p>  <pre><code>l = [""one"",""two"",""there""] </code></pre>  <p>I am passing that to a django html script as {{list}}</p>  <p>in the html it is shown as </p>  <pre><code>[&amp;#39;one&amp;#39;,&amp;#39;two&amp;#39;,&amp;#39;three&amp;#39; </code></pre>  <p>which i can't use for my javascript, how do i pass this correctly, even I tried json_dumps like </p>  <pre><code>l = json_dumps ([""one"",""two"",""there""]) </code></pre>  <p>it just shows as following in html </p>  <pre><code>[&amp;quote;one&amp;quote;,&amp;quote;two&amp;quote;,&amp;quote;three&amp;quote;] </code></pre>"	"<p>There are two steps here. Firstly, you need to make the view send valid JSON; you've done this with <code>json_dumps</code>.</p>  <p>Secondly, you need to ensure that the template outputs it without escaping. You do that by marking it as safe, with <code>{{ data|safe }}</code> (assuming your data is in a variable called <code>data</code>).</p>"
39728163	Using javascript from python to set the value of a hidden input	javascript|python|selenium-webdriver	2016-09-27 15:07:16.917000 UTC	"<p>I'm converting an automated test case to use IE rather than FireFox. The case worked fine on Firefox, however I've found IE has a very strange behavior. It's duplicating the input for login credentials and hiding the input that I need to access. (Note this is IE doing it, not the source for the application I'm testing)</p>  <p>I'm using Selenium and Python, and I need to pass the login credentials to the hidden input fields. I'm aware that you cannot access hidden fields in Selenium, however I've seen a lot of SO posts saying you could do it with Javascript. Which brings me to my question. What am I doing wrong here? I'm not very familiar with Javascript, but everything I've seen so far indicates that this should work. </p>  <p><strong>My Python:</strong> (Key is a parameter for the script)</p>  <p><code>driver.execute_script(""document.getElementsByClassName('form-control placeholder').setAttribute('value', '"" + key + ""')"")</code></p>  <p><a href=""http://i.stack.imgur.com/1cTKF.png"" rel=""nofollow"">IE Page Source</a></p>  <p><a href=""http://i.stack.imgur.com/LdsH0.png"" rel=""nofollow"">IE Error</a></p>"	"<p>The method getElementsByClassName returns an array so, you should try:</p> <pre><code>driver.execute_script(&quot;document.getElementsByClassName('form-control placeholder')[0].setAttribute('value', '&quot; + key + &quot;')&quot;) </code></pre>"
39737520	How to pass data between running python process and javascript	javascript|python|sockets|python-3.x|voice	2016-09-28 03:25:05.433000 UTC	"<p>I am working on a personal voice assistant app with python, and I want to add a web-interface to it, to allow using it remotely from any device. I already have a Python side of it, and I want to mix it with web interface. Maybe by listening for a socket in a thread. I am experienced with Python but not so much with JS.</p>  <p>What I ideally need is to have a running python process. Then HTML JS client records user's voice, converts it to text and sends it to the python server. Python server receives the command, and runs a function, and returns a json data like:</p>  <pre><code>{ 'reply':'All done, here is your result',  'data':someBigHTMLoutput,  'audio':path to generated mp3 audio file of speech using customized voice } </code></pre>  <p>Html can be a big table with found books or movies, for example, or some other report. Or it can be blank if the command was to turn off the light.</p>  <p>Then JS needs to receive this data, replace 'content' div with html data, display AI answer text and play tts audio file generated by the server. And wait for next command.</p>  <p><strong>So, from all this I want to know how to approach js client and python server data exchange without page refresh?</strong></p>  <p>Will it be enough to just listen for a socket with python? But then how do I return data back to JS?</p>  <p>And additional question is: Is it possible to push some data before and during function execution? Currently my Python voice assistant may sometimes 'say' things before, during and after function execution. Is there any way to send this sound to html page as well? If not I'll re-think the logic of AI answers to make it only reply after the 'work is done'.</p>  <p>I spent a lot of time googling this, but I only got confused with a huge choice of frameworks, while I am not even sure if I need any of them for this relatively simple task.</p>  <p>Thanks! Python 3.4</p>"	"<p>I ended up using Flask, Flask-SocketIO and JavaScript with socketio. </p>  <p>Works like a charm. Thanks. It allows me to emit events at any time, which makes it really easy to build a HTML+JS based front end UI, interacting in real time with python server.</p>"
39797807	How to run a python script with arguments via the click of a button in javascript	javascript|python|ajax	2016-09-30 18:25:12.357000 UTC	"<p>So I've written a program in JavaScript that outputs a JSON. What I want to do is, with the click of a button, I want to pass in that JSON as an argument to a python script.</p>  <p>I am not entirely sure how to proceed with this:</p>  <pre><code>$.ajax({ url: ""/path/to/your/scriptPython"", success: function(response) {   // here you do whatever you want with the response variable } }); </code></pre>  <p>Any feedback or help is appreciated.</p>"	"<p>This depends on one important consideration: where is your Python code?</p>  <p>If you want the Python to run on the user's machine, that gets complicated due to security measures: websites generally aren't allowed to execute arbitrary code on viewers' machines. (Imagine if that Python code wiped their hard drive, for instance.) In this case it might be best to have users download the JSON as a file, and then open that with your Python program.</p>  <p>If you want the Python to run on your server, you can make a POST request to the script's endpoint, and pass the JSON in the POST data. The details of this will depend on your choice of Python web framework (I'm fond of Flask), but the Javascript would be pretty much the same:</p>  <pre><code>$.ajax({     type: 'POST',     data: my_json_variable,     url: 'http://example.com/python_endpoint',     success: function(response){ /* deal with the script's output */ } }); </code></pre>"
39804034	Python scraping of javascript web pages fails for https pages only	python|ssl|https|pyqt|pyqt5	2016-10-01 07:21:39.477000 UTC	"<p>I'm using PyQt5 to scrape web pages, which works great for http:// URLs, but not at all for https:// URLs.</p>  <p>The relevant part of my script is below:</p>  <pre><code>class WebPage(QWebPage):     def __init__(self):         super(WebPage, self).__init__()          self.timerScreen = QTimer()         self.timerScreen.setInterval(2000)         self.timerScreen.setSingleShot(True)         self.timerScreen.timeout.connect(self.handleLoadFinished)          self.loadFinished.connect(self.timerScreen.start)       def start(self, urls):         self._urls = iter(urls)         self.fetchNext()      def fetchNext(self):         try:             url = next(self._urls)         except StopIteration:             return False         else:             self.mainFrame().load(QUrl(url))         return True      def processCurrentPage(self):         url = self.mainFrame().url().toString()         html = self.mainFrame().toHtml()          #Do stuff with html         print('loaded: [%d bytes] %s' % (self.bytesReceived(), url))      def handleLoadFinished(self):         self.processCurrentPage()         if not self.fetchNext():             qApp.quit() </code></pre>  <p>For secure pages, the script returns a blank page. The only html coming back is <code>&lt;html&gt;&lt;head&gt;&lt;/head&gt;&lt;body&gt;&lt;/body&gt;&lt;/html&gt;</code>.</p>  <p>I'm at a bit of a loss. Is there a setting that I'm missing related to handling secure URLs?</p>"	"<p>tested with PyQt4 and normally opened pages with HTTPS</p>  <pre><code>import sys from PyQt4.QtGui import QApplication from PyQt4.QtCore import QUrl from PyQt4.QtWebKit import QWebView  class Browser(QWebView):     def __init__(self):         QWebView.__init__(self)         self.loadFinished.connect(self._result_available)      def _result_available(self, ok):         frame = self.page().mainFrame()         print(frame.toHtml())  if __name__ == '__main__':     app = QApplication(sys.argv)     view = Browser()     view.load(QUrl('https://www.google.com'))     app.exec_() </code></pre>"
39804034	Python scraping of javascript web pages fails for https pages only	python|ssl|https|pyqt|pyqt5	2016-10-01 07:21:39.477000 UTC	"<p>I'm using PyQt5 to scrape web pages, which works great for http:// URLs, but not at all for https:// URLs.</p>  <p>The relevant part of my script is below:</p>  <pre><code>class WebPage(QWebPage):     def __init__(self):         super(WebPage, self).__init__()          self.timerScreen = QTimer()         self.timerScreen.setInterval(2000)         self.timerScreen.setSingleShot(True)         self.timerScreen.timeout.connect(self.handleLoadFinished)          self.loadFinished.connect(self.timerScreen.start)       def start(self, urls):         self._urls = iter(urls)         self.fetchNext()      def fetchNext(self):         try:             url = next(self._urls)         except StopIteration:             return False         else:             self.mainFrame().load(QUrl(url))         return True      def processCurrentPage(self):         url = self.mainFrame().url().toString()         html = self.mainFrame().toHtml()          #Do stuff with html         print('loaded: [%d bytes] %s' % (self.bytesReceived(), url))      def handleLoadFinished(self):         self.processCurrentPage()         if not self.fetchNext():             qApp.quit() </code></pre>  <p>For secure pages, the script returns a blank page. The only html coming back is <code>&lt;html&gt;&lt;head&gt;&lt;/head&gt;&lt;body&gt;&lt;/body&gt;&lt;/html&gt;</code>.</p>  <p>I'm at a bit of a loss. Is there a setting that I'm missing related to handling secure URLs?</p>"	"<p>If you're on windows, please try this: <a href=""https://stackoverflow.com/questions/27392247/build-pyqt5-on-windows-with-openssl-support"">Build PyQt5 on Windows with OpenSSL support?</a></p>  <p>Have you considered using <a href=""https://pypi.python.org/pypi/beautifulsoup4"" rel=""nofollow noreferrer"">Beautiful Soup</a> or <a href=""https://scrapy.org/"" rel=""nofollow noreferrer"">Scrapy.</a></p>  <p>I have used Beautiful Soup for my project and it worked like a charm. It has SSL support too.</p>"
39804034	Python scraping of javascript web pages fails for https pages only	python|ssl|https|pyqt|pyqt5	2016-10-01 07:21:39.477000 UTC	"<p>I'm using PyQt5 to scrape web pages, which works great for http:// URLs, but not at all for https:// URLs.</p>  <p>The relevant part of my script is below:</p>  <pre><code>class WebPage(QWebPage):     def __init__(self):         super(WebPage, self).__init__()          self.timerScreen = QTimer()         self.timerScreen.setInterval(2000)         self.timerScreen.setSingleShot(True)         self.timerScreen.timeout.connect(self.handleLoadFinished)          self.loadFinished.connect(self.timerScreen.start)       def start(self, urls):         self._urls = iter(urls)         self.fetchNext()      def fetchNext(self):         try:             url = next(self._urls)         except StopIteration:             return False         else:             self.mainFrame().load(QUrl(url))         return True      def processCurrentPage(self):         url = self.mainFrame().url().toString()         html = self.mainFrame().toHtml()          #Do stuff with html         print('loaded: [%d bytes] %s' % (self.bytesReceived(), url))      def handleLoadFinished(self):         self.processCurrentPage()         if not self.fetchNext():             qApp.quit() </code></pre>  <p>For secure pages, the script returns a blank page. The only html coming back is <code>&lt;html&gt;&lt;head&gt;&lt;/head&gt;&lt;body&gt;&lt;/body&gt;&lt;/html&gt;</code>.</p>  <p>I'm at a bit of a loss. Is there a setting that I'm missing related to handling secure URLs?</p>"	"<p>As your code works fine with HTTP page, but does not work with HTTPS, in my opinion it could be due to SSL issue.</p> <p>So, please double check that your PyQt5 version have SSL support... ( You may find more information relative to download, install and setup openssl <a href=""https://stackoverflow.com/questions/3516143/qt-ssl-support-missing"">here</a>)</p> <blockquote> <p>All that you need to do after downloading the SSL libraries is  to ensure that Qt can find where these openSSL libraries are located</p> </blockquote> <p>Which OS do you use ? PyQt5 was build with SSL support ? Openssl is installed ?</p>"
39820778	Javascript to Python Text Encoding Error	javascript|python|google-app-engine|encoding	2016-10-02 19:25:47.253000 UTC	"<p>I have a Google App Engine web app where users can upload some text. In the dev environment everything works fine, however, when switching to production, I have encountered some issues. First, the Python backend couldn't properly handle accented characters (à, è, ...). I then found a solution which correctly reads accented characters but unfortunately fails with the Lorem Ipsum (in prod environment).</p>  <p>Here's what I'm doing now:</p>  <p>Javascript</p>  <pre><code>formData.append(""text"", encodeURI(document.getElementById(""question"").value)); </code></pre>  <p>Python</p>  <pre><code>text_to_save = urllib.unquote(self.request.get('text').encode('ascii')).decode('utf-8') </code></pre>  <p>I then proceed to save the text in the Datastore.</p>  <p>But with this string:</p>  <blockquote>   <p>Lorem ipsum dolor sit amet, consectetur adipisci elit, sed eiusmod tempor incidunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrum exercitationem ullam corporis suscipit laboriosam, nisi ut aliquid ex ea commodi consequatur. Quis aute iure reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.</p> </blockquote>  <p>I find this in the Datastore:</p>  <blockquote>   <p>Lorem ipsum dolor sit amet, consectetur adipisci elit, sed%= 20eiusmod tempor incidunt ut labore et   dolore magna aliqua.= Ut enim ad minim veniam, quis nostrum exercitationem ull= am corporis suscipit laboriosam, nisi ut aliquid ex ea co= mmodi consequatur. Quis aute iure reprehenderit in voluptate%= 20velit esse cillum dolore eu fugiat nulla pariatur.</p> </blockquote>  <p>What am I doing wrong?</p>"	
39836589	Javascript implementation of Murmurhash3 to give the same result as Murmurhash3.cpp used by transform available in Python's sklearn	javascript|python|c++|scikit-learn|murmurhash	2016-10-03 16:52:11.343000 UTC	"<p>(I am VERY sorry I am not allowed to add many URLs to help me better explain my problems in this post because I am new on StackOverflow and my StackOverflow account has very low privilege).</p>  <p><strong>Summary</strong> </p>  <p>Can anyone please guide me on how to modify <code>murmurhash3.js</code> (below) so that it produces the same hash as <code>MurmurHash3.cpp</code> (below) does? I provide a simple python code ""simple_python_wrapper.py"" for MurmurHash3.cpp based on what I need. The simple_python_wrapper.py should work on your computer if you have sklearn installed.</p>  <p>I have heavily used <code>Murmurhash3.cpp</code> (shown below) while using <code>transform</code> from sklearn (a Python Machine Learning Library): <code>from sklearn.feature_extraction._hashing import transform</code> in one of my machine learning projects. <code>transform</code> uses <code>Murmurhash3.cpp</code> deep down in sklearn's  implementation/import tree.</p>  <p><strong>More details</strong></p>  <p><strong><em>hash % (2^18) {that is ""hash modulus 2^18""} based on MurmurHash3.cpp</em></strong></p>  <pre><code>""hello"" gives 260679 ""there"" gives 45525 </code></pre>  <p><strong><em>hash % (2^18) {that is ""hash modulus 2^18""} based on murmurhash3.js</em></strong></p>  <pre><code>""hello"" gives -58999 ""there"" gives 65775 </code></pre>  <p><strong><em>murmurhash3.js</em></strong></p>  <pre><code>/*  *  The MurmurHash3 algorithm was created by Austin Appleby.  This JavaScript port was authored  *  by whitequark (based on Java port by Yonik Seeley) and is placed into the public domain.  *  The author hereby disclaims copyright to this source code.  *  *  This produces exactly the same hash values as the final C++ version of MurmurHash3 and  *  is thus suitable for producing the same hash values across platforms.  *  *  There are two versions of this hash implementation. First interprets the string as a  *  sequence of bytes, ignoring most significant byte of each codepoint. The second one  *  interprets the string as a UTF-16 codepoint sequence, and appends each 16-bit codepoint  *  to the hash independently. The latter mode was not written to be compatible with  *  any other implementation, but it should offer better performance for JavaScript-only  *  applications.  *  *  See http://github.com/whitequark/murmurhash3-js for future updates to this file.  */  var MurmurHash3 = {     mul32: function(m, n) {         var nlo = n &amp; 0xffff;         var nhi = n - nlo;         return ((nhi * m | 0) + (nlo * m | 0)) | 0;     },      hashBytes: function(data, len, seed) {         var c1 = 0xcc9e2d51, c2 = 0x1b873593;          var h1 = seed;         var roundedEnd = len &amp; ~0x3;          for (var i = 0; i &lt; roundedEnd; i += 4) {             var k1 = (data.charCodeAt(i)     &amp; 0xff)        |                 ((data.charCodeAt(i + 1) &amp; 0xff) &lt;&lt; 8)  |                 ((data.charCodeAt(i + 2) &amp; 0xff) &lt;&lt; 16) |                 ((data.charCodeAt(i + 3) &amp; 0xff) &lt;&lt; 24);              k1 = this.mul32(k1, c1);             k1 = ((k1 &amp; 0x1ffff) &lt;&lt; 15) | (k1 &gt;&gt;&gt; 17);  // ROTL32(k1,15);             k1 = this.mul32(k1, c2);              h1 ^= k1;             h1 = ((h1 &amp; 0x7ffff) &lt;&lt; 13) | (h1 &gt;&gt;&gt; 19);  // ROTL32(h1,13);             h1 = (h1 * 5 + 0xe6546b64) | 0;         }          k1 = 0;          switch(len % 4) {             case 3:                 k1 = (data.charCodeAt(roundedEnd + 2) &amp; 0xff) &lt;&lt; 16;                 // fallthrough             case 2:                 k1 |= (data.charCodeAt(roundedEnd + 1) &amp; 0xff) &lt;&lt; 8;                 // fallthrough             case 1:                 k1 |= (data.charCodeAt(roundedEnd) &amp; 0xff);                 k1 = this.mul32(k1, c1);                 k1 = ((k1 &amp; 0x1ffff) &lt;&lt; 15) | (k1 &gt;&gt;&gt; 17);  // ROTL32(k1,15);                 k1 = this.mul32(k1, c2);                 h1 ^= k1;         }          // finalization         h1 ^= len;          // fmix(h1);         h1 ^= h1 &gt;&gt;&gt; 16;         h1  = this.mul32(h1, 0x85ebca6b);         h1 ^= h1 &gt;&gt;&gt; 13;         h1  = this.mul32(h1, 0xc2b2ae35);         h1 ^= h1 &gt;&gt;&gt; 16;          return h1;     },      hashString: function(data, len, seed) {         var c1 = 0xcc9e2d51, c2 = 0x1b873593;          var h1 = seed;         var roundedEnd = len &amp; ~0x1;          for (var i = 0; i &lt; roundedEnd; i += 2) {             var k1 = data.charCodeAt(i) | (data.charCodeAt(i + 1) &lt;&lt; 16);              k1 = this.mul32(k1, c1);             k1 = ((k1 &amp; 0x1ffff) &lt;&lt; 15) | (k1 &gt;&gt;&gt; 17);  // ROTL32(k1,15);             k1 = this.mul32(k1, c2);              h1 ^= k1;             h1 = ((h1 &amp; 0x7ffff) &lt;&lt; 13) | (h1 &gt;&gt;&gt; 19);  // ROTL32(h1,13);             h1 = (h1 * 5 + 0xe6546b64) | 0;         }          if((len % 2) == 1) {             k1 = data.charCodeAt(roundedEnd);             k1 = this.mul32(k1, c1);             k1 = ((k1 &amp; 0x1ffff) &lt;&lt; 15) | (k1 &gt;&gt;&gt; 17);  // ROTL32(k1,15);             k1 = this.mul32(k1, c2);             h1 ^= k1;         }          // finalization         h1 ^= (len &lt;&lt; 1);          // fmix(h1);         h1 ^= h1 &gt;&gt;&gt; 16;         h1  = this.mul32(h1, 0x85ebca6b);         h1 ^= h1 &gt;&gt;&gt; 13;         h1  = this.mul32(h1, 0xc2b2ae35);         h1 ^= h1 &gt;&gt;&gt; 16;          return h1;     } };  if(typeof module !== ""undefined"" &amp;&amp; typeof module.exports !== ""undefined"") {     module.exports = MurmurHash3; } </code></pre>  <p><strong><em>Here is the HTML code + Javascript I am using to test the javascript</em></strong></p>  <p><a href=""https://jsbin.com/gicomikike/edit?html,js,output"" rel=""nofollow"">https://jsbin.com/gicomikike/edit?html,js,output</a> </p>  <pre><code>&lt;html&gt; &lt;head&gt;  &lt;script src=""https://ajax.googleapis.com/ajax/libs/jquery/3.1.0/jquery.min.js""&gt;&lt;/script&gt; &lt;script src=""murmurhash3.js""&gt;&lt;/script&gt;  &lt;script&gt;  function call_murmurhash3_32_gc () {     var key = $('textarea#textarea1').val();     var seed = 0;     var hash = MurmurHash3.hashString (key, key.length, seed);     $('div#div1').text(hash);     } &lt;/script&gt;  &lt;/head&gt; &lt;body&gt; Body  &lt;form&gt;      &lt;textarea rows=""4"" cols=""50"" id=textarea1&gt;&lt;/textarea&gt;      &lt;br&gt;     &lt;input type=""button"" value=""Hash"" onclick=""call_murmurhash3_32_gc()""/&gt;  &lt;/form&gt;   &lt;div id=div1&gt;  &lt;/div&gt;  &lt;/body&gt; &lt;/html&gt; </code></pre>  <p><strong><em>simple_python_wrapper.py</em></strong></p>  <p>This makes use of MurmurHash3.cpp in sklearn's import tree.</p>  <pre><code>from sklearn.feature_extraction._hashing import transform  import numpy as np  def getHashIndex (words):      raw_X = words     n_features = 262144 # 2 ** 18     dtype = np.float32 #np.float64      #transform(raw_X, Py_ssize_t n_features, dtype)     indices_a, indptr, values = transform (raw_X, n_features, dtype)      return indices_a    words = [[(""hello"", 1), (""there"", 1)]]   print getHashIndex (words) </code></pre>  <p>Output</p>  <pre><code>[260679  45525] </code></pre>  <p><strong><em>MurmurHash3.cpp</em></strong></p>  <pre><code>I copied this code is available here  https://github.com/karanlyons/murmurHash3.js/blob/master/murmurHash3.js //----------------------------------------------------------------------------- // MurmurHash3 was written by Austin Appleby, and is placed in the public // domain. The author hereby disclaims copyright to this source code.  // Note - The x86 and x64 versions do _not_ produce the same results, as the // algorithms are optimized for their respective platforms. You can still // compile and run any of them on any platform, but your performance with the // non-native version will be less than optimal.  #include ""MurmurHash3.h""  //----------------------------------------------------------------------------- // Platform-specific functions and macros  // Microsoft Visual Studio  #if defined(_MSC_VER)  #define FORCE_INLINE    __forceinline  #include &lt;stdlib.h&gt;  #define ROTL32(x,y) _rotl(x,y) #define ROTL64(x,y) _rotl64(x,y)  #define BIG_CONSTANT(x) (x)  // Other compilers  #else   // defined(_MSC_VER)  #if defined(GNUC) &amp;&amp; ((GNUC &gt; 4) || (GNUC == 4 &amp;&amp; GNUC_MINOR &gt;= 4))  /* gcc version &gt;= 4.4 4.1 = RHEL 5, 4.4 = RHEL 6.  * Don't inline for RHEL 5 gcc which is 4.1 */ #define FORCE_INLINE attribute((always_inline))  #else  #define FORCE_INLINE  #endif   inline uint32_t rotl32 ( uint32_t x, int8_t r ) {   return (x &lt;&lt; r) | (x &gt;&gt; (32 - r)); }  inline uint64_t rotl64 ( uint64_t x, int8_t r ) {   return (x &lt;&lt; r) | (x &gt;&gt; (64 - r)); }  #define ROTL32(x,y) rotl32(x,y) #define ROTL64(x,y) rotl64(x,y)  #define BIG_CONSTANT(x) (x##LLU)  #endif // !defined(_MSC_VER)  //----------------------------------------------------------------------------- // Block read - if your platform needs to do endian-swapping or can only // handle aligned reads, do the conversion here  FORCE_INLINE uint32_t getblock ( const uint32_t * p, int i ) {   return p[i]; }  FORCE_INLINE uint64_t getblock ( const uint64_t * p, int i ) {   return p[i]; }  //----------------------------------------------------------------------------- // Finalization mix - force all bits of a hash block to avalanche  FORCE_INLINE uint32_t fmix ( uint32_t h ) {   h ^= h &gt;&gt; 16;   h *= 0x85ebca6b;   h ^= h &gt;&gt; 13;   h *= 0xc2b2ae35;   h ^= h &gt;&gt; 16;    return h; }  //----------  FORCE_INLINE uint64_t fmix ( uint64_t k ) {   k ^= k &gt;&gt; 33;   k *= BIG_CONSTANT(0xff51afd7ed558ccd);   k ^= k &gt;&gt; 33;   k *= BIG_CONSTANT(0xc4ceb9fe1a85ec53);   k ^= k &gt;&gt; 33;    return k; }  //-----------------------------------------------------------------------------  void MurmurHash3_x86_32 ( const void * key, int len,                           uint32_t seed, void * out ) {   const uint8_t * data = (const uint8_t*)key;   const int nblocks = len / 4;    uint32_t h1 = seed;    uint32_t c1 = 0xcc9e2d51;   uint32_t c2 = 0x1b873593;    //----------   // body    const uint32_t * blocks = (const uint32_t *)(data + nblocks*4);    for(int i = -nblocks; i; i++)   {     uint32_t k1 = getblock(blocks,i);      k1 *= c1;     k1 = ROTL32(k1,15);     k1 *= c2;      h1 ^= k1;     h1 = ROTL32(h1,13);     h1 = h1*5+0xe6546b64;   }    //----------   // tail    const uint8_t * tail = (const uint8_t*)(data + nblocks*4);    uint32_t k1 = 0;    switch(len &amp; 3)   {   case 3: k1 ^= tail[2] &lt;&lt; 16;   case 2: k1 ^= tail[1] &lt;&lt; 8;   case 1: k1 ^= tail[0];           k1 *= c1; k1 = ROTL32(k1,15); k1 *= c2; h1 ^= k1;   };    //----------   // finalization    h1 ^= len;    h1 = fmix(h1);    *(uint32_t*)out = h1; }  //-----------------------------------------------------------------------------  void MurmurHash3_x86_128 ( const void * key, const int len,                            uint32_t seed, void * out ) {   const uint8_t * data = (const uint8_t*)key;   const int nblocks = len / 16;    uint32_t h1 = seed;   uint32_t h2 = seed;   uint32_t h3 = seed;   uint32_t h4 = seed;    uint32_t c1 = 0x239b961b;   uint32_t c2 = 0xab0e9789;   uint32_t c3 = 0x38b34ae5;   uint32_t c4 = 0xa1e38b93;    //----------   // body    const uint32_t * blocks = (const uint32_t *)(data + nblocks*16);    for(int i = -nblocks; i; i++)   {     uint32_t k1 = getblock(blocks,i*4+0);     uint32_t k2 = getblock(blocks,i*4+1);     uint32_t k3 = getblock(blocks,i*4+2);     uint32_t k4 = getblock(blocks,i*4+3);      k1 *= c1; k1  = ROTL32(k1,15); k1 *= c2; h1 ^= k1;      h1 = ROTL32(h1,19); h1 += h2; h1 = h1*5+0x561ccd1b;      k2 *= c2; k2  = ROTL32(k2,16); k2 *= c3; h2 ^= k2;      h2 = ROTL32(h2,17); h2 += h3; h2 = h2*5+0x0bcaa747;      k3 *= c3; k3  = ROTL32(k3,17); k3 *= c4; h3 ^= k3;      h3 = ROTL32(h3,15); h3 += h4; h3 = h3*5+0x96cd1c35;      k4 *= c4; k4  = ROTL32(k4,18); k4 *= c1; h4 ^= k4;      h4 = ROTL32(h4,13); h4 += h1; h4 = h4*5+0x32ac3b17;   }    //----------   // tail    const uint8_t * tail = (const uint8_t*)(data + nblocks*16);    uint32_t k1 = 0;   uint32_t k2 = 0;   uint32_t k3 = 0;   uint32_t k4 = 0;    switch(len &amp; 15)   {   case 15: k4 ^= tail[14] &lt;&lt; 16;   case 14: k4 ^= tail[13] &lt;&lt; 8;   case 13: k4 ^= tail[12] &lt;&lt; 0;            k4 *= c4; k4  = ROTL32(k4,18); k4 *= c1; h4 ^= k4;    case 12: k3 ^= tail[11] &lt;&lt; 24;   case 11: k3 ^= tail[10] &lt;&lt; 16;   case 10: k3 ^= tail[ 9] &lt;&lt; 8;   case  9: k3 ^= tail[ 8] &lt;&lt; 0;            k3 *= c3; k3  = ROTL32(k3,17); k3 *= c4; h3 ^= k3;    case  8: k2 ^= tail[ 7] &lt;&lt; 24;   case  7: k2 ^= tail[ 6] &lt;&lt; 16;   case  6: k2 ^= tail[ 5] &lt;&lt; 8;   case  5: k2 ^= tail[ 4] &lt;&lt; 0;            k2 *= c2; k2  = ROTL32(k2,16); k2 *= c3; h2 ^= k2;    case  4: k1 ^= tail[ 3] &lt;&lt; 24;   case  3: k1 ^= tail[ 2] &lt;&lt; 16;   case  2: k1 ^= tail[ 1] &lt;&lt; 8;   case  1: k1 ^= tail[ 0] &lt;&lt; 0;            k1 *= c1; k1  = ROTL32(k1,15); k1 *= c2; h1 ^= k1;   };    //----------   // finalization    h1 ^= len; h2 ^= len; h3 ^= len; h4 ^= len;    h1 += h2; h1 += h3; h1 += h4;   h2 += h1; h3 += h1; h4 += h1;    h1 = fmix(h1);   h2 = fmix(h2);   h3 = fmix(h3);   h4 = fmix(h4);    h1 += h2; h1 += h3; h1 += h4;   h2 += h1; h3 += h1; h4 += h1;    ((uint32_t*)out)[0] = h1;   ((uint32_t*)out)[1] = h2;   ((uint32_t*)out)[2] = h3;   ((uint32_t*)out)[3] = h4; }  //-----------------------------------------------------------------------------  void MurmurHash3_x64_128 ( const void * key, const int len,                            const uint32_t seed, void * out ) {   const uint8_t * data = (const uint8_t*)key;   const int nblocks = len / 16;    uint64_t h1 = seed;   uint64_t h2 = seed;    uint64_t c1 = BIG_CONSTANT(0x87c37b91114253d5);   uint64_t c2 = BIG_CONSTANT(0x4cf5ad432745937f);    //----------   // body    const uint64_t * blocks = (const uint64_t *)(data);    for(int i = 0; i &lt; nblocks; i++)   {     uint64_t k1 = getblock(blocks,i*2+0);     uint64_t k2 = getblock(blocks,i*2+1);      k1 *= c1; k1  = ROTL64(k1,31); k1 *= c2; h1 ^= k1;      h1 = ROTL64(h1,27); h1 += h2; h1 = h1*5+0x52dce729;      k2 *= c2; k2  = ROTL64(k2,33); k2 *= c1; h2 ^= k2;      h2 = ROTL64(h2,31); h2 += h1; h2 = h2*5+0x38495ab5;   }    //----------   // tail    const uint8_t * tail = (const uint8_t*)(data + nblocks*16);    uint64_t k1 = 0;   uint64_t k2 = 0;    switch(len &amp; 15)   {   case 15: k2 ^= uint64_t(tail[14]) &lt;&lt; 48;   case 14: k2 ^= uint64_t(tail[13]) &lt;&lt; 40;   case 13: k2 ^= uint64_t(tail[12]) &lt;&lt; 32;   case 12: k2 ^= uint64_t(tail[11]) &lt;&lt; 24;   case 11: k2 ^= uint64_t(tail[10]) &lt;&lt; 16;   case 10: k2 ^= uint64_t(tail[ 9]) &lt;&lt; 8;   case  9: k2 ^= uint64_t(tail[ 8]) &lt;&lt; 0;            k2 *= c2; k2  = ROTL64(k2,33); k2 *= c1; h2 ^= k2;    case  8: k1 ^= uint64_t(tail[ 7]) &lt;&lt; 56;   case  7: k1 ^= uint64_t(tail[ 6]) &lt;&lt; 48;   case  6: k1 ^= uint64_t(tail[ 5]) &lt;&lt; 40;   case  5: k1 ^= uint64_t(tail[ 4]) &lt;&lt; 32;   case  4: k1 ^= uint64_t(tail[ 3]) &lt;&lt; 24;   case  3: k1 ^= uint64_t(tail[ 2]) &lt;&lt; 16;   case  2: k1 ^= uint64_t(tail[ 1]) &lt;&lt; 8;   case  1: k1 ^= uint64_t(tail[ 0]) &lt;&lt; 0;            k1 *= c1; k1  = ROTL64(k1,31); k1 *= c2; h1 ^= k1;   };    //----------   // finalization    h1 ^= len; h2 ^= len;    h1 += h2;   h2 += h1;    h1 = fmix(h1);   h2 = fmix(h2);    h1 += h2;   h2 += h1;    ((uint64_t*)out)[0] = h1;   ((uint64_t*)out)[1] = h2; }  //----------------------------------------------------------------------------- </code></pre>  <p>Let me explain that a bit more. </p>  <p><code>from sklearn.feature_extraction._hashing import transform</code>  makes use of this code <code>https://github.com/scikit-learn/scikit-learn/blob/412996f09b6756752dfd3736c306d46fca8f1aa1/sklearn/feature_extraction/_hashing.pyx</code> which makes use of this <code>from sklearn.utils.murmurhash cimport murmurhash3_bytes_s32</code>  which in turn makes use of this <code>https://github.com/scikit-learn/scikit-learn/blob/master/sklearn/utils/murmurhash.pyx</code>  which is built on this <a href=""https://github.com/scikit-learn/scikit-learn/blob/master/sklearn/utils/src/MurmurHash3.cpp"" rel=""nofollow"">https://github.com/scikit-learn/scikit-learn/blob/master/sklearn/utils/src/MurmurHash3.cpp</a> . <strong>So, MurmurHash3.cpp is very important. I need a Javascript version of this exact MurmurHash3.cpp such that the Javascript code and MurmurHash3.cpp would produce the same result</strong>.</p>  <p>I need this because I want to make some of my machine learning tools available online and the hashing needs to be done on the client's web browser.</p>  <p>So far, I have found a few Javascript implementations of MurmurHash3. However, murmurhash3.js <code>https://github.com/whitequark/murmurhash3-js/blob/master/murmurhash3.js</code> seems to be closest (in terms of codes structure) to the MurmurHash3.cpp used by sklearn. But I still d not get the same hash from both of them. </p>  <p>Can anyone please guide me on how to modify <code>murmurhash3.js</code> (above) so that it produces the same hash as <code>MurmurHash3.cpp</code> (above) does?</p>"	"<p><em>I’m late to the party, but I only hit this problem now.</em></p>  <p>If the string is not made up of regular ASCII characters, the implementation you are using will yield different results from the reference implementation. This is because it <a href=""https://github.com/whitequark/murmurhash3-js/blob/master/murmurhash3.js#L33-L36"" rel=""nofollow noreferrer"">uses <code>charCodeAt</code> and a byte mask</a> to get the bytes that need to be hashed from the input string. If the string contains any other characters, the results will diverge unless you are doing the exact same thing to decode the string on your other platforms.</p>  <p>I made <a href=""https://github.com/pid/murmurHash3js"" rel=""nofollow noreferrer"">a fork of MurmurHash3js</a> that uses bytes as input instead of strings. Here's how you use it:</p>  <pre><code>npm install murmurhash3js-revisited </code></pre>  <p>Then in your js files you can do:</p>  <pre><code>import MurmurHash3 from 'murmurhash3js-revisited';  const str = ""My hovercraft is full of eels.""; // get utf-8 bytes const bytes = new TextEncoder().encode(str);  MurmurHash3.x86.hash32(bytes); // output: 2953494853  MurmurHash3.x86.hash128(bytes); // output: ""e3a186aee169ba6c6a8bd9343c68fa9c""  MurmurHash3.x64.hash128(bytes); // output: ""03e5e14d358c16d1e5ae86df7ed5cfcb""  MurmurHash3.x86.hash32(""any string""); // output: undefined // (x86.hash128 and x64.hash128 also return undefined) </code></pre>  <p>You can read about performance considerations and try out an interactive comparison between different JavaScript implementations in <a href=""https://cimi.io/murmurhash3js-revisited/"" rel=""nofollow noreferrer"">my library's documentation</a>.</p>"
39836589	Javascript implementation of Murmurhash3 to give the same result as Murmurhash3.cpp used by transform available in Python's sklearn	javascript|python|c++|scikit-learn|murmurhash	2016-10-03 16:52:11.343000 UTC	"<p>(I am VERY sorry I am not allowed to add many URLs to help me better explain my problems in this post because I am new on StackOverflow and my StackOverflow account has very low privilege).</p>  <p><strong>Summary</strong> </p>  <p>Can anyone please guide me on how to modify <code>murmurhash3.js</code> (below) so that it produces the same hash as <code>MurmurHash3.cpp</code> (below) does? I provide a simple python code ""simple_python_wrapper.py"" for MurmurHash3.cpp based on what I need. The simple_python_wrapper.py should work on your computer if you have sklearn installed.</p>  <p>I have heavily used <code>Murmurhash3.cpp</code> (shown below) while using <code>transform</code> from sklearn (a Python Machine Learning Library): <code>from sklearn.feature_extraction._hashing import transform</code> in one of my machine learning projects. <code>transform</code> uses <code>Murmurhash3.cpp</code> deep down in sklearn's  implementation/import tree.</p>  <p><strong>More details</strong></p>  <p><strong><em>hash % (2^18) {that is ""hash modulus 2^18""} based on MurmurHash3.cpp</em></strong></p>  <pre><code>""hello"" gives 260679 ""there"" gives 45525 </code></pre>  <p><strong><em>hash % (2^18) {that is ""hash modulus 2^18""} based on murmurhash3.js</em></strong></p>  <pre><code>""hello"" gives -58999 ""there"" gives 65775 </code></pre>  <p><strong><em>murmurhash3.js</em></strong></p>  <pre><code>/*  *  The MurmurHash3 algorithm was created by Austin Appleby.  This JavaScript port was authored  *  by whitequark (based on Java port by Yonik Seeley) and is placed into the public domain.  *  The author hereby disclaims copyright to this source code.  *  *  This produces exactly the same hash values as the final C++ version of MurmurHash3 and  *  is thus suitable for producing the same hash values across platforms.  *  *  There are two versions of this hash implementation. First interprets the string as a  *  sequence of bytes, ignoring most significant byte of each codepoint. The second one  *  interprets the string as a UTF-16 codepoint sequence, and appends each 16-bit codepoint  *  to the hash independently. The latter mode was not written to be compatible with  *  any other implementation, but it should offer better performance for JavaScript-only  *  applications.  *  *  See http://github.com/whitequark/murmurhash3-js for future updates to this file.  */  var MurmurHash3 = {     mul32: function(m, n) {         var nlo = n &amp; 0xffff;         var nhi = n - nlo;         return ((nhi * m | 0) + (nlo * m | 0)) | 0;     },      hashBytes: function(data, len, seed) {         var c1 = 0xcc9e2d51, c2 = 0x1b873593;          var h1 = seed;         var roundedEnd = len &amp; ~0x3;          for (var i = 0; i &lt; roundedEnd; i += 4) {             var k1 = (data.charCodeAt(i)     &amp; 0xff)        |                 ((data.charCodeAt(i + 1) &amp; 0xff) &lt;&lt; 8)  |                 ((data.charCodeAt(i + 2) &amp; 0xff) &lt;&lt; 16) |                 ((data.charCodeAt(i + 3) &amp; 0xff) &lt;&lt; 24);              k1 = this.mul32(k1, c1);             k1 = ((k1 &amp; 0x1ffff) &lt;&lt; 15) | (k1 &gt;&gt;&gt; 17);  // ROTL32(k1,15);             k1 = this.mul32(k1, c2);              h1 ^= k1;             h1 = ((h1 &amp; 0x7ffff) &lt;&lt; 13) | (h1 &gt;&gt;&gt; 19);  // ROTL32(h1,13);             h1 = (h1 * 5 + 0xe6546b64) | 0;         }          k1 = 0;          switch(len % 4) {             case 3:                 k1 = (data.charCodeAt(roundedEnd + 2) &amp; 0xff) &lt;&lt; 16;                 // fallthrough             case 2:                 k1 |= (data.charCodeAt(roundedEnd + 1) &amp; 0xff) &lt;&lt; 8;                 // fallthrough             case 1:                 k1 |= (data.charCodeAt(roundedEnd) &amp; 0xff);                 k1 = this.mul32(k1, c1);                 k1 = ((k1 &amp; 0x1ffff) &lt;&lt; 15) | (k1 &gt;&gt;&gt; 17);  // ROTL32(k1,15);                 k1 = this.mul32(k1, c2);                 h1 ^= k1;         }          // finalization         h1 ^= len;          // fmix(h1);         h1 ^= h1 &gt;&gt;&gt; 16;         h1  = this.mul32(h1, 0x85ebca6b);         h1 ^= h1 &gt;&gt;&gt; 13;         h1  = this.mul32(h1, 0xc2b2ae35);         h1 ^= h1 &gt;&gt;&gt; 16;          return h1;     },      hashString: function(data, len, seed) {         var c1 = 0xcc9e2d51, c2 = 0x1b873593;          var h1 = seed;         var roundedEnd = len &amp; ~0x1;          for (var i = 0; i &lt; roundedEnd; i += 2) {             var k1 = data.charCodeAt(i) | (data.charCodeAt(i + 1) &lt;&lt; 16);              k1 = this.mul32(k1, c1);             k1 = ((k1 &amp; 0x1ffff) &lt;&lt; 15) | (k1 &gt;&gt;&gt; 17);  // ROTL32(k1,15);             k1 = this.mul32(k1, c2);              h1 ^= k1;             h1 = ((h1 &amp; 0x7ffff) &lt;&lt; 13) | (h1 &gt;&gt;&gt; 19);  // ROTL32(h1,13);             h1 = (h1 * 5 + 0xe6546b64) | 0;         }          if((len % 2) == 1) {             k1 = data.charCodeAt(roundedEnd);             k1 = this.mul32(k1, c1);             k1 = ((k1 &amp; 0x1ffff) &lt;&lt; 15) | (k1 &gt;&gt;&gt; 17);  // ROTL32(k1,15);             k1 = this.mul32(k1, c2);             h1 ^= k1;         }          // finalization         h1 ^= (len &lt;&lt; 1);          // fmix(h1);         h1 ^= h1 &gt;&gt;&gt; 16;         h1  = this.mul32(h1, 0x85ebca6b);         h1 ^= h1 &gt;&gt;&gt; 13;         h1  = this.mul32(h1, 0xc2b2ae35);         h1 ^= h1 &gt;&gt;&gt; 16;          return h1;     } };  if(typeof module !== ""undefined"" &amp;&amp; typeof module.exports !== ""undefined"") {     module.exports = MurmurHash3; } </code></pre>  <p><strong><em>Here is the HTML code + Javascript I am using to test the javascript</em></strong></p>  <p><a href=""https://jsbin.com/gicomikike/edit?html,js,output"" rel=""nofollow"">https://jsbin.com/gicomikike/edit?html,js,output</a> </p>  <pre><code>&lt;html&gt; &lt;head&gt;  &lt;script src=""https://ajax.googleapis.com/ajax/libs/jquery/3.1.0/jquery.min.js""&gt;&lt;/script&gt; &lt;script src=""murmurhash3.js""&gt;&lt;/script&gt;  &lt;script&gt;  function call_murmurhash3_32_gc () {     var key = $('textarea#textarea1').val();     var seed = 0;     var hash = MurmurHash3.hashString (key, key.length, seed);     $('div#div1').text(hash);     } &lt;/script&gt;  &lt;/head&gt; &lt;body&gt; Body  &lt;form&gt;      &lt;textarea rows=""4"" cols=""50"" id=textarea1&gt;&lt;/textarea&gt;      &lt;br&gt;     &lt;input type=""button"" value=""Hash"" onclick=""call_murmurhash3_32_gc()""/&gt;  &lt;/form&gt;   &lt;div id=div1&gt;  &lt;/div&gt;  &lt;/body&gt; &lt;/html&gt; </code></pre>  <p><strong><em>simple_python_wrapper.py</em></strong></p>  <p>This makes use of MurmurHash3.cpp in sklearn's import tree.</p>  <pre><code>from sklearn.feature_extraction._hashing import transform  import numpy as np  def getHashIndex (words):      raw_X = words     n_features = 262144 # 2 ** 18     dtype = np.float32 #np.float64      #transform(raw_X, Py_ssize_t n_features, dtype)     indices_a, indptr, values = transform (raw_X, n_features, dtype)      return indices_a    words = [[(""hello"", 1), (""there"", 1)]]   print getHashIndex (words) </code></pre>  <p>Output</p>  <pre><code>[260679  45525] </code></pre>  <p><strong><em>MurmurHash3.cpp</em></strong></p>  <pre><code>I copied this code is available here  https://github.com/karanlyons/murmurHash3.js/blob/master/murmurHash3.js //----------------------------------------------------------------------------- // MurmurHash3 was written by Austin Appleby, and is placed in the public // domain. The author hereby disclaims copyright to this source code.  // Note - The x86 and x64 versions do _not_ produce the same results, as the // algorithms are optimized for their respective platforms. You can still // compile and run any of them on any platform, but your performance with the // non-native version will be less than optimal.  #include ""MurmurHash3.h""  //----------------------------------------------------------------------------- // Platform-specific functions and macros  // Microsoft Visual Studio  #if defined(_MSC_VER)  #define FORCE_INLINE    __forceinline  #include &lt;stdlib.h&gt;  #define ROTL32(x,y) _rotl(x,y) #define ROTL64(x,y) _rotl64(x,y)  #define BIG_CONSTANT(x) (x)  // Other compilers  #else   // defined(_MSC_VER)  #if defined(GNUC) &amp;&amp; ((GNUC &gt; 4) || (GNUC == 4 &amp;&amp; GNUC_MINOR &gt;= 4))  /* gcc version &gt;= 4.4 4.1 = RHEL 5, 4.4 = RHEL 6.  * Don't inline for RHEL 5 gcc which is 4.1 */ #define FORCE_INLINE attribute((always_inline))  #else  #define FORCE_INLINE  #endif   inline uint32_t rotl32 ( uint32_t x, int8_t r ) {   return (x &lt;&lt; r) | (x &gt;&gt; (32 - r)); }  inline uint64_t rotl64 ( uint64_t x, int8_t r ) {   return (x &lt;&lt; r) | (x &gt;&gt; (64 - r)); }  #define ROTL32(x,y) rotl32(x,y) #define ROTL64(x,y) rotl64(x,y)  #define BIG_CONSTANT(x) (x##LLU)  #endif // !defined(_MSC_VER)  //----------------------------------------------------------------------------- // Block read - if your platform needs to do endian-swapping or can only // handle aligned reads, do the conversion here  FORCE_INLINE uint32_t getblock ( const uint32_t * p, int i ) {   return p[i]; }  FORCE_INLINE uint64_t getblock ( const uint64_t * p, int i ) {   return p[i]; }  //----------------------------------------------------------------------------- // Finalization mix - force all bits of a hash block to avalanche  FORCE_INLINE uint32_t fmix ( uint32_t h ) {   h ^= h &gt;&gt; 16;   h *= 0x85ebca6b;   h ^= h &gt;&gt; 13;   h *= 0xc2b2ae35;   h ^= h &gt;&gt; 16;    return h; }  //----------  FORCE_INLINE uint64_t fmix ( uint64_t k ) {   k ^= k &gt;&gt; 33;   k *= BIG_CONSTANT(0xff51afd7ed558ccd);   k ^= k &gt;&gt; 33;   k *= BIG_CONSTANT(0xc4ceb9fe1a85ec53);   k ^= k &gt;&gt; 33;    return k; }  //-----------------------------------------------------------------------------  void MurmurHash3_x86_32 ( const void * key, int len,                           uint32_t seed, void * out ) {   const uint8_t * data = (const uint8_t*)key;   const int nblocks = len / 4;    uint32_t h1 = seed;    uint32_t c1 = 0xcc9e2d51;   uint32_t c2 = 0x1b873593;    //----------   // body    const uint32_t * blocks = (const uint32_t *)(data + nblocks*4);    for(int i = -nblocks; i; i++)   {     uint32_t k1 = getblock(blocks,i);      k1 *= c1;     k1 = ROTL32(k1,15);     k1 *= c2;      h1 ^= k1;     h1 = ROTL32(h1,13);     h1 = h1*5+0xe6546b64;   }    //----------   // tail    const uint8_t * tail = (const uint8_t*)(data + nblocks*4);    uint32_t k1 = 0;    switch(len &amp; 3)   {   case 3: k1 ^= tail[2] &lt;&lt; 16;   case 2: k1 ^= tail[1] &lt;&lt; 8;   case 1: k1 ^= tail[0];           k1 *= c1; k1 = ROTL32(k1,15); k1 *= c2; h1 ^= k1;   };    //----------   // finalization    h1 ^= len;    h1 = fmix(h1);    *(uint32_t*)out = h1; }  //-----------------------------------------------------------------------------  void MurmurHash3_x86_128 ( const void * key, const int len,                            uint32_t seed, void * out ) {   const uint8_t * data = (const uint8_t*)key;   const int nblocks = len / 16;    uint32_t h1 = seed;   uint32_t h2 = seed;   uint32_t h3 = seed;   uint32_t h4 = seed;    uint32_t c1 = 0x239b961b;   uint32_t c2 = 0xab0e9789;   uint32_t c3 = 0x38b34ae5;   uint32_t c4 = 0xa1e38b93;    //----------   // body    const uint32_t * blocks = (const uint32_t *)(data + nblocks*16);    for(int i = -nblocks; i; i++)   {     uint32_t k1 = getblock(blocks,i*4+0);     uint32_t k2 = getblock(blocks,i*4+1);     uint32_t k3 = getblock(blocks,i*4+2);     uint32_t k4 = getblock(blocks,i*4+3);      k1 *= c1; k1  = ROTL32(k1,15); k1 *= c2; h1 ^= k1;      h1 = ROTL32(h1,19); h1 += h2; h1 = h1*5+0x561ccd1b;      k2 *= c2; k2  = ROTL32(k2,16); k2 *= c3; h2 ^= k2;      h2 = ROTL32(h2,17); h2 += h3; h2 = h2*5+0x0bcaa747;      k3 *= c3; k3  = ROTL32(k3,17); k3 *= c4; h3 ^= k3;      h3 = ROTL32(h3,15); h3 += h4; h3 = h3*5+0x96cd1c35;      k4 *= c4; k4  = ROTL32(k4,18); k4 *= c1; h4 ^= k4;      h4 = ROTL32(h4,13); h4 += h1; h4 = h4*5+0x32ac3b17;   }    //----------   // tail    const uint8_t * tail = (const uint8_t*)(data + nblocks*16);    uint32_t k1 = 0;   uint32_t k2 = 0;   uint32_t k3 = 0;   uint32_t k4 = 0;    switch(len &amp; 15)   {   case 15: k4 ^= tail[14] &lt;&lt; 16;   case 14: k4 ^= tail[13] &lt;&lt; 8;   case 13: k4 ^= tail[12] &lt;&lt; 0;            k4 *= c4; k4  = ROTL32(k4,18); k4 *= c1; h4 ^= k4;    case 12: k3 ^= tail[11] &lt;&lt; 24;   case 11: k3 ^= tail[10] &lt;&lt; 16;   case 10: k3 ^= tail[ 9] &lt;&lt; 8;   case  9: k3 ^= tail[ 8] &lt;&lt; 0;            k3 *= c3; k3  = ROTL32(k3,17); k3 *= c4; h3 ^= k3;    case  8: k2 ^= tail[ 7] &lt;&lt; 24;   case  7: k2 ^= tail[ 6] &lt;&lt; 16;   case  6: k2 ^= tail[ 5] &lt;&lt; 8;   case  5: k2 ^= tail[ 4] &lt;&lt; 0;            k2 *= c2; k2  = ROTL32(k2,16); k2 *= c3; h2 ^= k2;    case  4: k1 ^= tail[ 3] &lt;&lt; 24;   case  3: k1 ^= tail[ 2] &lt;&lt; 16;   case  2: k1 ^= tail[ 1] &lt;&lt; 8;   case  1: k1 ^= tail[ 0] &lt;&lt; 0;            k1 *= c1; k1  = ROTL32(k1,15); k1 *= c2; h1 ^= k1;   };    //----------   // finalization    h1 ^= len; h2 ^= len; h3 ^= len; h4 ^= len;    h1 += h2; h1 += h3; h1 += h4;   h2 += h1; h3 += h1; h4 += h1;    h1 = fmix(h1);   h2 = fmix(h2);   h3 = fmix(h3);   h4 = fmix(h4);    h1 += h2; h1 += h3; h1 += h4;   h2 += h1; h3 += h1; h4 += h1;    ((uint32_t*)out)[0] = h1;   ((uint32_t*)out)[1] = h2;   ((uint32_t*)out)[2] = h3;   ((uint32_t*)out)[3] = h4; }  //-----------------------------------------------------------------------------  void MurmurHash3_x64_128 ( const void * key, const int len,                            const uint32_t seed, void * out ) {   const uint8_t * data = (const uint8_t*)key;   const int nblocks = len / 16;    uint64_t h1 = seed;   uint64_t h2 = seed;    uint64_t c1 = BIG_CONSTANT(0x87c37b91114253d5);   uint64_t c2 = BIG_CONSTANT(0x4cf5ad432745937f);    //----------   // body    const uint64_t * blocks = (const uint64_t *)(data);    for(int i = 0; i &lt; nblocks; i++)   {     uint64_t k1 = getblock(blocks,i*2+0);     uint64_t k2 = getblock(blocks,i*2+1);      k1 *= c1; k1  = ROTL64(k1,31); k1 *= c2; h1 ^= k1;      h1 = ROTL64(h1,27); h1 += h2; h1 = h1*5+0x52dce729;      k2 *= c2; k2  = ROTL64(k2,33); k2 *= c1; h2 ^= k2;      h2 = ROTL64(h2,31); h2 += h1; h2 = h2*5+0x38495ab5;   }    //----------   // tail    const uint8_t * tail = (const uint8_t*)(data + nblocks*16);    uint64_t k1 = 0;   uint64_t k2 = 0;    switch(len &amp; 15)   {   case 15: k2 ^= uint64_t(tail[14]) &lt;&lt; 48;   case 14: k2 ^= uint64_t(tail[13]) &lt;&lt; 40;   case 13: k2 ^= uint64_t(tail[12]) &lt;&lt; 32;   case 12: k2 ^= uint64_t(tail[11]) &lt;&lt; 24;   case 11: k2 ^= uint64_t(tail[10]) &lt;&lt; 16;   case 10: k2 ^= uint64_t(tail[ 9]) &lt;&lt; 8;   case  9: k2 ^= uint64_t(tail[ 8]) &lt;&lt; 0;            k2 *= c2; k2  = ROTL64(k2,33); k2 *= c1; h2 ^= k2;    case  8: k1 ^= uint64_t(tail[ 7]) &lt;&lt; 56;   case  7: k1 ^= uint64_t(tail[ 6]) &lt;&lt; 48;   case  6: k1 ^= uint64_t(tail[ 5]) &lt;&lt; 40;   case  5: k1 ^= uint64_t(tail[ 4]) &lt;&lt; 32;   case  4: k1 ^= uint64_t(tail[ 3]) &lt;&lt; 24;   case  3: k1 ^= uint64_t(tail[ 2]) &lt;&lt; 16;   case  2: k1 ^= uint64_t(tail[ 1]) &lt;&lt; 8;   case  1: k1 ^= uint64_t(tail[ 0]) &lt;&lt; 0;            k1 *= c1; k1  = ROTL64(k1,31); k1 *= c2; h1 ^= k1;   };    //----------   // finalization    h1 ^= len; h2 ^= len;    h1 += h2;   h2 += h1;    h1 = fmix(h1);   h2 = fmix(h2);    h1 += h2;   h2 += h1;    ((uint64_t*)out)[0] = h1;   ((uint64_t*)out)[1] = h2; }  //----------------------------------------------------------------------------- </code></pre>  <p>Let me explain that a bit more. </p>  <p><code>from sklearn.feature_extraction._hashing import transform</code>  makes use of this code <code>https://github.com/scikit-learn/scikit-learn/blob/412996f09b6756752dfd3736c306d46fca8f1aa1/sklearn/feature_extraction/_hashing.pyx</code> which makes use of this <code>from sklearn.utils.murmurhash cimport murmurhash3_bytes_s32</code>  which in turn makes use of this <code>https://github.com/scikit-learn/scikit-learn/blob/master/sklearn/utils/murmurhash.pyx</code>  which is built on this <a href=""https://github.com/scikit-learn/scikit-learn/blob/master/sklearn/utils/src/MurmurHash3.cpp"" rel=""nofollow"">https://github.com/scikit-learn/scikit-learn/blob/master/sklearn/utils/src/MurmurHash3.cpp</a> . <strong>So, MurmurHash3.cpp is very important. I need a Javascript version of this exact MurmurHash3.cpp such that the Javascript code and MurmurHash3.cpp would produce the same result</strong>.</p>  <p>I need this because I want to make some of my machine learning tools available online and the hashing needs to be done on the client's web browser.</p>  <p>So far, I have found a few Javascript implementations of MurmurHash3. However, murmurhash3.js <code>https://github.com/whitequark/murmurhash3-js/blob/master/murmurhash3.js</code> seems to be closest (in terms of codes structure) to the MurmurHash3.cpp used by sklearn. But I still d not get the same hash from both of them. </p>  <p>Can anyone please guide me on how to modify <code>murmurhash3.js</code> (above) so that it produces the same hash as <code>MurmurHash3.cpp</code> (above) does?</p>"	"<p>Based on suggestions from @ChristopherOicles, I changed my <code>Javascript</code> code (my the header off my HTML code) to use <code>hashBytes</code> instead of <code>hashString</code> as shown below. I also noticed that I needed to change the returned value of <code>hashBytes</code> to its absolute value for my purpose (so I did). These solve my problems and now I get the same hash from the Python/C++ codes and from the Javascript codes.</p>  <p><strong>Modified Javascript Function in my HTML file</strong></p>  <pre><code>&lt;script&gt; function call_murmurhash3_32_gc () {     var key = $('textarea#textarea1').val();     var seed = 0;     var hash = MurmurHash3.hashBytes (key, key.length, seed);     $('div#div1').text(Math.abs (hash) % 262144);     } &lt;/script&gt; </code></pre>  <p>My complete solution is here <a href=""https://jsbin.com/qilokot/edit?html,js,output"" rel=""nofollow"">https://jsbin.com/qilokot/edit?html,js,output</a> .</p>  <p>Again, many thanks to <code>Christopher Oicles</code> and to everyone who tried to help me in some ways. </p>"
39863723	Extract Text from Javascript using Python	javascript|python|beautifulsoup	2016-10-05 00:32:20.787000 UTC	"<p>I've been looking at examples of how to do this but can't quite figure it out. I'm using beautifulsoup to scrape some data - I am able to use it to find the data I want, but it is contained in the following block of code. I'm trying to extract the timestamp information from it. I have a feeling regular expressions work here but I can't seem to figure it out - any suggestions?? </p>  <pre><code>    &lt;script class=""code"" type=""text/javascript""&gt;     $(document).ready(function(){     line1 = [['2009-02-23 10 AM', 5203], ['2009-02-08 10 AM', 3898], ['2009-02-09 10 AM', 4923], ['2009-02-22 10 AM', 3682], ['2009-02-21 10 AM', 3238], ['2009-02-20 10 AM', 4648]];     options1 = {     etc other text       }     });     &lt;/script&gt; </code></pre>"	"<p>One another alternative to using regular expressions to parse javascript code would be to use a JavaScript parser like <a href=""https://pypi.python.org/pypi/slimit"" rel=""nofollow""><code>slimit</code></a>. Working code:</p>  <pre><code>import json  from bs4 import BeautifulSoup from slimit import ast from slimit.parser import Parser from slimit.visitors import nodevisitor  data = """"""&lt;script class=""code"" type=""text/javascript""&gt; $(document).ready(function(){ line1 = [['2009-02-23 10 AM', 5203], ['2009-02-08 10 AM', 3898], ['2009-02-09 10 AM', 4923], ['2009-02-22 10 AM', 3682], ['2009-02-21 10 AM', 3238], ['2009-02-20 10 AM', 4648]]; options1 = {}; }); &lt;/script&gt;""""""  soup = BeautifulSoup(data, ""html.parser"") parser = Parser() tree = parser.parse(soup.script.get_text())  for node in nodevisitor.visit(tree):     if isinstance(node, ast.Assign) and getattr(node.left, 'value', '') == 'line1':         values = json.loads(node.right.to_ecma().replace(""'"", '""').strip())         print(values)         break </code></pre>  <p>Prints a Python list:</p>  <pre><code>[[u'2009-02-23 10 AM', 5203], [u'2009-02-08 10 AM', 3898], [u'2009-02-09 10 AM', 4923], [u'2009-02-22 10 AM', 3682], [u'2009-02-21 10 AM', 3238], [u'2009-02-20 10 AM', 4648]] </code></pre>"
39863723	Extract Text from Javascript using Python	javascript|python|beautifulsoup	2016-10-05 00:32:20.787000 UTC	"<p>I've been looking at examples of how to do this but can't quite figure it out. I'm using beautifulsoup to scrape some data - I am able to use it to find the data I want, but it is contained in the following block of code. I'm trying to extract the timestamp information from it. I have a feeling regular expressions work here but I can't seem to figure it out - any suggestions?? </p>  <pre><code>    &lt;script class=""code"" type=""text/javascript""&gt;     $(document).ready(function(){     line1 = [['2009-02-23 10 AM', 5203], ['2009-02-08 10 AM', 3898], ['2009-02-09 10 AM', 4923], ['2009-02-22 10 AM', 3682], ['2009-02-21 10 AM', 3238], ['2009-02-20 10 AM', 4648]];     options1 = {     etc other text       }     });     &lt;/script&gt; </code></pre>"	"<p>You can't use BS to get this data - BS works only with HTML/XML, not JavaScript. </p>  <p>You have to use <code>regular expressions</code> or standart string functions.</p>  <hr>  <p><strong>EDIT:</strong></p>  <pre><code>text = '''&lt;script class=""code"" type=""text/javascript""&gt;     $(document).ready(function(){     line1 = [['2009-02-23 10 AM', 5203], ['2009-02-08 10 AM', 3898], ['2009-02-09 10 AM', 4923], ['2009-02-22 10 AM', 3682], ['2009-02-21 10 AM', 3238], ['2009-02-20 10 AM', 4648]];     options1 = {     etc other text       }     });     &lt;/script&gt;'''  import re  re.findall(""'([^']*)'"", text) </code></pre>  <p>result:</p>  <pre><code>['2009-02-23 10 AM',  '2009-02-08 10 AM',  '2009-02-09 10 AM',  '2009-02-22 10 AM',  '2009-02-21 10 AM',  '2009-02-20 10 AM'] </code></pre>"
39863893	Load a Select from Radio in Flask/Python using JavaScript / jQuery [Edited again to attend comments]	javascript|jquery|flask	2016-10-05 00:57:10.847000 UTC	"<p>I'm trying to <strong>load a input select control when the user select a radio option</strong> in the form.</p>  <p>First, the generated html script:</p>  <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-html lang-html prettyprint-override""><code>&lt;!DOCTYPE html&gt; &lt;html lang=""pt-br""&gt;   &lt;head&gt;     &lt;meta charset=""UTF-8""&gt;     &lt;title&gt;App&lt;/title&gt;         &lt;link href=""/static/css/bootstrap.min.css"" rel=""stylesheet"" &gt;     &lt;link href=""/static/css/dashboard.css"" rel=""stylesheet"" &gt;     &lt;link href=""/static/css/bootstrap-datetimepicker.min.css"" rel=""stylesheet""&gt;         &lt;/head&gt;      &lt;body&gt;     &lt;form action=""/home"" method=post&gt;                  &lt;!-- Radio Type --&gt;             &lt;div class=""form-group col-md-6""&gt;                                      &lt;label class=""radio-inline""&gt;                       &lt;input id=""type-0"" name=""type"" type=""radio"" value=""1""&gt; &lt;label for=""type-0""&gt;Incomes&lt;/label&gt;                     &lt;/label&gt;                                                  &lt;label class=""radio-inline""&gt;                       &lt;input id=""type-1"" name=""type"" type=""radio"" value=""2""&gt; &lt;label for=""type-1""&gt;Expenses&lt;/label&gt;                     &lt;/label&gt;                                           &lt;!-- categoria --&gt;             &lt;div class=""form-group   col-md-3""&gt;                 &lt;label class=""control-label"" for=""category""&gt;Category&lt;/label&gt;                 &lt;select class=""form-control"" id=""category"" name=""category""&gt;                     &lt;option value=""1""&gt;Cat 1&lt;/option&gt;                     &lt;option value=""1""&gt;Cat 2&lt;/option&gt;                     &lt;option value=""1""&gt;Cat 3&lt;/option&gt;                     &lt;option value=""1""&gt;Cat 4&lt;/option&gt;             &lt;/div&gt;                                 &lt;script type=""text/javascript""&gt;         $(document).ready(function() {            ($(""#type"").is("":checked""))(function() {               $.ajax({                   type: ""POST"",                   url: ""/select_type"",                   data: {info: $(""#type"").val()},                   success: function(data) {                       $(""#category"").html(data);                   }               });           });                     });               &lt;/script&gt;            &lt;/body&gt; &lt;/html&gt;</code></pre> </div> </div> </p>  <p>The fields are built with flask-wtf, and populated dinamically in the view <em>(no problem with that)</em>:</p>  <pre><code>class FormRecord(Form):     type = RadioField('Type')     category = SelectField('Category') </code></pre>  <p>The JS script would execute the view that populate my select control:</p>  <pre><code>$(document).ready(function() {        ($(""#type"").is("":checked""))(function() {           $.ajax({               type: ""POST"",               url: ""{{ url_for('select_type') }}"",               data: {info: $(""#type"").val()},               success: function(data) {                   $(""#category"").html(data);               }           });       });   });  </code></pre>  <p>It seems the javascript is not working correctly, but what I am doing wrong ?</p>  <p>(I edited my doubt to be more clear)</p>  <p>This is my view select_type:</p>  <pre><code>@app.route('/select_type', methods=['POST']) @login_required def select_type():     user_id = getattr(g, 'user', None).get_id()     id_type = int(request.form['info'])     cats = mngt.load_cats_tuples_by_type(user_id, id_type)     data = ''     for cat in cats:         data += '&lt;option value=""{}""&gt;{}&lt;/option&gt;'.format(str(subcat[0]),subcat[1])      return data </code></pre>  <p>This another view loads the form:</p>  <pre><code>@app.route('/') @app.route('/home', methods = ['GET', 'POST']) @login_required def home():      # id do usuário logado     user_id = getattr(g, 'user', None).get_id()          # formulário de registro     form = forms.FormRecord()      # carrega controle select dinamicamente     form.subcategory.choices = mngt.load_subcats_tuples(user_id)     form.category.choices = mngt.load_cats_tuples(user_id)      # carrega controle radio dinamicamente     form.type.choices = mngt.load_types_tuples()     form.type.default = mngt.get_type_default()      # processa o formulário, se o     # form ainda não foi submetido (via PUT ou POST)     # ao chamar process(), perde-se os valores default     if not form.is_submitted():         form.process()      # o mesmo que form.is_submitted() and form.validate()         if form.validate_on_submit():         .... </code></pre>"	"<p><strong>MY SOLUTION</strong></p>  <p>Finally, I found a solution that works fine to me (but I think that this is not the best and maybe a little ugly)</p>  <p>I missed a way to debug the interaction between javascript and my flask app. It take a log time to understand some issues, but finally worked.</p>  <ol> <li>Firstly, the Javascript / jQuery code. I was based on the following links: <a href=""https://pythonprogramming.net/jquery-flask-tutorial/"" rel=""nofollow"">https://pythonprogramming.net/jquery-flask-tutorial/</a> and <a href=""http://flask.pocoo.org/docs/0.11/patterns/jquery/"" rel=""nofollow"">http://flask.pocoo.org/docs/0.11/patterns/jquery/</a>:</li> </ol>  <blockquote> <pre><code>    &lt;script type=text/javascript&gt;             $(function() {               $(""input[name=type]"").change(function() {                     $.getJSON(""{{ url_for('background_process') }}"", {                       type: $('input[name=""type""]:checked').val(),                     }, function(data) {                       $(""#category"").html(data.options);                     });                     return false;               });             });     &lt;/script&gt; </code></pre> </blockquote>  <ol start=""2""> <li>Second, my html test form:</li> </ol>  <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""false"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-html lang-html prettyprint-override""><code>{% extends ""layout.html"" %} {% block content %}         &lt;h3&gt;Welcome! Which is the best programming language of them all?&lt;/h3&gt;         &lt;form&gt;                 &lt;input type=""radio"" name=""type"" value=""1""&gt;Option 1&lt;br&gt;                 &lt;input type=""radio"" name=""type"" value=""2""&gt;Option 2&lt;br&gt;                 &lt;select id=""category""&gt;&lt;/select&gt;                                 &lt;a href=# id=process_input&gt;&lt;button class='btn btn-default'&gt;Send this&lt;/button&gt;&lt;/a&gt;            &lt;/form&gt;         &lt;p id=result&gt;&lt;/p&gt; {% endblock %}</code></pre> </div> </div> </p>  <ol start=""3""> <li>Lastly, The flask view that will load the select control when a radio option be selected have these commands:  <ul> <li><code>id_type = request.args.get('type', 0, type=str)</code></li> <li><code>options = '&lt;option value=""1""&gt;X1&lt;/option&gt;&lt;option value=""1""&gt;X2&lt;/option&gt;'</code></li> <li><code>return jsonify(options=options)</code></li> </ul></li> </ol>  <p>So, this solution had three parts: </p>  <ul> <li><em>A little of Javascript</em>: The Javascript source. To triggler the view function when the user selects a radio option - that funtion will load the select control automatically; </li> <li><em>The Html Form</em>: Ahtml form source (for the example), that has the controls: <strong>radio</strong> and <strong>select</strong></li> <li><em>The backend function</em> (I made it in flask view function: <strong>def background_process()</strong></li> </ul>"
39966542	Why am I getting 'undefined' in a Javascript alert displayed after calling Python CGI script?	javascript|jquery|python|ajax|python-3.x	2016-10-10 20:50:33.630000 UTC	"<p>I'm trying to implement an ajax/python example, but when the alert is displayed the message is simply ""undefined"" rather than the output I should be getting according to the tutorial. Everything I've been able to find indicates the issue is because the javascript isn't getting a response back from the webserver, but I can't figure out why. I'm pretty new to Javascript, so any help would be appreciated.</p>  <p>HTML ('test.html')</p>  <pre><code>&lt;!DOCTYPE html&gt; &lt;html&gt; &lt;head&gt;     &lt;meta http-equiv=""content-type"" content=""text/html; charset=utf-8""&gt;      &lt;title&gt;test&lt;/title&gt;     &lt;script src=""http://ajax.googleapis.com/ajax/libs/jquery/1.7.2/jquery.min.js""&gt;&lt;/script&gt;     &lt;script&gt;          $(function()         {             $('#clickme').click(function(){                 alert('Im going to start processing');                  $.ajax({                     url: ""/scripts/py_test.py"",                     type: ""post"",                     datatype:""json"",                     data: {'key':'value','key2':'value2'},                     success: function(response){                         alert(response.message);                         alert(response.keys);                     }                 });             });         });      &lt;/script&gt; &lt;/head&gt; &lt;body&gt;     &lt;button id=""clickme""&gt; click me &lt;/button&gt; &lt;/body&gt; &lt;/html&gt; </code></pre>  <p>Python (scripts/py_test.py)</p>  <pre><code>#!/usr/bin/env python  import sys import json import cgi  fs = cgi.FieldStorage()  sys.stdout.write(""Content-Type: application/json"")  sys.stdout.write(""\n"") sys.stdout.write(""\n"")   result = {} result['success'] = True result['message'] = ""The command Completed Successfully"" result['keys'] = "","".join(fs.keys())  d = {} for k in fs.keys(): d[k] = fs.getvalue(k)  result['data'] = d  sys.stdout.write(json.dumps(result,indent=1)) sys.stdout.write(""\n"")  sys.stdout.close() </code></pre>  <p>When I run the python script from the terminal I get the following output:</p>  <pre><code>Content-Type: application/json  { ""keys"": """",  ""message"": ""The command Completed Successfully"",  ""data"": {},  ""success"": true } </code></pre>  <p><strong>EDIT:</strong> My browser's network monitor shows I'm getting back the python script's source code.</p>"	
40027455	Scraping Javascript using Selenium via Python	javascript|python|selenium	2016-10-13 17:32:50.847000 UTC	"<p>I'm trying to scrape javascript data from a site. Currently I'm given myself the challenge of trying to scrape the number of Followers from <a href=""http://freelegalconsultancy.blogspot.co.uk/"" rel=""nofollow"">this website</a>. Here's my code so far: </p>  <pre><code>import os from selenium import webdriver import time  chromedriver = ""/Users/INSERT USERNAME/Desktop/chromedriver"" os.environ[""webdriver.chrome.driver""] = chromedriver driver = webdriver.Chrome(chromedriver) driver.get(""http://freelegalconsultancy.blogspot.co.uk/"") time.sleep(5)  title = driver.find_element_by_class_name print title </code></pre>  <p>As you can see, I've got a chromedriver file located on my desktop. When I execute the code, I get the following result:</p>  <pre><code>&lt;bound method WebDriver.find_element_by_class_name of &lt;selenium.webdriver.chrome.webdriver.WebDriver (session=""dd9e5d3f429bc2810c30ebe7067e4e22"")&gt;&gt; </code></pre>  <p>I tried iterating into this with a for loop but it returned an error. Does anyone know how I can get the Javascript data and ultimately get the number of followers? </p>  <p><strong>EDIT:</strong></p>  <p>So as per request, I have changed my code to this:</p>  <pre><code>import os from selenium import webdriver import time  chromedriver = ""/Users/INSERT USERNAME/Desktop/chromedriver"" os.environ[""webdriver.chrome.driver""] = chromedriver driver = webdriver.Chrome(chromedriver) driver.get(""http://freelegalconsultancy.blogspot.co.uk/"") time.sleep(5)  title = driver.find_element_by_class_name(""member-title"") print title </code></pre>  <p>But I now get this error:</p>  <pre><code>Traceback (most recent call last):   File ""C:\Users\INSERT USERNAME\Desktop\blogger_v.1.py"", line 11, in &lt;module&gt;     title = driver.find_element_by_class_name(""member-title"")   File ""C:\Python27\lib\site-packages\selenium\webdriver\remote\webdriver.py"", line 413, in find_element_by_class_name     return self.find_element(by=By.CLASS_NAME, value=name)   File ""C:\Python27\lib\site-packages\selenium\webdriver\remote\webdriver.py"", line 752, in find_element     'value': value})['value']   File ""C:\Python27\lib\site-packages\selenium\webdriver\remote\webdriver.py"", line 236, in execute     self.error_handler.check_response(response)   File ""C:\Python27\lib\site-packages\selenium\webdriver\remote\errorhandler.py"", line 192, in check_response     raise exception_class(message, screen, stacktrace) NoSuchElementException: Message: no such element: Unable to locate element: {""method"":""class name"",""selector"":""member-title""}   (Session info: chrome=53.0.2785.143)   (Driver info: chromedriver=2.24.417431 (9aea000394714d2fbb20850021f6204f2256b9cf),platform=Windows NT 6.1.7601 SP1 x86_64) </code></pre>  <p>Any ideas on how I can get around it? </p>  <p><strong>EDIT:</strong></p>  <p>So I've changed my code to this:</p>  <pre><code>import os from selenium import webdriver import time  chromedriver = ""/Users/INSERT USERNAME/Desktop/chromedriver"" os.environ[""webdriver.chrome.driver""] = chromedriver driver = webdriver.Chrome(chromedriver) driver.get(""http://freelegalconsultancy.blogspot.co.uk/"") time.sleep(5)  title = driver.find_element_by_class_name(""item-title"") print title </code></pre>  <p>And I get this result:</p>  <pre><code>&lt;selenium.webdriver.remote.webelement.WebElement (session=""5fe8fb966edd26fdf808da07f99d4109"", element=""0.9924860218635834-1"")&gt; </code></pre>  <p>How would I go about just printing all the javascript? Is this even possible?</p>"	"<p>You need to provide the class name you're looking for as a parameter.</p>  <p><code>title = driver.find_element_by_class_name(""TheNameOfTheClass"")</code></p>"
40051523	Does a python-esque placeholder exist in the Javascript language?	javascript|python	2016-10-14 20:30:47.110000 UTC	"<p>I am experienced in Python, but relatively new to the Javascript language. I know in Python, if I want to substitute a variable into a string (for instance) I could do it this way: </p>  <p><code>s = ""%s:%s"" % (mins, secs)</code></p>  <p>However, I can't find an equivalent way to substitute values in Javascript. Does something like this exist, or am I going about this the wrong way?</p>"	"<p>Not available in ES5, but it is available in ES6:</p>  <p><a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals"" rel=""nofollow"">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals</a></p>  <p>Keep in mind this might not work right in the browser across the board-- you'll probably need to use something like <a href=""https://babeljs.io/"" rel=""nofollow"">Babel</a> to transpile your code to ES5.</p>"
40073546	Rewrite Javascript to Python	javascript|python	2016-10-16 17:58:07.560000 UTC	"<p>I struggling to understand this javascript code and would like to rewrite it to python.</p>  <pre><code>function rotateRight(e, t) {     for (var n, i = 0; (t &gt; i); i++)          n = (1 &amp; e), e &gt;&gt;= 1, n &lt;&lt;= 31, e += n;     return e } </code></pre>  <p>My biggest struggle is to understand how is the <code>e</code> being influenced by <code>n</code>.</p>  <p>Thank you for help</p>"	"<p>This code does the following:</p>  <ol> <li>Loop from <code>i = 0</code> to <code>i &lt; t</code></li> <li>on every iteration: </li> <li><code>n</code> is the result of the binary operation <code>AND</code> between <code>1</code> and <code>e</code>;</li> <li><code>e</code> equals <code>e</code> but moving all bits <code>1</code> position to the right;</li> <li><code>n</code> equals <code>n</code> but moving all bits <code>31</code> positions to the left;</li> <li><code>e</code> equals <code>e</code> plus <code>n</code>;</li> <li>When the iteration is over (i is greater that t), e is returned.</li> </ol>"
40093331	How to access variable from html/python to JavaScript?	javascript|jquery|python|html|django	2016-10-17 18:33:57.267000 UTC	"<p>We have a project setup implemented in Django and we're trying to create a search function. Currently, we pass our database of users from view.py to our .html file (view.py code below)</p>  <pre><code>def search(request):  template_name = ""search/search_it.html"" users = models.Profile.objects.all()  context = {'users': users} return render(request, template_name, context) </code></pre>  <p>Inside of our html code is where we are having issues. We are able to read our passed in users as below.</p>  <pre><code>{% if users %}    &lt;ul&gt;    {% for user in users %}     &lt;!--    &lt;script&gt;       var username = user.slug --&gt; Does not recognize user object       document.getElementById(""a1"").value = username;    &lt;/script&gt;    --&gt;        &lt;a id=""test"" value=""/users/{{user.slug}}""&gt;&lt;/a&gt;    {% endfor %}    &lt;/ul&gt; {% endif %} </code></pre>  <p>Our issue is that we would like to compare the search input against each passed in user's name. Our html file uses a onclick button into javascript. We have decided to try to tackle this various ways including:</p>  <ol> <li>Use the javascript value outside of the <code>&lt;script&gt;&lt;/script&gt;</code> - Did not work for obvious scope reasons</li> <li>Try to load the names into strings and then grab each name inside of the javascript - Messy and not proficient</li> </ol>  <p>and (what we would like to do)</p>  <ol start=""3""> <li>Load each user into a javascript array that can be used by our search function inside of our array.</li> </ol>  <p>We have spent a lot of time searching for similar questions with no avail. Where we are having the most trouble comprehending is how to grab the user data from</p>  <pre><code>{% for user in users %} </code></pre>  <p>and pass that into javascript to add to an array. Any help would be wonderful.</p>"	
40105271	Python: How to execute a JavaScript Function (with lxml)?	javascript|python|lxml	2016-10-18 10:04:00.657000 UTC	"<p>I'd like to parse a website where I need to make a JavaScript call before parsing the code, because exeuting the JavaScript function unfolds more informations that I need to parse.</p>  <p>This is the part where the JavaScript gets called:</p>  <pre><code>&lt;a href=""javascript:StartUpdate(DIV_TS_4828_5899,41611,5899,';DIV_TS_0_4820;DIV_TS_4820_4828;DIV_TS_4828_5899',0)""&gt;     &lt;img src=""bilder/check_on.png"" width=""15"" height=""15""&gt; &lt;/a&gt; </code></pre>  <p>Is it possible to execute this JavaScript function via lxml? It would be the most comfortable for me, because I would also like to parse the website with lxml afterwards.</p>  <p>I know Selenium could do this, but is there a possibility with lxml?</p>"	"<p>No, it is not possible to execute JavaScript language by using parser of eXtensible Markup Language, even with module for parsing HyperText Markup Language.</p>  <p>You need to use JavaScript interpreter to execute JavaScript code.</p>  <p>If you really don't like Selenium you may try to use <a href=""https://code.google.com/archive/p/pyv8/"" rel=""nofollow"">PyV8</a> or <a href=""https://pypi.python.org/pypi/PyExecJS"" rel=""nofollow"">PyExecJs</a>.</p>"
40112732	Unable to retrieve Javascript generated data with python	javascript|python|web-scraping	2016-10-18 15:49:17.740000 UTC	"<p>I have been attempting to scrape the data from this URL: <a href=""http://www.thesait.org.za/search/newsearch.asp?bst=&amp;cdlGroupID=&amp;txt_country=South%20Africa&amp;txt_statelist=&amp;txt_state=&amp;ERR_LS_20161018_041816_21233=txt_statelist%7CLocation%7C20%7C0%7C%7C0"" rel=""nofollow"">http://www.thesait.org.za/search/newsearch.asp?bst=&amp;cdlGroupID=&amp;txt_country=South+Africa&amp;txt_statelist=&amp;txt_state=&amp;ERR_LS_20161018_041816_21233=txt_statelist%7CLocation%7C20%7C0%7C%7C0</a>  for most of the day - and know I have been incredibly inefficient with time.  I have just recently learned to scrape ordinary html websites, and seem to be getting the hang of it.  The javascript driven ones have been proving to be painful. </p>  <p>The scraper that I have worked on so far - after many angles of approaching the problem has yielded the same result.  Below is the code I am using:</p>  <pre><code>from bs4 import BeautifulSoup from selenium import webdriver from selenium.webdriver.support.wait import WebDriverWait  PHANTOMJS_PATH = './phantomjs.exe'  #Using PhantomJS to navigate the url browser = webdriver.PhantomJS(PHANTOMJS_PATH) browser.get('http://www.thesait.org.za/search/newsearch.asp?bst=&amp;cdlGroupID=&amp;txt_country=South+Africa&amp;txt_statelist=&amp;txt_state=&amp;ERR_LS_20161018_041816_21233=txt_statelist%7CLocation%7C20%7C0%7C%7C0')  wait = WebDriverWait(browser, 15) # let's parse our html soup = BeautifulSoup(browser.page_source, ""html5lib"")  # get all the games test = soup.find_all('tr')  print test </code></pre>  <p>My biggest problem is that I can't get the detail I'm looking for.  In the below picture: <a href=""https://i.stack.imgur.com/zm9aO.png"" rel=""nofollow"">Highlighted field</a></p>  <p>I am unable to get the URL related to that particular name. After getting the URL, I'd like to further navigate into the user to get additional detail. </p>  <p>So my questions are the following:</p>  <ol> <li>Are there more effective ways of returning the data you are looking for programmatically (given limited time).</li> <li>Are there better ways to see how you are navigating through a javascript generated site when scraping? </li> <li>Please let me know if I need to give more clarity.</li> </ol>  <p>Thanks!</p>  <hr>  <p><strong>Part 2:</strong></p>  <p>I have taken another approach, and am running into another issue. </p>  <p>I've tried getting the tags above using the following:</p>  <pre><code>from selenium import webdriver   from selenium.common.exceptions import NoSuchElementException   from selenium.webdriver.common.keys import Keys   from bs4 import BeautifulSoup  browser = webdriver.Chrome()   browser.get('http://www.thesait.org.za/search/newsearch.asp?bst=&amp;cdlGroupID=&amp;txt_country=South+Africa')   html_source = browser.page_source   browser.quit()  soup = BeautifulSoup(html_source,'html.parser')   comments = soup.findAll('a')   print comments </code></pre>  <p>In the list of 'comments' I am printing, the particular element I'm looking for does not appear. i.e.</p>  <p><code>&lt;a href=""/members/?id=35097829"" id=""MiniProfileLink_35097829"" onmouseover=""MiniProfileLink_OnMouseOver(35097829);"" onmouseout=""HideMiniProfile();"" target=""_top""&gt;Namir Abraham&lt;/a&gt;</code></p>  <p>I then went an attempted to use the selenium functionality:</p>  <p>from selenium import webdriver<br> from selenium.common.exceptions import NoSuchElementException<br> from selenium.webdriver.common.keys import Keys<br> from bs4 import BeautifulSoup</p>  <pre><code>browser = webdriver.Chrome('C:/Users/rschilder/Desktop/Finance24 Scrape/Accountant_scraper/chromedriver.exe') browser.get('http://www.thesait.org.za/search/newsearch.asp?bst=&amp;cdlGroupID=&amp;txt_country=South+Africa')   browser.implicitly_wait(30) html = browser.execute_script(""return document.getElementsByTagName('html')[0].innerHTML"") #browser.quit()  print html </code></pre>  <p>The challenges I have on this are:</p>  <ol> <li>I'm not too sure how to search and get specific element using the selenium get functionality (it's not as intuitive as beautiful soup)</li> <li>Even with the selenium navigation - the element I am looking for (mentioned above) still doesn't appear in the output?</li> </ol>"	
40134558	CORS error with Javascript but not with Python/PHP	javascript|jquery|cors|cross-domain	2016-10-19 14:39:03.010000 UTC	"<p>I'm writing a small script to access an external API for work. I originally did this in Python and everything worked fine. </p>  <p>I was then asked to try and do it in Javascript. Now, I'm no programmer really, but I do know (or believe) that Javascript is largely for client-side, whereas PHP or Python are really for server-side operations. When I wrote the script in Python I had no problems, but in Javascript I get a </p>  <blockquote> <pre><code>Response to preflight request doesn't pass access control check: No  'Access-Control-Allow-Origin' header is present on the requested resource. </code></pre> </blockquote>  <p>error. From what I've read about CORS <a href=""https://www.html5rocks.com/en/tutorials/cors/#toc-cors-from-jquery"" rel=""nofollow noreferrer"">here</a> and similar questions on Stack, that makes sense, but I don't really understand why I don't get a similar error in Python or PHP... </p>  <p>I'm fairly new to this so I'm probably missing a number of things, but I'd really appreciate any insight anyone can give me. If I've left out any important info, please let me know. </p>"	"<p>From <a href=""https://developer.mozilla.org/en-US/docs/Web/HTTP/Access_control_CORS"" rel=""nofollow noreferrer"">Mozilla's documentation</a>:</p>  <blockquote>   <p>For security reasons, browsers restrict cross-origin HTTP requests initiated from within scripts. For example, XMLHttpRequest and Fetch follow the same-origin policy. So, a web application using XMLHttpRequest or Fetch could only make HTTP requests to its own domain.</p> </blockquote>  <p>Since Javascript in the browser uses <code>XMLHttpRequest</code> and <code>fetch</code> to make HTTP requests, they're subject to CORS policy enforcement.</p>  <p>More information on <a href=""https://security.stackexchange.com/a/108839"">the reasons for CORS</a>: </p>  <blockquote>   <p>CORS is intended to allow resource hosts (any service that makes its data available via HTTP) to restrict which websites may access that data.</p>      <p>Example: You are hosting a website that shows traffic data and you are using AJAX requests on your website. If SOP and CORS were not there, any other website could show your traffic data by simply AJAXing to your endpoints; anyone could easily ""steal"" your data and thus your users and your money.</p> </blockquote>  <p>The external API you're using likely implemented a CORS policy intentionally. For example, if the API requires an application-level secret key for authentication, a CORS policy would discourage the use of that key in a public environment (namely the browser). Alternatively, the API may have a list of acceptable domain names for CORS that doesn't include the domain you're currently using.</p>  <p>Those are just a few examples; there could be any number of reasons for an API to implement CORS headers.</p>"
40143709	Javascript JSON.parse a string comming from python with an apostrophe	javascript|python|json	2016-10-20 00:41:49.487000 UTC	"<p>I have a python string:</p>  <pre><code>x = [{""value"": ""Sek'Kuar""}, ...] y = json.dumps(x) </code></pre>  <p>Then, how can I <code>JSON.parse</code> <code>y</code>?</p>  <p>The appostrophe is giving me trouble.</p>"	"<p>When you do <code>json.dumps()</code>, it convert's your python object to valid <code>JSON</code> format. For example in your case:</p>  <pre><code>&gt;&gt;&gt; import json &gt;&gt;&gt; x = [{""value"": ""Sek'Kuar""}] &gt;&gt;&gt; json.dumps(x) '[{""value"": ""Sek\'Kuar""}]'  </code></pre>  <p><code>'</code> is replaced by <code>\'</code> which is valid JSON.</p>  <p>If you are getting some error in your code, it is not because your JSON format is wrong (to be specific, <code>'</code> is not troubling you).</p>  <p>You may check on <a href=""https://jsfiddle.net/z2dvkarj/1/"" rel=""nofollow"">jsfiddle</a> that it is working without any error. </p>"
40186589	Python with selenium: access iframe whose src is returned by javascript function	javascript|python|selenium|iframe	2016-10-21 23:07:02.117000 UTC	"<p>I'm completely new to selenium and javascript. The webpage that I'm working on uses javascript to do certain authentication and construct the url for a frame.</p>  <p>The code looks something like:</p>  <pre><code>&lt;iframe id=""main_contents""&gt;&lt;/iframe&gt; &lt;script type=""text/javascript""&gt; var baseUrl = 'http://xxxxxxxxx.com/'; function init() {     gadgets.io.makeRequest(baseUrl+""auth/"", function(obj) {         var iframe = document.getElementById(""main_contents"");         if (obj.data.status == 'OK') {             iframe.src = baseUrl+""?xx=""+obj.data.xx;             ...         }         ...     }, params); } </code></pre>  <p>I have tried to directly locate the frame with <code>find_element_by_tag_name</code> but of course its src is empty. I have no idea how to switch to this frame. Could anyone suggest? Thank you very much!!</p>"	"<p>You can switch to this <code>iframe</code> using their <code>id</code> attribute value as well as below :-</p>  <pre><code>driver.switch_to_frame(""main_contents"") </code></pre>  <p>Or if this <code>iframe</code> takes time to load on the <code>DOM</code>, you should try to switch using <a href=""http://selenium-python.readthedocs.io/waits.html#explicit-waits"" rel=""nofollow""><code>Explicit Waits</code></a> with <code>WebDriverWait</code> to wait until <code>iframe</code> available to switch as well as below :-</p>  <pre><code>from selenium import webdriver from selenium.webdriver.common.by import By from selenium.webdriver.support.ui import WebDriverWait from selenium.webdriver.support import expected_conditions as EC  WebDriverWait(driver, 10).until(EC.frame_to_be_available_and_switch_to_it((""main_contents""))) </code></pre>"
40231253	Regex email validation Python to Javascript	javascript|python|regex|python-2.7	2016-10-25 04:11:33.323000 UTC	"<p>I'm having trouble fully understanding this Python 2 regular expression to validate email addresses. I found a great example <a href=""https://stackoverflow.com/questions/8022530/python-check-for-valid-email-address"">here</a>.</p>  <pre><code>r""[^@]+@[^@]+\.[^@]+"" </code></pre>  <p>So according to <a href=""https://regex101.com"" rel=""nofollow noreferrer"">regex101</a> this means we need atleast 1 value before the '@' symbol, 1 '@' symbol, and any number of characters after the '@' symbol and atleast 1 '.' symbol. First of all correct me if I'm wrong, but secondly no documentation anywhere explains what ""[^@]"" means. So I'm having trouble understanding what the above code means.</p>  <p>All I would like to do is convert the above code to Javascript but have only found help with the following case:</p>  <pre><code>/^\w+([\.-]?\w+)*@\w+([\.-]?\w+)*(\.\w{2,3})+$/ </code></pre>  <p>This means very little to me, but have found this useful example <a href=""http://www.w3resource.com/javascript/form/email-validation.php"" rel=""nofollow noreferrer"">here</a>. The problem is that the JavaScript expression over checks.</p>  <p>For example, the following string passes in Python but fails the JS expression:</p>  <pre><code>hi@gmail.com.edu/org </code></pre>  <p>It really comes down to 1 question. <strong>How can I correct the JavaScript regex to match that of the Python regex?</strong></p>"	"<p>Simply convert python regex to Javascript.</p>  <p>Python: <code>r""[^@]+@[^@]+\.[^@]+""</code></p>  <p>Javascript: <code>/[^@]+@[^@]+\.[^@]+/</code></p>"
40242164	"Need to group a series of numbers with no key value - Ruby, Python, Javascript"	language-agnostic|etl	2016-10-25 14:04:19.463000 UTC	"<p>Here's my problem.  I have a large file with contains a payment record with associated invoice(s) that are associated to it.  The file is a flat file with positional based entries which I can handle but the ability to sequence this is baffling my tired brain.</p>  <p>I'm sure this is simple so be kind.</p>  <p>The file structure is simplistically shown here:</p>  <pre><code>600060006600 payment details  700010001000 invoice details 700010001001 invoice details 600060006680 payment details 700010001002 invoice details 600060006690 payment details 700010001004 invoice details 700010001005 invoice details 700010001006 invoice details </code></pre>  <p>Sometimes a payment will have one invoice, sometimes more than one.  The 6 will always be the payment and 7 will always be the invoice.</p>  <p>Restricted to core libs in a script language (ruby, python or javascript) is required due to the tools set we're using otherwise I would have hammered this thing out by now.</p>"	"<p>In short, no matter what language you choose, what you're trying to do looks like an ETL. The process of taking some records somewhere in some format, and putting them somewhere else in another format, possibly after some conversion.</p>  <p>Here's the gist of what you want to do:</p>  <ol> <li>Iterate through the file, </li> <li>Take each text line, and parse it into a dictionary/object/record (in your examples, the first space you encounter is the sole delimiter)</li> <li>Make additions/transformations to your record (eg. take the id, apply some logic on it to infer the type)</li> <li>Possibly put it back in some other data store, whether file or DB or else.</li> </ol>  <p>As to how that can be done in X language, the implementation varies, and that seems out of scope for this question. I'll give examples using Ruby, but it's only because I'm comfortable with it, it could be done in many languages.</p>  <p>To get started, you might want to read up on the different CSV libraries in languages, they give some examples as to pretty much that sort of task. For instance, here's Ruby's <a href=""http://ruby-doc.org/stdlib-2.3.1/libdoc/csv/rdoc/CSV.html"" rel=""nofollow"">CSV</a>. DBMS's like Postgres are also able to load CSV files. (pgfutter will even create your table definition and import your CSV if you're working with Postgresql)</p>  <p>As to what kind of tool to use, it depends on how many records to process you have and the complexity of the transformation. If you only have a few (say arbitrarily &lt; 10k), making objects and iterating that will be fine and done in less than a few seconds. Whereas if you have a lot (say > 1M), you might want to do it in a DB query (unless you can't use a DB). </p>  <p>The DBMS will be generally more performant on large data sets and allows you to do stuff like joins rather easily, but a language like Ruby is more expressive if you have to do more complex transformations. (I wouldn't want to program an algorithm in SQL.) </p>  <p>If you need both? You can mix the two by using an ORM such as Activerecord or Squeel. (or whatever you're comfortable with, really) You can then use your language to do what it needs and interact with the database.</p>  <p>Choose the best tool for the job. And beware of premature optimization!</p>"
40300705	"HTML, Python, Brython, javascript - running on Brython"	javascript|python|html|brython	2016-10-28 08:06:47.223000 UTC	"<p>Help run a simple program in Python using Brython.</p>  <p>The basis is taken (it did not work) file from the example <a href=""http://view-source:http://www.brython.info/gallery/pygame/chimp.html"" rel=""nofollow noreferrer"">http://www.brython.info/gallery/pygame/chimp.html</a></p>  <p>There are 3 files in the same directory: <code>Eventlist.html</code>,<code>py_VFS.js</code>, <code>brython.js</code>.</p>  <p><code>py_VFS.js</code>: </p>  <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-js lang-js prettyprint-override""><code>&lt;!DOCTYPE HTML PUBLIC ""-//IETF//DTD HTML 2.0//EN""&gt; &lt;html&gt;&lt;head&gt; &lt;title&gt;404 Not Found&lt;/title&gt; &lt;/head&gt;&lt;body&gt; &lt;h1&gt;Not Found&lt;/h1&gt; &lt;p&gt;The requested URL py_VFS.js was not found on this server.&lt;/p&gt; &lt;/body&gt;&lt;/html&gt;</code></pre> </div> </div> </p>  <p><code>brython.js</code>:</p>  <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-js lang-js prettyprint-override""><code>&lt;!DOCTYPE HTML PUBLIC ""-//IETF//DTD HTML 2.0//EN""&gt; &lt;html&gt;&lt;head&gt; &lt;title&gt;404 Not Found&lt;/title&gt; &lt;/head&gt;&lt;body&gt; &lt;h1&gt;Not Found&lt;/h1&gt; &lt;p&gt;The requested URL brython.js was not found on this server.&lt;/p&gt; &lt;/body&gt;&lt;/html&gt;</code></pre> </div> </div> </p>  <p><code>Eventlist.html</code> fixed path in the lines:</p>  <pre><code>&lt;script type=""text/javascript"" src=""external/brython/brython.js""&gt;&lt;/script&gt; &lt;script type=""text/javascript"" src=""external/brython/py_VFS.js""&gt;&lt;/script&gt; </code></pre>  <p>and a module of Python (the standard unit of pygame \ examples \ eventlist.py) was replaced. As a result, the whole code of Eventlist.html:</p>  <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-html lang-html prettyprint-override""><code>&lt;html&gt;  &lt;head&gt;  &lt;script type=""text/javascript"" src=""brython.js""&gt;&lt;/script&gt; &lt;script type=""text/javascript"" src=""py_VFS.js""&gt;&lt;/script&gt;  &lt;script type=""text/python""&gt; #!/usr/bin/env python  """"""Eventlist is a sloppy style of pygame, but is a handy tool for learning about pygame events and input. At the top of the screen are the state of several device values, and a scrolling list of events are displayed on the bottom.  This is not quality 'ui' code at all, but you can see how to implement very non-interactive status displays, or even a crude text output control. """"""  from pygame import *  ImgOnOff = [] Font = None LastKey = None  def showtext(win, pos, text, color, bgcolor):     textimg = Font.render(text, 1, color, bgcolor)     win.blit(textimg, pos)     return pos[0] + textimg.get_width() + 5, pos[1]   def drawstatus(win):     bgcolor = 50, 50, 50     win.fill(bgcolor, (0, 0, 640, 120))     win.blit(Font.render('Status Area', 1, (155, 155, 155), bgcolor), (2, 2))      pos = showtext(win, (10, 30), 'Mouse Focus', (255, 255, 255), bgcolor)     win.blit(ImgOnOff[mouse.get_focused()], pos)      pos = showtext(win, (330, 30), 'Keyboard Focus', (255, 255, 255), bgcolor)     win.blit(ImgOnOff[key.get_focused()], pos)      pos = showtext(win, (10, 60), 'Mouse Position', (255, 255, 255), bgcolor)     p = '%s, %s' % mouse.get_pos()     pos = showtext(win, pos, p, bgcolor, (255, 255, 55))      pos = showtext(win, (330, 60), 'Last Keypress', (255, 255, 255), bgcolor)     if LastKey:         p = '%d, %s' % (LastKey, key.name(LastKey))     else:         p = 'None'     pos = showtext(win, pos, p, bgcolor, (255, 255, 55))      pos = showtext(win, (10, 90), 'Input Grabbed', (255, 255, 255), bgcolor)     win.blit(ImgOnOff[event.get_grab()], pos)   def drawhistory(win, history):     win.blit(Font.render('Event History Area', 1, (155, 155, 155), (0,0,0)), (2, 132))     ypos = 450     h = list(history)     h.reverse()     for line in h:         r = win.blit(line, (10, ypos))         win.fill(0, (r.right, r.top, 620, r.height))         ypos -= Font.get_height()   def main():     init()      win = display.set_mode((640, 480), RESIZABLE)     display.set_caption(""Mouse Focus Workout"")      global Font     Font = font.Font(None, 26)      global ImgOnOff     ImgOnOff.append(Font.render(""Off"", 1, (0, 0, 0), (255, 50, 50)))     ImgOnOff.append(Font.render(""On"", 1, (0, 0, 0), (50, 255, 50)))      history = []      #let's turn on the joysticks just so we can play with em     for x in range(joystick.get_count()):         j = joystick.Joystick(x)         j.init()         txt = 'Enabled joystick: ' + j.get_name()         img = Font.render(txt, 1, (50, 200, 50), (0, 0, 0))         history.append(img)     if not joystick.get_count():         img = Font.render('No Joysticks to Initialize', 1, (50, 200, 50), (0, 0, 0))         history.append(img)      going = True     while going:         for e in event.get():             if e.type == QUIT:                 going = False             if e.type == KEYDOWN:                 if e.key == K_ESCAPE:                     going = False                 else:                     global LastKey                     LastKey = e.key             if e.type == MOUSEBUTTONDOWN:                 event.set_grab(1)             elif e.type == MOUSEBUTTONUP:                 event.set_grab(0)             if e.type == VIDEORESIZE:                 win = display.set_mode(e.size, RESIZABLE)              if e.type != MOUSEMOTION:                 txt = '%s: %s' % (event.event_name(e.type), e.dict)                 img = Font.render(txt, 1, (50, 200, 50), (0, 0, 0))                 history.append(img)                 history = history[-13:]           drawstatus(win)         drawhistory(win, history)          display.flip()         time.wait(10)      quit()   if __name__ == '__main__':     main()  &lt;/script&gt; &lt;/head&gt; &lt;body onload=""brython({debug:1})""&gt;   &lt;div id=""pydiv""&gt;&lt;/div&gt; &lt;/body&gt;  &lt;/html&gt;</code></pre> </div> </div> </p>  <p>When you run <code>Eventlist.html</code> a blank page shows in a browser. The code from the file <code>eventlist.py</code> works and the result is the following: <a href=""https://i.stack.imgur.com/Vx3l3.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/Vx3l3.png"" alt=""enter image description here""></a></p>  <p>As a result, I want to get a similar window in the browser.</p>"	"<p>I spent some time these past few days trying to get <a href=""https://github.com/brython-dev/brython-pygame"" rel=""nofollow noreferrer"">Brython-PyGame</a> working in a browser and concluded that:</p> <ol> <li>Brython-PyGame was <strong>never fully implemented.</strong></li> <li>It is <strong>all but impossible</strong> to implement a fully working version of PyGame in Brython, due to fundamental differences between PyGame and browsers in how user interaction is modeled.</li> </ol> <p>Here are the details:</p> <p><strong>Incomplete implementation</strong></p> <p>Brython-PyGame has many unimplemented functions. Some of these could be considered non-critical (for example, the module <a href=""https://github.com/brython-dev/brython-pygame/blob/master/pygame/transform.py"" rel=""nofollow noreferrer"">transform.py</a> is entirely missing). But others go to the heart of any PyGame program. For example, all nontrivial functions in the <a href=""https://github.com/brython-dev/brython-pygame/blob/master/pygame/event.py"" rel=""nofollow noreferrer"">event.py module</a>, such as <code>event.get()</code> and <code>event.wait()</code>, rely on calls to unimplemented functions in <a href=""https://github.com/brython-dev/brython-pygame/blob/master/pygame/SDL.py"" rel=""nofollow noreferrer"">SDL.py</a>, such as <code>SDL_WaitEventAndReturn()</code> and <code>SDL_PeepEvents()</code>. No nontrivial PyGame program would be able to work without one of these functions as the basis for its event loop.</p> <p><strong>Fundamental design differences</strong></p> <p>The fact that <code>event.wait()</code> was never fully implemented is not coincidental. This function goes to the heart of the conceptual design difference between PyGame and client-side web programming:</p> <ul> <li>PyGame assumes control of the application running your game, meaning that it can and often does block the main thread until an event of interest occurs.</li> <li>By contrast, JavaScript programming is not allowed to block the main JS thread, as this thread is used for UI rendering of the page. If you attempt to block this thread, the browser will display a message saying the page has become unresponsive, and suggest that the user close the tab. Instead, JS relies heavily on promises and callbacks to be run when an event occurs.</li> </ul> <p>Thus, a call to <code>event.wait()</code>, which blocks until an event such as a mouse move, is impossible to implement in the client side of a browser.</p> <p>There are also other cases where PyGame uses blocking calls in ways that are not allowed in JavaScript. For example, consider the following innocent-looking PyGame snippet:</p> <pre class=""lang-py prettyprint-override""><code>import pygame as pg img = pg.image.load('flag.png') screen.blit(img, (0,0)) </code></pre> <p>This loads an image file and renders it on screen. Behind the scenes, the <code>pg.image.load</code> command <em>blocks</em> while the file is read into memory. In Brython-PyGame, the implementation attempts to read the file from a given URL. However, reading a URL is a nonblocking operation in JavaScript, as the required network operation might take a while and we do not want the UI thread to block until it is complete. In JavaScript, one would implement a similar operation as something like</p> <pre class=""lang-js prettyprint-override""><code>var img = new Image(); ctx = getContextForSomeCanvas(); img.onload = function() {   ctx.drawImage(img, 0, 0); } img.src = 'flag.png'; </code></pre> <p>where the <code>onload</code> callback ensures that <code>ctx.drawImage</code> will be executed only after the image has been loaded. Converting the former Python code into something resembling the above JavaScript is nontrivial: It would require some behind-the-scenes handling of the asynchronous load operation, which would delay the call to <code>blit()</code> until the image was loaded. Even if this could work, it would be very unintuitive to a naive PyGame programmer, and could easily lead to bugs later in the code (for example, if the code assumes that mouse clicks are on the image even though it hasn't been loaded yet). In any case, the Brython-PyGame implementation does not implement this behind-the-scenes processing, leading the above code to fail because the image will be blitted before it was loaded.</p>"
40314747	javascript client to Python server: XMLHttpRequest responseText is empty after Get request	javascript|python|xmlhttprequest|responsetext|basehttpserver	2016-10-29 00:09:18.340000 UTC	"<p>I am trying to write a chrome extension which is able to send/receive data to/from a python server script. Currently, I am at the point where the js script is making a GET request okay, the only issue being that the .responseText is always empty (even though the python script is responding with text).</p>  <p><strong>popup.js</strong></p>  <pre><code>document.addEventListener('DOMContentLoaded', function() {       var xhr = new XMLHttpRequest();      xhr.onreadystatechange = function() {         if (xhr.readyState == xhr.DONE) {                        var resptxt = xhr.responseText;              if (resptxt) {                 document.getElementById('texthtm').innerHTML = resptxt;             } else {                 document.getElementById('texthtm').innerHTML = ""no response"";             }         }     }      xhr.open(""GET"", ""http://127.0.0.1:80"", true);     xhr.send(); }); </code></pre>  <p><strong>server.py</strong></p>  <pre><code>import time import BaseHTTPServer from SimpleHTTPServer import SimpleHTTPRequestHandler  HOST_NAME = ""127.0.0.1""  PORT_NUMBER = 80   class MyHandler(BaseHTTPServer.BaseHTTPRequestHandler):     def do_HEAD(self):         self.send_response(200)         self.send_header(""Content-type"", ""text/plain"")         self.end_headers()     def do_GET(self):         self.send_response(200)         self.send_header(""Content-type"", ""text/plain"")         self.end_headers()         self.wfile.write(""heyyy"")   if __name__ == ""__main__"":      server_class = BaseHTTPServer.HTTPServer     httpd = server_class((HOST_NAME, PORT_NUMBER), MyHandler)     print time.asctime(), ""Server Starts - %s:%s"" % (HOST_NAME, PORT_NUMBER)      try:             httpd.serve_forever()     except KeyboardInterrupt:             pass      httpd.server_close()     print time.asctime(), ""Server Stops - %s:%s"" % (HOST_NAME, PORT_NUMBER) </code></pre>  <p>So every time I press the extension button, it just displays ""no response"", which means that the request is at least being done. What am I doing wrong here?</p>"	
40357909	"In JavaScript is there an equivelant to Python's ""try ... except"" feature?"	javascript	2016-11-01 10:09:33.330000 UTC	"<p>Here is the Python code that I am trying to solve this problem in JavaScript:</p>  <pre><code>try:     float(s) if '.' in s else int(s)     return True except ValueError:     return False </code></pre>  <p>I'm looking for the keyword equivalent to ""except"" in Python.</p>"	"<p>In javascript, we have <code>try</code>, <code>catch</code> and <code>finally</code>.</p>  <pre><code>try {    //may throw } catch(ex) {    //handle the error, where ex or what ever you choose to call it is your exception reference } finally {    //perform this code regardless } </code></pre>"
40426417	javascript equivalent for python ctypes with node-gyp	node.js|dll|node-gyp	2016-11-04 15:29:55.703000 UTC	"<p>I want to transform a python script into a javascript script. My python script loads a dll and use its API.</p>  <pre><code>processings2D = ctypes.CDLL('processings2D.dll') print(processings2D.ImageProcessor2DCreate()) </code></pre>  <p>I try do to the same with node-gyp but my script doesn't find the dll.</p>  <pre><code>console.log(processings2D.ImageProcessor2DCreate());                       ^ TypeError: Cannot load processings2D.dll library </code></pre>  <p>test.js</p>  <pre><code>var processings2D = require('./build/Release/processings2D.node');    console.log(processings2D.ImageProcessor2DCreate()); </code></pre>  <p>addon.cc</p>  <pre><code>#include &lt;nan.h&gt; #include ""processings2D/processings2D.h""  HINSTANCE hDLL = NULL; typedef int(*Fn)();  void ImageProcessor2DCreate(const Nan::FunctionCallbackInfo&lt;v8::Value&gt;&amp; info) {     hDLL = LoadLibrary(""processings2D.dll"");     if(!hDLL)     {         Nan::ThrowTypeError(""Cannot load processings2D.dll library"");         return;     }      Fn fn = (Fn)GetProcAddress(hDLL, ""ImageProcessor2DCreate"");     if (!fn) {         Nan::ThrowTypeError(""Could not load ImageProcessor2DCreate function"");         FreeLibrary(hDLL);         return;     }      info.GetReturnValue().Set(Nan::New(fn())); }  void Init(v8::Local&lt;v8::Object&gt; exports) {     exports-&gt;Set(Nan::New(""ImageProcessor2DCreate"").ToLocalChecked(), Nan::New&lt;v8::FunctionTemplate&gt;(ImageProcessor2DCreate)-&gt;GetFunction()); }  NODE_MODULE(twoD, Init) </code></pre>  <p>binding.gyp</p>  <pre><code>{   ""targets"": [     {       ""target_name"": ""processings2D"",       ""sources"": [         ""addon.cc""       ],       ""include_dirs"": [         ""&lt;!(node -e \""require('nan')\"")""       ]     }   ] } </code></pre>  <p>dll is in the Release folder <code>/build/Release/processings2D.dll</code></p>  <p><strong>Am I in the right direction ?</strong></p>"	"<p>The solution was really simple :</p>  <p>My dll was a 32 bit version, so I should build my module with the good arch and execute my test with the good version of node.</p>  <pre><code>node-gyp clean configure --arch=ia32 build ""C:\Program Files (x86)\nodejs\node.exe"" test.js </code></pre>"
40484797	passing python data to javascript in web2py	javascript|python|json|xml|web2py	2016-11-08 10:39:44.297000 UTC	"<p>Here is my problem. I have the following function</p>  <pre><code>def index():     rows=db(db.mylist).select()     return dict(rows=rows) </code></pre>  <p>so whenever I reload the the front view index I want to retrieve rows from the database and display the data to the user in a list</p>  <pre><code>{{for(r in rows)}}     li.innerhtml={{=rows.task}} {{pass}} </code></pre>  <p>Obviously, this is not the right way to do it. I think I have to use json and XML.</p>  <p>This is the table I am using</p>  <pre><code>db.define_table(    'mylist',    Field('task', 'string') )  &lt;div class=""col-sm-6""&gt;          &lt;div class=""panel panel-default""&gt;              &lt;div class=""panel-heading center "" style=""color: black; font-style: inherit""&gt;                  &lt;form&gt;                  Task:                 &lt;input name=""name"" id=""task""  /&gt;                      &lt;button type=""button"" class=""btn btn-success btn-sm"" onclick=add(),ajax('{{=URL('default','insert_task')}}',['name'])  &gt;add&lt;/button&gt;                      &lt;/form&gt;               &lt;/div&gt;                &lt;div class=""panel-body center""&gt;                   &lt;ul id=""list"" class=""list-group""&gt;  &lt;/ul&gt;               &lt;/div&gt;           &lt;/div&gt;       &lt;/div&gt;  &lt;/div&gt;   var ul = document.getElementById(""list""); var lastId=0; function add()     {         if(!isBlank(document.getElementById(""task"").value)) {               var iCon = document.createElement('div'); //create a div container             var dbtMenu=document.createElement('div');             var li = document.createElement(""il"");  //create a list-element             var closeSpan = document.createElement(""span""); //create a span for badge attribute             var ClickListState=0;              dbtMenu.setAttribute(""class"",""container"");             //dbtMenu.appendChild(dropDownList);             li.setAttribute('id',lastId); // set an attribute for id             iCon.className = ""glyphicon glyphicon-remove""; // image for remove button             closeSpan.setAttribute(""class"", ""badge""); //create a new attribute for span             closeSpan.appendChild(iCon); // put it in the span set             iCon.addEventListener(""click"",function(){var element=document.getElementById(li.getAttribute('id'));                                                     element.parentNode.removeChild(element);}); //functionlity             li.innerHTML = document.getElementById('task').value;             var value=document.getElementById('task').value;             var pass= document.getElementById('task').value;             li.setAttribute(""class"", ""list-group-item hover-yellow"");             li.addEventListener('click',function() {if(ClickListState==0){li.style.backgroundColor=""red""; ClickListState++;}                                                     else {li.style.backgroundColor=""white""; ClickListState--; }});             li.appendChild(closeSpan);             lastId++;             ul.appendChild(li);          }     }  function update()     {             {{for r in rows:}}             var iCon = document.createElement('div'); //create a div container             var dbtMenu = document.createElement('div');             var li = document.createElement(""il"");  //create a list-element             var closeSpan = document.createElement(""span""); //create a span for badge attribute             var ClickListState = 0;              dbtMenu.setAttribute(""class"", ""container"");             //dbtMenu.appendChild(dropDownList);             li.setAttribute('id', lastId); // set an attribute for id             iCon.className = ""glyphicon glyphicon-remove""; // image for remove button             closeSpan.setAttribute(""class"", ""badge""); //create a new attribute for span             closeSpan.appendChild(iCon); // put it in the span set             iCon.addEventListener(""click"", function () {                 var element = document.getElementById(li.getAttribute('id'));                 element.parentNode.removeChild(element);             });            // var t ={#{=XML(response.json(r.task))}}                     li.innerHTML = ""t"";             var value = document.getElementById('task').value;             var pass = document.getElementById('task').value;             li.setAttribute(""class"", ""list-group-item hover-yellow"");             li.addEventListener('click', function () {                 if (ClickListState == 0) {                     li.style.backgroundColor = ""red"";                     ClickListState++;                 }                 else {                     li.style.backgroundColor = ""white"";                     ClickListState--;                 }             });             li.appendChild(closeSpan);             lastId++;             ul.appendChild(li);              {{pass}}      }     update(); </code></pre>"	"<p>I came up with this to convert a python list of strings to a javascript array of strings:</p>  <pre><code>{{def print_js_array(left_side, pylist):    wrap_quotes = map(lambda a: ""'{}'"".format(a), pylist)    comma_separated = """" if not pylist else reduce(lambda a,b: ""{}, {}"".format(a,b), wrap_quotes)    return ""{} = [{}];"".format(left_side, comma_separated) }}  {{=SCRIPT(   """"   + print_js_array(""var un_pythoned"", status_filter_options)) }} </code></pre>  <p>Which given a python list <code>['', 'Not Started', 'Running', 'Finished', 'Failed']</code> results in (html):</p>  <pre><code>&lt;script&gt;&lt;!-- var un_pythoned = ['', 'Not Started', 'Running', 'Finished', 'Failed']; //--&gt;&lt;/script&gt; </code></pre>  <p>Making the array available to subsequent scripts. You could probably write something similar to print a dictionary as json.</p>"
40484797	passing python data to javascript in web2py	javascript|python|json|xml|web2py	2016-11-08 10:39:44.297000 UTC	"<p>Here is my problem. I have the following function</p>  <pre><code>def index():     rows=db(db.mylist).select()     return dict(rows=rows) </code></pre>  <p>so whenever I reload the the front view index I want to retrieve rows from the database and display the data to the user in a list</p>  <pre><code>{{for(r in rows)}}     li.innerhtml={{=rows.task}} {{pass}} </code></pre>  <p>Obviously, this is not the right way to do it. I think I have to use json and XML.</p>  <p>This is the table I am using</p>  <pre><code>db.define_table(    'mylist',    Field('task', 'string') )  &lt;div class=""col-sm-6""&gt;          &lt;div class=""panel panel-default""&gt;              &lt;div class=""panel-heading center "" style=""color: black; font-style: inherit""&gt;                  &lt;form&gt;                  Task:                 &lt;input name=""name"" id=""task""  /&gt;                      &lt;button type=""button"" class=""btn btn-success btn-sm"" onclick=add(),ajax('{{=URL('default','insert_task')}}',['name'])  &gt;add&lt;/button&gt;                      &lt;/form&gt;               &lt;/div&gt;                &lt;div class=""panel-body center""&gt;                   &lt;ul id=""list"" class=""list-group""&gt;  &lt;/ul&gt;               &lt;/div&gt;           &lt;/div&gt;       &lt;/div&gt;  &lt;/div&gt;   var ul = document.getElementById(""list""); var lastId=0; function add()     {         if(!isBlank(document.getElementById(""task"").value)) {               var iCon = document.createElement('div'); //create a div container             var dbtMenu=document.createElement('div');             var li = document.createElement(""il"");  //create a list-element             var closeSpan = document.createElement(""span""); //create a span for badge attribute             var ClickListState=0;              dbtMenu.setAttribute(""class"",""container"");             //dbtMenu.appendChild(dropDownList);             li.setAttribute('id',lastId); // set an attribute for id             iCon.className = ""glyphicon glyphicon-remove""; // image for remove button             closeSpan.setAttribute(""class"", ""badge""); //create a new attribute for span             closeSpan.appendChild(iCon); // put it in the span set             iCon.addEventListener(""click"",function(){var element=document.getElementById(li.getAttribute('id'));                                                     element.parentNode.removeChild(element);}); //functionlity             li.innerHTML = document.getElementById('task').value;             var value=document.getElementById('task').value;             var pass= document.getElementById('task').value;             li.setAttribute(""class"", ""list-group-item hover-yellow"");             li.addEventListener('click',function() {if(ClickListState==0){li.style.backgroundColor=""red""; ClickListState++;}                                                     else {li.style.backgroundColor=""white""; ClickListState--; }});             li.appendChild(closeSpan);             lastId++;             ul.appendChild(li);          }     }  function update()     {             {{for r in rows:}}             var iCon = document.createElement('div'); //create a div container             var dbtMenu = document.createElement('div');             var li = document.createElement(""il"");  //create a list-element             var closeSpan = document.createElement(""span""); //create a span for badge attribute             var ClickListState = 0;              dbtMenu.setAttribute(""class"", ""container"");             //dbtMenu.appendChild(dropDownList);             li.setAttribute('id', lastId); // set an attribute for id             iCon.className = ""glyphicon glyphicon-remove""; // image for remove button             closeSpan.setAttribute(""class"", ""badge""); //create a new attribute for span             closeSpan.appendChild(iCon); // put it in the span set             iCon.addEventListener(""click"", function () {                 var element = document.getElementById(li.getAttribute('id'));                 element.parentNode.removeChild(element);             });            // var t ={#{=XML(response.json(r.task))}}                     li.innerHTML = ""t"";             var value = document.getElementById('task').value;             var pass = document.getElementById('task').value;             li.setAttribute(""class"", ""list-group-item hover-yellow"");             li.addEventListener('click', function () {                 if (ClickListState == 0) {                     li.style.backgroundColor = ""red"";                     ClickListState++;                 }                 else {                     li.style.backgroundColor = ""white"";                     ClickListState--;                 }             });             li.appendChild(closeSpan);             lastId++;             ul.appendChild(li);              {{pass}}      }     update(); </code></pre>"	"<p>Read the basic syntax for template language in web2py <a href=""http://www.web2py.com/books/default/chapter/29/05/the-views#forin"" rel=""nofollow noreferrer"">here</a></p>  <p>You want this:</p>  <pre><code>&lt;ul&gt;     {{for row in rows:}}         &lt;li&gt;{{=row}}&lt;/li&gt;     {{pass}} &lt;/ul&gt; </code></pre>  <p>Other solution can be, build the complete list in controller function using <a href=""http://www.web2py.com/books/default/chapter/29/05/the-views#Built-in-helpers"" rel=""nofollow noreferrer"">html helpers</a> and pass it to view </p>  <pre><code>def index():     rows = db(db.mylist).select()     my_list = [row.task for row in rows]     task_list = UL(*my_list)     return dict(task_list=task_list) </code></pre>  <p>And in the view just do:</p>  <pre><code>{{=XML(task_list)}} </code></pre>  <blockquote>   <p><a href=""http://www.web2py.com/books/default/chapter/29/05/the-views#XML"" rel=""nofollow noreferrer"">XML</a> is an object used to encapsulate text that should not be   escaped.</p> </blockquote>  <p>I will suggest you to go through these 2 examples: <a href=""http://www.web2py.com/books/default/chapter/29/03/overview#An-image-blog"" rel=""nofollow noreferrer"">Image blog</a>  and <a href=""http://www.web2py.com/books/default/chapter/29/03/overview#A-simple-wiki"" rel=""nofollow noreferrer"">Simple wiki</a></p>  <p><strong>EDIT:</strong></p>  <p>From your edit, I think you want to add new task using form and wanted to add the list without refreshing the page. </p>  <p>Read <a href=""http://www.web2py.com/books/default/chapter/29/11/jquery-and-ajax#Ajax-form-submission"" rel=""nofollow noreferrer"">Ajax form submission</a>, also related ajax example is given in <a href=""http://www.web2py.com/books/default/chapter/29/03/overview#A-simple-wiki"" rel=""nofollow noreferrer"">simple wiki app</a></p>  <pre><code>&lt;!-- Views/index.html--&gt; {{extend 'layout.html'}}  &lt;form id=""task_form""&gt;      Task:     &lt;input name=""name"" id=""task""  /&gt;     &lt;input type=""submit"" class=""btn btn-success btn-sm"" value=""Add"" /&gt; &lt;/form&gt;  &lt;div id=""target""&gt; {{=XML(task_list)}}&lt;/div&gt;   &lt;script&gt; jQuery('#task_form').submit(function() {   ajax('{{=URL(""default"", ""insert_task"")}}',        ['name'], 'target');   return false; }); &lt;/script&gt; </code></pre>  <p>--</p>  <pre><code># Controller  def index():     rows = db(db.mylist).select()     my_list = [row.task for row in rows]     task_list = UL(*my_list)     return dict(task_list=task_list)  def insert_task():     """"""an ajax callback that returns a &lt;ul&gt;""""""     task_name = request.vars.name     db.mylist.insert(task=task_name)     rows = db(db.mylist).select()     my_list = [row.task for row in rows]     task_list = UL(*my_list)     return task_list </code></pre>"
40492705	Get data from javascript to python using scrapy python	javascript|python|scrapy|web-crawler	2016-11-08 17:11:37.827000 UTC	"<p>How to get the data from javascript content using scrapy python ? The javascript look like this</p>  <pre><code>&lt;script type=""text/javascript""&gt;   var ad_reply_url = ""http://www2.mudah.my/ar/send/0?ca=3_s&amp;id=49825097&amp;l=0"";   var mcvl = """";   var images = [      'http://img.rnudah.com/images/13/133608119523265.jpg',       'http://img.rnudah.com/images/13/135608116569903.jpg',       'http://img.rnudah.com/images/13/137608113616541.jpg',       'http://img.rnudah.com/images/13/139608119186498.jpg'   ];  var thumbnails = [     'http://img.rnudah.com/thumbs/13/133608119523265.jpg',     'http://img.rnudah.com/thumbs/13/135608116569903.jpg',     'http://img.rnudah.com/thumbs/13/137608113616541.jpg',     'http://img.rnudah.com/thumbs/13/139608119186498.jpg'  ];&lt;/script&gt; </code></pre>  <p>So, what I want is. I want the data from var images and print that data like this</p>  <pre><code>['http://img.rnudah.com/images/13/133608119523265.jpg','http://img.rnudah.com/images/13/135608116569903.jpg', 'http://img.rnudah.com/images/13/137608113616541.jpg','http://img.rnudah.com/images/13/139608119186498.jpg' ]; </code></pre>  <p>Can anyone help me ? thanks.</p>"	"<p>I'm not using Scrapy Python, just regular Python. It is pretty straightforward though:</p>  <p>Code Sample:</p>  <pre><code>import ast import re  page_source = ''' &lt;script type=""text/javascript""&gt;   var ad_reply_url = ""http://www2.mudah.my/ar/send/0?ca=3_s&amp;id=49825097&amp;l=0"";   var mcvl = """";   var images = [      'http://img.rnudah.com/images/13/133608119523265.jpg',      'http://img.rnudah.com/images/13/135608116569903.jpg',      'http://img.rnudah.com/images/13/137608113616541.jpg',      'http://img.rnudah.com/images/13/139608119186498.jpg'   ];  var thumbnails = [     'http://img.rnudah.com/thumbs/13/133608119523265.jpg',     'http://img.rnudah.com/thumbs/13/135608116569903.jpg',     'http://img.rnudah.com/thumbs/13/137608113616541.jpg',     'http://img.rnudah.com/thumbs/13/139608119186498.jpg'  ];&lt;/script&gt; '''  variables = re.findall('(?si)var(.*?);', page_source)  var_collection = {} for var in variables:     var = var.strip()     var_key = var.split(' = ')[0]     var_value = ast.literal_eval(var.split(' = ')[1])     var_collection.update({var_key: var_value})  print(var_collection['images']) </code></pre>  <p>Output:</p>  <pre><code>['http://img.rnudah.com/images/13/133608119523265.jpg', 'http://img.rnudah.com/images/13/135608116569903.jpg', 'http://img.rnudah.com/images/13/137608113616541.jpg', 'http://img.rnudah.com/images/13/139608119186498.jpg'] </code></pre>  <p>Related: <a href=""https://stackoverflow.com/a/18108644/295246"">https://stackoverflow.com/a/18108644/295246</a></p>"
40495320	"What is the equivalent of using python-firebase's "".get"" statement in Javascript?"	javascript|python|json|firebase	2016-11-08 19:54:00.657000 UTC	"<p>I wrote python code that looks like this and returns the enire JSON database.</p>  <pre><code>from firebase import firebase firebase = firebase.FirebaseApplication('https://name_name_name.firebaseio.com/') result = firebase.get('/results', None) </code></pre>  <p>I have tried to do the same thing in javascript with no success. This should be straight forward but I haven't seen any solutions. The idea is to host this on the server. It will pass the <strong>result</strong> variable to an XML converter. The XML will print to either that same document or another document in the directory. </p>  <p><strong>What is the JavaScript equivalent of my Python code?</strong></p>"	"<p>Without any real information on where your code runs, you probably want <a href=""https://www.npmjs.com/package/firebase"" rel=""nofollow noreferrer"">https://www.npmjs.com/package/firebase</a>, which can be used both in the client (e.g. browsers) as well as in standard OS context (offline/server/general scripting language).</p>  <p>for anything JavaScript, <a href=""http://npmjs.com"" rel=""nofollow noreferrer"">http://npmjs.com</a> is your one stop ""is there something to do X"" open source shop.</p>"
40518424	How to interact with a javascript webpage using Python?	javascript|python|web-scraping	2016-11-10 00:55:01.710000 UTC	"<p>I am a complete newbie to web scraping; I have this small project of scraping some data from <a href=""http://corpus.byu.edu/coca/"" rel=""nofollow noreferrer"">COCA</a> but I don't even know where to start. It seems that this webpage is built using some Javascript and I wonder if there is some package that enables me to interact with it?</p>  <p>Here is some tasks that I want my program to do:</p>  <ol> <li>log in using one's account;</li> <li>Choose a tab (e.g. search, chart, etc, please see <a href=""http://corpus.byu.edu/coca/"" rel=""nofollow noreferrer"">COCA</a>);</li> <li>type in the word you want to search in the textbook;</li> <li>scrape the search results.</li> </ol>  <p>Any suggestions would be greatly appreciated.</p>  <p>PS: Ideally everything should work at backstage (won't open the browser).</p>"	"<p>As some people have told you, you can use <code>selenium</code>. I recommend you to enter in the developers tools of your browser and follow the network requests that make the site, depending of the behavior of the page maybe you can do it with the python module <code>request</code> to simulate the request that you saw that was making the site, personally i think that it is simpler. If you can't emulate the request then use selenium.</p>"
40518424	How to interact with a javascript webpage using Python?	javascript|python|web-scraping	2016-11-10 00:55:01.710000 UTC	"<p>I am a complete newbie to web scraping; I have this small project of scraping some data from <a href=""http://corpus.byu.edu/coca/"" rel=""nofollow noreferrer"">COCA</a> but I don't even know where to start. It seems that this webpage is built using some Javascript and I wonder if there is some package that enables me to interact with it?</p>  <p>Here is some tasks that I want my program to do:</p>  <ol> <li>log in using one's account;</li> <li>Choose a tab (e.g. search, chart, etc, please see <a href=""http://corpus.byu.edu/coca/"" rel=""nofollow noreferrer"">COCA</a>);</li> <li>type in the word you want to search in the textbook;</li> <li>scrape the search results.</li> </ol>  <p>Any suggestions would be greatly appreciated.</p>  <p>PS: Ideally everything should work at backstage (won't open the browser).</p>"	"<pre><code>from pyvirtualdisplay import Display from selenium import webdriver  display = Display(visible=0, size=(800, 600)) display.start()  browser = webdriver.Firefox() browser.get('http://www.google.com') print browser.title browser.quit()  display.stop() </code></pre>"
40535143	Scraping Javascript text from web page using Python	javascript|python-2.7|web-scraping	2016-11-10 19:02:59.757000 UTC	"<p>I am currently trying to pull latitude and longitude from the TripAdvisor website from various restaurants. I was looking through the HTML of this restaurant in Hong Kong.</p>  <p><a href=""https://i.stack.imgur.com/U1lRy.png"" rel=""nofollow noreferrer"">Restaurant I am attempting to scrape from</a></p>  <p>In the HTML I found this:</p>  <p><a href=""https://i.stack.imgur.com/u8Lnw.png"" rel=""nofollow noreferrer"">HTML Code with the Latitude and Longitude</a></p>  <p>I want to scrape the latitude and longitude from here but I can't seem to get it out when I attempt to print it. Below is my code, and any suggestion would be helpful.</p>  <pre><code>#import libraries import requests from bs4 import BeautifulSoup import csv  #loop to move into the next pages. entries are in increments of 30 per page for i in range(0, 1, 30):     #need this here for when you want more than 30     while i &lt;= range:         i = str(i)     #url format offsets the restaurants in increments of 30 after the oa     url1 = 'https://www.tripadvisor.com/Restaurants-g294217-oa' + i + '-Hong_Kong.html#EATERY_LIST_CONTENTS'     r1 = requests.get(url1)     data1 = r1.text     soup1 = BeautifulSoup(data1, ""html.parser"")     for link in soup1.findAll('a', {'property_title'}):         #print 'https://www.tripadvisor.com/Restaurant_Review-g294217-' + link.get('href')         restaurant_url = 'https://www.tripadvisor.com/Restaurant_Review-g294217-' + link.get('href')         #print restaurant_url         r2 = requests.get(restaurant_url)         data2 = r2.text         soup2 = BeautifulSoup(data2, ""html.parser"")         for script in soup2.findAll('script', {'type', 'text/javascript', 'lat'}):             print script.string </code></pre>"	"<p>To scrape javascript powered pages you need to use <a href=""https://stackoverflow.com/search?q=%5Bselenium%5D%20scrape"">selenium</a>.</p>"
40538578	Understanding namespace when using Javascript from Ipython.core.display in Jupyter Notebook	javascript|ipython|jupyter-notebook	2016-11-10 23:06:09.627000 UTC	"<p>I am having trouble understanding the namespace of the <code>Javascript</code> function that is provided in IPython.</p>  <pre><code>from IPython.core.display import display, Javascript display(Javascript(u"""""" var variable = 'Hello' console.log(variable) """""")) [output] Hello </code></pre>  <p>The above seems to work fine, but the following throws an error.</p>  <pre><code>display(Javascript(u"""""" var variable = 'Hello' """""")) display(Javascript(u"""""" console.log(variable) """""")) [output] Javascript error adding output! ReferenceError: variable is not defined See your browser Javascript console for more details. </code></pre>  <p>If I want to save data into a variable in one function, from say an ajax call, and use it from another function in a separate cell later in a jupyter notebook, what is the best practice method for doing this? My current implementation uses the <code>Window</code> to store the variable. </p>  <pre><code>display(Javascript(u"""""" var variable = 'Hello' Window.variable = variable """""")) display(Javascript(u"""""" console.log(Window.variable) """""")) [output] Hello </code></pre>  <p>Another related question - even after storing it in <code>Window</code>, I'm unable to access the variable from the javascript console. I'd also like access to it from the javascript console for debugging, but would like to use best practices going forward. Suggestions?</p>  <p>Edit :</p>  <p>The following seems to work fine.</p>  <pre><code>display(HTML(u""""""  &lt;script&gt; variable='Hello' &lt;/script&gt; """"""))  display(HTML(u""""""  &lt;script&gt; console.log(variable) &lt;/script&gt; """""")) </code></pre>"	
40541957	"Using Python's QtWebkit to render Javascript-based page, get QThread: Destroyed while thread is still running"	python|multithreading|pyqt|beautifulsoup|web-crawler	2016-11-11 05:57:08.093000 UTC	"<p>I'm trying to write a Beautifulsoup crawler for a web page that's loaded via JavaScript, which Beautifulsoup can't parse. To work around this, I followed <a href=""https://impythonist.wordpress.com/2015/01/06/ultimate-guide-for-scraping-javascript-rendered-web-pages/"" rel=""nofollow noreferrer"">this tutorial</a> on rendering the page with QtWebkit before extracting all of the hrefs in the page from the resulting HTML with Beautifulsoup. </p>  <p>However, the page  scraping is very large, and before it has finished getting these links it throws the error ""QThread: Destroyed while thread is still running"". Numerous people have posted questions about this error and received answers, however these were all for much more complex projects that had PyQT at the core of the application, so these responses assume familiarity with the library and I'm having real trouble trying to apply them to my case. </p>  <p>It seems like I need to keep the thread from being garbage collected by saving it in a variable, but the correct way to do this eludes me. </p>  <p>Here is my code:</p>  <pre><code>import sys from PyQt4.QtGui import *   from PyQt4.QtCore import *   from PyQt4.QtWebKit import *   from bs4 import BeautifulSoup  class Render(QWebPage):     def __init__(self, url):       self.app = QApplication(sys.argv)       QWebPage.__init__(self)      self.loadFinished.connect(self._loadFinished)       self.mainFrame().load(QUrl(url))       self.app.exec_()      def _loadFinished(self, result):       self.frame = self.mainFrame()       self.app.quit()    url = 'http://www.lolesports.com/en_US/msi/msi_2016/schedule/default'   r = Render(url)   result = r.frame.toHtml()  soup = BeautifulSoup(result, ""html.parser"") for link in soup.find_all('a'):     print(link.get('href')) </code></pre>"	"<p>There is nothing obviously wrong with the script, and apart from a few harmless Qt warning messages, it seems to work more or less as expected.</p>  <p>The Qt message you get is not really diagnostic of anything much, and doesn't necessarily indicate a fatal error condition. So I suspect the script is actually working correctly for you, and you may just be misinterpreting the output.</p>  <p>If you want to get rid of all the Qt messages, put the following line at the top of the script (just below the imports):</p>  <pre><code>qInstallMsgHandler(lambda *args: None) </code></pre>  <hr>  <p>PS: Here is the exact output I get:</p>  <pre><code>QFont::setPixelSize: Pixel size &lt;= 0 (0) QFont::setPixelSize: Pixel size &lt;= 0 (0) QNetworkReplyImplPrivate::error: Internal problem, this method must only be called once. QFont::setPixelSize: Pixel size &lt;= 0 (0) QFont::setPixelSize: Pixel size &lt;= 0 (0) http://na.leagueoflegends.com/en/ http://na.leagueoflegends.com/en/ http://na.leagueoflegends.com/en/news/ http://gameinfo.na.leagueoflegends.com/en/game-info/ http://nexus.leagueoflegends.com/ http://www.lolesports.com/en_US http://boards.na.leagueoflegends.com/en/ http://ulol.leagueoflegends.com/ https://support.riotgames.com/hc/en-us https://na.merch.riotgames.com/en/ http://na.leagueoflegends.com/en/news/ http://gameinfo.na.leagueoflegends.com/en/game-info/ http://nexus.leagueoflegends.com/ http://www.lolesports.com/en_US http://boards.na.leagueoflegends.com/en/ http://ulol.leagueoflegends.com/ https://support.riotgames.com/hc/en-us https://na.merch.riotgames.com/en/ http://signup.na.leagueoflegends.com/en None http://www.lolesports.com/en_US http://eu.lolesports.com/en http://eu.lolesports.com/pl http://eu.lolesports.com/en http://eu.lolesports.com/fr http://eu.lolesports.com/es http://eu.lolesports.com/de http://lan.lolesports.com/ http://las.lolesports.com/ http://lolesports.com.br/ http://www.lolespor.com/ http://oce.lolesports.com/ javascript:; javascript:; javascript:; javascript:; </code></pre>"
40542789	How to set values for AngularJS controller variables using python Selenium or JavaScript console?	javascript|python|angularjs|selenium	2016-11-11 07:03:26.813000 UTC	"<p>I have been using python Selenium and AngularJS for couple of mounts and right now I am trying to modify some AngJS variables (of aslider filter from <a href=""http://99.243.40.11/#/HouseSold"" rel=""nofollow noreferrer"">here</a>) and let the page refresh so that I can scrap some data out the page. I use the below code for that matter. </p>  <pre><code>#! /usr/bin/python2.7 import os import time  from selenium import webdriver from selenium.webdriver.common.keys import Keys from selenium.webdriver.support.ui import WebDriverWait from selenium.webdriver.common.by import By from selenium.webdriver.support import expected_conditions as EC from selenium.webdriver import ActionChains import datetime import time import mysql.connector   chrome_options = webdriver.ChromeOptions() chrome_options.add_argument('--no-proxy-server')  os.environ[""PATH""] += "":/home/mike/software""  minPrice = 0 maxPrice = 1800000   minBedRoom = 0 maxBedRoom = 9   minBathRoom = 0 maxBathRoom = 8   minSoldDate = 0 maxSoldDate = 39   os.environ[""PATH""] += "":/usr/local/bin/"" try:     driver = webdriver.Chrome()     driver.get(""http://99.243.40.11/#/HouseSold"")     time.sleep(20)     # en =  driver.find_element_by_xpath(""//span[6]"")     time.sleep(5)      try:         element = WebDriverWait(driver, 5).until(EC.presence_of_element_located((By.XPATH, ""(//slider)[1]""))             )      finally:         print ''      ens =  driver.find_elements_by_xpath('(//slider)')     print 'ens', ens     en = ens[0]      # set min price     driver.execute_script( '''angular.element(arguments[0]).scope().filters.sold_price_low = {0}; angular.element(document.body).injector().get('$rootScope').$apply();'''         .format(minPrice), ens[0] ) </code></pre>  <p>For some reason it doesn't apply the change. Please let me know what I am missing.</p>  <p>Your help is much appreciated.</p>  <p>Thank you,</p>"	"<p>You forgot to call the ng-change function according to your page (you need call filterPeople()). do it like below:</p>  <pre><code>driver.execute_script( '''angular.element(arguments[0]).scope().filters.sold_price_low = {0}; angular.element(arguments[0]).scope().filterPeople(); angular.element(document.body).injector().get('$rootScope').$apply();'''     .format(minPrice), ens[0] ) </code></pre>"
40546010	Python webscraping a form that uses Javascript to process request	javascript|python|selenium	2016-11-11 10:29:17.567000 UTC	"<p>I am trying to scrape the resulting page from this page: </p>  <p><a href=""http://data.philly.com/philly/property/"" rel=""nofollow noreferrer"">http://data.philly.com/philly/property/</a></p>  <p>I am using 254 W Ashdale St as my trial entry, when I do that in my browser it directs me to the result I'm looking for in the HTML (same URL though). </p>  <p>Python requests is successfully putting the address I put in in the results page, but I am not able to get the owner information, which is what I am trying to scrape. I have been trying with Selenium and phantomjs, nothing I am doing is working.</p>  <p>I was also confused about the form action, it seemed to just be the same URL as the page the form is on.</p>  <p>I appreciate any and all advice or help!</p>"	"<p>Selenium takes care of virtually everything, just find the elements, enter the information, find the button, click on it, then go to the owner, click on it and get scrap the info you need.</p>  <pre><code>import selenium from selenium import webdriver  driver = webdriver.Chrome() driver.get('http://data.philly.com/philly/property/')  #enter the street address driver.find_element_by_name('LOC').send_keys('254 W Ashdale St') #click on the submit button driver.find_element_by_name('sendForm').click()  #find the owner owner_tag = driver.find_elements_by_tag_name('td')[2] owner = driver.find_elements_by_tag_name('td')[2].text print(owner)  #click on the owner owner_tag.find_element_by_tag_name('a').click()  #get the table with the relevant info     rows = driver.find_element_by_tag_name('tbody').find_elements_by_tag_name('tr')  #get the row with the sale prices sale_prices = list() for row in rows:     sale_prices.append(row.find_elements_by_tag_name('td')[4].text)  print('\n'.join(sale_prices)) </code></pre>  <p>Output:</p>  <blockquote> <pre><code>FIRSTNAME LASTNAME $123,600.00 $346,100.00 [..] $789,500.00 </code></pre> </blockquote>"
40546592	How to send a variable from settings.py (python) to a javascript (js)	javascript|python|variables	2016-11-11 11:01:44.817000 UTC	"<p>I need to get a variable from the settings in python:</p>  <pre><code>SESSION_COOKIE_AGE = 4500 </code></pre>  <p>And use it in a javascript (js).</p>  <p>I found this: <a href=""https://chriskief.com/2013/09/19/access-django-constants-from-settings-py-in-a-template/"" rel=""nofollow noreferrer"">https://chriskief.com/2013/09/19/access-django-constants-from-settings-py-in-a-template/</a></p>  <p>But, is it the only way?</p>"	"<p>I imported requests:</p>  <pre><code>import requests </code></pre>  <p>and sent it to the template:</p>  <pre><code>dictionary = {""session_cookie_age"": SESSION_COOKIE_AGE} return render(request, dictionary, ""yourtemplate.html"") </code></pre>"
40553376	Scraping Javascript Text with Python and Selenium	javascript|python|python-2.7|selenium|web-scraping	2016-11-11 17:39:48.117000 UTC	"<p>I am trying to pull latitude and longitude from TripAdvisor restaurants. The information isn't prominently displayed on the web page but I did find it in the HTML here:</p>  <p><a href=""https://i.stack.imgur.com/JoZb9.png"" rel=""nofollow noreferrer"">Latitude and Longitude w/in Javascript</a></p>  <p>I am trying to use this code to pull all the information:</p>  <pre><code>#import libraries import requests from bs4 import BeautifulSoup from selenium import webdriver from selenium.common.exceptions import NoSuchElementException from selenium.webdriver.common.keys import Keys  for i in range(0, 30, 30):     #need this here for when you want more than 30     while i &lt;= range:         i = str(i)         #url format offsets the restaurants in increments of 30 after the oa         url1 = 'https://www.tripadvisor.com/Restaurants-g294217-oa' + i + '-Hong_Kong.html#EATERY_LIST_CONTENTS'         r1 = requests.get(url1)         data1 = r1.text         soup1 = BeautifulSoup(data1, ""html.parser"")         for link in soup1.findAll('a', {'property_title'}):             #print 'https://www.tripadvisor.com/Restaurant_Review-g294217-' + link.get('href')             restaurant_url = 'https://www.tripadvisor.com/Restaurant_Review-g294217-' + link.get('href')             browser = webdriver.Chrome('C:\Python27\Chromedriver\chromedriver.exe')             # use xpath to get to the information in the JS             print browser.find_element_by_xpath(""""""/html/body/script[22]"""""") </code></pre>  <p>When I run the code it tells me it is unable to find the element. Maybe I am a little brain dead right now, but if a fresh set of eyes could take a look at this and let me know if I am doing this wrong or if there is a different way to go about this I am all ears.</p>"	"<p>There is no point of using <code>requests</code> and <code>BeautifulSoup</code> packages when you are using <code>selenium webdriver</code> as selenium can open a webpage<code>(requests)</code> and fetch the content<code>(BeautifulSoup)</code> on its own. Below is the rough structure of what you are trying to accomplish plainly using selenium.</p>  <pre><code>from selenium import webdriver from selenium.common.exceptions import NoSuchElementException from selenium.webdriver.common.keys import Keys   browser = webdriver.Chrome('C:\Python27\Chromedriver\chromedriver.exe') for counter in range(0, 30, 30):     #need this here for when you want more than 30     while i &lt;= counter:         i = str(i)         url1 = 'https://www.tripadvisor.com/Restaurants-g294217-oa' + i + '-Hong_Kong.html#EATERY_LIST_CONTENTS'         browser.get(url1) # this will redirect to webpage         # use xpath to get to the information in the JS         print browser.find_element_by_xpath(""""""/html/body/script[22]"""""") </code></pre>"
40560164	Python Flask page not rendering with external CSS and Javascript	javascript|python|css|flask|jinja2	2016-11-12 06:23:50.277000 UTC	"<p>I created a Python Flask app with a template that had the HTML/CSS/Javascript in one HTML file. This rendered fine.</p>  <p>I would like to separate the CSS and Javascript files into thier own files. I did this and modified the HTML file to accomodate the new locations of the CSS and Javascript files.</p>  <p>However the page will not render. I get a 'Not Found' error page when I open it. </p>  <p>I would like to separate the CSS and Javascript so that I play around with the Javascript without having the manage the HMTL and CSS. Any help would be appreciated.</p>  <p>Here is the original HTML file that worked:</p>  <pre><code>{% extends ""base.html"" %}  {% block title %}test.com{% endblock %}  {% block page_content %}      &lt;title&gt;cytoscape-dagre.js demo&lt;/title&gt;      &lt;meta name=""viewport"" content=""width=device-width, user-scalable=no, initial-scale=1, maximum-scale=1""&gt;      &lt;script src=""http://code.jquery.com/jquery-2.0.3.min.js""&gt;&lt;/script&gt;     &lt;script src=""http://cytoscape.github.io/cytoscape.js/api/cytoscape.js-latest/cytoscape.min.js""&gt;&lt;/script&gt;      &lt;!-- for testing with local version of cytoscape.js --&gt;     &lt;!--&lt;script src=""../cytoscape.js/build/cytoscape.js""&gt;&lt;/script&gt;--&gt;      &lt;script src=""https://cdn.rawgit.com/cpettitt/dagre/v0.7.4/dist/dagre.min.js""&gt;&lt;/script&gt;     &lt;script src=""https://cdn.rawgit.com/cytoscape/cytoscape.js-dagre/1.1.2/cytoscape-dagre.js""&gt;&lt;/script&gt;      &lt;style&gt;         body {             font-family: helvetica;             font-size: 14px;         }          #cy {             width: 100%;             height: 100%;             position: absolute;             left: 0;             top: 0;             z-index: 999;         }          h1 {             opacity: 0.5;             font-size: 1em;         }     &lt;/style&gt;      &lt;script&gt;         $(function(){              var cy = window.cy = cytoscape({                 container: document.getElementById('cy'),        boxSelectionEnabled: false,       autounselectify: true,                  layout: {                     name: 'dagre'                 },                  style: [                     {                         selector: 'node',                         style: {                             'content': 'data(id)',                             'text-opacity': 0.5,                             'text-valign': 'center',                             'text-halign': 'left',                             'background-color': '#11479e'                         }                     },                      {                         selector: 'edge',                         style: {                             'width': 4,                             'target-arrow-shape': 'triangle',                             'line-color': '#9dbaea',                             'target-arrow-color': '#9dbaea',                             'curve-style': 'bezier'                         }                     }                 ],                  elements: {                     nodes: [                         { data: { id: 'n0' } },                         { data: { id: 'n1' } },                         { data: { id: 'n2' } },                         { data: { id: 'n3' } },                         { data: { id: 'n4' } },                         { data: { id: 'n5' } },                         { data: { id: 'n6' } },                         { data: { id: 'n7' } },                         { data: { id: 'n8' } },                         { data: { id: 'n9' } },                         { data: { id: 'n10' } },                         { data: { id: 'n11' } },                         { data: { id: 'n12' } },                         { data: { id: 'n13' } },                         { data: { id: 'n14' } },                         { data: { id: 'n15' } },                         { data: { id: 'n16' } }                     ],                     edges: [                         { data: { source: 'n0', target: 'n1' } },                         { data: { source: 'n1', target: 'n2' } },                         { data: { source: 'n1', target: 'n3' } },                         { data: { source: 'n4', target: 'n5' } },                         { data: { source: 'n4', target: 'n6' } },                         { data: { source: 'n6', target: 'n7' } },                         { data: { source: 'n6', target: 'n8' } },                         { data: { source: 'n8', target: 'n9' } },                         { data: { source: 'n8', target: 'n10' } },                         { data: { source: 'n11', target: 'n12' } },                         { data: { source: 'n12', target: 'n13' } },                         { data: { source: 'n13', target: 'n14' } },                         { data: { source: 'n13', target: 'n15' } },                     ]                 },             });          });     &lt;/script&gt;   &lt;body&gt;     &lt;h1&gt;cytoscape-dagre demo&lt;/h1&gt;      &lt;div id=""cy""&gt;&lt;/div&gt;  &lt;/body&gt;  {% endblock %} </code></pre>  <p>While here is the new code that is not working as I expect:</p>  <pre><code>{% extends ""base.html"" %}  {% block title %}test.com{% endblock %}  {% block page_content %}       &lt;title&gt;cytoscape-dagre.js demo&lt;/title&gt;      &lt;meta name=""viewport"" content=""width=device-width, user-scalable=no, initial-scale=1, maximum-scale=1""&gt;      &lt;script src=""http://code.jquery.com/jquery-2.0.3.min.js""&gt;&lt;/script&gt;     &lt;script src=""http://cytoscape.github.io/cytoscape.js/api/cytoscape.js-latest/cytoscape.min.js""&gt;&lt;/script&gt;      &lt;!-- for testing with local version of cytoscape.js --&gt;     &lt;!--&lt;script src=""../cytoscape.js/build/cytoscape.js""&gt;&lt;/script&gt;--&gt;      &lt;script src=""https://cdn.rawgit.com/cpettitt/dagre/v0.7.4/dist/dagre.min.js""&gt;&lt;/script&gt;     &lt;script src=""https://cdn.rawgit.com/cytoscape/cytoscape.js-dagre/1.1.2/cytoscape-dagre.js""&gt;&lt;/script&gt;      &lt;script type=""text/javascript"" src=""{{ url_for('static', filename='javascript/graph3.js') }}""&gt;&lt;/script&gt;     &lt;link rel= ""stylesheet"" type= ""text/css"" href= ""{{ url_for('static',filename='styles/style.css') }}""&gt;      &lt;body&gt;          &lt;h1&gt;cytoscape-dagre demo&lt;/h1&gt;           &lt;div id=""cy""&gt;&lt;/div&gt;      &lt;/body&gt;  {% endblock %} </code></pre>"	<p>The only difference i see is that your script appears after style in working case and before it in broken.</p>
40560164	Python Flask page not rendering with external CSS and Javascript	javascript|python|css|flask|jinja2	2016-11-12 06:23:50.277000 UTC	"<p>I created a Python Flask app with a template that had the HTML/CSS/Javascript in one HTML file. This rendered fine.</p>  <p>I would like to separate the CSS and Javascript files into thier own files. I did this and modified the HTML file to accomodate the new locations of the CSS and Javascript files.</p>  <p>However the page will not render. I get a 'Not Found' error page when I open it. </p>  <p>I would like to separate the CSS and Javascript so that I play around with the Javascript without having the manage the HMTL and CSS. Any help would be appreciated.</p>  <p>Here is the original HTML file that worked:</p>  <pre><code>{% extends ""base.html"" %}  {% block title %}test.com{% endblock %}  {% block page_content %}      &lt;title&gt;cytoscape-dagre.js demo&lt;/title&gt;      &lt;meta name=""viewport"" content=""width=device-width, user-scalable=no, initial-scale=1, maximum-scale=1""&gt;      &lt;script src=""http://code.jquery.com/jquery-2.0.3.min.js""&gt;&lt;/script&gt;     &lt;script src=""http://cytoscape.github.io/cytoscape.js/api/cytoscape.js-latest/cytoscape.min.js""&gt;&lt;/script&gt;      &lt;!-- for testing with local version of cytoscape.js --&gt;     &lt;!--&lt;script src=""../cytoscape.js/build/cytoscape.js""&gt;&lt;/script&gt;--&gt;      &lt;script src=""https://cdn.rawgit.com/cpettitt/dagre/v0.7.4/dist/dagre.min.js""&gt;&lt;/script&gt;     &lt;script src=""https://cdn.rawgit.com/cytoscape/cytoscape.js-dagre/1.1.2/cytoscape-dagre.js""&gt;&lt;/script&gt;      &lt;style&gt;         body {             font-family: helvetica;             font-size: 14px;         }          #cy {             width: 100%;             height: 100%;             position: absolute;             left: 0;             top: 0;             z-index: 999;         }          h1 {             opacity: 0.5;             font-size: 1em;         }     &lt;/style&gt;      &lt;script&gt;         $(function(){              var cy = window.cy = cytoscape({                 container: document.getElementById('cy'),        boxSelectionEnabled: false,       autounselectify: true,                  layout: {                     name: 'dagre'                 },                  style: [                     {                         selector: 'node',                         style: {                             'content': 'data(id)',                             'text-opacity': 0.5,                             'text-valign': 'center',                             'text-halign': 'left',                             'background-color': '#11479e'                         }                     },                      {                         selector: 'edge',                         style: {                             'width': 4,                             'target-arrow-shape': 'triangle',                             'line-color': '#9dbaea',                             'target-arrow-color': '#9dbaea',                             'curve-style': 'bezier'                         }                     }                 ],                  elements: {                     nodes: [                         { data: { id: 'n0' } },                         { data: { id: 'n1' } },                         { data: { id: 'n2' } },                         { data: { id: 'n3' } },                         { data: { id: 'n4' } },                         { data: { id: 'n5' } },                         { data: { id: 'n6' } },                         { data: { id: 'n7' } },                         { data: { id: 'n8' } },                         { data: { id: 'n9' } },                         { data: { id: 'n10' } },                         { data: { id: 'n11' } },                         { data: { id: 'n12' } },                         { data: { id: 'n13' } },                         { data: { id: 'n14' } },                         { data: { id: 'n15' } },                         { data: { id: 'n16' } }                     ],                     edges: [                         { data: { source: 'n0', target: 'n1' } },                         { data: { source: 'n1', target: 'n2' } },                         { data: { source: 'n1', target: 'n3' } },                         { data: { source: 'n4', target: 'n5' } },                         { data: { source: 'n4', target: 'n6' } },                         { data: { source: 'n6', target: 'n7' } },                         { data: { source: 'n6', target: 'n8' } },                         { data: { source: 'n8', target: 'n9' } },                         { data: { source: 'n8', target: 'n10' } },                         { data: { source: 'n11', target: 'n12' } },                         { data: { source: 'n12', target: 'n13' } },                         { data: { source: 'n13', target: 'n14' } },                         { data: { source: 'n13', target: 'n15' } },                     ]                 },             });          });     &lt;/script&gt;   &lt;body&gt;     &lt;h1&gt;cytoscape-dagre demo&lt;/h1&gt;      &lt;div id=""cy""&gt;&lt;/div&gt;  &lt;/body&gt;  {% endblock %} </code></pre>  <p>While here is the new code that is not working as I expect:</p>  <pre><code>{% extends ""base.html"" %}  {% block title %}test.com{% endblock %}  {% block page_content %}       &lt;title&gt;cytoscape-dagre.js demo&lt;/title&gt;      &lt;meta name=""viewport"" content=""width=device-width, user-scalable=no, initial-scale=1, maximum-scale=1""&gt;      &lt;script src=""http://code.jquery.com/jquery-2.0.3.min.js""&gt;&lt;/script&gt;     &lt;script src=""http://cytoscape.github.io/cytoscape.js/api/cytoscape.js-latest/cytoscape.min.js""&gt;&lt;/script&gt;      &lt;!-- for testing with local version of cytoscape.js --&gt;     &lt;!--&lt;script src=""../cytoscape.js/build/cytoscape.js""&gt;&lt;/script&gt;--&gt;      &lt;script src=""https://cdn.rawgit.com/cpettitt/dagre/v0.7.4/dist/dagre.min.js""&gt;&lt;/script&gt;     &lt;script src=""https://cdn.rawgit.com/cytoscape/cytoscape.js-dagre/1.1.2/cytoscape-dagre.js""&gt;&lt;/script&gt;      &lt;script type=""text/javascript"" src=""{{ url_for('static', filename='javascript/graph3.js') }}""&gt;&lt;/script&gt;     &lt;link rel= ""stylesheet"" type= ""text/css"" href= ""{{ url_for('static',filename='styles/style.css') }}""&gt;      &lt;body&gt;          &lt;h1&gt;cytoscape-dagre demo&lt;/h1&gt;           &lt;div id=""cy""&gt;&lt;/div&gt;      &lt;/body&gt;  {% endblock %} </code></pre>"	"<p>Close those spaces after the equal sign after <code>rel</code>, <code>type</code>, and <code>href</code>.</p>  <pre><code>&lt;link rel= ""stylesheet"" type= ""text/css"" href= ""{{ url_for('static',filename='styles/style.css') }}""&gt; </code></pre>  <p>to</p>  <pre><code>&lt;link rel=""stylesheet"" type=""text/css"" href=""{{ url_for('static',filename='styles/style.css') }}""&gt; </code></pre>  <p>Looks as if that is the culprit.</p>"
40560164	Python Flask page not rendering with external CSS and Javascript	javascript|python|css|flask|jinja2	2016-11-12 06:23:50.277000 UTC	"<p>I created a Python Flask app with a template that had the HTML/CSS/Javascript in one HTML file. This rendered fine.</p>  <p>I would like to separate the CSS and Javascript files into thier own files. I did this and modified the HTML file to accomodate the new locations of the CSS and Javascript files.</p>  <p>However the page will not render. I get a 'Not Found' error page when I open it. </p>  <p>I would like to separate the CSS and Javascript so that I play around with the Javascript without having the manage the HMTL and CSS. Any help would be appreciated.</p>  <p>Here is the original HTML file that worked:</p>  <pre><code>{% extends ""base.html"" %}  {% block title %}test.com{% endblock %}  {% block page_content %}      &lt;title&gt;cytoscape-dagre.js demo&lt;/title&gt;      &lt;meta name=""viewport"" content=""width=device-width, user-scalable=no, initial-scale=1, maximum-scale=1""&gt;      &lt;script src=""http://code.jquery.com/jquery-2.0.3.min.js""&gt;&lt;/script&gt;     &lt;script src=""http://cytoscape.github.io/cytoscape.js/api/cytoscape.js-latest/cytoscape.min.js""&gt;&lt;/script&gt;      &lt;!-- for testing with local version of cytoscape.js --&gt;     &lt;!--&lt;script src=""../cytoscape.js/build/cytoscape.js""&gt;&lt;/script&gt;--&gt;      &lt;script src=""https://cdn.rawgit.com/cpettitt/dagre/v0.7.4/dist/dagre.min.js""&gt;&lt;/script&gt;     &lt;script src=""https://cdn.rawgit.com/cytoscape/cytoscape.js-dagre/1.1.2/cytoscape-dagre.js""&gt;&lt;/script&gt;      &lt;style&gt;         body {             font-family: helvetica;             font-size: 14px;         }          #cy {             width: 100%;             height: 100%;             position: absolute;             left: 0;             top: 0;             z-index: 999;         }          h1 {             opacity: 0.5;             font-size: 1em;         }     &lt;/style&gt;      &lt;script&gt;         $(function(){              var cy = window.cy = cytoscape({                 container: document.getElementById('cy'),        boxSelectionEnabled: false,       autounselectify: true,                  layout: {                     name: 'dagre'                 },                  style: [                     {                         selector: 'node',                         style: {                             'content': 'data(id)',                             'text-opacity': 0.5,                             'text-valign': 'center',                             'text-halign': 'left',                             'background-color': '#11479e'                         }                     },                      {                         selector: 'edge',                         style: {                             'width': 4,                             'target-arrow-shape': 'triangle',                             'line-color': '#9dbaea',                             'target-arrow-color': '#9dbaea',                             'curve-style': 'bezier'                         }                     }                 ],                  elements: {                     nodes: [                         { data: { id: 'n0' } },                         { data: { id: 'n1' } },                         { data: { id: 'n2' } },                         { data: { id: 'n3' } },                         { data: { id: 'n4' } },                         { data: { id: 'n5' } },                         { data: { id: 'n6' } },                         { data: { id: 'n7' } },                         { data: { id: 'n8' } },                         { data: { id: 'n9' } },                         { data: { id: 'n10' } },                         { data: { id: 'n11' } },                         { data: { id: 'n12' } },                         { data: { id: 'n13' } },                         { data: { id: 'n14' } },                         { data: { id: 'n15' } },                         { data: { id: 'n16' } }                     ],                     edges: [                         { data: { source: 'n0', target: 'n1' } },                         { data: { source: 'n1', target: 'n2' } },                         { data: { source: 'n1', target: 'n3' } },                         { data: { source: 'n4', target: 'n5' } },                         { data: { source: 'n4', target: 'n6' } },                         { data: { source: 'n6', target: 'n7' } },                         { data: { source: 'n6', target: 'n8' } },                         { data: { source: 'n8', target: 'n9' } },                         { data: { source: 'n8', target: 'n10' } },                         { data: { source: 'n11', target: 'n12' } },                         { data: { source: 'n12', target: 'n13' } },                         { data: { source: 'n13', target: 'n14' } },                         { data: { source: 'n13', target: 'n15' } },                     ]                 },             });          });     &lt;/script&gt;   &lt;body&gt;     &lt;h1&gt;cytoscape-dagre demo&lt;/h1&gt;      &lt;div id=""cy""&gt;&lt;/div&gt;  &lt;/body&gt;  {% endblock %} </code></pre>  <p>While here is the new code that is not working as I expect:</p>  <pre><code>{% extends ""base.html"" %}  {% block title %}test.com{% endblock %}  {% block page_content %}       &lt;title&gt;cytoscape-dagre.js demo&lt;/title&gt;      &lt;meta name=""viewport"" content=""width=device-width, user-scalable=no, initial-scale=1, maximum-scale=1""&gt;      &lt;script src=""http://code.jquery.com/jquery-2.0.3.min.js""&gt;&lt;/script&gt;     &lt;script src=""http://cytoscape.github.io/cytoscape.js/api/cytoscape.js-latest/cytoscape.min.js""&gt;&lt;/script&gt;      &lt;!-- for testing with local version of cytoscape.js --&gt;     &lt;!--&lt;script src=""../cytoscape.js/build/cytoscape.js""&gt;&lt;/script&gt;--&gt;      &lt;script src=""https://cdn.rawgit.com/cpettitt/dagre/v0.7.4/dist/dagre.min.js""&gt;&lt;/script&gt;     &lt;script src=""https://cdn.rawgit.com/cytoscape/cytoscape.js-dagre/1.1.2/cytoscape-dagre.js""&gt;&lt;/script&gt;      &lt;script type=""text/javascript"" src=""{{ url_for('static', filename='javascript/graph3.js') }}""&gt;&lt;/script&gt;     &lt;link rel= ""stylesheet"" type= ""text/css"" href= ""{{ url_for('static',filename='styles/style.css') }}""&gt;      &lt;body&gt;          &lt;h1&gt;cytoscape-dagre demo&lt;/h1&gt;           &lt;div id=""cy""&gt;&lt;/div&gt;      &lt;/body&gt;  {% endblock %} </code></pre>"	"<p>The solution was to make sure the flask application had a view. </p>  <p>The following code was missing from the view.py file.</p>  <pre><code>@main.route('/graph4', methods=['GET']) def graph4():     return render_template('graph4.html') </code></pre>  <p>Otherwise the html, js, and css was correct.</p>"
40566778	Python interaction with JavaScript?	javascript|jquery|python|html	2016-11-12 19:29:05.283000 UTC	"<p>On my raspberry pi, I have my HTML/CSS/JavaScript page up and running in a web browser. I have python interacting with the GPIO pins on my raspberry pi. After a certain event happens involving the GPIO pins, I want the python script to change the page in the web browser. I have already tried:</p>  <pre><code>webbrowser.open('websitehere.com', new = 0) </code></pre>  <p>Unfourtunately, that did not work for me and just opened a new window. I could just open another tab and close the previous tab but I really do not want to do that. I was wondering if there was a way to have the python script tell my javascript what happened and have my JavaScript change to one of the other html files that I have. Thanks.</p>  <p>Edit: and no. it is not missing the http or anyting. I even tried it like this(since I have the html files on my computer) and it still does not work:</p>  <pre><code>import time import webbrowser webbrowser.open('C:\Users\iJason\Documents\Smart_Calendar\Smart_HTML\Calendar.html') time.sleep(3) webbrowser.open('C:\Users\iJason\Documents\Smart_Calendar\Smart_HTML\Ads.html', new = 0) </code></pre>  <p>Let me know if there is another problem. If not, I am going to start using the solution of using Selenium. thanks!</p>  <p>Edit 2: Ok, so this is a common problem: <a href=""https://stackoverflow.com/questions/1997327/am-i-using-the-webbrowser-open-wrong-or-does-it-not-work-as-advertised-pyth"">Am I using the webbrowser.open() wrong, or does it not work as advertised? (Python)</a></p>  <p>It has to do with the way the browser is configured. But I am not sure how to change the way the browser is configured so that doing this command will work.</p>"	"<p>As Ukimiku stated, please try:</p>  <pre><code>webbrowser.open('http://websitehere.com', new = 0) </code></pre>"
40581732	Python: scrape a Javascript line	javascript|python|json|web-scraping	2016-11-14 04:06:20.863000 UTC	"<p>I want to scrape a Javascript line that contains JSON data in Python. For example:</p> <pre><code>AH4RSearch.listingsJSON = $.parseJSON('{&quot;properties&quot;:[{&quot;Price&quot;:3695,&quot;PriceFormatted&quot;:&quot;3,695&quot;,&quot;Street&quot;:&quot;9251 E Bajada Road&quot;}'); </code></pre> <p>I understand that after I can get the content of <code>$.parseJSON</code> I can use <code>json.loads</code> to store it in JSON format, but how do I get this content from the Javascript line?</p>"	"<p>For Python it is only string so use standard string functions - like <code>split()</code> or slicing <code>[start:end]</code>.</p>  <pre><code>import json  text = '''AH4RSearch.listingsJSON = $.parseJSON('{""properties"":[{""Price"":3695,""PriceFormatted"":""3,695"",""Street"":""9251 E Bajada Road""}]}')'''  data = json.loads(text[39:-2])  print(data['properties'][0]['Price']) </code></pre>"
40581732	Python: scrape a Javascript line	javascript|python|json|web-scraping	2016-11-14 04:06:20.863000 UTC	"<p>I want to scrape a Javascript line that contains JSON data in Python. For example:</p> <pre><code>AH4RSearch.listingsJSON = $.parseJSON('{&quot;properties&quot;:[{&quot;Price&quot;:3695,&quot;PriceFormatted&quot;:&quot;3,695&quot;,&quot;Street&quot;:&quot;9251 E Bajada Road&quot;}'); </code></pre> <p>I understand that after I can get the content of <code>$.parseJSON</code> I can use <code>json.loads</code> to store it in JSON format, but how do I get this content from the Javascript line?</p>"	"<p>You might need <code>re</code> to extract the data out</p>  <pre><code>import re import json your_js_string = """"""AH4RSearch.listingsJSON = $.parseJSON('{""properties"":[{""Price"":3695,""PriceFormatted"":""3,695"",""Street"":""9251 E Bajada Road""}');""""""  m = re.search(r'\$\.parseJSON\(\'(.*?)\'\);', your_js_string) print json.loads(m.group(1)) # oh, no, your json is broken </code></pre>"
40595989	How can i access Javascript objects from python side on jupyter-notebook cells?	javascript|python|jupyter-notebook|svg.js	2016-11-14 19:04:52.947000 UTC	<p>I mean i use SVGjs with %%javascript magic cells and for example create a  rectangle and then i want to access  and change  this rectangle using python code. Is there any way to do this? </p>	
40680483	JavaScript generator function times out when trying to replicate Python's itertools.combinations	javascript|python|ecmascript-6|combinations|permutation	2016-11-18 15:15:32.943000 UTC	"<p>With the help of a couple of answers here I've been able to start learning about generators and develop the following function:</p>  <pre><code>function* icombinations(arr, k) {    function* getCombinations(newArr, shift) {     if (newArr.length === k) {       yield newArr;     }      for (let i = shift; i &lt; arr.length; i++) {       yield* getCombinations([...newArr, arr[i]], i + 1);     }   }    yield* getCombinations([], 0);    return []; } </code></pre>  <p>Here is a link to repl.it: <a href=""https://repl.it/E2QW/1"" rel=""nofollow noreferrer"">https://repl.it/E2QW/1</a></p>  <p>I haven't probably grasped the concept fully since the function above times out for very long inputs as I'm trying to generate all possible combinations first and then yield each one. Would you know how I could refactor the the function so that I don't generate all combinations first?</p>  <p>Here is the description of the challenge that I'm trying to solve:</p>  <blockquote>   <p>Write a function called <code>icombinations</code> that should be a generator function with behavior similar to   Python's itertools.combinations. You are given an array <code>arr</code> of unique   items and an integer <code>k</code>.</p>      <p>You should yield each unique combination of elements in <code>arr</code> of length   <code>k</code> with no replacements until  there are no possible unique   combinations left, at which point you should terminate the generator    function. Your generator will be called with <code>next()</code>, and in some cases   it will be called until  completion.</p>      <p>Additionally It is important that you return combinations in the same   order as the original array <code>arr</code>. (see the example below)....</p>      <p>For example:</p>      <p>given an array of unique elements <code>example_arr</code> and an integer   <code>example_k</code>:</p>      <p>where <code>example_arr = ['a', 'b', 'c', 'd']</code> and <code>example_k = 2</code>;</p>      <p>calling the <code>next()</code> method of the iterator should return <code>[ 'a', 'b' ]</code>.</p>      <p>if we were to call <code>next()</code> again we should get <code>[ 'a', 'c' ]</code> and so   on...</p>      <p>so that if we got all values yielded by the generator we would have   the following:</p>      <p><code>[ 'a', 'b' ] [ 'a', 'c' ] [ 'a', 'd' ] [ 'b', 'c' ] [ 'b', 'd' ] [   'c', 'd' ]</code> again, notice the order of the above, as you will need to   replicate it in your solution.</p>      <p>Some more things to consider:</p>      <p>If your solution is timing out, it may be because you tried to   generate all possible combinations first and then yield each one.    This defeats the point of a generator. Some of input values will be   large.</p>      <p>Values in <code>arr</code> will always be unique but they may be of different types   (i.e. strings, integers, other objects).</p>      <p>The only cases in which you would not be able to produce combinations   is that in which <code>arr</code> is null or empty or has a length less than <code>k</code>. In   any of those situations you should return an empty array.</p> </blockquote>"	"<p>You might be able to get better suggestions on Code Review, but one improvement you can try is to prune some of the ""dead-end"" recursive paths. Since you know that each result must be length <code>k</code>, you should only recurse when you have enough elements left in the source array to actually complete a k-subset.</p>  <pre><code>function* icombinations(arr, k) {      function* getCombinations(newArr, shift) {         if (newArr.length === k) {             yield newArr;         }          // if what's available is &gt;= what's needed         else if (arr.length - shift &gt;= k - newArr.length) {             for (let i = shift; i &lt; arr.length; i++) {                 yield* getCombinations([...newArr, arr[i]], i + 1);             }         }     }      yield* getCombinations([], 0);      return []; } </code></pre>  <p>But without your test cases or limits on <code>arr.length</code> and <code>k</code>, we can't know if this is good enough. You mentioned that <code>arr.length</code> could be 50, which means a maximum of 126,410,606,437,752 subsets when <code>k</code> is 25. No algorithm no matter how efficient will complete that in any reasonable amount of time. Even when <code>k</code> is 5 (or equivalently, 45), you're looking at 2,118,760 combinations. </p>  <p>Another thing you could try is to pre-allocate the subset array (<code>newArr</code>) outside of the inner function and then update the array in-place prior to each recursive invocation. This avoids the need to copy <code>newArr</code> each time you want to append a value to it, but you will still need to yield a copy of <code>newArr</code> in your base case. This, however, is more of a micro-optimization compared to the branch-pruning. Try the pruning first by itself to see how much of improvement each change makes.</p>  <p>Finally, you could also switch to an iterative implementation and see if that works.</p>"
40683084	Can't decode JSON response from Javascript in Python	javascript|jquery|python|json|django	2016-11-18 17:44:51.663000 UTC	"<p>I'm trying to send a simple message using <code>JQuery.post()</code>, but it gives this error on Python :</p> <blockquote> <p>JSONDecodeError at cadastro/editPessoa/</p> <p>Expecting value: line 1 column 1 (char 0)</p> </blockquote> <p>Javascript (simplified) :</p> <pre><code>data = { &quot;pessoa&quot; : [ [&quot;1&quot;,&quot;joão&quot;,&quot;321&quot;,&quot;camarão&quot;] ] } $.post('editPessoa/', data, function(response) {     updatePessoas();   }, 'json'); </code></pre> <p>views.py :</p> <pre><code>@csrf_exempt     def editPessoa(request):     data = json.loads(request.body.decode('utf-8'))     print(data)     return HttpResponse('Done!') </code></pre> <p>The error is raised while trying to json.loads(), if I remove the <code>.decode()</code> the error happens on the print(), it raises that bytes can't be printed</p> <p>Traceback :</p> <pre><code>JSONDecodeError at /cadastro/editPessoa/ Expecting value: line 1 column 1 (char 0)  Request Method: POST Request URL: http://localhost:8000/cadastro/editPessoa/ Django Version: 1.10.3 Python Executable: C:\Users\6036794\Documents\django\djangocadastro\py35\Scripts\python.exe Python Version: 3.5.2 Python Path: ['c:\\Users\\6036794\\Documents\\django\\djangocadastro', 'C:\\Python27', 'C:\\Users\\6036794 \\Documents\\django\\djangocadastro\\py35\\Scripts\\python35.zip', 'C:\\Python35\\DLLs', 'C:\\Python35 \\lib', 'C:\\Python35', 'C:\\Users\\6036794\\Documents\\django\\djangocadastro\\py35', 'C:\\Users\\6036794 \\Documents\\django\\djangocadastro\\py35\\lib\\site-packages'] Server time: Sex, 18 Nov 2016 15:33:35 -0200 Installed Applications: ['django.contrib.admin',  'django.contrib.auth',  'django.contrib.contenttypes',  'django.contrib.sessions',  'django.contrib.messages',  'django.contrib.staticfiles',  'cadastroapp'] Installed Middleware: ['django.middleware.security.SecurityMiddleware',  'django.contrib.sessions.middleware.SessionMiddleware',  'django.middleware.common.CommonMiddleware',  'django.middleware.csrf.CsrfViewMiddleware',  'django.contrib.auth.middleware.AuthenticationMiddleware',  'django.contrib.messages.middleware.MessageMiddleware',  'django.middleware.clickjacking.XFrameOptionsMiddleware']   Traceback:    File &quot;C:\Python35\lib\json\decoder.py&quot; in raw_decode   355.             obj, end = self.scan_once(s, idx)               During handling of the above exception (0), another exception occurred:          File &quot;C:\Users\6036794\Documents\django\djangocadastro\py35\lib\site-packages\django\core\handlers\exception .py&quot; in inner   39.             response = get_response(request)  File &quot;C:\Users\6036794\Documents\django\djangocadastro\py35\lib\site-packages\django\core\handlers\base .py&quot; in _get_response   187.                 response = self.process_exception_by_middleware(e, request)  File &quot;C:\Users\6036794\Documents\django\djangocadastro\py35\lib\site-packages\django\core\handlers\base .py&quot; in _get_response   185.                 response = wrapped_callback(request, *callback_args, **callback_kwargs)  File &quot;C:\Users\6036794\Documents\django\djangocadastro\py35\lib\site-packages\django\views\decorators \csrf.py&quot; in wrapped_view   58.         return view_func(*args, **kwargs)  File &quot;c:\Users\6036794\Documents\django\djangocadastro\cadastroapp\views.py&quot; in editPessoa   19.   data = json.loads(request.body.decode('utf-8'))  File &quot;C:\Python35\lib\json\__init__.py&quot; in loads   319.         return _default_decoder.decode(s)  File &quot;C:\Python35\lib\json\decoder.py&quot; in decode   339.         obj, end = self.raw_decode(s, idx=_w(s, 0).end())  File &quot;C:\Python35\lib\json\decoder.py&quot; in raw_decode   357.             raise JSONDecodeError(&quot;Expecting value&quot;, s, err.value) from None  Exception Type: JSONDecodeError at /cadastro/editPessoa/ Exception Value: Expecting value: line 1 column 1 (char 0) Request information: USER: 6036794  GET: No GET data  POST: pessoa[0][] = 'Camarão'  FILES: No FILES data </code></pre>"	"<p>The problem is that the data needed to be stringified first :</p>  <pre><code>data = { ""pessoa"" : [ [""1"",""joão"",""321"",""camarão""] ] } $.post('editPessoa/', JSON.stringify(data), function(response) {     updatePessoas();   }, 'json'); </code></pre>  <p>I assumed that it was automatically done by <code>$.post()</code></p>"
40710739	Pass python/django variable into javascript as JSON?	javascript|jquery|python|json|django	2016-11-20 23:37:48.377000 UTC	"<p>Woking on personal project website with django 1.9 and python 3.4. I am using <a href=""http://fullcalendar.io"" rel=""nofollow noreferrer"">FullCalendar</a>. The idea is to pass a set of appointment objects into the html page containing the javascript for the calendar. But right now, I am just trying to pass a single default appointment.</p>  <p>In <strong>views.py</strong> I have the following:</p>  <pre><code>appt = json.dumps({ ""title"": ""meeting"", ""start"": ""2016-11-20""}); return render(request, 'healthnet/profile_patient.html', {'patient': patient, 'appt': appt_set}) </code></pre>  <p>In <strong>profile_patient.html</strong>:</p>  <pre><code>&lt;script&gt;      var data = jQuery.parseJSON(""{{appt}}"");      var events;     events = [];     events.push(data);       $(document).ready(function() {          $('#calendar').fullCalendar({             editable: true,             eventLimit: true, // allow ""more"" link when too many events             events: events         });     }); &lt;/script&gt; </code></pre>  <p><code>appt</code> is not getting properly parsed I believe. When the web page is loaded, the calendar does not display at all. </p>  <p>When I substitute <code>appt</code> with the direct string, it does work:</p>  <pre><code>var data = jQuery.parseJSON('{""title"": ""meeting"", ""start"": ""2016-11-20""}'); </code></pre>  <p>When I call <code>alert(""{{appt}}"");</code> i get the following:</p>  <p><img src=""https://i.stack.imgur.com/jwSAb.png"" alt=""enter image description here""></p>  <p>So there's something wrong with the way I'm using ths varibale. Any ideas?</p>"	<p>Just use the safe filter:</p>  <pre><code>var data = jQuery.parseJSON('{{appt | safe}}'); </code></pre>  <p>n.b. you can also do this</p>  <pre><code>var apptData = {{ appt | safe }}; </code></pre>
40759984	Spotfire - javascript to trigger IronPython script to be executed on report load	javascript|spotfire	2016-11-23 09:03:26.157000 UTC	"<p>I have the follwing javascript code that it triggers an IronPython script when I load the report.</p>  <p>The only issue I have is that for a reason I don't know it does it (it triggers the script) a couple of times.</p>  <p>Can some one help me? below is the script:</p>  <pre><code>var n=0;  $(function () {  function executeScript() {      if (n==0){         n=n+1;         now = new Date();         if (now.getTime()-$('#hiddenBtn input').val()&gt;10000){             $('#hiddenBtn input').val(now.getTime());             $('#hiddenBtn input').focus();             $('#hiddenBtn input').blur();         }      }  } $(document).ready(function(){executeScript()});  strong text}); </code></pre>  <p>Please, let me know if you need more information. Thanks in advance!!!</p>"	"<p>I have had similar issues with Javascript executing multiple times. Spotfire seems to instance the JS more than once, and it can cause some interesting behavior...</p>  <p>the best solution, in my opinion, only works if users are accessing the document via a link (as opposed to browsing the library). pass a configuration block to set a document property with a current timestamp, which would execute your IP script. this is the most solid implementation.</p>  <p>otherwise, you can try something like this: </p>  <pre><code>// get a reference to a container on the page with an ID ""hidden"" var $hidden = $(""#hiddenBtn input"");  // only continue if the container is empty if !($hidden.text()) {     var now = Date.now();     $hidden.text(now)            .focus()            .blur(); |} </code></pre>  <p>this is essentially the same as the code you posted, but instead of relying on the var <code>n</code>, you're counting on the input <code>#hiddenBtn &gt; input</code> being empty. there is a caveat that you'll have to ensure this field is empty before you save the document</p>  <p>one addtional solution is using a Data Function to update the document property, like @user1247722 shows in his answer here: <a href=""https://stackoverflow.com/a/40712635/4419423"">https://stackoverflow.com/a/40712635/4419423</a></p>"
40782684	why 0.1 + 0.3 = 0.4 in JavaScript and Python?	floating-point|numbers|double	2016-11-24 09:38:57.233000 UTC	"<p>I know why <code>0.1 + 0.2 !== 0.3</code>, because 0.1 cannot be represented exactly in a binary floating point representation, but why <code>0.1 + 0.3 === 0.4</code> in JavaScript? I think 0.1, 0.3 both cannot be represented exactly, why <code>0.1 + 0.3</code> will exactly equal 0.4? and I test this in C，I got <code>0.40000000000000002</code>, this result is what I want, here is my C code</p>  <pre><code>#include ""stdio.h""  int main(){  double a = 0.1 + 0.3; printf( ""%.17lf"", a );  } </code></pre>  <p>thank you every much!</p>"	
40787982	xpath javascript in python	javascript|python|html|xpath	2016-11-24 13:42:56.923000 UTC	"<p>I want to parse information on  a website and I have been doing it successfully with just pure HTML. For instance for the following code:</p>  <pre><code>&lt;div&gt;  &lt;ul&gt;   &lt;h3 This is a heading&gt; &lt;/h3&gt; </code></pre>  <p>I would use ""answ = pagehtml.xpath('//div/ul/h3'):"" and ""answ"" would be = ""This is a heading"".</p>  <p>But now I have a web page with a JavaScript that looks like this:</p>  <pre><code>&lt;script&gt; var XYZ = XYZ || {}; XYZ.contentModel = {     layout: ""no-rail"",     analytics: {         ""pageTop"": {},         ""chartbeat"": {             ""sections"": """"         },         ""branding_content_page"": ""default"",         ""branding_content_card"": [""""]     },     edition: ""Hometown"",     title: ""This is the title"",     siblings: {         ""articleList"": [{             ""uri"": ""Got-to-this-webpage.html"",             ""description"": """",             ""layout"": """"         }] </code></pre>  <p>So I would like to know how do I parse the uri link in this script? Here is what I have tried, but it has failed: answ = pagehtml.xpath('//script/XYZ/siblings/articleList/uri')</p>  <p>What would be the correct xpath to use, if any?</p>  <p>Thanks allot</p>"	"<p>There is no XPath expression to get what you want. XPath only operates on nodes of the document tree (which is the <code>script</code> element in this case).</p>  <p>So you have to get the string contents of the script element (possibly using XPath) and then manually extract the URI from it. In this case the information you are looking for is encoded in a JSON structure, so you possible can use the JSON capabilities of Python.</p>"
40795041	Scraping Javascript loaded pages using Python	python|web-scraping	2016-11-24 22:01:57.450000 UTC	"<p>I'm trying to webscrape, using Python, the comments from a BBC article: <a href=""http://www.bbc.co.uk/news/education-37750489/comments?comments_page=1&amp;initial_page_size=10&amp;filter=none&amp;sortBy=Created&amp;sortOrder=Descending#"" rel=""nofollow noreferrer"">http://www.bbc.co.uk/news/education-37750489/comments?comments_page=1&amp;initial_page_size=10&amp;filter=none&amp;sortBy=Created&amp;sortOrder=Descending#</a></p>  <p>The comments module is in Javascript, with buttons for the next pages. However, I can't find an AJAX url - there is one link from having a look on the Network console, but that doesn't work: <a href=""https://ssl.live.bbc.co.uk/modules/comments/?siteId=newscommentsmodule&amp;parentUri=http%3A%2F%2Fwww.bbc.co.uk%2Fnews%2Feducation-37750489%2Fcomments&amp;forumId=__CPS__37750489"" rel=""nofollow noreferrer"">https://ssl.live.bbc.co.uk/modules/comments/?siteId=newscommentsmodule&amp;parentUri=http%3A%2F%2Fwww.bbc.co.uk%2Fnews%2Feducation-37750489%2Fcomments&amp;forumId=__CPS__37750489</a></p>  <p>However, I want to scrape multiple pages, but when I try and change the 'page=x' in the first page, it only takes me to the first page.</p>  <p>I've thought of using Selenium/Dryscape, but I'm not sure how I can get to each of the pages to run them.</p>"	"<p>you can try the <code>copy as Curl</code> command by right clicking on the xhr request in the network section.</p>  <p>this is what i get </p>  <pre><code>curl ""https://ssl.bbc.co.uk/modules/comments/ajax/comments/?siteId=newscommentsmodule^&amp;forumId=__CPS__37750489^&amp;filter=none^&amp;sortOrder=Descending^&amp;sortBy=Created^&amp;mock=0^&amp;mockUser=^&amp;parentUri=http^%^3A^%^2F^%^2Fwww.bbc.com^%^2Fnews^%^2Feducation-37750489^%^2Fcomments^%^3Fcomments_page^%^3D1^%^26initial_page_size^%^3D10^%^26filter^%^3Dnone^%^26sortBy^%^3DCreated^%^26sortOrder^%^3DDescending^&amp;loc=en-GB^&amp;preset=responsive^&amp;initial_page_size=10^&amp;transTags=0^&amp;comments_page=4"" -H ""Origin: http://www.bbc.com"" -H ""Accept-Encoding: gzip, deflate, sdch, br"" -H ""Accept-Language: en-US,en;q=0.8"" -H ""User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.44 Safari/537.36"" -H ""Accept: application/json, text/javascript, */*; q=0.01"" -H ""Referer: http://www.bbc.com/news/education-37750489/comments?comments_page=1^&amp;initial_page_size=10^&amp;filter=none^&amp;sortBy=Created^&amp;sortOrder=Descending"" -H ""Cookie: BBC-UID=f5b82387c6a5f59cfb1e4e702165956d3c4a59fc40f0a0cc2289331f59e23c7f0Mozilla^%^2f5^%^2e0^%^20^%^28Windows^%^20NT^%^2010^%^2e0^%^3b^%^20Win64^%^3b^%^20x64^%^29^%^20AppleWebKit^%^2f537^%^2e36^%^20^%^28KHTML^%^2c^%^20like^%^20Gecko^%^29^%^20Chrome^%^2f55^%^2e0^%^2e2883^%^2e44^%^20Safari^%^2f537^%^2e36; BGUID=e50803c74685961b76a3bae761e263da9bbf269019d8d4abbed18707f72c1098; s1=208.5.385837657400859000FDD0E52985"" -H ""Connection: keep-alive"" --compressed </code></pre>  <p>Or you can use selenium to click on the pagination buttons directly</p>  <pre><code>driver.find_element_by_css_selector('li.comments-pagination-page.comments-pagination-page-{} a'.format(pageNumber)).click() </code></pre>  <p>here the <code>li.comments-pagination-page.comments-pagination-page-3</code> is the li tag for the 3rd pagination button in the page.</p>"
40806458	Simulate javascript serialization in python tests	python|unit-testing|serialization|django-forms	2016-11-25 13:45:37.877000 UTC	"<p>I have a web-service that allows the user to fill in a form, click a button, and my app checks whether it is possible to login to another server using data from the form.</p>  <p>Now I want to write a test for that - make sure that when I pass correct data my function is able to connect to the server, and that it returns the right message if it can't.  </p>  <p>What normally happens is that, after the button is clicked, the following js function is run:</p>  <pre><code>function someFunction(person_id) {     Dajaxice.someAjaxFunction(someCallback, {         'person_id': person_id,         'credentials_form': $(""#some_form"").serialize(true)     });     loading.show_loader(); } </code></pre>  <p>Later on, the ajax function calls a view function, which does the following:</p>  <pre><code>def some_python_function(person_id, credentials_form):     credentials, created = SomeCredentials.objects.get_or_create(person=person_id)     some_cred_form= SomeCredentialsForm(deserialize_form(credentials_form), instance=credentials)     if some_cred_form.is_valid():         try:             (...some_words_and_things_here...) </code></pre>  <p>Now, my problem is that while writing the test I don't call the js function, I just want to send the form to some_python_function. However, I can't do it directly:</p>  <pre><code>    form_data = {'data_1': data_1, ""data_2"": data_2, 'data_3': data_3}     form = SomeCredentialsForm(data=form_data)     self.assertEqual(some_python_function(person_id, form), (...)) </code></pre>  <p>Obviously, this doesn't work: since some_cred_form.is_valid() == False, the relevant part of the code is not being checked. I need to somehow do to my form whatever the js function does. But how do I do that?</p>"	"<p>Jquery serialize method returns just a query string. You could try to create a similar string and pass it to the function:</p>  <pre><code>form_data = 'data_1={}&amp;data_2={}&amp;data_3={}'.format(data_1, data_2, data_3) self.assertEqual(some_python_function(person_id, form_data), (...)) </code></pre>"
40859421	how to subscribe to python requests in javascript	javascript|python	2016-11-29 06:47:41.053000 UTC	"<p>I need an alternative mecahnism to kafka where my python module will publish message to a topic(as callback url) and javascript wil subscribe these messages and do processing accordingly.How can I achieve this?I need to create a messaging api(REST Api) in Javascript,I will provide api url as callbackurl to python module so that python module can send messages to this call backurl</p>"	
40876952	Bitshifts Javascript vs Python	javascript|bit-manipulation|bit-shift	2016-11-29 22:28:26.470000 UTC	"<p>I want to transfer the following python code to javascript:</p>  <pre><code>def conv_2c(val, bits):    return ((1 &lt;&lt; bits)+val)    function conv_2c(val, bits){      return ((1 &lt;&lt; bits)+val); } </code></pre>  <p>In Python <code>print(conv_2c(-944,64))</code> gives me 18446744073709550672 , while  in JS <code>console.log(conv_2c(-944,64));</code> gives me -943 . Why is there a difference?? Is this something to worry about (do the numbers really differ?) or is it a thing of how Python or JS print negative/ two's complement numbers?</p>"	
40904337	Call Python method through Javascript	javascript|python|ajax	2016-12-01 06:55:47.507000 UTC	"<p>I am trying to call a simple python method through JavaScript. But I am not able to call that method. Here is my code of Python:</p>  <pre><code>def main():     return   ""Hello from Python"" </code></pre>  <p>Here is my JS:</p>  <pre><code>&lt;script&gt; function call() {     $.ajax({         type: ""POST"",         url: ""/gadget/call.py"",         success: callbackFunc     }); }  function callbackFunc(response) {     console.log(response); } &lt;/script&gt; </code></pre>  <p>My ajax function reads the python file as text file and return the complete text of that file. It does not execute python method.</p>  <p>If someone have any idea to call a python file through JavaScript. Please help me on it.</p>  <p>Thanks</p>"	"<p>You can create a REST API (such as flask) in python, and then the javascript will call this API using ajax- and then, the flask server will execute your python code. More about flask: <a href=""http://flask.pocoo.org/"" rel=""nofollow noreferrer"">http://flask.pocoo.org/</a>. Enjoy!</p>"
40915646	Parsing Javascript with Python	regex|parsing|beautifulsoup	2016-12-01 16:27:24.497000 UTC	"<p>In one of my script I use <code>urllib2</code>and <code>BeautifulSoup</code> to parse a HTML page and read a <code>&lt;script&gt;</code> tag.</p>  <p>This is what I get :</p>  <pre><code>&lt;script&gt; var x_data = {     logged: logged,     lengthcarrousel: 2,     products : [         {             ""serial"" : ""106541823""             ... &lt;/script&gt; </code></pre>  <p>My goal is to read the JSON in the <code>x_data</code> variable and I do not know how to do it properly.  I though of :</p>  <ul> <li>Convert to string and remove the first chars to the { and same for last }</li> <li>Use Regular Expression with something like '{.*}' and take the first group</li> <li>Something else ? </li> </ul>  <p>I don't know if these are efficient and if there is some other ways to do it in a nice way.</p>  <p>Do you think a method is preferable to the other ? any method I may not be aware of ? </p>  <p>Thank you in advance for any advice.</p>  <p>EDIT : </p>  <p>Following advice I get the Regexp solution but I can't search in multiple lines despite using re.MULTILINE : </p>  <pre><code>string1 = '&lt;script&gt; var x_data = {     logged: logged,     lengthcarrousel: 2,     products : [         {                 ""serial"" : ""106541823""} ] };  &lt;/script&gt;'   p = re.compile(r'\{.*\};',re.MULTILINE); m = p.search(string1) if m:     print m.group(0) else:     print ""Error !"" </code></pre>  <p>I always got an ""Error !"".</p>  <p>EDIT2 :</p>  <p>Works well with <code>re.DOTALL</code>.</p>"	"<p>I think these methods are essentially the same in terms of elegance and performance (using <code>{.*}</code> may be slightly better because <code>.*</code> is greedy, i.e. there will be almost no backtracking, and because it seems to me more ""forgiving"" for different JS code formatting nuances). What you may be more interested in is this: <a href=""https://docs.python.org/3.6/library/json.html"" rel=""nofollow noreferrer"">https://docs.python.org/3.6/library/json.html</a>.</p>"
40915646	Parsing Javascript with Python	regex|parsing|beautifulsoup	2016-12-01 16:27:24.497000 UTC	"<p>In one of my script I use <code>urllib2</code>and <code>BeautifulSoup</code> to parse a HTML page and read a <code>&lt;script&gt;</code> tag.</p>  <p>This is what I get :</p>  <pre><code>&lt;script&gt; var x_data = {     logged: logged,     lengthcarrousel: 2,     products : [         {             ""serial"" : ""106541823""             ... &lt;/script&gt; </code></pre>  <p>My goal is to read the JSON in the <code>x_data</code> variable and I do not know how to do it properly.  I though of :</p>  <ul> <li>Convert to string and remove the first chars to the { and same for last }</li> <li>Use Regular Expression with something like '{.*}' and take the first group</li> <li>Something else ? </li> </ul>  <p>I don't know if these are efficient and if there is some other ways to do it in a nice way.</p>  <p>Do you think a method is preferable to the other ? any method I may not be aware of ? </p>  <p>Thank you in advance for any advice.</p>  <p>EDIT : </p>  <p>Following advice I get the Regexp solution but I can't search in multiple lines despite using re.MULTILINE : </p>  <pre><code>string1 = '&lt;script&gt; var x_data = {     logged: logged,     lengthcarrousel: 2,     products : [         {                 ""serial"" : ""106541823""} ] };  &lt;/script&gt;'   p = re.compile(r'\{.*\};',re.MULTILINE); m = p.search(string1) if m:     print m.group(0) else:     print ""Error !"" </code></pre>  <p>I always got an ""Error !"".</p>  <p>EDIT2 :</p>  <p>Works well with <code>re.DOTALL</code>.</p>"	"<p>If it always looks exactly like this, then you can hack a solution like the one you proposed, based on it looking exactly like this.  </p>  <p>Because programmers do everything in code, I suspect in practice it will not alway look exactly this, and then any hacky solution will be fragile and will fail at unexpected (read ""impossibly inconvenient"") moments. (Regex is known to be hacky when it comes to parsing code).</p>  <p>If you want to do this right, you will need to get a real JavaScript parser, apply it to the code fragment defined by the script tag content, to produce an AST, then search the AST for JavaScript nested structures that happen to look like JSON, and take the content of that tree, prettyprinted.</p>  <p>Even this will be fragile in the face of a programmer who assembles the JSON fragment using JavaScript assignment statements.   You can handle this by computing data flow, and discovering sets of code that happen to assemble JSON code.   This is rather a lot of work.</p>  <p>So you get to decide what the limits on your solution will be, and then accept the consequences when somebody you don't control does something random.</p>"
40943173	Is it possible to print the data from a text file to a html page via javascript or python(Flask)?	javascript|python|html	2016-12-03 01:04:00.610000 UTC	"<p>I'm getting my head around python and running it off a server (in this case Flask). Basically Im trying to print some contents of a local text file to a html page. I take in a few input values from the user (a name, email and comment) and I'm store these to a local text file line by line. At the moment I can get the latest input to print on the page (i.e the comment, and the name and email of the user) but it gets replaced everytime the form is re-submitted. I'm kind of just messing around with it at the moment (for example I read and print 5 instances of the user input from the file to the server). However I'm trying to print the name, email and comments on to the form_action.html page and keep all the previous comments along with it. As I said I can print the contents, and they show up in the cmd prompt, however could this be done via javascript perhaps so it displays on the html page, or could it be done using a different way using python. The book I'm using doesn't cover how to do it and I can't find anything online. Anyone able to cure my curiosity? If I'm not making sense please ask me and I'll be happy to elaborate. Cheers!</p> <p><strong>app.py</strong></p> <pre><code>from flask import Flask, render_template, request, url_for  # Initialize the Flask application app = Flask(__name__)  # Define a route for the default URL, which loads the form @app.route('/') def form(): return render_template('form_submit.html')  # Define a route for the action of the form, for example '/hello/' # We are also defining which type of requests this route is  # accepting: POST requests in this case @app.route('/hello/', methods=['POST']) def hello():   name=request.form['yourname']   email=request.form['youremail']   comment=request.form['yourcomment']     f = open (&quot;user+comments.txt&quot;,&quot;a&quot;)    f.write(name)   f.write(' ')   f.write(email)   f.write(' ')   f.write(comment)   f.write('\n')    f.close()    #This reads the first 5 lines and prints them to the cmd prompt   with open(&quot;user+comments.txt&quot;) as f:       i = 1       for x in range (0,5):         lines = f.readlines(i)         print(lines)         i+=1         x+=1      f.close()      return render_template('form_action.html', name=name, email=email,     comment=comment)   # Run the app :)  if __name__ == '__main__':  app.run(debug=True) </code></pre> <p><strong>form_submit.html</strong></p> <pre><code>  // This page takes in the initial information via the text boxes and           passes the information to the python file above   &lt;html&gt;  &lt;body style=&quot;background-color: #3DC247;&quot;&gt;   &lt;head&gt;  &lt;title&gt;Python&lt;/title&gt;  &lt;/head&gt;  &lt;body&gt;    &lt;div align = &quot;center&quot;&gt;   &lt;h1 style=&quot;font-family:verdana;&quot;&gt;PYTHON PAGE&lt;/h1&gt;    &lt;body&gt;     &lt;div id=&quot;container&quot;&gt;         &lt;div class=&quot;title&quot;&gt;             &lt;h3 style=&quot;font-family:verdana;&quot;&gt;Please fill in your details       below and your comment to join the discussion&lt;/h3&gt;         &lt;/div&gt;         &lt;div id=&quot;content&quot;&gt;             &lt;form method=&quot;post&quot; action=&quot;{{ url_for('hello') }}&quot;&gt;               &lt;label for=&quot;yourname&quot; style=&quot;font-family:verdana;&quot;&gt;Please    enter your name:&lt;/label&gt;               &lt;input type=&quot;text&quot; name=&quot;yourname&quot; /&gt;&lt;br /&gt;&lt;br&gt;                              &lt;label for=&quot;youremail&quot; style=&quot;font-family:verdana;&quot;&gt;Please    enter your email:&lt;/label&gt;               &lt;input type=&quot;text&quot; name=&quot;youremail&quot; /&gt;&lt;br /&gt;&lt;br&gt;                              &lt;label for=&quot;yourcomment&quot;style=&quot;font-family:verdana;&quot;&gt;Please    enter your comment:&lt;/label&gt;               &lt;input type=&quot;textarea&quot; name=&quot;yourcomment&quot; rows=&quot;4&quot; cols=&quot;50&quot;&gt;       &lt;br&gt;               &lt;input type=&quot;submit&quot; /&gt;&lt;br&gt;             &lt;/form&gt;         &lt;/div&gt;            &lt;/body&gt;   &lt;/html&gt; </code></pre> <p><strong>form_action.html</strong></p> <pre><code> // I'm trying to get the information to pass to this page. The text boxes          from the previous html page remain on this html page as I want to                    continue to add comments without having to go back to form_submit.html         each time    &lt;html&gt;    &lt;body style=&quot;background-color: #3DC247;&quot;&gt;    &lt;head&gt;   &lt;title&gt;Python&lt;/title&gt;    &lt;/head&gt;     &lt;div align = &quot;center&quot;&gt;     &lt;h1 style=&quot;font-family:verdana;&quot;&gt;PYTHON PAGE&lt;/h1&gt;      &lt;body&gt;     &lt;div id=&quot;container&quot;&gt;         &lt;div class=&quot;title&quot;&gt;             &lt;h3 style=&quot;font-family:verdana;&quot;&gt;Please fill in your details     below and your comment to join the discussion&lt;/h3&gt;         &lt;/div&gt;         &lt;div id=&quot;content&quot;&gt;             &lt;form method=&quot;post&quot; action=&quot;{{ url_for('hello') }}&quot;&gt;               &lt;label for=&quot;yourname&quot; style=&quot;font-family:verdana;&quot;&gt;Please      enter your name:&lt;/label&gt;               &lt;input type=&quot;text&quot; name=&quot;yourname&quot; /&gt;&lt;br /&gt;&lt;br&gt;                              &lt;label for=&quot;youremail&quot; style=&quot;font-family:verdana;&quot;&gt;Please      enter your email:&lt;/label&gt;               &lt;input type=&quot;text&quot; name=&quot;youremail&quot; /&gt;&lt;br /&gt;&lt;br&gt;                              &lt;label for=&quot;yourcomment&quot;style=&quot;font-family:verdana;&quot;&gt;Please       enter your comment:&lt;/label&gt;               &lt;input type=&quot;textarea&quot; name=&quot;yourcomment&quot; rows=&quot;4&quot; cols=&quot;50&quot;&gt;         &lt;br&gt;               &lt;input type=&quot;submit&quot; /&gt;&lt;br&gt;             &lt;/form&gt;     // I included this bit as an original attempt to post a single comment            to the page(it will display while still passing the info to the text          file via python)     &lt;body&gt;     &lt;div id=&quot;container&quot;&gt;         &lt;div class=&quot;title&quot;&gt;             &lt;p&gt;&lt;/p&gt;         &lt;/div&gt;         &lt;div id=&quot;content&quot;&gt;             &lt;strong&gt;{{name}} ({{email}}):&lt;/strong&gt;&lt;br&gt;             {{comment}}         &lt;/div&gt;          &lt;/div&gt;       &lt;/body&gt;       &lt;/html&gt; </code></pre>"	"<p>In your GET route ""(""/"")"" You would need to read all the comments from the file, then do a render_template and pass these to the form_submit template. </p>  <p>In the form_submit template you would then loop through these comments and render the html for each of them in that loop.</p>  <p>I'm not that familiar with how flask does things but this seems to be the most logical way in a templated web app.</p>  <p>There is no need for two templates here, actually. In the POST route ('/hello') you should redirect it back to root ""(""/"")"" and let that handle the rendering again.</p>  <p>Additionally, I would recommend not having to different routes for, essentially, the same resource. ""/"" Could accept BOTH the initial GET, and then the POST. But only do this at the end...</p>"
40943173	Is it possible to print the data from a text file to a html page via javascript or python(Flask)?	javascript|python|html	2016-12-03 01:04:00.610000 UTC	"<p>I'm getting my head around python and running it off a server (in this case Flask). Basically Im trying to print some contents of a local text file to a html page. I take in a few input values from the user (a name, email and comment) and I'm store these to a local text file line by line. At the moment I can get the latest input to print on the page (i.e the comment, and the name and email of the user) but it gets replaced everytime the form is re-submitted. I'm kind of just messing around with it at the moment (for example I read and print 5 instances of the user input from the file to the server). However I'm trying to print the name, email and comments on to the form_action.html page and keep all the previous comments along with it. As I said I can print the contents, and they show up in the cmd prompt, however could this be done via javascript perhaps so it displays on the html page, or could it be done using a different way using python. The book I'm using doesn't cover how to do it and I can't find anything online. Anyone able to cure my curiosity? If I'm not making sense please ask me and I'll be happy to elaborate. Cheers!</p> <p><strong>app.py</strong></p> <pre><code>from flask import Flask, render_template, request, url_for  # Initialize the Flask application app = Flask(__name__)  # Define a route for the default URL, which loads the form @app.route('/') def form(): return render_template('form_submit.html')  # Define a route for the action of the form, for example '/hello/' # We are also defining which type of requests this route is  # accepting: POST requests in this case @app.route('/hello/', methods=['POST']) def hello():   name=request.form['yourname']   email=request.form['youremail']   comment=request.form['yourcomment']     f = open (&quot;user+comments.txt&quot;,&quot;a&quot;)    f.write(name)   f.write(' ')   f.write(email)   f.write(' ')   f.write(comment)   f.write('\n')    f.close()    #This reads the first 5 lines and prints them to the cmd prompt   with open(&quot;user+comments.txt&quot;) as f:       i = 1       for x in range (0,5):         lines = f.readlines(i)         print(lines)         i+=1         x+=1      f.close()      return render_template('form_action.html', name=name, email=email,     comment=comment)   # Run the app :)  if __name__ == '__main__':  app.run(debug=True) </code></pre> <p><strong>form_submit.html</strong></p> <pre><code>  // This page takes in the initial information via the text boxes and           passes the information to the python file above   &lt;html&gt;  &lt;body style=&quot;background-color: #3DC247;&quot;&gt;   &lt;head&gt;  &lt;title&gt;Python&lt;/title&gt;  &lt;/head&gt;  &lt;body&gt;    &lt;div align = &quot;center&quot;&gt;   &lt;h1 style=&quot;font-family:verdana;&quot;&gt;PYTHON PAGE&lt;/h1&gt;    &lt;body&gt;     &lt;div id=&quot;container&quot;&gt;         &lt;div class=&quot;title&quot;&gt;             &lt;h3 style=&quot;font-family:verdana;&quot;&gt;Please fill in your details       below and your comment to join the discussion&lt;/h3&gt;         &lt;/div&gt;         &lt;div id=&quot;content&quot;&gt;             &lt;form method=&quot;post&quot; action=&quot;{{ url_for('hello') }}&quot;&gt;               &lt;label for=&quot;yourname&quot; style=&quot;font-family:verdana;&quot;&gt;Please    enter your name:&lt;/label&gt;               &lt;input type=&quot;text&quot; name=&quot;yourname&quot; /&gt;&lt;br /&gt;&lt;br&gt;                              &lt;label for=&quot;youremail&quot; style=&quot;font-family:verdana;&quot;&gt;Please    enter your email:&lt;/label&gt;               &lt;input type=&quot;text&quot; name=&quot;youremail&quot; /&gt;&lt;br /&gt;&lt;br&gt;                              &lt;label for=&quot;yourcomment&quot;style=&quot;font-family:verdana;&quot;&gt;Please    enter your comment:&lt;/label&gt;               &lt;input type=&quot;textarea&quot; name=&quot;yourcomment&quot; rows=&quot;4&quot; cols=&quot;50&quot;&gt;       &lt;br&gt;               &lt;input type=&quot;submit&quot; /&gt;&lt;br&gt;             &lt;/form&gt;         &lt;/div&gt;            &lt;/body&gt;   &lt;/html&gt; </code></pre> <p><strong>form_action.html</strong></p> <pre><code> // I'm trying to get the information to pass to this page. The text boxes          from the previous html page remain on this html page as I want to                    continue to add comments without having to go back to form_submit.html         each time    &lt;html&gt;    &lt;body style=&quot;background-color: #3DC247;&quot;&gt;    &lt;head&gt;   &lt;title&gt;Python&lt;/title&gt;    &lt;/head&gt;     &lt;div align = &quot;center&quot;&gt;     &lt;h1 style=&quot;font-family:verdana;&quot;&gt;PYTHON PAGE&lt;/h1&gt;      &lt;body&gt;     &lt;div id=&quot;container&quot;&gt;         &lt;div class=&quot;title&quot;&gt;             &lt;h3 style=&quot;font-family:verdana;&quot;&gt;Please fill in your details     below and your comment to join the discussion&lt;/h3&gt;         &lt;/div&gt;         &lt;div id=&quot;content&quot;&gt;             &lt;form method=&quot;post&quot; action=&quot;{{ url_for('hello') }}&quot;&gt;               &lt;label for=&quot;yourname&quot; style=&quot;font-family:verdana;&quot;&gt;Please      enter your name:&lt;/label&gt;               &lt;input type=&quot;text&quot; name=&quot;yourname&quot; /&gt;&lt;br /&gt;&lt;br&gt;                              &lt;label for=&quot;youremail&quot; style=&quot;font-family:verdana;&quot;&gt;Please      enter your email:&lt;/label&gt;               &lt;input type=&quot;text&quot; name=&quot;youremail&quot; /&gt;&lt;br /&gt;&lt;br&gt;                              &lt;label for=&quot;yourcomment&quot;style=&quot;font-family:verdana;&quot;&gt;Please       enter your comment:&lt;/label&gt;               &lt;input type=&quot;textarea&quot; name=&quot;yourcomment&quot; rows=&quot;4&quot; cols=&quot;50&quot;&gt;         &lt;br&gt;               &lt;input type=&quot;submit&quot; /&gt;&lt;br&gt;             &lt;/form&gt;     // I included this bit as an original attempt to post a single comment            to the page(it will display while still passing the info to the text          file via python)     &lt;body&gt;     &lt;div id=&quot;container&quot;&gt;         &lt;div class=&quot;title&quot;&gt;             &lt;p&gt;&lt;/p&gt;         &lt;/div&gt;         &lt;div id=&quot;content&quot;&gt;             &lt;strong&gt;{{name}} ({{email}}):&lt;/strong&gt;&lt;br&gt;             {{comment}}         &lt;/div&gt;          &lt;/div&gt;       &lt;/body&gt;       &lt;/html&gt; </code></pre>"	"<p>you are reading and writing to file ok, but in the template you are getting only the last name or entry, since you are not storing what was read from the file in a list. Try something in a way of this:</p>  <pre><code>f = open(""user+comments.txt"", ""a"")  f.write(name + ':' + email + ':' + comment) f.write('\n') f.close()  details = [] # This reads the the first 5 lines and prints them to the cmd prompt with open(""user+comments.txt"") as f:     i = 1     for x in range(0, 5):         lines = f.readlines(i)         print(lines)         i += 1         x += 1         try:             details.append(lines[0].split(':'))         except:             'List cannot be populated' f.close()  return render_template('form_action.html', details=details) # return details list containing user, email, comment </code></pre>  <p>I have added ':' as a splitter between name, email and comment, so it's easier to split entries</p>  <p>'Details' returned now contain everything needed for the template.</p>  <p>But inside the template, you'll need a loop as well, in Flask it's something like:</p>  <pre><code>{% for user, email, comment in details %}                         User: {{ user }} &lt;br/&gt;                         Email: {{ email }} &lt;br/&gt;                         Comment: {{ comment }} &lt;br/&gt;                     {% endfor %} </code></pre>  <p><a href=""https://i.stack.imgur.com/CqC9F.jpg"" rel=""nofollow noreferrer"">and the screenshot from your html output</a></p>  <p>You'll need to reverse the entries as well, so you can display last 5, hope it helps!</p>"
40954827	Retrieve Python variable in JavaScript	javascript|python|parsing|multiple-languages	2016-12-04 02:47:40.727000 UTC	"<p>Is there some way I can retrieve a variable that was created using a Python script and use it in a JavaScript script?</p>  <p>For example, I parse an XML using Python to give me an int:</p>  <pre><code>parse code parse code parse code i = 3 </code></pre>  <p>Then in my JavaScript, I can use that variable ""i"" for some function:</p>  <pre><code>code for my function r = 30 / i  </code></pre>  <p>Then the r value is equal to 10</p>"	"<p>Not directly as they are separate processes usually on separate computers that do not share memory or state. You didn't give much context in your question, so I am going to assume you are running python in a webserver and outputting HTML with JS either in the html or linked as an external source.</p>  <p>If this is the case you have two options.</p>  <ol> <li>Dynamically generate your JS and include it in the output of the python script (HTML response)</li> </ol>  <p>One way of doing this is to load the Javascript in your python script via the open() function. Then prepend a string to this that is valid javascript code and define a variable or JSON object.</p>  <p>Let's say you have this javascript file:</p>  <p>javascript.js</p>  <pre><code>alert(my_js_data[""field1""]); alert(my_js_data[""field2""]); </code></pre>  <p>Here is your python script:</p>  <pre><code>import json  # define your data you want in your javascript variable my_data = {'field1': 'string value', 'field2': 100}  # open an existing script that is ready to use the my_js_data variable # we are about to generate js = open('javascript.js', 'r')  # dynamically generate javascript code javascript_out = ""var my_js_data = JSON.parse('{}');"".format(json.dumps(my_data)) javascript_out += js.read() </code></pre>  <p>Now, your javascript_out variable in python is a string that looks like this:</p>  <pre><code>var my_js_data = JSON.parse('{""field1"": ""string value"", ""field2"": 100}');  alert(my_js_data[""field1""]); alert(my_js_data[""field2""]); </code></pre>  <p>Without having more context, I can't tell you exactly what to do with the javascript_out variable, but you need to include it at the appropriate spot in your HTML.</p>  <p>Note that the javascript.js file will not work without the python script because the my_js_data variable will not be defined.</p>  <ol start=""2""> <li>Have your Javascript make another HTTP (ajax) request to your server which will then return a JSON string with your data.</li> </ol>"
40964751	"Test websocket app on iPhone, Python Flask-SocketIO and Javascript"	javascript|python|iphone|flask|flask-socketio	2016-12-04 23:01:38.423000 UTC	"<p>My app, Python/Flask and vanilla Javascript, is running just fine on my Mac's browsers and I have previously also been able, making sure I'm on the right network, to test my app on Safari on my iPhone 6. I did this by pointing my mobile browser to the IP given by ifconfig on my Mac and correct port. However, after adding Flask-SocketIO, which should allow for Websocket support or atleast long polling, I am no longer able to test my app on my iPhone. All is still fine on Macs browsers but all I get on my iPhone is ""Safari could not open the page..."".</p>  <p>My app is served over port 5000 but Ive also tried over 80 without any success. I've cleared cache and cookies as well, of course.</p>  <p>Has anyone experienced something similar or have any idea what is going on? </p>"	"<p>Mobile Safari needs a Content-Security-Policy meta tag.  See more at <a href=""https://developers.google.com/web/fundamentals/security/csp/"" rel=""nofollow noreferrer"">https://developers.google.com/web/fundamentals/security/csp/</a></p>"
40971304	Unicode: convert Javascript escape unicode to Python escape unicode	javascript|python-3.x|unicode|emoji	2016-12-05 09:46:14.920000 UTC	"<p>The unicode of <em>thumbs up</em> <code></code> is escaped as <code>\ud83d\udc4d</code> and <code>\U0001f44d</code> in Javascript and Python separately (reference: <a href=""http://www.charbase.com/1f44d-unicode-thumbs-up-sign"" rel=""nofollow noreferrer"">http://www.charbase.com/1f44d-unicode-thumbs-up-sign</a>)</p>  <p>Here's the scenario:</p>  <p>I receive  as <code>\ud83d\udc4d</code> from the front-end, and now I want to print it out at the server-side, how can I achieve that?</p>  <pre><code>&gt;&gt;&gt; print('\ud83d\udc4d') UnicodeEncodeError: 'utf-8' codec can't encode character '\ud83d' in position 0: surrogates not allowed  &gt;&gt;&gt; print('\U0001f44d')  </code></pre>  <p>To be more precise, I want to save the data into MongoDB by using <code>pymongo</code></p>  <pre><code>&gt;&gt;&gt; from pymongo import MongoClient &gt;&gt;&gt; MongoClient().db.collection.insert({'thumbs_up': '\ud83d\udc4d'}) UnicodeEncodeError: 'utf-8' codec can't encode character '\ud83d' in position 0: surrogates not allowed </code></pre>  <p>However, everything works fine if I convert it into <code>\U0001f44d</code></p>"	
40971820	Python with Scrapy and Selenium get JavaScript generate content	javascript|python|html|selenium|scrapy	2016-12-05 10:13:53.617000 UTC	"<p>I'm using <code>Python</code> with <code>Selenium</code> and <code>Firefox</code> to get some content. The web site <code>HTML</code> is following:</p>  <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-html lang-html prettyprint-override""><code>&lt;html&gt; &lt;meta http-equiv=""X-UA-Compatible"" content=""IE=EmulateIE8""&gt;  &lt;body leftmargin=""0"" topmargin=""0"" rightmargin=""0"" bottommargin=""0"" marginwidth=""0"" marginheight=""0"" onResize=""resize();"" bgcolor=""#ffffff""&gt;     &lt;iframe id=""iframe"" align=""center"" width=""100%"" height=""100%"" frameborder=""0"" marginWidth=""0"" marginHeight=""0"" src="""" style=""margin-top:1px;margin-left:1px;""&gt;&lt;/iframe&gt; &lt;/body&gt; &lt;script&gt;     var eventTime = new Date();      function activeEvent() {         eventTime = new Date();     }      var height = 0;     var width = 0;     resize();      function setTitle(message) {         document.title = message;     }      function resize() {         height = document.body.clientHeight - 2;         width = document.body.clientWidth - 2;         if (height &lt; 480) height = 480;         if (width &lt; 640) width = 640;         document.getElementById(""iframe"").height = height;         document.getElementById(""iframe"").width = width;     }     setInterval(""resize()"", 1000);     document.getElementById(""iframe"").src = ""http://xxxxxx.com:80/lhscm/framework/mainform/navui/nav3mainform.do?height="" + height + ""&amp;width="" + width; &lt;/script&gt;  &lt;/html&gt;</code></pre> </div> </div> </p>  <p>But using Selenium  <code>driver.page_source</code> can't get the <code>src</code> link generated <code>HTML</code>. <br/>So, how can I get the content ?</p>"	"<p>The body of your page seem to be completely located inside an <code>iframe</code>, so to get it you should switch to this frame. Try following:</p>  <pre><code>driver.switch_to_frame('iframe') source = driver.page_source driver.switch_to_default_content() </code></pre>"
40978498	Extract these JavaScript values using python	python|regex|beautifulsoup	2016-12-05 16:11:05.323000 UTC	"<pre><code>&lt;script type=""text/javascript""&gt; var playerInstance = jwplayer(""myElement""); playerInstance.setup({     file: ""http://www.watch.org/us/hello.m3u8"",     image: ""noimage"",     width: 728,     height: 400,     autostart: true,     title: 'hello',     description: 'nodetail' }); &lt;/script&gt; </code></pre>  <p>This is the thing that get when parsing website</p>  <pre><code>url = url headers = {""User-Agent"": ""Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.95 Safari/537.36""} response = requests.get(url, headers=headers) soup = BeautifulSoup(response.text, 'html5lib') script = str(soup.find_all(""script"")[-1])  pattern1 = re.compile(""(\w+): '(.*?)'"") fields1 = dict(re.findall(pattern1, script))  pattern2 = re.compile(""(\w+): (.*?)"") fields2 = dict(re.findall(pattern2, script))  findfile = fields1['file'] </code></pre>  <p>This is the thing I'm trying. But cannot get that file value :(</p>  <h2>Any help</h2>  <pre><code>m = re.search(""file: \""([^\""]+)\"""", script) print m.group(1) </code></pre>  <p>it worked with this. Thanks Iluvatar</p>  <p>One more help need</p>    <pre><code>      &lt;script type=""text/javascript""&gt;jwplayer.key=""6RfMdMqZkkH88h026pcTaaEtxNCWrhiF6ACoxKXjjiI="";&lt;/script&gt;       &lt;div id=""mediaplayer_wrapper"" style=""position: relative; width: 468px; height: 375px;""&gt;&lt;object type=""application/x-shockwave-flash"" data=""http://www.teledunet.com/player.swf?id0=82895116945100"" width=""880"" height=""500"" bgcolor=""#000000"" id=""mediaplayer_Player"" name=""playlist_Player"" tabindex=""0""&gt;&lt;param name=""allowfullscreen"" value=""true""&gt;&lt;param name=""allowscriptaccess"" value=""always""&gt;&lt;param name=""seamlesstabbing"" value=""true""&gt;&lt;param name=""wmode"" value=""opaque""&gt;&lt;/object&gt;&lt;div id=""mediaplayer_jwpsrv"" style=""position: absolute; top: 0px; z-index: 10;""&gt;&lt;/div&gt;&lt;/div&gt;       &lt;script type=""text/javascript""&gt;                   var iOS = (navigator.userAgent.match(/(iPad|iPhone|iPod)/i) ? true : false);                   if (iOS ==false) {                     jwplayer(""mediaplayer_Player"").setup({                       file: ""rtmp://hello.hello.net/hello-live/hello_eng_high"",                       width: ""728"",                       height: ""400"",                       primary: ""flash"",                       title: ""hello"",                       stretching:"""",                       image: ""noimage"",                       autostart: ""true""                     });                   };          &lt;/script&gt; </code></pre>  <p>Unable to get this one. WHen trying that code it shows</p>  <pre><code>print m.group(1) AttributeError: 'NoneType' object has no attribute 'group' </code></pre>  <hr>  <p>It also fixed by</p>  <pre><code>script = str(soup.find_all(""script"")[0]) </code></pre>  <p>this... Thanks....... :)</p>"	"<p>Regexes are always an option.</p>  <pre><code>m = re.search(""file: \""([^\""]+)\"""", soup) print m.group(1) </code></pre>"
40980402	"Compressed with pako(zlib in javascript), decompressing with zlib(python) not working"	javascript|python|unicode|utf-8|zlib	2016-12-05 17:57:49.067000 UTC	"<p>The code that does the compression in javascript using pako(<a href=""https://github.com/nodeca/pako"" rel=""nofollow noreferrer"">https://github.com/nodeca/pako</a>)<a href=""https://github.com/nodeca/pako"" rel=""nofollow noreferrer"">Pako</a>. It compresses string 't'</p>  <pre><code>var compressedString = pako.gzip('t', {level: 4, to: 'string'})); $.ajax('/decompress', {string: compressedString}) </code></pre>  <p>The code at /decompress that does the decompression</p>  <pre><code>from cgi import parse_qs, escape import json import zlib def application(environ, start_response):     status = '200 OK'     try:         request_body_size = int(environ.get('CONTENT_LENGTH', 0))     except (ValueError):         request_body_size = 0     request_body = environ['wsgi.input'].read(request_body_size)     d = parse_qs(request_body)      response_headers = [('Content-type', 'text/plain')]     start_response(status, response_headers)     inputString = d.get('string')[0]     # Use same wbits(=31) as used by pako     decompressed = zlib.decompress(inputString, 31);     return 'done' </code></pre>  <p>Doing the decompression throws following error. The error occurs for zlib.decompress line.</p>  <blockquote>   <p>error: Error -3 while decompressing data: incorrect header check</p> </blockquote>  <p>I also tried encoding the inputString(</p>  <blockquote>   <p>inputString.encode('utf-8')</p> </blockquote>  <p>) but it also throws the error.</p>"	"<pre><code>to: 'string' </code></pre>  <p>This option smuggles the output byte sequence into a JS (Unicode) <code>String</code>, by mapping each byte to the character with the same number. (This is equivalent to decoding using the ISO-8859-1 encoding.)</p>  <pre><code>$.ajax('/decompress', {string: compressedString}) </code></pre>  <p>XMLHttpRequest needs to encode the (Unicode) string value back to a byte sequence to go (URL-encoded) over the network. The encoding it uses is UTF-8, not ISO-8859-1, so the sequence of bytes on the network won't be the same sequence of bytes that came out of the GZip compressor.</p>  <p>You can undo this process at the Python end by re-encoding after the URL-decode step:</p>  <pre><code>d = parse_qs(request_body).decode('utf-8').encode('iso-8859-1') </code></pre>  <p>Now you should have the same sequence of bytes that came out of the compressor.</p>  <p>Sending bytes as UTF-8-encoded codepoints, and URL-encoding the non-ASCII bytes out of that, will together bloat the network traffic to about four times as much as the raw bytes would take up, which rather undoes the good work of the compression.</p>  <p>If you just post the data string on its own as a request body to the Python script, you could lose the URL-encoding and then your request would be only(!) about 50% more than the raw compressed data. To do any better than that you would need to start looking at sending the raw bytes directly <a href=""https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/Sending_and_Receiving_Binary_Data"" rel=""noreferrer"">as a ByteArray</a>, or perhaps using multipart <a href=""https://developer.mozilla.org/en-US/docs/Web/API/FormData"" rel=""noreferrer"">form-data</a>. Either way there are browser compatibility problems.</p>"
41007598	javascript protocol buffer decode data from python server failed	javascript|python|protocol-buffers|basehttpserver	2016-12-07 00:50:18.613000 UTC	"<p>I am using javascript as client and a python as server.</p>  <p>I need to send/receive in between them using protocol buffer.</p>  <p>My proto looks like this :</p>  <pre><code>message CMsgBase {     required CMsgHead msghead           = 1;     optional bytes msgbody              = 2; }  message CMsgHead {     required int32 msgtype                = 1;     required int32 msgcode                = 2; } </code></pre>  <p>I am using protobuf.js in javascript and is sending the data to server using XMLHttpRequest with a POST method :</p>  <pre><code>xhr.send(pbMessage.encodeAB()); </code></pre>  <p>The server side can receive this message and decode it successfully:</p>  <h1>BaseHTTPServer</h1>  <pre><code>def do_POST(self):     pbMessage = self.rfile.read(length)      # ... </code></pre>  <p>The problem is that I can not decode the data in javascript side received from the server side.</p>  <p>Here is how I send the data to client from server :</p>  <pre><code>pbMessageReturn = CMsgBase() # ...... self.send_response(200) self.end_headers()  """"""Serializes the protocol message to a binary string.  Returns:   A binary string representation of the message if all of the required   fields in the message are set (i.e. the message is initialized). """"""  self.wfile.write(pbMessageReturn.SerializeToString()) </code></pre>  <p>And here is the result of print(pbMessageReturn) in server side :</p>  <pre><code>msghead {   msgtype: 10006   msgcode: 1 } msgbody: ""\n\014192.168.1.16"" </code></pre>  <p>Everything seem s to be fine.</p>  <p>And here is how I decode the message from server in javascript:</p>  <pre><code>xhr.onreadystatechange = function() {     if (xhr.readyState == 4) {         var result = xhr.responseText;         var recvMessage = CMsgBase.decode(result, ""utf8"");     } }; </code></pre>  <p>And I am having an error:</p>  <pre><code>protobuf.js:2335 Uncaught Error: Missing at least one required field for Message .CMsgBase: msghead(…) </code></pre>  <p>BTW, if I try to send the back the data without serialize it:</p>  <pre><code>self.wfile.write(pbMessageReturn) </code></pre>  <p>The response I get in javascript is :</p>  <pre><code>console.log(xhr.responseText);  msghead {   msgtype: 10006   msgcode: 1 } msgbody: ""\n\014192.168.1.16"" </code></pre>  <p>I am really not sure if the error is in the server side or the client side.</p>  <p>Any advice will be appreciated, thanks :)</p>"	
41015721	Submitting time from Javascript to Python Backend	javascript|python|datetime|timezone	2016-12-07 11:01:12.667000 UTC	"<p>I have a form which sends a date object from javascript to python backend. The date is entered in <code>GMT +0530</code>, but in python, it gets parsed into <code>GMT +0000</code>.</p>  <p>The following are the javascript logs:</p>  <pre><code>&gt; $scope.my_date.getTime() &lt; 1480617000000 &gt; $scope.my_date &lt; Fri Dec 02 2016 00:00:00 GMT+0530 (IST) </code></pre>  <p>So, the above date gets parsed into <code>Thur Dec 01 2016 18:30:00 GMT+0000</code>.</p>  <p>How can I send the time-zone of the country where the form was filled so that I can use that timezone to convert the time from <code>Dec 01</code> to <code>Dec 02</code>?</p>  <p>I can send the offset in hours (to the python) by the following method:</p>  <pre><code>&gt; $scope.my_date.getTimezoneOffset()/60 &lt; -5.5 </code></pre>  <p>But, Python's <a href=""https://pypi.python.org/pypi/pytz/"" rel=""nofollow noreferrer"">pytz</a> understand's timezone in <code>""Asia/Kolkata""</code> format, not the <code>-5.5</code> format.</p>  <p>I can adjust the date with <code>-5.5</code> manually, but I'm looking for a clean solution.</p>"	<p>I used the following method to get around the above problem.</p>  <p>I changed the time in the JS itself before sending it to the server.</p>  <pre><code>($scope.my_date.getTime()/1000) - ($scope.my_date.getTimezoneOffset()*60) </code></pre>
41015721	Submitting time from Javascript to Python Backend	javascript|python|datetime|timezone	2016-12-07 11:01:12.667000 UTC	"<p>I have a form which sends a date object from javascript to python backend. The date is entered in <code>GMT +0530</code>, but in python, it gets parsed into <code>GMT +0000</code>.</p>  <p>The following are the javascript logs:</p>  <pre><code>&gt; $scope.my_date.getTime() &lt; 1480617000000 &gt; $scope.my_date &lt; Fri Dec 02 2016 00:00:00 GMT+0530 (IST) </code></pre>  <p>So, the above date gets parsed into <code>Thur Dec 01 2016 18:30:00 GMT+0000</code>.</p>  <p>How can I send the time-zone of the country where the form was filled so that I can use that timezone to convert the time from <code>Dec 01</code> to <code>Dec 02</code>?</p>  <p>I can send the offset in hours (to the python) by the following method:</p>  <pre><code>&gt; $scope.my_date.getTimezoneOffset()/60 &lt; -5.5 </code></pre>  <p>But, Python's <a href=""https://pypi.python.org/pypi/pytz/"" rel=""nofollow noreferrer"">pytz</a> understand's timezone in <code>""Asia/Kolkata""</code> format, not the <code>-5.5</code> format.</p>  <p>I can adjust the date with <code>-5.5</code> manually, but I'm looking for a clean solution.</p>"	"<p>Submit with <code>Math.floor($scope.my_date.getTime()/1000)</code>, and on the python side just read the unix timestamp.</p>  <p>To explain: <code>getTime()</code> returns a unix time stamp with milliseconds, or the number of miliseconds since:</p>  <blockquote>   <p>1 January 1970 00:00:00 <strong>UTC</strong></p> </blockquote>  <p>I've bolded the last bit because it's important. It doesn't matter what timezone you're in when you create a unix time stamp, it's always UTC. Every programming language and tool that deals with unix time stamps properly will read in the time stamp as UTC, and convert internally into the local/correct timezone.</p>  <p>So don't complicate things with trying to parse date strings - just use the time stamp - it's universal.</p>  <p>The only gotcha is the conversion (the <code>/1000</code> with a <code>Math.floor</code>) to remove the milliseconds.</p>"
41035067	Extract JSON data from Javascript response using python	javascript|python|json|extract	2016-12-08 08:38:47.000000 UTC	"<p>In scraping a website, I am getting given javascript code as a response from the server.</p>  <pre><code>document.write(""&lt;script src='/src/one/data.cached.js?ver=9153'&gt;&lt;/script&gt;""); amorphic.setApplication('one'); amorphic.setSchema(   {     ""Address"": {""customer"": 1},     ""Person"": {""customer"": 1},     ""Phone"": {""customer"": 1}   } ); </code></pre>  <hr>  <p>So, how can I extract this json data from the response using python?</p>  <pre><code>  {     ""Address"": {""customer"": 1},     ""Person"": {""customer"": 1},     ""Phone"": {""customer"": 1}   } </code></pre>"	"<p>Finally extracted the required data from the response using Regular expression operations - <a href=""https://docs.python.org/2/library/re.html"" rel=""nofollow noreferrer""><code>re package</code></a>.</p>  <p><em>Seems like this is the only way to extract json data from javascript response.</em></p>  <p>Heartily thanks to <a href=""https://stackoverflow.com/users/5702489/prashant-puri"">Prashant Puri</a> and <a href=""https://stackoverflow.com/users/1491895/barmar"">Barmar</a> for their quick and great help.</p>"
41038782	Discrepant results between XOR operation in Javascript and Python	javascript|python|math|operators|xor	2016-12-08 11:48:31.683000 UTC	"<p>I'm porting a long, ugly function from JS to Python that basically calculates some kind of hash string given some input parameters. After porting and adapting the code, did some testing, and (suprise surprise), I don't get the same result.</p>  <p>I did some debugging and got to the line that starts to mess up everything, turns out to be a XOR operation. So, long story short, I have isolated a simple example which shows how with the same values, a different result is obtained.</p>  <p>This is JS code:</p>  <pre><code>hex_str = ""0xA867DF55"" crc = -1349196347 new_crc = (crc &gt;&gt; 8) ^ hex_str //new_crc == 1472744368 </code></pre>  <p>This is the same code in Python:</p>  <pre><code>hex_str = ""0xA867DF55"" crc = -1349196347 new_crc = (crc &gt;&gt; 8) ^ int(hex_str, 16) //new_crc == -2822222928 </code></pre>  <p>The only difference is that hex_str gets explicitly converted to an integer in Python.</p>  <p>In the actual code, this calculation runs within a for loop. hex_str and crc get updated on each iteration. On the first few iterations everything works fine in python, but when hex_str and crc get the values shown above, everything starts to mess up.</p>"	"<p>The difference is in how signed numbers are treated.  Python treats integers to have arbitrary bit length in all contexts.  For bit manipulations, a negative number is treated to have ""enough"" leading one bits for any purpose, so XORing a negative number with a positive one will always result in a negative number.  In JavaScript on the other hand, integers in bit operations are treated as signed 32 bit numbers, so the result may be different.</p>  <p>The CRC32 is computed using 32 bit integers.  To simulate the behaviour in Python, you can limit all operations to 32 bits by taking the lower 32 bits of any result:</p>  <pre><code>&gt;&gt;&gt; -2822222928 &amp; (2 ** 32 - 1) 1472744368 </code></pre>  <p>or applied to your code</p>  <pre><code>hex_str = ""0xA867DF55"" crc = -1349196347 new_crc = ((crc &gt;&gt; 8) ^ int(hex_str, 16)) &amp; (2 ** 32 - 1) </code></pre>"
41081816	JavaScript gets null response or empty responseXML from Python SimpleXMLRPCServer	javascript|python|xmlhttprequest|xml-rpc|simplexmlrpcserver	2016-12-11 00:32:24.057000 UTC	"<p>I found the answer to this question. It is resolved.</p>  <p><strong>Narrative</strong>: I am accessing a Python API, a set of methodCalls on top of SimpleXMLRPCServer. Server responds to browser GET request with a html page, ""web_interface.html"". The HTML page is a very simple script that sends a XHR POST request of xml params to the XMLRPC server. Server responds to XHR POST with headers but empty document. Server responds to cURL with correct data. Why is JavaScript not getting any readable data in response from server?</p>  <hr>  <h2>| web_interface.html |</h2>  <pre><code>&lt;!DOCTYPE html&gt; &lt;html&gt; &lt;head&gt;  &lt;script&gt;  var xrequest = '&lt;?xml version=""1.0?""&gt;&lt;methodCall&gt;&lt;methodName&gt;helloWorld&lt;methodName&gt;&lt;params&gt;&lt;param&gt;&lt;firstWord&gt;&lt;string&gt;hello&lt;/string&gt;&lt;firstWord&gt;&lt;/param&gt;&lt;param&gt;&lt;secondWord&gt;&lt;string&gt;world&lt;/string&gt;&lt;/secondWord&gt;&lt;/param&gt;&lt;/params&gt;&lt;/methodCall&gt;';  function hello() { var xhr = new XMLHttpRequest(); xhr.onreadystatechange = function() {     if (this.readyState == XMLHttpRequest.DONE) {         alert(this.responseText);         alert(this.status);         alert(this.response);     } } xhr.open('POST', '/', true); xhr.setRequestHeader(""Authorization"", ""Basic "" + ""aGVsbG8="" + "":"" + ""dGVzdA==""); xhr.send(xrequest);     }      &lt;/script&gt;  &lt;/head&gt; &lt;body&gt;  &lt;div&gt;   &lt;h2 id=""msgoutput""&gt;HelloWorld API Test&lt;/h2&gt;   &lt;button type=""button"" onclick=""hello(); return false;""&gt;SAY HELLO!&lt;/button&gt; &lt;/div&gt; &lt;/body&gt; &lt;/html&gt; </code></pre>  <p><strong>Note</strong>: Clicking the button produces the alert dialogs. Status dialog shows ""200"" while Text and response dialogs are null.</p>  <hr>  <h2>| Mozilla Inspector Data &amp; Headers |</h2>  <h2>POST Raw Data:</h2>  <pre><code>&lt;?xml version=""1.0?""&gt;&lt;methodCall&gt;&lt;methodName&gt;helloWorld&lt;methodName&gt;&lt;params&gt;&lt;param&gt;&lt;firstWord&gt;&lt;string&gt;hello&lt;/string&gt;&lt;firstWord&gt;&lt;/param&gt;&lt;param&gt;&lt;secondWord&gt;&lt;string&gt;world&lt;/string&gt;&lt;/secondWord&gt;&lt;/param&gt;&lt;/params&gt;&lt;/methodCall&gt; </code></pre>  <h2>Response Headers:</h2>  <pre><code>Content-Length 332 Content-Type text/html Date Sat, 10 Dec 2016 23:51:21 GMT Server BaseHTTP/0.3 Python/2.7.12 </code></pre>  <h2>Request Headers:</h2>  <pre><code>Accept text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8 Accept-Encoding gzip, deflate Accept-Language en-US,en;q=0.5 AuthorizationBasic aGVsbG8=:dGVzdA== (not my actual creds, swapped fakes) Connection keep-alive Content-Length 218 Content-Type text/plain;charset=UTF-8 DNT1 Hostlocalhost:8442 Referer http://localhost:8442/ User-Agent Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:50.0) Gecko/20100101 Firefox/50.0 </code></pre>  <hr>  <h2>| Test with cURL |</h2>  <pre><code>:~$ curl -i --data '&lt;?xml version=""1.0""?&gt;&lt;methodCall&gt;&lt;methodName&gt;helloWorld&lt;/methodName&gt;&lt;params&gt;&lt;param&gt;&lt;firstWord&gt;&lt;string&gt;hello&lt;/string&gt;&lt;/firstWord&gt;&lt;/param&gt;&lt;param&gt;&lt;secondWord&gt;&lt;string&gt;world&lt;/string&gt;&lt;/secondWord&gt;&lt;/param&gt;&lt;/params&gt;&lt;/methodCall&gt;' http://username:password@localhost:8442 HTTP/1.0 200 OK Server: BaseHTTP/0.3 Python/2.7.12 Date: Sun, 11 Dec 2016 00:00:13 GMT Content-type: text/html Content-length: 137  &lt;?xml version='1.0'?&gt; &lt;methodResponse&gt; &lt;params&gt; &lt;param&gt; &lt;value&gt;&lt;string&gt;hello-world&lt;/string&gt;&lt;/value&gt; &lt;/param&gt; &lt;/params&gt; &lt;/methodResponse&gt; </code></pre>  <p><strong>Note</strong>: No problem, cURL returns the XML response as text. I pointed cURL at a netcat socket to see exactly what it is sending to the XMLRPC server. Here's what netcat shows when cURL hits:</p>  <hr>  <h2>| cURL POST Data |</h2>  <pre><code>POST / HTTP/1.1 Host: localhost:8442 Authorization: Basic YWRtaW46Z2liYmVyc2g= User-Agent: curl/7.47.0 Accept: */* Content-Length: 220 Content-Type: application/x-www-form-urlencoded  &lt;?xml version=""1.0""?&gt;&lt;methodCall&gt;&lt;methodName&gt;helloWorld&lt;/methodName&gt;&lt;params&gt;&lt;param&gt;&lt;firstWord&gt;&lt;string&gt;hello&lt;/string&gt;&lt;/firstWord&gt;&lt;/param&gt;&lt;param&gt;&lt;secondWord&gt;&lt;string&gt;world&lt;/string&gt;&lt;/secondWord&gt;&lt;/param&gt;&lt;/params&gt;&lt;/methodCall&gt; </code></pre>  <p>It's not CORS. Already tested a GET request to xhr.responseText with same browser on same machine. Setup is using same host, same port, same directory for both the GET page and the XHR POST XMLRPC request.</p>  <p>What am I missing?</p>"	"<p>The Python SimpleXMLRPCServer had some code hacked into it to handle cookies. Problem is, the code couldn't handle the cookie objects when a browser makes connection. This code threw an error on each invocation. It was stopping the server from sending the response text to the browser. I learned this after writing a Python snippet to output debug information to a file. I removed the cookie code and then the response XML was successfully sent from the server to the browser.</p>  <p>I also discovered that sending the username/password from the XHR Send statement would throw an authentication error from the server. The server is expecting credentials to be in the POST header as Authentication: Basic base64 [btoa(username:password)].</p>  <p>The content-type header was not the culprit in this case. Now content-type is set to text/xml on both client and server.</p>  <p>Here is the modified JavaScript code that works:</p>  <pre><code>&lt;!DOCTYPE html&gt; &lt;html&gt; &lt;head&gt;  &lt;script&gt;  var xrequest = '&lt;?xml version=""1.0""?&gt;&lt;methodCall&gt;&lt;methodName&gt;helloWorld&lt;/methodName&gt;&lt;params&gt;&lt;param&gt;&lt;firstWord&gt;&lt;string&gt;hello&lt;/string&gt;&lt;/firstWord&gt;&lt;/param&gt;&lt;param&gt;&lt;secondWord&gt;&lt;string&gt;world&lt;/string&gt;&lt;/secondWord&gt;&lt;/param&gt;&lt;/params&gt;&lt;/methodCall&gt;';  function hello() { var xhr = new XMLHttpRequest(); xhr.onreadystatechange = function() {     if (this.readyState == XMLHttpRequest.DONE) {      } } xhr.open(""POST"", ""/"", true); xhr.setRequestHeader(""Authorization"", ""Basic "" + btoa(""admin"" + "":"" + ""1234"")); xhr.setRequestHeader(""Content-Type"", ""text/xml"") xhr.send(xrequest);     }      &lt;/script&gt;  &lt;/head&gt; &lt;body&gt;  &lt;div&gt;   &lt;h2 id=""msgoutput""&gt;HelloWorld API Test&lt;/h2&gt;   &lt;button type=""button"" onclick=""hello(); return false;""&gt;SAY HELLO!&lt;/button&gt; &lt;/div&gt; &lt;/body&gt; &lt;/html&gt; </code></pre>"
41155362	Cannot select element from a javascript webpage using Python scrapy and Selenium	javascript|python-2.7|selenium|scrapy|screen-scraping	2016-12-15 02:18:57.543000 UTC	"<p>I'm attempting to create an app that gathers some data.  I'm using Python 2.7 with Scrapy and Selenium on Windows 10.  I've done this with only a few web pages previously, however, I'm not able to select or click on a button from the following website.</p>  <p><a href=""https://aca3.accela.com/Atlanta_Ga/Default.aspx"" rel=""nofollow noreferrer"">https://aca3.accela.com/Atlanta_Ga/Default.aspx</a></p>  <p>Not able to click on the botton labeled ""Search Permits/Complaints""</p>  <p>I've used the Chrome dev tools in order to inspect the XPaths, etc.</p>  <p>Here's the code that I'm using:</p>  <pre><code>import scrapy from selenium import webdriver  class PermitsSpider(scrapy.Spider):   name = ""atlanta""   url = ""https://aca3.accela.com/Atlanta_Ga/Default.aspx""    start_urls = ['https://aca3.accela.com/Atlanta_Ga/Default.aspx',]    def __init__(self):     self.driver = webdriver.Chrome()     self.driver.implicitly_wait(20)    def parse(self, response):     self.driver.get(self.url)      time.sleep(15)     search_button = self.driver.find_element_by_xpath('//*[@id=""ctl00_PlaceHolderMain_TabDataList_TabsDataList_ctl01_LinksDataList_ctl00_LinkItemUrl""]')     search_button.click() </code></pre>  <p>When Running that code, I get the following error:</p>  <p>NoSuchElementException: Message: no such element: Unable to locate element: {""method"":""xpath"",""selector"":""//*@id=""ctl00_PlaceHolderMain_TabDataList_TabsDataList_ctl01_LinksDataList_ctl00_LinkItemUrl""]""}</p>  <p>I've added all manor of sleeps and waits, etc in order to ensure that the page is fully loaded before attempting the selection.  I've also attempted to select the Link Text, and other methods for selecting the element.  Not sure why this method isn't working on this page where it works for me on others.  While running the code, the WebDriver does open the page on my screen, and I see the page loaded, etc.</p>  <p>Any help would be appreciated.  Thank you...</p>"	"<p>Target link located inside an <code>iframe</code>, so you have to switch to that frame to be able to handle embedded elements:</p>  <pre><code>self.driver.switch_to_frame('ACAFrame') search_button = self.driver.find_element_by_xpath('//*[@id=""ctl00_PlaceHolderMain_TabDataList_TabsDataList_ctl01_LinksDataList_ctl00_LinkItemUrl""]') </code></pre>  <p>You also might need to switch back with <code>driver.switch_to_default_content()</code></p>"
41162039	Translating Javascript regex to Python	python|regex	2016-12-15 10:37:03.760000 UTC	"<p>I got a Javascript regex to repair broken JSON-Objects (my backend removes all quotes from the JSON string, the regex adds them again).</p>  <pre><code>var src = '[{ key: any text with spaces, emptykey: ,  foo: 0}, { key2: other text with spaces, emptykey2: ,  foo2: 2},]';  console.log(src.replace(/(\w+):(\s*)(.*?)(,|})/g, '""$1"":$2""$3""$4')); // outputs [{ ""key"" : ""any text with spaces"", emptykey: """", ""foo"": ""0""},...] </code></pre>  <p>I need to translate this regex replace to python but I don't know how to include the part with named back references. Here is my starting point</p>  <pre><code>    import json     import re      invalid_json = '[{ key: any text with spaces, emptykey: ,  foo: 0}, { key2: other text with spaces, emptykey2: ,  foo2: 2}]'     result = re.sub('/(\w+):(\s*)(.*?)(,|})/g', what to do here in python?, invalid_json)     print result </code></pre>"	"<pre><code>import json import re  invalid_json = '[{ key: any text with spaces, emptykey: ,  foo: 0}, { key2: other text with spaces, emptykey2: ,  foo2: 2}]' result = re.sub('(\w+):(\s*)(.*?)(,|})', r'""\1"":\2""\3""\4', invalid_json) print result print json.loads(result) </code></pre>  <p>Output:</p>  <pre><code>[{ ""key"": ""any text with spaces"", ""emptykey"": """",  ""foo"": ""0""}, { ""key2"": ""other text with spaces"", ""emptykey2"": """",  ""foo2"": ""2""}] [{u'emptykey': u'', u'foo': u'0', u'key': u'any text with spaces'}, {u'key2': u'other text with spaces', u'emptykey2': u'', u'foo2': u'2'}] </code></pre>"
41172514	Call Bokeh Server App Python Function from Javascript	javascript|python|bokeh	2016-12-15 20:06:41.650000 UTC	"<p>I am searching for a way to call a python function of my Bokeh Server App from arbitrary Javascript. I want to write custom widgets using HTML/Javascript only and use them to interact with the Bokeh App. <a href=""http://bokeh.pydata.org/en/latest/docs/user_guide/extensions.html#structure-of-bokeh-models"" rel=""nofollow noreferrer"">I know that one can extend bokeh</a>. Is this is the only way to go? For fast prototyping I think it would be nice to just use the websocket connection to send requests to the app, something along this line:</p>  <pre><code>Bokeh.call('my_python_func', arg1, arg2) </code></pre>"	"<p>As of Bokeh <code>0.13.0</code> this capability does not yet exist directly in the library. You can follow the GitHub issue <a href=""https://github.com/bokeh/bokeh/issues/5983"" rel=""nofollow noreferrer""><strong><code>#5983</code></strong> Events with feedback / Simple RPC</a> to get updates about any ongoing development. </p>  <p>Otherwise, any alternatives are somewhat involved. If the Python you would like to call is available behind some REST API you could certainly invoke that from JS using standard means. </p>"
41175309	Unable to execute python script using javascript	javascript|python	2016-12-16 00:00:16.567000 UTC	"<p>After going through a couple of tutorials and previously answered similar questions on stackoverflow this was the final result of what my code looked like:</p>  <pre><code>function myFunction() {    var data = document.getElementById(""data"").value;    if (data == '') {     alert(""No command entered!"");   }    else {     alert(""command entered!"");     // AJAX code to execute python      $.ajax({       type    : ""POST"",       url     : ""/cgi/test.py""     });   } } </code></pre>  <p>These are the following permissions on my test.py file after doing a chmod +x:</p>  <pre><code>-rwxr-xr-x    1 root     root         821 Dec 15 23:27 test.py* </code></pre>  <p>I can run the python file successfully by doing ""test.py"" so it works as an executable just great. However for some reason when I try to run it using the ajax it won't execute. Can someone help me out with this dilemma; any help is much appreciated :D.</p>"	
41191906	Parsing Javascript In Python	python|python-2.7|beautifulsoup	2016-12-16 20:20:57.823000 UTC	"<p>I usually use Beautiful Soup to parse html that I need, but I came across some Javascript that I would like to get from <a href=""https://swishanalytics.com/optimus/nba/daily-fantasy-projections"" rel=""nofollow noreferrer"">here</a>.</p>  <pre><code> &lt;script&gt; function Model(){     this.players = [{"".....data......:""""}];...etc </code></pre>  <p>I tried to load it like...</p>  <pre><code>import json scrape_url = ""https://swishanalytics.com/optimus/nba/daily-fantasy-projections?date=2016-12-15""  result = json.loads(scrape_url) </code></pre>  <p>But I get ""No Json Can Be Decoded"".  Not sure how to go about this.</p>"	"<p>You can extract JSON from arbitrary text with the <a href=""https://pypi.io/project/jsonfinder/"" rel=""noreferrer"">jsonfinder</a> library:</p>  <pre><code>from jsonfinder import jsonfinder import requests  scrape_url = ""https://swishanalytics.com/optimus/nba/daily-fantasy-projections?date=2016-12-15"" content = requests.get(scrape_url).text for _, __, obj in jsonfinder(content, json_only=True):     if (obj and             isinstance(obj, list) and             isinstance(obj[0], dict) and             {'player_id', 'event_id', 'name'}.issubset(obj[0])             ):         break else:     raise ValueError('data not found')  # Now you can use obj print(len(obj)) print(obj[0]) </code></pre>"
41206797	Select Javascript created element in Selenium Python	javascript|python|python-2.7|selenium|beautifulsoup	2016-12-18 08:51:26.780000 UTC	"<p>I have the following element in a web page.</p>  <pre><code>&lt;button type=""submit"" class=""zsg-button_primary contact-submit-button track-ga-event"" data-ga-category=""contact"" data-ga-action=""email"" data-ga-label=""rentalbuilding"" data-ga-event-content=""false"" data-ga-event-details="""" id=""yui_3_18_1_2_1482045459111_1278""&gt;    &lt;span class=""zsg-loading-spinner hide""&gt;&lt;/span&gt;    &lt;span class=""button-text"" id=""yui_3_18_1_2_1482045459111_1277""&gt;Contact Property Manager&lt;/span&gt; &lt;/button&gt; </code></pre>  <p>I can find this element with Beautifulsoup using:</p>  <pre><code>e = soup.find('button', attrs={'class' : 'zsg-button_primary'}) </code></pre>  <p>But when I try with Selenium using:</p>  <pre><code>driver.find_element_by_class_name(""zsg-button_primary"").click() </code></pre>  <p>I get the following error:</p>  <pre><code>selenium.common.exceptions.ElementNotVisibleException: Message: element not visible </code></pre>  <p>I think this is because the element is being created in Javascript and is doing something funny but I can see it on the screen and I just don't know how to get it so I can click it.  Any help most welcome.</p>  <p><strong>EDIT</strong></p>  <p>I've been pointed toward <a href=""https://stackoverflow.com/questions/6101461/how-to-force-selenium-webdriver-to-click-on-element-which-is-not-currently-visib"">this answer</a> which is for Selenium Javascript.  I need to do this with Python is anyone can help.</p>"	"<p>Try to wait until your element become visible with following:</p>  <pre><code>from selenium.webdriver.common.by import By from selenium.webdriver.support.ui import WebDriverWait from selenium.webdriver.support import expected_conditions as EC  WebDriverWait(driver, 10).until(EC.visibility_of_element_located((By.XPATH, '//button[@class=""zsg-button_primary contact-submit-button track-ga-event""]'))) </code></pre>"
41214356	Django pass Python Object from view to Javascript script in template	javascript|python|json|django|django-templates	2016-12-19 00:33:23.547000 UTC	"<p>This is a simple  code created only to show the probem, obviusly the task that this simple code is trying to do can be done without Javascript, but I need to know how I can do this using Javascript, because In my real code I need it, and It cant't be done without Javascript  (basically I create a dinamic 2D array with information from the view)</p>  <p>in view.py</p>  <p>in def play_game function </p>  <pre><code>... players = Player.objects.all() context = {     'players' : players } return render(request,'play_game.html', context) </code></pre>  <p>in model.py</p>  <pre><code>  class Player(models.Model):      game = models.ForeignKey(Game, on_delete=models.CASCADE, blank=True, null=True)     loose = models.IntegerField( default=0)     win = models.IntegerField(default=0)     name = models.CharField(max_length=9) </code></pre>  <p>In play_game.html</p>  <pre><code> &lt;script&gt; var players = ""{{players}}""; for (player in players) {     document.write(player.name);     document.write(""  Win:""+ player.win);      document.write(""Loose: "" + player.loose);  }; &lt;/script&gt; </code></pre>"	"<p>You need to <a href=""https://docs.djangoproject.com/en/dev/topics/serialization/"" rel=""nofollow noreferrer"">serialize</a> your data (players).</p>  <pre><code>from django.core import serializers ... players = serializers.serialize(""json"", players) ... return render(request, 'template.html', {'players': players, ...}) </code></pre>  <p>and in your template/script</p>  <pre><code>&lt;script&gt; var players = {{ players || safe }}; players.map(function (player) {     document.write(player.name);     document.write(""  Win:""+ player.win);      document.write(""Loose: "" + player.loose);  }); &lt;/script&gt; </code></pre>  <p>see <a href=""https://stackoverflow.com/questions/15592811/returning-json-array-from-a-django-view-to-a-template"">SO 1</a> and <a href=""https://stackoverflow.com/questions/757022/how-do-you-serialize-a-model-instance-in-django"">SO 2</a></p>"
41239190	Result of -1%7 is different in javascript(-1) and python(6)	javascript|python|haskell	2016-12-20 09:44:31.617000 UTC	"<p>The expression <code>-1 % 7</code> in JavaScript is giving me <code>-1</code> as the result. Whereas in Python and Haskell, I found the result to be <code>6</code>.</p>  <p>Can anyone explain why both have different behaviors? Which one is correct?</p>"	"<p>I'm going to give a slightly different answer.  As others have said, functions can do whatever you define them to and <code>m - x = -x</code> mod <code>m</code>.  As a prelude, I'll note that Haskell has two ""mod"" functions, <code>mod</code> and <code>rem</code> which differ in just this aspect.  You can make a case that the <code>mod</code> one is preferable mathematically.  The <code>rem</code> one corresponds to what you'd get on an x86 processor. There is, in fact, a third one, the Euclidean one, which may be even better as well as described by Raymond Boute in <a href=""https://pdfs.semanticscholar.org/2209/353dbdc29032187f19eec4225c702a926b02.pdf"" rel=""noreferrer"">The Euclidean Definitions of the Functions Div and Mod</a>.  The third form <em>always</em> returns a positive modulus. (There are, in fact, at least two other choices that can be made.)</p>  <p>So, Javascript's definition is what you get from most machine <code>mod</code> opcodes.  In this sense, it might be preferable as this would make it more efficient to implement.  Mathematically,  Haskell's and Python's definition is better than Javascript's.  There's also a third definition which may be slightly better.</p>  <p>One key property that the Euclidean and Haskell/Python definitions both possess is <code>x mod m = y mod m</code> is equivalent to <code>x = y</code> mod <code>m</code> which Javascript's definition lacks. You can verify by calculating <code>6 % 7</code> in Javascript.</p>"
41239190	Result of -1%7 is different in javascript(-1) and python(6)	javascript|python|haskell	2016-12-20 09:44:31.617000 UTC	"<p>The expression <code>-1 % 7</code> in JavaScript is giving me <code>-1</code> as the result. Whereas in Python and Haskell, I found the result to be <code>6</code>.</p>  <p>Can anyone explain why both have different behaviors? Which one is correct?</p>"	"<p>The <code>%</code> stands for different operators in JavaScript and in Python.</p>  <p>In JavaScript, the <code>%</code> stands for the <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Arithmetic_Operators#Remainder"" rel=""nofollow noreferrer""><strong>Remainder</strong></a> operator. The documentation already points out the difference between the remainder and the modulo operation:</p>  <blockquote>   <p>The remainder operator returns the remainder left over when one operand is divided by a second operand. It always takes the sign of the dividend, not the divisor. It uses a built-in modulo function to produce the result, which is the integer remainder of dividing var1 by var2 — for example — var1 modulo var2. There is a proposal to get an actual modulo operator in a future version of ECMAScript, <strong>the difference being that the modulo operator result would take the sign of the divisor, not the dividend.</strong></p> </blockquote>  <p><sup>(Emphasis by me)</sup></p>  <p>In contrast to that: In Python, the <code>%</code> stands for the <a href=""https://docs.python.org/2/reference/expressions.html#binary-arithmetic-operations"" rel=""nofollow noreferrer""><strong>modulo</strong></a> operator. The documentation also makes a statement about the sign:</p>  <blockquote>   <p>The <code>%</code> (modulo) operator yields the remainder from the division of the first argument by the second. The numeric arguments are first converted to a common type. A zero right argument raises the ZeroDivisionError exception. [...] <strong>The modulo operator always yields a result with the same sign as its second operand (or zero)</strong>; the absolute value of the result is strictly smaller than the absolute value of the second operand [2].</p> </blockquote>  <p><sup>(Emphasis by me)</sup></p>"
41239190	Result of -1%7 is different in javascript(-1) and python(6)	javascript|python|haskell	2016-12-20 09:44:31.617000 UTC	"<p>The expression <code>-1 % 7</code> in JavaScript is giving me <code>-1</code> as the result. Whereas in Python and Haskell, I found the result to be <code>6</code>.</p>  <p>Can anyone explain why both have different behaviors? Which one is correct?</p>"	"<p>Both are correct, they just use different conventions regarding the handling of negative operands. For positive numbers, the conventions coincide, but for negative numbers they do not. In Python <code>a % b</code> always has the same sign as <code>b</code>. </p>  <p>In what follows, I'll use Python notation, where <code>//</code> is used for integer division.</p>  <p>Let</p>  <pre class=""lang-python prettyprint-override""><code>q, r  = a // b, a % b </code></pre>  <p>Then </p>  <pre class=""lang-python prettyprint-override""><code>a == q * b + r </code></pre>  <p><strong>must</strong> be true in any language (assuming <code>a</code> and <code>b</code> are integers, with <code>b</code> not equal to zero). So the way the remainder is handled has to be consistent with the convention used for integer division. In Python, integer division is floor division, i.e., the result is rounded towards negative infinity. In some other languages rounding towards zero is used instead. And in some languages, you get whatever convention the CPU manufacturer decided to implement, so the same code run on different hardware can give different results. As you can imagine, that can be somewhat annoying. :)</p>"
41239190	Result of -1%7 is different in javascript(-1) and python(6)	javascript|python|haskell	2016-12-20 09:44:31.617000 UTC	"<p>The expression <code>-1 % 7</code> in JavaScript is giving me <code>-1</code> as the result. Whereas in Python and Haskell, I found the result to be <code>6</code>.</p>  <p>Can anyone explain why both have different behaviors? Which one is correct?</p>"	"<p>Both are correct. Some languages return positive modulo numbers, while others retain their sign.</p>  <p>You can simply add the modulus to your variable to get a positive number, or check if the number is positive or negative before performing the modulus operation and correct the result after to switch between the two.</p>  <hr>  <p>Pseudocode to convert <code>a%b</code> between the two:</p>  <p>In a language where <code>-1%7 == -1</code>, you do this to get a positive number:</p>  <pre><code>((a%b)+b) % b </code></pre>  <p>And in a language where <code>-1%7 == 6</code> you can do this to get the signed version:</p>  <pre><code>if a &lt; 0:   return (a%b)-b else:   return a%b </code></pre>"
41239190	Result of -1%7 is different in javascript(-1) and python(6)	javascript|python|haskell	2016-12-20 09:44:31.617000 UTC	"<p>The expression <code>-1 % 7</code> in JavaScript is giving me <code>-1</code> as the result. Whereas in Python and Haskell, I found the result to be <code>6</code>.</p>  <p>Can anyone explain why both have different behaviors? Which one is correct?</p>"	"<p>Both are correct.</p>  <p>To complete the other answers, you can also consider the <a href=""https://docs.python.org/3.6/library/functions.html#divmod"" rel=""nofollow noreferrer"">divmod</a> function in Python:</p>  <blockquote>   <p>Take two (non complex) numbers as arguments and return a pair of numbers consisting of their quotient and remainder when using integer division. With mixed operand types, the rules for binary arithmetic operators apply. For integers, the result is the same as <code>(a // b, a % b)</code>. For floating point numbers the result is <code>(q, a % b)</code>, where <em>q</em> is usually <code>math.floor(a / b)</code> but may be 1 less than that. In any case <code>q * b + a % b</code> is very close to <em>a</em>, if <code>a % b</code> is non-zero it has the same sign as <em>b</em>, and <code>0 &lt;= abs(a % b) &lt; abs(b)</code>.</p> </blockquote>  <pre><code>&gt;&gt;&gt; divmod(-1, 7) (-1, 6) </code></pre>"
41250994	calling python with bootstrap javascript on mouse over and execute it	python|html|twitter-bootstrap|flask	2016-12-20 20:47:48.463000 UTC	"<p>While reading bootstrap documentation, I got quiet confused, but I have read you can call python with javascript and I would appreciate if you could help me with my case.</p>  <p>I am running flask and python for backend stuff, however I would need to call python when html id has <strong>on mouse over</strong>. </p>  <p>Here is some example html:</p>  <pre><code>&lt;body&gt;     &lt;button class=""btn btn-default"" type=""button"" id=""firstbutton""&gt;Button&lt;/button&gt;     &lt;button class=""btn btn-default"" type=""button"" id=""secondbutton""&gt;Button&lt;/button&gt; &lt;/body&gt; </code></pre>  <p>I know it's very easy to call change of a body background color with javascript, but for my work I would need to see a code for calling python.(I know, I know... But I would really like to see the process). Can anyone be so nice and explain me step by step in brief how this works. Would really appreciate it.</p>  <p>so let's assume:</p>  <ul> <li><code>onmouseover</code> > <code>id=""firstbutton""</code> > body goes to red (background-color)</li> <li><code>onmouseover</code> > <code>id=""secondbutton""</code> > body goes to black (background-color)</li> </ul>"	"<p>I ended up doing something kind of similar using the code from <a href=""http://flask.pocoo.org/docs/0.11/patterns/jquery/"" rel=""nofollow noreferrer"">http://flask.pocoo.org/docs/0.11/patterns/jquery/</a> as a starting point.</p>  <p>The basic idea is to have a ""helper route"" which contains all the python you want to execute, and then use jQuery to send the data you want to that helper route. It then takes the data returned from the python route (as JSON, in this case), and then performs whatever HTML manipulations you want based on the data returned.</p>"
41273855	How to get value of javascript variable in python variable in Python-CGI script	javascript|python|html|cgi	2016-12-21 23:59:46.173000 UTC	"<p>I want to take the value of javascript variable into python variable.</p>  <p>This is Python-CGI script which displays a selection box and selected value appears on the page. But I want to take selected value in python variable.</p>  <pre><code>#!/usr/bin/python2.7 -u import time, sys, os  # Import modules for CGI handling import cgi, cgitb  sys.stdout.write('Content-Type: text/html;charset=utf-8\n') print ""\n\n"" print ""&lt;html&gt;"" print ""&lt;body&gt;""  rows = ['1.1.1.1', '2.2.2.2', '3.3.3.3'] print ""&lt;script&gt;"" print ""function showData() {"" print ""var sel = document.getElementById('combo');"" print ""var value = sel.value;"" print ""var text = sel.options[sel.selectedIndex].text;"" print ""document.getElementById('secondP').innerHTML=text;}"" print ""&lt;/script&gt;""  print '&lt;form name=""comboform""&gt;' print '&lt;select name=""comboselect"" onchange=""showData()"" id=""combo""&gt;' for row in rows:     print ""&lt;option value='%s'&gt;%s&lt;/option&gt;""%(row,row) print ""&lt;/select&gt;"" print ""&lt;/form&gt;""  print '&lt;p id=""secondP""&gt;&amp;nbsp;&lt;/p&gt;'  # HERE I WANT TO TAKE VALUE OF SELECTED IP ADDRESS (var value) IN PYTHON VARIABLE # selected_ip_adr = value #something like this where value has selected ip address # NEED TO PASS THE SAME TO ANOTHER SCRIPT  sys.stdout.flush() print ""&lt;/body&gt;"" print ""&lt;/html&gt;"" </code></pre>  <p>It would be great if someone can suggest a work-around to achieve this.</p>"	<p>I was able to resolve it with following code and multiple pages:</p>  <pre><code># Create instance of FieldStorage form = cgi.FieldStorage() op = form.getvalue('combo') </code></pre>
41295247	Scrape website that uses javascript with python	python|web-scraping	2016-12-23 04:36:54.060000 UTC	"<p>I am attempting to scrape a website using the following code</p>  <pre><code>import re import requests  def get_csrf(page):     matchme = r'name=""csrfToken"" value=""(.*)"" /'     csrf = re.search(matchme, str(page))     csrf = csrf.group(1)     return csrf  def login():     login_url = 'https://www.edline.net/InterstitialLogin.page'      with requests.Session() as s:         login_page = s.get(login_url)         csrf = get_csrf(login_page.text)          username = 'USER'         password = 'PASS'          login = {'screenName': username,                  'kclq': password,                  'csrfToken': csrf,                  'TCNK':'authenticationEntryComponent',                  'submitEvent':'1',                  'enterClicked':'true',                  'ajaxSupported':'yes'}         page = s.post(login_url, data=login)         r = s.get(""https://www.edline.net/UserDocList.page?"")         print(r.text)  login() </code></pre>  <p>Where I log into <a href=""https://www.edline.net/InterstitialLogin.page"" rel=""nofollow noreferrer"">https://www.edline.net/InterstitialLogin.page</a>, which is successful, but the problem I have is when I try to do </p>  <pre><code>r = s.get(""https://www.edline.net/UserDocList.page?"") print(r.text) </code></pre>  <p>It doesn't print the expected page, instead it throws an error. Upon further testing I discovered that it throws this error even if you try to go directly to the page from a browser. So when I investigated the page source I found that the button used to link to the page I'm trying to scrape uses the following code</p>  <pre><code>&lt;a href=""javascript:submitEvent('viewUserDocList', 'TCNK=headerComponent')"" tabindex=""-1""&gt;Private Reports&lt;/a&gt; </code></pre>  <p>So essentially I am looking for a way to trigger the above javascript code in python in order to scrape the resulting page.</p>"	"<p>It is impossible to answer this question without having more context than this single link.</p>  <p>However, the first thing you want to check, in the case of javaScript driven content generation, are the requests made by your web page when clicking on that link. </p>  <p>To do this, take a look at the network-panel in the console of your browser. Record the requests being made, look especially for XHR-requests. Then, you can try to replicate this e.g. with the requests library.</p>  <p>content = requests.get('xhr-url')</p>"
41314425	javascript Base64 encoding to python	javascript|python|python-2.7|cryptojs|hashlib	2016-12-24 15:11:50.160000 UTC	"<p>I have this line in a postman pre-script that uses javascript:</p>  <pre><code>var hash256 = CryptoJS.HmacSHA256(rawSignature, Secret); var hashbase64 = hash256.toString(CryptoJS.enc.Base64); </code></pre>  <p>im trying to convert that to a python script (2.7) and have come up with this :</p>  <pre><code>hash256 = hmac.new(Secret, rawSignature, hashlib.sha256).hexdigest() hashbase64 = base64.b64encode(hash256).decode() </code></pre>  <p>The sha256 result appears to be the same but when I try to encode with base64 I get a different result.  I have little to no javascript knowledge but from what I have found it may be something to do with .toString part converting from a word array and may be resulting in the string being base64 encoded in a different format.</p>  <p>I have tried a few different things converting to binary / hex strings and converting etc but still get the wrong result I'm sure if something stupid but can't quite figure it out any ideas ?</p>  <p>thanks</p>  <p>***edit</p>  <p>clarification as requested</p>  <p>an example correctly generated HMAC sha256 was: d5d2f2c64933c4d45f457f32d892534971d372cfec99956db506afad0e12aefb</p>  <p>the above codes produces these results: hashbase64(javascript postman) = 1dLyxkkzxNRfRX8y2JJTSXHTcs/smZVttQavrQ4Srvs= hashbase64(python) = ZDVkMmYyYzY0OTMzYzRkNDVmNDU3ZjMyZDg5MjUzNDk3MWQzNzJjZmVjOTk5NTZkYjUwNmFmYWQwZTEyYWVmYg=='</p>  <p>I have now tried the digest() instead of hexdigest and am now getting the desired result so that was the problem, thanks for the responses appreciate it </p>"	
41315427	Why does this regular expression match group 2 in Golang and Python but not in JavaScript?	javascript|regex	2016-12-24 17:26:39.507000 UTC	"<p>I'm using a regular expression to repeatedly match the first and second part of a section. It does this fine.</p>  <p>I also want it to optionally capture the last instance of something in the first part which is exactly three digits. I don't need the value of that sub-part. I only need to know it is there. So, I use the first and third group from the match and test if the second group is undefined or not.</p>  <p>The problem I'm having is in JavaScript mode the second group result is always undefined.</p>  <p>See this at <a href=""https://regex101.com/r/bEVKB4/2"" rel=""nofollow noreferrer"">regex101.com</a>.</p>  <p>After seeing it's not working in JavaScript, change to any of the other modes (Golang, Python...) and the first match will provide '123' for the second group. That's what I'd like it to do in JavaScript, but, it doesn't.</p>  <p><strong>So, why doesn't it do the same in JavaScript? Is there a way I can make a regular expression in JavaScript to produce the desired results?</strong></p>  <p>Try this out in JavaScript:</p>  <pre><code>var regex = /((?:([0-9]{3})|[^,])+?)(?:,([^\.]*))?(?:\.|$)/g   , string = 'some 123 thing, to test this with. which shows, not working in JS only'  console.log(regex.exec(string))  /* prints this: [ 'some 123 thing, to test this with.',   'some 123 thing',   undefined, // &lt;--------------------- I want this to be '123'   ' to test with',   index: 0,   input: 'the whole string...' ] */  console.log(regex.exec(string))  /* prints this: [ 'which shows, not working in JS only',   'which shows',   undefined, // this one is correct   ' not working in JS only',   index: 0,   input: 'the whole string...' ] */ </code></pre>  <p>I realize that capturing group only provides the last instance of matching that spot. That's okay because I only want to know it was in there at least once. I'm testing whether the match result's second group exists or is undefined.</p>  <p>This is a simplified example. The basic format is text which is divided by something, in this example, a period (.). Then, the subsection is divided by something else, in this example, a comma. And the first part may have something special in it, in this example, a three digit number.</p>  <p>What I want to do:</p>  <pre><code>var match = regex.exec(string) if (match) {   var first = match[1]     , second = match[3]     , isSpecial = match[2] !== undefined }      </code></pre>"	"<p>With each iteration of the non-capturing group, the contents inside Group 1 are zeroed/repopulated, this is how ECMAScript regex works. It would work well if your 3-digit chunk appeared right at the <code>,</code>, try testing your current regex with <a href=""https://regex101.com/r/bEVKB4/3"" rel=""nofollow noreferrer""><code>some 123, to test this with.</code></a> string.</p>  <p>You need to move the second capturing group outside of the repeated non-capturing group, like:</p>  <pre><code>/([^,]*?(?:([0-9]{3})[^,]*)?)(?:,([^.]*))?(?:\.|$)/g   ^^^^^^^^^^^^^^^^^^^^^^^^^^ </code></pre>  <p>See the <a href=""https://regex101.com/r/bEVKB4/4"" rel=""nofollow noreferrer"">regex demo</a>.</p>  <p>Now, the first capturing group pattern matches:</p>  <ul> <li><code>[^,]*?</code> - any 0+ chars other than <code>,</code> as few as possible</li> <li><code>(?:([0-9]{3})[^,]*)?</code> - one or zero occurrences of:  <ul> <li><code>([0-9]{3})</code> - Group 1 capturing 3 digits</li> <li><code>[^,]*</code>  - zero or more chars other than <code>,</code> as many as possible.</li> </ul></li> </ul>"
41329331	Convert JavaScript piece of code to python	javascript|python|reduce	2016-12-26 09:51:22.717000 UTC	"<p>I'm trying to convert a JavaScript module to Python. And I do not know much about JavaScript. Below is the js line which is confusing for me.</p>  <pre><code>for(i=0; i&lt;res.response.length;i++)     for (var key in temp['sal_changes'][0]['sal_by_per'])         {            res.response[i]['sal_changes'][0]['sal_by_per'][key.replace(' ','_')]=(res.response[i]['sal_changes'][0]['sal_by_per'][key].toFixed(2))/1;            change.push(temp['sal_changes'][0]['sal_by_per'][key])         }         totalchange=change.reduce(function(pv, cv) { return pv + cv; }, 0);     } </code></pre>  <p>Also I'm using python 2.7 reduce function is not available.</p>  <p>I want python code for these two lines of js code:</p>  <pre><code>res.response[i]['sal_changes'][0]['sal_by_per'][key.replace(' ','_')]=(res.response[i]['sal_changes'][0]['sal_by_per'][key].toFixed(2))/1; </code></pre>  <p>and </p>  <pre><code>totalchange=change.reduce(function(pv, cv) { return pv + cv; }, 0); </code></pre>"	"<p>Probably, <code>temp</code> and <code>res.response[i]</code> are the same object, leading to</p>  <pre><code>sal_by_per = temp['sal_changes'][0]['sal_by_per'] totalchange = sum(sal_by_per.values()) </code></pre>"
41338019	Scraping site with python that requires javascript input	python|web-scraping	2016-12-27 01:43:56.397000 UTC	"<p>I am attempting to scrape a website using the following python code</p>  <pre><code>import re import requests  def get_csrf(page):     matchme = r'name=""csrfToken"" value=""(.*)"" /'     csrf = re.search(matchme, str(page))     csrf = csrf.group(1)     return csrf  def login():     login_url = 'https://www.edline.net/InterstitialLogin.page'      with requests.Session() as s:         login_page = s.get(login_url)         csrf = get_csrf(login_page.text)          username = 'USER'         password = 'PASS'          login = {'screenName': username,                  'kclq': password,                  'csrfToken': csrf,                  'TCNK':'authenticationEntryComponent',                  'submitEvent':'1',                  'enterClicked':'true',                  'ajaxSupported':'yes'}         page = s.post(login_url, data=login)         r = s.get(""https://www.edline.net/UserDocList.page?"")         print(r.text)  login() </code></pre>  <p>This code logs into <a href=""https://www.edline.net/InterstitialLogin.page"" rel=""nofollow noreferrer"">https://www.edline.net/InterstitialLogin.page</a> successfully, but fails when I try to do</p>  <pre><code>r = s.get(""https://www.edline.net/UserDocList.page?"") print(r.text) </code></pre>  <p>It doesn't print the expected page, instead it throws an error. Upon further testing I discovered that it throws this error even if you try to go directly to the page from a browser. This means that the only way to access the page is to run the code executed when the button is clicked to go there. So when I investigated the page source I found that the button used to link to the page I'm trying to scrape uses the following code</p>  <pre><code>&lt;a href=""javascript:submitEvent('viewUserDocList', 'TCNK=headerComponent')"" tabindex=""-1""&gt;Private Reports&lt;/a&gt; </code></pre>  <p>So essentially I am looking for a way to trigger the above javascript code in python in order to scrape the resulting page.</p>"	"<p>Since the website uses javascript, you need something like selenium that visits the page using a browser. The following code will log in to edline just like your other code did:</p>  <pre><code>from selenium import webdriver import time driver = webdriver.Firefox() #any browser really url = 'https://www.edline.net/InterstitialLogin.page' driver.get(url) username_text = driver.find_element_by_xpath('//*[@id=""screenName""]') #finds the username text box username_text.send_keys('username') #sends 'username' to the username text box password_text = driver.find_element_by_xpath('//*[@id=""kclq""]') #finds the password text box password_text.send_keys('password') # sends 'password' to the password text box click_button =  driver.find_element_by_xpath('/html/body/form[3]/div/div[2]/div/div[1]/div[3]/button').click() #finds the submit button and clicks on it </code></pre>  <p>Once you logged in, it will be possible to get the full expected page. It's really easy to find out how with the Selenium documentation! Let me know if you have further questions.</p>"
41349550	"Sending ""windows-1251""-encoded string in JSON from python to javascript"	javascript|python|json|cp1251	2016-12-27 17:31:03.780000 UTC	"<p>What I need to do is best descriped as example.  Previously, I had the following code:</p>  <pre><code>content = u'&lt;?xml version=""1.0"" encoding=""windows-1251""?&gt;\n' + ... # with open(file_name, 'w') as f:      f.write(content.encode('cp1251'))      f.close; </code></pre>  <p>Now I want to modify the architecture of my entire app and send the string which is supposed to be the file content to client via JSON and to generate the file via javascript. </p>  <p>So, now my code looks something like this:</p>  <pre><code>response_data = {} response_data['file_content'] = content.encode('cp1251') response_data['file_name'] = file_name     return JsonResponse({'content':json.dumps(response_data,  ensure_ascii=False)}) # error generated </code></pre>  <p>The problem is that I get <code>UnicodeDecodeError: 'ascii' codec can't decode byte 0xd4 in position 53: ordinal not in range(128)</code></p>  <p>I also tried the second option this way:</p>  <pre><code>response_data = {} response_data['file_content'] = content response_data['file_name'] = file_name     return JsonResponse({'content':json.dumps(response_data,  ensure_ascii=False).encode('utf8')}) # error generated </code></pre>  <p>Then, on client, I try to covert utf8 to windows-1251.</p>  <pre><code> $.post ('/my_url/', data, function(response) {         var file_content = JSON.parse(response.content).file_content;         file_content = UnicodeToWin1251(file_content); </code></pre>  <p>...but...I get distorted symbols.  I know I am doing something terribly wrong here and am likely to mess up things with encoding, but still it's been an entire day I couldn't solve this issue. Could someone give a hint where my mistake is ?</p>"	"<p>Both XML and JSON contain data that is <em>Unicode text</em>. The XML declaration merely tells your XML parser how to decode the XML serialisation of that data. You wrote the serialisation by hand so to match the XML header, you had to encode to CP-1251.</p>  <p>The JSON standard states that all JSON should be encoded in either UTF-8, UTF-16 or UTF-32, with UTF-8 the standard; again, this is just the encoding for the <em>serialisation</em>.</p>  <p>Leave your data as <em>Unicode</em>, then encode that data to JSON with the <code>json</code> library; the library takes care of ensuring you get UTF-8 data (in Python 2), or gives you Unicode text (Python 3) that can be encoded to UTF-8 later. Your Javascript code will then decode the JSON again at which point you have <em>Unicode text</em> again:</p>  <pre><code>response_data = {} response_data['file_content'] = content response_data['file_name'] = file_name     return JsonResponse({'content':json.dumps(response_data,  ensure_ascii=False)}) </code></pre>  <p>There is no need whatsoever to send binary data over JSON here, you are sending text. If you Javascript code then generates the file, <em>it is responsible</em> for encoding to CP-1251, not your Python code.</p>  <p>If you <strong>must</strong> put binary data in a JSON payload, you'll need to encode that payload to some form of text. Binary data (and CP-1251-encoded text is binary data) could be encoded in text as Base-64:</p>  <pre><code>import base64  response_data = {} response_data['file_content'] = base64.encodestring(content.encode('cp1251')).decode('ascii') response_data['file_name'] = file_name     return JsonResponse({'content':json.dumps(response_data,  ensure_ascii=False)}) </code></pre>  <p>Base64 data is encoded to a bytestring containing only ASCII data, so decode it as ASCII for the JSON library, which expects text to be Unicode text.</p>  <p>Now you are sending binary data, wrapped in a Base64 text encoding, to the Javascript client, which now has to decode the Base64 if you need the binary payload there.</p>"
41390748	"Python Selenium, or regular Javascript, to select list-element option of pseudo-dropdown list?"	javascript|python|html|selenium	2016-12-30 04:43:31.390000 UTC	"<p>Here's the HTML of what looks to be a dropdown list:</p>  <pre><code>&lt;div id=""Form-PlaceList-boundlist"" class=""x-boundlist x-boundlist  floating x-layer x-boundlist-default x-border-box x-boundlist-above""&gt; &lt;div id=""Form-PlaceList-boundlist-listEl"" class=""x-boundlist-list-ct  x-unselectable"" role=""presentation""&gt; &lt;ul class=""x-list-plain""&gt; &lt;li class=""x-boundlist-item x-boundlist-item-over x-boundlist-selected""  role=""option"" unselectable=""on""&gt;&lt;/li&gt; &lt;li class=""x-boundlist-item"" role=""option"" unselectable=""on""&gt;Alabama&lt;/li&gt; &lt;li class=""x-boundlist-item"" role=""option"" unselectable=""on""&gt;Alaska&lt;/li&gt; &lt;li class=""x-boundlist-item"" role=""option"" unselectable=""on""&gt;Atlantis&lt;/li&gt; </code></pre>  <p>Using Selenium with Python 2.7, I've trying to select one of the list/option elements.  I can get the desired element by using</p>  <pre><code>driver.find_element_by_xpath(""//div[@id='Form-PlaceList-boundlist-ListEl']/ul/li[62]"") </code></pre>  <p>...except the list order changes from time to time, and row number #62 isn't sometimes the right element.</p>  <p>Can you select this element based on ""Wyoming"" rather than the index number?</p>  <p>I also tried getting it with sending a Javascript command to the Selenium driver with driver.execute_script.  I tried:</p>  <pre><code>driver.execute_script(""document.getElementByID('Form-PlaceList-boundlist-listEl').setAttribute('value','Wyoming')"") </code></pre>  <p>but this gives <code>Cannot read property 'setAttribute' of null.</code></p>"	"<p>You can locate the element based on it's text using an <em>XPath</em> locator:</p>  <pre><code>dropdown = driver.find_element_by_css_selector(""#Form-PlaceList-boundlist #orm-PlaceList-boundlist-listEl ul"")  wyoming = dropdown.find_element_by_xpath("".//li[. = 'Wyoming']"") wyoming.click() </code></pre>  <p>The <a href=""https://stackoverflow.com/questions/6180298/what-is-the-use-of-in-xpath"">dot in the expression</a> in this case refers to the current element's text.</p>  <p>Note: don't forget to open up the dropdown before clicking an option inside it.</p>"
41412255	Testing performance of JavaScript vs. Python	javascript|python|benchmarking	2016-12-31 22:59:32.957000 UTC	"<p>As a high school student, I've recently decided to do a computer science experiment for my school science fair. My hypothesis is that when comparing Javascript and Python on similar programs, JS will perform better on certain common software benchmarking tests. In order to test my hypothesis, I need to write a set of programs in each language that execute common tasks and then test them according to relevant performance benchmarks.</p>  <p>Since I'm new at writing and testing code, I am hoping to get some advice in answer to these questions:</p>  <ol> <li><p>What types of (simple) routines would adequately represent the performance qualities of these two languages?</p></li> <li><p>What specific tests (speed/CPU and memory usage/etc.) would be the best performance measures?</p></li> <li><p>Is there (preferably free) software available to do this kind of benchmark testing?</p></li> </ol>  <p>So far, I've searched Google for general advice about software benchmarking and have found limited practical advice. I just need some initial guidance to point me in the right direction.</p>  <p>Thanks in advance for your tips and suggestions!</p>"	
