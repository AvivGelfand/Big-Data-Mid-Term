41413634	Integration of ServerSide Javascript with Python	javascript|node.js|tornado|operational-transform	2017-01-01 05:49:17.947000 UTC	"<p>I am building a web app which uses a JSON array to save and transfer state between server and client and vice versa.  I'm attempting to add 'collaboration' capabilities to it such it that multiple clients can simultaneously edit the json data without causing conflicts and with the data being updated on all clients in real time.  </p>  <p>On the backend I'm using python so I was very happy to find the <a href=""https://github.com/opencoweb/coweb"" rel=""nofollow noreferrer"">opencoweb</a> project, sadly it is no longer being maintained.  Similarly, I've found <a href=""https://github.com/share/sharedb"" rel=""nofollow noreferrer"">ShareDB</a> and it seems like a very neat project!  I would like to spin up ShareDB on my server side from my Python code but am unsure as to what the best approach to running javascript code server side would be.  At this point, I'm considering just running it with node from the command line, but wondering whether it would make more sense to use a python library which can allow the running of javascript (Js2Py or something similar).  So this brings me to my question, on the server side is there a 'recommended' approach to integrating javascript into your server side code base when using python (tornado) for your main framework?</p>"	41432455	"<p>I believe I've come up with an answer to my own question.  It seems like this question has been discussed here prior, where the recommendation was to use sockets, and the recommendation of using zerorpc got alot of up-votes.  So in my case, I would likely be running the ShareDB as a service which I would be calling from Python using zerorpc.  Hopefully this helps someone else in my shoes!</p>"
41453675	Default parameters and currying: Python vs. Javascript	javascript|python|closures|currying	2017-01-03 22:59:03.057000 UTC	"<p>Consider the following problem: I want to create an array of functions, each function just prints its index in that array. In Python, it can be done easily with</p>  <pre><code>funcs = [] for i in range(5):    funcs.append(lambda i=i: print(i)) funcs[2]() # 2 </code></pre>  <p>Here we use default argument values as a way to do currying (if I understand the term right).</p>  <p>Prior to ES6, there were no default argument values in Javascript, so currying had to be done in different way. Now we have them and I tried to translate Python to Javascript literally:</p>  <pre><code>funcs = [] for (var i=0; i&lt;5; i++) {    funcs.push(function (i=i) {console.log(i)}) } # this part pass OK funcs[2]() ReferenceError: i is not defined     at Array.&lt;anonymous&gt; (evalmachine.&lt;anonymous&gt;:3:27)     at evalmachine.&lt;anonymous&gt;:1:9     at ContextifyScript.Script.runInThisContext (vm.js:26:33)     at Object.exports.runInThisContext (vm.js:79:17)     at run ([eval]:608:19)     at onRunRequest ([eval]:379:22)     at onMessage ([eval]:347:17)     at emitTwo (events.js:106:13)     at process.emit (events.js:191:7)     at process.nextTick (internal/child_process.js:752:12) </code></pre>  <p>Why it fails? What's the difference between Python and Javascript ways to pass default values?</p>  <p>(Okay, I know that I can use <code>let</code> here instead of <code>var</code>, I'm just studying Javascript after several years with Python and trying to understand it underhoods.)</p>"	41453832	"<p>Your issues have to do with the difference between <em>when</em> <strong>default</strong> parameters get bound in closures in python vs JavaScript. While it is true that both JavaScript and Python use late-binding, in the case of default parameters, Python simulates early-binding, whereas JavaScript does not. </p>  <p>That being said, if you are going to be creating closures like this, you may as well take advantage of them and ditch the parameters all together, honestly. </p>  <p>You mentioned the use of <code>let</code> and that is important if you want to define the function inside the for loop because otherwise <code>funcs[n]</code> will always be your maximum value of your iterator (due to the late-binding of JavaScript closures). </p>  <p>Try this:</p>  <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-js lang-js prettyprint-override""><code>funcs = []; for (let i=0; i&lt;5; i++) {    funcs.push(function () {console.log(i)}); } funcs[2]();</code></pre> </div> </div> </p>  <p>Alternatively, if you want to follow good practice of not defining functions within a loop, you can define the function outside, and pass the variable in using <code>.bind()</code>. One thing to note is that this method will bind the variable with the value at the time <code>.bind()</code> is called, so you do not have to use <code>let</code></p>  <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-js lang-js prettyprint-override""><code>funcs = []; function myFunc(i) {   console.log(i); } for (var i=0; i&lt;5; i++) {    funcs.push(myFunc.bind(this, i)); } funcs[2]();</code></pre> </div> </div> </p>"
41453675	Default parameters and currying: Python vs. Javascript	javascript|python|closures|currying	2017-01-03 22:59:03.057000 UTC	"<p>Consider the following problem: I want to create an array of functions, each function just prints its index in that array. In Python, it can be done easily with</p>  <pre><code>funcs = [] for i in range(5):    funcs.append(lambda i=i: print(i)) funcs[2]() # 2 </code></pre>  <p>Here we use default argument values as a way to do currying (if I understand the term right).</p>  <p>Prior to ES6, there were no default argument values in Javascript, so currying had to be done in different way. Now we have them and I tried to translate Python to Javascript literally:</p>  <pre><code>funcs = [] for (var i=0; i&lt;5; i++) {    funcs.push(function (i=i) {console.log(i)}) } # this part pass OK funcs[2]() ReferenceError: i is not defined     at Array.&lt;anonymous&gt; (evalmachine.&lt;anonymous&gt;:3:27)     at evalmachine.&lt;anonymous&gt;:1:9     at ContextifyScript.Script.runInThisContext (vm.js:26:33)     at Object.exports.runInThisContext (vm.js:79:17)     at run ([eval]:608:19)     at onRunRequest ([eval]:379:22)     at onMessage ([eval]:347:17)     at emitTwo (events.js:106:13)     at process.emit (events.js:191:7)     at process.nextTick (internal/child_process.js:752:12) </code></pre>  <p>Why it fails? What's the difference between Python and Javascript ways to pass default values?</p>  <p>(Okay, I know that I can use <code>let</code> here instead of <code>var</code>, I'm just studying Javascript after several years with Python and trying to understand it underhoods.)</p>"	41453941	"<p>If you use <code>let</code> instead of <code>var</code> you get a new binding for each iteration.</p>  <pre><code>funcs = [] for (let i=0; i&lt;5; i++) {   funcs.push(function (j=i) {console.log(j)}) }  funcs[2];//2 </code></pre>  <p><code>i=i</code> doesn't work because in ES6  parameters can define defaults using other parameters</p>  <pre><code>f = function(a=1, b=a){console.log(b);} f() // 1 </code></pre>  <p>So the parser is getting confused.</p>"
41453675	Default parameters and currying: Python vs. Javascript	javascript|python|closures|currying	2017-01-03 22:59:03.057000 UTC	"<p>Consider the following problem: I want to create an array of functions, each function just prints its index in that array. In Python, it can be done easily with</p>  <pre><code>funcs = [] for i in range(5):    funcs.append(lambda i=i: print(i)) funcs[2]() # 2 </code></pre>  <p>Here we use default argument values as a way to do currying (if I understand the term right).</p>  <p>Prior to ES6, there were no default argument values in Javascript, so currying had to be done in different way. Now we have them and I tried to translate Python to Javascript literally:</p>  <pre><code>funcs = [] for (var i=0; i&lt;5; i++) {    funcs.push(function (i=i) {console.log(i)}) } # this part pass OK funcs[2]() ReferenceError: i is not defined     at Array.&lt;anonymous&gt; (evalmachine.&lt;anonymous&gt;:3:27)     at evalmachine.&lt;anonymous&gt;:1:9     at ContextifyScript.Script.runInThisContext (vm.js:26:33)     at Object.exports.runInThisContext (vm.js:79:17)     at run ([eval]:608:19)     at onRunRequest ([eval]:379:22)     at onMessage ([eval]:347:17)     at emitTwo (events.js:106:13)     at process.emit (events.js:191:7)     at process.nextTick (internal/child_process.js:752:12) </code></pre>  <p>Why it fails? What's the difference between Python and Javascript ways to pass default values?</p>  <p>(Okay, I know that I can use <code>let</code> here instead of <code>var</code>, I'm just studying Javascript after several years with Python and trying to understand it underhoods.)</p>"	41454092	"<p>Both Javascript and Python using late-binding in closures. However, using a default argument is a hack that let's you simulate early binding in Python, and that works because default parameters are evaluated at <strong>function definition time</strong> in Python. However, in Javascript default arguments, according to the docs </p>  <p><a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Default_parameters"" rel=""nofollow noreferrer"">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Default_parameters</a></p>  <blockquote>   <p>The default argument gets evaluated at call time, so unlike e.g. in   Python, a new object is created each time the function is called.</p> </blockquote>  <p>Here is one of the solutions used in Python that can be applied to this problem in Javascript. I've transliterated into Javascript the best I could. Essentially, define <em>another</em> anonymous function that returns your original, and apply it at the same time. This is very messy to my eyes, and in Python, I always go with the default-argument:</p>  <pre><code>funcs = [] for (var i = 0; i &lt; 5; i++) {     funcs.push((function (i) {return function() {console.log(i)}})(i)) }; funcs[0]() // 0 funcs[4]() // 4 </code></pre>  <p>In Python:</p>  <pre><code>&gt;&gt;&gt; funcs = [] &gt;&gt;&gt; for i in range(5): ...     funcs.append((lambda i: lambda : print(i))()) ... &gt;&gt;&gt; funcs[0]() 0 &gt;&gt;&gt; funcs[4]() 4 </code></pre>  <p>I think it is clear that you should use <code>.bind</code> in Javascript, as elucidated in other answers, and not this clunky solution.</p>"
41461960	Upload a File using Python Selenium in Javascript Web	python-2.7|selenium-webdriver	2017-01-04 10:47:43.783000 UTC	"<p>I need to automatize a file upload to a web page that is using some javascript code. To do so I'm using python selenium web driver to access the web page. Login the web page and browsing until the page where the file has to be uploaded works fine, but then I can't figure out how to click the choose file button.</p>  <p>This is how the code looks like until the point where I should upload the file:</p>  <pre><code>from selenium import webdriver from selenium.webdriver.common.keys import Keys from selenium.webdriver.support import ui from selenium.webdriver.support.wait import WebDriverWait      def page_is_loaded(driver):     return driver.find_element_by_tag_name(""body"") != None  base_url = 'https://www.xxxxxx.es/yyyyy/login.do?method=login'  driver = webdriver.Chrome('/usr/lib/chromium-browser/chromedriver') driver.get(base_url)  wait = ui.WebDriverWait(driver, 10) wait.until(page_is_loaded)  username = driver.find_element_by_name('j_username') username.send_keys('XXX')  password = driver.find_element_by_name('j_password') password.send_keys('YYY')  accept = driver.find_element_by_name('aceptar') accept.click()  # 'Carga de ficheros' driver.find_element_by_xpath('//*[@id=""cMI_1""]').click(); driver.find_element_by_xpath('//*[@id=""cMI_1_1""]').click(); </code></pre>  <p>This is how the web page looks like: <a href=""https://i.stack.imgur.com/0kgkk.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/0kgkk.png"" alt=""enter image description here""></a></p>  <p>And this is how the page looks like when inspecting it: <a href=""https://i.stack.imgur.com/L4dbK.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/L4dbK.png"" alt=""enter image description here""></a></p>  <p>I've tried a lot of methods to 'click' the 'Choose File' button, with no success:</p>  <pre><code>driver.find_element_by_xpath('//*[@id=""tablaFormulario""]/tbody/tr[6]/td[2]/input').click driver.find_element_by_css_selector('tablaFormulario').click() driver.find_element_by_link_text('fichero').click()     driver.find_element_by_link_text('Choose File').click()  driver.find_element_by_class_name('contCampo').click()    driver.find_elements_by_tag_name('fichero').click()  driver.find_elements_by_tag_name('contCampo').click() </code></pre>  <p>I suspect that it is related to the fact that the page runs with some javascript code... Any help will be appreciated!</p>"	41462086	"<p>Even if you able to click that button, you won't be able to handle file upload prompt with <code>selenium</code>. So you should not <code>click()</code> that button to upload file, but send path to file to it:</p>  <pre><code>from selenium.webdriver.common.by import By from selenium.webdriver.support.ui import WebDriverWait from selenium.webdriver.support import expected_conditions as EC  driver.switch_to_frame('principal') WebDriverWait(driver, 10).until(EC.presence_of_element_located((By.XPATH, '//input[@type=""file""]'))).send_keys(""C:\\path\\to\\file"") </code></pre>"
41520792	JavaScript equivalent of Python's parameterised string.format() function	javascript|python|string-formatting	2017-01-07 11:11:21.217000 UTC	"<p>Here is the Python example</p>  <pre><code>&gt;&gt;&gt; 'Coordinates: {latitude}, {longitude}'.format(latitude='37.24N', longitude='-115.81W')  'Coordinates: 37.24N, -115.81W' </code></pre>  <p>I am looking for a way to emulate this behavior in JavaScript. As I have plenty of templates strings as <code>""""""{} lorem {} ipsum""""""</code> and bunch of JSON objects as k,v pairs that correspond to parameters &amp; values. </p>  <p>I hate to implement my own parser if something equivalent already exist. Any similar libraries would be much appreciated. </p>"	41521002	"<p>In JavaScript this is called Template Literals. You can read about it <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals"" rel=""noreferrer"" title=""here"">here</a>. It works similar to the Python format function but its done inline.</p>  <pre><code>`string text ${some_variable} string text` </code></pre>  <p>Where the ` back tick starts and ends the string. Inside the back ticks any ${<em>variable</em>} will be converted to the value of the variable. Just make sure the variable is in the scope of the string you are trying to format.</p>"
41567497	How to send datas from python (flask) to javascript?	javascript|jquery|python|ajax|flask	2017-01-10 11:16:07.267000 UTC	"<p>Hello and happy new year everybody!</p>  <p>I have a practical problem: On my GUI I ask the user to specify a new document name with prompt method when he clicks on ""Save As New button""</p>  <pre><code>    $(""#btnSaveNew"").on( ""click"", function() {         var newScenarioName = prompt(""Please enter new scenario name"", ""scenarioX"");      $.ajax({                  url : 'http://' + document.domain + ':' + location.port + ""/saveAsNew"",                  type : 'POST',                  data : JSON.stringify({'data':data,'newName': newScenarioName}),                  contentType: 'application/json;charset=UTF-8',                  success: function (result) {                             loadScenario();                     },             }); </code></pre>  <p>My python-flask part ask a cloudant DB to send the file ID matching the specified name, if the name doesn't exist it creates the doc according to the metaData content but if it exists, I have no solution to warn the user </p>  <pre><code>newScenarioName = request.json[""newName""]  file_id = getscenario(newScenarioName) my_doc = my_db[file_id]  metaData = {     'name': newScenarioName,     'scenario': data }  my_doc = my_db.create_document(metaData) </code></pre>  <p>So I'd like to implement something like that</p>  <pre><code>newScenarioName = request.json[""newName""]  file_id = getscenario(newScenarioName) my_doc = my_db[file_id]   if my_doc['name'].exist():     scenario_exist = True      ******************     ** missing part **     ******************  else:     metaData = {         'name': newScenarioName,         'scenario': data     }      my_doc = my_db.create_document(metaData) </code></pre>  <p>where the ** missing part ** includes a send instruction to the .js part that modify a var that I can add so i can make a condition such as </p>  <pre><code>        var newScenarioName = prompt(""Please enter new scenario name"", ""scenarioX"");         if (newScenarioName === null || scenario_exist === True) {             newScenarioName = prompt(""Please enter new scenario name, previous one was null or already used"", ""scenarioX"");             } </code></pre>  <p>and abort the new scenario creation!</p>  <p>I saw a possible solution on: <a href=""https://stackoverflow.com/questions/27307563/how-to-pass-variable-from-python-to-javascript"">How to pass variable from python to javascript</a> making a jQuery call, but the thing is, I didn't code the HTML/web-js part so I'm kinda lost in the jQuery possibilities (and with the very technical, not web-noob-friendly manual)</p>  <p>So is there a way on python side to make a method like request.json['key'] but that goes other way (post.json['key'] ? :p)  Or maybe call the value .js side with an jQuery/Ajax method?</p>  <p>Thank you for your patience and for reading this issue and sorry for the grammar fault</p>  <p>EDIT: I think the only way to do so is to use websockets, the use of templates with Jinja seems a bit technically too much for me and it's more a bypass than a solution</p>"	41575081	"<p>Ok I just bypass my problem by redefining my ajax method, it calls back the function in case of error</p>  <pre><code>    function saveNewHandler() {         var newScenarioName = prompt(""file name"");         $.ajax({                  url : 'http://' + document.domain + ':' + location.port + ""/saveAsNew"",                  type : 'POST',                  data : JSON.stringify({'path':scenarioFile, 'data':data, 'name': scenarioName, 'newName': newScenarioName}),                  contentType: 'application/json;charset=UTF-8',                  success: function (result) {                             loadScenario();                     }             })             .error(function(xhr, status, error) {                 console.log(xhr.responseText);                 saveNewHandler(); // ask for new file name              });         } </code></pre>"
41568327	Is there any equivalent of python's inspect.getargspec in javascript/node.js?	javascript|python|node.js|inspect	2017-01-10 11:58:59.097000 UTC	"<p>I want to get a list of argument names of <code>Function</code>, for example:</p>  <pre><code>var f = (a, b, c) =&gt; console.log(a, b, c); var [fargs] = something.like.inspect.getargspec(f); console.log(fargs); // ['a', 'b', 'c'] </code></pre>"	41568491	"<p>If you're using Node and want the argument names, check out the <code>introspect</code> NPM module:</p>  <pre><code>&gt; var introspect = require('introspect') &gt; var f = (a, b, c) =&gt; console.log(a, b, c); &gt; console.log(introspect(f)) [ 'a', 'b', 'c' ] </code></pre>"
41575695	Retrieving javascript file content with Python	javascript|python|web-scraping|python-requests	2017-01-10 18:19:11.600000 UTC	"<p>I need to retrieve a JavaScript file content with Python. I thought that maybe <code>requests</code> would do the trick - perhaps it does but it's either not as straightforward as I thought or I'm doing something wrong.</p>  <pre><code>import requests s = requests.Session() r = s.get(link) </code></pre>  <p>The response I get is</p>  <pre class=""lang-none prettyprint-override""><code>&lt;HTML&gt;&lt;HEAD&gt; &lt;TITLE&gt;Invalid URL&lt;/TITLE&gt; &lt;/HEAD&gt;&lt;BODY&gt; &lt;H1&gt;Invalid URL&lt;/H1&gt; The requested URL ""&amp;#91;no&amp;#32;URL&amp;#93;"", is invalid.&lt;p&gt; Reference&amp;#32;&amp;#35;9&amp;#46;3e1151c8&amp;#46;1484072058&amp;#46;308a223a &lt;/BODY&gt;&lt;/HTML&gt; </code></pre>  <p>What I need it's the same that what this code does in php,</p>  <pre><code>$ch = curl_init();       curl_setopt($ch, CURLOPT_URL, $link); $html = curl_exec($ch); </code></pre>"	41575942	"<p>You need to do a http get request</p>  <pre><code>import urllib2 link = ""http://whatever.com/your-file.js"" urllib2.urlopen(link).read() </code></pre>  <p>The php code is using curl which is doing alot more than it looks</p>"
41610186	difference between JavaScript bit-wise operator code and Python bit-wise operator code	javascript|python|bitwise-operators|bit-shift	2017-01-12 10:03:12.820000 UTC	"<p>I have converted JavaScript code which uses bit-wise operators in that code to Python code, but there is one problem when i do this in JavaScript and Python</p>  <pre><code>412287 &lt;&lt; 10 </code></pre>  <p>then I get this <strong>422181888</strong> same results in both languages. but when i do this in both</p>  <pre><code>424970184 &lt;&lt; 10 </code></pre>  <p>then i get different results in both of the languages <strong>1377771520</strong> in JavaScript and <strong>435169468416</strong> in Python</p>  <p>can anybody help me with this? any help would be appreciated.</p>"	41610235	"<p>As stated in <a href=""https://stackoverflow.com/questions/307179/what-is-javascripts-highest-integer-value-that-a-number-can-go-to-without-losin"">this SO answer</a>, in javascript the bitwise operators and shift operators operate on 32-bit ints, and your second example overflows the 32 bit capacity, so the python equivalent would be:</p>  <pre><code>(424970184 &lt;&lt; 10) &amp; 0x7FFFFFFF </code></pre>  <p>(you get a ""modulo""/""masked"" value with the signed 32 bit integer mask, not the actual value)</p>  <p>In Python there's no limit in capacity for integers, so you get the actual value.</p>"
41610186	difference between JavaScript bit-wise operator code and Python bit-wise operator code	javascript|python|bitwise-operators|bit-shift	2017-01-12 10:03:12.820000 UTC	"<p>I have converted JavaScript code which uses bit-wise operators in that code to Python code, but there is one problem when i do this in JavaScript and Python</p>  <pre><code>412287 &lt;&lt; 10 </code></pre>  <p>then I get this <strong>422181888</strong> same results in both languages. but when i do this in both</p>  <pre><code>424970184 &lt;&lt; 10 </code></pre>  <p>then i get different results in both of the languages <strong>1377771520</strong> in JavaScript and <strong>435169468416</strong> in Python</p>  <p>can anybody help me with this? any help would be appreciated.</p>"	41610348	<p>If you want the JavaScript equivalent value then what you can do is :</p> <pre><code>import ctypes  print(ctypes.c_int(424970184 &lt;&lt; 10 ^ 0).value) </code></pre> <p>Output:</p> <pre><code>1377771520 </code></pre>
41627971	click javascript button using selenium Python	javascript|python|selenium	2017-01-13 05:34:27.180000 UTC	"<p>I am new to Selenium Python and JavaScript. I am trying to automate the webpage navigations using Selenium python. I want to click one Java script button. Below is the html tag.</p>  <pre><code>&lt;button type=""button"" class=""hpButton"" onclick=""loadAddPage()"" id=""btnNew"" tabindex=""100"" style=""width: 83px;""&gt;New...&lt;/button&gt; </code></pre>  <p>How to click the 'New..' button from Selenium Python.  I already tried below things, but getting error.</p>  <pre><code>driver.find_element_by_id('btnNew') </code></pre>  <p>and</p>  <pre><code>NEXT_BUTTON_XPATH = '//input[@type=""button"" and @id=""btnNew""]' button = driver.find_element_by_xpath(NEXT_BUTTON_XPATH) button.click() </code></pre>  <p>snippet of HTML as requested</p>  <pre><code>&lt;script type='text/javascript' language='JavaScript'&gt; var FORM_URL_ID_MY_DISCOVERY_LIST = '/mxportal/settings/AutoDiscoveryList.jsp';&lt;/script&gt; &lt;script type='text/javascript' language='JavaScript'&gt; window.SELECTABLE_ID_MY_DISCOVERY_LIST = true;window.PRESELECTED_ID_MY_DISCOVERY_LIST = true;window.PRESELECTION_DEFAULT_ID_MY_DISCOVERY_LIST = true;&lt;/script&gt; &lt;div id='ID_MY_DISCOVERY_LIST_headerDiv' class='headerDivOuter'&gt;&lt;div class='headerDivInner'&gt;&lt;div onClick='MxFragmentLoad(""/mxportal/settings/AutoDiscoveryList.jsp?MxTableSort=true&amp;table=ID_MY_DISCOVERY_LIST&amp;sortCol=91787367&amp;sortUp=true"")' class='visualColumnHeader sortable'&gt;&lt;div class='pad0x5'&gt;&lt;/div&gt;&lt;/div&gt;&lt;div onClick='MxFragmentLoad(""/mxportal/settings/AutoDiscoveryList.jsp?MxTableSort=true&amp;table=ID_MY_DISCOVERY_LIST&amp;sortCol=0&amp;sortUp=false"")' class='visualColumnHeader sortedAscending'&gt;&lt;div class='pad0x5'&gt;Name&lt;/div&gt;&lt;/div&gt;&lt;div onClick='MxFragmentLoad(""/mxportal/settings/AutoDiscoveryList.jsp?MxTableSort=true&amp;table=ID_MY_DISCOVERY_LIST&amp;sortCol=1&amp;sortUp=true"")' class='visualColumnHeader sortable'&gt;&lt;div class='pad0x5'&gt;Last Run&lt;/div&gt;&lt;/div&gt;&lt;div onClick='MxFragmentLoad(""/mxportal/settings/AutoDiscoveryList.jsp?MxTableSort=true&amp;table=ID_MY_DISCOVERY_LIST&amp;sortCol=2&amp;sortUp=true"")' class='visualColumnHeader sortable'&gt;&lt;div class='pad0x5'&gt;Schedule&lt;/div&gt;&lt;/div&gt;&lt;div onClick='MxFragmentLoad(""/mxportal/settings/AutoDiscoveryList.jsp?MxTableSort=true&amp;table=ID_MY_DISCOVERY_LIST&amp;sortCol=3&amp;sortUp=true"")' class='visualColumnHeader sortable'&gt;&lt;div class='pad0x5'&gt;Comments&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id='ID_MY_DISCOVERY_LIST_scrollingTableDiv' style='clear:both;overflow:visible'&gt;&lt;table id='ID_MY_DISCOVERY_LIST' cellspacing='0' class='scrollingTable' cellpadding='0'&gt;&lt;thead&gt;&lt;tr class='readerCaptionRow'&gt;&lt;th onClick='MxFragmentLoad(""/mxportal/settings/AutoDiscoveryList.jsp?MxTableSort=true&amp;table=ID_MY_DISCOVERY_LIST&amp;sortCol=91787367&amp;sortUp=true"")' class='checkboxCell sortable'&gt;&lt;/th&gt;&lt;th onClick='MxFragmentLoad(""/mxportal/settings/AutoDiscoveryList.jsp?MxTableSort=true&amp;table=ID_MY_DISCOVERY_LIST&amp;sortCol=0&amp;sortUp=false"")' class='sortedAscending' scope='col'&gt;Name&lt;/th&gt;&lt;th onClick='MxFragmentLoad(""/mxportal/settings/AutoDiscoveryList.jsp?MxTableSort=true&amp;table=ID_MY_DISCOVERY_LIST&amp;sortCol=1&amp;sortUp=true"")' class='sortable' scope='col'&gt;Last Run&lt;/th&gt;&lt;th onClick='MxFragmentLoad(""/mxportal/settings/AutoDiscoveryList.jsp?MxTableSort=true&amp;table=ID_MY_DISCOVERY_LIST&amp;sortCol=2&amp;sortUp=true"")' class='sortable' scope='col'&gt;Schedule&lt;/th&gt;&lt;th onClick='MxFragmentLoad(""/mxportal/settings/AutoDiscoveryList.jsp?MxTableSort=true&amp;table=ID_MY_DISCOVERY_LIST&amp;sortCol=3&amp;sortUp=true"")' class='sortable' scope='col'&gt;Comments&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr id='ID_MY_DISCOVERY_LIST_dummyRow' class='dummyRow'&gt;&lt;td&gt;&lt;div&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class='sorted'&gt;&lt;div&gt;&lt;/div&gt;&lt;/td&gt;&lt;td&gt;&lt;div&gt;&lt;/div&gt;&lt;/td&gt;&lt;td&gt;&lt;div&gt;&lt;/div&gt;&lt;/td&gt;&lt;td&gt;&lt;div&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class='altRowColor rowHighlight'&gt;&lt;td scope='row' class='checkboxCell'&gt;&lt;input rowselector='yes' checked name='ID_MY_DISCOVERY_LIST_selector' type='RADIO'&gt;&lt;/td&gt;&lt;td class='sorted'&gt;ESX VC&lt;/td&gt;&lt;td&gt;1/13/17 11:00 AM&lt;/td&gt;&lt;td&gt;Periodic - Next Run: 1/14/17 11:00 AM&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td scope='row' class='checkboxCell'&gt;&lt;input name='ID_MY_DISCOVERY_LIST_selector' type='RADIO' rowselector='yes'&gt;&lt;/td&gt;&lt;td class='sorted'&gt;Hyper-vHost&lt;/td&gt;&lt;td&gt;1/13/17 11:00 AM&lt;/td&gt;&lt;td&gt;Periodic - Next Run: 1/14/17 11:00 AM&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class='altRowColor'&gt;&lt;td scope='row' class='checkboxCell'&gt;&lt;input name='ID_MY_DISCOVERY_LIST_selector' type='RADIO' rowselector='yes'&gt;&lt;/td&gt;&lt;td class='sorted'&gt;OA&lt;/td&gt;&lt;td&gt;1/13/17 11:00 AM&lt;/td&gt;&lt;td&gt;Periodic - Next Run: 1/14/17 11:00 AM&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td scope='row' class='checkboxCell'&gt;&lt;input name='ID_MY_DISCOVERY_LIST_selector' type='RADIO' rowselector='yes'&gt;&lt;/td&gt;&lt;td class='sorted'&gt;OA 42.35&lt;/td&gt;&lt;td&gt;1/13/17 11:00 AM&lt;/td&gt;&lt;td&gt;Periodic - Next Run: 1/14/17 11:00 AM&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class='altRowColor'&gt;&lt;td scope='row' class='checkboxCell'&gt;&lt;input name='ID_MY_DISCOVERY_LIST_selector' type='RADIO' rowselector='yes'&gt;&lt;/td&gt;&lt;td class='sorted'&gt;System Automatic Discovery&lt;/td&gt;&lt;td&gt;Never&lt;/td&gt;&lt;td&gt;&lt;b&gt;Task is Disabled&lt;/b&gt; - Periodic&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr style='display:none' class='noDataRow'&gt;&lt;td colspan='5'&gt;No discovery tasks defined.&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;         &lt;div style=""margin-top:15px""&gt;             &lt;div class='buttonSet'&gt; &lt;div class='bWrapperUp'&gt;&lt;div&gt;&lt;div&gt;&lt;button type='button' class='hpButton'  onclick='runNowStop()' id='btnRunNowStop' tabindex='105'&gt;Run Now&lt;/button&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt; &lt;div class='bWrapperUp'&gt;&lt;div&gt;&lt;div&gt;&lt;button type='button' class='hpButton'  onclick='viewTaskResults()' id='btnViewTaskResults' tabindex='104'&gt;View Task Results...&lt;/button&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt; &lt;div class='bWrapperUp'&gt;&lt;div&gt;&lt;div&gt;&lt;button type='button' class='hpButton'  onclick='confirmDeleteDiscoveryTask()' id='btnDelete' tabindex='103'&gt;Delete...&lt;/button&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt; &lt;div class='bWrapperUp'&gt;&lt;div&gt;&lt;div&gt;&lt;button type='button' class='hpButton'  onclick='enableDisableDiscoveryTask()' id='btnEnableDisable' tabindex='102'&gt;Disable&lt;/button&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt; &lt;div class='bWrapperUp'&gt;&lt;div&gt;&lt;div&gt;&lt;button type='button' class='hpButton'  onclick='loadEditPage()' id='btnEdit' tabindex='101'&gt;Edit...&lt;/button&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt; &lt;div class='bWrapperUp'&gt;&lt;div&gt;&lt;div&gt;&lt;button type='button' class='hpButton'  onclick='loadAddPage()' id='btnNew' tabindex='100'&gt;New...&lt;/button&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt; &lt;/div&gt; &lt;div class='clearFloats'&gt;&lt;/div&gt; </code></pre>"	41628031	"<p>You can use the following ways to locate your element</p>  <pre><code>find_element_by_id find_element_by_name find_element_by_xpath find_element_by_link_text find_element_by_partial_link_text find_element_by_tag_name find_element_by_class_name find_element_by_css_selector </code></pre>  <p>Please refer to the documentation at <a href=""http://selenium-python.readthedocs.io/locating-elements.html"" rel=""nofollow noreferrer"">http://selenium-python.readthedocs.io/locating-elements.html</a></p>  <p>Some examples of the same are as under</p>  <p><strong>1. By CSS Selector</strong></p>  <pre><code>driver.find_element_by_css_selector('.button.c_button.s_button').click() </code></pre>  <p><strong>2. By Name</strong></p>  <pre><code>driver.find_element_by_name('s_image').click() </code></pre>  <p><strong>3. By ClassName</strong></p>  <pre><code>driver.find_element_by_class_name('s_image').click() </code></pre>"
41627971	click javascript button using selenium Python	javascript|python|selenium	2017-01-13 05:34:27.180000 UTC	"<p>I am new to Selenium Python and JavaScript. I am trying to automate the webpage navigations using Selenium python. I want to click one Java script button. Below is the html tag.</p>  <pre><code>&lt;button type=""button"" class=""hpButton"" onclick=""loadAddPage()"" id=""btnNew"" tabindex=""100"" style=""width: 83px;""&gt;New...&lt;/button&gt; </code></pre>  <p>How to click the 'New..' button from Selenium Python.  I already tried below things, but getting error.</p>  <pre><code>driver.find_element_by_id('btnNew') </code></pre>  <p>and</p>  <pre><code>NEXT_BUTTON_XPATH = '//input[@type=""button"" and @id=""btnNew""]' button = driver.find_element_by_xpath(NEXT_BUTTON_XPATH) button.click() </code></pre>  <p>snippet of HTML as requested</p>  <pre><code>&lt;script type='text/javascript' language='JavaScript'&gt; var FORM_URL_ID_MY_DISCOVERY_LIST = '/mxportal/settings/AutoDiscoveryList.jsp';&lt;/script&gt; &lt;script type='text/javascript' language='JavaScript'&gt; window.SELECTABLE_ID_MY_DISCOVERY_LIST = true;window.PRESELECTED_ID_MY_DISCOVERY_LIST = true;window.PRESELECTION_DEFAULT_ID_MY_DISCOVERY_LIST = true;&lt;/script&gt; &lt;div id='ID_MY_DISCOVERY_LIST_headerDiv' class='headerDivOuter'&gt;&lt;div class='headerDivInner'&gt;&lt;div onClick='MxFragmentLoad(""/mxportal/settings/AutoDiscoveryList.jsp?MxTableSort=true&amp;table=ID_MY_DISCOVERY_LIST&amp;sortCol=91787367&amp;sortUp=true"")' class='visualColumnHeader sortable'&gt;&lt;div class='pad0x5'&gt;&lt;/div&gt;&lt;/div&gt;&lt;div onClick='MxFragmentLoad(""/mxportal/settings/AutoDiscoveryList.jsp?MxTableSort=true&amp;table=ID_MY_DISCOVERY_LIST&amp;sortCol=0&amp;sortUp=false"")' class='visualColumnHeader sortedAscending'&gt;&lt;div class='pad0x5'&gt;Name&lt;/div&gt;&lt;/div&gt;&lt;div onClick='MxFragmentLoad(""/mxportal/settings/AutoDiscoveryList.jsp?MxTableSort=true&amp;table=ID_MY_DISCOVERY_LIST&amp;sortCol=1&amp;sortUp=true"")' class='visualColumnHeader sortable'&gt;&lt;div class='pad0x5'&gt;Last Run&lt;/div&gt;&lt;/div&gt;&lt;div onClick='MxFragmentLoad(""/mxportal/settings/AutoDiscoveryList.jsp?MxTableSort=true&amp;table=ID_MY_DISCOVERY_LIST&amp;sortCol=2&amp;sortUp=true"")' class='visualColumnHeader sortable'&gt;&lt;div class='pad0x5'&gt;Schedule&lt;/div&gt;&lt;/div&gt;&lt;div onClick='MxFragmentLoad(""/mxportal/settings/AutoDiscoveryList.jsp?MxTableSort=true&amp;table=ID_MY_DISCOVERY_LIST&amp;sortCol=3&amp;sortUp=true"")' class='visualColumnHeader sortable'&gt;&lt;div class='pad0x5'&gt;Comments&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id='ID_MY_DISCOVERY_LIST_scrollingTableDiv' style='clear:both;overflow:visible'&gt;&lt;table id='ID_MY_DISCOVERY_LIST' cellspacing='0' class='scrollingTable' cellpadding='0'&gt;&lt;thead&gt;&lt;tr class='readerCaptionRow'&gt;&lt;th onClick='MxFragmentLoad(""/mxportal/settings/AutoDiscoveryList.jsp?MxTableSort=true&amp;table=ID_MY_DISCOVERY_LIST&amp;sortCol=91787367&amp;sortUp=true"")' class='checkboxCell sortable'&gt;&lt;/th&gt;&lt;th onClick='MxFragmentLoad(""/mxportal/settings/AutoDiscoveryList.jsp?MxTableSort=true&amp;table=ID_MY_DISCOVERY_LIST&amp;sortCol=0&amp;sortUp=false"")' class='sortedAscending' scope='col'&gt;Name&lt;/th&gt;&lt;th onClick='MxFragmentLoad(""/mxportal/settings/AutoDiscoveryList.jsp?MxTableSort=true&amp;table=ID_MY_DISCOVERY_LIST&amp;sortCol=1&amp;sortUp=true"")' class='sortable' scope='col'&gt;Last Run&lt;/th&gt;&lt;th onClick='MxFragmentLoad(""/mxportal/settings/AutoDiscoveryList.jsp?MxTableSort=true&amp;table=ID_MY_DISCOVERY_LIST&amp;sortCol=2&amp;sortUp=true"")' class='sortable' scope='col'&gt;Schedule&lt;/th&gt;&lt;th onClick='MxFragmentLoad(""/mxportal/settings/AutoDiscoveryList.jsp?MxTableSort=true&amp;table=ID_MY_DISCOVERY_LIST&amp;sortCol=3&amp;sortUp=true"")' class='sortable' scope='col'&gt;Comments&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr id='ID_MY_DISCOVERY_LIST_dummyRow' class='dummyRow'&gt;&lt;td&gt;&lt;div&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class='sorted'&gt;&lt;div&gt;&lt;/div&gt;&lt;/td&gt;&lt;td&gt;&lt;div&gt;&lt;/div&gt;&lt;/td&gt;&lt;td&gt;&lt;div&gt;&lt;/div&gt;&lt;/td&gt;&lt;td&gt;&lt;div&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class='altRowColor rowHighlight'&gt;&lt;td scope='row' class='checkboxCell'&gt;&lt;input rowselector='yes' checked name='ID_MY_DISCOVERY_LIST_selector' type='RADIO'&gt;&lt;/td&gt;&lt;td class='sorted'&gt;ESX VC&lt;/td&gt;&lt;td&gt;1/13/17 11:00 AM&lt;/td&gt;&lt;td&gt;Periodic - Next Run: 1/14/17 11:00 AM&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td scope='row' class='checkboxCell'&gt;&lt;input name='ID_MY_DISCOVERY_LIST_selector' type='RADIO' rowselector='yes'&gt;&lt;/td&gt;&lt;td class='sorted'&gt;Hyper-vHost&lt;/td&gt;&lt;td&gt;1/13/17 11:00 AM&lt;/td&gt;&lt;td&gt;Periodic - Next Run: 1/14/17 11:00 AM&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class='altRowColor'&gt;&lt;td scope='row' class='checkboxCell'&gt;&lt;input name='ID_MY_DISCOVERY_LIST_selector' type='RADIO' rowselector='yes'&gt;&lt;/td&gt;&lt;td class='sorted'&gt;OA&lt;/td&gt;&lt;td&gt;1/13/17 11:00 AM&lt;/td&gt;&lt;td&gt;Periodic - Next Run: 1/14/17 11:00 AM&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td scope='row' class='checkboxCell'&gt;&lt;input name='ID_MY_DISCOVERY_LIST_selector' type='RADIO' rowselector='yes'&gt;&lt;/td&gt;&lt;td class='sorted'&gt;OA 42.35&lt;/td&gt;&lt;td&gt;1/13/17 11:00 AM&lt;/td&gt;&lt;td&gt;Periodic - Next Run: 1/14/17 11:00 AM&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class='altRowColor'&gt;&lt;td scope='row' class='checkboxCell'&gt;&lt;input name='ID_MY_DISCOVERY_LIST_selector' type='RADIO' rowselector='yes'&gt;&lt;/td&gt;&lt;td class='sorted'&gt;System Automatic Discovery&lt;/td&gt;&lt;td&gt;Never&lt;/td&gt;&lt;td&gt;&lt;b&gt;Task is Disabled&lt;/b&gt; - Periodic&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr style='display:none' class='noDataRow'&gt;&lt;td colspan='5'&gt;No discovery tasks defined.&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;         &lt;div style=""margin-top:15px""&gt;             &lt;div class='buttonSet'&gt; &lt;div class='bWrapperUp'&gt;&lt;div&gt;&lt;div&gt;&lt;button type='button' class='hpButton'  onclick='runNowStop()' id='btnRunNowStop' tabindex='105'&gt;Run Now&lt;/button&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt; &lt;div class='bWrapperUp'&gt;&lt;div&gt;&lt;div&gt;&lt;button type='button' class='hpButton'  onclick='viewTaskResults()' id='btnViewTaskResults' tabindex='104'&gt;View Task Results...&lt;/button&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt; &lt;div class='bWrapperUp'&gt;&lt;div&gt;&lt;div&gt;&lt;button type='button' class='hpButton'  onclick='confirmDeleteDiscoveryTask()' id='btnDelete' tabindex='103'&gt;Delete...&lt;/button&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt; &lt;div class='bWrapperUp'&gt;&lt;div&gt;&lt;div&gt;&lt;button type='button' class='hpButton'  onclick='enableDisableDiscoveryTask()' id='btnEnableDisable' tabindex='102'&gt;Disable&lt;/button&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt; &lt;div class='bWrapperUp'&gt;&lt;div&gt;&lt;div&gt;&lt;button type='button' class='hpButton'  onclick='loadEditPage()' id='btnEdit' tabindex='101'&gt;Edit...&lt;/button&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt; &lt;div class='bWrapperUp'&gt;&lt;div&gt;&lt;div&gt;&lt;button type='button' class='hpButton'  onclick='loadAddPage()' id='btnNew' tabindex='100'&gt;New...&lt;/button&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt; &lt;/div&gt; &lt;div class='clearFloats'&gt;&lt;/div&gt; </code></pre>"	41630352	"<p>You should try to add some waiting time before clicking button as follow:</p>  <pre><code>from selenium.webdriver.common.by import By from selenium.webdriver.support.ui import WebDriverWait from selenium.webdriver.support import expected_conditions as EC  button = WebDriverWait(driver, 20).until(EC.element_to_be_clickable((By.ID, ""btnNew""))); button.click(); </code></pre>  <p>With above code you'll be able to wait up to 20 seconds for target button to become clickable. Otherwise, you'll get <code>TimeOutException</code></p>  <p>If this solution won't work, check whether your button located inside <code>&lt;iframe&gt;</code> element. If so, switch to that frame before clicking button:</p>  <pre><code>driver.switch_to_frame('iframe_id') </code></pre>"
41627971	click javascript button using selenium Python	javascript|python|selenium	2017-01-13 05:34:27.180000 UTC	"<p>I am new to Selenium Python and JavaScript. I am trying to automate the webpage navigations using Selenium python. I want to click one Java script button. Below is the html tag.</p>  <pre><code>&lt;button type=""button"" class=""hpButton"" onclick=""loadAddPage()"" id=""btnNew"" tabindex=""100"" style=""width: 83px;""&gt;New...&lt;/button&gt; </code></pre>  <p>How to click the 'New..' button from Selenium Python.  I already tried below things, but getting error.</p>  <pre><code>driver.find_element_by_id('btnNew') </code></pre>  <p>and</p>  <pre><code>NEXT_BUTTON_XPATH = '//input[@type=""button"" and @id=""btnNew""]' button = driver.find_element_by_xpath(NEXT_BUTTON_XPATH) button.click() </code></pre>  <p>snippet of HTML as requested</p>  <pre><code>&lt;script type='text/javascript' language='JavaScript'&gt; var FORM_URL_ID_MY_DISCOVERY_LIST = '/mxportal/settings/AutoDiscoveryList.jsp';&lt;/script&gt; &lt;script type='text/javascript' language='JavaScript'&gt; window.SELECTABLE_ID_MY_DISCOVERY_LIST = true;window.PRESELECTED_ID_MY_DISCOVERY_LIST = true;window.PRESELECTION_DEFAULT_ID_MY_DISCOVERY_LIST = true;&lt;/script&gt; &lt;div id='ID_MY_DISCOVERY_LIST_headerDiv' class='headerDivOuter'&gt;&lt;div class='headerDivInner'&gt;&lt;div onClick='MxFragmentLoad(""/mxportal/settings/AutoDiscoveryList.jsp?MxTableSort=true&amp;table=ID_MY_DISCOVERY_LIST&amp;sortCol=91787367&amp;sortUp=true"")' class='visualColumnHeader sortable'&gt;&lt;div class='pad0x5'&gt;&lt;/div&gt;&lt;/div&gt;&lt;div onClick='MxFragmentLoad(""/mxportal/settings/AutoDiscoveryList.jsp?MxTableSort=true&amp;table=ID_MY_DISCOVERY_LIST&amp;sortCol=0&amp;sortUp=false"")' class='visualColumnHeader sortedAscending'&gt;&lt;div class='pad0x5'&gt;Name&lt;/div&gt;&lt;/div&gt;&lt;div onClick='MxFragmentLoad(""/mxportal/settings/AutoDiscoveryList.jsp?MxTableSort=true&amp;table=ID_MY_DISCOVERY_LIST&amp;sortCol=1&amp;sortUp=true"")' class='visualColumnHeader sortable'&gt;&lt;div class='pad0x5'&gt;Last Run&lt;/div&gt;&lt;/div&gt;&lt;div onClick='MxFragmentLoad(""/mxportal/settings/AutoDiscoveryList.jsp?MxTableSort=true&amp;table=ID_MY_DISCOVERY_LIST&amp;sortCol=2&amp;sortUp=true"")' class='visualColumnHeader sortable'&gt;&lt;div class='pad0x5'&gt;Schedule&lt;/div&gt;&lt;/div&gt;&lt;div onClick='MxFragmentLoad(""/mxportal/settings/AutoDiscoveryList.jsp?MxTableSort=true&amp;table=ID_MY_DISCOVERY_LIST&amp;sortCol=3&amp;sortUp=true"")' class='visualColumnHeader sortable'&gt;&lt;div class='pad0x5'&gt;Comments&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id='ID_MY_DISCOVERY_LIST_scrollingTableDiv' style='clear:both;overflow:visible'&gt;&lt;table id='ID_MY_DISCOVERY_LIST' cellspacing='0' class='scrollingTable' cellpadding='0'&gt;&lt;thead&gt;&lt;tr class='readerCaptionRow'&gt;&lt;th onClick='MxFragmentLoad(""/mxportal/settings/AutoDiscoveryList.jsp?MxTableSort=true&amp;table=ID_MY_DISCOVERY_LIST&amp;sortCol=91787367&amp;sortUp=true"")' class='checkboxCell sortable'&gt;&lt;/th&gt;&lt;th onClick='MxFragmentLoad(""/mxportal/settings/AutoDiscoveryList.jsp?MxTableSort=true&amp;table=ID_MY_DISCOVERY_LIST&amp;sortCol=0&amp;sortUp=false"")' class='sortedAscending' scope='col'&gt;Name&lt;/th&gt;&lt;th onClick='MxFragmentLoad(""/mxportal/settings/AutoDiscoveryList.jsp?MxTableSort=true&amp;table=ID_MY_DISCOVERY_LIST&amp;sortCol=1&amp;sortUp=true"")' class='sortable' scope='col'&gt;Last Run&lt;/th&gt;&lt;th onClick='MxFragmentLoad(""/mxportal/settings/AutoDiscoveryList.jsp?MxTableSort=true&amp;table=ID_MY_DISCOVERY_LIST&amp;sortCol=2&amp;sortUp=true"")' class='sortable' scope='col'&gt;Schedule&lt;/th&gt;&lt;th onClick='MxFragmentLoad(""/mxportal/settings/AutoDiscoveryList.jsp?MxTableSort=true&amp;table=ID_MY_DISCOVERY_LIST&amp;sortCol=3&amp;sortUp=true"")' class='sortable' scope='col'&gt;Comments&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr id='ID_MY_DISCOVERY_LIST_dummyRow' class='dummyRow'&gt;&lt;td&gt;&lt;div&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class='sorted'&gt;&lt;div&gt;&lt;/div&gt;&lt;/td&gt;&lt;td&gt;&lt;div&gt;&lt;/div&gt;&lt;/td&gt;&lt;td&gt;&lt;div&gt;&lt;/div&gt;&lt;/td&gt;&lt;td&gt;&lt;div&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class='altRowColor rowHighlight'&gt;&lt;td scope='row' class='checkboxCell'&gt;&lt;input rowselector='yes' checked name='ID_MY_DISCOVERY_LIST_selector' type='RADIO'&gt;&lt;/td&gt;&lt;td class='sorted'&gt;ESX VC&lt;/td&gt;&lt;td&gt;1/13/17 11:00 AM&lt;/td&gt;&lt;td&gt;Periodic - Next Run: 1/14/17 11:00 AM&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td scope='row' class='checkboxCell'&gt;&lt;input name='ID_MY_DISCOVERY_LIST_selector' type='RADIO' rowselector='yes'&gt;&lt;/td&gt;&lt;td class='sorted'&gt;Hyper-vHost&lt;/td&gt;&lt;td&gt;1/13/17 11:00 AM&lt;/td&gt;&lt;td&gt;Periodic - Next Run: 1/14/17 11:00 AM&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class='altRowColor'&gt;&lt;td scope='row' class='checkboxCell'&gt;&lt;input name='ID_MY_DISCOVERY_LIST_selector' type='RADIO' rowselector='yes'&gt;&lt;/td&gt;&lt;td class='sorted'&gt;OA&lt;/td&gt;&lt;td&gt;1/13/17 11:00 AM&lt;/td&gt;&lt;td&gt;Periodic - Next Run: 1/14/17 11:00 AM&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td scope='row' class='checkboxCell'&gt;&lt;input name='ID_MY_DISCOVERY_LIST_selector' type='RADIO' rowselector='yes'&gt;&lt;/td&gt;&lt;td class='sorted'&gt;OA 42.35&lt;/td&gt;&lt;td&gt;1/13/17 11:00 AM&lt;/td&gt;&lt;td&gt;Periodic - Next Run: 1/14/17 11:00 AM&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class='altRowColor'&gt;&lt;td scope='row' class='checkboxCell'&gt;&lt;input name='ID_MY_DISCOVERY_LIST_selector' type='RADIO' rowselector='yes'&gt;&lt;/td&gt;&lt;td class='sorted'&gt;System Automatic Discovery&lt;/td&gt;&lt;td&gt;Never&lt;/td&gt;&lt;td&gt;&lt;b&gt;Task is Disabled&lt;/b&gt; - Periodic&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr style='display:none' class='noDataRow'&gt;&lt;td colspan='5'&gt;No discovery tasks defined.&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;         &lt;div style=""margin-top:15px""&gt;             &lt;div class='buttonSet'&gt; &lt;div class='bWrapperUp'&gt;&lt;div&gt;&lt;div&gt;&lt;button type='button' class='hpButton'  onclick='runNowStop()' id='btnRunNowStop' tabindex='105'&gt;Run Now&lt;/button&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt; &lt;div class='bWrapperUp'&gt;&lt;div&gt;&lt;div&gt;&lt;button type='button' class='hpButton'  onclick='viewTaskResults()' id='btnViewTaskResults' tabindex='104'&gt;View Task Results...&lt;/button&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt; &lt;div class='bWrapperUp'&gt;&lt;div&gt;&lt;div&gt;&lt;button type='button' class='hpButton'  onclick='confirmDeleteDiscoveryTask()' id='btnDelete' tabindex='103'&gt;Delete...&lt;/button&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt; &lt;div class='bWrapperUp'&gt;&lt;div&gt;&lt;div&gt;&lt;button type='button' class='hpButton'  onclick='enableDisableDiscoveryTask()' id='btnEnableDisable' tabindex='102'&gt;Disable&lt;/button&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt; &lt;div class='bWrapperUp'&gt;&lt;div&gt;&lt;div&gt;&lt;button type='button' class='hpButton'  onclick='loadEditPage()' id='btnEdit' tabindex='101'&gt;Edit...&lt;/button&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt; &lt;div class='bWrapperUp'&gt;&lt;div&gt;&lt;div&gt;&lt;button type='button' class='hpButton'  onclick='loadAddPage()' id='btnNew' tabindex='100'&gt;New...&lt;/button&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt; &lt;/div&gt; &lt;div class='clearFloats'&gt;&lt;/div&gt; </code></pre>"	41639700	"<p>I am guessing this is a frames problem.</p>  <p>Even if you have a perfectly-correct XPATH, <strong>Selenium won't see the element unless you're already in the frame that contains the element</strong>.  </p>  <p>To quickly see how many frames are on the page you're on:</p>  <pre><code>a = driver.find_elements_by_css_selector(""frame"") print(len(a)) </code></pre>  <p>If you then find out there are, say, three frames, you could do:</p>  <pre><code>driver.switch_to_frame(a[0]) button.click() </code></pre>  <p>or</p>  <pre><code>driver.switch_to_frame(a[1]) button.click() </code></pre>  <p>or</p>  <pre><code>driver.switch_to_frame(a[2]) button.click() </code></pre>"
41641105	Assign Python variable to JavaScript variable	javascript|python	2017-01-13 18:23:38.237000 UTC	"<p>i am doing maintenance on a website that is using Python and CGI. The site currently runs on Python, but for some weird reason I have to assign a Python variable to a JavaScript variable on the same Python file. I have tried many things and they have not worked, I don't know if it's even possible to do so. Any help would be greatly appreciated. I have simplified the code just to show the variable exchange from Python to JavaScript I need to do. My Python version is 3.5.2 and the site is running on IIS server. Again thank you very much for your help and time.</p>  <pre><code>import cgi  print('') temp = 78 #These is the Python variable I need to assign to the Javascript variable.  print('&lt;html&gt;') print('&lt;script type=""text/javascript""&gt;') print('var x = {{temp}};') #Here's how I'm trying to assign the python variable. print('document.write(x);') print('document.write(""HELLO PYTHON VARIABLE!!"");') print('&lt;/script&gt;') print('&lt;/html&gt;') </code></pre>"	41641173	"<p>Many ways to do this:</p>  <pre><code>print ('var x = %d' % temp)  print ('var x = ' + str(temp) + ';')  print ('var x = {{temp}};'.replace(""{{temp}}"", str(temp))) </code></pre>"
41641105	Assign Python variable to JavaScript variable	javascript|python	2017-01-13 18:23:38.237000 UTC	"<p>i am doing maintenance on a website that is using Python and CGI. The site currently runs on Python, but for some weird reason I have to assign a Python variable to a JavaScript variable on the same Python file. I have tried many things and they have not worked, I don't know if it's even possible to do so. Any help would be greatly appreciated. I have simplified the code just to show the variable exchange from Python to JavaScript I need to do. My Python version is 3.5.2 and the site is running on IIS server. Again thank you very much for your help and time.</p>  <pre><code>import cgi  print('') temp = 78 #These is the Python variable I need to assign to the Javascript variable.  print('&lt;html&gt;') print('&lt;script type=""text/javascript""&gt;') print('var x = {{temp}};') #Here's how I'm trying to assign the python variable. print('document.write(x);') print('document.write(""HELLO PYTHON VARIABLE!!"");') print('&lt;/script&gt;') print('&lt;/html&gt;') </code></pre>"	41641176	<pre><code>print('var x = {{temp}};') #Here's how I'm trying to assign the python variable. </code></pre>  <p>It looks like you are trying to do a template thing without actually being in a templating engine.</p>  <p>Try this instead:</p>  <pre><code>print( 'var x =' + temp + ';' ) </code></pre>
41649737	"Within Django, how can I turn my Python datetime string into a Javascript Date object?"	javascript|python|json|django	2017-01-14 11:58:55.527000 UTC	"<p>I am attempting to go from JSON data -> Javascript Date object within Django.  </p>  <p>Currently, I have it set up so that I have a function which hits the API and saves the JSON data into one of my Model objects.<br> edit: the JSON datetime string looks like so: '2017-01-14 14:00:00'  </p>  <p>Then in my View, I will query for the object containing the JSON, and send a datetime string which was acquired from the JSON, over to my template as a context variable.  </p>  <p>Within the template, I am trying to graph the string data using Google Chart, and Google Charts requires that the first column for the Line graph to be a JS Date object. How can I turn the sent over template variable: {{ date }} into a format equivalent to Javascript's  </p>  <pre><code>new Date(2017, 01, 14)   </code></pre>  <p>so that it may be used with Google Charts?  </p>  <p>edit: The problem is not that I don't know how to format strings, but that I don't know how to get the string to appear in the first place, as it will be a django template variable first. </p>"	41650295	"<pre><code># general python datetime stringformatting:  &gt;&gt;&gt; import datetime &gt;&gt;&gt; d = datetime.datetime.now() &gt;&gt;&gt; d.strftime(""%Y-%m-%d %H:%M:%S"") '2017-01-14 05:04:26'  # you can embed other chars to fake the js date constructor &gt;&gt;&gt; d.strftime(""new Date(%Y, %m, %d)"") 'new Date(2017, 01, 14)' </code></pre>  <p>See the docs @ <a href=""https://docs.python.org/2/library/datetime.html#strftime-strptime-behavior"" rel=""nofollow noreferrer"">https://docs.python.org/2/library/datetime.html#strftime-strptime-behavior</a></p>"
41649737	"Within Django, how can I turn my Python datetime string into a Javascript Date object?"	javascript|python|json|django	2017-01-14 11:58:55.527000 UTC	"<p>I am attempting to go from JSON data -> Javascript Date object within Django.  </p>  <p>Currently, I have it set up so that I have a function which hits the API and saves the JSON data into one of my Model objects.<br> edit: the JSON datetime string looks like so: '2017-01-14 14:00:00'  </p>  <p>Then in my View, I will query for the object containing the JSON, and send a datetime string which was acquired from the JSON, over to my template as a context variable.  </p>  <p>Within the template, I am trying to graph the string data using Google Chart, and Google Charts requires that the first column for the Line graph to be a JS Date object. How can I turn the sent over template variable: {{ date }} into a format equivalent to Javascript's  </p>  <pre><code>new Date(2017, 01, 14)   </code></pre>  <p>so that it may be used with Google Charts?  </p>  <p>edit: The problem is not that I don't know how to format strings, but that I don't know how to get the string to appear in the first place, as it will be a django template variable first. </p>"	41658657	"<pre><code>new Date({{ value|date:""U"" }} * 1000)   </code></pre>  <p>Converts Django template variable datetime object into a unix timestamp which is an acceptable argument for creating JS Date objects.<br> Multiply by 1000 to retrieve seconds value.  </p>"
41668559	How to send a HTML string from Javascript to Flask (python)?	javascript|python|html|flask	2017-01-16 02:17:18.853000 UTC	"<p>I want to send a html script to a python Flask route. It can be content of an html page (with tags and text content).</p>  <p>Here is the javascript portion:</p>  <pre><code>var xhr = new XMLHttpRequest(); var url = ""http://localhost:5000/todo/api/v1.0/process/"" + htmlstring;   xhr.open('GET', url, false); xhr.send(); var retrievedtext = xhr.responseText; //This will be returned by Flask </code></pre>  <p>The flask portion of the code is:</p>  <pre><code>@app.route('/todo/api/v1.0/clean/&lt;source_code&gt;', methods=['GET']) def process_html_code(source_code):     //do processing     return result </code></pre>  <p>However, I always get 404 error when sending html as it is not allowed. What is a good approach to be able to send html to flask?</p>"	41671012	"<p>You need to use the same route in your Javascript code as you defined in your Python code.</p>  <p>In your flask app you defined a route </p>  <p><code>/todo/api/v1.0/clean/&lt;source_code&gt;</code></p>  <p>But in your Javascript code you try to send a request to </p>  <p><code>http://localhost:5000/todo/api/v1.0/process/</code></p>  <p>That doesn't fit. Change your url in the Javascript code according to the defined route: </p>  <pre><code>var url = ""http://localhost:5000/todo/api/v1.0/clean/"" + htmlstring;   </code></pre>  <p>This works.</p>"
41678583	How to read Python list in Javascript [in a Django template]	javascript|python|django|otree	2017-01-16 14:24:56.320000 UTC	"<p>I'm programming in oTree (which is a Django based environment for social experiments) and I have the following problem. I defined some lists in Python and I'd like to import them and use them in an HTML template. If I print them in HTML I manage to see them without any problem, however, once I need to use them in Javascript, the program fails to read them and the single quotes of the elements of the list are converted in <code>&amp;#39;</code>. The list is imported like this <code>var filtered_elements = {{ array }};</code>.</p>  <p>I think the problem is exactly here, as JS cannot work with them. Do you have any suggestion on how to do that? I considered using JSON, but since I'm quite new to programming, I cannot understand if it's just a waste of time or there is a simpler way out. Thanks for your answers!</p>"	41678679	"<p>It sounds like your data is already JSON, otherwise you would be getting single quotes and <code>u</code> prefixes. So the only issue is Django autoescaping; you can disable it with the <code>safe</code> filter:</p>  <pre><code>var filtered_elements = {{ array|safe }}; </code></pre>"
41678583	How to read Python list in Javascript [in a Django template]	javascript|python|django|otree	2017-01-16 14:24:56.320000 UTC	"<p>I'm programming in oTree (which is a Django based environment for social experiments) and I have the following problem. I defined some lists in Python and I'd like to import them and use them in an HTML template. If I print them in HTML I manage to see them without any problem, however, once I need to use them in Javascript, the program fails to read them and the single quotes of the elements of the list are converted in <code>&amp;#39;</code>. The list is imported like this <code>var filtered_elements = {{ array }};</code>.</p>  <p>I think the problem is exactly here, as JS cannot work with them. Do you have any suggestion on how to do that? I considered using JSON, but since I'm quite new to programming, I cannot understand if it's just a waste of time or there is a simpler way out. Thanks for your answers!</p>"	41678759	"<p>Your data <em>should</em> be JSON, instead of putting the Python list into the contact directly, put <code>""array"": json.dumps(array)</code> in the context dictionary.</p>  <p>The JSON string doesn't need HTML escaping inside a  tag, but it does need JS escaping! Otherwise some string may include something like <code>&lt;/script&gt;&lt;script&gt;absolutely anything goes here...</code> to run arbitrary JavaScript, if the JSON contains user data.</p>  <p>So use <code>|escapejs</code>:</p>  <pre><code>var filtered_elements = {{ array|escapejs}}; </code></pre>"
41689107	How to decode JavaScript response in python 3.4+?	javascript|python	2017-01-17 04:30:03.020000 UTC	"<p>I got this response from a website. I really don't know how to decode it and get the information that I want.</p>  <p>Here is the JavaScript response:</p>  <pre><code>{header:{code:0,message:{title:"""",detail:""""}},body:{parameters:{},dataStores:{""kccjStore"":{pageSize:100,pageNumber:1,recordCount:3,name:""kccjStore"",rowSetName:""pojo_com.neusoft.education.sysu.xscj.xscjcx.model.KccjModel"",order:""kclb asc"",metaData:{""jxbmc"":{dataType:12},""njzypm"":{dataType:12},""xh"":{dataType:12},""jxbh"":{dataType:12},""sftg"":{dataType:12},""zzcj"":{dataType:12},""cjzt"":{dataType:12},""bzw"":{dataType:12},""class"":{dataType:12},""xs"":{dataType:12},""xq"":{dataType:12},""jsxm"":{dataType:12},""xnd"":{dataType:12},""resource_id"":{dataType:12},""jxbpm"":{dataType:12},""jd"":{dataType:12},""kch"":{dataType:12},""kcywmc"":{dataType:12},""kcmc"":{dataType:12},""khfs"":{dataType:12},""cjlcId"":{dataType:12},""xf"":{dataType:12},""kclb"":{dataType:12},""zpcj"":{dataType:12}},rowSet:{primary:[{""jxbpm"":""79\/93"",""bzw"":""00"",""cjzt"":""2"",""cjlcId"":""11895237815"",""kcywmc"":""Mobile Information Engineering Training:Intermediate "",""jxbh"":""46000092161002"",""zpcj"":""90"",""resource_id"":""11895237815"",""xnd"":""2016-2017"",""xq"":""1"",""kch"":""46000092"",""kcmc"":""移动信息工程实训（中级）"",""kclb"":""11"",""xf"":""3.0"",""xs"":""72.0"",""zzcj"":""90"",""jd"":""4.0"",""sftg"":""1"",""xh"":""14353379"",""njzypm"":""304\/403"",""class"":""class com.neusoft.education.sysu.xscj.xscjcx.model.KccjModel""},{""jxbpm"":""74\/128"",""bzw"":""00"",""cjzt"":""2"",""cjlcId"":""12825792491"",""kcywmc"":""Database Systems Lab"",""jxbh"":""46000085161003"",""jsxm"":""桑应朋"",""khfs"":""03"",""zpcj"":""94"",""resource_id"":""12825792491"",""xnd"":""2016-2017"",""xq"":""1"",""kch"":""46000085"",""kcmc"":""数据库系统实验"",""kclb"":""21"",""xf"":""1.0"",""xs"":""36.0"",""zzcj"":""94"",""jd"":""4.4"",""sftg"":""1"",""xh"":""14353379"",""njzypm"":""157\/403"",""class"":""class com.neusoft.education.sysu.xscj.xscjcx.model.KccjModel""},{""jxbpm"":""20\/167"",""bzw"":""00"",""cjzt"":""2"",""cjlcId"":""12825622928"",""kcywmc"":""Database Systems"",""jxbh"":""46000084161001"",""jsxm"":""桑应朋"",""khfs"":""01"",""zpcj"":""87"",""resource_id"":""12825622928"",""xnd"":""2016-2017"",""xq"":""1"",""kch"":""46000084"",""kcmc"":""数据库系统"",""kclb"":""21"",""xf"":""2.0"",""xs"":""36.0"",""zzcj"":""87"",""jd"":""3.7"",""sftg"":""1"",""xh"":""14353379"",""njzypm"":""34\/403"",""class"":""class com.neusoft.education.sysu.xscj.xscjcx.model.KccjModel""}]}}}}} </code></pre>  <p>I am working with Python 3.4. Below is my code</p>  <pre><code>html_doc = opener.open('http://wjw.sysu.edu.cn/api/score?year=2016-2017&amp;term=1&amp;pylb=01').read().decode('utf-8') </code></pre>  <p>Thanks in advance!</p>  <p>——————————————————</p>  <p>I mistakenly thought it was a JSON file before and asked a bad question. I'm sorry for that. But thank you for helping me! Hope some of you can help me with my new question!</p>"	41689219	"<p>It looks like you're data is not strictly JSON because some of the keys are not strings.</p>  <p>Also, there seems to be a missing matching curly brace -- should add as the first character,</p>  <pre><code>{header:{code:0,message:{title:"""",detail:""""}},body:{parameters:{},dataStores:{""kccjStore"":{pageSize:100,pageNumber:1,recordCount:3,name:""kccjStore"",rowSetName:""pojo_com.neusoft.education.sysu.xscj.xscjcx.model.KccjModel"",order:""kclb asc"",metaData:{""jxbmc"":{dataType:12},""njzypm"":{dataType:12},""xh"":{dataType:12},""jxbh"":{dataType:12},""sftg"":{dataType:12},""zzcj"":{dataType:12},""cjzt"":{dataType:12},""bzw"":{dataType:12},""class"":{dataType:12},""xs"":{dataType:12},""xq"":{dataType:12},""jsxm"":{dataType:12},""xnd"":{dataType:12},""resource_id"":{dataType:12},""jxbpm"":{dataType:12},""jd"":{dataType:12},""kch"":{dataType:12},""kcywmc"":{dataType:12},""kcmc"":{dataType:12},""khfs"":{dataType:12},""cjlcId"":{dataType:12},""xf"":{dataType:12},""kclb"":{dataType:12},""zpcj"":{dataType:12}},rowSet:{primary:[{""jxbpm"":""79\/93"",""bzw"":""00"",""cjzt"":""2"",""cjlcId"":""11895237815"",""kcywmc"":""Mobile Information Engineering Training:Intermediate "",""jxbh"":""46000092161002"",""zpcj"":""90"",""resource_id"":""11895237815"",""xnd"":""2016-2017"",""xq"":""1"",""kch"":""46000092"",""kcmc"":""移动信息工程实训（中级）"",""kclb"":""11"",""xf"":""3.0"",""xs"":""72.0"",""zzcj"":""90"",""jd"":""4.0"",""sftg"":""1"",""xh"":""14353379"",""njzypm"":""304\/403"",""class"":""class com.neusoft.education.sysu.xscj.xscjcx.model.KccjModel""},{""jxbpm"":""74\/128"",""bzw"":""00"",""cjzt"":""2"",""cjlcId"":""12825792491"",""kcywmc"":""Database Systems Lab"",""jxbh"":""46000085161003"",""jsxm"":""桑应朋"",""khfs"":""03"",""zpcj"":""94"",""resource_id"":""12825792491"",""xnd"":""2016-2017"",""xq"":""1"",""kch"":""46000085"",""kcmc"":""数据库系统实验"",""kclb"":""21"",""xf"":""1.0"",""xs"":""36.0"",""zzcj"":""94"",""jd"":""4.4"",""sftg"":""1"",""xh"":""14353379"",""njzypm"":""157\/403"",""class"":""class com.neusoft.education.sysu.xscj.xscjcx.model.KccjModel""},{""jxbpm"":""20\/167"",""bzw"":""00"",""cjzt"":""2"",""cjlcId"":""12825622928"",""kcywmc"":""Database Systems"",""jxbh"":""46000084161001"",""jsxm"":""桑应朋"",""khfs"":""01"",""zpcj"":""87"",""resource_id"":""12825622928"",""xnd"":""2016-2017"",""xq"":""1"",""kch"":""46000084"",""kcmc"":""数据库系统"",""kclb"":""21"",""xf"":""2.0"",""xs"":""36.0"",""zzcj"":""87"",""jd"":""3.7"",""sftg"":""1"",""xh"":""14353379"",""njzypm"":""34\/403"",""class"":""class com.neusoft.education.sysu.xscj.xscjcx.model.KccjModel""}]}}}}} </code></pre>  <p><a href=""http://www.w3schools.com/js/js_json_intro.asp"" rel=""nofollow noreferrer"">Here</a> is a link to w3schools` JSON reference.</p>  <p><a href=""https://jsonformatter.curiousconcept.com/"" rel=""nofollow noreferrer"">Here</a> is a JSON formatter/validator.</p>"
41689107	How to decode JavaScript response in python 3.4+?	javascript|python	2017-01-17 04:30:03.020000 UTC	"<p>I got this response from a website. I really don't know how to decode it and get the information that I want.</p>  <p>Here is the JavaScript response:</p>  <pre><code>{header:{code:0,message:{title:"""",detail:""""}},body:{parameters:{},dataStores:{""kccjStore"":{pageSize:100,pageNumber:1,recordCount:3,name:""kccjStore"",rowSetName:""pojo_com.neusoft.education.sysu.xscj.xscjcx.model.KccjModel"",order:""kclb asc"",metaData:{""jxbmc"":{dataType:12},""njzypm"":{dataType:12},""xh"":{dataType:12},""jxbh"":{dataType:12},""sftg"":{dataType:12},""zzcj"":{dataType:12},""cjzt"":{dataType:12},""bzw"":{dataType:12},""class"":{dataType:12},""xs"":{dataType:12},""xq"":{dataType:12},""jsxm"":{dataType:12},""xnd"":{dataType:12},""resource_id"":{dataType:12},""jxbpm"":{dataType:12},""jd"":{dataType:12},""kch"":{dataType:12},""kcywmc"":{dataType:12},""kcmc"":{dataType:12},""khfs"":{dataType:12},""cjlcId"":{dataType:12},""xf"":{dataType:12},""kclb"":{dataType:12},""zpcj"":{dataType:12}},rowSet:{primary:[{""jxbpm"":""79\/93"",""bzw"":""00"",""cjzt"":""2"",""cjlcId"":""11895237815"",""kcywmc"":""Mobile Information Engineering Training:Intermediate "",""jxbh"":""46000092161002"",""zpcj"":""90"",""resource_id"":""11895237815"",""xnd"":""2016-2017"",""xq"":""1"",""kch"":""46000092"",""kcmc"":""移动信息工程实训（中级）"",""kclb"":""11"",""xf"":""3.0"",""xs"":""72.0"",""zzcj"":""90"",""jd"":""4.0"",""sftg"":""1"",""xh"":""14353379"",""njzypm"":""304\/403"",""class"":""class com.neusoft.education.sysu.xscj.xscjcx.model.KccjModel""},{""jxbpm"":""74\/128"",""bzw"":""00"",""cjzt"":""2"",""cjlcId"":""12825792491"",""kcywmc"":""Database Systems Lab"",""jxbh"":""46000085161003"",""jsxm"":""桑应朋"",""khfs"":""03"",""zpcj"":""94"",""resource_id"":""12825792491"",""xnd"":""2016-2017"",""xq"":""1"",""kch"":""46000085"",""kcmc"":""数据库系统实验"",""kclb"":""21"",""xf"":""1.0"",""xs"":""36.0"",""zzcj"":""94"",""jd"":""4.4"",""sftg"":""1"",""xh"":""14353379"",""njzypm"":""157\/403"",""class"":""class com.neusoft.education.sysu.xscj.xscjcx.model.KccjModel""},{""jxbpm"":""20\/167"",""bzw"":""00"",""cjzt"":""2"",""cjlcId"":""12825622928"",""kcywmc"":""Database Systems"",""jxbh"":""46000084161001"",""jsxm"":""桑应朋"",""khfs"":""01"",""zpcj"":""87"",""resource_id"":""12825622928"",""xnd"":""2016-2017"",""xq"":""1"",""kch"":""46000084"",""kcmc"":""数据库系统"",""kclb"":""21"",""xf"":""2.0"",""xs"":""36.0"",""zzcj"":""87"",""jd"":""3.7"",""sftg"":""1"",""xh"":""14353379"",""njzypm"":""34\/403"",""class"":""class com.neusoft.education.sysu.xscj.xscjcx.model.KccjModel""}]}}}}} </code></pre>  <p>I am working with Python 3.4. Below is my code</p>  <pre><code>html_doc = opener.open('http://wjw.sysu.edu.cn/api/score?year=2016-2017&amp;term=1&amp;pylb=01').read().decode('utf-8') </code></pre>  <p>Thanks in advance!</p>  <p>——————————————————</p>  <p>I mistakenly thought it was a JSON file before and asked a bad question. I'm sorry for that. But thank you for helping me! Hope some of you can help me with my new question!</p>"	41689530	"<p>There are a couple of problems with your input:</p>  <ol> <li>The braces on your input are unbalanced. You're missing the opening brace, <code>{</code>.</li> <li>JSON requires that all keys be quoted using double quotes. Your input uses a different syntax, which is valid Javascript but not valid JSON. You <em>can</em> parse such objects into python dictionaries, if you really have to, using a third party package such as <a href=""https://stackoverflow.com/a/26900181/419876""><code>demjson</code></a>.</li> </ol>  <pre class=""lang-python prettyprint-override""><code>&gt;&gt;&gt; import demjson &gt;&gt;&gt; parsed = demjson.decode('{header:{code:0,message:{title:"""",detail:""""}}}') &gt;&gt;&gt; parsed {u'header': {u'message': {u'detail': '', u'title': ''}, u'code': 0}} </code></pre>  <p>That being said, your original instinct to use <code>json.loads</code> was generally correct. If you have any control over your input whatsoever (e.g. if it's the output of an API or script that you can re-write,) you <em>should re-write it to output strict JSON</em>, making it parsable by <code>json.loads</code>.</p>"
41689107	How to decode JavaScript response in python 3.4+?	javascript|python	2017-01-17 04:30:03.020000 UTC	"<p>I got this response from a website. I really don't know how to decode it and get the information that I want.</p>  <p>Here is the JavaScript response:</p>  <pre><code>{header:{code:0,message:{title:"""",detail:""""}},body:{parameters:{},dataStores:{""kccjStore"":{pageSize:100,pageNumber:1,recordCount:3,name:""kccjStore"",rowSetName:""pojo_com.neusoft.education.sysu.xscj.xscjcx.model.KccjModel"",order:""kclb asc"",metaData:{""jxbmc"":{dataType:12},""njzypm"":{dataType:12},""xh"":{dataType:12},""jxbh"":{dataType:12},""sftg"":{dataType:12},""zzcj"":{dataType:12},""cjzt"":{dataType:12},""bzw"":{dataType:12},""class"":{dataType:12},""xs"":{dataType:12},""xq"":{dataType:12},""jsxm"":{dataType:12},""xnd"":{dataType:12},""resource_id"":{dataType:12},""jxbpm"":{dataType:12},""jd"":{dataType:12},""kch"":{dataType:12},""kcywmc"":{dataType:12},""kcmc"":{dataType:12},""khfs"":{dataType:12},""cjlcId"":{dataType:12},""xf"":{dataType:12},""kclb"":{dataType:12},""zpcj"":{dataType:12}},rowSet:{primary:[{""jxbpm"":""79\/93"",""bzw"":""00"",""cjzt"":""2"",""cjlcId"":""11895237815"",""kcywmc"":""Mobile Information Engineering Training:Intermediate "",""jxbh"":""46000092161002"",""zpcj"":""90"",""resource_id"":""11895237815"",""xnd"":""2016-2017"",""xq"":""1"",""kch"":""46000092"",""kcmc"":""移动信息工程实训（中级）"",""kclb"":""11"",""xf"":""3.0"",""xs"":""72.0"",""zzcj"":""90"",""jd"":""4.0"",""sftg"":""1"",""xh"":""14353379"",""njzypm"":""304\/403"",""class"":""class com.neusoft.education.sysu.xscj.xscjcx.model.KccjModel""},{""jxbpm"":""74\/128"",""bzw"":""00"",""cjzt"":""2"",""cjlcId"":""12825792491"",""kcywmc"":""Database Systems Lab"",""jxbh"":""46000085161003"",""jsxm"":""桑应朋"",""khfs"":""03"",""zpcj"":""94"",""resource_id"":""12825792491"",""xnd"":""2016-2017"",""xq"":""1"",""kch"":""46000085"",""kcmc"":""数据库系统实验"",""kclb"":""21"",""xf"":""1.0"",""xs"":""36.0"",""zzcj"":""94"",""jd"":""4.4"",""sftg"":""1"",""xh"":""14353379"",""njzypm"":""157\/403"",""class"":""class com.neusoft.education.sysu.xscj.xscjcx.model.KccjModel""},{""jxbpm"":""20\/167"",""bzw"":""00"",""cjzt"":""2"",""cjlcId"":""12825622928"",""kcywmc"":""Database Systems"",""jxbh"":""46000084161001"",""jsxm"":""桑应朋"",""khfs"":""01"",""zpcj"":""87"",""resource_id"":""12825622928"",""xnd"":""2016-2017"",""xq"":""1"",""kch"":""46000084"",""kcmc"":""数据库系统"",""kclb"":""21"",""xf"":""2.0"",""xs"":""36.0"",""zzcj"":""87"",""jd"":""3.7"",""sftg"":""1"",""xh"":""14353379"",""njzypm"":""34\/403"",""class"":""class com.neusoft.education.sysu.xscj.xscjcx.model.KccjModel""}]}}}}} </code></pre>  <p>I am working with Python 3.4. Below is my code</p>  <pre><code>html_doc = opener.open('http://wjw.sysu.edu.cn/api/score?year=2016-2017&amp;term=1&amp;pylb=01').read().decode('utf-8') </code></pre>  <p>Thanks in advance!</p>  <p>——————————————————</p>  <p>I mistakenly thought it was a JSON file before and asked a bad question. I'm sorry for that. But thank you for helping me! Hope some of you can help me with my new question!</p>"	41689683	"<p>In case you don't want to use third party library, you can just clean up the data by yourself using regex (eg. adding double quote to remaining properties):</p>  <pre><code>import re import json  text = # the input string  p = re.compile(r'({|,)([^{}:""]+):') text = p.sub(r'\1""\2"":', '{' + text) obj = json.loads(text) </code></pre>"
41689107	How to decode JavaScript response in python 3.4+?	javascript|python	2017-01-17 04:30:03.020000 UTC	"<p>I got this response from a website. I really don't know how to decode it and get the information that I want.</p>  <p>Here is the JavaScript response:</p>  <pre><code>{header:{code:0,message:{title:"""",detail:""""}},body:{parameters:{},dataStores:{""kccjStore"":{pageSize:100,pageNumber:1,recordCount:3,name:""kccjStore"",rowSetName:""pojo_com.neusoft.education.sysu.xscj.xscjcx.model.KccjModel"",order:""kclb asc"",metaData:{""jxbmc"":{dataType:12},""njzypm"":{dataType:12},""xh"":{dataType:12},""jxbh"":{dataType:12},""sftg"":{dataType:12},""zzcj"":{dataType:12},""cjzt"":{dataType:12},""bzw"":{dataType:12},""class"":{dataType:12},""xs"":{dataType:12},""xq"":{dataType:12},""jsxm"":{dataType:12},""xnd"":{dataType:12},""resource_id"":{dataType:12},""jxbpm"":{dataType:12},""jd"":{dataType:12},""kch"":{dataType:12},""kcywmc"":{dataType:12},""kcmc"":{dataType:12},""khfs"":{dataType:12},""cjlcId"":{dataType:12},""xf"":{dataType:12},""kclb"":{dataType:12},""zpcj"":{dataType:12}},rowSet:{primary:[{""jxbpm"":""79\/93"",""bzw"":""00"",""cjzt"":""2"",""cjlcId"":""11895237815"",""kcywmc"":""Mobile Information Engineering Training:Intermediate "",""jxbh"":""46000092161002"",""zpcj"":""90"",""resource_id"":""11895237815"",""xnd"":""2016-2017"",""xq"":""1"",""kch"":""46000092"",""kcmc"":""移动信息工程实训（中级）"",""kclb"":""11"",""xf"":""3.0"",""xs"":""72.0"",""zzcj"":""90"",""jd"":""4.0"",""sftg"":""1"",""xh"":""14353379"",""njzypm"":""304\/403"",""class"":""class com.neusoft.education.sysu.xscj.xscjcx.model.KccjModel""},{""jxbpm"":""74\/128"",""bzw"":""00"",""cjzt"":""2"",""cjlcId"":""12825792491"",""kcywmc"":""Database Systems Lab"",""jxbh"":""46000085161003"",""jsxm"":""桑应朋"",""khfs"":""03"",""zpcj"":""94"",""resource_id"":""12825792491"",""xnd"":""2016-2017"",""xq"":""1"",""kch"":""46000085"",""kcmc"":""数据库系统实验"",""kclb"":""21"",""xf"":""1.0"",""xs"":""36.0"",""zzcj"":""94"",""jd"":""4.4"",""sftg"":""1"",""xh"":""14353379"",""njzypm"":""157\/403"",""class"":""class com.neusoft.education.sysu.xscj.xscjcx.model.KccjModel""},{""jxbpm"":""20\/167"",""bzw"":""00"",""cjzt"":""2"",""cjlcId"":""12825622928"",""kcywmc"":""Database Systems"",""jxbh"":""46000084161001"",""jsxm"":""桑应朋"",""khfs"":""01"",""zpcj"":""87"",""resource_id"":""12825622928"",""xnd"":""2016-2017"",""xq"":""1"",""kch"":""46000084"",""kcmc"":""数据库系统"",""kclb"":""21"",""xf"":""2.0"",""xs"":""36.0"",""zzcj"":""87"",""jd"":""3.7"",""sftg"":""1"",""xh"":""14353379"",""njzypm"":""34\/403"",""class"":""class com.neusoft.education.sysu.xscj.xscjcx.model.KccjModel""}]}}}}} </code></pre>  <p>I am working with Python 3.4. Below is my code</p>  <pre><code>html_doc = opener.open('http://wjw.sysu.edu.cn/api/score?year=2016-2017&amp;term=1&amp;pylb=01').read().decode('utf-8') </code></pre>  <p>Thanks in advance!</p>  <p>——————————————————</p>  <p>I mistakenly thought it was a JSON file before and asked a bad question. I'm sorry for that. But thank you for helping me! Hope some of you can help me with my new question!</p>"	41690215	"<p>It seems you forgot the first curl brace. The code below can help you parse the data to json:</p>  <pre><code>s = &lt;YOUR DATA&gt; import json import re  def repl(m):     return '""%s"":'%m.group(1)  s = re.sub(r'(\w+):', repl, s) o = json.loads(s) print o </code></pre>"
41707489	Calling python program from html javascript form	javascript|python|html|function|command-line	2017-01-17 21:39:40.213000 UTC	"<p>I am trying to make a webpage where I enter a latitude and longitude and a python program will process the latitude and longitude in the form of a graph.  For simplicity sake, in this question I just have the python program just repeat the latitude and longitude because I am wanting to know how to run the python program in the context of the html and javascript code and pass the arguments from the html form (latitude and longitude) into the python script.  Below is the html code:</p>  <pre><code>&lt;html&gt;  &lt;head&gt;  &lt;script&gt;      function set_iterations()     {        var count = 0;        var lat = document.getElementById(""lat"").value;        var lon = document.getElementById(""lon"").value;        document.write(""latitude is "" + lat + "" and longitude is "" + lon + ""&lt;/br&gt;"");        $.ajax({          type: ""POST""          url: ""testmaker.py"" + lat + lon        });    }  &lt;/script&gt; &lt;/head&gt;  &lt;body&gt;        &lt;td style='border-right:none' align='center'&gt;Latitude: &lt;/td&gt;        &lt;td style='border-right:none' align='center'&gt;&lt;input type=text id='lat' size=10&gt;&lt;/td&gt;        &lt;td style='border-right:none' align='center'&gt;Longitude: &lt;/td&gt;        &lt;td style='border-right:none' align='center'&gt;&lt;input type=text id='lon', size=10&gt;&lt;/td&gt;        &lt;br&gt;         &lt;button style=""width:200px;margin-top:5px;margin-bottom:20px;""   onClick=""set_iterations();""&gt;Submit&lt;/button&gt;  &lt;/body&gt; &lt;/html&gt; </code></pre>  <p>The python program is this:</p>  <pre><code>  #!/usr/bin/python    import sys    latitude = sys.argv[1]   longitude = sys.argv[2]    print ""Using coordinates: "",latitude,"","",longitude </code></pre>  <p>How should I modify this program so that the submit button on the form would call the python program with the entries in the form being command line arguments for the python program?</p>  <p>""</p>"	41708326	"<p>You need a comma between arguments in your ajax call:</p>  <pre><code>$.ajax({          type: ""POST"",              url: ""testmaker.py"" + lat + lon }); </code></pre>  <p>You need a web server of some sort. As a start, you can write a super simple server in Node:</p>  <pre><code>server.js var http = require('http'); var fs = require('fs'); var index = fs.readFileSync('form.html');  http.createServer(function (req, res) {   console.log(""request made"") ;   res.writeHead(200, {'Content-Type': 'text/html'});   res.end(index); }).listen(9615); </code></pre>  <p>Start it:</p>  <pre><code>node server.js </code></pre>  <p>Then go to <a href=""http://127.0.0.1:9615/"" rel=""nofollow noreferrer"">http://127.0.0.1:9615/</a> from your browser</p>  <p>Now you need to do something in the server to respond to a call to your 'testmaker' url... </p>"
41717448	Python cheetah variables inside a #raw javascript block?	javascript|jquery|python|cheetah	2017-01-18 10:52:22.337000 UTC	"<p>If I have a block of #raw that has javascript inside it and sometimes I need to access some python variables (the $foo in example case) from that javascript.</p>  <pre><code>#raw   &lt;script type=""text/javascript"" charset=""utf-8"" &gt;     if (          #end raw           $foo         #raw         and $('#manuf').val() )  {           getNextFreeProdCode(             $('#category option:selected').val(),             $('#subCat option:selected').val(),             $('#manuf option:selected').val()            );         }   &lt;/script&gt; #end raw </code></pre>  <p>first of all, that looks ugly and not so readable code. I would like to have if operator in single line. </p>  <p>But is there:</p>  <ul> <li>a way to introduce those variables with some placeholders like %s in python strings? </li> <li><p>Or some way to tell #raw what that block is and give those variables for it as an argument? Like:</p>  <p><code>#raw($foo, $bar)    .    if ( $(#manuf).val() or $foo ) {       fooBar($bar);    .    .    .    }  #end raw</code></p>  <p>just like in #def define block allows arguments like function call.</p></li> </ul>  <p>Actually I would like the second way more, and maybe it shouldn't be called #raw but it could be raw-content-specific, like #ecmascript() ... #end ecmascript?</p>  <p>Maybe there is already a solution for this?</p>  <p>Juha</p>"	43836682	"<p>Well, it is either raw or not raw, i.e. parsed. If you want parsed variables inside a block the block cannot be raw. You have to escape dollar signs inside a parsed block.</p>"
41747109	Running python files in javascript (possibly using REST API)	python	2017-01-19 16:40:03.020000 UTC	"<p>I would like to be able to run python code in my javascript. How do I do this?</p>  <p>This is my attempt, but it's not working and I don't know why The two following files, I have in the same directory if that matters?</p>  <p>Please help, thanks</p>  <p>scripts.js:</p>  <pre><code>function postPyScript(input){ var jqXHR = $.ajax({     type: ""POST"",     url: ""/app.py"",     data: { mydata: input } }); return jqXHR.responseText; }   $('#generateBtn').click(function(){ datatosend = 'this is my matrix'; result = postPyScript(datatosend); alert('Got back ' + result); }); </code></pre>  <p>app.py:</p>  <pre><code>from flask import *  app = Flask(__name__)  @app.route(""/app.py"", methods=['GET', 'POST']) def someFunction():     message = None     if(request.method=='POST'):         datafromjs = request.form['mydata']         result = ""something to return""         resp = make_response('{""response"": '+result+'}')         resp.headers['Content-Type'] = ""application/json""         return respreturn         return render_template('index.html',message='')  if __name__ == '__main__':     app.run(debug=True) </code></pre>"	41747368	"<p>Because you only have one route in flask, it seems that you are likely already using a server to serve your html and javascript - maybe you are using the apache instance that your computer came with? In addition to that, you need to be running your flask server. Your flask server will be running on a different port from your apache (or whatever) server.<br> So, two things: </p>  <ul> <li>run your flask server. you might do something like:<br> <code>$ cd directory-of-this-project $ export FLASK_APP=app.py $ flask run </code></li> <li>change the ajax url to include the port of the flask server (e.g. <code>http://127.0.0.1:5000/app.py</code>)</li> </ul>"
41771745	Use Python to click href of type javascript:void(0) to retrieve tar file	javascript|python|href|tar	2017-01-20 20:19:49.837000 UTC	"<p>I am looking to retrieve a suite of tar files from a website via python. Generally, the links are of the form:</p>  <pre><code>&lt; td &gt; &lt; a &gt; href=""javascript:void(0)"" onClick=""dlResp('tar','SHR')"" &gt;Click Here&lt; /a &gt;/&lt; td &gt; </code></pre>  <p>I believe that it is the javascript:void(0) that is giving trouble. I have not been successful in retrieving the tar files using <code>browser.mechanise()</code> or selenium PhantomJS. Can anybody help?</p>  <p>This must run as a background process so a web driver such as firefox or chrome is not acceptable. Thanks!</p>"	41780669	"<p>The link executes <code>dlResp('tar', 'SHR')</code> when being clicked.</p>  <p>If we look at the javascript of the page you linked, we find the function definition:</p>  <pre><code>function dlResp(resp,code){    var url = './dlTxt.php?resp=' + resp + '&amp;code=' + code;    location.href = url; } </code></pre>  <p>Which means you can download the tar files from URLs like the following: <code>http://www.fnet.bosai.go.jp/st_info/dlTxt.php?resp=tar&amp;code=SHR</code></p>  <p>So you need to parse the onClick attribute and retrieve this URL:</p>  <pre><code># Put the contents of the onClick attribute here onclick = ""dlResp('tar', 'SHR')"" url_template = ""http://www.fnet.bosai.go.jp/st_info/dlTxt.php?resp={1}&amp;code={3}"" url = url_template.format(*onclick.split(""'"")) # Retrieve `url` using whatever library </code></pre>"
41787090	in weppy how can i send data to python from javascript using ajax()	javascript|python|ajax|weppy	2017-01-22 03:42:48.910000 UTC	"<p>I am trying to send an id number to my weppy backend via ajax I have tried as many things as I can think of but am sure I just don't understand how to do it.    </p>  <p>I have collected an id from my HTML page on click  and would like to send it to the server script  right now my ajax looks like</p>  <pre><code>$(.testclick).click(function(e){   var idnum = e.target.id;   ajax(""{{=url('post')}}"", [], ':eval'); }); </code></pre>  <p>I have tried including the idnum variable in multiple places hoping to figure it out with no such luck</p>  <p>the post function looks like </p>  <pre><code>@app.route() def post(idnum):   idnum = idnum   print(idnum)   return </code></pre>  <p>right now I am just trying to make it work it doesn't actually do anything but print to the console atm</p>  <p>thanks in advance!</p>"	41789227	"<p>In order to run python script from javascript you can use CGI. Here is the javascript code:</p>  <pre><code>$(.testclick).click(function(e){ var reqobj; reqobj = {idnum: e.target.id}  // AJAX var response = $.ajax({ type: ""POST"", url: ""/script/sample.py"", data: reqobj  }); } </code></pre>  <p>Python script (sample.py):</p>  <pre><code>import cgi, cgitb data= cgi.FieldStorage()  # Get data from fields input = data[""idnum""]  print(input) </code></pre>  <p>To get both scripts working you need to have a web server and configure it to execute python script. Here's [a link] <a href=""https://www.linux.com/blog/configuring-apache2-run-python-scripts"" rel=""nofollow noreferrer"">https://www.linux.com/blog/configuring-apache2-run-python-scripts</a> </p>"
41787090	in weppy how can i send data to python from javascript using ajax()	javascript|python|ajax|weppy	2017-01-22 03:42:48.910000 UTC	"<p>I am trying to send an id number to my weppy backend via ajax I have tried as many things as I can think of but am sure I just don't understand how to do it.    </p>  <p>I have collected an id from my HTML page on click  and would like to send it to the server script  right now my ajax looks like</p>  <pre><code>$(.testclick).click(function(e){   var idnum = e.target.id;   ajax(""{{=url('post')}}"", [], ':eval'); }); </code></pre>  <p>I have tried including the idnum variable in multiple places hoping to figure it out with no such luck</p>  <p>the post function looks like </p>  <pre><code>@app.route() def post(idnum):   idnum = idnum   print(idnum)   return </code></pre>  <p>right now I am just trying to make it work it doesn't actually do anything but print to the console atm</p>  <p>thanks in advance!</p>"	42053710	"<p>As from <a href=""http://weppy.org/docs/0.8/templates#included-helpers"" rel=""nofollow noreferrer"">weppy docs</a>:</p>  <blockquote>   <p>ajax helper asynchronously calls the url, passes the values of the field inputs with the name equal to one of the names in the list, then stores the response in the innerHTML of the tag with its id equal to target.   The third argument can also be the :eval string, which leads to the evaluation via JavaScript of the string returned by the server.</p> </blockquote>  <p>If you want to use an arbitrary value for an ajax request using that helper, you need to put it in the requested url, but before that, you need to accept an <a href=""http://weppy.org/docs/0.8/routing#path"" rel=""nofollow noreferrer"">url variable</a> on your route:</p>  <pre><code>@app.route('/click/&lt;str:element_id&gt;') def click(element_id):     return 'alert(""clicked on ' + element_id + '"");' </code></pre>  <p>Then on the html side:</p>  <pre><code>$("".testclick"").click(function(e){     ajax(""{{=url('click')}}/"" + e.target.id, [], ':eval'); }); </code></pre>  <p>Note that the <code>ajax</code> helper provided by weppy is intended to be used to render content inside a component of your page or to generate javascript code to be evaluated.</p>  <p>If you need to send and get arbitrary data to your backend, consider using the jQuery ajax method and json data instead.</p>"
41870645	Python regular expression matching a multiline javascript code	python|regex	2017-01-26 09:45:12.970000 UTC	"<p>I'm having a bit of trouble getting a Python regex to work when matching against text that spans multiple lines. My example is:</p>  <pre><code>function initialize()  {     var myLatlng = new google.maps.LatLng(23.800567,5.942068);     var myOptions =      {         panControl: true,         zoomControl: true,         scaleControl: false,         streetViewControl: true,          zoom: 11,         center: myLatlng,         mapTypeId: google.maps.MapTypeId.HYBRID     }     var map = new google.maps.Map(document.getElementById(""map""), myOptions);     var bounds = new google.maps.LatLngBounds();      var locations = [        ['&lt;div CLASS=""Tekst""&gt;&lt;B&gt;tss&amp;nbsp;fsdf&lt;\/B&gt;&lt;BR&gt;hopp &lt;BR&gt;&lt;\/div&gt;', 54.538665,24.885818, 1, 'text']     ,     ['&lt;div CLASS=""Tekst""&gt;&lt;\/div&gt;', 24.465462,24.966919, 1, 'text']     ] </code></pre>  <p>What I want to extract is context in locations. As result I want to look like:</p>  <pre><code> - '&lt;div CLASS=""Tekst""&gt;&lt;B&gt;tss&amp;nbsp;fsdf&lt;\/B&gt;&lt;BR&gt;hopp &lt;BR&gt;&lt;\/div&gt;',    54.538665,24.885818, 1, 'text'   - '&lt;div CLASS=""Tekst""&gt;&lt;\/div&gt;', 24.465462,24.966919, 1, 'text' </code></pre>  <p>I try regex like this: </p>  <pre><code>regex = r""var locations =\[\[(.+?)\]\]"" </code></pre>  <p>But it doesnt work.</p>"	41870794	"<p>hello you can try this regex </p>  <pre><code>re.findall(""(&lt;div.+)\]"",toparse) </code></pre>"
41970780	"python, selenium: unable to get raw html from javascript"	python|python-2.7|selenium|phantomjs	2017-02-01 02:05:41.683000 UTC	"<p>I have read that to render javascript to scrape the raw html, I will need to use selenium and a webdriver like phantomjs. However, doing so still does not render the javascripts for me. Below is a sample script.</p>  <p>Anyone?</p>  <pre><code>from selenium import webdriver import time  url=""http://www.sgx.com/wps/portal/sgxweb/home/company_disclosure/stockfacts?page=2&amp;code=5TG&amp;lang=en-us"" PJ = r'/xxx/MyPythonScripts/phantomjs_mac'  driver = webdriver.PhantomJS(PJ) driver.get(url) time.sleep(3) html=driver.page_source.encode('utf-8') print html </code></pre>"	41976126	"<p>Page content, as you've mentioned, is generated by <code>JavaScript</code> code, so you won't be able to find it in initial page source and even adding <code>time.sleep(3)</code> could be not enough... You need to wait some time until required data present on page. Try to use below code:</p>  <pre><code>from selenium import webdriver as web  from selenium.webdriver.common.by import By from selenium.webdriver.support.ui import WebDriverWait from selenium.webdriver.support import expected_conditions as EC  url=""http://www.sgx.com/wps/portal/sgxweb/home/company_disclosure/stockfacts?page=2&amp;code=5TG&amp;lang=en-us"" PJ = r'/xxx/MyPythonScripts/phantomjs_mac'  driver = webdriver.PhantomJS(PJ) driver.get(url)  WebDriverWait(driver, 10).until(EC.frame_to_be_available_and_switch_to_it((By.XPATH,'//div[starts-with(@id, ""mainns_"")]/iframe'))) WebDriverWait(driver, 20).until(EC.visibility_of_element_located((By.XPATH, '//div[@class=""data-point-container section-break""]/table')))  html = driver.page_source assert ""Total Revenue"" in html </code></pre>  <p>With this code you will wait up to 10 seconds (you can increase timeout if you need) until required <code>table</code> element presence. If it not rendered within 10 seconds, you'll get <code>TimeOutException</code></p>"
41972481	How to make python dictionary from big Javascript object	javascript|python|object	2017-02-01 05:26:05.780000 UTC	"<p>I have one string. which represents JavaScript object. <a href=""https://docs.google.com/document/d/1CFONQntMFMdtD-04rk9uut4UpLyB_OSsDH0bwDZ0tuM/edit?usp=sharing"" rel=""nofollow noreferrer"">https://docs.google.com/document/d/1CFONQntMFMdtD-04rk9uut4UpLyB_OSsDH0bwDZ0tuM/edit?usp=sharing</a></p>  <p>When i'm using json.loads() python raises Exception: JSONDecodeError: Extra data.</p>  <p>What i'm doing wrong?</p>  <p>P.S.: It's dynamic object, I can't change him</p>"	41972655	"<p>Is this what you are looking for</p>  <p>Things i changed:</p>  <ol> <li>Removed ' in the beginning</li> <li>Remove extra / used for escaping double quotes</li> <li>Added double quotes in the end</li> </ol>  <blockquote>   <p>{""log_timeout"":1000,""featureFlags"":{""serverRenderingForBotsOnly"":false,""experienceLevelOnFixedPriceJobs"":true,""JSUIPaymentVerified"":true,""JSUI736SaveSearchRedesign"":true,""JSUI341ProposalsFilter"":true},""csrfTokenCookieName"":""XSRF-TOKEN"",""csrfTokenHeaderName"":""X-Odesk-Csrf-Token"",""runtime_id"":""32a28ec0399c4e8a-DME"",""clientStatsDMetrics"":true,""smfAjax"":false,""pageSpeedMetrics"":false,""ccstCookieName"":""oauth2_global_js_token"",""pageId"":""User"",""isSearchWithEmptyParams"":false,""queryParsedParams"":{""q"":""python""},""jobs"":[{""title"":""Python   app engine, Linux,   infrastructure"",""createdOn"":""2017-01-31T16:57:42+00:00"",""type"":2,""ciphertext"":""~01440d6a85cc997768"",""description"":""If   you know python and have at least some knowledge of app engine   development. Willing to learn and positive. A big plus if you have   worked with the linux environment and knows how to set up servers on   google-cloud or AWS. \n\nWe can offer a job for a longer period of   time if you are the right fit.\n\nAt least 5 years experience as a   developer required."",""category2"":""Web, Mobile &amp; Software   Dev"",""subcategory2"":""Other - Software   Development"",""skills"":[{""name"":""google-app-engine"",""prettyName"":""Google   App Engine""},{""name"":""python"",""prettyName"":""Python""}],""duration"":""1 to   3 months"",""engagement"":""30+   hrs\/week"",""amount"":{""currencyCode"":""USD"",""amount"":0},""recno"":209422776,""client"":{""paymentVerificationStatus"":null,""location"":{""country"":null},""totalSpent"":0,""totalReviews"":0,""totalFeedback"":0,""companyRid"":0,""companyName"":null,""edcUserId"":0,""lastContractPlatform"":null,""lastContractRid"":0,""lastContractTitle"":null,""feedbackText"":""No   feedback   yet""},""freelancersToHire"":0,""relevanceEncoded"":""{}"",""maxAmount"":{""currencyCode"":""USD"",""amount"":0},""enterpriseJob"":false,""tierText"":""Intermediate   ($$)"",""isSaved"":false,""feedback"":null,""proposalsTier"":""5 to   10"",""isApplied"":false,""sticky"":true,""stickyLabel"":""Interesting   Job"",""jobTs"":""1485881862000""},{""title"":""Python&lt;/span>   Developer"",""createdOn"":""2017-02-01T04:00:20+00:00"",""type"":2,""ciphertext"":""~019767ae6381e97a90"",""description"":""Python&lt;/span> Developer who can read and   understand the legacy script and apply that understanding to an   existing Python business \nservice.  ... Python Developer who can read   and understand the legacy script and apply that understanding to an   existing Python&lt;/span> business   \nservice."",           ""category2"":""Web,            Mobile &amp; Software Dev"",           ""subcategory2"":""Other - Software Development"",           ""skills"":[],           ""duration"":""Less than 1 week"",           ""engagement"":""Less than 10""           }</p> </blockquote>"
41972481	How to make python dictionary from big Javascript object	javascript|python|object	2017-02-01 05:26:05.780000 UTC	"<p>I have one string. which represents JavaScript object. <a href=""https://docs.google.com/document/d/1CFONQntMFMdtD-04rk9uut4UpLyB_OSsDH0bwDZ0tuM/edit?usp=sharing"" rel=""nofollow noreferrer"">https://docs.google.com/document/d/1CFONQntMFMdtD-04rk9uut4UpLyB_OSsDH0bwDZ0tuM/edit?usp=sharing</a></p>  <p>When i'm using json.loads() python raises Exception: JSONDecodeError: Extra data.</p>  <p>What i'm doing wrong?</p>  <p>P.S.: It's dynamic object, I can't change him</p>"	41972809	"<p>As @DSupreme says, there are extra characters in your data.</p>  <p>This can be caused from various reasons, one being stringifying JSON files and parsing in different programs and languages. If you need to verify if a JSON string is in a correct format, you can use verifying tools such as <a href=""http://jsonlint.com/"" rel=""nofollow noreferrer"">http://jsonlint.com/</a> . For your specific problem, there is an extra <code>'</code> at the beginning of your string, <code>/</code> for escaping characters and  you're also missing the double quote in the end of your string.</p>"
41972481	How to make python dictionary from big Javascript object	javascript|python|object	2017-02-01 05:26:05.780000 UTC	"<p>I have one string. which represents JavaScript object. <a href=""https://docs.google.com/document/d/1CFONQntMFMdtD-04rk9uut4UpLyB_OSsDH0bwDZ0tuM/edit?usp=sharing"" rel=""nofollow noreferrer"">https://docs.google.com/document/d/1CFONQntMFMdtD-04rk9uut4UpLyB_OSsDH0bwDZ0tuM/edit?usp=sharing</a></p>  <p>When i'm using json.loads() python raises Exception: JSONDecodeError: Extra data.</p>  <p>What i'm doing wrong?</p>  <p>P.S.: It's dynamic object, I can't change him</p>"	41972943	<p>Problem was in <code>{ }</code> at the end and begin of the string</p>
41996220	add a custom python bokeh widget without JavaScript	python|widget|bokeh	2017-02-02 07:16:27.557000 UTC	"<p>I want to create a custom bokeh widget without using JavaScript, i.e. without following the bokeh documentation on <a href=""http://bokeh.pydata.org/en/latest/docs/user_guide/extensions_gallery/widget.html"" rel=""nofollow noreferrer"">Adding A Custom Widget</a>.  The example below demonstrates the creation of a custom widget in PyQt4 (I use this a lot), and what I would expect to work in bokeh along with the error message I get.</p>  <p>Is there some other way to create a custom widget in bokeh without using JavaScript?  Specifically I am trying to create a custom slider with small - and + buttons on each side that increment / decrement the slider by 1 step.  I want to use this custom widget in many applications so I want it defined as its own class with on_change method linked to the slider on_change method.  There are other custom widgets in bokeh I want to make (without JS!) and I would like to know if this is even possible.</p>  <pre><code># this works as a base to develop custom PyQt4 widgets from PyQt4 import QtGui import sys  class NewWidget(QtGui.QWidget):     def __init__(self):         super().__init__()  app = QtGui.QApplication([]) widget = NewWidget() widget.show() sys.exit(app.exec_())   # this does not work as a base to develop custom bokeh widgets # when run, a tab opens with the message # Bokeh Error # Model `NewWidget' does not exist. This could be due to a widget # or a custom model not being registered before first usage. from bokeh.plotting import show from bokeh.layouts import widgetbox from bokeh.models.widgets import Widget  class NewWidget(Widget):     def __init__(self):         super().__init__()  new = NewWidget() show(widgetbox(new)) </code></pre>  <p>UPDATE: The specific custom widget I am attempting to create is a Slider with a Button on each side (on the left labeled '-', on the right labeled '+') that change the Slider value by 1 step.  This is used to fine-tune the value of a Slider so the mouse is not required to exactly hit a target value.  I created this custom widget by linking default Slider and Button objects and it renders in the browser, but the callback functionality is not working (specifically the Slider 'on_change' method).  </p>  <p><a href=""https://i.stack.imgur.com/B6guG.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/B6guG.png"" alt=""Slider With Buttons""></a></p>  <p>Is this custom widget straightforward to implement with bokeh and JS?  Is there an online reference that may provide hints without diving too deep into JS.</p>"	42007859	"<p>Bokeh is a library for generating plot and visualization apps in modern browsers (or embedded HTML widgets). It's composed of two essential parts. The python side of Bokeh is really just a sophisticated ""wrapper"" or ""binding"" that ultimately produces a declarative JSON document, which in turns drives a JavaScript library (BokehJS) that actually does all the work in the browser. </p>  <p>Extending Bokeh necessarily means providing both sides of that equation: You have to provide a (typically very minimal) python declaration of the extension, that really just specifies the information needed to automatically generating the JSON format I described above. And you also have to provide a JavaScript (or TypeScript) implementation for the extension, that actually does all the work in the browser. </p>  <p>Since browsers have no ability to run Python code, the implementation <em>necessarily has to be JavaScript</em>.</p>  <p>There are some libraries such as Flexx and Brython that can ""transpile"" python into JavaScript. You might find them useful as a means to avoid writing JavaScript directly, but these libraries often have quirks and specific deficiencies in certain use cases, so YMMV.</p>  <hr>  <p>Here is a complete example that uses a <code>CustomJS</code> callback on a button to update a slider:</p>  <pre><code>from bokeh.models import Button, CustomJS, Slider from bokeh.layouts import row from bokeh.io import output_file, show  slider = Slider(start=0, end=10, value=0, step=0.1)  button = Button() button.callback = CustomJS(args=dict(slider=slider), code=""""""     slider.value += 0.1 """""")  output_file(""foo.html"")  show(row(slider, button)) </code></pre>"
42001901	Javascript equivalent of Python's 'yield from'	javascript|python	2017-02-02 12:09:48.970000 UTC	"<p>I have a data structure which is essentially a mixture of nested lists/dictionaries:</p>  <pre><code>class System:     def __init__(self, name, subsystems, uri):         self.name = name         self.subsystems = subsystems         self.uri = uri  A = System(""A"", [], ""http://A"") B1 = System(""B1"", [], ""http://B/B1"") B21 = System(""B12"", [], ""http://B/B2/B21"") B22 = System(""B22"", [], ""http://B/B2/B22"") B2 = System(""B2"", [B21, B22], ""http://B/B2"") B = System(""B"", [B1, B2], ""http://B"") C1 = System(""C1"", [], ""http://C/C1"") C = System(""C"", [C1], ""http://C"") S = System(""S"", [A, B, C], None) </code></pre>  <p>In Python I wrote the following recursive generator:</p>  <pre><code>def find_subsystem(system, name):     if system.name == name:         yield system.uri     for sub in system.subsystems:         yield from find_subsystem(sub, name) </code></pre>  <p>allowing me to do ""queries"" like</p>  <pre><code>next(find_subsystem(S, ""B22"")) #=&gt; 'http://B/B2/B21' </code></pre>  <p>or </p>  <pre><code>list(find_subsystem(S, ""B22"")) #=&gt; ['http://B/B2/B21', 'http://B/B2/B22'] </code></pre>  <p>I am wondering how I could best write an equivalent in JavaScript: I know I could do something with <code>yield</code> as well however I think that the Python code is quite clean thanks to <code>yield from</code>. Is there an equivalent in JavaScript or a common idiom?</p>  <p>(I could I guess use something from <code>underscore.js</code> but I'd like to do it ""manually"" as an exercise)</p>"	42006759	"<p>Following @vaultah comment I obtained the following solution, using <code>yield*</code>:</p>  <pre><code>function System(name, subsystems, uri) {     this.name = name;     this.subsystems = subsystems;     this.uri = uri; } var A = new System(""A"", [], ""http://A""); var B1 = new System(""B1"", [], ""http://B/B1""); var B21 = new System(""B21"", [], ""http://B/B2/B21""); var B22 = new System(""B22"", [], ""http://B/B2/B22""); var B2 = new System(""B2"", [B21, B22], ""http://B/B2""); var B = new System(""B"", [B1, B2], ""http://B""); var C1 = new System(""C1"", [], ""http://C/C1""); var C = new System(""C"", [C1], ""http://C/""); var S = new System(""S"", [A, B, C], """");  function* find_subsystem(system, name) {     if(system.name == name) {         yield system.uri;     }     for (var i = 0; i &lt; system.subsystems.length; i++) {         yield* find_subsystem(system.subsystems[i], name);     } }  console.log(find_subsystem(S, ""B22"").next().value); </code></pre>"
42008263	Selenium/Python: JavaScript href refuses to execute	javascript|python|selenium	2017-02-02 17:11:16.420000 UTC	"<p>So, I am running Selenium on Python 3.5 attempting to click a button with a JavaScript function as its href. I have tried the solutions that helped others but my issue won’t budge. </p>  <p><strong>Version Inventory:</strong></p>  <ul> <li>Selenium 3.0.2 </li> <li>Python 3.5.2 on Anaconda 4.1.1 </li> <li>Firefox 51.0.1</li> </ul>  <p>The html of the button is below: </p>  <pre><code>&lt;tbody&gt;     &lt;tr&gt;         &lt;td&gt;             &lt;a href='JavaScript:SWESubmitForm(document.SWEForm11_0,c_45,""s_11_1_0_0"","""")' tabindex=""1700""&gt;Choose Account&lt;/a&gt;         &lt;/td&gt;     &lt;/tr&gt;     &lt;tr&gt;         &lt;td&gt;View a different account&lt;/td&gt;     &lt;/tr&gt; &lt;/tbody&gt; </code></pre>  <p>Solutions I have tried all move to the correct element in the correct frame, and it appears as if the click is being performed without throwing any exceptions, but Selenium cannot get the script to run under any circumstance. This is baffling, as manually clicking the link in the open webdriver window operates flawlessly and loads the next page. I have JavaScript enabled through a webdriver.FirefoxProfile() object.</p>  <p>The below (albeit messy) xpath is the best way I have found to move to the correct element and this does find the correct element every single time, however it doesn't execute the script under any conditions.</p>  <pre><code>choose_account = driver.find_element_by_xpath('//*[/html/body/table[3]/tbody/tr/td[3]/\ span[1]/form/table[2]/tbody/tr/td/table/tbody/tr/td/table[2]/tbody/tr[2]/td[2]/\ table/tbody/tr[1]/td/a]') </code></pre>  <p><strong>Method One [Failed]:</strong> Moving the mouse directly to the element and clicking. Method runs without throwing errors or exceptions. Page does not change. JS does not execute</p>  <pre><code>action = webdriver.common.action_chains.ActionChains(driver) action.move_to_element_with_offset(choose_account, 0, 0) action.click() </code></pre>  <p><strong>Method Two [Failed with error]:</strong> Attempts running the script exactly as written in the href value of the element. Throws an exception:</p>  <pre><code>driver.execute_script('SWESubmitForm(document.SWEForm11_0,c_45,""s_11_1_0_0"","""").click();') </code></pre>  <p><strong>The exception thrown:</strong></p>  <pre><code>ReferenceError: SWESubmitForm is not defined </code></pre>  <p><strong>Method Three[Failed]:</strong> Attempts using JavaScript executor on the element. Method runs without throwing errors or exceptions. Page does not change. JS does not execute</p>  <pre><code>driver.execute_script(""arguments[0].click();"", choose_account) </code></pre>  <p>Does anyone have any insight into what could be happening here? I'm really at a loss.</p>  <p>M</p>  <p><strong>UPDATE: [RESOLVED]</strong> Thanks to Lauda for suggesting to use a simpler/cleaner style of locating the anchor tag using a unique snippet contained in its href and the find_element_by_xpath() method.  The below code worked like a charm:</p>  <pre><code>choose_account = driver.find_element_by_xpath(""//a[contains(@href,'SWEForm11_0,c_45')]"") choose_account.click() </code></pre>"	42010769	"<p>Try using a regular click with a better selector.</p>  <p>css: a[href*=SWESubmitForm]</p>  <p>xpath using partial <code>href</code> value: //a[contains(@href, 'SWESubmitForm')]</p>  <p>xpath using full <code>href</code> value: //a[@href='add_entire_href_value_here']</p>"
42067066	Convert JavaScript date() to Python Django models.DateTimeField	javascript|python|django|datetime	2017-02-06 11:48:49.740000 UTC	<p>I using django model forms to submit data to the database. I use JavaScript to auto-fill the form with the following</p>  <pre><code>document.getElementById('id_date_received').value = Date(); </code></pre>  <p>This outputs: <strong><code>Mon Feb 06 2017 11:39:05 GMT+0000 (GMT)</code></strong> while django's <strong>models.DateTimeField</strong> expects: <strong><code>2017-02-06 11:39</code></strong></p>  <p>How do i convert: <strong><code>Mon Feb 06 2017 11:39:05 GMT+0000 (GMT)</code></strong> to <strong><code>2017-02-06 11:39</code></strong> Thanks</p>	42067214	"<p>IMO, the best solution would be using <strong>unix timestamps</strong>, because you can avoid all complex stuff connected with timezones and time parsing.</p>  <p><strong>JS:</strong></p>  <pre><code>js_date = new Date('2012.08.10');  // getTime() returns milliseconds from the UNIX epoch, // so divide it by 1000 to get the seconds representation.  js_timestamp = js_date.getTime() / 1000; </code></pre>  <p><strong>Python:</strong></p>  <pre><code>python_date = datetime.datetime.fromtimestamp(js_timestamp) </code></pre>"
42067066	Convert JavaScript date() to Python Django models.DateTimeField	javascript|python|django|datetime	2017-02-06 11:48:49.740000 UTC	<p>I using django model forms to submit data to the database. I use JavaScript to auto-fill the form with the following</p>  <pre><code>document.getElementById('id_date_received').value = Date(); </code></pre>  <p>This outputs: <strong><code>Mon Feb 06 2017 11:39:05 GMT+0000 (GMT)</code></strong> while django's <strong>models.DateTimeField</strong> expects: <strong><code>2017-02-06 11:39</code></strong></p>  <p>How do i convert: <strong><code>Mon Feb 06 2017 11:39:05 GMT+0000 (GMT)</code></strong> to <strong><code>2017-02-06 11:39</code></strong> Thanks</p>	42067236	<p>You can set the pattern of date in your  model form that accept particular format.</p>  <pre><code>input_formats=[list of datetime patterns that you want to accept] </code></pre>
42067066	Convert JavaScript date() to Python Django models.DateTimeField	javascript|python|django|datetime	2017-02-06 11:48:49.740000 UTC	<p>I using django model forms to submit data to the database. I use JavaScript to auto-fill the form with the following</p>  <pre><code>document.getElementById('id_date_received').value = Date(); </code></pre>  <p>This outputs: <strong><code>Mon Feb 06 2017 11:39:05 GMT+0000 (GMT)</code></strong> while django's <strong>models.DateTimeField</strong> expects: <strong><code>2017-02-06 11:39</code></strong></p>  <p>How do i convert: <strong><code>Mon Feb 06 2017 11:39:05 GMT+0000 (GMT)</code></strong> to <strong><code>2017-02-06 11:39</code></strong> Thanks</p>	42067331	"<p>You should consider use <a href=""https://momentjs.com/"" rel=""noreferrer"">Moment.js</a>, it's the easiest javascript library to manipulate dates and timezone formats.</p>  <p>So the code would by something like this:</p>  <pre><code>moment(YOUR_DATE_VARIABLE).format('YYYY-MM-DD HH:mm'); // 2017-02-06 11:39 </code></pre>  <p>Hope this help you.</p>"
42067066	Convert JavaScript date() to Python Django models.DateTimeField	javascript|python|django|datetime	2017-02-06 11:48:49.740000 UTC	<p>I using django model forms to submit data to the database. I use JavaScript to auto-fill the form with the following</p>  <pre><code>document.getElementById('id_date_received').value = Date(); </code></pre>  <p>This outputs: <strong><code>Mon Feb 06 2017 11:39:05 GMT+0000 (GMT)</code></strong> while django's <strong>models.DateTimeField</strong> expects: <strong><code>2017-02-06 11:39</code></strong></p>  <p>How do i convert: <strong><code>Mon Feb 06 2017 11:39:05 GMT+0000 (GMT)</code></strong> to <strong><code>2017-02-06 11:39</code></strong> Thanks</p>	61802146	"<p>This is a bit of a long-winded solution but this should work to convert Date to django date time</p>  <p>I first convert the Date to a string by cast </p>  <pre><code>(String(date_var)) </code></pre>  <p>then when I receive the API call I convert it using this command</p>  <pre><code>datetime.datetime.strptime("","".join(original_time[:original_time.find(""("")-1].split("" "")).replace(""GMT"",""""), '%a,%B,%d,%Y,%H:%M:%S,%z') </code></pre>  <p>I would recommend preserving the timezone as different servers can be in different timezones which can screw up your dates!</p>"
42104504	Javascript's equivalent of Python's list()	javascript|python|list|function	2017-02-08 04:06:51.760000 UTC	"<p>Similar to or like the function: </p>  <pre><code>list(""String"") ''' return: ['S','t','r','i','n','g'] ''' </code></pre>  <p>Is there a Javascript equivalent of the function?</p>"	42104512	"<p>Use <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/split"" rel=""nofollow noreferrer""><code>String#split</code></a> method with empty string separator as an argument which converts a string into a character array.</p>  <pre><code>""String"".split('') </code></pre>  <p><div class=""snippet"" data-lang=""js"" data-hide=""true"" data-console=""true"" data-babel=""false""> <div class=""snippet-code snippet-currently-hidden""> <pre class=""snippet-code-js lang-js prettyprint-override""><code>console.log(   ""String"".split('') )</code></pre> </div> </div> </p>  <hr>  <p>For latest browsers, use <a href=""https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/from"" rel=""nofollow noreferrer""><code>Array.from</code></a> method or <a href=""https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Operators/Spread_operator"" rel=""nofollow noreferrer"">spread syntax</a>.</p>  <pre><code>// Using Array.from  var arr = Array.from(""String"")  // Using spread syntax  var arr = [...""String""] </code></pre>  <p><div class=""snippet"" data-lang=""js"" data-hide=""true"" data-console=""true"" data-babel=""false""> <div class=""snippet-code snippet-currently-hidden""> <pre class=""snippet-code-js lang-js prettyprint-override""><code>console.log(   Array.from(""String"") )  console.log(   [...""String""] )</code></pre> </div> </div> </p>"
42104504	Javascript's equivalent of Python's list()	javascript|python|list|function	2017-02-08 04:06:51.760000 UTC	"<p>Similar to or like the function: </p>  <pre><code>list(""String"") ''' return: ['S','t','r','i','n','g'] ''' </code></pre>  <p>Is there a Javascript equivalent of the function?</p>"	42104518	"<pre><code>var str = ""String""     str.split(''); </code></pre>  <p>That should do it</p>"
42104504	Javascript's equivalent of Python's list()	javascript|python|list|function	2017-02-08 04:06:51.760000 UTC	"<p>Similar to or like the function: </p>  <pre><code>list(""String"") ''' return: ['S','t','r','i','n','g'] ''' </code></pre>  <p>Is there a Javascript equivalent of the function?</p>"	42104520	"<p>Use the split method, <code>""Hello world!"".split('')</code>. </p>    <pre class=""lang-js prettyprint-override""><code>console.log(   ""Hello world!"".split('') ) </code></pre>"
42104504	Javascript's equivalent of Python's list()	javascript|python|list|function	2017-02-08 04:06:51.760000 UTC	"<p>Similar to or like the function: </p>  <pre><code>list(""String"") ''' return: ['S','t','r','i','n','g'] ''' </code></pre>  <p>Is there a Javascript equivalent of the function?</p>"	42104521	"<p>If you want to convert a String into an Array with each element being a character of the string, you can use <code>String.prototype.split()</code>:</p>  <pre><code>""String"".split('') //['S', 't', 'r', 'i', 'n', 'g'] </code></pre>"
42104504	Javascript's equivalent of Python's list()	javascript|python|list|function	2017-02-08 04:06:51.760000 UTC	"<p>Similar to or like the function: </p>  <pre><code>list(""String"") ''' return: ['S','t','r','i','n','g'] ''' </code></pre>  <p>Is there a Javascript equivalent of the function?</p>"	42104556	"<p>The closest equivalent in all cases of what is passed to <a href=""https://docs.python.org/2/library/functions.html#list"" rel=""nofollow noreferrer""><code>list()</code></a> would be using the <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_operator"" rel=""nofollow noreferrer"">spread syntax</a> from ES6. For older versions of JavaScript, you can use <code>string.split('')</code> for a character array. Note that <code>.split('')</code> <a href=""https://stackoverflow.com/a/38901550/5743988"">won't work with characters that use surrogate pairs</a>.</p>  <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-js lang-js prettyprint-override""><code>function list(iterable) {   return [...iterable];   }  console.log(list('String'));</code></pre> </div> </div> </p>"
42120925	Javascript Implementation of Python Dictionary	javascript|python|dictionary|hash	2017-02-08 18:30:07.470000 UTC	"<p>So, I just learnt about python's implementation of a hash-table, which is dictionary.</p>  <p>So here are what I understand so far, please correct me if I'm wrong:</p>  <ol> <li>A dictionary is basically a structured data that contains key-value pairs. </li> <li>When we want to search for a key, we can directly call dict[key]. This is possible because python does a certain hash function on the key. The hash results is the index of the value in the dictionary. This way, we can get to the value directly after doing the hash function, instead of iterating through a list.</li> <li>Python will update the hash-table by increasing the amount of 'buckets' when the hash-table is filled 2/3rd of its maximum size.</li> <li>Python will always ensure that every 'buckets' will only have 1 entry in it so that the performance on lookup will be optimal, no iterations needed.</li> </ol>  <p>My first question is, am I understanding python dictionary correctly?</p>  <p>Second, does the javascript object also has all these 4 features? If not, is there another built-in javascript implementantion of dictionary/hash-table in general?</p>"	42121749	"<p>JavaScript Objects can be used as dictionaries, but see <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map"" rel=""nofollow noreferrer"">Map</a> for details on a JavaScript Map implementation. Some key takeaways are:</p>  <ul> <li>The Object prototype can potentially cause key collisions</li> <li>Object keys can be Strings or Symbols. Map keys can be any value.</li> <li>There is no direct means of determining how many ""map"" entries an Object has, whereas Map.prototype.size tells you exactly how many entries it has.</li> </ul>  <p>As a rule of thumb: if you're creating what is semantically a collection (an associative array), use a Map. If you've got different types of values to store, use an Object.</p>"
42170988	Python equivalent of JavaScript's Object.create()	javascript|python	2017-02-11 00:55:33.770000 UTC	"<p>What would be the Python equivalent of JavaScript's <a href=""https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/create"" rel=""nofollow noreferrer"">Object.create()</a> functionality?</p>  <p>For example, in JS this is possible:</p>  <pre class=""lang-js prettyprint-override""><code>var s = { 'pots': 5, 'cups': 2 }; var t = Object.create( s ); console.log( t['pots'] );               // 5  t['pots'] = 9000; console.log( t['pots'] );               // 9000 console.log( t['__proto__']['pots'] );  // 5, unchanged  s['pots'] = 33; console.log( t['pots'] );               // 9000, unchanged console.log( t['__proto__']['pots'] );  // 33 </code></pre>  <p>The closest thing I can think of is using <a href=""https://docs.python.org/3/library/copy.htm"" rel=""nofollow noreferrer"">copy</a>:</p>  <pre class=""lang-py prettyprint-override""><code>s = { 'pots': 5, 'cups': 2 } t = copy.copy( s ) </code></pre>  <p>It works, but it seems very wasteful to create a new copy of the reference object each time I want to inherit its properties.</p>  <p>Also I'm working with simple objects of the type seen above... not class instances.</p>"	42171147	"<p>The dictionary class <code>dict</code> accepts another dictionary in its constructor.</p>  <pre><code>s = { 'pots': 5, 'cups': 2 } t = dict(s) </code></pre>  <p>This is a shallow copy, which is fine when you're using immutable objects as values. (Keys must always be immutable types.) If you are using mutable containers such as other dictionaries (or lists, or various other types) as values, you should use <code>copy.deepcopy()</code>.</p>  <p>It's important to note that in Python, items in a container (like a <code>dict</code>) and attributes on an object are different things entirely, accessed in different ways, and neither is exactly like a property in JavaScript. What you are actually trying to do is better accomplished by classes in Python:</p>  <pre><code>class Thing(object):     pots = 5     cups = 2  s = Thing() t = Thing() </code></pre>  <p>In this case, <code>s.pots</code> accesses the value stored on the <code>Thing</code> class until you actually assign <code>s.pots</code>, at which point the instance's value of that attribute shadows the value stored on the class.  So space is used on the instance only for attributes that have actually been assigned. </p>  <p>You can also define <code>__slots__</code> on the class to allow only attributes of specific names to be assigned; this can reduce the memory overhead of instances, which is handy if you will be creating a lot of them.</p>  <p>The Python way of accessing attributes using a variable (or expression) rather than dot notation is the <code>getattr()</code> function. It is possible to create an object that can access the same data using either <code>.</code> or <code>[]</code>, but it's trickier than you might expect to get it to work <em>exactly</em> like it does in JavaScript.</p>  <p>When you are using classes, the closest equivalent to your example (given an <code>s</code>, create a <code>t</code> with <code>s</code>'s own attributes) is something like this:</p>  <pre><code>t = type(s)() t.__dict__.update(s.__dict__) </code></pre>  <p>You could provide a method to do this:</p>  <pre><code>class Cloneable(object):     def clone(self):         inst = type(self)()         inst.__dict__.update(self.__dict__)         return inst </code></pre>  <p>Then derive <code>Thing</code> from <code>Cloneable</code> rather than <code>object</code> and you can do:</p>  <pre><code>s = Thing() t = s.clone() </code></pre>"
42174933	Python Web Browser: Disable Javascript?	javascript|python|webkit|pygtk	2017-02-11 10:44:36.150000 UTC	"<p>This is a simple Python web browser. I would like to disable JavaScript in it.</p>  <p>I found the code on the web. I am not sure how JavaScript can be disabled.</p>  <pre><code>#!/usr/bin/env python import gtk, webkit  #WOW class Doge():      def __init__(self):         # Create window         self.much_window = gtk.Window()         #self.much_window.set_icon_from_file('doge.png')         self.much_window.connect('destroy', lambda w: gtk.main_quit())         self.much_window.set_default_size(1000, 700)          # Create navigation bar         self.so_navigation = gtk.HBox()          self.many_back = gtk.ToolButton(gtk.STOCK_GO_BACK)         self.such_forward = gtk.ToolButton(gtk.STOCK_GO_FORWARD)         self.very_refresh = gtk.ToolButton(gtk.STOCK_REFRESH)         self.wow_address_bar = gtk.Entry()          self.many_back.connect('clicked', self.go_back)         self.such_forward.connect('clicked', self.go_forward)         self.very_refresh.connect('clicked', self.refresh_page)         self.wow_address_bar.connect('activate', self.load_page)          self.so_navigation.pack_start(self.many_back, False)         self.so_navigation.pack_start(self.such_forward, False)         self.so_navigation.pack_start(self.very_refresh, False)         self.so_navigation.pack_start(self.wow_address_bar)          # Create view for webpage         self.very_view = gtk.ScrolledWindow()         self.such_webview = webkit.WebView()         self.such_webview.open('http://www.google.com/')         self.such_webview.connect('title-changed', self.change_title)         self.such_webview.connect('load-committed', self.change_url)         self.very_view.add(self.such_webview)          # Add everything and initialize         self.wow_container = gtk.VBox()         self.wow_container.pack_start(self.so_navigation, False)         self.wow_container.pack_start(self.very_view)          self.much_window.add(self.wow_container)         self.much_window.show_all()         gtk.main()      def load_page(self, widget):         so_add = self.wow_address_bar.get_text()         if so_add.startswith('http://') or so_add.startswith('https://'):             self.such_webview.open(so_add)         else:             so_add = 'http://' + so_add             self.wow_address_bar.set_text(so_add)             self.such_webview.open(so_add)      def change_title(self, widget, frame, title):         self.much_window.set_title('Wow So ' + title)      def change_url(self, widget, frame):         uri = frame.get_uri()         self.wow_address_bar.set_text(uri)      def go_back(self, widget):         self.such_webview.go_back()      def go_forward(self, widget):         self.such_webview.go_forward()      def refresh_page(self, widget):         self.such_webview.reload()  wow = Doge() </code></pre>"	42175163	"<p>You should create WebKit Settings object and set a corresponding property on it, like that:</p>  <pre><code>    self.settings = webkit.WebSettings()      #This one is for WebKit 1.0     self.settings.set_property('enable-scripts', False)      #This one is for WebKit 2.0        #self.settings.set_property('enable-javascript', False);      self.such_webview = webkit.WebView()     self.such_webview.set_settings(self.settings); </code></pre>"
42181960	trigger javascript function based on python variable value	javascript|python|html	2017-02-11 22:28:10.723000 UTC	"<p>The following 2 js functions can toggle a button to and from the disabled class. I want the disabled state to depend on the global variable <code>filelength</code> in the python code but cannot think of a simple way to do so. The only way I can think of is to have 2 identical but separate templates, one with the button disabled and one with it enabled.</p>  <pre><code>&lt;script type=""text/javascript"" language=""JavaScript""&gt;      function enableButton(button){      document.getElementById(button).removeAttribute('class');          document.getElementById(button).setAttribute(""class"", ""button"");      }      function disableButton(button){          document.getElementById(button).setAttribute(""class"", ""disabled"");      }    &lt;/script&gt; </code></pre>  <p>I intended to use the functions for the following <code>index.html</code> template element.</p>  <pre><code>&lt;button id=""Test"" class=""button disabled"" &gt; Test &lt;/button&gt; </code></pre>  <p>The intended toggling would produce the following <code>alt.html</code> template element which elides the ""disabled"".</p>  <pre><code>&lt;button id=""Test"" class=""button"" &gt; Test &lt;/button&gt; </code></pre>  <p>It seems silly to require 2 separate templates (index.html and alt.html) to accomplish this toggle, but I cannot think of an alternative that permits me to just alter <code>index.html</code>. Initially I thought jinja2 would provide the functionality needed, but that does not seem correct. </p>  <p>How can I accomplish this without a second template using python and GAE?</p>  <p>For more completeness, below I show the relevant state of my python application next.</p>  <pre><code>import os import jinja2 import webapp2 import urllib  filelength = 0  class MainPage(BaseHandler):      def get(self):     global filelength     logging.info(""text length in Main get: %s "" % filelength)     template_values = {'filelength':filelength}         template = JINJA_ENVIRONMENT.get_template('index.html')         self.response.out.write(template.render(template_values))      def post(self):     global filelength     url = self.request.get('URL', None)     text = urllib.urlopen(url).read()     logging.info(""text length in Main post: %s "" % len(text))     filelength = len(text)     if filelength &gt; 0:         return webapp2.redirect('/alt')     else:         return webapp2.redirect('/')  class AltMainPage(BaseHandler):      def get(self):     global filelength     logging.info(""text length in Alt get: %s "" % filelength)     template_values = {'filelength':filelength}         template = JINJA_ENVIRONMENT.get_template('alt.html')         self.response.out.write(template.render(template_values))      def post(self):     global filelength     url = self.request.get('URL', None)     text = urllib.urlopen(url).read()     logging.info(""text length in Alt post: %s "" % len(text))     if filelength &gt; 0:         return webapp2.redirect('/alt')     else:         return webapp2.redirect('/')     return webapp2.redirect('/')  app = webapp2.WSGIApplication([         ('/', MainPage),          ('/alt', AltMainPage),          ],         debug=True) </code></pre>"	42186376	"<p>In the template <code>index.html</code> simply use jinja2 to define the class attribute like this where the value of <code>buttonclass</code> is defined as either <code>button</code> or <code>button disabled</code> in python using the ""if ... else"" construct.</p>  <pre><code>&lt;button id=""Test"" class=""{{ buttonclass }} "" &gt; Test &lt;/button&gt; </code></pre>"
42207258	How to make JavaScript talk with Python through local http connection?	javascript|python|json|sockets	2017-02-13 15:09:16.183000 UTC	"<p>I am writing a script that sends some data from app A to app B in form of coded json through a local HTTP connection using sockets, etc. <p> app A uses python, however in app B you can only use pure JavaScript to perform operations that you justed passed with json data.</p>  <p>And here I have some problem, how can I send back data using pure JS that would be executed from inside app B? Also it would use port and socket, that I am already using? I am not very familiar with JS so any hints are very appriciated. Also I am not very sure that it's possible due to some security issues from this idea however maybe I am not aware of something.</p>  <hr>  <p>app A python script pseudocode:</p>  <pre><code>class Connect:     def __init__(self, port=1, host='localhost'):         self._host = host         self._port = port      # Execute a HTTP POST request to the app server and send/receive JSON data     def json_post_request(self, route, body):         connection = http.HTTPConnection(self._host, self._port, timeout=3000)         connection.request('POST', route, body, head)         response = connection.getresponse()          data = json.loads(response.read().decode('utf-8'))         connection.close()      # Execute a JavaScript script     def execute_script(self, script):         return self.json_post_request(route, ('{""js"":""' + script.decode('utf-8') + '""}').encode('utf-8')) </code></pre>"	42207675	"<p><code>httplib</code> is not a websocket :) </p>  <p>maybe you need to use package <code>websockets</code></p>  <p>Or try a framework for that like <a href=""http://www.tornadoweb.org/en/stable/index.html"" rel=""nofollow noreferrer"">Tornado</a></p>"
42207258	How to make JavaScript talk with Python through local http connection?	javascript|python|json|sockets	2017-02-13 15:09:16.183000 UTC	"<p>I am writing a script that sends some data from app A to app B in form of coded json through a local HTTP connection using sockets, etc. <p> app A uses python, however in app B you can only use pure JavaScript to perform operations that you justed passed with json data.</p>  <p>And here I have some problem, how can I send back data using pure JS that would be executed from inside app B? Also it would use port and socket, that I am already using? I am not very familiar with JS so any hints are very appriciated. Also I am not very sure that it's possible due to some security issues from this idea however maybe I am not aware of something.</p>  <hr>  <p>app A python script pseudocode:</p>  <pre><code>class Connect:     def __init__(self, port=1, host='localhost'):         self._host = host         self._port = port      # Execute a HTTP POST request to the app server and send/receive JSON data     def json_post_request(self, route, body):         connection = http.HTTPConnection(self._host, self._port, timeout=3000)         connection.request('POST', route, body, head)         response = connection.getresponse()          data = json.loads(response.read().decode('utf-8'))         connection.close()      # Execute a JavaScript script     def execute_script(self, script):         return self.json_post_request(route, ('{""js"":""' + script.decode('utf-8') + '""}').encode('utf-8')) </code></pre>"	42208205	"<p>It depends on the type of communication you want to happen between your two apps. Do you need full duplex communication? Then I would advise using <a href=""https://developer.mozilla.org/en-US/docs/Web/API/WebSocket"" rel=""nofollow noreferrer"">websockets</a>. You could run the server in either your JS or in Python. You could use <a href=""http://autobahn.ws/"" rel=""nofollow noreferrer"">Autobahn</a>, which has both clients / servers available in Python and JS.</p>  <p>If you need communication in a specific direction, you can use a RESTful API (HTTP Request / Response). In this case, the sender of messages should be the client, whereas the receiver should be hosting the REST service. In a sense there is also a form of bidirectional communication here, but your Host is not able to initiate communication and can only respond to requests.</p>"
42250159	Python - Javascript encrypt function for a known decrypt function	javascript|python|encryption|cryptography	2017-02-15 13:01:21.950000 UTC	"<p>I found a streaming website that encrypts the iframe code with an interesting Javascript function. On the webpage is visible the decrypt function (obviously) but not the encryption one. This is the function:</p>  <pre><code>function base64_decode(data) {     var b64 = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';     var o1, o2, o3, h1, h2, h3, h4, bits, i = 0,         ac = 0,         dec = '',         tmp_arr = [];     if (!data) {         return data;     }     data += '';     do {         h1 = b64.indexOf(data.charAt(i++));         h2 = b64.indexOf(data.charAt(i++));         h3 = b64.indexOf(data.charAt(i++));         h4 = b64.indexOf(data.charAt(i++));         bits = h1 &lt;&lt; 18 | h2 &lt;&lt; 12 | h3 &lt;&lt; 6 | h4;         o1 = bits &gt;&gt; 16 &amp; 0xff;         o2 = bits &gt;&gt; 8 &amp; 0xff;         o3 = bits &amp; 0xff;         if (h3 == 64) {             tmp_arr[ac++] = String.fromCharCode(o1);         } else if (h4 == 64) {             tmp_arr[ac++] = String.fromCharCode(o1, o2);         } else {             tmp_arr[ac++] = String.fromCharCode(o1, o2, o3);         }     } while (i &lt; data.length);     dec = tmp_arr.join('');     return dec.replace(/\0+$/, ''); }  function ord(string) {     var str = string + '',         code = str.charCodeAt(0);     if (0xD800 &lt;= code &amp;&amp; code &lt;= 0xDBFF) {         var hi = code;         if (str.length === 1) {             return code;         }         var low = str.charCodeAt(1);         return ((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000;     }     if (0xDC00 &lt;= code &amp;&amp; code &lt;= 0xDFFF) {         return code;     }     return code; }  function decrypt(sData, sKey) {     var sResult = """";     sData = base64_decode(sData);     var i = 0;     for (i = 0; i &lt; sData.length; i++) {         var sChar = sData.substr(i, 1);         var sKeyChar = sKey.substr(i % sKey.length - 1, 1);         sChar = Math.floor(ord(sChar) - ord(sKeyChar));         sChar = String.fromCharCode(sChar);         sResult = sResult + sChar;     }     return sResult; } </code></pre>  <p>So this code:</p>  <pre><code>decrypt('s+Dd6djk3Jfq6dq0md/r6+fqsaam5ufc5ePm2Nul2uam3OTZ3Numy83Zw87aqazMvbimmZfq2unm4+Pg5d60meXmmZfd6djk3Nnm6dvc6bSZp5mX7uDb69+0mainp5yZl9/c4N7f67SZqKennJmX2OPj5u7d7OPj6trp3NzltJnr6ezcmZfu3Nni4OvY4+Pm7t3s4+Pq2unc3OW0mevp7NyZl+Tm8djj4+bu3ezj4+ra6dzc5bSZ6+ns3Jm1s6bg3enY5Ny1', 'w') </code></pre>  <p>will return:</p>  <pre><code>&lt;iframe src=""https://openload.co/embed/TVbLWc25UFA/"" scrolling=""no"" frameborder=""0"" width=""100%"" height=""100%"" allowfullscreen=""true"" webkitallowfullscreen=""true"" mozallowfullscreen=""true""&gt;&lt;/iframe&gt; </code></pre>  <p>I translated the decrypt function in Python with <code>math</code> and <code>base64</code> modules and it works well, but now I need the encrypt function (in Python) that starting from a string outputs encrypted string + key. Is it some kind of known encryption?</p>"	42270178	"<p>This seems to be a bad implementation of the Vigenère cipher, without the modulus as the resulting <code>sChar</code> may have higher values. It simply adds the value of a key character to each plain character, reusing the key if it is depleted. It will mainly function as something to confuse virus-scanners or packet-inspecting firewalls as the encryption itself is of course completely insecure. It won't have a name (and no self-respecting cryptographer will lend his name for it either).</p>  <p>There seems to be a bug in the code here:</p>  <pre><code>sKey.substr(i % sKey.length - 1, 1); </code></pre>  <p>I'm not sure why the <code>- 1</code> is required or how this plays out in practice (this is why languages and API's should be strict in what is acceptable).</p>  <p><code>ord</code> seems to have been implemented to avoid issues with 16-bit Unicode characters.</p>  <p><code>base64_decode</code> simply implements base 64 decoding, nothing to see there.</p>"
42258410	Python Selenium Not Executing Javascript from Google Tag Manager	python|selenium|phantomjs	2017-02-15 19:28:40.487000 UTC	"<p>I am running a unittest on an api which is called via google tag manager to inject the script tags which pull down a javascript file. For example, gtm injects the following:</p>  <pre><code>&lt;script src=""http://www.example.com/js/file.js""&gt;&lt;/script&gt; </code></pre>  <p>In the file <code>file.js</code> there is javascript that executes to process visitor information and sends it to our api. This whole process works fine for site visitors, but fails in Python Selenium, using PhantomJS. Viewing the page source, I can see that the data is pulled down from gtm correctly, and a request for <code>file.js</code> is made to our servers, but the code inside never executes. Can anyone point out what I am doing wrong? Below is an extract from my code:</p>  <pre><code>from selenium import webdriver driver = webdriver.PhantomJS(service_args=['--ignore-ssl-errors=true']) driver.set_window_size(1120, 550) driver.get('https://www.example.com') print(driver.page_source) cookies = {item['name']: item for item in driver.get_cookies()} print(cookies) </code></pre>  <p>Since gtm loads at the end of the page, could their be the potential that it doesn't execute the associated javascript?</p>"	42351288	"<p>Turns out the javascript was executing, but it was erroring out because I was attempting to get the Timezone via the Intl library which is not natively supported in PhantomJS. I determined that this was the error with the following: <code>driver.get_log('browser')</code> and examining the output.</p>"
42394621	Scraping Javascript-webpage with BeautifulSoup and Python	python|selenium|web-scraping|beautifulsoup	2017-02-22 14:43:40.497000 UTC	"<p>I want to scrape content from the website <code>http://www.jobs.ch</code>. The result should be a script where I can specify a job term e.g. Business Analyst and get all jobs which have that in the title. I assume I should use a multistep approach by collecting first all matching links from every page, store them and later extract the job description. </p>  <p>Is that a possible way to achieve this goal? Or do I need to use also selenium as the site is in react.js?</p>  <p>Here the start of my script:</p>  <pre><code>from bs4 import BeautifulSoup import urllib2  jobsFile = urllib2.urlopen(""http://www.jobs.ch/en/vacancies/?term=business+analyst"") jobsHtml = jobsFile.read() jobsFile.close()  soup = BeautifulSoup(jobsHtml) jobsAll = soup.find_all(""a"") for links in soup.find_all('a'):     print (links.get('href')) </code></pre>  <p>The output from the console:</p>  <pre><code>python jobplatform.py /Library/Python/2.7/site-packages/bs4/__init__.py:181: UserWarning:    No parser was explicitly specified, so I'm using the best available   HTML parser for this system (""lxml""). This usually isn't a problem,    but if you run this code on another system, or in a different virtual  environment, it may use a different parser and behave differently.  The code that caused this warning is on line 8 of the file  jobplatform.py. To get rid of this warning, change code that looks  like this:  BeautifulSoup([your markup])  to this:  BeautifulSoup([your markup], ""lxml"")  markup_type=markup_type)) None /en/ /en/login/ /en/register/ /en/vacancies/ /en/companies/ http://www.jobs.ch/en/sucheBerater.php http://www.jobs.ch/en/tipps http://www.jobs.ch/en/ecom/ /de/stellenangebote/?term=business /fr/offres-emplois/?term=business /en/vacancies/?term=business /en/vacancies/ None None None None /en/vacancies/?page=1&amp;term=business&amp;web-results=1 None None /en/companies/79912-bayer-business-services-gmbh/ /en/vacancies/detail/7376115/?source=vacancy_search /en/companies/79912-bayer-business-services-gmbh/ /en/companies/48196-kotra-korea-business-center/ /en/vacancies/detail/7397077/?source=vacancy_search /en/companies/48196-kotra-korea-business-center/ /en/companies/66172-diwisa-distillerie-willisau-sa/ /en/vacancies/detail/7363589/?source=vacancy_search /en/companies/66172-diwisa-distillerie-willisau-sa/ /en/companies/2859-paul-scherrer-institut/ /en/vacancies/detail/7359642/?source=vacancy_search /en/companies/2859-paul-scherrer-institut/ /en/companies/49314-pit-offices-gmbh/ /en/vacancies/detail/7344672/?source=vacancy_search /en/companies/49314-pit-offices-gmbh/ /en/companies/27786-zuehlke-engineering-ag/ /en/vacancies/detail/7176356/?source=vacancy_search /en/companies/27786-zuehlke-engineering-ag/ /en/companies/1802-six-payment-services-ag/ /en/vacancies/detail/7396870/?source=vacancy_search /en/companies/1802-six-payment-services-ag/ /en/companies/49420-mettler-toledo-gruppe/ /en/vacancies/detail/7384998/?source=vacancy_search /en/companies/49420-mettler-toledo-gruppe/ /en/companies/16414-partners-group/ /en/vacancies/detail/7279253/?source=vacancy_search /en/companies/16414-partners-group/ /en/companies/4005-johnson-johnson/ /en/vacancies/detail/7397184/?source=vacancy_search /en/companies/4005-johnson-johnson/ /en/companies/44340-amgen/ /en/vacancies/detail/7359993/?source=vacancy_search /en/companies/44340-amgen/ /en/companies/1802-six-payment-services-ag/ /en/vacancies/detail/7357631/?source=vacancy_search /en/companies/1802-six-payment-services-ag/ /en/companies/16649-fritschi-unternehmensberatung-gmbh/ /en/vacancies/detail/7369054/?source=vacancy_search /en/companies/16649-fritschi-unternehmensberatung-gmbh/ /en/companies/19002-hays-schweiz-ag/ /en/vacancies/detail/7389632/?source=vacancy_search /en/companies/19002-hays-schweiz-ag/ /en/companies/5977-canon-schweiz-ag/ /en/vacancies/detail/7236919/?source=vacancy_search /en/companies/5977-canon-schweiz-ag/ /en/companies/40039-vorwerk-international-strecker-co/ /en/vacancies/detail/7374142/?source=vacancy_search /en/companies/40039-vorwerk-international-strecker-co/ /en/companies/2263-zuercher-kantonalbank/ /en/vacancies/detail/7299359/?source=vacancy_search /en/companies/2263-zuercher-kantonalbank/ /en/companies/10673-accenture/ /en/vacancies/detail/6664788/?source=vacancy_search /en/companies/10673-accenture/ /en/companies/38308-addexpert-gmbh/ /en/vacancies/detail/7386047/?source=vacancy_search /en/companies/38308-addexpert-gmbh/ /en/companies/1802-six-swiss-exchange-ag/ /en/vacancies/detail/7357633/?source=vacancy_search /en/companies/1802-six-swiss-exchange-ag/ /en/vacancies/?page=1&amp;term=business /en/vacancies/?page=2&amp;term=business /en/vacancies/?page=3&amp;term=business /en/vacancies/?page=4&amp;term=business /en/vacancies/?page=5&amp;term=business /en/vacancies/?page=6&amp;term=business /en/vacancies/?page=124&amp;term=business /en/vacancies/?page=2&amp;term=business None http://jobcloud.ch/c/en/about/ http://jobcloud.ch/c/en/about/ http://jobcloud.ch/c/en/about/team/ http://jobcloud.ch/c/en/we-are-jobcloud/ None http://www.jobs.ch/en/newest.php http://www.jobs.ch/en/info.php?info=agb http://www.jobs.ch/en/info.php?info=pp None http://jobcloud.ch/c/en/products/international-recruiting/ /en/ http://www.jobs.ch/en/sitemap.php http://jobcloud.ch/c/en/about/contact/ http://jobcloud.ch/ http://www.facebook.com/jobs.ch http://twitter.com/jobs_ch http://www.xing.com/company/jobcloudag http://www.youtube.com/jobspunktch http://plus.google.com/113239437813300663024/ http://www.flickr.com/photos/jobsag </code></pre>"	42398594	"<p>As stated in @Teemu Risikko  comment, you can use dryscrape or selenium. Here is a solution using dryscrape: </p>  <pre><code>from bs4 import BeautifulSoup import dryscrape  my_url = ""http://www.jobs.ch/en/vacancies/?term=business+analyst"" session = dryscrape.Session() session.visit(my_url) response = session.body() soup = BeautifulSoup(response) jobsAll = soup.find_all(""a"") for links in soup.find_all('a'):     print (links.get('href')) </code></pre>  <p>The solution is pretty straightforward with dryscrape but installing the package can be tricky (use qt &lt;=55) ...</p>"
42401551	Send file from javascript to Python via Ajax	javascript|jquery|python|ajax	2017-02-22 20:24:42.447000 UTC	"<p>I'm having a problem sending a file object to python through an ajax call.<br> I'm using <a href=""http://www.dropzonejs.com/"" rel=""nofollow noreferrer"">Dropzone</a> just as my ""file uploader interface"" and I'm sending a call when certain button is pressed.</p>  <p>In python when I try to process the file, it says <strong>"" 'str' object has no attribute 'seek' ""</strong></p>  <p>My JS Code:</p>  <pre><code>... window.$form_add_file = $(""#form_add_file""); var file = dropzone.files[0]; ...  var formData = $form_add_file.serializeArray();  if(file){      $modal_add_file.find($drop_add_file).removeClass(""error"");      var filetype = file.type.split(""/"")[0].toLowerCase();     var hasFile = checkFileType(filetype);     if(!hasFile) { filetype = ""file"" }      formData.push(         { name: ""file"", value: file },         { name: ""file_type"", value: filetype },         { name: ""file_name"", value: file.name },         { name: ""file_size"", value: file.size }     );  } else {     error = true;     $modal_add_file.find($drop_add_file).addClass(""error"");     return false; }  if(!error){     $.ajax({         method: ""POST"",         url: host + ""json.references.new"",         data: formData,         cache: false,         dataType: 'json',         success: function(data){             if(data){                 if(data.error){                     modalMessage($modal_add_file, data.error, ""ok"");                 } else {                     refreshData(data);                 }             }         },         error: function(error){             modalMessage($modal_add_file, oops_message, ""ok"");         }     }); } </code></pre>  <p>My Python Code:</p>  <pre><code>try:      file_path = os.path.join(path, file_name)     temp_file_path = file_path + '~'     file.seek(0) # error happen here     with open(temp_file_path, 'wb') as output_file:         shutil.copyfileobj(file, output_file)     os.rename(temp_file_path, file_path) </code></pre>  <p>I've been searching for this on the internet and found nothing yet.</p>  <p>Sorry for the poor english.</p>  <p>Thanks in advance!</p>"	42401880	"<p><code>seek</code> is a method for file objects, not strings.</p>  <p>I think your code snippet is missing some lines, but if <code>file</code> is supposed to be the file pointed to by <code>file_path</code> then you should first open the file with <code>file = open(file_path, 'rb')</code>. New file objects should start reading at the 0th position, so <code>file.seek(0)</code> should be unnecessary. </p>"
42448312	Get Html page after jQuery and Javascript execution with Python	javascript|jquery|python|html|ajax	2017-02-24 21:08:55.637000 UTC	"<p>I've imported the content of a webpage into a variable in python, but I'm not getting the final structure (the one that's modified by Ajax and jQuery in general).</p>  <p>How could I solve this? I would like to get the html as the one I see if I save the page from the browser.</p>  <p>That's my code:</p>  <pre><code>import urllib.request  urlAddress = ""http:// ... /"" getPage = urllib.request.urlopen(urlAddress) outputPage = str(getPage.read()) print(outPage) </code></pre>"	42448419	"<p>You can't by just getting the page source from the server. You need to do one of the following:</p>  <ul> <li>Use the headless browser or similar solution (Selenium, Splash, PhantomJS, ...) to run the JS code in the page itself and see the results.</li> <li>Figure out what the JS code actually does, and recreate the same in Python. If it's doing another call to the server, you can see that in the XHR tab in Developer Tools on Chrome.</li> </ul>"
42520744	Invoke javascript on the change of a document property via a python script	spotfire	2017-02-28 23:42:06.863000 UTC	<p>Usecase - There is a python script which changes the value of an input field property control(say input1). Need to invoke a javascript whenever this document property(input1) changes. Tried using the change event in the javascript but it does not trigger the javascript. The javascript triggers only if we manually set a value and click in the text area to submit the value.</p>  <p>Has anyone found a workaround for this? Using Spotfire version 7.0</p>	51878339	"<p>I have successfully done this by adding a space to the html in the text area via the IronPython script.</p>  <pre><code>#add a space to trigger JavaScript from Spotfire.Dxp.Application.Visuals import HtmlTextArea txt.As[HtmlTextArea]().HtmlContent += "" "" </code></pre>  <p>txt is an input parameter of type Visualization.  Make sure this is the Text Area visualization where your JavaScript is that you wish to trigger.  If you place this at the end of the python script that is updating the property control it should trigger the JavaScript as it re-renders the Text Area visualization. Hope this helps!</p>"
42521303	(Python) How to download an image from a link that generates via javascript?	python-2.7	2017-03-01 00:43:11.413000 UTC	"<p>Basically, I want to be able to download the png at the bottom of a page like <a href=""http://droughtmonitor.unl.edu/Home/RegionalDroughtMonitor.aspx?west"" rel=""nofollow noreferrer"">this one (link)</a>. The site generates the link to the png through a javascript function, from what I can tell.</p>"	42521598	"<p>I'd suggest using <a href=""http://docs.python-requests.org/en/master/"" rel=""nofollow noreferrer"">Requests</a> to fetch the most recent date listed in <a href=""http://droughtmonitor.unl.edu/data/pngs/"" rel=""nofollow noreferrer"">the parent directory</a>, then for the next part of the URL check the links listed on the page for that date (<a href=""http://droughtmonitor.unl.edu/data/pngs/20170221/"" rel=""nofollow noreferrer"">example</a>) for a string ending with whatever you're looking for; so for Drought Monitor West, that'd be a link ending in <em>_west_trd.png</em>.</p>"
42547328	getting the value of python function from javascript	javascript|html|python-2.7|bottle	2017-03-02 05:11:09.237000 UTC	"<p>I'm wondering if there is a way to pass a python dictionary to javascript?</p>  <p>okay, I'm using <code>bottle</code> to have a web framework and my setup is something like this: <a href=""https://i.stack.imgur.com/JGtck.jpg"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/JGtck.jpg"" alt=""enter image description here""></a></p>  <p>in <strong>runTheApp.py</strong> I have:</p>  <pre><code># importing general packages import bottle  @bottle.route('/') def index():   return bottle.template(""index"")  @bottle.route('/static/&lt;filename&gt;') def server_static(filename):   return bottle.static_file(filename, root=""./js"")  if __name__ == ""__main__"":   bottle.run(host=""localhost"",port=8080,debug=True,reloader=True) </code></pre>  <p>and my python dictionary that I want to access from is in <strong>myData.py</strong>:</p>  <pre><code>def get_data():      return {""Name"":""James"",""City"":""KL""} </code></pre>  <p>I can access to python from <strong>index.tpl</strong>:</p>  <pre><code>&lt;!DOCTYPE html&gt; &lt;html lang=""en-us"" xml:lang=""en-us""&gt; %import myData %data = myData.get_data()     &lt;head&gt;     &lt;title&gt;Home&lt;/title&gt;     &lt;/head&gt;     &lt;body&gt;     &lt;p id=""greeting""&gt; Hi {{data[""Name""]}} from {{data[""City""]}} &lt;/p&gt;     &lt;/body&gt;     &lt;script type=""text/javascript"" src=""/static/changer.js""&gt;&lt;/script&gt; &lt;/html&gt; </code></pre>  <p>but I want to access to it from <strong>changer.js</strong>, in there I have:</p>  <pre><code>var greeting_p = document.getElementById(""greeting""); var wishing_p = document.createTextNode(""hope you are doign well.""); greeting_p.appendChild(wishing_p); </code></pre>  <p>How can I get the python dictionary from javascript? is it a good idea doing this? as in is it secure and best practice?</p>"	42869127	"<p>You should use an AJAX method to let the bottle app return the data in JSON format (or XML, if you're comfortable with that) and the returned value can then be manipulated by the JavaScript function.</p>"
42547328	getting the value of python function from javascript	javascript|html|python-2.7|bottle	2017-03-02 05:11:09.237000 UTC	"<p>I'm wondering if there is a way to pass a python dictionary to javascript?</p>  <p>okay, I'm using <code>bottle</code> to have a web framework and my setup is something like this: <a href=""https://i.stack.imgur.com/JGtck.jpg"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/JGtck.jpg"" alt=""enter image description here""></a></p>  <p>in <strong>runTheApp.py</strong> I have:</p>  <pre><code># importing general packages import bottle  @bottle.route('/') def index():   return bottle.template(""index"")  @bottle.route('/static/&lt;filename&gt;') def server_static(filename):   return bottle.static_file(filename, root=""./js"")  if __name__ == ""__main__"":   bottle.run(host=""localhost"",port=8080,debug=True,reloader=True) </code></pre>  <p>and my python dictionary that I want to access from is in <strong>myData.py</strong>:</p>  <pre><code>def get_data():      return {""Name"":""James"",""City"":""KL""} </code></pre>  <p>I can access to python from <strong>index.tpl</strong>:</p>  <pre><code>&lt;!DOCTYPE html&gt; &lt;html lang=""en-us"" xml:lang=""en-us""&gt; %import myData %data = myData.get_data()     &lt;head&gt;     &lt;title&gt;Home&lt;/title&gt;     &lt;/head&gt;     &lt;body&gt;     &lt;p id=""greeting""&gt; Hi {{data[""Name""]}} from {{data[""City""]}} &lt;/p&gt;     &lt;/body&gt;     &lt;script type=""text/javascript"" src=""/static/changer.js""&gt;&lt;/script&gt; &lt;/html&gt; </code></pre>  <p>but I want to access to it from <strong>changer.js</strong>, in there I have:</p>  <pre><code>var greeting_p = document.getElementById(""greeting""); var wishing_p = document.createTextNode(""hope you are doign well.""); greeting_p.appendChild(wishing_p); </code></pre>  <p>How can I get the python dictionary from javascript? is it a good idea doing this? as in is it secure and best practice?</p>"	43407894	"<p>I figure that out, here is the example: </p>  <p>Passing dictionary to the template like so:</p>  <pre><code>@bottle.route('/') def index():   data = [{""user"":""Bernard""}]   return bottle.template(""index"", data=data) </code></pre>  <p>and in the template just read it like so:</p>  <pre><code>console.log(""{{data['user']}}"") </code></pre>  <p>also, to call it with Ajax from javascript like what Josh English said, make a POST function and send the dictionary as JSON like so:</p>  <pre><code>@bottle.route('/get-user-info', method=""POST"") def get_user_data():     data = [{""user"":""Bernard""}]     retun json.dumps(data) </code></pre>  <p>And call Ajax in javascript like so to get the JSON file:</p>  <pre><code>// getting the data var result = $.ajax({         url: ""/get-user-info"",         type: 'POST',         dataType: 'json',         contentType: ""application/json"",         async: true, }); </code></pre>  <p>Hope that help anyone that has the same problem.</p>"
42580109	Python Selenium - Run javascript that's called on click event to return URL	javascript|python|selenium	2017-03-03 13:25:26.313000 UTC	"<p>I have created a script to retrieve text from bet365 using selenium. The goal is to graph the changes through time. I have finished most of the script, but I'm working around the below problem by hand at the moment which is not ideal.</p>  <p>I have a list of elements that I want to get the URL from. the URL's are not in any href tags and they appear to me to be generated by javascript (when each element is clicked).</p>  <p>Because each page is quite heavy and takes time to load I don't want to click on each element, get the URL, then return back to the main page. I would prefer to call the javascript function and hopefully receive the URL back, is this possible?</p>  <p>Unfortunately i have no background in javascript and setting break points or inspecting the timeline is getting pretty overwhelming. So far i have found this  function in the chrome debugger which i think is what is creating the URL:</p>  <pre><code>function hrefEvent(n){     n =n || window.event;     var t = n.target || n.srcElement, i = $(t), r;     return t.href } </code></pre>  <p>Does this look like the piece of javascript i should be calling?</p>  <p>Can i call this script with selenium?</p>"	42580795	"<p>selenium provides <a href=""http://selenium-python.readthedocs.io/api.html#selenium.webdriver.remote.webdriver.WebDriver.execute_script"" rel=""nofollow noreferrer"">execute_script</a> method</p>  <pre><code>driver = webdriver.Firefox()  driver.get(""http://bet365/bet365"") driver.execute_script(""function hrefEvent(n){n=n||window.event;var t=n.target||n.srcElement,i=$(t),r;return t.href?"") </code></pre>"
42674581	How to parse a json dumped python dict as javascript object in django template	jquery|django|python-2.7|django-templates	2017-03-08 14:54:06.033000 UTC	"<p>I have a python code which converts the normal dict into JSON as follows</p>  <pre><code>groups = {     'g_1': [         {'name': 'something', 'id': '1'},          {'name': 'something', 'id': '1'}     ],      'g_2': [         {'name': 'something', 'id': '1'},          {'name': 'something', 'id': '1'}     ] } </code></pre>  <p>I have used json.dumps to convert that to a json as follows</p>  <pre><code>import json groups = json.dumps(groups) </code></pre>  <p>I want to read the data in javascript as an object. How to I access it?</p>  <p>I tried <code>var groups=JSON.parse({{ groups }})</code> it didn't work out.  Help me in parsing the data as javascript object.</p>"	42674730	<p>try: </p>  <pre><code>var groups = JSON &amp;&amp; JSON.parse({{ groups }})|| $.parseJSON({{ groups }}); </code></pre>
42674581	How to parse a json dumped python dict as javascript object in django template	jquery|django|python-2.7|django-templates	2017-03-08 14:54:06.033000 UTC	"<p>I have a python code which converts the normal dict into JSON as follows</p>  <pre><code>groups = {     'g_1': [         {'name': 'something', 'id': '1'},          {'name': 'something', 'id': '1'}     ],      'g_2': [         {'name': 'something', 'id': '1'},          {'name': 'something', 'id': '1'}     ] } </code></pre>  <p>I have used json.dumps to convert that to a json as follows</p>  <pre><code>import json groups = json.dumps(groups) </code></pre>  <p>I want to read the data in javascript as an object. How to I access it?</p>  <p>I tried <code>var groups=JSON.parse({{ groups }})</code> it didn't work out.  Help me in parsing the data as javascript object.</p>"	42674843	<p>This should work:</p>  <p><code>var groups = JSON.parse('{{ groups|safe }}');</code></p>
42674581	How to parse a json dumped python dict as javascript object in django template	jquery|django|python-2.7|django-templates	2017-03-08 14:54:06.033000 UTC	"<p>I have a python code which converts the normal dict into JSON as follows</p>  <pre><code>groups = {     'g_1': [         {'name': 'something', 'id': '1'},          {'name': 'something', 'id': '1'}     ],      'g_2': [         {'name': 'something', 'id': '1'},          {'name': 'something', 'id': '1'}     ] } </code></pre>  <p>I have used json.dumps to convert that to a json as follows</p>  <pre><code>import json groups = json.dumps(groups) </code></pre>  <p>I want to read the data in javascript as an object. How to I access it?</p>  <p>I tried <code>var groups=JSON.parse({{ groups }})</code> it didn't work out.  Help me in parsing the data as javascript object.</p>"	55165244	"<p>You may have troubles with <code>'</code> character trying to run <code>var groups = ""{{ groups|safe }}"";</code> or <code>var groups = '{{ groups|safe }}';</code>. If both answers don't work try this solution:</p>  <pre><code>function escapeRegExp(str) {     return str.replace(/([.*+?^=!:${}()|\[\]\/\\])/g, ""\\$1""); } function replaceAll(str, find, replace) {     return str.replace(new RegExp(escapeRegExp(find), 'g'), replace); }  var str = ""{{ groups|safe }}""; var new_str = replaceAll(str, ""'"", ""\"""");  var groups = JSON.parse(new_str); </code></pre>  <p>I had to replace all <code>'</code> to <code>""</code> in the dictionary for <code>JSON.parse</code> to work. To know more about these functions check Stack <a href=""https://stackoverflow.com/questions/1144783/how-to-replace-all-occurrences-of-a-string-in-javascript"">How to replace all occurrences of a string in JavaScript</a> question.</p>"
42674581	How to parse a json dumped python dict as javascript object in django template	jquery|django|python-2.7|django-templates	2017-03-08 14:54:06.033000 UTC	"<p>I have a python code which converts the normal dict into JSON as follows</p>  <pre><code>groups = {     'g_1': [         {'name': 'something', 'id': '1'},          {'name': 'something', 'id': '1'}     ],      'g_2': [         {'name': 'something', 'id': '1'},          {'name': 'something', 'id': '1'}     ] } </code></pre>  <p>I have used json.dumps to convert that to a json as follows</p>  <pre><code>import json groups = json.dumps(groups) </code></pre>  <p>I want to read the data in javascript as an object. How to I access it?</p>  <p>I tried <code>var groups=JSON.parse({{ groups }})</code> it didn't work out.  Help me in parsing the data as javascript object.</p>"	70298256	"<p>For others looking for this,</p> <p>In view:</p> <pre><code>import json from django.core.serializers.json import DjangoJSONEncoder  ... groups = { 'g_1': [     {'name': 'something', 'id': '1'},      {'name': 'something', 'id': '1'} ],  'g_2': [     {'name': 'something', 'id': '1'},      {'name': 'something', 'id': '1'} ] } ... return render(request=request,           template_name=self.template_name,           context={'groups' : json.dumps(groups, cls=DjangoJSONEncoder),}) </code></pre> <p>In Template:</p> <pre><code>var groups = {{groups|safe}}; </code></pre> <p><a href=""https://docs.djangoproject.com/en/3.2/topics/serialization/"" rel=""nofollow noreferrer"">Info on DjangoJSONEncoder</a></p>"
42687599	Python pbkdf2_hmac vs JavaScript crypto.pbkdf2Sync inconsistent hash	python|node.js|flask|cryptography|hashlib	2017-03-09 05:40:31.953000 UTC	"<p>I'm migrating a Flask application to Node. I want to generate the same password hashes in Node as I do in Python. However, the hashes don't match. Why are the results different?</p>  <pre class=""lang-python prettyprint-override""><code>import hashlib, binascii      salt = 'aa'      input_pwd = '1'    fromHex_salt = binascii.a2b_hex(salt)     dk = hashlib.pbkdf2_hmac('sha1', input_pwd.encode('utf-8'), fromHex_salt, 1000, dklen=32) python_result = binascii.hexlify(dk).decode('utf-8') </code></pre>  <pre class=""lang-javascript prettyprint-override""><code>const crypto = require('crypto'); const salt = 'aa'; const input_pwd = '1'; const js_result = crypto.pbkdf2Sync(input_pwd, salt, 1000, 32, 'sha1').toString('hex'); </code></pre>"	42688150	"<p>You forgot to decode your salt from Hex in node.js:</p>  <pre><code>const crypto = require('crypto'); const salt = 'aa'; const input_pwd = '1'; console.log(crypto.pbkdf2Sync(input_pwd, <b>new Buffer(salt, 'hex')</b>, 1000, 32, 'sha1').toString('hex'));</code></pre>"
42692289	How to invoke Python connection sequentially in Javascript:Node.js	javascript|python|node.js|asynchronous|zerorpc	2017-03-09 10:04:21.820000 UTC	"<p>I'm trying to develop a connection between node.js file and Python code which I achieved successfully using zeroRPC. The problem arises when I try to run the node.js file, after executing each line of node.js file, in the end it executes the 'invoke' command that makes the python connection and calls the python function and retrieves the value.For example:</p>  <blockquote>   <p><strong>Node.js File:</strong></p> </blockquote>  <pre><code>  var global_variable = 0;   var json_object = ""Some Json Object"";   console.log(""1"");   NodeToPython(json_object);         //Calling the function    function NodeToPython(json_object_local)   {      var send_json = json_object_local;      var zerorpc = require(""zerorpc"");      var client = new zerorpc.Client();      client.connect(""tcp://localhost:4242"");       console.log(""2"");      client.invoke(""receive"", send_json, function(error, res, more)       {        global_variable = JSON.parse(res);        // 'res' stores retrieved value from Python code        console.log(""3"");        client.close();      }      console.log(""4"");  }  console.log(""5""); </code></pre>  <blockquote>   <p><strong>Python File:</strong>         </p> </blockquote>  <pre><code>   import zerorpc, json    class XYZ(object):        def receive(self,response):                    // Called function            self.response=json.loads(response);           print(""Py"");           return json.dumps(self.response,encoding=""utf-8"",indent=2); </code></pre>  <p><strong>The output of the above code will be as follows:</strong> 1 2 4 5 Py 3</p>  <p>I want the output to be sequential like line by line and should simultaneously call and get the value from Python function also, like this: 1 2 Py 3 4 5</p>"	42709855	"<p>NodeJS favors continuation passing style of programming. When you call invoke on the client, you are scheduling a function to run later. Whenever the RPC call succeeded or failed this function will be called with the result and possible error. From then you can continue work and schedule more function.</p>"
42726934	ajax post data from javascript to python	javascript|python|ajax	2017-03-10 20:11:44.253000 UTC	"<p>Im trying to send a dict from javascript code to a python script via ajax through post. Heres the js:</p>  <pre><code>    function foo(){       context = {          'var1': val1,          'var2': val2        }        $.ajax({          url:'/pyfoo'          type: 'POST'          data: context,          success: function(){             ...          }        }); </code></pre>  <p>I need to pull var1 and var2 from context in python but it doesn't come through. Any help would be appreciated.  </p>  <p>I've tried a few thing in python:</p>  <pre><code>def pyfoo():                                                                    data = json.loads('context')   </code></pre>"	42728290	"<p>From <a href=""http://www.programcreek.com/python/example/60711/flask.request.data"" rel=""nofollow noreferrer"">flask examples on their site</a> : </p>  <pre><code>def pyfoo() :      try:         data = json.loads(request.data)         print(data)         return ""Success"" 200     except ValueError:         error('Unable to parse JSON data from request.')         return ""Error"" 400 </code></pre>"
42736018	Pythonize Javascript for loop	javascript|python	2017-03-11 13:51:19.060000 UTC	"<p>I am working on my bachelors work, and I am building something like interpreter. I want to convert the Javascript code into Python. I came to a point that I want to convert For Loop into Python which looks like this:</p>  <pre><code>for(var x = 0; x &lt; some_length; x++) { } </code></pre>  <p>in python it would look like this:</p>  <pre><code>for x in range(0, some_length): </code></pre>  <p>the problem is I want to cover all the cases that can happen, like for example going backwards like this:</p>  <pre><code>for(var x = some_length - 1; x &gt;= 0; x--) { } </code></pre>  <p>can somebody help me to write a function that will transpile this into python?</p>  <p><strong>IMPORTANT EDIT!!!</strong></p>  <p>as input to the function that will transpile the for loop into python are:</p>  <pre><code> function pythonize(firstAction, condition, action) </code></pre>  <p>where</p>  <pre><code>firstAction = ""x = 0"",  condition = ""x &lt; some_length""  action = ""x++"" </code></pre>"	42736055	"<p>It will be like, you can check <a href=""https://docs.python.org/2/library/functions.html#range"" rel=""nofollow noreferrer"">range</a> function for more of its detailed usage:</p>  <pre><code>for x in range(some_length - 1, -1, -1): </code></pre>  <p>Notice I change the step from <code>x++</code> to decrement, otherwise the for loop won't terminate.</p>"
42736018	Pythonize Javascript for loop	javascript|python	2017-03-11 13:51:19.060000 UTC	"<p>I am working on my bachelors work, and I am building something like interpreter. I want to convert the Javascript code into Python. I came to a point that I want to convert For Loop into Python which looks like this:</p>  <pre><code>for(var x = 0; x &lt; some_length; x++) { } </code></pre>  <p>in python it would look like this:</p>  <pre><code>for x in range(0, some_length): </code></pre>  <p>the problem is I want to cover all the cases that can happen, like for example going backwards like this:</p>  <pre><code>for(var x = some_length - 1; x &gt;= 0; x--) { } </code></pre>  <p>can somebody help me to write a function that will transpile this into python?</p>  <p><strong>IMPORTANT EDIT!!!</strong></p>  <p>as input to the function that will transpile the for loop into python are:</p>  <pre><code> function pythonize(firstAction, condition, action) </code></pre>  <p>where</p>  <pre><code>firstAction = ""x = 0"",  condition = ""x &lt; some_length""  action = ""x++"" </code></pre>"	42736057	"<p><code>range</code> accepts <code>start, end, step</code>, so you can do </p>  <pre><code>for x in range(some_length-1, -1, -1) </code></pre>  <p>Another option is</p>  <pre><code>for x in reversed(range(some_length)) </code></pre>  <p>note: I assume you mean <code>x--</code> in your second example</p>"
42736018	Pythonize Javascript for loop	javascript|python	2017-03-11 13:51:19.060000 UTC	"<p>I am working on my bachelors work, and I am building something like interpreter. I want to convert the Javascript code into Python. I came to a point that I want to convert For Loop into Python which looks like this:</p>  <pre><code>for(var x = 0; x &lt; some_length; x++) { } </code></pre>  <p>in python it would look like this:</p>  <pre><code>for x in range(0, some_length): </code></pre>  <p>the problem is I want to cover all the cases that can happen, like for example going backwards like this:</p>  <pre><code>for(var x = some_length - 1; x &gt;= 0; x--) { } </code></pre>  <p>can somebody help me to write a function that will transpile this into python?</p>  <p><strong>IMPORTANT EDIT!!!</strong></p>  <p>as input to the function that will transpile the for loop into python are:</p>  <pre><code> function pythonize(firstAction, condition, action) </code></pre>  <p>where</p>  <pre><code>firstAction = ""x = 0"",  condition = ""x &lt; some_length""  action = ""x++"" </code></pre>"	42741212	"<p>I've created this long function to transpile javascript for loop into python for loop:</p>  <pre><code>function pyt(c) {   var cc = c.split('(')[1];   cc = cc.substr(0,cc.length-1);   pp = cc.split(';');   var r1 = /[A-Za-z\$\_]{1}[A-Za-z0-9\_]* ?= ?(.*)/.exec(pp[0])[1];   var r2 = '';   if(pp[1].indexOf('&lt;') &gt; -1) {     r2 = /[A-Za-z\$\_]{1}[A-Za-z0-9\_]* ?&lt;=? ?(.*)/.exec(pp[1])[1]   } else if(pp[1].indexOf('&gt;') &gt; -1) {     r2 = /[A-Za-z\$\_]{1}[A-Za-z0-9\_]* ?&gt;=? ?(.*)/.exec(pp[1])[1]   }   var delta = 0;   if(pp[1].indexOf('&gt;=')) {     delta = -1;     }   if(pp[1].indexOf('&lt;=')) {     delta = 1;   }   var e2 = 0;   if(!isNaN(r2)) {      e2 = Number(r2) + delta;   } else {     if(delta !== 0) {         e2 = r2 + (delta &gt; 0 ? '+' : '-') + delta;     } else {         e2 = r2;     }   }    var r3 = '';   if(/[A-Za-z\$\_]{1}[A-Za-z0-9\_]*\+\+/.test(pp[2])) {     r3 = '1';   } else if(/[A-Za-z\$\_]{1}[A-Za-z0-9\_]*\-\-/.test(pp[2])) {     r3 = '-1';   } else {     if(pp[2].indexOf('+=') &gt; -1) {         r3 = /[A-Za-z\$\_]{1}[A-Za-z0-9\_]* ?\+= ?(.*)/.exec(pp[2])[1];     } else if(pp[2].indexOf('-=') &gt; -1) {         r3 = /[A-Za-z\$\_]{1}[A-Za-z0-9\_]* ?\-= ?(.*)/.exec(pp[2])[1];     } else {         if(/([A-Za-z\$\_]{1}[A-Za-z0-9\_]*) ?= ?\1 ?\+ ?(.*)/.test(pp[2])) {             r3 = /([A-Za-z\$\_]{1}[A-Za-z0-9\_]*) ?= ?\1 ?\+ ?(.*)/.exec(pp[2])[2];       } else {         r3 = /([A-Za-z\$\_]{1}[A-Za-z0-9\_]*) ?= ?\1 ?\- ?(.*)/.exec(pp[2])[2];       }     }   }   p = 'for i in range(' + r1 + ', ' + e2 + ', ' + r3 + ')';   return p; }  var c = ""for(i = 30 + y;i&gt;=10 - 1; i = i + 0.1)""; console.log(pyt(c)); </code></pre>  <p><a href=""https://jsfiddle.net/x7uhxbua/12/"" rel=""nofollow noreferrer"">https://jsfiddle.net/x7uhxbua/12/</a></p>  <p>It's basically using regex to do the magic. It covers most of the cases, but not all.</p>"
42760767	Python Selenium: How to navigate Javascript based navigation	javascript|python|selenium	2017-03-13 09:56:57.557000 UTC	"<p>So the page in question is <a href=""http://www.leparking.fr/voiture-occasion/Porsche--targa-g.html#!/voiture-occasion/Porsche--targa-g.html%3Fslider_millesime%3D1940%7C1985"" rel=""nofollow noreferrer"">here</a>, I want to navigate pagination having following markup:</p> <pre><code> &lt;li class=&quot;btn-next&quot;&gt; &lt;a href=&quot;javascript:ctrl.set_pageReload(2)&quot;&gt;Suivant&lt;/a&gt;&lt;/li&gt; </code></pre> <p>If you notice, JS method is being called here. So far I have done this:</p> <pre><code>from selenium import webdriver from selenium.webdriver.common.by import By from selenium.webdriver.support.ui import WebDriverWait from selenium.webdriver.support import expected_conditions as EC   driver = None driver = webdriver.Firefox() wait = WebDriverWait(driver, 30)   def fetch(url):     driver.get(         'http://www.leparking.fr/voiture-occasion/Porsche--targa-g.html#!/voiture-occasion/Porsche--targa-g.html%3Fslider_millesime%3D1940%7C1985')      elem_more = wait.until(EC.element_to_be_clickable((By.LINK_TEXT, &quot;Suivant&quot;)))     elem_more.click()   fetch(None) </code></pre> <p>It does hover the element but does not navigate on click. What should I do?</p> <p>Thanks</p>"	42760907	"<p>I sorted it out by using <code>execute_script</code> method:</p>  <pre><code>elem_more = wait.until(EC.element_to_be_clickable((By.LINK_TEXT, ""Suivant""))) driver.execute_script(""arguments[0].click();"", elem_more) </code></pre>"
42768471	Python Scraping from JavaScript table on PGA Website	javascript|python|beautifulsoup	2017-03-13 16:16:40.057000 UTC	"<p>I'm just getting into Python and have been working mostly with BeautifulSoup to scrape sports data from the web.  I have run into an issue with a table on the PGA website where it is generated by javascript, was hoping someone could walk me through the process in the context the specific website I am working with.  Here is a sample link ""<a href=""http://www.pgatour.com/content/pgatour/players/player.29745.tyler-aldridge.html/statistics"" rel=""nofollow noreferrer"">http://www.pgatour.com/content/pgatour/players/player.29745.tyler-aldridge.html/statistics</a>"" the tables are all of the player statistics tables. Thanks!</p>"	42768586	"<p>When a web page uses JavaScript to build or get it's content, you are out of luck with tools that just download HTML from the web. You need something which is mimicking a web browser more thoroughly, and interpreting JavaScript. In other words, a so-called <strong>headless browser</strong>. There are some out there, even some with good Python integration. You may want to start your journey by searching for <code>PhantomJS</code> or <code>Selenium</code>. Once you've chosen the tool of your choice, you can let the browser do it's retrieving and rendering work and then browse the DOM in much a similar way than you did with <code>BeautifulSoup</code> on static pages.</p>  <p>I would, however, also a look at the Network tab of your browser's debugger first. Sometimes you can identify the <code>GET</code> which is actually getting the table data from the server. In this case it might be easier to <code>GET</code> the data yourself (e.g. via <code>requests</code>) than to employ complex technology to do it for you. It is also very likely that you get the information you want in plain <code>JSON</code> which will make it even simpler to use. The PGA site makes <code>GET</code>s hundreds of resources to build, but it will still be a good trade to browse thru them.</p>"
42768471	Python Scraping from JavaScript table on PGA Website	javascript|python|beautifulsoup	2017-03-13 16:16:40.057000 UTC	"<p>I'm just getting into Python and have been working mostly with BeautifulSoup to scrape sports data from the web.  I have run into an issue with a table on the PGA website where it is generated by javascript, was hoping someone could walk me through the process in the context the specific website I am working with.  Here is a sample link ""<a href=""http://www.pgatour.com/content/pgatour/players/player.29745.tyler-aldridge.html/statistics"" rel=""nofollow noreferrer"">http://www.pgatour.com/content/pgatour/players/player.29745.tyler-aldridge.html/statistics</a>"" the tables are all of the player statistics tables. Thanks!</p>"	42913330	"<p>You need JavaScript Engine to parse and run JavaScript code inside the page. There are a bunch of headless browsers that can help you</p>  <p><a href=""http://code.google.com/p/spynner/"" rel=""nofollow noreferrer"">http://code.google.com/p/spynner/</a></p>  <p><a href=""http://phantomjs.org/"" rel=""nofollow noreferrer"">http://phantomjs.org/</a></p>  <p><a href=""http://zombie.labnotes.org/"" rel=""nofollow noreferrer"">http://zombie.labnotes.org/</a></p>  <p><a href=""http://github.com/ryanpetrello/python-zombie"" rel=""nofollow noreferrer"">http://github.com/ryanpetrello/python-zombie</a></p>  <p><a href=""http://jeanphix.me/Ghost.py/"" rel=""nofollow noreferrer"">http://jeanphix.me/Ghost.py/</a></p>  <p><a href=""http://webscraping.com/blog/Scraping-JavaScript-webpages-with-webkit/"" rel=""nofollow noreferrer"">http://webscraping.com/blog/Scraping-JavaScript-webpages-with-webkit/</a></p>  <p>Also, consider using this:</p>  <p><a href=""http://www.seleniumhq.org/docs/03_webdriver.jsp"" rel=""nofollow noreferrer"">http://www.seleniumhq.org/docs/03_webdriver.jsp</a></p>  <p>Selenium-WebDriver makes direct calls to the browser using each browser’s native support for automation. How these direct calls are made, and the features they support depends on the browser you are using. Information on each ‘browser driver’ is provided later in this chapter.</p>  <p>For those familiar with Selenium-RC, this is quite different from what you are used to. Selenium-RC worked the same way for each supported browser. It ‘injected’ javascript functions into the browser when the browser was loaded and then used its javascript to drive the AUT within the browser. WebDriver does not use this technique. Again, it drives the browser directly using the browser’s built in support for automation.</p>"
42779753	ALternative method for python urllib or requests in javascript	javascript|python|url	2017-03-14 07:11:15.933000 UTC	<p>I am using python urllib to get an image from an URL.</p>  <pre><code>img=Image.open(urllib2.urlopen(URL)) </code></pre>  <p>What is the alternative method to do this in plain Javascript?</p>	42781053	"<p>You can use an ajax call:</p>  <p><strong>Edit because of comment:</strong></p>  <pre><code>var img = new Image();  $('#your-image-container').click(function() {     $.ajax({         url: URL,         type: ""GET"",         async: True,         success: function(in_img) {             img.src = in_img;             $(this).append(img);         },     }) } </code></pre>  <p>That is a direct alternative.<br> You should also consider that in javascript, you can simply do:</p>  <pre><code> $(function(){        $(""#your-image-container"").attr(""src"", URL)   });​ </code></pre>  <p>and you will have the image loaded in the #your-image-container!</p>"
42801569	Using javascript to pass web forms values to python script	javascript|python|ssl|x509certificate	2017-03-15 05:13:08.727000 UTC	"<p><strong>What I have done:</strong></p>  <p>1- Created a web form using HTML and javascript to create a SSL certificate that can create dynamic certificates.</p>  <p>2- Successfully parsed through an existing certificate and passed the required values to the web form.</p>  <p>3- I am using the HTML+javascript inside the python script itself and appending the parsed certificate values to the javascript before displaying it.</p>  <p><strong>What I need to do:</strong></p>  <p>1-Take values from the web form, assign those to particular variables and pass those variables to a python script, that can create a CSR using those and sign it using a dummy key. So, basically, I want to call a python script on a click of a button that can take web form values and create a certificate.</p>  <p>P.S. PHP isn't an option for me, as the server I am working on doesn't support it. Can someone guide me in the right direction as for how to proceed? Any examples or study material? Or should I start working with Flask?</p>"	42801616	"<p>Django is a good option to create applications using python. You can start an application, and embed your code in template and write a view to handle requests and responses. </p>"
42821047	How to pass a list of strings from flask python main function to javascript in html?	javascript|python|html|flask|mustache	2017-03-15 21:30:07.167000 UTC	"<p>I am building a web site using flask. In the app.py file, I calculated out some stats that are passed to the html page. </p>  <pre><code>@app.route('/') def index():     values = [10, 11, 7, 15, 19, 5, 7.5, 10.9]     days= [""12/18/18"",""12/25/18"",""1/1/19"",""1/8/19"",""1/15/19"",""1/22/19"",""1/29/19"",""2/5/19""]  return render_template('index.html', days = days, values=values) </code></pre>  <p>The javascript in the index.html is as follows</p>  <pre><code>var ctx = document.getElementById(""lineChart""); var lineChart = new Chart(ctx, {   type: 'line',   data: {     labels: {{days}}     datasets: {       label: ""All users"",       backgroundColor: ""rgba(30,144,255, 0.31)"",       borderColor: ""rgba(30,144,255, 0.7)"",       pointBorderColor: ""rgba(30,144,255, 0.7)"",       pointBackgroundColor: ""rgba(30,144,255, 0.7)"",       pointHoverBackgroundColor: ""#fff"",       pointHoverBorderColor: ""rgba(220,220,220,1)"",       pointBorderWidth: 1,       data: {{values}}     }   }, }); </code></pre>  <p>I tested two options in the javascript:</p>  <ol> <li><p>Not working (can't generate the chart plot)</p>  <pre><code>labels: {{days}} data: {{values}} </code></pre></li> <li><p>Working if I explicitly give list of strings</p>  <pre><code>labels: [""12/18/18"",""12/25/18"",""1/1/19"",""1/8/19"",""1/15/19"",""1/22/19"",""1/29/19"",""2/5/19""] data: {{values}}     </code></pre></li> </ol>  <p>It seems that passing the numeric arrays (values in this example) is fine but passing the list of strings will cause trouble. </p>  <p>Do you have any suggestions to address the issue?<br> Much appreciated!</p>"	70844012	<p>Put the jinja values in double quotes. That works. Write <code>&quot;{{values}}&quot;</code> instead of <code>{{values}}</code>.</p>
42825683	"In google bigquery, how to use javascript UDF using google python client"	python|google-bigquery|bigquery-standard-sql	2017-03-16 05:03:58.567000 UTC	"<p>I am writing a query in bigquery using standard SQL and javascript UDF. I am able to implement this using WebUI and bigquery command line tool but my requirement is to make this query using google python client. Not able to achieve this. Please can someone help.</p>  <pre><code>from google.cloud import bigquery bigquery_client = bigquery.Client() client = bigquery.Client() query_results = client.run_sync_query(""""""  CREATE TEMPORARY FUNCTION CategoriesToNumerical(a array&lt;STRING&gt;,b    array&lt;STRING&gt;) RETURNS string LANGUAGE js AS """"""  var values = {};   var counter = 0;   for(i=0;i&lt;a.length;i++)   { var temp;     temp = a[i];     a[i] = counter;     values[temp] = counter;     counter ++;   }  for(i=0;i&lt;b.length;i++)   {  for(var key in values)   {    if(b[i] == key)    {     b[i] = values[key];    }   } }  return b; """""";  SELECT CategoriesToNumerical(ARRAY(SELECT DISTINCT ProspectStage from   lsq.lsq_dest),ARRAY(SELECT ProspectStage from lsq.lsq_dest)) as prospectstageds  ;"""""")  query_results.use_legacy_sql = False  query_results.run()  page_token = None  while True:     rows1, total_rows, page_token = query_results.fetch_data(         max_results=100,         page_token=page_token)     for row1 in rows1:         print ""row"",row1     if not page_token:         break </code></pre>  <p>This is not working for me.Please can someone help with how should I be going about it.</p>"	42829610	"<p>The problem seems to be you have here 2 sets of conflicting """""". Replace one of these sets for a triple ''', and the code should work.</p>  <p>So instead of</p>  <pre><code>query_results = client.run_sync_query(""""""  CREATE TEMPORARY FUNCTION CategoriesToNumerical(a array&lt;STRING&gt;,b    array&lt;STRING&gt;) RETURNS string LANGUAGE js AS """"""   javacript code """""" SELECT * FROM  """""" </code></pre>  <p>write</p>  <pre><code>query_results = client.run_sync_query('''  CREATE TEMPORARY FUNCTION CategoriesToNumerical(a array&lt;STRING&gt;,b    array&lt;STRING&gt;) RETURNS string LANGUAGE js AS """"""   javacript code """""" SELECT * FROM  ''' </code></pre>"
42842011	Python Scrapy: follow link and extract data from javascript table	javascript|python|http|web-scraping|scrapy-spider	2017-03-16 18:22:41.940000 UTC	"<p>I'm trying to get some data from malaysian government bond website (<a href=""http://bondinfo.bnm.gov.my/portal/server.pt"" rel=""nofollow noreferrer"">http://bondinfo.bnm.gov.my/portal/server.pt</a> ).</p>  <p>Need to go to:</p>  <p>home page > market activities >historical>historical securities volume </p>  <p>This opens up a new page with a table. click on MGS from that table and then apply filter for current month and scrap all the data from the filtered out search.</p>  <p>Would be glad if someone could help me understand how this can be done.</p>"	42848371	"<p>The page already has an ""export to excel"" button on it for free - you don't need to scrape it <a href=""https://i.stack.imgur.com/UvsFy.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/UvsFy.png"" alt=""enter image description here""></a></p>"
42845518	Cannot access the parameters passed from python render_template (jinja2 / webapp2) on html javascript	javascript|python-2.7|jinja2|webapp2	2017-03-16 21:57:45.600000 UTC	"<p>I am trying to send parameters to a URL that was generated in my server (python) code. This URL will be sent to a user via email. I am using the Google App Engine to host my entire application.</p>  <pre><code>class VerificationHandler(basehandler.BaseHandler):     def get(self, *args, **kwargs):          params = {             'user': user,             'token': signup_token             }         self.render_template('some_url_to_click.html', params) </code></pre>  <p>In my some_url_to_click.html, I have the following code. The framework that I am using is Jinja2. </p>  <pre><code>{% extends ""main.html"" %}  {% block maincontent %}   &lt;div id=""text_display_div""&gt;      &lt;br&gt;&lt;/br&gt;     &lt;a&gt;Enter Text.&lt;/a&gt;  &lt;/div&gt;   &lt;script type=""text/javascript""&gt; $(document).ready(function(){     var param_from_backend = '{{ params}}'     alert (param_from_backend.user)  });  &lt;/script&gt; </code></pre>  <p>I am not able to access the params variable in my javascript. I get ""undefined"" error on param_from_backend.user</p>"	42895936	"<p>You have to access each variable individually in JS. This will solve your problem.</p>  <pre><code>&lt;script type=""text/javascript""&gt; $(document).ready(function(){     var user = '{{ params.user }}';     var token= '{{ params.signup_token}}';     alert (user + "" "" + token);  });     &lt;/script&gt; </code></pre>"
42847867	Python: Javascript rendered webpage not parsing	javascript|parsing|web-scraping|web-crawler|dryscrape	2017-03-17 01:50:32.497000 UTC	"<p>I want to parse the information in the following <a href=""https://www.zulutrade.com/trader/314062/trading"" rel=""nofollow noreferrer"">url</a>. I want to parse the Name of the trade, the strategy description and the transactions in the ""Trading History"" and ""Open Positions"". When I parse the page, I do not get this data. I am new to parsing javascript rendered webpages so I would appreciate some explanation why my code below isn't working.</p>  <pre><code>import bs4 as bs import urllib import dryscrape import sys import time  url = 'https://www.zulutrade.com/trader/314062/trading'  sess = dryscrape.Session() sess.visit(url) time.sleep(10) sauce = sess.body() soup = bs.BeautifulSoup(sauce, 'lxml') </code></pre>  <p>Thanks!</p>"	44606166	"<p>Your link in the code doesn't allow you to get anything cause the original url you should play with is the one I'm pasting below .The one you tried to work with automatically gets redirected to the one I mentioned here.</p>  <pre><code>https://www.zulutrade.com/zulutrade-client/traders/api/providers/314062/tradeHistory? </code></pre>  <p>Scraping json data out of the table from that page is as follows:</p>  <pre><code>import requests r = requests.get('https://www.zulutrade.com/zulutrade-client/traders/api/providers/314062/tradeHistory?') j = r.json() items = j['content'] for item in items:     print(item['currency'],item['pips'],item['tradeType'],item['transactionCurrency'],item['id']) </code></pre>"
42863931	"ASCII return character within Javascript within Python shows up as a line feed and ""unterminated string error"""	javascript|python|escaping|ascii	2017-03-17 17:38:29.400000 UTC	"<p>I have a Python script which generates an HTLM page that contains Javascript.</p>  <p>In Python, I define a string that contains the Javascript.</p>  <p>The Javascript needs to define a Return character.</p>  <p>I tried 3 different ways:</p>  <pre><code>ScriptHTML = """""" &lt;script type=""text/javascript""&gt;     var RetChar = '\x0D';     var RetChar2 = '\r';     var RetChar3 = '\\\r';      var MyString1 = 'ABC' + RetChar;     var MyString2 = '123' + RetChar;  &lt;/script&gt; """"""  def Main():     print ""Content-type: text/html\n""     print ScriptHTML </code></pre>  <p>When I look at the generated HTML, I see that the return has been interpreted to mean: put a line feed between the quotes.</p>  <pre><code>var RetChar = ' ' var RetChar2 = ' ' var RetChar3 = ' ' </code></pre>  <p>Which gets me the Javascript error: </p>  <pre><code>""SyntaxError: unterminated string literal"" </code></pre>  <p>How can I solve this? </p>  <p>I also need a solution for a TAB character, please.</p>"	42864197	"<p>You should use a raw string literal which keeps the escape codes from being processed by Python.</p>  <pre><code>ScriptHTML = r"""""" &lt;script type=""text/javascript""&gt;     var RetChar = '\r';     var MyString1 = 'ABC' + RetChar;     var MyString2 = '123' + RetChar;  &lt;/script&gt; """"""  def Main():     print ""Content-type: text/html\n""     print ScriptHTML </code></pre>  <p>You can also easily add a tab character by putting <code>var TabChar = '\t'</code> after the definition of <code>RetChar</code>.</p>"
42891809	Flaskr url_for with javascript variable as parameters is not working to python	javascript|python-3.x|flask|url-for	2017-03-19 20:22:46.023000 UTC	"<p>I'm trying to use flask with url_for. The problem is that when I try to launch an alert with the value of the javascript variable everything seems ok, but when I try to launch a alert with the url_for the content of the variable is not printed. What I'm doing wrong? or What is missing in my code?</p>  <p>How can I pass a JavaScript variable into the url_for function?</p>  <p>html code:</p>  <pre><code>&lt;a class=""dissable_user_btn"" data-user_id=""{{user.id}}"" href=""#"" title=""Change Status""&gt;&lt;i class=""fa fa-plug""&gt;&lt;/i&gt; &lt;/a&gt; </code></pre>  <p>JS Code:</p>  <pre><code>&lt;script type=""text/javascript""&gt;     $(document).ready(function(){        $('.dissable_user_btn').click(function( event ) {           var user_id = $(this).data(""user_id"")           alert(user_id) //everything ok           alert ('{{url_for('.dissable', _id=user_id)}}'); //dont print the valur of user_id &lt;/script&gt; </code></pre>"	42893334	"<p><strong>Short answer: you can't.</strong> Flask &amp; Jinja2 render the template on the server side <strong>(e.g. Flask is translating all of the <code>{{ }}</code> stuff before it sends the HTML to the web browser).</strong></p>  <p>For a URL like this where you're including a variable as part of the path you'd need to build this manually in javascript. If this is an XHR endpoint  I'd recommend using GET/POST to transfer the values to the server as a better best practice than constructing the URL this way. <strong>This way you can use Jinja:</strong></p>  <pre><code>$(document).ready(function(){     var baseUrl = ""{{ url_for('disable') }}"";      $('.dissable_user_btn').click(function(event) {         var user_id = $(this).data(""user_id"");          // first part = url to send data         // second part = info to send as query string (url?user=user_id)         // third parameter = function to handle response from server         $.getJSON(baseUrl, {user: user_id}, function(response) {             console.log(response);         });     }); }); </code></pre>"
42891809	Flaskr url_for with javascript variable as parameters is not working to python	javascript|python-3.x|flask|url-for	2017-03-19 20:22:46.023000 UTC	"<p>I'm trying to use flask with url_for. The problem is that when I try to launch an alert with the value of the javascript variable everything seems ok, but when I try to launch a alert with the url_for the content of the variable is not printed. What I'm doing wrong? or What is missing in my code?</p>  <p>How can I pass a JavaScript variable into the url_for function?</p>  <p>html code:</p>  <pre><code>&lt;a class=""dissable_user_btn"" data-user_id=""{{user.id}}"" href=""#"" title=""Change Status""&gt;&lt;i class=""fa fa-plug""&gt;&lt;/i&gt; &lt;/a&gt; </code></pre>  <p>JS Code:</p>  <pre><code>&lt;script type=""text/javascript""&gt;     $(document).ready(function(){        $('.dissable_user_btn').click(function( event ) {           var user_id = $(this).data(""user_id"")           alert(user_id) //everything ok           alert ('{{url_for('.dissable', _id=user_id)}}'); //dont print the valur of user_id &lt;/script&gt; </code></pre>"	60444321	"<p>I found another solution for this. My problem started when I needed to pass a variable with space.</p>  <p>First I created a function to remove trailing and leading spaces</p>  <pre><code>function strip(str) { return str.replace(/^\s+|\s+$/g, '');} </code></pre>  <p>After that, I used the function and encoded the URL </p>  <pre><code>&lt;script type=""text/javascript""&gt;  $(document).ready(function(){    $('.dissable_user_btn').click(function( event ) {       var user_id = $(this).data(""user_id"")       alert(user_id)        user_id    =  strip(user_id).replace("" "",""%20"");       alert ('{{url_for('.dissable', _id='user_id')}}.replace('user_id',user_id);  &lt;/script&gt; </code></pre>  <p>It worked pretty nice for me! </p>  <p>This is how I applied to my problem</p>  <pre><code>&lt;script&gt;    function strip(str) {        return str.replace(/^\s+|\s+$/g, '');}     $(document).ready(function() {     $('#exportcountry').click(function() {       var elemento = document.getElementById(""countryexportbtn"");       var country  = strip(elemento.textContent).replace("" "",""%20"");       $('#exportevent').load(""{{ url_for('get_events',country = 'pais')  }}"".replace('pais',country));      });    }); &lt;/script&gt; </code></pre>"
42897686	"Django Python, javascript will not send requests - very simple code"	javascript|python|django|url|cloud	2017-03-20 07:09:29.300000 UTC	"<p>I've been trying to send a variable through JS in HTML using my views url.</p>  <p>I have a super super simple API which looks like this (views.py). As you can see it literally takes anything in and slaps it into the updated field. So if you were to visit that page it shows the last thing posted.</p>  <pre><code>def store(request):    req = str(request)    l=len(req)    if l &gt; 28:       Storage.objects.last().delete()       q = Storage(data=req[26:l-2])       q.save()    link = Storage.objects.last()    return render_to_response('crophop/imgur.html',{'link':link}) </code></pre>  <p>I have then done this to pass the number 100, for the webpage to store it.</p>  <pre><code>&lt;script&gt;var URL = ""{% url 'store' %}""&lt;/script&gt;  &lt;html stuff....&gt;  &lt;script&gt;    $.get(URL, '100', function(response){        if(response === 'success'){ alert('Yay!'); }        else{ alert('Error! :('); }    }; &lt;/script&gt; </code></pre>  <p>I've tried so many versions of this, I don't know why js wont comply. I know I can't access external URLs easily so I thought this was the best way. I've seen many posts on this and tried as many as I found but I'm still stuck...</p>  <p>If anyone has any ideas why this doesn't work I'd be grateful. It seems like it's so basic it should work, it might be something to do with pythonanywhere.com? </p>  <p>Thanks,</p>  <p>Fred</p>"	42902833	<p>5 open brackets.</p>  <p>4 close brackets.</p>  <p>1 thing missed.</p>  <p>Lots of wasted time.</p>  <p>:(</p>
42905362	Python Selenium Javascript Login	javascript|python|selenium	2017-03-20 13:50:47.473000 UTC	"<p>I am trying to login into this website whit selenium and Python: </p>  <p><a href=""https://itunesconnect.apple.com/login?targetUrl=~2FWebObjects~2FiTunesConnect.woa~2Fra~2Fng~2Fapp~2F719525810~2Faddons"" rel=""nofollow noreferrer"">https://itunesconnect.apple.com/login?targetUrl=~2FWebObjects~2FiTunesConnect.woa~2Fra~2Fng~2Fapp~2F719525810~2Faddons</a></p>  <p>Unfortunately, the code source doesn't show the Id=apple_Id that I need to send my login information but when I inspect the page I see it.</p>  <p>So Page Source looks something like this: <a href=""https://i.stack.imgur.com/O5eU5.jpg"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/O5eU5.jpg"" alt=""PageSource""></a></p>  <p>Bu what i need is in the inspect window: <a href=""https://i.stack.imgur.com/vNUcC.jpg"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/vNUcC.jpg"" alt=""InspectWindow""></a></p>  <p>I think its because its javascript rendered or something but I can't figure how to do it!</p>  <p>thanks</p>"	42906232	"<p>Required <code>input</code> field located inside an <code>iframe</code>, so to be able to handle it you should switch to <code>iframe</code> first:</p>  <pre><code>from selenium.webdriver.common.by import By from selenium.webdriver.support.ui import WebDriverWait as wait from selenium.webdriver.support import expected_conditions as EC   wait(driver, 10).until(EC.frame_to_be_available_and_switch_to_it((By.ID, ""aid-auth-widget-iFrame""))) driver.find_element_by_id(""appleId"").send_keys('text') </code></pre>"
42928283	QPython3 problems with Javascript in HTML GUI	javascript|android|qpython3	2017-03-21 13:16:19.690000 UTC	"<p>QPython3, Android 6.0; I guess JS cann't instance var droid = new Android(); Any hints to solve the problem?</p>  <p>Python Code (the same in both cases!):</p>  <pre><code>import android  droid=android.Android()  droid.webViewShow('file:///storage/emulated/0/qpython/scripts3/test10_le_HTMLGUI_01.html')  while True:     result=droid.eventWaitFor('sag').result     droid.ttsSpeak(result['data']) </code></pre>  <p>HTML-Code: test10_le_HTMLGUI_01.html (Case 1):</p>  <pre><code>&lt;html&gt;   &lt;head&gt;     &lt;title&gt;Text To Speech&lt;/title&gt;     &lt;script&gt;       var n = prompt(""Hello JavaScript"","""");       var droid = new Android();       var speak = function() {          var n = prompt(""Hello JavaScript"","""");         droid.eventPost(""sag"", document.getElementById(""sag"").value, 1);       }     &lt;/script&gt;   &lt;/head&gt;   &lt;body&gt;     &lt;form onsubmit=""speak(); return false;""&gt;       &lt;label for=""sag""&gt;What is your message?&lt;/label&gt;       &lt;input type=""text"" id=""sag"" /&gt;       &lt;input type=""submit"" value=""Speak"" /&gt;     &lt;/form&gt;   &lt;/body&gt; &lt;/html&gt; </code></pre>  <p>HTML-Code (Case 2):</p>  <pre><code>&lt;html&gt;   &lt;head&gt;     &lt;title&gt;Text To Speech&lt;/title&gt;     &lt;script&gt;       var droid = new Android();       var n = prompt(""Hello JavaScript"","""");       var speak = function() {          var n = prompt(""Hello JavaScript"","""");         droid.eventPost(""sag"", document.getElementById(""sag"").value, 1);       }     &lt;/script&gt;   &lt;/head&gt;   &lt;body&gt;     &lt;form onsubmit=""speak(); return false;""&gt;       &lt;label for=""sag""&gt;What is your message?&lt;/label&gt;       &lt;input type=""text"" id=""sag"" /&gt;       &lt;input type=""submit"" value=""Speak"" /&gt;     &lt;/form&gt;   &lt;/body&gt; &lt;/html&gt; </code></pre>  <p>While in case 1 the prompt(""Hello JavaScript"",""""); is executed it is not in case 2!</p>  <p>QPython3 (Android 6) SL4A eventPost() and eventWaitFor() works fine on the following example (for add. info refer to  <a href=""http://www.mithril.com.au/android/doc/"" rel=""nofollow noreferrer"">http://www.mithril.com.au/android/doc/</a>):</p>  <pre><code>import android, time droid=android.Android() t = 'Geschafft!' print('debug 1') droid.eventPost('Event1', t, 1) print('debug 2') print('debug 3') result=droid.eventWaitFor('Event1').result droid.ttsSpeak(result['data']) print('debug 4') print(result['data']) </code></pre>  <p>Proof: If you comment out the line droid.eventPost('Event1', t, 1) then eventWaitFor() will block forever!</p>  <p>Maybe we 've a similar Problem in <a href=""https://stackoverflow.com/questions/38253083/qpython3-webviewshow-script-doesnt-receiving-data/42912464#42912464"">QPython3 webViewShow - Script doesn&#39;t receiving data</a>  and in <a href=""https://stackoverflow.com/questions/36478310/qpython-webview-javascript-android-object"">https://stackoverflow.com/questions/36478310/qpython-webview-javascript-android-object</a> </p>  <p>Regards Gustav (2017-03-21)</p>"	42961665	"<p>Use bottle() instead of JavaScript. It's already integrated in QPython3 and provides solutions for pretty the same tasks. Find a tutorial for bottle() at <a href=""https://bottlepy.org/docs/dev/bottle-docs.pdf"" rel=""nofollow noreferrer"">https://bottlepy.org/docs/dev/bottle-docs.pdf</a></p>  <p>Regards Gustav</p>"
42928283	QPython3 problems with Javascript in HTML GUI	javascript|android|qpython3	2017-03-21 13:16:19.690000 UTC	"<p>QPython3, Android 6.0; I guess JS cann't instance var droid = new Android(); Any hints to solve the problem?</p>  <p>Python Code (the same in both cases!):</p>  <pre><code>import android  droid=android.Android()  droid.webViewShow('file:///storage/emulated/0/qpython/scripts3/test10_le_HTMLGUI_01.html')  while True:     result=droid.eventWaitFor('sag').result     droid.ttsSpeak(result['data']) </code></pre>  <p>HTML-Code: test10_le_HTMLGUI_01.html (Case 1):</p>  <pre><code>&lt;html&gt;   &lt;head&gt;     &lt;title&gt;Text To Speech&lt;/title&gt;     &lt;script&gt;       var n = prompt(""Hello JavaScript"","""");       var droid = new Android();       var speak = function() {          var n = prompt(""Hello JavaScript"","""");         droid.eventPost(""sag"", document.getElementById(""sag"").value, 1);       }     &lt;/script&gt;   &lt;/head&gt;   &lt;body&gt;     &lt;form onsubmit=""speak(); return false;""&gt;       &lt;label for=""sag""&gt;What is your message?&lt;/label&gt;       &lt;input type=""text"" id=""sag"" /&gt;       &lt;input type=""submit"" value=""Speak"" /&gt;     &lt;/form&gt;   &lt;/body&gt; &lt;/html&gt; </code></pre>  <p>HTML-Code (Case 2):</p>  <pre><code>&lt;html&gt;   &lt;head&gt;     &lt;title&gt;Text To Speech&lt;/title&gt;     &lt;script&gt;       var droid = new Android();       var n = prompt(""Hello JavaScript"","""");       var speak = function() {          var n = prompt(""Hello JavaScript"","""");         droid.eventPost(""sag"", document.getElementById(""sag"").value, 1);       }     &lt;/script&gt;   &lt;/head&gt;   &lt;body&gt;     &lt;form onsubmit=""speak(); return false;""&gt;       &lt;label for=""sag""&gt;What is your message?&lt;/label&gt;       &lt;input type=""text"" id=""sag"" /&gt;       &lt;input type=""submit"" value=""Speak"" /&gt;     &lt;/form&gt;   &lt;/body&gt; &lt;/html&gt; </code></pre>  <p>While in case 1 the prompt(""Hello JavaScript"",""""); is executed it is not in case 2!</p>  <p>QPython3 (Android 6) SL4A eventPost() and eventWaitFor() works fine on the following example (for add. info refer to  <a href=""http://www.mithril.com.au/android/doc/"" rel=""nofollow noreferrer"">http://www.mithril.com.au/android/doc/</a>):</p>  <pre><code>import android, time droid=android.Android() t = 'Geschafft!' print('debug 1') droid.eventPost('Event1', t, 1) print('debug 2') print('debug 3') result=droid.eventWaitFor('Event1').result droid.ttsSpeak(result['data']) print('debug 4') print(result['data']) </code></pre>  <p>Proof: If you comment out the line droid.eventPost('Event1', t, 1) then eventWaitFor() will block forever!</p>  <p>Maybe we 've a similar Problem in <a href=""https://stackoverflow.com/questions/38253083/qpython3-webviewshow-script-doesnt-receiving-data/42912464#42912464"">QPython3 webViewShow - Script doesn&#39;t receiving data</a>  and in <a href=""https://stackoverflow.com/questions/36478310/qpython-webview-javascript-android-object"">https://stackoverflow.com/questions/36478310/qpython-webview-javascript-android-object</a> </p>  <p>Regards Gustav (2017-03-21)</p>"	50054832	"<p>I encountered same problem. As far as I found, at least in recent version you're required to add an Android interface when using webview by calling JavascriptAddInterface, and from the SL4A sources seems like it doesn't. Too bad...</p>"
42965639	Webscraping Selenium with Python : Unable to click a link that has javascript calling a function wrapped in a href tag	python|google-chrome|selenium|web-scraping	2017-03-23 01:30:22.007000 UTC	"<p>Problem Statement: I am trying to scrape data by navigating across the various links on a website until I reach the below piece of code corresponding to a hypertext reference pointing to ""Patient List"".</p>  <pre><code>&lt;td height=""20"" align=""middle"" nowrap=""""&gt; &lt;a href=""javascript:goPatientList()""&gt;&lt;b&gt;Patient List&lt;/b&gt;&lt;/a&gt; &lt;/td&gt; </code></pre>  <p>I copied the xpath of the hypertext reference as shown below in the code.  </p>  <hr>  <p>The below section has my python code.</p>  <pre><code>import selenium  from selenium import webdriver  from selenium.webdriver.common.keys import Keys  from selenium.webdriver.common.by import By  from selenium.webdriver.support.ui import WebDriverWait  from selenium.webdriver.support import expected_conditions as EC  driver=webdriver.Chrome()  driver.get(""https://example.com"")  print(driver.title)    username = driver.find_element_by_name('username')  username.send_keys(""username"")  password = driver.find_element_by_name(""password"")  password.send_keys(""password"")  driver.find_element_by_name(""Login"").click()   driver.find_element_by_id(""tab5"").click()  driver.find_element_by_id(""menu5_3"").click()  **driver.find_element_by_xpath(""/html/body/form/table/tbody/tr/td/table/tbody/tr[1]/td[7]/a"").click()** </code></pre>  <hr>  <p>Error that I received:</p>  <pre><code>Traceback (most recent call last):   File ""login.py"", line 31, in &lt;module&gt;     driver.find_element_by_xpath(""/html/body/form/table/tbody/tr/td/table/tbody/tr[1]/td[7]/a"").click()    File ""/Library/Python/2.7/site-packages/selenium/webdriver/remote/webdriver.py"", line 295, in find_element_by_xpath     return self.find_element(by=By.XPATH, value=xpath)    File ""/Library/Python/2.7/site-packages/selenium/webdriver/remote/webdriver.py"", line 756, in find_element     'value': value})['value']    File ""/Library/Python/2.7/site-packages/selenium/webdriver/remote/webdriver.py"", line 238, in execute     self.error_handler.check_response(response)    File ""/Library/Python/2.7/site-packages/selenium/webdriver/remote/errorhandler.py"", line 193, in check_responseraise exception_class(message, screen, stacktrace) selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {""method"":""xpath"",""selector"":""/html/body/form/table/tbody/tr/td/table/tbody/tr[1]/td[7]/a""}   (Session info: chrome=56.0.2924.87)   (Driver info: chromedriver=2.28.455517 (2c6d2707d8ea850c862f04ac066724273981e88f),platform=Mac OS X 10.11.6 x86_64) </code></pre>  <hr>  <p>Can someone review the piece of code and guide me in this process ?</p>"	42976155	"<p><code>NoSuchElementException</code> means selenium couldn't find the element. Most probably the xpath that you are using is wrong. Check your xpath. You can also test your xpath such as with Firefox firebug extension. <br> Another possibility is selenium is fast when we compare to a human. when selenium loads the page and click maybe there is no button or relate javascript.So we can tell the selenium to wait a little bit then click. So add wait function before your click.</p>  <pre><code>driver.find_element_by_name(""Login"").click() driver.implicitly_wait(10) </code></pre>"
42965639	Webscraping Selenium with Python : Unable to click a link that has javascript calling a function wrapped in a href tag	python|google-chrome|selenium|web-scraping	2017-03-23 01:30:22.007000 UTC	"<p>Problem Statement: I am trying to scrape data by navigating across the various links on a website until I reach the below piece of code corresponding to a hypertext reference pointing to ""Patient List"".</p>  <pre><code>&lt;td height=""20"" align=""middle"" nowrap=""""&gt; &lt;a href=""javascript:goPatientList()""&gt;&lt;b&gt;Patient List&lt;/b&gt;&lt;/a&gt; &lt;/td&gt; </code></pre>  <p>I copied the xpath of the hypertext reference as shown below in the code.  </p>  <hr>  <p>The below section has my python code.</p>  <pre><code>import selenium  from selenium import webdriver  from selenium.webdriver.common.keys import Keys  from selenium.webdriver.common.by import By  from selenium.webdriver.support.ui import WebDriverWait  from selenium.webdriver.support import expected_conditions as EC  driver=webdriver.Chrome()  driver.get(""https://example.com"")  print(driver.title)    username = driver.find_element_by_name('username')  username.send_keys(""username"")  password = driver.find_element_by_name(""password"")  password.send_keys(""password"")  driver.find_element_by_name(""Login"").click()   driver.find_element_by_id(""tab5"").click()  driver.find_element_by_id(""menu5_3"").click()  **driver.find_element_by_xpath(""/html/body/form/table/tbody/tr/td/table/tbody/tr[1]/td[7]/a"").click()** </code></pre>  <hr>  <p>Error that I received:</p>  <pre><code>Traceback (most recent call last):   File ""login.py"", line 31, in &lt;module&gt;     driver.find_element_by_xpath(""/html/body/form/table/tbody/tr/td/table/tbody/tr[1]/td[7]/a"").click()    File ""/Library/Python/2.7/site-packages/selenium/webdriver/remote/webdriver.py"", line 295, in find_element_by_xpath     return self.find_element(by=By.XPATH, value=xpath)    File ""/Library/Python/2.7/site-packages/selenium/webdriver/remote/webdriver.py"", line 756, in find_element     'value': value})['value']    File ""/Library/Python/2.7/site-packages/selenium/webdriver/remote/webdriver.py"", line 238, in execute     self.error_handler.check_response(response)    File ""/Library/Python/2.7/site-packages/selenium/webdriver/remote/errorhandler.py"", line 193, in check_responseraise exception_class(message, screen, stacktrace) selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {""method"":""xpath"",""selector"":""/html/body/form/table/tbody/tr/td/table/tbody/tr[1]/td[7]/a""}   (Session info: chrome=56.0.2924.87)   (Driver info: chromedriver=2.28.455517 (2c6d2707d8ea850c862f04ac066724273981e88f),platform=Mac OS X 10.11.6 x86_64) </code></pre>  <hr>  <p>Can someone review the piece of code and guide me in this process ?</p>"	42999955	"<p>you need to learn how to make proper xpaths. Firebugs are not the best possible most of the time</p>  <p><a href=""https://www.w3schools.com/xml/xpath_syntax.asp"" rel=""nofollow noreferrer"">https://www.w3schools.com/xml/xpath_syntax.asp</a></p>"
43048529	Why float number get rounded in C but not in JavaScript or Python?	c	2017-03-27 14:00:56.427000 UTC	"<p>At first, I know the float number under <code>IEEE754</code> standard is inaccurate for a decimal number, and I try <code>0.3 - 0.2</code> in JavaScript and Python and they got the same <code>0.09999999998</code>, but I got <code>0.1</code> when I try the following code in C:</p>  <pre><code>float a = 0.3, b = 0.2, c = b - a; printf(""%f"", c); </code></pre>  <p>Is the <code>printf</code> function rounded the value? If I want to print the inaccurate number in decimal in C, what should I do?</p>"	43048580	"<p>you can do by using this :</p>  <pre><code>printf(""%0.3f"", c) </code></pre>"
43048529	Why float number get rounded in C but not in JavaScript or Python?	c	2017-03-27 14:00:56.427000 UTC	"<p>At first, I know the float number under <code>IEEE754</code> standard is inaccurate for a decimal number, and I try <code>0.3 - 0.2</code> in JavaScript and Python and they got the same <code>0.09999999998</code>, but I got <code>0.1</code> when I try the following code in C:</p>  <pre><code>float a = 0.3, b = 0.2, c = b - a; printf(""%f"", c); </code></pre>  <p>Is the <code>printf</code> function rounded the value? If I want to print the inaccurate number in decimal in C, what should I do?</p>"	43049805	"<p>Not much here to detail why a difference from JavaScript or Python.  Just some C details.</p>  <hr>  <p>In C, the default precision for <code>""%f""</code> is 6 decimals places after the <code>.</code>.  <a href=""https://stackoverflow.com/questions/43048529/why-float-number-get-rounded-in-c-but-not-in-javascript-or-python/43049805#comment73183109_43048529"">@Jonathan Leffler</a></p>  <pre><code>int main(void) {   float a = 0.3, b = 0.2, c = b - a;    printf(""%f\n"", c);   // -0.100000    // To show to 11 places, use, ""%.11f"".   printf(""%.11f\n"", c);   // -0.10000000894 </code></pre>  <blockquote>   <p>If I want to print the inaccurate number in decimal in C, what should I do?</p> </blockquote>  <p>Only print up to so many <em>significant</em> digits.</p>  <pre><code>#include &lt;float.h&gt; ...   printf(""%.*e\n"", FLT_DIG - 1, c);   // -1.00000e-01 </code></pre>  <hr>  <p>C details:</p>  <p>Variable <code>c</code> is not inaccurate, its value is exact, perhaps <code>-0.10000000894069671630859375</code>.  It was prior operations like conversion of <code>0.3</code> to <code>float</code> and subtraction that are inaccurate.  </p>  <p>The <em>printing</em> of <code>c</code> directs <code>printf()</code> to print a rounded value to 6, 11, or whatever number of digits specified.  <code>printf()</code> can be expected to print the correct text at <em>least</em> up to <code>DBL_DIG</code> (e.g. 15) total significant digits for <code>float/double</code>.</p>  <p>To print typical floating point values <em>exactly</em>, use <code>%a</code>  (hexadecimal)</p>  <pre><code>printf(""%a\n"", c); // -0x1.99999cp-4 </code></pre>"
43056998	How to click Javascript button using selenium and python?	javascript|python|html|selenium	2017-03-27 21:45:37.163000 UTC	"<p>Assume the following button is present on a page:</p>  <pre><code>&lt;input type=""submit"" name=""next_btn"" value=""Next"" onclick=""gonext();"" id=""btnNext""&gt; </code></pre>  <p>Additionally, when clicked manually, the page takes ~3-6 seconds to load and display new data.</p>  <p>I've tried respectively:</p>  <pre><code>driver.find_element_by_name(""next_btn"").submit() </code></pre>  <p>and</p>  <pre><code>driver.find_element_by_name(""next_btn"").click() </code></pre>  <p>Neither does anything in this case, so I figured I could try and execute the <code>gonext()</code> JavaScript, only to be met by an attribute error as such: <code>AttributeError: 'NoneType' object has no attribute 'submit</code> - have also tried with <code>.click()</code>.</p>  <p>Thanks in advance!</p>"	43057241	"<p>Assuming that you are coding in Python, you should be doing:</p>  <pre><code>element = driver.find_element_by_name('next_btn'); element.click(); </code></pre>  <p>Or you may use:</p>  <pre><code>element = driver.find_element_by_id('btnNext'); element.click(); </code></pre>  <p>Let me know if this helps you.</p>"
43084513	How to convert this python code to Javascript	javascript|python	2017-03-29 04:42:40.150000 UTC	"<p>I don't want to run the Python code inside Javascript, I want to turn it completely into JS code. I have no idea about python, Can body can help me on this. Thank you. </p>  <pre><code>print (""Please input the # of books you've read this year"")  BooksAlready=int(input()) print (""Please input the # of weeks that have already passed this year"")  WeeksAlready=int(input()) x=(78/52) c=x*WeeksAlready-BooksAlready if (BooksAlready/WeeksAlready)&gt;x:   print (""You're on point, go have some fun!"") else:   print (""Go read, you piece of uneducated crap"")   print (""You have"")   print (c)   print (""books left to read this week to get on point"") </code></pre>"	43084638	"<p>This will run in the browser's js console.  <code>prompt</code> will not work in node.js, you can access a commandline argument with <code>process.argv</code>.</p>  <pre><code>console.log(""Please input the # of books you've read this year""); console.log(""Please input the # of weeks that have already passed this year"");  var WeeksAlready=parseInt(prompt()), BooksAlready=parseInt(prompt()),  x=(78/52), c=x*WeeksAlready-BooksAlready;  if (BooksAlready/WeeksAlready&gt;x){     console.log(""You're on point, go have some fun!""); } else{    console.log (""Go read, you piece of uneducated crap"");    console.log (""You have"");    console.log (c);    console.log (""books left to read this week to get on point"");  } </code></pre>"
43084513	How to convert this python code to Javascript	javascript|python	2017-03-29 04:42:40.150000 UTC	"<p>I don't want to run the Python code inside Javascript, I want to turn it completely into JS code. I have no idea about python, Can body can help me on this. Thank you. </p>  <pre><code>print (""Please input the # of books you've read this year"")  BooksAlready=int(input()) print (""Please input the # of weeks that have already passed this year"")  WeeksAlready=int(input()) x=(78/52) c=x*WeeksAlready-BooksAlready if (BooksAlready/WeeksAlready)&gt;x:   print (""You're on point, go have some fun!"") else:   print (""Go read, you piece of uneducated crap"")   print (""You have"")   print (c)   print (""books left to read this week to get on point"") </code></pre>"	43084679	"<p>Please check below links to know more about converters from python to js.</p>  <p><a href=""http://www.infoworld.com/article/3033047/javascript/4-tools-to-convert-python-to-javascript-and-back-again.html"" rel=""nofollow noreferrer"">http://www.infoworld.com/article/3033047/javascript/4-tools-to-convert-python-to-javascript-and-back-again.html</a></p>"
43094355	Python Selenium PhantomJS - After disabling Javascript I can't click on anything or get any element	python|python-3.x|selenium|selenium-webdriver|phantomjs	2017-03-29 13:03:23.960000 UTC	"<p>I need help. After I've disabled Javascript on PhantomJS web driver I can't get or click any element using browser.find_element_by_id or any similar method.</p>  <p>Here is how I set Phantom:</p>  <pre><code>def phantom_settings_function():     # PhantomJS settings     phantom_settings = dict(DesiredCapabilities.PHANTOMJS)     phantom_settings['phantomjs.page.settings.userAgent'] = ('Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/28.0.1500.71 Safari/537.36')     phantom_settings['phantomjs.page.settings.javascriptEnabled'] = False,        phantom_settings['phantomjs.page.settings.loadImages'] = False,     phantom_settings['phantomjs.page.browserName'] = 'Google Chrome'      return phantom_settings browser = webdriver.PhantomJS(desired_capabilities=phantom_settings_function(), service_args=['--ignore-ssl-errors=true', '--ssl-protocol=any']) </code></pre>  <p>This is the how I how I try to click on element:</p>  <pre><code>browser.find_element_by_id('c_btnPriceRange').click() </code></pre>  <p>And I get this error:</p>  <blockquote>   <p>selenium.common.exceptions.NoSuchElementException: Message:   {""request"":{""headers"":{""Accept"":""application/json"",""Accept-Encoding"":""identity"",""Connection"":""close"",""Content-Length"":""96"",""Content-Type"":""application/json;charset=UTF-8"",""Host"":""127.0.0.1:52780"",""User-Agent"":""Python-urllib/3.5""},""httpVersion"":""1.1"",""method"":""POST"",""post"":""{\""value\"":   \""c_btnPriceRange\"", \""using\"": \""id\"", \""sessionId\"":   \""871daac0-147f-11e7-bfdf-4dce0d86731e\""}"",""url"":""/element"",""urlParsed"":{""anchor"":"""",""query"":"""",""file"":""element"",""directory"":""/"",""path"":""/element"",""relative"":""/element"",""port"":"""",""host"":"""",""password"":"""",""user"":"""",""userInfo"":"""",""authority"":"""",""protocol"":"""",""source"":""/element"",""queryKey"":{},""chunks"":[""element""]},""urlOriginal"":""/session/871daac0-147f-11e7-bfdf-4dce0d86731e/element""}}   Screenshot: available via screen</p> </blockquote>  <p>I've tried explicit wait for the element and it doesn't work, when I print the content of the web page I get complete HTML code with element in it.  Is disabling JavaScript making Selenium unable to run command or something?</p>  <p>I really need help with this.</p>  <p>Thank you</p>"	43543410	"<p>I also had an NoSuchElementException issue with the PhantomJS web driver.  My fix, which was based on </p>  <p><a href=""https://stackoverflow.com/questions/43498118/python-selenium-phantomjs-data-retained-between-execution"">Python/Selenium/PhantomJS - Data retained between execution</a></p>  <p>was to add</p>  <pre><code>browser.implicitly_wait(10) browser.set_window_size(1120, 550) </code></pre>  <p>before</p>  <pre><code>browser.find_element_by_id </code></pre>"
43120806	How to find a javascript function using selenium/python/chrome	python|google-chrome|selenium	2017-03-30 14:30:20.203000 UTC	"<p>Im struggling to find and click javascript element which inspected looks like this:</p>  <pre><code>""&lt;a href=""javascript:setTopicMode('PAAdvanced-search','300')""&gt;Patch advisories&lt;/a&gt;"" </code></pre>  <p>I tried to find by name, partial name and a href but I am a beginner so I did not managed to make it work.</p>  <p><code>driver.find_element_by_css_selector(""a[onlick*=PAAdvanced-search','300]"").click();</code> does not work either</p>  <p>Can someone advise?</p>  <p>Thank you</p>"	43122504	"<p>If your requirement is to click on above mentioned link then find that using text. Use <code>//a[text()='Patch advisories']</code> xpath :</p>  <pre><code>element=driver.find_element_by_xpath(""//a[text()='Patch advisories']"") element.click() </code></pre>"
43120806	How to find a javascript function using selenium/python/chrome	python|google-chrome|selenium	2017-03-30 14:30:20.203000 UTC	"<p>Im struggling to find and click javascript element which inspected looks like this:</p>  <pre><code>""&lt;a href=""javascript:setTopicMode('PAAdvanced-search','300')""&gt;Patch advisories&lt;/a&gt;"" </code></pre>  <p>I tried to find by name, partial name and a href but I am a beginner so I did not managed to make it work.</p>  <p><code>driver.find_element_by_css_selector(""a[onlick*=PAAdvanced-search','300]"").click();</code> does not work either</p>  <p>Can someone advise?</p>  <p>Thank you</p>"	43122701	"<p>You should be able to do something simple like</p>  <pre><code>driver.find_element_by_link_text(""Patch advisories"").click() </code></pre>  <p>An alternative using the href would be to do something like</p>  <pre><code>driver.find_element_by_css_selector(""a[href*='PAAdvanced-search']"").click() </code></pre>  <p>If those aren't working, something else is going on in the page. You either need a wait to wait for them to be available or you may have an <code>IFRAME</code> on the page.</p>"
43121122	Getting javascript variables with Python	python|web-scraping|beautifulsoup|urllib	2017-03-30 14:43:27.510000 UTC	"<p>I want to scrap data inside a js script on a distant web page using Python. I woud like to only get the numbers of ""<strong>ownerId</strong>"" and ""<strong>id</strong>"". I want to do it on multiple pages so the numbers will be different each time, how can I do that ?</p>  <pre><code>var _zf_aab = new zfl_Guestbook('_aab', { ownerId: 12443183, id: 891273218, type: 2 }, _zf_aabb, _zf_aaba, 17, false, '4Yhbn6glH6xXTW3UWh4GceL1mCDcXyiASFBtk_8j-mA='); </code></pre>  <p>Thank you</p>"	43121302	"<p>You can use something like this:</p>  <pre><code>import re your_string = ""var _zf_aab = new zfl_Guestbook('_aab', { ownerId: 12443183, id: 891273218, type: 2 }, _zf_aabb, _zf_aaba, 17, false, '4Yhbn6glH6xXTW3UWh4GceL1mCDcXyiASFBtk_8j-mA=');"" owner_id = re.search(r'ownerId: ([1-9]+)?,', your_string).group(1) id = re.search(r'id: ([1-9]+)?,', your_string).group(1) </code></pre>"
43171627	python (bottle) - asynchronous respose - handling client-side (javascript)	javascript|python|ajax|asynchronous|bottle	2017-04-02 17:59:18.287000 UTC	"<p>I found <a href=""http://bottlepy.org/docs/dev/async.html"" rel=""nofollow noreferrer"">this</a> example on the Bottle docs re asynchronous responses.</p>  <p>Here is the code slightly modified:</p>  <pre><code>from gevent import monkey; monkey.patch_all()  from time import sleep from bottle import hook, response, route, run   @route('/stream') def stream():     yield 'START'     sleep(3)     yield '\nPROGRESS 1'     sleep(3)     yield '\nPROGRESS 2'     sleep(3)     yield '\nPROGRESS 3'     sleep(3)     yield '\nEND'  run(host='0.0.0.0', port=8080, server='gevent') </code></pre>  <p>calling this view from the browser works as explained in <a href=""http://bottlepy.org/docs/dev/async.html"" rel=""nofollow noreferrer"">the docs</a>:</p>  <blockquote>   <p>If you run this script and point your browser to   <a href=""http://localhost:8080/stream"" rel=""nofollow noreferrer"">http://localhost:8080/stream</a>, you should see START, MIDDLE, and END   show up one by one (rather than waiting 8 seconds to see them all at   once).</p> </blockquote>  <p>I was wondering how to handle this via Javascript in an AJAX request, specifically with JQuery, in order to display the messages in sequence.</p>  <p>ANy help about that?</p>"	43171783	"<blockquote> <p>jQuery doesn't support that, but you can do that with plain XHR:</p> <pre><code>var xhr = new XMLHttpRequest() xhr.open(&quot;GET&quot;, &quot;/test/chunked&quot;, true) xhr.onprogress = function () {   console.log(&quot;PROGRESS:&quot;, xhr.responseText) } xhr.send() </code></pre> <p>This works in all modern browsers, including IE 10. W3C specification here.</p> <p>The downside here is that xhr.responseText contains an accumulated response. You can use substring on it, but a better idea is to use the responseType attribute and use slice on an ArrayBuffer.</p> </blockquote> <p>SOURCE: <a href=""https://stackoverflow.com/questions/6789703/how-to-write-javascript-in-client-side-to-receive-and-parse-chunked-response-i"">How to write javascript in client side to receive and parse `chunked` response in time?</a></p>"
43192245	Using javascript variable in python(flask/Django) dictionary html	javascript|python|html|django|flask	2017-04-03 18:56:08.057000 UTC	"<p>I am trying to use a javascript variable in a python dictionary in html, is this possible? Any help would be great.</p> <p>e.g if I had a dictionary - <code>current_data</code></p> <pre><code>var num_key = &quot;4&quot;;  alert( {{ current_data[num_key] }} ); </code></pre> <p>If I do the following it works perfectly, <code>alert( {{ current_data[&quot;4&quot;] }} );</code></p> <p>But with the javascript variable, it won't work. Thanks again.</p>"	43192560	"<p>No, while you can use Jinja to create JavaScript embedded in <code>&lt;script&gt;</code> tags, you cannot use it the other way around. When Flask renders this page it's static. The page does not still have blocks of code inside <code>{{ }}</code> or <code>{% %}</code>, it holds the result of those operations. However, there are other options. You could put the contents of <code>current_data</code> into hidden input with the keys as the <code>id</code> attributes.</p>  <p><strong>View</strong></p>  <pre><code>{% for key in current_data %}     &lt;input id=""{{ key }}"" type=""hidden"" value=""{{ current_data[key] }}""/&gt; {% endfor %} </code></pre>  <p><strong>JavaScript</strong></p>  <pre><code>var num_key = ""4""; alert(document.getElementById(num_key).value); </code></pre>  <p>One extra piece of advice, it's not good practice to embed JavaScript into your html. You should have a separate <code>.js</code> file containing this and then include it in your html.</p>"
43230741	How to zip together 2 Fields in Zapier Code with either Python or Javascript	javascript|python-2.7|zapier	2017-04-05 12:07:06.267000 UTC	"<p>I am trying to interleave 2 fields in zapier code, I have searched for a few hours trying to find a similar question with the answer and the best result i had was with;</p>  <p><a href=""https://stackoverflow.com/questions/34756145/most-pythonic-way-to-interleave-two-strings?answertab=active#tab-top"">Most pythonic way to interleave two strings</a> </p>  <p>so from that answer, I have put the code in like this;</p>  <p><a href=""https://i.stack.imgur.com/GklKO.jpg"" rel=""nofollow noreferrer"">Image</a></p>  <p>But it keeps coming up with an error or saying that 'the code is good but no output';</p>  <p><a href=""https://i.stack.imgur.com/2KdtC.jpg"" rel=""nofollow noreferrer"">Image</a></p>  <p>I have very limited knowledge of coding but the Output I'm after is, in simple forms, to have the quantities next to the name of our products;</p>  <p>Quantity= 1,2,3,4</p>  <p>Product= A,B,C,D</p>  <p>Ideal Output= 1 x A, 2 x B, 3 x C, 4 x D</p>  <p>The input fields have no spaces in, the Products and the Quantities are also separated by Comma's</p>  <p>Can anyone help with a solution to this problem?</p>"	45033659	"<p>You literally have to define an output variable which must be a JSON object or array. It will serve as an input in any Zap action you define afterwards.</p>  <p>E.g. at the end of your code you can write:</p>  <pre><code>output = """".join(zip(l1,l2)) </code></pre>  <p>or</p>  <pre><code>return """".join(zip(l1,l2)) </code></pre>  <p>See the <a href=""https://zapier.com/help/code/#code-examples"" rel=""nofollow noreferrer"">code examples section</a> at Zapier's docs.</p>"
43234410	How can I load external static Javascript files in ipython or jupyter notebook	javascript|python|requirejs|ipython|jupyter-notebook	2017-04-05 14:40:18.787000 UTC	<p>I am trying to load d3 and dimple.js in ipython notebook but its throwing error. I have tried require as well but not able to load please provide me some way out of it</p>	43790640	"<ol> <li><p>Run this in the notebook to find out your jupyter directory:</p>  <pre><code>from jupyter_core.paths import jupyter_config_dir jupyter_dir = jupyter_config_dir() jupyter_dir </code></pre></li> <li><p>Create folder named 'custom' under jupyter directory found from above    /custom </p></li> <li><p>Create custom.js file under  /custom/custom.js and add following</p>  <pre><code>requirejs.config({ paths: {     d3: 'd3.min', } }); </code></pre></li> <li><p>Open jupyter_notebook_config.py created for your profile. if it is not created ,use the following to create one from the command line/terminal</p>  <pre><code>jupyter notebook --generate-config </code></pre></li> <li><p>Modify static path for your js folder in jupyter_notebook_config.py(created from generate-config command) like below</p>  <pre><code>c.NotebookApp.extra_static_paths = [""C:\your-js-folder""] </code></pre></li> <li><p>Drop your external js file under C:\your-js-folder and stop and start jupyter notebook</p></li> </ol>"
43253299	how to connect my chatbot user interface to APIAI serverhost via python sdk or javascript?	javascript|python|html|css|dialogflow-es	2017-04-06 11:03:42.790000 UTC	"<p>how to exactly connect my chatbot UI which i made it in html and css to API.AI server by using the token provided by API.AI and python sdk api.ai<code>enter code here</code> below is the html code ..! </p>  <pre><code>&lt;!DOCTYPE html&gt; &lt;html&gt; &lt;head&gt;     &lt;title&gt;GUIDEBOT&lt;/title&gt;     &lt;link rel=""stylesheet"" type=""text/css"" href=""style.css""&gt; &lt;/head&gt; &lt;link href=""http://netdna.bootstrapcdn.com/twitter-bootstrap/2.3.2/css/bootstrap-combined.min.css"" rel=""stylesheet""&gt; &lt;script src=""http://code.angularjs.org/angular-1.0.1.js""&gt;&lt;/script&gt; &lt;script src=""http://cdnjs.cloudflare.com/ajax/libs/angular-ui-bootstrap/0.4.0/ui-bootstrap-tpls.min.js""&gt;&lt;/script&gt; &lt;script&gt;     var GUIDEBOT = angular.module('GUIDEBOT', ['ui.bootstrap']);     function CollapseDemoCtrl($scope) {         $scope.isCollapsed = false;     }  &lt;/script&gt; &lt;body &gt; &lt;div class=""demo"" ng-app=""GUIDEBOT""&gt;     &lt;div class=""chat-box"" &gt;     &lt;div class=""user-photo""&gt;&lt;img src=""filebot.png""&gt;&lt;/div&gt;     &lt;p class=""bot-intro""&gt;SammY, Your personal guidebot!&lt;/p&gt;         &lt;div class=""chat-logs""&gt;             &lt;div class=""chat self""&gt;                 &lt;div class=""user-photo""&gt;&lt;/div&gt;                 &lt;p class=""chat-message""&gt;Hello !&lt;/p&gt;             &lt;/div&gt;             &lt;div class=""chat bot""&gt;                 &lt;div class=""user-photo""&gt;&lt;img src=""filebot.png""&gt;&lt;/div&gt;                 &lt;p class=""chat-message""&gt;Hello ! What Would you like to know &lt;/p&gt;             &lt;/div&gt;              &lt;div class=""chat self""&gt;                 &lt;div class=""user-photo""&gt;&lt;/div&gt;                 &lt;p class=""chat-message""&gt;Would like to know the courses worth 10 credits?&lt;/p&gt;             &lt;/div&gt;          &lt;/div&gt;         &lt;div class=""chat-form"" ng-controller=""CollapseDemoCtrl""&gt;             &lt;textarea&gt;&lt;/textarea&gt;             &lt;button class=""button"" ng-click=""isCollapsed = !isCollapsed""&gt;Send&lt;/button&gt;             &lt;div collapse=""isCollapsed""&gt;              &lt;/div&gt;         &lt;/div&gt;     &lt;/div&gt;   &lt;/div&gt;   &lt;/body&gt; &lt;/html&gt; </code></pre>  <p>CSS(style.css) code is </p>  <pre><code>*{ margin:0; padding-bottom: 0pz; font-family:tahoma, sans-serif; box-sizing: border-box;   }  body{  background: #1ddced;  }  .demo{ position: absolute;   bottom: 0px;   right: 3px; }  .chat-box{  width: 450px; position: relative; min-width: 390px; height:600px; background: #e6ffff; padding: 25px; margin: 20px auto; box-shadow: 0 4px #ccc  }  .chat-box .bot-intro{  font-size:18px; }   .user-photo  { width:45px; height:45px; background :  #fff; border-radius:50%; overflow:hidden; }   .user-photo img{ width:100%; }  .chat-logs{ padding: 10px; width: 100%; height: 450px; background: #eee; overflow-x: hidden; overflow-y: scroll; }  .chat-logs:: -webkit-scrollbar{ width:10px; } .chat-logs:: -webkit-scrollbar-thumb{ border-rad: 5px; background: rgba(0,0,0,.1); }  .chat{      display: flex;     flex-flow: row wrap;     align-items: flex-start; margin-bottom:10px; }  .chat .user-photo{ width:45px; height:45px; background :  #fff; border-radius:50%; overflow:hidden; }  .chat .user-photo img{ width:100%; }  .chat .chat-message { width: 80%; padding: 10px; margin: 5px 10px 0; color: black; border-radius: 10px; font-size:18px;  }  .self .chat-message{ background: #4dff88; } .bot .chat-message{ background: #1ddced; order: -1; }  .chat-form{ margin-top:20px; display:flex; align-items: flex-start;  }  .chat-form textarea{ background: #fbfbfb; width:75%; height:50px; border: 2px solid #eee; border-radius:3px; resize:none; padding:10px; font-size: 18px; color: #333;  }  .chat-form textarea:focus { background: #fff; }  .chat-form textarea:: -webkit-scrollbar{ width:10px; } .chat-form textarea:: -webkit-scrollbar-thumb{ border-rad: 5px; background: rgba(0,0,0,.1); }   .chat-form  button{ background:1ddced; padding: 5px 15px; font-size:30px; color:#fff; border: none; margin: 0px 10px;  box-shadow: 0 3px 0 #ccc; cursor: pointer; -webkit-transition: background .2px ease; -moz-transition: background .2px ease; -o-transition: background .2px ease; }  .chat-form button:haver{ background: #13c8d9 } </code></pre>  <p>And the Access tokes key provided by apiai is <a href=""https://bot.api.ai/0a5185fc-2c39-4b22-bf1b-40a5eab7c8a2"" rel=""nofollow noreferrer"">https://bot.api.ai/0a5185fc-2c39-4b22-bf1b-40a5eab7c8a2</a>  </p>  <p>The user will send a question to APi.AI in Natural language and it wil get converted into JSON , and depending on the response it will again get converted into natural language and show it on chat.!</p>  <p>How to connect this chatbot ui to apipi via python sdk or javascript?</p>"	43434921	"<p>Take a look at this example for a working case: <a href=""https://gist.github.com/Dottenpixel/78d9a5487b4aeef32659a017058f75b9"" rel=""nofollow noreferrer"">https://gist.github.com/Dottenpixel/78d9a5487b4aeef32659a017058f75b9</a></p>  <p>So, using the code below, in your case you'd just need to link the send() function with an ng-click and bind your input field and upon click your sending to API.ai.</p>  <p>Then in API.ai check what you've set your callback URL as, and build an endpoint for processing the replies from API.ai. Let me know if you need an example for that</p>  <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-js lang-js prettyprint-override""><code>var accessToken = ""&lt;your agent access token&gt;""; var baseUrl = ""https://api.api.ai/v1/"";  function send() {   var text = $(""#input"").val();   $.ajax({     type: ""POST"",     url: baseUrl + ""query?v=20150910"",     contentType: ""application/json; charset=utf-8"",     dataType: ""json"",     headers: {       ""Authorization"": ""Bearer "" + accessToken     },     data: JSON.stringify({       query: text,       lang: ""en"",       sessionId: ""&lt;any random string&gt;""     }),     success: function(data) {       setResponse(JSON.stringify(data, undefined, 2));     },     error: function() {       setResponse(""Internal Server Error"");     }   });   setResponse(""Loading...""); }</code></pre> </div> </div> </p>"
43257571	Django Python - Javascript Dynamic Table sorting rows	javascript|python|html|mysql|django	2017-04-06 14:05:28.957000 UTC	"<p>I have never done any javascript but I saw that this is what I am looking for to display a dynamic table one of my html template. I have read that there should be something using JQuery but not much more. So I am looking exactly for an example of dynamic table able to sort rows following which column is selected, written in javascript, displayed in an HTML template, using:  - as columns: the fields of a MySQL table (see example below).  - as rows: the entries contained in the same table And all of this has to use Django (I don't know if the javascript file either has to be separated from the HTML template or has to be in the HTML template)</p>  <p>Example MySQL table:</p>  <pre><code>CREATE TABLE PDB(     id_PDB_chain CHAR(5) NOT NULL PRIMARY KEY,     id_PDB CHAR(4) NOT NULL,     chaine VARCHAR(10) NOT NULL,     header VARCHAR(255) NOT NULL,     sequence_Proteine TEXT NOT NULL,     start_seq INT NOT NULL,     taille_Proteine INT NOT NULL,     resolution_PDB FLOAT NOT NULL,     meth_Res VARCHAR(10) NOT NULL,     FOREIGN KEY (meth_Res)     REFERENCES methodes_res(meth_Res)     ON DELETE CASCADE ); </code></pre>  <p>Corresponding class in the ""models.py"" file:</p>  <pre><code>from __future__ import unicode_literals  from django.db import models   class Pdb(models.Model):     id_pdb_chain = models.CharField(db_column='id_PDB_chain', primary_key=True, max_length=5)  # Field name made lowercase.     id_pdb = models.CharField(db_column='id_PDB', max_length=4)  # Field name made lowercase.     chaine = models.CharField(max_length=10)     header = models.CharField(max_length=255)     sequence_proteine = models.TextField(db_column='sequence_Proteine')  # Field name made lowercase.     start_seq = models.IntegerField()     taille_proteine = models.IntegerField(db_column='taille_Proteine')  # Field name made lowercase.     resolution_pdb = models.FloatField(db_column='resolution_PDB')  # Field name made lowercase.     meth_res = models.ForeignKey('MethodesRes', models.DO_NOTHING, db_column='meth_Res')  # Field name made lowercase.      def __unicode__(self):         return self.id_pdb      class Meta:         managed = False         db_table = 'PDB' </code></pre>  <p>In case you need any other informations just ask in comments and I will edit this post with the informations.</p>"	43257870	"<p>In your views.py create a view under whatever name you'd like. Create a list and set it to whatever data you want from your specific model. now go to your template. With that list populated by your specific data you have chosen from the database, use an If statement to check to see if there is anything residing in that list. If there is data there then you can use a For loop like so:</p>  <pre><code>{% for model_name in list_name %}     model_name.model_data etc # Mark it up with relevant html table code, though divs are more preferred </code></pre>  <p>You can mark up the data as needed to display a table, though divs would be more compliant and nicer than tables. This is just a basic example. On the Else statement if no data exists in the list ahead of time, you can simply output that no data exists. Take a look here <a href=""https://docs.djangoproject.com/en/1.10/intro/tutorial01/"" rel=""nofollow noreferrer"">https://docs.djangoproject.com/en/1.10/intro/tutorial01/</a>  They walk you through building a polling app, where it is relevant to you is the index.html template they build pulling the question data from the database and displaying an unordered list of the questions on the home page as links to vote on. Simply follow this tutorial and look at how they implement the models.py and views.py along with the template and then change the markup from am unordered list to whatever suits your needs.</p>"
43257571	Django Python - Javascript Dynamic Table sorting rows	javascript|python|html|mysql|django	2017-04-06 14:05:28.957000 UTC	"<p>I have never done any javascript but I saw that this is what I am looking for to display a dynamic table one of my html template. I have read that there should be something using JQuery but not much more. So I am looking exactly for an example of dynamic table able to sort rows following which column is selected, written in javascript, displayed in an HTML template, using:  - as columns: the fields of a MySQL table (see example below).  - as rows: the entries contained in the same table And all of this has to use Django (I don't know if the javascript file either has to be separated from the HTML template or has to be in the HTML template)</p>  <p>Example MySQL table:</p>  <pre><code>CREATE TABLE PDB(     id_PDB_chain CHAR(5) NOT NULL PRIMARY KEY,     id_PDB CHAR(4) NOT NULL,     chaine VARCHAR(10) NOT NULL,     header VARCHAR(255) NOT NULL,     sequence_Proteine TEXT NOT NULL,     start_seq INT NOT NULL,     taille_Proteine INT NOT NULL,     resolution_PDB FLOAT NOT NULL,     meth_Res VARCHAR(10) NOT NULL,     FOREIGN KEY (meth_Res)     REFERENCES methodes_res(meth_Res)     ON DELETE CASCADE ); </code></pre>  <p>Corresponding class in the ""models.py"" file:</p>  <pre><code>from __future__ import unicode_literals  from django.db import models   class Pdb(models.Model):     id_pdb_chain = models.CharField(db_column='id_PDB_chain', primary_key=True, max_length=5)  # Field name made lowercase.     id_pdb = models.CharField(db_column='id_PDB', max_length=4)  # Field name made lowercase.     chaine = models.CharField(max_length=10)     header = models.CharField(max_length=255)     sequence_proteine = models.TextField(db_column='sequence_Proteine')  # Field name made lowercase.     start_seq = models.IntegerField()     taille_proteine = models.IntegerField(db_column='taille_Proteine')  # Field name made lowercase.     resolution_pdb = models.FloatField(db_column='resolution_PDB')  # Field name made lowercase.     meth_res = models.ForeignKey('MethodesRes', models.DO_NOTHING, db_column='meth_Res')  # Field name made lowercase.      def __unicode__(self):         return self.id_pdb      class Meta:         managed = False         db_table = 'PDB' </code></pre>  <p>In case you need any other informations just ask in comments and I will edit this post with the informations.</p>"	43288952	"<p>I found a solution that worked for me and it was really simple in fact:</p>  <p>first you have to download jquery and jquery.tablesorter. Here is the official website where you can download everything and where everything is explained : <a href=""http://tablesorter.com/docs/"" rel=""nofollow noreferrer"">http://tablesorter.com/docs/</a></p>  <p>Then, as I work with Django my HTML templates are in a ""myapp/templates"" directory and my CSS and Javascript files are in a ""myapp/static/myapp/"" directory.</p>  <p>Here is the template I used:</p>  <pre><code>{% load static %}  &lt;head&gt; &lt;link rel=""stylesheet"" type=""text/css"" href=""{% static 'myapp/style.css' %}"" /&gt;  &lt;script type=""text/javascript"" src=""{% static 'myapp/jquery-3.2.0.min.js' %}""&gt; &lt;/script&gt;  &lt;script type=""text/javascript"" src=""{% static 'myapp/jquery.tablesorter.min.js' %}""&gt; &lt;/script&gt;  &lt;script type=""text/javascript""&gt;     $(document).ready(function()          {          $(""#pdbtable"").tablesorter();          }      ); &lt;/script&gt; &lt;/head&gt;  {% if protdb %}     &lt;table id=""pdbtable"" align=""center"" border=""3"" width=""100%""&gt;     &lt;thead&gt;     &lt;tr&gt;         &lt;th&gt;PDB Id&lt;/th&gt;         &lt;th&gt;Chain&lt;/th&gt;         &lt;th&gt;Header&lt;/th&gt;         &lt;th&gt;Size&lt;/th&gt;         &lt;th&gt;Resol.&lt;/th&gt;         &lt;th&gt;Method Res.&lt;/th&gt;     &lt;/tr&gt;     &lt;/thead&gt;     &lt;tbody&gt;     {% for i in protdb %}     &lt;tr&gt;         &lt;td&gt;&lt;a href=""/pdbapp/{{ i.id_pdb_chain }}""&gt;{{ i.id_pdb }}&lt;/a&gt;&lt;/td&gt;         &lt;td&gt;{{ i.chaine }}&lt;/td&gt;         &lt;td&gt;{{ i.header }}&lt;/td&gt;         &lt;td&gt;{{ i.taille_proteine }}&lt;/td&gt;         &lt;td&gt;{{ i.resolution_pdb }}&lt;/td&gt;         &lt;td&gt;{{ i.meth_res }}&lt;/td&gt;     &lt;/tr&gt;     {% endfor %}     &lt;/tbody&gt;     &lt;/table&gt; {% else %}     &lt;p&gt;No PDBs are available.&lt;/p&gt; {% endif %} </code></pre>  <p>And here is my corresponding view:</p>  <pre><code>def pdbinfo(request):      protdb = Pdb.objects.order_by('id_pdb_chain')\     [:len(Pdb.objects.order_by('id_pdb_chain'))]      context = {         'protdb': protdb     }      return render(request, 'pdbapp/pdbinfo.html', context) </code></pre>  <p>As you maybe know, since you are using Django, your template has to receive all informations from a view in views.py and the table of your database (in my case I use MySQL) have to be filled with entries. </p>  <p>This code is working, take some inspiration from it. </p>  <p>One other content that helped me and that gives more details is a youtube video, check the link here: <a href=""https://www.youtube.com/watch?v=-wAWfPVXlME&amp;t=334s"" rel=""nofollow noreferrer"">https://www.youtube.com/watch?v=-wAWfPVXlME&amp;t=334s</a></p>  <p>I hope it will help!</p>"
43279476	Javascript void(0) click or execute using selenium python	javascript|jquery|python|selenium	2017-04-07 13:31:03.920000 UTC	"<p>I am trying to scrape a website using selenium and python. However, I need to click on a button to show the required information. The website reduce points out of my account when ever the button click and I accept that. I just want to automate the process with selenium and scrape the site. I am very new to both python and selenium. Can anyone help me on how to click such a button or executing the script? </p>  <p>My current code is:</p>  <pre><code>driver.find_elements_by_xpath(""//*[@id='show_info_button']"") </code></pre>  <p>It does not return any errors, the button just wasn't clicked. I have also tried driver.execute_script. But I am not sure what is the function name I am trying to execute so I have posted the html of the button below. </p>  <p>Here is the html of the button:</p>  <pre><code>&lt;a href=""javascript:void(0);"" id=""show_info_button"" class=""btn btn-big btn-danger text-center""&gt;Xem thông tin ứng viên&lt;/a&gt;  &lt;script type=""text/javascript""&gt;          $(document).ready(function() {             $process = false;             $('#show_info_button').click(function() {                 if (!$process) {                     $process = true;                     $.ajax({                         url: 'https://www.timviecnhanh.com/ho-so-show-info-point/ajax',                         type: 'GET',                         dataType : 'json',                         data: {                             employer_id: '2677857',                             resume_id: '4065839',                             package: '100',                             remain_point: '611',                             remain_point_gift: '0',                             resume_point: '2'                         },                         async: false,                         success: function(response) {                             if (typeof response != 'undefined') {                                                                                                             $('#remain_point').text(parseInt($(""#remain_point"").text(), 10) - parseInt($(""#resume_point"").text(), 10));                                  $('#show_info_point').html(response.info);                                 $('#show_info_point_hide').hide();                                 if (typeof response.dinhkem != 'undefined') {                                     $('#preview-attach').html(response.dinhkem);                                     $('#preview-attach-resume-meta').hide();                                     $dinhkem_base64 = response.dinhkem_base64;                                 }                                 $('#show_info_button').hide();                                 $('#send_mail').append(""&lt;a href='https://www.timviecnhanh.com/nha-tuyen-dung/lien-he-nguoi-tim-viec?id=4065839&amp;job_id=&amp;last_cache_name=' class='btn btn-primary btn-send-mail'&gt;Gửi mail&lt;/a&gt;"");                                 $('#send_mail_contact').append(""&lt;a href='https://www.timviecnhanh.com/nha-tuyen-dung/lien-he-nguoi-tim-viec?id=4065839&amp;job_id=&amp;last_cache_name=' class='btn btn-primary btn-send-mail'&gt;Gửi mail liên hệ&lt;/a&gt;"");                                 $('#btn_view_attach').hide();                              } else {                                 alert('Lỗi, refresh lại trình duyệt.');                             }                         }                     }).done(function() {                         // $process = false;                     });                 }             });         });     &lt;/script&gt;         $(document).ready(function() {             $process = false;             $('#show_info_button').click(function() {                 if (!$process) {                     $process = true;                     $.ajax({                         url: 'https://www.timviecnhanh.com/ho-so-show-info-point/ajax',                         type: 'GET',                         dataType : 'json',                         data: {                             employer_id: '2677857',                             resume_id: '4065839',                             package: '100',                             remain_point: '611',                             remain_point_gift: '0',                             resume_point: '2'                         },                         async: false,                         success: function(response) {                             if (typeof response != 'undefined') {                                                                                                             $('#remain_point').text(parseInt($(""#remain_point"").text(), 10) - parseInt($(""#resume_point"").text(), 10));                                  $('#show_info_point').html(response.info);                                 $('#show_info_point_hide').hide();                                 if (typeof response.dinhkem != 'undefined') {                                     $('#preview-attach').html(response.dinhkem);                                     $('#preview-attach-resume-meta').hide();                                     $dinhkem_base64 = response.dinhkem_base64;                                 }                                 $('#show_info_button').hide();                                 $('#send_mail').append(""&lt;a href='https://www.timviecnhanh.com/nha-tuyen-dung/lien-he-nguoi-tim-viec?id=4065839&amp;job_id=&amp;last_cache_name=' class='btn btn-primary btn-send-mail'&gt;Gửi mail&lt;/a&gt;"");                                 $('#send_mail_contact').append(""&lt;a href='https://www.timviecnhanh.com/nha-tuyen-dung/lien-he-nguoi-tim-viec?id=4065839&amp;job_id=&amp;last_cache_name=' class='btn btn-primary btn-send-mail'&gt;Gửi mail liên hệ&lt;/a&gt;"");                                 $('#btn_view_attach').hide();                              } else {                                 alert('Lỗi, refresh lại trình duyệt.');                             }                         }                     }).done(function() {                         // $process = false;                     });                 }             });         }); </code></pre>"	43315617	"<p>I have found out the solution to this problem. The actual problem is not with the .click() function. It can definitely click on this sort of button. The problem lies within tab management. </p>  <p>Because the href is opened in a new tab, I did not know that i have to switch the focus to the new tab. </p>"
43346199	Returned value from python is not available at javascript	javascript|python|pyqt5	2017-04-11 12:40:13.657000 UTC	"<p>I am working on a pyqt5 application which opens up a Qwebengineview. I am also attaching a handler to the QWebchannel to communicate between javascript and python methods and setting it to the QWebengineview. </p>  <p>Everything is working as expected. The above code loads the HTML and the CallHandler's test() method is called from javascript. And it ran smoothly.  However, when a call from javascript is made to getScriptsPath() method, the function receives the call but returns nothing. </p>  <p>Below are the python and HTML codes respectively. </p>  <pre><code>import os import sys from PyQt5 import QtCore, QtGui from PyQt5.QtCore import QUrl, QObject, pyqtSlot from PyQt5.QtWidgets import QApplication, QWidget from PyQt5.QtCore import * from PyQt5.QtGui import * from PyQt5.QtWebEngineWidgets import QWebEngineView from PyQt5.QtWebChannel import QWebChannel  class CallHandler(QObject):     trigger = pyqtSignal(str)     @pyqtSlot()     def test(self):         print('call received')      @QtCore.pyqtSlot(int, result=str)     def getScriptsPath(self, someNumberToTest):         file_path = os.path.dirname(os.path.abspath(__file__))         print('call received for path', file_path)         return file_path  class Window(QWidget):     """"""docstring for Window""""""     def __init__(self):         super(Window, self).__init__()         ##channel setting         self.channel = QWebChannel()         self.handler = CallHandler(self)         self.channel.registerObject('handler', self.handler)           self.view = QWebEngineView(self)         self.view.page().setWebChannel(self.channel)          file_path = os.path.abspath(os.path.join(os.path.dirname(__file__), ""test.html""))         local_url = QUrl.fromLocalFile(file_path)         self.view.load(local_url)  def main():     app = QApplication(sys.argv)     window = Window()     # window.showFullScreen()     window.show()     sys.exit(app.exec_())  if __name__ == ""__main__"":     main() </code></pre>  <p>HTMLfile</p>  <pre><code>&lt;html&gt; &lt;head&gt;  &lt;/head&gt;  &lt;body&gt;   &lt;center&gt;   &lt;script src=""qrc:///qtwebchannel/qwebchannel.js""&gt;&lt;/script&gt;   &lt;script language=""JavaScript""&gt;     var xyz = ""HI"";      window.onload = function(){           new QWebChannel(qt.webChannelTransport, function (channel) {           window.handler = channel.objects.handler;           //testing handler object by calling python method.            handler.test();             handler.trigger.connect(function(msg){             console.log(msg);           });       });     }      var getScriptsPath = function(){       file_path = handler.getScriptsPath();       //Logging the recieved value which is coming out as ""undefined""       console.log(file_path);     };    &lt;/script&gt;   &lt;button onClick=""getScriptsPath()""&gt;print path&lt;/button&gt;   &lt;/br&gt;   &lt;div id=""test""&gt;       &lt;p&gt;HI&lt;/p&gt;   &lt;/div&gt;   &lt;/center&gt; &lt;/body&gt;&lt;/html&gt; </code></pre>  <p>I am not able to decipher why handler.getScriptsPath() 's returned value is not available in javascript.</p>"	45841550	"<p>The results from your function call to <code>getScriptsPath</code> are returned asyncronously, so you have to pass a callback function to your handler to retrieve the result, e.g.:</p>  <pre><code>handler.getScriptsPath(function(file_path) {     console.log(file_path); }); </code></pre>"
43346199	Returned value from python is not available at javascript	javascript|python|pyqt5	2017-04-11 12:40:13.657000 UTC	"<p>I am working on a pyqt5 application which opens up a Qwebengineview. I am also attaching a handler to the QWebchannel to communicate between javascript and python methods and setting it to the QWebengineview. </p>  <p>Everything is working as expected. The above code loads the HTML and the CallHandler's test() method is called from javascript. And it ran smoothly.  However, when a call from javascript is made to getScriptsPath() method, the function receives the call but returns nothing. </p>  <p>Below are the python and HTML codes respectively. </p>  <pre><code>import os import sys from PyQt5 import QtCore, QtGui from PyQt5.QtCore import QUrl, QObject, pyqtSlot from PyQt5.QtWidgets import QApplication, QWidget from PyQt5.QtCore import * from PyQt5.QtGui import * from PyQt5.QtWebEngineWidgets import QWebEngineView from PyQt5.QtWebChannel import QWebChannel  class CallHandler(QObject):     trigger = pyqtSignal(str)     @pyqtSlot()     def test(self):         print('call received')      @QtCore.pyqtSlot(int, result=str)     def getScriptsPath(self, someNumberToTest):         file_path = os.path.dirname(os.path.abspath(__file__))         print('call received for path', file_path)         return file_path  class Window(QWidget):     """"""docstring for Window""""""     def __init__(self):         super(Window, self).__init__()         ##channel setting         self.channel = QWebChannel()         self.handler = CallHandler(self)         self.channel.registerObject('handler', self.handler)           self.view = QWebEngineView(self)         self.view.page().setWebChannel(self.channel)          file_path = os.path.abspath(os.path.join(os.path.dirname(__file__), ""test.html""))         local_url = QUrl.fromLocalFile(file_path)         self.view.load(local_url)  def main():     app = QApplication(sys.argv)     window = Window()     # window.showFullScreen()     window.show()     sys.exit(app.exec_())  if __name__ == ""__main__"":     main() </code></pre>  <p>HTMLfile</p>  <pre><code>&lt;html&gt; &lt;head&gt;  &lt;/head&gt;  &lt;body&gt;   &lt;center&gt;   &lt;script src=""qrc:///qtwebchannel/qwebchannel.js""&gt;&lt;/script&gt;   &lt;script language=""JavaScript""&gt;     var xyz = ""HI"";      window.onload = function(){           new QWebChannel(qt.webChannelTransport, function (channel) {           window.handler = channel.objects.handler;           //testing handler object by calling python method.            handler.test();             handler.trigger.connect(function(msg){             console.log(msg);           });       });     }      var getScriptsPath = function(){       file_path = handler.getScriptsPath();       //Logging the recieved value which is coming out as ""undefined""       console.log(file_path);     };    &lt;/script&gt;   &lt;button onClick=""getScriptsPath()""&gt;print path&lt;/button&gt;   &lt;/br&gt;   &lt;div id=""test""&gt;       &lt;p&gt;HI&lt;/p&gt;   &lt;/div&gt;   &lt;/center&gt; &lt;/body&gt;&lt;/html&gt; </code></pre>  <p>I am not able to decipher why handler.getScriptsPath() 's returned value is not available in javascript.</p>"	53555305	"<p>a,b,c are parameters you pass from js to py</p>  <p>file_path is from py to js asynchronously</p>  <pre><code>handler.getScriptsPath(a,b,c,function(file_path) {     console.log(file_path); }); </code></pre>"
43351450	Passing javascript variable to a python program(cgi imported)	javascript|python|variables|xmlhttprequest|cgi	2017-04-11 16:26:13.227000 UTC	"<p>Currently I am trying to pass a sequence of letters from HTML to a python program. I am having trouble connecting javascript to the python program. Currently my python program is only written to take the sequence and print it. For example:</p> <h1>python code</h1> <pre><code>import cgi def main():     form = cgi.FieldStorage()     print(form) main() </code></pre> <p>However I am struggling to write javascript function to take the variable of sequence and pass it to the above python program.</p> <h1>java script</h1> <pre><code>function takevariable(){     var input = document.getElementById(&quot;userInput&quot;).value; } </code></pre> <p>I understand I need to work with XMLHttpRequest() However, I could not take the step to begin writing that part.</p> <p>Could you please help me?</p> <p>Thanks in advance.</p>"	43352453	"<p>You need to create a API for receive the request from your JavaScript Code on Python (<a href=""http://flask.pocoo.org/"" rel=""nofollow noreferrer"">Flask</a> it's very simple and easy to learn) and make a httpRequest from your JS to your API on Python... The http request from your JS can be made with jQuery, or native JavaScript with XMLHttpRequest. <a href=""https://developer.mozilla.org/es/docs/XMLHttpRequest/Using_XMLHttpRequest"" rel=""nofollow noreferrer"">Here</a> an example.</p>"
43355915	Adding javascript code to pick up data from file for python django dashboard	javascript|python|node.js|django	2017-04-11 20:46:31.077000 UTC	"<p>Trying to pick up a data file with data I need to add to dashboard. Whenever I add this code the entire JavaScript file kills my django server. The data file exists. I tried to add this code outside the function and also tried with it inside and get the same results.</p>  <pre><code>/* global $, Dashboard */  var dashboard = new Dashboard();  dashboard.addWidget('clock_widget', 'Clock');  dashboard.addWidget('current_valuation_widget', 'Number', {     var request = new XMLHttpRequest();     request.open('GET', 'text.txt');     request.onreadystatechange = function() {     if (request.readyState === 4) {         var textfileContent = request.responseText;         // continue your program flow here     } } request.send();      getData: function () {         $.extend(this.scope, {             title: 'Current Valuation',             moreInfo: 'In billions',             updatedAt: 'Last updated at 14:10',             detail: '64%',             value: '$35',             icon: 'fa fa-arrow-up',             dept: 'POIT'         });     } });  dashboard.addWidget('buzzwords_widget', 'List', {     getData: function () {         $.extend(this.scope, {             title: 'Buzzwords',             moreInfo: '# of times said around the office',             updatedAt: 'Last updated at 18:58',             data: [{label: 'Exit strategy', value: 24},                    {label: 'Web 2.0', value: 12},                    {label: 'Turn-key', value: 2},                    {label: 'Enterprise', value: 12},                    {label: 'Pivoting', value: 3},                    {label: 'Leverage', value: 10},                    {label: 'Streamlininess', value: 4},                    {label: 'Paradigm shift', value: 6},                    {label: 'Synergy', value: 7}]         });     } });  dashboard.addWidget('convergence_widget', 'Graph', {     getData: function () {         $.extend(this.scope, {             title: 'Convergence',             value: '41',             moreInfo: '',             data: [                     { x: 0, y: 40 },                     { x: 1, y: 49 },                     { x: 2, y: 38 },                     { x: 3, y: 30 },                     { x: 4, y: 32 }                 ]             });     } });  dashboard.addWidget('completion_widget', 'Knob', {     getData: function () {         $.extend(this.scope, {             title: 'Completion',             updatedAt: 'Last updated at 14:10',             detail: 'today 10',             value: '35',             data: {                 angleArc: 250,                 angleOffset: -125,                 displayInput: true,                 displayPrevious: true,                 step: 1,                 min: 1,                 max: 99,                 readOnly: true,                 format: function(value) { return value + '%'; }             }         });     } }); </code></pre>"	43360633	<p>The dashboard has an API build in. I will just push it with curl.</p>
43359623	Javascript's equivalent of R's findInterval() or Python's bisect.bisect_left	javascript|python|bisection	2017-04-12 03:14:25.417000 UTC	"<p>I can't find how to determine to which interval an element belongs based on an Array for JavaScript. I want the behavior of <code>bisect.bisect_left</code> from Python. Here is some sample code:</p>  <pre><code>import bisect a = [10,20,30,40] print(bisect.bisect_left(a,0))  #0  because 0 &lt;= 10 print(bisect.bisect_left(a,10)) #0  because 10 &lt;= 10 print(bisect.bisect_left(a,15)) #1  because 10 &lt; 15 &lt; 20 print(bisect.bisect_left(a,25)) #2  ... print(bisect.bisect_left(a,35)) #3  ... print(bisect.bisect_left(a,45)) #4 </code></pre>  <p>I know this would be easy to implement, but why re-invent the wheel?</p>"	43359760	"<p>There are no built-in bisection functions in JavaScript, so you will have to roll your own. Here is my personal reinvention of the wheel:</p>  <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-js lang-js prettyprint-override""><code>var array = [10, 20, 30, 40]  function bisectLeft (array, x) {   for (var i = 0; i &lt; array.length; i++) {     if (array[i] &gt;= x) return i   }   return array.length }  console.log(bisectLeft(array, 5)) console.log(bisectLeft(array, 15)) console.log(bisectLeft(array, 25)) console.log(bisectLeft(array, 35)) console.log(bisectLeft(array, 45))  function bisectRight (array, x) {   for (var i = 0; i &lt; array.length; i++) {     if (array[i] &gt; x) return i   }   return array.length }</code></pre> </div> </div> </p>"
43359623	Javascript's equivalent of R's findInterval() or Python's bisect.bisect_left	javascript|python|bisection	2017-04-12 03:14:25.417000 UTC	"<p>I can't find how to determine to which interval an element belongs based on an Array for JavaScript. I want the behavior of <code>bisect.bisect_left</code> from Python. Here is some sample code:</p>  <pre><code>import bisect a = [10,20,30,40] print(bisect.bisect_left(a,0))  #0  because 0 &lt;= 10 print(bisect.bisect_left(a,10)) #0  because 10 &lt;= 10 print(bisect.bisect_left(a,15)) #1  because 10 &lt; 15 &lt; 20 print(bisect.bisect_left(a,25)) #2  ... print(bisect.bisect_left(a,35)) #3  ... print(bisect.bisect_left(a,45)) #4 </code></pre>  <p>I know this would be easy to implement, but why re-invent the wheel?</p>"	44623791	"<p>A faster way than the previously accepted answer that works for same size intervals is:</p>  <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-js lang-js prettyprint-override""><code>var array = [5, 20, 35, 50]  //Intervals: //      &lt;5: 0  //  [5-20): 1 // [20-35): 2 // [35-50): 3 //    &gt;=50: 4  var getPosition = function(array, x) {   if (array.length == 0) return;   if (array.length == 1) return (x &lt; array[0]) ? 0 : 1;   return Math.floor((x - array[0]) / (array[1] - array[0])) + 1 }  console.log(getPosition(array, 2)); //0 console.log(getPosition(array, 5)); //1 console.log(getPosition(array, 15));//1 console.log(getPosition(array, 20));//2 console.log(getPosition(array, 48));//3 console.log(getPosition(array, 50));//4 console.log(getPosition(array, 53));//4  console.log(""WHEN SIZE: 1"") array = [5]; //Intervals: //  &lt;5: 0 // &gt;=5: 1 console.log(getPosition(array, 3)); console.log(getPosition(array, 5)); console.log(getPosition(array, 6));</code></pre> </div> </div> </p>"
43359623	Javascript's equivalent of R's findInterval() or Python's bisect.bisect_left	javascript|python|bisection	2017-04-12 03:14:25.417000 UTC	"<p>I can't find how to determine to which interval an element belongs based on an Array for JavaScript. I want the behavior of <code>bisect.bisect_left</code> from Python. Here is some sample code:</p>  <pre><code>import bisect a = [10,20,30,40] print(bisect.bisect_left(a,0))  #0  because 0 &lt;= 10 print(bisect.bisect_left(a,10)) #0  because 10 &lt;= 10 print(bisect.bisect_left(a,15)) #1  because 10 &lt; 15 &lt; 20 print(bisect.bisect_left(a,25)) #2  ... print(bisect.bisect_left(a,35)) #3  ... print(bisect.bisect_left(a,45)) #4 </code></pre>  <p>I know this would be easy to implement, but why re-invent the wheel?</p>"	58812425	"<p>In case anyone else lands here, here's an implementation of bisect_left that actually runs in O(log N), and should work regardless of the interval between list elements.  NB that is does <em>not</em> sort the input list, and, as-is, will likely blow the stack if you pass it an unsorted list.  It's also only set up to work with numbers, but it should be easy enough to adapt it to accept a comparison function. Take this as a starting point, not necessarily your destination. Improvements are certainly welcome!</p>  <p><a href=""https://repl.it/@RossHunter/bisectLeft"" rel=""nofollow noreferrer"">Run it in a REPL</a></p>  <pre><code>function bisect(sortedList, el){   if(!sortedList.length) return 0;    if(sortedList.length == 1) {     return el &gt; sortedList[0] ? 1 : 0;   }    let lbound = 0;   let rbound = sortedList.length - 1;   return bisect(lbound, rbound);  // note that this function depends on closure over lbound and rbound // to work correctly   function bisect(lb, rb){     if(rb - lb == 1){       if(sortedList[lb] &lt; el &amp;&amp; sortedList[rb] &gt;= el){         return lb + 1;       }        if(sortedList[lb] == el){         return lb;       }     }      if(sortedList[lb] &gt; el){       return 0;     }      if(sortedList[rb] &lt; el){       return sortedList.length     }      let midPoint = lb + (Math.floor((rb - lb) / 2));     let midValue = sortedList[midPoint];      if(el &lt;= midValue){       rbound = midPoint     }      else if(el &gt; midValue){       lbound = midPoint     }      return bisect(lbound, rbound);   } }  console.log(bisect([1,2,4,5,6], 3)) // =&gt; 2 console.log(bisect([1,2,4,5,6], 7)) // =&gt; 5 console.log(bisect([0,1,1,1,1,2], 1)) // =&gt; 1 console.log(bisect([0,1], 0)) // =&gt; 0 console.log(bisect([1,1,1,1,1], 1)) // =&gt; 0 console.log(bisect([1], 2)); // =&gt; 1 console.log(bisect([1], 1)); // =&gt; 0 </code></pre>"
43359623	Javascript's equivalent of R's findInterval() or Python's bisect.bisect_left	javascript|python|bisection	2017-04-12 03:14:25.417000 UTC	"<p>I can't find how to determine to which interval an element belongs based on an Array for JavaScript. I want the behavior of <code>bisect.bisect_left</code> from Python. Here is some sample code:</p>  <pre><code>import bisect a = [10,20,30,40] print(bisect.bisect_left(a,0))  #0  because 0 &lt;= 10 print(bisect.bisect_left(a,10)) #0  because 10 &lt;= 10 print(bisect.bisect_left(a,15)) #1  because 10 &lt; 15 &lt; 20 print(bisect.bisect_left(a,25)) #2  ... print(bisect.bisect_left(a,35)) #3  ... print(bisect.bisect_left(a,45)) #4 </code></pre>  <p>I know this would be easy to implement, but why re-invent the wheel?</p>"	63603242	"<p>using the D3-array <a href=""https://www.npmjs.com/package/d3-array"" rel=""nofollow noreferrer"">npm</a>.</p> <pre><code>const d3 = require('d3-array');   var a = [10,20,30,40]; console.log(d3.bisectLeft(a,0));   console.log(d3.bisectLeft(a,10));  console.log(d3.bisectLeft(a,15)); console.log(d3.bisectLeft(a,25)); console.log(d3.bisectLeft(a,35)); console.log(d3.bisectLeft(a,45)); </code></pre> <p>output:</p> <pre><code>0 0 1 2 3 4 </code></pre>"
43359623	Javascript's equivalent of R's findInterval() or Python's bisect.bisect_left	javascript|python|bisection	2017-04-12 03:14:25.417000 UTC	"<p>I can't find how to determine to which interval an element belongs based on an Array for JavaScript. I want the behavior of <code>bisect.bisect_left</code> from Python. Here is some sample code:</p>  <pre><code>import bisect a = [10,20,30,40] print(bisect.bisect_left(a,0))  #0  because 0 &lt;= 10 print(bisect.bisect_left(a,10)) #0  because 10 &lt;= 10 print(bisect.bisect_left(a,15)) #1  because 10 &lt; 15 &lt; 20 print(bisect.bisect_left(a,25)) #2  ... print(bisect.bisect_left(a,35)) #3  ... print(bisect.bisect_left(a,45)) #4 </code></pre>  <p>I know this would be easy to implement, but why re-invent the wheel?</p>"	73179119	"<p>Speaking of re-inventing the wheel, I'd like to join the conversation:</p> <pre><code>function bisectLeft(arr, value, lo=0, hi=arr.length) {   while (lo &lt; hi) {     const mid = (lo + hi) &gt;&gt; 1;     if (arr[mid] &lt; value) {       lo = mid + 1;     } else {       hi = mid;     }   }   return lo; } </code></pre> <p>I believe that is the schoolbook implementation of bisection. Actually, you'll find something <a href=""https://github.com/d3/d3-array/blob/main/src/bisector.js#L22"" rel=""nofollow noreferrer"">pretty much the same</a> inside the d3-array package mentioned before.</p>"
43440474	Javascript Incorrect header check decompressing zlib buffer generated by Python	javascript|python	2017-04-16 18:14:42.153000 UTC	"<p>I am compressing a string in Python and trying to decompress it in JavaScript.</p> <p>Compress a string in Python:</p> <pre><code>import zlib, base64  text = &quot;Test string&quot; result = base64.b64encode(zlib.compress(text.encode(&quot;utf-8&quot;)) </code></pre> <p>In JavaScript:</p> <pre><code>const zlib = require('zlib');  var data = atob(&lt;text encoded in base64 from Python&gt;); zlib.inflate(data, function(err, buffer){     if(!err){         // doing something     }     else{        console.log(err); // &lt;-- Error: data error: incorrect header check     } }); </code></pre> <p>In JavaScript, it returns &quot;Incorrect header check&quot; error. How should I compress the data in Python to obtain the same value of zlib.inflate() in JavaScript?</p>"	44086070	"<p>You are passing a string to <code>zlib.inflate</code> in your javascript code, but it expects a <code>Buffer</code> instance.  </p>  <pre><code>var data = Buffer.from('eJwLSS0uUSguKcrMSwcAGWAEWA==', 'base64')  zlib.inflate(data, function(err, buffer) {      if (!err) {        console.log(buffer.toString());      } else {        console.log(err);      }  })  Test string </code></pre>"
43441408	How To Fill A Javascript Form Using Selenium In Python?	python|selenium	2017-04-16 19:47:29.460000 UTC	"<p>I'm trying to fill out a form with Selenium. I originally used requests but was told that requests does not handle Javascript form filling in this context. Essentially what my issue is finding the actual input id: of the form itself so I can insert that data and submit it (code below) I am not familiar with Selenium but have managed to read documentation and figure out a few things along the way. For this i'm going to use hotwire.com So I need to find the form input id: if you got to hotwire.com you will see ""Destination"", ""check-in"" , ""check-out"" along with number of guests an finally the big red "" Find A Hotel"" button. So what is Destination ID? what is Check-in ID what is Check-out ID ? this is the only thing stumping me at this point along with how to actually use these the process. How do you guys find the correct input id thats appropriate when filling out a form using a web inspector? I have spent hours trying to find the correct tags and still have no luck as I watch the browser open, load page, and fill no data in.</p>  <pre><code>import selenium from selenium import webdriver from selenium.common.exceptions import NoSuchElementException    hotwireF = ""https://www.hotwire.com""  # Use Safari to open URL driver = webdriver.Safari() # go to URL driver.get(hotwireF)      search_form = driver.find_element_by_id(""destination"") search_form.send_keys(""POP"") </code></pre>"	43492975	"<pre><code>import selenium from selenium import webdriver from selenium.common.exceptions import NoSuchElementException    hotwireF = ""https://www.hotwire.com/hotels/results/""  # data to be changed accordingly... data = {""destination""   :   ""London"",         ""startDate""     :   ""09-08-2017"",         ""endDate""       :   ""09-09-2017"",         ""No. rooms""     :   ""1"",         ""No. Adults""    :   ""2"",         ""No. Children""  :   ""1""}  # Use Safari to open URL driver = webdriver.Safari() # go to URL driver.get(hotwireF + """".join([data[i]+""/"" for i in data])) </code></pre>"
43444845	Extracting Javascript Variable Object Data in Python and Beautiful Soup Web Scraping	javascript|python|beautifulsoup|python-requests	2017-04-17 03:46:11.510000 UTC	"<p>I can currently scrape Javascript data from a post request I sent using  requests then Soup. But I only want to scrape the product plu, sku, description and brand. I am struggling to find a way in which I can just print the data I need rather then the whole script. This is the text that is printed after I extract the script using soup. I will be scraping more than one product from multiple post requests, so the chunk idea is not really suitable.</p>  <pre><code>&lt;script type=""text/javascript""&gt; var dataObject = {  platform: 'desktop', pageType: 'basket', orderID: '', pageName: 'Basket', orderTotal: '92.99', orderCurrency: 'GBP', currency: 'GBP', custEmail: '', custId: '', items: [                  {                           plu: '282013',                         sku: '653460',                     category: 'Footwear',                      description: 'Mayfly Lite Pinnacle Women&amp;#039;s',                      colour: '',                      brand: 'Nike',                      unitPrice: '90',                      quantity: '1',                      totalPrice: '90',                      sale: 'false'                 }                                                       ]  }; </code></pre>  <p></p>  <p>As you can see it is far too much information. </p>"	43444936	"<p>How about this: </p>  <ol> <li>You assign the captured text to a new multiline string variable called ""chunk""</li> <li>Make a list of keys you are looking for</li> <li><p>Loop over each line to check if the line has a term that you want, and then print out that term:</p>  <pre><code>chunk = ''' &lt;script type=""text/javascript""&gt; var dataObject = { .........blah blah.......   plu: '282013',   sku: '653460',   category: 'Footwear',   description: 'Mayfly Lite Pinnacle Women&amp;#039;s',   colour: '',   brand: 'Nike',   ..... blah .......   };'''  keys = ['plu', 'sku', 'description', 'brand']  for line in chunk.splitlines():   if line.split(':')[0].strip() in keys:     print line.strip() </code></pre></li> </ol>  <p>Result:</p>  <pre><code>plu: '282013', sku: '653460', description: 'Mayfly Lite Pinnacle Women&amp;#039;s', brand: 'Nike', </code></pre>  <p>You could obviously clean up the result using similar applications of <code>split</code>, <code>strip</code>, <code>replace</code>, etc.</p>"
43485993	"Regex works on PCRE, and Python, but not on Javascript"	javascript|regex	2017-04-19 03:47:27.397000 UTC	"<p>The following regex works on PCRE, &amp; Python but not on Javascript.</p>  <pre><code>/(?s)\/\*\*\*\/\s\(function\(module,\sexports\)\s\{(.*?)\}\)\,/g </code></pre>  <p>It seems that Javascript does not recognize <code>(?s)</code>. Is there a Javascript equivalent for this?</p>  <p><a href=""https://regex101.com/r/IjWLqp/1"" rel=""nofollow noreferrer"">https://regex101.com/r/IjWLqp/1</a></p>"	43486136	"<p><code>(?s)</code> enables the <code>s</code> regex flag for the remainder of the pattern, which means that the <code>.</code> matches any character at all, instead of its default behavior of matching any character <em>except</em> newline. However, JavaScript, besides not supporting <code>(?flags)</code>, doesn't have an <code>s</code> flag to begin with. Instead, we can replace the <code>.</code> pattern with <code>[^]</code> (the negation of an empty character class), which has the same effect of matching any character at all.</p>  <p>The overall pattern is then</p>  <pre><code>/\/\*\*\*\/\s\(function\(module,\sexports\)\s\{([^]*?)\}\)\,/g </code></pre>"
43509593	Execute Python script with time delay using JavaScript	javascript|python	2017-04-20 03:17:08.720000 UTC	"<p>I wanted to execute a Python script through a JavaScript file because I would like to print results from a python script into an html page. I started by looking into the <code>python-shell</code> module. I followed this tutorial:</p>  <p><a href=""http://ourcodeworld.com/articles/read/286/how-to-execute-a-python-script-and-retrieve-output-data-and-errors-in-node-js"" rel=""nofollow noreferrer"">http://ourcodeworld.com/articles/read/286/how-to-execute-a-python-script-and-retrieve-output-data-and-errors-in-node-js</a></p>  <p>I was successfully able to follow the tutorial and everything worked correctly. </p>  <p>However, I would now like to print out some numbers in the console with a time delay. My Python script contains the following code:</p>  <pre><code>while True:     print(random.randint(1,101))     time.sleep(10) </code></pre>  <p>When I run my JavaScript code, nothing happens. I did some debugging and removed the <code>time.sleep()</code> statement and it works.</p>  <p>What is the correct way to do this? Why does this work when I remove <code>time.sleep()</code>?</p>"	43510653	"<p>You need to flush the standard output stream in your python script after printing.</p>  <pre><code>import sys  while True:     print(random.randint(1,101))     sys.stdout.flush()     time.sleep(10) </code></pre>"
43540445	want to call python api in my javascript code. I just want to check that how hello world is called from python and printed in javascript	javascript|python|html|ajax|api	2017-04-21 10:33:09.503000 UTC	"<p>This is my python code and I want to display it on my html code page layout through button I just want to check that how it is called in javascript. </p>  <pre><code>print(""hello world"")    (savelist.py) </code></pre>  <p>And this is my html javascript file</p>  <pre><code>&lt;html&gt;`&lt;html&gt;` &lt;head&gt; hjgkhkj &lt;/head&gt;`enter code here` &lt;body&gt;   &lt;input type=""text"" name=""name"" id=""name""&gt; &lt;button type=""button"" id=""home"" onclick=""validate()"" value=""checkvalue""&gt; &lt;script&gt; $('#id').click(function(){   $.ajax({       type:'get',       url:&lt;YOUR SERVERSIDE PAGE URL&gt;,       cache:false,       data:&lt;if any arguments&gt;,       async:asynchronous,       dataType:json, //if you want json       success: function(data) {         &lt;put your custom validation here using the response from data structure &gt;       },       error: function(request, status, error) {         &lt;put your custom code here to handle the call failure&gt;       }    });enter code here }); &lt;/script&gt; &lt;/body&gt; &lt;/html&gt; </code></pre>"	43547946	"<p>The python file wont send anything back on its own. You need to provide a way to process the Ajax requests within the python file and return a JSON response, if thats what you are after. I dunno what kind of set up you have or are looking for so I dunno what else to advise. </p>  <p>Here's a link to requests docs -> <a href=""http://docs.python-requests.org/en/master/"" rel=""nofollow noreferrer"">http://docs.python-requests.org/en/master/</a></p>"
43555376	"Need help understanding file uploads in Python Flask, w/ and w/o Javascript + Ajax"	javascript|python|ajax|file-upload|flask	2017-04-22 04:52:41.327000 UTC	"<p>I am writing a webapp that lets the user upload photos, and then returns data about those photos to the front end to trigger some activity.</p>  <p>I started this off using a tutorial/guide I found online, <a href=""http://code.runnable.com/UiPcaBXaxGNYAAAL/how-to-upload-a-file-to-the-server-in-flask-for-python"" rel=""nofollow noreferrer"">here</a></p>  <p>I was however very surprised to find that this worked without javascript. I do not understand how pressing the button sends a request for there to be a pop-up window asking to select a file. How does it know that the button is for file uploading? No where in the HTML do I give it an obvious attribute that tells it to upload a file, and nowhere in python/Flask do I select the button used for uploading.</p>  <p>I also noticed, to my surprise, that in the example given, the route MUST be called ""/upload"" to work. Again, I can not see where any of this is defined or where I could change it. The only files used for the demo on that link (which is the basis of my webapp) are app.py and index.html (the setup.py file does not seem to be needed to run the webserver)</p>  <p>As my webapp has progressed, I tried to add a javascript file that would take a response from the /uploads route and display it on the front end, but soon ran into trouble. It seems I can only run /uploads from whatever mysterious force is currently running it. My javascript can't access it, and so I have no way of getting the response into JS so that I can display it on the front end in the way I want.</p>  <p><strong>Can someone help me understand how the file upload server in the link works, so that I can modify it to work with my JavaScript?</strong></p>  <p>Please note that my webapp is basically just the program in that link with a bunch of analysis done on the files that are uploaded. The only change I made in terms of how the webapp works is that instead of redirecting you to the uploaded file, it should return a string with information on that file.</p>  <p>I don't feel it is worth posting too much of my python and HTML code, since all the important stuff is in that link, but the javascript file is below.</p>  <pre><code>    ""use strict"";  var main = function() {     console.log(""i am functioning!"")      var show_similar_img = function(){         //Read megastatus         $.ajax({                 method: ""GET"",                 url: ""/upload"",                 // contentType: 'application/json',                 dataType: ""string""         })         .done(function(media_info){             console.log(media_info)         });     }      $(""#upload-btn"").on(""click"",function(){         console.log(""button pressed!"")         show_similar_img()     }) }  console.log(""i am being run!"") $(document).ready(main); </code></pre>"	43555621	"<p>The <code>&lt;input&gt;</code> element's <code>type</code> attribute is <code>file</code>, which is how the browser knows how to handle it in the particular way that it does--as you noticed, by opening a pop-up modal window which prompts the user to select a file.</p>  <p>The route has to be called <em>upload</em> because the <code>&lt;form&gt;</code> element's <code>action</code> attribute value is also called <em>upload</em>. You could change the name of the route if you also changed the action of the form. </p>  <p>You can in fact access file information (for a file associated with the input element) using JavaScript thanks to the File API. Mozilla Developer Network has an excellent guide for it: <a href=""https://developer.mozilla.org/en-US/docs/Using_files_from_web_applications"" rel=""nofollow noreferrer"">https://developer.mozilla.org/en-US/docs/Using_files_from_web_applications</a></p>  <p>With regards to your actual implementation: first, you'll also want to prevent your form submission from being handled in the 'regular' (synchronous) way, so you'll need to call <code>preventDefault</code> on the event:</p>  <pre><code>$(""#upload-btn"").on(""click"",function(event) {     event.preventDefault();     console.log(""button pressed!"")     show_similar_img()  }) </code></pre>  <p>Second, I am assuming that you want to actually send the file to the server (run on Python/Flask), so you want your AJAX request to be a POST rather than a GET. Therefore you'll need to modify your <code>show_similar_img</code>, to send the request as a POST and also to include the file in the data of the request, using the aforementioned File API. Something like this:</p>  <pre><code>var show_similar_img = function(){     var formData = new FormData();     var file = $(""input[type='file']"")[0].files[0];     formData.append(""file"", file);      $.ajax({         url : ""/upload"",         type : ""POST"",         data : formData,         contentType: false,         processData: false     })     .done(function(media_info){         console.log(media_info)     });  } </code></pre>  <p>Edit--I should add that I'm not really familiar with Flask or the intricacies of its <code>request</code> object. I assume that regardless of whether the file is uploaded as part of a form submission or asynchronous request that it would still be accessible at <code>request.files['file']</code>, but it is possible that Flask doesn't make asynchronously uploaded files available in the <code>request.files</code> dictionary. I am very sure, though, that the file would be accessible <em>somewhere</em> on the <code>request</code> object, so you may need to refer to the Flask documentation. You could also use <code>pdb</code> to add a breakpoint in your server-side code and inspect the <code>request</code> object to see what it holds (and where it holds it).</p>"
43616152	Avoiding JavaScript to use python on HTML with RaspberryPI (WebIO Pi Server)	javascript|python|html|cgi|raspberry-pi3	2017-04-25 16:24:56.500000 UTC	"<p>I am running a personal website and learning basic HTML. I am quite familiar with Python, can connect to database, read of values from sensors and much more, Thus I would like to stick with a language that I know enough. My question is how to tackle the HTML part. Let's say I want to print a value from my database (MySQL) directly on to the webpage. In my case it would be the value of temperature in my room. I know the right way would be to go with JavaScript and connect to the database and link it in the HTML index file, but its really not my area of expertise and to learn a whole new language. What I could do is write a python script to read the MySQL data off, and store it in a variable or even a text file.</p>  <p>What would be the best way to approach such an issue? Can we run or trigger python scripts in HTML? How would we be passing the values between the python program and the HTML?</p>  <p>For the server I'm running WebIOPi, and for the database I'm running MySQL. I can already connect and write to it and also read it back with the python script. Only if I can pass these values to my webpage would really be awesome!</p>  <p>I did manage to find CGI (Common Gateway Interface) for such purpose but couldn't really figure out how to utilize it or how it would allow me to pass variables between the python and HTML.</p>  <p>Any short example or direction would be greatly appreciated!</p>"	43634821	"<p>It's time to learn a web framework !</p>  <p>I would recommand Flask, and <a href=""https://blog.miguelgrinberg.com/post/the-flask-mega-tutorial-part-i-hello-world"" rel=""nofollow noreferrer"">this awewome tutorial</a>.</p>  <p>Install it with :</p>  <pre><code>$ pip install Flask </code></pre>  <p>Here's a very short example.</p>  <pre><code>from flask import Flask app = Flask(__name__)  @app.route('/') def hello_world():     return '&lt;h1&gt;Hello, World!&lt;/h1&gt;' </code></pre>  <p>Run it with :</p>  <pre><code>$ export FLASK_APP=hello.py $ flask run </code></pre>  <p>If you're on Windows, use <code>set</code> instead of <code>export</code>.</p>  <p>If ths <code>flask</code> command does want to work, try</p>  <pre><code>$ python -m flask run </code></pre>  <p>instead.</p>"
43645790	Passing Javascript Variable to Python Flask	javascript|python|html|flask|request	2017-04-26 22:48:08.787000 UTC	"<p>I have read several postings on different examples for passing a javascript variable to flask through post/get forms. I still don't understand how to do this. From my understanding, the form creates a post/get that can then be called and received by the python flask script. Can someone write up a very simple example on what this should look like?</p>  <p>Starting from creating a variable with any value in javascript and then making the post/get. Lastly what should the receiving end on python should look like and finally print the variable from python.</p>"	43646382	"<p>How I did this was using an ajax request from the javascript which would look something like this. I think the easiest way would be using JQuery as well since it might be a bit more verbose with pure javascript.</p>  <pre><code>// some movie data var movies = {     'title': movie_title,     'release_date': movie_release_date     }  $.ajax({ url: Flask.url_for('my_function'), type: 'POST', data: JSON.stringify(movies),   // converts js value to JSON string }) .done(function(result){     // on success get the return object from server     console.log(result)     // do whatever with it. In this case see it in console }) </code></pre>  <p>Flask.url requires JSGlue which basically let's you use Flask's  url_for but with javascript. Look it up, easy install and usage. Otherwise I think you could just replace it with the url e.g '/function_url'</p>  <p>Then on the server side you might have something like this:</p>  <pre><code>from flask import request, jsonify, render_template import sys  @app.route(""/function_route"", methods=[""GET"", ""POST""]) def my_function():     if request.method == ""POST"":         data = {}    // empty dict to store data         data['title'] = request.json['title']         data['release_date'] = request.json['movie_release_date']         // do whatever you want with the data here e.g look up in database or something        // if you want to print to console          print(data, file=sys.stderr)          // then return something back to frontend on success          // this returns back received data and you should see it in browser console         // because of the console.log() in the script.         return jsonify(data)     else:         return render_template('the_page_i_was_on.html') </code></pre>  <p>I think the main points are to look up ajax requests in jquery, flask's request.json() and jsonify() functions.</p>  <p>Edit: Corrected syntax</p>"
43653392	Javascript auth similar to Python auth?	javascript|angular|typescript	2017-04-27 09:09:05.807000 UTC	"<p>I am trying to get data from a rest api call and with python request and it is working. How can I do similar in JavaScript and Typescript? I will need it in my Angular2 application.</p>  <p><strong>Working Python script</strong>     import requests</p>  <pre><code>url = ""restapi""  r = requests.post(url,  auth=('user', 'password')) print(r.text) </code></pre>"	43653705	"<p>You need to use http (provided with RxJS)</p>  <p>Your import:</p>  <p><code>import { Http } from '@angular/http';</code></p>  <p>Injected in your constructor:</p>  <p><code>constructor(public http: Http) {}</code></p>  <p>Your rest request method:</p>  <pre><code>login(user:User,onNext: (response) =&gt; void) {     this.http         .post(BASE_URL+""/login"",user)         .map(response =&gt; response.json())         .subscribe(onNext,(e)=&gt; console.error(`${e}`)); } </code></pre>  <p>Note1: User is a typed json with just <code>{user:string, password:string}</code></p>  <p>Note2: Please consider to do all the above in a <code>@Injectable()</code> Provider/Service, and the next step in your component (for beginning you can make everything in the same class)</p>  <p>Then use it like this</p>  <pre><code>login(myUserJson,(result)=&gt;{      console.log(result);      //proceed!... }) </code></pre>"
43658026	Calling python script from javascript	javascript|python	2017-04-27 12:37:29.597000 UTC	"<p>I have the following html code (index.html):</p>  <pre><code>&lt;!DOCTYPE html&gt; &lt;html&gt; &lt;head&gt;           &lt;script&gt;         function addParagraphText()         {         var arg1=2         var arg2=34         var arg3=""john""         var myResult = runMe.py(arg1, arg2, arg3)                 document.getElementById(""para"").innerHTML = myResult         }         &lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;button onclick=""addParagraphText();""&gt;Click me&lt;/button&gt; &lt;p id=""para""&gt;&lt;/p&gt; &lt;/html&gt; </code></pre>  <p>and the following python file runMe.py:</p>  <pre><code>import sys  myArg1 = sys.argv[1] myArg2 = sys.argv[2] myArg3 = sys.argv[3] # some long calculations using various libraries and modules    myOutput = '''&lt;table style=\""border:solid;\""&gt;&lt;tr&gt;&lt;td&gt; bla &lt;/td&gt;&lt;td&gt; lol bla &lt;button&gt;myButton&lt;/button&gt; &lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt; blabla &lt;/td&gt;&lt;td&gt; blablabla &lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;'''  return myOutput </code></pre>  <p>Obviously it doesn't work. What would be the easiest and quickest way to do it? I have a very long Python script that does some calculations and outputs a rather long string in html format which I would like to present after user clicks on the button. As of now, I do not need a state of the art approach, I am rather looking for a fast and easy solution.</p>"	43658132	"<p>In short: JavaScript in a html page executed by a browser cannot start the python interpreter and cannot run python scripts.</p>  <p>Browser security will prevent this.</p>  <p>You'll have to use something like XHR and cgi like in <a href=""https://stackoverflow.com/questions/23355220/post-data-to-cgi-file-using-xmlhttprequest-causes-badheader"">this question</a>. The first answer seems to be a complete example. Otherwise <a href=""http://uwsgi-docs.readthedocs.io/en/latest/WSGIquickstart.html"" rel=""nofollow noreferrer"">try wsgi python</a>.</p>"
43672788	Call Python function from javascript inside client application	javascript|python	2017-04-28 05:43:04.100000 UTC	"<p>Is there any such library available which allow to run python code or any executable binary on the client machine using JavaScript. I have a strange scenario. All client machine use a web application hosted on a server, but authentication should be done using a device in the client machine using ttyUSB0 interface. Since it is not possible for a web application to access client machine, is it possible to create a client application using library like Pywebview which will allow to call that library directly from the web application using Javascript.</p>"	43673110	<p>Can you not call a specific page of your web application (assuming your web application uses some web framework developed in python) via ajax with javascript and does this page execute a Python function (under the table)?</p>
43747770	CEF Python ExecuteJavascript will not set value of a input element	javascript|python|chromium-embedded|cefpython	2017-05-02 21:47:40.577000 UTC	"<p>When I try <strong><em>browser.ExecuteJavascript(""alert('ExecuteJavaScript works!');"")</em></strong> it works fine (pops up a alert when the browser is created). When I try <strong><em>browser.ExecuteJavascript(""document.getElementsByName('q')[0].value = 24;"")</em></strong> nothing happens. So I know that ExecuteJavascript is working but how come when I try to set a value of an input element, the input element doesn't change? The code I am trying is below if anyone has an idea as for why that particular Javascript will not execute I would be very grateful.</p>  <pre><code>from cefpython3 import cefpython as cef import platform import sys  def main():     sys.excepthook = cef.ExceptHook     cef.Initialize()     browser = cef.CreateBrowserSync(url=""https://www.google.com"", window_title=""Hello World!"")     browser.ExecuteJavascript(""document.getElementsByName('q')[0].value = 24"")     cef.MessageLoop()     cef.Shutdown()  if __name__ == '__main__':     main() </code></pre>"	43751925	"<p>DOM is not yet ready after the browser was just created. Open Developer Tools window using mouse context menu and you will see the error. You should use LoadHandler to detect when window finishes loading of web page or when DOM is ready. Options:</p>  <ol> <li>Implement LoadHandler.OnLoadingStateChange:</li> </ol>  <pre><code>     main():         browser.SetClientHandler(LoadHandler())      class LoadHandler(object):         def OnLoadingStateChange(self, browser, is_loading, **_):             if not is_loading:                 browser.ExecuteJavascript(""document.getElementsByName('q')[0].value = 24"") </code></pre>  <ol start=""2""> <li>Implement LoadHandler.OnLoadStart and inject js code that adds an event listener DOMContentLoaded that will execute the actual code.</li> </ol>  <p>See Tutorial > Client handlers:  <a href=""https://github.com/cztomczak/cefpython/blob/master/docs/Tutorial.md#client-handlers"" rel=""noreferrer"">https://github.com/cztomczak/cefpython/blob/master/docs/Tutorial.md#client-handlers</a></p>  <p>See also API reference for LoadHandler.</p>"
43750676	How to get a HTML table that shows after javascript executes with selenium in python	javascript|python|html|selenium|beautifulsoup	2017-05-03 03:43:08.857000 UTC	"<p>So I have this website: <a href=""https://www.rad.cvm.gov.br/ENETCONSULTA/frmGerenciaPaginaFRE.aspx?NumeroSequencialDocumento=60695&amp;CodigoTipoInstituicao=2"" rel=""nofollow noreferrer"">https://www.rad.cvm.gov.br/ENETCONSULTA/frmGerenciaPaginaFRE.aspx?NumeroSequencialDocumento=60695&amp;CodigoTipoInstituicao=2</a></p>  <p>which I'm scrapping to get public info on companies. I've managed to write so far:</p>  <pre><code>driver = webdriver.Chrome() driver.implicitly_wait(5) base_url = urls[0] # which is equal to the above url driver.get(base_url) driver.find_element_by_id(""ctl00_cphPopUp_cmbQuadro_cmbQuadro_Input"").click() driver.find_element_by_id(""ctl00_cphPopUp_cmbQuadro_cmbQuadro_c0"").click() driver.find_element_by_id(""ctl00_cphPopUp_cmbQuadro_cmbQuadro_Input"").send_keys(u""Balanço Patrimonial Ativo"") </code></pre>  <p>if you inspect the code on the webpage, it shows the id for the table shown is 'ct100_cphPopUp', however </p>  <pre><code>driver.page_source </code></pre>  <p>doesn't have this id. What am I getting wrong and how can I read that table? I guess it appears after a javascript is ran, but I'm not sure of that. If so, how can I know what is the script to do a driver.execute_script() ?</p>  <p>Thanks in advance!</p>"	43772885	"<p>Thanks, but after a while I found a solution! I was able to do it by using</p>  <pre><code>driver.switch_to_frame(0) </code></pre>  <p>Pretty simple, isn't it? Happens that the table was not in the HTML (inner, outer, or w/e) but in a separate 'frame'. Although I don't know exactly what this means, it might help others :)</p>"
43753528	Selenium and Python: explicit wait for postback in select (wait for Javascript with Selenium)	javascript|python|selenium-webdriver	2017-05-03 07:15:27.823000 UTC	"<p>I am trying to select various elements of a list, working with Python and Selenium. The <code>&lt;select&gt;</code>class comes with a <code>Postback</code>in Javascript like: </p>  <pre><code>onchange=""javascript:setTimeout('__doPostBack(\'dum1$dum2$dum3$ListBoxThingsToSelect\',\'\')', 0)"" </code></pre>  <p>When I try to select a value with Selenium, it only works for the first value and then the DOM changes and I am getting a <code>StaleElementReferenceException: Element is no longer attached to the DOM</code>error. </p>  <p>Thus I try to wait for the element to become available before clicking on it. I do this with the following code and the Expected Conditions (EC):</p>  <pre><code>for row in vals_deselect:     elem1 = WebDriverWait(browser, 100).until(EC.element_to_be_clickable((             By.XPATH, ""/html/body/form/div[11]/div[2]/fieldset/center/table/tbody/tr[3]/td[3]/select[2]/option["" + str(row) + ""]"")))     elem1.click() </code></pre>  <p>This sometimes works for selecting more than 1 values but at some point either fails to click (the value is not clicked on) or results again in a <code>StaleElementReferenceException: Element is no longer attached to the DOM</code>error. Could anybody help? My theory is that the select element is located and clickable, but the page continues to load because there are more select elements to be loaded. Thus the DOM changes and when I try <code>elem1.click()</code>the DOM has changed.</p>  <p>How could I wait for the entire field to be loaded?  What exactly does the <code>postback</code>do?  I can unfortunately not post a link to the page, it is internal. </p>  <p><strong>EDIT1</strong></p>  <p>The <code>vals_deselect</code>is as list of indices of the indices I want to deselect. These indices do then get pasted into the <code>XPATH</code>in the loop to select the specific option from the select. <code>vals_deselect = [1, 4, 5, 7, 9, 12]</code></p>  <p><strong>EDIT2</strong> I have also tried the following: </p>  <pre><code>print(""jQuery.active: "" + str(browser.execute_script(""return jQuery.active""))) print(""readyState: "" + browser.execute_script(""return document.readyState"")) WebDriverWait(browser, 100).until(EC.element_to_be_clickable((By.XPATH,              ""/html/body/form/div[11]/div[2]/fieldset/center/table/tbody/tr[3]/td[3]/select[2]/option["" + str(row)+ ""]""))).click() </code></pre>  <p>It always shows that the <code>jquery.active</code>is 0 and the <code>readyState</code>is <code>complete</code>. I am getting desperate to solve this. I thought by checking the <code>readyState</code>and <code>jquery.active</code> I could check for the postback to be done. Any ideas by anyone?</p>  <p>The postback is looking exactly like on this page: <a href=""http://aspalliance.com/articleViewer.aspx?aId=895&amp;pId=-1"" rel=""nofollow noreferrer"">http://aspalliance.com/articleViewer.aspx?aId=895&amp;pId=-1</a> I need to wait for it to be done but how do I do this?</p>"	43754077	"<p>Try this,</p>  <pre><code>from selenium.webdriver.common.action_chains import ActionChains  for row in vals_deselect:         while not browser.execute_script(""return document.readyState"")== ""complete"":             continue         else:             WebDriverWait(browser, 100).until(EC.element_to_be_clickable((                 By.XPATH, ""/html/body/form/div[11]/div[""                           ""2]/fieldset/center/table/tbody/tr[3]/td[3]/select[""                           ""2]/option["" + str(row) + ""]"")))             ActionChains(browser).move_to_element(elem1).click().perform() </code></pre>"
43753528	Selenium and Python: explicit wait for postback in select (wait for Javascript with Selenium)	javascript|python|selenium-webdriver	2017-05-03 07:15:27.823000 UTC	"<p>I am trying to select various elements of a list, working with Python and Selenium. The <code>&lt;select&gt;</code>class comes with a <code>Postback</code>in Javascript like: </p>  <pre><code>onchange=""javascript:setTimeout('__doPostBack(\'dum1$dum2$dum3$ListBoxThingsToSelect\',\'\')', 0)"" </code></pre>  <p>When I try to select a value with Selenium, it only works for the first value and then the DOM changes and I am getting a <code>StaleElementReferenceException: Element is no longer attached to the DOM</code>error. </p>  <p>Thus I try to wait for the element to become available before clicking on it. I do this with the following code and the Expected Conditions (EC):</p>  <pre><code>for row in vals_deselect:     elem1 = WebDriverWait(browser, 100).until(EC.element_to_be_clickable((             By.XPATH, ""/html/body/form/div[11]/div[2]/fieldset/center/table/tbody/tr[3]/td[3]/select[2]/option["" + str(row) + ""]"")))     elem1.click() </code></pre>  <p>This sometimes works for selecting more than 1 values but at some point either fails to click (the value is not clicked on) or results again in a <code>StaleElementReferenceException: Element is no longer attached to the DOM</code>error. Could anybody help? My theory is that the select element is located and clickable, but the page continues to load because there are more select elements to be loaded. Thus the DOM changes and when I try <code>elem1.click()</code>the DOM has changed.</p>  <p>How could I wait for the entire field to be loaded?  What exactly does the <code>postback</code>do?  I can unfortunately not post a link to the page, it is internal. </p>  <p><strong>EDIT1</strong></p>  <p>The <code>vals_deselect</code>is as list of indices of the indices I want to deselect. These indices do then get pasted into the <code>XPATH</code>in the loop to select the specific option from the select. <code>vals_deselect = [1, 4, 5, 7, 9, 12]</code></p>  <p><strong>EDIT2</strong> I have also tried the following: </p>  <pre><code>print(""jQuery.active: "" + str(browser.execute_script(""return jQuery.active""))) print(""readyState: "" + browser.execute_script(""return document.readyState"")) WebDriverWait(browser, 100).until(EC.element_to_be_clickable((By.XPATH,              ""/html/body/form/div[11]/div[2]/fieldset/center/table/tbody/tr[3]/td[3]/select[2]/option["" + str(row)+ ""]""))).click() </code></pre>  <p>It always shows that the <code>jquery.active</code>is 0 and the <code>readyState</code>is <code>complete</code>. I am getting desperate to solve this. I thought by checking the <code>readyState</code>and <code>jquery.active</code> I could check for the postback to be done. Any ideas by anyone?</p>  <p>The postback is looking exactly like on this page: <a href=""http://aspalliance.com/articleViewer.aspx?aId=895&amp;pId=-1"" rel=""nofollow noreferrer"">http://aspalliance.com/articleViewer.aspx?aId=895&amp;pId=-1</a> I need to wait for it to be done but how do I do this?</p>"	43865753	"<p>If the <code>&lt;select&gt;</code> is refreshed after each time you choose an option you can use the <code>expected condition</code> <a href=""http://selenium-python.readthedocs.io/api.html#selenium.webdriver.support.expected_conditions.staleness_of"" rel=""nofollow noreferrer"">staleness_of</a>. You should also use the <a href=""http://selenium-python.readthedocs.io/api.html#module-selenium.webdriver.support.select"" rel=""nofollow noreferrer"">Select</a> to choose an option from <code>&lt;select&gt;</code> tag</p>  <pre><code>for row in vals_deselect:     selectElement = driver.find_element_by_xpath(""/html/body/form/div[11]/div[2]/fieldset/center/table/tbody/tr[3]/td[3]/select[2]"")     Select(selectElement).deselect_by_index(row)     WebDriverWait(browser, 100).until(EC.staleness_of(selectElement)) </code></pre>  <p>As a side note, you should avoid using absolute path in your <code>xpath</code>. Try to find unique identifier for the element you are looking for as as close as possible in the html hierarchy.</p>  <p><strong>Update</strong></p>  <p>To answer the questions in the comments </p>  <p><em>Could you please explain to me how this works? Does the fact that the element becomes stale mean that the post back has finished? Also, could you please explain what you meant by your comment about the <code>xpath</code>?</em></p>  <p><code>WebElement</code> become stale when it refreshed or changed, which means there is a new element even if it looks exactly the same (like in your case) or deleted. It can happen when the entire DOM is refreshed or changed or just a specific element. <code>EC.staleness_of</code> will wait until an element is no longer attached to the DOM or until the defined time is up.</p>  <p>There are several reasons not to use absolute <code>xpath</code>. Performance (much slower than relative <code>xpath</code> or methods like <code>find_element_by_id</code>), readability and fragility (imagine someone adds a <code>&lt;div&gt;</code> tag before the <code>&lt;table&gt;</code>. Absolute <code>xpath</code> will fail, relative will still work). </p>"
43812514	Javascript equivalent to python __init__.py	javascript|package	2017-05-05 19:30:58.253000 UTC	"<p>In python, in order to expose top-level functionality in a package, one would create an <code>__init__.py</code></p>  <pre><code>#__init__.py from .implmentation import impl_function  def exposed_fn():    """"""call impl_function </code></pre>  <p>Which would expose <code>exposed_fn</code> as the main function to use when importing a directory (package). What's the equivlalent of this in javascript's <code>require</code>?</p>  <p>Obviously you can do the following.</p>  <pre><code>//init.js? var impl_function = require('./implmentation.js').impl_function;  var exposed_fn = function () {//call impl_function ...};  //Will expose `exposed_fn` when requiring this file. module.exports = {   exposed_fn: exposed_fn }  //How to expose `expose_fn` when requiring a this folder????? </code></pre>  <p>Is there an equivalent? All searches so far haven't proved fruitful.</p>"	44073022	<p>Using an <code>index.js</code> file in the same manner seems to work. If you export objects from an <code>index.js</code> file they can be accessible at the folder level.</p>
43813252	Javascript event that triggers python script	javascript|php|python|html|django	2017-05-05 20:25:40.527000 UTC	"<p>I have a python script that generates a QR code (saved as a .png) and a webpage. I am trying to make a javascript button trigger the python script to generate an image, and replace the filler image I have on the HTML page.</p>  <p>Process:</p>  <p>User clicks button --> python script runs --> python returns QR code to webpage</p>  <p>Heres the sample HTML:</p>  <pre class=""lang-html prettyprint-override""><code>&lt;html&gt;     &lt;body&gt;         &lt;img id=""qrcode_container"" src=""assets/filler_image.png"" width=""35%""&gt;         &lt;p&gt;&lt;/p&gt;         &lt;button onclick=""document.getElementById('qrcode_container').src=             'assets/sampleQR.png'""&gt;Generate Code&lt;/button&gt;     &lt;/body&gt; &lt;/html&gt; </code></pre>  <p>But this simply replaces the image with a pre-made one.</p>  <p>Here is the python code:</p>  <pre class=""lang-py prettyprint-override""><code>import pyqrcode, uuid, png uuid_raw = uuid.uuid4() uuid_string = str(uuid_raw) print(real_code) qrImage = pyqrcode.create(uuid_string) qrImage.png(uuid_string+'.png', scale=16) </code></pre>  <p>So ideally I would like to have the button on the webpage trigger the script to run, then replace the filler image on the webpage with the new QR code, as well as return the UUID. I've checked out frameworks like Django and Flask, but they seem overkill for a webpage I'm only using to generate an image. Should I use PHP to trigger the event?</p>"	43813373	"<p>Just point the new <code>src</code> of your image at the your python script. Assuming your script returns an image.</p>  <pre><code>&lt;html&gt; &lt;body&gt;     &lt;img id=""qrcode_container"" src=""assets/filler_image.png"" width=""35%""&gt;     &lt;p&gt;&lt;/p&gt;     &lt;button onclick=""document.getElementById('qrcode_container').src=         '***PATH TO PYTHON SCRIPT HERE***'""&gt;Generate Code&lt;/button&gt; &lt;/body&gt; </code></pre>  <p></p>"
43813252	Javascript event that triggers python script	javascript|php|python|html|django	2017-05-05 20:25:40.527000 UTC	"<p>I have a python script that generates a QR code (saved as a .png) and a webpage. I am trying to make a javascript button trigger the python script to generate an image, and replace the filler image I have on the HTML page.</p>  <p>Process:</p>  <p>User clicks button --> python script runs --> python returns QR code to webpage</p>  <p>Heres the sample HTML:</p>  <pre class=""lang-html prettyprint-override""><code>&lt;html&gt;     &lt;body&gt;         &lt;img id=""qrcode_container"" src=""assets/filler_image.png"" width=""35%""&gt;         &lt;p&gt;&lt;/p&gt;         &lt;button onclick=""document.getElementById('qrcode_container').src=             'assets/sampleQR.png'""&gt;Generate Code&lt;/button&gt;     &lt;/body&gt; &lt;/html&gt; </code></pre>  <p>But this simply replaces the image with a pre-made one.</p>  <p>Here is the python code:</p>  <pre class=""lang-py prettyprint-override""><code>import pyqrcode, uuid, png uuid_raw = uuid.uuid4() uuid_string = str(uuid_raw) print(real_code) qrImage = pyqrcode.create(uuid_string) qrImage.png(uuid_string+'.png', scale=16) </code></pre>  <p>So ideally I would like to have the button on the webpage trigger the script to run, then replace the filler image on the webpage with the new QR code, as well as return the UUID. I've checked out frameworks like Django and Flask, but they seem overkill for a webpage I'm only using to generate an image. Should I use PHP to trigger the event?</p>"	43813417	"<p>There can be a hacky solution where you can get Python and Javascript to communicate, but the best solution here, would be to implement a single endpoint and service requests in Python.</p>  <p>Yes, using Django or Flask would be an overkill, but using something like <a href=""https://falconframework.org/"" rel=""nofollow noreferrer"">Falcon</a> should suffice. Below is a sample Falcon program that would suffice.</p>  <pre><code># sample.py import falcon import json  class QRResource:     def on_post(self, req, resp, text):         # generate QR code at a destination         output = {             'path': 'path accessable by user',             'uuid': ""UUID HERE""         }          resp.body = json.dumps(quote)  api = falcon.API() api.add_route('/qr', QRResource()) </code></pre>"
43817676	Can't get javascript generated html using python	javascript|python|html|web-scraping	2017-05-06 06:57:26.007000 UTC	"<p>I'm trying to create a python script that automatically gets the content of a table on a webpage. I manage to have it to work on pure html page, but there is one website that gives me headache... The html seems to be generated by javascript. I tried dryscrape, selenium and qt4 libraries from examples found on several posts but still without success... I just get all the time the html before the javascript did his job.... so without tables.... I can see the table on the browser and when I do ""Inspect"" the html with Chrome. When I do ""View Page Source"" in Chrome the table is also not there... may be this can give some hints.</p>  <p>The website is the following:</p>  <p><a href=""https://www.ictax.admin.ch/extern/en.html#/security/CH0008899764/20161231"" rel=""nofollow noreferrer"">https://www.ictax.admin.ch/extern/en.html#/security/CH0008899764/20161231</a></p>  <p>Here is some code I tried out (no table tags in the answer if you check):</p>  <p>Using urlib2:</p>  <pre><code>import urllib2 url=""https://www.ictax.admin.ch/extern/en.html#/security/CH0008899764/20161231"" html = urllib2.urlopen(url) print html </code></pre>  <p>Using dryscrape:</p>  <pre><code>import dryscrape  session = dryscrape.Session() session.visit(url)  response = session.body() print response </code></pre>  <p>Using selenium:</p>  <pre><code>from selenium import webdriver driver = webdriver.Chrome(""/usr/lib/chromium/chromedriver"") driver.get(url) print driver.page_source #page_source fetches page after rendering is complete driver.quit() </code></pre>  <p>Using PyQt4</p>  <pre><code>import sys   from PyQt4.QtGui import *   from PyQt4.QtCore import *   from PyQt4.QtWebKit import *   from lxml import html   class Render(QWebPage):     def __init__(self, url):       self.app = QApplication(sys.argv)       QWebPage.__init__(self)       self.loadFinished.connect(self._loadFinished)       self.mainFrame().load(QUrl(url))       self.app.exec_()      def _loadFinished(self, result):       self.frame = self.mainFrame()       self.app.quit()   #This does the magic.Loads everything r = Render(url)   #result is a QString. result = r.frame.toHtml() #QString should be converted to string before processed by lxml formatted_result = str(result.toAscii()) print formatted_result </code></pre>  <p>I would appreciate so much if somebody could give me some help on this :-)</p>  <p>Cheers</p>"	43834711	"<p>Use an implicit wait (or an explicit one?) to wait for the page to load before searching for any elements:</p>  <pre><code>import selenium from selenium import webdriver driver = webdriver.PhantomJS() url = ""https://www.ictax.admin.ch/extern/en.html#/security/CH0008899764/20161231"" driver.get(url) driver.implicitly_wait(30) print(driver.find_element_by_tag_name(""table"").text) </code></pre>  <p>This is the output I am getting:</p>  <blockquote>   <p>Titel/Titres/Titoli W Nominell Valoren-Nr. Steuerwert Ertrag /   Rendement / Reddito 2016 M Valeur No de Val. imposable Datum / Date   Cp. W Brutto KG/KEP zu versteuernder V nominale valeur Val. imposible   Data M Brut Ertrag/Rendement Valore Numero di 31.12.2016 ex. zahlb. V   lordo imposable/Reddito nominale valore pay. imponible CHF (E) pag.   Fr.W. CHF CHF   iShares ETF (CH) - iShares SMI (R) (CH), Schweiz<br>   CHF 0.00 889 976 85.31 25.02. 29.02. 36 CHF     0.48<br>             03.03. 07.03. 37 CHF     0.48<br>             11.04. 13.04. 38 CHF     0.70<br>             19.07. 21.07. 40 CHF   0.88<br>             19.07. 21.07. 39 CHF     0.20</p> </blockquote>"
43933069	How to process POST data sent from Javascript to Python and return the output?	javascript|jquery|python|post	2017-05-12 08:35:23.873000 UTC	"<p>I'm not too familiar with python and how it should work with my code.  I'm trying to POST data to python script and get the return from it, but it seems the python script is not receiving it. I have tried to look here for various posts but still confused why this is not working as i want it to. Am I missing something?</p>  <p>My JS:</p>  <pre><code>var x=[1,1,2,2,3,3], y=[4,2,2,6,5,4];  function testArraytoJSON(){   var ourJSON = {'x':x,'y':y}     console.log(ourJSON);     $.post('test.py', JSON.stringify(ourJSON),function(data){       console.log(data);       console.log('returned');     },'json');   }; </code></pre>  <p>Here is the HTML:</p>  <pre><code>&lt;html&gt;  &lt;head&gt;   &lt;title&gt;PYthon Post Test&lt;/title&gt;   &lt;script src=""https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js""&gt;&lt;/script&gt;   &lt;script src='hello.js'&gt;&lt;/script&gt;  &lt;/head&gt;  &lt;body&gt;    &lt;button onclick=""testArraytoJSON()""&gt;HERE&lt;/button&gt;  &lt;/body&gt; &lt;/html&gt; </code></pre>  <p>The Python script:</p>  <pre><code>#!/usr/bin/python import sys, json, import numpy as np  # Feature scaling to range of 0-255 def scale(data):     data[:] = [(255*(x - min(data)) / (max(data) - min(data)) ) for x in data]     return(data)  def twoDColorPalette(x,y,greenValue=0):     if len(x) != len(y):         raise ValueError('x and y values needs to be the same length')     else:         x[:] = scale(x)         y[:] = scale(y)         return(np.column_stack( (x, [greenValue] * len(x), y) ) )  # Load the data that PHP sent us try:     data = json.loads(sys.argv[1])     x = data['x']     y = data['y']     twoDColorPalette(x, y)  except:     print ""ERROR""     sys.exit(1) </code></pre>"	43934826	"<p>You say in the comments that this is supposed to be run via CGI, but you haven't structured it as a CGI script at all. </p>  <p>CGI scripts don't read from command-line parameters; they take input via stdin, and Python provides the <a href=""https://docs.python.org/3/library/cgi.html#using-the-cgi-module"" rel=""nofollow noreferrer""><code>cgi.FieldStorage</code> class</a> for processing those parameters and accessing them via a dictionary-like interface.</p>  <p>Also, your script does nothing with the result of your function; it simply throws it away. A CGI script needs to write a response to stdout, which  must be in HTTP format: ie, one or more header lines, a blank line, then the output. In a Python CGI script, you can produce these simply via <code>print</code>.</p>  <p>Note that you are very cleverly hiding any of the useful error information Python would give you, by including a catch-all <code>except</code> clause that simply prints 'ERROR'. <strong>Don't do that</strong>. Exceptions exist for a reason, which is to show you exactly what went wrong. Remove that try/except.</p>"
43965748	Python 2.7 - Access Javascript file object in Django	javascript|jquery|python|django	2017-05-14 15:33:51.180000 UTC	"<p>I am building an app that sends multiple files as email attachments, using jQuery and Django 1.9. </p>  <p>I store the files in a buffer that the user can add and delete from, and sending them over a POST Ajax request as such:</p>  <pre><code>            //Build the message             message_buffer.forEach(function(entry){                 body += '\n' + entry;             });              var files = $.merge(attachment_buffer.photos, attachment_buffer.documents);              var form = new FormData();              form.append(""csrfmiddlewaretoken"", csrf_token);             form.append(""client_id"", client_id);             form.append(""subject"", subject);             form.append(""body"", body);             form.append(""files"", files);              $.ajax({                 url: window.location.origin + '/dashboard/ajax/send_message',                 method: ""post"",                 data: form,                 processData: false,                 contentType: false,                 cache: false,                 beforeSend: function(){                     //Block UI                 },                 success: function(data){                     if(data.status == 'success'){                         console.log(data);                         //Show success and clear all the data stores.                     } else {                         console.log(data.message);                     }                 },                 error: function(err){                     console.log(err.responseText);                 }             }); </code></pre>  <p>Problem is when i get this buffer (a list of JS file objects) in my django view, they are gotten as unicode and i dont know how to parse them. </p>  <p>I need to be able to attach the files to the django EmailMessage instance like this: </p>  <pre><code>        for attachment in attachments:             mail.attach(attachment.name, attachment.read(), attachment.content_type) </code></pre>  <p>The Django view code is:</p>  <pre><code>if request.method == ""POST"":     client_id = request.POST['client_id']     subject = request.POST['subject']     body = request.POST['body']     attachments = []      if 'files' in request.POST.keys() and request.POST['files'] != '':         attachments = request.POST['files']      client = Client.get_client_by_id(request.user, client_id)      if client:         email_helper = EmailHelper()          email_sent = email_helper.send_email_with_attachments(request, client, subject, body, attachments) </code></pre>  <p>And the email method:</p>  <pre><code>def send_email_with_attachments(self, request, client, subject, message, attachments, from_email=settings.EMAIL_HOST_USER):     """"""     Sends a simple text mail with attachments     :param request:     :param client:     :param subject:     :param message:     :param from_email:     :param attachments:     :return:     """"""      # print type(encoding.smart_bytes(attachments))     # # for attachment in attachments:     # #     print json.loads(attachment)     # #     # return False      try:         mail = EmailMessage(             self.clean_email_params(subject),             self.clean_email_params(message),             self.clean_email_params(from_email),             self.clean_email_params([client.email]),             reply_to=[from_email]         )          for attachment in attachments:             mail.attach(attachment.name, attachment.read(), attachment.content_type)          mail.send()          try:             # Log the sent email             email_log = SentEmailsLog()             email_log.user = request.user             email_log.client = client             email_log.subject = self.clean_email_params(subject)             email_log.content = self.clean_email_params(message)             email_log.to_email = str(self.clean_email_params([client.email]))             email_log.from_email = self.clean_email_params(from_email)             email_log.host_email = settings.EMAIL_HOST_USER             email_log.attachments = 'No'             email_log.save()          except Exception, e:             ErrorLogHelper.log_error(error_message=e, calling_function=""EmailHelper.send_email_with_attachments"")          return True      except Exception, e:         ErrorLogHelper.log_error(error_message=e, calling_function=""EmailHelper.send_email_with_attachments"")          return False </code></pre>  <p>Please advice, thank you.</p>"	43970282	"<p>Try to explicitly encode your request body in <code>view.py</code>, like so:</p>  <pre><code>body = request.POST['body'].encode('utf8') </code></pre>"
43987791	Decompression Routine In Javascript to Python	javascript|python	2017-05-15 19:57:49.303000 UTC	"<p>I'm trying to rewrite a javascript file decompression routine to python. But I can't seem to get it right. The function always returns <code>None</code> on python.</p>  <p>Here is the original JS:</p>  <pre><code>var c = new Uint8Array(b),     d = 0,     e = new Uint32Array(4096),     f = new Uint32Array(4096),     g = 256,     h = a.length,     k = 0,     l = 1,     m = 0,     n = 1; c[d++] = a[0]; for (var r = 1;; r++) {     n = r + (r &gt;&gt; 1);     if (n + 1 &gt;= h) break;     var m = a[n + 1],         n = a[n],         p = r &amp; 1 ? m &lt;&lt; 4 | n &gt;&gt; 4 : (m &amp; 15) &lt;&lt; 8 | n;     if (p &lt; g)         if (256 &gt; p) m = d, n = 1, c[d++] = p;         else             for (var m = d, n = f[p], p = e[p], q = p + n; p &lt; q;) c[d++] = c[p++];     else if (p == g) {         m = d;         n = l + 1;         p = k;         for (q = k + l; p &lt; q;) c[d++] = c[p++];         c[d++] = c[k]     } else break;     e[g] = k;     f[g++] = l + 1;     k = m;     l = n;     g = 4096 &lt;= g ? 256 : g } return d == b ? c : null </code></pre>  <p>And here is my python implementation, what did I do wrong? (<em>Improved with @le_m answer but still returning None.</em>)</p>  <pre><code>c = [0] * b d = 0 e = [0] * 4096 f = [0] * 4096 g = 256 h = len(a) k = 0 l = 1 m = 0 n = 1  c[d] = a[0] d += 1  r = 1 while True:     n = r + (r &gt;&gt; 1)     if (n + 1) &gt;= h:         break     m = a[n + 1]     n = a[n]     p = (m &lt;&lt; 4 | n &gt;&gt; 4) if r &amp; 1 else ((m &amp; 15) &lt;&lt; 8 | n)     if (p &lt; g):         if (256 &gt; p):             m = d             n = 1             c[d] = p             d += 1         else:             m = d             n = f[p]             p = e[p]             q = p + n             while p &lt; q:                 c[d] = c[p]                 d += 1                 p += 1     elif p == g:         m = d         n = 1 + 1         p = k          q = k + l         while p &lt; q:             c[d] = c[p]             d += 1             p += 1     else:         break      e[g] = k     f[g] = l + 1     g += 1     k = m     l = n     g = 256 if 4096 &lt;= g else g     r += 1 </code></pre>"	43988073	"<p>Just from glancing at the code, I spot the following differences:</p>  <ul> <li><code>new Uint8Array(b)</code> translates to <code>[0] * b</code> as the typed array is initialized with zeros. Same holds for the other typed arrays.</li> <li><code>c[d++] = a[0]</code> translates to <code>c[d] = a[0]</code> followed by <code>d += 1</code>, not the other way round. Same holds for the other post-increments, too.</li> <li>The loop counter <code>r += 1</code> should go to the end of the loop body or should be initialized with <code>0</code> instead.</li> </ul>  <p>I recommend stepping through both implementations step by step with a debugger (your browser's developer console for JavaScript) and compare the variable values.</p>"
44000147	Send variable from javascript to python flask	javascript|python|flask	2017-05-16 11:23:57.590000 UTC	"<p>I am doing a captcha in my website and each time the user registers and the captcha is wrong, I want to flash and say that the captcha is wrong.</p>  <p>This is the variable that I want to send:</p>  <pre><code>var code = a + b + c + d + e; </code></pre>  <p>In the register I want to check if the code is correct (the user entered the right captcha). If it is fine and all of the other parts are fine (they all work properly instead of the captcha) it redirects to a different page. If not it will flash that the captcha is wrong and redirects back to the same page.</p>"	44000404	"<p>Please use a real CAPTCHA solution like <a href=""https://www.google.com/recaptcha/intro/invisible.html#"" rel=""nofollow noreferrer"">reCAPTCHA</a>. Coding your own is <strong>not</strong> a good idea.</p>  <p>And generally if you want to send data from your <code>Javascript</code> to your Webserver you should use a <code>GET</code> or <code>POST</code> request.</p>  <p>Refer to this <a href=""https://stackoverflow.com/questions/12277933/send-data-from-a-textbox-into-flask"">question</a> if you really want to design your own (<strong>don't do it</strong>)</p>"
44030513	accessing a python object list from javascript	javascript|python|json|flask	2017-05-17 16:40:46.857000 UTC	"<p>I am using flask and python to build a web application. I have a json parsable class in python</p>  <pre><code>class uItem:    itemCount = 0     def __init__(self, id, name):       self.id = id       self.name = name </code></pre>  <p>I need to access an array a list of objects of this class from html</p>  <p>this is where i create the object and make them json parsable</p>  <pre><code>from delClass import uItem  counter = 0 name = [""proudct1"",""product2"",""product3""] objarray = []  for n in name:     obj = uItem(counter, n)     r = json.dumps(obj.__dict__)     counter = counter + 1     objarray.append(r) </code></pre>  <p>This is where i load the index page</p>  <pre><code>@app.route('/', methods=['GET', 'POST']) def main():     return render_template('jsex.html', dlist=objarray) </code></pre>  <p>I get an error saying </p>  <blockquote>   <p><strong>Uncaught SyntaxError: missing ) after argument list</strong></p> </blockquote>  <p><a href=""https://i.stack.imgur.com/JTZF3.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/JTZF3.png"" alt=""Thisis the error that i am getting""></a> how do i fix this. is ther a better way to access python lists from javascript ?</p>"	44031538	"<p>Apparently, this line is the root cause</p>  <pre><code>var counts = JSON.parse(""[""{\""id\"": 0, \""name\"": \""product1\""}"", ""{\""id\"": 1, \""name\"": \""product2\""}"", ""{\""id\"": 2, \""name\"": \""product3\""}""]""); </code></pre>  <hr>  <p>To solving this issue, using <code>flask.jsonify</code>.</p>  <pre><code>from flask import jsonify  @app.route('/', methods=['GET', 'POST']) def main():     return jsonify(objarray) </code></pre>  <p>The json return would be like this:</p>  <pre><code>[   ""{\""name\"": \""proudct1\"", \""id\"": 0}"",   ""{\""name\"": \""product2\"", \""id\"": 1}"",   ""{\""name\"": \""product3\"", \""id\"": 2}"" ] </code></pre>  <p>After using <code>jsonify</code>, you don't need to use <code>JSON.parse</code> anymore. The result of both Ajax get/post will be a javascript object. Here is an example code of javascript in nodejs.</p>  <pre><code>var axios = require('axios'); axios.get('http://localhost:5000').then(function(res){     var data = res.data;     console.log(data);     console.log(typeof(data));     console.log(data[0]);  }) </code></pre>  <p>The result on the screen:</p>  <pre><code>[ '{""id"": 0, ""name"": ""proudct1""}',   '{""id"": 1, ""name"": ""product2""}',   '{""id"": 2, ""name"": ""product3""}' ] object {""id"": 0, ""name"": ""proudct1""} </code></pre>"
44067649	Python Eventlet + Javascript Websocket returns Blob	javascript|python|json|websocket|eventlet	2017-05-19 10:28:02.487000 UTC	"<p>I am experimenting with Python's Eventlet Websocket support, using <a href=""http://eventlet.net/doc/examples.html#websocket-server-example"" rel=""nofollow noreferrer"">this simple example</a> :</p>  <pre><code>import eventlet from eventlet import wsgi from eventlet import websocket from eventlet.support import six  # demo app import os import json import time import random   @websocket.WebSocketWSGI def handle(ws):     """"""  This is the websocket handler function.  Note that we     can dispatch based on path in here, too.""""""     if ws.path == '/echo':         while True:             ws.send(""hello"")             #ws.send(json.dumps({""msg"":""hello""}))             time.sleep(1)      elif ws.path == '/data':         for i in six.moves.range(10000):             ws.send(""0 %s %s\n"" % (i, random.random()))             eventlet.sleep(0.1)   def dispatch(environ, start_response):     """""" This resolves to the web page or the websocket depending on     the path.""""""     if environ['PATH_INFO'] == '/data':         return handle(environ, start_response)     else:         start_response('200 OK', [('content-type', 'text/html')])         return [open(os.path.join(                      os.path.dirname(__file__),                      'websocket.html')).read()]  if __name__ == ""__main__"":     # run an example app from the command line     listener = eventlet.listen(('127.0.0.1', 7000))     print(""\nVisit http://localhost:7000/ in your websocket-capable browser.\n"")     wsgi.server(listener, dispatch) </code></pre>  <p>I'm not going to include the entire websocket handler I have in the Javascript, just the <code>ws.onmessage</code> method:</p>  <pre><code>ws.onmessage = function (evt) {    console.log(evt.data)    var received_msg = evt.data;    #Do stuff, i.e var obj = JSON.parse(received_msg)    #callback(obj) }; </code></pre>  <p>The <code>console.log(evt.data)</code> indicates a succesful connection with the websocket (and you can assume this is all fine). However, the logging shows <code>Blob {size: 31, type: """"}</code> as the content of <code>evt.data</code>. I assume this is some kind of response object which is interpreted as binary (file) data (though I might be entirely wrong), but I'm not sure what to do with this.</p>  <p>I see that Blob data is often the data type for file-like objects. I suppose I could approach it as such, but I really only want to send json data back and forth. I've tried dumping a dict as a JSON and sending that, but it did the same. Even a string is received in Blob format.</p>  <p>How do I use <code>eventlet</code> for json data transmission?</p>"	44129703	"<p>As of 2017-05 Eventlet websocket API does not support string websocket frames. Patches are welcome, it's easy.</p>  <p>Your options:</p>  <ul> <li>read Blob at javascript end <a href=""https://developer.mozilla.org/en/docs/Web/API/FileReader"" rel=""nofollow noreferrer"">FileReader.readAsText</a></li> <li>use another websocket library (pure Python implementation will work fine with Eventlet patching)</li> <li>add string frame support to Eventlet websocket library</li> </ul>"
44081400	Javascript to Python with bitwise shift in a for loop's condition and final-expression	javascript|python|for-loop|bitwise-operators|bit-shift	2017-05-20 02:42:21.743000 UTC	"<p>I have a FFT code written in javascript, pasted below:</p>  <pre><code>function FFT(re, im) {         var N = re.length;         for (var i = 0; i &lt; N; i++) {             for (var j = 0, h = i, k = N; k &gt;&gt;= 1; h &gt;&gt;= 1)                 j = (j &lt;&lt; 1) | (h &amp; 1);             if (j &gt; i) {                 re[j] = [re[i], re[i] = re[j]][0];                 im[j] = [im[i], im[i] = im[j]][0]             }         }          for (var hN = 1; hN * 2 &lt;= N; hN *= 2)             for (i = 0; i &lt; N; i += hN * 2)                 for (j = i; j &lt; i + hN; j++) {                     var cos = Math.cos(Math.PI * (j - i) / hN),                         sin = Math.sin(Math.PI * (j - i) / hN);                     var tre = re[j + hN] * cos + im[j + hN] * sin,                         tim = -re[j + hN] * sin + im[j + hN] * cos;                     re[j + hN] = re[j] - tre;                     im[j + hN] = im[j] - tim;                     re[j] += tre;                     im[j] += tim;                 }     } </code></pre>  <p>There is one statement in for loop</p>  <pre><code>for (var j = 0, h = i, k = N; k &gt;&gt;= 1; h &gt;&gt;= 1) </code></pre>  <p>I wonder how to write this for loop in Python? The <code>k</code>s array and <code>h</code>s array are not very clear to me so I do not know how to use <code>zip</code>.</p>"	44081530	<p>One possible way is with a while loop:</p>  <pre><code>j = 0 h = i k = N &gt;&gt; 1 while k &gt; 0:     ... # current logic in the for loop     k &gt;&gt;= 1     h &gt;&gt;= 1 </code></pre>
44081400	Javascript to Python with bitwise shift in a for loop's condition and final-expression	javascript|python|for-loop|bitwise-operators|bit-shift	2017-05-20 02:42:21.743000 UTC	"<p>I have a FFT code written in javascript, pasted below:</p>  <pre><code>function FFT(re, im) {         var N = re.length;         for (var i = 0; i &lt; N; i++) {             for (var j = 0, h = i, k = N; k &gt;&gt;= 1; h &gt;&gt;= 1)                 j = (j &lt;&lt; 1) | (h &amp; 1);             if (j &gt; i) {                 re[j] = [re[i], re[i] = re[j]][0];                 im[j] = [im[i], im[i] = im[j]][0]             }         }          for (var hN = 1; hN * 2 &lt;= N; hN *= 2)             for (i = 0; i &lt; N; i += hN * 2)                 for (j = i; j &lt; i + hN; j++) {                     var cos = Math.cos(Math.PI * (j - i) / hN),                         sin = Math.sin(Math.PI * (j - i) / hN);                     var tre = re[j + hN] * cos + im[j + hN] * sin,                         tim = -re[j + hN] * sin + im[j + hN] * cos;                     re[j + hN] = re[j] - tre;                     im[j + hN] = im[j] - tim;                     re[j] += tre;                     im[j] += tim;                 }     } </code></pre>  <p>There is one statement in for loop</p>  <pre><code>for (var j = 0, h = i, k = N; k &gt;&gt;= 1; h &gt;&gt;= 1) </code></pre>  <p>I wonder how to write this for loop in Python? The <code>k</code>s array and <code>h</code>s array are not very clear to me so I do not know how to use <code>zip</code>.</p>"	44082101	"<p>The simplest way is described by @fileyfood500.  </p>  <p>Another approach could be to separate out the <code>k</code>, <code>h</code> logic in a generator, and using a <code>for</code> loop:</p>  <pre><code>def gen(k, h):     while k &gt;&gt; 1:         yield h         h &gt;&gt;= 1         k &gt;&gt;= 1  for i in range(N):     j = 0     for h in gen(N, i):         j = (j &lt;&lt; 1) | (h &amp; 1) </code></pre>  <p>If you do this you can <code>reduce</code> the loop:</p>  <pre><code>from functools import reduce    # Py3  for i in range(N):     j = reduce(lambda j, h: (j &lt;&lt; 1) | (h &amp; 1), gen(N, i), 0) </code></pre>"
44084477	Performing Javascript floating point arithmetic in Python	javascript|python|floating-point	2017-05-20 09:57:26.257000 UTC	"<p>I am writing a Python program which interacts with a webapp which I did not write. There is some state that I need to represent in my program which is not sent to the (javascript) client by the server, but is instead computed separately on both the client and the server with shared information.</p>  <p>For example, the exchange might go something like:</p>  <pre><code>var x = getValueFromServer(); //client gets 0.73346 x *= 1 &lt;&lt; 30; result = x &amp; 1023 </code></pre>  <p>My Python code successfully receives 0.73346, but I need the value of <code>result</code>. The result of the multiplication by 2^30 seems to be the same in javascript and Python, but I cannot directly mask the float value inside Python. </p>  <p>I have tried (for the above example value)</p>  <pre><code>from struct import pack, unpack unpack('q', pack('d', 0.73346))[0] &amp; 1023 </code></pre>  <p>but this gives a value of 696 in Python, while when I run the above javascript in node I get a value of 566. I've also tried a few other combinations of packing and unpacking formats, with no success.</p>  <p>My last resort would be executing javascript from inside Python with a node subprocess, but I'd prefer to avoid that. How can I solve this?</p>"	44084818	<pre><code>x = 0.73346 x = x * (1 &lt;&lt; 30) x = int(x) &amp; 1023 </code></pre>  <p>gives 566 in python</p>
44102764	"JavaScript like eval for Python 2.7, return last value"	python|python-2.7|eval	2017-05-21 23:30:14.677000 UTC	"<p>In JavaScript this is possible:</p>  <pre><code>tmp = eval(""randomname = [1,2,3,4]"") </code></pre>  <p>However, neither Pythons <code>eval</code> nor <code>exec</code> supports that.</p>  <pre><code>eval(""randomname = range(1,2)"") # this throws a syntax error exec(""randomname = range(1,2)"") # this returns nothing </code></pre>  <p>Is there any ""special"" Python function/method/library, which can evaluate statements AND return the last value?</p>"	44102805	"<p>For python, you must first have the variable declared before calling <code>eval()</code> on it. See the docs for <code>eval()</code>: <a href=""https://docs.python.org/3/library/functions.html#eval"" rel=""nofollow noreferrer"">https://docs.python.org/3/library/functions.html#eval</a></p>  <p>Your best bet to evaluate a statement and return the last value would be to do something like:  <code>randomname = range(1,2)</code></p>"
44102764	"JavaScript like eval for Python 2.7, return last value"	python|python-2.7|eval	2017-05-21 23:30:14.677000 UTC	"<p>In JavaScript this is possible:</p>  <pre><code>tmp = eval(""randomname = [1,2,3,4]"") </code></pre>  <p>However, neither Pythons <code>eval</code> nor <code>exec</code> supports that.</p>  <pre><code>eval(""randomname = range(1,2)"") # this throws a syntax error exec(""randomname = range(1,2)"") # this returns nothing </code></pre>  <p>Is there any ""special"" Python function/method/library, which can evaluate statements AND return the last value?</p>"	44102895	"<p>Why don't you wrap <code>exec()</code> then? Something like:</p>  <pre><code>def return_exec(expr, context=None):     exec(""__ret__ = {}"".format(expr))     if not context:         return __ret__     loc = locals()     loc.pop(""expr"", None)     loc.pop(""context"", None)     context.update(loc)     return __ret__ </code></pre>  <p>If you use it without context you'll get only the return value:</p>  <pre><code>print(""exec: {}"".format(return_exec(""randomname=range(1, 5)"")))  # exec: [1, 2, 3, 4] print(""randomname: {}"".format(randomname))  # NameError: name 'randomname' is not defined </code></pre>  <p>But if you forward it local context it will update it:</p>  <pre><code>print(""exec: {}"".format(return_exec(""randomname=range(1, 5)"", vars())))  # exec: [1, 2, 3, 4] print(""randomname: {}"".format(randomname))  # randomname: [1, 2, 3, 4] </code></pre>"
44102764	"JavaScript like eval for Python 2.7, return last value"	python|python-2.7|eval	2017-05-21 23:30:14.677000 UTC	"<p>In JavaScript this is possible:</p>  <pre><code>tmp = eval(""randomname = [1,2,3,4]"") </code></pre>  <p>However, neither Pythons <code>eval</code> nor <code>exec</code> supports that.</p>  <pre><code>eval(""randomname = range(1,2)"") # this throws a syntax error exec(""randomname = range(1,2)"") # this returns nothing </code></pre>  <p>Is there any ""special"" Python function/method/library, which can evaluate statements AND return the last value?</p>"	44117617	"<p>First, there are some problems with some assumptions you're making, <code>randomname = [1,2,3,4]</code> is a statement. It does not produce a value. So attempting to <code>eval</code> that would be a syntax error (<code>eval()</code> expects an expression, not statement). Eval takes a single expression, evaluates it, and returns its value. It's ok in javascript since assignments are considered expressions which is not the case in python.</p>  <p>In the same vein, <code>exec</code> is a statement that takes a sequence of statements and executes it. It does not return a value as statements do not produce values. So it would be wrong to expect that it should.</p>  <p>Once you have that figured out, you'll want to parse the code and separate out the last expression to be returned. Then execute the first part of the code (if any) then evaluate the last expression returning its result.</p>  <pre><code>import ast  def eval_code(code, context=None):     tree = ast.parse(code)     last = ast.Expression(tree.body.pop().value)     if tree.body:         exec (compile(tree, __name__, 'exec'), globals(), context)     return eval(compile(last, __name__, 'eval'), globals(), context) </code></pre>  <p>With this, you could then evaluate your code, multiple statements and all.  Just make sure that the last one is an expression that has a definite value otherwise you may run into problems.</p>  <pre><code>eval_code(''' randomname = [1,2,3,4] print('got value: {!r}'.format(randomname)) randomname ''') # [1, 2, 3, 4] </code></pre>"
44102764	"JavaScript like eval for Python 2.7, return last value"	python|python-2.7|eval	2017-05-21 23:30:14.677000 UTC	"<p>In JavaScript this is possible:</p>  <pre><code>tmp = eval(""randomname = [1,2,3,4]"") </code></pre>  <p>However, neither Pythons <code>eval</code> nor <code>exec</code> supports that.</p>  <pre><code>eval(""randomname = range(1,2)"") # this throws a syntax error exec(""randomname = range(1,2)"") # this returns nothing </code></pre>  <p>Is there any ""special"" Python function/method/library, which can evaluate statements AND return the last value?</p>"	44123502	"<p>With influence from Jeffs answer, I build this:</p>  <pre><code># &gt;&gt;&gt; eval_code(""a = 1+2; 10*10; range(1,10);"") # [1, 2, 3, 4, 5, 6, 7, 8, 9] # &gt;&gt;&gt; eval_code(""a = 1+2; 10*10; range(1,10);\nif True: 123;"") # &gt;&gt;&gt; eval_code(""abc = 123"") # 123 # &gt;&gt;&gt;  def eval_code(code, context=None):     tree = ast.parse(code)     # prevent access to last element when there are non, e.g. eval_code("""")     if (len(tree.body) == 0):         return None     # only return a value when the last node is actually an ast.Expr     if isinstance(tree.body[-1], ast.Expr):         # convert ast.Expr into ast.Expression         last = ast.Expression(tree.body.pop().value)         # only execute the Module when tree.body has some elements left         if tree.body:             exec (compile(tree, __name__, 'exec'), globals(), context)         return eval(compile(last, __name__, 'eval'), globals(), context)     elif isinstance(tree.body[-1], ast.Assign):         assignnode = tree.body[-1]          # simply add ast.Name to the targets attribute         assignnode.targets.append( ast.Name(id=""__ret__"", ctx=ast.Store()) )         #print (""assign name: "" + assignnode.targets[0].id); # e.g. ""abc""          # otherwise: TypeError: required field ""lineno"" missing from expr         ast.fix_missing_locations(tree)          # run it normally         exec (compile(tree, __name__, 'exec'), globals(), context)         # and return it         return __ret__     else:         # otherwise just exec it normally without returning anything         exec (compile(tree, __name__, 'exec'), globals(), context)         return None </code></pre>  <p>This is quite close to JavaScript behaviour and not too much hackery, so this helps me really alot to quickly evaluate expressions in my REPL GUI (e.g. select a bit of code, press Ctrl+Enter to execute the code and pretty print the return value).</p>"
44145828	Python x[1:2:3] in Javascript?	javascript|python	2017-05-23 22:08:41.820000 UTC	"<p>Right to the point:<br> I'm trying to find some JavaScript version of the Python list split function<br> ex:</p>  <pre><code>&gt;&gt;&gt; x=[1,2,3,4,5] &gt;&gt;&gt; x[1:4] [2, 3, 4] </code></pre>"	44145847	"<p>That would be <code>slice</code>:</p>  <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-js lang-js prettyprint-override""><code>a = [1, 2, 3, 4, 5] console.log(a.slice(1, 4))</code></pre> </div> </div> </p>"
44145828	Python x[1:2:3] in Javascript?	javascript|python	2017-05-23 22:08:41.820000 UTC	"<p>Right to the point:<br> I'm trying to find some JavaScript version of the Python list split function<br> ex:</p>  <pre><code>&gt;&gt;&gt; x=[1,2,3,4,5] &gt;&gt;&gt; x[1:4] [2, 3, 4] </code></pre>"	44145850	"<p>This can be achieved using <code>array slicing</code>.</p>  <p>Snippet:</p>  <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-js lang-js prettyprint-override""><code>var fruits = [""Banana"", ""Orange"", ""Lemon"", ""Apple"", ""Mango""]; console.log(fruits.slice(1, 3));</code></pre> </div> </div> </p>  <p>More information and source: <a href=""https://www.w3schools.com/jsref/jsref_slice_array.asp"" rel=""nofollow noreferrer"">JavaScript Array slice() Method</a></p>"
44145828	Python x[1:2:3] in Javascript?	javascript|python	2017-05-23 22:08:41.820000 UTC	"<p>Right to the point:<br> I'm trying to find some JavaScript version of the Python list split function<br> ex:</p>  <pre><code>&gt;&gt;&gt; x=[1,2,3,4,5] &gt;&gt;&gt; x[1:4] [2, 3, 4] </code></pre>"	44145857	"<p>You can use Array.slice() :</p>  <pre><code>var x=[1,2,3,4,5]; console.log(x.slice(1,4)); // =&gt; [2, 3, 4] </code></pre>  <p>However, Python's slicing includes a step, which means slice an element then move to element with index+STEP, and this is it in JavaScript :</p>  <pre><code>Array.prototype.mySlice = function(b,e,s) {     var n=[];     for (var i=b; i&lt;e; i+=s) {         n.push(this[i]);     }     return n; } var x=[1,2,3,4,5,6,7,8,9,10]; console.log(x.mySlice(1,7,2)); // =&gt; [2, 4, 6] </code></pre>"
44145828	Python x[1:2:3] in Javascript?	javascript|python	2017-05-23 22:08:41.820000 UTC	"<p>Right to the point:<br> I'm trying to find some JavaScript version of the Python list split function<br> ex:</p>  <pre><code>&gt;&gt;&gt; x=[1,2,3,4,5] &gt;&gt;&gt; x[1:4] [2, 3, 4] </code></pre>"	44145920	"<p>You can use block scope, destructuring assignment, trailing comma</p>  <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-js lang-js prettyprint-override""><code>var x = [1, 2, 3, 4, 5];  {   [, a, b, c, ] = x;   x = [a, b, c]; }; console.log(x);</code></pre> </div> </div> </p>"
44184794	What is the Javascript equivalent of Python's get method for dictionaries	javascript	2017-05-25 15:54:56.280000 UTC	<p>Python's get method for dictionaries lets me specify what should be returned if a key doesn't exist. For my current case I want a dictionary returned. How do I do this in Javascript?</p>	44184851	"<p>JavaScript has no helper feature to do that. You need to test explicitly.</p>  <pre><code>if (""myProperty"" in myObject) {     return { another: ""object"" }; } else {     return myObject.myProperty; } </code></pre>  <p>You can use a ternary operator to do the same thing with less code.</p>  <pre><code>return (""myProperty"" in myObject) ? myObject.myProperty : { another: ""object"" }; </code></pre>"
44184794	What is the Javascript equivalent of Python's get method for dictionaries	javascript	2017-05-25 15:54:56.280000 UTC	<p>Python's get method for dictionaries lets me specify what should be returned if a key doesn't exist. For my current case I want a dictionary returned. How do I do this in Javascript?</p>	44185050	"<p>You could use a proxy for this (really new ):</p>  <pre><code>var handler = {     get: function(target, name){         return name in target?         target[name] :         ""Default"";     } }; var dictionary={""hi"":true}; var dict = new Proxy(dictionary, handler); dict.a = 1; dict.b = undefined;  console.log(dict.a, dict.b,dict.hi); // 1, undefined,true console.log(dict.new); //""Default""   //the proxied object gets changed:  console.log(dictionary.a, dictionary.b,dictionary.hi); // 1, undefined,true console.log(dictionary.new); //undefined </code></pre>  <p>A proxy is an object that reflects all changes and requests trough an handler. In this case we can write/access propertys of dictionary normally, but if we access values that do not exist it'll return ""Default""</p>"
44184794	What is the Javascript equivalent of Python's get method for dictionaries	javascript	2017-05-25 15:54:56.280000 UTC	<p>Python's get method for dictionaries lets me specify what should be returned if a key doesn't exist. For my current case I want a dictionary returned. How do I do this in Javascript?</p>	44185289	"<p>There is no javascript equivalent of the python dictionary get method. If you would write it yourself, as a function, it would look like this:</p>  <pre><code>function get(object, key, default_value) {     var result = object[key];     return (typeof result !== ""undefined"") ? result : default_value; } </code></pre>  <p>Use it like:</p>  <pre><code>var obj = {""a"": 1}; get(obj, ""a"", 2); // -&gt; 1 get(obj, ""b"", 2); // -&gt; 2 </code></pre>  <p>Note that the requested key will also be found in a prototype of obj.</p>  <p>If you really want a method rather than a function (<code>obj.get(""a"", 2)</code>), you need to extend the prototype of Object. This is generally considered a bad idea though, see <a href=""https://stackoverflow.com/questions/6877005/extending-object-prototype-javascript"">Extending Object.prototype JavaScript</a></p>"
44184794	What is the Javascript equivalent of Python's get method for dictionaries	javascript	2017-05-25 15:54:56.280000 UTC	<p>Python's get method for dictionaries lets me specify what should be returned if a key doesn't exist. For my current case I want a dictionary returned. How do I do this in Javascript?</p>	62464764	"<p>I prefer to use the logical OR like this:</p>  <pre><code>foo.bar || 'default' </code></pre>  <p>If checks is foo.bar is falsy, so it returns 'default' if bar is undefined.</p>  <p>You just need to care, that foo is an object. Otherwise a ReferenceError is thrown.</p>"
44184794	What is the Javascript equivalent of Python's get method for dictionaries	javascript	2017-05-25 15:54:56.280000 UTC	<p>Python's get method for dictionaries lets me specify what should be returned if a key doesn't exist. For my current case I want a dictionary returned. How do I do this in Javascript?</p>	65449357	"<p>this works for me</p> <pre><code>let obj = {&quot;a&quot;: 1}; let default = 100 obj[&quot;a&quot;] || default; // -&gt; 1 obj[&quot;b&quot;] || default; // -&gt; 100 </code></pre> <p>But! there are some limitation, if <code>!!obj[&quot;a&quot;] === false</code> we always get default value... so it's better to just check if key in obj, to be completely sure.</p>"
44184794	What is the Javascript equivalent of Python's get method for dictionaries	javascript	2017-05-25 15:54:56.280000 UTC	<p>Python's get method for dictionaries lets me specify what should be returned if a key doesn't exist. For my current case I want a dictionary returned. How do I do this in Javascript?</p>	70304057	"<p>With modern javascript you can use the <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Nullish_coalescing_operator"" rel=""nofollow noreferrer"">nullish coalescing operator <code>??</code></a></p> <pre><code>const result = obj[key] ?? default; </code></pre> <p>This will return the default value if <code>key</code> doesn't exist in <code>obj</code>. It will also return the default in cases like <code>{myKey: undefined}</code> or <code>{myKey: null}</code>, which may or may not be the desired behavior.</p>"
44185843	javascript dependencies in python project	javascript|python|dependency-management	2017-05-25 16:51:29.327000 UTC	"<p>I'm writing software that allows one to publish mathematical books as websites. It is based mostly on Python + Flask, but to deal with equations I'm using MathJax. MathJax can be used either client-side or server-side (through <a href=""https://github.com/mathjax/MathJax-node"" rel=""noreferrer"">MathJax-node</a>). In the latter case I have to use <code>npm</code> to install MathJax-node in some place accessible to my main Python script, then invoke it from the script. In the former case, I have to provide MathJax.js as an asset, available to client (currently I use Flask's <code>send_from_directory</code> function).</p>  <p>My question is: what is the best practice of dealing with such heterogenous dependencies in Python? My goal is to make installation process as simple as possible at least on unix-like systems (Linux or MacOS), provided that <code>node</code> and <code>npm</code> are already available.</p>  <p>I can just put all the javascript sources I need into my distribution itself, but maybe there's a better way to do it?</p>"	44185970	"<blockquote>   <p>My question is: what is the best practice of dealing with such   heterogenous dependencies in Python?</p> </blockquote>  <p>In the case of Node dependencies, I would include a <code>package.json</code> file in the directory which specifies the Node dependencies needed. For other languages/package managers, I would also use whatever the conventional way of specifying dependencies is (e.g. add a Gemfile for Ruby dependencies).</p>  <p>Another common example of this that comes up with Python/Flask is using the <a href=""https://bower.io/"" rel=""noreferrer"">Bower</a> package manager for static frontend dependencies. In that case, the dependencies are specified in the <code>bower.json</code> file and are usually pulled into a bower folder in Flask's <code>static</code> directory.</p>  <blockquote>   <p>I can just put all the javascript sources I need into my distribution   itself, but maybe there's a better way to do it?</p> </blockquote>  <p>Once you've got the <code>package.json</code> with the dependencies specified, you can fetch and install all the Node dependencies needed by running <code>npm install</code> which, in my opinion, is a more elegant solution than including the javascript sources with the project.</p>  <p>Now that you've got multiple package managers (e.g. maybe you're using <code>pip</code> for the Python dependencies in addition to <code>npm</code> for the Node dependencies), you might want to make a Makefile or some deployment/build script to fetch/install using all of them (for example, if I were using Travis CI, I would update my <code>.travis.yml</code> to call <code>npm install</code> in addition to <code>pip install -r</code>).</p>"
44185843	javascript dependencies in python project	javascript|python|dependency-management	2017-05-25 16:51:29.327000 UTC	"<p>I'm writing software that allows one to publish mathematical books as websites. It is based mostly on Python + Flask, but to deal with equations I'm using MathJax. MathJax can be used either client-side or server-side (through <a href=""https://github.com/mathjax/MathJax-node"" rel=""noreferrer"">MathJax-node</a>). In the latter case I have to use <code>npm</code> to install MathJax-node in some place accessible to my main Python script, then invoke it from the script. In the former case, I have to provide MathJax.js as an asset, available to client (currently I use Flask's <code>send_from_directory</code> function).</p>  <p>My question is: what is the best practice of dealing with such heterogenous dependencies in Python? My goal is to make installation process as simple as possible at least on unix-like systems (Linux or MacOS), provided that <code>node</code> and <code>npm</code> are already available.</p>  <p>I can just put all the javascript sources I need into my distribution itself, but maybe there's a better way to do it?</p>"	44506224	"<p>Using Node.js package.json would be the most optimal solution for dealing with JavaScript dependencies. As for executing executables from .py you can reference to this answer <a href=""https://stackoverflow.com/questions/4760215/running-shell-command-from-python-and-capturing-the-output#answer-4760517"">Running shell command from Python and capturing the output</a>. Node dependencies are by default inside ./node_modules in the same directory as the location of your package.json file. </p>  <p>For installing new dependencies:</p>  <pre><code>npm install --save npm-package-you-want-to-install </code></pre>  <p>Once you have them prepared this command will have everything installed for you:</p>  <pre><code>npm install </code></pre>  <p>Node dependencies are definitely more elegant way of dealing with things since javascript is a constantly evolving world and it is much easier to take a look at a package.json than a lot of script tags / functions that simply invoke said scripts. If you want a automated system my suggestion would be to make a executable (.sh) which will run installment for both and you can use that in your future projects.</p>"
44185843	javascript dependencies in python project	javascript|python|dependency-management	2017-05-25 16:51:29.327000 UTC	"<p>I'm writing software that allows one to publish mathematical books as websites. It is based mostly on Python + Flask, but to deal with equations I'm using MathJax. MathJax can be used either client-side or server-side (through <a href=""https://github.com/mathjax/MathJax-node"" rel=""noreferrer"">MathJax-node</a>). In the latter case I have to use <code>npm</code> to install MathJax-node in some place accessible to my main Python script, then invoke it from the script. In the former case, I have to provide MathJax.js as an asset, available to client (currently I use Flask's <code>send_from_directory</code> function).</p>  <p>My question is: what is the best practice of dealing with such heterogenous dependencies in Python? My goal is to make installation process as simple as possible at least on unix-like systems (Linux or MacOS), provided that <code>node</code> and <code>npm</code> are already available.</p>  <p>I can just put all the javascript sources I need into my distribution itself, but maybe there's a better way to do it?</p>"	44533206	"<p>I recommend to use webpack <a href=""https://webpack.js.org/"" rel=""nofollow noreferrer"">Webpack.js</a> not Bowerjs. NPM and his package.json are very good for dependency updates but referencing libraries from node_modules is a little embarrasing.  </p>"
44221256	flask python list to javascript	javascript|python|flask	2017-05-27 20:20:03.617000 UTC	"<p>I am using python flask temple to build a site. I have a case where I want to send a python list to a java script. The python list contains three objects however when I do list1.length in the java script environment I see the length of this list is 23. This is most likely because java script is identifying it as a string. My question is how to make the python list stay a list once it's passed into javascript ?</p>  <pre><code># my route with python list1 @app.route('/chart_sandbox') def chart_sandbox():      list1 = ['abc', 'def', 'hij']      return render_template(""chart_sandbox.html"", list1=json.dumps(list1))     # My Java script &lt;script type=""text/javascript""&gt;      var list1 = '{{list1|tojson}}'     var listLength = list1.length       document.write(listLength)     document.write(list1)  &lt;/script&gt;  # this is what is returned to me. As you can see java script length is seen  #as 23 instead of 3 23""[""abc"", ""def"", ""hij""]"" </code></pre>"	44221393	<p>Remove the quotes around the jinja text. That's converting your list into a string-representation of a list. Something like this should work:</p>  <pre><code>var list1 = {{ list1 | tojson }}; </code></pre>
44221256	flask python list to javascript	javascript|python|flask	2017-05-27 20:20:03.617000 UTC	"<p>I am using python flask temple to build a site. I have a case where I want to send a python list to a java script. The python list contains three objects however when I do list1.length in the java script environment I see the length of this list is 23. This is most likely because java script is identifying it as a string. My question is how to make the python list stay a list once it's passed into javascript ?</p>  <pre><code># my route with python list1 @app.route('/chart_sandbox') def chart_sandbox():      list1 = ['abc', 'def', 'hij']      return render_template(""chart_sandbox.html"", list1=json.dumps(list1))     # My Java script &lt;script type=""text/javascript""&gt;      var list1 = '{{list1|tojson}}'     var listLength = list1.length       document.write(listLength)     document.write(list1)  &lt;/script&gt;  # this is what is returned to me. As you can see java script length is seen  #as 23 instead of 3 23""[""abc"", ""def"", ""hij""]"" </code></pre>"	68088869	"<p>Thanks,it works for me.</p> <pre><code>&lt;script&gt;   var divlist = {{ pylist | tojson }};   for(i=0; i &lt; divlist.length; i++){        divId = divlist[i];        console.log(divId);    } &lt;/script&gt; </code></pre>"
44221256	flask python list to javascript	javascript|python|flask	2017-05-27 20:20:03.617000 UTC	"<p>I am using python flask temple to build a site. I have a case where I want to send a python list to a java script. The python list contains three objects however when I do list1.length in the java script environment I see the length of this list is 23. This is most likely because java script is identifying it as a string. My question is how to make the python list stay a list once it's passed into javascript ?</p>  <pre><code># my route with python list1 @app.route('/chart_sandbox') def chart_sandbox():      list1 = ['abc', 'def', 'hij']      return render_template(""chart_sandbox.html"", list1=json.dumps(list1))     # My Java script &lt;script type=""text/javascript""&gt;      var list1 = '{{list1|tojson}}'     var listLength = list1.length       document.write(listLength)     document.write(list1)  &lt;/script&gt;  # this is what is returned to me. As you can see java script length is seen  #as 23 instead of 3 23""[""abc"", ""def"", ""hij""]"" </code></pre>"	69981183	"<p>This worked me, I wrapped the list with the or operation and tojson in double curly brackets as an argument in the JSON.parse function, to make it a JavaScript object.</p> <pre><code>let list1 = JSON.parse('{{ list1 | tojson }}'); </code></pre> <p>If you have no plans to modify the data in JavaScript use this instead </p> <pre><code>const list1 = JSON.parse('{{ list1 | tojson }}');  </code></pre>"
44258094	handling javascript with python	javascript|python	2017-05-30 09:13:09.003000 UTC	"<p>I am trying to login into a website through python but the form fields have no name just the ID's</p>  <pre><code>&lt;ul&gt;                     &lt;li id=""unLi"" class=""unLi""&gt;&lt;input class=""text"" id=""userName"" type=""text"" maxlength=""15"" /&gt;&lt;/li&gt;                     &lt;li class=""blank""&gt;&lt;/li&gt;                     &lt;li id=""pwLi"" class=""pwLi""&gt;&lt;input class=""text"" id=""pcPassword"" type=""password"" maxlength=""15""/&gt;&lt;/li&gt; &lt;/ul&gt; </code></pre>  <p>I tried the following code </p>  <pre><code>import requests  params = {'userName':'sahil','pcPassword':'mypassword'} r = requests.post(""http://192.168.1.2/"",data=params) r.status_code print(r.text) </code></pre>  <p>on submit the form calls a javascript function <code>PCSubWin()</code> which goes something like this</p>  <pre><code>function PCSubWin() {     if((httpAutErrorArray[0] == 2) || (httpAutErrorArray[0] == 3))     {         if(true == CheckUserPswInvalid())         {             var username = $(""userName"").value;                          var password = $(""pcPassword"").value;                if(httpAutErrorArray[1] == 1)             {                 password = hex_md5($(""pcPassword"").value);               }                        var auth = ""Basic ""+ Base64Encoding(username + "":"" + password);             document.cookie = ""Authorization=""+escape(auth)+"";path=/"";             //location.href =""/userRpm/LoginRpm.htm?Save=Save"";             $(""loginForm"").submit();             return true;         }         else         {             $(""note"").innerHTML = ""NOTE:"";             $(""tip"").innerHTML = ""Username and password can contain between 1 - 15 characters and may not include spaces."";          }     }     return false; </code></pre>  <p>now I am not very good at javascript but i assume this peice of code <code>$(""userName"").value</code> is getting the values entered by the user, my question is how can I call to this function when submitting my credentials? my code btw prints out the same code for the login page not the user home page.</p>"	44258197	"<p>The site you're requesting is using <code>Basic HTTP Authentication</code> so you can just call:</p>  <pre><code>requests.get('http://192.168.1.2/userRpm/LoginRpm.htm', auth=('sahil', 'mypassword')) </code></pre>  <p>to access the protected resource.</p>"
44268649	Finding the information filled in by JavaScript in a {{ }} using Python	python	2017-05-30 17:43:11.583000 UTC	"<p>I'm currently working on searching a webpage for certain text. I've been using the code:</p>  <pre><code>import urllib import re  find = ""All others"" pageChecker = urllib.urlopen(""192.168.1.134/dashboard"").read() if find in pageChecker:     print ""Search found!"" else:     print ""Search not found"" </code></pre>  <p>The HTML for the page can be found <a href=""https://pastebin.com/0sE6GmKa"" rel=""nofollow noreferrer"">here</a>.</p>  <p>This works fine for any text filled in as a paragraph, but the problem is I'm trying to find the information filled in by {{ }}. For example, there is one called</p>  <pre><code>{{story.type}} </code></pre>  <p>When the webpage is viewed this is shown as a number. How can I figure out what that number is?</p>"	44268953	"<p>To find a list of all the items within <code>{{</code>s and <code>}}</code>s, put <code>import re</code> at the start of your program, and then <code>re.findall(r""\{\{(.*)\}\}"", pageChecker)</code> should give you such a list.</p>"
44268649	Finding the information filled in by JavaScript in a {{ }} using Python	python	2017-05-30 17:43:11.583000 UTC	"<p>I'm currently working on searching a webpage for certain text. I've been using the code:</p>  <pre><code>import urllib import re  find = ""All others"" pageChecker = urllib.urlopen(""192.168.1.134/dashboard"").read() if find in pageChecker:     print ""Search found!"" else:     print ""Search not found"" </code></pre>  <p>The HTML for the page can be found <a href=""https://pastebin.com/0sE6GmKa"" rel=""nofollow noreferrer"">here</a>.</p>  <p>This works fine for any text filled in as a paragraph, but the problem is I'm trying to find the information filled in by {{ }}. For example, there is one called</p>  <pre><code>{{story.type}} </code></pre>  <p>When the webpage is viewed this is shown as a number. How can I figure out what that number is?</p>"	44268994	"<p>Those curly brackets are for runtime templating. That means you are trying to pull data from a HTML5 application which uses some library like AngularJS, Vue.js, etc. Basically, you have to run the JavaScript to get those placeholders filled.</p>  <p>So there are two solutions here:</p>  <ol> <li><p>Use a browser to open the page. That will run the JavaScript code and then you can query that field. You can accomplish this using <a href=""https://en.wikipedia.org/wiki/PhantomJS"" rel=""nofollow noreferrer"">PhantomJS</a>, SlimerJS, or WebDriver with any browser you want.</p></li> <li><p>The JavaScript application itself must get the data from somewhere, most probably from a JSON service. Open your favourite browsers developer console, open the network tab, and navigate to the dashboard. You will see a few requests. Search for the one that contains the information you need, and open that from Python instead of getting the HTML.</p></li> </ol>"
44276470	How can i send slider value from jQuery or javascript to python Flask?	javascript|jquery|python|ajax|flask	2017-05-31 05:36:55.410000 UTC	"<p>I have a round slider with the slider value on client side or web page. when the user changes the slider position, the client has to send the value to the server. Here i use python flask as a server side. So the value has to be sent from j Query or java script to flask.  I tried with the following code. But when i use Ajax, the web page becomes blank.  It doesn't show the slider. If i remove the Ajax way of sending, the slider appears but value is not sent to server. </p>  <p>CLIENT SIDE:</p>  <pre><code>&lt;!DOCTYPE html&gt; &lt;html&gt; &lt;head&gt; &lt;meta charset=""utf-8""&gt; &lt;title&gt;jQuery roundSlider - JS Bin&lt;/title&gt; &lt;script src=""https://code.jquery.com/jquery-1.11.3.js""&gt;&lt;/script&gt; &lt;link rel=""stylesheet"" href=""//cdn.jsdelivr.net/jquery.roundslider/1.0/roundslider.min.css""&gt; &lt;script src=""//cdn.jsdelivr.net/jquery.roundslider/1.0/roundslider.min.js""&gt;&lt;/script&gt; &lt;/head&gt;    &lt;body&gt; &lt;div id=""slider""&gt;&lt;/div&gt; &lt;div id=""slide""&gt;&lt;/div&gt; &lt;script&gt; $(document.ready(function(){ var value; $(""#slider"").roundSlider({     sliderType: ""min-range"",     change: function(){     var obj1 =  $(""#slider"").data(""roundSlider"");     value = obj1.getValue(); $(""#slide"").html(value); }); $.ajax({     type: 'POST',     url: ""{{url_for('test')}}"",     contentType: 'application/json;charset=UTF-8',     data: {'data':value} }); });  &lt;/script&gt; &lt;/body&gt;  &lt;/html&gt; </code></pre>  <p>SERVER SIDE:</p>  <pre><code>    def flask():             connection()             app = Flask(__name__, template_folder='Templates')             @app.route('/test/', methods=['GET', 'POST'])             def test():                     if request.method == ""POST"":                             value=request.json['data']                             print(value)                     return render_template('roundslider1.html')              if __name__ == ""__main__"":                     app.run(host='192.168.42.1',port=2030, debug=True) </code></pre>"	44280675	"<p>After reading some more documentations, i used the below code to send the variable from j Query to flask server.</p>  <p>CLIENT SIDE:</p>  <pre><code>var value; $(""#slider"").roundSlider({   sliderType: ""min-range"",   change: function(){   var obj1 =  $(""#slider"").data(""roundSlider"");   value = obj1.getValue();   $.getJSON('/valueofslider', {     a:value   }); </code></pre>  <p>SERVER SIDE:</p>  <pre><code>@app.route('/valueofslider') def slide():     a = request.args.get('a')     print (a) </code></pre>"
44281493	Getting Javascript value in Python	javascript|python|json|beautifulsoup|request	2017-05-31 09:53:43.063000 UTC	"<p>I am currently writing a script that prints the content of a page and then extracts the data I need for a future request payload.</p>  <p>I am unable though to locate a certain value named ""dfValue"" it seems to be located within Javascript so when I try and extract the ""dfValue"" content I can only get a blank response. </p>  <p>The dfValue snippet is below:</p>  <pre><code>&lt;script type=""text/javascript"" src=""/hpp/js/df.js?v=20170531""&gt;&lt;/script&gt;  &lt;div id=""df_swf_c"" style=""display:none;""&gt;&lt;/div&gt; &lt;input type=""hidden"" name=""dfValue"" id=""dfValue"" value="""" /&gt; &lt;script type=""text/javascript""&gt;     //&lt;![CDATA[     dfDo(""dfValue"");     //]]&gt; &lt;/script&gt; </code></pre>  <p>With similar values on the page I am able to extract it by simply using code such as.</p>  <pre><code>soup.find(None, {'name': 'dfValue'}).get('value') </code></pre>  <p>but this does not work, is there a particular way I am able to extract the dfValue?</p>  <p>Advise is appreciated.</p>"	44288708	"<p>That <code>input</code> element is <strong>not</strong> within Javascript. It's accessible. As shown here, the <code>name</code> of the <code>input</code> element is 'dfValue' and its <code>value</code> is '' (an empty string).</p>  <pre><code>&gt;&gt;&gt; from bs4 import BeautifulSoup &gt;&gt;&gt; soup = BeautifulSoup(open('temp.htm'), 'lxml') &gt;&gt;&gt; input = soup.find('input') &gt;&gt;&gt; input.attrs['name'] 'dfValue' &gt;&gt;&gt; input.attrs['value'] '' </code></pre>  <p>If you need to be able to enter data into this field, or otherwise manipulate this form, then you could consider using the selenium library.</p>"
44321707	Reading and Writing from Json File using Python and Javascript	javascript|html|json|python-3.x	2017-06-02 05:51:37.990000 UTC	"<p>I am supposed to read one Python data structure, a 2d list to be precise into a javascript function. I came to know that this could be done after converting the python data structure into a json object and then reading the json object back using Javascript function. I am rendering the html page using the Python script as you can see below. </p>  <pre><code>import webbrowser, json f = open('World.html', 'w')  arr = [[]] arr[0].append('Hello') arr[0].append('There') arr.append([]) arr[1].append('Good') arr[1].append('Morning') arr[1].append('!') message = '''&lt;html&gt;&lt;head&gt;&lt;script type=""text/javascript"" src=""outputjson.json""&gt;&lt;/script&gt;&lt;script&gt;function Hello(){alert(outputjson.arr);}&lt;/script&gt;&lt;/head&gt;&lt;body&gt;&lt;h1&gt;This is not working and you know it&lt;/h1&gt;&lt;input value=""Click Bro"" type=""button"" onclick=""Hello();""&gt;&lt;/input&gt;&lt;/body&gt;&lt;/html&gt;''' f.write(message) with open('outputjson.json', 'w') as f:         json.dump(arr, f)  f.close() webbrowser.open_new_tab('World.html') </code></pre>  <p>Outputjson.json look something like this:  [[""Hello"", ""There""], [""Good"", ""Morning"", ""!""]]</p>  <p>The json object is successfully created but I am unable to read it back through my javascript function. Where am I going wrong ? I have a constraint, I can't go for BeautifulSoup. Thanks in advance. </p>"	44322023	"<p>You can't simple load json file into browser like that. One way is to make a XHR request to the json file and load it. The other way is to convert your <code>json</code> to <code>jsonp</code> structure.</p>  <pre><code>jsonp_structure = ""hello("" + json.dumps(arr) + "")"" f.write(jsonp_structure) </code></pre>  <p>With the above change your <code>hello</code> javascript function will get called with the JSON. You can choose to store the JSON for further access/processing.</p>"
44415285	have python script send data to javascript using JSON to change web page	javascript|python|json	2017-06-07 14:19:15.930000 UTC	"<p>I am working on an interactive display with sensors on a raspberry pi. My display is showing a webpage. I am using a python script to interact with the sensors. I want it so that when a user walks by, a different web page is displayed in the web browser. I have already tried changing to a different web page doing it straight from the python script. Unfortunately, it does not work the way I want it to. JavaScript works just fine for changing to a different page. I am thinking it might be good to have my python script send a message to a javascript file to change the page using JSON. Does this sound like a practical solution? Thanks.</p>"	44415647	"<p>Create your html file as a string in python.  This string can be modified in response to sensor input.  Write it to a file on your system where the html is source file exists; rewrite each time the sensor inputs change.  Set up a timer in Javascript, e.g. <code>setTimeout()</code> to refresh the page often.</p>"
44417835	Javascript send string to python-script	javascript|python|python-2.7|websocket	2017-06-07 16:10:44.467000 UTC	"<p>I have an (html/js) application running on my localhost. I'd like to send some information (string) to a python script running in the background, which will just print the string, or save it as a .txt-file.</p>  <p>It seems websockets will do the job, but I cannot get around this (in my eyes a simple problem..?). All examples or libraries aims at specific usages or are depricated in the meanwhile. Also, maybe someone can point me to another principle like REST.?  I'm not really into web/ip/internetthings, but I need this to let the webpage initiate some python programs. Any tips on how to achieve this?</p>"	44417979	"<p>I am doing something similar to have a web server (nodejs) control my raspberrypi (python). I suggest you simply spawn your python script by your js server and make them communicate via stdin/stdout.</p>  <p>For example with nodejs:</p>  <pre><code>var spawn = require('child_process').spawn; var child = spawn(     'python3',     ['./py/pi-ctrl.py'] ); var child_emit = function (message) {     child.stdin.write(message+""\n""); } </code></pre>  <p>Then your js can just 'emit' anything to your python script, which listens to stdin:</p>  <pre><code>while True:     line = input().split() </code></pre>"
44425359	Is there any python operator that equivalent to javascript triple equal?	python	2017-06-08 01:45:29.947000 UTC	"<p>I tried to do this but fail:</p>  <pre><code>File ""&lt;input&gt;"", line 1     1==='1'        ^ SyntaxError: invalid syntax </code></pre>  <p>Is there any workaround?</p>"	44425382	"<p>The ordinary <code>==</code> operator in Python already works much like the <code>===</code> operator in JavaScript, in that it won't do string conversions. However, it does <em>not</em> compare types.</p>  <pre><code>&gt;&gt;&gt; 1 == '1' False &gt;&gt;&gt; 1 == 1.0 True &gt;&gt;&gt; 1 == True True </code></pre>  <p>So we would say that Python doesn't have an exact equivalent to the JavaScript <code>==</code> or <code>===</code> operators.  The way Python uses <code>==</code>, without a <code>===</code> operator, is the norm. JavaScript (and PHP) are a bit unusual.</p>  <p>This last bit about <code>bool</code> might be a bit surprising, but <code>bool</code> is a subclass of <code>int</code> in Python.</p>"
44425359	Is there any python operator that equivalent to javascript triple equal?	python	2017-06-08 01:45:29.947000 UTC	"<p>I tried to do this but fail:</p>  <pre><code>File ""&lt;input&gt;"", line 1     1==='1'        ^ SyntaxError: invalid syntax </code></pre>  <p>Is there any workaround?</p>"	44425392	<p>Closest would maybe be the <code>is</code> operator. It returns <code>True</code> only if both variables point to the same object.</p>
44436830	Send string to python websocket using JavaScript	javascript|python|websocket	2017-06-08 13:16:32.857000 UTC	"<p>I have a locally running python websocket (code below) which I let run infinitely. I mainly copied the code from an example. The example uses another python client script to send data to it (also below). That simply works like a charm and is very simple; just what I need since I have some experience in Python but no clue about the 'web/internet'-thingies.</p>  <p>Now, in stead of using the python client, I'd like to send a message from an html document by javascript. Is there any guidance into a short piece of 'stupid' code, just sending one message (string) to the python websocketserver? The python script would then be able to execute different processes using this data.</p>  <p><strong>Python server:</strong> (works :) )  </p>  <pre><code>from socket import *  host = ""localhost"" port = 8089 buf = 1024 addr = (host,port)  sock = socket(AF_INET,SOCK_DGRAM) sock.setsockopt(SOL_SOCKET, SO_REUSEADDR, 1) sock.bind(addr)  print ""Websocket active."" print ""address:\t""+host+"":""+str(port)  while 1:     data,addr = sock.recvfrom(buf)     if not data:         print ""Client has exited!""         break     else:         print ""\nReceived message '"", data,""'""  # Close socket sock.close() </code></pre>  <p><strong>Python Client</strong> ( works, but not needed)  </p>  <pre><code>from socket import *  host = ""localhost"" port = 8089 buf = 1024 addr = (host,port)  sock = socket(AF_INET,SOCK_DGRAM) def_msg = ""===Enter message to send to server===""; print ""\n"",def_msg  while (1):     data = raw_input('&gt;&gt; ')     if not data:         break     else:         if(sock.sendto(data,addr)):             print ""Sending message '"",data,""'.....""  sock.close() </code></pre>  <p>And now towards the Javascript client..<br> Can't it be as simple as this? ;  </p>  <pre><code>var socket = new WebSocket(""ws://localhost:8089""); socket.onopen = function () {     alert(""alerting you"");     socket.send('Pingel'); }; </code></pre>"	44437047	"<p>Your Python server implements a regular TCP server, but your JS code is acting as a WebSocket client, which is an actual proper protocol on top of TCP: <a href=""https://www.rfc-editor.org/rfc/rfc6455"" rel=""nofollow noreferrer"">https://www.rfc-editor.org/rfc/rfc6455</a></p> <p>If you want both ends to communicate properly, you need to run a WebSocket server, like this: <a href=""https://github.com/dpallot/simple-websocket-server"" rel=""nofollow noreferrer"">https://github.com/dpallot/simple-websocket-server</a></p>"
44493181	Clicking javascript button with Python 3	python|python-3.x|selenium	2017-06-12 07:01:34.003000 UTC	"<p>I am trying to click a particular button with Selenium in Python 3.6.but button is not working. </p>  <p>Inspect element ;</p>  <pre><code>&lt;span class=""jsgrid-pager-page""&gt;&lt;a href=""javascript:void(0);""&gt;2&lt;/a&gt;&lt;/span&gt; </code></pre>  <p>I tried this code;</p>  <pre><code>page_button = browser.find_element_by_class_name(""2"").click() </code></pre>  <p>what should I do?</p>"	44493287	"<p>You might use link text instead of class name as '2' is not class name for any tag in your HTML code. You can try below code </p>  <pre><code>page_button = browser.find_element_by_link_text(""2"").click(); </code></pre>"
44493181	Clicking javascript button with Python 3	python|python-3.x|selenium	2017-06-12 07:01:34.003000 UTC	"<p>I am trying to click a particular button with Selenium in Python 3.6.but button is not working. </p>  <p>Inspect element ;</p>  <pre><code>&lt;span class=""jsgrid-pager-page""&gt;&lt;a href=""javascript:void(0);""&gt;2&lt;/a&gt;&lt;/span&gt; </code></pre>  <p>I tried this code;</p>  <pre><code>page_button = browser.find_element_by_class_name(""2"").click() </code></pre>  <p>what should I do?</p>"	44493297	"<p>There is no element in your example that will be found by:</p>  <pre><code>browser.find_element_by_class_name(""2"").click() </code></pre>  <p>You are searching now for a element with the class name 2, so something like <code>&lt;span class=""2""&gt;</code></p>  <p>You can target the span by the class jsgrid-pager-page, but there wil possibly be more the one occurrence of the class name.</p>  <p>An other possibility is to target the element by xpath, so like:</p>  <pre><code>//span/a[text()='2']   page_button = browser.find_element(By.XPATH, ""//span/a[text()='2']"").click() </code></pre>  <p>This way the the driver is going to search for a section containing span and an anchor and a 2.</p>  <p>So when you want to target the first of the third one in the row you just change the number</p>  <pre><code>// First page_button = browser.find_element(By.XPATH, ""//span/a[text()='2']"").click() // Third page_button = browser.find_element(By.XPATH, ""//span/a[text()='2']"").click() </code></pre>  <p>I suggest you read something about locators it wil help you in the future: <a href=""http://selenium-python.readthedocs.io/locating-elements.html"" rel=""nofollow noreferrer"">Locators</a> </p>"
44493181	Clicking javascript button with Python 3	python|python-3.x|selenium	2017-06-12 07:01:34.003000 UTC	"<p>I am trying to click a particular button with Selenium in Python 3.6.but button is not working. </p>  <p>Inspect element ;</p>  <pre><code>&lt;span class=""jsgrid-pager-page""&gt;&lt;a href=""javascript:void(0);""&gt;2&lt;/a&gt;&lt;/span&gt; </code></pre>  <p>I tried this code;</p>  <pre><code>page_button = browser.find_element_by_class_name(""2"").click() </code></pre>  <p>what should I do?</p>"	44493915	"<p>If by </p>  <blockquote>   <p>but button is not working.</p> </blockquote>  <p>you mean that the button is not redirecting to some page or doing something, than it might be explained by the <code>href=""javascript:void(0)</code> attribute inside your <code>a</code> tag. The <code>void</code> operator after evaluating an expression would return <code>undefined</code> in this case, and so the browser will stay in the same page and button click would not do anything.</p>  <p>Please see this SO post for more information about <a href=""http://%60href=%22javascript:void(0)%60"" rel=""nofollow noreferrer""><code>href=""javascript:void(0)</code></a> </p>  <hr>  <p><strong>This is apart from the fact that your locator is not correct. Please fix the locator first.</strong></p>"
44493181	Clicking javascript button with Python 3	python|python-3.x|selenium	2017-06-12 07:01:34.003000 UTC	"<p>I am trying to click a particular button with Selenium in Python 3.6.but button is not working. </p>  <p>Inspect element ;</p>  <pre><code>&lt;span class=""jsgrid-pager-page""&gt;&lt;a href=""javascript:void(0);""&gt;2&lt;/a&gt;&lt;/span&gt; </code></pre>  <p>I tried this code;</p>  <pre><code>page_button = browser.find_element_by_class_name(""2"").click() </code></pre>  <p>what should I do?</p>"	44494956	"<p>There is no class name <code>""2""</code> added to target link <code>HTML</code>. You might use link text to locate required element. If with <a href=""https://stackoverflow.com/questions/44493181/clicking-javascript-button-with-python-3/44493287#44493287"">answer provided by @Ankur Singh</a> you get <code>NoSuchElementException</code> it might mean that link generated dynamically and you should wait for its appearance in DOM:</p>  <pre><code>from selenium.webdriver.common.by import By from selenium.webdriver.support.ui import WebDriverWait as wait from selenium.webdriver.support import expected_conditions as EC  wait(browser, 10).until(EC.element_to_be_clickable((By.LINK_TEXT, ""2""))).click() </code></pre>"
44514890	Does call/cc in Scheme the same thing with yield in Python and JavaScript?	scheme|generator|yield	2017-06-13 07:25:09.323000 UTC	"<p>Does <code>call/cc</code> in Scheme the same thing with <code>yield</code> in Python and JavaScript? </p>  <p>I am not clear about generators. In my opinion, <code>yield</code> gives a language the ability to generate iterators without pain. But I am not sure whether I am right.</p>  <p>Does <code>call/cc</code> in Scheme has something related to <code>yield</code> in other languages? If so, are they the same thing, or what is the difference?</p>  <p>Thanks!</p>"	44522334	"<p>Here's code to define a generator:</p>  <pre><code>(define-syntax define-generator   (lambda (x)     (syntax-case x (lambda)       ((stx name (lambda formals e0 e1 ...))          (with-syntax ((yield (datum-&gt;syntax (syntax stx) 'yield)))            (syntax (define name              (lambda formals                (let ((resume #f) (return #f))                  (define yield                    (lambda args                      (call-with-current-continuation                       (lambda (cont)                         (set! resume cont)                         (apply return args)))))                  (lambda ()                    (call-with-current-continuation                     (lambda (cont)                       (set! return cont)                       (cond (resume (resume))                       (else (let () e0 e1 ...)                             (error 'name ""unexpected return""))))))))))))         ((stx (name . formals) e0 e1 ...)           (syntax (stx name (lambda formals e0 e1 ...))))))) </code></pre>  <p>There are examples of the use of generators at <a href=""https://programmingpraxis.com/2011/11/11/generators/2/"" rel=""nofollow noreferrer"">my blog</a>. Generators use <code>call-with-current-continuation</code>, in a manner similar to <code>yield</code> in Python, but are much more general.</p>"
44514890	Does call/cc in Scheme the same thing with yield in Python and JavaScript?	scheme|generator|yield	2017-06-13 07:25:09.323000 UTC	"<p>Does <code>call/cc</code> in Scheme the same thing with <code>yield</code> in Python and JavaScript? </p>  <p>I am not clear about generators. In my opinion, <code>yield</code> gives a language the ability to generate iterators without pain. But I am not sure whether I am right.</p>  <p>Does <code>call/cc</code> in Scheme has something related to <code>yield</code> in other languages? If so, are they the same thing, or what is the difference?</p>  <p>Thanks!</p>"	44532644	"<p>You can implement generators with call/cc.  Here is an example:</p>  <p><a href=""https://github.com/ChrisVine/chez-a-sync/blob/master/a-sync/coroutines.ss"" rel=""nofollow noreferrer"">coroutines.ss</a></p>  <p>They work in a similar way to python and ECMAScript generators.</p>"
44514890	Does call/cc in Scheme the same thing with yield in Python and JavaScript?	scheme|generator|yield	2017-06-13 07:25:09.323000 UTC	"<p>Does <code>call/cc</code> in Scheme the same thing with <code>yield</code> in Python and JavaScript? </p>  <p>I am not clear about generators. In my opinion, <code>yield</code> gives a language the ability to generate iterators without pain. But I am not sure whether I am right.</p>  <p>Does <code>call/cc</code> in Scheme has something related to <code>yield</code> in other languages? If so, are they the same thing, or what is the difference?</p>  <p>Thanks!</p>"	44552413	"<p><code>call/cc</code> is a much more general language feature than generators. Thus you can make generators with <code>call/cc</code>, but you cannot make <code>call/cc</code> with generators. </p>  <p>If you have a program that computes values and use those values in other places its basically a step machine.. One might think of it as a program that have one function for each step and a continuation for the rest of the steps. Thus:</p>    <pre class=""lang-scm prettyprint-override""><code>(+ (* 3 4) (* 5 6)) </code></pre>  <p>Can be interpreted as:</p>  <pre class=""lang-scm prettyprint-override""><code>((lambda (k)   (k* 3 4 (lambda (v34)             (k* 5 6 (lambda (v56)                       (k+ v34 v56 k)))))  halt) </code></pre>  <p>The k-prefix just indicate that it's a CPS-version of the primitives. Thus they call the last argument as a function with the result. Notice also that the order of evaluation, which is not defined in Scheme, is in fact chosen in this rewrite. In this beautiful language <code>call/cc</code> is just this:</p>  <pre class=""lang-scm prettyprint-override""><code>(define (kcall/cc kfn k)   (kfn (lambda (value ignored-continuation)          (k value))        k)) </code></pre>  <p>So when you do:</p>  <pre class=""lang-scm prettyprint-override""><code>(+ (* 3 4) (call/cc (lambda (exit) (* 5 (exit 6)))))  ; ==&gt; 18 </code></pre>  <p>Under the hood this happens:</p>  <pre class=""lang-scm prettyprint-override""><code>((lambda (k)   (k* 3 4 (lambda (v34)             (kcall/cc (lambda (exit k)                         (exit 6 (lambda (v6)                                  (k* 5 v6 k)))                       k))))  halt) </code></pre>  <p>By using the substitution we can prove that this actually does exactly as intended. Since the exit function is invoked the original continuation is never called and thus the computation cancelled. In contrast to <code>call/cc</code> giving us this continuation that doesn't seem obvious it's no magic in CPS. Thus much of the magic of <code>call/cc</code> is in the compiler stage.</p>  <pre class=""lang-scm prettyprint-override""><code>(define (make-generator procedure)   (define last-return values)   (define last-value #f)   (define (last-continuation _)      (let ((result (procedure yield)))        (last-return result)))    (define (yield value)     (call/cc (lambda (continuation)                (set! last-continuation continuation)                (set! last-value value)                (last-return value))))    (lambda args     (call/cc (lambda (return)                (set! last-return return)                (if (null? args)                    (last-continuation last-value)                    (apply last-continuation args))))))  (define test   (make-generator    (lambda (collect)      (collect 1)      (collect 5)      (collect 10)      #f)))  (test) ; ==&gt; 1 (test) ; ==&gt; 5 (test) ; ==&gt; 10 (test) ; ==&gt; #f (procedure finished) </code></pre>  <p>One might <a href=""https://stackoverflow.com/a/30632051"">make a macro to make the syntax more similar</a>, but it's just sugar on top of this.</p>  <p>For more examples <a href=""http://matt.might.net/articles/programming-with-continuations--exceptions-backtracking-search-threads-generators-coroutines/"" rel=""nofollow noreferrer"">I love Matt Mights page</a> with lots of examples on how to use continuations. </p>"
44525221	How much memory is allocated to different data types in Javascript & Python?	javascript|python-3.x	2017-06-13 15:04:52.073000 UTC	<p>I wanted to know how much memory does different data types take up in Python and Javascript.I know that you do not need to declare types in both the languages but don't forget they are <strong><em>dynamically</em></strong> typed languages </p>	44744251	"<p>For the case of <code>Python 3</code>, let's explore the the amount of storage each of the basic data types consume,</p>  <p>First, let's define a helper function <code>sizeof</code> which will help us explore,</p>  <pre><code>import sys def sizeof(x):     print(x.__class__, sys.getsizeof(x), x) </code></pre>  <p>Running this with 64-bit Python 3.6.1, here are the results :</p>  <pre><code>&gt;&gt;&gt; sizeof(None) &lt;class 'NoneType'&gt; 16 None </code></pre>  <p><code>None</code> takes 16 bytes. Next let's explore integers,    </p>  <pre><code>&gt;&gt;&gt; sizeof(10) &lt;class 'int'&gt; 28 10 &gt;&gt;&gt; sizeof(2**64) &lt;class 'int'&gt; 36 18446744073709551616 &gt;&gt;&gt; sizeof(2**128) &lt;class 'int'&gt; 44 340282366920938463463374607431768211456 </code></pre>  <p>Integers in python are arbitrary precision and the above rightfully exhibits the behaviour, the size grows linearly in the logarithm of the integer represented.</p>  <pre><code>&gt;&gt;&gt; sizeof(0.0) &lt;class 'float'&gt; 24 0.0 &gt;&gt;&gt; sizeof(10.0**100) &lt;class 'float'&gt; 24 1e+100 &gt;&gt;&gt; sizeof(10.0**308) &lt;class 'float'&gt; 24 1e+308 </code></pre>  <p>Floats in python appear to be of constant size (24 bytes)!</p>  <pre><code>&gt;&gt;&gt; sizeof("""") &lt;class 'str'&gt; 49  &gt;&gt;&gt; sizeof(""A"") &lt;class 'str'&gt; 50 A &gt;&gt;&gt; sizeof(""AB"") &lt;class 'str'&gt; 51 AB &gt;&gt;&gt; sizeof(""ABC"") &lt;class 'str'&gt; 52 ABC </code></pre>  <p>An empty <code>string</code> is 49 bytes, it grows linearly with the length of the string.</p>  <p>Next, lets explore lists, dicts, tuples &amp; sets,</p>  <pre><code>&gt;&gt;&gt; sizeof([]) &lt;class 'list'&gt; 64 [] &gt;&gt;&gt; sizeof([1,2,3,4,5,6,7,8,9,10]) &lt;class 'list'&gt; 144 [1, 2, 3, 4, 5, 6, 7, 8, 9, 10] </code></pre>  <p>An empty <code>list</code> occupies 64 bytes, it grows with the number of elements.</p>  <pre><code>&gt;&gt;&gt; sizeof(()) &lt;class 'tuple'&gt; 48 () &gt;&gt;&gt; sizeof((1,)) &lt;class 'tuple'&gt; 56 (1,) &gt;&gt;&gt; sizeof((1,2,3,4,5,6,7,8,9,10,)) &lt;class 'tuple'&gt; 128 (1, 2, 3, 4, 5, 6, 7, 8, 9, 10) </code></pre>  <p>An empty <code>tuple</code> occupies 48 bytes, it grows with the number of elements.</p>  <pre><code>&gt;&gt;&gt; sizeof({}) &lt;class 'dict'&gt; 240 {} &gt;&gt;&gt; sizeof({""a"" : 1}) &lt;class 'dict'&gt; 240 {'a': 1} &gt;&gt;&gt; a = {} &gt;&gt;&gt; for i in range(20):  ...     a[i] = i**2 ...  &gt;&gt;&gt; sizeof(a) &lt;class 'dict'&gt; 648 {0: 0, 1: 1, 2: 4, 3: 9, 4: 16, 5: 25, 6: 36, 7: 49, 8: 64, 9: 81, 10: 100, 11: 121, 12: 144, 13: 169, 14: 196, 15: 225, 16: 256, 17: 289, 18: 324, 19: 361} </code></pre>  <p>An empty <code>dict</code> occupies 240 bytes, it grows with the number of elements.</p>  <pre><code>&gt;&gt;&gt; sizeof(set()) &lt;class 'set'&gt; 224 set() &gt;&gt;&gt; sizeof({1}) &lt;class 'set'&gt; 224 {1} &gt;&gt;&gt; sizeof({1,2,3,4,5,6,7,8,9,10}) &lt;class 'set'&gt; 736 {1, 2, 3, 4, 5, 6, 7, 8, 9, 10} </code></pre>  <p>An empty <code>set</code> occupies 224 bytes, it grows with the number of elements.</p>  <p>This concludes my brief exploration on the memory consumption of various data types in <code>python</code>. Memory management in Python is easy—if you just don’t care <em>but</em> it proves to be challenge when you scale !</p>  <p>You read more on memory management in Python in the theano docs <a href=""http://deeplearning.net/software/theano/tutorial/python-memory-management.html"" rel=""nofollow noreferrer"">here</a>.</p>"
44536889	Trying to send value from javascript to python server	javascript|python|html|django	2017-06-14 06:17:57.393000 UTC	"<p>I have multiple input tags, my task is to collect the values entered by the user and send it back to the server. I am using Django as my framework. I am successful in sending the data to the client side (javascript).  To return back the data from javascript function to my python function, I used XMLHttpRequest.  I have added my code below: </p>  <pre><code>&lt;html&gt; &lt;head&gt; &lt;style&gt;label{ text-align:center; width:250px; color:blue; display:inline-block}&lt;/style&gt;   &lt;script type=""text/javascript"" src=""'+url_read+'""&gt;&lt;/script&gt;   &lt;script&gt; function submit_this() { var i,j;var arr=[]; for(i=0; i&lt;Hello.length; i++)   { arr[i]=[]; for(j=0;j&lt;Hello[i].length; j++)  { arr[i].push(document.getElementById(Hello[i][j]).value); } } alert(document.getElementById(Hello[1][0]).value);   xmlHttpReq =     new XMLHttpRequest();    xmlHttpReq.open('POST', '/button_click',true);     xmlHttpReq.send('w=' + encodeURI(arr)); } &lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;center&gt; &lt;button id=""submit_button"" onclick=""submit_this();"" value=""Submit""&gt;Submit&lt;/button&gt; &lt;/center&gt; &lt;/body&gt; &lt;/html&gt; </code></pre>  <p>The above code is stored in a string called html_string.  Hello is a json object read from the file denoted by the varible url_read. It was dumped using Python.  The plan was to use HttpResponse to send the html_string and render the html page in return. </p>  <p>I understand that I need to make one POST function in one of the classes in views.py. But unable to understand how to approach this problem. </p>  <p>I have to somehow send the javascript data structure named arr back to the server side. The main doubt is where can I put my code where I can read the value posted by the javascript function.  I want to navigate to a new page once submit button has been pressed and in Django each url has a new function (in views.py) associated with it. Should I place it in that ?</p>"	44542789	"<p>Here is an example where in I am sending values to (Django)python server using JS, and receiving html rendered template. I am using ul tag with id #Nearby to load html inside an html. Ajax  success is returning html from django view rendered through url endpoint '/getGopoints/'</p>  <p><em>template.html</em></p>  <pre><code>&lt;div class=""row""&gt;     &lt;div&gt;         &lt;ul id=""Nearby""&gt;          &lt;/ul&gt;     &lt;/div&gt;   &lt;/div&gt;   &lt;script&gt;  $(document).ready(function(){           $('#dataTables-example1').DataTable({                     responsive: true             });           getLocation();     });  function getLocation() {         if (navigator.geolocation) {             navigator.geolocation.getCurrentPosition(showPosition);         }      }   function showPosition(position) {         $.ajax({                 url : '/getGopoints/', // the endpoint                 type : 'GET', // http method                 data : { 'lat' : position.coords.latitude,                          'lon' : position.coords.longitude,                         'csrfmiddlewaretoken': '{{csrf_token}}'                  }, // data sent with the post request                  // handle a successful response                 success : function(data) {                   $('#Nearby').html(data);                   },                 dataType: 'html'          });     } &lt;/script&gt; </code></pre>  <p><em>urls.py</em></p>  <pre><code> url(r'^getGopoints/$',views.getGopoints, name='getGopoints'), </code></pre>  <p><em>views.py</em></p>  <pre><code>def getGopoints(request):     lat = str(request.GET['lat'])     lon = str(request.GET['lon'])     pnt=fromstr('POINT(%s %s)' %(lon,lat))     with_in_distance = 20     go_points = GoPoint.objects.filter(point__distance_lte=(pnt, D(km=with_in_distance)))     context = RequestContext(request,         {'go_points':go_points,         'with_in_distance':with_in_distance,         })     return render_to_response('nearby.html',                              context_instance=context) </code></pre>"
44537037	Click on Javascript used for pagination using Selenium and Python.	javascript|python-2.7|selenium|web-scraping	2017-06-14 06:27:00.887000 UTC	"<p>I am new to selenium and currently using Python 2.7 for same. I want to click on some Javascripts which are being used for pagination in the website. I am adding the link to the page. Please help me out with hints or code? Thank you!</p>  <p><a href=""http://www.mouser.in/new/circuit-protection/n-5g3c"" rel=""nofollow noreferrer"">http://www.mouser.in/new/circuit-protection/n-5g3c</a></p>"	44542816	"<p>You can try the code to click on pagination 2</p>  <pre><code>driver = webdriver.Chrome() driver.get(""http://www.mouser.in/new/circuit-protection/n-5g3c"") hrefvalue=driver.find_element_by_id(""2"").get_attribute('href') driver.execute_script(hrefvalue); </code></pre>"
44590287	Python: Scrape JavaScript table and save result as csv file without opening browser	python|csv|web-scraping	2017-06-16 13:18:58.617000 UTC	"<p><strong>Python: Scraping web-table and save data to a CSV file</strong> <strong>:</strong> The code below works perfectly but how can I achieve the same objective of scraping the table without opening a browser? i.e. Run process underground. The code is as follows;</p>  <pre><code>import selenium.webdriver as webdriver import contextlib import csv import json  @contextlib.contextmanager def quitting(browser):     yield browser     browser.close()     browser.quit()  with quitting(webdriver.Chrome()) as driver:     url = ""https://fantasy.premierleague.com/a/statistics/total_points""     driver.get(url)     id = 1;     data = []     idlist = [id]     for tr in driver.find_elements_by_xpath('//table[@class=""ism-table ism-table--el""]//tr'):         tds = tr.find_elements_by_tag_name('td')         if tds:             data.append([id]+[td.text for td in tds])             #data[0] = id             id = id+1             #idlist = [id+1]             #n = len(data)             outfile=open('./result.csv','w')             wr = csv.writer(outfile, dialect='excel')             wr.writerows(data)             print(data) </code></pre>"	44590460	"<p>You can use PhantomJS as a driver in stead of chrome to open a headless browser. You ca download it from here: <a href=""http://phantomjs.org/download.html"" rel=""nofollow noreferrer"">http://phantomjs.org/download.html</a>, add exe to Python35-32 folder and then you use it just like chrome driver but instead you write:</p>  <pre><code>with quitting(webdriver.PhantomJS()) as driver: </code></pre>"
44590287	Python: Scrape JavaScript table and save result as csv file without opening browser	python|csv|web-scraping	2017-06-16 13:18:58.617000 UTC	"<p><strong>Python: Scraping web-table and save data to a CSV file</strong> <strong>:</strong> The code below works perfectly but how can I achieve the same objective of scraping the table without opening a browser? i.e. Run process underground. The code is as follows;</p>  <pre><code>import selenium.webdriver as webdriver import contextlib import csv import json  @contextlib.contextmanager def quitting(browser):     yield browser     browser.close()     browser.quit()  with quitting(webdriver.Chrome()) as driver:     url = ""https://fantasy.premierleague.com/a/statistics/total_points""     driver.get(url)     id = 1;     data = []     idlist = [id]     for tr in driver.find_elements_by_xpath('//table[@class=""ism-table ism-table--el""]//tr'):         tds = tr.find_elements_by_tag_name('td')         if tds:             data.append([id]+[td.text for td in tds])             #data[0] = id             id = id+1             #idlist = [id+1]             #n = len(data)             outfile=open('./result.csv','w')             wr = csv.writer(outfile, dialect='excel')             wr.writerows(data)             print(data) </code></pre>"	44590582	"<p>the quickest approach is to replace chrome driver with <a href=""http://phantomjs.org/download.html"" rel=""nofollow noreferrer"">phantomJS</a></p>  <pre><code>with quitting(webdriver.PhantomJS()) as driver:     # initiates a phantomjs headless browser browser, runs underground   with quitting(webdriver.Chrome()) as driver:     # initiates a chrome browser the browser is visible on the screen </code></pre>"
44621051	Passing parameter(s) to Javascript file from Python Flask app through HTML	javascript|python|flask	2017-06-19 01:19:11.277000 UTC	"<p>I am building a Python/Flask based web app. The python script produces a dictionary of words and their corresponding weights. I have a javascript file (let's call it <code>custom.js</code>), which I call from the output.html. The way this javascript works is that it takes this dictionary and then uses <code>d3.v3.min.js</code> and <code>d3.layout.cloud.js</code> to create a wordcloud. When the dictionary is hard-coded into <code>custom.js</code>, the output file shows the wordcloud. However, the dictionary values will change depending on other parameters in the python script. Therefore, I would like to pass this dictionary from Python to <code>custom.js</code>. I am not sure how to do that. </p>  <p>I know that the parameters could be passed to HTML using <code>{{ params |safe }}</code>, but I am trying to figure out how to do that so that <code>custom.js</code> will receive the parameters (dictionary of words and weights, in this case) and word clouds can be rendered dynamically.</p>  <p>Thank you in advance!</p>"	44621834	"<p>If I understood you correctly you need to create a view function (a route) in the flask backend with url like this <code>/get_dictionary</code>. This function can look like this:</p>  <p>from flask import request, jsonify ...</p>  <pre><code>@app.route('/get_dictionary'): def get_dictionary():     ...     your_dictionary = []     # Fill in your_dictionary with data     ...     render_template('your_template.html', your_dictionary=your_dictionary) </code></pre>  <p>EDIT:</p>  <p>You can pass the data from flask to script section of the html template using standard jinja2 notation:</p>  <pre><code>&lt;html&gt; &lt;head&gt;   &lt;script&gt;     your_dictionary = {{ your_dictionary | tojson }}     &lt;!-- Do what you need with your_dictionary --&gt;   &lt;/script&gt;     ... &lt;/head&gt; ... </code></pre>"
44621051	Passing parameter(s) to Javascript file from Python Flask app through HTML	javascript|python|flask	2017-06-19 01:19:11.277000 UTC	"<p>I am building a Python/Flask based web app. The python script produces a dictionary of words and their corresponding weights. I have a javascript file (let's call it <code>custom.js</code>), which I call from the output.html. The way this javascript works is that it takes this dictionary and then uses <code>d3.v3.min.js</code> and <code>d3.layout.cloud.js</code> to create a wordcloud. When the dictionary is hard-coded into <code>custom.js</code>, the output file shows the wordcloud. However, the dictionary values will change depending on other parameters in the python script. Therefore, I would like to pass this dictionary from Python to <code>custom.js</code>. I am not sure how to do that. </p>  <p>I know that the parameters could be passed to HTML using <code>{{ params |safe }}</code>, but I am trying to figure out how to do that so that <code>custom.js</code> will receive the parameters (dictionary of words and weights, in this case) and word clouds can be rendered dynamically.</p>  <p>Thank you in advance!</p>"	61402381	"<p>you can try define a var in your template html, like this:</p>  <pre><code>&lt;script&gt;         var your_var = '{{ value }}' &lt;/script&gt; </code></pre>  <p>then use ""your_var"" in external js file. But please make sure above definition is at ahead of your js file refer.</p>"
44621771	My javascript won't load in python-flask	javascript|html|flask	2017-06-19 03:17:25.510000 UTC	"<p>I'm attempting to load a piece of javascript funconality into my index.html however when I load in flask it doesn't seem to be working.I am not an JS expert however I'm assuming it's JS Faulty because I've made sure everythings on right directory and being loaded correctly. Please take a look at what I'm doing wrong. </p>  <p>base.html</p>  <pre><code>&lt;!doctype html&gt; &lt;html&gt; &lt;head&gt;   &lt;title&gt;Flask-Mobility example&lt;/title&gt; &lt;/head&gt; &lt;body&gt;   {% block content %}   {% endblock %} &lt;/body&gt; &lt;/html&gt; app\static\index.js </code></pre>  <p>index.html</p>  <pre><code>{% extends 'base.html' %}   {% block content %}     &lt;script type=""text/javascript"" src=""{{ url_for('static', filename='index.js') }}""&gt;&lt;/script&gt;      &lt;link rel= ""stylesheet"" type= ""text/css"" href= ""{{ url_for('static',filename='styles/index.css') }}""&gt;      &lt;!-- multistep form --&gt;     &lt;form id=""msform""&gt;       &lt;!-- progressbar --&gt;       &lt;ul id=""progressbar""&gt;         &lt;li class=""active""&gt;Account Setup&lt;/li&gt;         &lt;li&gt;Social Profiles&lt;/li&gt;         &lt;li&gt;Personal Details&lt;/li&gt;       &lt;/ul&gt;       &lt;!-- fieldsets --&gt;       &lt;fieldset&gt;         &lt;h2 class=""fs-title""&gt;Create your account&lt;/h2&gt;         &lt;h3 class=""fs-subtitle""&gt;This is step 1&lt;/h3&gt;         &lt;input type=""text"" name=""email"" placeholder=""Email"" /&gt;         &lt;input type=""password"" name=""pass"" placeholder=""Password"" /&gt;         &lt;input type=""password"" name=""cpass"" placeholder=""Confirm Password"" /&gt;         &lt;input type=""button"" name=""next"" class=""next action-button"" value=""Next"" /&gt;       &lt;/fieldset&gt;       &lt;fieldset&gt;         &lt;h2 class=""fs-title""&gt;Social Profiles&lt;/h2&gt;         &lt;h3 class=""fs-subtitle""&gt;Your presence on the social network&lt;/h3&gt;         &lt;input type=""text"" name=""twitter"" placeholder=""Twitter"" /&gt;         &lt;input type=""text"" name=""facebook"" placeholder=""Facebook"" /&gt;         &lt;input type=""text"" name=""gplus"" placeholder=""Google Plus"" /&gt;         &lt;input type=""button"" name=""previous"" class=""previous action-button"" value=""Previous"" /&gt;         &lt;input type=""button"" name=""next"" class=""next action-button"" value=""Next"" /&gt;       &lt;/fieldset&gt;       &lt;fieldset&gt;         &lt;h2 class=""fs-title""&gt;Personal Details&lt;/h2&gt;         &lt;h3 class=""fs-subtitle""&gt;We will never sell it&lt;/h3&gt;         &lt;input type=""text"" name=""fname"" placeholder=""First Name"" /&gt;         &lt;input type=""text"" name=""lname"" placeholder=""Last Name"" /&gt;         &lt;input type=""text"" name=""phone"" placeholder=""Phone"" /&gt;         &lt;textarea name=""address"" placeholder=""Address""&gt;&lt;/textarea&gt;         &lt;input type=""button"" name=""previous"" class=""previous action-button"" value=""Previous"" /&gt;         &lt;input type=""submit"" name=""submit"" class=""submit action-button"" value=""Submit"" /&gt;       &lt;/fieldset&gt;     &lt;/form&gt;  {% endblock %} </code></pre>  <p>index.js</p>  <pre><code>//jQuery time var current_fs, next_fs, previous_fs; //fieldsets var left, opacity, scale; //fieldset properties which we will animate var animating; //flag to prevent quick multi-click glitches  $("".next"").click(function(){     if(animating) return false;     animating = true;      current_fs = $(this).parent();     next_fs = $(this).parent().next();      //activate next step on progressbar using the index of next_fs     $(""#progressbar li"").eq($(""fieldset"").index(next_fs)).addClass(""active"");      //show the next fieldset     next_fs.show();      //hide the current fieldset with style     current_fs.animate({opacity: 0}, {         step: function(now, mx) {             //as the opacity of current_fs reduces to 0 - stored in ""now""             //1. scale current_fs down to 80%             scale = 1 - (1 - now) * 0.2;             //2. bring next_fs from the right(50%)             left = (now * 50)+""%"";             //3. increase opacity of next_fs to 1 as it moves in             opacity = 1 - now;             current_fs.css({         'transform': 'scale('+scale+')',         'position': 'absolute'       });             next_fs.css({'left': left, 'opacity': opacity});         },          duration: 800,          complete: function(){             current_fs.hide();             animating = false;         },          //this comes from the custom easing plugin         easing: 'easeInOutBack'     }); });  $("".previous"").click(function(){     if(animating) return false;     animating = true;      current_fs = $(this).parent();     previous_fs = $(this).parent().prev();      //de-activate current step on progressbar     $(""#progressbar li"").eq($(""fieldset"").index(current_fs)).removeClass(""active"");      //show the previous fieldset     previous_fs.show();      //hide the current fieldset with style     current_fs.animate({opacity: 0}, {         step: function(now, mx) {             //as the opacity of current_fs reduces to 0 - stored in ""now""             //1. scale previous_fs from 80% to 100%             scale = 0.8 + (1 - now) * 0.2;             //2. take current_fs to the right(50%) - from 0%             left = ((1-now) * 50)+""%"";             //3. increase opacity of previous_fs to 1 as it moves in             opacity = 1 - now;             current_fs.css({'left': left});             previous_fs.css({'transform': 'scale('+scale+')', 'opacity': opacity});         },          duration: 800,          complete: function(){             current_fs.hide();             animating = false;         },          //this comes from the custom easing plugin         easing: 'easeInOutBack'     }); });  $("".submit"").click(function(){     return false; }) </code></pre>"	44622075	"<p>Move your <code>script</code> tags to the bottom.</p>  <p>If written at the top, they have nothing to reference. For instance, <code>$("".next"")</code> isn't actually matching anything since the elements with that class haven't been created.</p>"
44621771	My javascript won't load in python-flask	javascript|html|flask	2017-06-19 03:17:25.510000 UTC	"<p>I'm attempting to load a piece of javascript funconality into my index.html however when I load in flask it doesn't seem to be working.I am not an JS expert however I'm assuming it's JS Faulty because I've made sure everythings on right directory and being loaded correctly. Please take a look at what I'm doing wrong. </p>  <p>base.html</p>  <pre><code>&lt;!doctype html&gt; &lt;html&gt; &lt;head&gt;   &lt;title&gt;Flask-Mobility example&lt;/title&gt; &lt;/head&gt; &lt;body&gt;   {% block content %}   {% endblock %} &lt;/body&gt; &lt;/html&gt; app\static\index.js </code></pre>  <p>index.html</p>  <pre><code>{% extends 'base.html' %}   {% block content %}     &lt;script type=""text/javascript"" src=""{{ url_for('static', filename='index.js') }}""&gt;&lt;/script&gt;      &lt;link rel= ""stylesheet"" type= ""text/css"" href= ""{{ url_for('static',filename='styles/index.css') }}""&gt;      &lt;!-- multistep form --&gt;     &lt;form id=""msform""&gt;       &lt;!-- progressbar --&gt;       &lt;ul id=""progressbar""&gt;         &lt;li class=""active""&gt;Account Setup&lt;/li&gt;         &lt;li&gt;Social Profiles&lt;/li&gt;         &lt;li&gt;Personal Details&lt;/li&gt;       &lt;/ul&gt;       &lt;!-- fieldsets --&gt;       &lt;fieldset&gt;         &lt;h2 class=""fs-title""&gt;Create your account&lt;/h2&gt;         &lt;h3 class=""fs-subtitle""&gt;This is step 1&lt;/h3&gt;         &lt;input type=""text"" name=""email"" placeholder=""Email"" /&gt;         &lt;input type=""password"" name=""pass"" placeholder=""Password"" /&gt;         &lt;input type=""password"" name=""cpass"" placeholder=""Confirm Password"" /&gt;         &lt;input type=""button"" name=""next"" class=""next action-button"" value=""Next"" /&gt;       &lt;/fieldset&gt;       &lt;fieldset&gt;         &lt;h2 class=""fs-title""&gt;Social Profiles&lt;/h2&gt;         &lt;h3 class=""fs-subtitle""&gt;Your presence on the social network&lt;/h3&gt;         &lt;input type=""text"" name=""twitter"" placeholder=""Twitter"" /&gt;         &lt;input type=""text"" name=""facebook"" placeholder=""Facebook"" /&gt;         &lt;input type=""text"" name=""gplus"" placeholder=""Google Plus"" /&gt;         &lt;input type=""button"" name=""previous"" class=""previous action-button"" value=""Previous"" /&gt;         &lt;input type=""button"" name=""next"" class=""next action-button"" value=""Next"" /&gt;       &lt;/fieldset&gt;       &lt;fieldset&gt;         &lt;h2 class=""fs-title""&gt;Personal Details&lt;/h2&gt;         &lt;h3 class=""fs-subtitle""&gt;We will never sell it&lt;/h3&gt;         &lt;input type=""text"" name=""fname"" placeholder=""First Name"" /&gt;         &lt;input type=""text"" name=""lname"" placeholder=""Last Name"" /&gt;         &lt;input type=""text"" name=""phone"" placeholder=""Phone"" /&gt;         &lt;textarea name=""address"" placeholder=""Address""&gt;&lt;/textarea&gt;         &lt;input type=""button"" name=""previous"" class=""previous action-button"" value=""Previous"" /&gt;         &lt;input type=""submit"" name=""submit"" class=""submit action-button"" value=""Submit"" /&gt;       &lt;/fieldset&gt;     &lt;/form&gt;  {% endblock %} </code></pre>  <p>index.js</p>  <pre><code>//jQuery time var current_fs, next_fs, previous_fs; //fieldsets var left, opacity, scale; //fieldset properties which we will animate var animating; //flag to prevent quick multi-click glitches  $("".next"").click(function(){     if(animating) return false;     animating = true;      current_fs = $(this).parent();     next_fs = $(this).parent().next();      //activate next step on progressbar using the index of next_fs     $(""#progressbar li"").eq($(""fieldset"").index(next_fs)).addClass(""active"");      //show the next fieldset     next_fs.show();      //hide the current fieldset with style     current_fs.animate({opacity: 0}, {         step: function(now, mx) {             //as the opacity of current_fs reduces to 0 - stored in ""now""             //1. scale current_fs down to 80%             scale = 1 - (1 - now) * 0.2;             //2. bring next_fs from the right(50%)             left = (now * 50)+""%"";             //3. increase opacity of next_fs to 1 as it moves in             opacity = 1 - now;             current_fs.css({         'transform': 'scale('+scale+')',         'position': 'absolute'       });             next_fs.css({'left': left, 'opacity': opacity});         },          duration: 800,          complete: function(){             current_fs.hide();             animating = false;         },          //this comes from the custom easing plugin         easing: 'easeInOutBack'     }); });  $("".previous"").click(function(){     if(animating) return false;     animating = true;      current_fs = $(this).parent();     previous_fs = $(this).parent().prev();      //de-activate current step on progressbar     $(""#progressbar li"").eq($(""fieldset"").index(current_fs)).removeClass(""active"");      //show the previous fieldset     previous_fs.show();      //hide the current fieldset with style     current_fs.animate({opacity: 0}, {         step: function(now, mx) {             //as the opacity of current_fs reduces to 0 - stored in ""now""             //1. scale previous_fs from 80% to 100%             scale = 0.8 + (1 - now) * 0.2;             //2. take current_fs to the right(50%) - from 0%             left = ((1-now) * 50)+""%"";             //3. increase opacity of previous_fs to 1 as it moves in             opacity = 1 - now;             current_fs.css({'left': left});             previous_fs.css({'transform': 'scale('+scale+')', 'opacity': opacity});         },          duration: 800,          complete: function(){             current_fs.hide();             animating = false;         },          //this comes from the custom easing plugin         easing: 'easeInOutBack'     }); });  $("".submit"").click(function(){     return false; }) </code></pre>"	58244253	"<p>|FlaskApp<br> ----|FlaskApp<br> --------|<strong>templates</strong><br> ----------- <em>html files are here</em><br> --------|<strong>static</strong><br> ----------- <em>css and javascript files are here</em><br></p>  <p>script type=""text/javascript"" src=""{{ url_for('<strong>static</strong>', filename='<strong>javascript</strong>.js') }}""</p>"
44622752	Unable to read json object in Python function passed by javascript function--AJAX	javascript|python|json|django	2017-06-19 05:20:22.417000 UTC	"<p>I have been trying to send a json data strcuture to the python function (view.py). I am using Django framework.  I have been successful in fetching the data from my textboxes and even store them. I can see that the relevant values get appended in the url too.  But the problem arises when I try and read the value in my Python function which is corresponding to the next page.   </p>  <pre><code>function submit_this(url) { var i,j;var arr=[]; for(i=0; i&lt;Hello.length; i++){ arr[i]=[]; for(j=0;j&lt;Hello[i].length; j++) { arr[i].push(document.getElementById(Hello[i][j]).value); } }  xmlHttpReq = new XMLHttpRequest(); xmlHttpReq.open(\'POST\', url, true); xmlHttpReq.send(\'w=\' + encodeURI(arr));} &lt;/script&gt;&lt;/head&gt;&lt;body&gt; &lt;form action=\""http://127.0.0.1:6000/params/button_click/\""&gt; &lt;center&gt; &lt;button id=""submit_button"" name=""submit_button""            onclick=""submit_this(\'http://127.0.0.1:6000/params/button_click/\');""   value=""Submit""&gt;Submit &lt;/button&gt; &lt;/center&gt; &lt;/form&gt; &lt;/body&gt; &lt;/html&gt; </code></pre>  <p>I tried reading the values by using cgi.  form = cgi.FieldStorage() but I get to know that the form is empty.  I realise I am pretty close as the data structure (arr) has successfully been appended in the url for the next page. I am just unable to read it.  Any help would be really appreciated. Thanks.  PS: Hello is also a Json object passed using a json file. </p>"	44624574	<p>After much trial and error: request.GET worked. </p>
44676701	Python selenium webdriver : trying to call a javascript function	javascript|python|selenium|webdriver|syntax-error	2017-06-21 12:52:27.753000 UTC	"<p>i'm trying to get a link for checkout in a e-commerce site, i tryed to click on the span that link  a javascript function:</p>  <p><code>&lt;a id=""checkout-btn"" class=""btn btn-lg btn-success pull-right"" href=""javascript:shop.orders.save()"" rel=""nofollow""&gt;&lt;span&gt;Paga ora&lt;/span&gt;&lt;/a&gt;</code>) </p>  <p><strong>with this:</strong></p>  <pre><code>driver.find_element_by_xpath("".//*[@id='checkout']"").click() </code></pre>  <p>but it didn't work so i tryed to execute directly the function <strong>using this command</strong></p>  <p><code>driver.execute_script(""shop.orders.save()"")</code></p>  <p><strong>but i get this error from python idle:</strong></p>  <p>selenium.common.exceptions.WebDriverException: Message: unknown error: shop is not defined</p>  <p>if i execute <code>shop.orders.save()</code> in the chrome console it work and it link me to the checkout page , so i don't know</p>  <p>anyone can help me?</p>"	44676768	"<p>Try:</p>  <pre><code>driver.find_element_by_xpath(""//a[@id='checkout-btn']"").click() </code></pre>  <p>Let me know if this Answers your Question.</p>"
44676701	Python selenium webdriver : trying to call a javascript function	javascript|python|selenium|webdriver|syntax-error	2017-06-21 12:52:27.753000 UTC	"<p>i'm trying to get a link for checkout in a e-commerce site, i tryed to click on the span that link  a javascript function:</p>  <p><code>&lt;a id=""checkout-btn"" class=""btn btn-lg btn-success pull-right"" href=""javascript:shop.orders.save()"" rel=""nofollow""&gt;&lt;span&gt;Paga ora&lt;/span&gt;&lt;/a&gt;</code>) </p>  <p><strong>with this:</strong></p>  <pre><code>driver.find_element_by_xpath("".//*[@id='checkout']"").click() </code></pre>  <p>but it didn't work so i tryed to execute directly the function <strong>using this command</strong></p>  <p><code>driver.execute_script(""shop.orders.save()"")</code></p>  <p><strong>but i get this error from python idle:</strong></p>  <p>selenium.common.exceptions.WebDriverException: Message: unknown error: shop is not defined</p>  <p>if i execute <code>shop.orders.save()</code> in the chrome console it work and it link me to the checkout page , so i don't know</p>  <p>anyone can help me?</p>"	44676771	"<p>You need to escape the dot operator.</p>  <pre><code>driver.execute_script(""javascript:shop\\.orders\\.save()"") </code></pre>"
44676701	Python selenium webdriver : trying to call a javascript function	javascript|python|selenium|webdriver|syntax-error	2017-06-21 12:52:27.753000 UTC	"<p>i'm trying to get a link for checkout in a e-commerce site, i tryed to click on the span that link  a javascript function:</p>  <p><code>&lt;a id=""checkout-btn"" class=""btn btn-lg btn-success pull-right"" href=""javascript:shop.orders.save()"" rel=""nofollow""&gt;&lt;span&gt;Paga ora&lt;/span&gt;&lt;/a&gt;</code>) </p>  <p><strong>with this:</strong></p>  <pre><code>driver.find_element_by_xpath("".//*[@id='checkout']"").click() </code></pre>  <p>but it didn't work so i tryed to execute directly the function <strong>using this command</strong></p>  <p><code>driver.execute_script(""shop.orders.save()"")</code></p>  <p><strong>but i get this error from python idle:</strong></p>  <p>selenium.common.exceptions.WebDriverException: Message: unknown error: shop is not defined</p>  <p>if i execute <code>shop.orders.save()</code> in the chrome console it work and it link me to the checkout page , so i don't know</p>  <p>anyone can help me?</p>"	44684645	"<p>since it has an id element, can you try</p>  <pre><code> checkout = driver.find_element_by_id('checkout-btn')  checkout.click() </code></pre>  <p>if you do want to go down the xpath road, I'd suggest css</p>  <pre><code>checkout = driver.find_element_by_css_selector('a[id=""checkout-btn""]') checkout.click() </code></pre>"
44696907	How do I click a Javascript button on a webpage using python selenium	python|selenium-webdriver	2017-06-22 10:34:04.007000 UTC	"<p>I know this question has been asked a million times here and I have tried them all, I still can't get my python code to click a button!</p>  <p>So here's the result of the inspect element of said button: <code>&lt;input value=""New Quote"" class=""btn"" name=""new_quote_wizard"" title=""New Quote"" type=""button"" onclick=""if (window.invokeOnClickJS_00bC0000001TjBl) window.invokeOnClickJS_00bC0000001TjBl(this); else if (parent.window.invokeOnClickJS_00bC0000001TjBl) parent.window.invokeOnClickJS_00bC0000001TjBl(this); return false""&gt;</code></p>  <p>I've tried this:</p>  <pre><code>browser.find_element_by_name('New Quote').click() </code></pre>  <p>but it returns with this error:</p>  <blockquote>   <p>selenium.common.exceptions.NoSuchElementException: Message: Unable to locate element: [name=""New Quote""]</p> </blockquote>  <p>What else can I do to click this one button?</p>"	44697083	<p>Looks like problem is in the selecting element by name providing value. Try this instead:</p>  <pre><code>browser.find_element_by_name('new_quote_wizard').click() </code></pre>
44696907	How do I click a Javascript button on a webpage using python selenium	python|selenium-webdriver	2017-06-22 10:34:04.007000 UTC	"<p>I know this question has been asked a million times here and I have tried them all, I still can't get my python code to click a button!</p>  <p>So here's the result of the inspect element of said button: <code>&lt;input value=""New Quote"" class=""btn"" name=""new_quote_wizard"" title=""New Quote"" type=""button"" onclick=""if (window.invokeOnClickJS_00bC0000001TjBl) window.invokeOnClickJS_00bC0000001TjBl(this); else if (parent.window.invokeOnClickJS_00bC0000001TjBl) parent.window.invokeOnClickJS_00bC0000001TjBl(this); return false""&gt;</code></p>  <p>I've tried this:</p>  <pre><code>browser.find_element_by_name('New Quote').click() </code></pre>  <p>but it returns with this error:</p>  <blockquote>   <p>selenium.common.exceptions.NoSuchElementException: Message: Unable to locate element: [name=""New Quote""]</p> </blockquote>  <p>What else can I do to click this one button?</p>"	44703835	"<p>OK guys - I got it working through another stackoverflow question here: <a href=""https://stackoverflow.com/questions/36928363/how-do-i-click-a-button-in-a-form-using-selenium-and-python-2-7"">How do I click a button in a form using Selenium and Python 2.7?</a></p>  <p>So basically, I had to wait for the element!</p>  <p>I added these lines to my code:</p>  <blockquote>   <p><code>wait = WebDriverWait(browser, 10)   newQuote = wait.until(EC.presence_of_element_located((By.NAME, ""new_quote_wizard"")))   newQuote.click()</code></p> </blockquote>  <p>Thanks for all the help!</p>"
44698862	Manage API calls with JavaScript/Python/Bash	javascript|python|node.js|bash|selenium	2017-06-22 12:00:19.623000 UTC	"<p>I have to choose one of these languages:</p>  <ul> <li>Python (with Selenium or any suggestion)</li> <li>Javascript (with <code>node</code> with any module)</li> <li>Bash (with <code>curl</code> for example)</li> </ul>  <p>To do the following:</p>  <ul> <li>Make a request to an API (Scrapy cloud) and get some value, in my case I just need the <code>id</code> of the response:</li> </ul>  <blockquote>   <p>{""count"": 1, ""id"": ""195457/7/19"", ""width"": 32, ""height"": 27, ""started_time"": ""2017-06-22T08:20:26"", ""total"": 1, ""status"": ""ok""}</p> </blockquote>  <ul> <li>And then make another request with the id to download that provides a download to a file with a CSV/JSON format.</li> </ul>  <p>What I tried:</p>  <p><strong>Python:</strong></p>  <p>With Selenium (Firefox driver) open and get the <code>id</code>, it works fine but when I try to download the file with the next API request it asks me for what I want to do with the file (download or open with...). So, as I have to interact with the dialog it is not viable.</p>  <p><strong>Javascript:</strong></p>  <p>I found a module to download files but it is just to download files as images from image web URLs and not for download a file (like the Linux <code>wget</code> command).</p>  <p><strong>Bash:</strong></p>  <p>With <code>curl</code> it works but I can just get the whole response and then I cannot get the id value so I cant continue with what I want. Also I tried to download de file of the second step and this works fine with a simple <code>curl -o myfile.csv URL</code></p>  <p>Any help would be appreciated. Thanks for reading!</p>"	44699593	"<p>Here is a node version.  Its quite broad but the 2 main functions are the <code>callApi</code> and <code>downloadFile</code>.</p>  <p>I dont know the structure of your API url so for me now I have mocked some simple ones - change to what you need.</p>  <p>You will need to <code>npm install request</code> and update the variables to match your API.</p>  <p><em>index.js</em></p>  <pre><code>const request = require('request'); const http = require('http'); //const https = require('https'); maybe required const fs = require('fs');  const apiEndPoint = 'http://scrapycloud?someparam='; const fileName = 'data.csv'; const assetEndPoint = 'http://assetUrl?id=';  // This will call your api and get the asset id then calls the downloadFile function. function callApi(assetId, callback) {      request(apiEndPoint + assetId, function (error, response, body) {          if (error) {             return callback(error);         }          const info = JSON.parse(body);         const assetId = info.id;          downloadFile(assetId, callback);      });  }  // This function creates a writeSteam to save a file to your local machine, performs a http request to the assets and pipes it back into the write stream function downloadFile(assetId, callback) {      var file = fs.createWriteStream(fileName);     //use the following line if your requests needs to be https     //var request = https.get(assetEndPoint + assetId, function (response) {     var request = http.get(assetEndPoint + assetId, function (response) {         response.pipe(file);          file.on('finish', function () {             file.close(callback);         });      }).on('error', function (err) {         fs.unlink(dest);         if (callback) callback(err.message);     });  }  // Called when everything is finished or an error function complete(err) {      if (err) {         return console.log(err);     }      console.log('file downloaded');  }  // Starts the process, pass it an id and a callback callApi('123131', complete); </code></pre>"
44705312	Access-Control-Allow-Origin: JavaScript (jQuery) vs. Python (urllib2)	javascript|jquery|python|flask	2017-06-22 16:54:14.220000 UTC	"<p>I have a device in my local network with a little server and a REST API. I can't change code on this server (it's a commercial IOT device). Now I'm writing a web server with Flask (Python) and JavaScript. When I try to send an HTTP request to this API via JavaScript (jQuery) I get this error:</p>  <pre><code>Origin http://localhost is not allowed by Access-Control-Allow-Origin. </code></pre>  <p>I suspect I get this error because the IOT device web server doesn't include <code>""Access-Control-Allow-Origin"", ""*""</code> probably. Is that correct? The weird thing is when I send a request with Python with <code>urllib2.urlopen(&lt;server endpoint url&gt;).read()</code> it works and I get a JSON response from the server. How is the <code>urllib2</code> get request different that the jQuery get request? Why isn't the server blocking the Python request also since it doesn't allow requests with the localhost origin?</p>  <p>EDIT:</p>  <p>Ok to make this a little less confusing here is my setup:</p>  <p><strong>Flask Python Script</strong> This Flask Python script is used to create a web server and also to make an API call to the IOT device. The code for the API call is: <code>urllib2.urlopen('http://192.168.0.99/api/status').read()</code> and this request works fine and sends a JSON response back.</p>  <p><strong>Flask Web Server</strong> On the flask web server runs a website called website.html. In this file I want to make an API call to the IOT device using JavaScript. My code to do this is:   </p>  <pre><code>var request = $.ajax({               url: ""http://192.168.0.99/api/status"",               method: ""GET"" });  request.done(function(msg) {     console.log(msg); });  request.fail(function(jqXHR, msg) {     console.log( ""Request failed: "" + msg ); }); </code></pre>  <p>When I run this code I get the error message: <code>Origin http://localhost is not allowed by Access-Control-Allow-Origin.</code> back in the console of the browser.</p>  <p><strong>IOT Device</strong> The IOT device is connected to the router via wifi and hosts a web server running on: <a href=""http://192.168.0.99"" rel=""nofollow noreferrer"">http://192.168.0.99</a></p>  <p>Ok now the question is: Why does the Python request work but not the JavaScript request? Don't they both have <code>http://localhost</code> as the origin?</p>"	44708287	"<blockquote>   <p>Why isn't the server blocking the Python request also since it doesn't allow requests with the localhost origin?</p> </blockquote>  <p>The <em>server</em> isn't blocking the JavaScript request; your <em>browser</em> is. Here is some <a href=""https://developer.mozilla.org/en-US/docs/Web/HTTP/Access_control_CORS"" rel=""nofollow noreferrer"">relevant information from MDN</a>:</p>  <blockquote>   <p>For security reasons, browsers restrict cross-origin HTTP requests initiated from within scripts. For example, <a href=""https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest"" rel=""nofollow noreferrer""><code>XMLHttpRequest</code></a> and <a href=""https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API"" rel=""nofollow noreferrer"">Fetch</a> follow the <a href=""https://developer.mozilla.org/en-US/docs/Web/Security/Same-origin_policy"" rel=""nofollow noreferrer"">same-origin policy</a>. So, a web application using <a href=""https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest"" rel=""nofollow noreferrer""><code>XMLHttpRequest</code></a> or <a href=""https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API"" rel=""nofollow noreferrer"">Fetch</a> <em>could only</em> make HTTP requests to its own domain. To improve web applications, developers asked browser vendors to allow cross-domain requests.</p> </blockquote>  <p>If you can't modify the headers sent by the server you'll have to work around it.</p>  <p>One option would be to set up a local service that acts as a gateway to the IoT device. For example, since your Flask application <em>can</em> access the IoT device you could send an <code>XMLHttpRequest</code> to your Flask application and have it query the target device. In this case your Flask application could run on the same machine as your browser or on a different machine as long as it sends the <code>Access-Control-Allow-Origin: *</code> header.</p>"
44801607	Python Flask application: include HTML that imports xml file with javascript	python|web-applications|flask	2017-06-28 11:51:35.933000 UTC	"<p>I am trying to create a simple web application using Flask in Python. I want this app to do something like <a href=""https://www.w3schools.com/js/tryit.asp?filename=tryjs_ajax_display_table"" rel=""nofollow noreferrer"">this</a> example. So I want to import an xml file in the HTML code. When pushing the button, the data of the xml will appear in the page. My python code is:</p>  <pre><code>from flask import Flask, render_template  app = Flask(__name__) @app.route(""/"") def main():     return render_template('index.html')  if __name__ == ""__main__"":     app.run() </code></pre>  <p>My index.html code is the same as <a href=""https://www.w3schools.com/js/tryit.asp?filename=tryjs_ajax_display_table"" rel=""nofollow noreferrer"">this</a> example. I have created a cd_catalog.xml file in my computer. When I run my script, the button does not do anything. </p>  <p>My question is where should I locate the .xml file so that it can be imported to the .html file properly.</p>"	44802117	"<p>You should create a <code>static</code> directory next to your app module and place file there, public path would be <code>/static/***.xml</code></p>  <p><a href=""http://flask.pocoo.org/docs/0.12/quickstart/#static-files"" rel=""nofollow noreferrer"">http://flask.pocoo.org/docs/0.12/quickstart/#static-files</a></p>"
44803426	Python/Javascript - Self Updating Webpage	javascript|python|html	2017-06-28 13:07:50.020000 UTC	<p>I am hoping that I can be pointed in the right direction as I am completely unsure of how to approach the task I have at hand. I have created a python program that is able to execute some tests and gather information pertinent to the test. My task at hand is to make it so that the information I get is put on a webpage. </p>  <p>The way I am handling the directory is as follows</p>  <pre><code>Project | +--index.html +--testcases    |    +--testline1       |       +--build1          |          +--date1             |             +--relevantdata.txt             +--index.html          +--date2       +--build2    +--testline2    +--testline3 </code></pre>  <p>Every time I complete a testcase I update the appropriate testline + build by creating a directory with the date and putting relevant information in that directory. Every test case I run creates it's own html page that I would like to be accessible to the user.</p>  <p>Is there a way for me to update the outermost index.html automatically to reflect these changes? I am imagining that the html page will have a sidebar that lets the user pick testline + build + date. Is there a way to update this menu when test cases are completed?</p>	44803684	"<p>so let me understand this correctly:</p>  <p>you have <code>script.py</code> that does some magic, and creates <code>testline N</code> directory + associated files. you then want <code>Project/index.html</code> to list all N testlines.</p>  <p>is that correct?</p>  <p>if so, the SIMPLEST way to achieve this is to code the html in a python string, and then programmatically add the new testline link to that string, and then finally write that string to a <code>index.html</code> file.</p>  <p>another way to do this is to create a javascript (jquery) in a ""mylinks.js"" file and have that <code>mylinks.js</code> loaded in <code>index.html</code></p>  <p><code>&lt;script src=""mylinks.js"" type=""text/javascript""&gt;</code></p>  <p>your my links would look something like this:</p>  <pre><code>$window.onload(function() {  var $input = $('&lt;input type=""button"" value=""TESTLINE  - N"" /&gt;');     $input.appendTo($(""body"")); }); </code></pre>  <p>now all you need to do is programatically (in python), write the for loop in <code>mylinks.js</code></p>  <pre><code>string = '' for [python get number of dirs matching testlineN]:   string += '$window.onload(function() {      var $input = $('&lt;input type=""button"" value=""TESTLINE  - N"" /&gt;');         $input.appendTo($(""body""));     });' </code></pre>  <p>python write to file</p>  <p>some what pseudo code ish, but you should get the gist of it,</p>"
44803470	"Python CGI, FieldStorage and javascript array"	javascript|python|arrays|cgi	2017-06-28 13:10:26.543000 UTC	"<p>I searched and searched, and I am certain there is a simple answer. However, the solution escapes me. I have javascript that takes all <li> elements and puts the id attribute into an array, then sends it to an apache http server. Then, using python, the data is supposed to be retrieved, made into a python list, then iterated.</p>  <p>My problem is that I can't seem to get an iterable list. Here is the output from FieldStorage:</p>  <pre><code>FieldStorage(None, None, [MiniFieldStorage('data', '[[""NWS-IDP-PROD-KEEPALIVE-30678"",""NWS-IDP-PROD-2426831"",""NWS-IDP-PROD-2426829-2276816"",""NWS-IDP-PROD-2426827-2276815"",""NWS-IDP-PROD-2426823-2276812"",""NWS-IDP-PROD-2426824-2276814"",""NWS-IDP-PROD-2426823-2276811"",""NWS-IDP-PROD-2426823-2276813"",""NWS-IDP-PROD-2426822-2276809"",""NWS-IDP-PROD-2426822-2276810"",""NWS-IDP-PROD-2426822-2276808"",""NWS-IDP-PROD-2426822-2276807"",""NWS-IDP-PROD-2426821"",""NWS-IDP-PROD-2426819-2276806"",""NWS-IDP-PROD-2426818-2276805"",""NWS-IDP-PROD-2426817-2276804"",""NWS-IDP-PROD-2426815-2276801"",""NWS-IDP-PROD-2426816-2276803"",""NWS-IDP-PROD-2426813-2276800"",""NWS-IDP-PROD-2426807-2276797"",""NWS-IDP-PROD-2426806-2276796"",""NWS-IDP-PROD-2426805-2276795"",""NWS-IDP-PROD-2426803-2276793"",""NWS-IDP-PROD-2426802-2276792"",""NWS-IDP-PROD-2426800-2276791"",""NWS-IDP-PROD-2426796-2276787"",""NWS-IDP-PROD-2426797-2276789"",""NWS-IDP-PROD-2426793-2276785"",""NWS-IDP-PROD-2426792-2276784"",""NWS-IDP-PROD-2426787-2276779"",""NWS-IDP-PROD-2426791-2276783"",""NWS-IDP-PROD-2426783-2276775"",""NWS-IDP-PROD-2426785-2276777"",""NWS-IDP-PROD-2426784-2276776"",""NWS-IDP-PROD-2426789-2276781"",""NWS-IDP-PROD-2426788-2276780"",""NWS-IDP-PROD-2426786-2276778"",""NWS-IDP-PROD-2426790-2276782"",""NWS-IDP-PROD-2426781-2276773"",""NWS-IDP-PROD-2426779-2276771"",""NWS-IDP-PROD-2426778-2276770"",""NWS-IDP-PROD-2426777-2276769"",""NWS-IDP-PROD-2426774-2276766"",""NWS-IDP-PROD-2426768-2276762"",""NWS-IDP-PROD-2426764-2276760"",""NWS-IDP-PROD-2426758-2276751"",""NWS-IDP-PROD-2426757-2276750"",""NWS-IDP-PROD-2426756-2276749"",""NWS-IDP-PROD-2426754-2276747"",""NWS-IDP-PROD-2426755-2276748"",""NWS-IDP-PROD-2426753-2276746"",""NWS-IDP-PROD-2426752-2276745"",""NWS-IDP-PROD-2426750-2276743"",""NWS-IDP-PROD-2426749-2276742"",""NWS-IDP-PROD-2426748-2276741"",""NWS-IDP-PROD-2426747-2276740"",""NWS-IDP-PROD-2426743-2276736"",""NWS-IDP-PROD-2426744-2276737"",""NWS-IDP-PROD-2426746-2276739"",""NWS-IDP-PROD-2426745-2276738"",""NWS-IDP-PROD-2426538-2276561"",""NWS-IDP-PROD-2426539-2276562"",""NWS-IDP-PROD-2426536-2276559"",""NWS-IDP-PROD-2426535-2276558"",""NWS-IDP-PROD-2426502-2276526"",""NWS-IDP-PROD-2426501-2276525"",""NWS-IDP-PROD-2426495-2276519"",""NWS-IDP-PROD-2426490-2276514"",""NWS-IDP-PROD-2426494-2276518"",""NWS-IDP-PROD-2426493-2276517"",""NWS-IDP-PROD-2426492-2276516"",""NWS-IDP-PROD-2426487-2276512"",""NWS-IDP-PROD-2426484-2276509"",""NWS-IDP-PROD-2426483-2276508"",""NWS-IDP-PROD-2426479-2276504"",""NWS-IDP-PROD-2426477-2276503"",""NWS-IDP-PROD-2426475-2276502"",""NWS-IDP-PROD-2426458-2276486"",""NWS-IDP-PROD-2426453-2276482"",""NWS-IDP-PROD-2426452-2276481"",""NWS-IDP-PROD-2426450-2276480"",""NWS-IDP-PROD-2426442-2276474"",""NWS-IDP-PROD-2426437-2276470"",""NWS-IDP-PROD-2426438-2276471"",""NWS-IDP-PROD-2426433-2276466"",""NWS-IDP-PROD-2426432-2276465"",""NWS-IDP-PROD-2426434-2276467"",""NWS-IDP-PROD-2426430-2276463"",""NWS-IDP-PROD-2426431-2276464"",""NWS-IDP-PROD-2426203-2276345"",""NWS-IDP-PROD-2426204-2276346"",""NWS-IDP-PROD-2426102-2276282"",""NWS-IDP-PROD-2426052-2276244"",""NWS-IDP-PROD-2426019-2276228"",""NWS-IDP-PROD-2425905-2276157"",""NWS-IDP-PROD-2425891-2276153"",""NWS-IDP-PROD-2425874-2276146"",""NWS-IDP-PROD-2425851-2276136"",""NWS-IDP-PROD-2425801-2276114"",""NWS-IDP-PROD-2425748-2276070"",""NWS-IDP-PROD-2425747-2276069"",""NWS-IDP-PROD-2425746-2276068"",""NWS-IDP-PROD-2425745-2276067"",""NWS-IDP-PROD-2425744-2276066"",""NWS-IDP-PROD-2425743-2276065"",""NWS-IDP-PROD-2425681-2276015"",""NWS-IDP-PROD-2424738-2275345"",""NWS-IDP-PROD-2421587-2272709"",""NWS-IDP-PROD-2419354-2270782""]]')]) </code></pre>  <p>And the javascript code:</p>  <pre><code>mkTableArray: function() {     var myTableArray = [];     $(""#alerts"").each(function() {         var arrayOfThisRow = [];         var tableData = $(this).find('li');         if (tableData.length &gt; 0) {             tableData.each(function() {                 arrayOfThisRow.push($(this).attr(""id""));             });             myTableArray.push(arrayOfThisRow);         }     });     var myJson = JSON.stringify(myTableArray);     return myJson; }  function fetchNewAlerts() {     data = Alert.mkTableArray();      $.post( ""fetchNew.py"", {data}, function(data) {         $(""#alerts"").prepend(data);         $("".new"").hide().fadeIn(1000);     }); } </code></pre>  <p>And the python:</p>  <pre><code>data = cgi.FieldStorage() mfs = data.getvalue(""data"") print(mfs) for line in mfs:   print(line) </code></pre>  <p>Python is treating the entire thing as one list item. So doing a, for x in y loop, only prints out what you see above. It's treating it as though all of the items in the list are actually one single item. And I do not know how, or I have not yet figured out how, to get each NWS-IDP-PROD-2426826 item, separately so I can test each iteration. I have tried .split(), but to no avail. Any help would be greatly appreciated. Thank you.</p>"	44812137	"<p>I must have had a brain lapse. I was able to accomplish my goal by doing this:</p>  <pre><code>data = cgi.FieldStorage()  print (""Content-Type: text/html"") print ()    mfs = data.getvalue(""data"")  lines = mfs.split("","")  for feature in nwsJson:     if feature['properties']['id'] not in lines:         pass     else:         print(""&lt;li&gt;"" +feature['properties']['id']+ ""&lt;/li&gt;"") </code></pre>"
44852966	How (if possible) to use javascript within python file	javascript|python|html	2017-06-30 18:40:26.070000 UTC	"<p>I have a python file which contains tables (coded in html).  I wish to click on the cells of the table and (using the onclick feature of html) output the table value directly onto a textbox.  I am able to do this in an html file but am struggling to incorporate the same model into a python file.  The (working) code to copy the values of cells of a table to an alertbox is below:</p>  <p><a href=""http://jsfiddle.net/8A37s/5/"" rel=""nofollow noreferrer"">http://jsfiddle.net/8A37s/5/</a> JavaScript: </p>  <pre><code>var table = document.getElementById(""tableID"");  if (table != null) {  for (var i = 0; i &lt; table.rows.length; i++) {      for (var j = 0; j &lt; table.rows[i].cells.length; j++)      table.rows[i].cells[j].onclick = function () {      tableText(this);      };  }  }   function tableText(tableCell) {  alert(tableCell.innerHTML);  } </code></pre>  <p>To incorporate html into this python file, I've used the following procedure (successfully):</p>  <pre><code>print """"""&lt;table&gt;"""""" </code></pre>  <p>Is the process for implementing javascript the same?</p>"	44853682	"<ul> <li>python syntax is just a words unless be read by python interpreter</li> <li>html syntax is just a words unless be read by html interpreter (a webbrowser)</li> <li>javascript syntax is just a words unless be read by javascript interpreter (a webbrowser)</li> </ul>  <p>Knowing this, you can mix them all in one file, but all must be understood by each interpreter, so before it reaches webbrowser treat html and js as string inside python.</p>  <p>so in python file you can:</p>  <pre><code>your_js = """""" var table = document.getElementById(""tableID"");  if (table != null) {  for (var i = 0; i &lt; table.rows.length; i++) {      for (var j = 0; j &lt; table.rows[i].cells.length; j++)      table.rows[i].cells[j].onclick = function () {      tableText(this);      };  }  }   function tableText(tableCell) {  alert(tableCell.innerHTML);  } """""" print ""&lt;b&gt;html&lt;/b&gt;{}"".format(your_js) </code></pre>"
44899403	how to retrieve the value of javascript var through python?	javascript|python|html	2017-07-04 07:18:32.740000 UTC	"<p>I need to get the data of <code>productSkus[</code> using python but I don't know how to access it. the javascript comes from <a href=""http://www.ulta.com/lid-lingerie-eye-tint?productId=xlsImpprod15361061"" rel=""nofollow noreferrer"">http://www.ulta.com/lid-lingerie-eye-tint?productId=xlsImpprod15361061</a> . This is how it looks like.</p>  <pre><code>&lt;script type=""text/javascript""&gt;   var currentSkuId = '2502111';   var currentProductId = 'xlsImpprod15361061';    var productSkus = new Object();                productSkus[2502111] =                  {""displayName"":""Fame &amp;amp; Fortune"",""id"":""2502111"",""imgUrl"":""http://images.ulta.com/is/image/Ulta/2502111?$detail$"",""largeImgUrl"":""http://images.ulta.com/is/image/Ulta/2502111?$lg$"",""swatchImgUrl"":""http://images.ulta.com/is/image/Ulta/2502111sw?$50px$"",""swatchHoverImgUrl"":""http://images.ulta.com/is/image/Ulta/2502111sm?$md$"",""skuSize"":""0.13"",""skuSizeUOM"":""oz""};........ </code></pre>  <p>Can anyone help me with this?</p>"	44899510	"<p>use html form to submit the data to server, or across api</p>"
44899403	how to retrieve the value of javascript var through python?	javascript|python|html	2017-07-04 07:18:32.740000 UTC	"<p>I need to get the data of <code>productSkus[</code> using python but I don't know how to access it. the javascript comes from <a href=""http://www.ulta.com/lid-lingerie-eye-tint?productId=xlsImpprod15361061"" rel=""nofollow noreferrer"">http://www.ulta.com/lid-lingerie-eye-tint?productId=xlsImpprod15361061</a> . This is how it looks like.</p>  <pre><code>&lt;script type=""text/javascript""&gt;   var currentSkuId = '2502111';   var currentProductId = 'xlsImpprod15361061';    var productSkus = new Object();                productSkus[2502111] =                  {""displayName"":""Fame &amp;amp; Fortune"",""id"":""2502111"",""imgUrl"":""http://images.ulta.com/is/image/Ulta/2502111?$detail$"",""largeImgUrl"":""http://images.ulta.com/is/image/Ulta/2502111?$lg$"",""swatchImgUrl"":""http://images.ulta.com/is/image/Ulta/2502111sw?$50px$"",""swatchHoverImgUrl"":""http://images.ulta.com/is/image/Ulta/2502111sm?$md$"",""skuSize"":""0.13"",""skuSizeUOM"":""oz""};........ </code></pre>  <p>Can anyone help me with this?</p>"	44899856	"<p>If you want to use <code>productSkus</code> on the server side, then you need to use AJAX to send the JS variable to the server.</p>  <p>As Django template is compiled server side. It is then sent to the client where their browser executes the JavaScript. Nothing that is changed by the JavaScript executing on the client browser can have an affect on the template. It's too late at that point.</p>  <p>However the JavaScript could do something like make another request from the server for more information. Or you could just pre-compute the value on the server before you send it to the client.</p>  <p>You can of course use Django templates to set JavaScript variables.</p>  <pre><code>&lt;script&gt;     var myVar = '{{ py_var }}'; &lt;/script&gt;  </code></pre>"
44913711	How may I dynamically insert a string into a large javascript template string in python?	javascript|python|string	2017-07-04 20:36:15.703000 UTC	"<p>Suppose a template javascript string like this:</p>  <pre><code>js_string = u'function hello() { alert({0}); } function goodbye() { alert({1}); }' </code></pre>  <p>I would like to get following result:</p>  <pre><code>function hello() { alert('Hello!'); } function goodbye() { alert('Goodbye!'); } </code></pre>  <p>My initial idea was to use the .format() method, which resulted in a KeyError due to the arbitrary curly braces. I then had a look at <a href=""https://stackoverflow.com/questions/5466451/how-can-i-print-literal-curly-brace-characters-in-python-string-and-also-use-fo"">this</a> question and replaced said curly braces with double curly braces. Although this produces the desired result, I cannot use it, as I'm working with a rather large javascript template and am not up for changing each and every single curly brace.</p>  <p>I have also tried the .replace() function:</p>  <pre><code>js_string.replace(""{0}"", repr(""Hello!"")).replace(""{1}"", repr(""Goodbye!"")) </code></pre>  <p>However, calling .replace() more than once seems inconvenient to me, which is why I am asking if there is any straightforward alternative for this problem.</p>"	44913904	"<p>You could do the replacement with one call to <code>sub</code> by supplying a callback function that reads the number inside braces, and grabs the corresponding replacement word from a list:</p>  <pre><code>re.sub(r'\{(\d+)\}', lambda m: [""'hello'"", ""'Goodbye!'""][int(m.group(1))], js_string) </code></pre>"
44913711	How may I dynamically insert a string into a large javascript template string in python?	javascript|python|string	2017-07-04 20:36:15.703000 UTC	"<p>Suppose a template javascript string like this:</p>  <pre><code>js_string = u'function hello() { alert({0}); } function goodbye() { alert({1}); }' </code></pre>  <p>I would like to get following result:</p>  <pre><code>function hello() { alert('Hello!'); } function goodbye() { alert('Goodbye!'); } </code></pre>  <p>My initial idea was to use the .format() method, which resulted in a KeyError due to the arbitrary curly braces. I then had a look at <a href=""https://stackoverflow.com/questions/5466451/how-can-i-print-literal-curly-brace-characters-in-python-string-and-also-use-fo"">this</a> question and replaced said curly braces with double curly braces. Although this produces the desired result, I cannot use it, as I'm working with a rather large javascript template and am not up for changing each and every single curly brace.</p>  <p>I have also tried the .replace() function:</p>  <pre><code>js_string.replace(""{0}"", repr(""Hello!"")).replace(""{1}"", repr(""Goodbye!"")) </code></pre>  <p>However, calling .replace() more than once seems inconvenient to me, which is why I am asking if there is any straightforward alternative for this problem.</p>"	44914019	"<p>Use string interpolation with the <code>%</code> operator:</p>  <pre><code>&gt;&gt;&gt; u'function hello() { alert(%r); } function goodbye() { alert(%r); }' % ('Hello', 'Goodbye') ""function hello() { alert('Hello'); } function goodbye() { alert('Goodbye'); }"" </code></pre>  <p>Here <code>%r</code> means use the <code>repr</code>, if you want to insert the string directly use <code>%s</code>. <code>%%</code> is a literal <code>%</code>.</p>  <p>More details: <a href=""https://docs.python.org/2/library/stdtypes.html#string-formatting-operations"" rel=""nofollow noreferrer"">https://docs.python.org/2/library/stdtypes.html#string-formatting-operations</a></p>"
44913711	How may I dynamically insert a string into a large javascript template string in python?	javascript|python|string	2017-07-04 20:36:15.703000 UTC	"<p>Suppose a template javascript string like this:</p>  <pre><code>js_string = u'function hello() { alert({0}); } function goodbye() { alert({1}); }' </code></pre>  <p>I would like to get following result:</p>  <pre><code>function hello() { alert('Hello!'); } function goodbye() { alert('Goodbye!'); } </code></pre>  <p>My initial idea was to use the .format() method, which resulted in a KeyError due to the arbitrary curly braces. I then had a look at <a href=""https://stackoverflow.com/questions/5466451/how-can-i-print-literal-curly-brace-characters-in-python-string-and-also-use-fo"">this</a> question and replaced said curly braces with double curly braces. Although this produces the desired result, I cannot use it, as I'm working with a rather large javascript template and am not up for changing each and every single curly brace.</p>  <p>I have also tried the .replace() function:</p>  <pre><code>js_string.replace(""{0}"", repr(""Hello!"")).replace(""{1}"", repr(""Goodbye!"")) </code></pre>  <p>However, calling .replace() more than once seems inconvenient to me, which is why I am asking if there is any straightforward alternative for this problem.</p>"	44914046	"<p>If you're set on curly brace syntax, you can simply call <code>.replace</code> in a loop. No need for regexes.</p>  <pre><code>for i, replacement in enumerate([""'hello'"", ""'Goodbye!'""]):     js_string = js_string.replace('{%s}' % i, replacement) </code></pre>"
44975033	How do I scrape constantly updated JavaScript post-login using Python?	javascript|python|web-scraping	2017-07-07 15:51:55.750000 UTC	"<p>I know there are many similar questions, however, they are all piecemeal to the problem I have, and I haven't been successful in putting the information together.</p>  <p>I am using a FLIR ax8 thermal camera, and this camera has a web-interface that one can interact with via ethernet. Long story short, temperature values are constantly displayed and updated, and I would like to scrape those values. I would like to do this without opening a browser with a GUI, and just be able to call every so often to get them. </p>  <p>The first step is a simple login page, located at ""cameraIP""/login. It's very basic, but I need a solution that gets me through this, and be able to maintain the login session. Then it's just the interface. Attached are two images, the first showing interface as seen in Chrome, and the second a terminal output of what I scraped using Python's Requests module.</p>  <p>As you can see, the numbers are clearly not there, as they are rendered by JavaScript. This is essentially all I have to work with. If someone could give advice on how this is possible to get those temperature values every so often, that would be great.</p>  <p>If there are ANY questions, just leave a comment down below and I can provide more information, such as the JS files listed under the web interface if they are needed.</p>  <p><a href=""https://i.stack.imgur.com/ae68S.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/ae68S.png"" alt=""Chrome Inspect Element View""></a></p>  <p><a href=""https://i.stack.imgur.com/7Am5V.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/7Am5V.png"" alt=""Scraped HTML with Requests""></a></p>"	44975456	"<p>I personally use scrapy splash to render the javascript when scraping using scrapy: <a href=""http://splash.readthedocs.io/en/stable/"" rel=""nofollow noreferrer"">http://splash.readthedocs.io/en/stable/</a></p>"
45024682	Different behavior for 1 << 32 compare javascript to python	javascript|python	2017-07-11 03:05:09.660000 UTC	<p>Javascript</p>  <pre><code>1&lt;&lt;31 -2147483648 1&lt;&lt;32 1 </code></pre>  <p>Python</p>  <pre><code>1&lt;&lt;31 2147483648 1&lt;&lt;32 4294967296 </code></pre>  <p>Is this related to max int? But 4294967296 not Bigger then the max int in js.</p>	45024980	"<p>An integer in JavaScript is actually an IEEE 754 64bit float number. But an integer in Python may be a simple integer or a bignum.</p>  <hr>  <p>All bit operations in JavaScript was defined on 32bit signed / unsigned integers. When you do these operations, the two operand was first converted to 32 bit integers, and the result will always be a 32 bit integer.</p>  <p>If you want multiple a number with 2<sup>32</sup>, you should do <code>1 * 2 ** 32</code> (or <code>1 * Math.pow(2, 32)</code> in ES5) instead of this one.</p>  <hr>  <p>Python has builtin bignum support, which support all bit operations such as shift left. As a result, you may shift a number with any (reasonable) bits and it may be greater than 2<sup>32</sup>.</p>"
45055176	Equivalent of Python's List Comprehension in Javascript	javascript|python|list-comprehension	2017-07-12 10:29:45.230000 UTC	"<p>Consider the following JSON representation of an array:</p>  <pre><code>logMessages = [    {       ""timestamp"":1499776056977,       ""message"":""Log message c7a09226"",       ""ingestionTime"":1499776058327    },    {       ""timestamp"":1499777056977,       ""message"":""Log message e5d5b51a3ae1"",       ""ingestionTime"":1499777058327    },    {       ""timestamp"":1499778056977,       ""message"":""Log message b79f4620935b"",       ""ingestionTime"":1499778058327    } ] </code></pre>  <p>Suppose that I'd like to keep only <code>timestamp</code> and <code>message</code> and omit <code>ingestionTime</code>. In Python, I would do:</p>  <pre><code>&gt;&gt;&gt; [ {'timestamp': o['timestamp'], 'message': o['message']} for o in logMessages]  [{'timestamp': 1499776056977, 'message': 'Log message c7a09226'},  {'timestamp': 1499777056977, 'message': 'Log message e5d5b51a3ae1'},   {'timestamp': 1499778056977, 'message': 'Log message b79f4620935b'}] </code></pre>  <p>How do I do the same field filtering in Javascript?</p>"	45055177	"<p><a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map"" rel=""nofollow noreferrer""><code>.map</code> with an arrow function does</a> the trick:</p>  <pre><code>logMessages= [    { timestamp: 1499776056977,     message: 'Log message c7a09226',     ingestionTime: 1499776058327 },   { timestamp: 1499777056977,     message: 'Log message e5d5b51a3ae1',     ingestionTime: 1499777058327 },   { timestamp: 1499778056977,     message: 'Log message b79f4620935b',     ingestionTime: 1499778058327 } ]  &gt; logMessages.map( (o) =&gt; {return {timestamp: o.timestamp, message: o.message}}) [ { timestamp: 1499776056977, message: 'Log message c7a09226' },   { timestamp: 1499777056977,     message: 'Log message e5d5b51a3ae1' },   { timestamp: 1499778056977,     message: 'Log message b79f4620935b' } ] </code></pre>"
45055176	Equivalent of Python's List Comprehension in Javascript	javascript|python|list-comprehension	2017-07-12 10:29:45.230000 UTC	"<p>Consider the following JSON representation of an array:</p>  <pre><code>logMessages = [    {       ""timestamp"":1499776056977,       ""message"":""Log message c7a09226"",       ""ingestionTime"":1499776058327    },    {       ""timestamp"":1499777056977,       ""message"":""Log message e5d5b51a3ae1"",       ""ingestionTime"":1499777058327    },    {       ""timestamp"":1499778056977,       ""message"":""Log message b79f4620935b"",       ""ingestionTime"":1499778058327    } ] </code></pre>  <p>Suppose that I'd like to keep only <code>timestamp</code> and <code>message</code> and omit <code>ingestionTime</code>. In Python, I would do:</p>  <pre><code>&gt;&gt;&gt; [ {'timestamp': o['timestamp'], 'message': o['message']} for o in logMessages]  [{'timestamp': 1499776056977, 'message': 'Log message c7a09226'},  {'timestamp': 1499777056977, 'message': 'Log message e5d5b51a3ae1'},   {'timestamp': 1499778056977, 'message': 'Log message b79f4620935b'}] </code></pre>  <p>How do I do the same field filtering in Javascript?</p>"	45055347	"<p>You can use object destructuring to obtain a subset of keys.</p>  <pre><code>&gt; logMessages= [    { timestamp: 1499776056977,     message: 'Log message c7a09226',     ingestionTime: 1499776058327 },   { timestamp: 1499777056977,     message: 'Log message e5d5b51a3ae1',     ingestionTime: 1499777058327 },   { timestamp: 1499778056977,     message: 'Log message b79f4620935b',     ingestionTime: 1499778058327 } ]  &gt; logMessages.map(({ timestamp, message }) =&gt; ({ timestamp, message }));  [ { timestamp: 1499776056977, message: 'Log message c7a09226' },   { timestamp: 1499777056977,     message: 'Log message e5d5b51a3ae1' },   { timestamp: 1499778056977,     message: 'Log message b79f4620935b' } ] </code></pre>  <p>Documentation for Destructuring assignment syntax can be found:</p>  <ul> <li><a href=""https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment"" rel=""noreferrer"">Mozilla Develoepr Network</a></li> </ul>"
45065877	Javascript with Python Flask	javascript|jquery|html|compatibility|clock	2017-07-12 19:18:00.877000 UTC	"<p>I have a HTML web server with CSS. I want to have a digital clock and I believe the script should be in a .js file for javascript and I have to include or run that from my HTML web page. <strong>How should I do this and how come having a separate JavaScript file with even just <code>alert(""This is from JavaScript!"");</code> doesn't work?</strong></p>"	45065951	"<p>Be sure you referenced the .js file in your HTML code such as:</p>  <pre><code>  &lt;script src=""main.js""&gt;&lt;/script&gt; </code></pre>"
45101730	How to call a javascript function from tornado web <python>?	javascript|python|tornado|smoothie.js	2017-07-14 11:20:25.417000 UTC	"<p>I want to make a live chart with smoothy js. My server is running from tornado, this is written in python. Smoothy can refresh the chart live. In python I render the html file, which includes the smoothy, but I don't know how to refresh data from python (because my datas in SQL database) There is the function called from <strong>html</strong> file: (call it ex.html)</p>  <pre><code>  var line1 = new TimeSeries();   var line2 = new TimeSeries();   var i = 1;   setInterval(function() {     line1.append(new Date().getTime(), Math.random);     line2.append(new Date().getTime(), Math.random());   }, 1000); </code></pre>  <p>As you see the append method updates my chart, and the second parameter is the value(x axis). So my question is: How to add information from tornado web using smoothie?</p>  <p>And there is my python code:</p>  <pre><code>class MainHandler(tornado.web.RequestHandler):     def get(self):         self.render(""ex.html"")  def make_app():     return tornado.web.Application([         (r""/"", MainHandler),     ])  if __name__ == ""__main__"":     app = make_app()     app.listen(8888)     tornado.ioloop.IOLoop.current().start() </code></pre>  <p>If my description isn't understandable, please drop me a message. Thanks for the answer!</p>"	45107524	"<p>You can pass the information to you template, for example</p> <pre><code>class MainHandler(tornado.web.RequestHandler):     def get(self):         data = {&quot;x&quot;: &quot;01/01/17&quot;, &quot;y&quot;: 100}         self.render(&quot;ex.html&quot;, data=data) </code></pre> <p>and in the html template</p> <pre><code>line1.append({{ data[&quot;x&quot;] }},{{ data[&quot;y&quot;] }} ) </code></pre> <p>This is just a simple example, check the template documentation for more complex examples, like using loops.</p> <p>This way is a static, ok for the ajax here is a example.</p> <pre><code>&lt;script type=&quot;text/javascript&quot;&gt;         setInterval(function() {         $.getJSON(&quot;/stats&quot;,function(data){         line1.append(data.time, data.in);         line2.append(data.time, data.in);         });         }, 1000); &lt;/script&gt; </code></pre> <pre class=""lang-py prettyprint-override""><code>class MainHandler(tornado.web.RequestHandler):     def get(self):         self.render(&quot;ex.html&quot;)  class Stats(tornado.web.RequestHandler):     def get(self):         self.write({&quot;time&quot;:&quot;time&quot;,&quot;in&quot;:10})  def make_app():     return tornado.web.Application([         (r&quot;/stats&quot;, Stats),         (r&quot;/&quot;, MainHandler),     ])  if __name__ == &quot;__main__&quot;:     app = make_app()     app.listen(8888)     tornado.ioloop.IOLoop.current().start() </code></pre>"
45126810	Why float behaves differently between Python/PHP/Javascript and Java/C#	java|c#|python|floating-point|precision	2017-07-16 09:00:31.780000 UTC	"<p>After 10 years I'm (re)studying Java and I'm writing simple code in order to check syntax and verify simple behaviors. I was playing with number types and I don't understand why floats behave differently in Java (and also C# as I verified later) than Python (or other scripting language like JavaScript or PHP). The point is that from my knowledge, floats are unreliable when precision matters, and one of the simplest example I had in mind is that the sum:</p>  <pre><code>float(0.1) + float(0.2) </code></pre>  <p>differently from one could expect is not <code>float(0.3)</code>, but <code>float(0.30000000000000004)</code> due to ""rounding issues behind the scenes"". So, in my dummy Java code I wrote:</p>  <pre><code>float wrongResult = 0.1f + 0.2f; if (wrongResult != 0.3f) {     System.out.println(""float sucks""); } else {     System.out.println(""float works""); }  double rightResult = 0.1 + 0.2; if (rightResult != 0.3) {     System.out.println(""double sucks""); } else {     System.out.println(""double works""); }  </code></pre>  <p>But the output is surprisingly:</p>  <pre><code>float works double sucks </code></pre>  <p>Which drives me crazy, because double is a 64-bit type and float is only a 32-bit type, so I would expect the opposite result since the double should be more precise. So my huge dilemma is: why scripting languages like Python, PHP and Javascript behaves in a way and compiled languages like Java and C# behaves differently? </p>"	45126949	"<p>There is no difference between scripting languages and Java/C#. However, there is a difference between <code>float</code> and <code>double</code>. A small confusion comes from the fact that in the scripting languages (at least in Python) the underlying type of the <code>float</code> normally has 64 bits precision (i.e., a <code>double</code> in Java). The reason then, for the different behavior is that the closest value after rounding will not be the same, as can be seen from the following:</p>  <pre><code>fl64(.1) == 0.10000000000000001 fl64(.2) == 0.20000000000000001 fl64(.3) == 0.29999999999999999 fl64(.1) + fl64(.2) == 0.30000000000000004  fl32(.1) == 0.1 fl32(.2) == 0.2 fl32(.3) == 0.30000001 fl32(.1) + fl32(.2) == 0.30000001 </code></pre>  <p>Thus, with the lower precision (32 bits) it just happens to be that <code>0.1 + 0.2 == 0.3</code>. This however is not a general result and for many other numbers this will not hold. Thus floats are still unreliable for exact precision.</p>"
45132524	python - passing a list of dict in javascript Flask	javascript|python|dictionary|flask	2017-07-16 19:26:30.570000 UTC	"<p>I know how to pass a variable from Flask (python) to my template html file with <code>{{data}}</code>. However I am having trouble accessing each dictionary element and its respective key-value pairs in the list in javascript. </p>  <p><strong>start.py</strong></p>  <pre><code>def func1():         data = filter() #returns a list of dictionaries      return render_template(""template1.html"", data=data) </code></pre>  <p><strong>template1.html</strong></p>  <pre><code>&lt;html&gt;   &lt;head&gt;   .....   &lt;/head&gt;   &lt;body&gt;     &lt;p&gt;This is html: {{data}}&lt;/p&gt;      &lt;script type=""text/javascript"" src=""{{url_for('static', filename='js/add.js') }}""&gt;&lt;/script&gt;     &lt;script type=""text/javascript""&gt;     myvar = '{{data}}';     document.write(myvar);      &lt;/script&gt;   &lt;/body&gt;  &lt;/html&gt; </code></pre>  <p><strong>add.js</strong></p>  <pre><code>//code to be written here </code></pre>  <p><code>myvar</code> and <code>This is html:</code> both outputs out the entire list of dictionaries. I've already tried <code>myvar[0]</code> but that just outputs <code>[</code> for some reason. I have also done: </p>  <pre><code>myvar = '{{data|tojson}}'; var parsed = JSON.parse(myvar); document.write(parsed[0]); </code></pre>  <p>but that outputs <code>[object Object]</code>.</p>"	45132678	<p>Got it! </p>  <pre><code>myvar = '{{data|tojson}}'; var parsed = JSON.parse(myvar); document.write(parsed[0]); </code></pre>  <p>Outputs the <code>[object Object]</code> which is the dictionary at the position. So then all you need to do is <code>document.write(parsed[0].name);</code> to access its <code>name</code> value!</p>
45132524	python - passing a list of dict in javascript Flask	javascript|python|dictionary|flask	2017-07-16 19:26:30.570000 UTC	"<p>I know how to pass a variable from Flask (python) to my template html file with <code>{{data}}</code>. However I am having trouble accessing each dictionary element and its respective key-value pairs in the list in javascript. </p>  <p><strong>start.py</strong></p>  <pre><code>def func1():         data = filter() #returns a list of dictionaries      return render_template(""template1.html"", data=data) </code></pre>  <p><strong>template1.html</strong></p>  <pre><code>&lt;html&gt;   &lt;head&gt;   .....   &lt;/head&gt;   &lt;body&gt;     &lt;p&gt;This is html: {{data}}&lt;/p&gt;      &lt;script type=""text/javascript"" src=""{{url_for('static', filename='js/add.js') }}""&gt;&lt;/script&gt;     &lt;script type=""text/javascript""&gt;     myvar = '{{data}}';     document.write(myvar);      &lt;/script&gt;   &lt;/body&gt;  &lt;/html&gt; </code></pre>  <p><strong>add.js</strong></p>  <pre><code>//code to be written here </code></pre>  <p><code>myvar</code> and <code>This is html:</code> both outputs out the entire list of dictionaries. I've already tried <code>myvar[0]</code> but that just outputs <code>[</code> for some reason. I have also done: </p>  <pre><code>myvar = '{{data|tojson}}'; var parsed = JSON.parse(myvar); document.write(parsed[0]); </code></pre>  <p>but that outputs <code>[object Object]</code>.</p>"	45132694	"<p>By placing <code>data</code> in single quotes you are creating a string. To get python data types into JavaScript, serialize them with <code>{{ data | tojson }}</code>.</p>  <pre><code>var parsed = JSON.parse('{{data | tojson}}'); </code></pre>  <p>You may need to escape the output with <code>safe</code> filter. See more at <a href=""https://stackoverflow.com/questions/24719592/sending-data-as-json-object-from-python-to-javascript-with-jinja"">sending data as JSON object from Python to Javascript with Jinja</a></p>"
45138627	how to parse .asn file to managable object in javascript or python	javascript|python|html|asn.1	2017-07-17 07:46:42.677000 UTC	"<p>I am creating a website which can upload .asn file, fill the parameter, send the request and show the response in html. I am thinking that I could use javascript to parse the .asn file in order to show the imput and the response result. But I am having trouble deal with this. Do I have to write my own parser to do it or is there any tools? I will appreciate any help, thanks. </p>  <p>update: I am using flask with javascript so that a python solution can also solve this problem</p>"	45346878	"<p>I finally have a solution to this, This python package: <a href=""https://github.com/kimgr/asn1ate"" rel=""nofollow noreferrer"">https://github.com/kimgr/asn1ate</a> create a semantic tree so that I can somehow turn it to json form to diaplay.</p>"
45161802	Javascript syntax error in python robotframework	javascript|python|robotframework	2017-07-18 08:47:43.803000 UTC	"<p>I'm using robot framework and selenium2 libraries. When I try to set text in a text field using Javascript, I get the following error:</p>  <pre><code>'WebDriverException: Message: unknown error: Runtime.evaluate threw exception: SyntaxError: missing ) after argument list' </code></pre>  <p>Below is my function</p>  <pre><code>def jsSetTextByName(self, name, vValue):     ""Setting value using java script with name""     print ""document.getElementsByName('"" + name + ""').value='"" + vValue + ""'""     self.execute_javascript(""document.getElementsByName('"" + name + ""')[0].value=('"" + vValue + ""')"") </code></pre>"	45182698	<p>Looks like the problem is with my python version and chrome driver. I have updated everything and all looks good now. Thank</p>
45200030	"Javascript, how to save Blockly-generated Python code to a .py file?"	javascript|python|blockly	2017-07-19 20:03:43.197000 UTC	"<p>I've got a linux machine with a web server, and I use google BLockly to generate python code. It generates it correctly, and I use alert(code) to show the code. How can I save it into a file located in the same web server?</p>  <pre><code>function showCode() {   // Generate Python code and display it.   var code = Blockly.Python.workspaceToCode(workspace);   alert(code); } </code></pre>"	45200483	"<p>I didn't understand the context fully, I think you are generating the code at client side and you want to save it. If you want to save it in client side (file save option from browser), use the following library</p>  <p><a href=""https://github.com/eligrey/FileSaver.js"" rel=""nofollow noreferrer"">https://github.com/eligrey/FileSaver.js</a></p>  <p>if you want to save it at server side, post the data to the server from your javascript itself and write the contents to a file in the server.</p>  <p>lets use jquery to post data. assume your code is there in the variable 'code'</p>  <pre><code>    $.post(""/savecode"",     {       data: code     },     function(data,status){         alert(""Data: "" + data + ""\nStatus: "" + status);     }); </code></pre>  <p>This will post the data to the uri 'savecode'</p>  <p>i think, you created a static html page with some javascript inside and serving it from /var/ww/html/ folder of a apache or https server. this won't work, you need to serve it from a web application. i am choosing python flask here which is pretty simple.</p>  <p>to receive the data and store in a server, assuming that your static page is home.html and is there in templates folder</p>  <pre><code>from flask import Flask, render_template, request from werkzeug import secure_filename app = Flask(__name__)   # Sending the home page when browsing /home @app.route('/home') def home():    return render_template('home.html')   # Saving the code posted by the javascript app @app.route('/savecode', methods=['POST']) def savecode():           f = request.files['file']     f.save(secure_filename(f.filename))     return 'file saved successfully'  if __name__ == '__main__':    app.run() </code></pre>  <p>for more info, look flask docs : <a href=""http://flask.pocoo.org/"" rel=""nofollow noreferrer"">http://flask.pocoo.org/</a></p>  <p>You can create the server program in any language/framework that you are comfortable with.</p>"
45202678	http request POST with javascript using Java/Python?	javascript|python|phantomjs	2017-07-19 23:28:48.157000 UTC	"<p>I try to connect to <a href=""http://leya2.eu/"" rel=""nofollow noreferrer"">http://leya2.eu/</a>. I´ve tried a lot of things... the problem is to run the Script on the Website. I do want to do it with Python or Java... last thing i tried was PhatomJS, but i only got the BlazingFast Page like everytime.</p>  <p>The Problem is this script:</p>  <pre><code>var XHR=""onload""in new XMLHttpRequest?XMLHttpRequest:XDomainRequest,xhr=new XHR;var ww = $(window).width();xhr.open(""GET"",""/___S___/?rid=CLYVwTkbSONnYzhmsnBo6AhooeCoHsgxayFRarvktEYBIdpcL2aQPVoW7U32QGrh&amp;sid="" + ww +""&amp;d=leya2.eu&amp;tz=1500505915.508"",true),xhr.onreadystatechange=function(){if(4==xhr.readyState&amp;&amp;(xhr.status==200)){var t=document.createElement(""script"");t.type=""text/javascript"",t.text=xhr.responseText,document.body.appendChild(t)}},xhr.send(null);function wait(){}; setTimeout(wait(),4000); </code></pre>  <p>So maybe someone got an idea ?</p>  <p>my standard script is like:</p>  <pre><code>from urllib.request import urlopen from urllib.parse import urlencode  url = 'http://evidence-server.com/?s=login' response = urlopen(url, urlencode(data).encode(""utf-8"")) content = response.read().decode(response.headers.get_content_charset()) print(content) </code></pre>  <p>This allready was near:</p>  <pre><code>var page = require(""webpage"").create(),     url = ""http://leya2.eu/"";  function onPageReady() {     var htmlContent = page.evaluate(function () {         return document.documentElement.outerHTML;     });      console.log(htmlContent);      phantom.exit(); } page.open(url, function (status) {     if (status !== 'success') {         console.log('Unable to load the address!');         phantom.exit();     } else {         window.setTimeout(function () {             console.log(htmlContent);             phantom.exit();         }, 5000);      } }); </code></pre>"	45204300	"<p>Here's a working script to access your target site. Notice a built-in variable <code>page.content</code>:</p>  <pre><code>var page = require(""webpage"").create(),     url = ""http://leya2.eu/"";   page.open(url, function (status) {     if (status !== 'success') {         console.log('Unable to load the address!');         phantom.exit();     } else {         window.setTimeout(function () {             page.render(""leya2.jpg"");             console.log(page.content);             phantom.exit();         }, 10000);      } }); </code></pre>  <p>Produces <a href=""https://i.imgur.com/FdWEnJZ.jpg"" rel=""nofollow noreferrer"">this screenshot</a> on PhantomJS version 2.5b for Windows.</p>"
45202764	Extract variable from Javascript to Python function	javascript|python|html|google-maps|pyqt5	2017-07-19 23:38:03.870000 UTC	"<p>I am using PyQt5 to create a small app. At some point I need to let the user select latitude and longitude from a map. After some research, the easiest way to implement a map search seems to be using google maps through some Javascript lines. I found this code that does pretty much what I need:</p>  <p><a href=""https://gis.stackexchange.com/questions/33238/how-do-you-get-the-coordinates-from-a-click-or-drag-event-in-the-google-maps-api/33246#33246?newreg=eeb7c8c7ce344710838fba3d7b111d12"">https://gis.stackexchange.com/questions/33238/how-do-you-get-the-coordinates-from-a-click-or-drag-event-in-the-google-maps-api/33246#33246?newreg=eeb7c8c7ce344710838fba3d7b111d12</a></p>  <p>However, I need to use in my python function the coordinates selected by the user. How can I pass to python the latitude and longitude selected in the Javaascript code (""latLng"")? I read a bunch of similar questions on many forums but I can't figure out how to solve my problem. I would expect to find a very simple solution. My code is something like:</p>  <pre><code>def latlong_function():          html='''  &lt;html&gt;  &lt;head&gt; ....  .... '''  print(coordinates)  return html </code></pre>"	45202913	"<p>I am not an expert when it comes to doing python backends for web apps, but I do have experience with PHP and perl in a web environment.</p>  <p>Unless python has a specific utility/library for doing this (and based on your research it sounds like it doesn't) your best bet is to have your JavaScript submit the data via an HTTP POST request using something like <a href=""http://api.jquery.com/jquery.ajax/"" rel=""nofollow noreferrer"">Ajax and JQuery</a>.</p>  <p>Something like this might work:</p>  <pre><code>// Function called when an HTML button with id of ""Search_Button"" is clicked $('#Search_Button').click(function () {     // Get the values of your lat/long HTML inputs    var lat = $('#Latitude_Input').val();    var long = $('#Longitude_Input').val();     // Submit the AJAX request    $.ajax({      url: ""path/to/your_script.py"", // Path of the python script to do the processing      method: ""POST"", // Method to submit the HTTP request as, usually either POST or GET      data: { // These are the POST parameters passed to the backend script       latitude: lat,       longitude: long       },      success: function (returned_data) { // Function to run if successful, with the function parameter being the output of the url script        alert('Here is the output: ' + returned_data);      },      error: function () { // Function to run if unsuccessful        alert('An error occured');      }    }); }); </code></pre>  <p>This should let you take the data from the HTML page and let your python script process it.</p>  <p><a href=""https://stackoverflow.com/questions/464040/how-are-post-and-get-variables-handled-in-python"">Check out this answer</a> for handling POST/GET requests in python.</p>"
45208367	Converting regex python to javascript	javascript|python|regex	2017-07-20 07:39:07.147000 UTC	"<p>I am very new to Regex, and I searched a long time for the equivilants in javascript, I would love it is somebody responded with a detailed explanation of the regex in javascript, converted from python.</p>  <pre><code>import re  regex = r""""""     ^(       (?P&lt;ShowNameA&gt;.*[^ (_.]) # Show name         [ (_.]+         ( # Year with possible Season and Episode           (?P&lt;ShowYearA&gt;\d{4})           ([ (_.]+S(?P&lt;SeasonA&gt;\d{1,2})E(?P&lt;EpisodeA&gt;\d{1,2}))?         | # Season and Episode only           (?&lt;!\d{4}[ (_.])           S(?P&lt;SeasonB&gt;\d{1,2})E(?P&lt;EpisodeB&gt;\d{1,2})         | # Alternate format for episode           (?P&lt;EpisodeC&gt;\d{3})         )     |       # Show name with no other information       (?P&lt;ShowNameB&gt;.+)     )     """"""  test_str = (""archer.2009.S04E13\n""     ""space 1999 1975\n""     ""Space: 1999 (1975)\n""     ""Space.1999.1975.S01E01\n""     ""space 1999.(1975)\n""     ""The.4400.204.mkv\n""     ""space 1999 (1975)\n""     ""v.2009.S01E13.the.title.avi\n""     ""Teen.wolf.S04E12.HDTV.x264\n""     ""Se7en\n""     ""Se7en.(1995).avi\n""     ""How to train your dragon 2\n""     ""10,000BC (2010)"")  matches = re.finditer(regex, test_str, re.MULTILINE | re.VERBOSE)  for matchNum, match in enumerate(matches):     matchNum = matchNum + 1      print (""Match {matchNum} was found at {start}-{end}: {match}"".format(matchNum = matchNum, start = match.start(), end = match.end(), match = match.group()))      for groupNum in range(0, len(match.groups())):         groupNum = groupNum + 1          print (""Group {groupNum} found at {start}-{end}: {group}"".format(groupNum = groupNum, start = match.start(groupNum), end = match.end(groupNum), group = match.group(groupNum))) </code></pre>  <p><a href=""https://regex101.com/r/mR6oD4/1"" rel=""nofollow noreferrer"">Regex101</a></p>"	47581499	"<p>Sadly there is no easy way to covert Python regex to Javascript regex because Python regex is much more robust than Javascript regex.</p>  <p>Javascript is missing functional things like negative look behinds and recursion, but it misses many more syntactical tools like verbose syntax and named capturing groups.</p>  <p>regular capture group = <code>()</code><br> named capture group = <code>(?P&lt;ThisIsAName&gt;)</code></p>  <p>verbose regex = <code>'find me #this regex ignores comments and whitespace'</code> <br> non verbose regex = <code>'this treats whitespace literally'</code></p>  <p>So if we convert your named capture groups to regular (numbered) capture groups <br> And if we convert the verbose syntax into regular syntax. Then that regex would be valid Javascript regex, which, in Javascript would look like:<br>     <code>regex =  /^((.*[^ (_.])[ (_.]+((\d{4})([ (_.]+S(\d{1,2})E(\d{1,2}))?|(?&lt;!\d{4}[ (_.])S(\d{1,2})E(\d{1,2})|(\d{3}))|(.+))/</code></p>  <pre><code>// group 2 = ShowNameA // group 4 = ShowYearA // group 6 = SeasonB // group 7 = EpisodeC // group 8 = ShowNameB </code></pre>  <p>As you can see the Javascript version is pretty ugly because it does not have the verbose syntax or named capture groups. However in this case is functional equivalent.</p>  <p>Javascript does not have a direct equivalent to findall so you'll have to make/find an equivalent to that. Here is an article explaining several such ways.  <a href=""https://www.activestate.com/blog/2008/04/javascript-refindall-workalike"" rel=""nofollow noreferrer"">https://www.activestate.com/blog/2008/04/javascript-refindall-workalike</a></p>  <p>In the future I also <strong><em>highly recommend</em></strong> going to regexr.com to learn regex, specifically javascript regex.</p>"
45270187	Python JavaScript Scraping: ConnectionRefusedError: [Errno 61] Connection refused	python|selenium-webdriver|web-scraping|phantomjs	2017-07-23 21:47:22.190000 UTC	"<p>I am trying to scrape some info off of Yahoo Finance. Below is my simple code: </p>  <pre><code>url = ""https://finance.yahoo.com/quote/AAPL/key-statistics?p=AAPL"" from selenium import webdriver webdriver.PhantomJS(executable_path=""/anaconda/bin/phantomjs"") browser.get(url) browser.quit </code></pre>  <p>But I get the following error: </p>  <pre><code>ConnectionRefusedError                    Traceback (most recent call last) &lt;ipython-input-12-f4d26b367ef7&gt; in &lt;module&gt;()   8 webdriver.PhantomJS(executable_path=""/anaconda/bin/phantomjs"")   9  ---&gt; 10 browser.get(url)  &gt; /anaconda/lib/python3.6/site-packages/selenium-3.4.3-        py3.6.egg/selenium/webdriver/remote/webdriver.py in get(self, url) 266         Loads a web page in the current browser session. 267         """""" --&gt; 268         self.execute(Command.GET, {'url': url}) 269  270     @property  /anaconda/lib/python3.6/site-packages/selenium-3.4.3-py3.6.egg/selenium/webdriver/remote/webdriver.py in execute(self, driver_command, params) 252  253         params = self._wrap_value(params) --&gt; 254         response = self.command_executor.execute(driver_command, params) 255         if response: 256             self.error_handler.check_response(response)  /anaconda/lib/python3.6/site-packages/selenium-3.4.3-py3.6.egg/selenium/webdriver/remote/remote_connection.py in execute(self, command, params) 462         path = string.Template(command_info[1]).substitute(params) 463         url = '%s%s' % (self._url, path) --&gt; 464         return self._request(command_info[0], url, body=data) 465  466     def _request(self, method, url, body=None):  /anaconda/lib/python3.6/site-packages/selenium-3.4.3-py3.6.egg/selenium/webdriver/remote/remote_connection.py in _request(self, method, url, body) 485                 body = None 486             try: --&gt; 487                 self._conn.request(method, parsed_url.path, body, headers) 488                 resp = self._conn.getresponse() 489             except (httplib.HTTPException, socket.error):  /anaconda/lib/python3.6/http/client.py in request(self, method, url, body, headers, encode_chunked)    1237                 encode_chunked=False):    1238         """"""Send a complete request to the server."""""" -&gt; 1239         self._send_request(method, url, body, headers, encode_chunked)    1240     1241     def _send_request(self, method, url, body, headers, encode_chunked):  /anaconda/lib/python3.6/http/client.py in _send_request(self, method, url, body, headers, encode_chunked)    1283             # default charset of iso-8859-1.    1284             body = _encode(body, 'body') -&gt; 1285         self.endheaders(body, encode_chunked=encode_chunked)    1286     1287     def getresponse(self):  /anaconda/lib/python3.6/http/client.py in endheaders(self, message_body, encode_chunked)    1232         else:    1233             raise CannotSendHeader() -&gt; 1234         self._send_output(message_body, encode_chunked=encode_chunked)    1235     1236     def request(self, method, url, body=None, headers={}, *,  /anaconda/lib/python3.6/http/client.py in _send_output(self, message_body, encode_chunked)    1024         msg = b""\r\n"".join(self._buffer)    1025         del self._buffer[:] -&gt; 1026         self.send(msg)    1027     1028         if message_body is not None:  /anaconda/lib/python3.6/http/client.py in send(self, data) 962         if self.sock is None: 963             if self.auto_open: --&gt; 964                 self.connect() 965             else: 966                 raise NotConnected()  /anaconda/lib/python3.6/http/client.py in connect(self) 934         """"""Connect to the host and port specified in __init__."""""" 935         self.sock = self._create_connection( --&gt; 936             (self.host,self.port), self.timeout, self.source_address) 937         self.sock.setsockopt(socket.IPPROTO_TCP, socket.TCP_NODELAY, 1) 938   /anaconda/lib/python3.6/socket.py in create_connection(address, timeout, source_address) 720  721     if err is not None: --&gt; 722         raise err 723     else: 724         raise error(""getaddrinfo returns an empty list"")  /anaconda/lib/python3.6/socket.py in create_connection(address, timeout, source_address) 711             if source_address: 712                 sock.bind(source_address)  713             sock.connect(sa) 714             return sock 715    ConnectionRefusedError: [Errno 61] Connection refused </code></pre>  <p>I have checked other questions on this topic but couldn't find any relevant answers. How can I correct this error? </p>"	45275358	"<p>Here is the Answer to your Question:</p>  <p>The error stack trace gives us a hint that the actual issue may be in this line of the code:</p>  <pre><code>webdriver.PhantomJS(executable_path=""/anaconda/bin/phantomjs"") </code></pre>  <p>As you are trying to open the URL through the instance <code>browser</code> as in <code>browser.get(url)</code>, the <code>browser</code> instance must be configured with the <code>absolute path</code> of the <strong><code>PhantomJS</code></strong> executable as follows (as on my Win8 machine through PyCharm IDE):</p>  <pre><code>from selenium import webdriver  url = ""https://finance.yahoo.com/quote/AAPL/key-statistics?p=AAPL"" browser = webdriver.PhantomJS(executable_path=""C:\\Utility\\phantomjs-2.1.1-windows\\bin\\phantomjs.exe"") browser.get(url) # your code block print(browser.title) # your code block browser.quit </code></pre>  <p>The output on my console is as follows:</p>  <pre><code>AAPL Key Statistics | Apple Inc. Stock - Yahoo Finance </code></pre>  <p>Let me know if this Answers your Question.</p>"
45277660	Why does the javascript/flask client/server setup returns None on the python side?	javascript|jquery|python|ajax|flask	2017-07-24 10:02:37.537000 UTC	"<p>I would like to setup a simple way of having javascript in a client web page to communicate with a python server. The final goal is to create a simple web-browser based game for 2-4 players which access some page, and where they can do something (and see some graphics generated by <code>three.js</code>). Therefore, I would like to have the client in javascript, and the backend in python (because python is great).</p>  <p>My previous questions are <a href=""https://stackoverflow.com/questions/45276485/how-to-fix-sending-data-via-javascript-ajax-jquery-to-python-server"">here</a> and <a href=""https://stackoverflow.com/questions/45265760/javascript-python-client-webserver-example-not-working"">here</a>. Now I tried yet another example following <a href=""https://www.google.fr/search?client=ubuntu&amp;channel=fs&amp;q=complete%20javascript%20python%20communication%20example&amp;ie=utf-8&amp;oe=utf-8&amp;gfe_rd=cr&amp;ei=P8F1WZi9CZPFaNi0vYgP"" rel=""nofollow noreferrer"">this description</a> but again it didn't work. </p>  <p>Here is the full code, <code>index.html</code>:</p>  <pre><code>&lt;html&gt;   &lt;head&gt;     &lt;script src=""https://ajax.googleapis.com/ajax/libs/jquery/3.1.0/jquery.min.js""&gt;&lt;/script&gt;     &lt;script type=""text/javascript""&gt;     // setup some JSON to use     var cars = [       { ""make"":""Porsche"", ""model"":""911S"" },       { ""make"":""Mercedes-Benz"", ""model"":""220SE"" },       { ""make"":""Jaguar"",""model"": ""Mark VII"" }     ];      window.onload = function() {       // setup the button click       document.getElementById(""theButton"").onclick = function() {         doWork();       };     };      function doWork() {       // ajax the JSON to the server       $.post(""receiver"", cars, function(){        });       // stop link reloading the page      event.preventDefault();     }     &lt;/script&gt;     This will send data using AJAX to Python:&lt;br /&gt;&lt;br /&gt;     &lt;a href="""" id=""theButton""&gt;Click Me&lt;/a&gt;   &lt;/body&gt; &lt;/html&gt; </code></pre>  <p>and here is the python code: </p>  <pre><code>import sys  from flask import Flask, render_template, request, redirect, Response import random, json  app = Flask(__name__)  @app.route('/') def output():     # serve index template     return render_template('index.html', name='Joe')  @app.route('/receiver', methods = ['POST']) def worker():     # read json + reply     data = request.get_json() # HERE     print(data)     result = ''      for item in data:         # loop over every row         result += str(item['make']) + '\n'      return result  if __name__ == '__main__':     # run!     app.run() </code></pre>  <p>The problem is that the data received in the python code (HERE) the data is <code>None</code>. </p>  <p>I would appreciate ideas on how this can be fixed.</p>"	45282045	"<p>See this answer: <a href=""https://stackoverflow.com/questions/20001229/how-to-get-posted-json-in-flask"">How to get POSTed json in Flask?</a></p>  <p>The problem comes from your jQuery post request: the default mimetype is ""application/x-www-form-urlencoded"" when using $.post, try using <a href=""http://api.jquery.com/jquery.ajax/"" rel=""nofollow noreferrer"">$.ajax</a> with contentType ""application/json"", otherwise Flask will be unable to know that the data you send is JSON, and will return None when you call get_json()</p>  <p>Another idea is to use <a href=""http://flask.pocoo.org/docs/0.12/api/#flask.Request.data"" rel=""nofollow noreferrer"">data</a> instead of get_json(), then parse the result:</p>  <pre><code>data = request.data dataDict = json.loads(data) </code></pre>"
45277801	Webdriver in Python - Executing JavaScript file and passing arguments to its function	javascript|python|selenium-webdriver	2017-07-24 10:09:28.807000 UTC	"<p>I need to execute function written in JavaScript and also pass arguments.</p>  <pre><code>value = driver.execute_script(open(""path/file.js"").read()) </code></pre>  <p>I can execute that file but I don't know how to pass arguments to that function. Any idea? Thanks!</p>"	45280381	"<p>I found out that I can pass arguments like that:</p>  <pre><code>value = driver.execute_script(open(""path/file.js"").read(), ""arg1"", ""arg2"") </code></pre>  <p>However, I had to change my JavaScript function.  Now, it looks like that:</p>  <pre><code>return (function click_on_element(path, method) {    ...  })(arguments[0], arguments[1]); </code></pre>  <p>I discovered that it is called a self-invoking function. Now, it is possible to pass arguments to JavaScript function and execute it using python and webdriver.</p>"
45288570	How can I call a JavaScript function from Python using Bokeh?	javascript|python|function|callback|bokeh	2017-07-24 19:27:36.070000 UTC	"<p>I have this scenario:</p>  <ol> <li>I have some data (in a pandas dataframe) that I use to draw my plots</li> <li>When I press a button (built by a bokeh widget) I can call my callback method and I do my computation in python.</li> <li>But now I want to send the computed data back to the user in order to show a question in a wizard. So I need to run some JavaScript function.</li> </ol>  <p>I was thinking of creating a dummy button and run the click method of this button from python. But I think this is not possible.</p>  <p>So, how can I run a JavaScript function directly from python?</p>"	45288827	"<p>As of Bokeh <code>0.12.6</code>, being able to make these kinds of ""Remote Procedure Calls"" is still an <a href=""https://github.com/bokeh/bokeh/issues/5983"" rel=""nofollow noreferrer"">open feature request</a>. </p>  <p>In the mean time, your best bet is to add a <a href=""http://bokeh.pydata.org/en/latest/docs/user_guide/interaction/callbacks.html#userguide-interaction-jscallbacks"" rel=""nofollow noreferrer""><code>CustomJS</code> callback</a> to some property of some model. The <code>CustomJS</code> can execute whatever JS code you want (including calling other JS functions) and will trigger any the property is updated. </p>  <p>Here's an example that shows calling <code>CustomJS</code> whenever a slider is changed. For your use case you might add an invisible circle glyph, and attach a <code>CustomJS</code> to the glyph's <code>size</code> attribute. Changing <code>glyph.size</code> is how you can ""call"" the function. </p>  <pre><code>from bokeh.layouts import column from bokeh.models import CustomJS, ColumnDataSource, Slider from bokeh.plotting import Figure, output_file, show  output_file(""js_on_change.html"")  x = [x*0.005 for x in range(0, 200)] y = x  source = ColumnDataSource(data=dict(x=x, y=y))  plot = Figure(plot_width=400, plot_height=400) plot.line('x', 'y', source=source, line_width=3, line_alpha=0.6)  callback = CustomJS(args=dict(source=source), code=""""""     var data = source.data;     var f = cb_obj.value     x = data['x']     y = data['y']     for (i = 0; i &lt; x.length; i++) {         y[i] = Math.pow(x[i], f)     }     source.change.emit(); """""")  slider = Slider(start=0.1, end=4, value=1, step=.1, title=""power"") slider.js_on_change('value', callback)  layout = column(slider, plot)  show(layout) </code></pre>"
45288570	How can I call a JavaScript function from Python using Bokeh?	javascript|python|function|callback|bokeh	2017-07-24 19:27:36.070000 UTC	"<p>I have this scenario:</p>  <ol> <li>I have some data (in a pandas dataframe) that I use to draw my plots</li> <li>When I press a button (built by a bokeh widget) I can call my callback method and I do my computation in python.</li> <li>But now I want to send the computed data back to the user in order to show a question in a wizard. So I need to run some JavaScript function.</li> </ol>  <p>I was thinking of creating a dummy button and run the click method of this button from python. But I think this is not possible.</p>  <p>So, how can I run a JavaScript function directly from python?</p>"	49095082	"<p>Minimal example showing what Bryan answered me</p>  <pre><code>from bokeh.plotting import figure from bokeh.models.sources import ColumnDataSource from bokeh.models.callbacks import CustomJS from bokeh.io import curdoc from bokeh.layouts import column from bokeh.models.widgets import Button  plot = figure(     width=600,     height=600, )  source = ColumnDataSource({     'x': [1, 2, 3],     'y': [4, 5, 6], }) cr = plot.circle(     x='x', y='y',     source=source, size=10, color=""navy"", alpha=0.5 )  callback = CustomJS(args=dict(source=source), code=""""""     console.log('This code will be overwritten') """""") cr.glyph.js_on_change('size', callback)  def cb():     js_code = """"""         alert('Hello!');     """"""     callback.code = js_code  # update js code     cr.glyph.size += 1       # trigger the javascript code  bt = Button(     label=""Start Bokeh"",     button_type=""success"" ) bt.on_click(cb)  curdoc().add_root(column([bt, plot])) </code></pre>"
45294331	Python Selenium can't find elements on webpage collapse/expand section (Javascript)	javascript|python|html|selenium	2017-07-25 05:07:01.607000 UTC	"<p>I am new to selenium in Python. I was trying to to get the opening hours for each part of a supermarket(store/petrol station/pharmacy/cafe) from its website <a href=""https://my.morrisons.com/storefinder/8"" rel=""nofollow noreferrer"">https://my.morrisons.com/storefinder/8</a> . The info only shows up when each section is selected(expanded). </p>  <p>I saw the details are available in the Chrome developer tool, but I could not parse them using Beautifulsoup or urllib. I wasn't sure if it was because it was generated dynamically by Javascript. </p>  <p>I did some research and tried to use selenium with different methods such as find_element_by_xpath and find_element_by_link, however, none of them could help me locate those collapse section or the actual opening hour info. </p>  <p>Could someone please give me some guidance on how to solve this issue? Thank you very much. </p>"	45295308	"<p>Working with Selenium, you should waiting for page loading, then find panels and click on it and grab hours. On JS this code is working for me (assume browser is selenium web driver and requested page is loaded)</p>  <pre><code>await browser.wait(until.elementLocated(By.css('.according-markers.ng-scope'))); var panels = await browser.findElements(By.css('.according-markers.ng-scope')); for(let panel of panels){     await panel.findElement(By.css('a')).click();     let hoursEl = await panel.findElements(By.css('span.ng-binding'));     let hours = await Promise.all(hoursEl.map(function(el) { return el.getText()}));     console.log(hours); } </code></pre>"
45316049	output json object from python to javascript	javascript|python|python-2.7|http-headers|xmlhttprequest	2017-07-26 01:41:39.613000 UTC	"<p>(new to python) I am writing a very simple python function, outputting json for my javascript to get.</p>  <p>when I run the python script on command line, it output json object</p>  <pre><code>print json.dumps(data) </code></pre>  <p>on the js, </p>  <pre><code>    this.$http.get(link_to_python_script).then(function(response){         console.log('data',response.data);     }, function(error){         console.log('http error',error.statusText);     }); </code></pre>  <p>when I examine the response on browser it has this header:</p>  <pre><code>Content-Type:text/plain; charset=UTF-8 </code></pre>  <p>and in browser console.log prints out the entire python script instead of json object. I would like to keep everything very simple and not using extra addons. How can I accomplish this?</p>"	53213399	"<p>It's been a long time, I ended up using Flask or the python Open() function to read and write the file. As Faboolous said, print is not the right way.</p>"
45316767	change size for select by javaScript in robot +python	python|selenium-webdriver	2017-07-26 03:10:19.403000 UTC	"<pre><code>e = self._current_browser().find_element_by_xpath(""//label[text()='"" + label + ""']/../..//select"") print ""e:"", e self.execute_javascript(""return arguments[0].size"", e) self.capture_page_screenshot(""C:/base.png"") self.execute_javascript(""arguments[0].size=1"", e) </code></pre>  <blockquote>   <p>FAIL : TypeError: sequence item 1: expected string, WebElement found</p> </blockquote>  <p>How to solve this problem?</p>"	45316937	"<p>It appears that <code>label</code> is a WebElement that you have found using a previous selenium find method. But in the context of <code>find_element_by_xpath(""//label[text()='"" + label + ""']/../..//select"")</code> it must be a string. You need to ask for the <code>text()</code> part of <code>label</code> and then use the <code>extract</code> method to get the string you need.</p>"
45316767	change size for select by javaScript in robot +python	python|selenium-webdriver	2017-07-26 03:10:19.403000 UTC	"<pre><code>e = self._current_browser().find_element_by_xpath(""//label[text()='"" + label + ""']/../..//select"") print ""e:"", e self.execute_javascript(""return arguments[0].size"", e) self.capture_page_screenshot(""C:/base.png"") self.execute_javascript(""arguments[0].size=1"", e) </code></pre>  <blockquote>   <p>FAIL : TypeError: sequence item 1: expected string, WebElement found</p> </blockquote>  <p>How to solve this problem?</p>"	45322200	"<pre><code>e = self.get_element_xpath(""//*[contains(text(), '"" + label + ""')]//select"") self._current_browser().execute_script((arguments[0]).size=arguments[0].length"", e) </code></pre>"
45376148	How to send the value of a Python variable to JavaScript in HTML	javascript|python|html|google-app-engine	2017-07-28 14:33:58.610000 UTC	"<p>I am using the Google App Engine to display a Google map on a web page.</p>  <p>I want to bring the latitude and longitude in the database and display it on the map. To do this, I need to pass the imported latitude and longitude to JavaScript in HTML. I have tried several ways but it is useless. (ex. <code>{{variable}}</code> is useless.)</p>  <p>How best to debug or otherwise proceed on this?</p>  <pre><code>class Map(webapp2.RequestHandler):      db = connect_to_cloudsql()     cursor = db.cursor()     cursor.execute(""""""select latitude,longitude from User;"""""")      data=cursor.fetchone()      lat=data[0]     lng=data[1]      formstring = """"""     &lt;!DOCTYPE html&gt;      &lt;html lang=""ko-KR""&gt;     &lt;head&gt;     &lt;meta charset=""utf-8""/&gt;         &lt;meta name=""google-site-verification"" content=""9EqLgIzCmwFo7XAcSe4sBNZ_t0gULadyeF9BCO0DY3k""/&gt;     &lt;/head&gt;     &lt;body class&gt;     &lt;style&gt;      #map {         width: 80%;         height: 400px;         background-color: grey;       }     &lt;/style&gt;     &lt;div style=""position:relative;width:1080px;margin:0 auto;z-index:11""&gt;     &lt;div class=""container"" role=""main""&gt;     &lt;div id=""map""&gt;&lt;/div&gt;     &lt;br&gt;&lt;br&gt;     &lt;script async defer     src=""https://maps.googleapis.com/maps/api/js?key=mykey&amp;callback=initMap""&gt;     &lt;/script&gt;      &lt;script&gt;       function initMap() {          var uluru = {lat: {lat} , lng: {lng} };         var map = new google.maps.Map(document.getElementById('map'), {           zoom: 4,           center: uluru         });         var marker = new google.maps.Marker({           position: uluru,           map: map         });       }     &lt;/script&gt;      &lt;/div&gt;     &lt;/div&gt;     &lt;/body&gt;     &lt;/html&gt;         """""" </code></pre>"	45377761	"<p>Take a look at <a href=""https://pyformat.info/"" rel=""nofollow noreferrer"">string formatters</a>. As you grow your web app, you'll probably want to switch to using templates because they are more robust. <a href=""http://webapp2.readthedocs.io/en/latest/api/webapp2_extras/jinja2.html"" rel=""nofollow noreferrer"">Webapp2 provides support</a> for <a href=""http://jinja.pocoo.org/"" rel=""nofollow noreferrer"">Jinja2 templates</a>, which are widely used and will make your life easier in the long run.</p>  <p>But in the short run, use string formatters:</p>  <pre><code>formstring = """""" &lt;!DOCTYPE html&gt;  ...      var uluru = {lat: %f , lng: %f };     var map = new google.maps.Map(document.getElementById('map'), { ... """""" % (lat, lng)  # assuming lat/lng are floats, use %s instead of %f for strings </code></pre>  <p>Alternatively, use the ""new way"":</p>  <pre><code>formstring = """"""&lt;html.......{lat: {:f}, lng: {:f}..."""""".format(lat, lng) </code></pre>  <p>Again, look at <a href=""https://pyformat.info/"" rel=""nofollow noreferrer"">string formatters</a>.</p>"
45403914	Python replace javascript double quotes in javascript code	javascript|python|selenium|web|driver	2017-07-30 19:36:44.443000 UTC	"<p>I am trying to get selenium webdriver to execute the following javascript</p>  <pre><code>document.querySelector('#location &gt; input[type=""text""]').value=""10001"" </code></pre>  <p>but when I use the </p>  <pre><code>execute_script(""document.querySelector('#location &gt; input[type=""text""]').value=""10001"""") </code></pre>  <p>Because of the quotes, it fails to run, how to escape the quotes?</p>"	45403930	"<p>have you tried using three quotes? </p>  <pre><code>execute_script(""""""document.querySelector('#location &gt; input[type=""text""]').value=""10001"" """""") </code></pre>"
45403914	Python replace javascript double quotes in javascript code	javascript|python|selenium|web|driver	2017-07-30 19:36:44.443000 UTC	"<p>I am trying to get selenium webdriver to execute the following javascript</p>  <pre><code>document.querySelector('#location &gt; input[type=""text""]').value=""10001"" </code></pre>  <p>but when I use the </p>  <pre><code>execute_script(""document.querySelector('#location &gt; input[type=""text""]').value=""10001"""") </code></pre>  <p>Because of the quotes, it fails to run, how to escape the quotes?</p>"	45403937	"<p>Use backslashes to escape quotes within quotes:</p>  <pre><code>execute_script(""document.querySelector('#location &gt; input[type=\""text\""]').value = \""10001\""') </code></pre>  <p>Btw, in this specific case you don't really need additional quotes. This will also work:</p>  <pre><code>execute_script(""document.querySelector('#location &gt; input[type=text]').value = 10001') </code></pre>"
45407071	"python: filtering out ""out of stock"" products from a javascript string"	javascript|python	2017-07-31 03:28:40.277000 UTC	"<p>I have pulled the all product_ids from this javascript string which are</p>  <pre><code>['93132', '93133', '93134', '93135', '93136', '93137', '93138', '93139', '93140', '93141', '93142', '93143', '93144', '93145', '93146', '93147'] </code></pre>  <p>my next step is to filter out the sizes out of stock with either </p>  <pre><code>""is_in_stock"":false  </code></pre>  <p>or </p>  <pre><code>""custom_status"":""Out of Stock"" </code></pre>  <p>I have tried this knowing that i was not on the right path as i use this for html -</p>  <pre><code>sizes_in_stock = [] for size in all_product_ids:     if ""Out of Stock"" not in size[""custom_status""]:         size_id = size[""product_id""]         sizes_in_stock.append(size_id.split(""_"")[1]) </code></pre>  <p>What do i need to do to filter out the out of stock product ids and append the one in stock to my list?</p>  <p>Below is my code to pull the product ids from the javascript string and the javascript string itself @@@@@@@@@@@@@@@@@@@@@@@</p>  <p>CODE to pull ""product ids"" -</p>  <pre><code>product_url = ""randomsite.com"" response1 = requests.get(product_url, headers=headers) all_product_ids = re.findall('product_id"":""([^""]+)', response1.text) print(all_product_ids) </code></pre>  <p>HTML javascript string - </p>  <pre><code>{""is_in_stock"":true,""custom_status_icon"":"""",""custom_status"":"""",""product_id"":""93132""},""255"":{""is_in_stock"":true,""custom_status_icon"":"""",""custom_status"":"""",""product_id"":""93133""},""256"":{""is_in_stock"":true,""custom_status_icon"":"""",""custom_status"":"""",""product_id"":""93134""},""365"":{""is_in_stock"":true,""custom_status_icon"":"""",""custom_status"":"""",""product_id"":""93135""},""257"":{""is_in_stock"":false,""custom_status_icon"":"""",""custom_status"":""Out of Stock"",""product_id"":""93136"",""stockalert"":""""},""258"":{""is_in_stock"":false,""custom_status_icon"":"""",""custom_status"":""Out of Stock"",""product_id"":""93137"",""stockalert"":""""},""364"":{""is_in_stock"":false,""custom_status_icon"":"""",""custom_status"":""Out of Stock"",""product_id"":""93138"",""stockalert"":""""},""242"":{""is_in_stock"":false,""custom_status_icon"":"""",""custom_status"":""Out of Stock"",""product_id"":""93139"",""stockalert"":""""},""246"":{""is_in_stock"":false,""custom_status_icon"":"""",""custom_status"":""Out of Stock"",""product_id"":""93140"",""stockalert"":""""},""363"":{""is_in_stock"":false,""custom_status_icon"":"""",""custom_status"":""Out of Stock"",""product_id"":""93141"",""stockalert"":""""},""248"":{""is_in_stock"":false,""custom_status_icon"":"""",""custom_status"":""Out of Stock"",""product_id"":""93142"",""stockalert"":""""},""243"":{""is_in_stock"":false,""custom_status_icon"":"""",""custom_status"":""Out of Stock"",""product_id"":""93143"",""stockalert"":""""},""368"":{""is_in_stock"":false,""custom_status_icon"":"""",""custom_status"":""Out of Stock"",""product_id"":""93144"",""stockalert"":""""},""244"":{""is_in_stock"":false,""custom_status_icon"":"""",""custom_status"":""Out of Stock"",""product_id"":""93145"",""stockalert"":""""},""247"":{""is_in_stock"":false,""custom_status_icon"":"""",""custom_status"":""Out of Stock"",""product_id"":""93146"",""stockalert"":""""},""79"":{""is_in_stock"":false,""custom_status_icon"":"""",""custom_status"":""Out of Stock"",""product_id"":""93147"",""stockalert"":""""}}); </code></pre>  <p>Full HTML I pulled - </p>  <pre><code>&lt;div class=""product-options"" id=""product-options-wrapper""&gt;     &lt;script type=""text/javascript""&gt;                         try {                             var changeConfigurableStatus = true;                             var stStatus = new StockStatus({""255"":{""is_in_stock"":false,""custom_status_icon"":"""",""custom_status"":""Out of Stock"",""product_id"":""93004"",""stockalert"":""\r\n&lt;div class=\""alert-stock productmail-block\""&gt;\r\n\t&lt;label&gt;\r\n\t\tNotify me, when the product is back in stock\t&lt;\/label&gt;\r\n\t&lt;input type=\""text\""\r\n\t\t   name=\""guest_email\""\r\n\t\t   id=\""productmail_guest_email-93004\""\r\n\t\t   onKeyPress=\""return checkIt(event, 'https:\/\/www.thegoodwillout.com\/productmail\/email\/stock\/', $('button-email-send-93004'))\""\r\n\t\t   class=\""input-text\""\r\n\t\t   placeholder=\""Your email address\u2026\""\r\n\t\t   size=\""30\"" \/&gt;\r\n\t&lt;input type=\""hidden\""\r\n\t\t   name=\""product_id\""\r\n\t\t   value=\""93004\"" \/&gt;\r\n\t&lt;input type=\""hidden\""\r\n\t\t   name=\""type\""\r\n\t\t   value=\""email\"" \/&gt;\r\n\t&lt;input type=\""hidden\""\r\n\t\t   name=\""parent_id\""\r\n\t\t   value=\""92805\"" \/&gt;\r\n\t&lt;input type=\""hidden\""\r\n\t\t   name=\""uenc\""\r\n\t\t   value=\""aHR0cHM6Ly93d3cudGhlZ29vZHdpbGxvdXQuY29tL2FkaWRhcy1jb25zb3J0aXVtLXNuZWFrZXItZXhjaGFuZ2UteC1hbGlmZS14LXN0YXJjb3ctc3Rhbi1zbWl0aC13aGl0ZS1jbTgwMDA,\"" \/&gt;\r\n\t&lt;button type=\""button\""\r\n\t\t\tid=\""button-email-send-93004\""\r\n\t\t\tclass=\""strong button btn-cart amcart-ignore\""\r\n\t\t\tonclick=\""send_alert_email('https:\/\/www.thegoodwillout.com\/productmail\/email\/stock\/', this)\""\r\n\t\t\ttitle=\""Submit\""&gt;\r\n\t\t&lt;span&gt;Submit&lt;\/span&gt;\r\n\t&lt;\/button&gt;\r\n&lt;\/div&gt;\r\n""},""256"":{""is_in_stock"":true,""custom_status_icon"":"""",""custom_status"":"""",""product_id"":""93005""},""365"":{""is_in_stock"":true,""custom_status_icon"":"""",""custom_status"":"""",""product_id"":""93006""},""257"":{""is_in_stock"":true,""custom_status_icon"":"""",""custom_status"":"""",""product_id"":""93007""},""258"":{""is_in_stock"":true,""custom_status_icon"":"""",""custom_status"":"""",""product_id"":""93008""},""364"":{""is_in_stock"":true,""custom_status_icon"":"""",""custom_status"":"""",""product_id"":""93009""},""242"":{""is_in_stock"":false,""custom_status_icon"":"""",""custom_status"":""Out of Stock"",""product_id"":""93010"",""stockalert"":""\r\n&lt;div class=\""alert-stock productmail-block\""&gt;\r\n\t&lt;label&gt;\r\n\t\tNotify me, when the product is back in stock\t&lt;\/label&gt;\r\n\t&lt;input type=\""text\""\r\n\t\t   name=\""guest_email\""\r\n\t\t   id=\""productmail_guest_email-93010\""\r\n\t\t   onKeyPress=\""return checkIt(event, 'https:\/\/www.thegoodwillout.com\/productmail\/email\/stock\/', $('button-email-send-93010'))\""\r\n\t\t   class=\""input-text\""\r\n\t\t   placeholder=\""Your email address\u2026\""\r\n\t\t   size=\""30\"" \/&gt;\r\n\t&lt;input type=\""hidden\""\r\n\t\t   name=\""product_id\""\r\n\t\t   value=\""93010\"" \/&gt;\r\n\t&lt;input type=\""hidden\""\r\n\t\t   name=\""type\""\r\n\t\t   value=\""email\"" \/&gt;\r\n\t&lt;input type=\""hidden\""\r\n\t\t   name=\""parent_id\""\r\n\t\t   value=\""92805\"" \/&gt;\r\n\t&lt;input type=\""hidden\""\r\n\t\t   name=\""uenc\""\r\n\t\t   value=\""aHR0cHM6Ly93d3cudGhlZ29vZHdpbGxvdXQuY29tL2FkaWRhcy1jb25zb3J0aXVtLXNuZWFrZXItZXhjaGFuZ2UteC1hbGlmZS14LXN0YXJjb3ctc3Rhbi1zbWl0aC13aGl0ZS1jbTgwMDA,\"" \/&gt;\r\n\t&lt;button type=\""button\""\r\n\t\t\tid=\""button-email-send-93010\""\r\n\t\t\tclass=\""strong button btn-cart amcart-ignore\""\r\n\t\t\tonclick=\""send_alert_email('https:\/\/www.thegoodwillout.com\/productmail\/email\/stock\/', this)\""\r\n\t\t\ttitle=\""Submit\""&gt;\r\n\t\t&lt;span&gt;Submit&lt;\/span&gt;\r\n\t&lt;\/button&gt;\r\n&lt;\/div&gt;\r\n""},""246"":{""is_in_stock"":false,""custom_status_icon"":"""",""custom_status"":""Out of Stock"",""product_id"":""93011"",""stockalert"":""\r\n&lt;div class=\""alert-stock productmail-block\""&gt;\r\n\t&lt;label&gt;\r\n\t\tNotify me, when the product is back in stock\t&lt;\/label&gt;\r\n\t&lt;input type=\""text\""\r\n\t\t   name=\""guest_email\""\r\n\t\t   id=\""productmail_guest_email-93011\""\r\n\t\t   onKeyPress=\""return checkIt(event, 'https:\/\/www.thegoodwillout.com\/productmail\/email\/stock\/', $('button-email-send-93011'))\""\r\n\t\t   class=\""input-text\""\r\n\t\t   placeholder=\""Your email address\u2026\""\r\n\t\t   size=\""30\"" \/&gt;\r\n\t&lt;input type=\""hidden\""\r\n\t\t   name=\""product_id\""\r\n\t\t   value=\""93011\"" \/&gt;\r\n\t&lt;input type=\""hidden\""\r\n\t\t   name=\""type\""\r\n\t\t   value=\""email\"" \/&gt;\r\n\t&lt;input type=\""hidden\""\r\n\t\t   name=\""parent_id\""\r\n\t\t   value=\""92805\"" \/&gt;\r\n\t&lt;input type=\""hidden\""\r\n\t\t   name=\""uenc\""\r\n\t\t   value=\""aHR0cHM6Ly93d3cudGhlZ29vZHdpbGxvdXQuY29tL2FkaWRhcy1jb25zb3J0aXVtLXNuZWFrZXItZXhjaGFuZ2UteC1hbGlmZS14LXN0YXJjb3ctc3Rhbi1zbWl0aC13aGl0ZS1jbTgwMDA,\"" \/&gt;\r\n\t&lt;button type=\""button\""\r\n\t\t\tid=\""button-email-send-93011\""\r\n\t\t\tclass=\""strong button btn-cart amcart-ignore\""\r\n\t\t\tonclick=\""send_alert_email('https:\/\/www.thegoodwillout.com\/productmail\/email\/stock\/', this)\""\r\n\t\t\ttitle=\""Submit\""&gt;\r\n\t\t&lt;span&gt;Submit&lt;\/span&gt;\r\n\t&lt;\/button&gt;\r\n&lt;\/div&gt;\r\n""},""363"":{""is_in_stock"":false,""custom_status_icon"":"""",""custom_status"":""Out of Stock"",""product_id"":""93012"",""stockalert"":""\r\n&lt;div class=\""alert-stock productmail-block\""&gt;\r\n\t&lt;label&gt;\r\n\t\tNotify me, when the product is back in stock\t&lt;\/label&gt;\r\n\t&lt;input type=\""text\""\r\n\t\t   name=\""guest_email\""\r\n\t\t   id=\""productmail_guest_email-93012\""\r\n\t\t   onKeyPress=\""return checkIt(event, 'https:\/\/www.thegoodwillout.com\/productmail\/email\/stock\/', $('button-email-send-93012'))\""\r\n\t\t   class=\""input-text\""\r\n\t\t   placeholder=\""Your email address\u2026\""\r\n\t\t   size=\""30\"" \/&gt;\r\n\t&lt;input type=\""hidden\""\r\n\t\t   name=\""product_id\""\r\n\t\t   value=\""93012\"" \/&gt;\r\n\t&lt;input type=\""hidden\""\r\n\t\t   name=\""type\""\r\n\t\t   value=\""email\"" \/&gt;\r\n\t&lt;input type=\""hidden\""\r\n\t\t   name=\""parent_id\""\r\n\t\t   value=\""92805\"" \/&gt;\r\n\t&lt;input type=\""hidden\""\r\n\t\t   name=\""uenc\""\r\n\t\t   value=\""aHR0cHM6Ly93d3cudGhlZ29vZHdpbGxvdXQuY29tL2FkaWRhcy1jb25zb3J0aXVtLXNuZWFrZXItZXhjaGFuZ2UteC1hbGlmZS14LXN0YXJjb3ctc3Rhbi1zbWl0aC13aGl0ZS1jbTgwMDA,\"" \/&gt;\r\n\t&lt;button type=\""button\""\r\n\t\t\tid=\""button-email-send-93012\""\r\n\t\t\tclass=\""strong button btn-cart amcart-ignore\""\r\n\t\t\tonclick=\""send_alert_email('https:\/\/www.thegoodwillout.com\/productmail\/email\/stock\/', this)\""\r\n\t\t\ttitle=\""Submit\""&gt;\r\n\t\t&lt;span&gt;Submit&lt;\/span&gt;\r\n\t&lt;\/button&gt;\r\n&lt;\/div&gt;\r\n""},""248"":{""is_in_stock"":false,""custom_status_icon"":"""",""custom_status"":""Out of Stock"",""product_id"":""93013"",""stockalert"":""\r\n&lt;div class=\""alert-stock productmail-block\""&gt;\r\n\t&lt;label&gt;\r\n\t\tNotify me, when the product is back in stock\t&lt;\/label&gt;\r\n\t&lt;input type=\""text\""\r\n\t\t   name=\""guest_email\""\r\n\t\t   id=\""productmail_guest_email-93013\""\r\n\t\t   onKeyPress=\""return checkIt(event, 'https:\/\/www.thegoodwillout.com\/productmail\/email\/stock\/', $('button-email-send-93013'))\""\r\n\t\t   class=\""input-text\""\r\n\t\t   placeholder=\""Your email address\u2026\""\r\n\t\t   size=\""30\"" \/&gt;\r\n\t&lt;input type=\""hidden\""\r\n\t\t   name=\""product_id\""\r\n\t\t   value=\""93013\"" \/&gt;\r\n\t&lt;input type=\""hidden\""\r\n\t\t   name=\""type\""\r\n\t\t   value=\""email\"" \/&gt;\r\n\t&lt;input type=\""hidden\""\r\n\t\t   name=\""parent_id\""\r\n\t\t   value=\""92805\"" \/&gt;\r\n\t&lt;input type=\""hidden\""\r\n\t\t   name=\""uenc\""\r\n\t\t   value=\""aHR0cHM6Ly93d3cudGhlZ29vZHdpbGxvdXQuY29tL2FkaWRhcy1jb25zb3J0aXVtLXNuZWFrZXItZXhjaGFuZ2UteC1hbGlmZS14LXN0YXJjb3ctc3Rhbi1zbWl0aC13aGl0ZS1jbTgwMDA,\"" \/&gt;\r\n\t&lt;button type=\""button\""\r\n\t\t\tid=\""button-email-send-93013\""\r\n\t\t\tclass=\""strong button btn-cart amcart-ignore\""\r\n\t\t\tonclick=\""send_alert_email('https:\/\/www.thegoodwillout.com\/productmail\/email\/stock\/', this)\""\r\n\t\t\ttitle=\""Submit\""&gt;\r\n\t\t&lt;span&gt;Submit&lt;\/span&gt;\r\n\t&lt;\/button&gt;\r\n&lt;\/div&gt;\r\n""},""243"":{""is_in_stock"":false,""custom_status_icon"":"""",""custom_status"":""Out of Stock"",""product_id"":""93014"",""stockalert"":""\r\n&lt;div class=\""alert-stock productmail-block\""&gt;\r\n\t&lt;label&gt;\r\n\t\tNotify me, when the product is back in stock\t&lt;\/label&gt;\r\n\t&lt;input type=\""text\""\r\n\t\t   name=\""guest_email\""\r\n\t\t   id=\""productmail_guest_email-93014\""\r\n\t\t   onKeyPress=\""return checkIt(event, 'https:\/\/www.thegoodwillout.com\/productmail\/email\/stock\/', $('button-email-send-93014'))\""\r\n\t\t   class=\""input-text\""\r\n\t\t   placeholder=\""Your email address\u2026\""\r\n\t\t   size=\""30\"" \/&gt;\r\n\t&lt;input type=\""hidden\""\r\n\t\t   name=\""product_id\""\r\n\t\t   value=\""93014\"" \/&gt;\r\n\t&lt;input type=\""hidden\""\r\n\t\t   name=\""type\""\r\n\t\t   value=\""email\"" \/&gt;\r\n\t&lt;input type=\""hidden\""\r\n\t\t   name=\""parent_id\""\r\n\t\t   value=\""92805\"" \/&gt;\r\n\t&lt;input type=\""hidden\""\r\n\t\t   name=\""uenc\""\r\n\t\t   value=\""aHR0cHM6Ly93d3cudGhlZ29vZHdpbGxvdXQuY29tL2FkaWRhcy1jb25zb3J0aXVtLXNuZWFrZXItZXhjaGFuZ2UteC1hbGlmZS14LXN0YXJjb3ctc3Rhbi1zbWl0aC13aGl0ZS1jbTgwMDA,\"" \/&gt;\r\n\t&lt;button type=\""button\""\r\n\t\t\tid=\""button-email-send-93014\""\r\n\t\t\tclass=\""strong button btn-cart amcart-ignore\""\r\n\t\t\tonclick=\""send_alert_email('https:\/\/www.thegoodwillout.com\/productmail\/email\/stock\/', this)\""\r\n\t\t\ttitle=\""Submit\""&gt;\r\n\t\t&lt;span&gt;Submit&lt;\/span&gt;\r\n\t&lt;\/button&gt;\r\n&lt;\/div&gt;\r\n""},""368"":{""is_in_stock"":false,""custom_status_icon"":"""",""custom_status"":""Out of Stock"",""product_id"":""93015"",""stockalert"":""\r\n&lt;div class=\""alert-stock productmail-block\""&gt;\r\n\t&lt;label&gt;\r\n\t\tNotify me, when the product is back in stock\t&lt;\/label&gt;\r\n\t&lt;input type=\""text\""\r\n\t\t   name=\""guest_email\""\r\n\t\t   id=\""productmail_guest_email-93015\""\r\n\t\t   onKeyPress=\""return checkIt(event, 'https:\/\/www.thegoodwillout.com\/productmail\/email\/stock\/', $('button-email-send-93015'))\""\r\n\t\t   class=\""input-text\""\r\n\t\t   placeholder=\""Your email address\u2026\""\r\n\t\t   size=\""30\"" \/&gt;\r\n\t&lt;input type=\""hidden\""\r\n\t\t   name=\""product_id\""\r\n\t\t   value=\""93015\"" \/&gt;\r\n\t&lt;input type=\""hidden\""\r\n\t\t   name=\""type\""\r\n\t\t   value=\""email\"" \/&gt;\r\n\t&lt;input type=\""hidden\""\r\n\t\t   name=\""parent_id\""\r\n\t\t   value=\""92805\"" \/&gt;\r\n\t&lt;input type=\""hidden\""\r\n\t\t   name=\""uenc\""\r\n\t\t   value=\""aHR0cHM6Ly93d3cudGhlZ29vZHdpbGxvdXQuY29tL2FkaWRhcy1jb25zb3J0aXVtLXNuZWFrZXItZXhjaGFuZ2UteC1hbGlmZS14LXN0YXJjb3ctc3Rhbi1zbWl0aC13aGl0ZS1jbTgwMDA,\"" \/&gt;\r\n\t&lt;button type=\""button\""\r\n\t\t\tid=\""button-email-send-93015\""\r\n\t\t\tclass=\""strong button btn-cart amcart-ignore\""\r\n\t\t\tonclick=\""send_alert_email('https:\/\/www.thegoodwillout.com\/productmail\/email\/stock\/', this)\""\r\n\t\t\ttitle=\""Submit\""&gt;\r\n\t\t&lt;span&gt;Submit&lt;\/span&gt;\r\n\t&lt;\/button&gt;\r\n&lt;\/div&gt;\r\n""},""244"":{""is_in_stock"":false,""custom_status_icon"":"""",""custom_status"":""Out of Stock"",""product_id"":""93016"",""stockalert"":""\r\n&lt;div class=\""alert-stock productmail-block\""&gt;\r\n\t&lt;label&gt;\r\n\t\tNotify me, when the product is back in stock\t&lt;\/label&gt;\r\n\t&lt;input type=\""text\""\r\n\t\t   name=\""guest_email\""\r\n\t\t   id=\""productmail_guest_email-93016\""\r\n\t\t   onKeyPress=\""return checkIt(event, 'https:\/\/www.thegoodwillout.com\/productmail\/email\/stock\/', $('button-email-send-93016'))\""\r\n\t\t   class=\""input-text\""\r\n\t\t   placeholder=\""Your email address\u2026\""\r\n\t\t   size=\""30\"" \/&gt;\r\n\t&lt;input type=\""hidden\""\r\n\t\t   name=\""product_id\""\r\n\t\t   value=\""93016\"" \/&gt;\r\n\t&lt;input type=\""hidden\""\r\n\t\t   name=\""type\""\r\n\t\t   value=\""email\"" \/&gt;\r\n\t&lt;input type=\""hidden\""\r\n\t\t   name=\""parent_id\""\r\n\t\t   value=\""92805\"" \/&gt;\r\n\t&lt;input type=\""hidden\""\r\n\t\t   name=\""uenc\""\r\n\t\t   value=\""aHR0cHM6Ly93d3cudGhlZ29vZHdpbGxvdXQuY29tL2FkaWRhcy1jb25zb3J0aXVtLXNuZWFrZXItZXhjaGFuZ2UteC1hbGlmZS14LXN0YXJjb3ctc3Rhbi1zbWl0aC13aGl0ZS1jbTgwMDA,\"" \/&gt;\r\n\t&lt;button type=\""button\""\r\n\t\t\tid=\""button-email-send-93016\""\r\n\t\t\tclass=\""strong button btn-cart amcart-ignore\""\r\n\t\t\tonclick=\""send_alert_email('https:\/\/www.thegoodwillout.com\/productmail\/email\/stock\/', this)\""\r\n\t\t\ttitle=\""Submit\""&gt;\r\n\t\t&lt;span&gt;Submit&lt;\/span&gt;\r\n\t&lt;\/button&gt;\r\n&lt;\/div&gt;\r\n""},""247"":{""is_in_stock"":false,""custom_status_icon"":"""",""custom_status"":""Out of Stock"",""product_id"":""93017"",""stockalert"":""\r\n&lt;div class=\""alert-stock productmail-block\""&gt;\r\n\t&lt;label&gt;\r\n\t\tNotify me, when the product is back in stock\t&lt;\/label&gt;\r\n\t&lt;input type=\""text\""\r\n\t\t   name=\""guest_email\""\r\n\t\t   id=\""productmail_guest_email-93017\""\r\n\t\t   onKeyPress=\""return checkIt(event, 'https:\/\/www.thegoodwillout.com\/productmail\/email\/stock\/', $('button-email-send-93017'))\""\r\n\t\t   class=\""input-text\""\r\n\t\t   placeholder=\""Your email address\u2026\""\r\n\t\t   size=\""30\"" \/&gt;\r\n\t&lt;input type=\""hidden\""\r\n\t\t   name=\""product_id\""\r\n\t\t   value=\""93017\"" \/&gt;\r\n\t&lt;input type=\""hidden\""\r\n\t\t   name=\""type\""\r\n\t\t   value=\""email\"" \/&gt;\r\n\t&lt;input type=\""hidden\""\r\n\t\t   name=\""parent_id\""\r\n\t\t   value=\""92805\"" \/&gt;\r\n\t&lt;input type=\""hidden\""\r\n\t\t   name=\""uenc\""\r\n\t\t   value=\""aHR0cHM6Ly93d3cudGhlZ29vZHdpbGxvdXQuY29tL2FkaWRhcy1jb25zb3J0aXVtLXNuZWFrZXItZXhjaGFuZ2UteC1hbGlmZS14LXN0YXJjb3ctc3Rhbi1zbWl0aC13aGl0ZS1jbTgwMDA,\"" \/&gt;\r\n\t&lt;button type=\""button\""\r\n\t\t\tid=\""button-email-send-93017\""\r\n\t\t\tclass=\""strong button btn-cart amcart-ignore\""\r\n\t\t\tonclick=\""send_alert_email('https:\/\/www.thegoodwillout.com\/productmail\/email\/stock\/', this)\""\r\n\t\t\ttitle=\""Submit\""&gt;\r\n\t\t&lt;span&gt;Submit&lt;\/span&gt;\r\n\t&lt;\/button&gt;\r\n&lt;\/div&gt;\r\n""},""79"":{""is_in_stock"":false,""custom_status_icon"":"""",""custom_status"":""Out of Stock"",""product_id"":""93018"",""stockalert"":""\r\n&lt;div class=\""alert-stock productmail-block\""&gt;\r\n\t&lt;label&gt;\r\n\t\tNotify me, when the product is back in stock\t&lt;\/label&gt;\r\n\t&lt;input type=\""text\""\r\n\t\t   name=\""guest_email\""\r\n\t\t   id=\""productmail_guest_email-93018\""\r\n\t\t   onKeyPress=\""return checkIt(event, 'https:\/\/www.thegoodwillout.com\/productmail\/email\/stock\/', $('button-email-send-93018'))\""\r\n\t\t   class=\""input-text\""\r\n\t\t   placeholder=\""Your email address\u2026\""\r\n\t\t   size=\""30\"" \/&gt;\r\n\t&lt;input type=\""hidden\""\r\n\t\t   name=\""product_id\""\r\n\t\t   value=\""93018\"" \/&gt;\r\n\t&lt;input type=\""hidden\""\r\n\t\t   name=\""type\""\r\n\t\t   value=\""email\"" \/&gt;\r\n\t&lt;input type=\""hidden\""\r\n\t\t   name=\""parent_id\""\r\n\t\t   value=\""92805\"" \/&gt;\r\n\t&lt;input type=\""hidden\""\r\n\t\t   name=\""uenc\""\r\n\t\t   value=\""aHR0cHM6Ly93d3cudGhlZ29vZHdpbGxvdXQuY29tL2FkaWRhcy1jb25zb3J0aXVtLXNuZWFrZXItZXhjaGFuZ2UteC1hbGlmZS14LXN0YXJjb3ctc3Rhbi1zbWl0aC13aGl0ZS1jbTgwMDA,\"" \/&gt;\r\n\t&lt;button type=\""button\""\r\n\t\t\tid=\""button-email-send-93018\""\r\n\t\t\tclass=\""strong button btn-cart amcart-ignore\""\r\n\t\t\tonclick=\""send_alert_email('https:\/\/www.thegoodwillout.com\/productmail\/email\/stock\/', this)\""\r\n\t\t\ttitle=\""Submit\""&gt;\r\n\t\t&lt;span&gt;Submit&lt;\/span&gt;\r\n\t&lt;\/button&gt;\r\n&lt;\/div&gt;\r\n""},""249"":{""is_in_stock"":false,""custom_status_icon"":"""",""custom_status"":""Out of Stock"",""product_id"":""93019"",""stockalert"":""\r\n&lt;div class=\""alert-stock productmail-block\""&gt;\r\n\t&lt;label&gt;\r\n\t\tNotify me, when the product is back in stock\t&lt;\/label&gt;\r\n\t&lt;input type=\""text\""\r\n\t\t   name=\""guest_email\""\r\n\t\t   id=\""productmail_guest_email-93019\""\r\n\t\t   onKeyPress=\""return checkIt(event, 'https:\/\/www.thegoodwillout.com\/productmail\/email\/stock\/', $('button-email-send-93019'))\""\r\n\t\t   class=\""input-text\""\r\n\t\t   placeholder=\""Your email address\u2026\""\r\n\t\t   size=\""30\"" \/&gt;\r\n\t&lt;input type=\""hidden\""\r\n\t\t   name=\""product_id\""\r\n\t\t   value=\""93019\"" \/&gt;\r\n\t&lt;input type=\""hidden\""\r\n\t\t   name=\""type\""\r\n\t\t   value=\""email\"" \/&gt;\r\n\t&lt;input type=\""hidden\""\r\n\t\t   name=\""parent_id\""\r\n\t\t   value=\""92805\"" \/&gt;\r\n\t&lt;input type=\""hidden\""\r\n\t\t   name=\""uenc\""\r\n\t\t   value=\""aHR0cHM6Ly93d3cudGhlZ29vZHdpbGxvdXQuY29tL2FkaWRhcy1jb25zb3J0aXVtLXNuZWFrZXItZXhjaGFuZ2UteC1hbGlmZS14LXN0YXJjb3ctc3Rhbi1zbWl0aC13aGl0ZS1jbTgwMDA,\"" \/&gt;\r\n\t&lt;button type=\""button\""\r\n\t\t\tid=\""button-email-send-93019\""\r\n\t\t\tclass=\""strong button btn-cart amcart-ignore\""\r\n\t\t\tonclick=\""send_alert_email('https:\/\/www.thegoodwillout.com\/productmail\/email\/stock\/', this)\""\r\n\t\t\ttitle=\""Submit\""&gt;\r\n\t\t&lt;span&gt;Submit&lt;\/span&gt;\r\n\t&lt;\/button&gt;\r\n&lt;\/div&gt;\r\n""},""245"":{""is_in_stock"":false,""custom_status_icon"":"""",""custom_status"":""Out of Stock"",""product_id"":""93020"",""stockalert"":""\r\n&lt;div class=\""alert-stock productmail-block\""&gt;\r\n\t&lt;label&gt;\r\n\t\tNotify me, when the product is back in stock\t&lt;\/label&gt;\r\n\t&lt;input type=\""text\""\r\n\t\t   name=\""guest_email\""\r\n\t\t   id=\""productmail_guest_email-93020\""\r\n\t\t   onKeyPress=\""return checkIt(event, 'https:\/\/www.thegoodwillout.com\/productmail\/email\/stock\/', $('button-email-send-93020'))\""\r\n\t\t   class=\""input-text\""\r\n\t\t   placeholder=\""Your email address\u2026\""\r\n\t\t   size=\""30\"" \/&gt;\r\n\t&lt;input type=\""hidden\""\r\n\t\t   name=\""product_id\""\r\n\t\t   value=\""93020\"" \/&gt;\r\n\t&lt;input type=\""hidden\""\r\n\t\t   name=\""type\""\r\n\t\t   value=\""email\"" \/&gt;\r\n\t&lt;input type=\""hidden\""\r\n\t\t   name=\""parent_id\""\r\n\t\t   value=\""92805\"" \/&gt;\r\n\t&lt;input type=\""hidden\""\r\n\t\t   name=\""uenc\""\r\n\t\t   value=\""aHR0cHM6Ly93d3cudGhlZ29vZHdpbGxvdXQuY29tL2FkaWRhcy1jb25zb3J0aXVtLXNuZWFrZXItZXhjaGFuZ2UteC1hbGlmZS14LXN0YXJjb3ctc3Rhbi1zbWl0aC13aGl0ZS1jbTgwMDA,\"" \/&gt;\r\n\t&lt;button type=\""button\""\r\n\t\t\tid=\""button-email-send-93020\""\r\n\t\t\tclass=\""strong button btn-cart amcart-ignore\""\r\n\t\t\tonclick=\""send_alert_email('https:\/\/www.thegoodwillout.com\/productmail\/email\/stock\/', this)\""\r\n\t\t\ttitle=\""Submit\""&gt;\r\n\t\t&lt;span&gt;Submit&lt;\/span&gt;\r\n\t&lt;\/button&gt;\r\n&lt;\/div&gt;\r\n""}});                         }                             catch(ex){}                     &lt;/script&gt;             &lt;div class=""configurable-product-option no-display""&gt;             &lt;div class=""configurable-product-option-wrapper""&gt;                 &lt;h2&gt;Please select your size&lt;/h2&gt;                 &lt;div class=""drop-select""&gt;                     &lt;label for=""attribute139""&gt;&lt;/label&gt;                     &lt;select name=""super_attribute[139]""                             id=""attribute139""                             class=""required-entry super-attribute-select""&gt;                         &lt;option&gt;Choose an Option...&lt;/option&gt;                     &lt;/select&gt;                 &lt;/div&gt;             &lt;/div&gt;         &lt;/div&gt;         &lt;script type=""text/javascript""&gt;         var spConfig = new Product.Config({""attributes"":{""139"":{""id"":""139"",""code"":""eu_size"",""label"":""EU "",""options"":[{""id"":""255"",""label"":""EU 36 2\/3 \/ US 4.5"",""price"":""0"",""oldPrice"":""0"",""products"":[]},{""id"":""256"",""label"":""EU 37 1\/3 \/ US 5"",""price"":""0"",""oldPrice"":""0"",""products"":[""93005""]},{""id"":""365"",""label"":""EU 38 \/ US 5.5"",""price"":""0"",""oldPrice"":""0"",""products"":[""93006""]},{""id"":""257"",""label"":""EU 38 2\/3 \/ US 6"",""price"":""0"",""oldPrice"":""0"",""products"":[""93007""]},{""id"":""258"",""label"":""EU 39 1\/3 \/ US 6.5"",""price"":""0"",""oldPrice"":""0"",""products"":[""93008""]},{""id"":""364"",""label"":""EU 40 \/ US 7"",""price"":""0"",""oldPrice"":""0"",""products"":[""93009""]},{""id"":""242"",""label"":""EU 40 2\/3 \/ US 7.5"",""price"":""0"",""oldPrice"":""0"",""products"":[]},{""id"":""246"",""label"":""EU 41 1\/3 \/ US 8"",""price"":""0"",""oldPrice"":""0"",""products"":[]},{""id"":""363"",""label"":""EU 42 \/ US 8.5"",""price"":""0"",""oldPrice"":""0"",""products"":[]},{""id"":""248"",""label"":""EU 42 2\/3 \/ US 9"",""price"":""0"",""oldPrice"":""0"",""products"":[]},{""id"":""243"",""label"":""EU 43 1\/3 \/ US 9.5"",""price"":""0"",""oldPrice"":""0"",""products"":[]},{""id"":""368"",""label"":""EU 44 \/ US 10"",""price"":""0"",""oldPrice"":""0"",""products"":[]},{""id"":""244"",""label"":""EU 44 2\/3 US 10.5"",""price"":""0"",""oldPrice"":""0"",""products"":[]},{""id"":""247"",""label"":""EU 45 1\/3 \/ US 11"",""price"":""0"",""oldPrice"":""0"",""products"":[]},{""id"":""79"",""label"":""EU 46 \/ US 11.5"",""price"":""0"",""oldPrice"":""0"",""products"":[]},{""id"":""249"",""label"":""EU 46 2\/3 \/ US 12"",""price"":""0"",""oldPrice"":""0"",""products"":[]},{""id"":""245"",""label"":""EU 47 1\/3 \/ US 12.5"",""price"":""0"",""oldPrice"":""0"",""products"":[]}]}},""template"":""\u20ac#{price}"",""basePrice"":""149"",""oldPrice"":""149"",""productId"":""92805"",""chooseText"":""Choose an Option..."",""taxConfig"":{""includeTax"":true,""showIncludeTax"":true,""showBothPrices"":false,""defaultTax"":19,""currentTax"":19,""inclTaxTitle"":""Incl. Tax""}});     &lt;/script&gt;      &lt;h3&gt;Choose size&lt;/h3&gt;     &lt;div class=""clearfix "" data-attribute=""attribute139"" &gt;                     &lt;div class=""attribute-item disabled""             data-value=""255""&gt;             EU 36 2/3 / US 4.5        &lt;/div&gt;                     &lt;div class=""attribute-item ""             data-value=""256""&gt;             EU 37 1/3 / US 5        &lt;/div&gt;                     &lt;div class=""attribute-item ""             data-value=""365""&gt;             EU 38 / US 5.5        &lt;/div&gt;                     &lt;div class=""attribute-item ""             data-value=""257""&gt;             EU 38 2/3 / US 6        &lt;/div&gt;                     &lt;div class=""attribute-item ""             data-value=""258""&gt;             EU 39 1/3 / US 6.5        &lt;/div&gt;                     &lt;div class=""attribute-item ""             data-value=""364""&gt;             EU 40 / US 7        &lt;/div&gt;                     &lt;div class=""attribute-item disabled""             data-value=""242""&gt;             EU 40 2/3 / US 7.5        &lt;/div&gt;                     &lt;div class=""attribute-item disabled""             data-value=""246""&gt;             EU 41 1/3 / US 8        &lt;/div&gt;                     &lt;div class=""attribute-item disabled""             data-value=""363""&gt;             EU 42 / US 8.5        &lt;/div&gt;                     &lt;div class=""attribute-item disabled""             data-value=""248""&gt;             EU 42 2/3 / US 9        &lt;/div&gt;                     &lt;div class=""attribute-item disabled""             data-value=""243""&gt;             EU 43 1/3 / US 9.5        &lt;/div&gt;                     &lt;div class=""attribute-item disabled""             data-value=""368""&gt;             EU 44 / US 10        &lt;/div&gt;                     &lt;div class=""attribute-item disabled""             data-value=""244""&gt;             EU 44 2/3 US 10.5        &lt;/div&gt;                     &lt;div class=""attribute-item disabled""             data-value=""247""&gt;             EU 45 1/3 / US 11        &lt;/div&gt;                     &lt;div class=""attribute-item disabled""             data-value=""79""&gt;             EU 46 / US 11.5        &lt;/div&gt;                     &lt;div class=""attribute-item disabled""             data-value=""249""&gt;             EU 46 2/3 / US 12        &lt;/div&gt;                     &lt;div class=""attribute-item disabled""             data-value=""245""&gt;             EU 47 1/3 / US 12.5        &lt;/div&gt;         &lt;/div&gt;                  &lt;div id=""stock-alert-notification""&gt;     &lt;span&gt;Desired size not in stock?&lt;/span&gt; &lt;/div&gt;     &lt;script type=""text/javascript""&gt; //&lt;![CDATA[ var DateOption = Class.create({      getDaysInMonth: function(month, year)     {         var curDate = new Date();         if (!month) {             month = curDate.getMonth();         }         if (2 == month &amp;&amp; !year) { // leap year assumption for unknown year             return 29;         }         if (!year) {             year = curDate.getFullYear();         }         return 32 - new Date(year, month - 1, 32).getDate();     },      reloadMonth: function(event)     {         var selectEl = event.findElement();         var idParts = selectEl.id.split(""_"");         if (idParts.length != 3) {             return false;         }         var optionIdPrefix = idParts[0] + ""_"" + idParts[1];         var month = parseInt($(optionIdPrefix + ""_month"").value);         var year = parseInt($(optionIdPrefix + ""_year"").value);         var dayEl = $(optionIdPrefix + ""_day"");          var days = this.getDaysInMonth(month, year);          //remove days         for (var i = dayEl.options.length - 1; i &gt;= 0; i--) {             if (dayEl.options[i].value &gt; days) {                 dayEl.remove(dayEl.options[i].index);             }         }          // add days         var lastDay = parseInt(dayEl.options[dayEl.options.length-1].value);         for (i = lastDay + 1; i &lt;= days; i++) {             this.addOption(dayEl, i, i);         }     },      addOption: function(select, text, value)     {         var option = document.createElement('OPTION');         option.value = value;         option.text = text;          if (select.options.add) {             select.options.add(option);         } else {             select.appendChild(option);         }     } }); dateOption = new DateOption(); //]]&gt; &lt;/script&gt; </code></pre>"	45407248	"<p>use <code>json.loads</code> to convert it to object</p>  <pre><code>import json  all_product_ids = json.loads(jsonString) sizes_in_stock = [] for size in all_product_ids:     if ""Out of Stock"" not in all_product_ids[size][""custom_status""]:         size_id = all_product_ids[size][""product_id""]         #size_id = size_id.split(""_"")[1] # ""93147"" what to split?         sizes_in_stock.append(size_id)  print sizes_in_stock # ['93135', '93134', '93132', '93133'] </code></pre>"
45407071	"python: filtering out ""out of stock"" products from a javascript string"	javascript|python	2017-07-31 03:28:40.277000 UTC	"<p>I have pulled the all product_ids from this javascript string which are</p>  <pre><code>['93132', '93133', '93134', '93135', '93136', '93137', '93138', '93139', '93140', '93141', '93142', '93143', '93144', '93145', '93146', '93147'] </code></pre>  <p>my next step is to filter out the sizes out of stock with either </p>  <pre><code>""is_in_stock"":false  </code></pre>  <p>or </p>  <pre><code>""custom_status"":""Out of Stock"" </code></pre>  <p>I have tried this knowing that i was not on the right path as i use this for html -</p>  <pre><code>sizes_in_stock = [] for size in all_product_ids:     if ""Out of Stock"" not in size[""custom_status""]:         size_id = size[""product_id""]         sizes_in_stock.append(size_id.split(""_"")[1]) </code></pre>  <p>What do i need to do to filter out the out of stock product ids and append the one in stock to my list?</p>  <p>Below is my code to pull the product ids from the javascript string and the javascript string itself @@@@@@@@@@@@@@@@@@@@@@@</p>  <p>CODE to pull ""product ids"" -</p>  <pre><code>product_url = ""randomsite.com"" response1 = requests.get(product_url, headers=headers) all_product_ids = re.findall('product_id"":""([^""]+)', response1.text) print(all_product_ids) </code></pre>  <p>HTML javascript string - </p>  <pre><code>{""is_in_stock"":true,""custom_status_icon"":"""",""custom_status"":"""",""product_id"":""93132""},""255"":{""is_in_stock"":true,""custom_status_icon"":"""",""custom_status"":"""",""product_id"":""93133""},""256"":{""is_in_stock"":true,""custom_status_icon"":"""",""custom_status"":"""",""product_id"":""93134""},""365"":{""is_in_stock"":true,""custom_status_icon"":"""",""custom_status"":"""",""product_id"":""93135""},""257"":{""is_in_stock"":false,""custom_status_icon"":"""",""custom_status"":""Out of Stock"",""product_id"":""93136"",""stockalert"":""""},""258"":{""is_in_stock"":false,""custom_status_icon"":"""",""custom_status"":""Out of Stock"",""product_id"":""93137"",""stockalert"":""""},""364"":{""is_in_stock"":false,""custom_status_icon"":"""",""custom_status"":""Out of Stock"",""product_id"":""93138"",""stockalert"":""""},""242"":{""is_in_stock"":false,""custom_status_icon"":"""",""custom_status"":""Out of Stock"",""product_id"":""93139"",""stockalert"":""""},""246"":{""is_in_stock"":false,""custom_status_icon"":"""",""custom_status"":""Out of Stock"",""product_id"":""93140"",""stockalert"":""""},""363"":{""is_in_stock"":false,""custom_status_icon"":"""",""custom_status"":""Out of Stock"",""product_id"":""93141"",""stockalert"":""""},""248"":{""is_in_stock"":false,""custom_status_icon"":"""",""custom_status"":""Out of Stock"",""product_id"":""93142"",""stockalert"":""""},""243"":{""is_in_stock"":false,""custom_status_icon"":"""",""custom_status"":""Out of Stock"",""product_id"":""93143"",""stockalert"":""""},""368"":{""is_in_stock"":false,""custom_status_icon"":"""",""custom_status"":""Out of Stock"",""product_id"":""93144"",""stockalert"":""""},""244"":{""is_in_stock"":false,""custom_status_icon"":"""",""custom_status"":""Out of Stock"",""product_id"":""93145"",""stockalert"":""""},""247"":{""is_in_stock"":false,""custom_status_icon"":"""",""custom_status"":""Out of Stock"",""product_id"":""93146"",""stockalert"":""""},""79"":{""is_in_stock"":false,""custom_status_icon"":"""",""custom_status"":""Out of Stock"",""product_id"":""93147"",""stockalert"":""""}}); </code></pre>  <p>Full HTML I pulled - </p>  <pre><code>&lt;div class=""product-options"" id=""product-options-wrapper""&gt;     &lt;script type=""text/javascript""&gt;                         try {                             var changeConfigurableStatus = true;                             var stStatus = new StockStatus({""255"":{""is_in_stock"":false,""custom_status_icon"":"""",""custom_status"":""Out of Stock"",""product_id"":""93004"",""stockalert"":""\r\n&lt;div class=\""alert-stock productmail-block\""&gt;\r\n\t&lt;label&gt;\r\n\t\tNotify me, when the product is back in stock\t&lt;\/label&gt;\r\n\t&lt;input type=\""text\""\r\n\t\t   name=\""guest_email\""\r\n\t\t   id=\""productmail_guest_email-93004\""\r\n\t\t   onKeyPress=\""return checkIt(event, 'https:\/\/www.thegoodwillout.com\/productmail\/email\/stock\/', $('button-email-send-93004'))\""\r\n\t\t   class=\""input-text\""\r\n\t\t   placeholder=\""Your email address\u2026\""\r\n\t\t   size=\""30\"" \/&gt;\r\n\t&lt;input type=\""hidden\""\r\n\t\t   name=\""product_id\""\r\n\t\t   value=\""93004\"" \/&gt;\r\n\t&lt;input type=\""hidden\""\r\n\t\t   name=\""type\""\r\n\t\t   value=\""email\"" \/&gt;\r\n\t&lt;input type=\""hidden\""\r\n\t\t   name=\""parent_id\""\r\n\t\t   value=\""92805\"" \/&gt;\r\n\t&lt;input type=\""hidden\""\r\n\t\t   name=\""uenc\""\r\n\t\t   value=\""aHR0cHM6Ly93d3cudGhlZ29vZHdpbGxvdXQuY29tL2FkaWRhcy1jb25zb3J0aXVtLXNuZWFrZXItZXhjaGFuZ2UteC1hbGlmZS14LXN0YXJjb3ctc3Rhbi1zbWl0aC13aGl0ZS1jbTgwMDA,\"" \/&gt;\r\n\t&lt;button type=\""button\""\r\n\t\t\tid=\""button-email-send-93004\""\r\n\t\t\tclass=\""strong button btn-cart amcart-ignore\""\r\n\t\t\tonclick=\""send_alert_email('https:\/\/www.thegoodwillout.com\/productmail\/email\/stock\/', this)\""\r\n\t\t\ttitle=\""Submit\""&gt;\r\n\t\t&lt;span&gt;Submit&lt;\/span&gt;\r\n\t&lt;\/button&gt;\r\n&lt;\/div&gt;\r\n""},""256"":{""is_in_stock"":true,""custom_status_icon"":"""",""custom_status"":"""",""product_id"":""93005""},""365"":{""is_in_stock"":true,""custom_status_icon"":"""",""custom_status"":"""",""product_id"":""93006""},""257"":{""is_in_stock"":true,""custom_status_icon"":"""",""custom_status"":"""",""product_id"":""93007""},""258"":{""is_in_stock"":true,""custom_status_icon"":"""",""custom_status"":"""",""product_id"":""93008""},""364"":{""is_in_stock"":true,""custom_status_icon"":"""",""custom_status"":"""",""product_id"":""93009""},""242"":{""is_in_stock"":false,""custom_status_icon"":"""",""custom_status"":""Out of Stock"",""product_id"":""93010"",""stockalert"":""\r\n&lt;div class=\""alert-stock productmail-block\""&gt;\r\n\t&lt;label&gt;\r\n\t\tNotify me, when the product is back in stock\t&lt;\/label&gt;\r\n\t&lt;input type=\""text\""\r\n\t\t   name=\""guest_email\""\r\n\t\t   id=\""productmail_guest_email-93010\""\r\n\t\t   onKeyPress=\""return checkIt(event, 'https:\/\/www.thegoodwillout.com\/productmail\/email\/stock\/', $('button-email-send-93010'))\""\r\n\t\t   class=\""input-text\""\r\n\t\t   placeholder=\""Your email address\u2026\""\r\n\t\t   size=\""30\"" \/&gt;\r\n\t&lt;input type=\""hidden\""\r\n\t\t   name=\""product_id\""\r\n\t\t   value=\""93010\"" \/&gt;\r\n\t&lt;input type=\""hidden\""\r\n\t\t   name=\""type\""\r\n\t\t   value=\""email\"" \/&gt;\r\n\t&lt;input type=\""hidden\""\r\n\t\t   name=\""parent_id\""\r\n\t\t   value=\""92805\"" \/&gt;\r\n\t&lt;input type=\""hidden\""\r\n\t\t   name=\""uenc\""\r\n\t\t   value=\""aHR0cHM6Ly93d3cudGhlZ29vZHdpbGxvdXQuY29tL2FkaWRhcy1jb25zb3J0aXVtLXNuZWFrZXItZXhjaGFuZ2UteC1hbGlmZS14LXN0YXJjb3ctc3Rhbi1zbWl0aC13aGl0ZS1jbTgwMDA,\"" \/&gt;\r\n\t&lt;button type=\""button\""\r\n\t\t\tid=\""button-email-send-93010\""\r\n\t\t\tclass=\""strong button btn-cart amcart-ignore\""\r\n\t\t\tonclick=\""send_alert_email('https:\/\/www.thegoodwillout.com\/productmail\/email\/stock\/', this)\""\r\n\t\t\ttitle=\""Submit\""&gt;\r\n\t\t&lt;span&gt;Submit&lt;\/span&gt;\r\n\t&lt;\/button&gt;\r\n&lt;\/div&gt;\r\n""},""246"":{""is_in_stock"":false,""custom_status_icon"":"""",""custom_status"":""Out of Stock"",""product_id"":""93011"",""stockalert"":""\r\n&lt;div class=\""alert-stock productmail-block\""&gt;\r\n\t&lt;label&gt;\r\n\t\tNotify me, when the product is back in stock\t&lt;\/label&gt;\r\n\t&lt;input type=\""text\""\r\n\t\t   name=\""guest_email\""\r\n\t\t   id=\""productmail_guest_email-93011\""\r\n\t\t   onKeyPress=\""return checkIt(event, 'https:\/\/www.thegoodwillout.com\/productmail\/email\/stock\/', $('button-email-send-93011'))\""\r\n\t\t   class=\""input-text\""\r\n\t\t   placeholder=\""Your email address\u2026\""\r\n\t\t   size=\""30\"" \/&gt;\r\n\t&lt;input type=\""hidden\""\r\n\t\t   name=\""product_id\""\r\n\t\t   value=\""93011\"" \/&gt;\r\n\t&lt;input type=\""hidden\""\r\n\t\t   name=\""type\""\r\n\t\t   value=\""email\"" \/&gt;\r\n\t&lt;input type=\""hidden\""\r\n\t\t   name=\""parent_id\""\r\n\t\t   value=\""92805\"" \/&gt;\r\n\t&lt;input type=\""hidden\""\r\n\t\t   name=\""uenc\""\r\n\t\t   value=\""aHR0cHM6Ly93d3cudGhlZ29vZHdpbGxvdXQuY29tL2FkaWRhcy1jb25zb3J0aXVtLXNuZWFrZXItZXhjaGFuZ2UteC1hbGlmZS14LXN0YXJjb3ctc3Rhbi1zbWl0aC13aGl0ZS1jbTgwMDA,\"" \/&gt;\r\n\t&lt;button type=\""button\""\r\n\t\t\tid=\""button-email-send-93011\""\r\n\t\t\tclass=\""strong button btn-cart amcart-ignore\""\r\n\t\t\tonclick=\""send_alert_email('https:\/\/www.thegoodwillout.com\/productmail\/email\/stock\/', this)\""\r\n\t\t\ttitle=\""Submit\""&gt;\r\n\t\t&lt;span&gt;Submit&lt;\/span&gt;\r\n\t&lt;\/button&gt;\r\n&lt;\/div&gt;\r\n""},""363"":{""is_in_stock"":false,""custom_status_icon"":"""",""custom_status"":""Out of Stock"",""product_id"":""93012"",""stockalert"":""\r\n&lt;div class=\""alert-stock productmail-block\""&gt;\r\n\t&lt;label&gt;\r\n\t\tNotify me, when the product is back in stock\t&lt;\/label&gt;\r\n\t&lt;input type=\""text\""\r\n\t\t   name=\""guest_email\""\r\n\t\t   id=\""productmail_guest_email-93012\""\r\n\t\t   onKeyPress=\""return checkIt(event, 'https:\/\/www.thegoodwillout.com\/productmail\/email\/stock\/', $('button-email-send-93012'))\""\r\n\t\t   class=\""input-text\""\r\n\t\t   placeholder=\""Your email address\u2026\""\r\n\t\t   size=\""30\"" \/&gt;\r\n\t&lt;input type=\""hidden\""\r\n\t\t   name=\""product_id\""\r\n\t\t   value=\""93012\"" \/&gt;\r\n\t&lt;input type=\""hidden\""\r\n\t\t   name=\""type\""\r\n\t\t   value=\""email\"" \/&gt;\r\n\t&lt;input type=\""hidden\""\r\n\t\t   name=\""parent_id\""\r\n\t\t   value=\""92805\"" \/&gt;\r\n\t&lt;input type=\""hidden\""\r\n\t\t   name=\""uenc\""\r\n\t\t   value=\""aHR0cHM6Ly93d3cudGhlZ29vZHdpbGxvdXQuY29tL2FkaWRhcy1jb25zb3J0aXVtLXNuZWFrZXItZXhjaGFuZ2UteC1hbGlmZS14LXN0YXJjb3ctc3Rhbi1zbWl0aC13aGl0ZS1jbTgwMDA,\"" \/&gt;\r\n\t&lt;button type=\""button\""\r\n\t\t\tid=\""button-email-send-93012\""\r\n\t\t\tclass=\""strong button btn-cart amcart-ignore\""\r\n\t\t\tonclick=\""send_alert_email('https:\/\/www.thegoodwillout.com\/productmail\/email\/stock\/', this)\""\r\n\t\t\ttitle=\""Submit\""&gt;\r\n\t\t&lt;span&gt;Submit&lt;\/span&gt;\r\n\t&lt;\/button&gt;\r\n&lt;\/div&gt;\r\n""},""248"":{""is_in_stock"":false,""custom_status_icon"":"""",""custom_status"":""Out of Stock"",""product_id"":""93013"",""stockalert"":""\r\n&lt;div class=\""alert-stock productmail-block\""&gt;\r\n\t&lt;label&gt;\r\n\t\tNotify me, when the product is back in stock\t&lt;\/label&gt;\r\n\t&lt;input type=\""text\""\r\n\t\t   name=\""guest_email\""\r\n\t\t   id=\""productmail_guest_email-93013\""\r\n\t\t   onKeyPress=\""return checkIt(event, 'https:\/\/www.thegoodwillout.com\/productmail\/email\/stock\/', $('button-email-send-93013'))\""\r\n\t\t   class=\""input-text\""\r\n\t\t   placeholder=\""Your email address\u2026\""\r\n\t\t   size=\""30\"" \/&gt;\r\n\t&lt;input type=\""hidden\""\r\n\t\t   name=\""product_id\""\r\n\t\t   value=\""93013\"" \/&gt;\r\n\t&lt;input type=\""hidden\""\r\n\t\t   name=\""type\""\r\n\t\t   value=\""email\"" \/&gt;\r\n\t&lt;input type=\""hidden\""\r\n\t\t   name=\""parent_id\""\r\n\t\t   value=\""92805\"" \/&gt;\r\n\t&lt;input type=\""hidden\""\r\n\t\t   name=\""uenc\""\r\n\t\t   value=\""aHR0cHM6Ly93d3cudGhlZ29vZHdpbGxvdXQuY29tL2FkaWRhcy1jb25zb3J0aXVtLXNuZWFrZXItZXhjaGFuZ2UteC1hbGlmZS14LXN0YXJjb3ctc3Rhbi1zbWl0aC13aGl0ZS1jbTgwMDA,\"" \/&gt;\r\n\t&lt;button type=\""button\""\r\n\t\t\tid=\""button-email-send-93013\""\r\n\t\t\tclass=\""strong button btn-cart amcart-ignore\""\r\n\t\t\tonclick=\""send_alert_email('https:\/\/www.thegoodwillout.com\/productmail\/email\/stock\/', this)\""\r\n\t\t\ttitle=\""Submit\""&gt;\r\n\t\t&lt;span&gt;Submit&lt;\/span&gt;\r\n\t&lt;\/button&gt;\r\n&lt;\/div&gt;\r\n""},""243"":{""is_in_stock"":false,""custom_status_icon"":"""",""custom_status"":""Out of Stock"",""product_id"":""93014"",""stockalert"":""\r\n&lt;div class=\""alert-stock productmail-block\""&gt;\r\n\t&lt;label&gt;\r\n\t\tNotify me, when the product is back in stock\t&lt;\/label&gt;\r\n\t&lt;input type=\""text\""\r\n\t\t   name=\""guest_email\""\r\n\t\t   id=\""productmail_guest_email-93014\""\r\n\t\t   onKeyPress=\""return checkIt(event, 'https:\/\/www.thegoodwillout.com\/productmail\/email\/stock\/', $('button-email-send-93014'))\""\r\n\t\t   class=\""input-text\""\r\n\t\t   placeholder=\""Your email address\u2026\""\r\n\t\t   size=\""30\"" \/&gt;\r\n\t&lt;input type=\""hidden\""\r\n\t\t   name=\""product_id\""\r\n\t\t   value=\""93014\"" \/&gt;\r\n\t&lt;input type=\""hidden\""\r\n\t\t   name=\""type\""\r\n\t\t   value=\""email\"" \/&gt;\r\n\t&lt;input type=\""hidden\""\r\n\t\t   name=\""parent_id\""\r\n\t\t   value=\""92805\"" \/&gt;\r\n\t&lt;input type=\""hidden\""\r\n\t\t   name=\""uenc\""\r\n\t\t   value=\""aHR0cHM6Ly93d3cudGhlZ29vZHdpbGxvdXQuY29tL2FkaWRhcy1jb25zb3J0aXVtLXNuZWFrZXItZXhjaGFuZ2UteC1hbGlmZS14LXN0YXJjb3ctc3Rhbi1zbWl0aC13aGl0ZS1jbTgwMDA,\"" \/&gt;\r\n\t&lt;button type=\""button\""\r\n\t\t\tid=\""button-email-send-93014\""\r\n\t\t\tclass=\""strong button btn-cart amcart-ignore\""\r\n\t\t\tonclick=\""send_alert_email('https:\/\/www.thegoodwillout.com\/productmail\/email\/stock\/', this)\""\r\n\t\t\ttitle=\""Submit\""&gt;\r\n\t\t&lt;span&gt;Submit&lt;\/span&gt;\r\n\t&lt;\/button&gt;\r\n&lt;\/div&gt;\r\n""},""368"":{""is_in_stock"":false,""custom_status_icon"":"""",""custom_status"":""Out of Stock"",""product_id"":""93015"",""stockalert"":""\r\n&lt;div class=\""alert-stock productmail-block\""&gt;\r\n\t&lt;label&gt;\r\n\t\tNotify me, when the product is back in stock\t&lt;\/label&gt;\r\n\t&lt;input type=\""text\""\r\n\t\t   name=\""guest_email\""\r\n\t\t   id=\""productmail_guest_email-93015\""\r\n\t\t   onKeyPress=\""return checkIt(event, 'https:\/\/www.thegoodwillout.com\/productmail\/email\/stock\/', $('button-email-send-93015'))\""\r\n\t\t   class=\""input-text\""\r\n\t\t   placeholder=\""Your email address\u2026\""\r\n\t\t   size=\""30\"" \/&gt;\r\n\t&lt;input type=\""hidden\""\r\n\t\t   name=\""product_id\""\r\n\t\t   value=\""93015\"" \/&gt;\r\n\t&lt;input type=\""hidden\""\r\n\t\t   name=\""type\""\r\n\t\t   value=\""email\"" \/&gt;\r\n\t&lt;input type=\""hidden\""\r\n\t\t   name=\""parent_id\""\r\n\t\t   value=\""92805\"" \/&gt;\r\n\t&lt;input type=\""hidden\""\r\n\t\t   name=\""uenc\""\r\n\t\t   value=\""aHR0cHM6Ly93d3cudGhlZ29vZHdpbGxvdXQuY29tL2FkaWRhcy1jb25zb3J0aXVtLXNuZWFrZXItZXhjaGFuZ2UteC1hbGlmZS14LXN0YXJjb3ctc3Rhbi1zbWl0aC13aGl0ZS1jbTgwMDA,\"" \/&gt;\r\n\t&lt;button type=\""button\""\r\n\t\t\tid=\""button-email-send-93015\""\r\n\t\t\tclass=\""strong button btn-cart amcart-ignore\""\r\n\t\t\tonclick=\""send_alert_email('https:\/\/www.thegoodwillout.com\/productmail\/email\/stock\/', this)\""\r\n\t\t\ttitle=\""Submit\""&gt;\r\n\t\t&lt;span&gt;Submit&lt;\/span&gt;\r\n\t&lt;\/button&gt;\r\n&lt;\/div&gt;\r\n""},""244"":{""is_in_stock"":false,""custom_status_icon"":"""",""custom_status"":""Out of Stock"",""product_id"":""93016"",""stockalert"":""\r\n&lt;div class=\""alert-stock productmail-block\""&gt;\r\n\t&lt;label&gt;\r\n\t\tNotify me, when the product is back in stock\t&lt;\/label&gt;\r\n\t&lt;input type=\""text\""\r\n\t\t   name=\""guest_email\""\r\n\t\t   id=\""productmail_guest_email-93016\""\r\n\t\t   onKeyPress=\""return checkIt(event, 'https:\/\/www.thegoodwillout.com\/productmail\/email\/stock\/', $('button-email-send-93016'))\""\r\n\t\t   class=\""input-text\""\r\n\t\t   placeholder=\""Your email address\u2026\""\r\n\t\t   size=\""30\"" \/&gt;\r\n\t&lt;input type=\""hidden\""\r\n\t\t   name=\""product_id\""\r\n\t\t   value=\""93016\"" \/&gt;\r\n\t&lt;input type=\""hidden\""\r\n\t\t   name=\""type\""\r\n\t\t   value=\""email\"" \/&gt;\r\n\t&lt;input type=\""hidden\""\r\n\t\t   name=\""parent_id\""\r\n\t\t   value=\""92805\"" \/&gt;\r\n\t&lt;input type=\""hidden\""\r\n\t\t   name=\""uenc\""\r\n\t\t   value=\""aHR0cHM6Ly93d3cudGhlZ29vZHdpbGxvdXQuY29tL2FkaWRhcy1jb25zb3J0aXVtLXNuZWFrZXItZXhjaGFuZ2UteC1hbGlmZS14LXN0YXJjb3ctc3Rhbi1zbWl0aC13aGl0ZS1jbTgwMDA,\"" \/&gt;\r\n\t&lt;button type=\""button\""\r\n\t\t\tid=\""button-email-send-93016\""\r\n\t\t\tclass=\""strong button btn-cart amcart-ignore\""\r\n\t\t\tonclick=\""send_alert_email('https:\/\/www.thegoodwillout.com\/productmail\/email\/stock\/', this)\""\r\n\t\t\ttitle=\""Submit\""&gt;\r\n\t\t&lt;span&gt;Submit&lt;\/span&gt;\r\n\t&lt;\/button&gt;\r\n&lt;\/div&gt;\r\n""},""247"":{""is_in_stock"":false,""custom_status_icon"":"""",""custom_status"":""Out of Stock"",""product_id"":""93017"",""stockalert"":""\r\n&lt;div class=\""alert-stock productmail-block\""&gt;\r\n\t&lt;label&gt;\r\n\t\tNotify me, when the product is back in stock\t&lt;\/label&gt;\r\n\t&lt;input type=\""text\""\r\n\t\t   name=\""guest_email\""\r\n\t\t   id=\""productmail_guest_email-93017\""\r\n\t\t   onKeyPress=\""return checkIt(event, 'https:\/\/www.thegoodwillout.com\/productmail\/email\/stock\/', $('button-email-send-93017'))\""\r\n\t\t   class=\""input-text\""\r\n\t\t   placeholder=\""Your email address\u2026\""\r\n\t\t   size=\""30\"" \/&gt;\r\n\t&lt;input type=\""hidden\""\r\n\t\t   name=\""product_id\""\r\n\t\t   value=\""93017\"" \/&gt;\r\n\t&lt;input type=\""hidden\""\r\n\t\t   name=\""type\""\r\n\t\t   value=\""email\"" \/&gt;\r\n\t&lt;input type=\""hidden\""\r\n\t\t   name=\""parent_id\""\r\n\t\t   value=\""92805\"" \/&gt;\r\n\t&lt;input type=\""hidden\""\r\n\t\t   name=\""uenc\""\r\n\t\t   value=\""aHR0cHM6Ly93d3cudGhlZ29vZHdpbGxvdXQuY29tL2FkaWRhcy1jb25zb3J0aXVtLXNuZWFrZXItZXhjaGFuZ2UteC1hbGlmZS14LXN0YXJjb3ctc3Rhbi1zbWl0aC13aGl0ZS1jbTgwMDA,\"" \/&gt;\r\n\t&lt;button type=\""button\""\r\n\t\t\tid=\""button-email-send-93017\""\r\n\t\t\tclass=\""strong button btn-cart amcart-ignore\""\r\n\t\t\tonclick=\""send_alert_email('https:\/\/www.thegoodwillout.com\/productmail\/email\/stock\/', this)\""\r\n\t\t\ttitle=\""Submit\""&gt;\r\n\t\t&lt;span&gt;Submit&lt;\/span&gt;\r\n\t&lt;\/button&gt;\r\n&lt;\/div&gt;\r\n""},""79"":{""is_in_stock"":false,""custom_status_icon"":"""",""custom_status"":""Out of Stock"",""product_id"":""93018"",""stockalert"":""\r\n&lt;div class=\""alert-stock productmail-block\""&gt;\r\n\t&lt;label&gt;\r\n\t\tNotify me, when the product is back in stock\t&lt;\/label&gt;\r\n\t&lt;input type=\""text\""\r\n\t\t   name=\""guest_email\""\r\n\t\t   id=\""productmail_guest_email-93018\""\r\n\t\t   onKeyPress=\""return checkIt(event, 'https:\/\/www.thegoodwillout.com\/productmail\/email\/stock\/', $('button-email-send-93018'))\""\r\n\t\t   class=\""input-text\""\r\n\t\t   placeholder=\""Your email address\u2026\""\r\n\t\t   size=\""30\"" \/&gt;\r\n\t&lt;input type=\""hidden\""\r\n\t\t   name=\""product_id\""\r\n\t\t   value=\""93018\"" \/&gt;\r\n\t&lt;input type=\""hidden\""\r\n\t\t   name=\""type\""\r\n\t\t   value=\""email\"" \/&gt;\r\n\t&lt;input type=\""hidden\""\r\n\t\t   name=\""parent_id\""\r\n\t\t   value=\""92805\"" \/&gt;\r\n\t&lt;input type=\""hidden\""\r\n\t\t   name=\""uenc\""\r\n\t\t   value=\""aHR0cHM6Ly93d3cudGhlZ29vZHdpbGxvdXQuY29tL2FkaWRhcy1jb25zb3J0aXVtLXNuZWFrZXItZXhjaGFuZ2UteC1hbGlmZS14LXN0YXJjb3ctc3Rhbi1zbWl0aC13aGl0ZS1jbTgwMDA,\"" \/&gt;\r\n\t&lt;button type=\""button\""\r\n\t\t\tid=\""button-email-send-93018\""\r\n\t\t\tclass=\""strong button btn-cart amcart-ignore\""\r\n\t\t\tonclick=\""send_alert_email('https:\/\/www.thegoodwillout.com\/productmail\/email\/stock\/', this)\""\r\n\t\t\ttitle=\""Submit\""&gt;\r\n\t\t&lt;span&gt;Submit&lt;\/span&gt;\r\n\t&lt;\/button&gt;\r\n&lt;\/div&gt;\r\n""},""249"":{""is_in_stock"":false,""custom_status_icon"":"""",""custom_status"":""Out of Stock"",""product_id"":""93019"",""stockalert"":""\r\n&lt;div class=\""alert-stock productmail-block\""&gt;\r\n\t&lt;label&gt;\r\n\t\tNotify me, when the product is back in stock\t&lt;\/label&gt;\r\n\t&lt;input type=\""text\""\r\n\t\t   name=\""guest_email\""\r\n\t\t   id=\""productmail_guest_email-93019\""\r\n\t\t   onKeyPress=\""return checkIt(event, 'https:\/\/www.thegoodwillout.com\/productmail\/email\/stock\/', $('button-email-send-93019'))\""\r\n\t\t   class=\""input-text\""\r\n\t\t   placeholder=\""Your email address\u2026\""\r\n\t\t   size=\""30\"" \/&gt;\r\n\t&lt;input type=\""hidden\""\r\n\t\t   name=\""product_id\""\r\n\t\t   value=\""93019\"" \/&gt;\r\n\t&lt;input type=\""hidden\""\r\n\t\t   name=\""type\""\r\n\t\t   value=\""email\"" \/&gt;\r\n\t&lt;input type=\""hidden\""\r\n\t\t   name=\""parent_id\""\r\n\t\t   value=\""92805\"" \/&gt;\r\n\t&lt;input type=\""hidden\""\r\n\t\t   name=\""uenc\""\r\n\t\t   value=\""aHR0cHM6Ly93d3cudGhlZ29vZHdpbGxvdXQuY29tL2FkaWRhcy1jb25zb3J0aXVtLXNuZWFrZXItZXhjaGFuZ2UteC1hbGlmZS14LXN0YXJjb3ctc3Rhbi1zbWl0aC13aGl0ZS1jbTgwMDA,\"" \/&gt;\r\n\t&lt;button type=\""button\""\r\n\t\t\tid=\""button-email-send-93019\""\r\n\t\t\tclass=\""strong button btn-cart amcart-ignore\""\r\n\t\t\tonclick=\""send_alert_email('https:\/\/www.thegoodwillout.com\/productmail\/email\/stock\/', this)\""\r\n\t\t\ttitle=\""Submit\""&gt;\r\n\t\t&lt;span&gt;Submit&lt;\/span&gt;\r\n\t&lt;\/button&gt;\r\n&lt;\/div&gt;\r\n""},""245"":{""is_in_stock"":false,""custom_status_icon"":"""",""custom_status"":""Out of Stock"",""product_id"":""93020"",""stockalert"":""\r\n&lt;div class=\""alert-stock productmail-block\""&gt;\r\n\t&lt;label&gt;\r\n\t\tNotify me, when the product is back in stock\t&lt;\/label&gt;\r\n\t&lt;input type=\""text\""\r\n\t\t   name=\""guest_email\""\r\n\t\t   id=\""productmail_guest_email-93020\""\r\n\t\t   onKeyPress=\""return checkIt(event, 'https:\/\/www.thegoodwillout.com\/productmail\/email\/stock\/', $('button-email-send-93020'))\""\r\n\t\t   class=\""input-text\""\r\n\t\t   placeholder=\""Your email address\u2026\""\r\n\t\t   size=\""30\"" \/&gt;\r\n\t&lt;input type=\""hidden\""\r\n\t\t   name=\""product_id\""\r\n\t\t   value=\""93020\"" \/&gt;\r\n\t&lt;input type=\""hidden\""\r\n\t\t   name=\""type\""\r\n\t\t   value=\""email\"" \/&gt;\r\n\t&lt;input type=\""hidden\""\r\n\t\t   name=\""parent_id\""\r\n\t\t   value=\""92805\"" \/&gt;\r\n\t&lt;input type=\""hidden\""\r\n\t\t   name=\""uenc\""\r\n\t\t   value=\""aHR0cHM6Ly93d3cudGhlZ29vZHdpbGxvdXQuY29tL2FkaWRhcy1jb25zb3J0aXVtLXNuZWFrZXItZXhjaGFuZ2UteC1hbGlmZS14LXN0YXJjb3ctc3Rhbi1zbWl0aC13aGl0ZS1jbTgwMDA,\"" \/&gt;\r\n\t&lt;button type=\""button\""\r\n\t\t\tid=\""button-email-send-93020\""\r\n\t\t\tclass=\""strong button btn-cart amcart-ignore\""\r\n\t\t\tonclick=\""send_alert_email('https:\/\/www.thegoodwillout.com\/productmail\/email\/stock\/', this)\""\r\n\t\t\ttitle=\""Submit\""&gt;\r\n\t\t&lt;span&gt;Submit&lt;\/span&gt;\r\n\t&lt;\/button&gt;\r\n&lt;\/div&gt;\r\n""}});                         }                             catch(ex){}                     &lt;/script&gt;             &lt;div class=""configurable-product-option no-display""&gt;             &lt;div class=""configurable-product-option-wrapper""&gt;                 &lt;h2&gt;Please select your size&lt;/h2&gt;                 &lt;div class=""drop-select""&gt;                     &lt;label for=""attribute139""&gt;&lt;/label&gt;                     &lt;select name=""super_attribute[139]""                             id=""attribute139""                             class=""required-entry super-attribute-select""&gt;                         &lt;option&gt;Choose an Option...&lt;/option&gt;                     &lt;/select&gt;                 &lt;/div&gt;             &lt;/div&gt;         &lt;/div&gt;         &lt;script type=""text/javascript""&gt;         var spConfig = new Product.Config({""attributes"":{""139"":{""id"":""139"",""code"":""eu_size"",""label"":""EU "",""options"":[{""id"":""255"",""label"":""EU 36 2\/3 \/ US 4.5"",""price"":""0"",""oldPrice"":""0"",""products"":[]},{""id"":""256"",""label"":""EU 37 1\/3 \/ US 5"",""price"":""0"",""oldPrice"":""0"",""products"":[""93005""]},{""id"":""365"",""label"":""EU 38 \/ US 5.5"",""price"":""0"",""oldPrice"":""0"",""products"":[""93006""]},{""id"":""257"",""label"":""EU 38 2\/3 \/ US 6"",""price"":""0"",""oldPrice"":""0"",""products"":[""93007""]},{""id"":""258"",""label"":""EU 39 1\/3 \/ US 6.5"",""price"":""0"",""oldPrice"":""0"",""products"":[""93008""]},{""id"":""364"",""label"":""EU 40 \/ US 7"",""price"":""0"",""oldPrice"":""0"",""products"":[""93009""]},{""id"":""242"",""label"":""EU 40 2\/3 \/ US 7.5"",""price"":""0"",""oldPrice"":""0"",""products"":[]},{""id"":""246"",""label"":""EU 41 1\/3 \/ US 8"",""price"":""0"",""oldPrice"":""0"",""products"":[]},{""id"":""363"",""label"":""EU 42 \/ US 8.5"",""price"":""0"",""oldPrice"":""0"",""products"":[]},{""id"":""248"",""label"":""EU 42 2\/3 \/ US 9"",""price"":""0"",""oldPrice"":""0"",""products"":[]},{""id"":""243"",""label"":""EU 43 1\/3 \/ US 9.5"",""price"":""0"",""oldPrice"":""0"",""products"":[]},{""id"":""368"",""label"":""EU 44 \/ US 10"",""price"":""0"",""oldPrice"":""0"",""products"":[]},{""id"":""244"",""label"":""EU 44 2\/3 US 10.5"",""price"":""0"",""oldPrice"":""0"",""products"":[]},{""id"":""247"",""label"":""EU 45 1\/3 \/ US 11"",""price"":""0"",""oldPrice"":""0"",""products"":[]},{""id"":""79"",""label"":""EU 46 \/ US 11.5"",""price"":""0"",""oldPrice"":""0"",""products"":[]},{""id"":""249"",""label"":""EU 46 2\/3 \/ US 12"",""price"":""0"",""oldPrice"":""0"",""products"":[]},{""id"":""245"",""label"":""EU 47 1\/3 \/ US 12.5"",""price"":""0"",""oldPrice"":""0"",""products"":[]}]}},""template"":""\u20ac#{price}"",""basePrice"":""149"",""oldPrice"":""149"",""productId"":""92805"",""chooseText"":""Choose an Option..."",""taxConfig"":{""includeTax"":true,""showIncludeTax"":true,""showBothPrices"":false,""defaultTax"":19,""currentTax"":19,""inclTaxTitle"":""Incl. Tax""}});     &lt;/script&gt;      &lt;h3&gt;Choose size&lt;/h3&gt;     &lt;div class=""clearfix "" data-attribute=""attribute139"" &gt;                     &lt;div class=""attribute-item disabled""             data-value=""255""&gt;             EU 36 2/3 / US 4.5        &lt;/div&gt;                     &lt;div class=""attribute-item ""             data-value=""256""&gt;             EU 37 1/3 / US 5        &lt;/div&gt;                     &lt;div class=""attribute-item ""             data-value=""365""&gt;             EU 38 / US 5.5        &lt;/div&gt;                     &lt;div class=""attribute-item ""             data-value=""257""&gt;             EU 38 2/3 / US 6        &lt;/div&gt;                     &lt;div class=""attribute-item ""             data-value=""258""&gt;             EU 39 1/3 / US 6.5        &lt;/div&gt;                     &lt;div class=""attribute-item ""             data-value=""364""&gt;             EU 40 / US 7        &lt;/div&gt;                     &lt;div class=""attribute-item disabled""             data-value=""242""&gt;             EU 40 2/3 / US 7.5        &lt;/div&gt;                     &lt;div class=""attribute-item disabled""             data-value=""246""&gt;             EU 41 1/3 / US 8        &lt;/div&gt;                     &lt;div class=""attribute-item disabled""             data-value=""363""&gt;             EU 42 / US 8.5        &lt;/div&gt;                     &lt;div class=""attribute-item disabled""             data-value=""248""&gt;             EU 42 2/3 / US 9        &lt;/div&gt;                     &lt;div class=""attribute-item disabled""             data-value=""243""&gt;             EU 43 1/3 / US 9.5        &lt;/div&gt;                     &lt;div class=""attribute-item disabled""             data-value=""368""&gt;             EU 44 / US 10        &lt;/div&gt;                     &lt;div class=""attribute-item disabled""             data-value=""244""&gt;             EU 44 2/3 US 10.5        &lt;/div&gt;                     &lt;div class=""attribute-item disabled""             data-value=""247""&gt;             EU 45 1/3 / US 11        &lt;/div&gt;                     &lt;div class=""attribute-item disabled""             data-value=""79""&gt;             EU 46 / US 11.5        &lt;/div&gt;                     &lt;div class=""attribute-item disabled""             data-value=""249""&gt;             EU 46 2/3 / US 12        &lt;/div&gt;                     &lt;div class=""attribute-item disabled""             data-value=""245""&gt;             EU 47 1/3 / US 12.5        &lt;/div&gt;         &lt;/div&gt;                  &lt;div id=""stock-alert-notification""&gt;     &lt;span&gt;Desired size not in stock?&lt;/span&gt; &lt;/div&gt;     &lt;script type=""text/javascript""&gt; //&lt;![CDATA[ var DateOption = Class.create({      getDaysInMonth: function(month, year)     {         var curDate = new Date();         if (!month) {             month = curDate.getMonth();         }         if (2 == month &amp;&amp; !year) { // leap year assumption for unknown year             return 29;         }         if (!year) {             year = curDate.getFullYear();         }         return 32 - new Date(year, month - 1, 32).getDate();     },      reloadMonth: function(event)     {         var selectEl = event.findElement();         var idParts = selectEl.id.split(""_"");         if (idParts.length != 3) {             return false;         }         var optionIdPrefix = idParts[0] + ""_"" + idParts[1];         var month = parseInt($(optionIdPrefix + ""_month"").value);         var year = parseInt($(optionIdPrefix + ""_year"").value);         var dayEl = $(optionIdPrefix + ""_day"");          var days = this.getDaysInMonth(month, year);          //remove days         for (var i = dayEl.options.length - 1; i &gt;= 0; i--) {             if (dayEl.options[i].value &gt; days) {                 dayEl.remove(dayEl.options[i].index);             }         }          // add days         var lastDay = parseInt(dayEl.options[dayEl.options.length-1].value);         for (i = lastDay + 1; i &lt;= days; i++) {             this.addOption(dayEl, i, i);         }     },      addOption: function(select, text, value)     {         var option = document.createElement('OPTION');         option.value = value;         option.text = text;          if (select.options.add) {             select.options.add(option);         } else {             select.appendChild(option);         }     } }); dateOption = new DateOption(); //]]&gt; &lt;/script&gt; </code></pre>"	45407255	"<p>(edited) Given the output, that's HTML with some JSON inside. You might use regular expressions to get the JSON out, then parse it to native Python objects.</p>  <p>Something like:</p>  <pre><code>     import re     import json      json_text = None     lines=result1.text.split('\n')     r = re.compile('new StockStatus\(({.*})\);$')     for l in lines:         m = r.search(l)         if m:             json_text = m.group(1)             break      items = json.loads(json_text).values()     filtered_items = [x['product_id'] for x in items if x.get('is_in_stock') and x.get('custom_status') != 'Out of Stock']     print filtered_items  </code></pre>"
45407372	How can I run a python script from javascript?	javascript|python	2017-07-31 04:15:12.797000 UTC	<p>im working on a project where i have to create a gui for. The page that i'm working on has a form for user input that asks for a string. i want to take that input and send it to a python script that I have created for processing. The python script will then return a string of words to the javascript so that i can display it to the user in the webpage. Is there any way I can do so? </p>  <p>note: i am not an expert in programming hence please cut me some slack. it would be great if i could get a few examples as well.</p>	45407468	"<p>You probably want to create and expose an HTTP endpoint using a Python web framework; the easiest choice would be <a href=""http://flask.pocoo.org/"" rel=""nofollow noreferrer"">Flask</a> </p>  <p>This would require you to create a route/action view to handle POST requests using the Python script you created. You can then consume that HTTP endpoint using AJAX.</p>  <p>Another option would be to leverage the ""serverless"" infrastructure that Amazon Web Services provides; that way you could create an HTTP endpoint using Amazon API Gateway, and have that endpoint call an Amazon Lambda Python function, which would run your Python script and return the results. The advantage of this method is that is incredibly cheap and relatively easy to set up, especially if you only need to call that one Python script. Also, with this set up you wouldn't have to spin or maintain any web server yourself, since your Python script would be running directly on Amazon's servers. </p>  <p>Best of luck.</p>"
45415587	Selenium Python: Cannot find element after javascript runs	javascript|python|selenium|sap-gui	2017-07-31 12:09:26.017000 UTC	"<p>I am trying to automatize some SAP Job monitoring with Python. I want to create a script that should do the following:</p>  <p>Connect and login the SAP environment <strong>-></strong> Open SM37 transaction <strong>-></strong> Send job parameters (name-user-from-to) <strong>-></strong> Read the output and store it into a database.</p>  <p>I don't know about any module or library that allow me to do that. So I checked the WEBGUI is already enabled. I am able to open the environment through a Browser. A browsing module should allows me to do everything I need. Tried with Mechanize and RoboBrowser. It works but the WEBGUI runs a lot of javascript for renderize and those modules doesn't handle javascript.</p>  <p>There is one more shot: Selenium.  I was able to connect and login to the environment. But when trying to select an element from new page (main menu), Selenium cannot locate the element. </p>  <p>Printing the sourcecode I realized that the Main Menu site is rendered with javascript. The sourcecode doesn't contains the element at all, only the title (""Welcome ""). That means the login was successfull.</p>  <p>I read a lot of posts asking for this, and everybody reccommend to use <code>WebDriverWait</code> with some explicit conditions.</p>  <p>Tried this, didn't work:</p>  <pre><code>driver.get(""http://mysapserver.domain:8000/sap/bc/gui/sap/its/webgui?sap-client=300&amp;sap-language=ES"") wait = WebDriverWait(driver, 30) element = wait.until(EC.presence_of_element_located((By.ID, 'ToolbarOkCode'))) </code></pre>  <p><strong>EDIT:</strong></p>  <p>There are two sourcecodes: SC-1 is the one that Selenium reads. SC-2 is the one that appears once the javascript renders the site (the one from ""Inspect Element"").</p>  <p>The full SC-1 is this: <a href=""https://pastebin.com/5xURA0Dc"" rel=""nofollow noreferrer"">https://pastebin.com/5xURA0Dc</a></p>  <p>The SC-2 for the element itself is the following:</p>  <pre><code>&lt;input id=""ToolbarOkCode"" ct=""I"" lsdata=""{0:'ToolbarOkCode',1:'Comando',4:200,13:'150px',23:true}"" lsevents=""{Change:[{ClientAction:'none'},{type:'TOOLBARINPUTFIELD'}],Enter:[{ClientAction:'submit',PrepareScript:'return\x20its.XControlSubmit\x28\x29\x3b',ResponseData:'delta',TransportMethod:'partial'},{Submit:'X',type:'TOOLBARINPUTFIELD'}]}"" type=""text"" maxlength=""200"" tabindex=""0"" ti=""0"" title=""Comando"" class=""urEdf2TxtRadius urEdf2TxtEnbl urEdfVAlign"" value="""" autocomplete=""on"" autocorrect=""off"" name=""ToolbarOkCode"" style=""width:150px;""&gt; </code></pre>  <p>Still can't locate the element. How can I solve it? Thanks in advance.</p>"	45419507	"<p>The solution was to go into the iframe that containts the renderized html (with the control).</p>  <pre><code>driver2.get(""http://mysapserver.domain:8000/sap/bc/gui/sap/its/webgui?sap-client=300&amp;sap-language=ES"") iframe = driver2.find_elements_by_tag_name('iframe')[0] driver2.switch_to_default_content() driver2.switch_to_frame(iframe) driver2.find_element_by_id(""ToolbarOkCode"").send_keys(""SM37"") driver2.find_element_by_id(""ToolbarOkCode"").send_keys(Keys.ENTER) </code></pre>"
45442097	Interactive 3d graphic using Python or JavaScript	javascript|python|browser|3d|jstree	2017-08-01 15:37:45.227000 UTC	"<p>I'm making a Django Webapp and I need to generate a 3d graphic like this, with some results.</p>  <p><a href=""https://i.stack.imgur.com/5v7Am.jpg"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/5v7Am.jpg"" alt=""3D image""></a></p>  <p>I'm handling two options, one where the graphic will be interactive (rotate, move, zoom) and other where the graphic will be static.</p>  <p>Should I use a  JavaScript to make the graphic interactive?. Is <strong>Tree.js</strong> suitable for this task? Is there any other alternative I can use?</p>  <p>In case I make it static I would like to use Python to generate the 3D and then make several views of it. Which library should I use in this case?</p>"	45442306	"<p>So , in Javascript , to create something like you are looking for would be using Tree.js as this is the most new javascript engine for rendenring 3D objects. But if you're looking for another engines, I would recommend BabylonJs. Have a look on this <a href=""https://www.eternalcoding.com/?p=253"" rel=""nofollow noreferrer"">project</a> where it's created a 3D chart.</p>"
45478303	HTML Dropdown Menu / Typeaheads (From Python to JavaScript)	javascript|python|json|flask|typeahead	2017-08-03 08:04:02.440000 UTC	"<p>My plan is to create a website where people can write diaries and read others' diaries and I am currently in the middle of implementing a search box where the user may search usernames to read others' diaries (like how you may look up a friend on Facebook), so I wrote the following code for the search box, with the Python code (contains SQLite statements) extracting search results from the database and with the JavaScript constantly performing the search action behind the scene, to output to <code>search.html</code> as a dynamic dropdown menu. However, the drop-down part is not working.</p>  <p>Application.py</p>  <pre><code>@app.route(""/search"", methods=[""GET"", ""POST""]) @login_required def search(): """"""Search published diaries from others.""""""      # if user reached route via POST (as by submitting a form via POST)     if request.method == ""POST"":          # ensure friends' usernames were submitted         if not request.form.get(""search""):             return dumbo(""No username entered"")          # search user's friends from database         # append % to q so that user doesn't have to input city/state/postal code in the URL completely/accurately         # https://www.tutorialspoint.com/sqlite/sqlite_like_clause.htm         friend = request.form.get(""search"") + ""%""         searches = db.execute(""SELECT username FROM writers WHERE username LIKE :friend"", friend=friend)          # output a JSON array of objects, each represents a row from TABLE writers that matches what the user looks for         return jsonify(searches)      # else if user reached route via GET (as by clicking a link or via redirect)     else:         return render_template(""search.html"") </code></pre>  <p>scripts.js</p>  <pre><code>$(""#friend"").keydown(function() {      // configure typeahead     $(""#friend"").typeahead({         // If true, when suggestions are rendered, pattern matches for the current query in text nodes         // will be wrapped in a strong element with its class set to {{classNames.highlight}}. Defaults to false.         highlight: false,         // The minimum character length needed before suggestions start getting rendered. Defaults to 1.         minLength: 1     },     {         display: function(suggestion) { return null; },         limit: 5,         source: search,         templates: {             suggestion: Handlebars.compile(                 ""&lt;div&gt;"" +                 ""&lt;div&gt;{{username}}&lt;/div&gt;"" +                 ""&lt;/div&gt;""             )         }     });     // action after friend is selected from drop-down     $(""#friend"").on(""typeahead:selected"", function(eventObject, suggestion, name) {          // visit friend's diaries (to be continued)      }); });  /**  * Searches database for typeahead's suggestions.  */ // search calls asyncResults after searching is done (asynchronously) function search(query, syncResults, asyncResults) {     // get usernames matching query (asynchronously)     var parameters = {     friend: $(""#friend"").val()     };     $.getJSON(Flask.url_for(""search""), parameters)     .done(function(data, textStatus, jqXHR) {          // call typeahead's callback with search results (i.e., friends)         asyncResults(data);     })     .fail(function(jqXHR, textStatus, errorThrown) {          // log error to browser's console         console.log(errorThrown.toString());          // call typeahead's callback with no results         asyncResults([]);     }); } </code></pre>  <p>search.html</p>  <pre><code>{% extends ""layout.html"" %}  {% block title %}     Search {% endblock %}  {% block main %}     &lt;form action=""{{ url_for('search') }}"" method=""post""&gt;         &lt;fieldset&gt;             &lt;div class=""form-group""&gt;                 &lt;input autocomplete=""off"" autofocus class=""typeahead"" id=""friend"" name=""search"" placeholder=""Search friends"" type=""text""/&gt;             &lt;/div&gt;             &lt;div class=""form-group""&gt;                 &lt;button class=""btn btn-default"" type=""submit""&gt;Search&lt;/button&gt;             &lt;/div&gt;             &lt;!-- https://www.mkyong.com/javascript/how-to-link-an-external-javascript-file/ --&gt;             &lt;script type=""text/javascript"" src=""static/scripts.js""&gt;&lt;/script&gt;         &lt;/fieldset&gt;     &lt;/form&gt; {% endblock %} </code></pre>  <p>I literally just started learning CS, so please advise as if I am an idiot, thank you!!!!</p>"	45478835	"<p>In your <code>Application.py</code>, <code>POST</code> method returns <code>jsonify(searches)</code> , </p>  <p>so I think should use <code>$.post</code> instead of <code>$.getJSON</code> in</p>  <pre><code>$.getJSON(Flask.url_for(""search""), parameters)  ... </code></pre>  <p>Update:</p>  <p>If you get friend from ""search"" in server,</p>  <pre><code>friend = request.form.get(""search"") + ""%"" </code></pre>  <p>then should change <code>friend</code> to <code>search</code> in <code>parameters</code> in search function</p>  <pre><code>var parameters = { //friend: $(""#friend"").val()     search: $(""#friend"").val() }; </code></pre>"
45493716	How to programmatically access JavaScript variables in a website via Python	javascript|python	2017-08-03 20:10:52.990000 UTC	"<p>I don't even know if this is possible, but I'm hoping there's a way to automate gathering data that are held in a JavaScript object via Python. As an example, I'm trying to access the chart data from <a href=""http://cryptocurrencychart.com/top/10"" rel=""nofollow noreferrer"">http://cryptocurrencychart.com/top/10</a>.</p>  <p>I thought the easiest way to do this would be via the <code>requests</code> module, and just look for the SVG elements that hold the data, such as <code>dom.select('.c3-chart-lines .c3-chart-line .c3-shapes-Bitcoin circle')</code>, where <code>dom</code> is the resulting object from a call to <code>BeautifulSoup</code>, and then use <code>.get('cy')</code> to get the values. However, if you compare the values of the <code>cy</code> attributes to the actual values on the chart, they don't line up. </p>  <p>I realized, however, that I could just open the developer console and access the data via <code>console.log(CryptoCurrencyChart.chart.data());</code>. In order to save these data to a text file, I had to create a link on the webpage, with the base-64 encoded data as the href, and then manually click the link. </p>  <p>My question is whether or not this can be done programmatically via something like Python so that I can automate it for future grabs of the data. </p>"	45494614	<p>You can use Selenium to get the <code>CryptoCurrencyChart.chart.data()</code> object</p>  <pre><code>#!/usr/bin/env python  from selenium import webdriver  link = 'http://cryptocurrencychart.com/top/10'  class Scraper(object):     def __init__(self):         options = webdriver.ChromeOptions()         options.add_argument('headless')         options.binary_location = '/usr/bin/google-chrome-unstable'         options.add_argument('window-size=1200x600')         self.driver = webdriver.Chrome(chrome_options=options)      def scrape(self):         self.driver.get(link)         result = self.driver.execute_script('return CryptoCurrencyChart.chart.data()')         self.driver.quit()         return result  if __name__ == '__main__':     scraper = Scraper()     scraper.scrape() </code></pre>  <p>Running <code>self.driver.execute_script('return CryptoCurrencyChart.chart.data()')</code> will give you 3 arrays with 360 elements each.</p>
45528760	edit code in javascript file with python code	javascript|python	2017-08-06 05:13:26.040000 UTC	"<p>I am trying to autocreate repititive code for an app using python backend. I wish to add a few lines of javascript code to a js file with python script. Can someone please guide me?</p>  <p>My code is shown below:</p>  <pre><code>angular.module('app').config(['$routeProvider', function($routeProvider) {     $routeProvider         .when('/', {             templateUrl: '/static/partials/home.html',             controller: 'HomeController'         })         .when('/hello', {             templateUrl: '/static/partials/hello.html',             controller: 'HelloController'         })     } ]); </code></pre>  <p>I want  to add another url '/index' dynamically from backend which is in python.</p>  <p>So after adding code , it should look as follows:</p>  <pre><code>angular.module('app').config(['$routeProvider', function($routeProvider) {     $routeProvider         .when('/', {             templateUrl: '/static/partials/home.html',             controller: 'HomeController'         })         .when('/hello', {             templateUrl: '/static/partials/hello.html',             controller: 'HelloController'         })         .when('/index', {             templateUrl: '/static/partials/index.html',             controller: 'IndexController'         })     } ]);   </code></pre>"	45528845	"<p>You can use this.</p>  <pre><code>f = open(""&lt;&lt;path of your js file&gt;&gt;.js"", 'b') f.write(""console.log('it works');"") f.close() </code></pre>  <p>The 'b' is the mode in which the open function operates</p>  <p>mode are 'r' for reading, 'w' for writing (truncating the file if it already exists), and 'a' for appending</p>  <p>Please refer to python documentation below.</p>  <p><a href=""https://docs.python.org/2/library/functions.html#open"" rel=""nofollow noreferrer"">https://docs.python.org/2/library/functions.html#open</a></p>"
45532788	"Algorithm in javascript or python that takes a list of numbers and ""groups"" them into approximately similar size?"	javascript|python|algorithm	2017-08-06 14:04:11.220000 UTC	"<p>I am looking for an algorithm that takes 2 inputs (#1: a number, #2: an array of numbers [that may be duplicated]):</p>  <p>Output should be the desired groups (with the individual numbers from the original list in them). The groups should be as close in length/size. Note that if a number is in one group, all other items in the list with the same number would be put in that same group. (e.g. so you would not have the number 3 say in multiple output groups).</p>  <p><strong>NOTE that elements in returned groups MUST not overlap in their range of numbers</strong></p>  <p>So you cannot have two output groups like this [[1,1,1,2,2,4,4,4], [3,3,5,5,6,7,8,16]] because the range of numbers in each subgroup is [1-4] and [3-16], which have an overlap. You can only have groups like [1-3][4-16] (note there is no overlap in this case).</p>  <p><strong>Sample #1 Input/Output</strong></p>  <pre><code>1) 3 Desired Groups   2) List: [1,1,2,2,3,3] </code></pre>  <p>Output: </p>  <pre><code>[[1,1],[2,2],[3,3]] </code></pre>  <p><strong>Sample #2 Input/Output</strong></p>  <p>Input 2 desired groups/subarrays to be output, and the following list of numbers:</p>  <pre><code>[1,1,1,2,2,3,3,4,4,4,5,5,6,7,8,16] </code></pre>  <p>Output are two subarrays that contain the following:</p>  <pre><code>[1,1,1,2,2,3,3,4,4,4] [5,5,6,7,8,16] </code></pre>  <p>Note #1: Output two subarrays/groups of [[1,1,1,2,2,3,3] [4,4,4,5,5,6,7,8,16]] would also be valid given that there is no way to output equal groups.</p>  <p>Note #2: While subgroups of: [[1,1,1,2,2,4,4,4], [3,3,5,5,6,7,8,16]] would be equal in length, it violates the rule of ""no overlapping ranges between returned subgroups"", meaning the range of numbers in each subgroup cannot overlap with each other. (e.g. In this note, the ranges of the subgroups returned are [1-4] and [3-16], if you took a ruler and drew a line from the numbers 1-4 and draw another line from 3-16, you would see that 3-4 would have overlapping lines, which is not what we want in this case). </p>  <p>In the sample output of this example, the ranges of the two groups are [1-4] and [5-16], which if you took a ruler/tape measure and drew lines where the numbers are, the lines would not overlap with each other, which is what we want.</p>  <p><strong>Sample #3 Input/Output</strong></p>  <p>Input 3 desired groups/subarrays to be output, and the following list of numbers:</p>  <pre><code>[1,1,1,2,2,3,3,4,4,4,5,5,6,7,8,16] </code></pre>  <p>Output:</p>  <pre><code> [1,1,1,2,2]  [3,3,4,4,4]  [5,5,6,7,8,16] </code></pre>  <p>Note in this case, since there is no way to achieve the same # of items, algorithm outputs the best it can do where one group is only 1 bigger than the others.</p>  <p><strong>Sample #4 Input/Output</strong> Input: ""4 desired groups"", and the following list: [1, 1, 1, 2, 2, 3, 3, 4, 4, 4, 5, 5, 6, 7, 8, 16] </p>  <p>Possible Output:</p>  <pre><code>[1,1,1,2,2] [3,3,4,4,4] [5,5,6] [7,8,16] </code></pre>  <p>Note: Preferrably, the output should contain more than 1 unique number when possible. While an output of [[1, 1, 1], [2, 2, 3, 3], [4, 4, 4, 5, 5], [6, 7, 8, 16]] does provide approximately similar groupings, it is preferred that there is more than 1 unique number in a single subgroup. In this ""Note"", 1 is the only number in group 1, while in the sample output of this example, group 1 contains unique numbers 1 and 2, which is preferred.</p>  <p>What is a good way to perform this?</p>"	45533535	"<p>We can use <a href=""https://docs.python.org/3/library/itertools.html#itertools.groupby"" rel=""nofollow noreferrer""><code>itertools.groupby</code></a> to group the duplicated items together, and then use a simple <a href=""https://en.wikipedia.org/wiki/Greedy_algorithm"" rel=""nofollow noreferrer"">""greedy""  algorithm</a> to assign each group to a sublist. If we have any leftover items at the end of the main loop, we put them in a new sublist unless we've already reached the desired number of sublists, in which case we simply add the leftovers to the last existing sublist.</p>  <p>The result isn't perfect: depending on the data, it may not even create enough sublists, but with well-behaved data the results are reasonable, IMHO. ;)</p>  <pre><code>from itertools import groupby  def equal_groups(seq, num):     grouplen = len(seq) // num     result, current = [], []     for _, g in groupby(seq):         g = list(g)         # If this group is too big to go in current, flush current         if current and len(current) + len(g) &gt; grouplen:             result.append(current)             current = []         current.extend(g)      # Deal with any leftovers     if current:         if len(result) &lt; num:             result.append(current)         else:             result[-1].extend(current)     return result  # Test  data = [1,1,1,2,2,3,3,4,4,4,5,5,6,7,8,16] for i in range(1, 8):     print(i, equal_groups(data, i)) </code></pre>  <p><strong>output</strong></p>  <pre><code>1 [[1, 1, 1, 2, 2, 3, 3, 4, 4, 4, 5, 5, 6, 7, 8, 16]] 2 [[1, 1, 1, 2, 2, 3, 3], [4, 4, 4, 5, 5, 6, 7, 8, 16]] 3 [[1, 1, 1, 2, 2], [3, 3, 4, 4, 4], [5, 5, 6, 7, 8, 16]] 4 [[1, 1, 1], [2, 2, 3, 3], [4, 4, 4], [5, 5, 6, 7, 8, 16]] 5 [[1, 1, 1], [2, 2], [3, 3], [4, 4, 4], [5, 5, 6, 7, 8, 16]] 6 [[1, 1, 1], [2, 2], [3, 3], [4, 4, 4], [5, 5], [6, 7, 8, 16]] 7 [[1, 1, 1], [2, 2], [3, 3], [4, 4, 4], [5, 5], [6, 7], [8, 16]] </code></pre>"
45532788	"Algorithm in javascript or python that takes a list of numbers and ""groups"" them into approximately similar size?"	javascript|python|algorithm	2017-08-06 14:04:11.220000 UTC	"<p>I am looking for an algorithm that takes 2 inputs (#1: a number, #2: an array of numbers [that may be duplicated]):</p>  <p>Output should be the desired groups (with the individual numbers from the original list in them). The groups should be as close in length/size. Note that if a number is in one group, all other items in the list with the same number would be put in that same group. (e.g. so you would not have the number 3 say in multiple output groups).</p>  <p><strong>NOTE that elements in returned groups MUST not overlap in their range of numbers</strong></p>  <p>So you cannot have two output groups like this [[1,1,1,2,2,4,4,4], [3,3,5,5,6,7,8,16]] because the range of numbers in each subgroup is [1-4] and [3-16], which have an overlap. You can only have groups like [1-3][4-16] (note there is no overlap in this case).</p>  <p><strong>Sample #1 Input/Output</strong></p>  <pre><code>1) 3 Desired Groups   2) List: [1,1,2,2,3,3] </code></pre>  <p>Output: </p>  <pre><code>[[1,1],[2,2],[3,3]] </code></pre>  <p><strong>Sample #2 Input/Output</strong></p>  <p>Input 2 desired groups/subarrays to be output, and the following list of numbers:</p>  <pre><code>[1,1,1,2,2,3,3,4,4,4,5,5,6,7,8,16] </code></pre>  <p>Output are two subarrays that contain the following:</p>  <pre><code>[1,1,1,2,2,3,3,4,4,4] [5,5,6,7,8,16] </code></pre>  <p>Note #1: Output two subarrays/groups of [[1,1,1,2,2,3,3] [4,4,4,5,5,6,7,8,16]] would also be valid given that there is no way to output equal groups.</p>  <p>Note #2: While subgroups of: [[1,1,1,2,2,4,4,4], [3,3,5,5,6,7,8,16]] would be equal in length, it violates the rule of ""no overlapping ranges between returned subgroups"", meaning the range of numbers in each subgroup cannot overlap with each other. (e.g. In this note, the ranges of the subgroups returned are [1-4] and [3-16], if you took a ruler and drew a line from the numbers 1-4 and draw another line from 3-16, you would see that 3-4 would have overlapping lines, which is not what we want in this case). </p>  <p>In the sample output of this example, the ranges of the two groups are [1-4] and [5-16], which if you took a ruler/tape measure and drew lines where the numbers are, the lines would not overlap with each other, which is what we want.</p>  <p><strong>Sample #3 Input/Output</strong></p>  <p>Input 3 desired groups/subarrays to be output, and the following list of numbers:</p>  <pre><code>[1,1,1,2,2,3,3,4,4,4,5,5,6,7,8,16] </code></pre>  <p>Output:</p>  <pre><code> [1,1,1,2,2]  [3,3,4,4,4]  [5,5,6,7,8,16] </code></pre>  <p>Note in this case, since there is no way to achieve the same # of items, algorithm outputs the best it can do where one group is only 1 bigger than the others.</p>  <p><strong>Sample #4 Input/Output</strong> Input: ""4 desired groups"", and the following list: [1, 1, 1, 2, 2, 3, 3, 4, 4, 4, 5, 5, 6, 7, 8, 16] </p>  <p>Possible Output:</p>  <pre><code>[1,1,1,2,2] [3,3,4,4,4] [5,5,6] [7,8,16] </code></pre>  <p>Note: Preferrably, the output should contain more than 1 unique number when possible. While an output of [[1, 1, 1], [2, 2, 3, 3], [4, 4, 4, 5, 5], [6, 7, 8, 16]] does provide approximately similar groupings, it is preferred that there is more than 1 unique number in a single subgroup. In this ""Note"", 1 is the only number in group 1, while in the sample output of this example, group 1 contains unique numbers 1 and 2, which is preferred.</p>  <p>What is a good way to perform this?</p>"	45533817	"<p>You can use <code>.map()</code> and <code>.filter()</code> to create an array of arrays containing the same elements, collect values of arrays where there is single element to a single array, if they exist, <code>.splice()</code> expected number of arrays (groups) from collected array, reinsert original single values into to groups, return result</p>  <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-js lang-js prettyprint-override""><code>let arr = [1,1,1,2,2,3,3,4,4,4,5,5,6,7,8,16]  const group = (arr, groups) =&gt; {   // if input array `.length` is `0`    // or `groups` is less than 2, throw `TypeError`   if (!arr.length) {     throw new TypeError(""input array does not have valid `.length`"")   }   // declare resulting array `res`,    // `singles` array to group values of arrays having `.length` of `1`   // to single array   // `s` array of groups of same element from input array   // `len` whole number to `.splice()` `s` into `groups` by   // `t` array of single elements from `s`, if they exist   let [res, singles] = [[], []];   const [s         , len = Math.floor(s.length / groups -1)         , t = s.filter(el =&gt; el.length === 1)] = [         [...new Set(arr)].map(el =&gt; arr.filter(n =&gt; n === el))   ];    if (t.length) {     for (const g of t) {       // collect our single element arrays to `singles` array       singles = [...singles, ...g];       // remove singles element arrays from `s`       s.splice(s.indexOf(g), 1);     }     // `.push()` `singles` to `s`     s.push(singles);   }      do {     // `.splice()` our groups     const curr = s.splice(0, len);     // `.push()` current group to `res`     if (res.length &lt; groups) {       res.push([])     };     // push elements of arrays to current array in `res`      for (const g of curr) {       res[res.length - 1] = [...res[res.length - 1], ...g]     }   } while (s.length);   // return result `res` array   return res; }  let g2 = group(arr, 2);  let g3 = group(arr, 3);  let g4 = group(arr, 4);  console.log(g2, g3, g4);</code></pre> </div> </div> </p>"
45532788	"Algorithm in javascript or python that takes a list of numbers and ""groups"" them into approximately similar size?"	javascript|python|algorithm	2017-08-06 14:04:11.220000 UTC	"<p>I am looking for an algorithm that takes 2 inputs (#1: a number, #2: an array of numbers [that may be duplicated]):</p>  <p>Output should be the desired groups (with the individual numbers from the original list in them). The groups should be as close in length/size. Note that if a number is in one group, all other items in the list with the same number would be put in that same group. (e.g. so you would not have the number 3 say in multiple output groups).</p>  <p><strong>NOTE that elements in returned groups MUST not overlap in their range of numbers</strong></p>  <p>So you cannot have two output groups like this [[1,1,1,2,2,4,4,4], [3,3,5,5,6,7,8,16]] because the range of numbers in each subgroup is [1-4] and [3-16], which have an overlap. You can only have groups like [1-3][4-16] (note there is no overlap in this case).</p>  <p><strong>Sample #1 Input/Output</strong></p>  <pre><code>1) 3 Desired Groups   2) List: [1,1,2,2,3,3] </code></pre>  <p>Output: </p>  <pre><code>[[1,1],[2,2],[3,3]] </code></pre>  <p><strong>Sample #2 Input/Output</strong></p>  <p>Input 2 desired groups/subarrays to be output, and the following list of numbers:</p>  <pre><code>[1,1,1,2,2,3,3,4,4,4,5,5,6,7,8,16] </code></pre>  <p>Output are two subarrays that contain the following:</p>  <pre><code>[1,1,1,2,2,3,3,4,4,4] [5,5,6,7,8,16] </code></pre>  <p>Note #1: Output two subarrays/groups of [[1,1,1,2,2,3,3] [4,4,4,5,5,6,7,8,16]] would also be valid given that there is no way to output equal groups.</p>  <p>Note #2: While subgroups of: [[1,1,1,2,2,4,4,4], [3,3,5,5,6,7,8,16]] would be equal in length, it violates the rule of ""no overlapping ranges between returned subgroups"", meaning the range of numbers in each subgroup cannot overlap with each other. (e.g. In this note, the ranges of the subgroups returned are [1-4] and [3-16], if you took a ruler and drew a line from the numbers 1-4 and draw another line from 3-16, you would see that 3-4 would have overlapping lines, which is not what we want in this case). </p>  <p>In the sample output of this example, the ranges of the two groups are [1-4] and [5-16], which if you took a ruler/tape measure and drew lines where the numbers are, the lines would not overlap with each other, which is what we want.</p>  <p><strong>Sample #3 Input/Output</strong></p>  <p>Input 3 desired groups/subarrays to be output, and the following list of numbers:</p>  <pre><code>[1,1,1,2,2,3,3,4,4,4,5,5,6,7,8,16] </code></pre>  <p>Output:</p>  <pre><code> [1,1,1,2,2]  [3,3,4,4,4]  [5,5,6,7,8,16] </code></pre>  <p>Note in this case, since there is no way to achieve the same # of items, algorithm outputs the best it can do where one group is only 1 bigger than the others.</p>  <p><strong>Sample #4 Input/Output</strong> Input: ""4 desired groups"", and the following list: [1, 1, 1, 2, 2, 3, 3, 4, 4, 4, 5, 5, 6, 7, 8, 16] </p>  <p>Possible Output:</p>  <pre><code>[1,1,1,2,2] [3,3,4,4,4] [5,5,6] [7,8,16] </code></pre>  <p>Note: Preferrably, the output should contain more than 1 unique number when possible. While an output of [[1, 1, 1], [2, 2, 3, 3], [4, 4, 4, 5, 5], [6, 7, 8, 16]] does provide approximately similar groupings, it is preferred that there is more than 1 unique number in a single subgroup. In this ""Note"", 1 is the only number in group 1, while in the sample output of this example, group 1 contains unique numbers 1 and 2, which is preferred.</p>  <p>What is a good way to perform this?</p>"	45534186	"<h1>Grouping common numbers then using a recursive function</h1>  <p>My last solution didn't give the right results, so this is a different <code>algorithm</code>. It follows:</p>  <ol> <li>group the list into sub-lists of common numbers</li> <li>check if this list has the required number of groups (sub-lists)</li> <li>if it does then add it to a list of possible solutions and end</li> <li>else, create a list of all the different pairs of common numbers in the current list merged together</li> <li>for each list in (4), go back to (2)</li> </ol>  <p>If you followed the algorithm, you can see that it will work by <code>branching</code> off down the differently merged lists until it reaches one of the required length where that branch will end. This is a perfect opportunity to write a <a href=""https://en.wikipedia.org/wiki/Recursion_(computer_science)"" rel=""nofollow noreferrer""><code>recursive function</code></a>.</p>  <p>But before that, we needed a small method for grouping common numbers from the original list. To do this, a small <code>for-loop</code> goes through each number and check if it belongs as part of the previous common numbers. If it does, add it to them, or else it creates its own common numbers.</p>  <p>This may look something like:</p>  <pre><code>l = [1, 2, 2, 3, 3, 3, 4, 4, 5, 5, 6] l.sort()  groups = [] for i in l:     if groups and i in groups[-1]:         groups[-1].append(i)     else:         groups.append([i]) </code></pre>  <p>now <code>groups</code> is:</p>  <pre><code>[[1], [2, 2], [3, 3, 3], [4, 4], [5, 5], [6]] </code></pre>  <p>so we are ready for the <code>recursive funtion</code>:</p>  <pre><code>def merge(grps, numGrps):     global solutions     if len(grps) &lt;= numGrps:         solutions.append(grps)         return     merges = [grps[:i] + [grps[i] + grps[i+1]] + grps[i+2:] for i in range(len(grps)-1)]     for m in merges:         merge(m, numGrps) </code></pre>  <p>the function is self-explanatory, but the <code>list-comprehension</code> is the important part which controls the branching:</p>  <pre><code>[grps[:i] + [grps[i] + grps[i+1]] + grps[i+2:] for i in range(len(grps)-1)] </code></pre>  <p>It is essentially saying: for each number up to the <code>length</code> of the current list, take the common number groups before it <code>grps[:i]</code>, add them onto its common numbers <code>grps[i]</code> merged with the next common numbers <code>grps[i+1]</code> and then add that onto the rest of the common numbers <code>grps[i+2:]</code>. </p>  <p>From there, we just set the <code>function</code> going with each of the different merged common number <code>combinations</code> along with its target number of groups.</p>  <h1>The final code</h1>  <p>The final code put together would be:</p>  <pre><code>l = [1,2,2,3,3,3,4,4,5,5,6] l.sort()  groups = [] for i in l:     if groups and i in groups[-1]:         groups[-1].append(i)     else:         groups.append([i])  print(""original list:"") print(l, ""\n"") print(""common numbers grouping:"") print(groups) print()  def merge(grps, numGrps):     global solutions     if len(grps) &lt;= numGrps:         solutions.append(grps)         return     merges = [grps[:i] + [grps[i] + grps[i+1]] + grps[i+2:] for i in range(len(grps)-1)]     for m in merges:         merge(m, numGrps)  solutions = []  merge(groups, 3)  print(""possible solutions:\n"") for s in solutions:     print(s) </code></pre>  <p>which outputs:</p>  <pre><code>original list: [1, 2, 2, 3, 3, 3, 4, 4, 5, 5, 6]  common numbers grouping: [[1], [2, 2], [3, 3, 3], [4, 4], [5, 5], [6]]  possible solutions:  [[1, 2, 2, 3, 3, 3, 4, 4], [5, 5], [6]] [[1, 2, 2, 3, 3, 3], [4, 4, 5, 5], [6]] [[1, 2, 2, 3, 3, 3], [4, 4], [5, 5, 6]] [[1, 2, 2, 3, 3, 3, 4, 4], [5, 5], [6]] [[1, 2, 2], [3, 3, 3, 4, 4, 5, 5], [6]] [[1, 2, 2], [3, 3, 3, 4, 4], [5, 5, 6]] [[1, 2, 2, 3, 3, 3], [4, 4, 5, 5], [6]] [[1, 2, 2], [3, 3, 3, 4, 4, 5, 5], [6]] [[1, 2, 2], [3, 3, 3], [4, 4, 5, 5, 6]] [[1, 2, 2, 3, 3, 3], [4, 4], [5, 5, 6]] [[1, 2, 2], [3, 3, 3, 4, 4], [5, 5, 6]] [[1, 2, 2], [3, 3, 3], [4, 4, 5, 5, 6]] [[1, 2, 2, 3, 3, 3, 4, 4], [5, 5], [6]] [[1, 2, 2, 3, 3, 3], [4, 4, 5, 5], [6]] [[1, 2, 2, 3, 3, 3], [4, 4], [5, 5, 6]] [[1, 2, 2, 3, 3, 3, 4, 4], [5, 5], [6]] [[1], [2, 2, 3, 3, 3, 4, 4, 5, 5], [6]] [[1], [2, 2, 3, 3, 3, 4, 4], [5, 5, 6]] [[1, 2, 2, 3, 3, 3], [4, 4, 5, 5], [6]] [[1], [2, 2, 3, 3, 3, 4, 4, 5, 5], [6]] [[1], [2, 2, 3, 3, 3], [4, 4, 5, 5, 6]] [[1, 2, 2, 3, 3, 3], [4, 4], [5, 5, 6]] [[1], [2, 2, 3, 3, 3, 4, 4], [5, 5, 6]] [[1], [2, 2, 3, 3, 3], [4, 4, 5, 5, 6]] [[1, 2, 2, 3, 3, 3, 4, 4], [5, 5], [6]] [[1, 2, 2], [3, 3, 3, 4, 4, 5, 5], [6]] [[1, 2, 2], [3, 3, 3, 4, 4], [5, 5, 6]] [[1, 2, 2, 3, 3, 3, 4, 4], [5, 5], [6]] [[1], [2, 2, 3, 3, 3, 4, 4, 5, 5], [6]] [[1], [2, 2, 3, 3, 3, 4, 4], [5, 5, 6]] [[1, 2, 2], [3, 3, 3, 4, 4, 5, 5], [6]] [[1], [2, 2, 3, 3, 3, 4, 4, 5, 5], [6]] [[1], [2, 2], [3, 3, 3, 4, 4, 5, 5, 6]] [[1, 2, 2], [3, 3, 3, 4, 4], [5, 5, 6]] [[1], [2, 2, 3, 3, 3, 4, 4], [5, 5, 6]] [[1], [2, 2], [3, 3, 3, 4, 4, 5, 5, 6]] [[1, 2, 2, 3, 3, 3], [4, 4, 5, 5], [6]] [[1, 2, 2], [3, 3, 3, 4, 4, 5, 5], [6]] [[1, 2, 2], [3, 3, 3], [4, 4, 5, 5, 6]] [[1, 2, 2, 3, 3, 3], [4, 4, 5, 5], [6]] [[1], [2, 2, 3, 3, 3, 4, 4, 5, 5], [6]] [[1], [2, 2, 3, 3, 3], [4, 4, 5, 5, 6]] [[1, 2, 2], [3, 3, 3, 4, 4, 5, 5], [6]] [[1], [2, 2, 3, 3, 3, 4, 4, 5, 5], [6]] [[1], [2, 2], [3, 3, 3, 4, 4, 5, 5, 6]] [[1, 2, 2], [3, 3, 3], [4, 4, 5, 5, 6]] [[1], [2, 2, 3, 3, 3], [4, 4, 5, 5, 6]] [[1], [2, 2], [3, 3, 3, 4, 4, 5, 5, 6]] [[1, 2, 2, 3, 3, 3], [4, 4], [5, 5, 6]] [[1, 2, 2], [3, 3, 3, 4, 4], [5, 5, 6]] [[1, 2, 2], [3, 3, 3], [4, 4, 5, 5, 6]] [[1, 2, 2, 3, 3, 3], [4, 4], [5, 5, 6]] [[1], [2, 2, 3, 3, 3, 4, 4], [5, 5, 6]] [[1], [2, 2, 3, 3, 3], [4, 4, 5, 5, 6]] [[1, 2, 2], [3, 3, 3, 4, 4], [5, 5, 6]] [[1], [2, 2, 3, 3, 3, 4, 4], [5, 5, 6]] [[1], [2, 2], [3, 3, 3, 4, 4, 5, 5, 6]] [[1, 2, 2], [3, 3, 3], [4, 4, 5, 5, 6]] [[1], [2, 2, 3, 3, 3], [4, 4, 5, 5, 6]] [[1], [2, 2], [3, 3, 3, 4, 4, 5, 5, 6]] </code></pre>  <h1>Sorting</h1>  <p>Now that you have <strong>ALL</strong> the possible solutions, you can sort them <strong>any</strong> way you want. So for example, if you wanted to select the one with the most even spread in length in the group, you would calculate each groups length and the difference between <code>smallest</code> and <code>biggest</code> lengths would be the score on which you rank them.</p>  <p>Even though there are other ways of sorting them, as we have seen in the comment section, the one described above seems to be what most people want so here it is:</p>  <pre><code>smallestDiff = 9999  for s in solutions:     lenDiff = max([len(a) - len(b) for a in s for b in s])     if lenDiff &lt; smallestDiff:         smallestDiff = lenDiff         sol = s </code></pre>  <p>and for my example with list:</p>  <pre><code>[1, 2, 2, 3, 3, 3, 4, 4, 5, 5, 6] </code></pre>  <p>we have the result:</p>  <pre><code>[[1, 2, 2], [3, 3, 3, 4, 4], [5, 5, 6]] </code></pre>  <p>which I would consider to be the best solution in this case. And finally, to check with the examples given in the question:</p>  <h2>Sample 1</h2>  <pre><code>groups = 3 l = [1, 1, 2, 2, 3, 3] </code></pre>  <p>gives output of:</p>  <pre><code>[[1, 1], [2, 2], [3, 3]] </code></pre>  <h2>Sample 2</h2>  <pre><code>groups = 2 l = [1, 1, 1, 2, 2, 3, 3, 4, 4, 4, 5, 5, 6, 7, 8, 16] </code></pre>  <p>gives output of:</p>  <pre><code>[[1, 1, 1, 2, 2, 3, 3], [4, 4, 4, 5, 5, 6, 7, 8, 16]] </code></pre>  <p>So it is clear this algorithm works and I hope this helps.</p>"
45560395	How to send Python data to JavaScript	javascript|python|web|jinja2	2017-08-08 06:03:40.820000 UTC	"<p>I am developing the web using google app engine. I used <code>jinja2</code> to send data from html to main. pays code. The problem is how to get the data from the javascript of html. Please let me know the correct answer. Thank you.</p>  <p><strong>main.py</strong></p>  <pre class=""lang-py prettyprint-override""><code>def get(self):     db = connect_to_cloudsql()     cursor = db.cursor()     cursor.execute(""set names utf8"")     cursor.execute(""""""select no, u_name, age, gender, U_adress, phone, car_num, penalty from User;"""""")      data = cursor.fetchall()      array_list = []      for row in data:         temp = (row[0], str(row[1]), row[2], str(row[3]), str(row[4]), row[5], str(row[6]), row[7])         array_list.append(temp)      db.close()      data = json.dumps(array_list)     template_values = { 'data': data }      template = JINJA_ENVIRONMENT.get_template('User.html')     self.response.write(template.render(template_values)) </code></pre>  <p>and javascript code in html. </p>  <pre class=""lang-js prettyprint-override""><code>var table;  $(function() {     $.get(function({ data }) {         var jsonobj = JSON.parse({ data });          table = $('#userindex').dataTable({              ""sPaginationType"": ""bootstrap"",             ""sDom"": ""t&lt;'row'&lt;'col-xs-6 col-left'i&gt;&lt;'col-xs-6 col-right'p&gt;&gt;"",             ""bStateSave"": false         });          $.each(jsonobj, function(key,value) {             table.fnAddData(                 value[0],                 value[1],                 value[2],                 value[3],                 value[4],                 value[5],                 value[6],                 value[8]             );         });     }); }); </code></pre>  <p>this is my error</p>  <blockquote>   <p>datatables.min.js:16 GET <a href=""https://firststep-2016.appspot.com/function%20(%7Bdata%7D)%7Bvar%20jsonobj%20=%20JSON.parse(%7Bdata%7D);table%20=%20"" rel=""nofollow noreferrer"">https://firststep-2016.appspot.com/function%20(%7Bdata%7D)%7Bvar%20jsonobj%20=%20JSON.parse(%7Bdata%7D);table%20=%20</a>$(' 404 ()</p> </blockquote>"	45560557	"<p>I found PyV8 accidentally today, which I think is what you need.  It built a js run environment that you can run js code in python to get the text what you want. Here are the references.</p>  <p><a href=""http://www.silverna.org/blog/?p=252"" rel=""nofollow noreferrer"">http://www.silverna.org/blog/?p=252</a></p>  <p><a href=""https://code.google.com/p/pyv8/"" rel=""nofollow noreferrer"">https://code.google.com/p/pyv8/</a></p>"
45560395	How to send Python data to JavaScript	javascript|python|web|jinja2	2017-08-08 06:03:40.820000 UTC	"<p>I am developing the web using google app engine. I used <code>jinja2</code> to send data from html to main. pays code. The problem is how to get the data from the javascript of html. Please let me know the correct answer. Thank you.</p>  <p><strong>main.py</strong></p>  <pre class=""lang-py prettyprint-override""><code>def get(self):     db = connect_to_cloudsql()     cursor = db.cursor()     cursor.execute(""set names utf8"")     cursor.execute(""""""select no, u_name, age, gender, U_adress, phone, car_num, penalty from User;"""""")      data = cursor.fetchall()      array_list = []      for row in data:         temp = (row[0], str(row[1]), row[2], str(row[3]), str(row[4]), row[5], str(row[6]), row[7])         array_list.append(temp)      db.close()      data = json.dumps(array_list)     template_values = { 'data': data }      template = JINJA_ENVIRONMENT.get_template('User.html')     self.response.write(template.render(template_values)) </code></pre>  <p>and javascript code in html. </p>  <pre class=""lang-js prettyprint-override""><code>var table;  $(function() {     $.get(function({ data }) {         var jsonobj = JSON.parse({ data });          table = $('#userindex').dataTable({              ""sPaginationType"": ""bootstrap"",             ""sDom"": ""t&lt;'row'&lt;'col-xs-6 col-left'i&gt;&lt;'col-xs-6 col-right'p&gt;&gt;"",             ""bStateSave"": false         });          $.each(jsonobj, function(key,value) {             table.fnAddData(                 value[0],                 value[1],                 value[2],                 value[3],                 value[4],                 value[5],                 value[6],                 value[8]             );         });     }); }); </code></pre>  <p>this is my error</p>  <blockquote>   <p>datatables.min.js:16 GET <a href=""https://firststep-2016.appspot.com/function%20(%7Bdata%7D)%7Bvar%20jsonobj%20=%20JSON.parse(%7Bdata%7D);table%20=%20"" rel=""nofollow noreferrer"">https://firststep-2016.appspot.com/function%20(%7Bdata%7D)%7Bvar%20jsonobj%20=%20JSON.parse(%7Bdata%7D);table%20=%20</a>$(' 404 ()</p> </blockquote>"	45561247	"<p>This's a good answer for sending json data to javascript with jinja. It maybe help you.</p>  <p><a href=""https://stackoverflow.com/questions/24719592/sending-data-as-json-object-from-python-to-javascript-with-jinja"">sending data as JSON object from Python to Javascript with Jinja</a></p>"
45575179	Javascript `this` vs Python `self` Constructors	javascript|python|object|constructor	2017-08-08 18:04:54.387000 UTC	"<p>Javascript Constructor + create objects example</p>  <pre><code>//Constructor function Course(title,instructor,level,published,views){     this.title = title;     this.instructor = instructor;     this.level = level;     this.published = published;     this.views = views;     this.updateViews = function() {         return ++this.views;     } }  //Create Objects var a = new Course(""A title"", ""A instructor"", 1, true, 0); var b = new Course(""B title"", ""B instructor"", 1, true, 123456);  //Log out objects properties and methods console.log(a.title);  // ""A Title"" console.log(b.updateViews()); // ""123457"" </code></pre>  <p>what is the python equivalent of this? <em>(Constructor function / or class + create object instances + log out properties &amp; methods?)</em></p>  <p>Is there a difference between <code>self</code> from python and <code>this</code> from Javascript?</p>"	45575351	"<p>Here is a python translation:</p> <pre><code>class Course:      def __init__(self,title,instructor,level,published,views):         self.title = title         self.instructor = instructor         self.level = level         self.published = published         self.views = views      def update_views(self):         return self.views += 1 </code></pre> <p>You must declare a class, then initialize <em>an instance of that class</em> as follows:</p> <pre><code>course = Course(&quot;title&quot;,&quot;instructor&quot;,&quot;level&quot;,&quot;published&quot;,0) </code></pre> <p>Some notable differences are that <code>self</code> is not implicitly available but is actually a required parameter to all methods of the class. However, you should consult <a href=""https://docs.python.org/3/tutorial/classes.html"" rel=""nofollow noreferrer""> the documentation </a> on python classes for more information.</p> <h2>Edit</h2> <p>As of <a href=""https://docs.python.org/3/whatsnew/3.7.html"" rel=""nofollow noreferrer""><code>python3.7</code></a>, I feel obligated to show that newly introduced <a href=""https://docs.python.org/3/library/dataclasses.html#module-dataclasses"" rel=""nofollow noreferrer""><code>dataclasses</code></a> are another (and increasingly common) way of writing simple classes like this.</p> <pre><code>from dataclasses import dataclass  @dataclass class Course:       title: str       instructor: str       level: str       published: bool      views: int        def update_views(self) -&gt; int:          return self.views += 1  </code></pre>"
45575179	Javascript `this` vs Python `self` Constructors	javascript|python|object|constructor	2017-08-08 18:04:54.387000 UTC	"<p>Javascript Constructor + create objects example</p>  <pre><code>//Constructor function Course(title,instructor,level,published,views){     this.title = title;     this.instructor = instructor;     this.level = level;     this.published = published;     this.views = views;     this.updateViews = function() {         return ++this.views;     } }  //Create Objects var a = new Course(""A title"", ""A instructor"", 1, true, 0); var b = new Course(""B title"", ""B instructor"", 1, true, 123456);  //Log out objects properties and methods console.log(a.title);  // ""A Title"" console.log(b.updateViews()); // ""123457"" </code></pre>  <p>what is the python equivalent of this? <em>(Constructor function / or class + create object instances + log out properties &amp; methods?)</em></p>  <p>Is there a difference between <code>self</code> from python and <code>this</code> from Javascript?</p>"	45594017	"<p>There was some errors on the python solution fixed it now</p> <pre><code>#Constructors class Course:      def __init__(self,title,instructor,level,published,views):          self.propTitle = title         self.propInstructor = instructor         self.propLevel = level         self.propPublished = published         self.propViews = views      def update_views(self):         self.propViews += 1         return self.propViews  # Create objects courseA = Course(&quot;A title&quot;, &quot;A instructor&quot;, 1, True, 0) courseB = Course(&quot;B title&quot;, &quot;B instructor&quot;, 1, True, 123456)  # Print object property and use object method print(courseA.propTitle) print(courseB.update_views()) </code></pre> <p>Result print out</p> <blockquote> <p>A title</p> <p>123457</p> </blockquote> <p>Using <code>print(courseB.update_views)</code> outputs this though,<code>&lt;bound method Course.update_views of &lt;__main__.Course object at 0x7f9f79978908&gt;&gt;</code> , use <code>print(courseB.update_views())</code></p>"
45578060	Bridging a Python back-end and JavaScript front-end	javascript|python	2017-08-08 21:08:49.447000 UTC	"<p>I'm currently working on a project that involves parsing through a user-supplied file, doing computations with that data, and visualizing the results using graphing utilities. Right now, I'm stuck with using Python as the back-end because it has scientific libraries unavailable in JavaScript, but I want to move the entire tool to a web server, where I can do much slicker visualizations using D3.js.</p>  <p><strong>The workflow would be something like: obtain the file contents from the browser, execute the Python script with the contents, return jsonified objects of computed values, and plot those objects using D3</strong>. I already have the back-end and front-end working by themselves, but want to know: <strong>How can I go about bridging the two?</strong> From what I've gathered, I need to do something along the lines of launching a server, sending AJAX requests to the server, and retrieving data from the server. But with the number of frameworks out there (Flask, cgi, apache, websockets, etc.), I'm not really sure where to start. This will likely only be a very simple web app with just a file submit page and a data visualization page. Any help is appreciated!</p>"	45578190	"<p>Flask is easy to get up and running and is Python based.  It works well with REST APIs and data sent by JSON (or JSON API).</p>  <p>This is one solution with which I have some experience and which seems to work well and is not hard to get up and running (and natural to work with Python).  I can't tell you whether it is the best solution for your needs, but it should work.</p>  <p>If you are overwhelmed and don't know where to start, you can pick one of the options and google search for a tutorial.  With a decent tutorial, you should have an example up and running by the end of the tutorial, and then you will know if you are comfortable working with it and have an idea whether it will meet your needs.</p>  <p>Then you could do a proof-of-concept; make a small app that just handles one small part (the one you are most concerned about handling, perhaps) and write something which will do it.</p>  <p>By then, you can be pretty sure you have a good tool for the purpose (unless you were convinced otherwise by the proof-of-concept -- in which case, try again with another option :-))</p>"
45578060	Bridging a Python back-end and JavaScript front-end	javascript|python	2017-08-08 21:08:49.447000 UTC	"<p>I'm currently working on a project that involves parsing through a user-supplied file, doing computations with that data, and visualizing the results using graphing utilities. Right now, I'm stuck with using Python as the back-end because it has scientific libraries unavailable in JavaScript, but I want to move the entire tool to a web server, where I can do much slicker visualizations using D3.js.</p>  <p><strong>The workflow would be something like: obtain the file contents from the browser, execute the Python script with the contents, return jsonified objects of computed values, and plot those objects using D3</strong>. I already have the back-end and front-end working by themselves, but want to know: <strong>How can I go about bridging the two?</strong> From what I've gathered, I need to do something along the lines of launching a server, sending AJAX requests to the server, and retrieving data from the server. But with the number of frameworks out there (Flask, cgi, apache, websockets, etc.), I'm not really sure where to start. This will likely only be a very simple web app with just a file submit page and a data visualization page. Any help is appreciated!</p>"	45578326	"<p>Apache is a web server, flask is a web framework in python, websockets are a protocol, and cgi is something totally different, and none of them help you on the front end.</p>  <p>You could deploy a simple backend in flask or django or pylons or any other python web framework. I like django, but it may be a little heavy for your purpose, flask is a bit more lightweight.  You deploy them to a server with a web server installed and use something like apache to distribute.  </p>  <p>Then you need a front end and a way of delivering your front end.  Flask / Django are both fully capable of doing so in conjunction with a web server, or you could use a static file server like Amazon S3.  </p>  <p>On your front end, you need to load D3 and probably some kind of utility like jQuery to load and parse your data from the back end, then use D3 however you like to present it on screen.</p>"
45595368	Getting data of Nested Json from python in javascript	javascript|python-2.7	2017-08-09 15:50:44.407000 UTC	"<p>I have nested json as shown below</p>  <pre><code> {     'id': '4SE-16',     'name': 'Min Khant Lu',     ""roll_call"": [         {             ""subj1"": 76,             ""subj2"": 78,             ""subj3"": 80,             ""subj4"": 90,             ""subj5"": 91,             ""subj6"": 95,             ""subj7"": 95,         }     ],     ""subj_id"": 7 } </code></pre>  <p>I passed these data from python using 'render_template' Getting data of id, and name is ok. But how can u get the data for each subject.</p>"	45595488	"<pre><code>console.log(myObject.roll_call[0][""subj1""]) </code></pre>  <p>will print 76 on the developers tools console (hit F12)</p>"
45725481	Python-Using Scrapy to crawl webpages and meet Javascript	javascript|python|scrapy|web-crawler	2017-08-17 01:58:10.807000 UTC	"<p>I am trying to crawl pages under the link below by using Scrapy. <a href=""http://nc.mofcom.gov.cn/channel/qytc2017/list.shtml?p_index=210000"" rel=""nofollow noreferrer"">http://nc.mofcom.gov.cn/channel/qytc2017/list.shtml?p_index=210000</a> when i tried to crawl the next page, <em>nc.mofcom.gov.cn/channel/qytc2017/list.shtml?p_index=210000&amp;page=2</em>  i find the href to next page was written with Javascript.  Firstly, I tried to used the code below to find find all possible.</p>  <pre><code>    def parse_item(self, response):     for pageNum in range(1, 10):         new_url = response.url + ""&amp;page=%d"" % pageNum         yield Request(new_url, callback=self.parse_detailpage) </code></pre>  <p>because there are only subpages and it will not exceptions;however, i found that  nc.mofcom.gov.cn/channel/qytc2017/list.shtml?p_index=210000&amp;page=7 and  nc.mofcom.gov.cn/channel/qytc2017/list.shtml?p_index=210000&amp;page=6 share the same content.Indeed, i also notice that some pages have more than 10 subpages,and i am unable to proceed to crawl. Can any one give me some ideas? I don't have 10 reputation and i can present more than 1 links and image, i am really sorry.I really appreciate if anyone can help.</p>"	45726969	"<p>You can use <a href=""https://github.com/scrapinghub/splash"" rel=""nofollow noreferrer"">Splash</a> to render pages using JavaScript. Splash has seamless integration with Scrapy via <a href=""https://github.com/scrapy-plugins/scrapy-splash"" rel=""nofollow noreferrer"">scrapy-splash</a>.</p>  <p>Another approach would be to parse the script that contains information about pagination. The script contains the number of pages that are present:</p>  <pre><code>var v_PageCount = 6; </code></pre>  <p>You could extract the script content using Scrapy and then use for example <a href=""https://github.com/scrapinghub/js2xml"" rel=""nofollow noreferrer"">js2xml</a> library to extract this page count number.</p>"
45730866	Unable to fetch actual data from HTML/Javascript using Python	python-2.7|selenium|splinter	2017-08-17 09:05:46.027000 UTC	"<p>I am working on my personal project , where I want to store stocks who made all time high and low.</p>  <p>Website as follows:</p>  <p><a href=""https://i.stack.imgur.com/bfLni.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/bfLni.png"" alt=""enter image description here""></a></p>  <p>When I tried to fetch HTML , I got Javascripts , Jsons as page is getting render afterwords.</p>  <p>I got HTML like this :</p>  <pre><code>function loadData(val){     var url1 ;      if (val=='high'){         url1 = '/products/dynaContent/equities/equities/json/online52NewHigh.json';     }else{         url1 = '/products/dynaContent/equities/equities/json/online52NewLow.json';     }     $.get(url1,         function(data,curr){              obj = eval('('+data+')');                          maxPage= parseInt((obj.data.length)/ recordPerPage);               if (((obj.data.length)%recordPerPage)&gt;0){                 maxPage++;              }              setData(0);         }     );   } </code></pre>  <p>I am not sure how to get actual data , I tried <strong>selenium , splinter ,urllib2</strong> but does not worked in my case.</p>  <p>Code:</p>  <pre><code>from selenium import webdriver from urllib2 import urlopen import urllib2,cookielib  url = 'https://www.nseindia.com/products/content/equities/equities/eq_new_high_low.htm' file_name = 'C:/Users/ASUS/Desktop/test.txt'   site= ""https://www.nseindia.com/products/content/equities/equities/eq_new_high_low.htm"" hdr = {'User-Agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.11 (KHTML, like Gecko) Chrome/23.0.1271.64 Safari/537.11',        'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8',        'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3',        'Accept-Encoding': 'none',        'Accept-Language': 'en-US,en;q=0.8',        'Connection': 'keep-alive'}  req = urllib2.Request(site, headers=hdr)   conn = urlopen(req) data = conn.read() conn.close()  file = open(file_name,'wt') file.write(data) file.close()  browser = webdriver.Firefox() browser.get('file:///'+file_name) html = browser.page_source browser.quit() </code></pre>  <p>did I missed something ? Is there any other way to get javascript/json data after rendering ?</p>"	45743104	"<p>When you have browsable JSON, why are you mixing so many things? Your JSON path is fixed, so just use it directly</p>  <pre><code>from urllib2 import urlopen import urllib2, cookielib import json  url = ""https://www.nseindia.com/products/dynaContent/equities/equities/json/online52NewHigh.json"" hdr = {'User-Agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.11 (KHTML, like Gecko) Chrome/23.0.1271.64 Safari/537.11',        'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8',        'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3',        'Accept-Encoding': 'none',        'Accept-Language': 'en-US,en;q=0.8',        'Connection': 'keep-alive'} req = urllib2.Request(url, headers=hdr)  conn = urlopen(req) data = conn.read() conn.close()  data_json = json.loads(data)  print (data_json[""data""][0][""symbol""]) </code></pre>"
45732830	Write JSON using Python Flask and JavaScript	javascript|python|json|python-2.7|flask	2017-08-17 10:36:02.567000 UTC	"<p>I am pretty new in the field and I appreciate your help</p>  <p>I have the following JavaScript code that uses JSON (That's all in HTML template)</p>  <p>What I want to achieve is to write ""patterns"" (regular expressions) to a text file saved locally on my machine using JSON format. The action should happen when the user clicks on button with an id=""commitButton""</p>  <p>Please advise :) ... I am using Python 2.7</p>  <p><strong>This DOES NOT WORK</strong> <strong>Error: I am getting an error in the web browser (G Chrome):</strong></p>  <pre><code>VM901:1 POST http://127.0.0.1:5000/main 500 (INTERNAL SERVER ERROR) (anonymous) @ VM901:1 send @ jquery.min.js:4 ajax @ jquery.min.js:4 r.(anonymous function) @ jquery.min.js:4 (anonymous) @ main:118 dispatch @ jquery.min.js:3 q.handle @ jquery.min.js:3 </code></pre>  <p><strong>Below is JavaScript code that uses JSON (That's all in HTML template)</strong></p>  <pre><code>&lt;script&gt;  var allPatt = []; {% for line in f %} allPatt.push({pattern:""{{line}}"", currentStatus:""Current"", prevStatus: ""Current""}) {%endfor%}  $(function(){   $('#commitButton').click(function(){     $.post('/main', { commit_patterns : JSON.stringify(allPatt) })     .done(function(data){       console.info(data);     })   }); }); &lt;/script&gt; </code></pre>  <p><strong>In Python I have the below code:</strong></p>  <pre><code>from flask import Flask,  request, render_template, jsonify from pollerag.config import Config import os, json lines = [] app = Flask(__name__)  @app.route('/main', methods=[""POST""]) def commitPattern():     data = json.loads(request.form['commit_patterns'])     for p in data:         if (p.currentStatus == ""New"" or p.currentStatus == ""Current""):             with open('C:\\poller-admin-gui\\filter_configs\\field_pattern_filter.txt', 'w') as outfile:                   json.dump(p, outfile)   if __name__ == '__main__':     app.run(debug = True) </code></pre>"	45733905	"<blockquote>   <p>I am getting this error in the browser: VM558:1 POST 127.0.0.1:5000/main 500 (INTERNAL SERVER ERROR)</p> </blockquote>  <p>Internal server errors means there's a bug in your Python code that causes your server to fail. You should write some tests for your server code before trying to access it from JavaScript.</p>  <p>The flask console should output the error that happened. My guess would be here:</p>  <pre><code>data = json.loads(request.form['commit_patterns']) for p in data:     if (p.currentStatus == ""New"" or p.currentStatus == ""Current""): </code></pre>  <p>depending on how the JSON looks like, <code>data</code> is most likely a <code>list</code> of <code>dict</code> objects. Dictionaries should be indexed in python:</p>  <pre><code>data = json.loads(request.form['commit_patterns']) for p in data:     if (p[""currentStatus""] == ""New"" or p[""currentStatus""] == ""Current""): </code></pre>  <p>this is most likely the reason, but there are more options. You're not validating the data in any way, so if the user sends data that has a different shape than you expect, your Python code can throw exceptions from other places causing more HTTP 500 errors.</p>"
45733399	Iterate through Javascript variable using Python	javascript|python|python-2.7|loops	2017-08-17 11:04:36.090000 UTC	"<p>I have a Javascript file <code>Commodity.js</code> like this: </p>  <pre><code>commodityInfo = [ [""GLASS ITEM"", 1.0, 1.0, ],  [""HOUSEHOLD GOODS"", 3.0, 2.0, ],  [""FROZEN PRODUCTS"", 1.0, 3.0, ],  [""BEDDING"", 1.0, 4.0, ],  [""PERFUME"", 1.0, 5.0, ],  [""HARDWARE"", 5.0, 6.0, ],  [""CURTAIN"", 1.0, 7.0, ],  [""CLOTHING"", 24.0, 8.0, ],  [""ELECTRICAL ITEMS"", 1.0, 9.0, ],  [""PLUMBING MATERIAL"", 1.0, 10.0, ],  [""FLOWER"", 7.0, 11.0, ],  [""PROCESSED FOODS."", 1.0, 12.0, ],  [""TILES"", 1.0, 13.0, ],  [""ELECTRICAL"", 9.0, 14.0, ],  [""PLUMBING"", 1.0, 15.0, ] ]; </code></pre>  <p>I want to iterate through each of the item like GLASS ITEM, HOUSEHOLD GOODS, FROZEN PRODUCTS and use the number beside it for some calculations using python.  Can someone tell me how to open and iterate through the items like that in python.</p>  <p>Thanking You.</p>"	45733575	"<p>You can use <code>for</code> loops to achieve that.</p>  <p>Something like this would work:</p>  <pre><code>for commodity in commodityInfo:     commodity[0] # the first element (e.g: GLASS ITEM)     commodity[1] # the second element (e.g: 1.0)     print(commodity[1] + commodity[2]) #calculate two values </code></pre>  <p>You can learn more about <code>for</code> loops <a href=""https://www.tutorialspoint.com/python/python_for_loop.htm"" rel=""nofollow noreferrer"">here</a></p>"
45733399	Iterate through Javascript variable using Python	javascript|python|python-2.7|loops	2017-08-17 11:04:36.090000 UTC	"<p>I have a Javascript file <code>Commodity.js</code> like this: </p>  <pre><code>commodityInfo = [ [""GLASS ITEM"", 1.0, 1.0, ],  [""HOUSEHOLD GOODS"", 3.0, 2.0, ],  [""FROZEN PRODUCTS"", 1.0, 3.0, ],  [""BEDDING"", 1.0, 4.0, ],  [""PERFUME"", 1.0, 5.0, ],  [""HARDWARE"", 5.0, 6.0, ],  [""CURTAIN"", 1.0, 7.0, ],  [""CLOTHING"", 24.0, 8.0, ],  [""ELECTRICAL ITEMS"", 1.0, 9.0, ],  [""PLUMBING MATERIAL"", 1.0, 10.0, ],  [""FLOWER"", 7.0, 11.0, ],  [""PROCESSED FOODS."", 1.0, 12.0, ],  [""TILES"", 1.0, 13.0, ],  [""ELECTRICAL"", 9.0, 14.0, ],  [""PLUMBING"", 1.0, 15.0, ] ]; </code></pre>  <p>I want to iterate through each of the item like GLASS ITEM, HOUSEHOLD GOODS, FROZEN PRODUCTS and use the number beside it for some calculations using python.  Can someone tell me how to open and iterate through the items like that in python.</p>  <p>Thanking You.</p>"	45733930	"<p>The following code may not be the most efficient, but it works for your case.</p>  <p>What I'm doing here: turn the string (the content of the file) into valid JSON and then load the JSON string into a Python variable.</p>  <p>Note: It would be easier if the content of your JS file was already valid JSON!</p>  <pre><code>import re import json  # for the sake of this code, we will assume you can successfully load the content of your JS file # into a variable called ""file_content"" # E.G. with the following code: # # with open('Commodity.js', 'r') as f: #open the file #     file_content = f.read()  # since I do not have such a file, I will fill the variable ""manually"", based on your sample data file_content = """""" commodityInfo = [ [""GLASS ITEM"", 1.0, 1.0, ], [""HOUSEHOLD GOODS"", 3.0, 2.0, ], [""FROZEN PRODUCTS"", 1.0, 3.0, ], [""BEDDING"", 1.0, 4.0, ], [""PERFUME"", 1.0, 5.0, ], [""HARDWARE"", 5.0, 6.0, ], [""CURTAIN"", 1.0, 7.0, ], [""CLOTHING"", 24.0, 8.0, ], [""ELECTRICAL ITEMS"", 1.0, 9.0, ], [""PLUMBING MATERIAL"", 1.0, 10.0, ], [""FLOWER"", 7.0, 11.0, ], [""PROCESSED FOODS."", 1.0, 12.0, ], [""TILES"", 1.0, 13.0, ], [""ELECTRICAL"", 9.0, 14.0, ], [""PLUMBING"", 1.0, 15.0, ] ]; """"""  # get rid of leading/trailing line breaks file_content = file_content.strip()  # get rid of ""commodityInfo = "" and the "";"" and make the array valid JSON r = re.match("".*="", file_content) json_str = file_content.replace(r.group(), """").replace("";"", """").replace("", ]"", ""]"")  # now we can load the JSON into a Python variable # in this case, it will be a list of lists, just as the source is an array of array l = json.loads(json_str)  # now we can do whatever we want with the list, e.g. iterate it for item in l:     print(item) </code></pre>"
45772657	Emulate JavaScript addition errors with large integers in Python	javascript|python|web|integer|integer-overflow	2017-08-19 14:22:59.157000 UTC	"<p>kind of an odd request: I'm parsing API parameters from a website. The parameters are being processed by JavaScript on the website to make a request to an API server. The parameters are chosen in a way, where they are added up to form an other parameter (see parameter c):</p>  <pre><code>var c = 97210102839047737+67973223506388211; [...]  var plans = new Array(); $.ajax({    url: 'info/?c='+c,   dataType: 'json',    success: function(data) { [...]   } }); </code></pre>  <p>JavaScript seems to have problems with large integers and fails to add them correctly. I want to emulate this behaviour with python, since I want to automate the extraction and request process.  Adding the two numbers with javascript yields:</p>  <pre><code>console.log(97210102839047737+67973223506388211) VM109:1 165183326345435970 </code></pre>  <p>While Python correctly adds it to: </p>  <pre><code>&gt;&gt;&gt; print(97210102839047737+67973223506388211) 165183326345435948 </code></pre>  <p>Any recommendations how I can emulate this error inside of python?</p>  <p>Thanks a bunch! :)</p>"	45772702	<p>Essentially the JavaScript limitation is a consequence of all numbers being stored in floating point representation (ignoring for a moment the typed arrays that JavaScript supports).</p>  <p>So you can get a similar effect if you force Python to perform the addition as floats:</p>  <pre><code>print(97210102839047737+67973223506388211) print(int(float(97210102839047737)+float(67973223506388211))) </code></pre>  <blockquote>   <p>165183326345435948<br>   165183326345435968</p> </blockquote>
45772657	Emulate JavaScript addition errors with large integers in Python	javascript|python|web|integer|integer-overflow	2017-08-19 14:22:59.157000 UTC	"<p>kind of an odd request: I'm parsing API parameters from a website. The parameters are being processed by JavaScript on the website to make a request to an API server. The parameters are chosen in a way, where they are added up to form an other parameter (see parameter c):</p>  <pre><code>var c = 97210102839047737+67973223506388211; [...]  var plans = new Array(); $.ajax({    url: 'info/?c='+c,   dataType: 'json',    success: function(data) { [...]   } }); </code></pre>  <p>JavaScript seems to have problems with large integers and fails to add them correctly. I want to emulate this behaviour with python, since I want to automate the extraction and request process.  Adding the two numbers with javascript yields:</p>  <pre><code>console.log(97210102839047737+67973223506388211) VM109:1 165183326345435970 </code></pre>  <p>While Python correctly adds it to: </p>  <pre><code>&gt;&gt;&gt; print(97210102839047737+67973223506388211) 165183326345435948 </code></pre>  <p>Any recommendations how I can emulate this error inside of python?</p>  <p>Thanks a bunch! :)</p>"	45772711	"<p>JavaScript uses <a href=""https://en.wikipedia.org/wiki/Floating-point_arithmetic"" rel=""nofollow noreferrer"">floating point numbers</a> to represent all its numbers, whether they are integers or actual reals. So what you're seeing is precision artefacts which appear at very large magnitudes.</p>  <p>The way to replicate this in Python is to use floating point numbers as well. Your expression can become:</p>  <pre><code>&gt;&gt;&gt; print(float(97210102839047737)+float(67973223506388211)) 1.6518332634543597e+17 &gt;&gt;&gt; 1.6518332634543597e+17 == float(165183326345435970) True </code></pre>  <p>This is the same number as above, but with a slightly different presentation. Scientific instead of a string of digits. But the number is the same.</p>"
45807268	Issue with parsing (via JavaScript) an automatically created (via Python) JSON file	javascript|python|json	2017-08-22 00:29:54.203000 UTC	"<p>A few days ago I got an order from a local company to make them a mobile app. The design and UI is almost ready but there are some issues regarding its logic. One of these issues is following: they want their services listed on a lower part of the body of the app.</p>  <p>I started thinking about this yesterday and came up with this idea: I'm scraping their website, collecting the needed data and making an array of json objects, which I write to a .json file with python. Then using javascript I'm parsing this .json file and extracting the necessary parts from it to show in a div... Python creates the json file successfully but when JavaScript tries to parse it, it is unsuccessful. I checked with console logging and it says <code>SyntaxError: JSON.parse: unexpected character at line 1 column 1 of the JSON data</code>, which is the beginning of my JSON file.</p>  <p>I am presenting you my Python, JS, JSON files and the relevant parts of my HTML file.</p>  <p><strong>Python</strong></p>  <pre><code>from urllib.request import urlopen from bs4 import BeautifulSoup import json  def make_json_file():     titles = []     captions = []     sources = []      serv_url = 'http://www.theclub.az/az/pages/145/150'     full_page = BeautifulSoup(urlopen(serv_url).read(), ""html.parser"")      links = full_page.findAll('a', {'class': 'readmore'})     for i in range(0, len(links), 2):         source = links[i]['href']         sources.append(source)          title = links[i].findAll('div')[1].string         titles.append(title)          caption = 'http://www.theclub.az/' + links[i].findAll('a')[0].img['src']         captions.append(caption)      products = [{""title"": t, ""caption"": c, ""source"": s} for t, c, s in zip(titles, captions, sources)]     content = json.dumps(products, ensure_ascii=False)      with open('products.json', 'w') as outfile:         outfile.write('products = ')         json.dump(content, outfile)         outfile.write(';')   make_json_file() </code></pre>  <p><strong>It creates this JSON file (products.json)</strong></p>  <pre><code>products = ""[{\""title\"": \""\u0130DMAN ZALI\"", \""caption\"": \""http://www.theclub.az/bolme-img/8223682236sport.jpg\"", \""source\"": \""http://www.theclub.az/az/pages/150/194\""}, {\""title\"": \""\u00dcZG\u00dc\u00c7\u00dcL\u00dcK HOVUZU\"", \""caption\"": \""http://www.theclub.az/bolme-img/8394983949hovuz.jpg\"", \""source\"": \""http://www.theclub.az/az/pages/150/195\""}, {\""title\"": \""KARD\u0130O AL\u018fTL\u018fR ZALI\"", \""caption\"": \""http://www.theclub.az/bolme-img/6862168621card.jpg\"", \""source\"": \""http://www.theclub.az/az/pages/150/196\""}, {\""title\"": \""A\u011eIRL\u0130Q AL\u018fTL\u018fR\u0130 ZALI\"", \""caption\"": \""http://www.theclub.az/bolme-img/2713327133sport.jpg\"", \""source\"": \""http://www.theclub.az/az/pages/150/208\""}, {\""title\"": \""F\u018fRD\u0130 M\u018f\u015e\u011e\u018fL\u018f\"", \""caption\"": \""http://www.theclub.az/bolme-img/58989589891.jpg\"", \""source\"": \""http://www.theclub.az/az/pages/150/197\""}, {\""title\"": \""S\u00dcN\u0130 QAYA\"", \""caption\"": \""http://www.theclub.az/bolme-img/4781247812qaya.jpg\"", \""source\"": \""http://www.theclub.az/az/pages/150/198\""}, {\""title\"": \""SPORT CAFE\"", \""caption\"": \""http://www.theclub.az/bolme-img/60776607764.jpg\"", \""source\"": \""http://www.theclub.az/az/pages/150/201\""}, {\""title\"": \""THE CLUB SPA\"", \""caption\"": \""http://www.theclub.az/bolme-img/17042spa.jpg\"", \""source\"": \""http://www.theclub.az/az/pages/150/216\""}, {\""title\"": \""FITNES STUDIYA 1\"", \""caption\"": \""http://www.theclub.az/bolme-img/34042340421.jpg\"", \""source\"": \""http://www.theclub.az/az/pages/150/209\""}, {\""title\"": \""FITNES STUDIYA 2\"", \""caption\"": \""http://www.theclub.az/bolme-img/48637486371.jpg\"", \""source\"": \""http://www.theclub.az/az/pages/150/210\""}, {\""title\"": \""TEN\u0130S KORTU\"", \""caption\"": \""http://www.theclub.az/bolme-img/24234242341.jpg\"", \""source\"": \""http://www.theclub.az/az/pages/150/203\""}, {\""title\"": \""SKVO\u015e KORTLAR\"", \""caption\"": \""http://www.theclub.az/bolme-img/64949649492.jpg\"", \""source\"": \""http://www.theclub.az/az/pages/150/204\""}, {\""title\"": \""COFFEE SHOP\"", \""caption\"": \""http://www.theclub.az/bolme-img/55114551141.jpg\"", \""source\"": \""http://www.theclub.az/az/pages/150/202\""}, {\""title\"": \""U\u015eAQ OTA\u011eI\"", \""caption\"": \""http://www.theclub.az/bolme-img/55813558131.jpg\"", \""source\"": \""http://www.theclub.az/az/pages/150/206\""}, {\""title\"": \""GOLF SIMULYATOR\"", \""caption\"": \""http://www.theclub.az/bolme-img/3846210.jpg\"", \""source\"": \""http://www.theclub.az/az/pages/150/199\""}, {\""title\"": \""BILYARD OTA\u011eI\"", \""caption\"": \""http://www.theclub.az/bolme-img/67419674191.jpg\"", \""source\"": \""http://www.theclub.az/az/pages/150/205\""}, {\""title\"": \""SPORT SHOP\"", \""caption\"": \""http://www.theclub.az/bolme-img/95621956211.jpg\"", \""source\"": \""http://www.theclub.az/az/pages/150/207\""}, {\""title\"": \""SAUNA/BUXAR OTA\u011eI\"", \""caption\"": \""http://www.theclub.az/bolme-img/2131719.jpg\"", \""source\"": \""http://www.theclub.az/az/pages/150/211\""}, {\""title\"": \""SOLARIUM\"", \""caption\"": \""http://www.theclub.az/bolme-img/9097520.jpg\"", \""source\"": \""http://www.theclub.az/az/pages/150/212\""}, {\""title\"": \""G\u00d6Z\u018fLL\u0130K SALONU\"", \""caption\"": \""http://www.theclub.az/bolme-img/4677721.jpg\"", \""source\"": \""http://www.theclub.az/az/pages/150/213\""}, {\""title\"": \""B\u018fRB\u018fR SALONU\"", \""caption\"": \""http://www.theclub.az/bolme-img/3459922.jpg\"", \""source\"": \""http://www.theclub.az/az/pages/150/214\""}, {\""title\"": \""DZ\u00dcDO D\u018fRSL\u018fR\u0130\"", \""caption\"": \""http://www.theclub.az/bolme-img/21924judo.jpg\"", \""source\"": \""http://www.theclub.az/az/pages/150/242\""}]""; </code></pre>  <p><strong>HTML and JavaScript</strong></p>  <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-js lang-js prettyprint-override""><code>//s.js window.onload = function() {   var prods = document.getElementById(""prods"");   var products = JSON.parse(products)   prods.innerHTML = '';   for (var i = 0; i &lt; products.length; ++i) {     var prod = products[i];     prods.innerHTML += '&lt;div class=""prd_div""&gt;&lt;a class=""prd_par"" href=""' + prod.source + '""&gt;&lt;img src=""' + prod.caption + '"" class=""prd"" /&gt;&lt;p&gt;' + prod.title + '&lt;/p&gt;&lt;/a&gt;&lt;/div&gt;';   } };</code></pre> <pre class=""snippet-code-html lang-html prettyprint-override""><code>&lt;!DOCTYPE HTML&gt; &lt;html&gt;  &lt;head&gt;   &lt;meta charset=""utf-8""&gt;   &lt;meta name=""viewport"" content=""width=device-width, initial-scale=1.0""&gt;   &lt;link rel=""stylesheet"" href=""https://fonts.googleapis.com/css?family=Source+Sans+Pro""&gt;   &lt;link rel=""stylesheet"" type=""text/css"" href=""main.css"" /&gt;   &lt;script type=""text/javascript"" src=""products.json""&gt;&lt;/script&gt; &lt;/head&gt;  &lt;body&gt;   &lt;div id=""prods""&gt;&lt;/div&gt;   &lt;script type=""text/javascript"" src=""s.js""&gt;&lt;/script&gt; &lt;/body&gt;  &lt;/html&gt;</code></pre> </div> </div> </p>  <p>Where am I doing the mistake? Please, help!</p>"	45807331	"<p>JSON file shall not have <code>products =</code> part.. instead use something like <code>{ 'products':[ ... ] }</code></p>  <p>Can be achieved when you are trying to dump the file. </p>  <pre><code>    content = {'products':content}     with open('products.json', 'w') as outfile:     # outfile.write('products = ')     json.dumps(content, outfile)     # outfile.write(';') </code></pre>"
45807268	Issue with parsing (via JavaScript) an automatically created (via Python) JSON file	javascript|python|json	2017-08-22 00:29:54.203000 UTC	"<p>A few days ago I got an order from a local company to make them a mobile app. The design and UI is almost ready but there are some issues regarding its logic. One of these issues is following: they want their services listed on a lower part of the body of the app.</p>  <p>I started thinking about this yesterday and came up with this idea: I'm scraping their website, collecting the needed data and making an array of json objects, which I write to a .json file with python. Then using javascript I'm parsing this .json file and extracting the necessary parts from it to show in a div... Python creates the json file successfully but when JavaScript tries to parse it, it is unsuccessful. I checked with console logging and it says <code>SyntaxError: JSON.parse: unexpected character at line 1 column 1 of the JSON data</code>, which is the beginning of my JSON file.</p>  <p>I am presenting you my Python, JS, JSON files and the relevant parts of my HTML file.</p>  <p><strong>Python</strong></p>  <pre><code>from urllib.request import urlopen from bs4 import BeautifulSoup import json  def make_json_file():     titles = []     captions = []     sources = []      serv_url = 'http://www.theclub.az/az/pages/145/150'     full_page = BeautifulSoup(urlopen(serv_url).read(), ""html.parser"")      links = full_page.findAll('a', {'class': 'readmore'})     for i in range(0, len(links), 2):         source = links[i]['href']         sources.append(source)          title = links[i].findAll('div')[1].string         titles.append(title)          caption = 'http://www.theclub.az/' + links[i].findAll('a')[0].img['src']         captions.append(caption)      products = [{""title"": t, ""caption"": c, ""source"": s} for t, c, s in zip(titles, captions, sources)]     content = json.dumps(products, ensure_ascii=False)      with open('products.json', 'w') as outfile:         outfile.write('products = ')         json.dump(content, outfile)         outfile.write(';')   make_json_file() </code></pre>  <p><strong>It creates this JSON file (products.json)</strong></p>  <pre><code>products = ""[{\""title\"": \""\u0130DMAN ZALI\"", \""caption\"": \""http://www.theclub.az/bolme-img/8223682236sport.jpg\"", \""source\"": \""http://www.theclub.az/az/pages/150/194\""}, {\""title\"": \""\u00dcZG\u00dc\u00c7\u00dcL\u00dcK HOVUZU\"", \""caption\"": \""http://www.theclub.az/bolme-img/8394983949hovuz.jpg\"", \""source\"": \""http://www.theclub.az/az/pages/150/195\""}, {\""title\"": \""KARD\u0130O AL\u018fTL\u018fR ZALI\"", \""caption\"": \""http://www.theclub.az/bolme-img/6862168621card.jpg\"", \""source\"": \""http://www.theclub.az/az/pages/150/196\""}, {\""title\"": \""A\u011eIRL\u0130Q AL\u018fTL\u018fR\u0130 ZALI\"", \""caption\"": \""http://www.theclub.az/bolme-img/2713327133sport.jpg\"", \""source\"": \""http://www.theclub.az/az/pages/150/208\""}, {\""title\"": \""F\u018fRD\u0130 M\u018f\u015e\u011e\u018fL\u018f\"", \""caption\"": \""http://www.theclub.az/bolme-img/58989589891.jpg\"", \""source\"": \""http://www.theclub.az/az/pages/150/197\""}, {\""title\"": \""S\u00dcN\u0130 QAYA\"", \""caption\"": \""http://www.theclub.az/bolme-img/4781247812qaya.jpg\"", \""source\"": \""http://www.theclub.az/az/pages/150/198\""}, {\""title\"": \""SPORT CAFE\"", \""caption\"": \""http://www.theclub.az/bolme-img/60776607764.jpg\"", \""source\"": \""http://www.theclub.az/az/pages/150/201\""}, {\""title\"": \""THE CLUB SPA\"", \""caption\"": \""http://www.theclub.az/bolme-img/17042spa.jpg\"", \""source\"": \""http://www.theclub.az/az/pages/150/216\""}, {\""title\"": \""FITNES STUDIYA 1\"", \""caption\"": \""http://www.theclub.az/bolme-img/34042340421.jpg\"", \""source\"": \""http://www.theclub.az/az/pages/150/209\""}, {\""title\"": \""FITNES STUDIYA 2\"", \""caption\"": \""http://www.theclub.az/bolme-img/48637486371.jpg\"", \""source\"": \""http://www.theclub.az/az/pages/150/210\""}, {\""title\"": \""TEN\u0130S KORTU\"", \""caption\"": \""http://www.theclub.az/bolme-img/24234242341.jpg\"", \""source\"": \""http://www.theclub.az/az/pages/150/203\""}, {\""title\"": \""SKVO\u015e KORTLAR\"", \""caption\"": \""http://www.theclub.az/bolme-img/64949649492.jpg\"", \""source\"": \""http://www.theclub.az/az/pages/150/204\""}, {\""title\"": \""COFFEE SHOP\"", \""caption\"": \""http://www.theclub.az/bolme-img/55114551141.jpg\"", \""source\"": \""http://www.theclub.az/az/pages/150/202\""}, {\""title\"": \""U\u015eAQ OTA\u011eI\"", \""caption\"": \""http://www.theclub.az/bolme-img/55813558131.jpg\"", \""source\"": \""http://www.theclub.az/az/pages/150/206\""}, {\""title\"": \""GOLF SIMULYATOR\"", \""caption\"": \""http://www.theclub.az/bolme-img/3846210.jpg\"", \""source\"": \""http://www.theclub.az/az/pages/150/199\""}, {\""title\"": \""BILYARD OTA\u011eI\"", \""caption\"": \""http://www.theclub.az/bolme-img/67419674191.jpg\"", \""source\"": \""http://www.theclub.az/az/pages/150/205\""}, {\""title\"": \""SPORT SHOP\"", \""caption\"": \""http://www.theclub.az/bolme-img/95621956211.jpg\"", \""source\"": \""http://www.theclub.az/az/pages/150/207\""}, {\""title\"": \""SAUNA/BUXAR OTA\u011eI\"", \""caption\"": \""http://www.theclub.az/bolme-img/2131719.jpg\"", \""source\"": \""http://www.theclub.az/az/pages/150/211\""}, {\""title\"": \""SOLARIUM\"", \""caption\"": \""http://www.theclub.az/bolme-img/9097520.jpg\"", \""source\"": \""http://www.theclub.az/az/pages/150/212\""}, {\""title\"": \""G\u00d6Z\u018fLL\u0130K SALONU\"", \""caption\"": \""http://www.theclub.az/bolme-img/4677721.jpg\"", \""source\"": \""http://www.theclub.az/az/pages/150/213\""}, {\""title\"": \""B\u018fRB\u018fR SALONU\"", \""caption\"": \""http://www.theclub.az/bolme-img/3459922.jpg\"", \""source\"": \""http://www.theclub.az/az/pages/150/214\""}, {\""title\"": \""DZ\u00dcDO D\u018fRSL\u018fR\u0130\"", \""caption\"": \""http://www.theclub.az/bolme-img/21924judo.jpg\"", \""source\"": \""http://www.theclub.az/az/pages/150/242\""}]""; </code></pre>  <p><strong>HTML and JavaScript</strong></p>  <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-js lang-js prettyprint-override""><code>//s.js window.onload = function() {   var prods = document.getElementById(""prods"");   var products = JSON.parse(products)   prods.innerHTML = '';   for (var i = 0; i &lt; products.length; ++i) {     var prod = products[i];     prods.innerHTML += '&lt;div class=""prd_div""&gt;&lt;a class=""prd_par"" href=""' + prod.source + '""&gt;&lt;img src=""' + prod.caption + '"" class=""prd"" /&gt;&lt;p&gt;' + prod.title + '&lt;/p&gt;&lt;/a&gt;&lt;/div&gt;';   } };</code></pre> <pre class=""snippet-code-html lang-html prettyprint-override""><code>&lt;!DOCTYPE HTML&gt; &lt;html&gt;  &lt;head&gt;   &lt;meta charset=""utf-8""&gt;   &lt;meta name=""viewport"" content=""width=device-width, initial-scale=1.0""&gt;   &lt;link rel=""stylesheet"" href=""https://fonts.googleapis.com/css?family=Source+Sans+Pro""&gt;   &lt;link rel=""stylesheet"" type=""text/css"" href=""main.css"" /&gt;   &lt;script type=""text/javascript"" src=""products.json""&gt;&lt;/script&gt; &lt;/head&gt;  &lt;body&gt;   &lt;div id=""prods""&gt;&lt;/div&gt;   &lt;script type=""text/javascript"" src=""s.js""&gt;&lt;/script&gt; &lt;/body&gt;  &lt;/html&gt;</code></pre> </div> </div> </p>  <p>Where am I doing the mistake? Please, help!</p>"	45807337	"<p>The issue here is that the you should make an <a href=""https://www.w3schools.com/xml/ajax_intro.asp"" rel=""nofollow noreferrer"">ajax</a> to get JSON. So in your html you should remove this line </p>  <pre><code>  &lt;script type=""text/javascript"" src=""products.json""&gt;&lt;/script&gt; </code></pre>  <p>And in your JS file you should make your ajax like this:</p>  <pre><code>function loadAjax() {   var xhttp = new XMLHttpRequest();   xhttp.onreadystatechange = function() {     if (this.readyState == 4 &amp;&amp; this.status == 200) {      console.log(this.responseText) // here you will got the whole json     }   };   xhttp.open(""GET"", ""products.json"", true);   xhttp.send(); } </code></pre>  <p>Im not quite sure if you will got it as string or as JSON, in case it is a string you can convert it to JSON Object by doing <code>JSON.parse(this.responseText)</code> Also as @vasif says, the JSON file shouldn´t have products = at start</p>"
45807268	Issue with parsing (via JavaScript) an automatically created (via Python) JSON file	javascript|python|json	2017-08-22 00:29:54.203000 UTC	"<p>A few days ago I got an order from a local company to make them a mobile app. The design and UI is almost ready but there are some issues regarding its logic. One of these issues is following: they want their services listed on a lower part of the body of the app.</p>  <p>I started thinking about this yesterday and came up with this idea: I'm scraping their website, collecting the needed data and making an array of json objects, which I write to a .json file with python. Then using javascript I'm parsing this .json file and extracting the necessary parts from it to show in a div... Python creates the json file successfully but when JavaScript tries to parse it, it is unsuccessful. I checked with console logging and it says <code>SyntaxError: JSON.parse: unexpected character at line 1 column 1 of the JSON data</code>, which is the beginning of my JSON file.</p>  <p>I am presenting you my Python, JS, JSON files and the relevant parts of my HTML file.</p>  <p><strong>Python</strong></p>  <pre><code>from urllib.request import urlopen from bs4 import BeautifulSoup import json  def make_json_file():     titles = []     captions = []     sources = []      serv_url = 'http://www.theclub.az/az/pages/145/150'     full_page = BeautifulSoup(urlopen(serv_url).read(), ""html.parser"")      links = full_page.findAll('a', {'class': 'readmore'})     for i in range(0, len(links), 2):         source = links[i]['href']         sources.append(source)          title = links[i].findAll('div')[1].string         titles.append(title)          caption = 'http://www.theclub.az/' + links[i].findAll('a')[0].img['src']         captions.append(caption)      products = [{""title"": t, ""caption"": c, ""source"": s} for t, c, s in zip(titles, captions, sources)]     content = json.dumps(products, ensure_ascii=False)      with open('products.json', 'w') as outfile:         outfile.write('products = ')         json.dump(content, outfile)         outfile.write(';')   make_json_file() </code></pre>  <p><strong>It creates this JSON file (products.json)</strong></p>  <pre><code>products = ""[{\""title\"": \""\u0130DMAN ZALI\"", \""caption\"": \""http://www.theclub.az/bolme-img/8223682236sport.jpg\"", \""source\"": \""http://www.theclub.az/az/pages/150/194\""}, {\""title\"": \""\u00dcZG\u00dc\u00c7\u00dcL\u00dcK HOVUZU\"", \""caption\"": \""http://www.theclub.az/bolme-img/8394983949hovuz.jpg\"", \""source\"": \""http://www.theclub.az/az/pages/150/195\""}, {\""title\"": \""KARD\u0130O AL\u018fTL\u018fR ZALI\"", \""caption\"": \""http://www.theclub.az/bolme-img/6862168621card.jpg\"", \""source\"": \""http://www.theclub.az/az/pages/150/196\""}, {\""title\"": \""A\u011eIRL\u0130Q AL\u018fTL\u018fR\u0130 ZALI\"", \""caption\"": \""http://www.theclub.az/bolme-img/2713327133sport.jpg\"", \""source\"": \""http://www.theclub.az/az/pages/150/208\""}, {\""title\"": \""F\u018fRD\u0130 M\u018f\u015e\u011e\u018fL\u018f\"", \""caption\"": \""http://www.theclub.az/bolme-img/58989589891.jpg\"", \""source\"": \""http://www.theclub.az/az/pages/150/197\""}, {\""title\"": \""S\u00dcN\u0130 QAYA\"", \""caption\"": \""http://www.theclub.az/bolme-img/4781247812qaya.jpg\"", \""source\"": \""http://www.theclub.az/az/pages/150/198\""}, {\""title\"": \""SPORT CAFE\"", \""caption\"": \""http://www.theclub.az/bolme-img/60776607764.jpg\"", \""source\"": \""http://www.theclub.az/az/pages/150/201\""}, {\""title\"": \""THE CLUB SPA\"", \""caption\"": \""http://www.theclub.az/bolme-img/17042spa.jpg\"", \""source\"": \""http://www.theclub.az/az/pages/150/216\""}, {\""title\"": \""FITNES STUDIYA 1\"", \""caption\"": \""http://www.theclub.az/bolme-img/34042340421.jpg\"", \""source\"": \""http://www.theclub.az/az/pages/150/209\""}, {\""title\"": \""FITNES STUDIYA 2\"", \""caption\"": \""http://www.theclub.az/bolme-img/48637486371.jpg\"", \""source\"": \""http://www.theclub.az/az/pages/150/210\""}, {\""title\"": \""TEN\u0130S KORTU\"", \""caption\"": \""http://www.theclub.az/bolme-img/24234242341.jpg\"", \""source\"": \""http://www.theclub.az/az/pages/150/203\""}, {\""title\"": \""SKVO\u015e KORTLAR\"", \""caption\"": \""http://www.theclub.az/bolme-img/64949649492.jpg\"", \""source\"": \""http://www.theclub.az/az/pages/150/204\""}, {\""title\"": \""COFFEE SHOP\"", \""caption\"": \""http://www.theclub.az/bolme-img/55114551141.jpg\"", \""source\"": \""http://www.theclub.az/az/pages/150/202\""}, {\""title\"": \""U\u015eAQ OTA\u011eI\"", \""caption\"": \""http://www.theclub.az/bolme-img/55813558131.jpg\"", \""source\"": \""http://www.theclub.az/az/pages/150/206\""}, {\""title\"": \""GOLF SIMULYATOR\"", \""caption\"": \""http://www.theclub.az/bolme-img/3846210.jpg\"", \""source\"": \""http://www.theclub.az/az/pages/150/199\""}, {\""title\"": \""BILYARD OTA\u011eI\"", \""caption\"": \""http://www.theclub.az/bolme-img/67419674191.jpg\"", \""source\"": \""http://www.theclub.az/az/pages/150/205\""}, {\""title\"": \""SPORT SHOP\"", \""caption\"": \""http://www.theclub.az/bolme-img/95621956211.jpg\"", \""source\"": \""http://www.theclub.az/az/pages/150/207\""}, {\""title\"": \""SAUNA/BUXAR OTA\u011eI\"", \""caption\"": \""http://www.theclub.az/bolme-img/2131719.jpg\"", \""source\"": \""http://www.theclub.az/az/pages/150/211\""}, {\""title\"": \""SOLARIUM\"", \""caption\"": \""http://www.theclub.az/bolme-img/9097520.jpg\"", \""source\"": \""http://www.theclub.az/az/pages/150/212\""}, {\""title\"": \""G\u00d6Z\u018fLL\u0130K SALONU\"", \""caption\"": \""http://www.theclub.az/bolme-img/4677721.jpg\"", \""source\"": \""http://www.theclub.az/az/pages/150/213\""}, {\""title\"": \""B\u018fRB\u018fR SALONU\"", \""caption\"": \""http://www.theclub.az/bolme-img/3459922.jpg\"", \""source\"": \""http://www.theclub.az/az/pages/150/214\""}, {\""title\"": \""DZ\u00dcDO D\u018fRSL\u018fR\u0130\"", \""caption\"": \""http://www.theclub.az/bolme-img/21924judo.jpg\"", \""source\"": \""http://www.theclub.az/az/pages/150/242\""}]""; </code></pre>  <p><strong>HTML and JavaScript</strong></p>  <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-js lang-js prettyprint-override""><code>//s.js window.onload = function() {   var prods = document.getElementById(""prods"");   var products = JSON.parse(products)   prods.innerHTML = '';   for (var i = 0; i &lt; products.length; ++i) {     var prod = products[i];     prods.innerHTML += '&lt;div class=""prd_div""&gt;&lt;a class=""prd_par"" href=""' + prod.source + '""&gt;&lt;img src=""' + prod.caption + '"" class=""prd"" /&gt;&lt;p&gt;' + prod.title + '&lt;/p&gt;&lt;/a&gt;&lt;/div&gt;';   } };</code></pre> <pre class=""snippet-code-html lang-html prettyprint-override""><code>&lt;!DOCTYPE HTML&gt; &lt;html&gt;  &lt;head&gt;   &lt;meta charset=""utf-8""&gt;   &lt;meta name=""viewport"" content=""width=device-width, initial-scale=1.0""&gt;   &lt;link rel=""stylesheet"" href=""https://fonts.googleapis.com/css?family=Source+Sans+Pro""&gt;   &lt;link rel=""stylesheet"" type=""text/css"" href=""main.css"" /&gt;   &lt;script type=""text/javascript"" src=""products.json""&gt;&lt;/script&gt; &lt;/head&gt;  &lt;body&gt;   &lt;div id=""prods""&gt;&lt;/div&gt;   &lt;script type=""text/javascript"" src=""s.js""&gt;&lt;/script&gt; &lt;/body&gt;  &lt;/html&gt;</code></pre> </div> </div> </p>  <p>Where am I doing the mistake? Please, help!</p>"	45807790	"<p>In the <code>window.onload</code> anonymous function declared in <code>s.js</code>,</p>  <pre><code>    var products = JSON.parse(products) </code></pre>  <p>declares a local function variable named <code>products</code> which shadows the global variable <code>products</code> with the same name and makes it inaccessible. Since the local variable is initially undefined, the code is equivalent to</p>  <pre><code>    var products = JSON.parse(undefined); </code></pre>  <p>which throws the same error. The simplest solution is to change the name of the variable used for the parsed data in the <code>onload</code> function to something else, to prevent it shadowing the global <code>products</code> value.</p>  <p>Other than that it seems to be working fine - a page of gymnasium photos with links underneath them.</p>  <p>Note that the 'products.json"" file created in Python is a <a href=""https://en.wikipedia.org/wiki/JSONP"" rel=""nofollow noreferrer"">JSONP</a>, not JSON, file.</p>"
45807268	Issue with parsing (via JavaScript) an automatically created (via Python) JSON file	javascript|python|json	2017-08-22 00:29:54.203000 UTC	"<p>A few days ago I got an order from a local company to make them a mobile app. The design and UI is almost ready but there are some issues regarding its logic. One of these issues is following: they want their services listed on a lower part of the body of the app.</p>  <p>I started thinking about this yesterday and came up with this idea: I'm scraping their website, collecting the needed data and making an array of json objects, which I write to a .json file with python. Then using javascript I'm parsing this .json file and extracting the necessary parts from it to show in a div... Python creates the json file successfully but when JavaScript tries to parse it, it is unsuccessful. I checked with console logging and it says <code>SyntaxError: JSON.parse: unexpected character at line 1 column 1 of the JSON data</code>, which is the beginning of my JSON file.</p>  <p>I am presenting you my Python, JS, JSON files and the relevant parts of my HTML file.</p>  <p><strong>Python</strong></p>  <pre><code>from urllib.request import urlopen from bs4 import BeautifulSoup import json  def make_json_file():     titles = []     captions = []     sources = []      serv_url = 'http://www.theclub.az/az/pages/145/150'     full_page = BeautifulSoup(urlopen(serv_url).read(), ""html.parser"")      links = full_page.findAll('a', {'class': 'readmore'})     for i in range(0, len(links), 2):         source = links[i]['href']         sources.append(source)          title = links[i].findAll('div')[1].string         titles.append(title)          caption = 'http://www.theclub.az/' + links[i].findAll('a')[0].img['src']         captions.append(caption)      products = [{""title"": t, ""caption"": c, ""source"": s} for t, c, s in zip(titles, captions, sources)]     content = json.dumps(products, ensure_ascii=False)      with open('products.json', 'w') as outfile:         outfile.write('products = ')         json.dump(content, outfile)         outfile.write(';')   make_json_file() </code></pre>  <p><strong>It creates this JSON file (products.json)</strong></p>  <pre><code>products = ""[{\""title\"": \""\u0130DMAN ZALI\"", \""caption\"": \""http://www.theclub.az/bolme-img/8223682236sport.jpg\"", \""source\"": \""http://www.theclub.az/az/pages/150/194\""}, {\""title\"": \""\u00dcZG\u00dc\u00c7\u00dcL\u00dcK HOVUZU\"", \""caption\"": \""http://www.theclub.az/bolme-img/8394983949hovuz.jpg\"", \""source\"": \""http://www.theclub.az/az/pages/150/195\""}, {\""title\"": \""KARD\u0130O AL\u018fTL\u018fR ZALI\"", \""caption\"": \""http://www.theclub.az/bolme-img/6862168621card.jpg\"", \""source\"": \""http://www.theclub.az/az/pages/150/196\""}, {\""title\"": \""A\u011eIRL\u0130Q AL\u018fTL\u018fR\u0130 ZALI\"", \""caption\"": \""http://www.theclub.az/bolme-img/2713327133sport.jpg\"", \""source\"": \""http://www.theclub.az/az/pages/150/208\""}, {\""title\"": \""F\u018fRD\u0130 M\u018f\u015e\u011e\u018fL\u018f\"", \""caption\"": \""http://www.theclub.az/bolme-img/58989589891.jpg\"", \""source\"": \""http://www.theclub.az/az/pages/150/197\""}, {\""title\"": \""S\u00dcN\u0130 QAYA\"", \""caption\"": \""http://www.theclub.az/bolme-img/4781247812qaya.jpg\"", \""source\"": \""http://www.theclub.az/az/pages/150/198\""}, {\""title\"": \""SPORT CAFE\"", \""caption\"": \""http://www.theclub.az/bolme-img/60776607764.jpg\"", \""source\"": \""http://www.theclub.az/az/pages/150/201\""}, {\""title\"": \""THE CLUB SPA\"", \""caption\"": \""http://www.theclub.az/bolme-img/17042spa.jpg\"", \""source\"": \""http://www.theclub.az/az/pages/150/216\""}, {\""title\"": \""FITNES STUDIYA 1\"", \""caption\"": \""http://www.theclub.az/bolme-img/34042340421.jpg\"", \""source\"": \""http://www.theclub.az/az/pages/150/209\""}, {\""title\"": \""FITNES STUDIYA 2\"", \""caption\"": \""http://www.theclub.az/bolme-img/48637486371.jpg\"", \""source\"": \""http://www.theclub.az/az/pages/150/210\""}, {\""title\"": \""TEN\u0130S KORTU\"", \""caption\"": \""http://www.theclub.az/bolme-img/24234242341.jpg\"", \""source\"": \""http://www.theclub.az/az/pages/150/203\""}, {\""title\"": \""SKVO\u015e KORTLAR\"", \""caption\"": \""http://www.theclub.az/bolme-img/64949649492.jpg\"", \""source\"": \""http://www.theclub.az/az/pages/150/204\""}, {\""title\"": \""COFFEE SHOP\"", \""caption\"": \""http://www.theclub.az/bolme-img/55114551141.jpg\"", \""source\"": \""http://www.theclub.az/az/pages/150/202\""}, {\""title\"": \""U\u015eAQ OTA\u011eI\"", \""caption\"": \""http://www.theclub.az/bolme-img/55813558131.jpg\"", \""source\"": \""http://www.theclub.az/az/pages/150/206\""}, {\""title\"": \""GOLF SIMULYATOR\"", \""caption\"": \""http://www.theclub.az/bolme-img/3846210.jpg\"", \""source\"": \""http://www.theclub.az/az/pages/150/199\""}, {\""title\"": \""BILYARD OTA\u011eI\"", \""caption\"": \""http://www.theclub.az/bolme-img/67419674191.jpg\"", \""source\"": \""http://www.theclub.az/az/pages/150/205\""}, {\""title\"": \""SPORT SHOP\"", \""caption\"": \""http://www.theclub.az/bolme-img/95621956211.jpg\"", \""source\"": \""http://www.theclub.az/az/pages/150/207\""}, {\""title\"": \""SAUNA/BUXAR OTA\u011eI\"", \""caption\"": \""http://www.theclub.az/bolme-img/2131719.jpg\"", \""source\"": \""http://www.theclub.az/az/pages/150/211\""}, {\""title\"": \""SOLARIUM\"", \""caption\"": \""http://www.theclub.az/bolme-img/9097520.jpg\"", \""source\"": \""http://www.theclub.az/az/pages/150/212\""}, {\""title\"": \""G\u00d6Z\u018fLL\u0130K SALONU\"", \""caption\"": \""http://www.theclub.az/bolme-img/4677721.jpg\"", \""source\"": \""http://www.theclub.az/az/pages/150/213\""}, {\""title\"": \""B\u018fRB\u018fR SALONU\"", \""caption\"": \""http://www.theclub.az/bolme-img/3459922.jpg\"", \""source\"": \""http://www.theclub.az/az/pages/150/214\""}, {\""title\"": \""DZ\u00dcDO D\u018fRSL\u018fR\u0130\"", \""caption\"": \""http://www.theclub.az/bolme-img/21924judo.jpg\"", \""source\"": \""http://www.theclub.az/az/pages/150/242\""}]""; </code></pre>  <p><strong>HTML and JavaScript</strong></p>  <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-js lang-js prettyprint-override""><code>//s.js window.onload = function() {   var prods = document.getElementById(""prods"");   var products = JSON.parse(products)   prods.innerHTML = '';   for (var i = 0; i &lt; products.length; ++i) {     var prod = products[i];     prods.innerHTML += '&lt;div class=""prd_div""&gt;&lt;a class=""prd_par"" href=""' + prod.source + '""&gt;&lt;img src=""' + prod.caption + '"" class=""prd"" /&gt;&lt;p&gt;' + prod.title + '&lt;/p&gt;&lt;/a&gt;&lt;/div&gt;';   } };</code></pre> <pre class=""snippet-code-html lang-html prettyprint-override""><code>&lt;!DOCTYPE HTML&gt; &lt;html&gt;  &lt;head&gt;   &lt;meta charset=""utf-8""&gt;   &lt;meta name=""viewport"" content=""width=device-width, initial-scale=1.0""&gt;   &lt;link rel=""stylesheet"" href=""https://fonts.googleapis.com/css?family=Source+Sans+Pro""&gt;   &lt;link rel=""stylesheet"" type=""text/css"" href=""main.css"" /&gt;   &lt;script type=""text/javascript"" src=""products.json""&gt;&lt;/script&gt; &lt;/head&gt;  &lt;body&gt;   &lt;div id=""prods""&gt;&lt;/div&gt;   &lt;script type=""text/javascript"" src=""s.js""&gt;&lt;/script&gt; &lt;/body&gt;  &lt;/html&gt;</code></pre> </div> </div> </p>  <p>Where am I doing the mistake? Please, help!</p>"	45827285	"<p>I know there's an accepted answer, but I don't like it.  So here's mine.</p>  <p>Your products.json file is neither valid JSON not valid Javascript, but a combination of them which won't work in either.</p>  <p>You could update your python script to generate valid javascript and then load that script through a script tag named something like products.js:</p>  <pre><code>products = [{ name : ""value"", name: ""value""}, {name: ""value"", name:""value""}]; </code></pre>  <p>This would work fine if you only want to populate products once per page load.  If you're going for more ajax, where you want the value of products to change without reloading the page, then change your python script to generate valid JSON, and serve it up as a json file:</p>  <pre><code>[{\""title\"": \""\u0130DMAN ZALI\"", \""caption\"": \""http://www.theclub.az/bolme-img/8223682236sport.jpg\"", \""source\"": \""http://www.theclub.az/az/pages/150/194\""}, {\""title\"": \""\u00dcZG\u00dc\u00c7\u00dcL\u00dcK HOVUZU\"", \""caption\"": \""http://www.theclub.az/bolme-img/8394983949hovuz.jpg\"", \""source\"": \""http://www.theclub.az/az/pages/150/195\""}] </code></pre>  <p>Then, when you want to change the value of the products file, you can do something like this:</p>  <pre><code>$.get(""/path/to/products.json"", null, null, ""json"")     .done(function(r) {         products = r;     }); </code></pre>"
45829621	Python request module vs. urllib.request vs. javascript with JQuery/ajax In Production Environment	javascript|jquery|python|ajax|python-requests	2017-08-23 02:18:14.977000 UTC	"<p>I am writing a small program that consumes an API. The program is using Python with requests JSON and requests module. it makes a HTTP request and the API returns a json data. Then I will do something to the data.</p>  <p>it looks like this.</p>  <pre><code>import json, requests  url = 'http://maps.googleapis.com/maps/api/directions/json' params = {...}  resp = requests.get(url=url, params=params) data = json.loads(resp.text) #do something with data </code></pre>  <p>However, I start to wonder about 3 specific questions about my choice of language and design:</p>  <ol> <li><p>Currently, It is obvious that I am the only one using this program but eventually if I publish this program that means more than one people will be using it. Should my choice of language and module differ when it comes to production environment? </p></li> <li><p>why should I use the request module, why not <code>urllib.request</code> module? urllib module can also make http request.</p></li> <li><p>Furthermore, why use Python? I am using Python because I am familiar with it. Maybe I can use this chance to learn JavaScript. I can use JQuery and AJAX to accomplish the same thing. Is there a better way? or it depends on what the program is for?</p></li> </ol>  <p>Any explanation is appreciated.</p>  <hr>  <p>Bonus: This following question is broad so I don't expect the chosen answer to include for the following questions but it will be nice. </p>  <p>There are much more great languages, modules, and library that can be used to accomplish my desired task. Basically is there a best way to request JSON data from an API? or it depends on the circumstances? if so, how do circumstances should affect the choice of language and design? and what are the pros and cons?</p>"	45829743	"<ol> <li>Requests makes your life easier. Not by much in this case, but try writing the same thing using <code>urllib2</code></li> <li>You can use any language of your choice. If you intend to make this into some kind of a CLI or GUI, then JS will probably be better because your final application can then live at a web address. Or you can make a nice App using Kivy or CLICK and distribute it as a binary</li> <li>Problems with multiple connections is a lookout for the server, not your app. The stack that you use for the backend will be the deciding factor that makes or breaks your app, not how many people end up using it simultaneously. </li> </ol>"
45865447	Python 3 Selenium fails to execute javascript	javascript|python|selenium	2017-08-24 15:23:27.947000 UTC	"<p>I'm using python 3 and I'm using Selenium to try to scrape data off a website. I need to remove a class from a list item in order to display the data I need, this is the code: </p>  <pre><code>driver.execute_script(""document.getElementsByClassName('otherClassName isSelected').classList.remove('isSelected');"") </code></pre>  <p>but I get the error </p>  <blockquote>   <p>""selenium.common.exceptions.WebDriverException: Message: unknown error:   Cannot read property 'remove' of undefined""</p> </blockquote>  <p>I have also tried </p>  <pre><code>driver.execute_script(""document.getElementsByClassName('otherClassName isSelected').setAttribute('class', 'otherClassName')"") </code></pre>  <p>but then I get</p>  <blockquote>   <p>selenium.common.exceptions.WebDriverException: Message: unknown error: document.getElementsByClassName(...).setAttribute is not a function</p> </blockquote>"	45866471	"<p>I guess this is because you're trying to apply class name update for <em>multiple</em> elements at once while <code>setAttribute()</code> allows to apply changes to one element at the time. </p>  <p>Try below code instead</p>  <pre><code>js = """"""document.querySelectorAll('.otherClassName.isSelected')     .forEach( x=&gt; x.setAttribute(""class"",""otherClassName""));"""""" driver.execute_script(js) </code></pre>  <p>P.S. It seem to be <a href=""http://xyproblem.info/"" rel=""nofollow noreferrer""><em>XY problem</em></a> as usually you don't need to make changes to page source while page scraping. You should share more details about your initial problem</p>"
45865447	Python 3 Selenium fails to execute javascript	javascript|python|selenium	2017-08-24 15:23:27.947000 UTC	"<p>I'm using python 3 and I'm using Selenium to try to scrape data off a website. I need to remove a class from a list item in order to display the data I need, this is the code: </p>  <pre><code>driver.execute_script(""document.getElementsByClassName('otherClassName isSelected').classList.remove('isSelected');"") </code></pre>  <p>but I get the error </p>  <blockquote>   <p>""selenium.common.exceptions.WebDriverException: Message: unknown error:   Cannot read property 'remove' of undefined""</p> </blockquote>  <p>I have also tried </p>  <pre><code>driver.execute_script(""document.getElementsByClassName('otherClassName isSelected').setAttribute('class', 'otherClassName')"") </code></pre>  <p>but then I get</p>  <blockquote>   <p>selenium.common.exceptions.WebDriverException: Message: unknown error: document.getElementsByClassName(...).setAttribute is not a function</p> </blockquote>"	45867171	"<p>I had forgotten to add [0] after getting the element by class, so the correct code should be: </p>  <pre><code>driver.execute_script(""document.getElementsByClassName('otherClassName isSelected')[0].classList.remove('isSelected');"") </code></pre>"
45877416	Odoo10/Odoo11 dynamic progressbar - trigger javascript function inside python	javascript|python|openerp|odoo-10|odoo-11	2017-08-25 08:34:12.327000 UTC	"<p>My task: a dynamic progress bar in odoo.</p>  <p>I'm using the Odoo widget: 'progressbar'. I want to update the view every time the value is updated - hence I want to trigger the <code>on_change_input</code> javascript function inside my python write method to render the view.</p>  <pre><code> @api.one  def updatevalue(self, val):       self.value = val       # TODO call javascript function on_change_input() </code></pre>  <p>The purpose is, that the progressbar should be updated while a process is running and the user should see the progress without updating the site.</p>  <p>Is my task possible with the progressbar widget? Or is there another possibility to show dynamic content in Odoo?</p>  <p>If I use my <code>updatevalue</code> method as button, the progressbar is updated after clicking the button without calling the javascript function &amp; without refreshing the page... but I do want to call the method in my code (and probably over rpc) therefore this does not help -.-</p>  <p>Thank you for your time!</p>  <hr>  <p>Here is the workflow I have so far:</p>  <p>The user clicks on the button <code>do_time_consuming_task</code> and the following function is called:  </p>  <pre><code>def do_timeconsuming_task(self):   ws = websocket.WebSocket()   ws.connect('ws:/129.0.0.1:1234/')   data = { 'topic' : 'server_command', 'id' : self.id, 'commandName' : 'do_sth',}   payload = ujson.dumps(data)   ws.send(payload)   ws.close() </code></pre>  <p>On the server, the command is received and processed. There is an open rpc connection:</p>  <pre><code>odoo = odoorpc.ODOO(""129.0.0.1"", port=8069) odoo.login(""database"", ""user"", ""password"") my_module = odoo.env['my_module.progress_widget_test']  progress_instance = my_module.browse(id) </code></pre>  <p>Every time the progress value changes I call the following method of my module:</p>  <pre><code>progress_instance.updatevalue(new_value) </code></pre>  <p>when the value equals 100 % I close the connection</p>  <pre><code>odoo.logout() </code></pre>"	46071344	"<p>This functionality already exists and you can copy parts of it from <code>account/static/src/js/account_reconciliation_widgets.js</code> from the method <code>updateProgressBar</code> and <code>processReconciliations</code>. You will see here the correct way of updating the progress bar.</p>  <blockquote>   <p>The purpose is, that the progressbar should be updated while a process   is running and the user should see the progress without updating the   site.</p> </blockquote>  <p>See on the <code>processReconciliations</code> how it is done, basically you call the <code>process_reconciliations</code> method that exists on the back end and you get a <code>deferred</code> object back. From that deferred object you can use <a href=""https://api.jquery.com/deferred.progress/"" rel=""nofollow noreferrer"">progress()</a></p>  <p>Looking through the documentation of <code>.progress()</code> you will see that you need to report your progress using <code>.[notify][2]()</code></p>  <p>How do you define the percentage of completion of <strong>your</strong> process?</p>"
45945249	Getting error while including JavaScript files using Django and Python	javascript|python|django	2017-08-29 17:40:50.130000 UTC	"<p>I am getting some error while including JavaScript files in templates using Django.</p>  <p>Error:</p>  <pre><code>TemplateSyntaxError at / Invalid block tag on line 6: 'static'. Did you forget to register or load this tag? Request Method: GET Request URL:    http://127.0.0.1:8000/ Django Version: 1.11.2 Exception Type: TemplateSyntaxError Exception Value:     Invalid block tag on line 6: 'static'. Did you forget to register or load this tag? Exception Location: C:\Python34\lib\site-packages\django\template\base.py in invalid_block_tag, line 571 Python Executable:  C:\Python34\python.exe Python Version: 3.4.4 </code></pre>  <p>settings.py:</p>  <pre><code>STATICFILES_DIRS = [     os.path.join(BASE_DIR, ""static""), ]  PROJECT_DIR = os.path.dirname(__file__)  """""" Internationalization """"""  LANGUAGE_CODE = 'en-us'  TIME_ZONE = 'UTC'  USE_I18N = True  USE_L10N = True  USE_TZ = True   """""" Static files (CSS, JavaScript, Images) """"""  STATIC_URL = '/static/'  STATIC_ROOT = os.path.join(PROJECT_DIR, 'static') </code></pre>  <p>urls.py:</p>  <pre><code>""""""Neuclear plant URL Configuration"""""" from django.conf.urls import url, include from django.contrib import admin from django.conf import settings from django.conf.urls.static import static admin.autodiscover()  urlpatterns = [     url(r'^admin/', admin.site.urls),     url(r'^', include('plant.urls')), ]+ static(settings.STATIC_URL, document_root=settings.STATIC_ROOT) </code></pre>  <p>base.html:   </p>  <pre><code> &lt;!DOCTYPE html&gt; &lt;html lang=""en""&gt;   &lt;head&gt; &lt;meta charset=""utf-8""&gt; { % load static %} &lt;script type=""text/javascript"" src=""{% static 'js/jquery.js' %}""&gt;&lt;/script&gt;   &lt;/head&gt;   &lt;body&gt;     &lt;header&gt;       &lt;h1&gt;Nuclear Reactor&lt;/h1&gt;       {% if count &gt; 0  %}       &lt;b&gt;Hi, {{ user.username }}&lt;/b&gt;         &lt;a href=""{% url 'home' %}""&gt;Home&lt;/a&gt;         &lt;a href=""{% url 'view_reactor' %}""&gt;View Reactor status&lt;/a&gt;         &lt;a href=""{% url 'logout' %}""&gt;logout&lt;/a&gt;       {% else %}         &lt;a href=""{% url 'login' %}""&gt;login&lt;/a&gt; / &lt;a href=""{% url 'signup' %}""&gt;signup&lt;/a&gt;       {% endif %}       &lt;hr&gt;     &lt;/header&gt;     &lt;main&gt;       {% block content %}       {% endblock %}     &lt;/main&gt;   &lt;/body&gt; &lt;/html&gt; </code></pre>  <p>In the above template file i am getting the error. Here I need to include the js file in this template. I have also <code>static/js/</code> folder inside my project directory.</p>"	45945299	<p>Include <code>{% load static %}</code> on the top of your template</p>
45945249	Getting error while including JavaScript files using Django and Python	javascript|python|django	2017-08-29 17:40:50.130000 UTC	"<p>I am getting some error while including JavaScript files in templates using Django.</p>  <p>Error:</p>  <pre><code>TemplateSyntaxError at / Invalid block tag on line 6: 'static'. Did you forget to register or load this tag? Request Method: GET Request URL:    http://127.0.0.1:8000/ Django Version: 1.11.2 Exception Type: TemplateSyntaxError Exception Value:     Invalid block tag on line 6: 'static'. Did you forget to register or load this tag? Exception Location: C:\Python34\lib\site-packages\django\template\base.py in invalid_block_tag, line 571 Python Executable:  C:\Python34\python.exe Python Version: 3.4.4 </code></pre>  <p>settings.py:</p>  <pre><code>STATICFILES_DIRS = [     os.path.join(BASE_DIR, ""static""), ]  PROJECT_DIR = os.path.dirname(__file__)  """""" Internationalization """"""  LANGUAGE_CODE = 'en-us'  TIME_ZONE = 'UTC'  USE_I18N = True  USE_L10N = True  USE_TZ = True   """""" Static files (CSS, JavaScript, Images) """"""  STATIC_URL = '/static/'  STATIC_ROOT = os.path.join(PROJECT_DIR, 'static') </code></pre>  <p>urls.py:</p>  <pre><code>""""""Neuclear plant URL Configuration"""""" from django.conf.urls import url, include from django.contrib import admin from django.conf import settings from django.conf.urls.static import static admin.autodiscover()  urlpatterns = [     url(r'^admin/', admin.site.urls),     url(r'^', include('plant.urls')), ]+ static(settings.STATIC_URL, document_root=settings.STATIC_ROOT) </code></pre>  <p>base.html:   </p>  <pre><code> &lt;!DOCTYPE html&gt; &lt;html lang=""en""&gt;   &lt;head&gt; &lt;meta charset=""utf-8""&gt; { % load static %} &lt;script type=""text/javascript"" src=""{% static 'js/jquery.js' %}""&gt;&lt;/script&gt;   &lt;/head&gt;   &lt;body&gt;     &lt;header&gt;       &lt;h1&gt;Nuclear Reactor&lt;/h1&gt;       {% if count &gt; 0  %}       &lt;b&gt;Hi, {{ user.username }}&lt;/b&gt;         &lt;a href=""{% url 'home' %}""&gt;Home&lt;/a&gt;         &lt;a href=""{% url 'view_reactor' %}""&gt;View Reactor status&lt;/a&gt;         &lt;a href=""{% url 'logout' %}""&gt;logout&lt;/a&gt;       {% else %}         &lt;a href=""{% url 'login' %}""&gt;login&lt;/a&gt; / &lt;a href=""{% url 'signup' %}""&gt;signup&lt;/a&gt;       {% endif %}       &lt;hr&gt;     &lt;/header&gt;     &lt;main&gt;       {% block content %}       {% endblock %}     &lt;/main&gt;   &lt;/body&gt; &lt;/html&gt; </code></pre>  <p>In the above template file i am getting the error. Here I need to include the js file in this template. I have also <code>static/js/</code> folder inside my project directory.</p>"	45945318	<p>Add <code>urlpatterns += staticfiles_urlpatterns()</code> in urls.py</p>
45947731	Handle JavaScript events in Python	python|python-3.x|event-handling|dom-events	2017-08-29 20:19:39.760000 UTC	"<p>How can I handle DOM JavaScript events (such a click) with Python? Is there a library to do such things? I've used <em>selenium</em> and _splinter to store data from browser, but I'd like to not use a browser graphically.</p>  <p>Are there any ways to not use a browser automatism graphically with <em>selenium</em> or <em>splinter</em>?</p>  <h1>Answer</h1>  <p>I used a Xvfb <em>(X Virtual Framebuffer)</em> to run a browser virtually. Thanks to all</p>"	45947865	"<p>Brython (Browser Python) is an implementation of Python 3 running in the browser.</p>  <p><a href=""https://www.brython.info/static_doc/en/intro.html"" rel=""nofollow noreferrer"">https://www.brython.info/static_doc/en/intro.html</a>                                          </p>"
45965847	"Is jquery a **normal** library to javascript the same way Math is a library to c++, python or even js?"	javascript|jquery|libraries|javascript-engine	2017-08-30 16:50:03.693000 UTC	"<p>I'm new to web development, I'm discovering javascript and all its capabilities. I'm currently learning jQuery and it made me wonder: ""what <strong>really</strong> is a library ?"".</p>  <p>From some so/internet search I understand that jQuery <strong>is</strong> a library, although some people also consider it a framework as it help/force you to change the way you code js.</p>  <p><strong>For me</strong>, a library is a <strong>set of functions and classes</strong> to help the programmers on a particular point.</p>  <p>As I understand it jQuery doesn't seem to only add function or classes contrary to other javascript libraries such as math, for example or even other jQuery plugins like datatables etc...</p>  <p>To me, jQuery at its base just looks like another way of presenting js code.</p>  <p>So to summarise my questions are:</p>  <ul> <li>Is jQuery a ""normal"" library like Math for c++, python or even js?</li> <li>How does the js engine understand jQuery? (some sort of compilation ?)</li> <li>Can every js engine understand jQuery as long as they have the jQuery.js file, or is there something already embedded inside the engine for jQuery.</li> </ul>  <p>I also took a look at this very interesting so post on <a href=""https://stackoverflow.com/questions/5685671/is-jquery-compiler-possible"">Is a jQuery <em>compiler</em> possible?</a>, but it just blurred me the line between library and jQuery even more.</p>  <p>Any hint or link to how js/jquery combine would be helpful!</p>"	45965911	"<blockquote>   <p>Is jQuery a ""normal"" library like Math for c++, python or even js?</p> </blockquote>  <p>Yes. It's just a collection of functions, etc.</p>  <blockquote>   <p>How does the js engine understand jQuery? (some sort of compilation ?)</p> </blockquote>  <p>jQuery is just code written in JavaScript using the standard features of the browser (the <a href=""https://www.w3.org/DOM/DOMTR"" rel=""nofollow noreferrer"">DOM</a>, etc.). (Well, and some non-standard ones it feature-tests for to get around browser idiosyncracies.)</p>  <blockquote>   <p>Can every js engine understand jQuery as long as they have the jQuery.js file, or is there something already embedded inside the engine for jQuery.</p> </blockquote>  <p>jQuery is designed for the browser environment, so it won't work correctly in a non-browser environment without additional dependencies (a DOM library, etc.).</p>  <hr>  <p>For the avoidance of doubt: There's nothing you can do with jQuery that you can't do without jQuery, using JavaScript's standard library, the DOM API, and other browser APIs directly. All jQuery does is provide an alternate API for doing DOM manipulation, provide some utility functions, and define a standard way to add features to extend jQuery with more functionality (e.g., ""jQuery plugins"").</p>  <p>And for completeness:</p>  <ul> <li>jQuery is not a language, although it's a common misconception that it is. You don't do something ""in jQuery"" or ""in JavaScript."" The correct contrast is ""with jQuery"" or ""with the DOM"" (or ""without jQuery"").</li> <li>There are other libraries which also fill the same sort of ""make the DOM easier"" niche, although jQuery is by far the most successful of them.</li> <li>There are entirely different approaches to handling browser-based interfaces, provided by a spectrum of projects from libraries (like KnockoutJS and many others) through light(ish) frameworks (like React and others) to full-on frameworks (like AngularJS and many others).</li> </ul>"
45965847	"Is jquery a **normal** library to javascript the same way Math is a library to c++, python or even js?"	javascript|jquery|libraries|javascript-engine	2017-08-30 16:50:03.693000 UTC	"<p>I'm new to web development, I'm discovering javascript and all its capabilities. I'm currently learning jQuery and it made me wonder: ""what <strong>really</strong> is a library ?"".</p>  <p>From some so/internet search I understand that jQuery <strong>is</strong> a library, although some people also consider it a framework as it help/force you to change the way you code js.</p>  <p><strong>For me</strong>, a library is a <strong>set of functions and classes</strong> to help the programmers on a particular point.</p>  <p>As I understand it jQuery doesn't seem to only add function or classes contrary to other javascript libraries such as math, for example or even other jQuery plugins like datatables etc...</p>  <p>To me, jQuery at its base just looks like another way of presenting js code.</p>  <p>So to summarise my questions are:</p>  <ul> <li>Is jQuery a ""normal"" library like Math for c++, python or even js?</li> <li>How does the js engine understand jQuery? (some sort of compilation ?)</li> <li>Can every js engine understand jQuery as long as they have the jQuery.js file, or is there something already embedded inside the engine for jQuery.</li> </ul>  <p>I also took a look at this very interesting so post on <a href=""https://stackoverflow.com/questions/5685671/is-jquery-compiler-possible"">Is a jQuery <em>compiler</em> possible?</a>, but it just blurred me the line between library and jQuery even more.</p>  <p>Any hint or link to how js/jquery combine would be helpful!</p>"	45965919	<p>Its pretty simple how you understand a library and a framework when it comes to jquery its a library because it dose'nt add any additional jquery approch whatever you see in jquery is present in javascript what jquery does is shorthand your code and help you chain functions which was not that much possible in javascript and when it comes to plugin they all are also part of  javascript functions</p>
45975252	Execute javascript from python 3 with arguments client side	javascript|python	2017-08-31 07:04:14.520000 UTC	"<p>Edit 2: I'm realizing more and more that this might be a hack that I am looking for, which most likely wont work considering companies work to prevent code injection. Now I wouldn't say this is code injection but more of the lines of variable injection. If anyone has any insight on this problem please provide it :) Thanks</p>  <p>I have searched around a bit but haven't really found what I am looking for. </p>  <p>I have this project in which there is a excel file with a bunch of numbers. I need to take these numbers and one by one search in a system. This system is based on HTML and javascript. </p>  <p>My question is, how can I with python 3 take these numbers and make a search in this system. The search function on the website is a javascript and I am not sure on how I can execute that javascript with my number as a argument.</p>  <p>Edit: I find my original text to be misleading so I have tried to make it more understandable and made a small 1,2,3 step of how the project is suppose to work and some text to explain whats happening.</p>  <p>1.Take data from excel cell A:1</p>  <p>2.Input the data in a closed search system</p>  <p>3.Based on the output set customer status to 1 or 0</p>  <p>4.Input the binary status in excel file B:1(0,1)</p>  <p>4.Take data from excel cell A:2</p>  <p>5.Rinse and repeat</p>  <p>The closed system I am talking about is a billing system for clients at a company I work for. The search function is written in HTML/javascript I want to use python as much as possible in this project as I am most comfortable with it. I want to extract the data from excel using python (and xlsxwriter). This data is then to be injected into a website containing a javascript search function. Python will then extract the output of that search function and determine the binary status of the search. (if the client is active in our systems or not)</p>  <p>The reason for this is because we sometimes get these huge excel files of 300+ customers that we need to handle in some way.  Many of these customers are inactive and I want to subtract these customers from the file and potentially reducing the customers per file by 100-150.</p>  <p>If there is any questions or confusing about what I want to accomplish please ask. Thank you for helping out!</p>  <p>The code below is taken directly from the closed billing system and I have no way to impact that code directly. </p>  <pre><code> HTML  &lt;input name=""pointId"" value="""" size=""28"" onkeypress=""return validatePointId(this.form, event);""&gt;   Javascript function validateProductId(productObj,event){ //Trim the space in the begining and end of the string. var productIdValue  = productObj.value; var productIdTrim = productIdValue.replace(/^\s*/, """").replace(/\s*$/, """"); var digExp = /^[0-9]$/; var notPresent= false;     if ( event.keyCode == 13  || event.which == 13 ) {   for (var i=0;i&lt;productIdTrim.length;i++){     if (!digExp.test(productIdTrim.charAt(i))){                             notPresent = true;                     } } if (notPresent){     alert(""Format: 0000000"");     productObj.value = """";     productObj.focus();     return false; }else{      productObj.value = productIdTrim;      submit(); } }      } function validateProductIdOnclick(productObj,currentFormObj,event){         //Trim the space in the begining and end of the string.        if ( event.keyCode == 13  || event.which == 13 || event.keyCode == 0 || event.which == 0 )         {          var productIdValue  = document.getElementById(productObj).value;         var productIdTrim = productIdValue.replace(/^\s*/, """").replace(/\s*$/, """");         var digExp = /^[0-9]$/;         var notPresent= false;         if (productIdValue != """")     {            for (var i=0;i&lt;productIdTrim.length;i++){                 if (!digExp.test(productIdTrim.charAt(i))){                                 notPresent = true;                         }            }     }         else     {       alert(""Inget produktinstansID är angivet."");            document.getElementById(productObj).value = """";            document.getElementById(productObj).focus();            return false;     }         if (notPresent){            alert(""Format: 0000000"");            document.getElementById(productObj).value = """";        document.getElementById(productObj).focus();        return false;         }else{            document.getElementById(productObj).value = productIdTrim;        currentFormObj.submit();         }       }  } </code></pre>"	45975458	"<p>There is always option to use Node.js,more <a href=""http://www.sohamkamani.com/blog/2015/08/21/python-nodejs-comm/"" rel=""nofollow noreferrer"">python,node.js</a></p>  <p>Then write your program as .js file and execute it using the subprocess. More about <a href=""https://docs.python.org/3/library/subprocess.html?highlight=subprocess"" rel=""nofollow noreferrer"">subprocess</a></p>"
45986266	Is it possible to design GUI with HTML+CSS+JavaScript but it will actually run python script?	javascript|python|html|css|user-interface	2017-08-31 16:32:25.727000 UTC	"<p>I've built a very simple assistant app in python which can do very basic tasks like taking notes, reminding you, stopwatch, timer, web scrape for news feeds etc. tkinter seems confusing and looks oldish to me. On the other hand, css js seems much easier to design gui side and way more elegant looking. Is it possible to design a desktop gui app (may be with electron?) using HTML+CSS+JavaScript but it will run my old python codes?</p> <p>I've been coding for only two months and i suck at it. Please excuse my newbiness.</p> <p>TLDR: Simply, i want to make the gui side using HTML+CSS+JavaScript to take user input but then it will run python scripts and shows output in the gui app. Is it possible?</p>"	45986381	"<p>It can't be done, you'd have to make it like a web app (although with local webserver serving python responses)</p>  <p>EDIT: if you don't mind running it in webbrowser, you can make quite easily webserver, that will evaluate your queries...</p>"
45986266	Is it possible to design GUI with HTML+CSS+JavaScript but it will actually run python script?	javascript|python|html|css|user-interface	2017-08-31 16:32:25.727000 UTC	"<p>I've built a very simple assistant app in python which can do very basic tasks like taking notes, reminding you, stopwatch, timer, web scrape for news feeds etc. tkinter seems confusing and looks oldish to me. On the other hand, css js seems much easier to design gui side and way more elegant looking. Is it possible to design a desktop gui app (may be with electron?) using HTML+CSS+JavaScript but it will run my old python codes?</p> <p>I've been coding for only two months and i suck at it. Please excuse my newbiness.</p> <p>TLDR: Simply, i want to make the gui side using HTML+CSS+JavaScript to take user input but then it will run python scripts and shows output in the gui app. Is it possible?</p>"	45986589	"<p>The popular form of Javascript or ES6 (which you are talking about) is designed to run in browser, so, the limitations are that it can only make calls via browser, i.e. it cannot directly interact with the OS like python's OS module. This means you will need a web-service in your computer that would run a specific python code and return you the responses, this requires a web-service/web-framework, preferably python's like Django, Flask which will run the python script for you because they can make OS calls on the server machine. I do think other non-python web-services are cacpable to do so, but of course, the natural preference would be 'Python-based services'. </p>  <p><b> Sidenote</b>:  If the case was with Node.js(i.e. the server-side js) and not ES6(client-side browser-run)  you would have an upperhand i.e. you could invoke python scripts on your server because node.js like the python-based web-servers do support os calls.    </p>"
45986266	Is it possible to design GUI with HTML+CSS+JavaScript but it will actually run python script?	javascript|python|html|css|user-interface	2017-08-31 16:32:25.727000 UTC	"<p>I've built a very simple assistant app in python which can do very basic tasks like taking notes, reminding you, stopwatch, timer, web scrape for news feeds etc. tkinter seems confusing and looks oldish to me. On the other hand, css js seems much easier to design gui side and way more elegant looking. Is it possible to design a desktop gui app (may be with electron?) using HTML+CSS+JavaScript but it will run my old python codes?</p> <p>I've been coding for only two months and i suck at it. Please excuse my newbiness.</p> <p>TLDR: Simply, i want to make the gui side using HTML+CSS+JavaScript to take user input but then it will run python scripts and shows output in the gui app. Is it possible?</p>"	45987004	"<p>Kinda, but its real ugly.  If you can host your data and whatnot the other approaches will work.  </p>  <p>You have to build your project around nw.js.  Essentially it is a Chromium build that adds local file system access back in.  You can build an HTML+JS Front end and access a node.js backend running in the same thread.  Via node you can shellout to call your python program, or run a local  python web server.</p>  <p>I built a mapping app that allowed the user to select a local file, process it on the local machine with python and display the results in an interactive D3 app with geojson based layers of the UnitedStates.  Since the data was proprietary I could not host it outside the company. Since I was not IT, I could not host it inside the company. nw.js allowed me to package everything into an installer and deploy to other people within the company as a standalone app.</p>  <p>See here for more information:</p>  <p>Official site: <a href=""http://nwjs.io"" rel=""nofollow noreferrer"">http://nwjs.io</a></p>  <p>Official documentation: <a href=""http://docs.nwjs.io/"" rel=""nofollow noreferrer"">http://docs.nwjs.io/</a></p>  <p>Introduction</p>  <p>NW.js is an app runtime based on Chromium and node.js. You can write native apps in HTML and JavaScript with NW.js. It also lets you call Node.js modules directly from the DOM and enables a new way of writing native applications with all Web technologies.</p>  <p>It was created in the Intel Open Source Technology Center.</p>  <p>Features</p>  <ul> <li>Apps written in modern HTML5, CSS3, JS and WebGL. </li> <li>Complete supportfor Node.js APIs and all its third party modules. </li> <li>Good performance:    Node and WebKit run in the same thread: Function calls are made    straightforward; objects are in the same heap and can just reference    each other;</li> <li>Easy to package and distribute apps. Available on Linux,    Mac OS X and Windows</li> </ul>"
45990691	simple if statement translated from javascript to python	javascript|python	2017-08-31 22:00:29.530000 UTC	"<p>I currently program in Python and am learning javascript with Nicolas C. Zakas <a href=""https://rads.stackoverflow.com/amzn/click/com/1118026691"" rel=""nofollow noreferrer"" rel=""nofollow noreferrer"">Professional Javascript for Web Developers</a>. So I came across this example:</p>  <pre><code>if (test){ test = false; alert(test); } </code></pre>  <p>So I tried to compare it to what it'd be like to write the same concept in Python</p>  <pre><code>if test == False:    print (test) </code></pre>  <p>Is my comparison right?</p>"	45990727	"<blockquote>   <p>Is my comparison right?</p> </blockquote>  <p>Not exactly. </p>  <ul> <li>The Javascript example is testing if <code>test</code> is true in a boolean context. You can do the exact same thing in Python.</li> <li>The Javascript example also sets <code>test</code> to false, which you don't do</li> </ul>  <p>With the above changes your code becomes:</p>  <pre><code>if test:     test = False     print (test) </code></pre>  <p>Simple, actually. One big point to note however is that Python and Javascript have very different ideas of what objects are consider ""truthy"" and ""falsy"". If unsure, best to check the docs for each language.</p>"
45990691	simple if statement translated from javascript to python	javascript|python	2017-08-31 22:00:29.530000 UTC	"<p>I currently program in Python and am learning javascript with Nicolas C. Zakas <a href=""https://rads.stackoverflow.com/amzn/click/com/1118026691"" rel=""nofollow noreferrer"" rel=""nofollow noreferrer"">Professional Javascript for Web Developers</a>. So I came across this example:</p>  <pre><code>if (test){ test = false; alert(test); } </code></pre>  <p>So I tried to compare it to what it'd be like to write the same concept in Python</p>  <pre><code>if test == False:    print (test) </code></pre>  <p>Is my comparison right?</p>"	45990729	<pre><code>if test:     test = False     print(test) </code></pre>
45990691	simple if statement translated from javascript to python	javascript|python	2017-08-31 22:00:29.530000 UTC	"<p>I currently program in Python and am learning javascript with Nicolas C. Zakas <a href=""https://rads.stackoverflow.com/amzn/click/com/1118026691"" rel=""nofollow noreferrer"" rel=""nofollow noreferrer"">Professional Javascript for Web Developers</a>. So I came across this example:</p>  <pre><code>if (test){ test = false; alert(test); } </code></pre>  <p>So I tried to compare it to what it'd be like to write the same concept in Python</p>  <pre><code>if test == False:    print (test) </code></pre>  <p>Is my comparison right?</p>"	45990737	"<p>I don't have the book, but if <code>test</code> is just a boolean, then you have it just slightly backwards: the JavaScript version checks if <code>test</code> is true, so in Python, you would want <code>if test == True</code> or more simply, <code>if test</code>.</p>  <p>However, if <code>test</code> is anything else, it gets more complex, because if ""truthy"" values in both <a href=""https://developer.mozilla.org/en/docs/Glossary/Truthy"" rel=""nofollow noreferrer"">JavaScript</a> and <a href=""https://docs.python.org/2.4/lib/truth.html"" rel=""nofollow noreferrer"">Python</a>, which means the behaviour is not necessarily the same.</p>"
46037020	Handling javascript dialog box on Selenium Python	javascript|python|selenium|modal-dialog|alert	2017-09-04 12:25:06.123000 UTC	"<p>I am writing an automation code for a webpage using Selenium webdriver on Python. But, at a certain point it asks for Captcha. So, I decided to manually enter captcha using a javascript dialog box pop-up. But the problem with my code is that for successful implementation it uses wait and automatically accepts the alert box after wait(). And, if I press Enter after entering the Captcha, this error is thrown </p>  <blockquote>   <p>selenium.common.exceptions.UnexpectedAlertPresentException</p> </blockquote>  <p>Here is my code - </p>  <pre><code>def captcha():     driver.execute_script(""var a = prompt('Enter Captcha', '');document.body.setAttribute('data-id', a)"")     time.sleep(7)     driver.switch_to.alert.accept()     driver.find_element_by_id(""captcha_code"").send_keys(driver.find_element_by_tag_name('body').get_attribute('data-id'))     driver.find_element_by_id(""captcha_code"").send_keys(Keys.RETURN) </code></pre>  <p>To improve it I tried this code, in which a <em>while loop</em> is checking every second for presence of Alert box, but it isn't working.</p>  <pre><code>def captcha():     driver.execute_script(""var a = prompt('Enter Captcha', '');document.body.setAttribute('data-id', a)"")     while EC.alert_is_present():         time.sleep(1)         print(""Alert Present"")         try:             driver.switch_to.alert.accept()         except selenium.common.exceptions.NoAlertPresentException:             print(""Error Encountered..."")             continue         driver.find_element_by_id(""captcha_code"").send_keys(driver.find_element_by_tag_name('body').get_attribute('data-id'))         driver.find_element_by_id(""captcha_code"").send_keys(Keys.RETURN) </code></pre>  <p>It always prints - </p>  <blockquote>   <p>Alert Present</p> </blockquote>  <p>And continues printing this for a long time even if I there is no alert box present.</p>"	46050545	<p>Change</p>  <pre><code>while EC.alert_is_present(): </code></pre>  <p>To</p>  <pre><code>while EC.alert_is_present()(driver) : </code></pre>  <p><code>EC.alert_is_present()</code> returns a function so it will always evaluate to true </p>
46042148	How to manage errors with bokeh library (Python + JavaScript) and show them on the user interface?	javascript|python|exception|bokeh|custom-exceptions	2017-09-04 18:02:28.110000 UTC	"<p>I am working in a <a href=""http://bokeh.pydata.org/en/latest/docs/user_guide/server.html#building-bokeh-applications"" rel=""nofollow noreferrer"">Bokeh Server Application</a> using the Python library <strong>""Bokeh""</strong> and I usually get two types of errors. </p>  <ul> <li><strong>JavaScript errors</strong> on the Chromium console</li> <li><strong>Python errors</strong> on the server side, they appear in the Tornado logger. Bokeh works with the Tornado Web Server</li> </ul>  <p>What I could achieve is to create manual exceptions inheriting the <code>Exception</code> class in python. In this way I can write custom messages and run some actions when the error is raised with this class.</p>  <pre class=""lang-python prettyprint-override""><code>class ManualException(Exception):     def __init__(self, value):         self.value = value          # some actions      def __str__(self):         return repr(             'MANUAL ERROR\n' + self.value         ) </code></pre>  <p>But if any other exception occurs then I do not know how to capture them to run some custom actions. I have tried this:</p>  <pre class=""lang-python prettyprint-override""><code>try:     n = 9 / 0 except Exception:     tb = sys.exc_info()[2]     raise ManualException('ZERO ERROR').with_traceback(tb) </code></pre>  <p>Here I have to catch any error manually and I raise them with my manual created class, then both appear in the python logger. Is this the proper way to do this?</p>  <pre><code>2017-09-04 17:08:58,872 Error running application handler &lt;bokeh.application.handlers.directory.DirectoryHandler object at 0x0000023E2435C208&gt;: 'MANUAL ERROR\nZERO ERROR' File ""main.py"", line 11, in &lt;module&gt;: n = 9 / 0 Traceback (most recent call last): File ""[...]\main.py"", line 11, in &lt;module&gt;     n = 9 / 0 ZeroDivisionError: division by zero  During handling of the above exception, another exception occurred:  Traceback (most recent call last): File ""[...]\lib\site-packages\bokeh\application\handlers\code_runner.py"", line 125, in run     exec(self._code, module.__dict__) File ""[...]\main.py"", line 14, in &lt;module&gt;     raise ManualException('ZERO ERROR').with_traceback(tb) File ""[...]\main.py"", line 11, in &lt;module&gt;     n = 9 / 0 exceptions.ManualException: 'MANUAL ERROR\n'ZERO ERROR' </code></pre>  <p>Anyway I want avoid this because I want to show all kind of errors to the user, even if I do not use <code>try-except</code> to capture exceptions.</p>  <p>On the other hand if a python error happens, a JavaScript message is shown. So I think the best option is to override some JavaScript method to run some custom js code. How could I achieve this? Is this achievable?</p>  <p><a href=""https://i.stack.imgur.com/vUOXm.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/vUOXm.png"" alt=""enter image description here""></a></p>"	62476580	"<p>I got <a href=""https://stackoverflow.com/a/62475924/4891717"">an answer in other SO question</a>. Some listeners can be added to the window in order to get the JavaScript error messages</p> <blockquote> <p>You can handle it as an event listener on window object.</p> <pre><code>window.onunhandledrejection = function(event) {   console.warn(`UNHANDLED PROMISE REJECTION: ${event.reason}`); };  window.onerror = function(event) {   console.warn(`UNHANDLED ERROR: ${event.message}`); }; </code></pre> <p>Or also like this:</p> <pre><code> window.addEventListener('error', function(event) { ... }) </code></pre> <p>You can read more about the <code>unhandledrejection</code> event on the <a href=""https://developer.mozilla.org/en-US/docs/Web/API/Window/unhandledrejection_event"" rel=""nofollow noreferrer"">MDN web docs here</a> and the <code>onerror</code> event on the <a href=""https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onerror"" rel=""nofollow noreferrer"">docs here</a></p> </blockquote>"
46043751	"Django: javascript needs to call a python script, what location do I put it in?"	javascript|python|django	2017-09-04 20:36:43.867000 UTC	"<p>I get really confused about django and file locations a lot, and I'm on django 1.10. But in my static/(django-proj-name)/js/ folder (just showing the way  I have my main.js file and I need to call a python script, in conjunction with the <a href=""http://loopj.com/jquery-tokeninput/"" rel=""nofollow noreferrer"">jquery tokeninput plugin</a>. Lets call the script <code>keywords.py</code></p>  <p>This script is going to need to call all instances of a model, <code>Keyword</code>, so I need to be able to import from my models file.</p>  <p>Im' a bit inexperienced with django, but from reviewing some of the projects I've seen over the summer I was startinng to believe that including the line, <code>from (django-proj-name).models import *</code> was the main way to import from models. This at least works for all of the files that I have in my /management/commands/ folder.</p>  <p>But i tried putting <code>keywords.py</code> in my static folder just because I know at the very least I can use the <code>{% static %}</code> template tag to find the file in html. I ran the file without manage.</p>  <pre><code>Traceback (most recent call last):   File ""../../management/commands/import_statements.py"", line 5, in &lt;module&gt;     from gtr_site.models import *   ImportError: No module named gtr_site.models </code></pre>  <p>Though I have the same importation line, again, in /management/commands/. And that doesn't cause any problems.</p>  <p>So I didn't put the file in the ""correct"" file location... I didn't put keywords.py in a place where</p>  <ol> <li><p>I know how to import from my models.py file from the keywords.py script's location</p></li> <li><p>My javascript file can find it and run it without crashing. This script needs to be able to successfully import from models.</p></li> </ol>  <p>so where am I supposed to put this script, or how can I specify a location for it?</p>"	46044007	"<p>Let's say you have a js library that expects data in the following format:</p>  <pre><code> {""results"": [     {""name"": ""Foo"", ""number"": 1},      ...,      {""name"": ""Bar"", ""number"": 999}  ]} </code></pre>  <p>You started an application called myapi:</p>  <pre><code>  $ django manage.py startapp myapi </code></pre>  <p>And suppose you have a Model like this at <code>myapi/models.py</code>:</p>  <pre><code> from django.db import models   class Foo(models.Model):      name = models.CharField(max_lenght=100),      number = models.IntegerField() </code></pre>  <p>In <code>myapp/views.py</code> define the following view:</p>  <pre><code>from django.http import JsonResponse from django.views import View from .models import Foo  class FooList(View):     def get(self, request, *args, **kwargs):         qs = list(Foo.objects.values('name', 'number').all())         data = {""results"": qs}         return JsonResponse(data) </code></pre>  <p>Then map this view to some url. For the sake of simplicity let's just add this to your main urls.py file:</p>  <pre><code>url('api/v1/foo/$', FooList.as_view(), name='foo-list'), </code></pre>  <p>Now you should be able to reach it from the browser. The example below uses jQuery:</p>  <pre><code>$.getJSON('http://yourdomain.com/api/v1/foo/',      function(data, textStatus, jqXHR) {         console.log(data);     } ) </code></pre>  <p>That is it. I did this from memory so you probably will find a few errors or missing imports - but this should put you on the right track.</p>"
46098385	communicate between python script on server side and javascript in the web-browser	javascript|python|node.js|socket.io	2017-09-07 14:01:56.263000 UTC	"<p>I have a python script which resides on a web-server (running node.js) and does some machine learning computation. The data has to be supplied to the python script using javascript running in web-browser. How can this be done? I want to know the complete setup. For now, the server is the localhost only. </p>"	46098475	<p>I believe you need a simple API on the server which accept input from the client which can be done via JavaScript.</p>  <p>There are several technologies you could have a look at:</p>  <ul> <li>Ajax.</li> <li>WebSockets.</li> </ul>
46098385	communicate between python script on server side and javascript in the web-browser	javascript|python|node.js|socket.io	2017-09-07 14:01:56.263000 UTC	"<p>I have a python script which resides on a web-server (running node.js) and does some machine learning computation. The data has to be supplied to the python script using javascript running in web-browser. How can this be done? I want to know the complete setup. For now, the server is the localhost only. </p>"	46098520	"<p>The best way is to use <code>zerorpc</code>, a socket server and client for both Python and Node.js. </p>  <p>Installing on Python:</p>  <pre><code>pip install zerorpc </code></pre>  <p>Installing on Node:</p>  <pre><code>npm install zerorpc </code></pre>  <p>Python server file:</p>  <pre><code>import zerorpc  class HelloRPC(object):    def hello(self, name):        print ""message from host: %s"" % name        return raw_input(""Enter your message: "")   s = zerorpc.Server(HelloRPC()) s.bind(""tcp://0.0.0.0:4242"") s.run() </code></pre>  <p>Node.js client file:</p>  <pre><code>var express = require('express'); var bodyParser = require('body-parser'); var app = express(); var zerorpc = require(""zerorpc"");  var client = new zerorpc.Client(); client.connect(""tcp://127.0.0.1:4242"");  app.use(bodyParser.urlencoded({ extended: true }));  app.post('/myaction', function(req, res) {   client.invoke(""hello"", ""RPC"", function(error, res, more) {   console.log(res);   res.send(req.body.name);   });  });  app.listen(8080, function() { console.log('Server running at http://127.0.0.1:8080/'); }); </code></pre>  <p>While the example code here is relatively simple, it should get you started. The overall logic of this setup is as follows:</p>  <ol> <li>Use express to get data from webpage (stored as <code>req.body.name</code>)</li> <li>Take this data and send it via <code>zerorpc</code> to your Python server, which can process the data and send it back to the Node.js <code>zerorpc</code> client.</li> </ol>"
46102960	Python Webscrape website with javascript	javascript|python-3.x|web-scraping|beautifulsoup	2017-09-07 18:30:54.000000 UTC	"<p>This code used to work for me. </p>  <pre><code>from bs4 import BeautifulSoup from urllib.request import urlopen  search = 'some_website' BeautifulSoup(urlopen(search), ""lxml"") </code></pre>  <p>But now I get the following error.</p>  <pre><code>HTTPError: HTTP Error 403: Forbidden </code></pre>  <p>I can't do a simple request, because I need to scrape javascript information. </p>  <pre><code>hdr = {'User-Agent': 'Mozilla/5.0'} req = Request(site,headers=hdr) page = urlopen(req) soup = BeautifulSoup(page) print(soup) </code></pre>  <p>I get the following in the soup.</p>  <pre><code>&lt;noscript&gt;Please enable JavaScript to view the page content.&lt;/noscript&gt; </code></pre>  <p>How do I get the JavaScript off a web page when I am am getting the ""HTTP Error 403: Forbidden"" error? Thanks for the help in advance.</p>  <p>I'm using python 3. Please let me know if you need more information.</p>"	46135230	"<p>QtWebKit got deprecated upstream in Qt 5.5 and removed in 5.6.</p>  <p>You may want to switch to PyQt5.QtWebEngineWidgets.  <a href=""http://pyqt.sourceforge.net/Docs/PyQt5/introduction.html#module-PyQt5.QtWebEngineWidgets"" rel=""nofollow noreferrer"" title=""Link"">link</a></p>"
46105070	Python Javascript CryptoJS	javascript|python|encryption|aes	2017-09-07 21:04:19.190000 UTC	"<p>I am looking for a module that I can use in both python &amp; javascript so that can encrypt something in python then decrypt in javascript if I pass in a key (and vice versa).</p>  <p>So far I've checked out SlowAES and CryptoJS, but cant find any good documentation or examples. Is anyone able to help?</p>  <p>Below is my attempt to get this working:</p>  <p>JS:</p>  <pre><code>var encoded_message = 'MTAxMTEyMTMxNDE1MTYxN2asfw3LtCtoL+mvWtJsIVSVCsvZdBIvZWWRuKEI85nd'; var my_iv = CryptoJS.enc.Base64.parse('1011121314151617'); var my_key = CryptoJS.enc.Base64.parse('824601be6c2941fabe7fe256d4d5a2b7');  console.log('my iv [' + my_iv + ']'); console.log('my key [' + my_key + ']'); console.log('my enc message [' + encoded_message + ']');  var data = CryptoJS.AES.decrypt(encoded_message, my_key, { iv: my_iv, mode: CryptoJS.mode.CBC }); console.log(data); var dec = CryptoJS.enc.Hex.stringify(data); console.log('data [' + dec + ']');   var encoded_message = CryptoJS.enc.Base64.parse('MTAxMTEyMTMxNDE1MTYxN2asfw3LtCtoL+mvWtJsIVSVCsvZdBIvZWWRuKEI85nd'); console.log('\n\n\n'); console.log('message [' + encoded_message + ']'); </code></pre>  <p>Python:</p>  <pre><code>import os, random, struct from Crypto.Cipher import AES from Crypto import Random import base64 class AESCipher:     def __init__(self, key):         BS = 16         self.pad = lambda s: s + (BS - len(s) % BS) * chr(BS - len(s) % BS)         self.unpad = lambda s : s[0:-ord(s[-1])]         self.key = self.pad(key[0:16])      def encrypt(self, raw):         raw = self.pad(raw)         iv = ""1011121314151617""         cipher = AES.new(self.key, AES.MODE_CBC, iv)         return base64.b64encode(iv + cipher.encrypt(raw))      def decrypt(self, enc):         enc = enc.replace(' ', '+')         enc = base64.b64decode(enc)         iv = enc[:16]         cipher = AES.new(self.key, AES.MODE_CBC, iv)         return self.unpad(cipher.decrypt(enc[16:]))   def main():           message = 'this is my new message'     print message[:16]      cipher = AESCipher('824601be6c2941fabe7fe256d4d5a2b7')     encrypteddata = cipher.encrypt('work you bloody thing!')     print encrypteddata               decryptdata =cipher.decrypt(encrypteddata)     print decryptdata   main() </code></pre>"	46105149	"<p>I've recently been using sjcl in Javascript,..  <a href=""http://bitwiseshiftleft.github.io/sjcl/"" rel=""nofollow noreferrer"">http://bitwiseshiftleft.github.io/sjcl/</a></p>  <p>They also appears to be a python compatible version. <a href=""https://pypi.python.org/pypi/sjcl"" rel=""nofollow noreferrer"">https://pypi.python.org/pypi/sjcl</a></p>  <p>At it's simplest you can just do -></p>  <pre><code>sjcl.encrypt(""password"", ""data"") </code></pre>  <p>and</p>  <pre><code>sjcl.decrypt(""password"", ""encrypted-data"") </code></pre>  <p>But you still can do low level stuff with it too.</p>"
46108796	Is there a function similar to .format() from Python in Javascript?	javascript|python|web	2017-09-08 04:43:58.217000 UTC	"<p>Is there a way to write <code>('{0} {1}'.format(1, 2))</code> from Python in JavaScript ??</p>"	46108821	"<p>I use the following:</p>  <pre><code>String.prototype.format = function () {     var args = [].slice.call(arguments);     return this.replace(/(\{\d+\})/g, function (a) {         return args[+(a.substr(1, a.length - 2)) || 0];     }); }; </code></pre>  <p>Use it like</p>  <pre><code>var testString = 'some string {0}'; testString.format('formatting'); // result = 'some string formatting' </code></pre>"
46108796	Is there a function similar to .format() from Python in Javascript?	javascript|python|web	2017-09-08 04:43:58.217000 UTC	"<p>Is there a way to write <code>('{0} {1}'.format(1, 2))</code> from Python in JavaScript ??</p>"	46108822	"<p>There are <a href=""https://www.npmjs.com/package/string-format"" rel=""nofollow noreferrer"">packages</a> providing that functionality and <a href=""https://lodash.com/docs#template"" rel=""nofollow noreferrer"">libraries that include it</a>, but nothing built into JavaScript. If your format string is fixed and doesn’t use anything beyond simple interpolation, <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals"" rel=""nofollow noreferrer"">“template literals”</a> exist in ES6:</p>  <pre><code>`${1} ${2}` </code></pre>  <p>and the obvious ES5 version isn’t terrible:</p>  <pre><code>1 + ' ' + 2 </code></pre>"
46124579	Confusion on getting Javascript to see a lsit of lists from Python via JSON as such	javascript|python|json|django	2017-09-08 21:09:27.763000 UTC	"<p>I am working on a Django app.  I need to pass back a few parameters from the server, which I do with this code:</p>  <pre><code>num_periods = 25     num_traces = 2 opacities = [0.5, .99] ys = [[1,2,3,4,5],[7,6,5,4,3]]  response = {'text' : request.POST['value'],             'num_periods' : num_periods,             'num_traces' : num_traces,             'opacity': opacities,             'ys': ys            }  return JsonResponse(response) </code></pre>  <p>On the client side, in the Ajax callback, I have code that looks like this:</p>  <pre><code>    success : function(data) {         console.log('num traces = ' + data.num_traces);         console.log('opacitiees = ' + data.opacity);         console.log('data = ' + data.ys); </code></pre>  <p>but, <code>console.log(ys)</code> gives <code>data = 1,2,3,4,5,7,6,5,4,3</code>, which looks flattened.</p>  <p>However, if I do <code>console.log(ys[1])</code>, it 'looks like' an array: <code>7,6,5,4,3</code>, though with no brackets.  So, JS is aware of the nested list structure. But any attempt to get it into a list of lists of numbers fails.  for example this code:</p>  <pre><code>z=[] z.push(ys[0]) z.push(ys[1]) </code></pre>  <p>gives me back <code>z = 1,2,3,4,5,7,6,5,4,3</code> when I do <code>console.log(""z = "" + z)</code></p>  <p>Something deeply confusing is happening here.  I also tried <code>Object.values(ys[0])</code>, but still this does not give a list.  Other ideas I have seen are a clever use of slice like so : </p>  <pre><code> var ys=[];  while(list.length) ys.push(list.splice(0,5));  console.log(""ys[0]=""+ys[0]); </code></pre>  <p>which gives      ys[0]=1,2,3,4,5,7,6,5,4,3</p>  <p>How do you take the JSON that was received from Python and get it to look like the basic list of lists that I clearly need?  Stuffing '[' and ']' around things before assigning does no good...</p>  <p>What seems very confusing is that if I do a 'loopback' within Javascript by doing something like </p>  <pre><code>var foo = JSON.parse(JSON.stringify( { 'ys' : [[1,2,3],[4,5,6]])) </code></pre>  <p>then things look better: the type of foo.ys is now <code>Array[ Array[5], Array[5] ]</code>.   But the type of what I am getting with the actual Python-JS transfer is just that list of numbers, with type 'Object'.</p>"	46124628	"<p>(1) use the development tools of your browser to see what is sent back and forth between the server and the browser (F12 on all browsers).</p>  <p>(2) you can use commas in <code>console.log('ys=', ys);</code></p>  <p>I'd be very surprised if it isn't in fact a list of lists with the same values you sent.</p>"
46124579	Confusion on getting Javascript to see a lsit of lists from Python via JSON as such	javascript|python|json|django	2017-09-08 21:09:27.763000 UTC	"<p>I am working on a Django app.  I need to pass back a few parameters from the server, which I do with this code:</p>  <pre><code>num_periods = 25     num_traces = 2 opacities = [0.5, .99] ys = [[1,2,3,4,5],[7,6,5,4,3]]  response = {'text' : request.POST['value'],             'num_periods' : num_periods,             'num_traces' : num_traces,             'opacity': opacities,             'ys': ys            }  return JsonResponse(response) </code></pre>  <p>On the client side, in the Ajax callback, I have code that looks like this:</p>  <pre><code>    success : function(data) {         console.log('num traces = ' + data.num_traces);         console.log('opacitiees = ' + data.opacity);         console.log('data = ' + data.ys); </code></pre>  <p>but, <code>console.log(ys)</code> gives <code>data = 1,2,3,4,5,7,6,5,4,3</code>, which looks flattened.</p>  <p>However, if I do <code>console.log(ys[1])</code>, it 'looks like' an array: <code>7,6,5,4,3</code>, though with no brackets.  So, JS is aware of the nested list structure. But any attempt to get it into a list of lists of numbers fails.  for example this code:</p>  <pre><code>z=[] z.push(ys[0]) z.push(ys[1]) </code></pre>  <p>gives me back <code>z = 1,2,3,4,5,7,6,5,4,3</code> when I do <code>console.log(""z = "" + z)</code></p>  <p>Something deeply confusing is happening here.  I also tried <code>Object.values(ys[0])</code>, but still this does not give a list.  Other ideas I have seen are a clever use of slice like so : </p>  <pre><code> var ys=[];  while(list.length) ys.push(list.splice(0,5));  console.log(""ys[0]=""+ys[0]); </code></pre>  <p>which gives      ys[0]=1,2,3,4,5,7,6,5,4,3</p>  <p>How do you take the JSON that was received from Python and get it to look like the basic list of lists that I clearly need?  Stuffing '[' and ']' around things before assigning does no good...</p>  <p>What seems very confusing is that if I do a 'loopback' within Javascript by doing something like </p>  <pre><code>var foo = JSON.parse(JSON.stringify( { 'ys' : [[1,2,3],[4,5,6]])) </code></pre>  <p>then things look better: the type of foo.ys is now <code>Array[ Array[5], Array[5] ]</code>.   But the type of what I am getting with the actual Python-JS transfer is just that list of numbers, with type 'Object'.</p>"	46124756	"<p>The problem is that here it (implicitly) calls <code>toString</code>, which you can see doesn't put any square brackets around the array. That means it doesn't put brackets around smaller arrays either - so it <em>looks</em> like it's flat. To make it look like the object in your code, you can convert it to JSON:</p>  <pre><code>JSON.stringify([[1, 2, 3], [4, 5, 6]]) </code></pre>  <p>will be</p>  <pre><code>""[[1,2,3],[4,5,6]]"" </code></pre>  <p>which you can then log or do more with. (while <code>[[1, 2, 3], [4, 5, 6]].toString()</code> is <code>""1,2,3,4,5,6""</code>). All of your actual data structures are entirely as you expected, the problem is just in the step of turning them into strings for output - so you don't need to do any more processing on the variables themselves, until you need to represent them as strings.</p>"
46125770	select all checkboxes in Python-CGI Web application with javascript	javascript|python|html|python-2.7|cgi	2017-09-08 23:33:51.087000 UTC	"<p>I am working on <code>Python-CGI</code> Web application. I have one table with 3 columns, in which 3rd column has checkboxes. I am trying to use <code>javascript</code> for <code>select all</code> checkboxes functionality to select all the checkboxes of 3rd column.</p>  <p>This is my script:</p>  <pre><code>#!/usr/bin/python import cgi, cgitb cgitb.enable() print ""Content-type:text/html\n"" print ""\n\n"" print ""&lt;html&gt;"" print ""&lt;body&gt;""  bigtempl = '''&lt;html&gt; &lt;head&gt; &lt;/head&gt; &lt;body&gt;     &lt;center&gt;         &lt;script language=""JavaScript""&gt;         function selectAll(source) {                 checkboxes = document.getElementsByName('colors[]');                 for(var i in checkboxes)                         checkboxes[i].checked = source.checked;         }         &lt;/script&gt;         &lt;table border=""0"" cellspacing=""15""&gt;         &lt;tr&gt;         &lt;th&gt; Number &lt;/th&gt;         &lt;th&gt; Letter &lt;/th&gt;         &lt;th&gt; Select All &lt;input type=""checkbox"" id=""selectall"" onClick=""selectAll(this)"" /&gt; &lt;/th&gt;         &lt;/tr&gt;         {rows}         &lt;/table&gt;     &lt;/center&gt;     &lt;/body&gt; &lt;/html&gt;''' rowtempl = """""" &lt;tr&gt;     &lt;td&gt; {number} &lt;/td&gt;     &lt;td&gt; {letter} &lt;/td&gt;     &lt;td&gt; &lt;input type=""checkbox"" name=""colors[]"" value={check} /&gt; &lt;/td&gt; &lt;/tr&gt; """"""  numbers = [0, 1, 2, 3] letters = [""A"", ""B"", ""C"", ""D""] checks = [11, 22, 33, 44]  lst = zip(numbers, letters, checks)  rows = [rowtempl.format(number=number, letter=letter, check=check) for number, letter, check in lst] rows = """".join(rows)  wholepage = bigtempl.format(rows=rows)  print wholepage print ""&lt;/body&gt;"" print ""&lt;/html&gt;"" </code></pre>  <p>Reference taken from <a href=""https://stackoverflow.com/questions/23599091/iterate-through-a-list-in-a-cgi-file-and-print-out-values-in-html"">here</a>.</p>  <p>This is the output of the script without the code <code>&lt;script&gt;...&lt;/script&gt;</code></p>  <p><a href=""https://i.stack.imgur.com/0QEV5.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/0QEV5.png"" alt=""enter image description here""></a></p>  <p>But it gets confused with <code>{}</code> of <code>&lt;script&gt;</code> tag. I am getting this error:</p>  <pre><code>A problem occurred in a Python script. Here is the sequence of function calls leading up to the error, in the order they occurred.  /root/cgi-bin/prblm.py in ()      50 rows = """".join(rows)      51  =&gt;   52 wholepage = bigtempl.format(rows=rows)      53       54 print wholepage wholepage undefined, bigtempl = '&lt;html&gt;\n&lt;head&gt;\n&lt;/head&gt;\n&lt;body&gt; \n &lt;center&gt;\n ... &lt;/table&gt;\n &lt;/center&gt;\n &lt;/body&gt;\n&lt;/html&gt;', bigtempl.format = &lt;built-in method format of str object&gt;, rows = '\n&lt;tr&gt;\n &lt;td&gt; 0 &lt;/td&gt;\n &lt;td&gt; A &lt;/td&gt;\n &lt;td&gt;...heckbox"" name=""colors[]"" value=44 /&gt; &lt;/td&gt;\n&lt;/tr&gt;\n'  &lt;type 'exceptions.KeyError'&gt;: '\n\t\tcheckboxes = document'       args = ('\n\t\tcheckboxes = document',)       message = '\n\t\tcheckboxes = document'  </code></pre>  <p>Can someone help me in resolving this issue? Is there any way I can use <code>javascript</code> with <code>Python</code> and <code>CGI</code>?</p>"	46126231	"<p>Thanks to this <a href=""https://stackoverflow.com/a/5466478/8565134"">answer</a>! It resolved the issue.</p>  <p>I added <code>{}</code> outside the function and worked fine!</p>  <pre><code>   &lt;script language=""JavaScript""&gt;     function selectAll(source) {{             checkboxes = document.getElementsByName('colors[]');             for(var i in checkboxes)                     checkboxes[i].checked = source.checked;     }}     &lt;/script&gt; </code></pre>"
46140055	urlib in python to post a form with javascript	python|authentication|hotspot	2017-09-10 11:08:59.377000 UTC	"<p>I hope someone could help me with my little problem or put me at least in the right direction. I'm looking for a solution to automatically login myself to a hotspot of the German Telekom with a python script.</p>  <p>I think urlib is the libary i want. my attempt with mechanize failed because the page javascript requires. In the post <a href=""https://stackoverflow.com/questions/4596966/submitting-form-python"">Submitting form (Python)</a> I found how to solve it but for now I am not getting the right values to send with.</p>  <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-html lang-html prettyprint-override""><code>&lt;div id=""hotspotLoginBox"" class=""Takt""&gt;     &lt;form id=""f_login"" name=""f_login"" method=""post"" action=""https://rlp.telekom.de/wlan/rlp.do"" enctype=""application/x-www-form-urlencoded""&gt;         &lt;input name=""t"" type=""hidden"" value=""fiebx=&amp;#017E;&amp;#20AD;&amp;#022A;&amp;#01C4;""/&gt;         &lt;input id=""f_login_submit"" name=""f_login_submit"" type=""submit"" style=""display:none"" tabindex=""999"" /&gt;         &lt;!--&lt;tm:submit tabindex=""999"" image="""" style=""display:none"" id=""f_login_submit""&gt;&lt;/tm:submit&gt;--&gt;  &lt;script type=""text/javascript""&gt;               /* &lt;![CDATA[ */                  if( jQuery('#Tloginerrmsgbox span.Terrmsg').first().children().length != 0 ) {                      jQuery('#Tloginerrmsgbox').removeClass('hide');                      jQuery('.borderBottom').removeClass('borderBottom');                      jQuery('.fonTabs').removeClass('marginBottom');                   }               /* ]]&gt; */         &lt;/script&gt;           &lt;div class=""Tinp withIcon ""&gt;             &lt;label for=""username""&gt;E-Mail Adresse oder Benutzername&lt;/label&gt;             &lt;input type=""text"" maxlength=""72"" value="""" autocapitalize=""off"" name=""username"" id=""username"" tabindex=""10""  class=""large"" /&gt;             &lt;div title=""Fallback Tooltip (no JS)"" id=""usernameTooltipWrapper_DSK"" class=""Tnomob tooltip top-left""&gt;                 &lt;div class=""font-size-default tooltip-icon icon""  &gt;i&lt;/div&gt;                 &lt;div class=""tooltip-content hide""  id=""user_tooltip_DSK""&gt;  &lt;p&gt;&lt;br/&gt;&lt;a href=""/TD/de_DE/web/help_and_service/how_it_works.html#a0"" target=""_blank""&gt;Telekom Festnetz-Kunden mit HotSpot Basic / HotSpot Flat&lt;/a&gt;&lt;br/&gt;&lt;br/&gt;&lt;a href=""/TD/de_DE/web/help_and_service/how_it_works.html#a0"" target=""_blank""&gt;Telekom Mobilfunk-Kunden mit HotSpot Basic / Hot Spot Flat&lt;/a&gt;&lt;br/&gt;&lt;br/&gt;&lt;a href=""/TD/de_DE/web/help_and_service/how_it_works.html#a0"" target=""_blank""&gt;Kunden mit HotSpot Konto / HotSpot Pass&lt;/a&gt;&lt;br/&gt;&lt;br/&gt;&lt;/p&gt; &lt;p class=""Tartsp""&gt;&amp;nbsp;&lt;/p&gt;  &lt;p class=""Tartsp""&gt;&amp;nbsp;&lt;/p&gt; &lt;/div&gt;             &lt;/div&gt;             &lt;div title=""Fallback Tooltip (no JS)"" id=""usernameTooltipWrapper_MOB"" class=""Tismob tooltip left""&gt;                 &lt;div class=""font-size-default tooltip-icon icon""  &gt;i&lt;/div&gt;                 &lt;div class=""tooltip-content hide""  id=""user_tooltip_MOB""&gt;  &lt;p&gt;&lt;br/&gt;&lt;a href=""/TD/de_DE/web/help_and_service/how_it_works.html#a0"" target=""_blank""&gt;Telekom Festnetz-Kunden mit HotSpot Basic / HotSpot Flat&lt;/a&gt;&lt;br/&gt;&lt;br/&gt;&lt;a href=""/TD/de_DE/web/help_and_service/how_it_works.html#a0"" target=""_blank""&gt;Telekom Mobilfunk-Kunden mit HotSpot Basic / Hot Spot Flat&lt;/a&gt;&lt;br/&gt;&lt;br/&gt;&lt;a href=""/TD/de_DE/web/help_and_service/how_it_works.html#a0"" target=""_blank""&gt;Kunden mit HotSpot Konto / HotSpot Pass&lt;/a&gt;&lt;br/&gt;&lt;br/&gt;&lt;/p&gt; &lt;p class=""Tartsp""&gt;&amp;nbsp;&lt;/p&gt;  &lt;p class=""Tartsp""&gt;&amp;nbsp;&lt;/p&gt; &lt;/div&gt;             &lt;/div&gt;             &lt;div class=""right""&gt; &lt;a href=""/FON_EXT/de_DE/web/help_and_service/forgot_password.html""&gt; Passwort vergessen?             &lt;/a&gt; &lt;/div&gt;         &lt;/div&gt;         &lt;div class=""Tinp withIcon ""&gt;             &lt;label for=""password""&gt;Passwort&lt;/label&gt;             &lt;input name=""password"" id=""password"" type=""password"" tabindex=""20"" autocomplete=""off""  class=""large"" title=""no description available"" /&gt;             &lt;div title=""Fallback Tooltip (no JS)"" id=""pwdTooltipWrapper_MOB"" class=""Tismob tooltip left""&gt;                 &lt;div class=""font-size-default tooltip-icon icon""  &gt;i&lt;/div&gt;                 &lt;div class=""tooltip-content hide""  id=""pwd_tooltip_MOB""&gt;  &lt;p&gt;Bitte beachten Sie die Groß- und Kleinschreibung.&lt;/p&gt;&lt;/div&gt;             &lt;/div&gt;             &lt;div title=""Fallback Tooltip (no JS)"" id=""pwdTooltipWrapper_DSK"" class=""Tnomob tooltip top-left""&gt;                 &lt;div class=""font-size-default tooltip-icon icon""  &gt;i&lt;/div&gt;                 &lt;div class=""tooltip-content hide""  id=""pwd_tooltip_DSK""&gt;  &lt;p&gt;Bitte beachten Sie die Groß- und Kleinschreibung.&lt;/p&gt;&lt;/div&gt;             &lt;/div&gt;         &lt;/div&gt;         &lt;div class=""Tclr""&gt;&lt;/div&gt;            &lt;p class=""Tlogchk""&gt;         &lt;input type=""hidden"" name=""HSPNAME"" value=""FON:DE"" /&gt;&lt;input type=""hidden"" name=""VNPNAME"" value=""FON:DE"" /&gt;&lt;input type=""hidden"" name=""WISPURL"" value=""https%3A%2F%2Ftelekom.portal.fon.com%2FSRCDTA01%2Ffon%2F24f50d843397a4de51ed6e3535dae5eb168bd9e1%3Fres%3Dvnp-login%26nasid%3DD4-21-22-E6-F2-50%26uamip%3D172.17.2.1%26uamport%3D3990%26mac%3D40-A5-EF-94-B8-A8%26challenge%3Db66a8c41cc8a8f12e1049126a402ab1a%26HSPNAME%3DFON%253ADE%26VNPNAME%3DFON%253ADE%26LOCATIONNAME%3DFON%253ADE%26userurl%3Dhttp%253A%252F%252F%252F%26strAGB%3D1%26LOCATIONID%3DFON%253ADE%26LANGUAGE%3Dde_DE%26tab%3D2"" /&gt;&lt;input type=""hidden"" name=""WISPURLHOME"" value=""https%3A%2F%2Ftelekom.portal.fon.com%2FSRCDTA01%2Ffon%2F24f50d843397a4de51ed6e3535dae5eb168bd9e1%3Fres%3Dnotyet%26nasid%3DD4-21-22-E6-F2-50%26uamip%3D172.17.2.1%26uamport%3D3990%26mac%3D40-A5-EF-94-B8-A8%26challenge%3Db66a8c41cc8a8f12e1049126a402ab1a%26userurl%3Dhttp%253A%252F%252F%252F%26ip%3D172.17.2.2%26called%3DD4-21-22-E6-F2-50%26sessionid%3D59b2d19100000001%26md%3DEE9B6397622814B5AEFF8DE9B41E94C8%26tab%3D2"" /&gt;&lt;input type=""hidden"" name=""LOCATIONNAME"" value=""FON:DE"" /&gt;&lt;input type=""hidden"" name=""LOCATIONID"" value=""FON:DE"" /&gt;&lt;input type=""hidden"" name=""LANGUAGE"" value=""de_DE"" /&gt;        &lt;input type=""hidden"" name=""realm"" id=""rrid"" value=""t-mobile.net"" /&gt;         &lt;input type=""hidden"" name=""roamRealm"" id=""rrid"" value=""t-mobile.net"" /&gt;&lt;input jsfc=""tm:input"" type=""checkbox"" class=""Tchkb"" id=""terms_conditions"" name=""terms_conditions"" checked=""checked"" style=""display: none;"" /&gt;         &lt;input id=""terms_conditions"" type=""checkbox"" name=""strAGB"" value=""AGB"" checked=""checked"" style=""display: none;"" class=""Tchkb"" /&gt;         &lt;input id=""payment_advice"" type=""checkbox"" name=""strHinweis"" value=""Zahlungsbedingungen"" checked=""checked"" style=""display: none;"" class=""Tchkb"" /&gt; Ich akzeptiere die &lt;a href=""/FON_EXT/downloads/legal_notice_de,tid=da.pdf"" target=""_blank""&gt;Nutzunsbedingungen.&lt;/a&gt; &lt;/p&gt;         &lt;p class=""Tftn""&gt;Ich akzeptiere die &lt;a href=""/FON_EXT/de_DE/web/AboutFON/agb_de.html""&gt;AGB und Preise zu HotSpot&lt;/a&gt;&lt;/p&gt;         &lt;div class=""Tctr""&gt;             &lt;span class=""Tbutt Tbuttm""&gt;  &lt;a id=""btnCheckPriceShock"" tabindex=""40"" href=""#"" class=""Tnomob button embossed magenta large center""&gt;Verbindung herstellen&lt;/a&gt;                 &lt;a tabindex=""40"" onclick=""jQuery('#btnCheckPriceShock').click()"" class=""Tismob button embossed large magenta center""&gt;Verbindung herstellen&lt;/a&gt;  &lt;/span&gt;         &lt;/div&gt;         &lt;input jsfc=""tm:input"" type=""checkbox"" id=""clear_session"" name=""clear_session"" checked=""checked"" style=""display: none;"" /&gt;     &lt;/form&gt;   &lt;/div&gt;   &lt;div id=""fonLoginBox""  class=""TnoAkt""&gt;   &lt;form action=""https://telekom.portal.fon.com/SRCDTA01/fon/24f50d843397a4de51ed6e3535dae5eb168bd9e1?res=login&amp;nasid=D4-21-22-E6-F2-50&amp;uamip=172.17.2.1&amp;uamport=3990&amp;mac=40-A5-EF-94-B8-A8&amp;challenge=b66a8c41cc8a8f12e1049126a402ab1a&amp;userurl=http%3A%2F%2F%2F&amp;tab=2"" name=""login_fon"" id=""f_fon_login"" method=""post""&gt;     &lt;input id=""f_fon_login_submit"" name=""f_fon_login_submit"" type=""submit"" style=""display:none"" tabindex=""5"" /&gt;     &lt;input id=""f_fon_login_tab"" name=""tab"" type=""hidden"" value=""2"" /&gt;     &lt;div id=""Tloginerrmsgbox"" style=""display:none;border-top: 1px solid #DCDCDC;""&gt;             &lt;p&gt;                 &lt;span id=""fonLoginError"" class=""Terrmsg""&gt;                      Ihre HotSpot Sitzung wurde beendet und Sie wurden erfolgreich abgemeldet.&lt;br /&gt;                 &lt;/span&gt;             &lt;/p&gt;             &lt;div style=""top: 82px;"" class=""Tlyrarr""&gt;&lt;/div&gt;     &lt;/div&gt;     &lt;div class=""fon_login_selector""&gt;       &lt;select id=""fon_selector"" class=""tk-dropdown tooltip"" name=""partner""&gt;          &lt;option class=""fon option"" value=""""&gt;Partner wählen&lt;/option&gt;  &lt;option class=""fon option"" value=""oiwifi""&gt;Oi&lt;/option&gt;&lt;option class=""fon option"" value=""belgacom""&gt;Proximus&lt;/option&gt;&lt;option class=""fon option"" value=""bt""&gt;BT&lt;/option&gt;&lt;option class=""fon option"" value=""netia""&gt;Netia&lt;/option&gt;&lt;option class=""fon option"" value=""softbank""&gt;Softbank&lt;/option&gt;&lt;option class=""fon option"" value=""nos""&gt;NOS&lt;/option&gt;&lt;option class=""fon option"" value=""fon"" selected&gt;Fon&lt;/option&gt;&lt;option class=""fon option"" value=""croatia""&gt;Hrvatski Telekom&lt;/option&gt;&lt;option class=""fon option"" value=""sfr""&gt;SFR&lt;/option&gt;&lt;option class=""fon option"" value=""ote""&gt;COSMOTE&lt;/option&gt;&lt;option class=""fon option"" value=""mweb""&gt;MWEB&lt;/option&gt;&lt;option class=""fon option"" value=""rtc""&gt;Telekom Romania&lt;/option&gt;&lt;option class=""fon option"" value=""kpn""&gt;KPN&lt;/option&gt;&lt;option class=""fon option"" value=""telstra""&gt;Telstra&lt;/option&gt;&lt;option class=""fon option"" value=""vfes""&gt;Vodafone España&lt;/option&gt;&lt;option class=""fon option"" value=""vfit""&gt;Vodafone Italia&lt;/option&gt;      &lt;/select&gt;     &lt;/div&gt;  &lt;div class=""Tinp withIcon ""&gt;             &lt;label for=""username""&gt;E-Mail Adresse oder Benutzername&lt;/label&gt;             &lt;input id=""fon_username"" type=""text"" name=""USERNAME"" value="""" tabindex=""10""  class=""large"" /&gt;             &lt;div title=""Fallback Tooltip (no JS)"" id=""usernameTooltipWrapper_DSK"" class=""Tnomob tooltip top-left""&gt;                 &lt;div class=""font-size-default tooltip-icon icon""  &gt;i&lt;/div&gt;                 &lt;div class=""tooltip-content hide""  id=""user_tooltip_DSK""&gt;  &lt;p&gt;Ihr Fon Benutzername ist die E-Mail Adresse mit der Sie sich bei Fon registriert haben.&lt;/p&gt;&lt;/div&gt;             &lt;/div&gt;             &lt;div title=""Fallback Tooltip (no JS)"" id=""usernameTooltipWrapper_MOB"" class=""Tismob tooltip left""&gt;                 &lt;div class=""font-size-default tooltip-icon icon""  &gt;i&lt;/div&gt;                 &lt;div class=""tooltip-content hide""  id=""user_tooltip_MOB""&gt;  &lt;p&gt;Ihr Fon Benutzername ist die E-Mail Adresse mit der Sie sich bei Fon registriert haben.&lt;/p&gt;&lt;/div&gt;             &lt;/div&gt;          &lt;/div&gt;  &lt;div class=""Tinp withIcon ""&gt;             &lt;div class=""right""&gt;             &lt;a style=""color:#FAB033"" href=""https://recover-password.fon.com""&gt;Passwort vergessen?&lt;/a&gt;             &lt;/div&gt;              &lt;label for=""password""&gt;Passwort&lt;/label&gt;              &lt;input id=""fon_password"" type=""password"" name=""PASSWORD"" value="""" tabindex=""20"" autocomplete=""off""  class=""large"" title=""no description available"" /&gt;             &lt;div title=""Fallback Tooltip (no JS)"" id=""pwdTooltipWrapper_MOB"" class=""Tismob tooltip left""&gt;                 &lt;div class=""font-size-default tooltip-icon icon""  &gt;i&lt;/div&gt;                 &lt;div class=""tooltip-content hide""  id=""pwd_tooltip_MOB""&gt;  &lt;p&gt;Bitte Groß- und Kleinschreibung beachten.&lt;/p&gt;&lt;/div&gt;             &lt;/div&gt;             &lt;div title=""Fallback Tooltip (no JS)"" id=""pwdTooltipWrapper_DSK"" class=""Tnomob tooltip top-left""&gt;                 &lt;div class=""font-size-default tooltip-icon icon""  &gt;i&lt;/div&gt;                 &lt;div class=""tooltip-content hide""  id=""pwd_tooltip_DSK""&gt;  &lt;p&gt;Bitte Groß- und Kleinschreibung beachten.&lt;/p&gt;&lt;/div&gt;             &lt;/div&gt;         &lt;/div&gt;         &lt;input type=""hidden"" name=""HSPNAME"" value=""FON:DE"" /&gt;&lt;input type=""hidden"" name=""VNPNAME"" value=""FON:DE"" /&gt;&lt;input type=""hidden"" name=""WISPURL"" value=""https%3A%2F%2Ftelekom.portal.fon.com%2FSRCDTA01%2Ffon%2F24f50d843397a4de51ed6e3535dae5eb168bd9e1%3Fres%3Dvnp-login%26nasid%3DD4-21-22-E6-F2-50%26uamip%3D172.17.2.1%26uamport%3D3990%26mac%3D40-A5-EF-94-B8-A8%26challenge%3Db66a8c41cc8a8f12e1049126a402ab1a%26HSPNAME%3DFON%253ADE%26VNPNAME%3DFON%253ADE%26LOCATIONNAME%3DFON%253ADE%26userurl%3Dhttp%253A%252F%252F%252F%26strAGB%3D1%26LOCATIONID%3DFON%253ADE%26LANGUAGE%3Dde_DE%26tab%3D2"" /&gt;&lt;input type=""hidden"" name=""WISPURLHOME"" value=""https%3A%2F%2Ftelekom.portal.fon.com%2FSRCDTA01%2Ffon%2F24f50d843397a4de51ed6e3535dae5eb168bd9e1%3Fres%3Dnotyet%26nasid%3DD4-21-22-E6-F2-50%26uamip%3D172.17.2.1%26uamport%3D3990%26mac%3D40-A5-EF-94-B8-A8%26challenge%3Db66a8c41cc8a8f12e1049126a402ab1a%26userurl%3Dhttp%253A%252F%252F%252F%26ip%3D172.17.2.2%26called%3DD4-21-22-E6-F2-50%26sessionid%3D59b2d19100000001%26md%3DEE9B6397622814B5AEFF8DE9B41E94C8%26tab%3D2"" /&gt;&lt;input type=""hidden"" name=""LOCATIONNAME"" value=""FON:DE"" /&gt;&lt;input type=""hidden"" name=""LOCATIONID"" value=""FON:DE"" /&gt;&lt;input type=""hidden"" name=""LANGUAGE"" value=""de_DE"" /&gt;    &lt;div class=""fonButton Tctr""&gt;      &lt;span class=""Tbutt Tbuttm""&gt;         &lt;a tabindex=""40"" id=""fon_submit_button_dsk"" onclick=""jQuery('#f_fon_login').submit();return false;"" href=""javascript:submit()"" class=""Tnomob button embossed large center""&gt;Verbindung herstellen&lt;/a&gt;          &lt;a tabindex=""40"" id=""fon_submit_button"" onclick=""jQuery('#f_fon_login').submit();return false;"" href=""javascript:submit()"" class=""Tismob button embossed large center""&gt;Verbindung herstellen&lt;/a&gt;      &lt;/span&gt;     &lt;/div&gt;    &lt;div class=""fon_logBox_branding Tnomob"" &gt;    &lt;img src=""/shared/static_fon/imgs/desktop_fon_logo_loginbox,tid=da.png"" alt=""FON"" /&gt;   &lt;/div&gt;   &lt;div class=""fon_logBox_branding Tismob"" &gt;     &lt;img src=""/shared/static_fon/imgs/mob_fon_logo,tid=da.png"" alt=""FON""/&gt;   &lt;/div&gt;   &lt;/form&gt; &lt;/div&gt; &lt;/div&gt;</code></pre> </div> </div> </p>  <p>Could someone give me a good hint? Thank you.</p>"	46140224	"<p>Mechanize doesn't support JavaScript.</p>  <p>Use Selenium Webdriver.</p>  <pre><code>pip install selenium </code></pre>  <p><a href=""http://selenium-python.readthedocs.io/"" rel=""nofollow noreferrer"">Selenium Documentation</a></p>"
46141610	Python getting cookies from webpage set by javascript without selenium	javascript|cookies	2017-09-10 14:07:01.410000 UTC	<p>I have been working on an automation script that requires a cookie value set by javascript within the webpage being requested in my script. Is there a way to get the cookies set by the javascript without using selenium? In my testing selenium is much too slow even with a headless browser. I need a better (quicker) method in getting these cookies. All help appreciated!</p>	46141640	"<p><code>request</code>'s <code>Session</code> object handles traditional cookies automatically for you.</p>  <p>If these cookies are set by JavaScript, then you'll have to look at the JS code to ""emulate"" them and manually set them, but it should be possible. Python won't run the JS code on its own, though.</p>"
46141610	Python getting cookies from webpage set by javascript without selenium	javascript|cookies	2017-09-10 14:07:01.410000 UTC	<p>I have been working on an automation script that requires a cookie value set by javascript within the webpage being requested in my script. Is there a way to get the cookies set by the javascript without using selenium? In my testing selenium is much too slow even with a headless browser. I need a better (quicker) method in getting these cookies. All help appreciated!</p>	46141671	"<p>Yes, cookies can be read with Javascript using</p>  <pre><code>document.cookie </code></pre>  <p>Since there can be many values inside the cookies, you can either write your own functions to gather values from it, or use a library, like <a href=""https://github.com/js-cookie/js-cookie"" rel=""nofollow noreferrer"">js-cookie</a>.</p>  <p>Read more here:</p>  <p><a href=""https://www.w3schools.com/js/js_cookies.asp"" rel=""nofollow noreferrer"">https://www.w3schools.com/js/js_cookies.asp</a></p>"
46165840	I can not download PDF files from links generated from a javascript function with python 3.6.0 + selenium 3.4.3	javascript|python|selenium|download|screen-scraping	2017-09-11 23:46:38.840000 UTC	"<p>The URL is:<a href=""http://dje.trf2.jus.br/DJE/Paginas/Externas/inicial.aspx"" rel=""nofollow noreferrer"">site</a></p>  <p>By using selenium with Firefox 47.0.2 binary and python 3.6.0, from this page I click on “Pesquisar” button and in the next page I fill in the form with tha date range (format d/m/y) and click again on the new “Pesquisar” button, then I get a list of PDF documents and I want to download them. </p>  <p>When I  print the page_source, I can see the links generated, but I don’t understand why selenium can’t locate those links.</p>  <p>The simplified code is as follows:</p>  <pre><code>from selenium import webdriver from selenium.webdriver.support.ui import Select from selenium.webdriver.firefox.firefox_binary import FirefoxBinary from selenium.webdriver.support.ui import WebDriverWait from selenium.webdriver.support import expected_conditions as EC from selenium.webdriver.common.by import By from datetime import datetime, date, timedelta from calendar import monthrange import time   driver = webdriver.Firefox(firefox_profile=profile, firefox_binary=binary, capabilities=capabilities) driver.maximize_window() wait = WebDriverWait(driver, 10)  months = range(1, 13) limits = monthrange(2017, 8)  #num_docs = limites[1]-limites[0]  date_input_begin = '{num:0{width}}'.format(num=limits[0], width=2) + '08' + '2017' date_input_end = '{num:0{width}}'.format(num=limits[1], width=2) + '08' + '2017'  today = datetime.now().date() date = today  date = date - timedelta(24)  driver.get(""http://dje.trf2.jus.br/DJE/Paginas/Externas/inicial.aspx"")  driver.find_element_by_id(""ctl00_ContentPlaceHolder_ctrInicial_btnPesquisar"").click()  wait.until(EC.presence_of_element_located(     (By.XPATH, '//*[@id=""ctl00_ContentPlaceHolder_ctrFiltraPesquisaDocumentos_btnFiltrar""]')))  select1 = Select(driver.find_element_by_id(""ctl00_ContentPlaceHolder_ctrFiltraPesquisaDocumentos_ddlAreaJudicial"")) select1.select_by_index(3)  select2 = Select(driver.find_element_by_id(""ctl00_ContentPlaceHolder_ctrFiltraPesquisaDocumentos_ddlRegistrosPaginas"")) select2.select_by_index(6)  element_date_begin = driver.find_element_by_id(     'ctl00_ContentPlaceHolder_ctrFiltraPesquisaDocumentos_tbxDataInicial') element_date_begin.clear() element_date_begin.send_keys(date_input_begin)  element_date_end = driver.find_element_by_id(     'ctl00_ContentPlaceHolder_ctrFiltraPesquisaDocumentos_tbxDataFinal') element_date_end.clear() element_date_end.send_keys(date_input_end)  driver.find_element_by_id('ctl00_ContentPlaceHolder_ctrFiltraPesquisaDocumentos_btnFiltrar').submit()  wait.until(EC.presence_of_element_located((By.ID, 'ctl00_ContentPlaceHolder_ctrFiltraPesquisaDocumentos_btnFiltrar'))) wait.until(EC.element_to_be_clickable((By.ID, 'ctl00_ContentPlaceHolder_ctrFiltraPesquisaDocumentos_btnFiltrar')))  time.sleep(5) driver.find_element_by_id('ctl00_ContentPlaceHolder_ctrFiltraPesquisaDocumentos_btnFiltrar').click()  wait.until(EC.presence_of_element_located(     (By.XPATH, '//*[@id=""ctl00_ContentPlaceHolder_ctrListaDiarios_udtVisualizaAdmRj_lblNomeCaderno""]')))  driver.find_element_by_xpath(     '//*[@id=""ctl00_ContentPlaceHolder_ctrListaDiarios_udtVisualizaAdmRj_grvCadernos_ct102_lnkData""]').click() </code></pre>  <p>But when I look for the links by ID or XPATH, I get the following error:</p>  <blockquote>   <p>File ""C:\Users\b2002032064079\Anaconda3\lib\site-packages\selenium\webdriver\remote\errorhandler.py"", line 194, in check_response       raise exception_class(message, screen, stacktrace)   selenium.common.exceptions.NoSuchElementException: Message: Unable to locate element: {""method"":""xpath"",""selector"":""//*[@id=\""ctl00_ContentPlaceHolder_ctrListaDiarios_udtVisualizaAdmRj_grvCadernos_ct102_lnkData\""]""}</p> </blockquote>  <p>I’m a newbie at scraping and I’d be very thankful for any help! Thank you!</p>"	46166470	<p>First of all: Which browser are you using? 2: Your site is slow. Maybe try giving more waiting time. 3: Is the xpath correct? I think that the problem is with the XPATH try using XPath helper on chrome to check.</p>
46181899	Pass value to a javascript function using Selenium in python	python|selenium	2017-09-12 16:56:38.790000 UTC	"<p><code>login.php</code> calls the following function when submitted</p>  <pre><code>&lt;script type=""text/javascript""&gt;   function validate(){     var res=confirm(""Are you sure"");     if(res)       return true;     else       return false;   } &lt;/script&gt; </code></pre>  <p>I am trying to login through a python script using Selenium. When I click login the following script is called and I need to select 'yes' to login.</p>  <pre><code>from selenium import webdriver from selenium.webdriver.common.keys import Keys  browser = webdriver.Firefox() browser.get(""webpage/login.php"")  username = browser.find_element_by_id(""id"") password = browser.find_element_by_id(""pass"") username.send_keys(""username"") password.send_keys(""password"") login_attempt = browser.find_element_by_xpath(""//*[@type='submit']"") login_attempt.submit()  #I want to send yes to the `validate` function and the #then then again do browser.get(""webpage/home.php"") to scrape info from a html tag  #print(login_attempt.submit()) </code></pre>  <p>I am relatively new to what I am trying to do .. suggestions are well received if there are better practices.</p>"	46182008	"<p>The pop up come out after click submit, we call them JS alert/confirm, they trigger by JavaScript and supported natively by browser. For such pop-up, selenium had already implement the code to interact with them. So just to find the methond from selenium python client API on the version you used. (The methond name and how to call maybe not same in different client API version). </p>  <pre><code>alert = browser.switch_to_alert() //accept the alert alert.accept()  // maybe as below to call alert = driver.switch_to.alert alert.accept()  // or Alert(driver).accept() </code></pre>"
46181899	Pass value to a javascript function using Selenium in python	python|selenium	2017-09-12 16:56:38.790000 UTC	"<p><code>login.php</code> calls the following function when submitted</p>  <pre><code>&lt;script type=""text/javascript""&gt;   function validate(){     var res=confirm(""Are you sure"");     if(res)       return true;     else       return false;   } &lt;/script&gt; </code></pre>  <p>I am trying to login through a python script using Selenium. When I click login the following script is called and I need to select 'yes' to login.</p>  <pre><code>from selenium import webdriver from selenium.webdriver.common.keys import Keys  browser = webdriver.Firefox() browser.get(""webpage/login.php"")  username = browser.find_element_by_id(""id"") password = browser.find_element_by_id(""pass"") username.send_keys(""username"") password.send_keys(""password"") login_attempt = browser.find_element_by_xpath(""//*[@type='submit']"") login_attempt.submit()  #I want to send yes to the `validate` function and the #then then again do browser.get(""webpage/home.php"") to scrape info from a html tag  #print(login_attempt.submit()) </code></pre>  <p>I am relatively new to what I am trying to do .. suggestions are well received if there are better practices.</p>"	46183034	"<p>Use following code:</p>  <pre><code>browser = webdriver.Firefox() browser.get(""http://username:password@webpage/login.php"") </code></pre>  <p>you will be able to bypass this authentication alert.</p>"
46204047	Calling a Javascript function from flask / python	javascript|python|flask	2017-09-13 17:58:15.703000 UTC	"<p>I know Python very well, but I'm new to web-stuff and JavaScript. I found a post about <a href=""https://stackoverflow.com/questions/30899484/python-flask-calling-functions-using-buttons"">Calling a python function from button on website (Flask)</a>.</p>  <p>I want to do the following: I want to add a new row to an HTML table. The data will be coming from Python. I already found out that refreshing the site isn't a good way to do it, instead it seems JavaScript should be used. Say I have the following HTML code:</p>  <pre><code>&lt;table class=""table"" id=""myTable""&gt;   &lt;thead&gt;     &lt;tr&gt;       &lt;th colspan=""2""&gt;This is a table&lt;/th&gt;     &lt;/tr&gt;   &lt;/thead&gt;   &lt;tbody&gt;     &lt;tr&gt;       &lt;td&gt;entry 1&lt;/td&gt;       &lt;td&gt;entry 2&lt;/td&gt;     &lt;/tr&gt;   &lt;/tbody&gt; &lt;/table&gt; &lt;script src=""js/scripts.js""&gt;&lt;/script&gt; </code></pre>  <p>and in the scripts.js I have the following function (from the linked post):</p>  <pre><code>function appendRow(table_id) {   var table_ref = document.getElementById(table_id).getElementsByTagName('tbody')[0];   var new_row = table_ref.insertRow(table_ref.rows.length);   var new_cell = new_row.insertCell(0);   var new_text = document.createTextNode('New row');   new_cell.appendChild(new_text); } </code></pre>  <p>Now disregarding the details how the function works / what can be optimized etc. my real question is: How can I call this function from Python / flask?</p>  <p>Additionally: How can I pass data (say a JSON-structure) to the JavaScript function?</p>  <p>Many thanks in advance!</p>"	46206880	"<p>See this <a href=""https://stackoverflow.com/questions/46103322/using-flask-return-to-modify-a-webpage/46104349?noredirect=1#comment79198729_46104349"">link</a> you can use ajax to load the table with out refreshing the page. </p>  <p>you can use flask jsonify to return json from your flask app. See this <a href=""http://flask.pocoo.org/docs/0.12/api/#flask.json.jsonify"" rel=""nofollow noreferrer"">link</a> and below example from flask doc</p>  <pre><code>from flask import jsonify @app.route('/_get_current_user') def get_current_user():     return jsonify(username=g.user.username,                    email=g.user.email,                    id=g.user.id) </code></pre>  <p>will return the following json</p>  <pre><code>{     ""username"": ""admin"",     ""email"": ""admin@localhost"",     ""id"": 42 } </code></pre>"
46204047	Calling a Javascript function from flask / python	javascript|python|flask	2017-09-13 17:58:15.703000 UTC	"<p>I know Python very well, but I'm new to web-stuff and JavaScript. I found a post about <a href=""https://stackoverflow.com/questions/30899484/python-flask-calling-functions-using-buttons"">Calling a python function from button on website (Flask)</a>.</p>  <p>I want to do the following: I want to add a new row to an HTML table. The data will be coming from Python. I already found out that refreshing the site isn't a good way to do it, instead it seems JavaScript should be used. Say I have the following HTML code:</p>  <pre><code>&lt;table class=""table"" id=""myTable""&gt;   &lt;thead&gt;     &lt;tr&gt;       &lt;th colspan=""2""&gt;This is a table&lt;/th&gt;     &lt;/tr&gt;   &lt;/thead&gt;   &lt;tbody&gt;     &lt;tr&gt;       &lt;td&gt;entry 1&lt;/td&gt;       &lt;td&gt;entry 2&lt;/td&gt;     &lt;/tr&gt;   &lt;/tbody&gt; &lt;/table&gt; &lt;script src=""js/scripts.js""&gt;&lt;/script&gt; </code></pre>  <p>and in the scripts.js I have the following function (from the linked post):</p>  <pre><code>function appendRow(table_id) {   var table_ref = document.getElementById(table_id).getElementsByTagName('tbody')[0];   var new_row = table_ref.insertRow(table_ref.rows.length);   var new_cell = new_row.insertCell(0);   var new_text = document.createTextNode('New row');   new_cell.appendChild(new_text); } </code></pre>  <p>Now disregarding the details how the function works / what can be optimized etc. my real question is: How can I call this function from Python / flask?</p>  <p>Additionally: How can I pass data (say a JSON-structure) to the JavaScript function?</p>  <p>Many thanks in advance!</p>"	62994626	"<p>You could use <a href=""http://to_python"" rel=""nofollow noreferrer"">socket.io</a>.</p> <p>The python implementation would be the server side, and it can be done using <a href=""https://python-socketio.readthedocs.io/en/latest/index.html"" rel=""nofollow noreferrer"">python-socketio</a>.</p> <p>This code is a basic implementation starting the socket server at <code>localhost:5000</code></p> <pre><code>import eventlet import socketio import json  sio = socketio.Server() app = socketio.WSGIApp(sio)  @sio.event def connect(sid, environ):     print('connect ', sid)  @sio.event async def message(sid, data):     print(&quot;message &quot;, data, json.loads(data))     # send a reply to the sender client socket      # await sio.emit('reply', room=sid)  @sio.event def disconnect(sid):     print('disconnect ', sid)  if __name__ == '__main__':     eventlet.wsgi.server(eventlet.listen(('', 5000)), app) </code></pre> <p>The your client in the javascript side, using socket.io <a href=""https://socket.io/docs/client-api/"" rel=""nofollow noreferrer"">client api</a></p> <pre><code>&lt;script src=&quot;/socket.io/socket.io.js&quot;&gt;&lt;/script&gt; &lt;script&gt;   const socket = io('http://localhost:5000');   var to_python = {     title: &quot;this is just&quot;,     body: &quot;sample data to send to python&quot;     user: {       &quot;name&quot;: &quot;&quot;,       &quot;email&quot;: &quot;&quot;      }   }   socket.emit('message', JSON.stringify(to_python)); &lt;/script&gt; </code></pre> <p>I use this implementation in several applications, mind that, the <em>socket.io protocol implementation</em> <strong>must be compatible</strong> in both client-side (js) and server-side (python).</p>"
46227854	JSON.stringify (Javascript) and json.dumps (Python) not equivalent on a list?	javascript|python|json	2017-09-14 20:37:04.353000 UTC	"<p>In javascript:</p>  <pre><code>var myarray = [2, 3]; var json_myarray = JSON.stringify(myarray) // '[2,3]' </code></pre>  <p>But in Python:</p>  <pre><code>mylist = [2, 3] json_mylist = json.dumps(mylist) # '[2, 3]' &lt;-- Note the space </code></pre>  <p>So the 2 functions aren't equivalent. It's a bit unexpected for me and a bit problematic when trying to compare some data for example.</p>  <p>Some explanation about it?</p>"	46227888	"<p>The difference is that <code>json.dumps</code> applies some minor pretty-printing by default but <code>JSON.stringify</code> does not.</p>  <p>To remove all whitespace, like <code>JSON.stringify</code>, you need to <a href=""https://docs.python.org/2/library/json.html"" rel=""noreferrer"">specify the separators</a>.</p>  <pre><code>json_mylist = json.dumps(mylist, separators=(',', ':')) </code></pre>"
46259177	HackerRank Compare the Triplet. JavaScript solution vs. Python3	javascript|python-3.x	2017-09-16 22:56:44.587000 UTC	"<p>So, I am trying to solve Compare the Triplets problem from HackerRank (<a href=""https://www.hackerrank.com/challenges/compare-the-triplets/problem"" rel=""nofollow noreferrer"">https://www.hackerrank.com/challenges/compare-the-triplets/problem</a>).</p>  <p>My JavaScript solution passes all test cases, but Python3 fails some of them (HackerRank doesn't allow to see which ones). As you can see I followed same logic but in Python it doesn't work. What is the difference between my Python and JS code?</p>  <p>JS:</p>  <pre><code>function solve(a0, a1, a2, b0, b1, b2){ var alice = ( a0 &gt; b0 ? 1 : 0 ) + ( a1 &gt; b1 ? 1 : 0 ) + ( a2 &gt; b2 ? 1 : 0 ); var bob = ( a0 &lt; b0 ? 1 : 0 ) + ( a1 &lt; b1 ? 1 : 0 ) + ( a2 &lt; b2 ? 1 : 0 );  return [alice, bob]; </code></pre>  <p>}</p>  <p>Python3:</p>  <pre><code>def solve(a0, a1, a2, b0, b1, b2): alice = 1 if a0 &gt; b0 else 0 + 1 if a1 &gt;v b1 else 0 + 1 if a2 &gt; b2 else 0 bob = 1 if a0 &lt; b0 else 0 + 1 if a1 &lt; b1 else 0 + 1 if a2 &lt; b2 else 0 return (alice, bob) </code></pre>"	49435887	<p>Use parentheses after every if/else</p>  <pre><code>        alice = (1 if (a0&gt;b0) else 0) + (1 if (a1&gt;b1) else 0) + (1 if (a2&gt;b2) else 0)         bob = (1 if (a0&lt;b0) else 0) + (1 if (a1&lt;b1) else 0) + (1 if (a2&lt;b2) else 0) </code></pre>
46259177	HackerRank Compare the Triplet. JavaScript solution vs. Python3	javascript|python-3.x	2017-09-16 22:56:44.587000 UTC	"<p>So, I am trying to solve Compare the Triplets problem from HackerRank (<a href=""https://www.hackerrank.com/challenges/compare-the-triplets/problem"" rel=""nofollow noreferrer"">https://www.hackerrank.com/challenges/compare-the-triplets/problem</a>).</p>  <p>My JavaScript solution passes all test cases, but Python3 fails some of them (HackerRank doesn't allow to see which ones). As you can see I followed same logic but in Python it doesn't work. What is the difference between my Python and JS code?</p>  <p>JS:</p>  <pre><code>function solve(a0, a1, a2, b0, b1, b2){ var alice = ( a0 &gt; b0 ? 1 : 0 ) + ( a1 &gt; b1 ? 1 : 0 ) + ( a2 &gt; b2 ? 1 : 0 ); var bob = ( a0 &lt; b0 ? 1 : 0 ) + ( a1 &lt; b1 ? 1 : 0 ) + ( a2 &lt; b2 ? 1 : 0 );  return [alice, bob]; </code></pre>  <p>}</p>  <p>Python3:</p>  <pre><code>def solve(a0, a1, a2, b0, b1, b2): alice = 1 if a0 &gt; b0 else 0 + 1 if a1 &gt;v b1 else 0 + 1 if a2 &gt; b2 else 0 bob = 1 if a0 &lt; b0 else 0 + 1 if a1 &lt; b1 else 0 + 1 if a2 &lt; b2 else 0 return (alice, bob) </code></pre>"	49461873	"<p>You should use parenthesis after every if/else statement. because python <code>bool</code> need parenthesis for 100% accuracy. Comparison has a higher precedence than Boolean operators. here's you'r modified code below:</p>  <pre><code>def solve(a0, a1, a2, b0, b1, b2):   a = (1 if a0 &gt; b0 else 0) + (1 if a1 &gt; b1 else 0) + (1 if a2 &gt; b2 else 0)   b = (1 if a0 &lt; b0 else 0) + (1 if a1 &lt; b1 else 0) + (1 if a2 &lt; b2 else 0)   return (a,b) </code></pre>"
46259177	HackerRank Compare the Triplet. JavaScript solution vs. Python3	javascript|python-3.x	2017-09-16 22:56:44.587000 UTC	"<p>So, I am trying to solve Compare the Triplets problem from HackerRank (<a href=""https://www.hackerrank.com/challenges/compare-the-triplets/problem"" rel=""nofollow noreferrer"">https://www.hackerrank.com/challenges/compare-the-triplets/problem</a>).</p>  <p>My JavaScript solution passes all test cases, but Python3 fails some of them (HackerRank doesn't allow to see which ones). As you can see I followed same logic but in Python it doesn't work. What is the difference between my Python and JS code?</p>  <p>JS:</p>  <pre><code>function solve(a0, a1, a2, b0, b1, b2){ var alice = ( a0 &gt; b0 ? 1 : 0 ) + ( a1 &gt; b1 ? 1 : 0 ) + ( a2 &gt; b2 ? 1 : 0 ); var bob = ( a0 &lt; b0 ? 1 : 0 ) + ( a1 &lt; b1 ? 1 : 0 ) + ( a2 &lt; b2 ? 1 : 0 );  return [alice, bob]; </code></pre>  <p>}</p>  <p>Python3:</p>  <pre><code>def solve(a0, a1, a2, b0, b1, b2): alice = 1 if a0 &gt; b0 else 0 + 1 if a1 &gt;v b1 else 0 + 1 if a2 &gt; b2 else 0 bob = 1 if a0 &lt; b0 else 0 + 1 if a1 &lt; b1 else 0 + 1 if a2 &lt; b2 else 0 return (alice, bob) </code></pre>"	52138029	"<pre><code>def compareTriplets(a, b):     total_a = 0     total_b = 0     for i in range(len(a)):         if a[i] &gt; b[i]:             total_a = total_a + 1         elif a[i] &lt; b[i]:             total_b = total_b + 1     return (total_a, total_b) </code></pre>  <p>Fortunately, I got the logic which is same as of Geraldo Braho, but struggled to get the logic in ""For Loop Expression"", I got the answer that I need to use range before ""len(a)/len(b)"" as both have the same lengths in this case. Big thanks to Mr. Geraldo Braho for teaching me that we need to use ""range(len(a))"" in  the ""For Loop Expression"". </p>  <p><a href=""https://geraldo1993.github.io/articles/Compare-the-Triplets/"" rel=""nofollow noreferrer"">https://geraldo1993.github.io/articles/Compare-the-Triplets/</a></p>"
46259177	HackerRank Compare the Triplet. JavaScript solution vs. Python3	javascript|python-3.x	2017-09-16 22:56:44.587000 UTC	"<p>So, I am trying to solve Compare the Triplets problem from HackerRank (<a href=""https://www.hackerrank.com/challenges/compare-the-triplets/problem"" rel=""nofollow noreferrer"">https://www.hackerrank.com/challenges/compare-the-triplets/problem</a>).</p>  <p>My JavaScript solution passes all test cases, but Python3 fails some of them (HackerRank doesn't allow to see which ones). As you can see I followed same logic but in Python it doesn't work. What is the difference between my Python and JS code?</p>  <p>JS:</p>  <pre><code>function solve(a0, a1, a2, b0, b1, b2){ var alice = ( a0 &gt; b0 ? 1 : 0 ) + ( a1 &gt; b1 ? 1 : 0 ) + ( a2 &gt; b2 ? 1 : 0 ); var bob = ( a0 &lt; b0 ? 1 : 0 ) + ( a1 &lt; b1 ? 1 : 0 ) + ( a2 &lt; b2 ? 1 : 0 );  return [alice, bob]; </code></pre>  <p>}</p>  <p>Python3:</p>  <pre><code>def solve(a0, a1, a2, b0, b1, b2): alice = 1 if a0 &gt; b0 else 0 + 1 if a1 &gt;v b1 else 0 + 1 if a2 &gt; b2 else 0 bob = 1 if a0 &lt; b0 else 0 + 1 if a1 &lt; b1 else 0 + 1 if a2 &lt; b2 else 0 return (alice, bob) </code></pre>"	53741487	"<p>i Hope, This Also helps</p>  <pre><code>a = list(map(int, input(""Enter The First input"").split())) b = list(map(int, input(""Enter The Second input"").split()))  a_score = b_score = 0  for i in range(len(a)):     if a[i] &gt; b[i]:         a_score += 1     elif a[i] &lt; b[i]:         b_score +=1     else:         pass  print(a_score, b_score) </code></pre>"
46259177	HackerRank Compare the Triplet. JavaScript solution vs. Python3	javascript|python-3.x	2017-09-16 22:56:44.587000 UTC	"<p>So, I am trying to solve Compare the Triplets problem from HackerRank (<a href=""https://www.hackerrank.com/challenges/compare-the-triplets/problem"" rel=""nofollow noreferrer"">https://www.hackerrank.com/challenges/compare-the-triplets/problem</a>).</p>  <p>My JavaScript solution passes all test cases, but Python3 fails some of them (HackerRank doesn't allow to see which ones). As you can see I followed same logic but in Python it doesn't work. What is the difference between my Python and JS code?</p>  <p>JS:</p>  <pre><code>function solve(a0, a1, a2, b0, b1, b2){ var alice = ( a0 &gt; b0 ? 1 : 0 ) + ( a1 &gt; b1 ? 1 : 0 ) + ( a2 &gt; b2 ? 1 : 0 ); var bob = ( a0 &lt; b0 ? 1 : 0 ) + ( a1 &lt; b1 ? 1 : 0 ) + ( a2 &lt; b2 ? 1 : 0 );  return [alice, bob]; </code></pre>  <p>}</p>  <p>Python3:</p>  <pre><code>def solve(a0, a1, a2, b0, b1, b2): alice = 1 if a0 &gt; b0 else 0 + 1 if a1 &gt;v b1 else 0 + 1 if a2 &gt; b2 else 0 bob = 1 if a0 &lt; b0 else 0 + 1 if a1 &lt; b1 else 0 + 1 if a2 &lt; b2 else 0 return (alice, bob) </code></pre>"	57302347	"<pre><code>def compareTriplets(a, b): d, g = (0, 0) for i in range(len(a)):     if a[i] &gt; b[i]:         d += 1     elif b[i] &gt; a[i]:         g += 1 return d, g   a = [int(i) for i in input('value of a').split("","")] b = [int(i) for i in input('value of a').split("","")] print(compareTriplets(a, b)) </code></pre>"
46259177	HackerRank Compare the Triplet. JavaScript solution vs. Python3	javascript|python-3.x	2017-09-16 22:56:44.587000 UTC	"<p>So, I am trying to solve Compare the Triplets problem from HackerRank (<a href=""https://www.hackerrank.com/challenges/compare-the-triplets/problem"" rel=""nofollow noreferrer"">https://www.hackerrank.com/challenges/compare-the-triplets/problem</a>).</p>  <p>My JavaScript solution passes all test cases, but Python3 fails some of them (HackerRank doesn't allow to see which ones). As you can see I followed same logic but in Python it doesn't work. What is the difference between my Python and JS code?</p>  <p>JS:</p>  <pre><code>function solve(a0, a1, a2, b0, b1, b2){ var alice = ( a0 &gt; b0 ? 1 : 0 ) + ( a1 &gt; b1 ? 1 : 0 ) + ( a2 &gt; b2 ? 1 : 0 ); var bob = ( a0 &lt; b0 ? 1 : 0 ) + ( a1 &lt; b1 ? 1 : 0 ) + ( a2 &lt; b2 ? 1 : 0 );  return [alice, bob]; </code></pre>  <p>}</p>  <p>Python3:</p>  <pre><code>def solve(a0, a1, a2, b0, b1, b2): alice = 1 if a0 &gt; b0 else 0 + 1 if a1 &gt;v b1 else 0 + 1 if a2 &gt; b2 else 0 bob = 1 if a0 &lt; b0 else 0 + 1 if a1 &lt; b1 else 0 + 1 if a2 &lt; b2 else 0 return (alice, bob) </code></pre>"	62748004	"<p>Like what others answered above, you need to parenthesize your bool operations. But regarding your python code, this is a better way to write it.</p> <pre><code>def compareTriplets(a, b):     alice = sum(1 for i in range(len(a)) if a[i] &gt; b[i] and not a[i] == b[i])     bob = sum(1 for i in range(len(a)) if a[i] and not a[i] == b[i] and not a[i] &gt; b[i])     return [alice, bob] </code></pre> <p>Each line in the alice and bob variable loops over a range (in this case we put the length of array a, since both a and b arrays have the same length) and will yield a value of <code>1</code> for each time the conditions,</p> <p><code>if a[i] &gt; b[i] and not a[i] == b[i]</code> for alice, and</p> <p><code>if a[i] and not a[i] == b[i] and not a[i] &gt; b[i]</code> for bob is satisfied,</p> <p>which will then be summated as the integer value of each variable of alice and bob. The question in hacker rank asks you to display it in an array so you need to return it as array.</p>"
46280634	Clicking href javascript in Selenium with Python	javascript|python|selenium	2017-09-18 13:32:47.430000 UTC	"<p>I'm trying to click on href javascript link with Selenium in Python.</p>  <p>The HTML looks like this: <a href=""https://i.stack.imgur.com/HaP66.png"" rel=""nofollow noreferrer"">HTML Example</a>  and I want to click on javascript:goType(1).</p>  <p>this is what I tried to do:</p>  <pre><code>advance_search = browser.find_element_by_xpath(""//a[@href='javascript:goType(1)']"") advance_search.click() </code></pre>  <p>but it failed with: <code>selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {""method"":""xpath"",""selector"":""//a""}</code></p>  <p>Moreover, when I trying to print all ""a"" tags it prints an empty lists (Maybe this cause the error). Is There a chance that it isn't possible?</p>  <p>I searched for similars answers but they didn't helped. Plese help me :).</p>"	46282748	"<p>I think I realized something: When I did <code>browser.find_elements_by_tag_name(""body"")</code> it didn't found anything, but when I   tried with ""head"" it did found, and then I discovered that there is a 'page source' and a 'frame source', and my code works only on the page source and not on the frame source. </p>  <p>It doesn't finds anything because all my code is in the frame source. How could I run selenium on the frame source? </p>"
46288695	Is it possible to convert a html file containing a JavaScript chart to PDF in python?	javascript|python|html|pdf	2017-09-18 21:49:43.223000 UTC	"<p>I am trying to convert a html file to pdf in python. The html file has a javascript chart.<br /> At first, I used weasyprint and pdfkit modules but I found that the modules does not support javascript.  <br />So now I am using wkhtmltopdf module. It convert most of the html code to pdf, except javascript. Is it possible to convert an html file containing a JavaScript chart to PDF in python? <br />or should I use another module? <br />Below is the JavaScript code that does not appear in the pdf file.</p>  <pre><code>&lt;script type=""text/javascript""&gt;  FusionCharts.ready(function(){    var fusioncharts = new FusionCharts({    type: 'hlineargauge',    renderAt: 'chart_container',    width: '350px',    height: '170px',    dataFormat: 'json',    dataSource: {        ""chart"": {            ""theme"": ""fint"",            ""caption"": ""Chart A"",            ""lowerLimit"": ""0"",            ""upperLimit"": ""20"",            ""chartBottomMargin"": ""40"",            ""valueFontSize"": ""11"",            ""valueFontBold"": ""z0""        },        ""colorRange"": {            ""color"": [{                ""minValue"": ""0"",                ""maxValue"": ""11.5"",                ""label"": ""Low"",                ""code"" : ""#FDB881"",            }, {                ""minValue"": ""11.5"",                ""maxValue"": ""12.5"",                ""label"": ""Typical"",                ""code"" : ""#F18B36"",            }, {                ""minValue"": ""12.5"",                ""maxValue"": ""20"",                ""label"": ""High"",                ""code"" : ""#D2660D"",            }]        },        ""pointers"": {            ""pointer"": [{                ""value"": ""8"",                'borderColor':'#333333',                'borderThickness':'3',                'borderAlpha':'100',                'bgColor':'#FF0000'           }]       },   } } );   fusioncharts.render(); }); &lt;/script&gt; </code></pre>  <p>wkhtmltopdf version is 0.12.4 and the command is</p>  <pre><code>$ wkhtmltopdf --javascript-delay 5000 test.html test.pdf </code></pre>"	46288882	"<p>Here is an example from a previous StackOverflow question.  <a href=""https://stackoverflow.com/questions/23359083/how-to-convert-webpage-into-pdf-by-using-python"">How to convert webpage into PDF by using Python</a></p>  <p>This example uses the library <a href=""https://pypi.python.org/pypi/pdfkit/0.4.1"" rel=""nofollow noreferrer"">pfdkit</a></p>  <pre><code>import pdfkit pdfkit.from_url('http://google.com', 'out.pdf') </code></pre>  <p>If it doesn't render the chart you could try using an iFrame with pdfkit to get desired results!</p>  <p>Here is an example using <a href=""http://weasyprint.org/"" rel=""nofollow noreferrer"">WeasyPrint</a> First, install weasyprint. </p>  <pre><code>pip install weasyprint </code></pre>  <p>Then run example</p>  <pre><code>python &gt;&gt;&gt; pdf = weasyprint.HTML('http://www.google.com').write_pdf() &gt;&gt;&gt; len(pdf) 92059 &gt;&gt;&gt; file('google.pdf', 'w').write(pdf) </code></pre>  <p>Here is a third example, because i'm fun. :)</p>  <pre><code>import sys  from PyQt4.QtCore import * from PyQt4.QtGui import *  from PyQt4.QtWebKit import *   app = QApplication(sys.argv) web = QWebView() web.load(QUrl(""http://www.yahoo.com"")) printer = QPrinter() printer.setPageSize(QPrinter.A4) printer.setOutputFormat(QPrinter.PdfFormat) printer.setOutputFileName(""fileOK.pdf"")  def convertIt():     web.print_(printer)     print ""Pdf generated""     QApplication.exit()  QObject.connect(web, SIGNAL(""loadFinished(bool)""), convertIt) sys.exit(app.exec_()) </code></pre>"
46368807	"""GET"" get text of script, ""POST"" results in ""405 method not allowed"", I _did_ methods=['GET', 'POST'] (from JavaScript through Flask to Python)"	javascript|python|flask	2017-09-22 16:00:32.953000 UTC	"<p>In a Raspberry Pi I use Flask to serve a web page, which uses JavaScript to post to a Python script.</p>  <p>Folder structure:</p>  <pre><code>/home/pi/Elithion/app.py /home/pi/Elithion/templates/index.html /home/pi/Elithion/static/wificonfig.py </code></pre>  <p>app.py (Python code using Flask)</p>  <pre><code>from flask import Flask, render_template, url_for  app = Flask(__name__)  @app.route('/', methods=['GET', 'POST']) def index():     return render_template('index.html')  if __name__ == '__main__':     app.run(debug=True, host='0.0.0.0') </code></pre>  <p>index.html, JavaScript:</p>  <pre><code>function ReqWifiConfig(selectedWiFiNetwork, wiFiPassword) { // Request setting the WiFi configuration      // Constants     var WifiConfigScript = '/static/wificonfig.py';     var ContentKey = 'Content-type';     var ContentVal = 'application/x-www-form-urlencoded';      // Send the wifi login credentials to the Python script using AJAX     var xmlhttp = new XMLHttpRequest();          xmlhttp.onreadystatechange=function() {         if (xmlhttp.readyState==4 &amp;&amp; xmlhttp.status==200){             ...         }            else if (xmlhttp.readyState==4) {             alert(xmlhttp.status + xmlhttp.statusText);          }     }     xmlhttp.open(""POST"", WifiConfigScript, true);       xmlhttp.setRequestHeader(ContentKey, ContentVal);     var postData = 'nw=' + selectedWiFiNetwork + '&amp;pw=' + wiFiPassword;     xmlhttp.send(postData);      } </code></pre>  <p>This results in this alert in browser: </p>  <pre><code>127.0.0.1:5000 says: 405METHOD NOT ALLOWED </code></pre>  <p>and this message in the terminal:</p>  <pre><code>127.0.0.1 - - (date) ""POST / static/wificonfig.py HTTP/1.1 405 - </code></pre>  <p>If I change ""POST"" to ""GET"", it returns the text in the script, so I know the paths are right.</p>  <p>I checked these StackOverflow answers, and they did not help, because I do have the right path, I am not using a HTML form, and CORS does not apply: </p>  <ul> <li><a href=""https://stackoverflow.com/questions/24560530/sending-post-data-through-flask"">Sending POST Data through Flask</a></li> <li><a href=""https://stackoverflow.com/questions/33733277/post-405-method-not-allowed"">POST 405 (Method Not Allowed)</a></li> <li><a href=""https://stackoverflow.com/questions/12179593/flask-post-error-405-method-not-allowed"">Flask - POST Error 405 Method Not Allowed</a></li> <li><a href=""https://stackoverflow.com/questions/21689364/method-not-allowed-flask-error-405"">Method Not Allowed flask error 405</a></li> <li><a href=""https://stackoverflow.com/questions/24088054/method-not-allowed-error-in-flask"">method not allowed error in flask</a>.</li> </ul>"	46369292	"<p>You can't post to static files. If you have Python code you want to run, you do that in a Flask view function. Move your script next to your application so it's importable, import it, call it, and return a response.</p>  <pre><code>from flask import request, jsonify from import wificonfig import do_config  @app.route('/wificonfig', methods=['POST']) def wificonfig():     result = do_config(nw=request.form['nw'], pw=request.form['pw'])     return jsonify(result) </code></pre>  <p>The JavaScript in your template posts to this route, not to <code>wificonfig.py</code>. Generate the URL with <code>url_for</code> and use <code>tojson</code> since you're using the value in JavaScript.</p>  <pre><code>var wifiConfigScript = {{ url_for('wificonfig')|tojson }}; </code></pre>"
46368807	"""GET"" get text of script, ""POST"" results in ""405 method not allowed"", I _did_ methods=['GET', 'POST'] (from JavaScript through Flask to Python)"	javascript|python|flask	2017-09-22 16:00:32.953000 UTC	"<p>In a Raspberry Pi I use Flask to serve a web page, which uses JavaScript to post to a Python script.</p>  <p>Folder structure:</p>  <pre><code>/home/pi/Elithion/app.py /home/pi/Elithion/templates/index.html /home/pi/Elithion/static/wificonfig.py </code></pre>  <p>app.py (Python code using Flask)</p>  <pre><code>from flask import Flask, render_template, url_for  app = Flask(__name__)  @app.route('/', methods=['GET', 'POST']) def index():     return render_template('index.html')  if __name__ == '__main__':     app.run(debug=True, host='0.0.0.0') </code></pre>  <p>index.html, JavaScript:</p>  <pre><code>function ReqWifiConfig(selectedWiFiNetwork, wiFiPassword) { // Request setting the WiFi configuration      // Constants     var WifiConfigScript = '/static/wificonfig.py';     var ContentKey = 'Content-type';     var ContentVal = 'application/x-www-form-urlencoded';      // Send the wifi login credentials to the Python script using AJAX     var xmlhttp = new XMLHttpRequest();          xmlhttp.onreadystatechange=function() {         if (xmlhttp.readyState==4 &amp;&amp; xmlhttp.status==200){             ...         }            else if (xmlhttp.readyState==4) {             alert(xmlhttp.status + xmlhttp.statusText);          }     }     xmlhttp.open(""POST"", WifiConfigScript, true);       xmlhttp.setRequestHeader(ContentKey, ContentVal);     var postData = 'nw=' + selectedWiFiNetwork + '&amp;pw=' + wiFiPassword;     xmlhttp.send(postData);      } </code></pre>  <p>This results in this alert in browser: </p>  <pre><code>127.0.0.1:5000 says: 405METHOD NOT ALLOWED </code></pre>  <p>and this message in the terminal:</p>  <pre><code>127.0.0.1 - - (date) ""POST / static/wificonfig.py HTTP/1.1 405 - </code></pre>  <p>If I change ""POST"" to ""GET"", it returns the text in the script, so I know the paths are right.</p>  <p>I checked these StackOverflow answers, and they did not help, because I do have the right path, I am not using a HTML form, and CORS does not apply: </p>  <ul> <li><a href=""https://stackoverflow.com/questions/24560530/sending-post-data-through-flask"">Sending POST Data through Flask</a></li> <li><a href=""https://stackoverflow.com/questions/33733277/post-405-method-not-allowed"">POST 405 (Method Not Allowed)</a></li> <li><a href=""https://stackoverflow.com/questions/12179593/flask-post-error-405-method-not-allowed"">Flask - POST Error 405 Method Not Allowed</a></li> <li><a href=""https://stackoverflow.com/questions/21689364/method-not-allowed-flask-error-405"">Method Not Allowed flask error 405</a></li> <li><a href=""https://stackoverflow.com/questions/24088054/method-not-allowed-error-in-flask"">method not allowed error in flask</a>.</li> </ul>"	46373342	"<p>Solved it, thanks to davidism's clarifications.</p>  <p>Folder structure:</p>  <pre><code>/home/pi/Elithion/app.py /home/pi/Elithion/templates/index.html /home/pi/Elithion/wificonfig.py </code></pre>  <p>app.py (Python code using Flask)</p>  <pre><code>from flask import Flask, render_template, request import wificonfig  app = Flask(__name__)  # Show the HTML page @app.route('/') def index():     return render_template('index.html')  # Service the POST request @app.route('/postService', methods=['POST']) def postService():     wifiStatus = 'fail'     if request.method == 'POST':         nw = request.form['nw'] # WiFi network         pw = request.form['pw'] # WiFi Password         wifiStatus = wificonfig.configwifi(nw, pw)     return wifiStatus  if __name__ == '__main__':     app.run(debug=True, host='0.0.0.0') </code></pre>  <p>wificonfig.py script:</p>  <pre><code>def configwifi(nw, np):     """""" Sign onto the WiFi specified network with the given password """"""     # ... Code to sign onto the WiFi network     return 'OK' </code></pre>  <p>index.html, JavaScript:</p>  <pre><code>function ReqWifiConfig(selectedWiFiNetwork, wiFiPassword) { // Request setting the WiFi configuration      // Constants     var  WifiConfigScript = '/postService';     var ContentKey = 'Content-type';     var ContentVal = 'application/x-www-form-urlencoded';      // Send the login credentials to the Python script using AJAX     var xmlhttp = new XMLHttpRequest();          xmlhttp.onreadystatechange=function() {         if (xmlhttp.readyState==4 &amp;&amp; xmlhttp.status==200){             alert(xmlhttp.status + xmlhttp.statusText); // Returns 'OK'         }     }     xmlhttp.open(""POST"", WifiConfigScript, true);     xmlhttp.setRequestHeader(ContentKey, ContentVal);     var postData = 'nw=' + selectedWiFiNetwork + '&amp;pw=' + wiFiPassword;     xmlhttp.send(postData);      } </code></pre>"
46372213	How to pass a javascript variable to WTForm? Python/Flask	javascript|python|flask|wtforms|flask-wtforms	2017-09-22 19:47:37.547000 UTC	"<p>I am creating a data entry/timing web app using Python and Flask. When the user goes to the log page, they enter in the ""session ID"" for their task, and the time of form submission and user ID are automatically input to the database as well. </p>  <p>Now I am trying to use Javascript to record when the page is loaded for a task so I have a start time and an end time. I first attempted to POST the javascript variable via AJAX to the back end, but I couldn't seem to get it to work. Now I am trying to have the javascript variable be sent alongside the session ID as part of a ""HiddenField"". I am not yet at the point of configuring the page load time script, I am just trying to get the Javascript to talk to WTForms to talk to my database commit. Here is my code currently:</p>  <p>views.py</p>  <pre><code>@app.route('/logpage', methods=['GET', 'POST']) @login_required def logpage():     form = LogForm()      if form.validate_on_submit():         timer = request.get_data(""timer"")         entry = LogData(sessionid=form.sessionid.data, user_id=current_user.get_id(), starttime=form.testvar.data, endtime=datetime.utcnow())         db.session.add(entry)         db.session.commit()          return redirect(url_for('home'))      return render_template('logpage.html', form=form) </code></pre>  <p>models.py</p>  <pre><code>class LogForm(FlaskForm):     sessionid = StringField('sessionid', validators=[InputRequired(), Length(min=16, max=16)])     testvar = HiddenField('testvar') </code></pre>  <p>logpage.html</p>  <pre><code>{% extends ""base.html"" %} {% import ""bootstrap/wtf.html"" as wtf %}  {% block title %}Active Log Page{% endblock %} {% block head %}     &lt;!-- Custom styles for this template --&gt;     &lt;link href=""static/css/starter-template.css"" rel=""stylesheet""&gt;     &lt;script src=""//ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js""&gt;&lt;/script&gt;     &lt;script&gt;window.jQuery || document.write('&lt;script src=""{{ url_for('static', filename='jquery.js') }}""&gt;\x3C/script&gt;')&lt;/script&gt;     &lt;script src=""static/js/timer.js?version=25""&gt;&lt;/script&gt; {% endblock %}  {% block body %}      &lt;div class=""container""&gt;      &lt;div class=""form-group""&gt;     &lt;form class=""form-logpage"", method=""POST"" action=""/logpage"", id=""jsinput""&gt;       {{ form.hidden_tag() }}       {{ wtf.form_field(form.sessionid) }}       &lt;div id=""jsinput""&gt;       {{ wtf.form_field(form.testvar) }}       &lt;/div&gt; &lt;button class=""btn btn-lg btn-primary btn-block"" type=""submit""&gt;Finish Job&lt;/button&gt; &lt;/form&gt;   &lt;/div&gt; &lt;/div&gt; {% endblock %} </code></pre>  <p>timer.js</p>  <pre><code>var myData = ""dataVariable""; document.getElementById(""jsinput"").value = ""myData""; </code></pre>  <p>As you can see, I tried to use document.getElementById to put the variable in logpage.html, but when I hit submit, the starttime field is empty. I've looked around the documentation for a way to put a variable in the WTForm, but I can't find anything relevant. </p>  <p>Before, during some other issues it's showed as null and /x and ''b but I've done a good bit of tinkering since then and the database entry is just ''. </p>  <p>If there is a more elegant way to record page load datetime and record simultaneously to the database with the rest of the data, I would love to hear suggestions. Previous SO post here: <a href=""https://stackoverflow.com/questions/46312349/python-flask-how-to-tell-how-long-a-user-spends-on-a-page-data-entry-time-log"">Python/Flask: How to tell how long a user spends on a page? (Data entry/time log app)</a></p>"	72412651	"<p>Here's the solution I came up with for this problem:</p> <ol> <li>Add a hidden field to the form with an id.</li> <li>Grab the ID in your script and assign a value to it.</li> </ol> <p>In your form.py:</p> <pre class=""lang-py prettyprint-override""><code>from flask_wtf import FlaskForm from wtforms import SubmitField from wtforms import HiddenField  class MyForm(FlaskForm):          my_data = HiddenField(         'my_data',         render_kw={'id':'my_data'}     )          save = SubmitField(         'Save',         render_kw={'id':'save'}     ) </code></pre> <p>create and pass your form in your view and then render the save and my_data fields in your html template using <code>{{ form.save }}</code> and <code>{{ form.my_data }}</code></p> <p>Add the following to your javascript:</p> <pre class=""lang-js prettyprint-override""><code>var saveButton = document.getElementById('save');  saveButton.addEventListener('click', function() {     document.getElementById('my_data').value = 'MY DATA IS HERE!!'; }); </code></pre> <p>you can now access your data in your python view using:</p> <pre class=""lang-py prettyprint-override""><code>from flask import request  ...some code...  request.form['my_data'] </code></pre> <p>It's a late answer, but hopefully useful to someone out there...</p>"
46379180	How to extract Javascript content into python?	javascript|python	2017-09-23 11:38:08.417000 UTC	"<p>I am trying to extract the javascript content from this site: <a href=""https://js.tokopedia.com/productstats/check?pid=2156146"" rel=""nofollow noreferrer"">https://js.tokopedia.com/productstats/check?pid=2156146</a> </p>  <p>it's a very simple javascript information that i need to put inside my Python code, basically I have a dictionary of items that I have converted from JSON to my python code from the same website. I want to do the same thing with Javascript and convert it to python, but so far the solution I found is for me to try Selenium which I am familiar with but Selenium is slow. This task requires me to extract many information from different uri.</p>  <p>Here's a snippet of my code:</p>  <pre><code>for x in range (0, 3): with opener.open('https://ace.tokopedia.com/search/v2.6/product?shop_id=2156146&amp;ob=11&amp;rows=80&amp;start='+ str(x*80) +'&amp;full_domain=www.tokopedia.com&amp;scheme=https&amp;device=desktop&amp;source=shop_product') as url:     data = json.loads(url.read().decode())     for produk in data['data']:         k+=1         pid = produk['id']         my_url = opener.open('https://js.tokopedia.com/productstats/check?pid=' + str(pid))         url3 = json.loads(my_url.read().decode())         print(k, produk['id'], produk['name'], produk['price'], url3['item_sold']) </code></pre>  <p>I'm trying to do the same thing with json.loads which of course didn't work because it's in javascript.</p>  <p>I forgot what i did, but I think when I used requests I got this intstead:<code>&lt;addinfourl at 2309306503576 whose fp = &lt;http.client.HTTPResponse object at 0x00000219AD61AA20&gt;&gt;</code></p>  <p>Help would be really appreciated.</p>"	46379273	"<p>The content is not a JSON string, but contains a JSON string you need to extract first. For instance, you can split the string at the ""("" position:</p>  <pre><code>content = """"""show_product_stats({""item_sold"":0, ""success"":0,""reject"":0})"""""" frag = content[content.index(""("") + 1:-1] </code></pre>  <p>The convert the JSON string to a Python object:</p>  <pre><code>import json  obj = json.loads(frag) print(obj) # -&gt; {'item_sold': 0, 'success': 0, 'reject': 0} </code></pre>"
46393884	Anyway to pause computation and interact with local variables in Javascript like the interact function provided by Python code package?	javascript	2017-09-24 19:14:56.660000 UTC	"<p>I am trying to pause computation in javascript and interact with variables defined prior to the interrupt line.</p>  <p>In python, you can do this by inserting a call to interact from the code package:</p>  <pre><code>import code cat = 'cat' pi = 3.14 def foo(bar):     a = 3     b = 'hello'     code.interact(local=dict(globals(), **locals()))     return bar </code></pre>  <p>Making a call to <code>foo</code> in the above code would pause computation on the line with the call to interact, and you would be able to interact with the local variables <code>a</code> and <code>b</code> as well as the function arguments <code>bar</code> and any variables/functions within the scope of the interact (such as globally defined <code>cat</code> and <code>pi</code> variables).</p>  <p>I use code.interact for all my debugging in python. It's simple and lightweight. It would be great to be able to have something like code.interact in javascript, but I haven't found anything yet. </p>  <p>Is there something like python's <code>code.interact</code> function in javascript</p>"	46393962	"<p>In JavaScript this is called a <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Iterators_and_Generators"" rel=""nofollow noreferrer"">Generator</a>.</p>  <p>A generator would look something like this : </p>  <pre><code>function* add(){   const a = yield;   const b = yield;   console.log(`Sum is ${a + b}`); }  const addGenerator = add(); addGenerator.next(1); addGenerator.next(2); // Sum is 3 </code></pre>  <p>The yield keyword(expression) pauses function execution, and you can place it any where in the right side of a statement.</p>  <p>A generator produces an iterator which you can use to run the iterator to completion.</p>  <p>Note though you will need the babel-pollyfill to make generators work.</p>"
46405385	Use python zlib to decompress string compressed with javascript zlib	javascript|python|zlib	2017-09-25 12:33:19.777000 UTC	"<p>On the client side, I use the <a href=""https://github.com/imaya/zlib.js/blob/develop/README.en.md"" rel=""nofollow noreferrer"">zlib.js</a> library to deflate some string, then I encode it into base64 to be sent to the server:</p>  <pre><code>var a = {""foo"" : ""bar""}; var deflate = new Zlib.Deflate(JSON.stringify(a)); var compressed = deflate.compress(); var sentToServer = btoa(String.fromCharCode.apply(null, compressed)); &gt;&gt;&gt; ""eJwVwwEJAAAAgKD/ry3B5QAdegQ0"" </code></pre>  <p>On the server side I want to use <a href=""https://docs.python.org/2/library/zlib.html"" rel=""nofollow noreferrer"">zlib for python27</a> to decompress, but I got the following error:</p>  <pre><code>import base64, zlib  a = base64.b4decode(""eJwVwwEJAAAAgKD/ry3B5QAdegQ0"") zlib.decompress(a) &gt;&gt;&gt;zlib.error: Error -3 while decompressing data: invalid distance too far back </code></pre>  <p>What is the proper way to achieve that?</p>"	46406948	"<p><code>zlib.js</code>'s <code>Deflate</code> accepts <code>Array.&lt;number&gt;</code> or<code>Uint8Array</code>, you need convert JSON to an array of int:</p>  <pre><code>var a = {""foo"" : ""bar""}; var s = JSON.stringify(a); var data = new Array(s.length); for (i = 0, il = s.length; i &lt; il; ++i) {     data[i] = s.charCodeAt(i); } var deflate = new Zlib.Deflate(data); </code></pre>  <p>which yields: <code>eJwFgEEJAAAIA7tcDNvow+/A77D7MCtRTB8fHXoENA==</code></p>"
46432245	Run a python script before loading webpage from javascript/html	javascript|python|html|csv|webpage	2017-09-26 17:11:06.197000 UTC	"<p>I have an index.html which reads a csv file and displays it on a webpage using <code>Javascript DataTables</code>. It is as follows:</p>  <pre><code>&lt;!DOCTYPE html&gt; &lt;html lang=""en""&gt;   &lt;head&gt;     &lt;meta charset=""utf-8""&gt;     &lt;meta http-equiv=""X-UA-Compatible"" content=""IE=edge""&gt;     &lt;meta name=""viewport"" content=""width=device-width, initial-scale=1""&gt;     &lt;!-- The above 3 meta tags *must* come first in the head; any other head content must come *after* these tags --&gt;     &lt;title&gt;CSV to HTML Table&lt;/title&gt;      &lt;!-- Bootstrap core CSS --&gt;     &lt;link href=""css/bootstrap.min.css"" rel=""stylesheet""&gt;     &lt;link href=""css/dataTables.bootstrap.css"" rel=""stylesheet""&gt;      &lt;!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries --&gt;     &lt;!--[if lt IE 9]&gt;       &lt;script type=""text/javascript"" src=""https://oss.maxcdn.com/html5shiv/3.7.2/html5shiv.min.js""&gt;&lt;/script&gt;       &lt;script type=""text/javascript"" src=""https://oss.maxcdn.com/respond/1.4.2/respond.min.js""&gt;&lt;/script&gt;     &lt;![endif]--&gt;   &lt;/head&gt;    &lt;body&gt;     &lt;div class=""container-fluid""&gt;        &lt;h2&gt;CSV to HTML Table&lt;/h2&gt;          &lt;div id='table-container'&gt;&lt;/div&gt;      &lt;/div&gt;&lt;!-- /.container --&gt;        &lt;!-- Bootstrap core JavaScript     ================================================== --&gt;     &lt;!-- Placed at the end of the document so the pages load faster --&gt;     &lt;script type=""text/javascript"" src=""js/jquery.min.js""&gt;&lt;/script&gt;     &lt;script type=""text/javascript"" src=""js/bootstrap.min.js""&gt;&lt;/script&gt;     &lt;script type=""text/javascript"" src=""js/jquery.csv.min.js""&gt;&lt;/script&gt;     &lt;script type=""text/javascript"" src=""js/jquery.dataTables.min.js""&gt;&lt;/script&gt;     &lt;script type=""text/javascript"" src=""js/dataTables.bootstrap.js""&gt;&lt;/script&gt;     &lt;script type=""text/javascript"" src=""js/csv_to_html_table.js""&gt;&lt;/script&gt;       &lt;script type=""text/javascript""&gt;       function format_link(link){         if (link)           return ""&lt;a href='"" + link + ""' target='_blank'&gt;"" + link + ""&lt;/a&gt;"";         else           return """";       }       CsvToHtmlTable.init({         csv_path: 'data/fatty_acid_profiles.csv',         element: 'table-container',          allow_download: true,         csv_options: {separator: ','},         datatables_options: {""paging"": false},         custom_formatting: [[4, format_link]]       });     &lt;/script&gt;   &lt;/body&gt; &lt;/html&gt; </code></pre>  <p>I have this running on an <code>ec2</code> instance. I want that when this url is opened, before loading the page, first a python script called <code>computation.py</code> should be run that creates the above <code>data/fatty_acid_profiles.csv</code> file and then the page should load. How do I do I enable running the python script before loading the page?</p>"	46432564	"<p>You can create a simple flask app to serve the HTML file, refer <a href=""http://flask.pocoo.org/"" rel=""nofollow noreferrer"">Flask Documentation</a>. In the index route, you can call computation.py's function to generate the required CSV file and then return the HTML page.</p>"
46440155	How in Flask connect JavaScript with python event	javascript|python|flask	2017-09-27 05:33:09.287000 UTC	"<p>Can you help me please, I have a flask app with some javasript. I need to send the data through post to python and call javascript function. But when I try to call JS first on flask ""action"" event, my post data was sending empty to python, after calling JS function. For my features I need this function to show the alert message and erase the text fields! </p>  <p>So, the main idea is show an alert ""Your message has been sent!"", clear text fields and send post data when you click the button!</p>  <p>Here is the code (JS): </p>  <pre><code>&lt;form action=""/sendemail"" method=""post""&gt;       &lt;input type=""text"" id=""email"" name=""email"" placeholder=""Email"" /&gt;       &lt;textarea name=""message"" id=""text"" placeholder=""Message""&gt;&lt;/textarea&gt;       &lt;button id=""button"" onclick=""myFunc()""&gt;Send&lt;/button&gt; &lt;/form&gt;      &lt;script&gt;          function myFunc() {             alert(""Your message has been sent!"");             document.getElementById(""email"").value = """";             document.getElementById(""text"").value = """";                     }     &lt;/script&gt; </code></pre>  <p>Python:</p>  <pre><code>@FlaskApp2.route('/sendemail', methods=['GET', 'POST']) def MailSend():           print request.form['email']         print request.form['message']          return ('', 204) </code></pre>  <p>And after all of these I have empty data from post request, I think because JS is execute faster than flask ""action"" block!</p>  <p>How I need to catch it and send post data before JS call the function on a button click event?</p>"	46440470	"<p>You javascript function myFunc is executed before form submitted to the server. So, the email and message have already cleared. </p>  <p>I think you can check this answer: <a href=""https://stackoverflow.com/questions/14589193/clearing-my-form-inputs-after-submission"">Clearing my form inputs after submission</a></p>"
46448894	How to get the 'selectedIndex' property of a Select using JavaScript in Python with selenium	javascript|python-3.x|selenium	2017-09-27 13:15:56.650000 UTC	"<p>I am trying to execute a JavaScript script to get the index of a selected option from a <strong>Select</strong> webelement like so:</p>  <pre><code>@property def selected_option_index(self):     index = driver.execute_script('arguments[0].selectedIndex', self.select_field)     return index </code></pre>  <p>But the result is <strong>None</strong></p>  <p>The same happens when I try a more direct approach, like:</p>  <pre><code>index = driver.execute_script('document.querySelector(\'select[name=""vehicleType""]\').selectedIndex') </code></pre>  <p><a href=""https://i.stack.imgur.com/C6tbt.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/C6tbt.png"" alt=""Debugging result""></a></p>  <p>However, when I try running the following JavaScript: </p>  <pre><code>typeSelectIndex = document.querySelector('select[name=""vehicleType""]').selectedIndex </code></pre>  <p>in the developer tools - console, the result is ok:</p>  <pre><code>15 </code></pre>  <p><a href=""https://i.stack.imgur.com/fr6Hv.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/fr6Hv.png"" alt=""Developer Tools query result""></a></p>  <p>How should the Python code be structured to obtain the desired result?</p>"	46449002	"<p>You are missing return keyword in the javascript. please try the followings.</p>  <pre><code>@property def selected_option_index(self):     index = driver.execute_script('return arguments[0].selectedIndex', self.select_field)     return index </code></pre>  <p>or</p>  <pre><code>index = driver.execute_script('return document.querySelector(\'select[name=""vehicleType""]\').selectedIndex') </code></pre>"
46486032	using of javascript or python in SSIS?	javascript|python|ssis|etl|ssis-2012	2017-09-29 09:36:50.270000 UTC	<p>I am planning to use of javascript or python in SQL SERVER INTEGRATION SERVICES (SSIS ETL).Does it has to be utilised using the execute process task.Is there any other way to replace the existing script task with python and or javascript {The current script task/components only support Vb/C# :(    ) .Please share your thoughts</p>	46505204	"<p>You can only use VB/C# in the script task.  </p>  <p><a href=""https://docs.microsoft.com/en-us/sql/integration-services/control-flow/script-task"" rel=""nofollow noreferrer"">https://docs.microsoft.com/en-us/sql/integration-services/control-flow/script-task</a></p>  <blockquote>   <p>Script Language</p>      <p>Select the scripting language for the task, either Microsoft Visual Basic or Microsoft Visual C#.</p> </blockquote>"
46486032	using of javascript or python in SSIS?	javascript|python|ssis|etl|ssis-2012	2017-09-29 09:36:50.270000 UTC	<p>I am planning to use of javascript or python in SQL SERVER INTEGRATION SERVICES (SSIS ETL).Does it has to be utilised using the execute process task.Is there any other way to replace the existing script task with python and or javascript {The current script task/components only support Vb/C# :(    ) .Please share your thoughts</p>	56952266	"<p>With the 1.9 release of COZYROC SSIS+ (a commercial third-party suite of useful SSIS extensions), you can now use JavaScript as a scripting language in SSIS. For more info, see <a href=""https://www.cozyroc.com/ssis/javascript"" rel=""nofollow noreferrer"">https://www.cozyroc.com/ssis/javascript</a> </p>  <p>Disclaimer: I am working for COZYROC and have been involved in the development of the JS support.</p>"
46515337	Translate Pythonic program logic into JavaScript to execute in the browser for React app	javascript|python|reactjs	2017-10-01 18:08:30.173000 UTC	"<p>This is the basic structure of the landing page from my new React app, created according to the <a href=""https://reactjs.org/blog/2016/07/22/create-apps-with-no-configuration.html"" rel=""nofollow noreferrer"">standard documentation</a>:</p>  <pre><code>import React, { Component } from 'react'; import logo from './logo.svg'; import './App.css';  class App extends Component {   render() {     return (       &lt;div className=""App""&gt;         &lt;header className=""App-header""&gt;           &lt;img src={logo} className=""App-logo"" alt=""logo"" /&gt;           &lt;h1 className=""App-title""&gt;Welcome to React&lt;/h1&gt;         &lt;/header&gt;         &lt;p className=""App-intro""&gt;           To get started, edit &lt;code&gt;src/App.js&lt;/code&gt; and save to reload.         &lt;/p&gt;       &lt;/div&gt;     );   } }  export default App; </code></pre>  <p>My idea is to embed the logic of a Python script that I wrote- kind of simplistic ""<em>proof of concept</em>""- into this React app, such that it can execute in the browser of the person viewing the page. </p>  <p>I've never built a React app before though- how can I include that python routine as part of the React app- presumably rewritten in JavaScript- so that it can execute inside of the browser? </p>  <p>Here is the crux of the Python function: </p>  <pre><code># This method determines whether or not the number is a Palindrome def isPalindrome(x):     x = '{:.2f}'.format(x).replace('.','')     a, z = 0, len(x) - 1     while a &lt; z:         if x[a] != x[z]:             return False         a += 1         z -= 1     return True </code></pre>  <p>I've seen before that JavaScript can just have functions that are defined- for instance- at the bottom of the index page- and that they're just called by some procedural code to execute- pass them some variables- and so on- is that the right way? Maybe I should encapsulate it somehow? </p>"	46517196	"<p><a href=""http://www.skulpt.org/"" rel=""nofollow noreferrer"">http://www.skulpt.org/</a></p>  <p>You're looking for an ""in-browser Python interpreter"". </p>  <p>Here's one React implementation for you to guide yourself on. It doesn't have the small, snippet-sized scale I believe you seek, but the code will be useful nonetheless. </p>  <p><a href=""https://github.com/fatiherikli/fil"" rel=""nofollow noreferrer"">https://github.com/fatiherikli/fil</a></p>"
46515337	Translate Pythonic program logic into JavaScript to execute in the browser for React app	javascript|python|reactjs	2017-10-01 18:08:30.173000 UTC	"<p>This is the basic structure of the landing page from my new React app, created according to the <a href=""https://reactjs.org/blog/2016/07/22/create-apps-with-no-configuration.html"" rel=""nofollow noreferrer"">standard documentation</a>:</p>  <pre><code>import React, { Component } from 'react'; import logo from './logo.svg'; import './App.css';  class App extends Component {   render() {     return (       &lt;div className=""App""&gt;         &lt;header className=""App-header""&gt;           &lt;img src={logo} className=""App-logo"" alt=""logo"" /&gt;           &lt;h1 className=""App-title""&gt;Welcome to React&lt;/h1&gt;         &lt;/header&gt;         &lt;p className=""App-intro""&gt;           To get started, edit &lt;code&gt;src/App.js&lt;/code&gt; and save to reload.         &lt;/p&gt;       &lt;/div&gt;     );   } }  export default App; </code></pre>  <p>My idea is to embed the logic of a Python script that I wrote- kind of simplistic ""<em>proof of concept</em>""- into this React app, such that it can execute in the browser of the person viewing the page. </p>  <p>I've never built a React app before though- how can I include that python routine as part of the React app- presumably rewritten in JavaScript- so that it can execute inside of the browser? </p>  <p>Here is the crux of the Python function: </p>  <pre><code># This method determines whether or not the number is a Palindrome def isPalindrome(x):     x = '{:.2f}'.format(x).replace('.','')     a, z = 0, len(x) - 1     while a &lt; z:         if x[a] != x[z]:             return False         a += 1         z -= 1     return True </code></pre>  <p>I've seen before that JavaScript can just have functions that are defined- for instance- at the bottom of the index page- and that they're just called by some procedural code to execute- pass them some variables- and so on- is that the right way? Maybe I should encapsulate it somehow? </p>"	46547855	"<p>React is basically pure Javascript. So you would use something like:</p>  <pre><code>   function isPalindrome(x){         let y = x.Fixed(2).replace('.', '')         z = y.length - 1         for(let a=0; a++; a&lt;y){             if(y[a]!=y[z]){                 return false             }             a++             z--         }         return true     } </code></pre>  <p>If you want to learn more about React, you should start by reading a bit about <a href=""https://reactjs.org/docs/react-component.html"" rel=""nofollow noreferrer"">Component Lifecycle</a>. EDIT: forgot to instantiate the a let</p>"
46593506	Web Scraping with Beautiful Soup in Python - JavaScript Table	beautifulsoup|python-requests|prettify	2017-10-05 19:34:04.567000 UTC	"<p>Im trying to scrape a table from a website but I cant seem to figure it out with Beautifulsoup in Python. Im not sure if its because of the table format, but I basically want to turn this table into a CSV. </p>  <pre><code>from bs4 import BeautifulSoup import requests  page = requests.geenter code heret(""https://spotwx.com/products/grib_index.php?model=hrrr_wrfprsf&amp;lat=41.03399&amp;lon=-73.76291&amp;tz=America/New_York&amp;display=table"") soup = BeautifulSoup(page.content, 'html.parser') print(soup.prettify) </code></pre>  <p>Any advice on how to isolate this data table? I've checked so many Beautifulsoup tutorials, but the HTML looks different than most references. Many thanks in advance for your help - </p>"	46594700	"<p>Try this. The table from that site generates dynamically so you can't get results using <code>requests</code> only.</p>  <pre><code>from selenium import webdriver from bs4 import BeautifulSoup import csv  link = ""https://spotwx.com/products/grib_index.php?model=hrrr_wrfprsf&amp;lat=41.03399&amp;lon=-73.76291&amp;tz=America/New_York&amp;display=table""  with open(""spotwx.csv"", ""w"", newline='') as infile:     writer = csv.writer(infile)     writer.writerow(['DateTime','Tmp','Dpt','Rh','Wh','Wd','Wg','Apcp','Slp'])     with webdriver.Chrome() as driver:         driver.get(link)         soup = BeautifulSoup(driver.page_source, 'lxml')         for item in soup.select(""table#example tbody tr""):             data = [elem.text for elem in item.select('td')]             print(data)             writer.writerow(data) </code></pre>"
46626736	How to run a python script inside javascript and refresh the view in django	javascript|python|django|web	2017-10-08 01:34:09.157000 UTC	"<p>I have a python script that takes in some data and manipulates it. However i need it to run on the client side inside the javascript to process some data and refresh the view. </p>  <p>The python file that manipulates data works well as I have tested it inside the IDLE shell </p>  <pre><code> DataManipulation.py  class ModifyData(object):         #Bunch of functions to manipulate data </code></pre>  <p>below is the function used to render the view with url '.../test' which also works perfectly. </p>  <pre><code> views.py    def test(request):          template = 'app/test.html'          file = 'documents/Sample.csv' #File  to be loaded           args = {'test': file }          return render(request, template, args) </code></pre>  <p>After loading this page, i use a javascript library that displays the data on the page in a table, the user can then manipulate the data like multiply a column by 3, but where I am stuck is how to take my DataManipulation.py file to modify the data and updates the page with the updated column on a button click</p>"	46626759	"<p>I think you should pass the data into template, and then use <code>javascript</code> to manipulate the data, after that you can use <code>ajax</code> to update your page without refresh, example:</p>  <pre><code>&lt;!--html--&gt; &lt;button onclick=""deleteUser({{ request.user.pk }})""&gt;Submit&lt;/button&gt; &lt;!----&gt;  function deleteUser(userid) {      var post_data = {         'userid': userid,     }      $.ajax({         type: ""POST"",         url: ""/deleteuser"",// the view function to post         data: post_data,         contentType: 'application/json;charset=UTF-8',         success: function(result) {             // do something after post             ...         }     }); } </code></pre>  <p>the view function:</p>  <pre><code># url(r'^/deleteuser$', views.delete_user) def delete_user(request):     if request.method == 'POST':         # do something         userid = request.POST.get('userid')         user = User.objects.get(pk=userid)         # dict contain response data         response_data = {...}          # return response         return HttpResponse(json.dumps(response_data),content_type='application/json') </code></pre>"
46626736	How to run a python script inside javascript and refresh the view in django	javascript|python|django|web	2017-10-08 01:34:09.157000 UTC	"<p>I have a python script that takes in some data and manipulates it. However i need it to run on the client side inside the javascript to process some data and refresh the view. </p>  <p>The python file that manipulates data works well as I have tested it inside the IDLE shell </p>  <pre><code> DataManipulation.py  class ModifyData(object):         #Bunch of functions to manipulate data </code></pre>  <p>below is the function used to render the view with url '.../test' which also works perfectly. </p>  <pre><code> views.py    def test(request):          template = 'app/test.html'          file = 'documents/Sample.csv' #File  to be loaded           args = {'test': file }          return render(request, template, args) </code></pre>  <p>After loading this page, i use a javascript library that displays the data on the page in a table, the user can then manipulate the data like multiply a column by 3, but where I am stuck is how to take my DataManipulation.py file to modify the data and updates the page with the updated column on a button click</p>"	46626807	"<p>Since executing python client side is not an option, you have two options. </p>  <ol> <li><p>re-write ModifyData in Javascript and use it client side. </p></li> <li><p>When a user does something like multiply a column by 3:</p>  <ul> <li>Use client side JS to make an ajax request to the server</li> <li>Have your server call ModifyData, and then return the data to the client</li> <li>have client update view with new data</li> </ul></li> </ol>  <p>I would recommend porting your python code to JS, but if that isn't possible #2 will always work. How you implement will just depend on how you manage data in the client. </p>"
46676527	Parsing javascript data structure in python	javascript|python|parsing	2017-10-10 21:45:36.007000 UTC	"<p>I'm trying to find a parser for python that can parse the data structure (to a python dictionary) that is written below (this data structure was taken from <code>var</code> variable in javascript).</p>  <pre><code>{     a: ""a"",     b: 54,     c: [         {             d: ""d"",             e: false         },         {             f: ""f""         }     ] }; </code></pre>"	46676711	"<h2><a href=""http://deron.meranda.us/python/demjson/demjson-2.2.3/docs/demjson.html#-decode"" rel=""nofollow noreferrer""><code>demjson.decode()</code></a></h2>  <pre><code>import demjson  # from js_obj = '{x:1, y:2, z:3}'  # to py_obj = demjson.decode(js_obj) </code></pre>  <h2><a href=""http://google.github.io/jsonnet/doc/bindings.html"" rel=""nofollow noreferrer""><code>jsonnet.evaluate_snippet()</code></a></h2>  <pre><code>import json, _jsonnet  # from js_obj = '{x:1, y:2, z:3}'  # to py_obj = json.loads(_jsonnet.evaluate_snippet('snippet', js_obj)) </code></pre>  <h2><a href=""https://docs.python.org/2/library/ast.html#ast.literal_eval"" rel=""nofollow noreferrer""><code>ast.literal_eval()</code></a></h2>  <pre><code>import ast  # from js_obj = ""{'x':1, 'y':2, 'z':3}""  # to py_obj = ast.literal_eval(js_obj) </code></pre>"
46677530	Naming convention between python backend and javascript frontend	javascript|python|naming-conventions	2017-10-10 23:36:19.383000 UTC	"<p>I have a frontend service written in javascript and a backend service written in python. </p>  <p>My question is what is the naming convention to be used when sending data between the services; specifically are payload keys to use camel case notation or be underscore delimited? </p>  <p>In either case one of the services ends up breaking naming convention and create an inconsistent appearance to code. I'm not sure if there is an established convention for this yet or a general consensus, but would appreciate any information, thoughts, and opinions on this.</p>"	46677578	"<p>Naming conventions are generally company/team-defined.</p>  <p>Douglas Crockford has some great naming conventions <strong><a href=""http://javascript.crockford.com/code.html"" rel=""nofollow noreferrer"">for JavaScript</a></strong>, which can be ensured by using <strong><a href=""http://www.jslint.com/"" rel=""nofollow noreferrer"">JSLint</a></strong> or <strong><a href=""http://www.jshint.com/"" rel=""nofollow noreferrer"">JSHint</a></strong> (or even <strong><a href=""https://eslint.org/"" rel=""nofollow noreferrer"">ESLint</a></strong>).</p>  <p>Python follows the <strong><a href=""https://www.python.org/dev/peps/pep-0008/"" rel=""nofollow noreferrer"">PEP8 Style Guide</a></strong>, which widely differs from JavaScript's syntax.</p>  <p>Use the established naming conventions for the JavaScript code, and PEP 8 for the Python code. The actual passing of the data between JavaScript and Python should be handled by making an <strong><a href=""https://developer.mozilla.org/en-US/docs/AJAX/Getting_Started"" rel=""nofollow noreferrer""><code>AJAX</code></a></strong> request that passes <strong><a href=""http://www.json.org/"" rel=""nofollow noreferrer""><code>JSON</code></a></strong> data.</p>  <p><code>JSON</code> has its own validator, which can be found at <strong><a href=""https://jsonlint.com/"" rel=""nofollow noreferrer"">JSONLint</a></strong>.</p>  <p>Hope this helps! :)</p>"
46677530	Naming convention between python backend and javascript frontend	javascript|python|naming-conventions	2017-10-10 23:36:19.383000 UTC	"<p>I have a frontend service written in javascript and a backend service written in python. </p>  <p>My question is what is the naming convention to be used when sending data between the services; specifically are payload keys to use camel case notation or be underscore delimited? </p>  <p>In either case one of the services ends up breaking naming convention and create an inconsistent appearance to code. I'm not sure if there is an established convention for this yet or a general consensus, but would appreciate any information, thoughts, and opinions on this.</p>"	46677592	"<p>Short answer: Any naming convention is as good as any but the most important part is having consistency.  There was a good answer to a similar question <a href=""https://stackoverflow.com/questions/5543490/json-naming-convention"">here</a>.</p>"
46714344	Translate JavaScript enter and exit methods into Python	javascript|python|compiler-construction|translate	2017-10-12 16:13:08.803000 UTC	"<p>I'm trying to translate The Super Tiny Compiler by James Kyle from JavaScript into Python. </p>  <p>But I'm having trouble understanding what the enter and exit methods from JavaScript do:</p>  <p>1)</p>  <pre><code>// If there is an `enter` method for this node type we'll call it with the // `node` and its `parent`. if (methods &amp;&amp; methods.enter) {   methods.enter(node, parent); } </code></pre>  <p>2)</p>  <pre><code>// If there is an `exit` method for this node type we'll call it with the // `node` and its `parent`. if (methods &amp;&amp; methods.exit) {   methods.exit(node, parent); } </code></pre>  <p>How can I translate these two methods in to Python? Thank you.</p>  <p><a href=""https://the-super-tiny-compiler.glitch.me/traverser"" rel=""nofollow noreferrer"">Here's a link to the Tiny Compiler code</a></p>"	46714574	"<p>You will find out it in the next file ""4-tranformer.js"". <code>enter</code> and <code>exit</code> are just methods of an object <code>methods</code> in <code>visitor</code>. Pay attention to this peace of code:</p>  <pre><code>// We start by testing for the existence of a method on the visitor with a // matching `type`. let methods = visitor[node.type]; </code></pre>  <p>In the code you posted we just check if the <code>methods</code> object has a method <code>exit</code> or <code>enter</code> and call them if it does.</p>"
46714764	Python/Flask - Reference Textfile IN a Javascript File	javascript|jquery|python|html|ajax	2017-10-12 16:36:52.423000 UTC	"<p>This is simple if I was doing it in static html files, but as i'm working with Flask it is surprisingly difficult.</p>  <p>I have a html page which correctly includes a Javascript file. This java script files has an AJAX function that will read a textfile. </p>  <p>Does anyone know if I can reference a textfile in Javascript within a Python flask webapp?</p>  <p>HTML:</p>  <pre><code>&lt;script src=""{{ url_for('static',filename='js/my.js') }}""&gt;&lt;/script&gt; </code></pre>  <p>JS:</p>  <pre><code>function alertFunc() {   $.ajax({       url : ""/Users/me/myfile.txt"", //I believe this is the issue!       dataType: ""text"",       success : function (data) {           $(""#div1"").html(data);       }   }); </code></pre>  <p>I have put a test function in this JS file and it works so there is no issue with linking the HTML page with the JS page. </p>"	46714806	"<p>add your <code>.txt</code> file to your static folder</p>  <p>then point to <code>/static/my.txt</code></p>  <p>or add an endpoint (<code>@app.route('my_text.txt')</code>) and return it ...</p>  <p>its really easy... im not sure why you had the dig on flask ... I think its just as easy in flask as html and your powers in flask are much greater than simple html ... </p>  <p><strong>main.py</strong></p>  <pre><code>from flask import Flask,render_template  app = Flask(__name__)   @app.route('/') def hello_world():     return render_template('index.html')   if __name__ == '__main__':     app.run() </code></pre>  <p><strong>static/main.js</strong></p>  <pre><code>function alertFunc() {     $.ajax({         url: ""/static/my_text.txt"",          dataType: ""text"",         success: function (data) {             console.log(data)             $(""#div1"").text(data);         }     }); } </code></pre>  <p><strong>static/my_text.txt</strong></p>  <pre><code>just a simple message </code></pre>  <p><strong>templates/index.html</strong></p>  <pre><code>&lt;script src=""https://code.jquery.com/jquery-2.1.4.min.js""&gt;&lt;/script&gt; &lt;script src=""/static/main.js""&gt;&lt;/script&gt; &lt;div id=""div1""&gt;&lt;/div&gt;  &lt;script&gt;     alertFunc() &lt;/script&gt; </code></pre>"
46729796	Web Scraper (Python 3.6) crashes when encountering javascript in string	javascript|python-3.x|web-scraping|crash	2017-10-13 12:18:59.130000 UTC	"<p>I coded a (probably inefficient) web scraper with BeautifulSoup for this <a href=""http://www.poliscirumors.com"" rel=""nofollow noreferrer"">website</a>. While it works, the function to get the posts crashes when encountering a post that contains javascript as the loop that goes through the post content (<code>for item in i.find_all(""p"")[1:]:</code>) stops and a later request for meta data (<code>i.select('span')[0].get_text()</code>) of the post is unable to find the particular element. An example is the last post <a href=""http://www.poliscirumors.com/topic/tenure-denial-blog/page/23"" rel=""nofollow noreferrer"">here</a>. While I could code an exception, I would prefer to understand the problem and solve it directly. What am I doing wrong?</p>  <pre><code>from urllib.request import urlopen import requests as rs from bs4 import BeautifulSoup as BS import re from itertools import chain posts = [] def post_data(postlist, weblink, rmin, rmax):     page = rs.get(weblink)     soup = BS(page.content, 'lxml')     for d in range(rmin, rmax):         for i in soup.find_all(""div"", id=""position-""+str(d)):             text = []             for item in i.find_all(""p"")[1:]:                 text.append(item.get_text().replace(""\n"" , ""/"" ).replace("","" , ""$"" ))             text = """".join(text)             text.replace(""\n"", ""/"").replace("","" , ""$"" )             postlist.append((weblink, str(d), i.find(""strong"").get_text() , text , i.select('span')[0].get_text(), i.select('span')[1].get_text(), i.span[""id""][1:], list(i.find(""div"", class_=""poststuff""))[0]))     postlist=list((chain.from_iterable(postlist))) post_data(posts, ""http://www.poliscirumors.com/topic/tenure-denial-blog/page/23"", 460, 461) </code></pre>  <p>The error is the following:</p>  <pre><code>File ""p3.py"", line 20, in post_data postlist.append((weblink, str(d), i.find(""strong"").get_text() , text , i.select('span')[0].get_text(), i.select('span')[1].get_text(), i.span[""id""][1:], list(i.find(""div"", class_=""poststuff""))[0])) IndexError: list index out of range </code></pre>"	46730462	"<h2>try always ##then debug later</h2>  <p>try:     postlist.append((weblink, str(d), i.find(""strong"").get_text() , text , i.select('span')[0].get_text(), i.select('span')[1].get_text(), i.span[""id""][1:], list(i.find(""div"", class_=""poststuff""))[0]))</p>  <p>except:        pass</p>"
46819013	How to translate this Python code to JavaScript? (involves Sets)	javascript|python	2017-10-18 20:49:27.377000 UTC	"<p><a href=""https://leetcode.com/problems/remove-duplicate-letters/description"" rel=""nofollow noreferrer"">https://leetcode.com/problems/remove-duplicate-letters/description</a></p>  <blockquote>   <p>Given a string which contains only lowercase letters, remove duplicate   letters so that every letter appear once and only once. You must make   sure your result is the smallest in lexicographical order among all   possible results.</p>      <p>Example:</p>      <p>Given <code>""bcabc""</code>   Return <code>""abc""</code></p>      <p>Given <code>""cbacdcbc""</code> Return <code>""acdb""</code></p> </blockquote>  <p>Python:</p>  <pre><code>def removeDuplicateLetters(self, s):     for c in sorted(set(s)):         suffix = s[s.index(c):]         if set(suffix) == set(s):             return c + self.removeDuplicateLetters(suffix.replace(c, ''))     return '' </code></pre>  <p>The above is the correct solution, so I tried converting it to JavaScript.</p>  <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-js lang-js prettyprint-override""><code>var removeDuplicateLetters = function(s) {   for (var c of new Set(s.split('').sort())) {     var suffix = s.substring(s.indexOf(c));     if (setsAreEqual(new Set(suffix), new Set(s))) {       return c + removeDuplicateLetters(suffix.replace(c, ''));     }   }   return ''; };  const setsAreEqual = (a, b) =&gt; a.size === b.size &amp;&amp; [...a].every(x =&gt; b.has(x));  console.log(removeDuplicateLetters(""cbacdcbc""));</code></pre> </div> </div> </p>  <p>Which gives the wrong answer <code>acdbc</code> instead of <code>acdb</code>.</p>  <p>Where is the error in my translation?</p>"	46819659	"<p>JavaScript <code>replace</code> does not happen globally. It will only replace the first occurrence. Change the JavaScript to be  <code>.replace(new RegExp(c, 'g'), '')</code>. </p>"
46889772	How to send data from JavaScript to Python	javascript|python|google-app-engine	2017-10-23 12:46:56.860000 UTC	"<p>I am using GAE for web development, on jinja2 and python2.7</p>  <p>I can get data from Python. But I failed to send data from JavaScript to Python. Here is the JavaScript code:</p>  <pre><code>function toSave() {     var val_no = $('#field-no').val();     var val_name = $('#field-name').val();     var val_address = $('#field-address').val();     var val_phone = $('#field-phone').val();     var val_car = $('#field-car').val();     var val_penalty = $('#field-penalty').val();      $.ajax({         type: 'GET',         url: ""https:/test/User_update"",         data: {             ""no"": val_no,             ""name"": val_name,             ""address"": val_address,             ""phone"": val_phone,             ""car"": val_car,             ""penalty"": val_penalty         },         dataType: ""json""     }).done(function () {         $('#modal-1').modal('hide');         table.row.data([val_no, val_name, val_address, val_phone, val_car, val_penalty, UserIndex_CreateEditButton(val_no, val_name, val_address, val_phone, val_car, val_penalty), UserIndex_CreateDeleteButton(val_no)], $('#' + tempUpdate));     }); } </code></pre>  <p>And the Python code (class User_update in main.py):</p>  <pre><code>import os import webapp2 import MySQLdb import json import logging import googlemaps import jinja2 import sys import urllib import urllib2 import json as simplejson import codecs  reload(sys) sys.setdefaultencoding('utf-8') from operator import eq from datetime import datetime from collections import OrderedDict  class User_update(webapp2.RequestHandler): def get(self):      jsonData = json.loads(self.get('data'))  #   penalty = self.request.get('data')  #   phone = urllib.request.urlopen(req).read()  #   data = urllib.requset.urlopen(""http://www.daum.net"").read() #   phone=urllib2.urlopen(""https://firststep-2016.appspot.com/Log"").read()        self.response.headers['Content-Type']='text/plain'      db = connect_to_cloudsql()     cursor = db.cursor()     cursor.execute(""SET names utf8"")     cursor.execute('SET SQL_SAFE_UPDATES=0;')     cursor.execute(""""""update User set name='%s',address='%s',phone='%s',car_num='%s',penalty='%s' where no='%s' """"""%(jsonData.name,jsonData.address,jsonData.phone,jsonData.car,jsonData.penalty,jsonData.no))     db.commit()     db.close() </code></pre>  <p>How can I get the JavaScript data from Python?</p>"	46890020	"<p>Looks like you are trying to post data using the wrong method. You should use POST instead of GET to send data to the server </p>  <pre><code>$.ajax({     type: 'POST',     url: ""https://firststep-2016.appspot.com/User_update"",     data: {         ""no"": val_no,         ""name"": val_name,         ""address"": val_address,         ""phone"": val_phone,         ""car"": val_car,         ""penalty"": val_penalty     },     dataType: ""json"" }).done(function () {     $('#modal-1').modal('hide');     table.row.data([val_no, val_name, val_address, val_phone, val_car, val_penalty, UserIndex_CreateEditButton(val_no, val_name, val_address, val_phone, val_car, val_penalty), UserIndex_CreateDeleteButton(val_no)], $('#' + tempUpdate)); }); </code></pre>  <p>Then handle the incoming data in the Python server</p>  <pre><code>def post(self):     .... </code></pre>"
46889772	How to send data from JavaScript to Python	javascript|python|google-app-engine	2017-10-23 12:46:56.860000 UTC	"<p>I am using GAE for web development, on jinja2 and python2.7</p>  <p>I can get data from Python. But I failed to send data from JavaScript to Python. Here is the JavaScript code:</p>  <pre><code>function toSave() {     var val_no = $('#field-no').val();     var val_name = $('#field-name').val();     var val_address = $('#field-address').val();     var val_phone = $('#field-phone').val();     var val_car = $('#field-car').val();     var val_penalty = $('#field-penalty').val();      $.ajax({         type: 'GET',         url: ""https:/test/User_update"",         data: {             ""no"": val_no,             ""name"": val_name,             ""address"": val_address,             ""phone"": val_phone,             ""car"": val_car,             ""penalty"": val_penalty         },         dataType: ""json""     }).done(function () {         $('#modal-1').modal('hide');         table.row.data([val_no, val_name, val_address, val_phone, val_car, val_penalty, UserIndex_CreateEditButton(val_no, val_name, val_address, val_phone, val_car, val_penalty), UserIndex_CreateDeleteButton(val_no)], $('#' + tempUpdate));     }); } </code></pre>  <p>And the Python code (class User_update in main.py):</p>  <pre><code>import os import webapp2 import MySQLdb import json import logging import googlemaps import jinja2 import sys import urllib import urllib2 import json as simplejson import codecs  reload(sys) sys.setdefaultencoding('utf-8') from operator import eq from datetime import datetime from collections import OrderedDict  class User_update(webapp2.RequestHandler): def get(self):      jsonData = json.loads(self.get('data'))  #   penalty = self.request.get('data')  #   phone = urllib.request.urlopen(req).read()  #   data = urllib.requset.urlopen(""http://www.daum.net"").read() #   phone=urllib2.urlopen(""https://firststep-2016.appspot.com/Log"").read()        self.response.headers['Content-Type']='text/plain'      db = connect_to_cloudsql()     cursor = db.cursor()     cursor.execute(""SET names utf8"")     cursor.execute('SET SQL_SAFE_UPDATES=0;')     cursor.execute(""""""update User set name='%s',address='%s',phone='%s',car_num='%s',penalty='%s' where no='%s' """"""%(jsonData.name,jsonData.address,jsonData.phone,jsonData.car,jsonData.penalty,jsonData.no))     db.commit()     db.close() </code></pre>  <p>How can I get the JavaScript data from Python?</p>"	46890504	"<h1>HTTP Methods</h1>  <p>First it is good to understand how the communication works in general.</p>  <p>HTTP has various methods, such as GET and POST (see <a href=""https://en.wikipedia.org/wiki/Hypertext_Transfer_Protocol"" rel=""nofollow noreferrer"">https://en.wikipedia.org/wiki/Hypertext_Transfer_Protocol</a>).</p>  <p>Relevant methods for you in this case:</p>  <ul> <li><p><strong>GET</strong> is meant for read-only requests. Unlike other HTTP methods, GET requests do not carry body with data that is sent to the server. All of the data would get sent via URL parameters. In some case also as part of the header. GET requests may be repeated or cached as they are read-only. Which is why they shouldn't be used for updates.</p></li> <li><p><strong>POST</strong> and <strong>PUT</strong> can update data, generally <strong>POST</strong> is used to create objects whereas <strong>PUT</strong> is used to update an existing object. Both HTTP methods do accept a body with the data.</p></li> </ul>  <p>Since you are updating a user, <strong>PUT</strong> seems to be appropriate.</p>  <h1>Sending data to the server, via jQuery's ajax</h1>  <p>Most developers might assume it but it is worth listing out all of the direct dependencies, in this case you seem to be using jQuery to get the value and send the request to the server. In particular <code>$.ajax</code>: <a href=""http://api.jquery.com/jQuery.ajax/"" rel=""nofollow noreferrer"">http://api.jquery.com/jQuery.ajax/</a></p>  <p>As the documentation for the <code>data</code> attribute:</p>  <p>Data to be sent to the server. It is converted to a query string, if not already a string. It's appended to the url for GET-requests. </p>  <p>So even though <strong>GET</strong> doesn't accept a body, jQuery adds it to the URL for you. As mentioned before I would advice against using <strong>GET</strong> for updates.</p>  <p>At this point you could make use of the browser's developer tools to inspect the network requests. That way you will see what exactly is sent to the server.</p>  <h1>Receiving data in the server</h1>  <p>I believe the API you are using is: <a href=""http://webapp2.readthedocs.io/en/latest/guide/handlers.html"" rel=""nofollow noreferrer"">http://webapp2.readthedocs.io/en/latest/guide/handlers.html</a></p>  <p>You should be able to get the individual values like so (there won't be a 'data' parameter):</p>  <pre><code>val_no = self.request.get(""no"") val_name = self.request.get(""name"") # ... </code></pre>  <p>For <strong>PUT</strong> or <strong>POST</strong> it should work like this (<a href=""http://webapp2.readthedocs.io/en/latest/guide/request.html#post-data"" rel=""nofollow noreferrer"">http://webapp2.readthedocs.io/en/latest/guide/request.html#post-data</a>):</p>  <pre><code>val_no = self.request.POST['no'] val_name = self.request.POST['name'] # ... </code></pre>  <h1>Security</h1>  <p>Your server code is vulnerable to <a href=""https://en.wikipedia.org/wiki/SQL_injection"" rel=""nofollow noreferrer"">https://en.wikipedia.org/wiki/SQL_injection</a></p>  <p>It is not part of your question but quite serious. I wouldn't make that code available on a public server and if it is now I would remove it until fixed.</p>"
46898644	Scraping elements generated by javascript queries using python	javascript|python|html|web-scraping	2017-10-23 21:13:22.887000 UTC	"<p>I am trying to access the text in an element whose content is generated by javascript. For example getting the number of twitter shares from <a href=""https://daphnecaruanagalizia.com/2017/10/crook-schembri-court-today-pleading-not-crook/"" rel=""nofollow noreferrer"">this site</a>. </p>  <p>I've tried using urllib and pyqt to obtain the html of the page, however since the content requires javascript to be generated, its HTML is not present in the response of urllib/pyqt. I am currently using selenium for this task, however it is taking longer than I would like it to.</p>  <p>Is it possible to get access to this data without opening the page in a browser?</p>  <p>This question has already been asked in the past, but the results I found are either <a href=""https://stackoverflow.com/questions/24130650/scraping-data-dynamically-generated-by-javascript-in-html-document-using-c-sharp"">c# specific</a> or provide a link to a solution that has since <a href=""https://stackoverflow.com/questions/2707108/how-to-scrape-html-generated-by-javascript-using-python"">gone dead</a></p>"	46898818	"<p><strong>Working example :</strong></p>  <pre><code>import urllib import requests import json  url = ""https://daphnecaruanagalizia.com/2017/10/crook-schembri-court-today-pleading-not-crook/""  encoded = urllib.parse.quote_plus(url) # encoded = urllib.quote_plus(url) # for python 2 replace previous line by this j = requests.get('https://count-server.sharethis.com/v2.0/get_counts?url=%s' % encoded).text obj = json.loads(j) print(obj['clicks']['twitter'] + obj['shares']['twitter'])  # =&gt; 5008 </code></pre>  <p><strong>Explanation :</strong></p>  <p>Inspecting the webpage, you can see that it does a request to this :</p>  <pre><code>https://count-server.sharethis.com/v2.0/get_counts?url=https%3A%2F%2Fdaphnecaruanagalizia.com%2F2017%2F10%2Fcrook-schembri-court-today-pleading-not-crook%2F&amp;cb=stButtons.processCB&amp;wd=true </code></pre>  <p>If you paste it in your browser you'll have all your answers. Then playing a bit with the url, you can see that removing extra parameters will give you a nice json.</p>  <p>So as you can see, you just have to replace the <code>url</code> parameter of the request with the url of the page you want to get the twitter counts.</p>"
46898644	Scraping elements generated by javascript queries using python	javascript|python|html|web-scraping	2017-10-23 21:13:22.887000 UTC	"<p>I am trying to access the text in an element whose content is generated by javascript. For example getting the number of twitter shares from <a href=""https://daphnecaruanagalizia.com/2017/10/crook-schembri-court-today-pleading-not-crook/"" rel=""nofollow noreferrer"">this site</a>. </p>  <p>I've tried using urllib and pyqt to obtain the html of the page, however since the content requires javascript to be generated, its HTML is not present in the response of urllib/pyqt. I am currently using selenium for this task, however it is taking longer than I would like it to.</p>  <p>Is it possible to get access to this data without opening the page in a browser?</p>  <p>This question has already been asked in the past, but the results I found are either <a href=""https://stackoverflow.com/questions/24130650/scraping-data-dynamically-generated-by-javascript-in-html-document-using-c-sharp"">c# specific</a> or provide a link to a solution that has since <a href=""https://stackoverflow.com/questions/2707108/how-to-scrape-html-generated-by-javascript-using-python"">gone dead</a></p>"	46898984	"<p>You could do something similar to the following after launching a Selenium web browser, then passing driver.page_source to the BeautifulSoup library (unfortunately cannot test this at work with firewalls in place):</p>  <pre><code>soup = BeautifulSoup(driver.page_source, 'html.parser')  shares = soup.find('span', {'class': 'st_twitter_hcount'}).find('span', {'class': 'stBubble_hcount'}) </code></pre>"
46899152	Python3 JavaScript web scraper	python-3.x|web-scraping	2017-10-23 21:56:39.677000 UTC	"<p>Does Python3 have a JavaScript based scraping library that is not Selenium? I'm trying to scrape <code>https://www.mailinator.com/v2/inbox.jsp?zone=public&amp;query=test</code>, but the inbox is loaded with JavaScript. The reason I don't want to use Selenium is I don't want it to open a window when I run it. </p>  <p>Here is my non-working code:</p>  <pre><code>import requests from bs4 import BeautifulSoup as soup INBOX = ""https://www.mailinator.com/v2/inbox.jsp?zone=public&amp;query={}"" def check_inbox(name):     stuff = soup(requests.get(INBOX.format(name)).text,""html.parser"")     print(stuff.find(""ul"",{""class"":""single_mail-body""})) check_inbox(""retep"") </code></pre>  <p>Do any such libraries exist?</p>  <p>I couldn't find anything for the Google search <code>python 3 javascript scraper</code> outside of Selenium.</p>"	46899242	"<p>You don't need javascript actually, because it's client side, so you can emulate it.</p> <p>If you inspect the webpage (developer tools &gt; network), you'll see that there is a <code>websocket</code> connection to this :</p> <pre><code>wss://www.mailinator.com/ws/fetchinbox?zone=public&amp;query=test </code></pre> <p><a href=""https://i.stack.imgur.com/PExm7.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/PExm7.png"" alt=""Webpage inspection"" /></a></p> <p>Now if you implement a websocket client using python, you'll be able to cleanly fetch your mails (see this : <a href=""https://github.com/aaugustin/websockets/blob/master/example/client.py"" rel=""nofollow noreferrer"">https://github.com/aaugustin/websockets/blob/master/example/client.py</a>).</p> <p><strong>EDIT :</strong></p> <p>As mentioned by John, augustin's ws client repo is dead. Today I'd use this : <a href=""https://websockets.readthedocs.io/en/stable/"" rel=""nofollow noreferrer"">https://websockets.readthedocs.io/en/stable/</a></p>"
46940171	Is there a name for Python literals? The way JavaScript literals are called JSON?	python|json|object-literal|object-notation	2017-10-25 19:01:31.963000 UTC	<p>I have a program that can output results either as JSON or Python data structure literals. I am wondering how to succinctly name the latter option.</p>	46940207	"<p>JavaScript literals are not called JSON. JSON derived its name and syntax from JavaScript, but they’re not the same thing. Use “Python literals”.</p>"
46951157	How to make js/javascript retrieve the specific html option value inside a django python forloop	javascript|python|html|ajax|django	2017-10-26 09:50:16.920000 UTC	"<p>So I want to get the option currently selected on my looped option value, but it only keeps getting the last index of the loop whenever I press submit.</p>  <p><strong>views.py</strong></p>  <pre><code>def editGrp(request):        JSONer = {} parsedData = urlparse.urlparse(request.get_full_path()) pkid = (urlparse.parse_qs(parsedData.query)['pkid'][0]) print(pkid) groupid = (urlparse.parse_qs(parsedData.query)['groupid'][0]) if User.objects.filter(id=pkid).count() &gt; 0 and Group.objects.filter(id=groupid).count() &gt; 0:     print(pkid)     print(groupid)     userID = User.objects.filter(id=pkid)[0]     userID.profile.group_id = groupid     print(userID.username)     userID.save(force_update=True) return HttpResponseRedirect(json.dumps(JSONer))  </code></pre>  <p><strong>specific code inside my ""admin.html""</strong></p>  <p>The loop is for listing all the users who aren't inside the specific group</p>  <pre><code>&lt;label class=""control-label col-md-3 col-sm-3 col-xs-12""&gt;Add Members:&lt;/label&gt; &lt;div class=""col-md-8 col-sm-6 col-xs-12""&gt;     &lt;select name=""employeeName"" id=""employeeLocation"" class=""select2_single form-control"" tabindex=""-1""&gt;     {% for user in users %}       {% ifnotequal user.profile.group.id groups.id %}         &lt;option name=""userGroup"" id=""userGroup-{{ user.id }}"" value=""{{user.id}}""&gt;{{user.username}}&lt;/option&gt;       {% endifnotequal %}     {% endfor %}     &lt;/select&gt; &lt;/div&gt; </code></pre>  <p><strong>submit button in admin.html</strong></p>  <pre><code>&lt;button type=""submit"" data-dismiss=""modal"" onClick=""editGrpAjax('userGroup-{{user.id}}', {{groups.id}})"" class=""btn btn-primary""&gt;Save changes&lt;/button&gt; </code></pre>  <p><strong>javascript code</strong></p>  <pre><code>&lt;script&gt;     function editGrpAjax(id,groupid){       var newid = document.getElementById(id).value;       var newgroupid = document.getElementById('groupid-' + groupid).value;         $.ajax({url: 'http://127.0.0.1:8000/editGrp/?pkid='+ newid + ""&amp;groupid="" + newgroupid,              success: function(result){                // insert success message here             }         });     } &lt;/script&gt; </code></pre>  <p>It keeps getting the last value of the loop, and not the one that is currently  selected or highlighted in the option value upon submit.</p>"	46951771	"<p>Don't bother passing <code>id</code> and <code>groupid</code> into your function. Like you said - it always only receives the last values looped, because that's hard-coded based on the <code>userGroup-{{user.id}}', {{groups.id}}</code> string. That string is set by the server at page load, and never changes during the life of the page.</p>  <p>If you want to find the option which is currently selected, simply do:</p>  <pre><code>var newid = document.getElementById(""employeeLocation"").value; </code></pre>  <p>The <code>value</code> of the <code>&lt;select&gt;</code> will be the value of the currently selected <code>&lt;option&gt;</code>.</p>"
47040905	Scraping Javascript-rendered page that requires login using Python	javascript|python|web-scraping	2017-10-31 17:09:40.257000 UTC	"<p>My issue is that I can't scrape a website that uses login when it renders the page using Javascript.</p>  <p>I can easily log in using this code:</p>  <pre><code>import requests from lxml import html  payload ={     ""username"":""username"",     ""password"":""password"" } session_requests = requests.session() result = session_requests.get(login_url) tree = html.fromstring(result.text) result = session_requests.post(     login_url,     data = payload,     headers = dict(referer=login_url) ) </code></pre>  <p>Then I can get some values using this code:</p>  <pre><code>result = session_requests.get(agent_url, headers = dict(referer = agent_url )) tree = html.fromstring(result.content) needed_info = tree.xpath(""//div[@class='col-md-6']/div[@class='table-responsive']/table/tbody/tr[22]/td[2]"")[0].text </code></pre>  <p>However, not everything is rendered.</p>  <p>I've also tried to use dryscrape, however, it does not work on Windows. Selenium is just too heavy for my needs and I'm having issues installing Spynner (probably because it does not support Python 3.6?)</p>  <p>What would you recommend?</p>"	47128303	<p>I just went and did it using selenium. Everything else was just too much of a hassle for this little project.</p>
47047223	"Selenium/Python: Error click a button whose address is with JavaScript, onclick"	javascript|python|selenium|onclick|click	2017-11-01 02:16:07.680000 UTC	"<p>I have been stuck on trying to click the href=""javascript:;"" on a page using selenium with python.</p>  <p>The relevant HTML code is:</p>  <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-html lang-html prettyprint-override""><code>&lt;tr&gt;   &lt;td class=""Sun out""&gt;24&lt;/td&gt;   &lt;td class="" out""&gt;25&lt;/td&gt;   &lt;td class="" out""&gt;26&lt;/td&gt;   &lt;td class="" out""&gt;27&lt;/td&gt;   &lt;td class="" out""&gt;28&lt;/td&gt;   &lt;td id=""CellPlayDate0"" class="" able""&gt;&lt;a href=""javascript:;"" onclick=""fnSelectPlayDate(0, '20171229')""&gt;29&lt;/a&gt;&lt;/td&gt;   &lt;td id=""CellPlayDate1"" class="" able""&gt;&lt;a href=""javascript:;"" onclick=""fnSelectPlayDate(1, '20171230')""&gt;30&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt;</code></pre> </div> </div> </p>  <p>For code, I have:</p>  <pre><code>browser.find_elements_by_xpath('//*[@id=""CellPlayDate0""]').click() </code></pre>  <p>The corresponding error message is:</p>  <pre><code>AttributeError: 'list' object has no attribute 'click' </code></pre>  <p>I think that the elements is list, so i tried as below</p>  <pre><code>browser.find_elements_by_xpath('//td[@id=""CellPlayDate1""]')[0].click() </code></pre>  <p>However, another error</p>  <pre><code>IndexError: list index out of range </code></pre>  <p>I think there is another method to click a button(javascript,onclick). However, I am the very beginner of selenium, so i have no idea.</p>  <p>Any ideas?</p>"	47047255	"<p>It seems <code>browser.find_elements_by_xpath('//*[@id=""CellPlayDate0""]')</code> returns a <code>list</code> of elements.</p>  <p>You need to pick an element and create click event may be like </p>  <p><code>browser.find_elements_by_xpath('//*[@id=""CellPlayDate0""]')[0].click()</code></p>"
47047223	"Selenium/Python: Error click a button whose address is with JavaScript, onclick"	javascript|python|selenium|onclick|click	2017-11-01 02:16:07.680000 UTC	"<p>I have been stuck on trying to click the href=""javascript:;"" on a page using selenium with python.</p>  <p>The relevant HTML code is:</p>  <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-html lang-html prettyprint-override""><code>&lt;tr&gt;   &lt;td class=""Sun out""&gt;24&lt;/td&gt;   &lt;td class="" out""&gt;25&lt;/td&gt;   &lt;td class="" out""&gt;26&lt;/td&gt;   &lt;td class="" out""&gt;27&lt;/td&gt;   &lt;td class="" out""&gt;28&lt;/td&gt;   &lt;td id=""CellPlayDate0"" class="" able""&gt;&lt;a href=""javascript:;"" onclick=""fnSelectPlayDate(0, '20171229')""&gt;29&lt;/a&gt;&lt;/td&gt;   &lt;td id=""CellPlayDate1"" class="" able""&gt;&lt;a href=""javascript:;"" onclick=""fnSelectPlayDate(1, '20171230')""&gt;30&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt;</code></pre> </div> </div> </p>  <p>For code, I have:</p>  <pre><code>browser.find_elements_by_xpath('//*[@id=""CellPlayDate0""]').click() </code></pre>  <p>The corresponding error message is:</p>  <pre><code>AttributeError: 'list' object has no attribute 'click' </code></pre>  <p>I think that the elements is list, so i tried as below</p>  <pre><code>browser.find_elements_by_xpath('//td[@id=""CellPlayDate1""]')[0].click() </code></pre>  <p>However, another error</p>  <pre><code>IndexError: list index out of range </code></pre>  <p>I think there is another method to click a button(javascript,onclick). However, I am the very beginner of selenium, so i have no idea.</p>  <p>Any ideas?</p>"	47047971	"<p>The error says it all :</p>  <pre><code>AttributeError: 'list' object has no attribute 'click' </code></pre>  <p>As per your code block you have :</p>  <pre><code>browser.find_elements_by_xpath('//*[@id=""CellPlayDate0""]').click() </code></pre>  <p>Which instead of an <code>WebElement</code> returns a <code>List</code>. Hence when you try to click on the <code>List</code> you see the error as <code>AttributeError: 'list' object has no attribute 'click'</code></p>  <p>Solution would be either to change the method <code>find_elements_by_xpath</code> to <code>find_element_by_id</code> or to construct an unique <code>xpath</code> as follows:</p>  <ul> <li><p>As the <code>WebElement</code> have a <code>id</code>:</p>  <pre><code>browser.find_elements_by_id(""CellPlayDate0').click() </code></pre></li> <li><p>Construct an <code>xpath</code>:</p>  <pre><code>browser.find_elements_by_xpath(""//td[@id='CellPlayDate0']"").click() </code></pre></li> </ul>"
47047223	"Selenium/Python: Error click a button whose address is with JavaScript, onclick"	javascript|python|selenium|onclick|click	2017-11-01 02:16:07.680000 UTC	"<p>I have been stuck on trying to click the href=""javascript:;"" on a page using selenium with python.</p>  <p>The relevant HTML code is:</p>  <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-html lang-html prettyprint-override""><code>&lt;tr&gt;   &lt;td class=""Sun out""&gt;24&lt;/td&gt;   &lt;td class="" out""&gt;25&lt;/td&gt;   &lt;td class="" out""&gt;26&lt;/td&gt;   &lt;td class="" out""&gt;27&lt;/td&gt;   &lt;td class="" out""&gt;28&lt;/td&gt;   &lt;td id=""CellPlayDate0"" class="" able""&gt;&lt;a href=""javascript:;"" onclick=""fnSelectPlayDate(0, '20171229')""&gt;29&lt;/a&gt;&lt;/td&gt;   &lt;td id=""CellPlayDate1"" class="" able""&gt;&lt;a href=""javascript:;"" onclick=""fnSelectPlayDate(1, '20171230')""&gt;30&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt;</code></pre> </div> </div> </p>  <p>For code, I have:</p>  <pre><code>browser.find_elements_by_xpath('//*[@id=""CellPlayDate0""]').click() </code></pre>  <p>The corresponding error message is:</p>  <pre><code>AttributeError: 'list' object has no attribute 'click' </code></pre>  <p>I think that the elements is list, so i tried as below</p>  <pre><code>browser.find_elements_by_xpath('//td[@id=""CellPlayDate1""]')[0].click() </code></pre>  <p>However, another error</p>  <pre><code>IndexError: list index out of range </code></pre>  <p>I think there is another method to click a button(javascript,onclick). However, I am the very beginner of selenium, so i have no idea.</p>  <p>Any ideas?</p>"	47051604	"<p>There problem here is you're calling <code>click()</code> on a list of <code>&lt;td&gt;</code> instead of the <code>&lt;a&gt;</code> anchor which actually has the click you wanted. Try this instead:</p>  <pre><code>browser.find_element_by_xpath('//*[@id=""CellPlayDate0""]/a').click() </code></pre>  <p>Notice the use of <code>find_element_by_xpath</code> instead of <code>find_element[s]_by_xpath</code>? Or with css:</p>  <pre><code>browser.find_element_by_css_selector('#CellPlayDate0 a').click() </code></pre>"
47047223	"Selenium/Python: Error click a button whose address is with JavaScript, onclick"	javascript|python|selenium|onclick|click	2017-11-01 02:16:07.680000 UTC	"<p>I have been stuck on trying to click the href=""javascript:;"" on a page using selenium with python.</p>  <p>The relevant HTML code is:</p>  <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-html lang-html prettyprint-override""><code>&lt;tr&gt;   &lt;td class=""Sun out""&gt;24&lt;/td&gt;   &lt;td class="" out""&gt;25&lt;/td&gt;   &lt;td class="" out""&gt;26&lt;/td&gt;   &lt;td class="" out""&gt;27&lt;/td&gt;   &lt;td class="" out""&gt;28&lt;/td&gt;   &lt;td id=""CellPlayDate0"" class="" able""&gt;&lt;a href=""javascript:;"" onclick=""fnSelectPlayDate(0, '20171229')""&gt;29&lt;/a&gt;&lt;/td&gt;   &lt;td id=""CellPlayDate1"" class="" able""&gt;&lt;a href=""javascript:;"" onclick=""fnSelectPlayDate(1, '20171230')""&gt;30&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt;</code></pre> </div> </div> </p>  <p>For code, I have:</p>  <pre><code>browser.find_elements_by_xpath('//*[@id=""CellPlayDate0""]').click() </code></pre>  <p>The corresponding error message is:</p>  <pre><code>AttributeError: 'list' object has no attribute 'click' </code></pre>  <p>I think that the elements is list, so i tried as below</p>  <pre><code>browser.find_elements_by_xpath('//td[@id=""CellPlayDate1""]')[0].click() </code></pre>  <p>However, another error</p>  <pre><code>IndexError: list index out of range </code></pre>  <p>I think there is another method to click a button(javascript,onclick). However, I am the very beginner of selenium, so i have no idea.</p>  <p>Any ideas?</p>"	47056644	"<p>You have two problems.</p>  <p>First, the xpath expression returns a list as the other answers have pointed out. Python lists don't have a click method, the returned elements do.</p>  <p>Second, your xpath expression <em>isn't actually finding anything</em>. It's returning an empty list of no matches, which is why you're getting the index out of range error.</p>  <p>What you probably want is this:</p>  <pre><code>for elem in browser.find_elements_by_xpath('//*[@id=""CellPlayDate0""]'):     elem.click() </code></pre>  <p>Note that you'll still need to tweak the xpath string to actually match something on the page.</p>"
47076246	Scrape all used javascripts on a website using python	javascript|python|selenium|google-analytics|screen-scraping	2017-11-02 13:12:23.720000 UTC	"<p>I am looking for a way to determine the name of all javascripts that are used on a website. It is not suitable to simply download the website's sourcecode using the request lib as this will not yield all javascripts that are used.  For example the website <a href=""https://www.grantthornton.global/en/"" rel=""nofollow noreferrer"">https://www.grantthornton.global/en/</a> uses Google Analytics (analytics.js) as one can see using chrome's ""Network"" tab for all used javascripts.    </p>  <p>However you can not determine the usage of analytics.js through the sourcode alone as analytics.js is loaded through the google-tag-manager. My current approach is to load the Website using selenium and to record all data through browsermob-proxy. I can then check for all javascripts that have been accessed by checking the urls (example: <a href=""https://www.google-analytics.com/analytics.js"" rel=""nofollow noreferrer"">https://www.google-analytics.com/analytics.js</a>)<br> Is there any better way than this:    </p>  <pre><code>from selenium import webdriver from browsermobproxy import Server import pprint, time  server = Server(""browsermob-proxy-2.1.4\\bin\\browsermob-proxy"") server.start() proxy = server.create_proxy({'captureHeaders': True, 'captureContent': True, 'captureBinaryContent': True})  service_args = [""--proxy=%s"" % proxy.proxy, '--ignore-ssl-errors=yes'] driver = webdriver.PhantomJS(""phantomjs-2.1.1-windows\\bin\\phantomjs"", service_args=service_args) proxy.new_har() driver.get('URL GOES HERE') time.sleep(3) all_requests = [entry['request']['url'] for entry in proxy.har['log']['entries']]  pp = pprint.PrettyPrinter(indent=4) pp.pprint(proxy.har) </code></pre>  <p><strong>EDIT:</strong> Solution based on Florent B's approach. The webdriver has been replaced by the chrome webdriver which needs to be downloaded instead of phantomjs:</p>  <pre><code>from selenium import webdriver import pprint, time  driver = webdriver.Chrome('chromedriver.exe') driver.get(""https://www.URLGOESHERE.com"") time.sleep(3) scripts = driver.execute_script(""""""return window.performance.getEntriesByType(""resource"").filter(e =&gt; e.initiatorType === 'script').map(e =&gt; e.name.match(/.+\/([^?]+)/)[1]);"""""") driver.close()  pp = pprint.PrettyPrinter(indent=4) pp.pprint(scripts) </code></pre>"	47077249	"<p>You could also get all the downloaded scripts via the <a href=""https://developer.mozilla.org/en-US/docs/Web/API/Performance"" rel=""nofollow noreferrer""><code>window.performance</code></a> API :</p>  <pre><code>scripts = driver.execute_script(""""""   return window.performance.getEntriesByType(""resource"")     .filter(e =&gt; e.initiatorType === 'script')     .map(e =&gt; e.name);   """""") print(scripts) </code></pre>"
47090852	How can I rewrite python code to javascript?	javascript|python	2017-11-03 07:50:36.140000 UTC	"<p>The code in python is:    </p>  <pre class=""lang-python prettyprint-override""><code>def trimTree(tree):     p=tree[1]     if type(p) == type(""""): return p     else :         return(trimTree(p[0]),trimTree(p[1])) </code></pre>  <p>where tree is:   </p>  <pre><code>[   13,   [ 6, [ 3, [Object], [Object] ], [ 3, 'a' ] ],   [ 7, [ 3, 'b' ], [ 4, [Object], [Object] ] ] ] </code></pre>  <p>when I convert I got error:</p>  <blockquote>   <p>TypeError: Cannot read property '0' of undefined</p> </blockquote>  <p>What should I do?</p>"	47092188	"<p>With a proper data structure, which means any node has only a length of two elements, you get a list of values in breaths first order (the result is here a string).</p>  <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-js lang-js prettyprint-override""><code>function trimTree(tree) {     var p = tree[1];     return typeof p === 'string'         ? p         : trimTree(p[0]) + trimTree(p[1]); }  var data = [         13,         [             [6,                 [                     [3,                         [                             [1, 'X'],                             [2, 'Y']                         ]                     ],                     [3, 'a']                 ]             ],             [7,                 [                     [3, 'b'],                     [4,                         [                             [2, 'Z'],                             [2, 'Q']                         ]                     ]                 ]             ]         ]     ];  console.log(trimTree(data));</code></pre> </div> </div> </p>"
47108253	Parsing Javascript text in Python	javascript|python|html|parsing|beautifulsoup	2017-11-04 06:46:50.563000 UTC	"<p>I am parsing this section of HTML</p>  <pre><code>&lt;script type=""text/javascript""&gt;     var spConfig = new Product.Config({""attributes"":{""150"":{""id"":""150"",""code"":""size_shoe"",""label"":""Schuhgr\u00f6\u00dfe"",""options"":[{""id"":""494"",""label"":""36"",""price"":""0"",""oldPrice"":""0"",""products"":[""393318""],""label_us"":""\r\n4Y"",""label_uk"":""3.5"",""label_cm"":""23"",""label_int"":null},{""id"":""476"",""label"":""36.5"",""price"":""0"",""oldPrice"":""0"",""products"":[""393321""],""label_us"":""\r\n4.5Y"",""label_uk"":""4"",""label_cm"":""23.5"",""label_int"":null,""out_of_stock"":""Out of Stock""},{""id"":""130"",""label"":""37.5"",""price"":""0"",""oldPrice"":""0"",""products"":[""393324""],""label_us"":""\r\n5Y"",""label_uk"":""4.5"",""label_cm"":""23.5"",""label_int"":null,""out_of_stock"":""Out of Stock""},{""id"":""12"",""label"":""38"",""price"":""0"",""oldPrice"":""0"",""products"":[""393327""],""label_us"":""\r\n5.5Y"",""label_uk"":""5"",""label_cm"":""24"",""label_int"":null},{""id"":""500"",""label"":""38.5"",""price"":""0"",""oldPrice"":""0"",""products"":[""393330""],""label_us"":""\r\n6Y"",""label_uk"":""5.5"",""label_cm"":""24"",""label_int"":null,""out_of_stock"":""Out of Stock""},{""id"":""10"",""label"":""40"",""price"":""0"",""oldPrice"":""0"",""products"":[""393333""],""label_us"":""\r\n7Y"",""label_uk"":""6"",""label_cm"":""25"",""label_int"":null,""out_of_stock"":""Out of Stock""}]}},""template"":""\u20ac#{price}"",""basePrice"":""89.95"",""oldPrice"":""89.95"",""productId"":""393306"",""chooseText"":""Choose an Option..."",""taxConfig"":{""includeTax"":true,""showIncludeTax"":true,""showBothPrices"":false,""defaultTax"":19,""currentTax"":19,""inclTaxTitle"":""Incl. Tax""}}); &lt;/script&gt; </code></pre>  <p>This is my code</p>  <pre><code>import urllib2, requests, json, re from bs4 import BeautifulSoup as bs  url = (""link"")  session = requests.session() response = session.get(url) soup = bs(response.text, 'html.parser') scripts = soup.findAll('script')   def getIds():     for script in scripts:         if 'spConfig =' in script.getText():             regex = re.compile(r'var spConfig = new Product.Config\((.*?)\);')             match = regex.search(script.getText())             spConfig = json.loads(match.groups()[0])             for key in spConfig['attributes']: # Should only call once                 for product in spConfig['attributes'][key]['options']:                     if product['label_us']:                         size_id = product['id']                         product_id = spConfig['attributes'][key]['id']                         print product_id getIds() </code></pre>  <p>My output is</p>  <pre><code>150 150 150 150 150 150 150 150 150 150 150 150 150 150 150 150 </code></pre>  <p>What I want to parse and have the script output is;</p>  <pre><code>393318 - 4.Y 393321 - 4.5Y - Out of Stock 393324 - 5Y - Out of Stock </code></pre>  <p>etc etc</p>  <p>What attributes am I parsing incorrectly? Also, how can I format the output with the text size and including the “out of stock” if needed, as shown in my example?</p>"	47108338	"<p>You're printing the <code>id</code> attribute, but what you want to print is <code>products</code> and <code>label_us</code> from the <code>options</code> object. And since <code>product</code> is a list, you need to loop over it.      </p>  <pre><code>for key, attribute in spConfig['attributes'].iteritems():      for option in attribute['options']:         if option['label_us']:             label = option['label_us'].strip()             for product_id in option['products']:                 print product_id, ""-"", label </code></pre>"
47115583	"Can you use JavaScript inside an email, which is sent using Python?"	javascript|python|html|css|email	2017-11-04 20:59:18.977000 UTC	"<p>Can you use JavaScript inside an email, which is sent using Python?</p>  <p>My aim is to send a working clock inside an email.</p>  <p>I am trying to use Python to do so. I am using IDLE and the Python libraries stmplib, email and html2text to send emails. My code looks like the code shown below. I omitted some details (style and script) as they are unimportant. </p>  <pre><code>me = ""my.email@gmail.com"" you = ""my.email@gmail.com""  msg = MIMEMultipart('alternative') msg['Subject'] = ""Clock"" msg['From'] = me msg['To'] = you  html = """"""\ &lt;!DOCTYPE html&gt; &lt;html&gt;     &lt;head&gt;         &lt;meta charset=""utf-8""&gt;         &lt;title&gt;Clock&lt;/title&gt;         &lt;style&gt;&lt;/style&gt;     &lt;/head&gt;     &lt;body&gt;         &lt;div class=""clock""&gt;             &lt;p class=""clockhour""&gt;HH&lt;/p&gt;             &lt;p class=""clocksym1""&gt;:&lt;/p&gt;             &lt;p class=""clockminute""&gt;MM&lt;/p&gt;             &lt;p class=""clocksym2""&gt;:&lt;/p&gt;             &lt;p class=""clocksecond""&gt;SS&lt;/p&gt;         &lt;/div&gt;         &lt;script type=""text/javascript""&gt;&lt;/script&gt;     &lt;/body&gt; &lt;/html&gt; """"""  text = html2text(html)  part1 = MIMEText(text, 'plain') part2 = MIMEText(html, 'html')  msg.attach(part1) msg.attach(part2)  s = SMTP('smtp.gmail.com:587') s.ehlo() s.starttls() s.login(""my.email@gmail.com"", ""my password"")  s.sendmail(me, you, msg.as_string()) s.quit() </code></pre>  <p>The full version of the HTML in this code gives me a properly functioning clock, but if I attempt sending it to myself using Gmail I receive a different result.</p>  <p>Viewing the HTML:</p>  <p><a href=""https://i.stack.imgur.com/7cqCP.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/7cqCP.png"" alt=""enter image description here""></a></p>  <p>In Gmail:</p>  <p><a href=""https://i.stack.imgur.com/g9qKx.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/g9qKx.png"" alt=""enter image description here""></a></p>  <p>This shows, that parts of the CSS load, but others like the font or the font size don't. It also shows that the JavaScript does not load. (Normally viewing the HTML code in a browser gives a functioning clock, while in an email doesn't.)</p>  <p>Is there a way to send an email with this clock?</p>"	47115635	"<p>Short Answer: No. You can't use JavaScript for email template.</p>  <hr>  <p>Tricky way: You can work on relevant file and get the parsed value in your template file using server side language.</p>  <pre><code>Example:  clock.js // code for js  template.php // echo the value // The value is rendered in html and works in email template too. </code></pre>  <p>But this case is not suitable for you as you're trying to implement countdown clock. This is suitable only for static value.</p>  <p>However, linking to external page content will help you to show the timer.</p>  <hr>  <p>For your case, You may try using <a href=""http://motionmailapp.com/"" rel=""nofollow noreferrer"">http://motionmailapp.com/</a></p>  <p>Hope, this helps!</p>"
47115583	"Can you use JavaScript inside an email, which is sent using Python?"	javascript|python|html|css|email	2017-11-04 20:59:18.977000 UTC	"<p>Can you use JavaScript inside an email, which is sent using Python?</p>  <p>My aim is to send a working clock inside an email.</p>  <p>I am trying to use Python to do so. I am using IDLE and the Python libraries stmplib, email and html2text to send emails. My code looks like the code shown below. I omitted some details (style and script) as they are unimportant. </p>  <pre><code>me = ""my.email@gmail.com"" you = ""my.email@gmail.com""  msg = MIMEMultipart('alternative') msg['Subject'] = ""Clock"" msg['From'] = me msg['To'] = you  html = """"""\ &lt;!DOCTYPE html&gt; &lt;html&gt;     &lt;head&gt;         &lt;meta charset=""utf-8""&gt;         &lt;title&gt;Clock&lt;/title&gt;         &lt;style&gt;&lt;/style&gt;     &lt;/head&gt;     &lt;body&gt;         &lt;div class=""clock""&gt;             &lt;p class=""clockhour""&gt;HH&lt;/p&gt;             &lt;p class=""clocksym1""&gt;:&lt;/p&gt;             &lt;p class=""clockminute""&gt;MM&lt;/p&gt;             &lt;p class=""clocksym2""&gt;:&lt;/p&gt;             &lt;p class=""clocksecond""&gt;SS&lt;/p&gt;         &lt;/div&gt;         &lt;script type=""text/javascript""&gt;&lt;/script&gt;     &lt;/body&gt; &lt;/html&gt; """"""  text = html2text(html)  part1 = MIMEText(text, 'plain') part2 = MIMEText(html, 'html')  msg.attach(part1) msg.attach(part2)  s = SMTP('smtp.gmail.com:587') s.ehlo() s.starttls() s.login(""my.email@gmail.com"", ""my password"")  s.sendmail(me, you, msg.as_string()) s.quit() </code></pre>  <p>The full version of the HTML in this code gives me a properly functioning clock, but if I attempt sending it to myself using Gmail I receive a different result.</p>  <p>Viewing the HTML:</p>  <p><a href=""https://i.stack.imgur.com/7cqCP.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/7cqCP.png"" alt=""enter image description here""></a></p>  <p>In Gmail:</p>  <p><a href=""https://i.stack.imgur.com/g9qKx.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/g9qKx.png"" alt=""enter image description here""></a></p>  <p>This shows, that parts of the CSS load, but others like the font or the font size don't. It also shows that the JavaScript does not load. (Normally viewing the HTML code in a browser gives a functioning clock, while in an email doesn't.)</p>  <p>Is there a way to send an email with this clock?</p>"	47115655	"<p>javascript is unsupported in email html, but at least you can place a link to the page with clock countdown.</p>"
47131525	Replicating Python Array Index System in JavaScript	javascript|python|arrays	2017-11-06 07:06:41.860000 UTC	"<p>Is there any way to replicate Python's array indexing system in JavaScript.</p>  <p>To access the last element in JavaScript, I would need to do this:</p>  <pre><code>last = arr[arr.length - 1] secondLast = arr[arr.length - 2] </code></pre>  <p>Is there any way I could access the elements using Python's way, eg:</p>  <pre><code>last = arr[-1] secondLast = arr[-2] </code></pre>  <p>This gets really annoying when you have an array of arrays.</p>  <pre><code>arr = [[1, 2], [3, 4], [5, 6]]  // In JavaScript, to get 6: lastJS = arr[arr.length - 1][arr[arr.length - 1].length - 1]  # In Python, simple: lastPy = arr[-1][-1] </code></pre>  <p>Any ideas? All I have seen online only allows arr.last or arr.last() by using Array.prototype.</p>"	47131574	"<p>No. JavaScript does not support operator overloading. However, you can implement a method yourself that supports Python's index handling.</p>  <p>Edit: I suppose you can recreate that effect using <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy"" rel=""nofollow noreferrer"">Proxy</a> (in ES6+), but I would not recommend it: <a href=""https://jsfiddle.net/DerekL/Lfjznnbb/"" rel=""nofollow noreferrer"">https://jsfiddle.net/DerekL/Lfjznnbb/</a></p>  <pre><code>class PythonArray {     constructor() {         return new Proxy([], {             get: function(target, name) {                 var index = parseInt(name, 10);                  if (name === NaN) {                     if (name in target) return target[name];                     else throw ""Not a number"";                 }                  // simple implementation                 if(index &lt; 0)   return target[target.length + index];                 else    return target[index];             }         });     }      static from(arr){         var pythonArray = new PythonArray();         for(var i = 0; i &lt; arr.length; i++){             pythonArray[i] = arr[i];         }         return pythonArray;     } }  var arr = PythonArray.from([1, 2, 3]); console.log(arr[0]);         // 1 console.log(arr[-1]);        // 3 console.log(arr.join(""|""));  // still works </code></pre>"
47131525	Replicating Python Array Index System in JavaScript	javascript|python|arrays	2017-11-06 07:06:41.860000 UTC	"<p>Is there any way to replicate Python's array indexing system in JavaScript.</p>  <p>To access the last element in JavaScript, I would need to do this:</p>  <pre><code>last = arr[arr.length - 1] secondLast = arr[arr.length - 2] </code></pre>  <p>Is there any way I could access the elements using Python's way, eg:</p>  <pre><code>last = arr[-1] secondLast = arr[-2] </code></pre>  <p>This gets really annoying when you have an array of arrays.</p>  <pre><code>arr = [[1, 2], [3, 4], [5, 6]]  // In JavaScript, to get 6: lastJS = arr[arr.length - 1][arr[arr.length - 1].length - 1]  # In Python, simple: lastPy = arr[-1][-1] </code></pre>  <p>Any ideas? All I have seen online only allows arr.last or arr.last() by using Array.prototype.</p>"	47131687	"<p>You can try the following using <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/defineProperty"" rel=""nofollow noreferrer"">Object.defineProperty</a></p>  <pre><code>Object.defineProperty(Array.prototype, ""-1"", {   get : function(index){ return this[this.length - 1] ) } }); </code></pre>  <p>This will return the last value for <code>-1</code>, however I don't think a generic one can be defined.</p>  <p><strong>Demo</strong></p>  <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-js lang-js prettyprint-override""><code>var arr = [""A"", ""B"", ""C""]; console.log( ""Before "" , arr[ -1 ] ); Object.defineProperty(Array.prototype, ""-1"", {   get : function(index){ return this[this.length - 1]; } }); console.log( ""After "" ,  arr[ -1 ] );</code></pre> </div> </div> </p>  <p>Similarly, you can define a property for other <em>negative indexes</em>.</p>"
47131525	Replicating Python Array Index System in JavaScript	javascript|python|arrays	2017-11-06 07:06:41.860000 UTC	"<p>Is there any way to replicate Python's array indexing system in JavaScript.</p>  <p>To access the last element in JavaScript, I would need to do this:</p>  <pre><code>last = arr[arr.length - 1] secondLast = arr[arr.length - 2] </code></pre>  <p>Is there any way I could access the elements using Python's way, eg:</p>  <pre><code>last = arr[-1] secondLast = arr[-2] </code></pre>  <p>This gets really annoying when you have an array of arrays.</p>  <pre><code>arr = [[1, 2], [3, 4], [5, 6]]  // In JavaScript, to get 6: lastJS = arr[arr.length - 1][arr[arr.length - 1].length - 1]  # In Python, simple: lastPy = arr[-1][-1] </code></pre>  <p>Any ideas? All I have seen online only allows arr.last or arr.last() by using Array.prototype.</p>"	47131703	"<p>You could achieve that by creating a function like this:</p>  <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-js lang-js prettyprint-override""><code>var some_array = [""name"", ""game"", ""fame""];  function getElement(array, index) {   return (array[array.length + (index)]); };  console.log(getElement(some_array, -1));</code></pre> </div> </div> </p>"
47131525	Replicating Python Array Index System in JavaScript	javascript|python|arrays	2017-11-06 07:06:41.860000 UTC	"<p>Is there any way to replicate Python's array indexing system in JavaScript.</p>  <p>To access the last element in JavaScript, I would need to do this:</p>  <pre><code>last = arr[arr.length - 1] secondLast = arr[arr.length - 2] </code></pre>  <p>Is there any way I could access the elements using Python's way, eg:</p>  <pre><code>last = arr[-1] secondLast = arr[-2] </code></pre>  <p>This gets really annoying when you have an array of arrays.</p>  <pre><code>arr = [[1, 2], [3, 4], [5, 6]]  // In JavaScript, to get 6: lastJS = arr[arr.length - 1][arr[arr.length - 1].length - 1]  # In Python, simple: lastPy = arr[-1][-1] </code></pre>  <p>Any ideas? All I have seen online only allows arr.last or arr.last() by using Array.prototype.</p>"	47131758	"<p>Arrays are objects as well.</p>  <pre><code>let arrayObj = [] arrayObj[-1] = ""I exist""; console.log(arrayObj) // [ '-1': 'I exist' ] </code></pre>  <p>Hence using <code>array[-1]</code> is not a good idea for the last index;</p>  <p>Instead just add an <code>Prototype</code> function <code>getFromLast()</code> that would let you access the elements from the last of your array</p>  <pre><code>Array.prototype.getFromLast = function(index) {     return this[this.length-index-1]; } a = [1,23,123,4,1,1231,12] a.getFromLast(3) // 4 </code></pre>"
47250613	run python in javascript	javascript|python	2017-11-12 15:39:01.387000 UTC	"<p>I have a python script <code>python.py</code> as follow:</p>  <pre><code>import requests import json  url = ""https://api.dropboxapi.com/2/sharing/list_shared_links""  headers = {     ""Authorization"": ""Bearer MY_ACCESS_KEY"",     ""Content-Type"": ""application/json"" }  data = {     ""path"": ""/downloads/files.txt"" }  r = requests.post(url, headers=headers, data=json.dumps(data)) </code></pre>  <p>and a php web page as follow:</p>  <pre><code>&lt;html&gt;     &lt;script src='//ajax.googleapis.com/ajax/libs/jquery/1/jquery.min.js' type='text/javascript'&gt;&lt;/script&gt;          &lt;button id=""getlink""&gt;Get Link&lt;/button&gt;         &lt;div id=""output""&gt;&lt;/div&gt; &lt;script&gt;         function handleSharedLink(evt) {              exec(python getLink.py);         }          var obj = document.getElementById('getlink').addEventListener('click', handleSharedLink, false);         document.getElementById('output').innerHTML = obj; &lt;/script&gt; </code></pre>  <p>Btw, I couldn't get the result from the python and show in the html <code>div&lt;'output'&gt;</code>.  How can I show that? Any help will be appreciated!</p>  <p><strong>EDITED:</strong> I edited my code as follow instead of running the python file in the javascript. But the result still doesn't show.</p>  <pre><code>&lt;html&gt; &lt;script src='//ajax.googleapis.com/ajax/libs/jquery/1/jquery.min.js' type='text/javascript'&gt;&lt;/script&gt;  &lt;input type=""file"" id=""files"" name=""files[]"" multiple /&gt; &lt;br/&gt;&lt;br/&gt;  &lt;button id=""getlink""&gt;Get Link&lt;/button&gt; &lt;div id=""output""&gt;&lt;/div&gt;  &lt;script&gt;  function handleSharedLink(evt) {    $.ajax({           url: ""https://api.dropboxapi.com/2/sharing/get_shared_links"",       headers:         {             ""Authorization"": ""Bearer 1lzp0Ii5agAAAAAAAAAAJTVD-jRpVMcOfefVBzVkXOzM-W_LiFHSl7F9mgkd4bYk"",             ""Content-Type"": ""application/json""         },      data:         {             ""path"": ""TARCpace.apk""         },     success: function (data) {             console.log(data);     },     error: function (data) {             console.log(data);     }     r = requests.post(url, headers=headers, data=json.dumps(data))         }) }    var output = document.getElementById('getlink').addEventListener('click', handleSharedLink, false);   output.innerHTML = html(r); &lt;/script&gt;  &lt;/html&gt;  </code></pre>  <p>How can I improve that?</p>"	47252005	"<p>I never came across any scenario to run ad-hoc scripts from javascript. Most of the cases, the server side scripts are exposed as APIs and can be triggered by simple AJAX calls.</p>  <p>I found a probable solution with little research which you might have already looked at it.</p>  <p><a href=""https://stackoverflow.com/questions/32288722/call-python-function-from-js"">Call python function from JS</a></p>  <p>Note: this is best suites as comment. But I don't have enough reputation today to post a comment :) </p>"
47292464	Python / Requests: Log In to Website Javascript	javascript|python|python-3.x|authentication|python-requests	2017-11-14 18:03:51.390000 UTC	"<p>I am trying to create a script to log into a website but I am struggling to have it work on this particular page. FYI I'm rather new to using python requests. I can perform the function in selenium and I can use requests on other sites to log in but I believe this one is using javascript and that is more than likely my issue.</p>  <p>Code:</p>  <pre><code>while (FoundItem == ""Nope""):       SignIn = ""https://www.bestbuy.ca/profile/signin.aspx""       Email = ""ctl00$CP$SignInUC1$UserNameContainer$txtUserName""     Password= ""ctl00$CP$SignInUC1$PasswordContainer$txtPassword""      payload = {     'ctl00$CP$SignInUC1$UserNameContainer$txtUserName': 'MYEMAIL',     'ctl00$CP$SignInUC1$PasswordContainer$txtPassword': 'MYPASSWORD' }      with requests.Session() as s:         p = s.post(SignIn, data=payload)          print(p.content) </code></pre>  <p>HTML from the site log in form:</p>  <pre><code>&lt;div class=""chkout-fieldbox std-half-cln signinblock checkout-form"" id=""sign-in""&gt;     &lt;div class=""std-half-cln-wrapper""&gt;          &lt;h2 class=""module-title""&gt;&lt;span id=""ctl00_CP_SignInUC1_lblSinginHeader""&gt;Returning Customer?&lt;/span&gt;&lt;/h2&gt;         &lt;p class=""std-bottomspace""&gt;Please sign in to Your Account&lt;/p&gt;             &lt;fieldset class=""checkout-fieldset""&gt;             &lt;legend&gt;Sign in for fast and easy checkout&lt;/legend&gt;             &lt;ul class=""clearfix""&gt;                 &lt;li class=""large""&gt;                     &lt;label for=""ctl00_CP_SignInUC1_UserNameContainer_txtUserName""&gt;Email Address&lt;/label&gt;                       &lt;span id=""ctl00_CP_SignInUC1_UserNameContainer""&gt;&lt;span id=""ctl00_CP_SignInUC1_UserNameContainer_proxyValidator"" style=""color:Red;display:none;""&gt;&lt;/span&gt;&lt;input name=""ctl00$CP$SignInUC1$UserNameContainer$txtUserName"" type=""email"" maxlength=""80"" id=""ctl00_CP_SignInUC1_UserNameContainer_txtUserName"" tabindex=""1"" class=""txtbox"" autocomplete=""off"" placeholder=""example@example.com"" onblur=""if (this.onchange!=null)this.onchange();""&gt;&lt;span id=""ctl00_CP_SignInUC1_UserNameContainer_ctl00"" style=""display:none;""&gt;                             &lt;img id=""ctl00_CP_SignInUC1_UserNameContainer_ctl00_imgUserName"" src=""https://images.bbycastatic.ca/sf/images/common/pictures/warningiconsmall.gif"" alt="" ""&gt;                         &lt;/span&gt;&lt;/span&gt;                             &lt;/li&gt;                 &lt;li class=""large""&gt;                     &lt;label for=""ctl00_CP_SignInUC1_PasswordContainer_txtPassword""&gt;Password&lt;/label&gt;                     &lt;span id=""ctl00_CP_SignInUC1_PasswordContainer""&gt;&lt;span id=""ctl00_CP_SignInUC1_PasswordContainer_proxyValidator"" style=""color:Red;display:none;""&gt;&lt;/span&gt;&lt;input name=""ctl00$CP$SignInUC1$PasswordContainer$txtPassword"" type=""password"" id=""ctl00_CP_SignInUC1_PasswordContainer_txtPassword"" tabindex=""2"" class=""txtbox"" autocomplete=""off"" onblur=""if (this.onchange!=null)this.onchange();""&gt;&lt;span id=""ctl00_CP_SignInUC1_PasswordContainer_ctl00"" style=""display:none;""&gt;                             &lt;img id=""ctl00_CP_SignInUC1_PasswordContainer_ctl00_imgPassword"" src=""https://images.bbycastatic.ca/sf/images/common/pictures/warningiconsmall.gif"" alt="" ""&gt;                         &lt;/span&gt;&lt;/span&gt;                     &lt;span class=""subtext-wrapper""&gt;                         &lt;p class=""subtext-notification""&gt;                             &lt;a id=""ctl00_CP_SignInUC1_lnkForgotPassword"" href=""javascript:__doPostBack('ctl00$CP$SignInUC1$lnkForgotPassword','')""&gt;I forgot my password&lt;/a&gt;                          &lt;/p&gt;                       &lt;/span&gt;                 &lt;/li&gt;             &lt;/ul&gt;                           &lt;div id=""CaptchaContainer"" class=""clearfix btm-margin2x""&gt;                &lt;/div&gt;            &lt;/fieldset&gt;         &lt;a id=""ctl00_CP_SignInUC1_BtnLoginButton"" tabindex=""4"" type=""submit"" class=""button-left btn-primary btn btn-lock"" href='javascript:WebForm_DoPostBackWithOptions(new WebForm_PostBackOptions(""ctl00$CP$SignInUC1$BtnLoginButton"", """", true, ""signin"", """", false, true))'&gt;Sign In&lt;/a&gt;     &lt;/div&gt;  &lt;/div&gt; </code></pre>  <p></p>"	47297582	"<p>I don't have a complete answer for you, but maybe I can help with direction.</p>  <hr>  <p>First off, you're correct, javascript is being called. In the html you posted, the login button is <code>ctl00_CP_SignInUC1_BtnLoginButton</code> and it has some javascript hidden in its href property:</p>  <p><code>href='javascript:WebForm_DoPostBackWithOptions(new WebForm_PostBackOptions(""ctl00$CP$SignInUC1$BtnLoginButton"", """", true, ""signin"", """", false, true))</code></p>  <p>When the button is clicked, your browser launches a <a href=""https://stackoverflow.com/questions/183254/what-is-a-postback"">postback</a> to the server, which contains the state of the login page.</p>  <p>Unfortunately, I've never dealt with postback before. But there does seems to be a few posts on the topic. Here's <a href=""https://stackoverflow.com/questions/32638741/post-forms-using-requests-on-net-website-python"">one</a> that looks useful.  </p>"
47330200	How to make JavaScript and Python work together?	javascript|jquery|python|python-3.x	2017-11-16 12:54:00.993000 UTC	"<p>I want to make a two way communication model for JavaScript and Python. I want JavaScript to process a data and send it to Python and then Python processes it and sends it back to JavaScript. I don't have a clue how this can be achieved and how the communication between the two languages will be made.</p> <p>Consider the example:</p> <p>Read the comments for clarity of the model!</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-js lang-js prettyprint-override""><code>var files = []; const div_files = document.getElementById(""files""); const div_results = document.getElementById(""results"");  function fetchNames() {   div_files.innerHTML = """"; // clears the file div   div_results.innerHTML = """"; // clears the results div    var checkbox_elements = document.getElementsByClassName('filename');    Array.from(checkbox_elements).forEach(function(k) {     if (k.checked) {        files.push(k.value);       div_files.innerHTML += k.value + '&lt;br&gt;';     }    });    // the files array should now be shared with python       //console.log(files);    // JavaScript SHOULD WAIT while PYTHON processes the data and shares the cal_array with JS    // when the cal_array is available with JS only then it shall start processing the code mentioned below      var cal_array = [     [2231, 11640, 104621],     [2231, 11640, 104621],     [9, 494, 3339]   ];   Array.from(cal_array).forEach(function(k) {     div_results.innerHTML += k + '&lt;br&gt;';   })    };</code></pre> <pre class=""snippet-code-html lang-html prettyprint-override""><code>&lt;form&gt;   &lt;input type=""checkbox"" class=""filename"" value=""./first.html""&gt;First File&lt;br&gt;   &lt;input type=""checkbox"" class=""filename"" value=""./second.html""&gt;Second File&lt;br&gt;   &lt;input type=""checkbox"" class=""filename"" value=""./third.html""&gt;Third File&lt;br&gt;   &lt;br&gt;   &lt;input type=""button"" value=""Submit"" onclick=""fetchNames()""&gt; &lt;/form&gt; &lt;br&gt; The selected file(s) are: &lt;div id=""files""&gt;&lt;/div&gt; &lt;br&gt; The result shows the number of lines, words, and characters of the respective files mentioned above: &lt;div id=""results""&gt;&lt;/div&gt;</code></pre> </div> </div> </p> <p>The Python Script is as follows:</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-html lang-html prettyprint-override""><code>import os  files = ['./first.html','./second.html','./firstfile.txt'] #this array should be passed into python by the JS script cal_array = [] #this array should be shared with JS after data has been entered into it def calculation(): # this function calculates the number of lines, words and characters of the selected file(s)     for val in files:         file_details = []         fname=(val)         infile=open(fname, 'r')         lines=0         words=0         characters=0         for line in infile:             line = line.strip(os.linesep)             wordslist=line.split()             lines=lines+1             words=words+len(wordslist)             characters=characters+ len(line)         file_details.append(lines)         file_details.append(words)         file_details.append(characters)         cal_array.append(file_details)  calculation()   print(cal_array)  # some code here to share cal_array with javascript</code></pre> </div> </div> </p> <p>I'm a noob in Python, but I want to know how to make the two languages interact with each other? I'll really appreciate any help!</p>"	47330372	"<p>There are a lot of ways to do this and this is quite a broad question. Since JavaScript exists in the browser and python is run on your computer, you must set up some sort of webserver for the two to talk together. The most common and easy way is to go via the normal HTTP request response method. The most straightforward combination is Flask on the python site and AJAX on the JavasScript side. However, there are a hundred other ways to do this. I would suggest to read up on: </p>  <p>REST APIs: <a href=""https://www.codecademy.com/courses/javascript-beginner-en-EID4t/0/4"" rel=""nofollow noreferrer"">https://www.codecademy.com/courses/javascript-beginner-en-EID4t/0/4</a></p>  <p>Ajax (JavaScript) <a href=""https://www.w3schools.com/xml/ajax_xmlhttprequest_send.asp"" rel=""nofollow noreferrer"">https://www.w3schools.com/xml/ajax_xmlhttprequest_send.asp</a></p>  <p>Flask (Python) <a href=""http://flask.pocoo.org/"" rel=""nofollow noreferrer"">http://flask.pocoo.org/</a></p>"
47330200	How to make JavaScript and Python work together?	javascript|jquery|python|python-3.x	2017-11-16 12:54:00.993000 UTC	"<p>I want to make a two way communication model for JavaScript and Python. I want JavaScript to process a data and send it to Python and then Python processes it and sends it back to JavaScript. I don't have a clue how this can be achieved and how the communication between the two languages will be made.</p> <p>Consider the example:</p> <p>Read the comments for clarity of the model!</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-js lang-js prettyprint-override""><code>var files = []; const div_files = document.getElementById(""files""); const div_results = document.getElementById(""results"");  function fetchNames() {   div_files.innerHTML = """"; // clears the file div   div_results.innerHTML = """"; // clears the results div    var checkbox_elements = document.getElementsByClassName('filename');    Array.from(checkbox_elements).forEach(function(k) {     if (k.checked) {        files.push(k.value);       div_files.innerHTML += k.value + '&lt;br&gt;';     }    });    // the files array should now be shared with python       //console.log(files);    // JavaScript SHOULD WAIT while PYTHON processes the data and shares the cal_array with JS    // when the cal_array is available with JS only then it shall start processing the code mentioned below      var cal_array = [     [2231, 11640, 104621],     [2231, 11640, 104621],     [9, 494, 3339]   ];   Array.from(cal_array).forEach(function(k) {     div_results.innerHTML += k + '&lt;br&gt;';   })    };</code></pre> <pre class=""snippet-code-html lang-html prettyprint-override""><code>&lt;form&gt;   &lt;input type=""checkbox"" class=""filename"" value=""./first.html""&gt;First File&lt;br&gt;   &lt;input type=""checkbox"" class=""filename"" value=""./second.html""&gt;Second File&lt;br&gt;   &lt;input type=""checkbox"" class=""filename"" value=""./third.html""&gt;Third File&lt;br&gt;   &lt;br&gt;   &lt;input type=""button"" value=""Submit"" onclick=""fetchNames()""&gt; &lt;/form&gt; &lt;br&gt; The selected file(s) are: &lt;div id=""files""&gt;&lt;/div&gt; &lt;br&gt; The result shows the number of lines, words, and characters of the respective files mentioned above: &lt;div id=""results""&gt;&lt;/div&gt;</code></pre> </div> </div> </p> <p>The Python Script is as follows:</p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-html lang-html prettyprint-override""><code>import os  files = ['./first.html','./second.html','./firstfile.txt'] #this array should be passed into python by the JS script cal_array = [] #this array should be shared with JS after data has been entered into it def calculation(): # this function calculates the number of lines, words and characters of the selected file(s)     for val in files:         file_details = []         fname=(val)         infile=open(fname, 'r')         lines=0         words=0         characters=0         for line in infile:             line = line.strip(os.linesep)             wordslist=line.split()             lines=lines+1             words=words+len(wordslist)             characters=characters+ len(line)         file_details.append(lines)         file_details.append(words)         file_details.append(characters)         cal_array.append(file_details)  calculation()   print(cal_array)  # some code here to share cal_array with javascript</code></pre> </div> </div> </p> <p>I'm a noob in Python, but I want to know how to make the two languages interact with each other? I'll really appreciate any help!</p>"	47330433	"<p>If what you want is to create a web-app, and then send the data from there to your server via. AJAX, where you will work on the data in Python, what you need is something like <a href=""http://flask.pocoo.org/"" rel=""noreferrer"">Flask</a>.</p>  <p>If what you want is to create a web-app that also runs the Python code, you need a python interpreter written in JavaScript, something like <a href=""http://pyjs.org/"" rel=""noreferrer"">pyjs</a></p>"
47336839	mapping between routes and direction using javascript or python graph or tree?	javascript|python|data-structures|graph	2017-11-16 18:34:25.393000 UTC	"<p>I need to create the relationship between routes and direction. I am not sure which data structure is appropriate for me and how should I proceed. Currently I have two lists/arrays. One array contains routes and another contains direction. For example, routes = [11,12,13,14,15,16,17,18,19,20] directions = [""north"",""south"",""west"",""east"",""inbound"",""outbound""]. Some of these routes(as in bus service) goes only in 2 directions, 1 direction,etc . For example say 11,12,19 goes north and south. 18,20 goes to to inbound and outbound. 17 goes only inbound. 14,15 goes to all the directions.</p>  <p>So what would be better approach to implement this in JavaScript or python. I can see this as a graph DS problem. Can anyone help me or know better approach</p>"	47337601	"<p>You could structure your data like a <code>dict</code> in Python (which is essentially a hashmap). The idea is that you have key : value pairs that are easily accessible.</p>  <p>Depending on how you need to access the data, you could structure it like this:</p>  <pre><code>{      11 : ['north', 'south'],      17 : ['inbound'],      ... } </code></pre>  <p>Where the key are the routes and the values are the list of directions.</p>  <p>OR</p>  <p>You could structure like this:</p>  <pre><code>{     'north' : [11, 12, 14, 15, 19],     'inbound' : [17, 18, ...],     ... } </code></pre>  <p>Where the keys are the directions and the values are the list of routes that go in that direction.</p>  <p>Getting values in a dict is O(1) and looking up values in a list is O(n). To get even better speeds, you could instead use a <code>set</code> for the values, which has a lookup speed of O(1) as well.</p>"
47342623	Embedding a JavaScript canvas into the python TKinter	javascript|python|canvas|tkinter	2017-11-17 03:03:46.827000 UTC	"<p>I am trying to embed a JavaScript canvas into the python Tkinter. I hope when I opened the GUI I will see the Javascript canvas already on the interface, is it possible to just import the JavaScript codes directly into the python script? Thank you.</p>"	47342761	"<p>No, there is no way to use javascript to draw in a Tkinter canvas. </p>"
47344713	Issue when python called from Javascript	javascript|python|html	2017-11-17 06:40:08.287000 UTC	"<p>I am new to Javascript, python and php. I have a js program wherein I click a button, it calls a python program and receive the returned value to display on the screen. I am trying to avoid using Jquery and Json. </p>  <p>Below is the code of both Javascript and Python.</p>  <p>Javascript:</p>  <pre><code>&lt;html&gt; &lt;head&gt; &lt;script&gt; function cal() {   var xhttp = new XMLHttpRequest();   xhttp.onreadystatechange = function()   {      if (this.readyState == 4 &amp;&amp; this.status == 200) {      document.getElementById(""do"").innerHTML = this.responseText;      }   };   xhttp.open(""POST"", ""./pth.py"", true);   xhttp.send();  } &lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;input type=""submit"" id=""submit"" class=""btn btn-default"" name=""Submit""  onClick=""cal();"" value=""Test""/&gt; &lt;div id=""do""&gt;  &lt;/div&gt; &lt;/body&gt; &lt;/html&gt; </code></pre>  <p>Python:</p>  <pre><code>#!/usr/bin/python  print ""hello""; </code></pre>  <p>For the above code, the following is the output I am receiving (I see the entire python code rather than just hello)</p>  <pre><code>#!/usr/bin/python print ""hello""; </code></pre>"	47345786	"<p>To perform such actions you need to use <a href=""https://en.wikipedia.org/wiki/Common_Gateway_Interface"" rel=""nofollow noreferrer"">CGI</a> layer between your webserver and python scripts, because a webserver does not work with them directly. Usually the following backend stack is commonly used:</p>  <pre><code>Scripts with business logic (python/perl/php) -&gt; CGI layer (WSGI, uWSGI, etc..) -&gt; Webserver (Apache, nginx, etc..) </code></pre>  <p>So, you receive content of your script instead of it's output because it wasn't executed, just read like a text file.</p>"
47476463	"""List of tuples"", from python to javascript"	javascript|python|list	2017-11-24 15:43:15.883000 UTC	"<p>I am working with python and flask. I have already my list of tuples in <strong>python</strong>:</p>  <pre><code>[[[40.728410000000004, -73.99428], [40.728253333333335, -73.99441333333334], [40.72809666666667, -73.99454666666666], [40.727940000000004, -73.99468]], [[40.727940000000004, -73.99468], [40.72790666666667, -73.99470666666667], [40.727873333333335, -73.99473333333333], [40.72784, -73.99476]]] </code></pre>  <p>Is necesary for pass this to javascript (<em>to my html file</em>) in JSON format, thus, in my javascript code I have a string, not a list of tuples. code in python:</p>  <pre><code>encoded = json.dumps(ListOfTuples) output = {'vector': encoded} return jsonify(**output) </code></pre>  <p>Result in javascript, a string.</p>  <pre><code>""[[[40.728410000000004, -73.99428], [40.728253333333335, -73.99441333333334], [40.72809666666667, -73.99454666666666], [40.727940000000004, -73.99468]], [[40.727940000000004, -73.99468], [40.72790666666667, -73.99470666666667], [40.727873333333335, -73.99473333333333], [40.72784, -73.99476]]]"" </code></pre>  <p>I need read this like a list of tuples in javascript. I am trying convert to a object, but is not working, whit this code:</p>  <pre><code>var arr = Object.values(ListOfTuplesInString); </code></pre>  <p>I have this:</p>  <pre><code>[""["", ""["", ""["", ""4"", ""0"", ""."", ""7"", ""2"", ""8"", ""4"", ""1"", ""0"", ""0"", ""0"", ""0"", ""0"", ""0"", ""0"", ""0"", ""0"", ""4"", "","", "" "", ""-"", ""7"", ""3"", ""."", ""9"", ""9"", ""4"", ""2"", ""8"", ""]"", "","", "" "", ""["", ""4"", ""0"", ""."", ""7"", ""2"", ""8"", ""2"", ""5"", ""3"", ""3"", ""3"", ""3"", ""3"", ""3"", ""3"", ""3"", ""3"", ""5"", "","", "" "", ""-"", ""7"", ""3"", ""."", ""9"", ""9"", ""4"", ""4"", ""1"", ""3"", ""3"", ""3"", ""3"", ""3"", ""3"", ""3"", ""3"", ""4"", ""]"", "","", "" "", ""["", ""4"", ""0"", ""."", ""7"", ""2"", ""8"", ""0"", ""9"", ""6"", ""6"", ""6"", ""6"", ""6"", ""6"", ""6"", ""6"", ""7"", "","", "" "", ""-"", ""7"", ""3"", …] </code></pre>  <p>How can I get my list of tuples in javascript? Thanks.</p>"	47476573	<p>Why do you convert to JSON twice? Once with json.dumps and once with jsonify?</p>  <p>You should just do:</p>  <pre><code>return json.dumps({'vector': ListOfTuples}) </code></pre>  <p>Then chances will be good that your Ajax call (when issued with the correct content-type) will return a valid JS object. But the latter is just a guess since you did not provide how you get the data into JS.</p>
47495643	Parsing html from a javascript rendered url with python object	javascript|python|web-scraping|beautifulsoup|python-object	2017-11-26 11:31:26.487000 UTC	"<p>I would like to extract the market information from the following url and all of its subsequent pages:</p>  <pre><code>https://uk.reuters.com/investing/markets/index/.FTSE?sortBy=&amp;sortDir=&amp;pn=1 </code></pre>  <p>I have successfully parsed the data that I want from the first page using some code from the following url:</p>  <pre><code>https://impythonist.wordpress.com/2015/01/06/ultimate-guide-for-scraping-javascript-rendered-web-pages </code></pre>  <p>I have also been able to parse out the url for the next page to feed into a loop in order to grab data from the next page. The problem is it crashes before the next page loads for a reason I don't fully understand.</p>  <p>I have a hunch that the class that I have borrowed from 'impythonist' may be causing the problem. I don't know enough object orientated programming to work out the problem. Here is my code, much of which is borrowed from the the url above:</p>  <pre><code>import sys   from PyQt4.QtGui import *   from PyQt4.QtCore import *   from PyQt4.QtWebKit import *   from lxml import html import re from bs4 import BeautifulSoup  class Render(QWebPage):     def __init__(self, url):       self.app = QApplication(sys.argv)       QWebPage.__init__(self)       self.loadFinished.connect(self._loadFinished)       self.mainFrame().load(QUrl(url))       self.app.exec_()      def _loadFinished(self, result):       self.frame = self.mainFrame()       self.app.quit()      base_url='https://uk.reuters.com' complete_next_page='https://uk.reuters.com/investing/markets/index/.FTSE?sortBy=&amp;sortDir=&amp;pn=1'  #LOOP TO RENDER PAGES AND GRAB DATA while complete_next_page != '':     print ('NEXT PAGE: ',complete_next_page, '\n')     r = Render(complete_next_page)  # USE THE CLASS TO RENDER JAVASCRIPT FROM PAGE     result = r.frame.toHtml()     # ERROR IS THROWN HERE ON 2nd PAGE  # PARSE THE HTML soup = BeautifulSoup(result, 'lxml') row_data=soup.find('div', attrs={'class':'column1 gridPanel grid8'}) print (len(row_data))  # PARSE ALL ROW DATA stripe_rows=row_data.findAll('tr', attrs={'class':'stripe'}) non_stripe_rows=row_data.findAll('tr', attrs={'class':''}) print (len(stripe_rows)) print (len(non_stripe_rows))  # PARSE SPECIFIC ROW DATA FROM INDEX COMPONENTS #non_stripe_rows: from 4 to 18 (inclusive) contain data #stripe_rows: from 2 to 16 (inclusive) contain data i=2 while i &lt; len(stripe_rows):     print('CURRENT LINE IS: ',str(i))     print(stripe_rows[i])     print('###############################################')     print(non_stripe_rows[i+2])     print('\n')     i+=1  #GETS LINK TO NEXT PAGE next_page=str(soup.find('div', attrs={'class':'pageNavigation'}).find('li', attrs={'class':'next'}).find('a')['href']) #GETS LINK TO NEXT PAGE WORKS complete_next_page=base_url+next_page </code></pre>  <p>I have annotated the bits of code that I have written and understand but I don't really know what's going on in the 'Render' class enough to diagnose the error? Unless its something else?</p>  <p>Here is the error:</p>  <pre><code>result = r.frame.toHtml() AttributeError: 'Render' object has no attribute 'frame' </code></pre>  <p>I don't need to keep the information in the class once I have parsed it out so I was thinking perhaps it could be cleared or reset somehow and then updated to hold the new url information from page 2:n but I have no idea how to do this?</p>  <p>Alternatively if anyone knows another way to grab this specific data from this page and the following ones then that would be equally helpful?</p>  <p>Many thanks in advance.</p>"	47496352	"<p>How about using selenium and phantomjs instead of PyQt.<br/> You can easily get selenium by executing ""pip install selenium"". If you use Mac you can get phantomjs by executing ""brew install phantomjs"". If your PC is Windows use choco instead of brew, or Ubuntu use apt-get.</p>  <pre><code>from selenium import webdriver from bs4 import BeautifulSoup  base_url = ""https://uk.reuters.com"" first_page = ""/business/markets/index/.FTSE?sortBy=&amp;sortDir=&amp;pn=1""  browser = webdriver.PhantomJS()  # PARSE THE HTML browser.get(base_url + first_page) soup = BeautifulSoup(browser.page_source, ""lxml"") row_data = soup.find('div', attrs={'class':'column1 gridPanel grid8'})  # PARSE ALL ROW DATA stripe_rows = row_data.findAll('tr', attrs={'class':'stripe'}) non_stripe_rows = row_data.findAll('tr', attrs={'class':''}) print(len(stripe_rows), len(non_stripe_rows))  # GO TO THE NEXT PAGE next_button = soup.find(""li"", attrs={""class"":""next""}) while next_button:   next_page = next_button.find(""a"")[""href""]   browser.get(base_url + next_page)   soup = BeautifulSoup(browser.page_source, ""lxml"")   row_data = soup.find('div', attrs={'class':'column1 gridPanel grid8'})   stripe_rows = row_data.findAll('tr', attrs={'class':'stripe'})   non_stripe_rows = row_data.findAll('tr', attrs={'class':''})   print(len(stripe_rows), len(non_stripe_rows))   next_button = soup.find(""li"", attrs={""class"":""next""})  # DONT FORGET THIS!! browser.quit() </code></pre>  <p>I know the code above is not efficient (too slow I feel), but I think that it will bring you the results you desire. In addition, if the web page you want to scrape does not use Javascript, even PhantomJS and selenium are unnecessary. You can use the requests module. However, since I wanted to show you the contrast with PyQt, I used PhantomJS and Selenium in this answer.</p>"
47502496	How do I execute Python in Javascript without using Node.js? Is this possible?	javascript|python|executable	2017-11-27 00:29:47.007000 UTC	"<p>I have a Python script which I so far have been executing with PHP using <code>shell_exec()</code> which <em>outputs text to the HTML page</em>. Problem is, PHP is too slow and has to reload every single time I want a part of the page to be updated, so I thought about using Javascript, which is faster than PHP.</p>  <p>Since I don't want to rewrite my entire Python code into Javascript, is there a way to execute my Python without using Node.js? I am a complete newbie to Javascript.</p>"	47502642	"<p>PHP isn't slow here, PHP itself can be very, very fast. What's slow is having to instantiate a shell and execute a child-process for every request. You'll see the same slowdown trying this pattern with any other language as well, unless you do something to cache the script's output and refresh that cache asynchronously. </p>  <p>You may also be confusing the role of JavaScript. Your server can run Python, PHP or JavaScript (JS would use the node.js runtime) and more. Anything server-side can call any other thing server-side. JavaScript can also run on the client-side in a visitor's browser.</p>  <p>JavaScript on the client-side doesn't have access to anything server-side unless you create an endpoint. Client-side JavaScript is really not much more capable than a user with a mouse and keyboard. The endpoint you'd create would trigger exactly the same slowdown you described above, except with more complexity.</p>"
47502496	How do I execute Python in Javascript without using Node.js? Is this possible?	javascript|python|executable	2017-11-27 00:29:47.007000 UTC	"<p>I have a Python script which I so far have been executing with PHP using <code>shell_exec()</code> which <em>outputs text to the HTML page</em>. Problem is, PHP is too slow and has to reload every single time I want a part of the page to be updated, so I thought about using Javascript, which is faster than PHP.</p>  <p>Since I don't want to rewrite my entire Python code into Javascript, is there a way to execute my Python without using Node.js? I am a complete newbie to Javascript.</p>"	47502726	"<p>What, exactly, does your Python script do?  I think you might be falling victim to the XY problem here.  If you need speed and you can implement your Python code in Javascript, then I don't think I can recommend anything less than rewriting your code.</p>  <p>Another option you might have is to execute your python script once per session and have it take an input (via REST or something) and return its output like that, but that honestly might be more work depending on your script.</p>"
47507144	Pull variable value from javascript source using BeautifulSoup4 Python	javascript|python|html	2017-11-27 09:03:55.870000 UTC	"<p>I'm newbie in python programming. I'm learning beautifulsoup to scrap website.</p>  <p>I want to extract and store the value of ""stream"" to my variable.</p>  <p>My Python code as follows :</p>  <pre><code>import bs4 as bs #Importing BeautifulSoup4 Python Library. import urllib.request import requests import json import re  headers = {'User-Agent':'Mozilla/5.0'} url = ""http://thoptv.com/partners/mhdTVlive/Core.php?level=1200&amp;channel=Dsports_HD""  page = requests.get(url) soup = bs.BeautifulSoup(page.text,""html.parser"") pattern = re.compile('var stream = (.*?);') scripts = soup.find_all('script')  for script in scripts:    if(pattern.match(str(script.string))):        data = pattern.match(script.string)        links = json.loads(data.groups()[0])        print(links) </code></pre>  <p>This is the source javascript code to get the stream url value.</p>  <blockquote>   <p>https://content.jwplatform.com/libraries/oncyToRO.js'>if( navigator.userAgent.match(/android/i)||   navigator.userAgent.match(/webOS/i)||   navigator.userAgent.match(/iPhone/i)||   navigator.userAgent.match(/iPad/i)||   navigator.userAgent.match(/iPod/i)||   navigator.userAgent.match(/BlackBerry/i)||   navigator.userAgent.match(/Windows Phone/i)) {var stream =   ""<a href=""http://ssrigcdnems01.cdnsrv.jio.com/jiotv.live.cdn.jio.com/Dsports_HD/Dsports_HD_800.m3u8?jct=ibxIPxc6rkq1yIUJb4RlEV&amp;pxe=1504146411&amp;st=AQIC5wM2LY4SfczRaEwgGl4Dyvly_3HihdlD_Oduojk5Kxs"" rel=""nofollow noreferrer"">http://ssrigcdnems01.cdnsrv.jio.com/jiotv.live.cdn.jio.com/Dsports_HD/Dsports_HD_800.m3u8?jct=ibxIPxc6rkq1yIUJb4RlEV&amp;pxe=1504146411&amp;st=AQIC5wM2LY4SfczRaEwgGl4Dyvly_3HihdlD_Oduojk5Kxs</a>.<em>AAJTSQACMDIAAlNLABQtNjUxNDEwODczODgxNzkyMzg5OQACUzEAAjYw</em>"";}else{var   stream =   ""<a href=""http://hd.simiptv.com:8080//index.m3u8?key=VIoVSsGRLRouHWGNo1epzX&amp;exp=932213423&amp;domain=thoptv.stream&amp;id=461"" rel=""nofollow noreferrer"">http://hd.simiptv.com:8080//index.m3u8?key=VIoVSsGRLRouHWGNo1epzX&amp;exp=932213423&amp;domain=thoptv.stream&amp;id=461</a>"";}jwplayer(""THOPTVPlayer"").setup({""title"":   'thoptv.stream',""stretching"":""exactfit"",""width"": ""100%"",""file"":   none,""height"": ""100%"",""skin"": ""seven"",""autostart"": ""true"",""logo"":   {""file"":""<a href=""https://i.imgur.com/EprI2uu.png"" rel=""nofollow noreferrer"">https://i.imgur.com/EprI2uu.png</a>"",""margin"":""-0"",   ""position"":""top-left"",""hide"":""false"",""link"":""<a href=""http://mhdtvlive.co.in"" rel=""nofollow noreferrer"">http://mhdtvlive.co.in</a>""},""androidhls"":   true,});jwplayer(""THOPTVPlayer"").onError(function(){jwplayer().load({file:""<a href=""http://content.jwplatform.com/videos/7RtXk3vl-52qL9xLP.mp4"" rel=""nofollow noreferrer"">http://content.jwplatform.com/videos/7RtXk3vl-52qL9xLP.mp4</a>"",image:""<a href=""http://content.jwplatform.com/thumbs/7RtXk3vl-480.jpg"" rel=""nofollow noreferrer"">http://content.jwplatform.com/thumbs/7RtXk3vl-480.jpg</a>""});jwplayer().play();});jwplayer(""THOPTVPlayer"").onComplete(function(){window.location   = window.location.href;});jwplayer(""THOPTVPlayer"").onPlay(function(){clearTimeout(theTimeout);});</p> </blockquote>  <p><strong>I need to extract the url from stream.</strong></p>  <p>var stream = ""<a href=""http://ssrigcdnems01.cdnsrv.jio.com/jiotv.live.cdn.jio.com/Dsports_HD/Dsports_HD_800.m3u8?jct=ibxIPxc6rkq1yIUJb4RlEV&amp;pxe=1504146411&amp;st=AQIC5wM2LY4SfczRaEwgGl4Dyvly_3HihdlD_Oduojk5Kxs"" rel=""nofollow noreferrer"">http://ssrigcdnems01.cdnsrv.jio.com/jiotv.live.cdn.jio.com/Dsports_HD/Dsports_HD_800.m3u8?jct=ibxIPxc6rkq1yIUJb4RlEV&amp;pxe=1504146411&amp;st=AQIC5wM2LY4SfczRaEwgGl4Dyvly_3HihdlD_Oduojk5Kxs</a>.<em>AAJTSQACMDIAAlNLABQtNjUxNDEwODczODgxNzkyMzg5OQACUzEAAjYw</em>"";}</p>"	47507357	"<p>Rather then thinking complicated with regex, if the link is the only  dynamically changing part, you can <code>split</code> the string with some known separating tokens.</p>  <pre><code>x = """""" https://content.jwplatform.com/libraries/oncyToRO.js'&gt;if( navigator.userAgent.match(/android/i)|| navigator.userAgent.match(/webOS/i)|| navigator.userAgent.match(/iPhone/i)|| navigator.userAgent.match(/iPad/i)|| navigator.userAgent.match(/iPod/i)|| navigator.userAgent.match(/BlackBerry/i)|| navigator.userAgent.match(/Windows Phone/i)) {var stream = ""http://ssrigcdnems01.cdnsrv.jio.com/jiotv.live.cdn.jio.com/Dsports_HD/Dsports_HD_800.m3u8?jct=ibxIPxc6rkq1yIUJb4RlEV&amp;pxe=1504146411&amp;st=AQIC5wM2LY4SfczRaEwgGl4Dyvly_3HihdlD_Oduojk5Kxs.AAJTSQACMDIAAlNLABQtNjUxNDEwODczODgxNzkyMzg5OQACUzEAAjYw"";}else{var stream = ""http://hd.simiptv.com:8080//index.m3u8?key=VIoVSsGRLRouHWGNo1epzX&amp;exp=932213423&amp;domain=thoptv.stream&amp;id=461"";}jwplayer(""THOPTVPlayer"").setup({""title"": 'thoptv.stream',""stretching"":""exactfit"",""width"": ""100%"",""file"": none,""height"": ""100%"",""skin"": ""seven"",""autostart"": ""true"",""logo"": {""file"":""https://i.imgur.com/EprI2uu.png"",""margin"":""-0"", ""position"":""top-left"",""hide"":""false"",""link"":""http://mhdtvlive.co.in""},""androidhls"": true,});jwplayer(""THOPTVPlayer"").onError(function(){jwplayer().load({file:""http://content.jwplatform.com/videos/7RtXk3vl-52qL9xLP.mp4"",image:""http://content.jwplatform.com/thumbs/7RtXk3vl-480.jpg""});jwplayer().play();});jwplayer(""THOPTVPlayer"").onComplete(function(){window.location = window.location.href;});jwplayer(""THOPTVPlayer"").onPlay(function(){clearTimeout(theTimeout);}); """""" left1, right1 = x.split(""Phone/i)) {var stream ="") left2, right2 = right1.split("";}else"")  print(left2) # ""http://ssrigcdnems01.cdnsrv.jio.com/jiotv.live.cdn.jio.com/Dsports_HD/Dsports_HD_800.m3u8?jct=ibxIPxc6rkq1yIUJb4RlEV&amp;pxe=1504146411&amp;st=AQIC5wM2LY4SfczRaEwgGl4Dyvly_3HihdlD_Oduojk5Kxs.AAJTSQACMDIAAlNLABQtNjUxNDEwODczODgxNzkyMzg5OQACUzEAAjYw"" </code></pre>"
47507144	Pull variable value from javascript source using BeautifulSoup4 Python	javascript|python|html	2017-11-27 09:03:55.870000 UTC	"<p>I'm newbie in python programming. I'm learning beautifulsoup to scrap website.</p>  <p>I want to extract and store the value of ""stream"" to my variable.</p>  <p>My Python code as follows :</p>  <pre><code>import bs4 as bs #Importing BeautifulSoup4 Python Library. import urllib.request import requests import json import re  headers = {'User-Agent':'Mozilla/5.0'} url = ""http://thoptv.com/partners/mhdTVlive/Core.php?level=1200&amp;channel=Dsports_HD""  page = requests.get(url) soup = bs.BeautifulSoup(page.text,""html.parser"") pattern = re.compile('var stream = (.*?);') scripts = soup.find_all('script')  for script in scripts:    if(pattern.match(str(script.string))):        data = pattern.match(script.string)        links = json.loads(data.groups()[0])        print(links) </code></pre>  <p>This is the source javascript code to get the stream url value.</p>  <blockquote>   <p>https://content.jwplatform.com/libraries/oncyToRO.js'>if( navigator.userAgent.match(/android/i)||   navigator.userAgent.match(/webOS/i)||   navigator.userAgent.match(/iPhone/i)||   navigator.userAgent.match(/iPad/i)||   navigator.userAgent.match(/iPod/i)||   navigator.userAgent.match(/BlackBerry/i)||   navigator.userAgent.match(/Windows Phone/i)) {var stream =   ""<a href=""http://ssrigcdnems01.cdnsrv.jio.com/jiotv.live.cdn.jio.com/Dsports_HD/Dsports_HD_800.m3u8?jct=ibxIPxc6rkq1yIUJb4RlEV&amp;pxe=1504146411&amp;st=AQIC5wM2LY4SfczRaEwgGl4Dyvly_3HihdlD_Oduojk5Kxs"" rel=""nofollow noreferrer"">http://ssrigcdnems01.cdnsrv.jio.com/jiotv.live.cdn.jio.com/Dsports_HD/Dsports_HD_800.m3u8?jct=ibxIPxc6rkq1yIUJb4RlEV&amp;pxe=1504146411&amp;st=AQIC5wM2LY4SfczRaEwgGl4Dyvly_3HihdlD_Oduojk5Kxs</a>.<em>AAJTSQACMDIAAlNLABQtNjUxNDEwODczODgxNzkyMzg5OQACUzEAAjYw</em>"";}else{var   stream =   ""<a href=""http://hd.simiptv.com:8080//index.m3u8?key=VIoVSsGRLRouHWGNo1epzX&amp;exp=932213423&amp;domain=thoptv.stream&amp;id=461"" rel=""nofollow noreferrer"">http://hd.simiptv.com:8080//index.m3u8?key=VIoVSsGRLRouHWGNo1epzX&amp;exp=932213423&amp;domain=thoptv.stream&amp;id=461</a>"";}jwplayer(""THOPTVPlayer"").setup({""title"":   'thoptv.stream',""stretching"":""exactfit"",""width"": ""100%"",""file"":   none,""height"": ""100%"",""skin"": ""seven"",""autostart"": ""true"",""logo"":   {""file"":""<a href=""https://i.imgur.com/EprI2uu.png"" rel=""nofollow noreferrer"">https://i.imgur.com/EprI2uu.png</a>"",""margin"":""-0"",   ""position"":""top-left"",""hide"":""false"",""link"":""<a href=""http://mhdtvlive.co.in"" rel=""nofollow noreferrer"">http://mhdtvlive.co.in</a>""},""androidhls"":   true,});jwplayer(""THOPTVPlayer"").onError(function(){jwplayer().load({file:""<a href=""http://content.jwplatform.com/videos/7RtXk3vl-52qL9xLP.mp4"" rel=""nofollow noreferrer"">http://content.jwplatform.com/videos/7RtXk3vl-52qL9xLP.mp4</a>"",image:""<a href=""http://content.jwplatform.com/thumbs/7RtXk3vl-480.jpg"" rel=""nofollow noreferrer"">http://content.jwplatform.com/thumbs/7RtXk3vl-480.jpg</a>""});jwplayer().play();});jwplayer(""THOPTVPlayer"").onComplete(function(){window.location   = window.location.href;});jwplayer(""THOPTVPlayer"").onPlay(function(){clearTimeout(theTimeout);});</p> </blockquote>  <p><strong>I need to extract the url from stream.</strong></p>  <p>var stream = ""<a href=""http://ssrigcdnems01.cdnsrv.jio.com/jiotv.live.cdn.jio.com/Dsports_HD/Dsports_HD_800.m3u8?jct=ibxIPxc6rkq1yIUJb4RlEV&amp;pxe=1504146411&amp;st=AQIC5wM2LY4SfczRaEwgGl4Dyvly_3HihdlD_Oduojk5Kxs"" rel=""nofollow noreferrer"">http://ssrigcdnems01.cdnsrv.jio.com/jiotv.live.cdn.jio.com/Dsports_HD/Dsports_HD_800.m3u8?jct=ibxIPxc6rkq1yIUJb4RlEV&amp;pxe=1504146411&amp;st=AQIC5wM2LY4SfczRaEwgGl4Dyvly_3HihdlD_Oduojk5Kxs</a>.<em>AAJTSQACMDIAAlNLABQtNjUxNDEwODczODgxNzkyMzg5OQACUzEAAjYw</em>"";}</p>"	47507408	"<p><code>pattern.match()</code> matches the pattern from the <em>beginning</em> of the string. Try using <code>pattern.search()</code> instead - it will match anywhere within the string.</p>  <p>Change your for loop to this:</p>  <pre><code>for script in scripts:     data = pattern.search(script.text)     if data is not None:         stream_url = data.groups()[0]         print(stream_url) </code></pre>  <p>You can also get rid of the surrounding quotes by changing the regex pattern to:</p>  <pre><code>pattern = re.compile('var stream = ""(.*?)"";') </code></pre>  <p>so that the double quotes are not included in the group.</p>  <hr>  <p>You might also have noticed that there are <em>two</em> possible <code>stream</code> variables depending on the accessing user agent. For tablet like devices the first would be appropriate, while all other user agents should use the second <code>stream</code>. You can use <code>pattern.findall()</code> to get all of them:</p>  <pre><code>&gt;&gt;&gt; pattern.findall(script.text) ['""http://ssrigcdnems01.cdnsrv.jio.com/jiotv.live.cdn.jio.com/Dsports_HD/Dsports_HD_800.m3u8?jct=LEurobVVelOhbzOZ6EkTwr&amp;pxe=1571716053&amp;st=AQIC5wM2LY4SfczRaEwgGl4Dyvly_3HihdlD_Oduojk5Kxs.*AAJTSQACMDIAAlNLABQtNjUxNDEwODczODgxNzkyMzg5OQACUzEAAjYw*""', '""http://hd.simiptv.com:8080//index.m3u8?key=vaERnLJswnWXM8THmfvDq5&amp;exp=944825312&amp;domain=thoptv.stream&amp;id=461""'] </code></pre>"
47507144	Pull variable value from javascript source using BeautifulSoup4 Python	javascript|python|html	2017-11-27 09:03:55.870000 UTC	"<p>I'm newbie in python programming. I'm learning beautifulsoup to scrap website.</p>  <p>I want to extract and store the value of ""stream"" to my variable.</p>  <p>My Python code as follows :</p>  <pre><code>import bs4 as bs #Importing BeautifulSoup4 Python Library. import urllib.request import requests import json import re  headers = {'User-Agent':'Mozilla/5.0'} url = ""http://thoptv.com/partners/mhdTVlive/Core.php?level=1200&amp;channel=Dsports_HD""  page = requests.get(url) soup = bs.BeautifulSoup(page.text,""html.parser"") pattern = re.compile('var stream = (.*?);') scripts = soup.find_all('script')  for script in scripts:    if(pattern.match(str(script.string))):        data = pattern.match(script.string)        links = json.loads(data.groups()[0])        print(links) </code></pre>  <p>This is the source javascript code to get the stream url value.</p>  <blockquote>   <p>https://content.jwplatform.com/libraries/oncyToRO.js'>if( navigator.userAgent.match(/android/i)||   navigator.userAgent.match(/webOS/i)||   navigator.userAgent.match(/iPhone/i)||   navigator.userAgent.match(/iPad/i)||   navigator.userAgent.match(/iPod/i)||   navigator.userAgent.match(/BlackBerry/i)||   navigator.userAgent.match(/Windows Phone/i)) {var stream =   ""<a href=""http://ssrigcdnems01.cdnsrv.jio.com/jiotv.live.cdn.jio.com/Dsports_HD/Dsports_HD_800.m3u8?jct=ibxIPxc6rkq1yIUJb4RlEV&amp;pxe=1504146411&amp;st=AQIC5wM2LY4SfczRaEwgGl4Dyvly_3HihdlD_Oduojk5Kxs"" rel=""nofollow noreferrer"">http://ssrigcdnems01.cdnsrv.jio.com/jiotv.live.cdn.jio.com/Dsports_HD/Dsports_HD_800.m3u8?jct=ibxIPxc6rkq1yIUJb4RlEV&amp;pxe=1504146411&amp;st=AQIC5wM2LY4SfczRaEwgGl4Dyvly_3HihdlD_Oduojk5Kxs</a>.<em>AAJTSQACMDIAAlNLABQtNjUxNDEwODczODgxNzkyMzg5OQACUzEAAjYw</em>"";}else{var   stream =   ""<a href=""http://hd.simiptv.com:8080//index.m3u8?key=VIoVSsGRLRouHWGNo1epzX&amp;exp=932213423&amp;domain=thoptv.stream&amp;id=461"" rel=""nofollow noreferrer"">http://hd.simiptv.com:8080//index.m3u8?key=VIoVSsGRLRouHWGNo1epzX&amp;exp=932213423&amp;domain=thoptv.stream&amp;id=461</a>"";}jwplayer(""THOPTVPlayer"").setup({""title"":   'thoptv.stream',""stretching"":""exactfit"",""width"": ""100%"",""file"":   none,""height"": ""100%"",""skin"": ""seven"",""autostart"": ""true"",""logo"":   {""file"":""<a href=""https://i.imgur.com/EprI2uu.png"" rel=""nofollow noreferrer"">https://i.imgur.com/EprI2uu.png</a>"",""margin"":""-0"",   ""position"":""top-left"",""hide"":""false"",""link"":""<a href=""http://mhdtvlive.co.in"" rel=""nofollow noreferrer"">http://mhdtvlive.co.in</a>""},""androidhls"":   true,});jwplayer(""THOPTVPlayer"").onError(function(){jwplayer().load({file:""<a href=""http://content.jwplatform.com/videos/7RtXk3vl-52qL9xLP.mp4"" rel=""nofollow noreferrer"">http://content.jwplatform.com/videos/7RtXk3vl-52qL9xLP.mp4</a>"",image:""<a href=""http://content.jwplatform.com/thumbs/7RtXk3vl-480.jpg"" rel=""nofollow noreferrer"">http://content.jwplatform.com/thumbs/7RtXk3vl-480.jpg</a>""});jwplayer().play();});jwplayer(""THOPTVPlayer"").onComplete(function(){window.location   = window.location.href;});jwplayer(""THOPTVPlayer"").onPlay(function(){clearTimeout(theTimeout);});</p> </blockquote>  <p><strong>I need to extract the url from stream.</strong></p>  <p>var stream = ""<a href=""http://ssrigcdnems01.cdnsrv.jio.com/jiotv.live.cdn.jio.com/Dsports_HD/Dsports_HD_800.m3u8?jct=ibxIPxc6rkq1yIUJb4RlEV&amp;pxe=1504146411&amp;st=AQIC5wM2LY4SfczRaEwgGl4Dyvly_3HihdlD_Oduojk5Kxs"" rel=""nofollow noreferrer"">http://ssrigcdnems01.cdnsrv.jio.com/jiotv.live.cdn.jio.com/Dsports_HD/Dsports_HD_800.m3u8?jct=ibxIPxc6rkq1yIUJb4RlEV&amp;pxe=1504146411&amp;st=AQIC5wM2LY4SfczRaEwgGl4Dyvly_3HihdlD_Oduojk5Kxs</a>.<em>AAJTSQACMDIAAlNLABQtNjUxNDEwODczODgxNzkyMzg5OQACUzEAAjYw</em>"";}</p>"	47507551	"<blockquote>   <p>this code works for me</p> </blockquote>  <pre><code>import bs4 as bs #Importing BeautifulSoup4 Python Library. import urllib.request import requests import json   headers = {'User-Agent':'Mozilla/5.0'} url = ""http://thoptv.com/partners/mhdTVlive/Core.php? level=1200&amp;channel=Dsports_HD""  page = requests.get(url) soup = bs.BeautifulSoup(page.text,""html.parser"")  scripts = soup.find_all('script')    out = list() for c, i in enumerate(scripts): #go over list     text = i.text     if(text[:2] == ""if""): #if the (if) comes first          for count, t in enumerate(text): # then we have reached the correct item in the list             if text[count] == ""{"" and text[count + 1] == ""v"" and text[count + 5] == ""s"": # and if this is here that stream is set                 tmp = text[count:] # add this to the tmp varible                 break # and end co = 0 for m in tmp: #loop over the results from prev. result     if m == ""\"""" and co == 0: #if string is starting         co = 1 #set count to ""true"" 1     elif m == ""\"""" and co == 1: # if it is ending stop         print(''.join(out)) #results         break     elif co == 1:         # as long as we are looping over the rigth string         out.append(m) #add to out list         pass  result = ''.join(out) #set result </code></pre>  <blockquote>   <p>it basicly filters the string manuely.</p> </blockquote>  <p>but if we use user1767754 method (brilliant by the way) we will end up something like this:</p>  <pre><code>import bs4 as bs #Importing BeautifulSoup4 Python Library. import urllib.request import requests import json  headers = {'User-Agent':'Mozilla/5.0'} url = ""http://thoptv.com/partners/mhdTVlive/Core.php?level=1200&amp;channel=Dsports_HD""  page = requests.get(url) soup = bs.BeautifulSoup(page.text,""html.parser"")  scripts = soup.find_all('script')  x = scripts[3].text  left1, right1 = x.split(""Phone/i)) {var stream ="") left2, right2 = right1.split("";}else"")  print(left2) </code></pre>"
47515137	Extracting data from javascript var inside <script> with python	javascript|python|json|apache-nifi	2017-11-27 16:05:08.107000 UTC	"<p>I'm new with python, BeautifulSoup and other but I want to extract json data which are inside a javascript variable in the ""script"" tag of a web site.</p>  <p>Here is my code for now :</p>  <pre><code>import re from bs4 import BeautifulSoup import json import requests url = 'myUrl' page = requests.get(url).content soup = BeautifulSoup(page, ""html.parser"") pattern = re.compile(r""var hours = ."") script = soup.find(""script"",text=pattern) print(script) </code></pre>  <p>for now I can extract the data with the format like :</p>  <pre><code>&lt;script&gt; var hours = [{...dataIwant...}]; &lt;\script&gt; </code></pre>  <p>But I only want the data without ""script"" or ""var hours ="". I want to change it in json and put it in apache nifi.</p>  <p>I have tried pretty much everything I have found here and on google. But most of the time when I try to extract the variable and change it to json format I have ""None"" or other errors.</p>  <p>So if you have some tips to help me get the data in json format it would be great !</p>  <p>Thank you !</p>"	47515287	"<p>If ""script"" is a string after you used soup.find() you could use regular expression to get the part you need. Something like this could work.</p>  <pre><code>m = re.search('var hours = (.+)[,;]{1}', script) if m:     found = m.group(1) </code></pre>  <p>See: <a href=""https://stackoverflow.com/questions/4666973/how-to-extract-a-substring-from-inside-a-string-in-python#4667014"">How to extract a substring from inside a string in Python?</a></p>"
47534396	Javascript and Python - Best communication method	javascript|php|python|ajax|lamp	2017-11-28 14:48:19.190000 UTC	"<p>I am trying to make a html/javascript controlled raspberry pi robot. </p>  <p>So far, I have installed a LAMP server and I am hosting a local webpage with buttons which trigger events and sends commands to my robot via AJAX. AJAX calls a php script which calls a python script (no CGI) to control the robot. </p>  <p>This solution is currently working for me and I can control my raspberry pi hardware from html and simple send data back and forth.</p>  <p>Now what I want to do is, on my web page, have an on/off button which initializes and shuts down the robot, as well as having other events (currently measuring tilt angles from an accelerometer in an android device) to control the speed of the robot. This is where I am getting confused by the procedure of how things will work.</p>  <p>When I make an AJAX call to start the robot, that ajax call does not close until the python script ends (robot shuts off). So I have a python script running (start.py) which contains my robot object where the methods for changing the speed are stored. If I have seperate events in JS to change the speed (sends a call to changespeed.py), how can I change the properties of an object which is stored in a  different python script (start.py) that is already running (See figure below)?</p>  <p>Possible solutions I have thought of thus far:</p>  <p>1) store the object somewhere in memory. Perhaps as a python object, or store its properties in a SQL database. This way, changespeed.py (or Javascript directly) can change the speed properties in that memory, and start.py can continuously read them.</p>  <p>2) Rather than having the new speed values sent to python through AJAX, let python try to retrieve the values from javascript variables. in other words, instead of javascript giving data to python, have python take the data from javascript (scraping?).</p>  <p>3) abandon my current method of having javascript and python communicate through AJAX and php, and set up a websocket to exchange data. I dont know how this works quite yet but it may be the solution I need.</p>  <p>4) I also have not done any programming with interrupts and I dont know much about it. Is it possible to have my main script running and when the speed needs to change, I can send an interrupt at any moment?</p>  <p>I am sorry if my question is a little vague or wordy. I have a lot going on in my head right now. Let me know if it is unclear. Thank you.</p>  <p>TLDR: what is the best way to have javascript execute python scripts and then feed data to that script asynchronously</p>  <p><a href=""https://i.stack.imgur.com/QUIL7.png"" rel=""nofollow noreferrer"">Map of operations</a></p>"	47534976	"<p>It sounds to me that you are looking for an in-memory data store such as <a href=""https://redis.io/"" rel=""nofollow noreferrer"">Redis</a>. With redis you can create a variable in memory which can be accessed by any programming language that has support for Redis (pretty much all of them do).</p>  <p>Redis also has Pub/Sub functionality which allows you to execute specific logic when data is published to a specific channel. For example, if your javascript program changes something in redis, your python program could be subscribed to that specific variable, and know to execute it's own logic when the javascript program changes the value of that variable. For more information on pub/sub check out <a href=""https://redis.io/topics/pubsub"" rel=""nofollow noreferrer"">this page</a></p>"
47534396	Javascript and Python - Best communication method	javascript|php|python|ajax|lamp	2017-11-28 14:48:19.190000 UTC	"<p>I am trying to make a html/javascript controlled raspberry pi robot. </p>  <p>So far, I have installed a LAMP server and I am hosting a local webpage with buttons which trigger events and sends commands to my robot via AJAX. AJAX calls a php script which calls a python script (no CGI) to control the robot. </p>  <p>This solution is currently working for me and I can control my raspberry pi hardware from html and simple send data back and forth.</p>  <p>Now what I want to do is, on my web page, have an on/off button which initializes and shuts down the robot, as well as having other events (currently measuring tilt angles from an accelerometer in an android device) to control the speed of the robot. This is where I am getting confused by the procedure of how things will work.</p>  <p>When I make an AJAX call to start the robot, that ajax call does not close until the python script ends (robot shuts off). So I have a python script running (start.py) which contains my robot object where the methods for changing the speed are stored. If I have seperate events in JS to change the speed (sends a call to changespeed.py), how can I change the properties of an object which is stored in a  different python script (start.py) that is already running (See figure below)?</p>  <p>Possible solutions I have thought of thus far:</p>  <p>1) store the object somewhere in memory. Perhaps as a python object, or store its properties in a SQL database. This way, changespeed.py (or Javascript directly) can change the speed properties in that memory, and start.py can continuously read them.</p>  <p>2) Rather than having the new speed values sent to python through AJAX, let python try to retrieve the values from javascript variables. in other words, instead of javascript giving data to python, have python take the data from javascript (scraping?).</p>  <p>3) abandon my current method of having javascript and python communicate through AJAX and php, and set up a websocket to exchange data. I dont know how this works quite yet but it may be the solution I need.</p>  <p>4) I also have not done any programming with interrupts and I dont know much about it. Is it possible to have my main script running and when the speed needs to change, I can send an interrupt at any moment?</p>  <p>I am sorry if my question is a little vague or wordy. I have a lot going on in my head right now. Let me know if it is unclear. Thank you.</p>  <p>TLDR: what is the best way to have javascript execute python scripts and then feed data to that script asynchronously</p>  <p><a href=""https://i.stack.imgur.com/QUIL7.png"" rel=""nofollow noreferrer"">Map of operations</a></p>"	47535134	<p>You can use  cgi — Common Gateway Interface  and By the use  cgi-cgi.FieldStorage() you can able to get data in python .it support Huge data transmission and fast.it spport all the browser</p>
47534396	Javascript and Python - Best communication method	javascript|php|python|ajax|lamp	2017-11-28 14:48:19.190000 UTC	"<p>I am trying to make a html/javascript controlled raspberry pi robot. </p>  <p>So far, I have installed a LAMP server and I am hosting a local webpage with buttons which trigger events and sends commands to my robot via AJAX. AJAX calls a php script which calls a python script (no CGI) to control the robot. </p>  <p>This solution is currently working for me and I can control my raspberry pi hardware from html and simple send data back and forth.</p>  <p>Now what I want to do is, on my web page, have an on/off button which initializes and shuts down the robot, as well as having other events (currently measuring tilt angles from an accelerometer in an android device) to control the speed of the robot. This is where I am getting confused by the procedure of how things will work.</p>  <p>When I make an AJAX call to start the robot, that ajax call does not close until the python script ends (robot shuts off). So I have a python script running (start.py) which contains my robot object where the methods for changing the speed are stored. If I have seperate events in JS to change the speed (sends a call to changespeed.py), how can I change the properties of an object which is stored in a  different python script (start.py) that is already running (See figure below)?</p>  <p>Possible solutions I have thought of thus far:</p>  <p>1) store the object somewhere in memory. Perhaps as a python object, or store its properties in a SQL database. This way, changespeed.py (or Javascript directly) can change the speed properties in that memory, and start.py can continuously read them.</p>  <p>2) Rather than having the new speed values sent to python through AJAX, let python try to retrieve the values from javascript variables. in other words, instead of javascript giving data to python, have python take the data from javascript (scraping?).</p>  <p>3) abandon my current method of having javascript and python communicate through AJAX and php, and set up a websocket to exchange data. I dont know how this works quite yet but it may be the solution I need.</p>  <p>4) I also have not done any programming with interrupts and I dont know much about it. Is it possible to have my main script running and when the speed needs to change, I can send an interrupt at any moment?</p>  <p>I am sorry if my question is a little vague or wordy. I have a lot going on in my head right now. Let me know if it is unclear. Thank you.</p>  <p>TLDR: what is the best way to have javascript execute python scripts and then feed data to that script asynchronously</p>  <p><a href=""https://i.stack.imgur.com/QUIL7.png"" rel=""nofollow noreferrer"">Map of operations</a></p>"	47639083	"<p>I have successfully set up a websocket between my webpage and my robot using Flask-socketIO. I am now able to control my robot using the accelerometer in my android phone, but the response from the robot is way too slow. sometimes it takes up to 2 seconds for the robot to respond to a command from my phone. I believe part of the issue is that my robot is connected to my WLAN through a wifi extender in my house. So rather than passing data through the wifi extender, to the router, back through the extender, and finally to the robot, I am planning on using my 2nd wifi antenna as an access point, and connect to the robot directly.</p>  <p>Eventually I plan on getting into android app development (I want to connect my 2nd smartphone to the robot via USB and have access to the accelerometer, magnetometer, GPS, and camera). Once I do, I will look into connecting my phone and robot via bluetooth rather than websocket.</p>  <p>I still dont know if this is the best method, but this is my solution at the moment. </p>"
47554621	Convert python JSON data into JavaScript Array Variable	python	2017-11-29 14:02:49.703000 UTC	"<p>I am working under python now i have a JSON value as given below,</p>  <pre><code>[    [     u'November',     {       u'fund': 0.0,       u'fund_position': [         {           u'closing_balance': -1200.0,           u'id': 463,           u'name': u'HDFC bank coimbatore',           u'group_name': u'Bank Account'     },     {       u'closing_balance': 0.0,       u'id': 97,       u'name': u'Cash In Hand',       u'group_name': u'Cash in Hand'     },     {       u'closing_balance': 0.0,       u'id': 488,       u'name': u'Cash LEdger add',       u'group_name': u'Cash in Hand'     },     {           u'closing_balance': 1200.0,           u'id': 570,           u'name': u'Carrom',           u'group_name': u'Cash in Hand'         }       ]     }   ] ] </code></pre>  <p>and i wanted to  convert this as a javascript array.  how to achieve this? I have tried this, <code>$.map(JSON.parse({{ response_data }}), function(el) { return el })</code> but it wont work it through some error <code>Unexpected token u in JSON at position 2</code> </p>  <p>OR tell me how to remove the prefix 'u' on each field</p>  <p>thanks in advance</p>"	47554907	"<p>To generate a valid JSON string from a Python dictionary you'd have to use the <code>json</code> package. To achieve the same ""pretty printed"" effect, use the parameter <code>indent</code>.</p>  <pre><code>import json  print(json.dumps(response_data, indent=4)) </code></pre>"
47591401	Append Javascript arrays or object like python	javascript|python|arrays|append	2017-12-01 10:30:02.517000 UTC	"<p>I tried different thing like array push and the new Set() .add but i cant achieve a functionality like pythons append. any thoughts? am i missing something?</p>  <pre><code>ex. in py x = [1, 2, 3] x.append([4, 5]) gives you: [1, 2, 3, [4, 5]] </code></pre>  <p>OR</p>  <p>if im in a for loop and i append to first item</p>  <pre><code>item.append(9) </code></pre>  <p>gives you: [[1, 9], 2, 3]</p>  <p>the second is the one i want to use inside a 2 for-loops</p>  <pre><code>js ex let b = [1,2,3]; b.forEach(function (item) {   item.push(9); //error }); </code></pre>  <p>maybe its a silly question but i am new to js sorry :S</p>"	47591451	"<p>The simplest way involves the <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#the_iterable_protocol"" rel=""nofollow noreferrer"">Iterable</a> <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_operator"" rel=""nofollow noreferrer"">Spread syntax</a> <div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-js lang-js prettyprint-override""><code>const x = [1, 2, 3]; const y = [...x, [4, 5]];  console.log(x); console.log(y);</code></pre> </div> </div> </p> <p>You can also use <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/push"" rel=""nofollow noreferrer""><code>Array.prototype.push</code></a></p> <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-js lang-js prettyprint-override""><code>const x = [1, 2, 3] x.push([1, 2]);  console.log(x);</code></pre> </div> </div> </p>"
47591401	Append Javascript arrays or object like python	javascript|python|arrays|append	2017-12-01 10:30:02.517000 UTC	"<p>I tried different thing like array push and the new Set() .add but i cant achieve a functionality like pythons append. any thoughts? am i missing something?</p>  <pre><code>ex. in py x = [1, 2, 3] x.append([4, 5]) gives you: [1, 2, 3, [4, 5]] </code></pre>  <p>OR</p>  <p>if im in a for loop and i append to first item</p>  <pre><code>item.append(9) </code></pre>  <p>gives you: [[1, 9], 2, 3]</p>  <p>the second is the one i want to use inside a 2 for-loops</p>  <pre><code>js ex let b = [1,2,3]; b.forEach(function (item) {   item.push(9); //error }); </code></pre>  <p>maybe its a silly question but i am new to js sorry :S</p>"	47592773	"<pre><code>var a = [1,2,3,4,5]; a.push(#here you can enter the content that you want to add to your array) #if content is more than 1 then add inside [] document.write(a) </code></pre>"
47607892	How to parse a javascript list containing dictionary in python django	javascript|python|django	2017-12-02 12:27:26.700000 UTC	"<p>I have a webhook.</p>  <pre><code>data0=[{""senderId"":""smsdia"",""requestId"":""******383233353233"",""report"":[{""date"":""2017-12-02 17:00:41"",""number"":""12345"",""status"":""1"",""desc"":""DELIVERED""}],""userId"":""119385"",""campaignName"":""viaSOCKET""}] </code></pre>  <p>I receive the above data in a POST request to my server.</p>  <pre><code>Content-Type: application/x-www-form-urlencoded </code></pre>  <p>How do I parse it?</p>  <p>I know that if it is a list:  <code>data1=['sree','kanth']</code> I can parse it with <code>request.POST.getlist('data1[]')</code></p>  <p>But I don't know how to parse when it is a list containing dict.</p>  <p><strong>edit1</strong></p>  <p>Moreover, I get <code>len(data1) is 2</code>. But <code>len(data0) is 0.</code></p>  <p><strong>edit2</strong> using request.lib: <a href=""https://requestb.in/13df2891?inspect"" rel=""nofollow noreferrer"">https://requestb.in/13df2891?inspect</a></p>"	47608142	<p>This appears to be JSON sent inside a form field. You can use the <code>json</code> library to parse it:</p>  <pre><code>data = json.loads(request.POST['data']) </code></pre>
47611583	"Python, Bokeh, Javascript: use Mongodb database query in callback"	javascript|python|mongodb|bokeh	2017-12-02 19:17:53.693000 UTC	"<p>I am using bokeh, and starting to explore the javascript and callbacks aspect of it.</p>  <p>I have a piece of code that contains a datepicker: I want the callback to perform a query on a mongodb database when it is triggered.  The thing is that I don't know javascript, and would need some pointers to help me in the right direction.</p>  <p>This is the code I got so far:</p>  <pre><code>import pymongo import pandas as pd from bokeh.layouts import column from bokeh.models import CustomJS, DatePicker from bokeh.plotting import figure, show, ColumnDataSource from bokeh.io import curdoc from bokeh.models.formatters import DatetimeTickFormatter import datetime  p = figure(x_axis_type=""datetime"",plot_width=900, height=200, title=""GBP"")  mongo=pymongo.MongoClient() start=datetime.datetime.today().replace(hour=0,minute=0,second=0,microsecond=0) end=start+datetime.timedelta(hours=24) data=pd.DataFrame.from_records(                 mongo.prices[""Russia Ruble""].find({""datetime"":                                         {""$gte"":start,""$lte"":end}}))[[""close"",""datetime""]]  source = ColumnDataSource(data.to_dict(orient=""list""))  callback=CustomJS(args=dict(source=source),code=''' var data=source.data; var f=cb_obj.value  start = f.replace(hour=0,minute=0,second=0,microsecond=0) # use a javacript equivalent of the python code here... end= start +datetime.timedelta(hours=24) # use a javacript equivalent of the python code here...  data=pd.DataFrame.from_records(             mongo.prices[""Russia Ruble""].find({""datetime"":             {""$gte"":start,""$lte"":end}}))[[""close"",""datetime""]] # use a javacript equivalent of the python code here...  source.change.emit()  ''')  p.line(x = ""datetime"", y =""close"", color=""black"", source=source)  datepicker=DatePicker(max_date=start,value=start) datepicker.js_on_change(""value"",callback) curdoc().add_root(column(p,datepicker)) </code></pre>  <p>At first I tried to see whether it was possible to execute some python code along with some javascript (or just some python code..) in the callback, but <a href=""https://bokeh.pydata.org/en/latest/docs/user_guide/interaction/callbacks.html#customjs-with-a-python-function"" rel=""nofollow noreferrer"">this part of the doc</a> seems to clearly states that this is not possible.</p>  <p>So I accepted the fact that I will need to learn some javascript to progress on my task, and looked into mongo db and javascript. A simple google research on the topic seems to suggest that this <a href=""https://www.google.co.uk/search?ei=T_ciWprrMISxUdLxpjA&amp;q=mongodb%20javascript&amp;oq=mongodb%20javascript&amp;gs_l=psy-ab.3..0i203k1l10.790888.795157.0.795540.14.10.4.0.0.0.370.1482.0j4j2j1.7.0....0...1.1.64.psy-ab..3.11.1727....0.Y3vQav6mvaE"" rel=""nofollow noreferrer"">would be close to what node.js is doing</a>, but I am not so sure about that? Does the bokeh js callbacks equate to server-side javascript? Then <a href=""https://zestedesavoir.com/tutoriels/312/debuter-avec-mongodb-pour-node-js/"" rel=""nofollow noreferrer"">this page</a> (sorry it's in french.. but could't find any equivalent in english) explains that in order to use mongodb with node.js, i need to install the mongodb driver using the nodejs package manager (npm)... There I am obviously off track already...</p>  <p>So to recap: - What would be a good way of performing the simple operations I need to perform in my javascript callback (i.e. creating start time and end time from the date picked by the datepicker, then querying the data from my mongoddb database using that timerange)</p>"	47759372	"<p>Can you post some more information about your web app and what kind of server it's on? </p>  <p>Unfortunately, you won't be able to accomplish what you want with just a callback (even if you learn javascript). </p>  <p>To explain this you have to understand a little bit about how bokeh works under the hood. If you are embedding the bokeh plot using standalone html or by using  <code>script, div = components(plot)</code>, then the python is simply creating a customized set of javascript functions and serialization of all the datasources for your plot in one big script that is embedded on your page. The bokeh objects like ""Figure"", ""vbar"", ""circle"" are called models and all of the models are represented in javascript and given their data when they are generated. </p>  <p>That script alone doesn't communicate with your server or database after its been generated. Rather, the callbacks simply modify the properties that the models already have. For instance, a columnDataSource model has certain columns and all those columns are put into javascript so you can have a callback that changes which column is used in a plot for instance. </p>  <p>As the documentation says:</p>  <blockquote>   <p>The architecture of Bokeh is such that high-level “model objects”   (representing things like plots, ranges, axes, glyphs, etc.) are   created in Python, and then converted to a JSON format that is   consumed by the client library, BokehJS</p> </blockquote>  <p>If you want to use python, and your database, to keep your model up to date, that is the use case for bokeh server. Bokeh server is an embeddable server that will keep all the python representations of the models in sync with the javascript ones. </p>  <p>Again per <a href=""https://bokeh.pydata.org/en/latest/docs/user_guide/server.html"" rel=""nofollow noreferrer"">documentation</a>:</p>  <blockquote>   <p>However, if it were possible to keep the “model objects” in python and   in the browser in sync with one another, then more additional and   powerful possibilities immediately open up:</p>      <blockquote>     <p>respond to UI and tool events generated in a browser with computations or queries using the full power of python     This capability to synchronize between python and the browser is the main purpose of the Bokeh Server.</p>   </blockquote> </blockquote>  <p>Take a look at the <a href=""https://bokeh.pydata.org/en/latest/docs/user_guide/server.html"" rel=""nofollow noreferrer"">Bokeh Server</a> documentation and see if that might work your use case. </p>  <p>In theory, you could have a JS function fetch JSON data from a different route and push that data into your bokeh models but I don't think that would ever work. Bokeh generates a large number of unique identifiers for every model and model data point which you would need to look up and process on the way in.  </p>  <p>There is also a great pycon presentation on the bokeh server. Its a little older from 2015 but is really helpful to understand these concepts. <a href=""https://www.youtube.com/watch?v=O5OvOLK-xqQ"" rel=""nofollow noreferrer"">https://www.youtube.com/watch?v=O5OvOLK-xqQ</a></p>"
47619568	string produced by pythons json.dumps() errors when loading with javascripts JSON.parse() at escaped double quotes	javascript|python|json	2017-12-03 14:51:56.820000 UTC	"<p>I have the following string with two escaped doublequotes:</p>  <pre><code>var morgen = '{""a"": [{""title"": ""Fotoausstellung \""Berlin, Berlin\""""]}'; </code></pre>  <p>This is valid JSON as far as I know. Still, executing <code>JSON.parse(morgen)</code> fails with</p>  <pre><code>SyntaxError: JSON.parse: expected ',' or '}' after property value in object at line 1 column 36 of the JSON data </code></pre>  <p>The string was produced by pythons <code>json.dumps()</code> method.</p>"	47619589	"<p>You'll have to double the backslash characters:</p>  <pre><code>var morgen = '{""a"": [{""title"": ""Fotoausstellung \\""Berlin, Berlin\\""""]}'; </code></pre>  <p>That is necessary because JavaScript will remove the single backslashes when it parses the overall string constant. (The <code>\""</code> pair in a string constant is interpreted as meaning a single <code>""</code> character.)</p>  <p>If all you want is that structure as a JavaScript object, you'd just do this:</p>  <pre><code>var morgen = {""a"": [{""title"": ""Fotoausstellung \""Berlin, Berlin\""""]}; </code></pre>"
47619568	string produced by pythons json.dumps() errors when loading with javascripts JSON.parse() at escaped double quotes	javascript|python|json	2017-12-03 14:51:56.820000 UTC	"<p>I have the following string with two escaped doublequotes:</p>  <pre><code>var morgen = '{""a"": [{""title"": ""Fotoausstellung \""Berlin, Berlin\""""]}'; </code></pre>  <p>This is valid JSON as far as I know. Still, executing <code>JSON.parse(morgen)</code> fails with</p>  <pre><code>SyntaxError: JSON.parse: expected ',' or '}' after property value in object at line 1 column 36 of the JSON data </code></pre>  <p>The string was produced by pythons <code>json.dumps()</code> method.</p>"	47619712	"<p>As Pointy mentions, you <em>should</em> be able to just embed that JSON as an object in your JavaScript source, rather than as a string which has to be parsed.</p>  <p>However, to print that JSON with escape codes suitable for use as a JavaScript string you can tell Python to encode it with the 'unicode-literal' codec. However, that will produce a <code>bytes</code> object, so you need to decode it to make a text string. You can use the 'ASCII' codec for that. Eg,</p>  <pre><code>import json  # The problem JSON using Python's raw string syntax s = r'{""a"": [{""title"": ""Fotoausstellung \""Berlin, Berlin\""""}]}'  # Convert the JSON string to a Python object d = json.loads(s) print(d)  # Convert back to JSON, with escape codes. json_bytes = json.dumps(d).encode('unicode-escape') print(json_bytes)  # Convert the bytes to text print(json_bytes.decode('ascii'))     </code></pre>  <p><strong>output</strong></p>  <pre><code>{'a': [{'title': 'Fotoausstellung ""Berlin, Berlin""'}]} b'{""a"": [{""title"": ""Fotoausstellung \\\\""Berlin, Berlin\\\\""""}]}' {""a"": [{""title"": ""Fotoausstellung \\""Berlin, Berlin\\""""}]} </code></pre>"
47662604	How to change the active chat in web whatsapp via selenium or javascript with Python 3	javascript|python|selenium|whatsapp	2017-12-05 21:02:49.063000 UTC	"<p>I am steering web whatsapp via selenium via Python, i was wondering if it is possible to change the active (top chat. If a message is recieved, the chat won't be set as active, it will always remain in the background.</p>  <p>In Javascript, one can see a list of all chat in the consoles via:</p>  <pre><code>Store.chat.models </code></pre>  <p>The active chat is stored at position zero, however overwriting the position zero with another chat will not make the chat active. </p>  <p>I have found out that there is a variable called ""<code>x_active</code>"" which changes if a chat is clicked on and view to true (and all others have it as false).</p>  <p>e.g.:</p>  <pre><code>Store.Chat.models[0].__x_active </code></pre>  <p>However setting the variable or true or false in the chrome Console tab did not change anything in the UI, so how can I achieve such behaviour?</p>"	47716462	"<p>You'll need to use selenium to click on the contact in the left pane to make it active.  You can easily find the place to click using the CSS selector like this:</p>  <pre><code>driver.find_element_by_css_selector('span[title=""Contact Name""]').click() </code></pre>  <p>To easily identify which contacts have unread messages, you can use your JavaScript Store.chat.models list, and find objects in the list with the variable __x_hasUnread = True, and the value of the variable __x_formattedTitle to find the contact name to use for the find above.</p>"
47662604	How to change the active chat in web whatsapp via selenium or javascript with Python 3	javascript|python|selenium|whatsapp	2017-12-05 21:02:49.063000 UTC	"<p>I am steering web whatsapp via selenium via Python, i was wondering if it is possible to change the active (top chat. If a message is recieved, the chat won't be set as active, it will always remain in the background.</p>  <p>In Javascript, one can see a list of all chat in the consoles via:</p>  <pre><code>Store.chat.models </code></pre>  <p>The active chat is stored at position zero, however overwriting the position zero with another chat will not make the chat active. </p>  <p>I have found out that there is a variable called ""<code>x_active</code>"" which changes if a chat is clicked on and view to true (and all others have it as false).</p>  <p>e.g.:</p>  <pre><code>Store.Chat.models[0].__x_active </code></pre>  <p>However setting the variable or true or false in the chrome Console tab did not change anything in the UI, so how can I achieve such behaviour?</p>"	47736483	"<p>in whatsapp web if you inspect you can see that contact name resides in div with class '.chat'.</p>  <p>you can add listener to contacts in left side in whatsapp web by executing the following script in your <strong>whatsapp_login</strong> function. Following is the whatsapp_login function:</p>  <pre><code>def whatsapp-login(request):     global driver      profile = webdriver.FirefoxProfile()     profile.accept_untrusted_certs = True     driver = webdriver.Firefox(firefox_profile=profile)      driver.get('https://web.whatsapp.com/')      script_path = os.path.dirname(os.path.abspath(__file__))     script = open(os.path.join(script_path, ""add_eventlistener.js""), ""r"").read()      driver.execute_script(script) </code></pre>  <p>following is the add_listener script which uses <strong>MutationObserver</strong>:</p>  <pre><code>var observer = new MutationObserver(function(mutations) {             mutations.forEach(function(mutation) {                 if(mutation.attributeName === 'class') {                      var attributeValue = $(mutation.target).prop(mutation.attributeName);                     console.log(""attributeValue: ""+attributeValue);                     if(attributeValue.indexOf('hover') &gt; -1) {                          var user = $(mutation.target).find('.chat-title').find('span').attr('title');                         console.log('Class attribute changed to:', attributeValue);                          $.ajax({                             url: 'url of change active chat function',                             type: ""POST"",                             data: {""user"": user},                             headers: {""Access-Control-Allow-Origin"": ""*""},                             success: function(data) {                                 console.log(data);                             },                             error: function(data) {                                 console.log(data);                             }                         });                     }                 }             });         });          Array.prototype.forEach.call(document.querySelectorAll('.chat'), function(element, index) {             console.log(element);             observer.observe(element, {                 attributes: true             });         }); </code></pre>  <p>inside your change active chat function you can do the following to change active chat. Here you will get the user from ajax call and iterate through the contact list:</p>  <pre><code>def change_active_chat(user):     recentList = driver.find_elements_by_xpath(""//span[@class='emojitext ellipsify']"")         for head in recentList:             if head.text == user:                 head.click() </code></pre>  <p><strong>head.click()</strong> will change the active chat.</p>"
47662604	How to change the active chat in web whatsapp via selenium or javascript with Python 3	javascript|python|selenium|whatsapp	2017-12-05 21:02:49.063000 UTC	"<p>I am steering web whatsapp via selenium via Python, i was wondering if it is possible to change the active (top chat. If a message is recieved, the chat won't be set as active, it will always remain in the background.</p>  <p>In Javascript, one can see a list of all chat in the consoles via:</p>  <pre><code>Store.chat.models </code></pre>  <p>The active chat is stored at position zero, however overwriting the position zero with another chat will not make the chat active. </p>  <p>I have found out that there is a variable called ""<code>x_active</code>"" which changes if a chat is clicked on and view to true (and all others have it as false).</p>  <p>e.g.:</p>  <pre><code>Store.Chat.models[0].__x_active </code></pre>  <p>However setting the variable or true or false in the chrome Console tab did not change anything in the UI, so how can I achieve such behaviour?</p>"	47827441	<blockquote>   <p>However setting the variable or true or false in the chrome Console tab did not change anything in the UI </p> </blockquote>  <p>You are changing the Boolean value but the request is not submitted as a result you wont see any change.  My suggestion is to Click on the webElement using Xpath or CSS or any other convenient locator techniques first.</p>
47676919	Sending data from a python dictionary to a javascript file	javascript|python|dictionary	2017-12-06 14:40:30.197000 UTC	"<p>I'm new to python and javascript so I don't know much about their data sharing capabilities. Below is the dictionary (whose data I want to send) in a database file I have called database.py. How can I take this data and send it to my javascript file ""Calendar.js"" so I can use it in a function later?</p>  <pre><code>agenda = {'id' : num,                   'eventName' : eventName,                   'eventType' : eventType,                   'location' : location,                   'date' : date,                   'time' : time,                   'compName' : compName,                   'attire' : attire,                   'additional' : additional} </code></pre>"	47676949	"<p>As a general rule, consider that JSON (JavaScript Object Notation) is the goto-format if you want to exchange data with javascript.</p>  <p>From Python, you can use the <code>json</code> module to generate such data.</p>  <p>Example:</p>  <pre><code>d = {""name"":""interpolator"",      ""children"":[{'name':key,""size"":value} for key,value in sample.items()]} j = json.dumps(d, indent=4) f = open('sample.json', 'w') print &gt;&gt; f, j f.close() </code></pre>  <p>Now, for the actual communication with javascript, you can either write the JSON in a file and process it asynchronously, or use something like <a href=""https://developers.google.com/protocol-buffers/"" rel=""nofollow noreferrer"">protobuf</a>/<a href=""https://grpc.io/"" rel=""nofollow noreferrer"">grpc</a>.</p>"
47704780	How do I Post user input from javascript to python?	javascript|openlayers	2017-12-07 22:19:22.667000 UTC	"<p>I have an OpenLayers map of the world where a user can click on any country. I want to get the user's selected country sent to a python file where I can use it for more things. </p>  <p>This is the JavaScript portion of the map that deals with user selections. </p>  <pre><code> if (select !== null) {       map.addInteraction(select);       select.on('select', function(e) {          console.log(e);         document.getElementById('status').innerHTML = '&amp;nbsp;' +         e.target.getFeatures().item(0).get('name');         var name = e.target.getFeatures().item(0).get('name'); </code></pre>  <p>I want to get the variable ""name"" sent to a python program which I have written where it will be used. </p>  <p>I'm struggling to understand how to do this. I think I need to use JavaScript Post. This is what I have been using but I'm not sure where to put it in my HTML. I'm reading about jquery and Ajax. Should I be using those?  </p>  <pre><code>&lt;form action=""gresponse"" method=""post""&gt; &lt;input type=""text"" id=""country"" name=""country""/&gt;  &lt;input type=""submit"" value=""Go"" name""gobtn""/&gt;&lt;/form&gt; </code></pre>"	47704845	"<p>You could use the <a href=""https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/Using_XMLHttpRequest"" rel=""nofollow noreferrer""><code>XMLHttpRequest</code></a> of the Javascript standard library or if you already use jQuery you could use the <a href=""https://api.jquery.com/jquery.ajax/#entry-examples"" rel=""nofollow noreferrer""><code>jquery.ajax</code></a> method. </p>"
47739065	Linking Javascript to HTML in a Python Webserver	javascript|python|html	2017-12-10 12:57:00.597000 UTC	"<p>Using Python 3 with Socket.</p>  <p>I'm having trouble linking a javascript file to an HTML file. I have the following 3 files in particular in the same directory:</p>  <p><strong>webserver.py</strong></p>  <pre><code>import socket  def getTextFromFile(filename):     with open(filename, 'r') as myFile:         return myFile.read()  host, port = '192.168.0.7', 11010  s = socket.socket(socket.AF_INET, socket.SOCK_STREAM) s.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1) s.bind((host, port)) s.listen(1)  print('Now serving: ' + host + ' at: ' + str(port))  while True:     try:         c, addr = s.accept()         print('Received connection form: ' + str(addr))         request = c.recv(1024)         response = '\HTTP/1.1 200 OK' + getTextFromFile(""index.html"")         c.sendall(response.encode())         c.close()     except Exception as e:         print(e) </code></pre>  <p><strong>index.html</strong></p>  <pre><code>&lt;html&gt; &lt;head&gt; &lt;title&gt;Title&lt;/title&gt; &lt;script src=""indexjs.js""&gt;&lt;/script&gt; &lt;/head&gt; &lt;body&gt;  &lt;h1&gt;Hello there.&lt;/h1&gt; &lt;p&gt;This is a webserver test.&lt;/p&gt;  &lt;button type=""button"" onclick=""myFunction()""&gt;Click me!&lt;/button&gt; &lt;p id=""demo""&gt;&lt;/p&gt;  &lt;/body&gt; &lt;/html&gt; </code></pre>  <p><strong>indexjs.js</strong></p>  <pre><code>function myFunction(){     document.getElementById(""demo"").innerHTML = ""Hello""; } </code></pre>  <p>The web server code itself works fine, the router is port-forwarded, can be accessed from an entirely different network, yada-yada; but when the website is visited, the javascript doesn't seem to execute. If I place the same javascript code inside the script tags of index.html and omit indexjs.js then it does work as intended. How do I make it to where indexjs.js can be properly linked with index.html without putting the javascript code in script tags?</p>  <p>I also tried another similar approach by trying to put an image in index.html (png file, same directory as index.html of course) with the img tags, but it did not display either, so it seems like my code is having issues linking any files to index.html whatsoever.</p>  <p><strong>The steps I'm taking:</strong></p>  <p>Run webserver.py</p>  <p>Open browser (in my case it happens to be Chrome)</p>  <p>Type in my public ip xxx.xxx.xxx.xxx:11010 in the address bar, hit enter</p>  <p>The web page shows, but pictures don't show (or any other asset that's linked) and javascript functions aren't executed when, for example, buttons are pressed.</p>  <p>Any help would be appreciated, thanks in advance.</p>"	47739085	<p>Normally you would have a public folder for your static assets. And you would put your static css and js files into it.</p>
47763852	Python encrypting using hmac and sha256 isn't giving the same results as javascript	javascript|python|json|encryption	2017-12-12 00:59:35.823000 UTC	"<p>I am trying to get the same results in python and javascript but when the in encryption I am having troubles, the encryption gave me the same result in javascript and in python but if I put the data in json format and then encrypt I get different results.I can change the javascript code because is for an api the python code can be modified if it is needed.<br> Python code:</p>  <pre class=""lang-py prettyprint-override""><code>from datetime import datetime import json import hashlib import hmac import base64  s=""2017-12-11 23:31:55"" data1=dict(timestamp=s) msg_data = json.dumps(data1)  print msg_data  message = bytes(s).encode('utf-8') secret = bytes(""secret"").encode('utf-8') msg_data2 = bytes(msg_data).encode('utf-8')  signature = base64.b64encode(hmac.new(secret, message, digestmod=hashlib.sha256).digest()) print ""without json"" print(signature)    #XZqVjDKYG8NRITjiMNXFZnNdUDb+JIr7Vm+f3CabETY=  signature = base64.b64encode(hmac.new(secret, msg_data2, digestmod=hashlib.sha256).digest()) print ""with json"" print(signature)    #RnxbwptM7HuEE1SPResxc4A6tVDqhv3DxWP75g8pfik= </code></pre>  <p>JS code:</p>  <pre class=""lang-html prettyprint-override""><code>&lt;script type=""text/javascript""&gt;     /*      https://raw.githubusercontent.com/jkiss/crypto-js/master/tags/3.1.2/build/rollups/hmac-sha256.js CryptoJS v3.1.2 code.google.com/p/crypto-js (c) 2009-2013 by Jeff Mott. All rights reserved. code.google.com/p/crypto-js/wiki/License */ var CryptoJS=CryptoJS||function(h,s){var f={},g=f.lib={},q=function(){},m=g.Base={extend:function(a){q.prototype=this;var c=new q;a&amp;&amp;c.mixIn(a);c.hasOwnProperty(""init"")||(c.init=function(){c.$super.init.apply(this,arguments)});c.init.prototype=c;c.$super=this;return c},create:function(){var a=this.extend();a.init.apply(a,arguments);return a},init:function(){},mixIn:function(a){for(var c in a)a.hasOwnProperty(c)&amp;&amp;(this[c]=a[c]);a.hasOwnProperty(""toString"")&amp;&amp;(this.toString=a.toString)},clone:function(){return this.init.prototype.extend(this)}}, r=g.WordArray=m.extend({init:function(a,c){a=this.words=a||[];this.sigBytes=c!=s?c:4*a.length},toString:function(a){return(a||k).stringify(this)},concat:function(a){var c=this.words,d=a.words,b=this.sigBytes;a=a.sigBytes;this.clamp();if(b%4)for(var e=0;e&lt;a;e++)c[b+e&gt;&gt;&gt;2]|=(d[e&gt;&gt;&gt;2]&gt;&gt;&gt;24-8*(e%4)&amp;255)&lt;&lt;24-8*((b+e)%4);else if(65535&lt;d.length)for(e=0;e&lt;a;e+=4)c[b+e&gt;&gt;&gt;2]=d[e&gt;&gt;&gt;2];else c.push.apply(c,d);this.sigBytes+=a;return this},clamp:function(){var a=this.words,c=this.sigBytes;a[c&gt;&gt;&gt;2]&amp;=4294967295&lt;&lt; 32-8*(c%4);a.length=h.ceil(c/4)},clone:function(){var a=m.clone.call(this);a.words=this.words.slice(0);return a},random:function(a){for(var c=[],d=0;d&lt;a;d+=4)c.push(4294967296*h.random()|0);return new r.init(c,a)}}),l=f.enc={},k=l.Hex={stringify:function(a){var c=a.words;a=a.sigBytes;for(var d=[],b=0;b&lt;a;b++){var e=c[b&gt;&gt;&gt;2]&gt;&gt;&gt;24-8*(b%4)&amp;255;d.push((e&gt;&gt;&gt;4).toString(16));d.push((e&amp;15).toString(16))}return d.join("""")},parse:function(a){for(var c=a.length,d=[],b=0;b&lt;c;b+=2)d[b&gt;&gt;&gt;3]|=parseInt(a.substr(b, 2),16)&lt;&lt;24-4*(b%8);return new r.init(d,c/2)}},n=l.Latin1={stringify:function(a){var c=a.words;a=a.sigBytes;for(var d=[],b=0;b&lt;a;b++)d.push(String.fromCharCode(c[b&gt;&gt;&gt;2]&gt;&gt;&gt;24-8*(b%4)&amp;255));return d.join("""")},parse:function(a){for(var c=a.length,d=[],b=0;b&lt;c;b++)d[b&gt;&gt;&gt;2]|=(a.charCodeAt(b)&amp;255)&lt;&lt;24-8*(b%4);return new r.init(d,c)}},j=l.Utf8={stringify:function(a){try{return decodeURIComponent(escape(n.stringify(a)))}catch(c){throw Error(""Malformed UTF-8 data"");}},parse:function(a){return n.parse(unescape(encodeURIComponent(a)))}}, u=g.BufferedBlockAlgorithm=m.extend({reset:function(){this._data=new r.init;this._nDataBytes=0},_append:function(a){""string""==typeof a&amp;&amp;(a=j.parse(a));this._data.concat(a);this._nDataBytes+=a.sigBytes},_process:function(a){var c=this._data,d=c.words,b=c.sigBytes,e=this.blockSize,f=b/(4*e),f=a?h.ceil(f):h.max((f|0)-this._minBufferSize,0);a=f*e;b=h.min(4*a,b);if(a){for(var g=0;g&lt;a;g+=e)this._doProcessBlock(d,g);g=d.splice(0,a);c.sigBytes-=b}return new r.init(g,b)},clone:function(){var a=m.clone.call(this); a._data=this._data.clone();return a},_minBufferSize:0});g.Hasher=u.extend({cfg:m.extend(),init:function(a){this.cfg=this.cfg.extend(a);this.reset()},reset:function(){u.reset.call(this);this._doReset()},update:function(a){this._append(a);this._process();return this},finalize:function(a){a&amp;&amp;this._append(a);return this._doFinalize()},blockSize:16,_createHelper:function(a){return function(c,d){return(new a.init(d)).finalize(c)}},_createHmacHelper:function(a){return function(c,d){return(new t.HMAC.init(a, d)).finalize(c)}}});var t=f.algo={};return f}(Math); (function(h){for(var s=CryptoJS,f=s.lib,g=f.WordArray,q=f.Hasher,f=s.algo,m=[],r=[],l=function(a){return 4294967296*(a-(a|0))|0},k=2,n=0;64&gt;n;){var j;a:{j=k;for(var u=h.sqrt(j),t=2;t&lt;=u;t++)if(!(j%t)){j=!1;break a}j=!0}j&amp;&amp;(8&gt;n&amp;&amp;(m[n]=l(h.pow(k,0.5))),r[n]=l(h.pow(k,1/3)),n++);k++}var a=[],f=f.SHA256=q.extend({_doReset:function(){this._hash=new g.init(m.slice(0))},_doProcessBlock:function(c,d){for(var b=this._hash.words,e=b[0],f=b[1],g=b[2],j=b[3],h=b[4],m=b[5],n=b[6],q=b[7],p=0;64&gt;p;p++){if(16&gt;p)a[p]= c[d+p]|0;else{var k=a[p-15],l=a[p-2];a[p]=((k&lt;&lt;25|k&gt;&gt;&gt;7)^(k&lt;&lt;14|k&gt;&gt;&gt;18)^k&gt;&gt;&gt;3)+a[p-7]+((l&lt;&lt;15|l&gt;&gt;&gt;17)^(l&lt;&lt;13|l&gt;&gt;&gt;19)^l&gt;&gt;&gt;10)+a[p-16]}k=q+((h&lt;&lt;26|h&gt;&gt;&gt;6)^(h&lt;&lt;21|h&gt;&gt;&gt;11)^(h&lt;&lt;7|h&gt;&gt;&gt;25))+(h&amp;m^~h&amp;n)+r[p]+a[p];l=((e&lt;&lt;30|e&gt;&gt;&gt;2)^(e&lt;&lt;19|e&gt;&gt;&gt;13)^(e&lt;&lt;10|e&gt;&gt;&gt;22))+(e&amp;f^e&amp;g^f&amp;g);q=n;n=m;m=h;h=j+k|0;j=g;g=f;f=e;e=k+l|0}b[0]=b[0]+e|0;b[1]=b[1]+f|0;b[2]=b[2]+g|0;b[3]=b[3]+j|0;b[4]=b[4]+h|0;b[5]=b[5]+m|0;b[6]=b[6]+n|0;b[7]=b[7]+q|0},_doFinalize:function(){var a=this._data,d=a.words,b=8*this._nDataBytes,e=8*a.sigBytes; d[e&gt;&gt;&gt;5]|=128&lt;&lt;24-e%32;d[(e+64&gt;&gt;&gt;9&lt;&lt;4)+14]=h.floor(b/4294967296);d[(e+64&gt;&gt;&gt;9&lt;&lt;4)+15]=b;a.sigBytes=4*d.length;this._process();return this._hash},clone:function(){var a=q.clone.call(this);a._hash=this._hash.clone();return a}});s.SHA256=q._createHelper(f);s.HmacSHA256=q._createHmacHelper(f)})(Math); (function(){var h=CryptoJS,s=h.enc.Utf8;h.algo.HMAC=h.lib.Base.extend({init:function(f,g){f=this._hasher=new f.init;""string""==typeof g&amp;&amp;(g=s.parse(g));var h=f.blockSize,m=4*h;g.sigBytes&gt;m&amp;&amp;(g=f.finalize(g));g.clamp();for(var r=this._oKey=g.clone(),l=this._iKey=g.clone(),k=r.words,n=l.words,j=0;j&lt;h;j++)k[j]^=1549556828,n[j]^=909522486;r.sigBytes=l.sigBytes=m;this.reset()},reset:function(){var f=this._hasher;f.reset();f.update(this._iKey)},update:function(f){this._hasher.update(f);return this},finalize:function(f){var g= this._hasher;f=g.finalize(f);g.reset();return g.finalize(this._oKey.clone().concat(f))}})})(); &lt;/script&gt; &lt;script type=""text/javascript""&gt;     /*      https://raw.githubusercontent.com/jkiss/crypto-js/master/tags/3.1.2/build/components/enc-base64-min.js CryptoJS v3.1.2 code.google.com/p/crypto-js (c) 2009-2013 by Jeff Mott. All rights reserved. code.google.com/p/crypto-js/wiki/License */ (function(){var h=CryptoJS,j=h.lib.WordArray;h.enc.Base64={stringify:function(b){var e=b.words,f=b.sigBytes,c=this._map;b.clamp();b=[];for(var a=0;a&lt;f;a+=3)for(var d=(e[a&gt;&gt;&gt;2]&gt;&gt;&gt;24-8*(a%4)&amp;255)&lt;&lt;16|(e[a+1&gt;&gt;&gt;2]&gt;&gt;&gt;24-8*((a+1)%4)&amp;255)&lt;&lt;8|e[a+2&gt;&gt;&gt;2]&gt;&gt;&gt;24-8*((a+2)%4)&amp;255,g=0;4&gt;g&amp;&amp;a+0.75*g&lt;f;g++)b.push(c.charAt(d&gt;&gt;&gt;6*(3-g)&amp;63));if(e=c.charAt(64))for(;b.length%4;)b.push(e);return b.join("""")},parse:function(b){var e=b.length,f=this._map,c=f.charAt(64);c&amp;&amp;(c=b.indexOf(c),-1!=c&amp;&amp;(e=c));for(var c=[],a=0,d=0;d&lt;e;d++)if(d%4){var g=f.indexOf(b.charAt(d-1))&lt;&lt;2*(d%4),h=f.indexOf(b.charAt(d))&gt;&gt;&gt;6-2*(d%4);c[a&gt;&gt;&gt;2]|=(g|h)&lt;&lt;24-8*(a%4);a++}return j.create(c,a)},_map:""ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=""}})(); &lt;/script&gt;   &lt;script&gt;   var secret=""secret""       data_time= '2017' + '-' + '12' + '-' + '11' + ' '  + '23' + ':' + '31' + ':' + '55';    //params.content['timestamp'] = '2017' + '-' + '12' + '-' + '11' + ' '   //                            + '23' + ':' + '31' + ':' + '55';    var json = JSON.stringify({""timestamp"":""2017-12-11 23:31:55""});   console.log(json);    var data1=CryptoJS.enc.Base64.stringify(CryptoJS.HmacSHA256(data_time,secret));   console.log(""Without json:"");   console.log(data1);//XZqVjDKYG8NRITjiMNXFZnNdUDb+JIr7Vm+f3CabETY=      var data2=CryptoJS.enc.Base64.stringify(CryptoJS.HmacSHA256(json,secret));   console.log(""With json:"");    console.log(data2);//s5q78/m3wIb518O8M9x1rAM2DvG/I+Vmt0rBtb6LYS8= &lt;/script&gt; </code></pre>"	47763906	"<p>You're hashing different data.</p>  <p>In the Python version, <code>msg_data</code> is:</p>  <pre><code>{""timestamp"": ""2017-12-11 23:31:55""}             ^^^ </code></pre>  <p>In the Javascript version, <code>json</code> is:</p>  <pre><code>{""timestamp"":""2017-12-11 23:31:55""}             ^^ </code></pre>  <p>Note that there's no space after <code>""timestamp"":</code> in the JS version. Not all JSON implementations will generate the exact same output for the same data. (You'll run into more problems when there's more than one key in the dictionary -- JSON doesn't set any requirements on what order the keys appear in.)</p>"
47763852	Python encrypting using hmac and sha256 isn't giving the same results as javascript	javascript|python|json|encryption	2017-12-12 00:59:35.823000 UTC	"<p>I am trying to get the same results in python and javascript but when the in encryption I am having troubles, the encryption gave me the same result in javascript and in python but if I put the data in json format and then encrypt I get different results.I can change the javascript code because is for an api the python code can be modified if it is needed.<br> Python code:</p>  <pre class=""lang-py prettyprint-override""><code>from datetime import datetime import json import hashlib import hmac import base64  s=""2017-12-11 23:31:55"" data1=dict(timestamp=s) msg_data = json.dumps(data1)  print msg_data  message = bytes(s).encode('utf-8') secret = bytes(""secret"").encode('utf-8') msg_data2 = bytes(msg_data).encode('utf-8')  signature = base64.b64encode(hmac.new(secret, message, digestmod=hashlib.sha256).digest()) print ""without json"" print(signature)    #XZqVjDKYG8NRITjiMNXFZnNdUDb+JIr7Vm+f3CabETY=  signature = base64.b64encode(hmac.new(secret, msg_data2, digestmod=hashlib.sha256).digest()) print ""with json"" print(signature)    #RnxbwptM7HuEE1SPResxc4A6tVDqhv3DxWP75g8pfik= </code></pre>  <p>JS code:</p>  <pre class=""lang-html prettyprint-override""><code>&lt;script type=""text/javascript""&gt;     /*      https://raw.githubusercontent.com/jkiss/crypto-js/master/tags/3.1.2/build/rollups/hmac-sha256.js CryptoJS v3.1.2 code.google.com/p/crypto-js (c) 2009-2013 by Jeff Mott. All rights reserved. code.google.com/p/crypto-js/wiki/License */ var CryptoJS=CryptoJS||function(h,s){var f={},g=f.lib={},q=function(){},m=g.Base={extend:function(a){q.prototype=this;var c=new q;a&amp;&amp;c.mixIn(a);c.hasOwnProperty(""init"")||(c.init=function(){c.$super.init.apply(this,arguments)});c.init.prototype=c;c.$super=this;return c},create:function(){var a=this.extend();a.init.apply(a,arguments);return a},init:function(){},mixIn:function(a){for(var c in a)a.hasOwnProperty(c)&amp;&amp;(this[c]=a[c]);a.hasOwnProperty(""toString"")&amp;&amp;(this.toString=a.toString)},clone:function(){return this.init.prototype.extend(this)}}, r=g.WordArray=m.extend({init:function(a,c){a=this.words=a||[];this.sigBytes=c!=s?c:4*a.length},toString:function(a){return(a||k).stringify(this)},concat:function(a){var c=this.words,d=a.words,b=this.sigBytes;a=a.sigBytes;this.clamp();if(b%4)for(var e=0;e&lt;a;e++)c[b+e&gt;&gt;&gt;2]|=(d[e&gt;&gt;&gt;2]&gt;&gt;&gt;24-8*(e%4)&amp;255)&lt;&lt;24-8*((b+e)%4);else if(65535&lt;d.length)for(e=0;e&lt;a;e+=4)c[b+e&gt;&gt;&gt;2]=d[e&gt;&gt;&gt;2];else c.push.apply(c,d);this.sigBytes+=a;return this},clamp:function(){var a=this.words,c=this.sigBytes;a[c&gt;&gt;&gt;2]&amp;=4294967295&lt;&lt; 32-8*(c%4);a.length=h.ceil(c/4)},clone:function(){var a=m.clone.call(this);a.words=this.words.slice(0);return a},random:function(a){for(var c=[],d=0;d&lt;a;d+=4)c.push(4294967296*h.random()|0);return new r.init(c,a)}}),l=f.enc={},k=l.Hex={stringify:function(a){var c=a.words;a=a.sigBytes;for(var d=[],b=0;b&lt;a;b++){var e=c[b&gt;&gt;&gt;2]&gt;&gt;&gt;24-8*(b%4)&amp;255;d.push((e&gt;&gt;&gt;4).toString(16));d.push((e&amp;15).toString(16))}return d.join("""")},parse:function(a){for(var c=a.length,d=[],b=0;b&lt;c;b+=2)d[b&gt;&gt;&gt;3]|=parseInt(a.substr(b, 2),16)&lt;&lt;24-4*(b%8);return new r.init(d,c/2)}},n=l.Latin1={stringify:function(a){var c=a.words;a=a.sigBytes;for(var d=[],b=0;b&lt;a;b++)d.push(String.fromCharCode(c[b&gt;&gt;&gt;2]&gt;&gt;&gt;24-8*(b%4)&amp;255));return d.join("""")},parse:function(a){for(var c=a.length,d=[],b=0;b&lt;c;b++)d[b&gt;&gt;&gt;2]|=(a.charCodeAt(b)&amp;255)&lt;&lt;24-8*(b%4);return new r.init(d,c)}},j=l.Utf8={stringify:function(a){try{return decodeURIComponent(escape(n.stringify(a)))}catch(c){throw Error(""Malformed UTF-8 data"");}},parse:function(a){return n.parse(unescape(encodeURIComponent(a)))}}, u=g.BufferedBlockAlgorithm=m.extend({reset:function(){this._data=new r.init;this._nDataBytes=0},_append:function(a){""string""==typeof a&amp;&amp;(a=j.parse(a));this._data.concat(a);this._nDataBytes+=a.sigBytes},_process:function(a){var c=this._data,d=c.words,b=c.sigBytes,e=this.blockSize,f=b/(4*e),f=a?h.ceil(f):h.max((f|0)-this._minBufferSize,0);a=f*e;b=h.min(4*a,b);if(a){for(var g=0;g&lt;a;g+=e)this._doProcessBlock(d,g);g=d.splice(0,a);c.sigBytes-=b}return new r.init(g,b)},clone:function(){var a=m.clone.call(this); a._data=this._data.clone();return a},_minBufferSize:0});g.Hasher=u.extend({cfg:m.extend(),init:function(a){this.cfg=this.cfg.extend(a);this.reset()},reset:function(){u.reset.call(this);this._doReset()},update:function(a){this._append(a);this._process();return this},finalize:function(a){a&amp;&amp;this._append(a);return this._doFinalize()},blockSize:16,_createHelper:function(a){return function(c,d){return(new a.init(d)).finalize(c)}},_createHmacHelper:function(a){return function(c,d){return(new t.HMAC.init(a, d)).finalize(c)}}});var t=f.algo={};return f}(Math); (function(h){for(var s=CryptoJS,f=s.lib,g=f.WordArray,q=f.Hasher,f=s.algo,m=[],r=[],l=function(a){return 4294967296*(a-(a|0))|0},k=2,n=0;64&gt;n;){var j;a:{j=k;for(var u=h.sqrt(j),t=2;t&lt;=u;t++)if(!(j%t)){j=!1;break a}j=!0}j&amp;&amp;(8&gt;n&amp;&amp;(m[n]=l(h.pow(k,0.5))),r[n]=l(h.pow(k,1/3)),n++);k++}var a=[],f=f.SHA256=q.extend({_doReset:function(){this._hash=new g.init(m.slice(0))},_doProcessBlock:function(c,d){for(var b=this._hash.words,e=b[0],f=b[1],g=b[2],j=b[3],h=b[4],m=b[5],n=b[6],q=b[7],p=0;64&gt;p;p++){if(16&gt;p)a[p]= c[d+p]|0;else{var k=a[p-15],l=a[p-2];a[p]=((k&lt;&lt;25|k&gt;&gt;&gt;7)^(k&lt;&lt;14|k&gt;&gt;&gt;18)^k&gt;&gt;&gt;3)+a[p-7]+((l&lt;&lt;15|l&gt;&gt;&gt;17)^(l&lt;&lt;13|l&gt;&gt;&gt;19)^l&gt;&gt;&gt;10)+a[p-16]}k=q+((h&lt;&lt;26|h&gt;&gt;&gt;6)^(h&lt;&lt;21|h&gt;&gt;&gt;11)^(h&lt;&lt;7|h&gt;&gt;&gt;25))+(h&amp;m^~h&amp;n)+r[p]+a[p];l=((e&lt;&lt;30|e&gt;&gt;&gt;2)^(e&lt;&lt;19|e&gt;&gt;&gt;13)^(e&lt;&lt;10|e&gt;&gt;&gt;22))+(e&amp;f^e&amp;g^f&amp;g);q=n;n=m;m=h;h=j+k|0;j=g;g=f;f=e;e=k+l|0}b[0]=b[0]+e|0;b[1]=b[1]+f|0;b[2]=b[2]+g|0;b[3]=b[3]+j|0;b[4]=b[4]+h|0;b[5]=b[5]+m|0;b[6]=b[6]+n|0;b[7]=b[7]+q|0},_doFinalize:function(){var a=this._data,d=a.words,b=8*this._nDataBytes,e=8*a.sigBytes; d[e&gt;&gt;&gt;5]|=128&lt;&lt;24-e%32;d[(e+64&gt;&gt;&gt;9&lt;&lt;4)+14]=h.floor(b/4294967296);d[(e+64&gt;&gt;&gt;9&lt;&lt;4)+15]=b;a.sigBytes=4*d.length;this._process();return this._hash},clone:function(){var a=q.clone.call(this);a._hash=this._hash.clone();return a}});s.SHA256=q._createHelper(f);s.HmacSHA256=q._createHmacHelper(f)})(Math); (function(){var h=CryptoJS,s=h.enc.Utf8;h.algo.HMAC=h.lib.Base.extend({init:function(f,g){f=this._hasher=new f.init;""string""==typeof g&amp;&amp;(g=s.parse(g));var h=f.blockSize,m=4*h;g.sigBytes&gt;m&amp;&amp;(g=f.finalize(g));g.clamp();for(var r=this._oKey=g.clone(),l=this._iKey=g.clone(),k=r.words,n=l.words,j=0;j&lt;h;j++)k[j]^=1549556828,n[j]^=909522486;r.sigBytes=l.sigBytes=m;this.reset()},reset:function(){var f=this._hasher;f.reset();f.update(this._iKey)},update:function(f){this._hasher.update(f);return this},finalize:function(f){var g= this._hasher;f=g.finalize(f);g.reset();return g.finalize(this._oKey.clone().concat(f))}})})(); &lt;/script&gt; &lt;script type=""text/javascript""&gt;     /*      https://raw.githubusercontent.com/jkiss/crypto-js/master/tags/3.1.2/build/components/enc-base64-min.js CryptoJS v3.1.2 code.google.com/p/crypto-js (c) 2009-2013 by Jeff Mott. All rights reserved. code.google.com/p/crypto-js/wiki/License */ (function(){var h=CryptoJS,j=h.lib.WordArray;h.enc.Base64={stringify:function(b){var e=b.words,f=b.sigBytes,c=this._map;b.clamp();b=[];for(var a=0;a&lt;f;a+=3)for(var d=(e[a&gt;&gt;&gt;2]&gt;&gt;&gt;24-8*(a%4)&amp;255)&lt;&lt;16|(e[a+1&gt;&gt;&gt;2]&gt;&gt;&gt;24-8*((a+1)%4)&amp;255)&lt;&lt;8|e[a+2&gt;&gt;&gt;2]&gt;&gt;&gt;24-8*((a+2)%4)&amp;255,g=0;4&gt;g&amp;&amp;a+0.75*g&lt;f;g++)b.push(c.charAt(d&gt;&gt;&gt;6*(3-g)&amp;63));if(e=c.charAt(64))for(;b.length%4;)b.push(e);return b.join("""")},parse:function(b){var e=b.length,f=this._map,c=f.charAt(64);c&amp;&amp;(c=b.indexOf(c),-1!=c&amp;&amp;(e=c));for(var c=[],a=0,d=0;d&lt;e;d++)if(d%4){var g=f.indexOf(b.charAt(d-1))&lt;&lt;2*(d%4),h=f.indexOf(b.charAt(d))&gt;&gt;&gt;6-2*(d%4);c[a&gt;&gt;&gt;2]|=(g|h)&lt;&lt;24-8*(a%4);a++}return j.create(c,a)},_map:""ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=""}})(); &lt;/script&gt;   &lt;script&gt;   var secret=""secret""       data_time= '2017' + '-' + '12' + '-' + '11' + ' '  + '23' + ':' + '31' + ':' + '55';    //params.content['timestamp'] = '2017' + '-' + '12' + '-' + '11' + ' '   //                            + '23' + ':' + '31' + ':' + '55';    var json = JSON.stringify({""timestamp"":""2017-12-11 23:31:55""});   console.log(json);    var data1=CryptoJS.enc.Base64.stringify(CryptoJS.HmacSHA256(data_time,secret));   console.log(""Without json:"");   console.log(data1);//XZqVjDKYG8NRITjiMNXFZnNdUDb+JIr7Vm+f3CabETY=      var data2=CryptoJS.enc.Base64.stringify(CryptoJS.HmacSHA256(json,secret));   console.log(""With json:"");    console.log(data2);//s5q78/m3wIb518O8M9x1rAM2DvG/I+Vmt0rBtb6LYS8= &lt;/script&gt; </code></pre>"	47763929	"<p><code>msg_data</code> from the python and <code>json</code> from the javascript are likely slightly different. </p>  <p><code>msg_data</code> from the python:</p>  <pre><code>{""timestamp"": ""2017-12-11 23:31:55""} </code></pre>  <p><code>json</code> from the javascript:</p>  <pre><code>{""timestamp"":""2017-12-11 23:31:55""} </code></pre>  <p>Use the optional <a href=""https://docs.python.org/3/library/json.html#basic-usage"" rel=""nofollow noreferrer""><code>separator</code> argument to <code>json.dumps</code></a> to remove the default space after each:</p>  <pre><code>msg_data = json.dumps(data1, separators=(',', ':')) </code></pre>"
47765771	Best practice working with python variables in javascript django	javascript|python|django|vuejs2	2017-12-12 05:19:08.357000 UTC	"<p>I am currently accessing my python data in JavaScript like this:</p>  <pre><code>&lt;script&gt;     var x = {{ x | safe}};     var l = {{ l | safe }};     var sf ={{ sf | safe }}; &lt;/script&gt; </code></pre>  <p>this works but does not seem like the most ideal way to transfer data. What is the best practice for accessing and saving data between python and javascript using django? </p>  <p>What I am trying to do is send data from the view, manipulate it using the ui in javascript/vue.js and then save the calculated data.  </p>"	47767239	"<p>There are a few different ways to accomplish what you're asking about. I would recommend using <a href=""http://www.django-rest-framework.org/"" rel=""nofollow noreferrer"">Django Rest Framework</a> to create a RESTful API as the ""best practice"" for interacting with a JS client-side app.</p>  <p>The most helpful way forward might be to <a href=""https://www.techiediaries.com/django-rest-vuejs/"" rel=""nofollow noreferrer"">start with a tutorial</a> and then return as more specific questions come up.</p>"
47766881	Google Chrome Extension:Call Python function from javascript	javascript|python|google-chrome-extension	2017-12-12 06:56:55.247000 UTC	"<p>I am developing chrome extension and from my javascript file, I am getting the <code>url</code> of the active tab. Now I want to pass this <code>url</code> to my python function in python code. How can I achieve this. I have tried few solutions posted here, but its no help. I need to send the ""myurl"" in the below code to my python function and get back results too.</p>  <pre><code>chrome.tabs.query({currentWindow: true, active: true}, function(tabs){     var myurl = tabs[0].url;     console.log(myurl); }); </code></pre>"	47819316	"<p>Try this, might works</p>  <pre><code>System.Diagnostics.Process.Start(""python.exe"", ""file.py""); </code></pre>"
47824092	parse python datetime object in javascript within django app	javascript|python|django|datetime	2017-12-15 00:18:12.943000 UTC	"<p>I'm passing the following variable to a template:</p>  <pre><code>from django.utils import timezone dt = timezone.now() print(type(dt))  # &lt;class 'datetime.datetime'&gt; </code></pre>  <p>Everything works fine if I use it in my HTML directly:</p>  <pre><code>{{ dt | date:'D d M Y' }} </code></pre>  <p>which renders to <code>Thu 14 Dec 2017</code>.</p>  <p>However when I try to access the variable in my javascript I get an error:</p>  <pre><code>&lt;script&gt;   {{ dt | safe }} &lt;/script&gt; </code></pre>  <blockquote>   <p>Uncaught SyntaxError: missing ) after argument list</p> </blockquote>  <p>Furthermore, I get a slightly different error when I try to render a list of datetime objects:</p>  <pre><code>dt_list = [timezone.now() for _ in range(3)] </code></pre>  <p>and within my js:</p>  <pre><code>&lt;script&gt;   console.log({{ dt_list | safe }}) &lt;/script&gt; </code></pre>  <blockquote>   <p>Uncaught SyntaxError: Unexpected token &lt;</p> </blockquote>  <p>So my question is how can I convert a python datetime object to something I can use in JS?</p>"	47824155	"<p>You will need to create a date object in JS.</p>  <pre><code>&lt;script&gt;     var dt = new Date(""{{ dt.isoformat }}""); &lt;/script&gt; </code></pre>"
47833989	"How can I get a variable from a JavaScript promises (python calls), avoiding the pending state in Odoo?"	javascript|asynchronous|promise|odoo-8|odoo	2017-12-15 14:05:02.110000 UTC	"<p><strong>Original code from the Point of Sale module</strong></p>  <p>In the <code>point_of_sale</code> module there is a list of objects as the following</p>  <pre><code>module.PosModel = Backbone.Model.extend({      models: {          // [...]          {             model:  'pos.session',             fields: ['id', 'journal_ids','name','user_id','config_id','start_at','stop_at','sequence_number','login_number'],             domain: function(self){ return [['state','=','opened'],['user_id','=',self.session.uid]]; },             loaded: function(self,pos_sessions){                 self.pos_session = pos_sessions[0];                   var orders = self.db.get_orders();                 for (var i = 0; i &lt; orders.length; i++) {                     self.pos_session.sequence_number = Math.max(self.pos_session.sequence_number, orders[i].data.sequence_number+1);                 }             },         },         {             model:  'product.product',             fields: ['display_name', 'list_price','price','pos_categ_id', 'taxes_id', 'ean13', 'default_code',                          'to_weight', 'uom_id', 'uos_id', 'uos_coeff', 'mes_type', 'description_sale', 'description',                         'product_tmpl_id'],             domain: [['sale_ok','=',true],['available_in_pos','=',true]],             context: function(self){ return { pricelist: self.pricelist.id, display_default_code: false }; },             loaded: function(self, products){                 self.db.add_products(products);         },          // [...]      } </code></pre>  <p>And then the information of the data is loaded like this </p>  <pre><code>load_server_data: function(){     var self = this;     var loaded = new $.Deferred();     var progress = 0;     var progress_step = 1.0 / self.models.length;     var tmp = {}; // this is used to share a temporary state between models loaders      function load_model(index){         if(index &gt;= self.models.length){             loaded.resolve();         }else{             var model = self.models[index];             self.pos_widget.loading_message(_t('Loading')+' '+(model.label || model.model || ''), progress);             var fields =  typeof model.fields === 'function'  ? model.fields(self,tmp)  : model.fields;             var domain =  typeof model.domain === 'function'  ? model.domain(self,tmp)  : model.domain;             var context = typeof model.context === 'function' ? model.context(self,tmp) : model.context;              var ids     = typeof model.ids === 'function'     ? model.ids(self,tmp) : model.ids;             progress += progress_step;               if( model.model ){                 if (model.ids) {                     var records = new instance.web.Model(model.model).call('read',[ids,fields],context);                 } else {                     var records = new instance.web.Model(model.model).query(fields).filter(domain).context(context).all()                 }  // [...] </code></pre>  <p><strong>What I have tried. First try</strong></p>  <p>So, I would like to change the domain field of the product.product model. I am trying with this</p>  <pre><code>if (typeof jQuery === 'undefined') { throw new Error('Product multi POS needs jQuery'); }  +function ($) {     'use strict';      openerp.pos_product_multi_shop = function(instance, module) {         var PosModelParent = instance.point_of_sale.PosModel;         instance.point_of_sale.PosModel = instance.point_of_sale.PosModel.extend({             load_server_data: function(){                 console.log('-- LOAD SERVER DATA');                 var self = this;                   self.models.forEach(function(elem) {                     if (elem.model == 'product.product') {                         // return [['id', 'in', [2]]];    // if I return this domain it works well                         domain_loaded = function() {                             return new instance.web.Model('product.product').call(                                 'get_available_in_pos_ids',                                 [self.pos_session.config_id[0]],                             )                         }                         elem.domain = $.when(domain_loaded);                     }                 })                  var loaded = PosModelParent.prototype.load_server_data.apply(this, arguments);                 return loaded;             },         });     } }(jQuery); </code></pre>  <p>If I return a domain directly it works. But if I replace it with a function that calls a python function with <code>call</code>, the domain is not loaded well: <code>[['sale_ok','=',true],['available_in_pos','=',true]]</code>. I've tried with <code>$.when</code> and without it and it does not work.</p>  <p>In addition <code>elem.domain</code> must be a function because <code>self.pos_session</code> only exists when all the previous model information is executed.</p>  <p><strong>Second try</strong></p>  <p>I have tried this following code as well:</p>  <pre><code>if (elem.model == 'product.product') {     // return [['id', 'in', [2]]];    // if I return the domain like this it works     console.log('&gt;&gt; OLD DOMAIN')     console.log(elem.domain);     elem.domain = function() {         console.log('&gt;&gt;&gt; PRODUCT SESSION');         console.log(self.pos_session);         var product_product_obj = new instance.web.Model('product.product');         return product_product_obj.call(             'get_available_in_pos_ids',             [self.pos_session.config_id[0]],         )     }     console.log('&gt;&gt; NEW DOMAIN')     console.log(elem.domain); } </code></pre>  <p>So first '>> OLD DOMAIN' is printed, then '>> NEW DOMAIN' and, at last '>>> PRODUCT SESSION' is printed. So the function is executed. But the the domains is not being returned well.</p>  <p><strong>Third try. With ""then""</strong></p>  <p>And I cannot use <code>then</code> because I need to do the variable assignation. But on the other hand the assignation is well done becase when I print the new domain the function appears in the log.</p>  <p>Even if I use <code>then</code> I am getting the result well from python</p>  <pre><code>var domain_return = product_product_obj.call(     'get_available_in_pos_ids',     [self.pos_session.config_id[0]], ).then(function(result) {     console.log('&gt;&gt; RESULT: ');     console.log(result) }); </code></pre>  <p>I also tried with other promise, but I get a pending result that is ignored and all the products are shown</p>  <pre><code>elem.domain = function() {     return new Promise(function next(resolve, reject) {         console.log('&gt;&gt;&gt; PRODUCT SESSION');         console.log(self.pos_session);         var product_product_obj = new instance.web.Model('product.product');         var domain_return = product_product_obj.call(             'get_available_in_pos_ids',             [self.pos_session.config_id[0]],         ).then(function(result) {             console.log('&gt;&gt; RETURN: ');             console.log(result);             resolve(result);         });         console.log('&gt;&gt; DOMAIN RETURN: ');         console.log(domain_return);     }); } </code></pre>  <p>The rest of the domains of the object are calculated without calling python functions. So I can't copy an example from other place</p>  <p>So, is there a way to avoid the pending result? I cannot use <code>async/await</code> yet.</p>  <p>Maybe to make it syncronous will help but I know this should be avoided</p>"	47872852	"<p>Finally I found a workaround overriding the loaded function where all the products are already loaded</p>  <pre><code>var PosModelParent = instance.point_of_sale.PosModel; instance.point_of_sale.PosModel = instance.point_of_sale.PosModel.extend({     load_server_data: function(){         let self = this;         self.models.forEach(function(elem) {             if (elem.model == 'product.product') {                 elem.fields = ['display_name', 'list_price','price','pos_categ_id', 'taxes_id', 'ean13', 'default_code',                  'to_weight', 'uom_id', 'uos_id', 'uos_coeff', 'mes_type', 'description_sale', 'description',                 'product_tmpl_id', 'available_in_pos_ids'];                 elem.loaded = function(self, products){                     console.log('&gt;&gt; PRODUCTS: ');                     console.log(products);                     var shop_id = self.pos_session.config_id[0];                                                 var new_products = [];                     products.forEach(function(prod) {                         if (prod.available_in_pos_ids.includes(shop_id)) {                             new_products.push(prod);                         }                     })                     self.db.add_products(new_products);                 }             }         })         var loaded = PosModelParent.prototype.load_server_data.apply(this, arguments);         return loaded;     }, }); </code></pre>"
47836276	Scraping <td> values on table generate by Javascript to Python	javascript|python|html|web-scraping	2017-12-15 16:24:33.270000 UTC	"<p>I've run with a problem with my web app. Here's my code:</p>  <pre><code>@app.route('/addrec',methods = ['POST', 'GET']) def addrec():     if g.user:         if request.method == 'POST':  #UPPER PANE              payor = request.form['payor']               receiptno = request.form['OR']             paymentmethod = request.form['paymentmethod']             naive_dt = time.strftime(""%m/%d/%Y"")             collectiondate = naive_dt = datetime.now()              message = request.form['message'] #LOWER PANE             url_to_scrape = 'http://localhost:5000/form'             r = requests.get(url_to_scrape)             soup = BeautifulSoup(r.text)             nature = []             for table_row in soup.select(""table.inmatesList tr""):               cells = table_row.findAll('td')               if len(cells) &gt; 0:                 nature = cells[0].text.strip()                 natureamt = cells[1].text.strip()                 nature = {'nature': nature, 'nature': natureamt}                 nature_list.append(nature)             ent = Entry(receiptno, payor,officer, paymentmethod, collectiondate,message, nature_list)             add_entry(ent)             actions=""Applied""              return redirect(url_for('form'))     return redirect(url_for('home')) </code></pre>  <p>As you can see I am getting each of the values from my forms and is scraping the values in my table using beautifulsoup. However after I click the submit button, it loads forever. I am getting the valeus from the upper pane but not in the table.  </p>  <p>By the way I am generating my cells from a javascript function onClick. Just in case my javascript might be the problem. or maybe there's an easy way to extract these values from the javascrip functions -> python. Here's my javascript code and HTML</p>  <pre><code>&lt;script type=""text/javascript""&gt;     function deleteRow(o){      var p=o.parentNode.parentNode;          p.parentNode.removeChild(p);       }       function addRow()       {          var table = document.getElementById(""datatable""),           newRow = table.insertRow(table.length),           cell1 = newRow.insertCell(0),           cell2 = newRow.insertCell(1),           cell3 = newRow.insertCell(2),             name = document.getElementById(""form"").value,           amount = document.getElementById(""amount"").value;             delete1 = delete1 = '&lt;input type=""button""  class=""btn btn-danger"" class=""glyphicon glyphicon-trash""id=""delete"" value=""Delete"" onclick=""deleteRow(this)""&gt;';         cell1.innerHTML = name;         cell2.innerHTML = amount;         cell3.innerHTML = delete1;          findTotal();       }    function findTotal(){    var arr = document.querySelectorAll(""#datatable td:nth-child(2)"");    var tot=0;     for(var i=0;i&lt;arr.length;i++){       var enter_value   = Number(arr[i].textContent)       if(enter_value)                 tot += Number(arr[i].textContent);       }    document.getElementById('total').value = tot;  }  &lt;/script&gt; </code></pre>  <p>HTML:</p>  <pre><code>                    &lt;form name=""noc""&gt;                          &lt;input class=""form-control input-lg"" id=""form"" list=""languages"" placeholder=""Search"" type=""text"" required&gt;                       &lt;br&gt;                       &lt;input class=""form-control input-lg"" id=""amount"" list=""languages"" placeholder=""Amount"" type=""number"" required&gt;                       &lt;br&gt;                       &lt;button onclick=""addRow(); return false;""&gt;Add Item&lt;/button&gt;                     &lt;/form&gt;           &lt;table id=""datatable"" class=""table table-striped table-bordered"" cellspacing=""0"" width=""100%""&gt;                 &lt;thead&gt;     &lt;tr&gt;     &lt;th&gt;Nature of Collection&lt;/th&gt;     &lt;th&gt;Amount&lt;/th&gt;     &lt;th&gt;&lt;/th&gt;      &lt;/tr&gt;         &lt;/thead&gt; &lt;tbody&gt; &lt;tr&gt;          &lt;/tr&gt;      &lt;/tbody&gt;  &lt;/table&gt; </code></pre>  <p>The data of these scraped values, I expect them to be saved to my database. On a cell. If possible I would like the list to be inserted in a column so I can get them later.</p>  <p>Or is there a way I can get the lists on a cleaner and better way to my database? Any help is appreciated. Thank you!</p>"	47836504	"<p>So it looks like you're using requests to try and get data generated by JS. Well this isn't going to work, unless you know some magic a lot of people don't. Requests can't deal with the JS, so it never runs. You should be able to get the data using selenium or something to automate a browser. Otherwise, I don't think you're going to be able to scrape it like this. But if someone knows a way to get JS generated data with requests, please post it. </p>"
47849713	convert javascript to python : looping for in python	javascript|python	2017-12-16 20:34:42.213000 UTC	"<p>I have the javascript code and i want to convert it to python.</p>  <pre><code>var dice = [1, 3, 4, 1]  for(let i = 0; i &lt; dice.length; i++) {     if(dice[i] == 1 ) {         dice.splice(i, 1)         break;     } } </code></pre>  <p>whats wrong?</p>  <pre><code>q = [1, 2,3, 4] for i, dice in q:      if dice[i] == 1:         dice = splice(i, 1)         break print dice  </code></pre>  <p>I want if the number one appears simultaneously then the number 1 is discarded.</p>  <p>How the python code for the js code above?</p>"	47849786	"<p>Try:</p>  <pre><code>dice = [1, 3, 4, 1] newval = '' for i in range(len(dice)):     if dice[i] == 1:         newval = dice[1:i]     print(newval) </code></pre>"
47849713	convert javascript to python : looping for in python	javascript|python	2017-12-16 20:34:42.213000 UTC	"<p>I have the javascript code and i want to convert it to python.</p>  <pre><code>var dice = [1, 3, 4, 1]  for(let i = 0; i &lt; dice.length; i++) {     if(dice[i] == 1 ) {         dice.splice(i, 1)         break;     } } </code></pre>  <p>whats wrong?</p>  <pre><code>q = [1, 2,3, 4] for i, dice in q:      if dice[i] == 1:         dice = splice(i, 1)         break print dice  </code></pre>  <p>I want if the number one appears simultaneously then the number 1 is discarded.</p>  <p>How the python code for the js code above?</p>"	47849796	"<pre><code>q = [1, 2,3, 4] for dice in q:      if dice == 1:         q.remove(dice)         break  print(q); </code></pre>"
47857270	"Insert image in Google Sheets from python, PyExecJS, and JavaScript using PyScripter"	javascript|python|pyscripter|execjs	2017-12-17 16:45:19.287000 UTC	"<p>I am trying to insert an image generated by Matplot into a Google Sheet from Python from PyScripter using Python 2.7.  This is the starting data from the csv:</p>  <pre><code>   x    Date    orcl 0   10/17/2016  37.685646 20  11/14/2016  38.679703 40  12/13/2016  40.116657 60  1/12/2017   38.732384 80  2/10/2017   40.303417 100 3/13/2017   42.072063 120 4/10/2017   43.662434 140 5/9/2017    45.131077 160 6/7/2017    45.051693 180 7/6/2017    48.47522 200 8/3/2017    50.032654 220 8/31/2017   50.132263 240 9/29/2017   48.160038 260 10/27/2017  50.880001 280 11/27/2017  48.880001 </code></pre>  <p>Here are the imports:</p>  <pre><code>import pandas as pd import statsmodels.api as sm import numpy as np import matplotlib.pyplot as plt import matplotlib matplotlib.style.use('ggplot')   </code></pre>  <p>Get the data from the file and genereate the plots:</p>  <pre><code>file = pd.read_csv('orcl.csv') x = file.iloc[ :, -3] y = file.iloc[ :, -1]   m, b = np.polyfit(x, y, 1) results = sm.OLS(y,x).fit() print ('results are: ', (results))  fig, ax = plt.subplots() plt.plot(x, y, '.', label = None) plt.plot(x, m*x + b, '-',label='Regression Line')  ax.scatter(x, y) ax.set_xlabel(r'days_from_start', fontsize=15) ax.set_ylabel(r'stock_price', fontsize=15) ax.grid(True) fig.tight_layout() plt.legend() plt.savefig(""orcl.png"", bbox_inches='tight') plt.show() </code></pre>  <p>Pyscripter hangs up in a debug session, even though I have debug turned off in > Tools > Options > IDE Options > Postmortem on exception until I close the plot window. This code dose not close the plot:</p>  <pre><code>plt.close() </code></pre>  <p>I am having trouble with the ExecJS:</p>  <pre><code>import execjs      # execjs from here:  https://pypi.python.org/pypi/PyExecJS     # javascript from here: https://stackoverflow.com/questions/     #43664483/insert-image-into-google-sheets-cell-using-google-sheets-api  ctx = execjs.compile( """"""    {      var ss=SpreadsheetApp.getActiveSpreadsheet()      var formulaSheet = ss.getSheetByName(""orcl""); '''tab 'orcl' is present.      var formulaCell = formulaSheet.getRange(""B5"");      formulaCell.setFormula('=IMAGE(""orcl.png"",4,100,200)')      }    #http://finviz.com/fut_chart.ashx?t=ES&amp;p&amp;p=m5&amp;s=m  """""") import execjs.runtime_names jscript = execjs.get(execjs.runtime_names.JScript) jscript.eval(ctx) </code></pre>  <p>Python says ""exceptions, attribute error, context has no attribute 'strip'"".</p>  <p>Any help appreciated.</p>"	48856987	"<p>So, in big picture, inserting an image in Google Sheets can be accomplished with Python by inserting the image file in Google Drive using the Google Drive API:</p>  <p><a href=""https://developers.google.com/drive/v2/reference/files/insert#examples"" rel=""nofollow noreferrer"">https://developers.google.com/drive/v2/reference/files/insert#examples</a>,</p>  <p>and then linking to the image in Google Sheets with the Google Sheets API, <a href=""https://developers.google.com/sheets/api/reference/rest/v4/spreadsheets#CellData"" rel=""nofollow noreferrer"">https://developers.google.com/sheets/api/reference/rest/v4/spreadsheets#CellData</a></p>  <p>This is a very long page, but the information on hyperlink is about 1/3 of the way down, under CellData</p>"
47869088	Django template language - Python array with Javascript index	javascript|python|django	2017-12-18 13:01:37.997000 UTC	"<p>Well, maybe this is a silly question, but i couldn't find the answer so far. So, i am rendering a view in Django (i will do the code generic to make the problem easier), and the python side looks something like this: </p>  <pre><code>... marray = [1, 2, 3, 4, 5] ... return render(request, ""template.html"", {""marray"": marray}) </code></pre>  <p>Now, in the template.html file, I want to access the array, but the index must be determined by a JavaScript variable:</p>  <pre><code>var index = 2; var mvar = {{ marray.index }}; console.log(mvar); </code></pre>  <p>Output wanted:</p>  <pre><code>3 </code></pre>  <p>Obviously, the previous code does not work, it's just to show what I want. Any suggestions?</p>  <p>Thanks.</p>"	47869190	"<pre><code>var index = 2; var marray = {{ marray|safe }}; var mvar = marray[index]; // OR: var mvar = {{ marray|safe }}[index]; </code></pre>  <p>Note that here <code>index</code> will probably either be constant, or be determined by the context, so there might be better ways to do this.</p>"
47875815	Is there an Object spread syntax in python 2.7x like in Javascript?	javascript|python|object|spread-syntax	2017-12-18 20:18:51.550000 UTC	"<p>How can I spread an objects/dict(?) properties and into a new object/dict?</p>  <p>Simple Javascript:</p>  <pre><code>const obj = {x: '2', y: '1'} const thing = {...obj, x: '1'} // thing = {x: '1', y: 1} </code></pre>  <p>Python:</p>  <pre><code>regions = [] for doc in locations_addresses['documents']:    regions.append(         {             **doc, # this will not work             'lat': '1234',             'lng': '1234',          }     ) return json.dumps({'regions': regions, 'offices': []}) </code></pre>"	47875857	"<p>You can achieve this by creating a <code>dict</code> based on the original one, and then doing argument unpacking for the new/overridden keys:</p> <pre class=""lang-py prettyprint-override""><code>regions.append(dict(doc, **{'lat': '1234', 'lng': '1234'})) </code></pre> <p><strong>Note:</strong> Works in both python 2 and python 3</p>"
47875815	Is there an Object spread syntax in python 2.7x like in Javascript?	javascript|python|object|spread-syntax	2017-12-18 20:18:51.550000 UTC	"<p>How can I spread an objects/dict(?) properties and into a new object/dict?</p>  <p>Simple Javascript:</p>  <pre><code>const obj = {x: '2', y: '1'} const thing = {...obj, x: '1'} // thing = {x: '1', y: 1} </code></pre>  <p>Python:</p>  <pre><code>regions = [] for doc in locations_addresses['documents']:    regions.append(         {             **doc, # this will not work             'lat': '1234',             'lng': '1234',          }     ) return json.dumps({'regions': regions, 'offices': []}) </code></pre>"	47875892	"<p>If you had <a href=""https://www.python.org/dev/peps/pep-0448/"" rel=""noreferrer"">Python >=3.5</a>, you can use key-word expansion in  <code>dict</code> literal:</p>  <pre><code>&gt;&gt;&gt; d = {'x': '2', 'y': '1'} &gt;&gt;&gt; {**d, 'x':1} {'x': 1, 'y': '1'} </code></pre>  <p>This is sometimes referred to as ""splatting"".</p>  <p>If you are on Python 2.7, well, there is no equivalent. That's the problem with using something that is over 7 years old. You'll have to do something like:</p>  <pre><code>&gt;&gt;&gt; d = {'x': '2', 'y': '1'} &gt;&gt;&gt; x = {'x':1} &gt;&gt;&gt; x.update(d) &gt;&gt;&gt; x {'x': '2', 'y': '1'} </code></pre>"
47900991	Execute Javascript function on website using Python	python|python-2.7|beautifulsoup|python-requests	2017-12-20 07:38:31.550000 UTC	"<p>Is it possible to call a Javascript function on a website that I'm web scraping and saving the result of the function?</p>  <p>I'm using <code>Requests</code> to establish a connection and saving certain pages that I need and <code>BeautifulSoup</code> to make it readable and accessing certain parts.</p>  <p>There is one part that I'm not sure how to call, or even if it's possible:</p>  <pre><code>&lt;tr class=TRDark&gt;     &lt;td width=100% colspan=3&gt;         &lt;a href="""" onclick=""OpenPayPlan('payplan.asp?app=******');return false;""&gt;             Betalingsplan         &lt;/a&gt;     &lt;/td&gt; &lt;/tr&gt; </code></pre>  <p>This function will open a new window and calculate some data that I need. Is this possible to do with Python?</p>  <p>I cannot use Selenium or similar programs for this. This must be executed in the terminal and only the terminal.</p>"	47901058	"<p>You need to find a JavaScript interpreter with Python bindings maybe. When you've found one which will fit with your needs you can read the documentation and there you can see how this interpreter works. An example could be pyv8. Python however, does not include a JavaScript interpreter.</p>"
47920020	in python function have arguments object like javascript function arguments?	javascript|python	2017-12-21 07:33:13.440000 UTC	"<p>In JavaScript I can use <code>arguments</code> in a function like:</p>  <pre><code>function a (){    console.log(arguments); }  a(1,2,3,4,5,6) // Arguments(6) [1, 2, 3, 4, 5, 6, callee: ƒ,                  Symbol(Symbol.iterator): ƒ] </code></pre>  <p>Do functions in Python have an object like JavaScript's arguments?</p>  <p>I tried to use <code>arguments</code> in python (like in JavaScript) but I am getting an error, maybe there is an object in python but it is not called 'arguments'?</p>  <p>How can I get all the arguments of a function in python ?</p>"	47920070	"<p>In Python to have access to arguments like in JS you would do following:</p>  <pre><code>def funcA(*args):    print(args) </code></pre>  <p>You can use any name you want in place of <code>args</code></p>  <pre><code>funcA(1,2,3) # prints (1, 2, 3) </code></pre>"
47921945	Is there an equivalent of Javascript's hasOwnProperty() in Python?	javascript|python|python-3.x|attributes	2017-12-21 09:35:41.130000 UTC	"<p>I want to check whether an object has an attribute as a direct (i.e. not inherited) property, similar to Javascript's <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/hasOwnProperty"" rel=""noreferrer""><code>obj.hasOwnProperty()</code></a>. How can I do this in Python? <code>hasattr()</code> seems to return inherited attributes as well.</p>"	62124784	"<p>Have you tried using ""in""?</p>  <p>If you have a class object you can check if an attribute was defined by:</p>  <pre><code>""what_you_want_to_search"" in object.__dict__ </code></pre>"
47921945	Is there an equivalent of Javascript's hasOwnProperty() in Python?	javascript|python|python-3.x|attributes	2017-12-21 09:35:41.130000 UTC	"<p>I want to check whether an object has an attribute as a direct (i.e. not inherited) property, similar to Javascript's <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/hasOwnProperty"" rel=""noreferrer""><code>obj.hasOwnProperty()</code></a>. How can I do this in Python? <code>hasattr()</code> seems to return inherited attributes as well.</p>"	67530403	"<p>In python you can try using if/in. e.g obj = {&quot;a&quot;: 1, &quot;b&quot;:2, &quot;c&quot;:3}</p> <p>if &quot;a&quot; in obj: your code.</p> <p>please ref <a href=""https://www.w3schools.com/python/gloss_python_check_if_dictionary_item_exists.asp"" rel=""nofollow noreferrer"">https://www.w3schools.com/python/gloss_python_check_if_dictionary_item_exists.asp</a></p>"
47945268	Python Web Scraping with JavaScript Do Postback	javascript|python|web-scraping|dopostback	2017-12-22 17:31:41.940000 UTC	"<p>I have been trying to:</p>  <ol> <li><p>Go to: mdoe.state.mi.us/moecs/PublicCredentialSearch.aspx</p></li> <li><p>Enter a certificate number (for the sake of illustration, you can just search for ""Davidson"" as the last name).</p></li> <li><p>Click on a link corresponding to ""Professional Teaching Certificate"".</p></li> <li><p>Copy and paste the resulting table. </p></li> </ol>  <p>The rub seems to be with the JavaScript doPostBack() part, as it requires rendering, I believe, to get the data.</p>  <p>When viewing the source code, see how the href part identifies an individual link like this? (for the 6th link down): </p>  <pre><code>href=""javascript:__doPostBack('ctl00$ContentPlaceHolder1$gViewCredentialSearchList$ctl07$link1','') </code></pre>  <p>From this:</p>  <pre><code>&lt;td class=""MOECSNormal"" style=""border-color:Black;border-width:1px;border-style:Solid;""&gt;Professional Teaching Certificate Renewal&lt;/td&gt;&lt;td class=""MOECSNormal"" style=""border-color:Black;border-width:1px;border-style:Solid;""&gt;                                             &lt;a id=""ContentPlaceHolder1_gViewCredentialSearchList_link1_5"" ItemStyle-BorderColor=""Black"" ItemStyle-BorderStyle=""Solid"" ItemStyle-BorderWidth=""1px"" href=""javascript:__doPostBack('ctl00$ContentPlaceHolder1$gViewCredentialSearchList$ctl07$link1','')""&gt;CC-XWT990004102&lt;/a&gt;                                         &lt;/td&gt; </code></pre>  <p>I'm looking for a way (via Python) to get the data I need into a table, given a certification number and certificate name (i.e. ""Professional Teaching Certificate"".</p>  <p>I have tried following a tutorial using PyQt4, but installing it alone was traumatic.</p>  <p>Thanks in advance!</p>"	47945357	"<p>You can open the page in a browser e.g. Chrome and study how the interaction is done between the page and the server, normally this information can be seen in the network tab of Developer tool, this way you can formulate a python script to do the steps maybe using <a href=""http://docs.python-requests.org/en/master/"" rel=""nofollow noreferrer"">requests</a> library</p>  <p>or</p>  <p>You can use <a href=""http://selenium-python.readthedocs.io/"" rel=""nofollow noreferrer"">selenium-python</a> to do simulate your browser interaction (including javascript calls) until you got to the page where your interested data belongs to.</p>"
47983317	Translate python conditional to javascript -- control flow	javascript|python|arrays|list	2017-12-26 20:14:51.037000 UTC	"<p>How can I do this in JavaScript?  It should print 'Found' when it hits <code>words</code> in <code>big_list</code></p>  <pre><code>big_list = ['this', 'is', 'a', 'long', 'list', 'of' 'words']  needle = ['words', 'to', 'find']  for i in big_list:     if i in needle:         print('Found')     else:         print('Not Found') </code></pre>  <p>I know the general if/else structure but am unsure the syntax: </p>  <pre><code>if (big_list in needle) {   console.log('print some stuff') } else {   console.log('print some other stuff') } </code></pre>"	47983342	"<p>You can use <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/includes"" rel=""nofollow noreferrer""><code>includes</code></a> function with a <code>for</code> loop like this:</p>  <pre><code>for (let i = 0; i &lt; big_list.length; i++) {     if (needle.includes(big_list[i])) console.log(""Found"");     else console.log(""Not found""); } </code></pre>  <p>Or using <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach"" rel=""nofollow noreferrer""><code>forEach</code></a>:</p>  <pre><code>big_list.forEach(function(e) {       if (needle.includes(e)) console.log(""Found"");      else console.log(""Not found""); }); </code></pre>"
47983317	Translate python conditional to javascript -- control flow	javascript|python|arrays|list	2017-12-26 20:14:51.037000 UTC	"<p>How can I do this in JavaScript?  It should print 'Found' when it hits <code>words</code> in <code>big_list</code></p>  <pre><code>big_list = ['this', 'is', 'a', 'long', 'list', 'of' 'words']  needle = ['words', 'to', 'find']  for i in big_list:     if i in needle:         print('Found')     else:         print('Not Found') </code></pre>  <p>I know the general if/else structure but am unsure the syntax: </p>  <pre><code>if (big_list in needle) {   console.log('print some stuff') } else {   console.log('print some other stuff') } </code></pre>"	47983378	"<p>You've almost got it already, but there are a few things of note. First, the <code>in</code> keyword works differently in javascript than it does in python. In python, it can be used to check if an item is a member of a collection, but in javascript, it checks if the item is a <em>key</em> of an object. So:</p>  <pre><code>""foo"" in {foo: ""bar""} // True </code></pre>  <p>but</p>  <pre><code>""foo"" in [""foo"", ""bar""] // False </code></pre>  <p>Because in the second case, while <code>""foo""</code> is a member of the array, the <code>in</code> keyword is looking for it as a key. On those lines:</p>  <pre><code>""0"" in [""foo"", ""bar""] // True </code></pre>  <p>Since <code>""0""</code> is a key of the array (namely the key pointing to the first item)</p>  <p>Other than that, your code can be adapted to javascript without changing much. Just declare your variables using <code>var</code>, <code>const</code>, or <code>let</code>, use braces with your <code>if</code>'s and replace the calls with their javascript equivalents:</p>  <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-js lang-js prettyprint-override""><code>/*  # Python Code: big_list = ['this', 'is', 'a', 'long', 'list', 'of', 'words']  needle = ['words', 'to', 'find']  for i in big_list:     if i in needle:         print('Found')     else:         print('Not Found')  */  // Now in javascript:  const big_list = ['this', 'is', 'a', 'long', 'list', 'of', 'words'] const needle = ['words', 'to', 'find']  for (let i of big_list) {   if (needle.includes(i)) {     console.log('Found')   } else {     console.log('Not Found')   } }</code></pre> </div> </div> </p>"
47983667	Passing Python variable to Javascript with Webapp2/Jinja2	javascript|python|jinja2|webapp2	2017-12-26 21:01:56.263000 UTC	"<p>I've researched this answer and haven't found a way to do this using webapp2. I need to pass a variable from my Python code into my Javascript code. I understand how to pass variables into my HTML using Jinja2 but I am stumped on how they can then be used in Javascript.</p>  <p>This is what I have put in the <code>head</code> of my HTML page:</p>  <p><code>&lt;meta id=""trello_id"" data-name=""{{ trello_id }}""&gt;</code></p>  <p>And I have this line in my Javascript:</p>  <p><code>var trelloId = $('#trello_id').data();</code></p>  <p>It doesn't work however printing <code>trelloId</code> to console just prints null. What is the best way to achieve this task?</p>"	47983756	"<p>Use <code>content</code> instead of <code>data-name</code>. In your case:</p>  <p><code>&lt;meta id=""trello_id"" content=""{{ trello_id }}""&gt;</code></p>  <p>For more information, on how to use the <code>meta</code> tag you can look at <a href=""https://www.w3schools.com/tags/tag_meta.asp"" rel=""nofollow noreferrer"">this</a> page.</p>"
47983667	Passing Python variable to Javascript with Webapp2/Jinja2	javascript|python|jinja2|webapp2	2017-12-26 21:01:56.263000 UTC	"<p>I've researched this answer and haven't found a way to do this using webapp2. I need to pass a variable from my Python code into my Javascript code. I understand how to pass variables into my HTML using Jinja2 but I am stumped on how they can then be used in Javascript.</p>  <p>This is what I have put in the <code>head</code> of my HTML page:</p>  <p><code>&lt;meta id=""trello_id"" data-name=""{{ trello_id }}""&gt;</code></p>  <p>And I have this line in my Javascript:</p>  <p><code>var trelloId = $('#trello_id').data();</code></p>  <p>It doesn't work however printing <code>trelloId</code> to console just prints null. What is the best way to achieve this task?</p>"	47983807	<p>Try changing your Javascript code to and see if this works:</p>  <pre><code>var trelloId = $('#trello_id').data('name'); </code></pre>
47993617	How to convert Python [... for ... in ... if ...] to JavaScript	javascript|python|code-conversion	2017-12-27 14:10:43.480000 UTC	"<p>In my previous question, some kind man gave me a good answer of check username.</p>  <p>This code checks whether <code>username</code> has some forbidden words.</p>  <p>Python:</p>  <pre><code>FORBIDDEN_USERNAME_LIST = ['admin', 'master', 'owner']  for item in forbidden.FORBIDDEN_USERNAME_LIST:     match = [nm for nm in FORBIDDEN_USERNAME_LIST if nm in username]     if match:         return JsonResponse({'result': item + 'banned username'}) </code></pre>  <p>I converted this code to JavaScript but some code is too hard for me to convert.</p>  <p>JavaScript:</p>  <pre><code>for (item in FORBIDDEN_USERNAME_LIST){     match = [nm for nm in FORBIDDEN_USERNAME_LIST if nm in username]     //Here match = [...] code is hard for me to convert      if (match){         console.log('exist')     } } </code></pre>  <p>How can I convert this code to JavaScript?</p>"	47993696	"<pre><code> const forbidden = ['admin', 'master', 'owner'];  const username =""imanadmin;)"";  const found = forbidden.find(word =&gt; username.includes(word));  if(found) return res.json({'result': found + ' banned username'}); </code></pre>  <p>Just <code>find</code> the forbidden word that is <code>included</code> in the username. (<code>res.json</code> is part of <a href=""http://expressjs.com/de/"" rel=""nofollow noreferrer""><code>Express</code></a> which you might use for setting up a server)</p>"
47993617	How to convert Python [... for ... in ... if ...] to JavaScript	javascript|python|code-conversion	2017-12-27 14:10:43.480000 UTC	"<p>In my previous question, some kind man gave me a good answer of check username.</p>  <p>This code checks whether <code>username</code> has some forbidden words.</p>  <p>Python:</p>  <pre><code>FORBIDDEN_USERNAME_LIST = ['admin', 'master', 'owner']  for item in forbidden.FORBIDDEN_USERNAME_LIST:     match = [nm for nm in FORBIDDEN_USERNAME_LIST if nm in username]     if match:         return JsonResponse({'result': item + 'banned username'}) </code></pre>  <p>I converted this code to JavaScript but some code is too hard for me to convert.</p>  <p>JavaScript:</p>  <pre><code>for (item in FORBIDDEN_USERNAME_LIST){     match = [nm for nm in FORBIDDEN_USERNAME_LIST if nm in username]     //Here match = [...] code is hard for me to convert      if (match){         console.log('exist')     } } </code></pre>  <p>How can I convert this code to JavaScript?</p>"	47993700	"<p>Seems like you want to check if <code>item</code> is in <code>username</code> or not,</p>  <p>If <code>username</code> is an <strong>array</strong> (<em>It seems to be array based on your previous question</em>)</p>  <pre><code>match = !!username.filter( s =&gt; item.indexOf(s) != -1 ).length; </code></pre>  <p>or use <code>some</code></p>  <pre><code>match = username.some( s =&gt; item.indexOf(s) != -1 ); </code></pre>  <p><strong>Note</strong></p>  <p>I am using indexOf since it seems from your <a href=""https://stackoverflow.com/questions/47989737/python3-re-match-with-list"">previous question</a> you wanted to match <code>owner123</code> with <code>owner</code> as well.</p>"
47993617	How to convert Python [... for ... in ... if ...] to JavaScript	javascript|python|code-conversion	2017-12-27 14:10:43.480000 UTC	"<p>In my previous question, some kind man gave me a good answer of check username.</p>  <p>This code checks whether <code>username</code> has some forbidden words.</p>  <p>Python:</p>  <pre><code>FORBIDDEN_USERNAME_LIST = ['admin', 'master', 'owner']  for item in forbidden.FORBIDDEN_USERNAME_LIST:     match = [nm for nm in FORBIDDEN_USERNAME_LIST if nm in username]     if match:         return JsonResponse({'result': item + 'banned username'}) </code></pre>  <p>I converted this code to JavaScript but some code is too hard for me to convert.</p>  <p>JavaScript:</p>  <pre><code>for (item in FORBIDDEN_USERNAME_LIST){     match = [nm for nm in FORBIDDEN_USERNAME_LIST if nm in username]     //Here match = [...] code is hard for me to convert      if (match){         console.log('exist')     } } </code></pre>  <p>How can I convert this code to JavaScript?</p>"	47993718	"<p>This looks like you're looking for a match or submatch of the user name. Given the error message provided, a submatch doesn't seem to make sense, so I'll assume an exact match is actually needed. </p>  <p>If you do want a submatch, use the <code>.includes()</code> method on <code>username</code></p>  <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-js lang-js prettyprint-override""><code>const username = ""master""; const FORBIDDEN_USERNAME_LIST = ['admin', 'master', 'owner'];  const match = FORBIDDEN_USERNAME_LIST.some(n =&gt; n === username);  if (match) {   console.log(username, 'exists'); }</code></pre> </div> </div> </p>"
47993617	How to convert Python [... for ... in ... if ...] to JavaScript	javascript|python|code-conversion	2017-12-27 14:10:43.480000 UTC	"<p>In my previous question, some kind man gave me a good answer of check username.</p>  <p>This code checks whether <code>username</code> has some forbidden words.</p>  <p>Python:</p>  <pre><code>FORBIDDEN_USERNAME_LIST = ['admin', 'master', 'owner']  for item in forbidden.FORBIDDEN_USERNAME_LIST:     match = [nm for nm in FORBIDDEN_USERNAME_LIST if nm in username]     if match:         return JsonResponse({'result': item + 'banned username'}) </code></pre>  <p>I converted this code to JavaScript but some code is too hard for me to convert.</p>  <p>JavaScript:</p>  <pre><code>for (item in FORBIDDEN_USERNAME_LIST){     match = [nm for nm in FORBIDDEN_USERNAME_LIST if nm in username]     //Here match = [...] code is hard for me to convert      if (match){         console.log('exist')     } } </code></pre>  <p>How can I convert this code to JavaScript?</p>"	47994019	"<p>Using regex in ES5:</p>  <p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false""> <div class=""snippet-code""> <pre class=""snippet-code-js lang-js prettyprint-override""><code>var FORBIDDEN_USERNAME_LIST = ['admin', 'master', 'owner'],     username = ""master"",     match = false;  match = FORBIDDEN_USERNAME_LIST.some(function(pattern) {   return new RegExp(pattern).test(username) });  if (match) {   console.log(username, 'exists'); }</code></pre> </div> </div> </p>"
47999442	Inject Javascript into selenium Python -> converted_args})['value']	javascript|python|selenium|webdriver|inject	2017-12-27 22:38:11.530000 UTC	"<p>I am trying to inject some javascript code into my chrome selenium browser. The javascript contains a token that is only valid one time and therefore the javascript can only be executed once. To inject the javascript I have used:</p>  <pre><code>driver.execute_script(toinject) </code></pre>  <p>Where toinject contains this javascript:</p>  <pre><code>javascript:(function(){ var f = document.createElement(""form""); f.setAttribute(""id"",""destroyer""); f.setAttribute(""method"",""post""); f.setAttribute(""action"",""http://www.adidas.ch/on/demandware.store/Sites-adidas-CH-Site/default/Cart-MiniAddProduct?clientId=c1f3632f-6d3a-43f4-9987-9de920731dcb""); var masterPid = document.createElement(""input""); masterPid.setAttribute(""type"",""hidden""); masterPid.setAttribute(""name"",""masterPid""); masterPid.setAttribute(""value"",""BY9913""); var pid = document.createElement(""input""); pid.setAttribute(""type"",""hidden""); pid.setAttribute(""name"",""pid""); pid.setAttribute(""value"",""BY9913_620""); var ajaxOption = document.createElement(""input""); ajaxOption.setAttribute(""type"",""hidden""); ajaxOption.setAttribute(""name"",""ajax""); ajaxOption.setAttribute(""value"",""true""); var responseOption = document.createElement(""input""); responseOption.setAttribute(""type"",""hidden""); responseOption.setAttribute(""name"",""layer""); responseOption.setAttribute(""value"",""Add To Bag overlay""); var quantity = document.createElement(""input""); quantity.setAttribute(""type"",""hidden""); quantity.setAttribute(""name"",""Quantity""); quantity.setAttribute(""value"",""1""); var sessionSelectedStoreID = document.createElement(""input""); sessionSelectedStoreID.setAttribute(""type"",""hidden""); sessionSelectedStoreID.setAttribute(""name"",""sessionSelectedStoreID""); sessionSelectedStoreID.setAttribute(""value"",""null""); var captchaToken = document.createElement(""input""); captchaToken.setAttribute(""type"",""hidden""); captchaToken.setAttribute(""name"",""g-recaptcha-response""); captchaToken.setAttribute(""value"",""03AMPJSYXHk0axYBy3sJEKk7pSbaubS9c0Du3y87zzid05zpMpMvyzWdqRQmbPqVM2cxd9j3RNjMyX7x3_NOmo7NhlJD0YjyZlwG13AIGwHZ9E0IYqX1YyxAO162pXPxZboq4M47CA9Sf2BDdwIPjHsPgOX3ELuFeWR38Su0jsrrJoQ1ti49wllmsM3EbfSM4PXoudbary0NmXrSC2qpkQ0H3SkIbW3cfiwnDPm6s5bWlznjFAwtuDBbWGm7FC2TizgPr_nVRW4hh7E9F_lEkTWS-BIQFsan2huh7z-eK1Q1WEYUC9ReDg87GoKPF0CAz3yfanh_hbfHr7yMVSxqkQznGXmNQ-tj8gfa9PVwKM5BUT_-ofQliUBgEWePQN31cStqRxDuUesGyB""); f.appendChild(captchaToken); var captchaDuplicate = document.createElement(""input""); captchaDuplicate.setAttribute(""type"",""hidden""); captchaDuplicate.setAttribute(""name"",""x-PrdRt""); captchaDuplicate.setAttribute(""value"",""03AMPJSYXHk0axYBy3sJEKk7pSbaubS9c0Du3y87zzid05zpMpMvyzWdqRQmbPqVM2cxd9j3RNjMyX7x3_NOmo7NhlJD0YjyZlwG13AIGwHZ9E0IYqX1YyxAO162pXPxZboq4M47CA9Sf2BDdwIPjHsPgOX3ELuFeWR38Su0jsrrJoQ1ti49wllmsM3EbfSM4PXoudbary0NmXrSC2qpkQ0H3SkIbW3cfiwnDPm6s5bWlznjFAwtuDBbWGm7FC2TizgPr_nVRW4hh7E9F_lEkTWS-BIQFsan2huh7z-eK1Q1WEYUC9ReDg87GoKPF0CAz3yfanh_hbfHr7yMVSxqkQznGXmNQ-tj8gfa9PVwKM5BUT_-ofQliUBgEWePQN31cStqRxDuUesGyB""); f.appendChild(captchaDuplicate); var s = document.createElement(""input""); s.setAttribute(""type"",""submit""); s.setAttribute(""value"",""Submit""); f.appendChild(masterPid); f.appendChild(pid); f.appendChild(ajaxOption); f.appendChild(responseOption); f.appendChild(quantity); f.appendChild(sessionSelectedStoreID); f.appendChild(s); document.getElementsByTagName(""body"")[0].appendChild(f); })(); document.getElementById(document.querySelector(""[id^='destroyer']"").id).submit(); </code></pre>  <p>It is very long but im pretty certain it is correct because it works if I run it using a javascript tester. What happens after is, the javascript seems to be executed twice, making the token invalid. I get the following error: </p>  <pre><code>Exception in thread Thread-2: Traceback (most recent call last):   File ""/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/threading.py"", line 916, in _bootstrap_inner     self.run()   File ""/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/threading.py"", line 864, in run     self._target(*self._args, **self._kwargs)   File ""testin.py"", line 74, in startbot     openseission()   File ""testin.py"", line 183, in openseission     driver.execute_script(toinject)   File ""/Users/____/Desktop/going_headless/chaptcha/flask/lib/python3.6/site-packages/selenium/webdriver/remote/webdriver.py"", line 546, in execute_script     'args': converted_args})['value']   File ""/Users/____/Desktop/going_headless/chaptcha/flask/lib/python3.6/site-packages/selenium/webdriver/remote/webdriver.py"", line 311, in execute     self.error_handler.check_response(response)   File ""/Users/___/Desktop/going_headless/chaptcha/flask/lib/python3.6/site-packages/selenium/webdriver/remote/errorhandler.py"", line 237, in check_response     raise exception_class(message, screen, stacktrace) selenium.common.exceptions.WebDriverException: Message: unknown error: call function result missing 'value'   (Session info: chrome=65.0.3305.0)   (Driver info: chromedriver=2.34.522932 (4140ab217e1ca1bec0c4b4d1b148f3761eb3a03e),platform=Mac OS X 10.12.6 x86_64) </code></pre>  <p>How can I avoid this? I have'nt found anyone with the same problem for the past 3 hours. I don't mind injecting the javascript another way but I don't know any. Thank you in advance</p>"	48150380	"<p>Your trace suggests you are using chrome 65 (are you on the beta channel?) w/chromedriver 2.34. I don't think chrome 65 can be driven with that version of chromedriver. You might want to downgrade chrome (e.g. to the stable version, currently 63, I believe).</p>"
48012370	"With Python, get JSON variable from Javascript"	javascript|python|json	2017-12-28 18:15:22.243000 UTC	"<p>With Python 3.x, I'm trying to get a list of values that are in what looks to be a JSON variable.</p>  <p>Here's some of the HTML:</p>  <pre><code>&lt;script type=""text/javascript""&gt;  var BandData = {     id: 171185318,     name: ""MASS"",     fan_email: null,     account_id: 365569831,     has_discounts: null,     image_id: 39000212 };  var EmbedData = {     tralbum_param: { name: ""album"", value: 28473799 },      show_campaign: null,      embed_info: {""exclusive_embeddable"":null,""public_embeddable"":""01 Dec 2011 06:09:19 GMT"",""no_track_preorder"":false,""item_public"":true} };  var FanData = {     logged_in: false,     name: null,     image_id: null,     ip_country_code: null };  var TralbumData = {     current: {""require_email_0"":1,""new_date"":""18 Jan 2017 22:59:06 GMT""},     is_preorder: null,     album_is_preorder: null,     album_release_date: ""01 Dec 2017 00:00:00 GMT"",     preorder_count: null,     hasAudio: true,     art_id: 3862222,     trackinfo: [{""video_featured"":null,""has_lyrics"":false,""file"":{""mp3-128"":""https://t4.bcbits.com/stream/064bc3d8bb5/mp3-128/35322674""},""is_capped"":null,""sizeof_lyrics"":0,""duration"":143.244,""encodings_id"":830008708},{""video_featured"":null,""has_lyrics"":false,""license_type"":0}],     playing_from: ""album page"",     featured_track_id: 8612194, }; </code></pre>  <p>Specifically, within <code>TralbumData</code>, I'm trying to get the URLs within <code>mp3-128</code> within <code>trackinfo</code>.</p>  <p>It's tricky for me. It looks like JSON data, but I can't quite get that to work.</p>  <p>So far, I'm able to at least isolate <code>trackinfo</code> in the <code>TralbumData</code> variable, with a really kludgy function, but can't quite get it from there.  Here's what I have to try and find <code>trackinfo</code> and then get the URLs within...:</p>  <pre><code>def get_HTML(url):     response = urllib.request.urlopen(url)     page_source = response.read()     site_html = page_source.decode('utf8')     response.close()      JSON = re.compile('TralbumData = ({.*?});', re.DOTALL)     matches = JSON.search(site_html)     info = matches.group(1)     # print(info)      data = info.split(""\n"")     return data  def get_trackinfo(data):     # print(data[11])     for entry in data:         tmp = entry.split("":"")         if tmp[0].strip() == ""trackinfo"":             for ent in tmp:                 tmp = ent.split(""mp3-128"")                 print(tmp) </code></pre>  <p>Doesn't work since it's splitting with <code>:</code>, effectively separating the <code>http://</code> part.  </p>  <p>I'd think there's a way (and I've looked around and the answers to similar questions here on SO get close, but not quite there), to do say <code>url = my_html['TralbumData']['trackinfo']['mp3-128']</code> or something.</p>"	48012787	"<p>Here's my solution: 1. <code>get_var</code> function does initial parsing so then you can try to use JSON functions 2. apply <code>json.loads(var)</code> and get access to the JSON elements</p>  <pre><code>import re import json  text = """""" &lt;script type=""text/javascript""&gt;  var BandData = {     id: 171185318,     name: ""MASS"",     fan_email: null,     account_id: 365569831,     has_discounts: null,     image_id: 39000212 };  var EmbedData = {     tralbum_param: { name: ""album"", value: 28473799 },      show_campaign: null,      embed_info: {""exclusive_embeddable"":null,""public_embeddable"":""01 Dec 2011 06:09:19 GMT"",""no_track_preorder"":false,""item_public"":true} };  var FanData = {     logged_in: false,     name: null,     image_id: null,     ip_country_code: null };  var TralbumData = {     current: {""require_email_0"":1,""new_date"":""18 Jan 2017 22:59:06 GMT""},     is_preorder: null,     album_is_preorder: null,     album_release_date: ""01 Dec 2017 00:00:00 GMT"",     preorder_count: null,     hasAudio: true,     art_id: 3862222,     trackinfo: [{""video_featured"":null,""has_lyrics"":false,""file"":{""mp3-128"":""https://t4.bcbits.com/stream/064bc3d8bb5/mp3-128/35322674""},""is_capped"":null,""sizeof_lyrics"":0,""duration"":143.244,""encodings_id"":830008708},{""video_featured"":null,""has_lyrics"":false,""license_type"":0}],     playing_from: ""album page"",     featured_track_id: 8612194, }; """"""  def get_var(text, var):     """"""     :type text: str     :type var: str     :rtype: str     """"""     pattern = 'var\s+' + var.rstrip() + '\s+?=\s+?{'     open_token_found = False     block = '{'     for line in text.splitlines():         line = line.strip()         if not line:             continue         if open_token_found:             if re.match('};', line):                 block += '}'                 break             else:                 segments = line.split(':', 1)                 key = segments[0]                 if key[0] != '""':                     key = '""' + key                 if key[-1] != '""':                     key = key + '""'                 block += key + ':' + segments[1]         elif re.match(pattern, line):                 open_token_found = True      if block[-2] == ',':         block = block[:-2] + '}'     return json.loads(block)   var = get_var(text, 'TralbumData') print(var['trackinfo'][0]['file']['mp3-128']) </code></pre>  <p><strong>Output:</strong></p>  <p><code>https://t4.bcbits.com/stream/064bc3d8bb5/mp3-128/35322674</code></p>"
48012370	"With Python, get JSON variable from Javascript"	javascript|python|json	2017-12-28 18:15:22.243000 UTC	"<p>With Python 3.x, I'm trying to get a list of values that are in what looks to be a JSON variable.</p>  <p>Here's some of the HTML:</p>  <pre><code>&lt;script type=""text/javascript""&gt;  var BandData = {     id: 171185318,     name: ""MASS"",     fan_email: null,     account_id: 365569831,     has_discounts: null,     image_id: 39000212 };  var EmbedData = {     tralbum_param: { name: ""album"", value: 28473799 },      show_campaign: null,      embed_info: {""exclusive_embeddable"":null,""public_embeddable"":""01 Dec 2011 06:09:19 GMT"",""no_track_preorder"":false,""item_public"":true} };  var FanData = {     logged_in: false,     name: null,     image_id: null,     ip_country_code: null };  var TralbumData = {     current: {""require_email_0"":1,""new_date"":""18 Jan 2017 22:59:06 GMT""},     is_preorder: null,     album_is_preorder: null,     album_release_date: ""01 Dec 2017 00:00:00 GMT"",     preorder_count: null,     hasAudio: true,     art_id: 3862222,     trackinfo: [{""video_featured"":null,""has_lyrics"":false,""file"":{""mp3-128"":""https://t4.bcbits.com/stream/064bc3d8bb5/mp3-128/35322674""},""is_capped"":null,""sizeof_lyrics"":0,""duration"":143.244,""encodings_id"":830008708},{""video_featured"":null,""has_lyrics"":false,""license_type"":0}],     playing_from: ""album page"",     featured_track_id: 8612194, }; </code></pre>  <p>Specifically, within <code>TralbumData</code>, I'm trying to get the URLs within <code>mp3-128</code> within <code>trackinfo</code>.</p>  <p>It's tricky for me. It looks like JSON data, but I can't quite get that to work.</p>  <p>So far, I'm able to at least isolate <code>trackinfo</code> in the <code>TralbumData</code> variable, with a really kludgy function, but can't quite get it from there.  Here's what I have to try and find <code>trackinfo</code> and then get the URLs within...:</p>  <pre><code>def get_HTML(url):     response = urllib.request.urlopen(url)     page_source = response.read()     site_html = page_source.decode('utf8')     response.close()      JSON = re.compile('TralbumData = ({.*?});', re.DOTALL)     matches = JSON.search(site_html)     info = matches.group(1)     # print(info)      data = info.split(""\n"")     return data  def get_trackinfo(data):     # print(data[11])     for entry in data:         tmp = entry.split("":"")         if tmp[0].strip() == ""trackinfo"":             for ent in tmp:                 tmp = ent.split(""mp3-128"")                 print(tmp) </code></pre>  <p>Doesn't work since it's splitting with <code>:</code>, effectively separating the <code>http://</code> part.  </p>  <p>I'd think there's a way (and I've looked around and the answers to similar questions here on SO get close, but not quite there), to do say <code>url = my_html['TralbumData']['trackinfo']['mp3-128']</code> or something.</p>"	48014190	"<p>Here is a relatively straightforward solution using <code>json</code>:</p>  <pre><code>import re, json, pprint, urllib.request  regex_data = re.compile(r""""""     ^\s*var\s+TralbumData\s*=\s*\{(.*?)^\};     """""", re.DOTALL | re.MULTILINE | re.VERBOSE)  regex_item = re.compile(r""""""     ^\s*([\'""]?)([a-z][a-z0-9_]*)\1\s*:\s*(.+?)\s*,?\s*$     """""", re.IGNORECASE | re.VERBOSE)  def scrape(url):     result = {}     response = urllib.request.urlopen(url)     html = response.read().decode('utf8')     response.close()     match = regex_data.search(html)     if match is not None:         for line in match.group(0).splitlines():             match = regex_item.match(line)             if match is None:                 continue             key, value = match.group(2, 3)             try:                 result[key] = json.loads(value)             except json.JSONDecodeError:                 pass     return result  tralbumdata = scrape('https://studiomdhr.bandcamp.com/releases')  pprint.pprint(tralbumdata) </code></pre>  <p>This assumes that the layout of <code>TralbumData</code> object in the javascript code has each of its top-level <code>key:value</code> items on a separate line. It also assumes that all lower-level javascript objects have string keys, as this is required by the <a href=""https://en.wikipedia.org/wiki/JSON#Data_types,_syntax_and_example"" rel=""nofollow noreferrer"">json format</a>. (Note that lines ending in a comment cannot be parsed, because json doesn't support comments at all).</p>"
48018281	Javascript function call to python file returns contents of file instead of data?	javascript|python|ajax	2017-12-29 06:16:54.310000 UTC	"<p>I am calling my file isbnAPI.py dynamically using Javascript. When the user leaves the form input, the javascript adds the isbn input to the string ""isbnAPI.py?isbn="" and makes a GET request. </p>  <p>The issue I am running into is that the call to the python file is returning the entire python as I have it copied below. <code>this.responseText</code> literally returns the entire python file instead of the title.</p>  <p>Can someone help me figure out why this is happening?</p>  <pre><code>#isbnAPI.py import urllib import json import urlparse  #serviceurl is the base url waiting for isbn input of either 10 or 13 digits serviceurl = 'https://www.googleapis.com/books/v1/volumes?q=isbn:'  #private Google Books API key altered for StackOverflow key='&amp;key=092j3k2j323kjnkjFAKEKEY'  fields='&amp;fields=items(volumeInfo/title,volumeInfo/authors)'  #This is where the url should be coming in link = request  parsed = urlparse.urlparse(link, allow_fragments=False) isbn = urlparse.parse_qs(parsed.query)['isbn'][0]  url = serviceurl + isbn + key +fields  uh = urllib.urlopen(url) data = uh.read()  try:     js = json.loads(data) except:     js = None  print str(js[""items""][0][""volumeInfo""][""title""]) </code></pre>  <p>HTML file w/ javascript in script tag for readability</p>  <pre><code>    &lt;br&gt;          &lt;input type=""text"" id="""" name=""isbn"" value=""&lt;?php echo $Isbn;    unset($_SESSION['Isbn']); ?&gt;""          placeholder="""" onkeyup=""getTitle(this.value)""&gt;     &lt;br&gt; &lt;script&gt;             function getTitle(str) {               var xhttp;               if (str.length == 0) {                  return;               }               xhttp = new XMLHttpRequest();               xhttp.onreadystatechange = function() {                 if (this.readyState == 4 &amp;&amp; this.status == 200) {                     console.log(this);                   document.getElementById(""BookTitle"").value = this.responseText;                 }               };               xhttp.open(""GET"", ""isbnAPI.py?isbn=""+str, true);               xhttp.send();                } </code></pre>  <p></p>"	54118097	"<p>The answer for anyone wondering is I should have used ""return"" instead of ""print"" to communicate the answer back to my javascript code.</p>"
48030474	Save variable from console output Javascript/Python/Jinja2	javascript|python	2017-12-30 02:42:09.853000 UTC	"<p>I am using Trello API to create a card. This works fine but while the script runs it prints a ID variable of the newly created card to the console. I'd like to take this variable and pass it back to my python code. Is this possible? I am using Jinja2 to pass variables from Python to HTML, can I use this here? </p>  <p>This is the output to the console in Chrome, I want to grab the first ID variable so I can work with it in my Python code.</p>  <pre><code>{   ""id"": ""5a46fa28620367df83fe08f7"",   ""badges"": {     ""votes"": 0,     ""attachmentsByType"": {       ""trello"": {         ""board"": 0,         ""card"": 0       }     },     ""viewingMemberVoted"": false,     ""subscribed"": false,     ""fogbugz"": """",     ""checkItems"": 0,     ""checkItemsChecked"": 0, </code></pre>  <p>Here is my Javascript:</p>  <pre><code>var authenticationSuccess = function() {   console.log('Successful authentication'); };  var authenticationFailure = function() {   console.log('Failed authentication'); };  window.Trello.authorize({   type: 'popup',   name: 'Work Requests App',   scope: {     read: 'true',     write: 'true' },   expiration: 'never',   success: authenticationSuccess,   error: authenticationFailure });  //console.log(trelloTitle); //console.log(trelloContent);  var myList = '5a3ec86f7920a6e66b28e4bc';  var creationSuccess = function (data) {   console.log('Card created successfully.');   console.log(JSON.stringify(data, null, 2));  };  //var data = $('#resultsdata').data(); //console.log(trelloId);    var newCard = {   name: trelloTitle,   desc: trelloContent,   // Place this card at the top of our list   idList: myList,   idMembers: trelloId,   pos: 'top' };   window.Trello.post('/cards/', newCard, creationSuccess); </code></pre>  <p>EDIT: I am now using this AJAX method:</p>  <pre><code>var creationSuccess = function (data) {     console.log('Card created successfully.');     console.log(JSON.stringify(data, null, 2));     var url = ""/ajaxtest"";     $.post(url, {card_id: data.id}); }; </code></pre>  <p>I am having difficulty passing card_id into my python method:</p>  <pre><code>class AjaxTest(webapp2.RequestHandler):     def post(self):         data = card_id </code></pre>  <p>I know this is wrong, can anyone help?</p>"	48030656	"<p>Here's the complete answer:</p>  <pre><code>var creationSuccess = function (data) {   console.log('Card created successfully.');    var http = new XMLHttpRequest();   var url = ""URL to your server (where you want to send the data)"";    http.open(""POST"", url, true);    http.setRequestHeader(""Content-type"", ""application/x-www-form-urlencoded"");    http.send(""card_id="" + data.id); }; </code></pre>  <p>This will send the card id as <code>card_id</code> to your server (to the URL you specified) through an AJAX call.</p>  <p>This is assuming that you're only using pure Javascript. If you're using jQuery, then making an AJAX call would be much easier. like:</p>  <pre><code>var creationSuccess = function (data) {   console.log('Card created successfully.');   var url = ""URL to your server"";   $.post(url, {card_id: data.id}); }; </code></pre>  <p>Edit: As for the server code, you could now receive <code>card_id</code> like this:</p>  <pre><code>class AjaxTest(webapp2.RequestHandler):     def post(self):         data = self.request.get('card_id') </code></pre>  <p>Hope that helps.</p>"
48043411	extract url from javascript text using python	python|regex|linux|anaconda	2017-12-31 14:49:17.833000 UTC	"<p>i am using python and beautifulsoup to parse objects and i am trying to extract url using re.findall </p>  <pre><code>&lt;a class=""btn btn-danger btn-sm"" href=""javascript: void(0);"" onclick=""if (confirm('Delete link http://gorillavid.in/8538jm5bptgd')) { removeLink(71603335); }""&gt;&lt;i class=""fa fa-trash ""&gt;&lt;/i&gt;&lt;/a&gt; </code></pre>  <p>I am trying to extract url <code>https://gorillavid.in/97ylvj76qjeh</code>.</p>  <p>I am trying this expression:</p>  <pre><code>re.search(""Delete link\s* (.*?)',"", data).group(1) re.findall(r'(https?://[^\s]+)', link) </code></pre>  <p>It's giving me error that its not a string.</p>"	48049775	"<p>If you want to use findall to find the url you can use a capturing group:</p>  <p><a href=""https://regex101.com/r/fozQxJ/1"" rel=""nofollow noreferrer""><code>'Delete link\s+(.+?)(?=')</code></a></p>  <p><strong>Explanation</strong></p>  <ul> <li>Match 'Delete link</li> <li>Match one or more whitespaces <code>\s+</code></li> <li>Capture in a group any character one or more times no greedy (this contains the values you are looking for)</li> <li>A Positive lookahead<code>(?=</code></li> <li>Which asserts that what follows is a <code>'</code></li> <li>Close the Positive lookahead <code>)</code></li> </ul>  <p><a href=""http://rextester.com/NRUZ62265"" rel=""nofollow noreferrer"">Demo</a></p>"
